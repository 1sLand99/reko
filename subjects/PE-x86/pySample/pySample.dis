PyObject * fn10001000(PyObject * ptrArg04, PyObject * ptrArg08)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: esp
// Stack args: Stack +0008(32)
fn10001000_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +0008(32)

l10001000:
	word32 eax_21 = PyArg_ParseTuple(ptrArg08, 0x10002144, 0x00000000)
	branch eax_21 != 0x00000000 l10001027
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10001027:
	return Py_BuildValue(0x1000214C, 0x00000000)
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edx:ptrArg08 eax:<invalid> ecx:fp - 0x00000004 -24(fp):ptrArg08 -20(fp):0x10002144 -16(fp):fp - 0x00000004 -12(fp):fp - 0x00000008 4(fp):ptrArg04 8(fp):ptrArg08

l10001023:
	return eax_21
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edx:ptrArg08 eax:<invalid> ecx:fp - 0x00000004 -24(fp):ptrArg08 -20(fp):0x10002144 -16(fp):fp - 0x00000004 -12(fp):fp - 0x00000008 4(fp):ptrArg04 8(fp):ptrArg08

fn10001000_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edx:ptrArg08 eax:<invalid> ecx:<invalid> -24(fp):ptrArg08 -20(fp):0x10002144 -16(fp):<invalid> -12(fp):<invalid> 4(fp):ptrArg04 8(fp):ptrArg08



PyObject * fn10001050(PyObject * ptrArg04, PyObject * ptrArg08)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: esp
// Stack args: Stack +0008(32)
fn10001050_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +0008(32)

l10001050:
	word32 eax_19 = PyArg_ParseTuple(ptrArg08, 0x10002150, 0x00000000)
	branch eax_19 != 0x00000000 l10001078
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10001078:
	return Py_BuildValue(0x1000214C, 0x00000000)
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edx:ptrArg08 eax:<invalid> ecx:fp - 0x00000008 -24(fp):ptrArg08 -20(fp):0x10002150 -16(fp):fp - 0x00000008 -12(fp):fp - 0x00000004 4(fp):ptrArg04 8(fp):ptrArg08

l10001074:
	return eax_19
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edx:ptrArg08 eax:<invalid> ecx:fp - 0x00000008 -24(fp):ptrArg08 -20(fp):0x10002150 -16(fp):fp - 0x00000008 -12(fp):fp - 0x00000004 4(fp):ptrArg04 8(fp):ptrArg08

fn10001050_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edx:ptrArg08 eax:<invalid> ecx:fp - 0x00000008 -24(fp):ptrArg08 -20(fp):0x10002150 -16(fp):<invalid> -12(fp):<invalid> 4(fp):ptrArg04 8(fp):ptrArg08



PyObject * fn100010A0(PyObject * ptrArg04, PyObject * ptrArg08)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: esp
// Stack args: Stack +0008(32)
fn100010A0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +0008(32)

l100010A0:
	word32 eax_19 = PyArg_ParseTuple(ptrArg08, 0x10002158, 0x00000000)
	branch eax_19 != 0x00000000 l100010C8
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l100010C8:
	return Py_BuildValue(0x1000214C, 0x00000000)
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edx:ptrArg08 eax:<invalid> ecx:fp - 0x00000008 -24(fp):ptrArg08 -20(fp):0x10002158 -16(fp):fp - 0x00000008 -12(fp):fp - 0x00000004 4(fp):ptrArg04 8(fp):ptrArg08

l100010C4:
	return eax_19
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edx:ptrArg08 eax:<invalid> ecx:fp - 0x00000008 -24(fp):ptrArg08 -20(fp):0x10002158 -16(fp):fp - 0x00000008 -12(fp):fp - 0x00000004 4(fp):ptrArg04 8(fp):ptrArg08

fn100010A0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edx:<invalid> eax:<invalid> ecx:fp - 0x00000008 Sequence edx:eax:<invalid> -24(fp):ptrArg08 -20(fp):0x10002158 -16(fp):<invalid> -12(fp):<invalid> 4(fp):ptrArg04 8(fp):ptrArg08



PyObject * fn100010F0(PyObject * ptrArg04, PyObject * ptrArg08)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: esp
// Stack args: Stack +0008(32)
fn100010F0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32)

l100010F0:
	word32 eax_19 = PyArg_ParseTuple(ptrArg08, 0x10002160, 0x00000000)
	branch eax_19 != 0x00000000 l10001118
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l10001118:
	return Py_BuildValue(0x10002168, 0x00000000)
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edx:ptrArg08 eax:<invalid> ecx:fp - 0x00000008 -24(fp):ptrArg08 -20(fp):0x10002160 -16(fp):fp - 0x00000008 -12(fp):fp - 0x00000004 4(fp):ptrArg04 8(fp):ptrArg08

l10001114:
	return eax_19
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edx:ptrArg08 eax:<invalid> ecx:fp - 0x00000008 -24(fp):ptrArg08 -20(fp):0x10002160 -16(fp):fp - 0x00000008 -12(fp):fp - 0x00000004 4(fp):ptrArg04 8(fp):ptrArg08

fn100010F0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edx:ptrArg08 eax:<invalid> ecx:fp - 0x00000008 -24(fp):ptrArg08 -20(fp):<invalid> -16(fp):<invalid> -12(fp):fp - 0x00000004 4(fp):ptrArg04 8(fp):ptrArg08



PyObject * py_unused(PyObject * self, PyObject * args)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: esp
// Stack args: Stack +0008(32)
py_unused_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l10001140:
	word32 eax_12 = PyArg_ParseTuple(args, 0x1000216C, 0x00000000)
	branch eax_12 != 0x00000000 l10001158
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp

l10001158:
	word32 eax_20 = Py_NoneStruct
	Mem23[eax_20:word32] = Mem0[eax_20:word32] + 0x00000001
	return Py_NoneStruct
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> -8(fp):args -4(fp):0x1000216C 4(fp):self 8(fp):args

l10001157:
	return eax_12
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> -8(fp):args -4(fp):0x1000216C 4(fp):self 8(fp):args

py_unused_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> -8(fp):args -4(fp):0x1000216C 4(fp):self 8(fp):args



void initpySample()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: esp
initpySample_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10001170:
	Py_InitModule4(0x10002174, 0x10003010, 0x00000000, 0x00000000, 0x000003EF)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

initpySample_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> -20(fp):0x10002174 -16(fp):0x10003010 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):0x000003EF



word32 fn100011E9(word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0008(32)
fn100011E9_entry:
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l100011E9:
	word32 eax_216
	branch dwArg08 != 0x00000000 l10001202
// DataOut: eax ebp esp fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100011F4:
	branch Mem0[0x10003070:word32] <= 0x00000000 l10001233
// DataOut: eax ebp esp fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 eax:<invalid> ebp:0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10001233:
	eax_216 = 0x00000000
// DataOut: eax esp fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 eax:<invalid> ebp:0x00000000 -4(fp):ebp

l100011FC:
	Mem403[0x10003070:word32] = Mem0[0x10003070:word32] - 0x00000001
// DataOut: eax ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 eax:<invalid> ebp:0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10001202:
	word32 ecx_36 = Mem0[adjust_fdiv:word32]
	Mem46[0x100033A4:word32] = ecx_36
	branch dwArg08 != 0x00000001 l100012E8
// DataOut: eax ebp esp fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 eax:<invalid> ebp:0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l100012E8:
	branch dwArg08 != 0x00000000 l1000137E
// DataOut: esp fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 eax:<invalid> ebp:0x00000000 ecx:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l100012F0:
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 eax:<invalid> ebp:0x00000000 ecx:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l10001308:
	branch InterlockedCompareExchange(0x100033AC, 0x00000001, 0x00000000) != 0x00000000 l100012FD
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 eax:<invalid> ebp:0x00000000 ecx:<invalid> edi:InterlockedCompareExchange esi:0x100033AC -28(fp):0x100033AC -24(fp):0x00000001 -20(fp):0x000003E8 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l100012FD:
	Sleep(0x000003E8)
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 eax:<invalid> ebp:0x00000000 ecx:<invalid> edi:InterlockedCompareExchange esi:0x100033AC -28(fp):0x100033AC -24(fp):0x00000001 -20(fp):0x00000000 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l10001312:
	word32 eax_269 = Mem46[0x100033A8:word32]
	branch eax_269 == 0x00000002 l10001326
// DataOut: eax fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 eax:<invalid> ebp:0x00000000 ecx:<invalid> edi:InterlockedCompareExchange esi:0x100033AC -28(fp):0x100033AC -24(fp):0x00000001 -20(fp):0x00000000 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l10001326:
	word32 eax_293
	word32 ebp_294
	byte SCZO_297
	word32 esi_301
	word32 edi_302
	selector fs_303
	call decode_pointer (retsize: 4; depth: 24)
		uses: C_268,dwLoc04_7,dwLoc08_39,dwLoc0C_42,dwLoc10_45,dwLoc14_290,dwLoc18_261,dwLoc1C_263,dwLoc20,eax_269,ebp_8,ebx,ecx_36,edi_291,esi_257,esp_289,fs,SCZO_270,SZO_266,Z_271
		defs: C_296,eax_293,ebp_294,ebx_300,ecx_299,edi_302,esi_301,esp_292,fs_303,SCZO_297,SZO_295,Z_298
	word32 esp_310 = fp + 0xFFFFFFEC
	branch eax_293 == 0x00000000 l1000136F
// DataOut: eax ebx esp fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 eax:<invalid> ebp:0x00000000 ecx:<invalid> edi:InterlockedCompareExchange esi:0x100033AC -28(fp):0x100033AC -24(fp):0x00000001 -20(fp):0x00000000 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1000133B:
	word32 eax_334
	word32 ebx_341
	call decode_pointer (retsize: 4; depth: 28)
		uses: C_308,dwLoc04_7,dwLoc08_39,dwLoc0C_42,dwLoc10_45,dwLoc14_290,dwLoc18_332,dwLoc1C_263,dwLoc20,eax_293,ebp_294,ebx_305,ecx_309,edi_302,esi_301,esp_331,fs_303,SCZO_297,SZO_306,Z_307
		defs: C_337,eax_334,ebp_335,ebx_341,ecx_340,edi_343,esi_342,esp_333,fs_344,SCZO_338,SZO_336,Z_339
	word32 edi_348 = eax_334
// DataOut: eax ebx edi fs
// DataOut (flags): 
// SymbolicIn: esp:fp + 0xFFFFFFEC eax:<invalid> ebp:0x00000000 ecx:0x00000001 edi:decode_pointer esi:0x100033AC ebx:<invalid> -28(fp):0x100033AC -24(fp):0x00000001 -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l10001350:
	edi_348 = edi_348 - 0x00000004
	branch edi_348 >=u ebx_341 l10001348
// DataOut: eax ebx edi fs
// DataOut (flags): 
// SymbolicIn: esp:fp + 0xFFFFFFE8 eax:<invalid> ebp:0x00000000 ecx:0x100033AC edi:<invalid> esi:0x100033AC ebx:<invalid> -28(fp):0x100033AC -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l10001348:
	word32 eax_381 = Mem46[edi_348:word32]
	branch eax_381 == 0x00000000 l10001350
// DataOut: eax ebx edi fs
// DataOut (flags): 
// SymbolicIn: esp:fp + 0xFFFFFFE8 eax:<invalid> ebp:0x00000000 ecx:0x100033AC edi:<invalid> esi:0x100033AC ebx:<invalid> -28(fp):0x100033AC -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1000134E:
	call eax_381 (retsize: 4; depth: 28)
		uses: C_384,dwLoc04_7,dwLoc08_39,dwLoc0C_42,dwLoc10_45,dwLoc14_290,dwLoc18_332,dwLoc1C_263,dwLoc20,eax_381,ebp_357,ebx_356,ecx_350,edi_359,esi_355,esp_358,fs_349,SCZO_360,SZO_382,Z_383
		defs: C_389,eax_386,ebp_387,ebx_393,ecx_392,edi_395,esi_394,esp_385,fs_396,SCZO_390,SZO_388,Z_391
// DataOut: eax ebx edi fs
// DataOut (flags): 
// SymbolicIn: esp:fp + 0xFFFFFFE8 eax:<invalid> ebp:0x00000000 ecx:0x100033AC edi:<invalid> esi:0x100033AC ebx:<invalid> -28(fp):0x100033AC -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l10001357:
	free(ebx_341)
	word32 eax_367
	call encoded_null (retsize: 4; depth: 28)
		uses: C_361,dwLoc04_7,dwLoc08_39,dwLoc0C_42,dwLoc10_45,dwLoc14_290,dwLoc18_332,dwLoc1C_363,dwLoc20,eax_352,ebp_357,ebx_356,ecx_364,edi_359,esi_355,esp_365,fs_349,SCZO_360,SZO_353,Z_351
		defs: C_370,eax_367,ebp_368,ebx_374,ecx_373,edi_376,esi_375,esp_366,fs_377,SCZO_371,SZO_369,Z_372
	Mem379[0x100033B0:word32] = eax_367
	Mem380[0x100033B4:word32] = eax_367
	esp_310 = fp + 0xFFFFFFE4
// DataOut: esp fs
// DataOut (flags): 
// SymbolicIn: esp:fp + 0xFFFFFFE8 eax:<invalid> ebp:0x00000000 ecx:0x100033AC edi:<invalid> esi:0x100033AC ebx:<invalid> -28(fp):0x100033AC -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l1000136F:
	word32 esp_324 = esp_310 - 0x00000004
	Mem325[esp_324:word32] = 0x00000000
	Mem327[esp_324 - 0x00000004:word32] = 0x100033AC
	Mem328[0x100033A8:word32] = 0x00000000
	InterlockedExchange(Mem328[esp_324 - 0x00000004:(ptr LONG)], Mem328[esp_324:LONG])
// DataOut: esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ebp:0x00000000 ecx:<invalid> edi:<invalid> esi:0x100033AC ebx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l1000131C:
	call amsg_exit (retsize: 4; depth: 24)
		uses: C_268,dwLoc04_7,dwLoc08_39,dwLoc0C_42,dwLoc10_45,dwLoc14_273,dwLoc18_261,dwLoc1C_263,dwLoc20,eax_269,ebp_8,ebx,ecx_36,edi_256,esi_257,esp_272,fs,SCZO_270,SZO_266,Z_271
		defs: C_278,eax_275,ebp_276,ebx_282,ecx_281,edi_284,esi_283,esp_274,fs_285,SCZO_279,SZO_277,Z_280
// DataOut: esp fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 eax:<invalid> ebp:0x00000000 ecx:<invalid> edi:InterlockedCompareExchange esi:0x100033AC -28(fp):0x100033AC -24(fp):0x00000001 -20(fp):0x00000000 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l1000121C:
	word32 edi_83 = Mem46[Mem46[fs:0x00000018:word32] + 0x00000004:word32]
// DataOut: ebp ebx edi esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 eax:<invalid> ebp:0x00000000 ecx:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1000124B:
	word32 eax_94 = InterlockedCompareExchange(0x100033AC, edi_83, 0x00000000)
	branch eax_94 != 0x00000000 l1000123A
// DataOut: eax ebp ebx edi esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 eax:<invalid> ebp:0x00000000 ecx:<invalid> edi:<invalid> ebx:InterlockedCompareExchange esi:0x100033AC -28(fp):0x100033AC -24(fp):<invalid> -20(fp):0x00000000 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1000123A:
	branch eax_94 == edi_83 l10001255
// DataOut: ebp ebx edi esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 eax:<invalid> ebp:0x00000000 ecx:<invalid> edi:<invalid> ebx:InterlockedCompareExchange esi:0x100033AC -28(fp):0x100033AC -24(fp):<invalid> -20(fp):0x00000000 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l10001255:
// DataOut: ebp ebx esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 eax:<invalid> ebp:0x00000000 ecx:<invalid> edi:<invalid> ebx:InterlockedCompareExchange esi:0x100033AC -28(fp):0x100033AC -24(fp):<invalid> -20(fp):0x00000000 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1000123E:
	Sleep(0x000003E8)
// DataOut: ebp ebx edi esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 eax:<invalid> ebp:0x00000000 ecx:<invalid> edi:<invalid> ebx:InterlockedCompareExchange esi:0x100033AC -28(fp):0x100033AC -24(fp):<invalid> -20(fp):0x00000000 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l10001253:
// DataOut: ebp ebx esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 eax:<invalid> ebp:0x00000000 ecx:<invalid> edi:<invalid> ebx:InterlockedCompareExchange esi:0x100033AC -28(fp):0x100033AC -24(fp):<invalid> -20(fp):0x00000000 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l10001258:
	word32 esp_119
	word32 ebp_118
	word32 ebx_117
	word32 esi_116
	word32 edi_115
	word32 eax_101 = Mem46[0x100033A8:word32]
	branch eax_101 == 0x00000000 l1000126D
// DataOut: eax ebp ebx edi esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 eax:<invalid> ebp:<invalid> ecx:<invalid> edi:<invalid> ebx:InterlockedCompareExchange esi:0x100033AC -28(fp):0x100033AC -24(fp):<invalid> -20(fp):0x00000000 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1000126D:
	Mem195[0x100033A8:word32] = 0x00000001
	word32 eax_197
	word32 ebp_198
	byte SCZO_201
	word32 ebx_204
	word32 esi_205
	word32 edi_206
	selector fs_207
	call initterm_e (retsize: 4; depth: 28)
		uses: C_104,dwLoc04_7,dwLoc08_39,dwLoc0C_42,dwLoc10_45,dwLoc14_192,dwLoc18_194,dwLoc1C_93,eax_101,ebp_100,ebx_84,ecx_36,edi_107,esi_87,esp_193,fs,SCZO_99,SZO_102,Z_103
		defs: C_200,eax_197,ebp_198,ebx_204,ecx_203,edi_206,esi_205,esp_196,fs_207,SCZO_201,SZO_199,Z_202
	branch eax_197 == 0x00000000 l10001293
// DataOut: ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 eax:<invalid> ebp:<invalid> ecx:<invalid> edi:0x00000002 ebx:InterlockedCompareExchange esi:0x100033AC -28(fp):0x100033AC -24(fp):<invalid> -20(fp):0x00000002 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l10001293:
	call initterm (retsize: 4; depth: 32)
		uses: C_211,dwLoc04_7,dwLoc08_39,dwLoc0C_42,dwLoc10_45,dwLoc14_192,dwLoc18_220,dwLoc1C_222,eax_197,ebp_198,ebx_204,ecx_214,edi_206,esi_205,esp_221,fs_207,SCZO_201,SZO_209,Z_210
		defs: C_227,eax_224,ebp_225,ebx_231,ecx_230,edi_233,esi_232,esp_223,fs_234,SCZO_228,SZO_226,Z_229
	Mem239[0x100033A8:word32] = 0x00000002
	esp_119 = fp + 0xFFFFFFE4
// DataOut: ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:fp + 0xFFFFFFEC eax:<invalid> ebp:<invalid> ecx:0x100020A0 edi:0x00000002 ebx:InterlockedCompareExchange esi:0x100033AC -28(fp):0x100033AC -24(fp):0x100020A0 -20(fp):0x100020A8 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l1000128C:
	eax_216 = 0x00000000
// DataOut: eax esp fs
// DataOut (flags): 
// SymbolicIn: esp:fp + 0xFFFFFFEC eax:<invalid> ebp:<invalid> ecx:0x100020A0 edi:0x00000002 ebx:InterlockedCompareExchange esi:0x100033AC -28(fp):0x100033AC -24(fp):0x100020A0 -20(fp):0x100020A8 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l10001264:
	call amsg_exit (retsize: 4; depth: 24)
		uses: C_104,dwLoc04_7,dwLoc08_39,dwLoc0C_42,dwLoc10_45,dwLoc14_177,dwLoc18_91,dwLoc1C_93,eax_101,ebp_100,ebx_84,ecx_36,edi_107,esi_87,esp_176,fs,SCZO_99,SZO_102,Z_103
		defs: C_182,eax_179,ebp_180,ebx_186,ecx_185,edi_188,esi_187,esp_178,fs_189,SCZO_183,SZO_181,Z_184
	esp_119 = fp + 0xFFFFFFE8
// DataOut: ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 eax:<invalid> ebp:<invalid> ecx:<invalid> edi:0x00000002 ebx:InterlockedCompareExchange esi:0x100033AC -28(fp):0x100033AC -24(fp):<invalid> -20(fp):0x00000002 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l100012A9:
	word32 esp_124 = esp_119 + 0x00000004
	branch ebp_118 != 0x00000000 l100012B6
// DataOut: ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ebp:<invalid> ecx:<invalid> edi:0x00000002 ebx:InterlockedCompareExchange esi:0x100033AC -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l100012AE:
	Mem171[esp_124 - 0x00000004:word32] = ebp_118
	Mem173[esp_124 - 0x00000008:word32] = 0x100033AC
	InterlockedExchange(Mem173[esp_124 - 0x00000008:(ptr LONG)], Mem173[esp_124 - 0x00000004:LONG])
// DataOut: ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ebp:<invalid> ecx:<invalid> edi:0x00000002 ebx:InterlockedCompareExchange esi:0x100033AC -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l100012B6:
	branch Mem46[0x100033B8:word32] == 0x00000000 l100012DD
// DataOut: ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ebp:<invalid> ecx:<invalid> edi:0x00000002 ebx:InterlockedCompareExchange esi:0x100033AC -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l100012BF:
	word32 esp_143 = esp_124 - 0x00000004
	Mem144[esp_143:word32] = 0x100033B8
	word32 edi_145
	word32 eax_146 = fn10001742(ebx_117, esi_116, edi_115, out edi_145)
	branch eax_146 == 0x00000000 l100012DD
// DataOut: edi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ebp:<invalid> ecx:<invalid> edi:0x00000002 ebx:InterlockedCompareExchange esi:0x100033AC -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l100012CE:
	Mem153[esp_143:word32] = Mem144[esp_143 + 0x0000001C:word32]
	Mem155[esp_143 - 0x00000004:word32] = edi_145
	Mem157[esp_143 - 0x00000008:word32] = Mem155[esp_143 + 0x00000014:word32]
	call Mem157[0x100033B8:word32] (retsize: 4; depth: 4)
		uses: C_149,dwLoc04_7,dwLoc08_39,dwLoc0C_42,dwLoc10_45,dwLoc14_111,dwLoc18_109,dwLoc1C_110,eax_146,ebp_118,ebx_117,ecx_150,edi_145,esi_116,esp_156,fs_112,SCZO_127,SZO_147,Z_148
		defs: C_162,eax_159,ebp_160,ebx_166,ecx_165,edi_168,esi_167,esp_158,fs_169,SCZO_163,SZO_161,Z_164
// DataOut: esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ebp:<invalid> ecx:<invalid> edi:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> cl:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l100012DD:
	Mem141[0x10003070:word32] = Mem46[0x10003070:word32] + 0x00000001
// DataOut: esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ebp:<invalid> ecx:<invalid> edi:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> cl:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l1000137E:
	eax_216 = 0x00000001
// DataOut: eax esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ebp:<invalid> ecx:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> cl:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l10001381:
// DataOut: eax esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ebp:<invalid> ecx:<invalid> edi:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> cl:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l10001384:
	return eax_216
// DataOut: eax fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ebp:<invalid> ecx:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> cl:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

fn100011E9_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ebp:<invalid> ecx:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> cl:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp



word32 fn10001388(word32 ecx, word32 edx, word32 ebx, word32 esi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx ecx edi edx esi fs
// LiveOut: eax esp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn10001388_entry:
// DataOut: ebx ecx edi edx esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10001388:
	word32 ebp_11 = fn100017E8(ebx, esi, edi, dwLoc0C, 0x100021E8, 0x00000010)
	word32 ebx_159 = Mem0[ebp_11 + 0x00000008:word32]
	Mem20[ebp_11 - 0x0000001C:word32] = 0x00000001
	Mem22[ebp_11 - 0x00000004:word32] = 0x00000000
	Mem23[0x10003008:word32] = edx
	Mem24[ebp_11 - 0x00000004:word32] = 0x00000001
	word32 esp_176 = fp - 0x00000008
	word32 edi_13 = ecx
	word32 esi_15 = edx
	branch edx != 0x00000000 l100013C3
// DataOut: eax ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l100013B3:
	branch Mem24[0x10003070:word32] != 0x00000000 l100013C3
// DataOut: eax ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx esi:edx ebx:<invalid> eax:<invalid> ecx:0x00000000 ebp:<invalid> -8(fp):0x100021E8 -4(fp):0x00000010
// LocalsOut: Local -0004(32)

l100013C3:
	branch edx == 0x00000001 l100013CC
// DataOut: ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx esi:edx ebx:<invalid> eax:<invalid> ecx:0x00000000 ebp:<invalid> -8(fp):0x100021E8 -4(fp):0x00000010
// LocalsOut: Local -0004(32)

l100013C7:
	branch edx != 0x00000002 l100013FA
// DataOut: ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx esi:edx ebx:<invalid> eax:<invalid> ecx:0x00000000 ebp:<invalid> -8(fp):0x100021E8 -4(fp):0x00000010
// LocalsOut: Local -0004(32)

l100013CC:
	word32 eax_166 = Mem24[0x100020CC:word32]
	branch eax_166 == 0x00000000 l100013DD
// DataOut: eax ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx esi:edx ebx:<invalid> eax:<invalid> ecx:0x00000000 ebp:<invalid> -8(fp):0x100021E8 -4(fp):0x00000010
// LocalsOut: Local -0004(32)

l100013D5:
	Mem196[fp - 0x0000000C:word32] = ecx
	Mem198[fp - 0x00000010:word32] = edx
	Mem200[fp - 0x00000014:word32] = ebx_159
	word32 eax_208
	call eax_166 (retsize: 4; depth: 4)
		uses: C,dwLoc04_4,dwLoc08_6,dwLoc0C,eax_166,ebp_11,ebx_17,ecx_21,edi_13,edx,esi_15,esp_199,SCZO_167,SZO,Z_168
		defs: C_210,eax_208,ebp_207,ebx_206,ecx_203,edi_202,edx_205,esi_204,esp_201,SCZO_211,SZO_209,Z_212
	Mem213[ebp_11 - 0x0000001C:word32] = eax_208
// DataOut: ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx esi:edx ebx:<invalid> eax:<invalid> ecx:0x00000000 ebp:<invalid> -8(fp):0x100021E8 -4(fp):0x00000010
// LocalsOut: Local -0004(32)

l100013DD:
	branch Mem24[ebp_11 - 0x0000001C:word32] == 0x00000000 l1000147A
// DataOut: ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx esi:edx ebx:<invalid> eax:<invalid> ecx:0x00000000 ebp:<invalid> -20(fp):<invalid> -16(fp):edx -12(fp):0x00000000 -8(fp):0x100021E8 -4(fp):0x00000010
// LocalsOut: Local -0004(32)

l100013E7:
	word32 esp_183 = esp_176 - 0x00000004
	Mem184[esp_183:word32] = edi_13
	Mem186[esp_183 - 0x00000004:word32] = esi_15
	Mem188[esp_183 - 0x00000008:word32] = ebx_159
	word32 eax_189 = fn100011E9(dwArg04)
	Mem191[ebp_11 - 0x0000001C:word32] = eax_189
	esp_176 = esp_183 + 0x00000004
	branch eax_189 == 0x00000000 l1000147A
// DataOut: ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx esi:edx ebx:<invalid> eax:<invalid> ecx:0x00000000 ebp:<invalid> -20(fp):<invalid> -16(fp):edx -12(fp):0x00000000 -8(fp):0x100021E8 -4(fp):0x00000010
// LocalsOut: Local -0004(32)

l100013FA:
	word32 esp_57 = esp_176 - 0x00000004
	Mem58[esp_57:word32] = edi_13
	Mem60[esp_57 - 0x00000004:word32] = esi_15
	Mem62[esp_57 - 0x00000008:word32] = ebx_159
	word32 eax_63 = fn100017C6(0x00000010, dwArg04)
	Mem65[ebp_11 - 0x0000001C:word32] = eax_63
	word32 esp_143 = esp_57 + 0x00000004
	branch esi_15 != 0x00000001 l1000142E
// DataOut: eax ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> ebp:<invalid> edx:<invalid> cl:<invalid> -20(fp):<invalid> -16(fp):edx -12(fp):0x00000000 -8(fp):0x100021E8 -4(fp):0x00000010
// LocalsOut: Local -0004(32)

l1000140A:
	branch eax_63 != 0x00000000 l1000142E
// DataOut: eax ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> ebp:<invalid> edx:<invalid> cl:<invalid> -20(fp):<invalid> -16(fp):edx -12(fp):0x00000000 -8(fp):0x100021E8 -4(fp):0x00000010
// LocalsOut: Local -0004(32)

l1000140E:
	Mem129[esp_57:word32] = edi_13
	Mem131[esp_57 - 0x00000004:word32] = eax_63
	Mem133[esp_57 - 0x00000008:word32] = ebx_159
	fn100017C6(0x00000010, dwArg04)
	Mem137[esp_57:word32] = edi_13
	Mem139[esp_57 - 0x00000004:word32] = 0x00000000
	Mem141[esp_57 - 0x00000008:word32] = ebx_159
	fn100011E9(dwArg04)
	esp_143 = esp_57 + 0x00000004
	word32 eax_144 = Mem141[0x100020CC:word32]
	branch eax_144 == 0x00000000 l1000142E
// DataOut: ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> ebp:<invalid> edx:<invalid> cl:<invalid> -20(fp):<invalid> -16(fp):edx -12(fp):0x00000000 -8(fp):0x100021E8 -4(fp):0x00000010
// LocalsOut: Local -0004(32)

l10001428:
	Mem149[esp_57:word32] = edi_13
	Mem151[esp_57 - 0x00000004:word32] = 0x00000000
	Mem153[esp_57 - 0x00000008:word32] = ebx_159
	call eax_144 (retsize: 4; depth: 4)
		uses: C_147,dwLoc04_4,dwLoc08_6,dwLoc0C,eax_144,ebp_48,ebx_49,ecx_52,edi_56,edx_50,esi_51,esp_152,SCZO_66,SZO_145,Z_146
		defs: C_163,eax_161,ebp_160,ebx_159,ecx_156,edi_155,edx_158,esi_157,esp_154,SCZO_164,SZO_162,Z_165
// DataOut: ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> ebp:<invalid> edx:<invalid> cl:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x100021E8 -4(fp):0x00000010
// LocalsOut: Local -0004(32)

l1000142E:
	branch esi_15 == 0x00000000 l10001437
// DataOut: ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> ebp:<invalid> edx:<invalid> cl:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x100021E8 -4(fp):0x00000010
// LocalsOut: Local -0004(32)

l10001432:
	branch esi_15 != 0x00000003 l1000147A
// DataOut: ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> ebp:<invalid> edx:<invalid> cl:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x100021E8 -4(fp):0x00000010
// LocalsOut: Local -0004(32)

l10001437:
	word32 esp_81 = esp_143 - 0x00000004
	Mem82[esp_81:word32] = edi_13
	Mem84[esp_81 - 0x00000004:word32] = esi_15
	Mem86[esp_81 - 0x00000008:word32] = ebx_159
	word32 eax_87 = fn100011E9(dwArg04)
	branch eax_87 != 0x00000000 l10001446
// DataOut: eax ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> ebp:<invalid> edx:<invalid> cl:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x100021E8 -4(fp):0x00000010
// LocalsOut: Local -0004(32)

l10001443:
	Mem120[ebp_11 - 0x0000001C:word32] = Mem86[ebp_11 - 0x0000001C:word32] & eax_87
// DataOut: ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> ebp:<invalid> edx:<invalid> cl:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x100021E8 -4(fp):0x00000010
// LocalsOut: Local -0004(32)

l10001446:
	branch Mem86[ebp_11 - 0x0000001C:word32] == 0x00000000 l1000147A
// DataOut: ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> ebp:<invalid> edx:<invalid> cl:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x100021E8 -4(fp):0x00000010
// LocalsOut: Local -0004(32)

l1000144C:
	word32 eax_96 = Mem86[0x100020CC:word32]
	branch eax_96 == 0x00000000 l1000147A
// DataOut: eax ebp ebx edi esi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> ebp:<invalid> edx:<invalid> cl:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x100021E8 -4(fp):0x00000010
// LocalsOut: Local -0004(32)

l10001455:
	Mem101[esp_81:word32] = edi_13
	Mem103[esp_81 - 0x00000004:word32] = esi_15
	Mem105[esp_81 - 0x00000008:word32] = ebx_159
	word32 eax_113
	call eax_96 (retsize: 4; depth: 4)
		uses: C_99,dwLoc04_4,dwLoc08_6,dwLoc0C,eax_96,ebp_69,ebx_70,ecx_73,edi_76,edx_71,esi_72,esp_104,SCZO_94,SZO_97,Z_98
		defs: C_115,eax_113,ebp_112,ebx_111,ecx_108,edi_107,edx_110,esi_109,esp_106,SCZO_116,SZO_114,Z_117
	Mem118[ebp_11 - 0x0000001C:word32] = eax_113
// DataOut: ebp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> ebp:<invalid> edx:<invalid> cl:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x100021E8 -4(fp):0x00000010
// LocalsOut: Local -0004(32)

l100013BB:
	Mem218[ebp_11 - 0x0000001C:word32] = 0x00000000
// DataOut: ebp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx esi:edx ebx:<invalid> eax:<invalid> ecx:0x00000000 ebp:<invalid> -8(fp):0x100021E8 -4(fp):0x00000010
// LocalsOut: Local -0004(32)

l1000147A:
	Mem36[ebp_11 - 0x00000004:word32] = Mem24[ebp_11 - 0x00000004:word32] & 0x00000000
	Mem39[ebp_11 - 0x00000004:word32] = 0xFFFFFFFE
	fn10001493()
	word32 eax_40 = Mem39[ebp_11 - 0x0000001C:word32]
	fn1000182D(ebp_11, 0x00000010, dwArg00, dwArg04, dwArg08, dwArg0C)
	return eax_40
// DataOut: eax esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> ebp:<invalid> edx:<invalid> cl:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x100021E8 -4(fp):0x00000010

fn10001388_exit:
// DataOut: eax esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> ebp:<invalid> edx:<invalid> cl:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x100021E8 -4(fp):0x00000010



void fn10001493()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: esp
fn10001493_entry:
// DataOut: ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp

l10001493:
	Mem3[0x10003008:word32] = 0xFFFFFFFF
	return
// DataOut: ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp

fn10001493_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp



BOOL DllMain(HANDLE hModule, DWORD dwReason, LPVOID lpReserved)
// stackDelta: 16; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx edi esi fs
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: esp
// Stack args: Stack +0008(32) Stack +000C(32)
DllMain_entry:
// DataOut: ebx edi esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32) Stack +000C(32)

l1000149E:
	branch dwReason != 0x00000001 l100014AA
// DataOut: ebx edi esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32) Stack +000C(32)

l100014A5:
	fn10001864()
// DataOut: ebx edi esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: fp(32) Stack +0008(32) Stack +000C(32)

l100014AA:
	return fn10001388(lpReserved, dwReason, ebx, esi, edi)
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved

DllMain_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ecx:<invalid> edx:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> ebp:<invalid> cl:<invalid> -4(fp):<invalid> 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved



word32 fn100016D0(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: esp
// Stack args: Stack +0004(32)
fn100016D0_entry:
// DataOut: ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Stack +0004(32)

l100016D0:
	branch Mem0[dwArg04:word16] == 0x5A4D l100016DE
// DataOut: ebp ecx fs
// DataOut (flags): 
// SymbolicIn: esp:fp

l100016DE:
	word32 eax_22 = Mem0[dwArg04 + 0x0000003C:word32] + dwArg04
	branch Mem0[eax_22:word32] != 0x00004550 l100016DB
// DataOut: eax ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp ecx:<invalid>

l100016EB:
	return (word32) (Mem0[eax_22 + 0x00000018:word16] == 0x010B)
// DataOut: eax ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp ecx:<invalid> eax:<invalid>

l100016DB:
	return 0x00000000
// DataOut: eax ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp ecx:<invalid> eax:<invalid>

fn100016D0_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp ecx:<invalid> eax:<invalid> cl:Test(EQ,Z)



word32 fn10001700(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn10001700_entry:
// DataOut: ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l10001700:
	word32 ecx_7 = Mem0[dwArg04 + 0x0000003C:word32] + dwArg04
	word32 esi_15 = (word32) Mem0[ecx_7 + 0x00000006:word16]
	word32 edx_16 = 0x00000000
	word32 eax_23 = (word32) Mem0[ecx_7 + 0x00000014:word16] + 0x00000018 + ecx_7 + 0x0000000C
	branch false l1000173C
// DataOut: eax ebp edx esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l1000171E:
// DataOut: eax ebp edi edx esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C eax:<invalid> ecx:<invalid> esi:<invalid> edx:0x00000000 -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l10001722:
	word32 ecx_50 = Mem0[eax_23 + 0x00000000:word32]
	branch dwArg08 <u ecx_50 l10001732
// DataOut: eax ebp ecx edi edx esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> edi:<invalid> ebx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l10001729:
	branch dwArg08 <u Mem0[eax_23 + 0x00000008:word32] + ecx_50 l1000173E
// DataOut: eax ebp edi edx esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> edi:<invalid> ebx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l10001732:
	edx_16 = edx_16 + 0x00000001
	eax_23 = eax_23 + 0x00000028
	branch edx_16 <u esi_15 l10001722
// DataOut: eax ebp edi edx esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> edi:<invalid> ebx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l1000173C:
	eax_23 = 0x00000000
// DataOut: eax ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> edi:<invalid> ebx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l1000173E:
	return eax_23
// DataOut: eax ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> edi:<invalid> ebx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx

fn10001700_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> ecx:<invalid> esi:esi edx:<invalid> edi:edi ebx:ebx -12(fp):edi -8(fp):esi -4(fp):ebx



word32 fn10001742(word32 ebx, word32 esi, word32 edi, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx edi esi fs
// LiveOut: eax edi esp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn10001742_entry:
// DataOut: ebx edi esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10001742:
	word32 eax_32
	word32 ebp_11 = fn100017E8(ebx, esi, edi, dwLoc0C, 0x10002230, 0x00000008)
	Mem14[ebp_11 - 0x00000004:word32] = Mem0[ebp_11 - 0x00000004:word32] & 0x00000000
	Mem19[fp - 0x0000000C:word32] = 0x10000000
	branch fn100016D0(dwArg00) == 0x00000000 l1000179F
// DataOut: ebp esp fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(0)

l10001762:
	Mem52[fp - 0x0000000C:word32] = Mem19[ebp_11 + 0x00000008:word32] - 0x10000000
	Mem54[fp - 0x00000010:word32] = 0x10000000
	word32 eax_55 = fn10001700(dwArg00, dwArg04)
	branch eax_55 == 0x00000000 l1000179F
// DataOut: eax ebp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edx:0x10000000 ecx:<invalid> eax:<invalid> ebp:<invalid> cl:<invalid> -12(fp):0x10000000 -8(fp):0x10002230 -4(fp):0x00000008
// LocalsOut: Local -0004(0)

l1000179F:
	Mem44[ebp_11 - 0x00000004:word32] = 0xFFFFFFFE
	eax_32 = 0x00000000
// DataOut: eax ebp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> ebp:<invalid> cl:<invalid> -16(fp):0x10000000 -12(fp):<invalid> -8(fp):0x10002230 -4(fp):0x00000008
// LocalsOut: Local -0004(0)

l10001774:
	eax_32 = ~(Mem54[eax_55 + 0x00000024:word32] >>u 0x0000001F) & 0x00000001
	Mem69[ebp_11 - 0x00000004:word32] = 0xFFFFFFFE
// DataOut: eax ebp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> ebp:<invalid> cl:<invalid> -16(fp):0x10000000 -12(fp):<invalid> -8(fp):0x10002230 -4(fp):0x00000008
// LocalsOut: Local -0004(0)

l100017A8:
	*ediOut = fn1000182D(ebp_11, 0x00000008, dwArg00, dwArg04, dwArg08, dwArg0C)
	return eax_32
// DataOut: eax edi esp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> ebp:<invalid> cl:<invalid> -16(fp):0x10000000 -12(fp):<invalid> -8(fp):0x10002230 -4(fp):0x00000008

fn10001742_exit:
// DataOut: eax edi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> ebp:<invalid> cl:<invalid> -16(fp):0x10000000 -12(fp):<invalid> -8(fp):0x10002230 -4(fp):0x00000008



word32 fn100017C6(word32 dwArg00, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO ah al ax eax rax
// Preserved: esp
// Stack args: Stack +0000(32) Stack +0008(32)
fn100017C6_entry:
// DataOut: ebp ebx edi esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0008(32)

l100017C6:
	branch dwArg08 != 0x00000001 l100017E0
// DataOut: ebp ebx edi esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32)

l100017CD:
	branch Mem0[0x100020CC:word32] != 0x00000000 l100017E0
// DataOut: ebp ebx edi esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32)

l100017D6:
	DisableThreadLibraryCalls(dwArg00)
// DataOut: ebp ebx edi esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp

l100017E0:
	return 0x00000001
// DataOut: eax ebp ebx edi esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> -4(fp):<invalid>

fn100017C6_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> -4(fp):<invalid>



word32 fn100017E8(word32 ebx, word32 esi, word32 edi, word32 dwArg00, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx edi esi fs
// LiveOut: ebp esp
// Trashed: SCZO ah al ax bp bpl eax ebp esp rax rbp rsp sp spl
// Preserved:
// Stack args: Stack +0000(32) Stack +0004(32) Stack +0008(32)
fn100017E8_entry:
// DataOut: ebx ecx edi edx esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32) Stack +0008(32)

l100017E8:
	word32 esp_14 = fp - 0x00000008 - dwArg08
	Mem17[esp_14 - 0x00000004:word32] = ebx
	Mem20[esp_14 - 0x00000008:word32] = esi
	Mem23[esp_14 - 0x0000000C:word32] = edi
	Mem33[esp_14 - 0x00000010:word32] = Mem23[0x10003000:word32] ^ fp + 0x00000008
	Mem37[esp_14 - 0x00000014:word32] = dwArg00
	Mem42[fs:0x00000000:word32] = fp - 0x00000008
	return fp + 0x00000008
// DataOut: ebp ecx edx esp fs
// DataOut (flags): 
// SymbolicIn: esp:fp

fn100017E8_exit:
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:fp - 0x00000008 ebp:fp + 0x00000008 -16(fp):<invalid> -8(fp):<invalid> -4(fp):0x10001841 0(fp):<invalid> 4(fp):0xFFFFFFFE 8(fp):ebp



word32 fn1000182D(word32 ebp, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp fs
// LiveOut: edi esp
// Trashed: bh bl bp bpl bx ch cl cx di dil ebp ebx ecx edi esi esp rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0000(32) Stack +0008(32)
fn1000182D_entry:
// DataOut: eax ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0008(32)

l1000182D:
	Mem6[fs:0x00000000:word32] = Mem0[ebp - 0x00000010:word32]
	Mem26[ebp:word32] = dwArg00
	return dwArg08
// DataOut: eax edi esp fs
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1000182D_exit:
// DataOut: edi esp
// DataOut (flags): 
// SymbolicIn: esp:ebp ecx:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> ebp:<invalid>



void fn10001864()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: ebp ebx edi esi esp
fn10001864_entry:
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32)

l10001864:
	word32 eax_9 = Mem0[0x10003000:word32]
	branch eax_9 == 0xBB40E64E l10001894
// DataOut: eax fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32)

l10001887:
	branch (eax_9 & 0xFFFF0000) == 0x00000000 l10001894
// DataOut: eax fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C ebp:fp - 0x00000004 eax:<invalid> edi:0xBB40E64E ebx:0xFFFF0000 -28(fp):edi -24(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32)

l10001894:
	GetSystemTimeAsFileTime(fp - 0x0000000C)
	word32 esi_59 = dwLoc08 & 0x00000000 ^ dwLoc0C & 0x00000000 ^ GetCurrentProcessId() ^ GetCurrentThreadId() ^ GetTickCount()
	QueryPerformanceCounter(fp - 0x00000014)
	word32 esi_69 = esi_59 ^ (dwLoc10 ^ dwLoc14)
	branch esi_69 != 0xBB40E64E l100018DA
// DataOut: esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C ebp:fp - 0x00000004 eax:<invalid> edi:0xBB40E64E ebx:0xFFFF0000 -28(fp):edi -24(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l100018DA:
	branch (esi_69 & 0xFFFF0000) != 0x00000000 l100018E5
// DataOut: esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 ebp:fp - 0x00000004 eax:<invalid> edi:0xBB40E64E ebx:0xFFFF0000 esi:<invalid> -36(fp):fp - 0x00000014 -32(fp):esi -28(fp):edi -24(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l100018DE:
	esi_69 = esi_69 | esi_69 << 0x00000010
// DataOut: esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 ebp:fp - 0x00000004 eax:<invalid> edi:0xBB40E64E ebx:0xFFFF0000 esi:<invalid> -36(fp):fp - 0x00000014 -32(fp):esi -28(fp):edi -24(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l100018D3:
	esi_69 = 0xBB40E64F
// DataOut: esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 ebp:fp - 0x00000004 eax:<invalid> edi:0xBB40E64E ebx:0xFFFF0000 esi:<invalid> -36(fp):fp - 0x00000014 -32(fp):esi -28(fp):edi -24(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l100018E5:
	Mem77[0x10003000:word32] = esi_69
	Mem79[0x10003004:word32] = ~esi_69
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 ebp:fp - 0x00000004 eax:<invalid> edi:0xBB40E64E ebx:0xFFFF0000 esi:<invalid> -36(fp):fp - 0x00000014 -32(fp):esi -28(fp):edi -24(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000188B:
	Mem95[0x10003004:word32] = ~eax_9
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C ebp:fp - 0x00000004 eax:<invalid> edi:0xBB40E64E ebx:0xFFFF0000 -28(fp):edi -24(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l100018F4:
	return
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C ebp:fp - 0x00000004 eax:<invalid> edi:0xBB40E64E ebx:0xFFFF0000 esi:esi -36(fp):fp - 0x00000014 -32(fp):esi -28(fp):edi -24(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10001864_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp eax:<invalid> edi:edi ebx:ebx esi:esi -36(fp):fp - 0x00000014 -32(fp):esi -28(fp):edi -24(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



