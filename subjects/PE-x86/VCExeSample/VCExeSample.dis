int32 main(int32 argc, char * * argv)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
// Stack args: Stack +0000(32)
main_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32)

l00401000:
	test1(Mem0[argv:word32], argc, 0x004020C0, 1.0F)
	return 0x00000000
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp eax:0x00000000 ecx:argv edx:<invalid> -20(fp):<invalid> -16(fp):argc -12(fp):0x004020C0 -8(fp):(real32) rLoc1 -4(fp):ebp 4(fp):argc 8(fp):argv



void test1(char * arg1, int32 arg2, char * arg3, real32 arg4)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
test1_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l00401030:
	printf(0x004020C8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

test1_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp eax:<invalid> ecx:arg2 edx:arg1 -28(fp):0x004020C8 -24(fp):arg1 -20(fp):arg2 -16(fp):arg3 -12(fp):rLoc1 -4(fp):ebp 4(fp):arg1 8(fp):arg2 12(fp):arg3 16(fp):arg4



void test2(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO
// Preserved: ebp esp
// Stack args: Stack +0004(32)
test2_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l00401060:
	test1(0x004020D8, 0x00000002, 0x004020D4, (real32) Mem0[0x004020E8:real32])
	branch dwArg04 != 0x00000000 l004010A5
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l00401087:
	test1(0x004020E0, 0x00000006, 0x004020DC, (real32) Mem0[0x004020E4:real32])
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 ebp:fp - 0x00000004 -20(fp):0x004020D8 -16(fp):0x00000002 -12(fp):0x004020D4 -8(fp):(real32) rLoc1 -4(fp):ebp

l004010A5:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 ebp:fp - 0x00000004 -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):(real32) rLoc1 -4(fp):ebp

test2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):(real32) rLoc1 -4(fp):ebp



void indirect_call_test3(cdecl_class * c)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
// Stack args: Stack +0000(32)
indirect_call_test3_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32)

l004010B0:
	word32 edx_15 = Mem0[c:word32]
	word32 eax_16 = Mem0[edx_15 + 0x00000004:word32]
	word32 esp_17
	word32 ebp_18
	word32 eax_19
	word32 ecx_20
	word32 edx_21
	byte SCZO_22
	call eax_16 (retsize: 4; depth: 16)
		uses: dwLoc04_6,dwLoc08_9,dwLoc0C_12,eax_16,ebp_7,ecx_13,edx_15,esp_11
		defs: eax_19,ebp_18,ecx_20,edx_21,esp_17,SCZO_22
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

indirect_call_test3_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp eax:<invalid> ecx:c edx:<invalid> -12(fp):c -8(fp):0x000003E8 -4(fp):ebp 4(fp):c



