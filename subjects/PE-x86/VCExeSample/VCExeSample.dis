int32 main(int32 argc, char * * argv)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
// Stack args: Stack +0004(32) Stack +0008(32)
main_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00401000:
	test1(Mem0[argv:word32], argc, 0x004020C0, 1.0F)
	return 0x00000000
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp eax:0x00000000 ecx:argv edx:<invalid> -20(fp):<invalid> -16(fp):argc -12(fp):0x004020C0 -8(fp):(real32) rLoc1 -4(fp):ebp 4(fp):argc 8(fp):argv



void test1(char * arg1, int32 arg2, char * arg3, real32 arg4)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)
test1_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l00401030:
	printf(0x004020C8, arg1, arg2, arg3, (real64) arg4)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

test1_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp eax:<invalid> ecx:arg2 edx:arg1 -28(fp):0x004020C8 -24(fp):arg1 -20(fp):arg2 -16(fp):arg3 -12(fp):rLoc1 -4(fp):ebp 4(fp):arg1 8(fp):arg2 12(fp):arg3 16(fp):arg4



void test2(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO
// Preserved: ebp esp
// Stack args: Stack +0004(32)
test2_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l00401060:
	test1(0x004020D8, 0x00000002, 0x004020D4, Mem0[0x004020E8:real32])
	branch dwArg04 != 0x00000000 l004010A5
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l00401087:
	test1(0x004020E0, 0x00000006, 0x004020DC, Mem0[0x004020E4:real32])
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 ebp:fp - 0x00000004 -20(fp):0x004020D8 -16(fp):0x00000002 -12(fp):0x004020D4 -8(fp):(real32) rLoc1 -4(fp):ebp

l004010A5:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 ebp:fp - 0x00000004 -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):(real32) rLoc1 -4(fp):ebp

test2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):(real32) rLoc1 -4(fp):ebp



void indirect_call_test3(cdecl_class * c)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx dh dl dx eax ebp ecx edx esp rax rbp rcx rdx rsp sp spl
// Preserved:
// Stack args: Stack +0004(32)
indirect_call_test3_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l004010B0:
	Mem0[Mem0[c:word32] + 0x00000004:word32](c, 0x000003E8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

indirect_call_test3_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -12(fp):c -8(fp):0x000003E8 -4(fp):ebp 4(fp):c



void test4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx dh dl dx eax ebp ecx edx esp rax rbp rcx rdx rsp sp spl
// Preserved:
test4_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l004010D0:
	Mem0[Mem0[Mem0[0x00403018:word32]:word32]:word32](Mem0[0x00403018:word32])
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

test4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -8(fp):<invalid> -4(fp):ebp



void test5()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
test5_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l004010F0:
	Mem0[Mem0[Mem0[0x00403018:word32]:word32] + 0x00000004:word32](Mem0[0x00403018:word32], 0x000003E7, Mem0[0x004020EC:real32])
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

test5_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> ecx:<invalid> edx:<invalid> ebp:ebp -16(fp):<invalid> -12(fp):0x000003E7 -8(fp):(real32) rLoc1 -4(fp):ebp



void test6(cdecl_class * c, int32 a, int32 b)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
// Stack args: Stack +0004(32)
test6_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l00401120:
	Mem48[Mem48[c:word32] + 0x00000004:word32](c, Mem0[Mem0[c:word32] + 0x00000008:word32](c, a, b))
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

test6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp eax:<invalid> ecx:<invalid> edx:<invalid> -20(fp):c -16(fp):a -12(fp):b -8(fp):<invalid> -4(fp):ebp 4(fp):c 8(fp):a 12(fp):b



void test7(real64 rArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZOFPUF ah al ax bp bpl ch cl cx dh dl dx eax ebp ecx edx esp rax rbp rcx rdx rsp sp spl
// Preserved:
// Stack args: Stack +0004(64)
test7_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(64)

l00401160:
	branch 1.0 >= rArg04 l00401189
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l0040116F:
	Mem0[Mem0[Mem0[0x00403024:word32]:word32]:word32](Mem0[0x00403024:word32], rArg04)
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 ebp:fp - 0x00000004 -4(fp):ebp

l00401189:
	Mem18[Mem18[Mem18[0x00403024:word32]:word32] + 0x00000004:word32](Mem18[0x00403024:word32], 0x0000000D, rArg04)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> -12(fp):rLoc1 -4(fp):ebp

test7_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> -12(fp):rLoc1 -4(fp):ebp



word32 nested_if_blocks_test8(real64 rArg04, real64 rArg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ebp esp
// Trashed: SCZOFPUF ah al ax bp bpl ch cl cx dh dl dx eax ebp ecx edx esp rax rbp rcx rdx rsp sp spl
// Preserved:
// Stack args: Stack +0004(64)
nested_if_blocks_test8_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(64)

l004011B0:
	Mem0[Mem0[Mem0[0x00403024:word32]:word32] + 0x00000004:word32](Mem0[0x00403024:word32], 0xFFFFFFFF, rArg04)
	branch Mem0[0x004020F8:real64] == rArg04 l0040120D
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Stack +0004(64)

l004011E2:
	branch Mem0[0x004020F0:real64] <= rArg04 l0040120D
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> -16(fp):0xFFFFFFFF -12(fp):rLoc1 -4(fp):ebp

l004011F2:
	Mem52[Mem52[Mem52[0x00403024:word32]:word32]:word32](Mem52[0x00403024:word32], rArg04)
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> -16(fp):0xFFFFFFFF -12(fp):rLoc1 -4(fp):ebp

l0040120D:
	test6(Mem38[0x00403018:word32], 0x00000006, 0x00000007)
	return ebp
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> -16(fp):0xFFFFFFFF -12(fp):rLoc1 -4(fp):ebp

nested_if_blocks_test8_exit:
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> -16(fp):0xFFFFFFFF -12(fp):rLoc1 -4(fp):ebp



void loop_test9(real32 rArg04, real64 rArg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZOFPUF ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
// Stack args: Stack +0004(32)
loop_test9_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l00401230:
	word32 dwLoc08_12 = 0x00000000
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32)

l00401248:
	Mem21[Mem21[Mem21[0x00403024:word32]:word32] + 0x00000004:word32](Mem21[0x00403024:word32], dwLoc08_12, (real64) rArg04)
	branch rArg0 <= (real64) dwLoc08_12 l00401294
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ecx:<invalid> edx:<invalid> eax:<invalid> -28(fp):0x00000000 -24(fp):rLoc2 -16(fp):rLoc1 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32)

l00401294:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ecx:<invalid> edx:<invalid> eax:<invalid> -28(fp):0x00000000 -24(fp):rLoc2 -16(fp):rLoc1 -8(fp):<invalid> -4(fp):ebp

loop_test9_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp ecx:<invalid> edx:<invalid> eax:<invalid> -28(fp):0x00000000 -24(fp):rLoc2 -16(fp):rLoc1 -8(fp):<invalid> -4(fp):ebp

l00401278:
	rArg0 = (real64) rArg04
	Mem39[Mem39[Mem39[0x00403024:word32]:word32]:word32](Mem39[0x00403024:word32], rArg0)
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ecx:<invalid> edx:<invalid> eax:<invalid> -28(fp):0x00000000 -24(fp):rLoc2 -16(fp):rLoc1 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32)

l0040123F:
	dwLoc08_12 = dwLoc08_12 + 0x00000001
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ecx:<invalid> edx:<invalid> eax:<invalid> -28(fp):0x00000000 -24(fp):rLoc2 -16(fp):rLoc1 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32)



void const_div_test10(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
// Stack args: Stack +0004(32)
const_div_test10_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l004012A0:
	word32 eax_16 = 0x0000000A
	word32 ecx_19 = 0x00000003
	branch dwArg04 == 0x00000000 l004012BA
// DataOut: eax ecx
// DataOut (flags): 
// SymbolicIn: esp:fp

l004012B4:
	eax_16 = 0x00000003
	ecx_19 = 0x00000001
// DataOut: eax ecx
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 ebp:fp - 0x00000004 eax:0x0000000A ecx:0x00000003 edx:<invalid> -4(fp):ebp

l004012BA:
	Mem20[0x0040301C:word32] = ecx_19
	Mem21[0x00403020:word32] = eax_16
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:<invalid> -4(fp):ebp

const_div_test10_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp eax:<invalid> ecx:<invalid> edx:<invalid> -4(fp):ebp



void loop_test11(word32 ecx, word32 ebp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp ecx
// LiveOut:
// Trashed: SCZOFPUF ah al ax bp bpl ch cl cx dh dl dx eax ebp ecx edx esp rax rbp rcx rdx rsp sp spl
// Preserved: ebp esp
loop_test11_entry:
// DataOut: ebp ecx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l004012D0:
	word32 ebp_19 = fp - 0x00000004
// DataOut: ebp ecx esp
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l004012DD:
	branch Mem0[ebp_19 - 0x00000004:word32] <= 0x00000000 l00401329
// DataOut: ebp ecx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -20(fp):rLoc1 -16(fp):(real32) rLoc1 -12(fp):(real32) rLoc1 -8(fp):0x00000005 -4(fp):ebp
// LocalsOut: Local -0004(32)

l00401329:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -20(fp):rLoc1 -16(fp):(real32) rLoc1 -12(fp):(real32) rLoc1 -8(fp):0x00000005 -4(fp):ebp

loop_test11_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -20(fp):rLoc1 -16(fp):(real32) rLoc1 -12(fp):(real32) rLoc1 -8(fp):0x00000005 -4(fp):ebp

l004012E3:
	word32 eax_26 = Mem0[ebp_19 - 0x00000004:word32]
	word32 eax_27 = eax_26 & 0x80000001
	branch (eax_26 & 0x80000001) >= 0x00000000 l004012F2
// DataOut: eax ebp ecx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -20(fp):rLoc1 -16(fp):(real32) rLoc1 -12(fp):(real32) rLoc1 -8(fp):0x00000005 -4(fp):ebp
// LocalsOut: Local -0004(32)

l004012ED:
	eax_27 = ((eax_26 & 0x80000001) - 0x00000001 | 0xFFFFFFFE) + 0x00000001
// DataOut: eax ebp ecx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -20(fp):rLoc1 -16(fp):(real32) rLoc1 -12(fp):(real32) rLoc1 -8(fp):0x00000005 -4(fp):ebp
// LocalsOut: Local -0004(32)

l004012F2:
	branch eax_27 != 0x00000000 l0040130D
// DataOut: ebp ecx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -20(fp):rLoc1 -16(fp):(real32) rLoc1 -12(fp):(real32) rLoc1 -8(fp):0x00000005 -4(fp):ebp
// LocalsOut: Local -0004(32)

l0040130D:
	Mem55[fp - 0x00000014:real64] = Mem0[ebp_19 + 0x00000008:real64]
	ebp_19 = nested_if_blocks_test8(rArg00, rArg0)
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -20(fp):rLoc1 -16(fp):(real32) rLoc1 -12(fp):(real32) rLoc1 -8(fp):0x00000005 -4(fp):ebp
// LocalsOut: Local -0004(32)

l004012F6:
	Mem43[ebp_19 - 0x00000008:real32] = (real32) Mem0[ebp_19 + 0x00000008:real64]
	real64 rLoc1_44 = (real64) Mem43[ebp_19 - 0x00000008:real32]
	Mem46[fp - 0x00000010:word32] = ecx
	Mem47[fp - 0x00000010:real32] = (real32) rLoc1_44
	loop_test9(rArg00, rArg0)
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -20(fp):rLoc1 -16(fp):(real32) rLoc1 -12(fp):(real32) rLoc1 -8(fp):0x00000005 -4(fp):ebp
// LocalsOut: Local -0004(32)

l0040131E:
	word32 ecx_38 = Mem0[ebp_19 - 0x00000004:word32]
	Mem41[ebp_19 - 0x00000004:word32] = ecx_38 - 0x00000001
	ecx = ecx_38 - 0x00000001
// DataOut: ebp ecx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -20(fp):rLoc1 -16(fp):(real32) rLoc1 -12(fp):(real32) rLoc1 -8(fp):0x00000005 -4(fp):ebp
// LocalsOut: Local -0004(32)



DWORD Win32CrtStartup()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
Win32CrtStartup_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

Win32CrtStartup_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp



word32 fn004015E4(word32 ebx, word32 esi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx edi esi fs
// LiveOut: eax esp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved:
fn004015E4_entry:
// DataOut: ebx edi esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l004015E4:
	word32 eax_133
	word32 ebp_10 = fn004017DC(ebx, esi, edi, dwLoc0C, 0x00402188, 0x00000014)
	Mem14[fp - 0x0000000C:word32] = Mem0[0x0040338C:word32]
	word32 eax_16 = _decode_pointer(Mem14[fp - 0x0000000C:(ptr void)])
	Mem19[ebp_10 - 0x0000001C:word32] = eax_16
	branch eax_16 != 0xFFFFFFFF l00401613
// DataOut: ebp esp fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(0)

l00401613:
	Mem46[fp - 0x0000000C:word32] = 0x00000008
	word32 esp_47
	word32 esi_48
	word32 eax_49
	word32 ecx_50
	word32 ebp_51
	byte SCZO_52
	byte Z_53
	byte SZO_54
	byte C_55
	word32 ebx_56
	word32 edi_57
	call lock (retsize: 4; depth: 4)
		uses: C,dwLoc04_3,dwLoc08_5,dwLoc0C,eax_16,ebp_10,ebx,ecx_17,edi,esi_15,esp_45,SCZO_20,SZO,Z_21
		defs: C_55,eax_49,ebp_51,ebx_56,ecx_50,edi_57,esi_48,esp_47,SCZO_52,SZO_54,Z_53
	Mem62[ebp_51 - 0x00000004:word32] = Mem46[ebp_51 - 0x00000004:word32] & 0x00000000
	Mem67[esp_47 - 0x00000004:word32] = Mem62[0x0040338C:word32]
	Mem69[ebp_51 - 0x0000001C:word32] = _decode_pointer(Mem67[esp_47 - 0x00000004:(ptr void)])
	Mem72[esp_47 - 0x00000008:word32] = Mem69[0x00403388:word32]
	Mem74[ebp_51 - 0x00000020:word32] = _decode_pointer(Mem72[esp_47 - 0x00000008:(ptr void)])
	Mem77[esp_47 - 0x0000000C:word32] = ebp_51 - 0x00000020
	Mem80[esp_47 - 0x00000010:word32] = ebp_51 - 0x0000001C
	Mem83[esp_47 - 0x00000014:word32] = Mem80[ebp_51 + 0x00000008:word32]
	word32 esp_84
	word32 esi_85
	word32 eax_86
	word32 ecx_87
	word32 ebp_88
	byte SCZO_89
	byte Z_90
	byte SZO_91
	byte C_92
	word32 ebx_93
	word32 edi_94
	call _dllonexit (retsize: 4; depth: 4)
		uses: C_64,dwLoc04_3,dwLoc08_5,dwLoc0C,eax_78,ebp_51,ebx_56,ecx_59,edi_57,esi_48,esp_82,SCZO_52,SZO_63,Z_53
		defs: C_92,eax_86,ebp_88,ebx_93,ecx_87,edi_94,esi_85,esp_84,SCZO_89,SZO_91,Z_90
	Mem96[ebp_88 - 0x00000024:word32] = eax_86
	Mem99[esp_84 - 0x00000008:word32] = Mem96[ebp_88 - 0x0000001C:word32]
	word32 esp_101
	word32 esi_102
	word32 eax_103
	word32 ecx_104
	word32 ebp_105
	byte SCZO_106
	byte Z_107
	byte SZO_108
	byte C_109
	word32 ebx_110
	word32 edi_111
	call encode_pointer (retsize: 4; depth: 4)
		uses: C_92,dwLoc04_3,dwLoc08_5,dwLoc0C,eax_86,ebp_88,ebx_93,ecx_87,edi_94,esi_100,esp_98,SCZO_89,SZO_91,Z_90
		defs: C_109,eax_103,ebp_105,ebx_110,ecx_104,edi_111,esi_102,esp_101,SCZO_106,SZO_108,Z_107
	Mem113[0x0040338C:word32] = eax_103
	Mem116[esp_101 - 0x00000008:word32] = Mem113[ebp_105 - 0x00000020:word32]
	word32 esp_117
	word32 esi_118
	word32 eax_119
	word32 ecx_120
	byte SCZO_122
	byte Z_123
	byte SZO_124
	byte C_125
	word32 ebx_126
	word32 edi_127
	call encode_pointer (retsize: 4; depth: 4)
		uses: C_109,dwLoc04_3,dwLoc08_5,dwLoc0C,eax_103,ebp_105,ebx_110,ecx_104,edi_111,esi_102,esp_115,SCZO_106,SZO_108,Z_107
		defs: C_125,eax_119,ebp_121,ebx_126,ecx_120,edi_127,esi_118,esp_117,SCZO_122,SZO_124,Z_123
	Mem131[0x00403388:word32] = eax_119
	Mem132[ebp_10 - 0x00000004:word32] = 0xFFFFFFFE
	fn0040167A()
	eax_133 = Mem132[ebp_10 - 0x00000024:word32]
// DataOut: eax ebp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> esi:_decode_pointer eax:<invalid> ecx:<invalid> ebp:<invalid> -12(fp):<invalid> -8(fp):0x00402188 -4(fp):0x00000014
// LocalsOut: Local -0004(0)

l00401607:
	Mem39[fp - 0x0000000C:word32] = Mem19[ebp_10 + 0x00000008:word32]
	eax_133 = _onexit(Mem39[fp - 0x0000000C:_onexit_t])
// DataOut: eax ebp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> esi:_decode_pointer eax:<invalid> ecx:<invalid> ebp:<invalid> -12(fp):<invalid> -8(fp):0x00402188 -4(fp):0x00000014
// LocalsOut: Local -0004(0)

l00401674:
	fn00401821(ebp_10, 0x00000014, dwArg00, dwArg04, dwArg08, dwArg0C)
	return eax_133
// DataOut: eax esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> ebp:<invalid> -12(fp):<invalid> -8(fp):0x00402188 -4(fp):0x00000014

fn004015E4_exit:
// DataOut: eax esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> edi:<invalid> ebx:<invalid> ebp:<invalid> -12(fp):<invalid> -8(fp):0x00402188 -4(fp):0x00000014



void fn0040167A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: ch cl cx ecx esp rcx rsp sp spl
// Preserved:
fn0040167A_entry:
// DataOut: ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l0040167A:
	word32 esp_4
	word32 ecx_5
	call unlock (retsize: 4; depth: 8)
		uses: dwLoc04_3,esp_2
		defs: ecx_5,esp_4
	return
// DataOut: ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp

fn0040167A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ecx:<invalid> -4(fp):0x00000008



void fn00401683(word32 ebx, word32 esi, word32 edi, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx edi esi fs
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: esp
fn00401683_entry:
// DataOut: ebx edi esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l00401683:
	fn004015E4(ebx, esi, edi)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

fn00401683_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edi:<invalid> ebx:<invalid> ebp:<invalid> -4(fp):<invalid>



void fn00401695()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax di dil eax edi esi esp rax rdi rsi rsp si sil sp spl
// Preserved:
fn00401695_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l00401695:
	word32 esi_12 = 0x00402158
	branch true l004016B6
// DataOut: esi esp
// DataOut (flags): 
// SymbolicIn: esp:fp

l004016A7:
	word32 eax_34 = Mem0[esi_12:word32]
	branch eax_34 == 0x00000000 l004016AF
// DataOut: esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> edi:0x00402158 esi:<invalid> -8(fp):edi -4(fp):esi

l004016AD:
	word32 esp_47
	word32 edi_49
	word32 eax_50
	byte SCZO_51
	byte C_52
	byte SZO_53
	byte Z_54
	call eax_34 (retsize: 4; depth: 4)
		uses: C_37,dwLoc04_4,dwLoc08_7,eax_34,edi_31,esi_32,esp_33,SCZO_30,SZO_35,Z_36
		defs: C_52,eax_50,edi_49,esi_48,esp_47,SCZO_51,SZO_53,Z_54
// DataOut: esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> edi:0x00402158 esi:<invalid> -8(fp):edi -4(fp):esi

l004016AF:
	esi_12 = esi_12 + 0x00000004
	branch esi_12 <u 0x00402158 l004016A7
// DataOut: esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> edi:0x00402158 esi:<invalid> -8(fp):edi -4(fp):esi

l004016B6:
	return
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> edi:0x00402158 esi:<invalid> -8(fp):edi -4(fp):esi

fn00401695_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> edi:<invalid> esi:<invalid> -8(fp):edi -4(fp):esi



word32 fn004016F0(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: esp
// Stack args: Stack +0004(32)
fn004016F0_entry:
// DataOut: ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Stack +0004(32)

l004016F0:
	branch Mem0[dwArg04:word16] == 0x5A4D l004016FE
// DataOut: ebp ecx fs
// DataOut (flags): 
// SymbolicIn: esp:fp

l004016FE:
	word32 eax_21 = Mem0[dwArg04 + 0x0000003C:word32] + dwArg04
	branch Mem0[eax_21:word32] != 0x00004550 l004016FB
// DataOut: eax ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp ecx:<invalid>

l0040170B:
	return (word32) (Mem0[eax_21 + 0x00000018:word16] == 0x010B)
// DataOut: eax ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp ecx:<invalid> eax:<invalid>

l004016FB:
	return 0x00000000
// DataOut: eax ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp ecx:<invalid> eax:<invalid>

fn004016F0_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp ecx:<invalid> eax:<invalid> cl:Test(EQ,Z)



word32 fn00401720(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn00401720_entry:
// DataOut: ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00401720:
	word32 ecx_6 = Mem0[dwArg04 + 0x0000003C:word32] + dwArg04
	word32 esi_14 = (word32) Mem0[ecx_6 + 0x00000006:word16]
	word32 edx_15 = 0x00000000
	word32 eax_22 = (word32) Mem0[ecx_6 + 0x00000014:word16] + 0x00000018 + ecx_6 + 0x0000000C
	branch false l0040175C
// DataOut: eax ebp edx esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l0040173E:
// DataOut: eax ebp edi edx esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C eax:<invalid> ecx:<invalid> esi:<invalid> edx:0x00000000 -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l00401742:
	word32 ecx_49 = Mem0[eax_22 + 0x00000000:word32]
	branch dwArg08 <u ecx_49 l00401752
// DataOut: eax ebp ecx edi edx esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> edi:<invalid> ebx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l00401749:
	branch dwArg08 <u Mem0[eax_22 + 0x00000008:word32] + ecx_49 l0040175E
// DataOut: eax ebp edi edx esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> edi:<invalid> ebx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l00401752:
	edx_15 = edx_15 + 0x00000001
	eax_22 = eax_22 + 0x00000028
	branch edx_15 <u esi_14 l00401742
// DataOut: eax ebp edi edx esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> edi:<invalid> ebx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l0040175C:
	eax_22 = 0x00000000
// DataOut: eax ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> edi:<invalid> ebx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l0040175E:
	return eax_22
// DataOut: eax ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> edi:<invalid> ebx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx

fn00401720_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> ecx:<invalid> esi:esi edx:<invalid> edi:edi ebx:ebx -12(fp):edi -8(fp):esi -4(fp):ebx



void fn00401762(word32 ebx, word32 esi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx edi esi fs
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn00401762_entry:
// DataOut: ebx edi esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l00401762:
	word32 ebp_10 = fn004017DC(ebx, esi, edi, dwLoc0C, 0x004021A8, 0x00000008)
	Mem13[ebp_10 - 0x00000004:word32] = Mem0[ebp_10 - 0x00000004:word32] & 0x00000000
	Mem18[fp - 0x0000000C:word32] = 0x00400000
	branch fn004016F0(dwArg00) == 0x00000000 l004017BF
// DataOut: ebp esp fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(0)

l00401782:
	Mem49[fp - 0x0000000C:word32] = Mem18[ebp_10 + 0x00000008:word32] - 0x00400000
	Mem51[fp - 0x00000010:word32] = 0x00400000
	branch fn00401720(dwArg00, dwArg04) == 0x00000000 l004017BF
// DataOut: eax ebp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edx:0x00400000 ecx:<invalid> eax:<invalid> ebp:<invalid> cl:<invalid> -12(fp):0x00400000 -8(fp):0x004021A8 -4(fp):0x00000008
// LocalsOut: Local -0004(0)

l004017BF:
	Mem41[ebp_10 - 0x00000004:word32] = 0xFFFFFFFE
// DataOut: ebp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> ebp:<invalid> cl:<invalid> -16(fp):0x00400000 -12(fp):<invalid> -8(fp):0x004021A8 -4(fp):0x00000008
// LocalsOut: Local -0004(0)

l00401794:
	Mem66[ebp_10 - 0x00000004:word32] = 0xFFFFFFFE
// DataOut: ebp fs
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> ebp:<invalid> cl:<invalid> -16(fp):0x00400000 -12(fp):<invalid> -8(fp):0x004021A8 -4(fp):0x00000008
// LocalsOut: Local -0004(0)

l004017C8:
	fn00401821(ebp_10, 0x00000008, dwArg00, dwArg04, dwArg08, dwArg0C)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> ebp:<invalid> cl:<invalid> -16(fp):0x00400000 -12(fp):<invalid> -8(fp):0x004021A8 -4(fp):0x00000008

fn00401762_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> ebp:<invalid> cl:<invalid> -16(fp):0x00400000 -12(fp):<invalid> -8(fp):0x004021A8 -4(fp):0x00000008



word32 fn004017DC(word32 ebx, word32 esi, word32 edi, word32 dwArg00, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx edi esi fs
// LiveOut: ebp esp
// Trashed: SCZO ah al ax bp bpl eax ebp esp rax rbp rsp sp spl
// Preserved:
// Stack args: Stack +0000(32) Stack +0004(32) Stack +0008(32)
fn004017DC_entry:
// DataOut: ebx edi esi fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32) Stack +0008(32)

l004017DC:
	word32 esp_14 = fp - 0x00000008 - dwArg08
	Mem17[esp_14 - 0x00000004:word32] = ebx
	Mem20[esp_14 - 0x00000008:word32] = esi
	Mem23[esp_14 - 0x0000000C:word32] = edi
	Mem33[esp_14 - 0x00000010:word32] = Mem23[0x00403010:word32] ^ fp + 0x00000008
	Mem38[esp_14 - 0x00000014:word32] = dwArg00
	Mem43[fs:0x00000000:word32] = fp - 0x00000008
	return fp + 0x00000008
// DataOut: ebp esp fs
// DataOut (flags): 
// SymbolicIn: esp:fp

fn004017DC_exit:
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:fp - 0x00000008 ebp:fp + 0x00000008 -16(fp):<invalid> -8(fp):<invalid> -4(fp):0x00401835 0(fp):<invalid> 4(fp):0xFFFFFFFE 8(fp):ebp



void fn00401821(word32 ebp, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp fs
// LiveOut: esp
// Trashed: bh bl bp bpl bx ch cl cx di dil ebp ebx ecx edi esi esp rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0000(32)
fn00401821_entry:
// DataOut: eax ebp fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32)

l00401821:
	Mem5[fs:0x00000000:word32] = Mem0[ebp - 0x00000010:word32]
	Mem25[ebp:word32] = dwArg00
	return
// DataOut: eax esp
// DataOut (flags): 
// SymbolicIn: esp:fp

fn00401821_exit:
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:ebp ecx:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> ebp:<invalid>



void fn00401858(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax
// LiveOut:
// Trashed: SCZO esi esp rsi rsp si sil sp spl
// Preserved:
fn00401858_entry:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l00401858:
	word32 esp_14
	word32 esi_15
	byte SZO_16
	byte C_17
	byte SCZO_18
	word32 eax_19
	byte Z_20
	call controlfp_s (retsize: 4; depth: 20)
		uses: C_11,dwLoc04_4,dwLoc08_6,dwLoc0C_8,dwLoc10_13,esi_9,esp_12,SZO_10
		defs: C_17,eax_19,esi_15,esp_14,SCZO_18,SZO_16,Z_20
	branch eax_19 == 0x00000000 l0040187F
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:fp

l00401872:
	Mem32[fp - 0x0000000C:word32] = 0x00000000
	Mem34[fp - 0x00000010:word32] = 0x00000000
	Mem36[fp - 0x00000014:word32] = 0x00000000
	Mem38[fp - 0x00000018:word32] = 0x00000000
	Mem40[fp - 0x0000001C:word32] = 0x00000000
	_invoke_watson(Mem40[fp - 0x0000001C:(ptr wchar_t)], Mem40[fp - 0x00000018:(ptr wchar_t)], Mem40[fp - 0x00000014:(ptr wchar_t)], Mem40[fp - 0x00000010:uint32], Mem40[fp - 0x0000000C:uintptr_t])
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> esi:0x00000000 -16(fp):0x00000000 -12(fp):0x00010000 -8(fp):0x00030000 -4(fp):esi

l0040187F:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> esi:0x00000000 -16(fp):0x00000000 -12(fp):0x00010000 -8(fp):0x00030000 -4(fp):esi

fn00401858_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> esi:<invalid> -16(fp):0x00000000 -12(fp):0x00010000 -8(fp):0x00030000 -4(fp):esi



void fn00401881()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: esp
fn00401881_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

l00401881:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

fn00401881_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp eax:0x00000000



void fn00401884()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: ebp ebx edi esi esp
fn00401884_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32)

l00401884:
	word32 eax_8 = Mem0[0x00403010:word32]
	branch eax_8 == 0xBB40E64E l004018B4
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32)

l004018A7:
	branch (eax_8 & 0xFFFF0000) == 0x00000000 l004018B4
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C ebp:fp - 0x00000004 eax:<invalid> edi:0xBB40E64E ebx:0xFFFF0000 -28(fp):edi -24(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32)

l004018B4:
	GetSystemTimeAsFileTime(fp - 0x0000000C)
	word32 esi_58 = dwLoc08 & 0x00000000 ^ dwLoc0C & 0x00000000 ^ GetCurrentProcessId() ^ GetCurrentThreadId() ^ GetTickCount()
	QueryPerformanceCounter(fp - 0x00000014)
	word32 esi_68 = esi_58 ^ (dwLoc10 ^ dwLoc14)
	branch esi_68 != 0xBB40E64E l004018FA
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C ebp:fp - 0x00000004 eax:<invalid> edi:0xBB40E64E ebx:0xFFFF0000 -28(fp):edi -24(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l004018FA:
	branch (esi_68 & 0xFFFF0000) != 0x00000000 l00401905
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 ebp:fp - 0x00000004 eax:<invalid> edi:0xBB40E64E ebx:0xFFFF0000 esi:<invalid> -36(fp):fp - 0x00000014 -32(fp):esi -28(fp):edi -24(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l004018FE:
	esi_68 = esi_68 | esi_68 << 0x00000010
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 ebp:fp - 0x00000004 eax:<invalid> edi:0xBB40E64E ebx:0xFFFF0000 esi:<invalid> -36(fp):fp - 0x00000014 -32(fp):esi -28(fp):edi -24(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l004018F3:
	esi_68 = 0xBB40E64F
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 ebp:fp - 0x00000004 eax:<invalid> edi:0xBB40E64E ebx:0xFFFF0000 esi:<invalid> -36(fp):fp - 0x00000014 -32(fp):esi -28(fp):edi -24(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l00401905:
	Mem76[0x00403010:word32] = esi_68
	Mem78[0x00403014:word32] = ~esi_68
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 ebp:fp - 0x00000004 eax:<invalid> edi:0xBB40E64E ebx:0xFFFF0000 esi:<invalid> -36(fp):fp - 0x00000014 -32(fp):esi -28(fp):edi -24(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l004018AB:
	Mem94[0x00403014:word32] = ~eax_8
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C ebp:fp - 0x00000004 eax:<invalid> edi:0xBB40E64E ebx:0xFFFF0000 -28(fp):edi -24(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l00401914:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C ebp:fp - 0x00000004 eax:<invalid> edi:0xBB40E64E ebx:0xFFFF0000 esi:esi -36(fp):fp - 0x00000014 -32(fp):esi -28(fp):edi -24(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn00401884_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp eax:<invalid> edi:edi ebx:ebx esi:esi -36(fp):fp - 0x00000014 -32(fp):esi -28(fp):edi -24(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



