void herror()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
herror_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

herror_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __strdup()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__strdup_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__strdup_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void clock_gettime()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
clock_gettime_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

clock_gettime_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void close()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
close_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

close_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void read()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
read_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

read_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void inet_ntop()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
inet_ntop_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

inet_ntop_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void snprintf()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
snprintf_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

snprintf_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void getaddrinfo()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
getaddrinfo_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

getaddrinfo_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void dlopen()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
dlopen_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

dlopen_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void open()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
open_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

open_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __snprintf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__snprintf_chk_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__snprintf_chk_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void dlsym()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
dlsym_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

dlsym_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void exit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
exit_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

exit_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void getopt_long()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
getopt_long_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

getopt_long_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __vasprintf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__vasprintf_chk_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__vasprintf_chk_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __asprintf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__asprintf_chk_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__asprintf_chk_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void getnameinfo()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
getnameinfo_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

getnameinfo_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void memset()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
memset_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

memset_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void inet_pton()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
inet_pton_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

inet_pton_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void strcmp()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strcmp_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

strcmp_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void free()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
free_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

free_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __printf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__printf_chk_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__printf_chk_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __sprintf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__sprintf_chk_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__sprintf_chk_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fwrite()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fwrite_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fwrite_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void memcmp()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
memcmp_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

memcmp_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fputs()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fputs_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fputs_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void isatty()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
isatty_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

isatty_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __fprintf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__fprintf_chk_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__fprintf_chk_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __libc_start_main()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__libc_start_main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__libc_start_main_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void putchar()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
putchar_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

putchar_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fputc()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fputc_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fputc_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __stack_chk_fail()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__stack_chk_fail_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__stack_chk_fail_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __errno_location()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__errno_location_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__errno_location_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void strtol()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strtol_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

strtol_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void strchr()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strchr_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

strchr_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void memcpy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
memcpy_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

memcpy_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void abort()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
abort_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

abort_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void freeaddrinfo()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
freeaddrinfo_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

freeaddrinfo_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0000000000015180(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa3 fa4 fa5 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp t1 t3 t4 t5
// Preserved: a1
fn0000000000015180_entry:
// DataOut: a0 a1 gp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000015180:
	word64 sp_1020 = fp + -448 + 0xFFFFFFFFFFFFFFE8
	word64 s0_1025 = 0
	word64 s6_43 = 0
	word64 s9_44 = 0
	word64 s10_45 = 0
// DataOut: gp s0 s10 s2 s3 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015200:
	a0 = DPB(a0, getopt_long(a0, a1, 0x00000000000119A8, 0x00000000000108E0, a4), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	branch a0 == -1 l0000000000015348
// DataOut: a0 a5 gp s0 s10 s2 s3 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:118 a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015348:
	word64 s1_1064
	word64 s4_1065
	word64 a4_126 = (int64) Mem0[gp + -1904:int32]
	branch a4_126 >= a0 l0000000000015428
// DataOut: a4 a5 gp s0 s10 s2 s3 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:-1 a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015428:
	s4_1065 = 0
	s1_1064 = 0
// DataOut: a5 gp s0 s1 s10 s4 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:<invalid> a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015350:
	word64 a1_1060 = (int64) ((word32) a4_126 + 1)
	Mem1063[gp + 2192:word32] = (word32) a1_1060
	word64 s2_1062 = a1 + (a4_126 << 0x00000003)
	s1_1064 = Mem1063[s2_1062:word64]
	s4_1065 = 0
	branch a1_1060 >= a0 l0000000000015378
// DataOut: a4 a5 gp s0 s1 s10 s2 s4 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:<invalid> a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001536C:
	s4_1065 = Mem1063[s2_1062 + 8:word64]
	Mem1068[gp + 2192:word32] = (word32) (int64) ((word32) a4_126 + 2)
// DataOut: a5 gp s0 s1 s10 s4 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:0 s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015378:
	branch s6_43 != 0x0000000000000000 l0000000000015588
// DataOut: a5 gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015588:
	word64 a0_1057 = DPB(a0, __printf_chk(a0, 0x00000000000119C8, Mem0[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001537C:
	branch (int64) Mem0[sp_1020 + 28:int32] == 0x0000000000000000 l00000000000153B4
// DataOut: a5 gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015384:
	branch (int64) Mem0[sp_1020:int32] == 0x0000000000000000 l00000000000153B4
// DataOut: a5 gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153B4:
	word64 a5_1026
	word64 s2_1028
	word64 a5_718
	word64 a0_789
	word64 a0_182
	Mem176[sp_1020 + 8:word64] = a0
	branch s9_44 == 0x0000000000000000 l0000000000015924
// DataOut: gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015924:
	word64 a0_1037 = fn0000000000017924(gp)
	a5_1026 = Mem176[sp_1020 + 8:word64]
	branch a0_1037 != 0x0000000000000000 l0000000000015458
// DataOut: a5 gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015930:
	branch (s0_1025 & 65544) != 65544 l0000000000015458
// DataOut: a5 gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015940:
// DataOut: a5 gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153BC:
	word64 a0_1030 = fn0000000000017924(gp)
	s2_1028 = s0_1025 | 2
	a5_1026 = Mem176[sp_1020 + 8:word64]
	branch a0_1030 == 0x0000000000000000 l0000000000015434
// DataOut: a5 gp s0 s1 s10 s2 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015434:
	branch (s0_1025 & 65544) != 65544 l00000000000153CC
// DataOut: a5 gp s1 s10 s2 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:2 s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015444:
	s0_1025 = s0_1025 | 2
// DataOut: a5 gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:2 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015448:
	s2_1028 = s0_1025 | 0x0000000000004000
	branch s9_44 != 0x0000000000000000 l00000000000153CC
// DataOut: a5 gp s1 s10 s2 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015454:
	s0_1025 = s2_1028
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015458:
	branch s10_45 == 0x0000000000000000 l0000000000015CE4
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CE4:
	branch s1_1064 != 0x0000000000000000 l0000000000015510
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CE8:
	branch (int64) Mem176[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CF0:
	word64 a0_1017 = DPB(0x0000000000011A30, fwrite(0x0000000000011A30, a1, a2, a3), 0)
	sp_1020 = fn0000000000015FCC(gp, 1)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001545C:
	word64 a0_909 = fn00000000000166F4(gp, sp_1020 + 28, s10_45, 1)
	branch a0_909 < 0x0000000000000000 l0000000000015BC8
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BC8:
	branch (int64) Mem176[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BD0:
	branch (int64) Mem176[sp_1020 + 28:int32] != 0x0000000000000000 l0000000000015E7C
// DataOut: a0 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E7C:
// DataOut: a0 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BDC:
// DataOut: a0 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015474:
	Mem913[sp_1020 + 8:word64] = a0_909
	word64 s1_914 = (int64) Mem913[sp_1020 + 28:int32]
	Mem915[sp_1020 + 32:word64] = 0x0000000000000000
	a0 = DPB(a0, clock_gettime(a0, a1), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	word64 a5_918 = Mem915[sp_1020:word64]
	branch false l0000000000015CB0
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015494:
	word64 a5_938
	branch s1_914 == 0x0000000000000000 l0000000000015C48
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C48:
	Mem969[sp_1020:word64] = a5_918
	word64 s1_970 = Mem969[sp_1020 + 0x0000000000000028:word64]
	word64 a0_971 = fn00000000000164D0(sp_1020 + 0x00000000000000F8, 4)
	word64 a5_972 = Mem969[sp_1020:word64]
	branch a0_971 < 0x0000000000000000 l0000000000015CB0
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C64:
	branch 15 >= a5_972 l0000000000015C7C
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C6C:
	word64 a3_990 = 1
	branch a3_990 >=u (s1_970 | 4) l0000000000015DB8
// DataOut: a3 a4 a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:15 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015DB8:
	branch (s1_970 | 4) == a3_990 l0000000000015E00
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:1 a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E00:
	Mem999[sp_1020 + 0x00000000000000F8:byte] = 0xC0
	Mem1001[sp_1020 + 0x00000000000000F9:byte] = 0xA8
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:1 a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015DBC:
	Mem992[sp_1020 + 0x00000000000000F8:byte] = 0xAC
	Mem997[sp_1020 + 0x00000000000000F9:byte] = (byte) (Mem992[sp_1020 + 0x0000000000000028:word64] >> 0x00000004 & 15 | 16)
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:1 a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C7C:
	Mem987[sp_1020 + 0x00000000000000F8:byte] = 0x0A
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C84:
	word64 a4_974 = (int64) Mem969[sp_1020 + 0x00000000000000F8:int32]
	Mem980[sp_1020:word64] = a5_972
	Mem981[sp_1020 + 0x0000000000000010:word32] = (word32) a4_974
	a0 = inet_ntop(a0, a1, a2, a3)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF0
	a5_938 = Mem981[sp_1020 + 0xFFFFFFFFFFFFFFF8:word64]
	branch true l00000000000154DC
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015498:
	Mem956[sp_1020 + 0x0000000000000030:byte] = (byte) (Mem915[sp_1020 + 0x0000000000000028:word64] & 1 | -4)
	branch fn00000000000164D0(sp_1020 + 0x0000000000000031, 15) < 0x0000000000000000 l0000000000015CB0
// DataOut: gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000154BC:
	a0 = inet_ntop(a0, a1, a2, a3)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF0
	a5_938 = Mem956[sp_1020 + 0xFFFFFFFFFFFFFFF8:word64]
	branch 10 == 0x0000000000000000 l0000000000015CB0
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000154DC:
	word64 sp_939 = sp_1020 + 0x0000000000000000
	Mem945[sp_939 + 8:word64] = a5_938
	a0 = DPB(a0, __asprintf_chk(a0, a1, 0x0000000000011A90, Mem945[sp_939:<unknown>]), 0)
	sp_1020 = sp_939 + 0xFFFFFFFFFFFFFFF8
	a5_1026 = Mem945[sp_939:word64]
	branch sp_939 == 33 l0000000000015CB0
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:64 a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015508:
	s1_1064 = Mem945[sp_939 + 0x0000000000000018:word64]
	branch s1_1064 == 0x0000000000000000 l0000000000015CB0
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:-1 a3:<invalid> a2:0x0000000000011A90 a1:1 a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CB0:
	branch (int64) Mem915[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CB8:
	word64 a0_933 = DPB(a0, __fprintf_chk(a0, a1, 0x0000000000011A98, Mem915[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153CC:
	branch s10_45 == 0x0000000000000000 l00000000000155A8
// DataOut: a5 gp s10 s2 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155A8:
	branch (int64) Mem176[sp_1020 + 28:int32] != 0x0000000000000000 l0000000000015944
// DataOut: a5 gp s10 s2 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015944:
	Mem895[sp_1020 + 8:word64] = a5_1026
	word64 a0_896 = fn00000000000169D8(gp, 10, s9_44)
	s1_1064 = a0_896
	s0_1025 = s2_1028
	a5_1026 = Mem895[sp_1020 + 8:word64]
	branch a0_896 != 0x0000000000000000 l0000000000015510
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015510:
	branch (int64) Mem176[sp_1020:int32] != 0x0000000000000000 l00000000000155D8
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155B0:
	branch (int64) Mem176[sp_1020:int32] == 0x0000000000000000 l000000000001598C
// DataOut: a5 gp s10 s2 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001598C:
	Mem888[sp_1020:word64] = a5_1026
	word64 a0_889 = fn00000000000169D8(gp, 0, s9_44)
	s1_1064 = a0_889
	branch a0_889 == 0x0000000000000000 l0000000000015964
// DataOut: gp s1 s10 s2 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159A4:
	s0_1025 = s2_1028
	a5_1026 = Mem888[sp_1020:word64]
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015518:
	Mem826[sp_1020:word64] = a5_1026
	a0 = strchr(a0, a1)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	a5_1026 = Mem826[sp_1020:word64]
	branch s1_1064 == 0x0000000000000000 l00000000000155D8
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015530:
	Mem831[sp_1020 + 28:word32] = 0x00000001
	branch s4_1065 == 0x0000000000000000 l0000000000015BEC
// DataOut: a5 gp s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:58 a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BEC:
	Mem834[sp_1020:word64] = a5_1026
	a0 = strchr(a0, a1)
	a0_789 = s1_1064
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	a5_718 = Mem834[sp_1020 + 0xFFFFFFFFFFFFFFF8:word64]
	branch s1_1064 != 0x0000000000000000 l0000000000015BB8
// DataOut: a0 a5 gp s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:1 a3:<invalid> a2:<invalid> a1:58 a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C04:
// DataOut: gp s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:1 a3:<invalid> a2:<invalid> a1:47 a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155B8:
	Mem881[sp_1020:word64] = a5_1026
	word64 a0_882 = fn00000000000169D8(gp, 2, s9_44)
	s1_1064 = a0_882
	branch a0_882 == 0x0000000000000000 l0000000000015964
// DataOut: gp s1 s10 s2 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015964:
	branch (int64) Mem176[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001596C:
	word64 a0_875 = DPB(a0, __fprintf_chk(a0, a1, 0x0000000000011A50, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155D0:
	a5_1026 = Mem881[sp_1020:word64]
	s0_1025 = s2_1028
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155D8:
	branch s4_1065 == 0x0000000000000000 l0000000000015BA0
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BA0:
	Mem811[sp_1020:word64] = a5_1026
	a0 = strchr(a0, a1)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	a0_789 = s1_1064
	a5_718 = Mem811[sp_1020:word64]
	branch s1_1064 == 0x0000000000000000 l00000000000155FC
// DataOut: a0 a5 gp s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BB8:
	Mem795[a0_789:byte] = 0x00
	s4_1065 = a0_789 + 1
	branch s4_1065 == 0x0000000000000000 l00000000000155FC
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:47 a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BC4:
// DataOut: gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:47 a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155DC:
	branch (int64) Mem176[sp_1020 + 28:int32] != 0x0000000000000000 l000000000001553C
// DataOut: gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001553C:
	branch (int64) Mem176[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015544:
	word64 a0_779 = DPB(a0, __fprintf_chk(a0, a1, 0x0000000000011AD0, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = fn0000000000015FCC(gp, 1)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155E4:
	word64 a0_752 = fn00000000000166F4(gp, sp_1020 + 28, s4_1065, 0)
	a5_718 = a0_752
	branch a0_752 < 0x0000000000000000 l0000000000015B6C
// DataOut: a5 gp s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B6C:
	branch (int64) Mem176[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B74:
	branch (int64) Mem176[sp_1020 + 28:int32] != 0x0000000000000000 l0000000000015CD8
// DataOut: a0 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CD8:
// DataOut: a0 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B80:
// DataOut: a0 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B88:
// DataOut: a0 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B8C:
	word64 a0_739 = DPB(a0, __fprintf_chk(a0, a1, 0x0000000000011A70, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155FC:
	branch (int64) Mem176[sp_1020 + 28:int32] == 0x0000000000000000 l00000000000159B0
// DataOut: a5 gp s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159B0:
	a0_182 = fn0000000000016D74(gp, s1_1064, a5_718, sp_1020 + 56, s0_1025)
// DataOut: a0 gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015604:
	a0_182 = fn00000000000175BC(gp, s1_1064, sp_1020 + 56)
// DataOut: a0 gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015618:
	branch a0_182 < 0x0000000000000000 l00000000000153D8
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001561C:
	branch (s0_1025 & 4294623231) != 0x0000000000000000 l0000000000015630
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001562C:
	s0_1025 = s0_1025 | 8
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015630:
	word64 a0_194 = DPB(a0, isatty(a0), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	branch 1 == 0x0000000000000000 l0000000000015644
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001563C:
	Mem694[gp + 2064:word32] = 0x00000001
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015644:
	branch (s0_1025 & 8) == 0x0000000000000000 l00000000000159C8
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159C8:
	branch (s0_1025 & 128) != 0x0000000000000000 l0000000000015D18
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D18:
	a0_194 = DPB(a0, __printf_chk(a0_194, 0x0000000000011C28, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159D0:
	branch (s0_1025 & 512) != 0x0000000000000000 l0000000000015D48
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D48:
	a0_194 = DPB(a0_194, __printf_chk(a0_194, 0x0000000000011C38, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159D8:
	branch (s0_1025 & 64) == 0x0000000000000000 l00000000000159FC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159E0:
	branch (int64) Mem176[sp_1020 + 28:int32] != 0x0000000000000000 l00000000000159FC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159E8:
	a0_194 = DPB(a0_194, __printf_chk(a0_194, 0x0000000000011C48, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159FC:
	branch (s0_1025 & 256) != 0x0000000000000000 l0000000000015D30
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D30:
	a0_194 = DPB(a0_194, __printf_chk(a0_194, 0x0000000000011C58, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A04:
	branch s0_1025 << 0x0000000E < 0x0000000000000000 l0000000000015D78
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D78:
	a0_194 = DPB(a0_194, __printf_chk(a0_194, 0x0000000000011C68, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A0C:
	branch (s0_1025 & 1024) == 0x0000000000000000 l0000000000015A2C
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A14:
	branch Mem176[sp_1020 + 224:word64] == 0x0000000000000000 l0000000000015A2C
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A1C:
	a0_194 = DPB(a0_194, __printf_chk(a0_194, 0x0000000000011C78, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A2C:
	branch s0_1025 << 0x00000014 >= 0x0000000000000000 l0000000000015A4C
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A34:
	branch Mem176[sp_1020 + 232:word64] == 0x0000000000000000 l0000000000015A4C
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A3C:
	a0_194 = DPB(a0_194, __printf_chk(a0_194, 0x0000000000011C88, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A4C:
	branch s0_1025 << 0x00000012 >= 0x0000000000000000 l0000000000015A80
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A54:
	word64 s2_634 = Mem176[sp_1020 + 240:word64]
	branch s2_634 == 0x0000000000000000 l0000000000015A80
// DataOut: gp s0 s2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A5C:
	word64 a0_637 = strchr(a0_194, a1)
	word64 sp_638 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	branch s2_634 == 0x0000000000000000 l0000000000015DA4
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015DA4:
	a0_194 = DPB(a0_637, __printf_chk(a0_637, 0x0000000000011CA8, Mem176[sp_638:<unknown>]), 0)
	sp_1020 = sp_638 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A70:
	a0_194 = DPB(a0_637, __printf_chk(a0_637, 0x0000000000011C98, Mem176[sp_638:<unknown>]), 0)
	sp_1020 = sp_638 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A80:
	branch s0_1025 << 0x00000013 >= 0x0000000000000000 l0000000000015AAC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A88:
	word64 a0_621 = strchr(a0_194, a1)
	word64 sp_622 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	branch sp_1020 == 0x0000000000000098 l0000000000015D90
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D90:
	a0_194 = DPB(a0_621, __printf_chk(a0_621, 0x0000000000011CC8, Mem176[sp_622:<unknown>]), 0)
	sp_1020 = sp_622 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A9C:
	a0_194 = DPB(a0_621, __printf_chk(a0_621, 0x0000000000011CB8, Mem176[sp_622:<unknown>]), 0)
	sp_1020 = sp_622 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AAC:
	branch (s0_1025 & 1) == 0x0000000000000000 l0000000000015ACC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AB4:
	branch Mem176[sp_1020 + 112:word64] == 0x0000000000000000 l0000000000015ACC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015ABC:
	a0_194 = DPB(a0_194, __printf_chk(a0_194, 0x0000000000011CD8, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015ACC:
	branch (s0_1025 & 2) != 0x0000000000000000 l0000000000015D60
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D60:
	a0_194 = DPB(a0_194, __printf_chk(a0_194, 0x0000000000011CE8, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AD4:
	branch (s0_1025 & 0x000000000000C000) != 0x000000000000C000 l00000000000153DC
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AE0:
	branch Mem176[sp_1020 + 128:word64] == 0x0000000000000000 l0000000000015AF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AE8:
	a0_194 = DPB(a0_194, __printf_chk(a0_194, 0x0000000000011CF8, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AF8:
	word64 s0_555 = Mem176[sp_1020 + 120:word64]
	branch s0_555 == 0x0000000000000000 l0000000000015B24
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B00:
	word64 a0_589 = strchr(a0_194, a1)
	word64 sp_590 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	branch s0_555 == 0x0000000000000000 l0000000000015E90
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E90:
	a0_194 = DPB(a0_589, __printf_chk(a0_589, 0x0000000000011D18, Mem176[sp_590:<unknown>]), 0)
	sp_1020 = sp_590 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B14:
	a0_194 = DPB(a0_589, __printf_chk(a0_589, 0x0000000000011D08, Mem176[sp_590:<unknown>]), 0)
	sp_1020 = sp_590 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B24:
	word64 s0_561 = Mem176[sp_1020 + 136:word64]
	branch s0_561 == 0x0000000000000000 l0000000000015B50
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B2C:
	word64 a0_574 = strchr(a0_194, a1)
	word64 sp_575 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	branch s0_561 == 0x0000000000000000 l0000000000015EA4
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015EA4:
	a0_194 = DPB(a0_574, __printf_chk(a0_574, 0x0000000000011D38, Mem176[sp_575:<unknown>]), 0)
	sp_1020 = sp_575 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B40:
	a0_194 = DPB(a0_574, __printf_chk(a0_574, 0x0000000000011D28, Mem176[sp_575:<unknown>]), 0)
	sp_1020 = sp_575 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B50:
	branch Mem176[sp_1020 + 144:word64] == 0x0000000000000000 l00000000000153DC
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B58:
	word64 a0_570 = DPB(a0_194, __printf_chk(a0_194, 0x0000000000011D48, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001564C:
	word64 s4_431
	word64 s0_360
	word64 s2_199 = (int64) Mem176[sp_1020 + 216:int32]
	branch (int64) Mem176[sp_1020 + 28:int32] != 0x0000000000000000 l000000000001590C
// DataOut: gp s0 s10 s2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001590C:
	branch s2_199 != 128 l0000000000015660
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015658:
	branch s2_199 == 32 l0000000000015914
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015914:
	branch Mem176[sp_1020 + 64:word64] == 0x0000000000000000 l0000000000015DDC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015DDC:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B10)
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001591C:
	s4_431 = 1
// DataOut: gp s0 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015660:
	branch s10_45 == 0x0000000000000000 l0000000000015860
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015860:
	word64 a0_455 = Mem176[sp_1020 + 88:word64]
	a0_194 = DPB(a0, strcmp(a0_194, a1), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	branch a0_455 == 0x0000000000000000 l0000000000015664
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015874:
	s4_431 = 0
	branch Mem176[sp_1020 + 0x0000000000000038:word64] == 0x0000000000000000 l0000000000015E14
// DataOut: gp s0 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E14:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B10)
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:0 s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015880:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011AF8)
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B10)
	branch s4_431 == 0x0000000000000000 l0000000000015E74
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E74:
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000158B8:
	branch (s0_1025 & 65544) == 65544 l0000000000015E64
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E64:
	s0_360 = 1
	branch Mem176[sp_1020 + 80:word64] != 0x0000000000000000 l0000000000015C2C
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E70:
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:1 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015664:
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015668:
	branch Mem176[sp_1020 + 72:word64] == 0x0000000000000000 l0000000000015690
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015674:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B28)
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:0x0000000000012000 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015690:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B38)
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B58)
	branch Mem176[sp_1020 + 96:word64] == 0x0000000000000000 l00000000000156EC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:0x0000000000012000 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000156D4:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B68)
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:0x0000000000012000 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000156EC:
	branch (s0_1025 & 65544) == 65544 l0000000000015C1C
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:0x0000000000012000 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C1C:
	branch Mem176[sp_1020 + 80:word64] == 0x0000000000000000 l00000000000156FC
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:0x0000000000012000 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C24:
	s0_360 = 0
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:0x0000000000012000 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C2C:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B78)
	branch s0_360 != 0x0000000000000000 l00000000000158C8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000158C8:
	branch Mem176[sp_1020 + 240:word64] == 0x0000000000000000 l00000000000158E8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000158D0:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011B88)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000158E8:
	branch Mem176[sp_1020 + 248:word64] == 0x0000000000000000 l00000000000157BC
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000158F0:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011BA0)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C44:
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000156FC:
	a0_194 = DPB(a0_194, putchar(a0_194), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	branch Mem176[sp_1020 + 240:word64] == 0x0000000000000000 l0000000000015728
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001570C:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011B88)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015728:
	branch Mem176[sp_1020 + 248:word64] == 0x0000000000000000 l000000000001574C
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015730:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011BA0)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001574C:
	branch Mem176[sp_1020 + 224:word64] == 0x0000000000000000 l000000000001576C
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015754:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011BB0)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001576C:
	branch Mem176[sp_1020 + 232:word64] == 0x0000000000000000 l000000000001578C
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015774:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011BC0)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001578C:
	branch (int64) Mem176[sp_1020 + 28:int32] == 0x0000000000000000 l00000000000157A0
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015794:
	branch 111 >=u (int64) Mem176[sp_1020 + 216:int32] l0000000000015E3C
// DataOut: a5 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E3C:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011BE0)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:111 a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157A0:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011BE0)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157BC:
	branch Mem176[sp_1020 + 120:word64] == 0x0000000000000000 l0000000000015C08
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C08:
	branch Mem176[sp_1020 + 136:word64] != 0x0000000000000000 l00000000000157C4
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C10:
	branch Mem176[sp_1020 + 144:word64] != 0x0000000000000000 l00000000000157C4
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C18:
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157C4:
	word64 a0_215 = DPB(a0_194, putchar(a0_194), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	branch Mem176[sp_1020 + 128:word64] == 0x0000000000000000 l00000000000157F0
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157D4:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011BF0)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157F0:
	branch Mem176[sp_1020 + 120:word64] == 0x0000000000000000 l0000000000015814
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157F8:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011C00)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015814:
	branch Mem176[sp_1020 + 136:word64] == 0x0000000000000000 l0000000000015838
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001581C:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011C10)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015838:
	branch Mem176[sp_1020 + 144:word64] == 0x0000000000000000 l00000000000153DC
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015840:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011C18)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153D0:
	branch (int64) Mem176[gp + -2028:int32] == 0x0000000000000000 l000000000001556C
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001556C:
	word64 a0_861 = DPB(0x0000000000011A08, fwrite(0x0000000000011A08, a1, a2, a3), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001538C:
	branch (int64) Mem0[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153D8:
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015394:
	word64 a0_1049 = DPB(0x00000000000119D8, fwrite(0x00000000000119D8, a1, a2, a3), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153DC:
	branch Mem0[sp_1020 + 328:word64] != Mem0[gp + -1936:word64] l0000000000015E8C
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E8C:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153EC:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015224:
	branch 118 <u a0 l0000000000015200
// DataOut: a5 gp s0 s10 s2 s3 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:-1 a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001522C:
	word64 a5_97 = (int64) Mem0[(a0 << 0x00000000 >>u 0x0000001E) + 0x00000000000102A0:int32]
	word64 sp_100
	word64 s5_101
	word64 a5_102
	word64 gp_103
	word64 s1_104
	word64 s0_105
	word64 s2_106
	word64 s3_107
	word64 s4_108
	word64 s6_109
	word64 s7_110
	word64 s8_111
	word64 s9_112
	word64 s10_113
	word64 s11_114
	word64 ra_115
	word64 a0_116
	word64 a1_117
	word64 a4_118
	word64 a3_119
	word64 a2_120
	word64 a0_121
	word64 a1_122
	word64 a2_123
	word64 a3_124
	word64 a4_125
	call a5_97 (retsize: 0;)
		uses: a0_58,a0_61,a1,a1_57,a2,a2_56,a3,a3_55,a4,a4_95,a5_97,dwLoc01A4_41,dwLoc01B8_50,dwLoc01C0_46,gp,qwLoc08_35,qwLoc10_15,qwLoc18_9,qwLoc20_17,qwLoc28_19,qwLoc30_21,qwLoc38_4,qwLoc40_23,qwLoc48_25,qwLoc50_27,qwLoc58_29,qwLoc60_31,qwLoc68_33,qwLoc78_11,ra,s0_42,s1_47,s10_45,s11,s2_40,s3_38,s4_48,s5,s6_43,s7_49,s8_36,s9_44,sp_62
		defs: a0_116,a0_121,a1_117,a1_122,a2_120,a2_123,a3_119,a3_124,a4_118,a4_125,a5_102,gp_103,ra_115,s0_105,s1_104,s10_113,s11_114,s2_106,s3_107,s4_108,s5_101,s6_109,s7_110,s8_111,s9_112,sp_100
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:118 a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000015180_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:<invalid> s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> ra:<invalid> s5:<invalid> s11:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn0000000000015EB8(word64 a0, word64 qwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 gp sp
// Preserved:
// Stack args: Stack +0000(64)
fn0000000000015EB8_entry:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Stack +0000(64)

l0000000000015EB8:
	word64 a0_23 = DPB(a0, __libc_start_main(a0, a1, fp + 8, a3, a4, a5, a6), 0)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000015EB8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp & -16 gp:0000000000013448 a5:a0 a0:<invalid> a1:<invalid> a2:fp + 8 a3:00000000000182E8 a4:0000000000018378 a6:fp & -16



void fn0000000000015EF0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0 a4 a5 t1
// Preserved: sp
fn0000000000015EF0_entry:
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015EF0:
	word64 a4_7 = 14
	branch a4_7 >=u 0x0000000000000007 l0000000000015F20
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015F0C:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000015F20
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000007 a4:14

l0000000000015F20:
	return
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000007 a4:14 t1:0x0000000000000000

l0000000000015F18:
	word64 sp_20
	word64 a0_21
	word64 a5_22
	word64 a4_23
	word64 t1_24
	word64 ra_25
	call 0x0000000000000000 (retsize: 0;)
		uses: a0_19,a4_7,a5_6,ra,sp_1,t1_18
		defs: a0_21,a4_23,a5_22,ra_25,sp_20,t1_24
	return
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000007 a4:14 t1:0x0000000000000000

fn0000000000015EF0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:<invalid> a5:0x0000000000000007 a4:14 t1:0x0000000000000000



void fn0000000000015F24()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0 a1 a5 t1
// Preserved: sp
fn0000000000015F24_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015F24:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000015F60
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015F4C:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000015F60
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000000 a1:0x0000000000000000

l0000000000015F60:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000000 a1:0x0000000000000000 t1:0x0000000000000000

l0000000000015F58:
	word64 sp_21
	word64 a0_22
	word64 a5_23
	word64 a1_24
	word64 t1_25
	call 0x0000000000000000 (retsize: 0;)
		uses: a0_20,a1_10,a5_7,sp_1,t1_19
		defs: a0_22,a1_24,a5_23,sp_21,t1_25
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000000 a1:0x0000000000000000 t1:0x0000000000000000

fn0000000000015F24_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:<invalid> a5:0x0000000000000000 a1:0x0000000000000000 t1:0x0000000000000000



void fn0000000000015F64(word64 gp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  gp
// LiveOut:
// Trashed: a0 a4 a5 t1
// Preserved: ra s0 sp
fn0000000000015F64_entry:
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000015F64:
	branch (int64) Mem0[gp + -1900:byte] != 0x0000000000000000 l0000000000015F84
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015F78:
	fn0000000000015EF0()
	Mem15[gp + 2196:byte] = 0x01
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> -16(fp):s0 -8(fp):ra

l0000000000015F84:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a0:<invalid> a4:14 t1:0x0000000000000000 -16(fp):s0 -8(fp):ra

fn0000000000015F64_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> ra:ra s0:s0 a0:<invalid> a4:14 t1:0x0000000000000000 -16(fp):s0 -8(fp):ra



void fn0000000000015F94()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0 a1 a5 t1
// Preserved: ra sp
fn0000000000015F94_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000015F94:
	branch Mem0[0x0000000000019E28:word64] != 0x0000000000000000 l0000000000015FA8
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000015FA8:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000015FA4
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a0:0x0000000000019E28
// LocalsOut: fp(64)

l0000000000015FB4:
	word64 sp_22
	word64 a5_23
	word64 a0_24
	word64 ra_25
	word64 a1_26
	word64 t1_27
	call 0x0000000000000000 (retsize: 0; depth: 16)
		uses: a0_3,a1,a5_19,qwLoc08_21,ra,sp_20,t1
		defs: a0_24,a1_26,a5_23,ra_25,sp_22,t1_27
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:0x0000000000000000 a0:0x0000000000019E28

l0000000000015FC8_thunk_fn0000000000015F24:
	fn0000000000015F24()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:0x0000000000000000 a0:0x0000000000019E28 ra:ra -8(fp):ra

l0000000000015FA4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a0:0x0000000000019E28

l0000000000015FA4_thunk_fn0000000000015F24:
	fn0000000000015F24()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a0:0x0000000000019E28

fn0000000000015F94_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:0x0000000000000000 a0:<invalid> a1:0x0000000000000000 t1:0x0000000000000000 ra:ra -8(fp):ra



word64 fn0000000000015FCC(word64 gp, word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 gp
// LiveOut: sp
// Trashed: a0 a1 a2 a3 ra s0 sp
// Preserved:
fn0000000000015FCC_entry:
// DataOut: a0 gp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000015FCC:
	branch a0 != 0x0000000000000000 l0000000000016090
// DataOut: a3 gp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000016090:
	word64 a0_78 = DPB(0x0000000000010BE0, fwrite(0x0000000000010BE0, a1, a2, a3), 0)
	word64 a0_85 = DPB(0x0000000000010C00, fwrite(0x0000000000010C00, a1, a2, a3), 0)
	word64 a0_92 = DPB(0x0000000000010C38, fwrite(0x0000000000010C38, a1, a2, a3), 0)
	word64 a0_99 = DPB(0x0000000000010C88, fwrite(0x0000000000010C88, a1, a2, a3), 0)
	word64 a0_106 = DPB(0x0000000000010CC8, fwrite(0x0000000000010CC8, a1, a2, a3), 0)
	word64 a0_113 = DPB(0x0000000000010D18, fwrite(0x0000000000010D18, a1, a2, a3), 0)
	word64 a0_120 = DPB(0x0000000000010D68, fwrite(0x0000000000010D68, a1, a2, a3), 0)
	word64 a0_127 = DPB(0x0000000000010D98, fwrite(0x0000000000010D98, a1, a2, a3), 0)
	word64 a0_134 = DPB(0x0000000000010DE8, fwrite(0x0000000000010DE8, a1, a2, a3), 0)
	word64 a0_141 = DPB(0x0000000000010E38, fwrite(0x0000000000010E38, a1, a2, a3), 0)
	word64 a0_145 = DPB(a0_141, fputc(a0_141, a1), 0)
	word64 a0_152 = DPB(0x0000000000010E88, fwrite(0x0000000000010E88, a1, a2, a3), 0)
	word64 a0_159 = DPB(0x0000000000010EA0, fwrite(0x0000000000010EA0, a1, a2, a3), 0)
	word64 a0_166 = DPB(0x0000000000010EE8, fwrite(0x0000000000010EE8, a1, a2, a3), 0)
	word64 a0_173 = DPB(0x0000000000010F28, fwrite(0x0000000000010F28, a1, a2, a3), 0)
	word64 a0_180 = DPB(0x0000000000010F68, fwrite(0x0000000000010F68, a1, a2, a3), 0)
	word64 a0_187 = DPB(0x0000000000010FA8, fwrite(0x0000000000010FA8, a1, a2, a3), 0)
	word64 a0_194 = DPB(0x0000000000010FF8, fwrite(0x0000000000010FF8, a1, a2, a3), 0)
	word64 a0_201 = DPB(0x0000000000011048, fwrite(0x0000000000011048, a1, a2, a3), 0)
	word64 a0_208 = DPB(0x0000000000011098, fwrite(0x0000000000011098, a1, a2, a3), 0)
	word64 a0_215 = DPB(0x00000000000110C8, fwrite(0x00000000000110C8, a1, a2, a3), 0)
	word64 a0_222 = DPB(0x0000000000011118, fwrite(0x0000000000011118, a1, a2, a3), 0)
	word64 a0_229 = DPB(0x0000000000011148, fwrite(0x0000000000011148, a1, a2, a3), 0)
	word64 a0_236 = DPB(0x0000000000011190, fwrite(0x0000000000011190, a1, a2, a3), 0)
	word64 a0_243 = DPB(0x00000000000111D8, fwrite(0x00000000000111D8, a1, a2, a3), 0)
	word64 a0_250 = DPB(0x0000000000011228, fwrite(0x0000000000011228, a1, a2, a3), 0)
	word64 a0_254 = DPB(a0_250, fputc(a0_250, a1), 0)
	word64 a0_261 = DPB(0x0000000000011258, fwrite(0x0000000000011258, a1, a2, a3), 0)
	word64 a0_268 = DPB(0x0000000000011268, fwrite(0x0000000000011268, a1, a2, a3), 0)
	word64 a0_275 = DPB(0x00000000000112C0, fwrite(0x00000000000112C0, a1, a2, a3), 0)
	word64 a0_282 = DPB(0x0000000000011300, fwrite(0x0000000000011300, a1, a2, a3), 0)
	word64 a0_289 = DPB(0x0000000000011348, fwrite(0x0000000000011348, a1, a2, a3), 0)
	word64 a0_296 = DPB(0x0000000000011388, fwrite(0x0000000000011388, a1, a2, a3), 0)
	word64 a0_308 = DPB(0x00000000000113C8, fwrite(0x00000000000113C8, a1, a2, a3), 0)
	return fp + 0xFFFFFFFFFFFFFEF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a3:<invalid> -16(fp):s0 -8(fp):ra

l0000000000015FE0:
	word64 a0_26 = DPB(0x0000000000011408, fwrite(0x0000000000011408, a1, a2, a3), 0)
	word64 a0_33 = DPB(0x0000000000011458, fwrite(0x0000000000011458, a1, a2, a3), 0)
	word64 a0_40 = DPB(0x0000000000011498, fwrite(0x0000000000011498, a1, a2, a3), 0)
	word64 a0_47 = DPB(0x00000000000114E0, fwrite(0x00000000000114E0, a1, a2, a3), 0)
	word64 a0_54 = DPB(0x0000000000011530, fwrite(0x0000000000011530, a1, a2, a3), 0)
	word64 a0_61 = DPB(0x0000000000011578, fwrite(0x0000000000011578, a1, a2, a3), 0)
	word64 a0_73 = DPB(0x00000000000115A8, fwrite(0x00000000000115A8, a1, a2, a3), 0)
	return fp + 0xFFFFFFFFFFFFFFD0
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a3:<invalid> -16(fp):s0 -8(fp):ra

fn0000000000015FCC_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a3:<invalid> a0:<invalid> a2:<invalid> a1:1 ra:<invalid> s0:<invalid> -16(fp):s0 -8(fp):ra



word64 fn00000000000163B0(word64 gp, word64 a0, ptr64 & s0Out, ptr64 & a0Out, ptr64 & s2Out, ptr64 & s5Out, ptr64 & s6Out, ptr64 & s8Out, ptr64 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 gp
// LiveOut: a0 s0 s2 s5 s6 s8 s9 sp
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
// Preserved:
fn00000000000163B0_entry:
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -00F0(0)

l00000000000163B0:
	word64 s3_37 = 16
	word64 s0_38 = 1
	word64 a0_44 = DPB(fp + -232, __sprintf_chk(fp + -232, a1, a2, 0x00000000000115C8, tLocF0), 0)
	word64 sp_103 = fp + 0xFFFFFFFFFFFFFF08
	word64 s1_101 = fp + 0xFFFFFFFFFFFFFF12
	word64 s9_49 = 15
	word64 s7_50 = 58
	a0_109 = a0_44
	s0_100 = s0_38
	branch 1 == s3_37 l000000000001646C
// DataOut: gp s0 s1 s10 s2 s3 s5 s6 s7 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000016430:
	word64 a0_109
	word64 s0_100
	a0_109 = DPB(a0_109, __sprintf_chk(a0_109, a1, a2, 0x00000000000115C8, Mem0[sp_103:<unknown>]), 0)
	sp_103 = sp_103 + 0xFFFFFFFFFFFFFFF8
	word64 a4_112 = s1_101 + 2
	branch (s0_100 & 1) == 0x0000000000000000 l00000000000164B8
// DataOut: a4 gp s0 s1 s10 s2 s3 s5 s6 s7 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -236(fp):0x3A -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000164B8:
	s1_101 = a4_112
// DataOut: gp s0 s1 s10 s2 s3 s5 s6 s7 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -236(fp):0x3A -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016454:
	branch s0_100 == s9_49 l00000000000164C4
// DataOut: a4 gp s0 s1 s10 s2 s3 s5 s6 s7 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -236(fp):0x3A -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000164C4:
	s1_101 = a4_112
// DataOut: gp s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -236(fp):0x3A -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016458:
	Mem116[s1_101 + 2:byte] = (byte) s7_50
	s1_101 = s1_101 + 3
// DataOut: gp s0 s1 s10 s2 s3 s5 s6 s7 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -236(fp):0x3A -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016464:
	s0_100 = (int64) ((word32) s0_100 + 1)
	branch s0_100 != s3_37 l0000000000016430
// DataOut: gp s0 s1 s10 s2 s3 s5 s6 s7 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -236(fp):0x3A -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001646C:
	Mem53[s1_101:byte] = 0x00
	word64 sp_55
	word64 s0_56
	word64 s1_57
	word64 s2_58
	word64 s3_59
	word64 s4_60
	word64 s5_61
	word64 s6_62
	word64 s7_63
	word64 s8_64
	word64 s9_65
	word64 ra_66
	word64 a5_67
	word64 gp_68
	word64 a4_69
	word64 a0_70
	word64 a3_71
	word64 a2_72
	word64 a1_73
	word64 a0_74
	word64 a1_75
	word64 a2_76
	word64 a3_77
	call __strdup (retsize: 0;)
		uses: a0_44,a0_54,a1,a1_35,a2,a2_34,a3_33,a4_29,a5_27,gp,qwLoc08_24,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_14,qwLoc40_16,qwLoc48_18,qwLoc50_20,qwLoc58_22,qwLoc68_39,ra,s0_38,s1_51,s2_40,s3_37,s4_30,s5_48,s6_47,s7_50,s8,s9_49,sp_52,tLocF0
		defs: a0_70,a0_74,a1_73,a1_75,a2_72,a2_76,a3_71,a3_77,a4_69,a5_67,gp_68,ra_66,s0_56,s1_57,s2_58,s3_59,s4_60,s5_61,s6_62,s7_63,s8_64,s9_65,sp_55
	branch Mem53[sp_55 + 136:word64] != Mem53[gp_68 + -1936:word64] l00000000000164CC
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -236(fp):0x3A -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000164CC:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -238(fp):0x00 -236(fp):0x3A -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016484:
	word64 s0_81
	*s0Out = Mem53[sp_55 + 224:word64]
	word64 s2_83
	*s2Out = Mem53[sp_55 + 208:word64]
	word64 s5_86
	*s5Out = Mem53[sp_55 + 184:word64]
	word64 s6_87
	*s6Out = Mem53[sp_55 + 176:word64]
	word64 s8_89
	*s8Out = Mem53[sp_55 + 160:word64]
	word64 s9_90
	*s9Out = Mem53[sp_55 + 152:word64]
	return sp_55 + 240
// DataOut: a0 gp s0 s10 s2 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -238(fp):0x00 -236(fp):0x3A -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000163B0_exit:
// DataOut: a0 s0 s2 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:<invalid> s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:<invalid> s1:<invalid> s6:<invalid> s5:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -238(fp):0x00 -236(fp):0x3A -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn00000000000164D0(word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1
// LiveOut: a0
// Trashed: a0 a1 a2
// Preserved: ra s0 s1 s2 sp
fn00000000000164D0_entry:
// DataOut: a0 a1 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000164D0:
	word64 a0_24
	word64 a0_19 = DPB(0x00000000000115D0, open(0x00000000000115D0, a1), 0)
	branch false l0000000000016544
// DataOut: a0 gp s0 s10 s2 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000016544:
	a0_24 = -1
// DataOut: a0 gp s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFD8 s0:a0 a0:<invalid> s2:a1 a1:0 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016500:
	word64 a0_41 = DPB(a0_19, close(DPB(a0_19, read(a0_19, a1, a2), 0)), 0)
	a0_24 = (int64) (word32) (0x0000000000000000 - (word64) ((int64) ((word32) (0x00000000000115D0 - a1)) != 0x0000000000000000))
// DataOut: a0 gp s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFD8 s0:a0 a0:<invalid> s2:a1 a1:0 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001652C:
	return a0_24
// DataOut: a0 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:<invalid> a0:<invalid> s2:a1 a1:<invalid> a2:a0 << 0x00000000 >>u 0x00000000 s1:<invalid> -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000164D0_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp s0:s0 a0:<invalid> s2:s2 a1:<invalid> a2:a0 << 0x00000000 >>u 0x00000000 s1:s1 ra:ra -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn000000000001654C(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 t1 t3
// Preserved: ra s0 s1 s2 s3 sp
fn000000000001654C_entry:
// DataOut: a0 a1 gp s4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l000000000001654C:
	word64 s0_38
	word64 t3_39
	word64 gp_40
	word64 t1_41
	word64 s2_42
	word64 s3_43
	word64 a1_44
	word64 a0_45
	word64 a3_46
	word64 ra_47
	word64 s1_48
	word64 a4_49
	word64 a5_50
	word64 a6_51
	word64 a7_52
	word64 a0_53
	word64 a1_54
	word64 a2_55
	word64 a2_56
	word64 a3_57
	word64 sp_37
	call __vasprintf_chk (retsize: 0; depth: 128)
		uses: a0_21,a1_19,a3_20,a4,a5,a6,a7,gp,qwLoc08_33,qwLoc10_31,qwLoc18_29,qwLoc20_27,qwLoc28_18,qwLoc38_23,qwLoc40_4,qwLoc48_25,qwLoc50_10,qwLoc58_12,qwLoc68_34,qwLoc70_35,qwLoc78_36,ra,s0,s1,s2_14,s3_16,sp_2,t1_8,t3_7
		defs: a0_45,a0_53,a1_44,a1_54,a2_55,a2_56,a3_46,a3_57,a4_49,a5_50,a6_51,a7_52,gp_40,ra_47,s0_38,s1_48,s2_42,s3_43,sp_37,t1_41,t3_39
	branch fp < 0xFFFFFFFFFFFFFF90 l00000000000165D8
// DataOut: gp s2 s3 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000165A8:
	word64 a0_100 = DPB(a0_53, fputs(a0_53, a1_54), 0)
	word64 sp_101 = fp + 0xFFFFFFFFFFFFFF78
	branch (int64) Mem0[gp_40 + -2032:int32] != 0x0000000000000000 l000000000001661C
// DataOut: gp s3 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -128 t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:1 a3:fp + -40 a0:fp + -112 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7
// LocalsOut: fp(64)

l000000000001661C:
	a0_100 = DPB(a0_53, fputs(a0_100, a1_54), 0)
	sp_101 = fp + 0xFFFFFFFFFFFFFF70
// DataOut: gp s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF78 t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:<invalid> a3:fp + -40 a0:<invalid> a5:<invalid> -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

l00000000000165BC:
	word64 a0_81 = DPB(a0_100, fputs(a0_100, a1_54), 0)
	word64 sp_82 = sp_101 + 0xFFFFFFFFFFFFFFF8
	branch (int64) Mem0[gp_40 + -2032:int32] != 0x0000000000000000 l0000000000016600
// DataOut: gp s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:<invalid> a3:fp + -40 a0:<invalid> a5:<invalid> -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

l0000000000016600:
	a0_81 = DPB(0x00000000000115E0, fwrite(0x00000000000115E0, a1_54, a2_56, a3_57), 0)
	sp_82 = sp_82 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:<invalid> a3:fp + -40 a0:<invalid> a5:<invalid> -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

l00000000000165D0:
	free(a0_81)
	sp_37 = sp_82 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:<invalid> a3:<invalid> a0:<invalid> a5:<invalid> a2:4 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

l00000000000165D8:
	branch Mem0[sp_37 + 24:word64] != Mem0[gp_40 + -1936:word64] l000000000001662C
// DataOut: gp s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:<invalid> a3:<invalid> a0:<invalid> a5:<invalid> a2:4 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

l000000000001662C:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:<invalid> a3:<invalid> a0:<invalid> a4:<invalid> a5:<invalid> a2:4 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

l00000000000165E4:
	return
// DataOut: gp s4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:<invalid> a3:<invalid> a0:<invalid> a4:<invalid> a5:<invalid> a2:4 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

fn000000000001654C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:fp + -40 s2:s2 s3:s3 a1:<invalid> a3:<invalid> a0:<invalid> a4:<invalid> a5:<invalid> ra:ra s0:s0 s1:s1 a2:4 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7



word64 fn0000000000016630(word64 gp, word64 a0, word64 a1, ptr64 & s1Out, ptr64 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut: a0 s1 sp
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 sp
// Preserved:
fn0000000000016630_entry:
// DataOut: a0 a1 gp s10 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0048(64) Local -0050(64)

l0000000000016630:
	word64 a5_33
	word64 a0_22 = __errno_location()
	Mem24[a0:word32] = 0x00000000
	word64 a0_29 = DPB(a0_22, strtol(a0_22), 0)
	branch qwLoc50 == 0x0000000000000000 l000000000001668C
// DataOut: a0 a5 gp s1 s10 s2 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l0000000000016680:
	branch a0 == qwLoc50 l000000000001668C
// DataOut: a0 a5 gp s1 s10 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l0000000000016684:
	branch (int64) Mem24[qwLoc50:byte] == 0x0000000000000000 l00000000000166C4
// DataOut: a0 gp s1 s10 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l00000000000166C4:
	a5_33 = (int64) Mem24[a0:int32]
	branch a5_33 != 0x0000000000000000 l0000000000016690
// DataOut: a0 a5 gp s10 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l00000000000166CC:
	word64 a4_53 = (int64) (word32) a0
	branch a0 != a4_53 l00000000000166E0
// DataOut: a4 a5 gp s10 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l00000000000166E0:
	a5_33 = -34
// DataOut: a5 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 a4:<invalid> a3:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l00000000000166D8:
	Mem55[a1:word32] = (word32) a4_53
// DataOut: a5 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 a4:<invalid> a3:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l000000000001668C:
	a5_33 = (int64) Mem24[a0:int32]
// DataOut: a5 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l0000000000016690:
	branch 0x0000000000000000 >= a5_33 l00000000000166E8
// DataOut: a5 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l00000000000166E8:
	a5_33 = -22
// DataOut: a5 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l0000000000016694:
	a5_33 = (int64) (word32) (0x0000000000000000 - a5_33)
// DataOut: a5 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l0000000000016698:
	word64 a0_37
	*a0Out = a5_33
	branch qwLoc48 != Mem24[gp + -1936:word64] l00000000000166F0
// DataOut: a0 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 a4:<invalid> a3:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64)

l00000000000166F0:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000166A8:
	word64 s1_40
	*s1Out = s3
	return fp + 0xFFFFFFFFFFFFFFF0
// DataOut: a0 gp s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000016630_exit:
// DataOut: a0 s1 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFF0 a5:<invalid> s2:<invalid> s3:<invalid> a0:<invalid> s1:s3 a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> ra:s1 s0:s2 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn00000000000166F4(word64 gp, word64 a0, word64 a1, word64 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: ra s0 s1 s2 s3 s4 sp
fn00000000000166F4_entry:
// DataOut: a0 a1 a2 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0050(64)

l00000000000166F4:
	word64 sp_34
	word64 a0_31
	word64 sp_2 = fp + -64
	word64 s1_21 = a0
	branch (int64) Mem0[a0:int32] != 0x0000000000000000 l00000000000167C8
// DataOut: gp s0 s1 s10 s3 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0050(64)

l000000000001672C:
	word64 a0_87 = strchr(a0, a1)
	sp_2 = fp + 0xFFFFFFFFFFFFFFB8
	branch a1 == 0x0000000000000000 l00000000000167C8
// DataOut: gp s0 s1 s10 s3 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(64)

l00000000000167C8:
	word64 a0_80
	sp_34 = fn0000000000016630(gp, a1, sp_2, out s1_21, out a0_80)
	branch a0_80 == 0x0000000000000000 l0000000000016794
// DataOut: gp s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:46 a0:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167D8:
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> s2:<invalid> a2:0 a3:<invalid> a4:<invalid> ra:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001673C:
	word64 a0_92 = DPB(a0_87, inet_pton(a0_87, a1, fp + 0xFFFFFFFFFFFFFFB8), 0)
	sp_34 = fp + 0xFFFFFFFFFFFFFFB0
	branch 2 == 0x0000000000000000 l000000000001678C
// DataOut: gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB8 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:46 a0:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0050(64)

l0000000000016750:
	word64 a0_104 = fn00000000000182B4((int64) dwLoc50)
	branch a0_104 == 0x0000000000000000 l0000000000016790
// DataOut: a0 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001675C:
	branch (a0_104 & 1) != 0x0000000000000000 l0000000000016778
// DataOut: a0 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016764:
	word64 a5_115 = (int64) (word32) (a0_104 >>u 1)
	branch a5_115 == 0x0000000000000000 l0000000000016790
// DataOut: a0 a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001676C:
	branch (a5_115 & 1) == 0x0000000000000000 l0000000000016820
// DataOut: a0 a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016820:
	a0_104 = (int64) (word32) (a0_104 >>u 2)
	branch a0_104 != 0x0000000000000000 l000000000001675C
// DataOut: a0 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016828:
// DataOut: gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016774:
	a0_104 = a5_115
// DataOut: a0 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016778:
	a0_104 = (int64) (word32) (a0_104 >>u 1)
	branch a0_104 == 0x0000000000000000 l0000000000016790
// DataOut: a0 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016784:
	branch (a0_104 & 1) != 0x0000000000000000 l0000000000016778
// DataOut: a0 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001678C:
// DataOut: gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016790:
// DataOut: gp s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016794:
	word64 a5_63 = (int64) Mem0[sp_34:int32]
	branch a2 == 0x0000000000000000 l00000000000167DC
// DataOut: a5 gp s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001679C:
	branch 32 >= a5_63 l00000000000167DC
// DataOut: a0 a5 gp s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167DC:
	a0_31 = a5_63
	branch a5_63 < 0x0000000000000000 l00000000000167C0
// DataOut: a0 a5 gp s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167E4:
	branch (int64) Mem0[s1_21:int32] != 0x0000000000000000 l00000000000167B8
// DataOut: a0 a5 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167EC:
	branch 32 < a5_63 l00000000000167C0
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167A8:
	branch (int64) Mem0[s1_21:int32] != 0x0000000000000000 l00000000000167B8
// DataOut: a0 a5 gp s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:32 a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167B0:
	Mem74[s1_21:word32] = 0x00000001
// DataOut: a0 a5 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167B8:
	a0_31 = a5_63
	branch 128 >= a5_63 l00000000000167F4
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167C0:
	a0_31 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167F4:
	branch Mem0[sp_34 + 8:word64] != Mem0[gp + -1936:word64] l000000000001682C
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001682C:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016800:
	return a0_31
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000166F4_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> s0:s0 s1:s1 s3:s3 s4:s4 a1:<invalid> a0:<invalid> a4:<invalid> ra:ra s2:s2 a2:<invalid> a3:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn0000000000016830(word64 gp, word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 gp
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: ra s0 sp
fn0000000000016830_entry:
// DataOut: a0 gp s10 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000016830:
	word64 a5_7 = Mem0[gp + -1936:word64]
	branch a0 == 0x0000000000000000 l0000000000016864
// DataOut: a0 gp s10 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0018(64)

l0000000000016864:
	branch a5_7 != Mem0[gp + -1936:word64] l0000000000016884
// DataOut: a0 gp s10 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 a5:<invalid> -32(fp):0x00000000 -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l0000000000016884:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 a5:<invalid> a4:<invalid> a0:<invalid> -32(fp):0x00000000 -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l0000000000016874:
	return 0
// DataOut: a0 gp s10 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 a5:<invalid> a4:<invalid> a0:<invalid> -32(fp):0x00000000 -24(fp):<invalid> -16(fp):s0 -8(fp):ra

fn0000000000016830_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a4:<invalid> a0:<invalid> ra:ra s0:s0 -32(fp):0x00000000 -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l000000000001684C:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 a5:<invalid> -32(fp):0x00000000 -24(fp):<invalid> -16(fp):s0 -8(fp):ra



void fn00000000000168B8(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: ra s0 sp
fn00000000000168B8_entry:
// DataOut: a0 a1 gp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000168B8:
	fn0000000000016830(gp, a1)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00000000000168B8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp s0:s0 a0:<invalid> ra:ra a5:<invalid> a4:<invalid> -16(fp):s0 -8(fp):ra



word64 fn00000000000168E4(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t4 t5
// Preserved: ra s0 s1 sp
fn00000000000168E4_entry:
// DataOut: a0 a1 gp s10 s3 s6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000168E4:
	word64 a0_108
	word64 a0_120
	word64 sp_111 = fp + -96
	branch a0 == 2 l0000000000016984
// DataOut: a0 a1 a7 gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000016984:
	a0_108 = fp + -88
	word64 a0_195 = DPB(fp + -88, getnameinfo(fp + -88, a1, a2, a3, a4, a5, a6), 0)
	sp_111 = fp + 0xFFFFFFFFFFFFFF98
// DataOut: a0 gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a4:<invalid> a5:2 a7:a0 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016908:
	branch a0 == 10 l0000000000016934
// DataOut: a1 a7 gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a4:<invalid> a5:2 a7:a0 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000016934:
	memcpy(fp + -64, a1, a2)
	a0_108 = fp + 0xFFFFFFFFFFFFFFB0
	word64 a0_175 = DPB(fp + 0xFFFFFFFFFFFFFFB0, getnameinfo(fp + 0xFFFFFFFFFFFFFFB0, a1, a2, a3, a4, a5, a6), 0)
	sp_111 = fp + 0xFFFFFFFFFFFFFF90
// DataOut: a0 gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a4:<invalid> a5:10 a7:a0 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016974:
	branch a0_108 != 0x0000000000000000 l0000000000016910
// DataOut: gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:0 a5:0 a7:a0 t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> a0:<invalid> -88(fp):(word16) (fp + -88) -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):(word16) (fp + -64) -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x00000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016978:
	word64 s0_114
	word64 a4_115
	word64 ra_117
	word64 s1_118
	word64 a5_119
	word64 a7_121
	word64 t5_122
	word64 a1_123
	word64 t4_124
	word64 t3_125
	word64 t1_126
	word64 a6_127
	word64 a3_128
	word64 a2_129
	word64 a0_130
	word64 a1_131
	word64 a2_132
	word64 a3_133
	word64 a4_134
	word64 a5_135
	word64 a6_136
	call __strdup (retsize: 0;)
		uses: a0_112,a0_99,a1,a1_106,a2,a2_100,a3,a3_101,a4,a4_109,a5,a5_110,a6,a6_102,a7_15,bLoc51_93,bLoc52_92,bLoc53_91,bLoc54_90,dwLoc30_97,gp,qwLoc08_9,qwLoc10_4,qwLoc18_11,qwLoc28_13,qwLoc38_96,qwLoc40_95,qwLoc48_94,qwLoc50_88,qwLoc58_87,ra,s0,s1,sp_111,t1_103,t3_104,t4_105,t5_107,wLoc48_98,wLoc58_89
		defs: a0_120,a0_130,a1_123,a1_131,a2_129,a2_132,a3_128,a3_133,a4_115,a4_134,a5_119,a5_135,a6_127,a6_136,a7_121,gp_116,ra_117,s0_114,s1_118,sp_113,t1_126,t3_125,t4_124,t5_122
// DataOut: a0 gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:0 a5:0 a7:a0 t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> a0:<invalid> -88(fp):(word16) (fp + -88) -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):(word16) (fp + -64) -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x00000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016910:
	a0_120 = 0
// DataOut: a0 gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a7:a0 t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> a0:<invalid> -88(fp):(word16) (fp + -88) -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):(word16) (fp + -64) -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x00000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016914:
	branch Mem0[sp_111 + 56:word64] != Mem0[gp + -1936:word64] l00000000000169D4
// DataOut: a0 gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a7:a0 a0:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> -88(fp):(word16) (fp + -88) -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):(word16) (fp + -64) -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x00000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000169D4:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a7:a0 a0:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> -88(fp):(word16) (fp + -88) -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):(word16) (fp + -64) -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x00000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016920:
	return a0_120
// DataOut: a0 gp s10 s3 s6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a7:a0 a0:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> -88(fp):(word16) (fp + -88) -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):(word16) (fp + -64) -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x00000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000168E4_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a4:<invalid> a5:<invalid> a7:a0 a0:<invalid> ra:ra s0:s0 s1:s1 t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> -88(fp):(word16) (fp + -88) -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):(word16) (fp + -64) -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x00000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn00000000000169D8(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: ra s0 s1 s2 s3 s4 sp
fn00000000000169D8_entry:
// DataOut: a0 a1 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0078(64)

l00000000000169D8:
	word64 a0_128
	word64 a0_111 = DPB(a0, getaddrinfo(a0, a1, fp + -104, fp + -112), 0)
	word64 sp_115 = fp + 0xFFFFFFFFFFFFFF88 + 0xFFFFFFFFFFFFFFF8
	branch a1 != 0x0000000000000000 l0000000000016AD8
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0078(64)

l0000000000016AD8:
	a0_128 = 0
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF88 a5:<invalid> a4:a1 a3:fp + -112 a2:fp + -104 a1:0 a0:<invalid> -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016A34:
	word64 s0_116 = qwLoc78
	branch qwLoc78 == 0x0000000000000000 l0000000000016AA0
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF88 a5:<invalid> a4:a1 a3:fp + -112 a2:fp + -104 a1:0 a0:<invalid> -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016A3C:
	word64 s3_79 = 2
// DataOut: gp s0 s1 s10 s2 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF88 a5:<invalid> a4:a1 a3:fp + -112 a2:fp + -104 a1:0 a0:<invalid> s0:<invalid> -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016A68:
	word64 a0_86 = (int64) Mem0[s0_116 + 4:int32]
	branch a0_86 != s3_79 l0000000000016A4C
// DataOut: a0 a1 gp s0 s1 s10 s2 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:a1 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016A4C:
	a0_111 = inet_ntop(a0_111, a1, a2, a3)
	sp_115 = sp_115 + 0xFFFFFFFFFFFFFFF8
	branch a0_86 != 0x0000000000000000 l0000000000016A88
// DataOut: gp s0 s1 s10 s2 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:a1 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016A74:
	a0_111 = inet_ntop(a0_111, a1, a2, a3)
	sp_115 = sp_115 + 0x0000000000000000
	branch a0_86 == 0x0000000000000000 l0000000000016A60
// DataOut: gp s0 s1 s10 s2 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:a1 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016A60:
	s0_116 = Mem0[s0_116 + 40:word64]
	branch s0_116 == 0x0000000000000000 l0000000000016A9C
// DataOut: gp s0 s1 s10 s2 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:a1 a3:64 a2:gp + -864 a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016A9C:
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:a1 a3:64 a2:gp + -864 a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016AA0:
	freeaddrinfo(a0_111)
	sp_115 = sp_115 + 0xFFFFFFFFFFFFFFF8
	a0_128 = 0
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:a1 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016A88:
	freeaddrinfo(a0_111)
	word64 s4_94
	word64 a5_95
	word64 a1_97
	word64 a4_98
	word64 a3_100
	word64 a2_101
	word64 ra_102
	word64 s0_103
	word64 s1_104
	word64 s2_105
	word64 s3_106
	word64 a0_107
	word64 a1_108
	word64 a2_109
	word64 a3_110
	call __strdup (retsize: 0;)
		uses: a0_88,a0_92,a1,a1_87,a2,a2_82,a3,a3_83,a4_9,a5_7,dwLoc64_12,gp,qwLoc08_18,qwLoc10_20,qwLoc18_22,qwLoc20_24,qwLoc28_26,qwLoc30_4,qwLoc38_27,qwLoc40_32,qwLoc48_31,qwLoc50_30,qwLoc58_29,qwLoc60_28,qwLoc68_10,qwLoc78,ra,s0_84,s1_78,s2_80,s3_79,s4,sp_91
		defs: a0_107,a0_99,a1_108,a1_97,a2_101,a2_109,a3_100,a3_110,a4_98,a5_95,gp_96,ra_102,s0_103,s1_104,s2_105,s3_106,s4_94,sp_93
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:a1 a3:64 a2:gp + -864 a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016AAC:
	branch Mem0[sp_115 + 56:word64] != Mem0[gp + -1936:word64] l0000000000016AE0
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:a1 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016AE0:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016AB8:
	return a0_128
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000169D8_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:s0 ra:ra s1:s1 s2:s2 s3:s3 s4:s4 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn0000000000016B38(word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
fn0000000000016B38_entry:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000016B38:
	branch 127 <u a0 l0000000000016B5C
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000016B5C:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:127

l0000000000016B40:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:127

fn0000000000016B38_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a0:<invalid>



word64 fn0000000000016B68(word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: ra sp
fn0000000000016B68_entry:
// DataOut: a0 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000016B68:
	word64 a4_104
	word64 a0_6 = fn00000000000182B4(a0)
	word64 a5_7 = (int64) (word32) (a0_6 >>u 24)
	branch a5_7 == 0x0000000000000000 l0000000000016BD8
// DataOut: a0 a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000016BD8:
	a4_104 = 0x00000000000115E8
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -8(fp):ra

l0000000000016B7C:
	branch a5_7 == 10 l0000000000016C2C
// DataOut: a0 a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -8(fp):ra

l0000000000016B84:
	word64 a4_41 = (int64) (word32) (a0_6 >>u 16)
	branch a5_7 == 100 l0000000000016C58
// DataOut: a0 a4 a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:10 a3:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C58:
	branch (a4_41 & 192) != 64 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:100 a0:<invalid> -8(fp):ra

l0000000000016C64:
	a4_104 = 0x0000000000011618
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:64 a0:<invalid> -8(fp):ra

l0000000000016B90:
	branch a5_7 == 127 l0000000000016C70
// DataOut: a0 a4 a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:100 a0:<invalid> -8(fp):ra

l0000000000016C70:
	a4_104 = 0x0000000000011630
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:127 a0:<invalid> -8(fp):ra

l0000000000016B98:
	word64 a2_60 = (int64) (word32) (a0_6 >>u 8)
	branch a5_7 == 169 l0000000000016C44
// DataOut: a0 a2 a3 a4 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:127 a0:<invalid> -8(fp):ra

l0000000000016C44:
	branch (a4_41 & 255) != 254 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:169 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C4C:
	a4_104 = 0x0000000000011640
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:254 a3:<invalid> a2:<invalid> a1:169 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BAC:
	branch a5_7 != 172 l0000000000016BF0
// DataOut: a0 a2 a3 a4 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:169 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BF0:
	branch a5_7 != 192 l0000000000016C7C
// DataOut: a0 a2 a3 a4 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:172 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C7C:
	branch a5_7 != 203 l0000000000016D18
// DataOut: a0 a3 a4 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D18:
	word64 a2_92 = 255
	branch a5_7 != a2_92 l0000000000016D4C
// DataOut: a0 a2 a3 a4 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:203 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D4C:
	branch a5_7 != 198 l0000000000016BC0
// DataOut: a4 a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D54:
	a4_104 = 0x0000000000011650
	branch (a4_41 & 254) != 18 l0000000000016BE0
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:198 a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D68:
	a4_104 = 0x0000000000011738
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:0x0000000000011650 a3:18 a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D20:
	a4_104 = 0x0000000000011710
	branch (a4_41 & 255) != a5_7 l0000000000016BE0
// DataOut: a0 a2 a4 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D2C:
	a4_104 = 0x0000000000011710
	branch (a2_60 & 255) != a2_92 l0000000000016BE0
// DataOut: a0 a2 a4 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:0x0000000000011710 a3:<invalid> a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D38:
	branch (a0_6 & a2_92) != (a2_60 & 255) l0000000000016BE0
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:0x0000000000011710 a3:<invalid> a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D40:
	a4_104 = 0x0000000000011720
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:0x0000000000011710 a3:<invalid> a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C84:
	branch (a4_41 & 255) != 0x0000000000000000 l0000000000016BC0
// DataOut: a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:203 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C88:
	branch (a2_60 & 255) != 113 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:203 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C90:
	a4_104 = 0x00000000000116C0
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:113 a3:<invalid> a2:203 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BF8:
	branch ((a4_41 | a2_60) & 255) == 0x0000000000000000 l0000000000016CD0
// DataOut: a3 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CD0:
	a4_104 = 0x0000000000011660
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C04:
	branch (a4_41 & 255) == 2 l0000000000016CDC
// DataOut: a3 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CDC:
	branch (a2_60 & 255) != 0x0000000000000000 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:2 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CE0:
	a4_104 = 0x0000000000011680
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:2 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C0C:
	branch (a4_41 & 255) == 51 l0000000000016C9C
// DataOut: a3 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:2 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C9C:
	branch (a2_60 & 255) != 100 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:51 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CA4:
	a4_104 = 0x00000000000116A0
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:100 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C14:
	branch (a4_41 & 255) == 88 l0000000000016CB0
// DataOut: a3 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:51 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CB0:
	branch (a2_60 & 255) == 99 l0000000000016D00
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:88 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D00:
	a4_104 = 0x00000000000116E0
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:99 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C1C:
	branch (a4_41 & 255) == 52 l0000000000016CEC
// DataOut: a3 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:88 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CEC:
	branch (a2_60 & 255) != 193 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:52 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CF4:
	a4_104 = 0x0000000000011708
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:193 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C24:
	branch (a4_41 & 255) != 168 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:52 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BB4:
	branch (a4_41 & 240) == 16 l0000000000016C2C
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:172 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C2C:
	return 0x0000000000011608
// DataOut: a0 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a0:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> -8(fp):ra

l0000000000016BC0:
	branch 15 <u (int64) ((word32) a5_7 + -224) l0000000000016CB8
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CB8:
	branch (a5_7 & 240) == 240 l0000000000016D0C
// DataOut: gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D0C:
	a4_104 = 0x0000000000011710
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:240 a3:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CC4:
	a4_104 = 0x0000000000011650
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:240 a3:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BCC:
	a4_104 = 0x0000000000011748
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:15 a2:<invalid> a1:<invalid> a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BE0:
	return a4_104
// DataOut: a0 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a0:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> -8(fp):ra

fn0000000000016B68_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a4:<invalid> ra:ra a0:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> -8(fp):ra



word64 fn0000000000016D74(word64 gp, word64 a0, word64 a1, word64 a2, word64 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 a3 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa3 fa4 fa5 t1 t3 t4 t5
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 sp
fn0000000000016D74_entry:
// DataOut: a0 a1 a2 a3 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -01C8(64) Local -01D0(0)

l0000000000016D74:
	word64 a0_104
	word64 a0_41 = memset(a0, a1, a2)
	word64 a0_111 = DPB(a0_41, inet_pton(a0_41, a1, fp + 0xFFFFFFFFFFFFFE40), 0)
	word64 sp_103 = fp + 0xFFFFFFFFFFFFFE30
	branch false l0000000000016E60
// DataOut: gp s1 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -01C8(64) Local -01D0(0)

l0000000000016E60:
	branch (int64) Mem0[gp + -2028:int32] != 0x0000000000000000 l0000000000016E20
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE30 a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:<invalid> a1:a0 s8:a3 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01D0(0)

l0000000000016E68:
	word64 a0_658 = DPB(a0_41, __fprintf_chk(a0_111, a1, 0x0000000000011788, tLoc01D0), 0)
	sp_103 = fp + 0xFFFFFFFFFFFFFE28
	a0_104 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE30 a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:<invalid> a1:a0 s8:a3 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016DDC:
	branch a1 < 0x0000000000000000 l0000000000016E88
// DataOut: gp s1 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE30 a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:<invalid> a1:a0 s8:a3 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -01C8(64)

l0000000000016E88:
	branch a3 << 0x0000000D >= 0x0000000000000000 l0000000000016EBC
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE30 a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:<invalid> a1:a0 s8:a3 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -01C8(64)

l0000000000016E94:
	word64 a0_645 = fn00000000000182B4((int64) dwLoc01C8)
	word64 a5_646 = (int64) (word32) (a0_645 >>u 24)
	branch a0_645 >= 0x0000000000000000 l0000000000016EBC
// DataOut: a5 gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE30 a5:a3 << 0x0000000D s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:32 a0:<invalid> a1:a0 s8:a3 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016EA8:
	branch 63 <u (int64) ((word32) a5_646 + -128) l0000000000016EBC
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE30 a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:8 a0:<invalid> a1:a0 s8:a3 a3:<invalid> a4:<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016EB8:
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE30 a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:24 a0:<invalid> a1:a0 s8:a3 a3:<invalid> a4:63 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016DE0:
	word64 a0_586 = a0
	word64 s0_587 = 3
// DataOut: a0 gp s0 s10 s2 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE30 a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:<invalid> a1:a0 s8:a3 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016DF0:
	a0_111 = strchr(a0_111, a1)
	sp_103 = sp_103 + 0xFFFFFFFFFFFFFFF8
	Mem596[sp_103 + 48:word64] = a0_586
	branch a0_586 == 0x0000000000000000 l0000000000017194
// DataOut: a0 gp s0 s10 s2 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:<invalid> a1:<invalid> s8:a3 s0:<invalid> s2:46 -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017194:
	word64 s2_624 = -1
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:<invalid> a1:46 s8:a3 s0:<invalid> s2:46 -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171A0:
	a0_111 = DPB(a0_111, __asprintf_chk(a0_111, a1, 0x00000000000117A8, Mem596[sp_103:<unknown>]), 0)
	sp_103 = sp_103 + 0xFFFFFFFFFFFFFFF8
	branch sp_103 + 48 == s2_624 l00000000000172BC
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:a1 a0:<invalid> a1:<invalid> s8:a3 s0:<invalid> s2:-1 s4:0x0000000000011000 s3:1 a3:<invalid> -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172BC:
// DataOut: a0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:0x00000000000117A8 s5:a1 a0:<invalid> a1:1 s8:a3 s0:<invalid> s2:-1 s4:0x0000000000011000 s3:1 a3:<invalid> -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171B8:
	s0_587 = (int64) ((word32) s0_587 + -1)
	branch s0_587 != 0x0000000000000000 l00000000000171A0
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:0x00000000000117A8 s5:a1 a0:<invalid> a1:1 s8:a3 s0:<invalid> s2:-1 s4:0x0000000000011000 s3:1 a3:<invalid> -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171C4:
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:0x00000000000117A8 s5:a1 a0:<invalid> a1:1 s8:a3 s0:<invalid> s2:-1 s4:0x0000000000011000 s3:1 a3:<invalid> -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E00:
	a0_586 = a0_586 + 1
	Mem620[sp_103 + 48:word64] = a0_586
	s0_587 = (int64) ((word32) s0_587 + -1)
	branch s0_587 != 0x0000000000000000 l0000000000016DF0
// DataOut: a0 gp s0 s10 s2 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:<invalid> a1:46 s8:a3 s0:<invalid> s2:46 -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E10:
	branch 32 >= a1 l0000000000016EBC
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:a1 a0:<invalid> a1:<invalid> s8:a3 s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 a3:<invalid> -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016EBC:
	word64 a0_147 = inet_ntop(a0_111, a1, a2, a3)
	sp_103 = sp_103 + 0xFFFFFFFFFFFFFFF8
	branch 2 == 0x0000000000000000 l0000000000017074
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016ED4:
	word64 sp_179
	word64 s7_180
	word64 a5_181
	word64 gp_182
	word64 s6_183
	word64 a2_184
	word64 s1_185
	word64 s5_186
	word64 a0_187
	word64 a1_188
	word64 s8_189
	word64 ra_190
	word64 s0_191
	word64 s2_192
	word64 s3_193
	word64 s4_194
	word64 a3_195
	word64 a0_196
	word64 a2_198
	word64 a4_199
	word64 a3_200
	call __strdup (retsize: 0;)
		uses: a0_147,a0_178,a1,a1_144,a2,a2_143,a3,a3_142,a4_133,a5_134,gp,qwLoc01A0_131,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra,s0_135,s1_136,s2_137,s3_138,s4_139,s5_140,s6_11,s7,s8_36,sp_148
		defs: a0_187,a0_196,a1_188,a1_197,a2_184,a2_198,a3_195,a3_200,a4_199,a5_181,gp_182,ra_190,s0_191,s1_185,s2_192,s3_193,s4_194,s5_186,s6_183,s7_180,s8_189,sp_179
	Mem201[s6_183:word64] = a0_187
	Mem204[sp_179 + 16:word32] = (word32) fn0000000000016830(gp_182, s5_186)
	Mem209[sp_179 + 56:word64] = 0x0000000000000000
	Mem210[sp_179 + 64:word64] = 0x0000000000000000
	Mem211[sp_179 + 72:word64] = 0x0000000000000000
	Mem212[sp_179 + 80:word64] = 0x0000000000000000
	Mem213[sp_179 + 88:word64] = 0x0000000000000000
	Mem214[sp_179 + 96:word32] = 0x00000000
	Mem215[sp_179 + 100:word16] = 0x0000
	Mem216[sp_179 + 102:byte] = 0x00
	a0_111 = inet_ntop(a0_196, a1, a2_198, a3_200)
	sp_103 = sp_179 + 0xFFFFFFFFFFFFFFF8
	branch 2 == 0x0000000000000000 l0000000000017300
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:47 a4:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017300:
// DataOut: a0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -456(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016F24:
	word64 sp_220
	word64 s7_221
	word64 a5_222
	word64 gp_223
	word64 s6_224
	word64 a2_225
	word64 s1_226
	word64 s5_227
	word64 a0_228
	word64 a1_229
	word64 s8_230
	word64 ra_231
	word64 s0_232
	word64 s2_233
	word64 s3_234
	word64 s4_235
	word64 a3_236
	word64 a0_237
	word64 a2_239
	word64 a4_240
	word64 a3_241
	call __strdup (retsize: 0;)
		uses: a0_217,a0_219,a1_197,a1_207,a2_198,a2_206,a3_200,a3_205,a4_199,a5_181,gp_182,qwLoc01A0_131,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_190,s0_191,s1_185,s2_192,s3_193,s4_194,s5_186,s6_183,s7_180,s8_189,sp_218
		defs: a0_228,a0_237,a1_229,a1_238,a2_225,a2_239,a3_236,a3_241,a4_240,a5_222,gp_223,ra_231,s0_232,s1_226,s2_233,s3_234,s4_235,s5_227,s6_224,s7_221,s8_230,sp_220
	Mem242[s6_224 + 48:word64] = a0_228
	word64 s0_243 = (int64) Mem242[sp_220 + 8:int32]
	Mem244[s6_224 + 160:word32] = (word32) s5_227
	word64 a5_248 = fn0000000000016830(gp_223, s5_227) ^ -1 | s0_243
	Mem253[sp_220 + 32:word32] = (word32) a5_248
	Mem254[sp_220 + 56:word64] = 0x0000000000000000
	Mem255[sp_220 + 64:word64] = 0x0000000000000000
	Mem256[sp_220 + 72:word64] = 0x0000000000000000
	Mem257[sp_220 + 80:word64] = 0x0000000000000000
	Mem258[sp_220 + 88:word64] = 0x0000000000000000
	Mem259[sp_220 + 96:word32] = 0x00000000
	Mem260[sp_220 + 100:word16] = 0x0000
	Mem261[sp_220 + 102:byte] = 0x00
	a0_111 = inet_ntop(a0_237, a1, a2_239, a3_241)
	sp_103 = sp_220 + 0xFFFFFFFFFFFFFFF8
	branch 2 == 0x0000000000000000 l00000000000172F4
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -456(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172F4:
// DataOut: a0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -456(fp):<invalid> -448(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016F84:
	word64 sp_265
	word64 s7_266
	word64 a5_267
	word64 gp_268
	word64 s6_269
	word64 a2_270
	word64 s1_271
	word64 s5_272
	word64 a0_273
	word64 a1_274
	word64 s8_275
	word64 ra_276
	word64 s0_277
	word64 s2_278
	word64 s3_279
	word64 s4_280
	word64 a3_281
	word64 a0_282
	word64 a2_284
	word64 a4_285
	word64 a3_286
	call __strdup (retsize: 0;)
		uses: a0_262,a0_264,a1_238,a1_251,a2_239,a2_250,a3_241,a3_249,a4_240,a5_248,gp_223,qwLoc01A0_131,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_231,s0_243,s1_226,s2_233,s3_234,s4_235,s5_227,s6_224,s7_221,s8_230,sp_263
		defs: a0_273,a0_282,a1_274,a1_283,a2_270,a2_284,a3_281,a3_286,a4_285,a5_267,gp_268,ra_276,s0_277,s1_271,s2_278,s3_279,s4_280,s5_272,s6_269,s7_266,s8_275,sp_265
	Mem287[s6_269 + 40:word64] = a0_273
	word64 s0_288 = (int64) Mem287[sp_265 + 8:int32]
	word64 a0_290 = fn0000000000016830(gp_268, s5_272)
	word64 a3_291 = (int64) Mem287[sp_265 + 32:int32]
	word64 s0_292 = a0_290 & s0_288
	Mem296[sp_265 + 24:word32] = (word32) s0_292
	word64 a0_297
	word64 s5_298
	word64 s6_299
	word64 sp_300 = fn0000000000017F04(gp_268, s0_292, s5_272, s0_292, a3_291, out a0_297, out s5_298, out s6_299)
	Mem301[s6_299 + 24:word64] = a0_297
	Mem306[sp_300 + 56:word64] = 0x0000000000000000
	Mem307[sp_300 + 64:word64] = 0x0000000000000000
	Mem308[sp_300 + 72:word64] = 0x0000000000000000
	Mem309[sp_300 + 80:word64] = 0x0000000000000000
	Mem310[sp_300 + 88:word64] = 0x0000000000000000
	Mem311[sp_300 + 96:word32] = 0x00000000
	Mem312[sp_300 + 100:word16] = 0x0000
	Mem313[sp_300 + 102:byte] = 0x00
	a0_111 = inet_ntop(a0_282, a1, a2_284, a3_286)
	sp_103 = sp_300 + 0xFFFFFFFFFFFFFFF8
	branch 2 == 0x0000000000000000 l00000000000172DC
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -456(fp):<invalid> -448(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172DC:
// DataOut: a0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> s3:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016FF4:
	word64 a5_350
	word64 s7_318
	word64 a5_319
	word64 a2_322
	word64 s1_323
	word64 s5_324
	word64 a0_325
	word64 a1_326
	word64 ra_328
	word64 s0_329
	word64 s2_330
	word64 s3_331
	word64 s4_332
	word64 a3_333
	word64 a4_337
	word64 a3_338
	word64 a2_336
	word64 a0_334
	word64 s6_321
	word64 s8_327
	call __strdup (retsize: 0;)
		uses: a0_314,a0_316,a1_283,a1_304,a2_284,a2_303,a3_286,a3_302,a4_285,a5_267,gp_268,qwLoc01A0_131,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_276,s0_292,s1_271,s2_278,s3_279,s4_280,s5_298,s6_299,s7_266,s8_275,sp_315
		defs: a0_325,a0_334,a1_326,a1_335,a2_322,a2_336,a3_333,a3_338,a4_337,a5_319,gp_320,ra_328,s0_329,s1_323,s2_330,s3_331,s4_332,s5_324,s6_321,s7_318,s8_327,sp_317
	word64 s0_339 = (int64) Mem313[sp_103 + 24:int32]
	Mem340[s6_321 + 32:word64] = a0_325
	Mem344[s6_321 + 184:word64] = fn0000000000016B68(s0_339)
	word64 a0_346 = fn00000000000182B4(s0_339)
	word64 a5_347 = (int64) (word32) (a0_346 >>u 24)
	branch a0_346 >= 0x0000000000000000 l0000000000017098
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> s3:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017098:
	a5_350 = 0x0000000000011758
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017024:
	branch 63 >=u (int64) ((word32) a5_347 + -128) l000000000001727C
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001727C:
	a5_350 = 0x0000000000011760
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:63 a4:<invalid> s0:<invalid> s3:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017030:
	branch 31 >=u (int64) ((word32) a5_347 + -192) l00000000000172A4
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:63 a4:<invalid> s0:<invalid> s3:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172A4:
	a5_350 = 0x0000000000011768
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:31 a4:<invalid> s0:<invalid> s3:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001703C:
	branch 14 <u (int64) ((word32) a5_347 + -224) l00000000000172B0
// DataOut: gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:31 a4:<invalid> s0:<invalid> s3:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172B0:
	a5_350 = 0x0000000000011778
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:31 a4:14 s0:<invalid> s3:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017048:
	a5_350 = 0x0000000000011770
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:31 a4:14 s0:<invalid> s3:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000170A0:
	word64 a5_362
	word64 a4_361
	Mem351[s6_321 + 192:word64] = a5_350
	word64 s2_352 = 32
	branch s5_324 == s2_352 l0000000000017158
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017158:
	Mem559[s6_321 + 168:word64] = a0_325
	Mem560[s6_321 + 176:word64] = a0_325
	a4_361 = s6_321 + 96
	a5_362 = 0x0000000000011780
// DataOut: a4 a5 gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000170AC:
	Mem408[sp_103 + 40:word32] = (word32) s0_339
	word64 a5_409 = 31
	branch s5_324 == a5_409 l0000000000017210
// DataOut: gp s0 s10 s2 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017210:
	a0_111 = inet_ntop(a0_334, a1, a2_336, a3_338)
	branch 2 == 0x0000000000000000 l00000000000172E8
// DataOut: gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:31 s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017228:
	word64 sp_497
	word64 s7_498
	word64 a5_499
	word64 s6_501
	word64 a2_502
	word64 s1_503
	word64 s5_504
	word64 a0_505
	word64 a1_506
	word64 s8_507
	word64 ra_508
	word64 s0_509
	word64 s2_510
	word64 s3_511
	word64 s4_512
	word64 a3_513
	word64 a0_514
	word64 a4_517
	call __strdup (retsize: 0;)
		uses: a0_494,a0_496,a1_335,a1_492,a2_336,a2_491,a3_338,a3_490,a4_349,a5_409,gp_320,qwLoc01A0_131,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_328,s0_339,s1_323,s2_352,s3_341,s4_332,s5_324,s6_321,s7_318,s8_327,sp_495
		defs: a0_505,a0_514,a1_506,a1_515,a2_502,a2_516,a3_513,a3_518,a4_517,a5_499,gp_500,ra_508,s0_509,s1_503,s2_510,s3_511,s4_512,s5_504,s6_501,s7_498,s8_507,sp_497
	word64 a5_519 = (int64) Mem408[sp_497 + 16:int32]
	word64 a4_520 = (int64) Mem408[sp_497 + 24:int32]
	Mem521[s6_501 + 168:word64] = a0_505
	word64 a5_523 = a5_519 ^ -1 | a4_520
	Mem528[sp_497 + 48:word32] = (word32) a5_523
	word64 a0_529 = inet_ntop(a0_514, a1, a2, a3)
	sp_103 = sp_497 + 0xFFFFFFFFFFFFFFF8
	branch 2 == 0x0000000000000000 l0000000000017074
// DataOut: gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:31 s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017260:
	word64 s7_533
	word64 a5_534
	word64 a2_537
	word64 s1_538
	word64 s5_539
	word64 a0_540
	word64 a1_541
	word64 ra_543
	word64 s0_544
	word64 s2_545
	word64 s3_546
	word64 s4_547
	word64 a3_548
	word64 a4_552
	word64 a3_553
	call __strdup (retsize: 0;)
		uses: a0_529,a0_531,a1_515,a1_526,a2_516,a2_525,a3_518,a3_524,a4_520,a5_523,gp_500,qwLoc01A0_131,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_508,s0_509,s1_503,s2_510,s3_511,s4_512,s5_504,s6_501,s7_498,s8_507,sp_530
		defs: a0_540,a0_549,a1_541,a1_550,a2_537,a2_551,a3_548,a3_553,a4_552,a5_534,gp_535,ra_543,s0_544,s1_538,s2_545,s3_546,s4_547,s5_539,s6_536,s7_533,s8_542,sp_532
	Mem555[s6_321 + 176:word64] = a0_540
	a4_361 = s6_321 + 96
	a5_362 = 0x0000000000012660
// DataOut: a4 a5 gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:47 a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001716C:
	Mem375[a4_361:byte] = (byte) (int64) Mem351[a5_362:byte]
	Mem377[a4_361 + 1:byte] = (byte) (int64) Mem375[a5_362 + 1:byte]
	branch s8_327 << 0x00000011 < 0x0000000000000000 l0000000000017288
// DataOut: gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017288:
	fn0000000000017B40(gp, (int64) Mem377[sp_103 + 8:int32], s6_321 + 64, s6_321 + 72, s6_321 + 80, s6_321 + 88)
// DataOut: gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:a3 << 0x00000011 s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -336(fp):<invalid> -335(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017184:
	branch (s8_327 & 1) != 0x0000000000000000 l00000000000171C8
// DataOut: gp s10 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 t1:<invalid> fa4:<invalid> fa5:<invalid> a6:<invalid> fa3:<invalid> s4:<invalid> t3:32 ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -336(fp):<invalid> -335(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171C8:
	word64 a0_389 = fn00000000000168E4(gp, 2, sp_103 + 8)
	Mem390[s6_321 + 56:word64] = a0_389
	branch a0_389 != 0x0000000000000000 l000000000001718C
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 & 1 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 t1:<invalid> fa4:<invalid> fa5:<invalid> a6:<invalid> fa3:<invalid> s4:<invalid> t3:32 ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -336(fp):<invalid> -335(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171DC:
	branch (int64) Mem390[gp + -2028:int32] != 0x0000000000000000 l0000000000016E20
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 & 1 a3:1025 a4:<invalid> s0:<invalid> s3:<invalid> s2:32 a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 fa4:<invalid> fa5:<invalid> fa3:<invalid> s4:<invalid> ra:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -336(fp):<invalid> -335(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171E4:
	herror(DPB(a0_334, __sprintf_chk(a0_334, a1, a2_336, 0x0000000000011830, Mem390[sp_103:<unknown>]), 0))
	sp_103 = sp_103 + 0xFFFFFFFFFFFFFFF0
	a0_104 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 & 1 a3:1025 a4:<invalid> s0:<invalid> s3:<invalid> s2:32 a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 fa4:<invalid> fa5:<invalid> fa3:<invalid> s4:<invalid> ra:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -336(fp):<invalid> -335(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001718C:
	a0_104 = 0
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 & 1 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> s4:<invalid> ra:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -336(fp):<invalid> -335(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000170B8:
	Mem424[sp_103 + 40:word32] = (word32) (s0_339 | 0x0000000001000000)
	a0_111 = inet_ntop(a0_334, a1, a2_336, a3_338)
	branch 2 == 0x0000000000000000 l00000000000172E8
// DataOut: gp s10 s2 s5 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:31 s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172E8:
	sp_103 = sp_103 + 0xFFFFFFFFFFFFFFF8
// DataOut: a0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172C4:
	word64 a0_129 = DPB(a0_111, __fprintf_chk(a0_111, a1, 0x00000000000117B0, Mem0[sp_103:<unknown>]), 0)
	abort()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x0000000000000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000170DC:
	word64 sp_428
	word64 s7_429
	word64 a5_430
	word64 s6_432
	word64 a2_433
	word64 s1_434
	word64 s5_435
	word64 a0_436
	word64 a1_437
	word64 s8_438
	word64 ra_439
	word64 s0_440
	word64 s2_441
	word64 s3_442
	word64 s4_443
	word64 a3_444
	word64 a0_445
	word64 a4_448
	call __strdup (retsize: 0;)
		uses: a0_425,a0_427,a1_335,a1_422,a2_336,a2_421,a3_338,a3_420,a4_349,a5_418,gp_320,qwLoc01A0_131,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_328,s0_419,s1_323,s2_352,s3_341,s4_332,s5_324,s6_321,s7_318,s8_327,sp_426
		defs: a0_436,a0_445,a1_437,a1_446,a2_433,a2_447,a3_444,a3_449,a4_448,a5_430,gp_431,ra_439,s0_440,s1_434,s2_441,s3_442,s4_443,s5_435,s6_432,s7_429,s8_438,sp_428
	word64 a5_450 = (int64) Mem424[sp_428 + 16:int32]
	Mem451[s6_432 + 168:word64] = a0_436
	Mem458[sp_428 + 48:word32] = (word32) fn00000000000182B4((int64) ((word32) fn00000000000182B4(a5_450 ^ -1 | (int64) Mem451[sp_428 + 24:int32]) + -1))
	word64 a0_463 = inet_ntop(a0_445, a1, a2, a3)
	sp_103 = sp_428 + 0xFFFFFFFFFFFFFFF8
	branch 2 == 0x0000000000000000 l0000000000017074
// DataOut: gp s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x0000000001000000 s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017074:
	branch (int64) Mem0[gp + -2028:int32] != 0x0000000000000000 l0000000000016E20
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:47 a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001707C:
	word64 a0_176 = DPB(0x00000000000117F8, fwrite(0x00000000000117F8, a1, a2, a3), 0)
	sp_103 = sp_103 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:47 a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017120:
	word64 sp_466
	word64 s7_467
	word64 a5_468
	word64 gp_469
	word64 s6_470
	word64 a2_471
	word64 s1_472
	word64 s5_473
	word64 a0_474
	word64 a1_475
	word64 s8_476
	word64 ra_477
	word64 s0_478
	word64 s2_479
	word64 s3_480
	word64 s4_481
	word64 a3_482
	word64 a0_483
	word64 a1_484
	word64 a2_485
	word64 a4_486
	word64 a3_487
	call __strdup (retsize: 0;)
		uses: a0_463,a0_465,a1_446,a1_461,a2_447,a2_460,a3_449,a3_459,a4_448,a5_453,gp_431,qwLoc01A0_131,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_439,s0_440,s1_434,s2_441,s3_442,s4_443,s5_435,s6_432,s7_429,s8_438,sp_464
		defs: a0_474,a0_483,a1_475,a1_484,a2_471,a2_485,a3_482,a3_487,a4_486,a5_468,gp_469,ra_477,s0_478,s1_472,s2_479,s3_480,s4_481,s5_473,s6_470,s7_467,s8_476,sp_466
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:47 a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E18:
	branch (int64) Mem596[gp + -2028:int32] == 0x0000000000000000 l0000000000017054
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:32 s6:a2 s1:<invalid> a2:<invalid> s5:a1 a0:<invalid> a1:<invalid> s8:a3 s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 a3:<invalid> -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017054:
	word64 a0_616 = DPB(a0_111, __fprintf_chk(a0_111, a1, 0x00000000000117D8, Mem596[sp_103:<unknown>]), 0)
	sp_103 = sp_103 + 0xFFFFFFFFFFFFFFF8
	a0_104 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:a1 a0:<invalid> a1:<invalid> s8:a3 s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 a3:<invalid> -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E20:
	a0_104 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:<invalid> a3:<invalid> a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -336(fp):<invalid> -335(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E24:
	branch Mem0[sp_103 + 360:word64] != Mem0[gp + -1936:word64] l00000000000172D8
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:<invalid> a3:<invalid> a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> ra:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -336(fp):<invalid> -335(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172D8:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:<invalid> a3:<invalid> a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> ra:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -336(fp):<invalid> -335(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E30:
	return a0_104
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:<invalid> a3:<invalid> a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> ra:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -336(fp):<invalid> -335(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000016D74_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> s6:s6 s1:s1 a2:<invalid> s5:s5 a0:<invalid> a1:<invalid> s8:s8 a3:<invalid> a4:<invalid> ra:ra s0:s0 s2:s2 s3:s3 s4:s4 s7:s7 a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x00000000 -388(fp):0x0000 -386(fp):0x00 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -376(fp):0x00000000 -372(fp):0x0000 -370(fp):0x00 -336(fp):<invalid> -335(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn000000000001730C(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: ra s0 s1 sp
fn000000000001730C_entry:
// DataOut: a0 a1 gp s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l000000000001730C:
	word64 a0_30
	word64 sp_2 = fp + -192
	branch 128 <u a0 l00000000000173BC
// DataOut: a0 a1 gp s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l000000000001732C:
	word64 a5_60 = fp + -184
	word64 a3_62 = 7
	word64 a2_63 = -1
	branch a0 == 0x0000000000000000 l000000000001736C
// DataOut: a0 a2 a3 a4 a5 gp s1 s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:128 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000017354:
	branch a3_62 >= a0 l00000000000173C4
// DataOut: a0 a2 a3 a4 a5 gp s1 s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:7 a2:-1 a1:255 a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000173C4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:7 a2:-1 a1:255 a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017358:
	Mem97[a5_60:byte] = (byte) a2_63
	a0 = (int64) ((word32) a0 + -8)
	a5_60 = a5_60 + 1
	branch 0x0000000000000000 < a0 l0000000000017354
// DataOut: a0 a2 a3 a4 a5 gp s1 s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:7 a2:-1 a1:255 a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l000000000001736C:
	word64 a0_71 = inet_ntop(a0, fp + -184, fp + -168, a3)
	sp_2 = fp + 0xFFFFFFFFFFFFFF38
	branch 10 == 0x0000000000000000 l00000000000173BC
// DataOut: gp s1 s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:7 a2:-1 a1:255 a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000173BC:
	a0_30 = 0
// DataOut: a0 gp s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> s1:a1 a3:128 a2:fp + -168 a1:fp + -184 a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017384:
	word64 a0_76 = memcpy(a0_71, fp + 0xFFFFFFFFFFFFFF40, a2)
	word64 s0_80
	word64 a4_81
	word64 ra_83
	word64 s1_84
	word64 a5_85
	word64 a1_87
	word64 a3_88
	word64 a2_89
	word64 a0_90
	word64 a1_91
	word64 a2_92
	word64 a3_93
	call __strdup (retsize: 0; depth: 208)
		uses: a0_76,a0_78,a1,a1_74,a2,a2_73,a3,a3_67,a4_65,a5_66,gp,qwLoc08_9,qwLoc10_4,qwLoc18_11,qwLoc28_13,qwLocB0_58,qwLocB8_57,ra,s0,s1_59,sp_77
		defs: a0_86,a0_90,a1_87,a1_91,a2_89,a2_92,a3_88,a3_93,a4_81,a5_85,gp_82,ra_83,s0_80,s1_84,sp_79
// DataOut: a0 gp s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF38 a4:<invalid> a5:<invalid> s1:a1 a3:128 a2:fp + -168 a1:fp + -184 a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001739C:
	branch Mem0[sp_2 + 152:word64] != Mem0[gp + -1936:word64] l00000000000173D0
// DataOut: a0 gp s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a0:<invalid> s1:a1 a3:128 a2:<invalid> a1:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000173D0:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a0:<invalid> s1:a1 a3:128 a2:<invalid> a1:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000173A8:
	return a0_30
// DataOut: a0 gp s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a0:<invalid> s1:a1 a3:128 a2:<invalid> a1:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

fn000000000001730C_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a4:<invalid> a5:<invalid> a0:<invalid> ra:ra s0:s0 s1:s1 a3:128 a2:<invalid> a1:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn00000000000173D4(word64 a0, word64 a1, ptr64 & s0Out, ptr64 & a0Out, ptr64 & s2Out, ptr64 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1
// LiveOut: a0 s0 s2 s3 sp
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 sp
// Preserved:
fn00000000000173D4_entry:
// DataOut: a0 a1 gp s1 s10 s3 s5 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0030(64)

l00000000000173D4:
	word64 sp_101 = fp + -48
	word64 s2_17 = (int64) Mem0[a0:byte]
	word64 s3_18 = (int64) Mem0[a0 + 1:byte]
	branch a1 == 128 l00000000000174DC
// DataOut: a0 a1 gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0018(64) Local -0028(64) Local -0030(64)

l00000000000174DC:
	word64 a0_137 = DPB(a0, memcmp(a0, 0x0000000000010880, a2), 0)
	branch a0 == 0x0000000000000000 l0000000000017538
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -48 a5:128 s0:a0 s2:<invalid> s3:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64) Local -0028(64) Local -0030(64)

l0000000000017538:
	word64 a0_148
	*a0Out = 0x0000000000011858
	word64 s0_149
	*s0Out = s1
	word64 s2_151
	*s2Out = s3
	word64 s3_153
	*s3Out = qwLoc30
	return fp + 0xFFFFFFFFFFFFFFF8
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFC8 a5:128 s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:16 a1:0x0000000000010880 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000174F4:
	a0 = DPB(a0, memcmp(a0_137, 0x0000000000010898, a2), 0)
	sp_101 = fp + 0xFFFFFFFFFFFFFFC0
	branch a0 != 0x0000000000000000 l000000000001747C
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFC8 a5:128 s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:16 a1:0x0000000000010880 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017508:
	word64 a0_145
	*a0Out = 0x0000000000011870
// DataOut: a0 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFC0 a5:128 s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:16 a1:0x0000000000010898 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017400:
	branch 95 < a1 l0000000000017474
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -48 a5:128 s0:a0 s2:<invalid> s3:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017474:
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -48 a5:95 s0:a0 s2:<invalid> s3:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001747C:
	word64 a0_90 = DPB(a0, memcmp(a0, 0x00000000000108B0, a2), 0)
	word64 sp_91 = sp_101 + 0xFFFFFFFFFFFFFFF8
	branch a0 == 0x0000000000000000 l000000000001755C
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:16 a1:0x0000000000010898 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001755C:
	word64 a0_122
	*a0Out = 0x0000000000011888
	word64 s0_123
	*s0Out = Mem0[sp_91 + 32:word64]
	word64 s2_125
	*s2Out = Mem0[sp_91 + 16:word64]
	word64 s3_126
	*s3Out = Mem0[sp_91 + 8:word64]
	return sp_91 + 48
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:12 a1:0x00000000000108B0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017490:
	word64 a0_95 = DPB(a0, memcmp(a0_90, 0x00000000000108C0, a2), 0)
	branch a0 == 0x0000000000000000 l0000000000017514
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:12 a1:0x00000000000108B0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017514:
	word64 a0_114
	*a0Out = 0x00000000000118A0
	word64 s0_115
	*s0Out = Mem0[sp_91 + 0x0000000000000018:word64]
	word64 s2_117
	*s2Out = Mem0[sp_91 + 0x0000000000000008:word64]
	word64 s3_118
	*s3Out = Mem0[sp_91:word64]
	return sp_91 + 0x0000000000000028
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:12 a1:0x00000000000108C0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000174A4:
	word64 a0_100 = DPB(a0, memcmp(a0_95, 0x00000000000108D0, a2), 0)
	sp_101 = sp_91 + 0xFFFFFFFFFFFFFFF0
	branch a0 != 0x0000000000000000 l0000000000017408
// DataOut: gp s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:12 a1:0x00000000000108C0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000174B8:
	word64 a0_104
	*a0Out = 0x00000000000118B8
	word64 s0_105
	*s0Out = Mem0[sp_91 + 0x0000000000000010:word64]
	word64 s2_107
	*s2Out = Mem0[sp_91:word64]
	word64 s3_108
	*s3Out = Mem0[sp_91 + 0xFFFFFFFFFFFFFFF8:word64]
	return sp_91 + 0x0000000000000020
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:12 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017408:
	word64 a5_58 = s2_17 << 0x00000008 | s3_18
	branch (a5_58 & 0x00000000FFFFE000) == 0x0000000000002000 l0000000000017580
// DataOut: a5 gp s10 s2 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:12 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017580:
	word64 a0_81
	*a0Out = 0x00000000000118D8
// DataOut: a0 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:<invalid> a3:0x0000000000002000 s1:0x0000000000010480 a2:12 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017420:
	branch (s2_17 & 254) == 252 l000000000001758C
// DataOut: a5 gp s10 s2 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:<invalid> a3:0x0000000000002000 s1:0x0000000000010480 a2:12 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001758C:
	word64 a0_79
	*a0Out = 0x00000000000118E8
// DataOut: a0 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:<invalid> a3:0x0000000000002000 a2:252 s1:0x0000000000010480 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001742C:
	branch (a5_58 & -64) == 65152 l0000000000017598
// DataOut: a5 gp s10 s2 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:<invalid> a3:0x0000000000002000 a2:252 s1:0x0000000000010480 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017598:
	word64 a0_77
	*a0Out = 0x0000000000011900
// DataOut: a0 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:<invalid> a3:0x0000000000002000 a2:<invalid> s1:0x0000000000010480 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001743C:
	branch s2_17 == 255 l00000000000175A4
// DataOut: a5 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:<invalid> a3:0x0000000000002000 a2:<invalid> s1:0x0000000000010480 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000175A4:
	word64 a0_75
	*a0Out = 0x0000000000011748
// DataOut: a0 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:255 a3:0x0000000000002000 a2:<invalid> s1:0x0000000000010480 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017444:
	word64 a0_71
	*a0Out = 0x0000000000011710
	branch (a5_58 & -2) == 8194 l00000000000175B0
// DataOut: a0 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:255 a3:0x0000000000002000 a2:<invalid> s1:0x0000000000010480 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000175B0:
	word64 a0_73
	*a0Out = 0x0000000000011918
// DataOut: a0 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:255 a3:<invalid> a2:<invalid> a0:0x0000000000011710 s1:0x0000000000010480 a1:0x00000000000108D0 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017458:
	word64 s0_46
	*s0Out = Mem0[sp_101 + 32:word64]
	word64 s2_48
	*s2Out = Mem0[sp_101 + 16:word64]
	word64 s3_49
	*s3Out = Mem0[sp_101 + 8:word64]
	return sp_101 + 48
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:<invalid> a3:<invalid> a0:<invalid> s1:0x0000000000010480 a2:<invalid> a1:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000173D4_exit:
// DataOut: a0 s0 s2 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s2:<invalid> s3:<invalid> s1:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> ra:<invalid> a4:<invalid> a3:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn00000000000175BC(word64 gp, word64 a0, word64 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a2 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa3 fa4 fa5 t1 t3 t4 t5
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
fn00000000000175BC_entry:
// DataOut: a0 a2 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -01B0(0)

l00000000000175BC:
	word64 a0_107
	word64 a0_43 = memset(a0, a1, a2)
	word64 a0_48 = DPB(a0_43, inet_pton(a0_43, a1, fp + 0xFFFFFFFFFFFFFE60), 0)
	word64 sp_106 = fp + 0xFFFFFFFFFFFFFE50
	branch false l00000000000177B4
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -01B0(0)

l00000000000177B4:
	branch (int64) Mem0[gp + -2028:int32] != 0x0000000000000000 l0000000000017770
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE50 a5:<invalid> s0:a2 a2:fp + 0xFFFFFFFFFFFFFE60 s4:a0 s2:a1 a0:<invalid> a1:a0 s6:a3 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01B0(0)

l00000000000177BC:
	word64 a0_444 = DPB(a0_43, __fprintf_chk(a0_48, a1, 0x0000000000011920, tLoc01B0), 0)
	sp_106 = fp + 0xFFFFFFFFFFFFFE48
	a0_107 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE50 a5:<invalid> s0:a2 a2:fp + 0xFFFFFFFFFFFFFE60 s4:a0 s2:a1 a0:<invalid> a1:a0 s6:a3 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017628:
	word64 s0_109
	word64 a0_110
	word64 s2_111
	word64 s5_112
	word64 s6_113
	word64 s8_114
	word64 s9_115
	word64 sp_116 = fn00000000000163B0(gp, fp + 0xFFFFFFFFFFFFFE58, out s0_109, out a0_110, out s2_111, out s5_112, out s6_113, out s8_114, out s9_115)
	Mem118[s0_109 + 8:word64] = a0_110
	word64 a0_124 = inet_ntop(a0_48, a1, a2, a3)
	sp_106 = sp_116 + 0xFFFFFFFFFFFFFFF8
	branch 10 == 0x0000000000000000 l0000000000017768
// DataOut: gp s0 s10 s2 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE50 a5:<invalid> s0:a2 a2:fp + 0xFFFFFFFFFFFFFE60 s4:a0 s2:a1 a0:<invalid> a1:a0 s6:a3 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017650:
	word64 s1_160
	word64 a5_161
	word64 s0_163
	word64 a2_164
	word64 s2_165
	word64 s4_166
	word64 a0_167
	word64 a1_168
	word64 s6_169
	word64 ra_170
	word64 s3_171
	word64 s5_172
	word64 s7_173
	word64 s8_174
	word64 s9_175
	word64 a3_176
	word64 a0_177
	word64 a4_181
	call __strdup (retsize: 0;)
		uses: a0_124,a0_158,a1,a1_121,a2,a2_120,a3,a3_119,a4,a5_7,gp,qwLoc08_26,qwLoc10_9,qwLoc18_4,qwLoc20_13,qwLoc28_28,qwLoc30_15,qwLoc38_30,qwLoc40_24,qwLoc48_32,qwLoc50_34,qwLoc58_36,qwLoc68_39,ra,s0_109,s1,s2_111,s3_117,s4_18,s5_112,s6_113,s7,s8_114,s9_115,sp_125
		defs: a0_167,a0_177,a1_168,a1_178,a2_164,a2_179,a3_176,a3_180,a4_181,a5_161,gp_162,ra_170,s0_163,s1_160,s2_165,s3_171,s4_166,s5_172,s6_169,s7_173,s8_174,s9_175,sp_159
	Mem182[s0_163:word64] = a0_167
	word64 s5_183 = 128
	branch s5_183 < s2_165 l00000000000177DC
// DataOut: gp s0 s10 s2 s3 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 a4:<invalid> s1:<invalid> s5:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000177DC:
	branch (int64) Mem182[gp + -2028:int32] != 0x0000000000000000 l0000000000017770
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:128 a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000177E4:
	word64 a0_434 = DPB(a0_177, __fprintf_chk(a0_177, a1, 0x0000000000011940, Mem182[sp_106:<unknown>]), 0)
	sp_106 = sp_106 + 0xFFFFFFFFFFFFFFF8
	a0_107 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:128 a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017664:
	branch s2_165 < 0x0000000000000000 l0000000000017868
// DataOut: gp s0 s10 s2 s3 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:128 a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017868:
// DataOut: gp s0 s10 s3 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:128 a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017668:
	s5_183 = s2_165
// DataOut: gp s0 s10 s3 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:128 a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001766C:
	Mem187[s0_163 + 160:word32] = (word32) s5_183
	word64 a0_190 = fn000000000001730C(gp, s5_183, sp_106 + 24)
	Mem191[s0_163 + 48:word64] = a0_190
	branch a0_190 == 0x0000000000000000 l00000000000178F8
// DataOut: gp s0 s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:<invalid> a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000178F8:
	branch (int64) Mem191[gp + -2028:int32] != 0x0000000000000000 l0000000000017770
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s1:<invalid> s9:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017900:
	word64 a0_423 = DPB(a0_177, __fprintf_chk(a0_177, a1, 0x0000000000011960, Mem191[sp_106:<unknown>]), 0)
	sp_106 = sp_106 + 0xFFFFFFFFFFFFFFF8
	a0_107 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s1:<invalid> s9:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017688:
	word64 a5_193 = sp_106 + 8
	word64 a2_195 = sp_106 + 40
	word64 a3_196 = sp_106 + 24
// DataOut: a2 a3 a5 gp s0 s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s1:<invalid> s9:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001769C:
	word64 a4_204 = (int64) Mem191[a5_193:byte] & (int64) Mem191[a3_196:byte]
	Mem205[a2_195:byte] = (byte) a4_204
	a5_193 = a5_193 + 1
	a3_196 = a3_196 + 1
	a2_195 = a2_195 + 1
	branch sp_106 + 24 != a5_193 l000000000001769C
// DataOut: a2 a3 a5 gp s0 s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000176BC:
	word64 a0_211 = inet_ntop(a0_177, a1, a2, a3)
	sp_106 = sp_106 + 0xFFFFFFFFFFFFFFF8
	branch 10 == 0x0000000000000000 l0000000000017768
// DataOut: gp s0 s10 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000176D4:
	word64 sp_214
	word64 s1_215
	word64 a5_216
	word64 s0_218
	word64 a2_219
	word64 s2_220
	word64 s4_221
	word64 a0_222
	word64 a1_223
	word64 s6_224
	word64 ra_225
	word64 s3_226
	word64 s5_227
	word64 s7_228
	word64 s8_229
	word64 s9_230
	word64 a3_231
	word64 a3_235
	word64 a4_236
	word64 a2_234
	word64 a1_233
	word64 a0_232
	call __strdup (retsize: 0;)
		uses: a0_211,a0_213,a1_178,a1_209,a2_179,a2_208,a3_180,a3_207,a4_204,a5_202,gp_162,qwLoc08_26,qwLoc10_9,qwLoc18_4,qwLoc20_13,qwLoc28_28,qwLoc30_15,qwLoc38_30,qwLoc40_24,qwLoc48_32,qwLoc50_34,qwLoc58_36,qwLoc68_39,ra_170,s0_163,s1_160,s2_184,s3_171,s4_166,s5_185,s6_169,s7_186,s8_192,s9_194,sp_212
		defs: a0_222,a0_232,a1_223,a1_233,a2_219,a2_234,a3_231,a3_235,a4_236,a5_216,gp_217,ra_225,s0_218,s1_215,s2_220,s3_226,s4_221,s5_227,s6_224,s7_228,s8_229,s9_230,sp_214
	Mem237[s0_218 + 32:word64] = a0_222
	word64 s0_239
	word64 a0_240
	word64 s2_241
	word64 s5_242
	word64 s8_244
	word64 s9_245
	word64 s6_243
	word64 sp_246 = fn00000000000163B0(gp, sp_214 + 40, out s0_239, out a0_240, out s2_241, out s5_242, out s6_243, out s8_244, out s9_245)
	Mem247[s0_239 + 16:word64] = a0_240
	word64 a0_251
	word64 s2_252
	word64 s3_253
	word64 s0_250
	word64 sp_254 = fn00000000000173D4(sp_246 + 40, s2_241, out s0_250, out a0_251, out s2_252, out s3_253)
	Mem255[s0_250 + 184:word64] = a0_251
	Mem259[s0_250 + 24:word64] = fn0000000000018118(gp, sp_254 + 40, s5_242)
	word64 a5_260 = 128
	branch s2_252 != a5_260 l0000000000017870
// DataOut: gp s0 s10 s2 s3 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017870:
	word64 sp_348
	word64 s1_349
	word64 a5_350
	word64 s0_352
	word64 a2_353
	word64 s2_354
	word64 s4_355
	word64 a0_356
	word64 a1_357
	word64 s6_358
	word64 ra_359
	word64 s3_360
	word64 s5_361
	word64 s7_362
	word64 a3_365
	word64 a0_366
	word64 a4_370
	word64 s8_363
	word64 s9_364
	call __strdup (retsize: 0;)
		uses: a0_232,a0_347,a1_233,a1_256,a2_219,a2_234,a3_231,a3_235,a4_236,a5_260,gp_217,qwLoc08_26,qwLoc10_9,qwLoc18_4,qwLoc20_13,qwLoc28_28,qwLoc30_15,qwLoc38_30,qwLoc40_24,qwLoc48_32,qwLoc50_34,qwLoc58_36,qwLoc68_39,ra_225,s0_250,s1_215,s2_252,s3_253,s4_221,s5_242,s6_243,s7_228,s8_244,s9_245,sp_254
		defs: a0_356,a0_366,a1_357,a1_367,a2_353,a2_368,a3_365,a3_369,a4_370,a5_350,gp_351,ra_359,s0_352,s1_349,s2_354,s3_360,s4_355,s5_361,s6_358,s7_362,s8_363,s9_364,sp_348
	Mem371[s0_352 + 168:word64] = a0_356
// DataOut: gp s0 s10 s2 s3 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:128 s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001787C:
	word64 a4_375 = (int64) Mem371[s8_363:byte]
	s8_363 = s8_363 + 1
	word64 a5_378 = (int64) Mem371[s9_364:byte] ^ -1 | a4_375
	Mem379[s8_363 + 4095:byte] = (byte) a5_378
	s9_364 = s9_364 + 1
	branch s3_360 != s8_363 l000000000001787C
// DataOut: gp s0 s10 s2 s3 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001789C:
	word64 a0_385 = inet_ntop(a0_366, a1, a2, a3)
	sp_106 = sp_348 + 0xFFFFFFFFFFFFFFF8
	branch 10 == 0x0000000000000000 l0000000000017768
// DataOut: gp s0 s10 s2 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017768:
	branch (int64) Mem118[gp + -2028:int32] == 0x0000000000000000 l0000000000017804
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 a4:<invalid> s1:<invalid> s5:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> t4:<invalid> t5:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017804:
	word64 a0_155 = DPB(0x00000000000117F8, fwrite(0x00000000000117F8, a1, a2, a3), 0)
	sp_106 = sp_106 + 0xFFFFFFFFFFFFFFF8
	a0_107 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 a4:<invalid> s1:<invalid> s5:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> t4:<invalid> t5:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000178B4:
	word64 s1_389
	word64 a5_390
	word64 a2_393
	word64 s2_394
	word64 s4_395
	word64 a0_396
	word64 a1_397
	word64 ra_399
	word64 s3_400
	word64 s5_401
	word64 s7_402
	word64 s8_403
	word64 s9_404
	word64 a3_405
	word64 a3_409
	word64 a4_410
	call __strdup (retsize: 0;)
		uses: a0_385,a0_387,a1_367,a1_383,a2_368,a2_382,a3_369,a3_381,a4_375,a5_378,gp_351,qwLoc08_26,qwLoc10_9,qwLoc18_4,qwLoc20_13,qwLoc28_28,qwLoc30_15,qwLoc38_30,qwLoc40_24,qwLoc48_32,qwLoc50_34,qwLoc58_36,qwLoc68_39,ra_359,s0_352,s1_349,s2_354,s3_360,s4_355,s5_361,s6_358,s7_362,s8_376,s9_380,sp_386
		defs: a0_396,a0_406,a1_397,a1_407,a2_393,a2_408,a3_405,a3_409,a4_410,a5_390,gp_391,ra_399,s0_392,s1_389,s2_394,s3_400,s4_395,s5_401,s6_398,s7_402,s8_403,s9_404,sp_388
	Mem412[s0_250 + 176:word64] = a0_396
	word64 a5_411 = 128
	branch (int64) (word32) (a5_411 - s2_394) != a5_411 l0000000000017728
// DataOut: a0 gp s0 s10 s2 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000178D0:
// DataOut: a0 gp s0 s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:128 s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017714:
	word64 a5_342 = Mem259[s0_250 + 32:word64]
	Mem345[s0_250 + 168:word64] = a5_342
	Mem346[s0_250 + 176:word64] = a5_342
// DataOut: a0 gp s0 s10 s2 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:128 s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017728:
// DataOut: a0 gp s0 s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017740:
	word64 a0_284 = DPB(a0_232, snprintf(a0_232, a1_233, 0x0000000000011990, Mem259[sp_254:<unknown>]), 0)
	sp_106 = sp_254 + 0xFFFFFFFFFFFFFFF8
	branch s6_243 << 0x00000011 < 0x0000000000000000 l00000000000178DC
// DataOut: gp s0 s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000178DC:
	fn0000000000017D10(gp, sp_106 + 8, s0_250 + 64, s0_250 + 72, s0_250 + 80, s0_250 + 88)
// DataOut: gp s0 s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:0x0000000000011990 s4:<invalid> s2:<invalid> a0:<invalid> a1:64 s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017758:
	branch (s6_243 & 1) != 0x0000000000000000 l0000000000017824
// DataOut: gp s0 s10 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> a6:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017824:
	word64 a0_297 = fn00000000000168E4(gp, 10, sp_106 + 8)
	Mem298[s0_250 + 56:word64] = a0_297
	branch a0_297 != 0x0000000000000000 l0000000000017760
// DataOut: gp s10 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> a6:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017838:
	branch (int64) Mem298[gp + -2028:int32] != 0x0000000000000000 l0000000000017770
// DataOut: gp s10 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:1025 s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> a6:0 fa4:<invalid> fa5:<invalid> fa3:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017840:
	herror(DPB(a0_232, __sprintf_chk(a0_284, a1_233, a2_234, 0x0000000000011830, Mem298[sp_106:<unknown>]), 0))
	sp_106 = sp_106 + 0xFFFFFFFFFFFFFFF0
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:1025 s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> a6:0 fa4:<invalid> fa5:<invalid> fa3:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017770:
	a0_107 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> a6:0 fa4:<invalid> fa5:<invalid> fa3:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017760:
	a0_107 = 0
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017774:
	branch Mem0[sp_106 + 312:word64] != Mem0[gp + -1936:word64] l0000000000017920
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> a3:<invalid> s3:<invalid> s5:<invalid> a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017920:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> a3:<invalid> s3:<invalid> a4:<invalid> s5:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017780:
	return a0_107
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> a3:<invalid> s3:<invalid> a4:<invalid> s5:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000175BC_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> s0:s0 a2:<invalid> s4:s4 s2:s2 a0:<invalid> a1:<invalid> s6:s6 a3:<invalid> s3:s3 a4:<invalid> ra:ra s1:s1 s5:s5 s7:s7 s8:s8 s9:s9 t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -400(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn0000000000017924(word64 gp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
fn0000000000017924_entry:
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0068(0)

l0000000000017924:
	word64 s0_148
	branch Mem0[gp + -2016:word64] == 0x0000000000000000 l00000000000179B8
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0068(0)

l00000000000179B8:
	s0_148 = (int64) Mem0[gp + -2024:int32]
	branch s0_148 != 0x0000000000000000 l000000000001795C
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0068(0)

l00000000000179C0:
	word64 a0_75 = dlopen(0x0000000000012A38, a1)
	Mem77[gp + 2080:word64] = 0x0000000000012A38
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017B14
// DataOut: a0 gp s0 s10 s3
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0068(0)

l0000000000017B14:
	s0_148 = -1
	word64 a0_168 = DPB(a0_75, __snprintf_chk(a0_75, a1, a2, a3, 0x0000000000012A58, tLoc68), 0)
	Mem170[gp + 2072:word32] = (word32) s0_148
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF98 a5:<invalid> s0:<invalid> s4:0x0000000000013000 a1:1 a0:<invalid> s3:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000179DC:
	word64 a0_81 = dlsym(a0_75, 0x0000000000012A78)
	Mem84[gp + 2152:word64] = 0x0000000000012A38
	word64 a0_87 = dlsym(a0_81, 0x0000000000012A90)
	Mem93[gp + 2144:word64] = 0x0000000000012A38
	word64 a0_94 = dlsym(a0_87, 0x0000000000012AA0)
	Mem100[gp + 2136:word64] = 0x0000000000012A38
	word64 a0_101 = dlsym(a0_94, 0x0000000000012AC0)
	Mem107[gp + 2120:word64] = 0x0000000000012A38
	word64 a0_108 = dlsym(a0_101, 0x0000000000012AD0)
	Mem114[gp + 2112:word64] = 0x0000000000012A38
	word64 a0_115 = dlsym(a0_108, 0x0000000000012AE8)
	Mem121[gp + 2104:word64] = 0x0000000000012A38
	word64 a0_122 = dlsym(a0_115, 0x0000000000012B00)
	Mem128[gp + 2096:word64] = 0x0000000000012A38
	word64 a0_129 = dlsym(a0_122, 0x0000000000012B18)
	Mem135[gp + 2088:word64] = 0x0000000000012A38
	dlsym(a0_129, 0x0000000000012B38)
	Mem138[gp + 2128:word64] = 0x0000000000012A38
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10 s4 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF98 a5:<invalid> s0:<invalid> s4:0x0000000000013000 a1:1 a0:<invalid> s3:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AAC:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AB0:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AB4:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AB8:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017ABC:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AC0:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017ACC:
	word64 a0_142 = Mem138[0x0000000000012B58:word64]
	word64 a1_143 = Mem138[0x0000000000012B60:word64]
	word64 a2_144 = Mem138[0x0000000000012B68:word64]
	word64 a3_145 = Mem138[0x0000000000012B70:word64]
	word64 a4_146 = (int64) Mem138[0x0000000000012B78:int32]
	Mem149[gp + -800:word64] = Mem138[0x0000000000012B50:word64]
	Mem150[gp + -792:word64] = a0_142
	Mem151[gp + -784:word64] = a1_143
	Mem152[gp + -776:word64] = a2_144
	Mem153[gp + -768:word64] = a3_145
	Mem154[gp + -760:word32] = (word32) a4_146
	s0_148 = -1
	Mem155[gp + 2072:word32] = (word32) s0_148
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AC4:
	Mem156[gp + 2072:word32] = 0x00000000
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001795C:
	branch (int64) Mem0[gp + -2028:int32] != 0x0000000000000000 l000000000001796C
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000017964:
	branch (int64) Mem0[gp + -800:byte] != 0x0000000000000000 l00000000000179A8
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000179A8:
	word64 a0_69 = DPB(a0, fputs(a0, a1), 0)
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001796C:
	s0_148 = (int64) Mem0[gp + -2024:int32]
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a1:<invalid> a0:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017970:
	return s0_148
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s4:<invalid> a1:<invalid> a0:<invalid> s3:<invalid> a3:<invalid> a4:<invalid> a2:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> a6:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000017924_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> s0:s0 ra:ra a0:<invalid> s1:s1 s2:s2 s3:s3 s4:s4 s5:s5 s6:s6 s7:s7 s8:s8 s9:s9 a1:<invalid> a3:<invalid> a4:<invalid> a2:<invalid> a6:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn0000000000017B40(word64 gp, word64 a0, word64 a1, word64 a2, word64 a3, word64 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 a3 a4 gp
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 fa3 fa4 fa5 t1
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 sp
fn0000000000017B40_entry:
// DataOut: a0 a1 a2 a3 a4 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0050(0)

l0000000000017B40:
	branch fn0000000000017924(gp) == 0x0000000000000000 l0000000000017BB0
// DataOut: gp s0 s1 s10 s2 s3 s4 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0050(0)

l0000000000017BB0:
	word64 a0_90 = fn00000000000182B4(a0)
	word64 a5_92 = Mem0[gp + -1944:word64]
	word64 sp_94
	word64 s0_95
	word64 s1_96
	word64 s2_97
	word64 s3_98
	word64 s4_99
	word64 ra_100
	word64 s5_101
	word64 s6_102
	word64 s7_103
	word64 a0_104
	word64 a1_105
	word64 a2_106
	word64 a3_107
	word64 a4_108
	word64 a5_109
	word64 gp_110
	word64 fa4_111
	word64 fa5_112
	word64 t1_113
	word64 fa3_114
	word64 a0_115
	word64 a1_116
	word64 a2_117
	call a5_92 (retsize: 0; depth: 80)
		uses: a0,a0_90,a1,a1,a2,a2,a3,a4,a5_92,fa3,fa4,fa5,gp,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra,s0_22,s1_28,s2_26,s3_24,s4_30,s5,s6,s7_93,sp_2,t1
		defs: a0_104,a0_115,a1_105,a1_116,a2_106,a2_117,a3_107,a4_108,a5_109,fa3_114,fa4_111,fa5_112,gp_110,ra_100,s0_95,s1_96,s2_97,s3_98,s4_99,s5_101,s6_102,s7_103,sp_94,t1_113
	word64 a5_118 = Mem0[gp_110 + -1952:word64]
	word64 sp_121
	word64 s0_122
	word64 s1_123
	word64 s2_124
	word64 s3_125
	word64 s4_126
	word64 ra_127
	word64 s5_128
	word64 s6_129
	word64 s7_130
	word64 a0_131
	word64 a1_132
	word64 a2_133
	word64 a3_134
	word64 a4_135
	word64 a5_136
	word64 fa4_138
	word64 fa5_139
	word64 t1_140
	word64 fa3_141
	word64 a0_142
	word64 a1_143
	word64 a2_144
	word64 gp_137
	call a5_118 (retsize: 0; depth: 80)
		uses: a0_115,a0_120,a1_116,a1_119,a2_106,a2_117,a3_107,a4_108,a5_118,fa3_114,fa4_111,fa5_112,gp_110,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_100,s0_95,s1_96,s2_97,s3_98,s4_99,s5_101,s6_102,s7_103,sp_94,t1_113
		defs: a0_131,a0_142,a1_132,a1_143,a2_133,a2_144,a3_134,a4_135,a5_136,fa3_141,fa4_138,fa5_139,gp_137,ra_127,s0_122,s1_123,s2_124,s3_125,s4_126,s5_128,s6_129,s7_130,sp_121,t1_140
	branch a0_131 == 0x0000000000000000 l0000000000017C3C
// DataOut: a0 gp s0 s1 s10 s2 s3 s4 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s3:a1 s2:a2 s1:a3 s4:a4 a5:<invalid> a0:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017BDC:
	word64 a5_336 = Mem0[gp_137 + -1992:word64]
	word64 a4_337 = 1
	Mem339[a0_131 + 76:word32] = (word32) a4_337
	word64 sp_341
	word64 s0_342
	word64 s1_343
	word64 s2_344
	word64 s3_345
	word64 s4_346
	word64 ra_347
	word64 s5_348
	word64 s6_349
	word64 s7_350
	word64 a0_351
	word64 a1_352
	word64 a2_353
	word64 a3_354
	word64 a4_355
	word64 a5_356
	word64 gp_357
	word64 fa4_358
	word64 fa5_359
	word64 t1_360
	word64 fa3_361
	word64 a0_362
	word64 a1_363
	word64 a2_364
	call a5_336 (retsize: 0; depth: 80)
		uses: a0_131,a0_142,a1_143,a1_340,a2_133,a2_144,a3_134,a4_337,a5_336,fa3_141,fa4_138,fa5_139,gp_137,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_127,s0_145,s1_123,s2_124,s3_125,s4_126,s5_128,s6_129,s7_130,sp_121,t1_140,tLoc50
		defs: a0_351,a0_362,a1_352,a1_363,a2_353,a2_364,a3_354,a4_355,a5_356,fa3_361,fa4_358,fa5_359,gp_357,ra_347,s0_342,s1_343,s2_344,s3_345,s4_346,s5_348,s6_349,s7_350,sp_341,t1_360
	branch a0_351 < 0x0000000000000000 l0000000000017B84
// DataOut: gp s0 s1 s10 s2 s3 s4 s6 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:16 a3:<invalid> a4:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017BFC:
	word64 a5_366 = Mem339[gp_357 + -1960:word64]
	word64 sp_369
	word64 s0_370
	word64 s1_371
	word64 s2_372
	word64 s3_373
	word64 s4_374
	word64 ra_375
	word64 s5_376
	word64 s6_377
	word64 s7_378
	word64 a0_379
	word64 a1_380
	word64 a2_381
	word64 a3_382
	word64 a4_383
	word64 a5_384
	word64 fa4_386
	word64 fa5_387
	word64 t1_388
	word64 fa3_389
	word64 a0_390
	word64 a1_391
	word64 a2_392
	word64 gp_385
	call a5_366 (retsize: 0; depth: 80)
		uses: a0_362,a0_368,a1_363,a1_367,a2_353,a2_364,a3_354,a4_355,a5_366,fa3_361,fa4_358,fa5_359,gp_357,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_347,s0_342,s1_343,s2_344,s3_345,s4_346,s5_348,s6_365,s7_350,sp_341,t1_360,tLoc50
		defs: a0_379,a0_390,a1_380,a1_391,a2_381,a2_392,a3_382,a4_383,a5_384,fa3_389,fa4_386,fa5_387,gp_385,ra_375,s0_370,s1_371,s2_372,s3_373,s4_374,s5_376,s6_377,s7_378,sp_369,t1_388
	branch a0_379 == 0x0000000000000000 l0000000000017C18
// DataOut: a0 gp s1 s10 s2 s3 s4 s6 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:<invalid> a4:1 s6:1 a3:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017C10:
	word64 sp_474
	word64 s0_475
	word64 s1_476
	word64 s2_477
	word64 s3_478
	word64 s4_479
	word64 ra_480
	word64 s5_481
	word64 s6_482
	word64 s7_483
	word64 a0_484
	word64 a1_485
	word64 a2_486
	word64 a3_487
	word64 a4_488
	word64 a5_489
	word64 fa4_491
	word64 fa5_492
	word64 t1_493
	word64 fa3_494
	word64 a0_495
	word64 a1_496
	word64 a2_497
	call __strdup (retsize: 0; depth: 80)
		uses: a0_379,a0_390,a1_380,a1_391,a2_381,a2_392,a3_382,a4_383,a5_384,fa3_389,fa4_386,fa5_387,gp_385,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_375,s0_370,s1_371,s2_372,s3_373,s4_374,s5_376,s6_377,s7_378,sp_369,t1_388,tLoc50
		defs: a0_484,a0_495,a1_485,a1_496,a2_486,a2_497,a3_487,a4_488,a5_489,fa3_494,fa4_491,fa5_492,gp_490,ra_480,s0_475,s1_476,s2_477,s3_478,s4_479,s5_481,s6_482,s7_483,sp_474,t1_493
	Mem498[s3_478:word64] = a0_484
// DataOut: gp s1 s10 s2 s4 s6 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:1 a4:1 s6:1 a3:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017C18:
	word64 a5_395 = Mem339[gp_385 + -1968:word64]
	word64 sp_397
	word64 s0_398
	word64 s1_399
	word64 s2_400
	word64 s3_401
	word64 s4_402
	word64 ra_403
	word64 s5_404
	word64 s6_405
	word64 s7_406
	word64 a0_407
	word64 a1_408
	word64 a2_409
	word64 a3_410
	word64 a4_411
	word64 a5_412
	word64 fa4_414
	word64 fa5_415
	word64 t1_416
	word64 fa3_417
	word64 a0_418
	word64 a1_419
	word64 a2_420
	word64 gp_413
	call a5_395 (retsize: 0; depth: 80)
		uses: a0_390,a0_396,a1_380,a1_391,a2_381,a2_392,a3_382,a4_383,a5_395,fa3_389,fa4_386,fa5_387,gp_393,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_375,s0_370,s1_371,s2_372,s3_373,s4_374,s5_376,s6_394,s7_378,sp_369,t1_388,tLoc50
		defs: a0_407,a0_418,a1_408,a1_419,a2_409,a2_420,a3_410,a4_411,a5_412,fa3_417,fa4_414,fa5_415,gp_413,ra_403,s0_398,s1_399,s2_400,s3_401,s4_402,s5_404,s6_405,s7_406,sp_397,t1_416
	branch a0_407 == 0x0000000000000000 l0000000000017C30
// DataOut: a0 gp s1 s10 s2 s4 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:1 a4:1 s6:1 a3:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017C28:
	word64 sp_449
	word64 s0_450
	word64 s1_451
	word64 s2_452
	word64 s3_453
	word64 s4_454
	word64 ra_455
	word64 s5_456
	word64 s6_457
	word64 s7_458
	word64 a0_459
	word64 a1_460
	word64 a2_461
	word64 a3_462
	word64 a4_463
	word64 a5_464
	word64 fa4_466
	word64 fa5_467
	word64 t1_468
	word64 fa3_469
	word64 a0_470
	word64 a1_471
	word64 a2_472
	call __strdup (retsize: 0; depth: 80)
		uses: a0_407,a0_418,a1_408,a1_419,a2_409,a2_420,a3_410,a4_411,a5_412,fa3_417,fa4_414,fa5_415,gp_413,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_403,s0_398,s1_399,s2_400,s3_401,s4_402,s5_404,s6_405,s7_406,sp_397,t1_416,tLoc50
		defs: a0_459,a0_470,a1_460,a1_471,a2_461,a2_472,a3_462,a4_463,a5_464,fa3_469,fa4_466,fa5_467,gp_465,ra_455,s0_450,s1_451,s2_452,s3_453,s4_454,s5_456,s6_457,s7_458,sp_449,t1_468
	Mem473[s2_452:word64] = a0_459
// DataOut: gp s1 s10 s4 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:1 a4:1 s6:1 a3:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017C30:
	word64 a5_423 = Mem339[gp_413 + -1976:word64]
	word64 sp_425
	word64 s0_426
	word64 s1_427
	word64 s2_428
	word64 s3_429
	word64 s4_430
	word64 ra_431
	word64 s5_432
	word64 s6_433
	word64 s7_434
	word64 a0_435
	word64 a1_436
	word64 a2_437
	word64 a3_438
	word64 a4_439
	word64 a5_440
	word64 fa4_442
	word64 fa5_443
	word64 t1_444
	word64 fa3_445
	word64 a0_446
	word64 a1_447
	word64 a2_448
	call a5_423 (retsize: 0; depth: 80)
		uses: a0_418,a0_424,a1_408,a1_419,a2_409,a2_420,a3_410,a4_411,a5_423,fa3_417,fa4_414,fa5_415,gp_421,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_403,s0_422,s1_399,s2_400,s3_401,s4_402,s5_404,s6_405,s7_406,sp_397,t1_416,tLoc50
		defs: a0_435,a0_446,a1_436,a1_447,a2_437,a2_448,a3_438,a4_439,a5_440,fa3_445,fa4_442,fa5_443,gp_441,ra_431,s0_426,s1_427,s2_428,s3_429,s4_430,s5_432,s6_433,s7_434,sp_425,t1_444
// DataOut: gp s1 s10 s4 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:1 a4:1 s6:1 a3:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017C3C:
	word64 a5_147 = Mem0[gp_137 + -1952:word64]
	word64 sp_150
	word64 s0_151
	word64 s1_152
	word64 s2_153
	word64 s3_154
	word64 s4_155
	word64 ra_156
	word64 s5_157
	word64 s6_158
	word64 s7_159
	word64 a0_160
	word64 a1_161
	word64 a2_162
	word64 a3_163
	word64 a4_164
	word64 a5_165
	word64 fa4_167
	word64 fa5_168
	word64 t1_169
	word64 fa3_170
	word64 a0_171
	word64 a1_172
	word64 a2_173
	word64 gp_166
	call a5_147 (retsize: 0; depth: 80)
		uses: a0_142,a0_149,a1_143,a1_148,a2_133,a2_144,a3_134,a4_135,a5_147,fa3_141,fa4_138,fa5_139,gp_146,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_127,s0_145,s1_123,s2_124,s3_125,s4_126,s5_128,s6_129,s7_130,sp_121,t1_140
		defs: a0_160,a0_171,a1_161,a1_172,a2_162,a2_173,a3_163,a4_164,a5_165,fa3_170,fa4_167,fa5_168,gp_166,ra_156,s0_151,s1_152,s2_153,s3_154,s4_155,s5_157,s6_158,s7_159,sp_150,t1_169
	word64 s0_174 = a0_160
	branch a0_160 == 0x0000000000000000 l0000000000017CF4
// DataOut: a0 gp s0 s1 s10 s4 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017CF4:
	word64 a5_308 = Mem0[gp_166 + -1952:word64]
	word64 sp_311
	word64 s0_312
	word64 s1_313
	word64 s2_314
	word64 s3_315
	word64 s4_316
	word64 ra_317
	word64 s5_318
	word64 s6_319
	word64 s7_320
	word64 a0_321
	word64 a1_322
	word64 a2_323
	word64 a3_324
	word64 a4_325
	word64 a5_326
	word64 fa4_328
	word64 fa5_329
	word64 t1_330
	word64 fa3_331
	word64 a0_332
	word64 a1_333
	word64 a2_334
	call a5_308 (retsize: 0; depth: 80)
		uses: a0_171,a0_310,a1_172,a1_309,a2_162,a2_173,a3_163,a4_164,a5_308,fa3_170,fa4_167,fa5_168,gp_166,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_156,s0_174,s1_152,s2_153,s3_154,s4_155,s5_157,s6_158,s7_159,sp_150,t1_169,tLoc50
		defs: a0_321,a0_332,a1_322,a1_333,a2_323,a2_334,a3_324,a4_325,a5_326,fa3_331,fa4_328,fa5_329,gp_327,ra_317,s0_312,s1_313,s2_314,s3_315,s4_316,s5_318,s6_319,s7_320,sp_311,t1_330
	s0_174 = a0_321
	branch a0_321 != 0x0000000000000000 l0000000000017C54
// DataOut: a0 gp s0 s1 s10 s4 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:2 s3:a1 s2:a2 s1:a3 s4:a4 a0:2 a5:<invalid> s7:<invalid> a1:16 a3:<invalid> a4:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017D0C:
// DataOut: gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:6 s3:a1 s2:a2 s1:a3 s4:a4 a0:6 a5:<invalid> s7:<invalid> a1:16 a3:<invalid> a4:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C54:
	word64 a5_178 = Mem0[gp_166 + -1984:word64]
	word64 a4_179 = 1
	Mem181[s0_174 + 76:word32] = (word32) a4_179
	word64 sp_183
	word64 s0_184
	word64 s1_185
	word64 s2_186
	word64 s3_187
	word64 s4_188
	word64 ra_189
	word64 s5_190
	word64 s6_191
	word64 s7_192
	word64 a0_193
	word64 a1_194
	word64 a2_195
	word64 a3_196
	word64 a4_197
	word64 a5_198
	word64 fa4_200
	word64 fa5_201
	word64 t1_202
	word64 fa3_203
	word64 a0_204
	word64 a1_205
	word64 a2_206
	word64 gp_199
	call a5_178 (retsize: 0; depth: 80)
		uses: a0_160,a0_171,a1_172,a1_182,a2_162,a2_173,a3_163,a4_179,a5_178,fa3_170,fa4_167,fa5_168,gp_175,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_156,s0_176,s1_152,s2_153,s3_154,s4_155,s5_157,s6_158,s7_177,sp_150,t1_169
		defs: a0_193,a0_204,a1_194,a1_205,a2_195,a2_206,a3_196,a4_197,a5_198,fa3_203,fa4_200,fa5_201,gp_199,ra_189,s0_184,s1_185,s2_186,s3_187,s4_188,s5_190,s6_191,s7_192,sp_183,t1_202
	word64 s2_207 = a0_193
	branch a0_193 == 0x0000000000000000 l0000000000017C94
// DataOut: a0 a4 gp s1 s10 s2 s4 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s3:a1 s2:a2 s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:16 a3:<invalid> a4:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017C74:
	word64 a0_250
	word64 a1_249
	word64 a0_247 = Mem181[a0_193 + 32:word64]
	a1_249 = a1_205
	a0_250 = a0_204
	branch a0_247 == 0x0000000000000000 l0000000000017C84
// DataOut: a0 a4 gp s1 s10 s2 s4 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s3:a1 s2:<invalid> s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:1 a3:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017C7C:
	word64 sp_283
	word64 s0_284
	word64 s1_285
	word64 s3_287
	word64 s4_288
	word64 ra_289
	word64 s5_290
	word64 s6_291
	word64 s7_292
	word64 a0_293
	word64 a1_294
	word64 a2_295
	word64 a3_296
	word64 a4_297
	word64 a5_298
	word64 fa4_300
	word64 fa5_301
	word64 t1_302
	word64 fa3_303
	word64 a2_306
	call __strdup (retsize: 0; depth: 80)
		uses: a0_204,a0_247,a1_194,a1_205,a2_195,a2_206,a3_196,a4_197,a5_198,fa3_203,fa4_200,fa5_201,gp_199,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_189,s0_184,s1_185,s2_207,s3_187,s4_188,s5_190,s6_191,s7_192,sp_183,t1_202,tLoc50
		defs: a0_293,a0_304,a1_294,a1_305,a2_295,a2_306,a3_296,a4_297,a5_298,fa3_303,fa4_300,fa5_301,gp_299,ra_289,s0_284,s1_285,s2_286,s3_287,s4_288,s5_290,s6_291,s7_292,sp_283,t1_302
	Mem307[s1_285:word64] = a0_293
// DataOut: a4 gp s10 s2 s4 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s3:a1 s2:<invalid> s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:1 a3:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017C84:
	branch (word64) ((real32) Mem181[s2_207 + 52:real32] == (real32) 0x0000000000000000) == 0x0000000000000000 l0000000000017CC8
// DataOut: a4 a5 gp s10 s2 s4 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s3:a1 s2:<invalid> s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:1 a3:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017CC8:
	word64 a0_281 = DPB(a0_250, __asprintf_chk(a0_250, a1_249, 0x0000000000012B80, tLoc50), 0)
// DataOut: gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s3:a1 s2:<invalid> s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:1 fa4:<invalid> fa5:(real32) 0x0000000000000000 a3:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C94:
	word64 t1_221 = Mem181[gp_199 + -1976:word64]
	word64 sp_223
	word64 s0_224
	word64 s1_225
	word64 s2_226
	word64 s3_227
	word64 s4_228
	word64 ra_229
	word64 s5_230
	word64 s6_231
	word64 s7_232
	word64 a0_233
	word64 a1_234
	word64 a2_235
	word64 a3_236
	word64 a4_237
	word64 a5_238
	word64 gp_239
	word64 fa4_240
	word64 fa5_241
	word64 t1_242
	word64 fa3_243
	word64 a0_244
	word64 a1_245
	word64 a2_246
	call t1_221 (retsize: 0;)
		uses: a0_204,a0_211,a1_194,a1_205,a2_195,a2_206,a3_196,a4_197,a5_198,fa3_203,fa4_200,fa5_201,gp_208,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_212,s0_213,s1_214,s2_215,s3_216,s4_217,s5_218,s6_219,s7_220,sp_222,t1_221
		defs: a0_233,a0_244,a1_234,a1_245,a2_235,a2_246,a3_236,a4_237,a5_238,fa3_243,fa4_240,fa5_241,gp_239,ra_229,s0_224,s1_225,s2_226,s3_227,s4_228,s5_230,s6_231,s7_232,sp_223,t1_242
	return
// DataOut: gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:<invalid> s3:a1 s2:<invalid> s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:1 a3:<invalid> fa4:<invalid> fa5:<invalid> a2:<invalid> fa3:<invalid> s6:1 a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017B84:
	return
// DataOut: gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s3:a1 s2:a2 s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:<invalid> s6:1 a3:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000017B40_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp s0:s0 s3:s3 s2:s2 s1:s1 s4:s4 ra:ra s5:s5 s6:s6 s7:s7 a0:<invalid> a5:<invalid> a1:<invalid> a4:<invalid> t1:<invalid> a3:<invalid> fa4:<invalid> fa5:<invalid> a2:<invalid> a6:<invalid> fa3:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn0000000000017D10(word64 gp, word64 a0, word64 a1, word64 a2, word64 a3, word64 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 a3 a4 gp
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 fa3 fa4 fa5 t1
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 sp
fn0000000000017D10_entry:
// DataOut: a0 a1 a2 a3 a4 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0050(0)

l0000000000017D10:
	word64 a0_32 = fn0000000000017924(gp)
	branch a0_32 == 0x0000000000000000 l0000000000017D80
// DataOut: gp s0 s10 s2 s3 s4 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0050(0)

l0000000000017D80:
	word64 a5_93 = Mem0[gp + -1944:word64]
	word64 sp_94
	word64 s0_95
	word64 s2_96
	word64 s3_97
	word64 s4_98
	word64 s5_99
	word64 ra_100
	word64 s1_101
	word64 s6_102
	word64 s7_103
	word64 a0_104
	word64 a1_105
	word64 a2_106
	word64 a3_107
	word64 a4_108
	word64 a5_109
	word64 gp_110
	word64 a6_111
	word64 fa4_112
	word64 fa5_113
	word64 t1_114
	word64 fa3_115
	word64 a0_116
	word64 a1_117
	word64 a2_118
	call a5_93 (retsize: 0; depth: 80)
		uses: a0,a0_32,a1,a1,a2,a2,a3,a4,a5_93,a6,fa3,fa4,fa5,gp,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra,s0_22,s1,s2_28,s3_26,s4_24,s5_30,s6,s7,sp_2,t1
		defs: a0_104,a0_116,a1_105,a1_117,a2_106,a2_118,a3_107,a4_108,a5_109,a6_111,fa3_115,fa4_112,fa5_113,gp_110,ra_100,s0_95,s1_101,s2_96,s3_97,s4_98,s5_99,s6_102,s7_103,sp_94,t1_114
	word64 a5_119 = Mem0[gp_110 + -1952:word64]
	word64 sp_122
	word64 s0_123
	word64 s2_124
	word64 s3_125
	word64 s4_126
	word64 s5_127
	word64 ra_128
	word64 s1_129
	word64 s6_130
	word64 s7_131
	word64 a0_132
	word64 a1_133
	word64 a2_134
	word64 a3_135
	word64 a4_136
	word64 a5_137
	word64 a6_139
	word64 fa4_140
	word64 fa5_141
	word64 t1_142
	word64 fa3_143
	word64 a0_144
	word64 a1_145
	word64 a2_146
	word64 gp_138
	call a5_119 (retsize: 0; depth: 80)
		uses: a0_116,a0_121,a1_117,a1_120,a2_106,a2_118,a3_107,a4_108,a5_119,a6_111,fa3_115,fa4_112,fa5_113,gp_110,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_100,s0_95,s1_101,s2_96,s3_97,s4_98,s5_99,s6_102,s7_103,sp_94,t1_114
		defs: a0_132,a0_144,a1_133,a1_145,a2_134,a2_146,a3_135,a4_136,a5_137,a6_139,fa3_143,fa4_140,fa5_141,gp_138,ra_128,s0_123,s1_129,s2_124,s3_125,s4_126,s5_127,s6_130,s7_131,sp_122,t1_142
	branch a0_132 == 0x0000000000000000 l0000000000017E18
// DataOut: a0 gp s0 s1 s10 s2 s3 s4 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a0:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017DA0:
	word64 a3_354 = Mem0[gp_138 + -2000:word64]
	word64 a6_357 = 1
	Mem358[a0_132 + 76:word32] = (word32) a6_357
	word64 sp_361
	word64 s0_362
	word64 s2_363
	word64 s3_364
	word64 s4_365
	word64 s5_366
	word64 ra_367
	word64 s1_368
	word64 s6_369
	word64 s7_370
	word64 a0_371
	word64 a1_372
	word64 a2_373
	word64 a3_374
	word64 a4_375
	word64 a5_376
	word64 gp_377
	word64 a6_378
	word64 fa4_379
	word64 fa5_380
	word64 t1_381
	word64 fa3_382
	word64 a0_383
	word64 a1_384
	word64 a2_385
	call a3_354 (retsize: 0; depth: 80)
		uses: a0_132,a0_144,a1_145,a1_359,a2_146,a2_360,a3_354,a4_355,a5_356,a6_357,fa3_143,fa4_140,fa5_141,gp_138,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_128,s0_123,s1_147,s2_124,s3_125,s4_126,s5_127,s6_130,s7_131,sp_122,t1_142,tLoc50
		defs: a0_371,a0_383,a1_372,a1_384,a2_373,a2_385,a3_374,a4_375,a5_376,a6_378,fa3_382,fa4_379,fa5_380,gp_377,ra_367,s0_362,s1_368,s2_363,s3_364,s4_365,s5_366,s6_369,s7_370,sp_361,t1_381
	branch a0_371 < 0x0000000000000000 l0000000000017D54
// DataOut: gp s0 s1 s10 s2 s3 s4 s5 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:16 a0:12 s1:12 a3:<invalid> a4:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017DD8:
	word64 a5_387 = Mem358[gp_377 + -1960:word64]
	word64 sp_390
	word64 s0_391
	word64 s2_392
	word64 s3_393
	word64 s4_394
	word64 s5_395
	word64 ra_396
	word64 s1_397
	word64 s6_398
	word64 s7_399
	word64 a0_400
	word64 a1_401
	word64 a2_402
	word64 a3_403
	word64 a4_404
	word64 a5_405
	word64 a6_407
	word64 fa4_408
	word64 fa5_409
	word64 t1_410
	word64 fa3_411
	word64 a0_412
	word64 a1_413
	word64 a2_414
	word64 gp_406
	call a5_387 (retsize: 0; depth: 80)
		uses: a0_383,a0_389,a1_384,a1_388,a2_373,a2_385,a3_374,a4_375,a5_387,a6_378,fa3_382,fa4_379,fa5_380,gp_377,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_367,s0_362,s1_368,s2_363,s3_364,s4_365,s5_366,s6_369,s7_386,sp_361,t1_381,tLoc50
		defs: a0_400,a0_412,a1_401,a1_413,a2_402,a2_414,a3_403,a4_404,a5_405,a6_407,fa3_411,fa4_408,fa5_409,gp_406,ra_396,s0_391,s1_397,s2_392,s3_393,s4_394,s5_395,s6_398,s7_399,sp_390,t1_410
	branch a0_400 == 0x0000000000000000 l0000000000017DF4
// DataOut: a0 gp s0 s10 s2 s3 s4 s5 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017DEC:
	word64 sp_499
	word64 s0_500
	word64 s2_501
	word64 s3_502
	word64 s4_503
	word64 s5_504
	word64 ra_505
	word64 s1_506
	word64 s6_507
	word64 s7_508
	word64 a0_509
	word64 a1_510
	word64 a2_511
	word64 a3_512
	word64 a4_513
	word64 a5_514
	word64 a6_516
	word64 fa4_517
	word64 fa5_518
	word64 t1_519
	word64 fa3_520
	word64 a0_521
	word64 a1_522
	word64 a2_523
	call __strdup (retsize: 0; depth: 80)
		uses: a0_400,a0_412,a1_401,a1_413,a2_402,a2_414,a3_403,a4_404,a5_405,a6_407,fa3_411,fa4_408,fa5_409,gp_406,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_396,s0_391,s1_397,s2_392,s3_393,s4_394,s5_395,s6_398,s7_399,sp_390,t1_410,tLoc50
		defs: a0_509,a0_521,a1_510,a1_522,a2_511,a2_523,a3_512,a4_513,a5_514,a6_516,fa3_520,fa4_517,fa5_518,gp_515,ra_505,s0_500,s1_506,s2_501,s3_502,s4_503,s5_504,s6_507,s7_508,sp_499,t1_519
	Mem524[s4_503:word64] = a0_509
// DataOut: gp s0 s10 s2 s3 s5 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:12 a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017DF4:
	word64 a5_417 = Mem358[gp_406 + -1968:word64]
	word64 sp_419
	word64 s0_420
	word64 s2_421
	word64 s3_422
	word64 s4_423
	word64 s5_424
	word64 ra_425
	word64 s1_426
	word64 s6_427
	word64 s7_428
	word64 a0_429
	word64 a1_430
	word64 a2_431
	word64 a3_432
	word64 a4_433
	word64 a5_434
	word64 a6_436
	word64 fa4_437
	word64 fa5_438
	word64 t1_439
	word64 fa3_440
	word64 a0_441
	word64 a1_442
	word64 a2_443
	word64 gp_435
	call a5_417 (retsize: 0; depth: 80)
		uses: a0_412,a0_418,a1_401,a1_413,a2_402,a2_414,a3_403,a4_404,a5_417,a6_407,fa3_411,fa4_408,fa5_409,gp_415,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_396,s0_391,s1_397,s2_392,s3_393,s4_394,s5_395,s6_398,s7_416,sp_390,t1_410,tLoc50
		defs: a0_429,a0_441,a1_430,a1_442,a2_431,a2_443,a3_432,a4_433,a5_434,a6_436,fa3_440,fa4_437,fa5_438,gp_435,ra_425,s0_420,s1_426,s2_421,s3_422,s4_423,s5_424,s6_427,s7_428,sp_419,t1_439
	branch a0_429 == 0x0000000000000000 l0000000000017E0C
// DataOut: a0 gp s0 s10 s2 s3 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:12 a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017E04:
	word64 sp_473
	word64 s0_474
	word64 s2_475
	word64 s3_476
	word64 s4_477
	word64 s5_478
	word64 ra_479
	word64 s1_480
	word64 s6_481
	word64 s7_482
	word64 a0_483
	word64 a1_484
	word64 a2_485
	word64 a3_486
	word64 a4_487
	word64 a5_488
	word64 a6_490
	word64 fa4_491
	word64 fa5_492
	word64 t1_493
	word64 fa3_494
	word64 a0_495
	word64 a1_496
	word64 a2_497
	call __strdup (retsize: 0; depth: 80)
		uses: a0_429,a0_441,a1_430,a1_442,a2_431,a2_443,a3_432,a4_433,a5_434,a6_436,fa3_440,fa4_437,fa5_438,gp_435,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_425,s0_420,s1_426,s2_421,s3_422,s4_423,s5_424,s6_427,s7_428,sp_419,t1_439,tLoc50
		defs: a0_483,a0_495,a1_484,a1_496,a2_485,a2_497,a3_486,a4_487,a5_488,a6_490,fa3_494,fa4_491,fa5_492,gp_489,ra_479,s0_474,s1_480,s2_475,s3_476,s4_477,s5_478,s6_481,s7_482,sp_473,t1_493
	Mem498[s3_476:word64] = a0_483
// DataOut: gp s0 s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:12 a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017E0C:
	word64 a5_446 = Mem358[gp_435 + -1976:word64]
	word64 sp_448
	word64 s0_449
	word64 s2_450
	word64 s3_451
	word64 s4_452
	word64 s5_453
	word64 ra_454
	word64 s1_455
	word64 s6_456
	word64 s7_457
	word64 a0_458
	word64 a1_459
	word64 a2_460
	word64 a3_461
	word64 a4_462
	word64 a5_463
	word64 a6_465
	word64 fa4_466
	word64 fa5_467
	word64 t1_468
	word64 fa3_469
	word64 a0_470
	word64 a1_471
	word64 a2_472
	call a5_446 (retsize: 0; depth: 80)
		uses: a0_441,a0_447,a1_430,a1_442,a2_431,a2_443,a3_432,a4_433,a5_446,a6_436,fa3_440,fa4_437,fa5_438,gp_444,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_425,s0_420,s1_445,s2_421,s3_422,s4_423,s5_424,s6_427,s7_428,sp_419,t1_439,tLoc50
		defs: a0_458,a0_470,a1_459,a1_471,a2_460,a2_472,a3_461,a4_462,a5_463,a6_465,fa3_469,fa4_466,fa5_467,gp_464,ra_454,s0_449,s1_455,s2_450,s3_451,s4_452,s5_453,s6_456,s7_457,sp_448,t1_468
// DataOut: gp s0 s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:12 a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017E18:
	word64 a5_149 = Mem0[gp_138 + -1952:word64]
	word64 sp_152
	word64 s0_153
	word64 s2_154
	word64 s3_155
	word64 s4_156
	word64 s5_157
	word64 ra_158
	word64 s1_159
	word64 s6_160
	word64 s7_161
	word64 a0_162
	word64 a1_163
	word64 a2_164
	word64 a3_165
	word64 a4_166
	word64 a5_167
	word64 a6_169
	word64 fa4_170
	word64 fa5_171
	word64 t1_172
	word64 fa3_173
	word64 a0_174
	word64 a1_175
	word64 a2_176
	word64 gp_168
	call a5_149 (retsize: 0; depth: 80)
		uses: a0_144,a0_151,a1_145,a1_150,a2_134,a2_146,a3_135,a4_136,a5_149,a6_139,fa3_143,fa4_140,fa5_141,gp_148,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_128,s0_123,s1_147,s2_124,s3_125,s4_126,s5_127,s6_130,s7_131,sp_122,t1_142
		defs: a0_162,a0_174,a1_163,a1_175,a2_164,a2_176,a3_165,a4_166,a5_167,a6_169,fa3_173,fa4_170,fa5_171,gp_168,ra_158,s0_153,s1_159,s2_154,s3_155,s4_156,s5_157,s6_160,s7_161,sp_152,t1_172
	word64 s1_177 = a0_162
	branch a0_162 == 0x0000000000000000 l0000000000017EE8
// DataOut: a0 gp s0 s1 s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017EE8:
	word64 a5_321 = Mem0[gp_168 + -1952:word64]
	word64 sp_324
	word64 s0_325
	word64 s2_326
	word64 s3_327
	word64 s4_328
	word64 s5_329
	word64 ra_330
	word64 s1_331
	word64 s6_332
	word64 s7_333
	word64 a0_334
	word64 a1_335
	word64 a2_336
	word64 a3_337
	word64 a4_338
	word64 a5_339
	word64 a6_341
	word64 fa4_342
	word64 fa5_343
	word64 t1_344
	word64 fa3_345
	word64 a0_346
	word64 a1_347
	word64 a2_348
	call a5_321 (retsize: 0; depth: 80)
		uses: a0_174,a0_323,a1_175,a1_322,a2_164,a2_176,a3_165,a4_166,a5_321,a6_169,fa3_173,fa4_170,fa5_171,gp_168,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_158,s0_153,s1_177,s2_154,s3_155,s4_156,s5_157,s6_160,s7_161,sp_152,t1_172,tLoc50
		defs: a0_334,a0_346,a1_335,a1_347,a2_336,a2_348,a3_337,a4_338,a5_339,a6_341,fa3_345,fa4_342,fa5_343,gp_340,ra_330,s0_325,s1_331,s2_326,s3_327,s4_328,s5_329,s6_332,s7_333,sp_324,t1_344
	s1_177 = a0_334
	branch a0_334 != 0x0000000000000000 l0000000000017E30
// DataOut: a0 gp s0 s1 s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:16 a0:30 s1:30 a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017F00:
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:16 a0:31 s1:31 a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017E30:
	word64 a3_185 = Mem0[gp_168 + -2008:word64]
	word64 a6_188 = 1
	Mem189[s1_177 + 76:word32] = (word32) a6_188
	word64 sp_192
	word64 s0_193
	word64 s2_194
	word64 s3_195
	word64 s4_196
	word64 s5_197
	word64 ra_198
	word64 s1_199
	word64 s6_200
	word64 s7_201
	word64 a0_202
	word64 a1_203
	word64 a2_204
	word64 a3_205
	word64 a4_206
	word64 a5_207
	word64 a6_209
	word64 fa4_210
	word64 fa5_211
	word64 t1_212
	word64 fa3_213
	word64 a0_214
	word64 a1_215
	word64 a2_216
	word64 gp_208
	call a3_185 (retsize: 0; depth: 80)
		uses: a0_162,a0_174,a1_175,a1_190,a2_176,a2_191,a3_185,a4_186,a5_187,a6_188,fa3_173,fa4_170,fa5_171,gp_178,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_158,s0_179,s1_180,s2_154,s3_155,s4_156,s5_157,s6_160,s7_161,sp_152,t1_172
		defs: a0_202,a0_214,a1_203,a1_215,a2_204,a2_216,a3_205,a4_206,a5_207,a6_209,fa3_213,fa4_210,fa5_211,gp_208,ra_198,s0_193,s1_199,s2_194,s3_195,s4_196,s5_197,s6_200,s7_201,sp_192,t1_212
	word64 s0_217 = a0_202
	branch a0_202 == 0x0000000000000000 l0000000000017E88
// DataOut: a0 a4 gp s0 s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:16 a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017E68:
	word64 a0_261
	word64 a1_260
	word64 a0_258 = Mem189[a0_202 + 32:word64]
	a1_260 = a1_215
	a0_261 = a0_214
	branch a0_258 == 0x0000000000000000 l0000000000017E78
// DataOut: a0 a4 gp s0 s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017E70:
	word64 sp_295
	word64 s2_297
	word64 s3_298
	word64 s4_299
	word64 s5_300
	word64 ra_301
	word64 s1_302
	word64 s6_303
	word64 s7_304
	word64 a0_305
	word64 a1_306
	word64 a2_307
	word64 a3_308
	word64 a4_309
	word64 a5_310
	word64 a6_312
	word64 fa4_313
	word64 fa5_314
	word64 t1_315
	word64 fa3_316
	word64 a2_319
	call __strdup (retsize: 0; depth: 80)
		uses: a0_214,a0_258,a1_203,a1_215,a2_204,a2_216,a3_205,a4_206,a5_207,a6_209,fa3_213,fa4_210,fa5_211,gp_208,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_198,s0_217,s1_199,s2_194,s3_195,s4_196,s5_197,s6_200,s7_201,sp_192,t1_212,tLoc50
		defs: a0_305,a0_317,a1_306,a1_318,a2_307,a2_319,a3_308,a4_309,a5_310,a6_312,fa3_316,fa4_313,fa5_314,gp_311,ra_301,s0_296,s1_302,s2_297,s3_298,s4_299,s5_300,s6_303,s7_304,sp_295,t1_315
	Mem320[s2_297:word64] = a0_305
// DataOut: a4 gp s0 s10 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017E78:
	branch (word64) ((real32) Mem189[s0_217 + 52:real32] == (real32) 0x0000000000000000) == 0x0000000000000000 l0000000000017EBC
// DataOut: a4 a5 gp s0 s10 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017EBC:
	word64 a0_293 = DPB(a0_261, __asprintf_chk(a0_261, a1_260, 0x0000000000012B80, tLoc50), 0)
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:1 fa4:<invalid> fa5:(real32) 0x0000000000000000 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017E88:
	word64 t1_231 = Mem189[gp_208 + -1976:word64]
	word64 sp_233
	word64 s0_234
	word64 s2_235
	word64 s3_236
	word64 s4_237
	word64 s5_238
	word64 ra_239
	word64 s1_240
	word64 s6_241
	word64 s7_242
	word64 a0_243
	word64 a1_244
	word64 a2_245
	word64 a3_246
	word64 a4_247
	word64 a5_248
	word64 gp_249
	word64 a6_250
	word64 fa4_251
	word64 fa5_252
	word64 t1_253
	word64 fa3_254
	word64 a0_255
	word64 a1_256
	word64 a2_257
	call t1_231 (retsize: 0;)
		uses: a0_214,a0_221,a1_203,a1_215,a2_204,a2_216,a3_205,a4_206,a5_207,a6_209,fa3_213,fa4_210,fa5_211,gp_218,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_222,s0_223,s1_224,s2_225,s3_226,s4_227,s5_228,s6_229,s7_230,sp_232,t1_231
		defs: a0_243,a0_255,a1_244,a1_256,a2_245,a2_257,a3_246,a4_247,a5_248,a6_250,fa3_254,fa4_251,fa5_252,gp_249,ra_239,s0_234,s1_240,s2_235,s3_236,s4_237,s5_238,s6_241,s7_242,sp_233,t1_253
	return
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:<invalid> s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:1 fa4:<invalid> fa5:<invalid> fa3:<invalid> s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017D54:
	return
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000017D10_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp s0:s0 s4:s4 s3:s3 s2:s2 s5:s5 ra:ra s1:s1 s6:s6 s7:s7 a5:<invalid> a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn0000000000017F04(word64 gp, word64 a0, word64 a1, word64 a2, word64 a3, ptr64 & a0Out, ptr64 & s5Out, ptr64 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 a3 gp
// LiveOut: a0 s5 s6 sp
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 sp t1 t3
// Preserved:
fn0000000000017F04_entry:
// DataOut: a0 a1 a2 a3 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0058(64)

l0000000000017F04:
	fn00000000000182B4(a0)
	word64 sp_2 = fp + -80
	branch a1 == 32 l0000000000018048
// DataOut: a0 gp s0 s10 s4 s5 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0050(0) Local -0058(64)

l0000000000018048:
	word64 a0_175 = DPB(fp + -80, __asprintf_chk(fp + -80, a1, 0x0000000000012B88, tLoc50), 0)
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000017F60:
	word64 a1_85 = 24
	branch a1 == a1_85 l0000000000018070
// DataOut: a1 gp s0 s10 s4 s5 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0) Local -0058(64)

l0000000000018070:
	word64 a0_165 = DPB(fp + -80, __asprintf_chk(fp + -80, a1, 0x0000000000012BA8, tLoc50), 0)
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000017F68:
	word64 a0_86 = 16
	branch a1 == a0_86 l00000000000180D8
// DataOut: a0 a1 gp s0 s10 s4 s5 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0) Local -0058(64)

l00000000000180D8:
	word64 a0_156 = DPB(fp + -80, __asprintf_chk(fp + -80, a1, 0x0000000000012BC0, tLoc50), 0)
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000017F70:
	word64 a5_87 = 8
	branch a1 == a5_87 l00000000000180F8
// DataOut: a0 a1 a5 gp s0 s10 s4 s5 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0) Local -0058(64)

l00000000000180F8:
	word64 a0_148 = DPB(fp + -80, __asprintf_chk(fp + -80, a1, 0x0000000000012BD8, tLoc50), 0)
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000017F78:
	branch a1_85 <u a1 l0000000000017FBC
// DataOut: a0 a5 gp s0 s10 s4 s5 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0) Local -0058(64)

l0000000000017FBC:
	fn00000000000182B4(a2)
	fn00000000000182B4(a3)
	word64 a0_141 = DPB(fp + -80, __asprintf_chk(fp + -80, a1, 0x0000000000012BF0, tLoc50), 0)
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000017F7C:
	branch a0_86 <u a1 l0000000000018094
// DataOut: a5 gp s0 s10 s4 s5 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0) Local -0058(64)

l0000000000018094:
	fn00000000000182B4(a2)
	fn00000000000182B4(a3)
	word64 a0_125 = DPB(fp + -80, __asprintf_chk(fp + -80, a1, 0x0000000000012C10, tLoc50), 0)
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000017F80:
	branch a5_87 <u a1 l0000000000018008
// DataOut: gp s10 s4 s5 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0) Local -0058(64)

l0000000000018008:
	fn00000000000182B4(a2)
	fn00000000000182B4(a3)
	word64 a0_108 = DPB(fp + -80, __asprintf_chk(fp + -80, a1, 0x0000000000012C30, tLoc50), 0)
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000017FF8:
	sp_2 = fp + 0xFFFFFFFFFFFFFFA8
	branch fp == -79 l0000000000017F84
// DataOut: gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFA8 a5:<invalid> s0:<invalid> s5:a2 s4:a3 a1:1 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000018000:
	word64 a0_84
	*a0Out = qwLoc58
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFA8 a5:-1 s0:<invalid> s5:a2 s4:a3 a1:1 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017F84:
	word64 a0_71
	*a0Out = 0
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017F88:
	branch Mem0[sp_2 + 8:word64] != Mem0[gp + -1936:word64] l0000000000018114
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000018114:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017F94:
	word64 s5_55
	*s5Out = Mem0[sp_2 + 24:word64]
	word64 s6_56
	*s6Out = Mem0[sp_2 + 16:word64]
	return sp_2 + 80
// DataOut: a0 gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000017F04_exit:
// DataOut: a0 s5 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s5:<invalid> s4:<invalid> a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> ra:<invalid> s3:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn0000000000018118(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut: a0
// Trashed: a0 a4 a5 t4 t5
// Preserved: ra s0 sp
fn0000000000018118_entry:
// DataOut: a0 a1 gp s10 s2 s3 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000018118:
	word64 a0_118
	word64 a5_7 = Mem0[gp + -1936:word64]
	branch (a1 & 3) != 0x0000000000000000 l00000000000182A8
// DataOut: a0 a1 gp s10 s2 s3 s6 s8 s9 t4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0018(64)

l00000000000182A8:
	a0_118 = 0
// DataOut: a0 gp s10 s2 s3 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0018(64)

l0000000000018134:
	word64 t5_35 = (int64) (word32) (a1 >>u 3)
	branch (a1 & 7) == 4 l0000000000018264
// DataOut: a0 gp s10 s2 s3 s6 s8 s9 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l0000000000018264:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:a1 & 7 t4:a1 & 3 a4:4 t5:<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l0000000000018144:
	branch t5_35 == 0x0000000000000000 l00000000000181FC
// DataOut: a0 gp s10 s2 s3 s6 s8 s9 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:a1 & 7 t4:a1 & 3 a4:4 t5:<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l00000000000181FC:
	word64 t4_86 = fp + -280 + (((a1 & 3) << 0x00000000) >>u 0x00000000)
	Mem89[t4_86 + 4:word16] = 0x7261
	Mem92[t4_86:word16] = 0x7069
	Mem95[t4_86 + 6:word16] = 0x6170
	Mem98[t4_86 + 2:word16] = 0x2E36
	word64 a5_96 = 46
	Mem99[t4_86 + 8:word16] = (word16) a5_96
	word64 sp_106
	word64 s0_107
	word64 a5_108
	word64 ra_110
	word64 a1_111
	word64 t4_112
	word64 a4_113
	word64 t5_114
	word64 t1_115
	word64 a7_116
	word64 t3_117
	word64 a3_119
	word64 a2_120
	word64 a6_121
	word64 t6_122
	call __strdup (retsize: 0; depth: 288)
		uses: a0_97,a1,a2,a3,a4_94,a5_96,a6,a7,gp,qwLoc08_9,qwLoc10_4,qwLoc18_12,ra,s0,sp_2,t1,t3,t4_86,t5_35,t6
		defs: a0_118,a1_111,a2_120,a3_119,a4_113,a5_108,a6_121,a7_116,gp_109,ra_110,s0_107,sp_106,t1_115,t3_117,t4_112,t5_114,t6_122
// DataOut: a0 gp s10 s2 s3 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:a1 & 7 t4:a1 & 3 a4:4 t5:<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0018(64)

l0000000000018248:
	branch a5_7 != Mem0[gp + -1936:word64] l00000000000182B0
// DataOut: a0 gp s10 s2 s3 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a0:<invalid> a4:<invalid> t5:<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l00000000000182B0:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a0:<invalid> a4:<invalid> t5:<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l0000000000018254:
	return a0_118
// DataOut: a0 gp s10 s2 s3 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a0:<invalid> a4:<invalid> t5:<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra

fn0000000000018118_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> t4:<invalid> a0:<invalid> a4:<invalid> ra:ra s0:s0 t5:<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l0000000000018148:
	word64 a1_36 = (int64) ((word32) t5_35 + -1)
	word64 a4_37 = a1 & 3
	word64 t1_38 = 9
	word64 a7_39 = 46
	word64 t3_40 = -1
// DataOut: a0 a1 a4 a7 t1 t3 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:a1 & 7 t4:a1 & 3 a4:4 t5:<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000018190:
	word64 a5_49 = (int64) Mem0[a0 + ((a1_36 << 0x00000000) >>u 0x00000000):byte]
	word64 a3_50 = (int64) ((word32) a4_37 + 1)
	word64 a6_52 = (a5_49 & 15) + 87
	branch t1_38 <u (a5_49 & 15) l00000000000181B4
// DataOut: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000181B0:
	a6_52 = (a5_49 & 15) + 48
// DataOut: a0 a1 a3 a4 a5 a6 a7 t1 t3 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000181B4:
	Mem60[fp + -16 + ((a4_37 << 0x00000000) >>u 0x00000000) + 3832:byte] = (byte) a6_52
	Mem63[fp + -16 + ((a3_50 << 0x00000000) >>u 0x00000000) + 3832:byte] = (byte) a7_39
	word64 a2_64 = (int64) ((word32) a4_37 + 2)
	word64 a3_65 = (int64) ((word32) a4_37 + 3)
	word64 a6_66 = (a5_49 >>u 0x00000004) + 48
	branch t1_38 >=u a5_49 >>u 0x00000004 l0000000000018160
// DataOut: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000181EC:
	a6_66 = (a5_49 >>u 0x00000004) + 87
// DataOut: a0 a1 a2 a3 a4 a6 a7 t1 t3 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000018160:
	Mem74[fp + -16 + ((a2_64 << 0x00000000) >>u 0x00000000) + 3832:byte] = (byte) a6_66
	Mem76[fp + -16 + ((a3_65 << 0x00000000) >>u 0x00000000) + 3832:byte] = (byte) a7_39
	a1_36 = (int64) ((word32) a1_36 + -1)
	a4_37 = (int64) ((word32) a4_37 + 4)
	branch a1_36 == t3_40 l00000000000181F4
// DataOut: a0 a1 a4 a7 t1 t3 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000181F4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:fp + -16 t4:a1 & 3 a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -24(fp):<invalid> -16(fp):s0 -8(fp):ra



word64 fn00000000000182B4(word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0
// LiveOut: a0
// Trashed: a0 a3 a4 a5
// Preserved: sp
fn00000000000182B4_entry:
// DataOut: a0 gp s0 s1 s10 s2 s3 s4 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000000000182B4:
	return (int64) (word32) (a0 >>u 24) | (int64) ((word32) (a0 << 0x0000000000000018)) | (int64) ((word32) ((a0 & 0x0000000000FF0000) >> 0x00000008)) | (int64) ((word32) ((a0 & 65280) << 0x0000000000000008))
// DataOut: a0 gp s0 s1 s10 s2 s3 s4 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00000000000182B4_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a3:<invalid> a4:<invalid> a0:<invalid>



void fn00000000000182E8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a5
// Preserved: a0 a1 a2 ra s0 s1 s2 s3 s4 s5 sp
fn00000000000182E8_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000182E8:
	word64 s0_43 = 0x0000000000019E18
	branch 0x0000000000019E20 - 0x0000000000019E18 >> 0x00000003 == 0x0000000000000000 l0000000000018354
// DataOut: s0 s2
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000018324:
// DataOut: s0 s1 s2
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 s0:0000000000019E18 s2:0x0000000000019E20 - 0x0000000000019E18 >> 0x00000003 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000018334:
	word64 a5_49 = Mem0[s0_43:word64]
	word64 sp_54
	word64 s0_55
	word64 s2_56
	word64 ra_57
	word64 s1_58
	word64 s3_59
	word64 s4_60
	word64 s5_61
	word64 a0_62
	word64 a1_63
	word64 a2_64
	word64 a5_65
	call a5_49 (retsize: 0; depth: 64)
		uses: a0_52,a1_51,a2_50,a5_49,qwLoc08_13,qwLoc10_4,qwLoc18_15,qwLoc20_6,qwLoc28_17,qwLoc30_19,qwLoc38_21,ra,s0_43,s1_53,s2_22,s3_45,s4_46,s5_47,sp_2
		defs: a0_62,a1_63,a2_64,a5_65,ra_57,s0_55,s1_58,s2_56,s3_59,s4_60,s5_61,sp_54
	s0_43 = s0_55 + 8
	branch s2_56 != s1_58 l0000000000018334
// DataOut: s0 s1 s2
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 s0:<invalid> s2:0x0000000000019E20 - 0x0000000000019E18 >> 0x00000003 s5:a0 s4:a1 s3:a2 s1:<invalid> a5:<invalid> a2:a2 a1:a1 a0:a0 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000018354:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 s0:<invalid> s2:0x0000000000019E20 - 0x0000000000019E18 >> 0x00000003 s5:a0 s4:a1 s3:a2 s1:<invalid> a5:<invalid> a2:a2 a1:a1 a0:a0 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000182E8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp s0:s0 s2:s2 ra:ra s1:s1 s3:s3 s4:s4 s5:s5 a5:<invalid> a2:a2 a1:a1 a0:a0 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn0000000000018378()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0000000000018378_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000018378:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000018378_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



