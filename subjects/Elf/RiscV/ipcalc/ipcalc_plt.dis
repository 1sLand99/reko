// herror
// Return size: 0
define herror
herror_entry:
herror_exit:


// __strdup
// Return size: 0
define __strdup
__strdup_entry:
__strdup_exit:


// clock_gettime
// Return size: 0
define clock_gettime
clock_gettime_entry:
clock_gettime_exit:


// close
// Return size: 0
define close
close_entry:
close_exit:


// read
// Return size: 0
define read
read_entry:
read_exit:


// inet_ntop
// Return size: 0
define inet_ntop
inet_ntop_entry:
inet_ntop_exit:


// snprintf
// Return size: 0
define snprintf
snprintf_entry:
snprintf_exit:


// getaddrinfo
// Return size: 0
define getaddrinfo
getaddrinfo_entry:
getaddrinfo_exit:


// dlopen
// Return size: 0
define dlopen
dlopen_entry:
dlopen_exit:


// open
// Return size: 0
define open
open_entry:
open_exit:


// __snprintf_chk
// Return size: 0
define __snprintf_chk
__snprintf_chk_entry:
__snprintf_chk_exit:


// dlsym
// Return size: 0
define dlsym
dlsym_entry:
dlsym_exit:


// exit
// Return size: 0
define exit
exit_entry:
exit_exit:


// getopt_long
// Return size: 0
define getopt_long
getopt_long_entry:
getopt_long_exit:


// __vasprintf_chk
// Return size: 0
define __vasprintf_chk
__vasprintf_chk_entry:
__vasprintf_chk_exit:


// __asprintf_chk
// Return size: 0
define __asprintf_chk
__asprintf_chk_entry:
__asprintf_chk_exit:


// getnameinfo
// Return size: 0
define getnameinfo
getnameinfo_entry:
getnameinfo_exit:


// memset
// Return size: 0
define memset
memset_entry:
memset_exit:


// inet_pton
// Return size: 0
define inet_pton
inet_pton_entry:
inet_pton_exit:


// strcmp
// Return size: 0
define strcmp
strcmp_entry:
strcmp_exit:


// free
// Return size: 0
define free
free_entry:
free_exit:


// __printf_chk
// Return size: 0
define __printf_chk
__printf_chk_entry:
__printf_chk_exit:


// __sprintf_chk
// Return size: 0
define __sprintf_chk
__sprintf_chk_entry:
__sprintf_chk_exit:


// fwrite
// Return size: 0
define fwrite
fwrite_entry:
fwrite_exit:


// memcmp
// Return size: 0
define memcmp
memcmp_entry:
memcmp_exit:


// fputs
// Return size: 0
define fputs
fputs_entry:
fputs_exit:


// isatty
// Return size: 0
define isatty
isatty_entry:
isatty_exit:


// __fprintf_chk
// Return size: 0
define __fprintf_chk
__fprintf_chk_entry:
__fprintf_chk_exit:


// __libc_start_main
// Return size: 0
define __libc_start_main
__libc_start_main_entry:
__libc_start_main_exit:


// putchar
// Return size: 0
define putchar
putchar_entry:
putchar_exit:


// fputc
// Return size: 0
define fputc
fputc_entry:
	sp = fp
	// succ:  l0000000000015100
l0000000000015100:
	t3 = 0x000000000001A100<p64>
	t3 = Mem0[t3:word64]
	t1 = 0x000000000001510C<p64>
	call t3 (retsize: 0;)
	return
	// succ:  fputc_exit
fputc_exit:


// __stack_chk_fail
// Return size: 0
define __stack_chk_fail
__stack_chk_fail_entry:
__stack_chk_fail_exit:


// __errno_location
// Return size: 0
define __errno_location
__errno_location_entry:
__errno_location_exit:


// strtol
// Return size: 0
define strtol
strtol_entry:
strtol_exit:


// strchr
// Return size: 0
define strchr
strchr_entry:
strchr_exit:


// memcpy
// Return size: 0
define memcpy
memcpy_entry:
memcpy_exit:


// abort
// Return size: 0
define abort
abort_entry:
abort_exit:


// freeaddrinfo
// Return size: 0
define freeaddrinfo
freeaddrinfo_entry:
freeaddrinfo_exit:


