// fn000094F0
// Return size: 0
define fn000094F0
fn000094F0_entry:
	r29 = fp
	// succ:  l000094F0
l000094F0:
	r14 = PC + 0x21C30<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn000094F0_exit
fn000094F0_exit:


// fn00009500
// Return size: 0
define fn00009500
fn00009500_entry:
	r29 = fp
	// succ:  l00009500
l00009500:
	r14 = PC + 0x21C24<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009500_exit
fn00009500_exit:


// fn00009510
// Return size: 0
define fn00009510
fn00009510_entry:
	r29 = fp
	// succ:  l00009510
l00009510:
	r14 = PC + 0x21C18<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009510_exit
fn00009510_exit:


// fn00009514
// Return size: 0
define fn00009514
fn00009514_entry:
	r29 = fp
	// succ:  l00009514
l00009514:
	r14 = PC + 0x18<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009514_exit
fn00009514_exit:


// fn00009530
// Return size: 0
define fn00009530
fn00009530_entry:
	r29 = fp
	// succ:  l00009530
l00009530:
	r14 = PC + 0x21C00<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009530_exit
fn00009530_exit:


// fn00009540
// Return size: 0
define fn00009540
fn00009540_entry:
	r29 = fp
	// succ:  l00009540
l00009540:
	r14 = PC + 0x21BF4<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009540_exit
fn00009540_exit:


// fn00009550
// Return size: 0
define fn00009550
fn00009550_entry:
	r29 = fp
	// succ:  l00009550
l00009550:
	r14 = PC + 0x21BE8<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009550_exit
fn00009550_exit:


// fn00009560
// Return size: 0
define fn00009560
fn00009560_entry:
	r29 = fp
	// succ:  l00009560
l00009560:
	r14 = PC + 0x21BDC<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009560_exit
fn00009560_exit:


// fn00009570
// Return size: 0
define fn00009570
fn00009570_entry:
	r29 = fp
	// succ:  l00009570
l00009570:
	r14 = PC + 0x21BD0<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009570_exit
fn00009570_exit:


// fn00009580
// Return size: 0
define fn00009580
fn00009580_entry:
	r29 = fp
	// succ:  l00009580
l00009580:
	r14 = PC + 0x21BC4<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009580_exit
fn00009580_exit:


// fn00009590
// Return size: 0
define fn00009590
fn00009590_entry:
	r29 = fp
	// succ:  l00009590
l00009590:
	r14 = PC + 0x21BB8<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009590_exit
fn00009590_exit:


// fn000095B0
// Return size: 0
define fn000095B0
fn000095B0_entry:
	r29 = fp
	// succ:  l000095B0
l000095B0:
	r14 = PC + 0x21BA0<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn000095B0_exit
fn000095B0_exit:


// fn000095C0
// Return size: 0
define fn000095C0
fn000095C0_entry:
	r29 = fp
	// succ:  l000095C0
l000095C0:
	r14 = PC + 0x21B94<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn000095C0_exit
fn000095C0_exit:


// fn000095D0
// Return size: 0
define fn000095D0
fn000095D0_entry:
	r29 = fp
	// succ:  l000095D0
l000095D0:
	r14 = PC + 0x21B88<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn000095D0_exit
fn000095D0_exit:


// fn000095E0
// Return size: 0
define fn000095E0
fn000095E0_entry:
	r29 = fp
	// succ:  l000095E0
l000095E0:
	r14 = PC + 0x21B7C<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn000095E0_exit
fn000095E0_exit:


// fn000095F0
// Return size: 0
define fn000095F0
fn000095F0_entry:
	r29 = fp
	// succ:  l000095F0
l000095F0:
	r14 = PC + 0x21B70<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn000095F0_exit
fn000095F0_exit:


// fn00009600
// Return size: 0
define fn00009600
fn00009600_entry:
	r29 = fp
	// succ:  l00009600
l00009600:
	r14 = PC + 0x21B64<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009600_exit
fn00009600_exit:


// fn00009610
// Return size: 0
define fn00009610
fn00009610_entry:
	r29 = fp
	// succ:  l00009610
l00009610:
	r14 = PC + 0x21B58<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009610_exit
fn00009610_exit:


// fn00009620
// Return size: 0
define fn00009620
fn00009620_entry:
	r29 = fp
	// succ:  l00009620
l00009620:
	r14 = PC + 0x21B4C<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009620_exit
fn00009620_exit:


// fn00009630
// Return size: 0
define fn00009630
fn00009630_entry:
	r29 = fp
	// succ:  l00009630
l00009630:
	r14 = PC + 0x21B40<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009630_exit
fn00009630_exit:


// fn00009640
// Return size: 0
define fn00009640
fn00009640_entry:
	r29 = fp
	// succ:  l00009640
l00009640:
	r14 = PC + 0x21B34<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009640_exit
fn00009640_exit:


// fn00009650
// Return size: 0
define fn00009650
fn00009650_entry:
	r29 = fp
	// succ:  l00009650
l00009650:
	r14 = PC + 0x21B28<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009650_exit
fn00009650_exit:


// fn00009660
// Return size: 0
define fn00009660
fn00009660_entry:
	r29 = fp
	// succ:  l00009660
l00009660:
	r14 = PC + 0x21B1C<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009660_exit
fn00009660_exit:


// fn00009670
// Return size: 0
define fn00009670
fn00009670_entry:
	r29 = fp
	// succ:  l00009670
l00009670:
	r14 = PC + 0x21B10<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009670_exit
fn00009670_exit:


// fn00009680
// Return size: 0
define fn00009680
fn00009680_entry:
	r29 = fp
	// succ:  l00009680
l00009680:
	r14 = PC + 0x21B04<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009680_exit
fn00009680_exit:


// fn00009690
// Return size: 0
define fn00009690
fn00009690_entry:
	r29 = fp
	// succ:  l00009690
l00009690:
	r14 = PC + 0x21AF8<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009690_exit
fn00009690_exit:


// fn000096A0
// Return size: 0
define fn000096A0
fn000096A0_entry:
	r29 = fp
	// succ:  l000096A0
l000096A0:
	r14 = PC + 0x21AEC<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn000096A0_exit
fn000096A0_exit:


// fn000096B0
// Return size: 0
define fn000096B0
fn000096B0_entry:
	r29 = fp
	// succ:  l000096B0
l000096B0:
	r14 = PC + 0x21AE0<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn000096B0_exit
fn000096B0_exit:


// fn000096D0
// Return size: 0
define fn000096D0
fn000096D0_entry:
	r29 = fp
	// succ:  l000096D0
l000096D0:
	r14 = PC + 0x21AC8<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn000096D0_exit
fn000096D0_exit:


// fn000096F0
// Return size: 0
define fn000096F0
fn000096F0_entry:
	r29 = fp
	// succ:  l000096F0
l000096F0:
	r14 = PC + 0x21AB0<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn000096F0_exit
fn000096F0_exit:


// fn00009710
// Return size: 0
define fn00009710
fn00009710_entry:
	r29 = fp
	// succ:  l00009710
l00009710:
	r14 = PC + 0x21A98<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009710_exit
fn00009710_exit:


// fn00009740
// Return size: 0
define fn00009740
fn00009740_entry:
	r29 = fp
	// succ:  l00009740
l00009740:
	r14 = PC + 0x21A74<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009740_exit
fn00009740_exit:


// fn00009750
// Return size: 0
define fn00009750
fn00009750_entry:
	r29 = fp
	// succ:  l00009750
l00009750:
	r14 = PC + 0x21A68<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009750_exit
fn00009750_exit:


// fn00009760
// Return size: 0
define fn00009760
fn00009760_entry:
	r29 = fp
	// succ:  l00009760
l00009760:
	r14 = PC + 0x21A5C<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009760_exit
fn00009760_exit:


// fn00009770
// Return size: 0
define fn00009770
fn00009770_entry:
	r29 = fp
	// succ:  l00009770
l00009770:
	r14 = PC + 0x21A50<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009770_exit
fn00009770_exit:


// fn00009780
// Return size: 0
define fn00009780
fn00009780_entry:
	r29 = fp
	// succ:  l00009780
l00009780:
	r14 = PC + 0x21A44<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009780_exit
fn00009780_exit:


// fn00009790
// Return size: 0
define fn00009790
fn00009790_entry:
	r29 = fp
	// succ:  l00009790
l00009790:
	r14 = PC + 0x21A38<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009790_exit
fn00009790_exit:


// fn000097A0
// Return size: 0
define fn000097A0
fn000097A0_entry:
	r29 = fp
	// succ:  l000097A0
l000097A0:
	r14 = PC + 0x21A2C<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn000097A0_exit
fn000097A0_exit:


// fn000097B0
// Return size: 0
define fn000097B0
fn000097B0_entry:
	r29 = fp
	// succ:  l000097B0
l000097B0:
	r14 = PC + 0x21A20<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn000097B0_exit
fn000097B0_exit:


// fn000097C0
// Return size: 0
define fn000097C0
fn000097C0_entry:
	r29 = fp
	// succ:  l000097C0
l000097C0:
	r14 = PC + 0x21A14<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn000097C0_exit
fn000097C0_exit:


// fn000097D0
// Return size: 0
define fn000097D0
fn000097D0_entry:
	r29 = fp
	// succ:  l000097D0
l000097D0:
	r14 = PC + 0x21A08<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn000097D0_exit
fn000097D0_exit:


// fn000097E0
// Return size: 0
define fn000097E0
fn000097E0_entry:
	r29 = fp
	// succ:  l000097E0
l000097E0:
	r14 = PC + 0x219FC<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn000097E0_exit
fn000097E0_exit:


// fn000097F0
// Return size: 0
define fn000097F0
fn000097F0_entry:
	r29 = fp
	// succ:  l000097F0
l000097F0:
	r14 = PC + 0x219F0<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn000097F0_exit
fn000097F0_exit:


// fn00009800
// Return size: 0
define fn00009800
fn00009800_entry:
	r29 = fp
	// succ:  l00009800
l00009800:
	r14 = PC + 0x219E4<32>
	r28 = Mem0[r14:word32]
	call r28 (retsize: 0;)
	return
	// succ:  fn00009800_exit
fn00009800_exit:


