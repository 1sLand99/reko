void _start(word32 g1, word32 o3, word32 o4, word32 o5, word32 o7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  g1:[0..31] o3:[0..31] o4:[0..31] o5:[0..31] o7:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
_start_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

_start_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011498:
	branch g1 == 0x00000000 l00011498_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011498_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000114BC:
	atexit(0x00016EE4)
	Mem50[0x0002B40C:word32] = fp + 0x00000044 + ((_init(o3, o4, o5, o7) << 0x00000002) + 0x00000004)
	exit(main(fp + 0x00000044))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011498_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000114B4:
	atexit(g1)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0001150C(word32 o7, word32 l7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  l7:[0..31] o7:[0..31]
// LiveOut: l7
// Trashed: l7
// Preserved: sp
fn0001150C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001150C:
	return o7 + l7
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0001150C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __do_global_dtors_aux(word32 o3, word32 o4, word32 o5, word32 o7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o3:[0..31] o4:[0..31] o5:[0..31] o7:[0..31]
// LiveOut:
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l7
// Preserved: l0 o0 o1 o2 o3 o4 o5 o7 sp
__do_global_dtors_aux_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011514:
	word32 l7_23 = fn0001150C(o7, 0x00016660)
	branch Mem0[Mem0[l7_23 + 0x00000008:word32]:word32] != 0x00000000 l00011514_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011514_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011514_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011540:
	word32 o2_124 = Mem0[l7_23 + 0x00000004:word32]
	branch Mem0[Mem0[o2_124:word32]:word32] == 0x00000000 l00011540_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011540_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011540_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001155C:
	word32 l0_42 = o2_124
	word32 o0_44 = Mem0[o2_124:word32] + 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011568:
	Mem47[l0_42:word32] = o0_44
	call fn02800018 (retsize: 0;)
		uses: l0:l0_73,o0:o0_45,o1:Mem47[o0_45 + -4:word32],o2:o2_50,o3:o3_51,o4:o4_52,o5:o5_53,o7:0x00011570
		defs: l0:l0_73,l7:l7_71,o2:o2_61,o3:o3_63,o4:o4_65,o5:o5_67,o7:o7_70
	word32 o0_75 = Mem47[l0_42:word32]
	branch Mem47[o0_75:word32] != 0x00000000 l00011568_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011568_ds_t:
	o0_44 = o0_75 + 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011568_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001158C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011590:
	branch Mem86[l7_23 + 0x0000001C:word32] == 0x00000000 l00011590_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011590_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000115B0:
	Mem96[Mem86[l7_23 + 0x00000008:word32]:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000115C4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

__do_global_dtors_aux_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011590_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000115A4:
	word32 l0_148
	call __deregister_frame_info (retsize: 0;)
		uses: l0:l0_148,o0:Mem86[l7_85 + 0x0000000C:word32],o1:0x0000000C,o2:o2_124,o3:o3_125,o4:o4_126,o5:o5_127,o7:o7_128
		defs: l0:l0_148
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fini_dummy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: i0 i1 i2 i3 i4 i5 i6 i7
// Preserved: o0 o1 o2 o3 o4 o5 o7 sp
fini_dummy_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000115CC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fini_dummy_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void frame_dummy(word32 o3, word32 o4, word32 o5, word32 o7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o3:[0..31] o4:[0..31] o5:[0..31] o7:[0..31]
// LiveOut:
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l7
// Preserved: o0 o1 o2 o3 o4 o5 o7 sp
frame_dummy_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000115D8:
	word32 l7_23 = fn0001150C(o7, 0x0001659C)
	branch Mem0[l7_23 + 0x00000018:word32] == 0x00000000 l000115D8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000115D8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011618:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

frame_dummy_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000115D8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011600:
	call __register_frame_info (retsize: 0;)
		uses: o0:Mem0[l7_23 + 0x0000000C:word32],o1:Mem0[l7_23 + 0x00000010:word32],o2:0x00000010,o3:o3,o4:o4,o5:o5,o7:o7
// DataOut:
// DataOut (flags):
// SymbolicIn:



void init_dummy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: i0 i1 i2 i3 i4 i5 i6 i7
// Preserved: o0 o1 o2 o3 o4 o5 o7 sp
init_dummy_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011620:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

init_dummy_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 notice(word32 o0, ptr32 & i1Out, ptr32 & i2Out, ptr32 & i6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: i0 i1 i2 i6
// Trashed: i0 i1 i2 i3 i4 i5 i6 i7
// Preserved: o0 o1 o2 o3 o4 o5 o7 sp
notice_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001162C:
	vfprintf(0x0002B640, o0, fp + 0x00000048)
	i1Out = o1
	i2Out = o2
	i6Out = fp
	return o0
// DataOut:
// DataOut (flags):
// SymbolicIn:

notice_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xstrerror(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut:
// Trashed: i0 i1 i2 i3 i4 i5 i6 i7
// Preserved: o1 o2 o3 o4 o5 o7 sp
xstrerror_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011660:
	strerror(o0)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xstrerror_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 xmalloc(word32 o0, ptr32 & i1Out, ptr32 & i2Out, ptr32 & i6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: i0 i1 i2 i6
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7
// Preserved: o1 o2 o3 o4 o5 o7 sp
xmalloc_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011674:
	branch malloc(o0) != 0x00000000 l00011674_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011674_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000116A8:
	i1Out = o1
	i2Out = o2
	i6Out = fp
	return o0
// DataOut:
// DataOut (flags):
// SymbolicIn:

xmalloc_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011674_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001168C:
	word32 i1_55
	word32 i2_56
	word32 i6_57
	notice(0x000170A8, out i1_55, out i2_56, out i6_57)
	exit(0x00000021)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 xrealloc(word32 o0, word32 o1, ptr32 & i1Out, ptr32 & i2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31]
// LiveOut: i0 i1 i2
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7
// Preserved: o1 o2 o3 o4 o5 o7 sp
xrealloc_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000116B0:
	bool Z_34
	branch o0 == 0x00000000 l000116B0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000116B0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000116D0:
	Z_34 = SLICE(cond(malloc(o1)), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000116B0_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000116C0:
	Z_34 = SLICE(cond(realloc(o0, o1)), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000116DC:
	branch Z_34 l000116DC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000116DC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011700:
	i1Out = o1
	i2Out = o2
	return o0
// DataOut:
// DataOut (flags):
// SymbolicIn:

xrealloc_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000116DC_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000116E4:
	word32 i1_82
	word32 i2_83
	word32 i6_84
	notice(0x000170A8, out i1_82, out i2_83, out i6_84)
	exit(0x00000021)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 xfree(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: i0
// Trashed: NZVC i0 i1 i2 i3 i4 i5 i6 i7
// Preserved: o0 o1 o2 o3 o4 o5 o7 sp
xfree_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011708:
	branch o0 == 0x00000000 l00011708_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011708_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011720:
	return o0
// DataOut:
// DataOut (flags):
// SymbolicIn:

xfree_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011708_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011718:
	free(o0)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 savestring(word32 o0, word32 o1, ptr32 & l0Out, ptr32 & i0Out, ptr32 & i1Out, ptr32 & i6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31]
// LiveOut: i0 i1 i6 l0 o0
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
savestring_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011728:
	word32 i1_24
	word32 i2_25
	word32 i6_29
	xmalloc(o1 + 0x00000001, out i1_24, out i2_25, out i6_29)
	strcpy(o1 + 0x00000001, o0)
	l0Out = o0
	i0Out = o1 + 0x00000001
	i1Out = i1_24
	i6Out = i6_29
	return o1 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

savestring_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 savestring2(word32 o0, word32 o1, word32 o3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31] o3:[0..31]
// LiveOut: o0
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
savestring2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001174C:
	word32 o0_20 = o1 + o3
	word32 i1_25
	word32 i2_26
	word32 i6_30
	xmalloc(o0_20 + 0x00000001, out i1_25, out i2_26, out i6_30)
	strcpy(o0_20 + 0x00000001, o0)
	strcpy(o0_20 + 0x00000001 + i1_25, i2_26)
	return o0_20 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

savestring2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fancy_abort()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fancy_abort_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fancy_abort_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011780:
	word32 i1_34
	word32 i2_35
	word32 i6_36
	notice(0x000170C8, out i1_34, out i2_35, out i6_36)
	exit(0x00000021)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 dupnstr(word32 o0, word32 o1, ptr32 & l0Out, ptr32 & i0Out, ptr32 & i6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31]
// LiveOut: i0 i6 l0 o0 sp
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
dupnstr_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000117A0:
	word32 i1_24
	word32 i2_25
	word32 i6_29
	xmalloc(o1 + 0x00000001, out i1_24, out i2_25, out i6_29)
	strncpy(o1 + 0x00000001, o0, i1_24)
	Mem39[o1 + 0x00000001 + i1_24:byte] = 0x00
	l0Out = o0
	i0Out = o1 + 0x00000001
	i6Out = i6_29
	return o1 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

dupnstr_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 substr(word32 o0, word32 o1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31]
// LiveOut: o0
// Trashed: NZVC g0 g2 g3 o0 o2 o3
// Preserved: sp
substr_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000117CC:
	word32 g2_5 = (int32) Mem0[o0:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011810:
	branch g2_5 != 0x00000000 l00011810_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011810_ds_t:
	word32 o3_10 = o1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000117D4:
	word32 g3_11 = (int32) Mem0[o1:int8]
	branch g3_11 == 0x00000000 l000117D4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000117D4_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000117D4_ds_f:
	word32 o2_16 = o0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000117E4:
	branch (int32) Mem0[o2_16:int8] - g3_11 != 0x00000000 l000117E4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000117E4_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011808:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000117E4_ds_f:
	o3_10 = o3_10 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000117F4:
	g3_11 = (int32) Mem0[o3_10:int8]
	branch g3_11 != 0x00000000 l000117F4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000117F4_ds_t:
	o2_16 = o2_16 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000117F4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011804:
	o0 = o0 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011810_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001181C:
	o0 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011820:
	return o0
// DataOut:
// DataOut (flags):
// SymbolicIn:

substr_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 safe_read(word32 o0, word32 o1, word32 o2, ptr32 & l1Out, ptr32 & l2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31] o2:[0..31]
// LiveOut: l0 l1 l2
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 o1
// Preserved: o2 o3 o4 o5 o7 sp
safe_read_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011828:
	word32 i1_62 = o1
	word32 l0_21 = o2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011840:
	byte NZV_26 = SLICE(cond(l0_21), bool, 3)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011844:
	branch NZV_26 l00011840_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011840_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011840_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001184C:
	word32 o0_34 = read(o0, i1_62, l0_21)
	branch o0_34 >= 0x00000000 l0001184C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001184C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011874:
	branch o0_34 != 0x00000000 l00011874_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011874_ds_t:
	l0_21 = l0_21 - o0_34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011880:
	l1Out = 0x0002B400
	l2Out = o0
	return l0_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

safe_read_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011874_ds_t:
	l0_21 = l0_21 - o0_34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001183C:
	i1_62 = i1_62 + o0_34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001187C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001184C_ds_f:
	word32 o0_63 = Mem0[0x0002B760:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011864:
	branch o0_63 == 0x00000004 l00011864_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011864_ds_t:
	NZV_26 = SLICE(cond(l0_21), bool, 3) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011864_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011870:
	branch l0_21 != 0x00000000 l00011874_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:



void safe_write(word32 o0, word32 o1, word32 o2, word32 o3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31] o2:[0..31] o3:[0..31]
// LiveOut:
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 l3 l4 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
safe_write_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011888:
	word32 i1_107 = o1
	word32 i2_30 = o2
	branch o2 <= 0x00000000 l00011888_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011888_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011888_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011898:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000118A4:
	word32 o0_33 = write(o0, i1_107, i2_30)
	branch o0_33 >= 0x00000000 l00011898_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011898_ds_t:
	i2_30 = i2_30 - o0_33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000118FC:
	i1_107 = i1_107 + o0_33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000118BC:
	branch Mem0[0x0002B760:word32] == 0x00000004 l000118BC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000118BC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011900:
	branch i2_30 > 0x00000000 l00011900_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011900_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011900_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000118BC_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000118CC:
	word32 l4_163
	word32 l0_162
	word32 l2_66
	word32 l3_67
	word32 i0_164
	shortpath(0x00000000, o3, out l0_162, out l2_66, out l3_67, out l4_163, out i0_164)
	xstrerror(l2_66)
	word32 i1_96
	word32 i2_165
	word32 i6_166
	notice(l3_67 | 0x000000E0, out i1_96, out i2_165, out i6_166)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001190C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

safe_write_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void save_pointers()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: g2 g3 o0 o1 o2
// Preserved: sp
save_pointers_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011914:
	word32 o1_7 = Mem0[0x00028210:word32]
	Mem10[0x0002B280:word32] = Mem0[0x000281E0:word32]
	Mem11[0x0002B290:word32] = o1_7
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

save_pointers_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void restore_pointers()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: g2 g3 o0 o1 o2
// Preserved: sp
restore_pointers_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011938:
	word32 o1_7 = Mem0[0x0002B290:word32]
	Mem10[0x000281E0:word32] = Mem0[0x0002B280:word32]
	Mem11[0x00028210:word32] = o1_7
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

restore_pointers_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 is_id_char(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: o0
// Trashed: NZVC g0 g2 g3 o0
// Preserved: sp
is_id_char_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001195C:
	word32 g2_13
	branch ((word32) Mem0[(o0 & 0x000000FF) + 0x0002B411:byte] & 0x00000007) != 0x00000000 l0001195C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001195C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001195C_ds_f:
	g2_13 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011978:
	branch (o0 & 0x000000FF) == 0x0000005F l00011978_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011978_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011978_ds_f:
	word32 g0_19 = (o0 & 0x000000FF) - 0x00000024
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011984:
	branch g0_19 != 0x00000000 l00011984_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011984_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011984_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001198C:
	g2_13 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011990:
	return g2_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

is_id_char_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void usage()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
usage_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

usage_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011998:
	word32 i1_35
	word32 i2_36
	word32 i6_37
	notice(0x00017108, out i1_35, out i2_36, out i6_37)
	exit(0x00000021)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 in_system_include_dir(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: o0
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 o0
// Preserved: o1 o2 o3 o4 o5 o7 sp
in_system_include_dir_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000119BC:
	branch (int32) Mem0[o0:int8] == 0x0000002F l000119BC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000119BC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000119E0:
	word32 i0_58
	branch Mem0[0x00027ED0:word32] == 0x00000000 l000119E0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000119E0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000119E0_ds_f:
	word32 l1_31 = 0x00027ED0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000119F0:
	word32 l0_32 = Mem0[0x00027ED0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000119F4:
	branch strncmp(o0, l0_32, strlen(l0_32)) != 0x00000000 l000119F0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000119F0_ds_t:
	l1_31 = l1_31 + 0x00000010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A18:
	branch (int32) Mem0[o0 + strlen(Mem0[l1_31:word32]):int8] == 0x0000002F l00011A18_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A18_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000119D8:
	i0_58 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A18_ds_f:
	l1_31 = l1_31 + 0x00000010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A30:
	branch Mem0[l1_31:word32] != 0x00000000 l00011A30_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A30_ds_t:
	l0_32 = Mem0[l1_31:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A40:
	i0_58 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A44:
	return i0_58
// DataOut:
// DataOut (flags):
// SymbolicIn:

in_system_include_dir_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000119BC_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000119D0:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 needs_to_be_converted(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: o0
// Trashed: NZVC g0 g2 g3 o0
// Preserved: sp
needs_to_be_converted_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A4C:
	word32 o0_16
	word32 g3_18 = Mem0[o0 + 4:word32]
	branch g3_18 == 0x00000000 l00011A4C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A4C_ds_t:
	o0_16 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A4C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A5C:
	word32 g2_11 = (int32) Mem0[g3_18 + 32:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A60:
	branch g2_11 != 0x00000000 l00011A5C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A5C_ds_t:
	o0_16 = 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A5C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A6C:
	g3_18 = Mem0[g3_18:word32]
	branch g3_18 != 0x00000000 l00011A6C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A6C_ds_t:
	g2_11 = (int32) Mem0[g3_18 + 32:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A7C:
	o0_16 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A80:
	return o0_16
// DataOut:
// DataOut (flags):
// SymbolicIn:

needs_to_be_converted_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 directory_specified_p(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: o0
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 o0
// Preserved: o1 o2 o3 o4 o5 o7 sp
directory_specified_p_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A88:
	word32 i0_26
	word32 l1_22 = Mem0[0x0002B764:word32]
	branch l1_22 == 0x00000000 l00011A88_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A88_ds_t:
	i0_26 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011AA0:
	word32 l0_27 = Mem0[l1_22:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011AA4:
	branch strncmp(o0, l0_27, strlen(l0_27)) != 0x00000000 l00011AA0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011AA0_ds_t:
	l1_22 = Mem0[l1_22 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011AC8:
	branch (int32) Mem0[o0 + strlen(Mem0[l1_22:word32]):int8] != 0x0000002F l00011AC8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011AC8_ds_t:
	l1_22 = Mem0[l1_22 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011AE0:
	word32 o0_56 = o0 + strlen(Mem0[l1_22:word32])
	branch (int32) Mem0[o0_56 + 1:int8] == 0x00000000 l00011AE0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011AE0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011AE0_ds_f:
	word32 o2_62 = o0_56 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011AFC:
	bool Z_137 = SLICE(cond((int32) Mem0[o0_56 + 0x00000001:int8] - 0x0000002F), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011B04:
	branch Z_137 l00011AFC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011AFC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011B24:
	l1_22 = Mem0[l1_22 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011B28:
	branch l1_22 != 0x00000000 l00011B28_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011B28_ds_t:
	l0_27 = Mem0[l1_22:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011B34:
	i0_26 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011AFC_ds_f:
	o2_62 = o2_62 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011B0C:
	word32 o0_80 = (int32) Mem0[o2_62:int8]
	branch o0_80 != 0x00000000 l00011B0C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011B0C_ds_t:
	Z_137 = SLICE(cond(o0_80 - 0x0000002F), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011B0C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011B1C:
	i0_26 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011B38:
	return i0_26
// DataOut:
// DataOut (flags):
// SymbolicIn:

directory_specified_p_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 file_excluded_p(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: o0
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 o0
// Preserved: o1 o2 o3 o4 o5 o7 sp
file_excluded_p_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011B40:
	word32 i0_30
	word32 o0_21 = strlen(o0)
	word32 l0_26 = Mem0[0x0002B408:word32]
	branch l0_26 == 0x00000000 l00011B40_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011B40_ds_t:
	i0_30 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011B64:
	word32 l2_31 = o0 + o0_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011B68:
	branch strcmp(l2_31 - strlen(Mem0[l0_26:word32]), Mem0[l0_26:word32]) != 0x00000000 l00011B64_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011B64_ds_t:
	l0_26 = Mem0[l0_26 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011B88:
	branch (int32) Mem0[o0_21 - strlen(Mem0[l0_26:word32]) + o0 + -1:int8] != 0x0000002F l00011B88_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011B88_ds_t:
	l0_26 = Mem0[l0_26 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011BB0:
	branch l0_26 != 0x00000000 l00011BB0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011BB0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011BB0_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011BBC:
	i0_30 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011BA8:
	i0_30 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011BC0:
	return i0_30
// DataOut:
// DataOut (flags):
// SymbolicIn:

file_excluded_p_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 string_list_cons(ptr32 & i6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: i6 o0
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
string_list_cons_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011BC8:
	word32 i1_23
	word32 i2_24
	word32 i6_28
	Mem34[0x00000008:word32] = xmalloc(0x00000008, out i1_23, out i2_24, out i6_28)
	Mem35[0x0000000C:word32] = i1_23
	i6Out = i6_28
	return 0x00000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

string_list_cons_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 visit_each_hash_node(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: l0
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 o0
// Preserved: g3 o1 o2 o3 o4 o5 o7 sp
visit_each_hash_node_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011BE4:
	word32 i0_33 = o0
	branch o0 - (o0 + 0x00001800) >=u 0x00000000 l00011BE4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011BE4_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011BE4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011BFC:
	word32 o0_28 = Mem0[o0 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C00:
	branch o0_28 == 0x00000000 l00011BFC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011BFC_ds_t:
	l0 = i0_33 + 0x0000000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011BFC_ds_f:
	l0 = i0_33 + 0x0000000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C0C:
	reverse_def_dec_list(i0_33)
	i0_33 = Mem0[i0_33:word32]
	branch i0_33 != 0x00000000 l00011C0C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C0C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C0C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C24:
	i0_33 = l0
	branch l0 - (o0 + 0x00001800) <u 0x00000000 l00011C24_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C24_ds_t:
	o0_28 = Mem0[l0 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C34:
	return l0
// DataOut:
// DataOut (flags):
// SymbolicIn:

visit_each_hash_node_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 add_symbol(word32 o0, word32 o1, ptr32 & i1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31]
// LiveOut: i1 o0
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
add_symbol_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C3C:
	Mem21[o0:word32] = 0x00000000
	word32 i0_28
	word32 i1_29
	word32 i6_34
	word32 l0_36
	Mem49[l0_36 + 4:word32] = savestring(o1, strlen(o1), out l0_36, out i0_28, out i1_29, out i6_34)
	Mem50[l0_36 + 8:word32] = 0x00000000
	i1Out = i1_29
	return i0_28
// DataOut:
// DataOut (flags):
// SymbolicIn:

add_symbol_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 lookup(word32 o0, word32 o1, ptr32 & l1Out, ptr32 & i1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31]
// LiveOut: i1 l1 o0
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
lookup_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C6C:
	word32 i1_100 = o1
	word32 o3_25 = 0x00000000
	branch (int32) Mem0[o1:int8] == 0x00000000 l00011C6C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C6C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C6C_ds_f:
	word32 o2_28 = o1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C88:
	o2_28 = o2_28 + 0x00000001
	word32 o1_31 = (int32) Mem0[o2_28:int8]
	branch (int32) Mem0[o2_28:int8] != 0x00000000 l00011C88_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C88_ds_t:
	o3_25 = o3_25 + o1_31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C88_ds_f:
	o3_25 = o3_25 + o1_31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CA0:
	word32 o0_102
	word32 o3_41 = o3_25 & 0x000001FF
	word32 i0_125 = o0 + o3_41 * 0x0000000C
	word32 o0_49 = Mem0[i0_125 + 4:word32]
	branch o0_49 != 0x00000000 l00011CA0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CA0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CCC:
	branch strcmp(o0_49, o1) == 0x00000000 l00011CCC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CCC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CCC_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CE0:
	branch Mem0[o0 + o3_41 * 0x0000000C:word32] == 0x00000000 l00011CE0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CE0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CE0_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CF0:
	i0_125 = Mem0[i0_125:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CF4:
	branch strcmp(Mem0[i0_125 + 4:word32], o1) == 0x00000000 l00011CF0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CF0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CF0_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011D0C:
	branch Mem0[i0_125:word32] != 0x00000000 l00011D0C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011D0C_ds_t:
	i0_125 = Mem0[i0_125:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011D1C:
	word32 i2_179
	word32 i6_180
	Mem98[xmalloc(0x0000000C, out i1_100, out i2_179, out i6_180):word32] = 0x0000000C
	o0_102 = 0x0000000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CA0_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CC4:
	o0_102 = i0_125
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011D28:
	i0_125 = add_symbol(o0_102, i1_100, out i1_100)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011D34:
	l1Out = o0
	i1Out = i1_100
	return i0_125
// DataOut:
// DataOut (flags):
// SymbolicIn:

lookup_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void free_def_dec(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut:
// Trashed: NZVC i0 i1 i2 i3 i4 i5 i6 i7 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
free_def_dec_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011D3C:
	xfree(xfree(Mem0[o0 + 12:word32]))
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

free_def_dec_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void unexpand_if_needed(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut:
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l5 l6 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved: g2 g3 l2 l3 l4 l7
unexpand_if_needed_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011D58:
	word32 i0_128 = o0
	word32 i1_137 = 0x00000000
	branch Mem0[0x00027F50:word32] != 0x00000000 l00011D58_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011D58_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011D58_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011D78:
	Mem29[0x00027F54:word32] = 0x00000400
	word32 i2_463
	word32 i6_464
	i0_128 = xmalloc(0x00000400, out i1_137, out i2_463, out i6_464)
	Mem43[0x00027F50:word32] = 0x00000400
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011D88:
	word32 l1_120
	branch (int32) Mem45[i0_128:int8] == 0x0000000A l00011D88_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011D88_ds_t:
	l1_120 = Mem45[0x00027F50:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011D88_ds_f:
	l1_120 = Mem45[0x00027F50:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011D98:
	word32 o0_216 = Mem45[0x00016F14:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011DA0:
	branch o0_216 == 0x00000000 l00011D98_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011D98_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011D98_ds_f:
	word32 l4_100 = 0x00016F14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011DAC:
	word32 l0_107 = Mem62[0x00016F14:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011DB0:
	word32 o0_66 = strlen(l0_107)
	branch (int32) (Mem62[i0_128:int8] - Mem62[l0_107:int8]) != 0x00000000 l00011DAC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011DAC_ds_t:
	l4_100 = l4_100 + 0x00000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011DD0:
	branch strncmp(i0_128, l0_107, o0_66) != 0x00000000 l00011DD0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011DD0_ds_t:
	l4_100 = l4_100 + 0x00000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011DEC:
	branch is_id_char((int32) Mem62[i0_128 + o0_66:int8]) != 0x00000000 l00011DEC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011DEC_ds_t:
	l4_100 = l4_100 + 0x00000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011E64:
	branch Mem62[l4_100:word32] != 0x00000000 l00011E64_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011E64_ds_t:
	l0_107 = Mem62[l4_100:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011E74:
	word32 o0_130
	word32 o1_113 = Mem62[0x00027F50:word32]
	word32 l0_123 = l1_120 - o1_113
	branch l0_123 - Mem62[0x00027F54:word32] != 0x00000000 l00011E74_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011E74_ds_t:
	o0_130 = (word32) Mem62[i0_128:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011E8C:
	Mem134[0x00027F54:word32] = l0_123 << 0x00000001
	word32 i2_467
	i0_128 = xrealloc(o1_113, l0_123 << 0x00000001, out i1_137, out i2_467)
	Mem149[0x00027F50:word32] = o1_113
	l1_120 = o1_113 + l0_123
	o0_130 = (word32) Mem149[i0_128:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011EAC:
	Mem153[l1_120:byte] = (byte) o0_130
	i0_128 = i0_128 + 0x00000001
	l1_120 = l1_120 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011E00:
	word32 o0_159 = strlen(Mem62[l4_100 + 4:word32])
	word32 o1_162 = Mem62[0x00027F50:word32]
	word32 o2_164 = Mem62[0x00027F54:word32]
	i1_137 = 0x00000001
	branch l1_120 + o0_159 - o1_162 - o2_164 < 0x00000000 l00011E00_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011E00_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011E00_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011E2C:
	word32 o2_171 = (o2_164 << 0x00000001) + o0_159
	Mem175[0x00027F54:word32] = o2_171
	word32 i2_465
	i0_128 = xrealloc(o1_162, o2_171, out i1_137, out i2_465)
	Mem190[0x00027F50:word32] = o1_162
	l1_120 = o1_162 + (l1_120 - o1_162)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011E4C:
	strcpy(l1_120, Mem192[l4_100 + 4:word32])
	l1_120 = l1_120 + o0_159
	i0_128 = i0_128 + o0_66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011EB8:
	branch (int32) Mem205[i0_128:int8] != 0x0000000A l00011EB8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011EB8_ds_t:
	o0_216 = Mem205[0x00016F14:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011EB8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011EC8:
	word32 o2_223 = Mem222[0x00027F50:word32]
	word32 o1_229 = Mem222[0x00027F54:word32]
	branch l1_120 - (o2_223 + 0xFFFFFFFE) - o1_229 < 0x00000000 l00011EC8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011EC8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011EC8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011EE4:
	Mem240[0x00027F54:word32] = o1_229 << 0x00000001
	word32 i2_466
	xrealloc(o2_223, o1_229 << 0x00000001, out i1_137, out i2_466)
	Mem256[0x00027F50:word32] = o2_223
	l1_120 = o2_223 + (l1_120 - o2_223)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011EFC:
	Mem259[l1_120:byte] = 0x0A
	word32 l1_260 = l1_120 + 0x00000001
	branch i1_137 != 0x00000000 l00011EFC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011EFC_ds_t:
	Mem274[l1_260:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011F1C:
	word32 o0_276 = Mem274[0x00027F50:word32]
	word32 i1_280
	word32 i6_285
	word32 l0_287
	word32 i0_468
	savestring(o0_276, l1_260 - o0_276, out l0_287, out i0_468, out i1_280, out i6_285)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011EFC_ds_f:
	Mem301[l1_260:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011F14:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011F2C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

unexpand_if_needed_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 abspath(word32 o0, word32 o1, ptr32 & i6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31]
// LiveOut: i6 l0
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
abspath_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011F34:
	word32 i0_25 = o0
	branch o0 != 0x00000000 l00011F34_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011F34_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011F34_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011F44:
	i0_25 = Mem0[0x0002B270:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011F4C:
	word32 o2_47
	word32 sp_39 = fp + 0xFFFFFF88 - ((strlen(i0_25) + strlen(o1)) + 0x00000009 & 0xFFFFFFF8)
	branch (int32) Mem0[o1:int8] == 0x0000002F l00011F4C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011F4C_ds_t:
	o2_47 = sp_39 + 0x00000060
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011F4C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011F88:
	word32 o1_49 = (word32) Mem0[i0_25:byte]
	Mem54[sp_39 + 0x00000060:byte] = (byte) o1_49
	o2_47 = sp_39 + 0x00000061
	branch o1_49 << 0x00000018 == 0x00000000 l00011F88_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011F88_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011F88_ds_f:
	word32 i0_57 = i0_25 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011FA4:
	word32 o0_60 = (word32) Mem59[i0_57:byte]
	Mem63[o2_47:byte] = (byte) o0_60
	i0_57 = i0_57 + 0x00000001
	branch o0_60 << 0x00000018 != 0x00000000 l00011FA4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011FA4_ds_t:
	o2_47 = o2_47 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011FA4_ds_f:
	o2_47 = o2_47 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011FC0:
	Mem72[o2_47 + -1:byte] = 0x2F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011FC8:
	word32 o0_77 = (word32) Mem76[o1:byte]
	Mem84[o2_47:byte] = (byte) o0_77
	word32 i0_102 = o1 + 0x00000001
	word32 o2_104 = o2_47 + 0x00000001
	branch o0_77 << 0x00000018 == 0x00000000 l00011FC8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011FC8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011FC8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011FE8:
	word32 o0_96 = (word32) Mem95[i0_102:byte]
	Mem99[o2_104:byte] = (byte) o0_96
	i0_102 = i0_102 + 0x00000001
	branch o0_96 << 0x00000018 != 0x00000000 l00011FE8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011FE8_ds_t:
	o2_104 = o2_104 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011FE8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012004:
	word32 o2_112 = sp_39 + 0x00000061
	branch (int32) Mem108[sp_39 + 0x00000061:int8] == 0x00000000 l00012004_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012004_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012004_ds_f:
	word32 o1_117 = sp_39 + 0x00000061
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012018:
	bool Z_122 = SLICE(cond((int32) Mem108[sp_39 + 0x00000061:int8] - 0x0000002F), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012024:
	bool Z_136
	branch Z_122 l00012018_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012018_ds_t:
	word32 o3_125 = (word32) Mem124[o1_117:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012044:
	Z_136 = SLICE(cond(o3_125 - 0x0000002E), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012018_ds_f:
	word32 o3_128 = (word32) Mem124[o1_117:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001202C:
	branch (int32) Mem124[o2_112 + -1:int8] != 0x0000002F l0001202C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001202C_ds_t:
	Z_136 = SLICE(cond(o3_128 - 0x0000002E), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012048:
	word32 o0_141
	branch Z_136 l00012048_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012048_ds_t:
	o0_141 = (word32) Mem124[o1_117:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012050:
	branch (int32) Mem124[o2_112 + -1:int8] != 0x0000002F l00012050_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012050_ds_t:
	o0_141 = (word32) Mem124[o1_117:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012060:
	word32 o0_148 = (int32) Mem124[o1_117 + 1:int8]
	branch o0_148 == 0x00000000 l00012060_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012060_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012060_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012070:
	branch o0_148 != 0x0000002F l00012070_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012070_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012080:
	branch o0_148 != 0x0000002E l00012080_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012080_ds_t:
	o0_141 = (word32) Mem124[o1_117:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012088:
	word32 o0_161 = (int32) Mem124[o1_117 + 2:int8]
	branch o0_161 == 0x00000000 l00012088_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012088_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012088_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012098:
	branch o0_161 != 0x0000002F l00012098_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012098_ds_t:
	o0_141 = (word32) Mem124[o1_117:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012104:
	Mem173[o2_112:byte] = (byte) o0_141
	o1_117 = o1_117 + 0x00000001
	o2_112 = o2_112 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000120A0:
	word32 o0_182
	branch o0_161 != 0x0000002F l000120A0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000120A0_ds_t:
	o0_182 = o1_117 + 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000120A0_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000120AC:
	o0_182 = o1_117 + 0x00000003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000120B0:
	word32 o2_187 = o2_112 + 0xFFFFFFFE
	o1_117 = o0_182
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000120B8:
	word32 g0_192 = o2_187 - (sp_39 + 0x00000060)
	bool C_194 = SLICE(cond(g0_192), bool, 0)
	branch g0_192 <u 0x00000000 l000120B0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000120B0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000120B0_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000120C4:
	branch (int32) Mem124[o2_187:int8] != 0x0000002F l000120C4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000120C4_ds_t:
	o2_187 = o2_187 + 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000120D4:
	C_194 = SLICE(cond(o2_187 - (sp_39 + 0x00000060)), bool, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000120D8:
	branch C_194 l000120D8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000120D8_ds_t:
	o2_112 = o2_187 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000120FC:
	Mem207[o2_112:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000120D8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000120E0:
	word32 i2_320
	word32 i6_321
	word32 i1_319
	notice(0x00017148, out i1_319, out i2_320, out i6_321)
	exit(0x00000021)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012070_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012078:
	o1_117 = o1_117 + 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001202C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001203C:
	o1_117 = o1_117 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012110:
	word32 o0_245 = (int32) Mem244[o1_117:int8]
	branch o0_245 != 0x00000000 l00012110_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012110_ds_t:
	Z_122 = SLICE(cond(o0_245 - 0x0000002F), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012110_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012120:
	branch (int32) Mem255[o2_112 + -1:int8] != 0x0000002F l00012120_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012120_ds_t:
	Mem260[o2_112:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012120_ds_f:
	Mem261[o2_112:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012130:
	o2_112 = o2_112 + 0xFFFFFFFF
	Mem263[o2_112:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012138:
	word32 i1_276
	word32 i6_281
	word32 l0_283
	word32 i0_318
	savestring(sp_39 + 0x00000060, o2_112 - (sp_39 + 0x00000060), out l0_283, out i0_318, out i1_276, out i6_281)
	i6Out = i6_281
	return l0_283
// DataOut:
// DataOut (flags):
// SymbolicIn:

abspath_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 shortpath(word32 o0, word32 o1, ptr32 & l0Out, ptr32 & l2Out, ptr32 & l3Out, ptr32 & l4Out, ptr32 & i0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31]
// LiveOut: i0 l0 l2 l3 l4 o0
// Trashed: NZVC g0 i0 l0 l1 l2 l3 l4 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
shortpath_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001214C:
	word32 o0_25 = strlen(o1)
	word32 i6_426
	word32 l0_114 = abspath(o0, o1, out i6_426)
	word32 i1_55
	word32 i2_56
	word32 i6_60
	word32 i0_121 = xmalloc(o0_25, out i1_55, out i2_56, out i6_60)
	word32 l2_126 = 0x00000000
	word32 o1_66 = (int32) Mem0[l0_114:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012198:
	word32 o0_75
	branch o1_66 == 0x00000000 l00012198_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012198_ds_t:
	o0_75 = (int32) Mem0[l0_114:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000121A4:
	branch o1_66 - (int32) Mem0[i0_121:int8] == 0x00000000 l000121A4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000121A4_ds_t:
	l0_114 = l0_114 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012190:
	o1_66 = (int32) Mem0[l0_114:int8]
	i0_121 = i0_121 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000121B4:
	o0_75 = (int32) Mem0[l0_114:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000121B8:
	word32 i0_218
	bool Z_107
	branch o0_75 != 0x00000000 l000121B8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000121B8_ds_t:
	word32 o1_91 = (word32) Mem0[i0_121:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000121F8:
	Z_107 = SLICE(cond(o1_91), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000121B8_ds_f:
	word32 o1_94 = (word32) Mem0[i0_121:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000121C4:
	word32 o0_96 = o1_94 << 0x00000018 >> 0x00000018
	branch o0_96 == 0x00000000 l000121C4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000121C4_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000121C4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000121D8:
	branch o0_96 != 0x0000002F l000121D8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000121D8_ds_t:
	Z_107 = SLICE(cond(o1_94), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000121FC:
	word32 o0_113
	branch Z_107 l000121FC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000121FC_ds_t:
	o0_113 = (int32) Mem0[l0_114:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012204:
	l0_114 = l0_114 + 0xFFFFFFFF
	branch (int32) Mem0[l0_114:int8] != 0x0000002F l00012204_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012204_ds_t:
	i0_121 = i0_121 + 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012204_ds_f:
	word32 i0_123 = i0_121 + 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012218:
	l0_114 = l0_114 + 0x00000001
	i0_121 = i0_123 + 0x00000001
	l2_126 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012238:
	o0_113 = (int32) Mem0[l0_114:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001223C:
	word32 l1_188 = o0_25
	Mem135 = Mem0 (alias)
	branch o0_113 != 0x00000000 l0001223C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001223C_ds_t:
	word32 o1_136 = (word32) Mem135[l0_114:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012228:
	branch o1_136 != 0x0000002F l00012228_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012228_ds_t:
	l0_114 = l0_114 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012228_ds_f:
	l0_114 = l0_114 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012234:
	l2_126 = l2_126 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001223C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012248:
	l0_114 = l2_126 * 0x00000003 + strlen(i0_121)
	branch l0_114 - o0_25 <u 0x00000000 l00012248_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012248_ds_t:
	l2_126 = l2_126 + 0xFFFFFFFF + 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012270:
	branch l2_126 == 0xFFFFFFFF l00012270_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012270_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012270_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001227C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012288:
	branch o0_25 * 0x00000002 - (l1_188 + 0x00000003) <=u 0x00000000 l0001227C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001227C_ds_t:
	l2_126 = l2_126 + 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001227C_ds_f:
	l2_126 = l2_126 + 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012298:
	Mem198[l1_188:byte] = 0x2E
	word32 l1_199 = l1_188 + 0x00000001
	Mem200[l1_199:byte] = 0x2E
	Mem203[l1_199 + 0x00000001:byte] = 0x2F
	branch l2_126 != 0x00000000 l00012298_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012298_ds_t:
	l1_188 = l1_199 + 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012298_ds_f:
	l1_188 = l1_199 + 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000122B8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000122BC:
	branch o0_25 * 0x00000002 - l1_188 <=u 0x00000000 l000122B8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000122B8_ds_t:
	i0_218 = i1_55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000122C8:
	word32 o0_221 = (word32) Mem220[i0_121:byte]
	Mem223[l1_188:byte] = (byte) o0_221
	i0_121 = i0_121 + 0x00000001
	branch o0_221 << 0x00000018 != 0x00000000 l000122C8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000122C8_ds_t:
	l1_188 = l1_188 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000122C8_ds_f:
	word32 l1_229 = l1_188 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000122E4:
	branch (int32) Mem223[l1_229 + 0xFFFFFFFE:int8] == 0x0000002F l000122E4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000122E4_ds_t:
	Mem235[l1_229 + 0xFFFFFFFE:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000122F8:
	i0_218 = o0_25
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012248_ds_f:
	l2_126 = l2_126 + 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012268:
	i0_218 = i1_55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000121D8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000121E0:
	branch o0_96 != 0x00000000 l000121E0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000121E0_ds_t:
	i0_218 = i0_121 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000121EC:
	i0_218 = 0x00017168
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000122FC:
	l0Out = l0_114
	l2Out = l2_126
	l3Out = o0_25
	l4Out = o0_25
	i0Out = i0_218
	return i0_218
// DataOut:
// DataOut (flags):
// SymbolicIn:

shortpath_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 find_file(word32 o0, ptr32 & l2Out, ptr32 & l3Out, ptr32 & i0Out, ptr32 & i1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: i0 i1 l2 l3 o0
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 l3 l4 l5 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
find_file_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012304:
	word32 l1_34
	word32 i1_122
	word32 o0_35 = lookup(0x00028240, o0, out l1_34, out i1_122)
	word32 i0_142 = Mem0[o0_35 + 8:word32]
	branch i0_142 != 0x00000000 l00012304_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012304_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012304_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012330:
	word32 l4_130
	word32 i2_57
	word32 i6_127
	xmalloc(0x0000000C, out i1_122, out i2_57, out i6_127)
	branch i1_122 == 0x00000000 l00012330_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012330_ds_t:
	l4_130 = 0x0000000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001234C:
	branch stat(l1_34, i6_127 + 0xFFFFFF68) != 0xFFFFFFFF l0001234C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001234C_ds_t:
	Mem79[o0_35 + 8:word32] = 0x0000000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012368:
	word32 l0_90
	word32 i0_217
	shortpath(0x00000000, l1_34, out l0_90, out l2, out l3, out l4_130, out i0_217)
	xstrerror(l2)
	word32 i2_218
	Mem129[i6_127 + -88:word32] = notice(l0_90, out i1_122, out i2_218, out i6_127)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012330_ds_f:
	l4_130 = 0x0000000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012344:
	Mem131[i6_127 + -88:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000123B0:
	Mem134[o0_35 + 8:word32] = l4_130
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000123B4:
	Mem137[l4_130:word32] = o0_35
	Mem138[l4_130 + 4:word32] = 0x00000000
	Mem143[l4_130 + 8:word32] = Mem138[i6_127 + -88:word32]
	i0_142 = l4_130
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000123C8:
	l2Out = l2
	l3Out = l3
	i0Out = i0_142
	i1Out = i1_122
	return i0_142
// DataOut:
// DataOut (flags):
// SymbolicIn:

find_file_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void aux_info_corrupted()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
aux_info_corrupted_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

aux_info_corrupted_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000123D0:
	word32 i1_36
	word32 i2_37
	word32 i6_38
	notice(0x00017190, out i1_36, out i2_37, out i6_38)
	exit(0x00000021)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 check_aux_info(word32 o0, ptr32 & i1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: i0 i1
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7
// Preserved: o0 o1 o2 o3 o4 o5 o7 sp
check_aux_info_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000123F8:
	branch o0 != 0x00000000 l000123F8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000123F8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012410:
	i1Out = o1
	return o0
// DataOut:
// DataOut (flags):
// SymbolicIn:

check_aux_info_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000123F8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012408:
	aux_info_corrupted()
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 find_corresponding_lparen(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: o0
// Trashed: NZVC g0 g2 g3 o0
// Preserved: sp
find_corresponding_lparen_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012418:
	word32 o0_21 = o0 + 0xFFFFFFFF + 0xFFFFFFFF
	word32 g3_14 = 0x00000001
	word32 g2_33 = (int32) Mem0[o0 + 0xFFFFFFFF:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012424:
	branch g2_33 == 0x00000028 l00012418_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012418_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012440:
	g3_14 = g3_14 + 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012418_ds_f:
	word32 g0_16 = g2_33 - 0x00000029
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012430:
	branch g0_16 == 0x00000000 l00012430_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012430_ds_t:
	g3_14 = g3_14 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012444:
	o0_21 = o0_21 + 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012438:
	o0_21 = o0_21 + 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012448:
	branch g3_14 != 0x00000000 l00012448_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012448_ds_t:
	g2_33 = (int32) Mem0[o0_21:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012454:
	return o0_21 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

find_corresponding_lparen_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void referenced_file_is_newer(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut:
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 l3 l4 l5 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
referenced_file_is_newer_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001245C:
	word32 l1_83
	word32 i1_200
	word32 i1_201
	word32 i1_199
	word32 i0_66 = check_aux_info(0x00000001 - (((int32) Mem0[check_aux_info(0x00000001 - (((int32) Mem0[check_aux_info(0x00000001 - (((int32) Mem0[o0:int8] ^ 0x0000002F) >u 0x00000000), out i1_199) + 1:int8] ^ 0x0000002A) >u 0x00000000), out i1_200) + 2:int8] ^ 0x00000020) >u 0x00000000), out i1_201)
	branch (int32) Mem0[i0_66 + 3:int8] == 0x0000003A l0001245C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001245C_ds_t:
	l1_83 = i0_66 + 0x00000003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001245C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000124B0:
	l1_83 = i0_66 + 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000124B4:
	branch (int32) Mem0[l1_83:int8] != 0x0000003A l000124B4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000124B4_ds_t:
	l1_83 = l1_83 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000124C4:
	word32 l1_96 = l1_83 - (i0_66 + 0x00000003)
	word32 sp_101 = fp + 0xFFFFFF90 - (l1_96 + 0x00000008 & 0xFFFFFFF8)
	strncpy(sp_101 + 0x00000060, i0_66 + 0x00000003, l1_96)
	word32 o0_109 = Mem0[0x00028190:word32]
	Mem110[sp_101 + 0x00000060 + l1_96:byte] = 0x00
	word32 i6_202
	abspath(o0_109, sp_101 + 0x00000060, out i6_202)
	word32 i1_136
	word32 l2_203
	word32 l3_204
	word32 i0_205
	branch Mem110[find_file(o0_109, out l2_203, out l3_204, out i0_205, out i1_136) + 8:word32] - i1_136 > 0x00000000 l000124C4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000124C4_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000124C4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012510:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012514:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

referenced_file_is_newer_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void save_def_or_dec()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC g0 g2 g3 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 l3 l4 l5 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
save_def_or_dec_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001251C:
	word32 i6_1142
	word32 i1_1144
	word32 i2_1141
	word32 i1_1140
	word32 i1_1145
	word32 i1_1143
	word32 i0_81 = check_aux_info(0x00000001 - (((int32) Mem0[check_aux_info(0x00000001 - (((int32) Mem0[check_aux_info(0x00000001 - (((int32) Mem0[xmalloc(0x0000002C, out i1_1140, out i2_1141, out i6_1142):int8] ^ 0x0000002F) >u 0x00000000), out i1_1143) + 1:int8] ^ 0x0000002A) >u 0x00000000), out i1_1144) + 2:int8] ^ 0x00000020) >u 0x00000000), out i1_1145)
	word32 i0_101 = i0_81 + 0x00000003
	branch (int32) Mem0[i0_81 + 3:int8] == 0x0000003A l0001251C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001251C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001251C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012580:
	i0_101 = i0_81 + 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012584:
	branch (int32) Mem0[i0_101:int8] != 0x0000003A l00012584_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012584_ds_t:
	i0_101 = i0_101 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012594:
	word32 i0_185
	word32 l1_112 = i0_101 - (i0_81 + 0x00000003)
	word32 sp_117 = fp + 0xFFFFFF80 - (l1_112 + 0x00000008 & 0xFFFFFFF8)
	strncpy(sp_117 + 0x00000060, i0_81 + 0x00000003, l1_112)
	word32 o0_125 = Mem0[0x00028190:word32]
	Mem128[sp_117 + 0x00000060 + l1_112:byte] = 0x00
	word32 i6_1146
	abspath(o0_125, sp_117 + 0x00000060, out i6_1146)
	word32 i0_152
	word32 l2_172
	word32 l3_173
	word32 i1_1147
	Mem178[l2_172 + 4:word32] = find_file(o0_125, out l2_172, out l3_173, out i0_152, out i1_1147)
	branch (int32) Mem178[i0_152:int8] == 0x0000003A l00012594_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012594_ds_t:
	i0_185 = i0_152
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012594_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000125E8:
	i0_185 = i0_152 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000125EC:
	branch (int32) Mem178[i0_185:int8] != 0x0000003A l000125EC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000125EC_ds_t:
	i0_185 = i0_185 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000125FC:
	word32 o2_220
	word32 l0_196 = i0_185 - i0_152
	strncpy(l3_173, i0_152, l0_196)
	Mem205[l3_173 + l0_196:byte] = 0x00
	Mem211[l2_172 + 8:word32] = atoi(l3_173)
	word32 o1_213 = (word32) Mem211[i0_185 + 0x00000001:byte]
	branch (o1_213 + 0xFFFFFFB2 & 0x000000FF) <=u 0x00000001 l000125FC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000125FC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000125FC_ds_f:
	o2_220 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012638:
	branch o1_213 != 0x00000049 l00012638_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012638_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012638_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012644:
	o2_220 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012648:
	word32 o2_257
	word32 i1_1148
	word32 i0_228 = check_aux_info(o2_220, out i1_1148)
	Mem250[l2_172 + 32:byte] = (byte) (0x00000001 - (((int32) Mem211[i0_228:int8] ^ 0x0000004E) >u 0x00000000))
	word32 o0_252 = (int32) Mem250[i0_228 + 0x00000001:int8]
	branch o0_252 == 0x00000043 l00012648_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012648_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012648_ds_f:
	o2_257 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012678:
	branch o0_252 != 0x00000046 l00012678_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012678_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012678_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012684:
	o2_257 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012688:
	word32 i1_266
	word32 i0_265 = check_aux_info(o2_257, out i1_266)
	branch (int32) Mem250[i0_265:int8] == 0x00000046 l00012688_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012688_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012688_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000126A4:
	branch i1_266 == 0x00000000 l000126A4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000126A4_ds_t:
	Mem291[l2_172 + 20:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000126B0:
	Mem294[l2_172 + 20:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000126B8:
	word32 o0_412
	word32 i1_1151
	word32 i1_1152
	word32 i1_1149
	word32 i1_1150
	word32 i0_374 = check_aux_info(0x00000001 - ((((word32) Mem297[check_aux_info(0x00000001 - ((((word32) Mem297[check_aux_info(0x00000001 - ((((word32) Mem297[check_aux_info(0x00000001 - ((((word32) Mem297[i0_265 + 0x00000001:byte] << 0x00000018) >> 0x00000018 ^ 0x00000020) >u 0x00000000), out i1_1149) + 0x00000001:byte] << 0x00000018) >> 0x00000018 ^ 0x0000002A) >u 0x00000000), out i1_1150) + 0x00000001:byte] << 0x00000018) >> 0x00000018 ^ 0x0000002F) >u 0x00000000), out i1_1151) + 0x00000001:byte] << 0x00000018) >> 0x00000018 ^ 0x00000020) >u 0x00000000), out i1_1152)
	branch strncmp(i0_374 + 0x00000001, 0x000171C8, 0x00000006) == 0x00000000 l000126B8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000126B8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000126B8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001275C:
	branch strncmp(i0_374 + 0x00000001, 0x000171D0, 0x00000006) != 0x00000000 l0001275C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001275C_ds_t:
	o0_412 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001275C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012778:
	o0_412 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012780:
	word32 i1_1153
	word32 i0_433 = check_aux_info(o0_412, out i1_1153) + 0x00000007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001278C:
	branch (int32) Mem297[i0_433:int8] != 0x0000003B l0001278C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001278C_ds_t:
	i0_433 = i0_433 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001279C:
	word32 i6_1154
	word32 i0_447
	word32 l0_455
	Mem473[l2_172 + 12:word32] = dupnstr(i0_374 + 0x00000001, i0_433 - i0_374, out l0_455, out i0_447, out i6_1154)
	word32 sp_463 = <invalid>
	word32 i0_468 = i0_447 + 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000127B8:
	word32 o0_480
	branch i0_468 - l0_455 == 0x00000000 l0001279C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001279C_ds_t:
	o0_480 = (int32) Mem473[i0_468:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000127C4:
	word32 o0_481 = (int32) Mem473[i0_468 + -1:int8]
	branch o0_481 == 0x00000020 l000127C4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000127C4_ds_t:
	i0_468 = i0_468 + 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000127D4:
	branch o0_481 == 0x00000009 l000127D4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000127D4_ds_t:
	i0_468 = i0_468 + 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000127E0:
	o0_480 = (int32) Mem473[i0_468:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000127E4:
	branch o0_480 != 0x00000029 l000127E4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000127E4_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000127E4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000127F0:
	Mem499[l2_172 + 28:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012810:
	word32 o0_505 = find_corresponding_lparen(i0_468)
	Mem513[l2_172 + 28:word32] = Mem499[l2_172 + 28:word32] + 0x00000001
	branch (int32) Mem513[o0_505 + -2:int8] == 0x00000029 l00012810_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012810_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000127F8:
	word32 i1_1155
	check_aux_info(0x00000001 - (((int32) Mem513[o0_505 + -3:int8] ^ 0x00000029) >u 0x00000000), out i1_1155)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012810_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012838:
	word32 i1_1156
	word32 i0_548 = check_aux_info(0x00000001 - (((int32) Mem513[o0_505 + 0xFFFFFFFF:int8] ^ 0x00000020) >u 0x00000000), out i1_1156)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012850:
	branch is_id_char((int32) Mem513[i0_548:int8]) != 0x00000000 l00012850_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012850_ds_t:
	i0_548 = i0_548 + 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012864:
	word32 o0_623
	word32 i0_575 = i0_548 + 0x00000001
	word32 l1_577 = o0_505 + 0xFFFFFFFF - i0_575
	word32 sp_583 = sp_463 - (l1_577 + 0x00000008 & 0xFFFFFFF8)
	strncpy(sp_583 + 0x00000060, i0_575, l1_577)
	Mem590[sp_583 + 0x00000060 + l1_577:byte] = 0x00
	word32 l1_1157
	word32 i1_596
	word32 o0_605 = lookup(0x00029A40, sp_583 + 0x00000060, out l1_1157, out i1_596)
	Mem618[l2_172 + 16:word32] = o0_605
	word32 o2_619 = Mem618[o0_605 + 8:word32]
	branch o2_619 == 0x00000000 l00012864_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012864_ds_t:
	o0_623 = Mem618[l2_172 + 20:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000128B0:
	word32 o1_625 = Mem618[l2_172 + 8:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000128B8:
	branch o1_625 - Mem618[o2_619 + 8:word32] != 0x00000000 l000128B0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000128B0_ds_t:
	o2_619 = Mem618[o2_619 + 24:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000128C8:
	branch Mem618[l2_172 + 4:word32] - Mem618[o2_619 + 4:word32] != 0x00000000 l000128C8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000128C8_ds_t:
	o2_619 = Mem618[o2_619 + 24:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012918:
	branch o2_619 != 0x00000000 l00012918_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012918_ds_t:
	o1_625 = Mem618[l2_172 + 8:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012924:
	o0_623 = Mem618[l2_172 + 20:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012928:
	word32 o0_924
	Mem650[l2_172 + 36:word32] = 0x00000000
	branch o0_623 == 0x00000000 l00012928_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012928_ds_t:
	Mem655[l2_172 + 40:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012928_ds_f:
	Mem656[l2_172 + 40:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012938:
	word32 i0_766
	word32 i1_1161
	word32 i1_1164
	word32 i1_1163
	word32 i1_1165
	word32 i1_1162
	word32 i0_748 = check_aux_info(0x00000001 - (((int32) Mem656[check_aux_info(0x00000001 - (((int32) Mem656[check_aux_info(0x00000001 - (((int32) Mem656[check_aux_info(0x00000001 - (((int32) Mem656[check_aux_info(0x00000001 - (((int32) Mem656[i1_596 + 0x00000001:int8] ^ 0x00000020) >u 0x00000000), out i1_1161) + 0x00000001:int8] ^ 0x0000002F) >u 0x00000000), out i1_1162) + 0x00000001:int8] ^ 0x0000002A) >u 0x00000000), out i1_1163) + 0x00000001:int8] ^ 0x00000020) >u 0x00000000), out i1_1164) + 0x00000001:int8] ^ 0x00000028) >u 0x00000000), out i1_1165)
	branch (int32) Mem656[i0_748 + 0x00000001:int8] == 0x00000029 l00012938_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012938_ds_t:
	i0_766 = i0_748 + 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012938_ds_f:
	word32 i0_767 = i0_748 + 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000129C8:
	branch (int32) Mem656[i0_767:int8] != 0x00000029 l000129C8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000129C8_ds_t:
	i0_767 = i0_767 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000129C8_ds_f:
	i0_766 = i0_767 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000129D8:
	word32 l0_1166
	word32 i0_783
	word32 i6_1167
	Mem806[l2_172 + 36:word32] = dupnstr(i0_748 + 0x00000001, i0_766 + 0xFFFFFFFF - (i0_748 + 0x00000001), out l0_1166, out i0_783, out i6_1167)
	word32 i1_1168
	word32 i0_815 = check_aux_info(0x00000001 - (((int32) Mem806[i0_783 + 0x00000001:int8] ^ 0x00000020) >u 0x00000000), out i1_1168)
	branch (int32) Mem806[i0_815 + 0x00000001:int8] != 0x0000002A l000129D8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000129D8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A38:
	word32 i0_833 = i0_815 + 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A3C:
	branch (int32) Mem806[i0_833:int8] != 0x0000002A l00012A3C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A3C_ds_t:
	i0_833 = i0_833 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A4C:
	branch (int32) Mem806[i0_833 + 1:int8] != 0x0000002F l00012A4C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A4C_ds_t:
	i0_833 = i0_833 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A5C:
	word32 i1_1169
	word32 i6_1172
	word32 l0_1170
	word32 i0_1171
	dupnstr(i0_815 + 0x00000001, check_aux_info(0x00000001 - (((int32) Mem806[i0_833 + 0xFFFFFFFF:int8] ^ 0x00000020) >u 0x00000000), out i1_1169) - (i0_815 + 0x00000001), out l0_1170, out i0_1171, out i6_1172)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000129D8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A18:
	word32 i1_900
	check_aux_info(0x00000001 - (((int32) Mem806[i0_815 + 0x00000002:int8] ^ 0x0000002F) >u 0x00000000), out i1_900)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A80:
	Mem913[l2_172 + 40:word32] = 0x00017218
	branch (int32) Mem913[l2_172 + 32:int8] != 0x00000000 l00012A80_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A80_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A94:
	branch (int32) Mem913[Mem913[l2_172 + 36:word32]:int8] != 0x00000000 l00012A94_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A94_ds_t:
	o0_924 = (int32) Mem913[l2_172 + 32:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012AA8:
	Mem926[l2_172 + 32:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012AB0:
	o0_924 = (int32) Mem928[l2_172 + 32:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012AB4:
	branch o0_924 != 0x00000000 l00012AB4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012AB4_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012ACC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012B5C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

save_def_or_dec_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000128DC:
	branch strcmp(Mem618[l2_172 + 12:word32], Mem618[o2_619 + 12:word32]) == 0x00000000 l000128DC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000128DC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012AC0:
	free_def_dec(l2_172)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000128DC_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000128F4:
	word32 i2_1159
	word32 i1_1158
	word32 i6_1160
	notice(0x000171D8, out i1_1158, out i2_1159, out i6_1160)
	exit(0x00000021)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 munge_compile_params(word32 o0, ptr32 & i6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: i0 i6
// Trashed: NZVC g0 g2 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
munge_compile_params_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012B64:
	word32 sp_26 = fp + 0xFFFFFF8C - ((strlen(o0) << 0x00000002) + 0x00000027 & 0xFFFFFFF8)
	Mem31[sp_26 + 0x00000060:word32] = Mem0[0x00027F24:word32]
	word32 i0_112 = o0
	word32 i6_118 = fp
	word32 l0_141 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012B98:
	word32 o3_148
	word32 g2_143 = l0_141 << 0x00000002
	branch ((word32) Mem35[(word32) Mem35[i0_112:byte] + 0x0002B411:byte] & 0x00000008) == 0x00000000 l00012B64_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012B64_ds_t:
	o3_148 = l0_141 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012B64_ds_f:
	o3_148 = l0_141 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012BB4:
	i0_112 = i0_112 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012BB8:
	branch ((word32) Mem35[(word32) Mem35[i0_112:byte] + 0x0002B411:byte] & 0x00000008) != 0x00000000 l00012BB8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012BB8_ds_t:
	i0_112 = i0_112 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012BCC:
	branch (int32) Mem35[i0_112:int8] == 0x00000000 l00012BCC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012BCC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012BCC_ds_f:
	word32 o1_64 = (word32) Mem35[i0_112:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012BDC:
	word32 i0_108
	branch ((word32) Mem35[o1_64 + 0x0002B411:byte] & 0x00000008) != 0x00000000 l00012BDC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012BDC_ds_t:
	i0_108 = i0_112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012BDC_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012BF0:
	i0_108 = i0_112 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012BF4:
	branch (int32) Mem35[i0_108:int8] == 0x00000000 l00012BF0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012BF0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012BF0_ds_f:
	word32 o1_82 = (word32) Mem35[i0_108:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012C04:
	branch ((word32) Mem35[o1_82 + 0x0002B411:byte] & 0x00000008) == 0x00000000 l00012C04_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012C04_ds_t:
	i0_108 = i0_108 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012C14:
	branch (int32) Mem35[i0_112:int8] != 0x0000002D l00012C14_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012C14_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012C14_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012C24:
	branch (word32) Mem35[i0_112 + 1:byte] + 0xFFFFFFB1 << 0x00000018 >> 0x00000018 >=u 0x00000020 l00012C24_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012C24_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012CD4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012CD8:
	word32 l0_120
	Mem140[sp_26 + 0x00000060 + (l0_120 << 0x00000002):word32] = dupnstr(i0_112, i0_108 - i0_112, out l0_120, out i0_112, out i6_118)
	l0_141 = l0_120 + 0x00000001
	g2_143 = l0_120 + 0x00000001 << 0x00000002
	branch (int32) Mem140[i0_112:int8] != 0x00000000 l00012CD8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012CD8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012CD8_ds_f:
	o3_148 = l0_120 + 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012D00:
	Mem154[0x00027F48:word32] = o3_148
	Mem168[sp_26 + 0x00000060 + g2_143:word32] = 0x00017220
	word32 l0_156 = o3_148 + 0x00000001
	Mem171[0x00027F44:word32] = l0_156 + 0x00000003
	Mem173[sp_26 + 0x00000060 + (o3_148 << 0x00000002):word32] = 0x00000000
	Mem176[sp_26 + 0x00000060 + (l0_156 << 0x00000002):word32] = 0x00017230
	Mem179[sp_26 + 0x00000060 + (l0_156 + 0x00000001 << 0x00000002):word32] = 0x00017238
	Mem184[sp_26 + 0x00000060 + (l0_156 + 0x00000002 << 0x00000002):word32] = 0x00017240
	Mem186[sp_26 + 0x00000060 + (l0_156 + 0x00000003 << 0x00000002):word32] = 0x00000000
	Mem188[sp_26 + 0x00000060 + (l0_156 + 0x00000004 << 0x00000002):word32] = 0x00000000
	word32 o0_189 = l0_156 + 0x00000006 << 0x00000002
	word32 i1_192
	word32 i2_193
	word32 i6_197
	word32 i0_191 = xmalloc(o0_189, out i1_192, out i2_193, out i6_197)
	Mem204[0x00027F3C:word32] = o0_189
	memcpy(o0_189, sp_26 + 0x00000060, l0_156 + 0x00000005 << 0x00000002)
	i6Out = i6_197
	return i0_191
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012C24_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012C40:
	i6Out = i6_118
	return i0_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

munge_compile_params_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 gen_aux_info_file(word32 o0, ptr32 & l0Out, ptr32 & l1Out, ptr32 & l4Out, ptr32 & i0Out, ptr32 & i2Out, ptr32 & i6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: i0 i2 i6 l0 l1 l4 o0
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 l3 l4 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved: g2
gen_aux_info_file_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E2C:
	word32 o1_26
	branch Mem0[0x00027F44:word32] != 0x00000000 l00012E2C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E2C_ds_t:
	o1_26 = o0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E2C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E44:
	word32 i6_264
	o1_26 = munge_compile_params(0x00017218, out i6_264)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E54:
	word32 l2_62
	word32 l4_64
	word32 l0_261
	word32 l3_262
	word32 i0_263
	word32 o0_65 = shortpath(0x00000000, o1_26, out l0_261, out l2_62, out l3_262, out l4_64, out i0_263)
	Mem83[Mem0[0x00027F3C:word32] + (Mem0[l2_62 + 836:word32] << 0x00000002):word32] = o0_65
	word32 o0_101 = savestring2(o0_65, strlen(o0_65), 0x00000002)
	word32 o1_116 = Mem83[0x00027F2C:word32]
	Mem120[Mem83[0x00027F3C:word32] + (Mem83[0x00027F48:word32] << 0x00000002):word32] = o0_101
	branch o1_116 != 0x00000000 l00012E54_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E54_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012ED8:
	word32 i0_126
	word32 i6_132
	word32 l1_135
	word32 o0_136 = choose_temp_base(out l1_135, out i0_126, out i6_132)
	word32 o1_148 = Mem120[i0_126 + 828:word32]
	word32 sp_143 = <invalid>
	word32 o0_150 = Mem120[o1_148:word32]
	Mem154[sp_143 + 92:word32] = 0x00000007
	word32 i6_163
	word32 l0_165
	branch pexecute(o0_150, o1_148, o0_136, i6_132 + 0xFFFFFFEC, i6_132 + 0xFFFFFFE8, l1_135, Mem154[sp_143 + 92:word32], out l0_165, out i6_163) != 0xFFFFFFFF l00012ED8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012ED8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F6C:
	word32 i2_268
	word32 i6_269
	pwait(i6_163 + 0xFFFFFFE4, out i2_268, out i6_269)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012ED8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F10:
	word32 l2_187 = Mem154[0x0002B760:word32]
	fprintf(0x0002B640, 0x00017268, Mem154[l0_165 + 336:word32])
	fprintf(0x0002B640, Mem154[i6_163 + -20:word32], Mem154[i6_163 + -24:word32])
	xstrerror(l2_187)
	fprintf(0x0002B640, 0x00017270, l2_187)
	word32 i2_221
	word32 i6_225
	word32 i0_219 = pwait(0x00017270, out i2_221, out i6_225)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001302C:
	l0Out = 0x00017270
	l1Out = 0x0002B640
	l4Out = l4_64
	i0Out = i0_219
	i2Out = i2_221
	i6Out = i6_225
	return i0_219
// DataOut:
// DataOut (flags):
// SymbolicIn:

gen_aux_info_file_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E54_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012EBC:
	word32 i1_265
	word32 i2_266
	word32 i6_267
	notice(0x00017250, out i1_265, out i2_266, out i6_267)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 process_aux_info_file(word32 o0, word32 o2, ptr32 & l1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o2:[0..31]
// LiveOut: l0 l1
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 l3 l4 l5 l6 l7 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
process_aux_info_file_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013034:
	word32 sp_24 = fp + 0xFFFFFF04 - (strlen(o0) + 0x0000000A & 0xFFFFFFF8)
	strcpy(sp_24 + 0x00000060, o0)
	strcat(sp_24 + 0x00000060, 0x00016F00)
	word32 i0_105 = o0
	word32 i2_107 = o2
	word32 i6_111 = fp
	word32 l4_142 = sp_24 + 0x00000060
	word32 l2_215 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013074:
	word32 o0_486
	bool Z_117
	branch access(l4_142, 0x00000004) != 0xFFFFFFFF l00013034_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013034_ds_t:
	Z_117 = SLICE(cond(l2_215), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013034_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001308C:
	branch Mem0[0x0002B760:word32] != 0x00000002 l0001308C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001308C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130C8:
	word32 l0_64
	word32 l3_67
	word32 l4_558
	word32 i0_559
	word32 l2_557
	shortpath(0x00000000, l4_142, out l0_64, out l2_557, out l3_67, out l4_558, out i0_559)
	xstrerror(l3_67)
	o0_486 = l0_64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001308C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130A0:
	branch i2_107 == 0x00000000 l000130A0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130A0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130C0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130A0_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130AC:
	word32 i1_106
	i0_105 = notice(0x000172D0, out i1_106, out i2_107, out i6_111)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130FC:
	Z_117 = SLICE(cond(0x00000001), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013100:
	word32 o1_437
	branch Z_117 l00013100_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013100_ds_t:
	l1 = i6_111 + 0xFFFFFF68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013100_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013108:
	branch gen_aux_info_file(i0_105, out l0, out l1, out l4_142, out i0_105, out i2_107, out i6_111) == 0x00000000 l00013108_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013108_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131F8:
	Mem164[0x00027F20:word32] = Mem0[0x00027F20:word32] + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013108_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001311C:
	branch access(l4_142, 0x00000004) != 0xFFFFFFFF l0001311C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001311C_ds_t:
	l1 = i6_111 + 0xFFFFFF68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013150:
	branch stat(l4_142, l1) != 0xFFFFFFFF l00013150_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013150_ds_t:
	l0 = Mem0[i6_111 + -104:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013188:
	branch l0 == 0x00000000 l00013188_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013188_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013188_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013194:
	branch i2_107 != 0x00000000 l00013194_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013194_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013194_ds_f:
	word32 l7_202 = Mem0[i6_111 + -88:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001319C:
	branch stat(i0_105, l1) != 0xFFFFFFFF l0001319C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001319C_ds_t:
	word32 o0_211 = Mem0[i6_111 + -88:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001320C:
	branch o0_211 - l7_202 > 0x00000000 l0001320C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001320C_ds_t:
	l2_215 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013218:
	word32 o0_220 = open(l4_142, 0x00000000)
	branch o0_220 != 0xFFFFFFFF l00013218_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013218_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013250:
	word32 i2_564
	word32 i6_565
	word32 i1_563
	xmalloc(l0 + 0x00000001, out i1_563, out i2_564, out i6_565)
	Mem244[l0 + 0x00000001 + l0:byte] = 0x00
	word32 l2_259
	l0 = safe_read(o0_220, l0 + 0x00000001, l0, out l1, out l2_259)
	branch o0_220 - l0 == 0x00000000 l00013250_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013250_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013294:
	branch close(o0_220) == 0x00000000 l00013294_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013294_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013344:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013294_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000132A8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013250_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001327C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000132BC:
	word32 l2_297
	word32 l3_572
	word32 l4_573
	word32 i0_574
	l1 = shortpath(0x00000000, l4_142, out l0, out l2_297, out l3_572, out l4_573, out i0_574)
	xstrerror(l2_297)
	word32 i1_575
	word32 i2_576
	word32 i6_577
	notice(l0, out i1_575, out i2_576, out i6_577)
	free(l0 + 0x00000001)
	close(o0_220)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000135B8:
	l1Out = l1
	return l0
// DataOut:
// DataOut (flags):
// SymbolicIn:

process_aux_info_file_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013218_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013238:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013314:
	word32 l0_389
	word32 l2_391
	word32 i0_568
	word32 l3_566
	word32 l4_567
	shortpath(0x00000000, l4_142, out l0_389, out l2_391, out l3_566, out l4_567, out i0_568)
	xstrerror(l2_391)
	word32 i1_569
	word32 i2_570
	word32 i6_571
	notice(l0_389, out i1_569, out i2_570, out i6_571)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001319C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131B4:
	o1_437 = i0_105
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013150_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013168:
	o1_437 = l4_142
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001311C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013130:
	o1_437 = l4_142
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131D0:
	word32 l0_458
	word32 l2_460
	word32 l3_560
	word32 l4_561
	word32 i0_562
	shortpath(0x00000000, o1_437, out l0_458, out l2_460, out l3_560, out l4_561, out i0_562)
	xstrerror(l2_460)
	o0_486 = l0_458
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131F0:
	word32 i1_578
	word32 i2_579
	word32 i6_580
	notice(o0_486, out i1_578, out i2_579, out i6_580)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void reverse_def_dec_list(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut:
// Trashed: NZVC g0 g3 o0 o1
// Preserved: g2 sp
reverse_def_dec_list_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000135C0:
	word32 o1_5 = Mem0[o0 + 8:word32]
	word32 g3_6 = Mem0[o1_5 + 4:word32]
	branch g3_6 == 0x00000000 l000135C0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000135C0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000135C0_ds_f:
	word32 o0_11 = g3_6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000135D4:
	word32 g3_12 = Mem0[g3_6:word32]
	branch g3_12 == 0x00000000 l000135D4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000135D4_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000135D4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000135E4:
	Mem16[g3_6:word32] = 0x00000000
	word32 g2_17 = Mem16[g3_12:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000135EC:
	Mem20[g3_12:word32] = o0_11
	o0_11 = g3_12
	g3_12 = g2_17
	branch g2_17 != 0x00000000 l000135EC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000135EC_ds_t:
	g2_17 = Mem20[g2_17:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013600:
	Mem28[o1_5 + 4:word32] = g3_12
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013604:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

reverse_def_dec_list_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 identify_lineno(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: o0
// Trashed: NZVC g0 g2 g3 o0 o1
// Preserved: sp
identify_lineno_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001360C:
	word32 o0_11
	word32 g3_21 = Mem0[0x000281C0:word32]
	branch g3_21 - o0 >=u 0x00000000 l0001360C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001360C_ds_t:
	o0_11 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001360C_ds_f:
	o0_11 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013624:
	word32 g2_13 = (int32) Mem0[g3_21:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013628:
	branch g2_13 == 0x0000000A l00013624_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013624_ds_t:
	o0_11 = o0_11 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013634:
	g3_21 = g3_21 + 0x00000001
	branch g3_21 - o0 <=u 0x00000000 l00013634_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013634_ds_t:
	g2_13 = (int32) Mem0[g3_21:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013644:
	return o0_11
// DataOut:
// DataOut (flags):
// SymbolicIn:

identify_lineno_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void declare_source_confusing(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
declare_source_confusing_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

declare_source_confusing_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001364C:
	branch Mem0[0x00027F2C:word32] != 0x00000000 l0001364C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001364C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013664:
	branch o0 != 0x00000000 l00013664_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013664_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000136A0:
	word32 i0_36
	word32 l0_37
	word32 l2_119
	word32 l3_120
	word32 l4_121
	shortpath(0x00000000, Mem0[0x00028180:word32], out l0_37, out l2_119, out l3_120, out l4_121, out i0_36)
	identify_lineno(i0_36)
	word32 i1_122
	word32 i2_123
	word32 i6_124
	notice(l0_37, out i1_122, out i2_123, out i6_124)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013664_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013670:
	word32 l0_84
	word32 l2_125
	word32 l3_126
	word32 l4_127
	word32 i0_128
	shortpath(0x00000000, Mem0[0x00028180:word32], out l0_84, out l2_125, out l3_126, out l4_127, out i0_128)
	word32 i1_129
	word32 i2_130
	word32 i6_131
	notice(l0_84, out i1_129, out i2_130, out i6_131)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000136D4:
	longjmp(0x0002B240, 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 check_source(word32 o0, word32 o1, ptr32 & i1Out, ptr32 & i2Out, ptr32 & i6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31]
// LiveOut: i0 i1 i2 i6
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7
// Preserved: o0 o1 o2 o3 o4 o5 o7 sp
check_source_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000136E0:
	branch o0 != 0x00000000 l000136E0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000136E0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000136F8:
	i1Out = o1
	i2Out = o2
	i6Out = fp
	return o0
// DataOut:
// DataOut (flags):
// SymbolicIn:

check_source_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000136E0_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000136F0:
	declare_source_confusing(o1)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void seek_to_line(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut:
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l4 o0
// Preserved: l0 l1 l2 l3 o1 o2 o3 o4 o5 o7 sp
seek_to_line_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013700:
	word32 i0_5 = o0
	word32 g0_23 = o0 - Mem0[0x00028230:word32]
	branch g0_23 >= 0x00000000 l00013700_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013700_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013720:
	branch g0_23 <= 0x00000000 l00013720_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013720_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013720_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013728:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013730:
	word32 o1_39
	word32 o0_33 = Mem32[0x00028220:word32]
	branch (int32) Mem32[o0_33:int8] == 0x0000000A l00013728_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013728_ds_t:
	o1_39 = Mem32[0x00028230:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013728_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013744:
	word32 o2_43 = Mem32[0x00028220:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013750:
	word32 o2_49 = o2_43 + 0x00000001
	bool C_52 = SLICE(cond(o2_49 - Mem46[0x000281D0:word32]), bool, 0)
	Mem55[0x00028220:word32] = o2_49
	word32 i1_154
	word32 i2_155
	word32 i6_156
	i0_5 = check_source(C_52, 0x00000000, out i1_154, out i2_155, out i6_156)
	branch (int32) Mem55[Mem55[0x00028220:word32]:int8] != 0x0000000A l00013750_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013750_ds_t:
	o2_43 = Mem55[0x00028220:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013750_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013780:
	o0_33 = Mem55[0x00028220:word32]
	o1_39 = Mem55[0x00028230:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013788:
	Mem85[0x00028220:word32] = o0_33 + 0x00000001
	word32 o1_83 = o1_39 + 0x00000001
	branch i0_5 - o1_83 > 0x00000000 l00013788_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013788_ds_t:
	Mem92[0x00028230:word32] = o1_83
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013788_ds_f:
	Mem93[0x00028230:word32] = o1_83
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000137A0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

seek_to_line_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013700_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013718:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 forward_to_next_token_char(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: o0
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
forward_to_next_token_char_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000137AC:
	word32 i0_20 = o0 + 0x00000001
	branch ((word32) Mem0[(word32) Mem0[o0 + 0x00000001:byte] + 0x0002B411:byte] & 0x00000008) == 0x00000000 l000137AC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000137AC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000137AC_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000137D0:
	word32 o0_32 = Mem0[0x000281D0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000137D8:
	word32 i1_94
	word32 i2_95
	word32 i6_96
	i0_20 = check_source(SLICE(cond(i0_20 + 0x00000001 - o0_32), bool, 0), 0x00000000, out i1_94, out i2_95, out i6_96)
	branch ((word32) Mem0[(word32) Mem0[i0_20:byte] + 0x0002B411:byte] & 0x00000008) != 0x00000000 l000137D8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000137D8_ds_t:
	o0_32 = Mem0[0x000281D0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000137D8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013800:
	return i0_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

forward_to_next_token_char_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 output_bytes(word32 o0, word32 o1, ptr32 & l1Out, ptr32 & l2Out, ptr32 & i0Out, ptr32 & i1Out, ptr32 & i2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31]
// LiveOut: i0 i1 i2 l0 l1 l2
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 l3 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
output_bytes_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013808:
	word32 l0_24 = Mem0[0x00028200:word32]
	word32 i0_37 = o0
	word32 i1_38 = o1
	word32 i2_39 = o2
	branch Mem0[0x00028210:word32] + (o1 + 0x00000001) - l0_24 <u 0x00000000 l00013808_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013808_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013808_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013830:
	word32 o0_32 = Mem0[0x000281F0:word32]
	word32 l0_33 = l0_24 - o0_32
	i0_37 = xrealloc(o0_32, l0_33 << 0x00000001, out i1_38, out i2_39)
	word32 o1_49 = Mem0[0x00028210:word32]
	l0_24 = o0_32 + (l0_33 << 0x00000001)
	word32 o2_51 = Mem0[0x000281F0:word32]
	Mem52[0x00028200:word32] = l0_24
	Mem55[0x00028210:word32] = o0_32 + (o1_49 - o2_51)
	Mem56[0x000281F0:word32] = o0_32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013864:
	memcpy(Mem58[0x00028210:word32] + 0x00000001, i0_37, i1_38)
	Mem68[0x00028210:word32] = Mem58[0x00028210:word32] + i1_38
	l1Out = 0x00028000
	l2Out = 0x00028000
	i0Out = i0_37
	i1Out = i1_38
	i2Out = i2_39
	return l0_24
// DataOut:
// DataOut (flags):
// SymbolicIn:

output_bytes_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 output_string(word32 o0, ptr32 & l2Out, ptr32 & i0Out, ptr32 & i1Out, ptr32 & i2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: i0 i1 i2 l1 l2
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 l3 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
output_string_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001388C:
	word32 i0_26
	word32 i1_27
	word32 i2_28
	word32 l1_35
	word32 l2_36
	output_bytes(o0, strlen(o0), out l1_35, out l2_36, out i0_26, out i1_27, out i2_28)
	l2Out = l2_36
	i0Out = i0_26
	i1Out = i1_27
	i2Out = i2_28
	return l1_35
// DataOut:
// DataOut (flags):
// SymbolicIn:

output_string_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 output_up_to(word32 o0, ptr32 & l2Out, ptr32 & i0Out, ptr32 & i1Out, ptr32 & i2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: i0 i1 i2 l1 l2
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 l3 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
output_up_to_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138AC:
	word32 o2_24 = Mem0[0x000281E0:word32]
	word32 i0_35 = o0
	word32 i1_36 = o1
	word32 i2_37 = o2
	word32 o0_28 = Mem0[0x000281A0:word32] + (o2_24 - Mem0[0x000281C0:word32])
	word32 o1_29 = o0 - o2_24
	branch o1_29 == 0x00000000 l000138AC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138AC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138AC_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138DC:
	Mem59[output_bytes(o0_28 + 0x00000001, o1_29, out l1, out l2, out i0_35, out i1_36, out i2_37) + 480:word32] = i0_35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138E8:
	l2Out = l2
	i0Out = i0_35
	i1Out = i1_36
	i2Out = i2_37
	return l1
// DataOut:
// DataOut (flags):
// SymbolicIn:

output_up_to_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 other_variable_style_function(word32 o0, ptr32 & i1Out, ptr32 & i6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: i1 i6 o0
// Trashed: NZVC g0 g2 g3 i0 i1 i2 i3 i4 i5 i6 i7 o0
// Preserved: o1 o2 o3 o4 o5 o7 sp
other_variable_style_function_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138F0:
	word32 o0_37 = SLICE(cond(0x00000000 - substr(o0, 0x00017468)), bool, 0)
	i1Out = o1
	i6Out = fp
	return o0_37
// DataOut:
// DataOut (flags):
// SymbolicIn:

other_variable_style_function_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void edit_fn_declaration(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut:
// Trashed: NZVC g0 g2 g3 i0 i1 i2 i3 i4 i5 i6 i7 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
edit_fn_declaration_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013914:
	strlen(Mem20[Mem20[o0 + 16:word32] + 4:word32])
	save_pointers()
	branch setjmp(0x0002B240) == 0x00000000 l00013914_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013914_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013974:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013914_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013950:
	restore_pointers()
	word32 i1_52
	word32 i2_53
	word32 i6_57
	notice(0x00017470, out i1_52, out i2_53, out i6_57)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B60:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

edit_fn_declaration_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 edit_formals_lists(word32 o0, ptr32 & l1Out, ptr32 & l2Out, ptr32 & i1Out, ptr32 & i2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: i1 i2 l1 l2 o0
// Trashed: NZVC g0 g2 g3 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 l3 l4 l5 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
edit_formals_lists_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B68:
	word32 l1_20 = o0 + 0xFFFFFFFF + 0xFFFFFFFF
	word32 l0_21 = 0x00000001
	word32 l2_22 = 0x00028000
	word32 o0_24 = (int32) Mem0[o0 + 0xFFFFFFFF:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B7C:
	word32 o0_42
	branch o0_24 == 0x00000028 l00013B68_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B68_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B98:
	l0_21 = l0_21 + 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B68_ds_f:
	word32 g0_33 = o0_24 - 0x00000029
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B88:
	branch g0_33 == 0x00000000 l00013B88_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B88_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BA0:
	l0_21 = l0_21 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BA4:
	o0_42 = Mem0[0x000281E0:word32]
	l1_20 = l1_20 + 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B88_ds_f:
	o0_42 = Mem0[0x000281E0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B90:
	l1_20 = l1_20 + 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BAC:
	word32 i1_57
	word32 i6_634
	word32 i2_240
	check_source(SLICE(cond(o0_42 - l1_20), bool, 0), 0x00000000, out i1_57, out i2_240, out i6_634)
	branch l0_21 != 0x00000000 l00013BAC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BAC_ds_t:
	o0_24 = (int32) Mem0[l1_20:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BC8:
	word32 i1_238
	word32 i0_450
	word32 l1_251
	bool Z_264
	branch i1_57 == 0xFFFFFFFF l00013BC8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BC8_ds_t:
	l1_251 = l1_20 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013CA4:
	Z_264 = SLICE(cond(i1_57 + 0xFFFFFFFF), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BC8_ds_f:
	word32 l1_81 = l1_20 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BD4:
	word32 o0_110
	word32 i6_637
	word32 i1_635
	word32 i2_636
	check_source(SLICE(cond(Mem0[0x000281E0:word32] - (l1_81 + 0xFFFFFFFF)), bool, 0), 0x00000000, out i1_635, out i2_636, out i6_637)
	word32 l0_113 = l1_81 + 0xFFFFFFFF
	branch ((word32) Mem0[(word32) Mem0[l1_81 + -1:byte] + 0x0002B411:byte] & 0x00000008) == 0x00000000 l00013BD4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BD4_ds_t:
	o0_110 = (int32) Mem0[l1_81 + 0xFFFFFFFF:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C08:
	word32 o0_112 = Mem0[0x000281E0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C10:
	l0_113 = l0_113 + 0xFFFFFFFF
	word32 i1_647
	word32 i2_648
	word32 i6_649
	check_source(SLICE(cond(o0_112 - l0_113), bool, 0), 0x00000000, out i1_647, out i2_648, out i6_649)
	branch ((word32) Mem0[(word32) Mem0[l0_113:byte] + 0x0002B411:byte] & 0x00000008) != 0x00000000 l00013C10_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C10_ds_t:
	o0_112 = Mem0[0x000281E0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C38:
	o0_110 = (int32) Mem0[l0_113:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C3C:
	word32 i2_639
	word32 i6_640
	word32 i1_638
	check_source(0x00000001 - ((o0_110 ^ 0x00000029) >u 0x00000000), l0_113, out i1_638, out i2_639, out i6_640)
	word32 l0_168 = l0_113 + 0xFFFFFFFF
	word32 i2_642
	word32 i6_643
	word32 i1_641
	check_source(SLICE(cond(Mem0[0x000281E0:word32] - l0_168), bool, 0), 0x00000000, out i1_641, out i2_642, out i6_643)
	word32 i2_645
	word32 i1_644
	word32 i6_646
	check_source(0x00000001 - (((int32) Mem0[l0_168:int8] ^ 0x00000029) >u 0x00000000), l0_168, out i1_644, out i2_645, out i6_646)
	branch edit_formals_lists(l0_168, out l1_251, out l2_22, out i1_238, out i2_240) == 0x00000000 l00013C3C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C3C_ds_t:
	Z_264 = SLICE(cond(i1_238), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013CA8:
	branch Z_264 l00013CA8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013CA8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013CA8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013CB0:
	word32 l5_280
	word32 o1_274 = Mem0[i2_240 + 16:word32]
	word32 l0_275 = l1_251 + 0xFFFFFFFF
	branch ((word32) Mem0[(word32) Mem0[l1_251 + -1:byte] + 0x0002B411:byte] & 0x00000008) == 0x00000000 l00013CB0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013CB0_ds_t:
	l5_280 = Mem0[o1_274 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013CB0_ds_f:
	l5_280 = Mem0[o1_274 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013CD0:
	word32 o0_284 = Mem0[l2_22 + 480:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013CD8:
	l0_275 = l0_275 + 0xFFFFFFFF
	word32 i1_650
	word32 i6_651
	check_source(SLICE(cond(o0_284 - l0_275), bool, 0), 0x00000000, out i1_650, out i2_240, out i6_651)
	branch ((word32) Mem0[(word32) Mem0[l0_275:byte] + 0x0002B411:byte] & 0x00000008) != 0x00000000 l00013CD8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013CD8_ds_t:
	o0_284 = Mem0[l2_22 + 480:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013CD8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D00:
	word32 l3_317 = l0_275
	word32 l0_318 = l0_275 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D20:
	branch is_id_char((int32) Mem0[l3_317:int8]) != 0x00000000 l00013D20_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D20_ds_t:
	word32 o0_334 = Mem0[l2_22 + 480:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D0C:
	word32 i1_652
	word32 i6_653
	check_source(SLICE(cond(o0_334 - l3_317), bool, 0), 0x00000000, out i1_652, out i2_240, out i6_653)
	l3_317 = l3_317 + 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D34:
	word32 l3_354 = l3_317 + 0x00000001
	word32 l4_356 = l0_318 - l3_354
	branch l4_356 != 0x00000000 l00013D34_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D34_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D4C:
	word32 o0_375
	branch l4_356 - strlen(l5_280) != 0x00000000 l00013D4C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D4C_ds_t:
	o0_375 = Mem0[i2_240 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D60:
	branch strncmp(l3_354, l5_280, l4_356) == 0x00000000 l00013D60_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D60_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013DD4:
	word32 o0_417
	word32 i0_389
	l1_251 = output_up_to(l1_251, out l2_22, out i0_389, out i1_238, out i2_240)
	branch i1_238 != 0x00000000 l00013DD4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013DD4_ds_t:
	o0_417 = i0_389 + 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013DD4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013DE8:
	word32 i0_422
	l1_251 = output_string(Mem0[i2_240 + 36:word32], out l2_22, out i0_422, out i1_238, out i2_240)
	o0_417 = i0_422 + 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013DF4:
	Mem449[l2_22 + 480:word32] = o0_417
	i0_450 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D60_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D7C:
	o0_375 = Mem0[i2_240 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D80:
	word32 l3_464
	word32 l4_465
	word32 l0_657
	word32 l2_658
	word32 i0_659
	l2_22 = shortpath(0x00000000, Mem0[Mem0[o0_375:word32] + 4:word32], out l0_657, out l2_658, out l3_464, out l4_465, out i0_659)
	l1_251 = identify_lineno(l3_464)
	word32 l0_501
	word32 i0_660
	word32 i6_661
	dupnstr(l3_464, l4_465, out l0_501, out i0_660, out i6_661)
	word32 i6_662
	notice(l0_501, out i1_238, out i2_240, out i6_662)
	i0_450 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D34_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D44:
	word32 i1_654
	word32 i2_655
	word32 i6_656
	check_source(0x00000000, l3_354, out i1_654, out i2_655, out i6_656)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C3C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C9C:
	i0_450 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013DFC:
	l1Out = l1_251
	l2Out = l2_22
	i1Out = i1_238
	i2Out = i2_240
	return i0_450
// DataOut:
// DataOut (flags):
// SymbolicIn:

edit_formals_lists_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 find_rightmost_formals_list(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: i6
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 l3 l4 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
find_rightmost_formals_list_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E04:
	word32 i0_26 = o0 + 0xFFFFFFFF
	word32 o0_21 = (int32) Mem0[o0:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E14:
	branch o0_21 != 0x0000000A l00013E14_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E14_ds_t:
	i0_26 = i0_26 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E10:
	o0_21 = (int32) Mem0[i0_26:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E20:
	word32 i0_112 = i0_26 + 0x00000000
	branch (int32) Mem0[i0_112:int8] == 0x00000029 l00013E20_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E20_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E20_ds_f:
	word32 o1_114 = (word32) Mem0[i0_112:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E34:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E44:
	word32 o0_107
	branch ((word32) Mem0[o1_114 + 0x0002B411:byte] & 0x00000008) == 0x00000000 l00013E34_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E34_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E8C:
	word32 i2_186
	word32 i6_187
	word32 i1_185
	i0_112 = check_source(SLICE(cond(Mem0[0x000281E0:word32] - (i0_112 + 0xFFFFFFFF)), bool, 0), 0x00000000, out i1_185, out i2_186, out i6_187)
	o0_107 = (int32) Mem0[i0_112:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E34_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E54:
	word32 o0_105 = Mem0[0x000281E0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E5C:
	word32 i1_188
	word32 i2_189
	word32 i6_190
	i0_112 = check_source(SLICE(cond(o0_105 - (i0_112 + 0xFFFFFFFF)), bool, 0), 0x00000000, out i1_188, out i2_189, out i6_190)
	branch ((word32) Mem0[(word32) Mem0[i0_112:byte] + 0x0002B411:byte] & 0x00000008) != 0x00000000 l00013E5C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E5C_ds_t:
	o0_105 = Mem0[0x000281E0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E5C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E84:
	o0_107 = (int32) Mem0[i0_112:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013EA8:
	branch o0_107 != 0x00000029 l00013EA8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013EA8_ds_t:
	o1_114 = (word32) Mem0[i0_112:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013EA8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013EB4:
	word32 o0_128 = forward_to_next_token_char(i0_112)
	word32 i1_151
	word32 i2_152
	word32 i6_156
	check_source(0x00000001 - (((int32) Mem0[o0_128:int8] ^ 0x0000007B) >u 0x00000000), o0_128, out i1_151, out i2_152, out i6_156)
	return i6_156
// DataOut:
// DataOut (flags):
// SymbolicIn:

find_rightmost_formals_list_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void edit_fn_definition(word32 o1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o1:[0..31]
// LiveOut:
// Trashed: NZVC g0 g2 g3 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 l3 l4 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
edit_fn_definition_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013EDC:
	save_pointers()
	branch setjmp(0x0002B240) != 0x00000000 l00013EDC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013EDC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013FB0:
	restore_pointers()
	word32 i1_48
	word32 i2_248
	word32 i6_249
	notice(0x000174D0, out i1_48, out i2_248, out i6_249)
	word32 i0_56
	word32 i1_57
	word32 i2_58
	word32 l2_67
	output_up_to(i1_48, out l2_67, out i0_56, out i1_57, out i2_58)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013EDC_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013F10:
	word32 i1_115
	word32 i6_120
	branch other_variable_style_function(Mem24[Mem24[find_rightmost_formals_list(o1) + 68:word32] + 12:word32], out i1_115, out i6_120) == 0x00000000 l00013F10_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013F10_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013F94:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013F10_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013F34:
	branch Mem24[0x00027F2C:word32] != 0x00000000 l00013F34_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013F34_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013F88:
	word32 i0_140
	word32 i1_141
	word32 i2_142
	word32 l2_151
	output_up_to(i1_115, out l2_151, out i0_140, out i1_141, out i2_142)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140AC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

edit_fn_definition_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013F34_ds_f:
	word32 o1_182 = Mem24[i6_120 + 68:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013F48:
	word32 l0_191
	word32 l2_250
	word32 l3_251
	word32 l4_252
	word32 i0_253
	shortpath(0x00000000, Mem24[Mem24[Mem24[o1_182 + 4:word32]:word32] + 4:word32], out l0_191, out l2_250, out l3_251, out l4_252, out i0_253)
	identify_lineno(i1_115)
	word32 i1_254
	word32 i2_255
	word32 i6_256
	notice(l0_191, out i1_254, out i2_255, out i6_256)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void do_cleaning(word32 o0, word32 o1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31]
// LiveOut:
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 o0 o1 o2 o3 o5 sp
// Preserved: o4 o7
do_cleaning_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140B4:
	word32 i0_36 = o0
	branch o0 - o1 >=u 0x00000000 l000140B4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140B4_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140B4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140C4:
	word32 o1_26 = (word32) Mem0[o0:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140C8:
	branch o1_26 + 0xFFFFFFF8 << 0x00000018 >> 0x00000018 >=u 0x00000054 l000140C4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140C4_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000143A8:
	i0_36 = i0_36 + 0x00000001
	branch i0_36 - o1 <u 0x00000000 l000143A8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000143A8_ds_t:
	o1_26 = (word32) Mem0[i0_36:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000143BC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140C4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140E0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

do_cleaning_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 careful_find_l_paren(word32 o0, ptr32 & l1Out, ptr32 & i6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: i6 l1 o0 sp
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
careful_find_l_paren_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014518:
	word32 i0_20 = o0 + 0xFFFFFFFF
	word32 l0_21 = 0x00000001
	word32 o0_24 = (int32) Mem0[o0 + 0xFFFFFFFF:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001452C:
	word32 o0_41
	branch o0_24 == 0x00000028 l00014518_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014518_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014548:
	l0_21 = l0_21 + 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014518_ds_f:
	word32 g0_33 = o0_24 - 0x00000029
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014538:
	branch g0_33 == 0x00000000 l00014538_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014538_ds_t:
	l0_21 = l0_21 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001454C:
	o0_41 = Mem0[0x000281C0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014540:
	o0_41 = Mem0[0x000281C0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014550:
	word32 i1_55
	word32 i2_56
	word32 i6_60
	i0_20 = check_source(0x00000001 - ((i0_20 + 0xFFFFFFFF) - o0_41 <u 0x00000000), 0x00000000, out i1_55, out i2_56, out i6_60)
	branch l0_21 != 0x00000000 l00014550_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014550_ds_t:
	o0_24 = (int32) Mem0[i0_20:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014570:
	l1Out = 0x00028000
	i6Out = i6_60
	return i0_20 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

careful_find_l_paren_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void scan_for_missed_items()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7
// Preserved: g2 g3 l0 l1 l2 l3 l4 o0 o1 o2 o3 o4 o5 o7 sp
scan_for_missed_items_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014578:
	word32 o1_22 = Mem0[0x000281C0:word32]
	word32 o0_24 = Mem0[0x000281D0:word32]
	Mem30[0x00028130:word32] = o1_22 + 0xFFFFFFFF
	word32 i6_121 = fp
	branch o1_22 - (o0_24 + 0xFFFFFFFD) >=u 0x00000000 l00014578_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014578_ds_t:
	Mem35[0x00028120:word32] = o1_22
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014578_ds_f:
	Mem36[0x00028120:word32] = o1_22
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000145B4:
	word32 o3_39 = Mem38[0x00028120:word32]
	branch (int32) Mem38[o3_39:int8] != 0x00000029 l000145B4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000145B4_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000145B4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000145C8:
	word32 l0_55
	Mem47[0x00028140:word32] = o3_39
	branch ((word32) Mem47[(word32) Mem47[o3_39 + 1:byte] + 0x0002B411:byte] & 0x00000008) == 0x00000000 l000145C8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000145C8_ds_t:
	l0_55 = o3_39 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000145C8_ds_f:
	l0_55 = o3_39 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000145EC:
	word32 o0_59 = Mem47[i6_121 + -20:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000145F4:
	l0_55 = l0_55 + 0x00000001
	word32 i2_616
	word32 i1_615
	check_source(SLICE(cond(l0_55 - o0_59), bool, 0), Mem47[i6_121 + -20:word32], out i1_615, out i2_616, out i6_121)
	branch ((word32) Mem47[(word32) Mem47[l0_55:byte] + 0x0002B411:byte] & 0x00000008) != 0x00000000 l000145F4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000145F4_ds_t:
	o0_59 = Mem47[i6_121 + -20:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000145F4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001461C:
	Mem94[0x00028120:word32] = l0_55 + 0xFFFFFFFF
	word32 o2_95 = (word32) Mem94[l0_55:byte]
	branch ((word32) Mem94[o2_95 + 0x0002B411:byte] & 0x00000003) != 0x00000000 l0001461C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001461C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001461C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014644:
	branch o2_95 != 0x0000007B l00014644_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014644_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014644_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001464C:
	Mem122[i6_121 + -24:word32] = identify_lineno(l0_55)
	branch setjmp(0x0002B240) != 0x00000000 l0001464C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001464C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001464C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014670:
	word32 l1_139 = 0x00028000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014680:
	word32 o0_174
	word32 o0_154 = careful_find_l_paren(Mem141[l1_139 + 320:word32], out l1_139, out i6_121)
	Mem167[l1_139 + 320:word32] = o0_154 + 0xFFFFFFFF
	word32 sp_161 = <invalid>
	branch ((word32) Mem167[(word32) Mem167[o0_154 + -1:byte] + 0x0002B411:byte] & 0x00000008) == 0x00000000 l00014670_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014670_ds_t:
	o0_174 = Mem167[l1_139 + 320:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014670_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146A4:
	word32 i0_177 = 0x00028000
	word32 o2_180 = Mem167[0x00028140:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146B4:
	word32 o1_183 = Mem182[i0_177 + 304:word32]
	word32 o2_185 = o2_180 + 0xFFFFFFFF
	Mem191[0x00028140:word32] = o2_185
	word32 i2_618
	word32 i1_617
	i0_177 = check_source(0x00000001 - (o2_185 - o1_183 <u 0x00000000), o1_183, out i1_617, out i2_618, out i6_121)
	branch ((word32) Mem191[(word32) Mem191[Mem191[0x00028140:word32]:byte] + 0x0002B411:byte] & 0x00000008) != 0x00000000 l000146B4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146B4_ds_t:
	o2_180 = Mem191[0x00028140:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146B4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146E4:
	o0_174 = Mem191[l1_139 + 320:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146E8:
	branch (int32) Mem217[o0_174:int8] == 0x00000029 l000146E8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146E8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146E8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146F8:
	branch is_id_char((int32) Mem217[Mem217[0x00028140:word32]:int8]) == 0x00000000 l000146F8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146F8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146F8_ds_f:
	word32 o0_237 = Mem217[0x00028140:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014714:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014734:
	branch is_id_char((int32) Mem217[o0_237:int8]) != 0x00000000 l00014734_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014734_ds_t:
	word32 o1_253 = Mem217[0x00028130:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014724:
	word32 i6_621
	word32 i2_620
	word32 i1_619
	check_source(0x00000001 - ((o0_237 + 0xFFFFFFFF) - o1_253 <u 0x00000000), o1_253, out i1_619, out i2_620, out i6_621)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014734_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014748:
	word32 l0_275 = o0_237 + 0x00000001 - (o0_237 + 0x00000001)
	branch l0_275 == 0x00000000 l00014748_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014748_ds_t:
	Mem278[0x00028130:word32] = o0_237 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014748_ds_f:
	Mem279[0x00028130:word32] = o0_237 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001475C:
	word32 sp_284 = sp_161 - (l0_275 + 0x0000006B & 0xFFFFFFF8)
	strncpy(sp_284 + 0x00000060, o0_237 + 0x00000001, l0_275)
	word32 o0_292 = Mem279[0x0001753C:word32]
	Mem293[sp_284 + 0x00000060 + l0_275:byte] = 0x00
	branch o0_292 == 0x00000000 l0001475C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001475C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001475C_ds_f:
	word32 l0_298 = 0x0001753C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014794:
	word32 o1_299 = Mem293[0x0001753C:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014798:
	branch strcmp(sp_284 + 0x00000060, o1_299) == 0x00000000 l00014794_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014794_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014850:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014794_ds_f:
	l0_298 = l0_298 + 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000147AC:
	branch Mem293[l0_298:word32] != 0x00000000 l000147AC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000147AC_ds_t:
	o1_299 = Mem293[l0_298:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000147BC:
	word32 o1_328
	word32 o1_324 = Mem293[Mem293[i6_121 + 68:word32] + 4:word32]
	branch o1_324 == 0x00000000 l000147BC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000147BC_ds_t:
	o1_328 = Mem293[i6_121 + 68:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000147D0:
	word32 o0_329 = Mem293[o1_324 + 20:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000147D4:
	branch o0_329 == 0x00000000 l000147D0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000147D0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000147D0_ds_f:
	word32 o2_337 = Mem293[i6_121 + -24:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000147E0:
	branch Mem293[o1_324 + 8:word32] - o2_337 == 0x00000000 l000147E0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000147E0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014854:
	word32 o0_347 = Mem345[0x00028120:word32]
	branch o0_347 + 0x00000001 - Mem345[i6_121 + -20:word32] <u 0x00000000 l00014854_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014854_ds_t:
	Mem356[0x00028120:word32] = o0_347 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014854_ds_f:
	Mem357[0x00028120:word32] = o0_347 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014870:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

scan_for_missed_items_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000147F0:
	o1_324 = Mem293[o1_324:word32]
	branch o1_324 != 0x00000000 l000147F0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000147F0_ds_t:
	o0_329 = Mem293[o1_324 + 20:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014800:
	o1_328 = Mem293[i6_121 + 68:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014804:
	word32 l3_623
	word32 l4_624
	word32 i0_447
	word32 l0_448
	word32 l2_622
	shortpath(0x00000000, Mem293[Mem293[o1_328:word32] + 4:word32], out l0_448, out l2_622, out l3_623, out l4_624, out i0_447)
	identify_lineno(i0_447)
	word32 i1_625
	word32 i2_626
	word32 i6_627
	notice(l0_448, out i1_625, out i2_626, out i6_627)
	word32 i1_628
	word32 i6_630
	word32 i2_629
	notice(0x000175D8, out i1_628, out i2_629, out i6_630)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void edit_file(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut:
// Trashed: NZVC g0 g2 g3 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 l3 l4 l5 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
edit_file_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014878:
	word32 i0_21 = Mem0[o0 + 8:word32]
	branch needs_to_be_converted(i0_21) == 0x00000000 l00014878_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014878_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014878_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014894:
	word32 o1_37 = Mem0[Mem0[i0_21:word32] + 4:word32]
	Mem40[0x00028180:word32] = o1_37
	branch directory_specified_p(o1_37) == 0x00000000 l00014894_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014894_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014894_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148B8:
	branch file_excluded_p(Mem40[0x00028180:word32]) == 0x00000000 l000148B8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148B8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001491C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148B8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148CC:
	branch Mem40[0x00027F2C:word32] != 0x00000000 l000148CC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148CC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148CC_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148DC:
	branch in_system_include_dir(Mem40[0x00028180:word32]) != 0x00000000 l000148DC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148DC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148DC_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148F0:
	word32 l0_122
	word32 l4_212
	word32 i0_213
	word32 l3_211
	word32 l2_210
	shortpath(0x00000000, Mem40[0x00028180:word32], out l0_122, out l2_210, out l3_211, out l4_212, out i0_213)
	word32 i1_214
	word32 i2_215
	word32 i6_216
	notice(l0_122, out i1_214, out i2_215, out i6_216)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014E1C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

edit_file_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void do_processing()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 l3 l4 l5 l6 l7 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
do_processing_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014E24:
	word32 o0_24 = Mem0[0x00028160:word32]
	branch o0_24 - (o0_24 + (Mem0[0x00027F4C:word32] << 0x00000002)) >=u 0x00000000 l00014E24_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014E24_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014E50:
	word32 o0_33 = Mem0[o0_24:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014E58:
	word32 l1_51
	word32 l0_50 = process_aux_info_file(o0_33, 0x00000000, out l1_51)
	branch l0_50 - l1_51 <u 0x00000000 l00014E58_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014E58_ds_t:
	o0_33 = Mem0[l0_50:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014E74:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014E78:
	visit_each_hash_node(visit_each_hash_node(0x00028240))
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

do_processing_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 main(word32 o1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o1:[0..31]
// LiveOut: o0
// Trashed: NZVC g0 g2 g3 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 l3 l4 l5 l6 l7 o0 o1 o2 o3 o4 o5 o7
// Preserved: sp
main_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014EA4:
	word32 o0_27 = strrchr(Mem20[o1:word32], 0x0000002F)
	word32 o2_30 = o0_27 + 0x00000001
	branch o0_27 != 0x00000000 l00014EA4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014EA4_ds_t:
	Mem34[0x00028150:word32] = o0_27
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014EA4_ds_f:
	Mem35[0x00028150:word32] = o0_27
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014EDC:
	o2_30 = Mem35[o1:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014EE8:
	Mem41[0x00028150:word32] = o2_30
	setlocale(0x00000005, 0x00017218)
	word32 o0_58 = getpwd()
	branch o0_58 != 0x00000000 l00014EE8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014EE8_ds_t:
	Mem79[0x0002B270:word32] = o0_58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014F48:
	word32 i6_89
	Mem104[0x0002B764:word32] = string_list_cons(out i6_89)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015074:
	word32 o0_119 = Mem104[i6_89 + 68:word32]
	word32 i6_133
	word32 l6_141
	word32 l7_142
	word32 l0_135 = getopt_long(Mem104[i6_89 + 72:word32], 0x00017838, i6_89 + 0xFFFFFFEC, out l6_141, out l7_142, out i6_133)
	branch o0_119 != 0xFFFFFFFF l00015074_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015074_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014F94:
	word32 o0_160
	branch o0_119 != 0x00000000 l00014F94_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014F94_ds_t:
	o0_160 = o0_119 + 0xFFFFFFB2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014F94_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014F9C:
	o0_160 = Mem104[l0_135 + 0x0000000C + (Mem104[i6_133 + -20:word32] << 0x00000004):word32] + 0xFFFFFFB2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014FB0:
	branch o0_160 >=u 0x0000002A l00014FB0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014FB0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001506C:
	usage()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014FB0_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014FBC:
	return o0_160 << 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

main_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015074_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001509C:
	word32 i6_188
	munge_compile_params(Mem104[i6_133 + -24:word32], out i6_188)
	word32 o1_207 = Mem104[i6_188 + 68:word32] - Mem104[l7_142 + 104:word32]
	Mem209[l6_141 + 844:word32] = o1_207
	word32 o0_210 = o1_207 + 0x00000001 << 0x00000002
	word32 i2_471
	word32 i1_470
	word32 i6_218
	xmalloc(o0_210, out i1_470, out i2_471, out i6_218)
	Mem225[0x00028160:word32] = o0_210
	word32 o1_226 = Mem225[l7_142 + 104:word32]
	Mem227[l6_141 + 844:word32] = 0x00000000
	branch o1_226 - Mem227[i6_218 + 68:word32] >= 0x00000000 l0001509C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001509C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001509C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000150E0:
	word32 l4_234 = l6_141
	word32 l2_236 = l7_142
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000150EC:
	abspath(0x00000000, Mem238[Mem238[i6_218 + 72:word32] + (Mem238[l7_142 + 104:word32] << 0x00000002):word32], out i6_218)
	word32 o0_267 = strlen(0x00000000)
	branch (int32) Mem238[o0_267 + -1:int8] != 0x00000063 l000150E0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000150E0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000150E0_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015120:
	branch (int32) Mem238[o0_267 + -2:int8] != 0x0000002E l00015120_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015120_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015150:
	word32 l3_292
	word32 i0_473
	word32 l0_472
	shortpath(0x00000000, 0x00000000, out l0_472, out l2_236, out l3_292, out l4_234, out i0_473)
	word32 i2_475
	word32 i1_474
	notice(0x00017850, out i1_474, out i2_475, out i6_218)
	Mem320[l3_292 + 800:word32] = Mem238[l3_292 + 800:word32] + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015120_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015130:
	word32 o0_323 = Mem238[l4_234 + 844:word32]
	Mem327[Mem238[0x00028160:word32] + (o0_323 << 0x00000002):word32] = 0x00000000
	Mem329[l4_234 + 844:word32] = o0_323 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015180:
	word32 o0_333 = Mem332[l2_236 + 104:word32]
	branch o0_333 + 0x00000001 - Mem332[i6_218 + 68:word32] < 0x00000000 l00015180_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015180_ds_t:
	Mem340[l2_236 + 104:word32] = o0_333 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015180_ds_f:
	Mem341[l2_236 + 104:word32] = o0_333 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015198:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001519C:
	branch Mem344[0x00027F20:word32] == 0x00000000 l0001519C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001519C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000151B4:
	branch Mem344[0x00027F28:word32] == 0x00000000 l000151B4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000151B4_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000151E4:
	word32 o1_389
	do_processing()
	branch Mem344[0x00027F20:word32] == 0x00000000 l000151E4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000151E4_ds_t:
	o1_389 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000151E4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015200:
	o1_389 = 0x00000021
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015204:
	exit(o1_389)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000151B4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000151C4:
	fprintf(0x0002B640, 0x00017880, Mem344[0x00028150:word32], Mem344[0x00028028:word32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001519C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000151AC:
	usage()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014EE8_ds_f:
	Mem407[0x0002B270:word32] = o0_58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014F14:
	xstrerror(Mem407[0x0002B760:word32])
	word32 i6_469
	word32 i2_468
	word32 i1_467
	notice(0x00017810, out i1_467, out i2_468, out i6_469)
	exit(0x00000021)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 getpwd()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: o0
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 l3 l4 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
getpwd_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152B8:
	word32 i0_114 = Mem0[0x0002B2A0:word32]
	branch i0_114 != 0x00000000 l000152B8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152B8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152B8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152D0:
	word32 o2_27 = Mem0[0x0002B2B0:word32]
	branch o2_27 != 0x00000000 l000152D0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152D0_ds_t:
	Mem34[0x0002B760:word32] = o2_27
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152D0_ds_f:
	Mem35[0x0002B760:word32] = o2_27
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152F0:
	word32 l1_113
	word32 o0_38 = getenv(0x00017888)
	i0_114 = o0_38
	branch o0_38 == 0x00000000 l000152F0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152F0_ds_t:
	l1_113 = 0x00000064
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152F0_ds_f:
	l1_113 = 0x00000064
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015308:
	branch (int32) Mem35[o0_38:int8] != 0x0000002F l00015308_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015308_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015308_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015318:
	branch stat(o0_38, fp + 0xFFFFFEE0) != 0x00000000 l00015318_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015318_ds_t:
	l1_113 = 0x00000064
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001532C:
	branch stat(0x00017890, fp + 0xFFFFFF68) != 0x00000000 l0001532C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001532C_ds_t:
	l1_113 = 0x00000064
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015348:
	branch dwLoc88 - dwLoc0110 != 0x00000000 l00015348_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015348_ds_t:
	l1_113 = 0x00000064
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001535C:
	branch dwLoc98 - dwLoc0120 == 0x00000000 l0001535C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001535C_ds_t:
	Mem78[0x0002B2A0:word32] = o0_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015370:
	l1_113 = 0x00000064
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001537C:
	word32 i6_189
	word32 i2_188
	word32 i1_187
	xmalloc(l1_113, out i1_187, out i2_188, out i6_189)
	i0_114 = l1_113
	branch getcwd(l1_113, l1_113) != 0x00000000 l0001537C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001537C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001537C_ds_f:
	word32 l0_106 = Mem35[0x0002B760:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001539C:
	free(l1_113)
	branch l0_106 == 0x00000022 l0001539C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001539C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015378:
	l1_113 = l1_113 << 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001539C_ds_f:
	i0_114 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000153B0:
	Mem115[0x0002B760:word32] = l0_106
	Mem117[0x0002B2B0:word32] = l0_106
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000153B8:
	Mem121[0x0002B2A0:word32] = i0_114
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000153BC:
	return i0_114
// DataOut:
// DataOut (flags):
// SymbolicIn:

getpwd_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _obstack_begin(word32 o0, word32 o1, word32 o2, word32 o3, word32 o4, word32 o5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31] o2:[0..31] o3:[0..31] o4:[0..31] o5:[0..31]
// LiveOut:
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
_obstack_begin_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000153C4:
	word32 i1_28 = o1
	word32 i2_23 = o2
	branch o2 == 0x00000000 l000153C4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000153C4_ds_t:
	i2_23 = 0x00000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000153D4:
	branch o1 == 0x00000000 l000153D4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000153D4_ds_t:
	i1_28 = 0x00000FE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000153E0:
	word32 o5_147
	word32 o4_146
	word32 o3_145
	word32 o2_144
	word32 i0_109
	word32 i1_104
	word32 o1_36 = Mem0[o0 + 40:word32] & ~0x80000000
	Mem42[o0 + 32:word32] = o4
	word32 o2_39 = i2_23 + 0xFFFFFFFF
	Mem43[o0 + 24:word32] = o2_39
	Mem48[o0 + 28:word32] = o3
	Mem50[o0:word32] = i1_28
	branch o1_36 >= 0x00000000 l000153E0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000153E0_ds_t:
	Mem52[o0 + 40:word32] = o1_36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015420:
	word32 o0_65
	call o3 (retsize: 0;)
		uses: o0:i1_49,o1:o1_36,o2:o2_39,o3:o3,o4:o4,o5:o5,o7:0x00015420
		defs: i0:i0_64,o0:o0_65,o2:o2_69,o3:o3_71,o4:o4_73,o5:o5_75
	i1_104 = o0_65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000153E0_ds_f:
	Mem82[o0 + 40:word32] = o1_36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001540C:
	word32 o0_88
	call o3 (retsize: 0;)
		uses: o0:Mem82[o0 + 36:word32],o1:i1_49,o2:o2_39,o3:o3,o4:o4,o5:o5,o7:0x00015410
		defs: i0:i0_87,o0:o0_88,o2:o2_92,o3:o3_94,o4:o4_96,o5:o5_98
	i1_104 = o0_88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001542C:
	branch i1_104 != 0x00000000 l0001542C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001542C_ds_t:
	Mem110[i0_109 + 4:word32] = i1_104
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015448:
	word32 o0_111 = Mem110[i0_109:word32]
	word32 o1_112 = i1_104 + 0x00000008
	Mem113[i0_109 + 12:word32] = o1_112
	Mem114[i0_109 + 8:word32] = o1_112
	word32 o0_115 = i1_104 + o0_111
	Mem116[i1_104:word32] = o0_115
	Mem117[i0_109 + 16:word32] = o0_115
	Mem118[i1_104 + 4:word32] = 0x00000000
	Mem124[i0_109 + 40:word32] = Mem118[i0_109 + 40:word32] & ~0x40000000 & ~0x20000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_obstack_begin_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001542C_ds_f:
	Mem140[i0_109 + 4:word32] = i1_104
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015438:
	call fn00000FE8 (retsize: 0;)
		uses: o0:0x00028000,o1:Mem140[0x0002802C:word32],o2:o2_144,o3:o3_145,o4:o4_146,o5:o5_147,o7:0x00015440
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _obstack_begin_1(word32 o0, word32 o1, word32 o2, word32 o3, word32 o4, word32 o5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31] o2:[0..31] o3:[0..31] o4:[0..31] o5:[0..31]
// LiveOut:
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
_obstack_begin_1_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015488:
	word32 i1_28 = o1
	word32 i2_23 = o2
	branch o2 == 0x00000000 l00015488_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015488_ds_t:
	i2_23 = 0x00000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015498:
	branch o1 == 0x00000000 l00015498_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015498_ds_t:
	i1_28 = 0x00000FE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000154A4:
	word32 o5_101
	word32 o4_149
	word32 o3_148
	word32 o2_147
	word32 i0_112
	word32 i1_107
	word32 o0_34 = Mem0[o0 + 40:word32]
	Mem42[o0 + 32:word32] = o4
	word32 o2_39 = i2_23 + 0xFFFFFFFF
	Mem43[o0 + 24:word32] = o2_39
	Mem48[o0 + 28:word32] = o3
	Mem50[o0:word32] = i1_28
	Mem53[o0 + 36:word32] = o5
	branch (o0_34 | 0x80000000) >= 0x00000000 l000154A4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000154A4_ds_t:
	Mem55[o0 + 40:word32] = o0_34 | 0x80000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000154E8:
	word32 o0_68
	call o3 (retsize: 0;)
		uses: o0:i1_49,o1:0x80000000,o2:o2_39,o3:o3,o4:o4,o5:o5,o7:0x000154E8
		defs: i0:i0_67,o0:o0_68,o2:o2_72,o3:o3_74,o4:o4_76,o5:o5_78
	i1_107 = o0_68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000154A4_ds_f:
	Mem85[o0 + 40:word32] = o0_34 | 0x80000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000154D4:
	word32 o0_91
	call o3 (retsize: 0;)
		uses: o0:o5,o1:i1_49,o2:o2_39,o3:o3,o4:o4,o5:o5,o7:0x000154D8
		defs: i0:i0_90,o0:o0_91,o2:o2_95,o3:o3_97,o4:o4_99,o5:o5_101
	i1_107 = o0_91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000154F4:
	branch i1_107 != 0x00000000 l000154F4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000154F4_ds_t:
	Mem113[i0_112 + 4:word32] = i1_107
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015510:
	word32 o0_114 = Mem113[i0_112:word32]
	word32 o1_115 = i1_107 + 0x00000008
	Mem116[i0_112 + 12:word32] = o1_115
	Mem117[i0_112 + 8:word32] = o1_115
	word32 o0_118 = i1_107 + o0_114
	Mem119[i1_107:word32] = o0_118
	Mem120[i0_112 + 16:word32] = o0_118
	Mem121[i1_107 + 4:word32] = 0x00000000
	Mem127[i0_112 + 40:word32] = Mem121[i0_112 + 40:word32] & ~0x40000000 & ~0x20000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_obstack_begin_1_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000154F4_ds_f:
	Mem143[i0_112 + 4:word32] = i1_107
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015500:
	call fn00000FE8 (retsize: 0;)
		uses: o0:0x00028000,o1:Mem143[0x0002802C:word32],o2:o2_147,o3:o3_148,o4:o4_149,o5:o5_150,o7:0x00015508
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _obstack_newchunk(word32 o0, word32 o1, word32 o3, word32 o4, word32 o5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31] o3:[0..31] o4:[0..31] o5:[0..31]
// LiveOut:
// Trashed: NZVC g0 g2 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
_obstack_newchunk_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015550:
	word32 l2_23 = Mem0[o0 + 12:word32] - Mem0[o0 + 8:word32]
	word32 i1_27 = l2_23 + o1 + (l2_23 >> 0x00000003)
	word32 o2_26 = Mem0[o0:word32]
	word32 i1_28 = i1_27 + 0x00000064
	branch i1_27 + 0x00000064 - o2_26 >= 0x00000000 l00015550_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015550_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015550_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015580:
	i1_28 = o2_26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015584:
	word32 i0_104
	word32 l2_131
	word32 o2_110
	word32 o5_113
	word32 o4_112
	word32 l1_133
	word32 i1_118
	word32 l0_100
	word32 o3_111
	branch Mem0[o0 + 40:word32] >= 0x00000000 l00015584_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015584_ds_t:
	word32 o1_41 = Mem0[o0 + 28:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000155AC:
	word32 o0_52
	call o1_41 (retsize: 0;)
		uses: o0:i1_43,o1:o1_41,o2:o2_26,o3:o3,o4:o4,o5:o5,o7:0x000155AC
		defs: i0:i0_51,i1:i1_53,l1:l1_68,l2:l2_66,o0:o0_52,o2:o2_56,o3:o3_58,o4:o4_60,o5:o5_62
	l0_100 = o0_52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015594:
	word32 o2_73 = Mem0[o0 + 28:word32]
	word32 o0_79
	call o2_73 (retsize: 0;)
		uses: o0:Mem0[o0 + 36:word32],o1:i1_43,o2:o2_73,o3:o3,o4:o4,o5:o5,o7:0x0001559C
		defs: i0:i0_78,i1:i1_80,l1:l1_95,l2:l2_93,o0:o0_79,o2:o2_83,o3:o3_85,o4:o4_87,o5:o5_89
	l0_100 = o0_79
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000155B8:
	branch l0_100 != 0x00000000 l000155B8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000155B8_ds_t:
	Mem105[i0_104 + 4:word32] = l0_100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000155C4:
	word32 o1_108 = Mem0[0x0002802C:word32]
	call o1_108 (retsize: 0;)
		uses: o0:0x00028000,o1:o1_108,o2:o2_110,o3:o3_111,o4:o4_112,o5:o5_113,o7:0x000155CC
		defs: i0:i0_116,i1:i1_118,l0:l0_134,l1:l1_133,l2:l2_131,o2:o2_121,o4:o4_125,o5:o5_127
	Mem137[i0_104 + 4:word32] = l0_100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000155D8:
	word32 i1_157
	word32 g2_158
	word32 o0_156
	Mem144[l0_100 + 4:word32] = l1_133
	word32 o1_141 = l0_100 + i1_118
	Mem146[i0_104 + 16:word32] = o1_141
	Mem147[l0_100:word32] = o1_141
	branch Mem147[i0_104 + 24:word32] <= 0x00000006 l000155D8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000155D8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015654:
	o0_156 = 0x00000000
	i1_157 = l0_100 + 0x00000008
	g2_158 = l1_133 + 0x00000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000155D8_ds_f:
	word32 o0_159 = l2_131 >>u 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000155FC:
	o5_113 = o0_159
	i1_157 = l0_100 + 0x00000008
	word32 o3_162 = o0_159 + 0xFFFFFFFF
	branch o0_159 < 0xFFFFFFFF l000155FC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000155FC_ds_t:
	g2_158 = l1_133 + 0x00000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000155FC_ds_f:
	g2_158 = l1_133 + 0x00000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015610:
	word32 o4_169 = (o0_159 + 0xFFFFFFFF << 0x00000002) + 0x00000008 + l0_100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001561C:
	o2_110 = Mem171[Mem171[i0_104 + 8:word32] + (o3_162 << 0x00000002):word32]
	Mem179[o4_169:word32] = o2_110
	o3_162 = o3_162 + 0xFFFFFFFF
	branch o3_162 >= 0x00000000 l0001561C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001561C_ds_t:
	o4_169 = o4_169 + 0xFFFFFFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001561C_ds_f:
	o4_112 = o4_169 + 0xFFFFFFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015638:
	o0_156 = o0_159 << 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015660:
	word32 o0_198
	word32 o3_187 = o0_156
	branch o0_156 - l2_131 >= 0x00000000 l00015660_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015660_ds_t:
	o0_198 = Mem196[i0_104 + 8:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015660_ds_f:
	word32 o0_199 = Mem196[i0_104 + 8:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015670:
	o2_110 = i1_157
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015674:
	Mem209[i1_157 + o3_187:byte] = (byte) (word32) Mem206[o0_199 + o3_187:byte]
	o3_187 = o3_187 + 0x00000001
	branch o3_187 - l2_131 < 0x00000000 l00015674_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015674_ds_t:
	o0_199 = Mem209[i0_104 + 8:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015674_ds_f:
	o0_198 = Mem209[i0_104 + 8:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001568C:
	word32 o0_229
	branch o0_198 - g2_158 != 0x00000000 l0001568C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001568C_ds_t:
	o0_229 = Mem228[i0_104 + 40:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001568C_ds_f:
	word32 o0_230 = Mem228[i0_104 + 40:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015698:
	branch (o0_230 >>u 0x0000001E & 0x00000001) != 0x00000000 l00015698_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015698_ds_t:
	o0_229 = Mem228[i0_104 + 40:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000156A8:
	Mem247[l0_100 + 4:word32] = Mem228[l1_133 + 4:word32]
	branch Mem247[i0_104 + 40:word32] < 0x00000000 l000156A8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000156A8_ds_t:
	word32 o2_252 = Mem247[i0_104 + 32:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015640:
	call o2_252 (retsize: 0;)
		uses: o0:Mem247[i0_145 + 36:word32],o1:l1_142,o2:o2_252,o3:o3_256,o4:o4_258,o5:o5_263,o7:0x00015644
		defs: i0:i0_273,i1:i1_275,l2:l2_288
	o0_229 = Mem247[i0_104 + 40:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000156C0:
	word32 o1_295 = Mem247[i0_104 + 32:word32]
	call o1_295 (retsize: 0;)
		uses: o0:l1_142,o1:o1_295,o2:o2_298,o3:o3_256,o4:o4_258,o5:o5_263,o7:0x000156C4
		defs: i0:i0_303,i1:i1_305,l2:l2_318
	o0_229 = Mem247[i0_104 + 40:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000156D0:
	Mem335[i0_104 + 40:word32] = o0_229 & ~0x40000000
	Mem336[i0_104 + 12:word32] = i1_157 + l2_131
	Mem337[i0_104 + 8:word32] = i1_157
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_obstack_newchunk_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _obstack_allocated_p(word32 o0, word32 o1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31]
// LiveOut:
// Trashed: NZVC g0 g2 g3 o0
// Preserved: sp
_obstack_allocated_p_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000156F0:
	word32 g3_17 = Mem0[o0 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000156F4:
	branch g3_17 == 0x00000000 l000156F0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000156F0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000156F0_ds_f:
	word32 g0_13 = g3_17 - o1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015700:
	branch g0_13 >=u 0x00000000 l00015700_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015700_ds_t:
	g3_17 = Mem0[g3_17 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015708:
	branch Mem0[g3_17:word32] - o1 <u 0x00000000 l00015708_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015708_ds_t:
	g3_17 = Mem0[g3_17 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015718:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_obstack_allocated_p_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _obstack_free(word32 o0, word32 o1, word32 o2, word32 o4, word32 o5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31] o2:[0..31] o4:[0..31] o5:[0..31]
// LiveOut:
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7
// Preserved: l0 o0 o1 o2 o3 o4 o5 o7 sp
_obstack_free_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015724:
	word32 i0_109 = o0
	word32 i1_161 = o1
	word32 o3_108 = Mem0[o0 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015774:
	branch o3_108 == 0x00000000 l00015774_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015774_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015774_ds_f:
	word32 g0_29 = o3_108 - i1_161
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015780:
	word32 o0_34
	branch g0_29 >=u 0x00000000 l00015780_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015780_ds_t:
	o0_34 = Mem33[i0_109 + 40:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015788:
	branch Mem33[o3_108:word32] - i1_161 <u 0x00000000 l00015788_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015788_ds_t:
	o0_34 = Mem33[i0_109 + 40:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015730:
	word32 o1_103
	word32 l0_101
	word32 l0_76
	branch o0_34 >= 0x00000000 l00015730_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015730_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015754:
	word32 o1_48 = Mem33[i0_109 + 32:word32]
	call o1_48 (retsize: 0;)
		uses: l0:l0_76,o0:o3_22,o1:o1_48,o2:o2_52,o3:o3_22,o4:o4_54,o5:o5_56,o7:0x00015758
		defs: i0:i0_60,i1:i1_62,l0:l0_76,o2:o2_65,o4:o4_69,o5:o5_71
	o1_103 = Mem33[i0_109 + 40:word32]
	l0_107 = l0_76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015730_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001573C:
	word32 o2_80 = Mem33[i0_109 + 32:word32]
	call o2_80 (retsize: 0;)
		uses: l0:l0_101,o0:Mem33[i0_32 + 36:word32],o1:o3_22,o2:o2_80,o3:o3_22,o4:o4_54,o5:o5_56,o7:0x00015744
		defs: i0:i0_85,i1:i1_87,l0:l0_101,o2:o2_90,o4:o4_94,o5:o5_96
	o1_103 = Mem33[i0_109 + 40:word32]
	l0_107 = l0_101
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015764:
	word32 l0_107
	Mem110[i0_109 + 40:word32] = o1_103 | 0x40000000
	o3_108 = l0_107
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015798:
	branch o3_108 == 0x00000000 l00015798_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015798_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000157BC:
	branch i1_161 == 0x00000000 l000157BC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000157BC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000157BC_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000157C4:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015798_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000157A4:
	Mem122[i0_109 + 8:word32] = i1_161
	Mem123[i0_109 + 12:word32] = i1_161
	word32 o0_124 = Mem123[o3_108:word32]
	Mem125[i0_109 + 4:word32] = o3_108
	Mem126[i0_109 + 16:word32] = o0_124
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000157CC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_obstack_free_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void obstack_free(word32 o0, word32 o1, word32 o2, word32 o4, word32 o5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31] o2:[0..31] o4:[0..31] o5:[0..31]
// LiveOut:
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7
// Preserved: l0 o0 o1 o2 o3 o4 o5 o7 sp
obstack_free_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000157D4:
	word32 i0_109 = o0
	word32 i1_161 = o1
	word32 o3_108 = Mem0[o0 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015824:
	branch o3_108 == 0x00000000 l00015824_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015824_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015824_ds_f:
	word32 g0_29 = o3_108 - i1_161
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015830:
	word32 o0_34
	branch g0_29 >=u 0x00000000 l00015830_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015830_ds_t:
	o0_34 = Mem33[i0_109 + 40:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015838:
	branch Mem33[o3_108:word32] - i1_161 <u 0x00000000 l00015838_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015838_ds_t:
	o0_34 = Mem33[i0_109 + 40:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000157E0:
	word32 o1_103
	word32 l0_101
	word32 l0_76
	branch o0_34 >= 0x00000000 l000157E0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000157E0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015804:
	word32 o1_48 = Mem33[i0_109 + 32:word32]
	call o1_48 (retsize: 0;)
		uses: l0:l0_76,o0:o3_22,o1:o1_48,o2:o2_52,o3:o3_22,o4:o4_54,o5:o5_56,o7:0x00015808
		defs: i0:i0_60,i1:i1_62,l0:l0_76,o2:o2_65,o4:o4_69,o5:o5_71
	o1_103 = Mem33[i0_109 + 40:word32]
	l0_107 = l0_76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000157E0_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000157EC:
	word32 o2_80 = Mem33[i0_109 + 32:word32]
	call o2_80 (retsize: 0;)
		uses: l0:l0_101,o0:Mem33[i0_32 + 36:word32],o1:o3_22,o2:o2_80,o3:o3_22,o4:o4_54,o5:o5_56,o7:0x000157F4
		defs: i0:i0_85,i1:i1_87,l0:l0_101,o2:o2_90,o4:o4_94,o5:o5_96
	o1_103 = Mem33[i0_109 + 40:word32]
	l0_107 = l0_101
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015814:
	word32 l0_107
	Mem110[i0_109 + 40:word32] = o1_103 | 0x40000000
	o3_108 = l0_107
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015848:
	branch o3_108 == 0x00000000 l00015848_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015848_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001586C:
	branch i1_161 == 0x00000000 l0001586C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001586C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001586C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015874:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015848_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015854:
	Mem122[i0_109 + 8:word32] = i1_161
	Mem123[i0_109 + 12:word32] = i1_161
	word32 o0_124 = Mem123[o3_108:word32]
	Mem125[i0_109 + 4:word32] = o3_108
	Mem126[i0_109 + 16:word32] = o0_124
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001587C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

obstack_free_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _obstack_memory_used(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut:
// Trashed: NZVC g0 g2 g3 o0
// Preserved: sp
_obstack_memory_used_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015884:
	word32 g3_11 = Mem0[o0 + 4:word32]
	branch g3_11 == 0x00000000 l00015884_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015884_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015884_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015894:
	g3_11 = Mem0[g3_11 + 4:word32]
	branch g3_11 != 0x00000000 l00015894_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015894_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015894_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000158AC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_obstack_memory_used_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void print_and_abort()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
print_and_abort_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

print_and_abort_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000158B4:
	fputs(0x000178D0, 0x0002B640)
	exit(Mem0[0x00028030:word32])
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 try(word32 o0, word32 o1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31]
// LiveOut: o0
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 o0
// Preserved: o1 o2 o3 o4 o5 o7 sp
try_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000158D8:
	word32 i0_34 = o0
	branch o1 == 0x00000000 l000158D8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000158D8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000158F0:
	branch o0 == 0x00000000 l000158F0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000158F0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000158F0_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000158F8:
	branch access(o0, 0x00000007) == 0x00000000 l000158F8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000158F8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000158F8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001590C:
	i0_34 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000158D8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000158E8:
	i0_34 = o1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015910:
	return i0_34
// DataOut:
// DataOut (flags):
// SymbolicIn:

try_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 choose_temp_base(ptr32 & l1Out, ptr32 & i0Out, ptr32 & i6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: i0 i6 l1 o0 sp
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
choose_temp_base_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015918:
	word32 o0_128 = try(0x00028038, try(0x00028040, try(0x00017900, try(getenv(0x000178F8), try(getenv(0x000178F0), try(getenv(0x000178E8), 0x00000000))))))
	word32 l0_133 = o0_128
	branch o0_128 != 0x00000000 l00015918_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015918_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015918_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000159A8:
	l0_133 = 0x00017910
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000159B0:
	word32 o0_174
	word32 o0_140 = strlen(l0_133)
	word32 i1_147
	word32 i2_148
	word32 i6_152
	xmalloc(o0_140 + 0x0000000A, out i1_147, out i2_148, out i6_152)
	strcpy(o0_140 + 0x0000000A, l0_133)
	word32 l1_143 = o0_140
	branch o0_140 == 0x00000000 l000159B0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000159B0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000159B0_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000159DC:
	branch (int32) Mem0[o0_140 + (o0_140 + 0x0000000A) + -1:int8] == 0x0000002F l000159DC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000159DC_ds_t:
	o0_174 = (word32) Mem0[0x00017918:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000159F0:
	Mem176[o0_140 + (o0_140 + 0x0000000A):byte] = 0x2F
	l1_143 = o0_140 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015A00:
	o0_174 = (word32) Mem180[0x00017918:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015A04:
	Mem188[o0_140 + 0x0000000A + l1_143:byte] = (byte) o0_174
	word32 o4_186 = o0_140 + 0x0000000A + l1_143
	Mem193[o4_186 + 1:byte] = (byte) (word32) Mem188[0x00017919:byte]
	Mem195[o4_186 + 2:byte] = (byte) (word32) Mem193[0x0001791A:byte]
	Mem197[o4_186 + 3:byte] = (byte) (word32) Mem195[0x0001791B:byte]
	Mem199[o4_186 + 4:byte] = (byte) (word32) Mem197[0x0001791C:byte]
	Mem201[o4_186 + 5:byte] = (byte) (word32) Mem199[0x0001791D:byte]
	Mem203[o4_186 + 6:byte] = (byte) (word32) Mem201[0x0001791E:byte]
	Mem205[o4_186 + 7:byte] = (byte) (word32) Mem203[0x0001791F:byte]
	Mem207[o4_186 + 8:byte] = (byte) (word32) Mem205[0x00017920:byte]
	mktemp(o0_140 + 0x0000000A)
	branch strlen(o0_140 + 0x0000000A) != 0x00000000 l00015A04_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015A04_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015A74:
	l1Out = l1_143
	i0Out = o0_140 + 0x0000000A
	i6Out = i6_152
	return o0_140 + 0x0000000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

choose_temp_base_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015A04_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015A6C:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:



void make_temp_file(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut:
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 l3 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
make_temp_file_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015A7C:
	word32 o0_129 = try(0x00028050, try(0x00028058, try(0x00017900, try(getenv(0x000178F8), try(getenv(0x000178F0), try(getenv(0x000178E8), 0x00000000))))))
	word32 l0_134 = o0_129
	branch o0_129 != 0x00000000 l00015A7C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015A7C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015A7C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015B10:
	l0_134 = 0x00017910
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015B14:
	word32 l2_150
	word32 o0_142 = strlen(l0_134)
	branch o0 == 0x00000000 l00015B14_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015B14_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015B38:
	l2_150 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015B14_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015B28:
	l2_150 = strlen(o0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015B3C:
	word32 o0_158 = o0_142 + l2_150
	word32 i6_270
	word32 i2_269
	word32 i1_268
	xmalloc(o0_158 + 0x0000000A, out i1_268, out i2_269, out i6_270)
	strcpy(o0_158 + 0x0000000A, l0_134)
	word32 l1_156 = o0_142
	branch o0_142 == 0x00000000 l00015B3C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015B3C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015B3C_ds_f:
	word32 o0_183 = o0_142 + (o0_158 + 0x0000000A)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015B60:
	branch (int32) Mem0[o0_183 + -1:int8] == 0x0000002F l00015B60_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015B60_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015B60_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015B70:
	Mem193[o0_142 + (o0_158 + 0x0000000A):byte] = 0x2F
	l1_156 = o0_142 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015B78:
	Mem201[o0_158 + 0x0000000A + l1_156:byte] = (byte) (word32) Mem196[0x00017918:byte]
	word32 o3_200 = o0_158 + 0x0000000A + l1_156
	Mem208[o3_200 + 1:byte] = (byte) (word32) Mem201[0x00017919:byte]
	Mem210[o3_200 + 2:byte] = (byte) (word32) Mem208[0x0001791A:byte]
	Mem212[o3_200 + 3:byte] = (byte) (word32) Mem210[0x0001791B:byte]
	Mem214[o3_200 + 4:byte] = (byte) (word32) Mem212[0x0001791C:byte]
	Mem216[o3_200 + 5:byte] = (byte) (word32) Mem214[0x0001791D:byte]
	Mem218[o3_200 + 6:byte] = (byte) (word32) Mem216[0x0001791E:byte]
	Mem220[o3_200 + 7:byte] = (byte) (word32) Mem218[0x0001791F:byte]
	word32 o1_221 = (word32) Mem220[0x00017920:byte]
	branch o0 == 0x00000000 l00015B78_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015B78_ds_t:
	Mem223[o3_200 + 8:byte] = (byte) o1_221
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015BE0:
	word32 o0_236 = mkstemps(o0_158 + 0x0000000A, l2_150)
	branch o0_236 != 0xFFFFFFFF l00015BE0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015BE0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C00:
	branch close(o0_236) == 0x00000000 l00015C00_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C00_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C1C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

make_temp_file_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C00_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C14:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015BE0_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015BF8:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015B78_ds_f:
	Mem259[o3_200 + 8:byte] = (byte) o1_221
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015BD4:
	strcat(o0_158 + 0x0000000A, o0)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 my_index(word32 o0, word32 o1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31]
// LiveOut: o0
// Trashed: NZVC g0 g2 g3 o0
// Preserved: sp
my_index_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C24:
	word32 g2_20 = (int32) Mem0[o0:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C48:
	branch g2_20 != 0x00000000 l00015C48_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C48_ds_t:
	word32 g3_12 = (word32) Mem0[o0:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C2C:
	branch (g3_12 << 0x00000018 >> 0x00000018) - o1 == 0x00000000 l00015C2C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C2C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C2C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C40:
	o0 = o0 + 0x00000001
	g2_20 = (int32) Mem0[o0:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C48_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C54:
	o0 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C58:
	return o0
// DataOut:
// DataOut (flags):
// SymbolicIn:

my_index_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 exchange(word32 o0, ptr32 & i2Out, ptr32 & i4Out, ptr32 & i5Out, ptr32 & i6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31]
// LiveOut: i1 i2 i4 i5 i6
// Trashed: NZVC g0 g1 g2 g3 g4 i0 i1 i2 i3 i4 i5 i6 i7 o0 o1 o4 o5
// Preserved: o2 o3 o7 sp
exchange_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C60:
	word32 g2_134
	word32 g1_18 = Mem0[0x0002B300:word32]
	word32 i5_119 = Mem0[0x00028068:word32]
	word32 i2_167 = o2
	word32 i1_15 = 0x00028000
	word32 i4_111 = Mem0[0x0002B2F0:word32]
	branch i5_119 - g1_18 <= 0x00000000 l00015C60_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C60_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C60_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C90:
	branch g1_18 - i4_111 <= 0x00000000 l00015C90_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C90_ds_t:
	g2_134 = Mem0[0x00028068:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C90_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C9C:
	word32 g3_120 = i5_119 - g1_18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015CA4:
	byte NZV_107
	word32 g2_37 = g1_18 - i4_111
	branch g3_120 - g2_37 <= 0x00000000 l00015C9C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C9C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015CF0:
	word32 g4_47
	branch g3_120 <= 0x00000000 l00015CF0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015CF0_ds_t:
	g4_47 = i4_111 + g3_120
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015CF0_ds_f:
	g4_47 = i4_111 + g3_120
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015CFC:
	word32 i3_49 = g3_120
	word32 i1_50 = i4_111 << 0x00000002
	word32 g3_52 = g1_18 << 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015D08:
	i2_167 = Mem55[i1_50 + o0:word32]
	Mem62[i1_50 + o0:word32] = Mem55[g3_52 + o0:word32]
	Mem63[g3_52 + o0:word32] = i2_167
	i3_49 = i3_49 + 0xFFFFFFFF
	g3_52 = g3_52 + 0x00000004
	branch i3_49 != 0x00000000 l00015D08_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015D08_ds_t:
	i1_50 = i1_50 + 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015D08_ds_f:
	i1_15 = i1_50 + 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015D28:
	i4_111 = g4_47
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015C9C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015CB4:
	branch g2_37 <= 0x00000000 l00015CB4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015CB4_ds_t:
	i5_119 = i5_119 - g2_37
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015D2C:
	NZV_107 = SLICE(cond(i5_119 - g1_18), bool, 3) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015CB4_ds_f:
	i5_119 = i5_119 - g2_37
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015CBC:
	word32 i3_85 = g2_37
	i1_15 = i5_119 << 0x00000002
	word32 g3_101 = i4_111 << 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015CC8:
	i2_167 = Mem90[g3_101 + o0:word32]
	Mem97[g3_101 + o0:word32] = Mem90[i1_15 + o0:word32]
	Mem98[i1_15 + o0:word32] = i2_167
	i3_85 = i3_85 + 0xFFFFFFFF
	i1_15 = i1_15 + 0x00000004
	branch i3_85 != 0x00000000 l00015CC8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015CC8_ds_t:
	g3_101 = g3_101 + 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015CC8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015CE8:
	NZV_107 = SLICE(cond(i5_119 - g1_18), bool, 3) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015D30:
	branch NZV_107 l00015D30_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015D30_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015D30_ds_f:
	word32 g0_116 = g1_18 - i4_111
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015D38:
	branch g0_116 > 0x00000000 l00015D38_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015D38_ds_t:
	g3_120 = i5_119 - g1_18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015D38_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015D40:
	g2_134 = Mem129[0x00028068:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015D44:
	Mem157[0x0002B2F0:word32] = Mem143[0x0002B2F0:word32] + (g2_134 - Mem143[0x0002B300:word32])
	Mem158[0x0002B300:word32] = g2_134
	i2Out = i2_167
	i4Out = i4_111
	i5Out = i5_119
	i6Out = fp
	return i1_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

exchange_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 _getopt_initialize(word32 o2, ptr32 & i1Out, ptr32 & i4Out, ptr32 & i5Out, ptr32 & i6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o2:[0..31]
// LiveOut: i1 i4 i5 i6 o0
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 o0
// Preserved: o1 o2 o3 o4 o5 o7 sp
_getopt_initialize_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015D64:
	word32 o2_20 = Mem0[0x00028068:word32]
	Mem25[0x0002B2F0:word32] = o2_20
	Mem27[0x0002B300:word32] = o2_20
	Mem28[0x0002B2C0:word32] = 0x00000000
	word32 o0_30 = getenv(0x00017928)
	Mem34[0x0002B2E0:word32] = o0_30
	word32 i0_26 = o2
	word32 o0_35 = (int32) Mem34[o2:int8]
	branch o0_35 != 0x0000002D l00015D64_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015D64_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015DC8:
	branch o0_35 != 0x0000002B l00015DC8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015DC8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015DE0:
	branch o0_30 == 0x00000000 l00015DE0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015DE0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015DF0:
	Mem48[0x0002B2D0:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015DE0_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015DE8:
	Mem50[0x0002B2D0:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015DC8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015DD0:
	Mem54[0x0002B2D0:word32] = 0x00000000
	i0_26 = o2 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015D64_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015DB4:
	Mem60[0x0002B2D0:word32] = 0x00000002
	i0_26 = o2 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015DFC:
	i1Out = o1
	i4Out = o4
	i5Out = o5
	i6Out = fp
	return i0_26
// DataOut:
// DataOut (flags):
// SymbolicIn:

_getopt_initialize_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 _getopt_internal(word32 o1, word32 o2, word32 o4, word32 o5, ptr32 & l6Out, ptr32 & l7Out, ptr32 & i6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o1:[0..31] o2:[0..31] o4:[0..31] o5:[0..31]
// LiveOut: i6 l0 l6 l7
// Trashed: NZVC g0 g2 g3 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 l3 l4 l5 l6 l7 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved: g1 g4
_getopt_internal_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E04:
	word32 o2_22 = Mem0[0x00028068:word32]
	Mem27[0x00028064:word32] = 0x00000000
	word32 i1_156 = o1
	word32 i2_164 = o2
	word32 i4_1158 = o4
	word32 i5_15 = o5
	word32 i6_16 = fp
	bool Z_30 = SLICE(cond(o2_22), bool, 2)
	branch o2_22 == 0x00000000 l00015E04_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E04_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E04_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E30:
	branch Mem27[0x0002806C:word32] != 0x00000000 l00015E30_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E30_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E30_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E40:
	Z_30 = SLICE(cond(o2_22), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E44:
	branch Z_30 l00015E44_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E44_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E44_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E4C:
	Mem49[0x00028068:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E58:
	word32 o0_66 = _getopt_initialize(o2, out i1_156, out i4_1158, out i5_15, out i6_16)
	Mem74[0x0002806C:word32] = 0x00000001
	i2_164 = o0_66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E74:
	word32 o0_408
	word32 l0_127 = 0x00028000
	word32 o0_80 = Mem79[0x0002B2C0:word32]
	branch o0_80 == 0x00000000 l00015E74_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E74_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E88:
	branch (int32) Mem79[o0_80:int8] != 0x00000000 l00015E88_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E88_ds_t:
	o0_408 = Mem79[i6_16 + 80:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E88_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E98:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E9C:
	word32 o2_99 = Mem79[0x00028068:word32]
	branch Mem79[0x0002B300:word32] - o2_99 <= 0x00000000 l00015E9C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E9C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E9C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015EB0:
	Mem105[0x0002B300:word32] = o2_99
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015EB4:
	l0_127 = 0x0002B000
	branch Mem107[0x0002B2F0:word32] - o2_99 <= 0x00000000 l00015EB4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015EB4_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015EB4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015EC8:
	Mem115[0x0002B2F0:word32] = o2_99
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015ECC:
	branch Mem117[0x0002B2D0:word32] != 0x00000001 l00015ECC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015ECC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015ECC_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015EE0:
	word32 o0_135
	word32 o1_128 = Mem117[0x0002B300:word32]
	branch Mem117[0x0002B2F0:word32] - o1_128 == 0x00000000 l00015EE0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015EE0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015F0C:
	o0_135 = Mem117[0x0002B300:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015EE0_ds_f:
	word32 g0_136 = o1_128 - o2_99
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015EF4:
	branch g0_136 == 0x00000000 l00015EF4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015EF4_ds_t:
	o0_135 = Mem117[0x0002B300:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015F10:
	word32 o1_144 = Mem117[0x00028068:word32]
	branch o0_135 - o1_144 != 0x00000000 l00015F10_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015F10_ds_t:
	Mem150[0x0002B2F0:word32] = o1_144
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015F20:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015EF4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015EFC:
	i1_156 = exchange(i1_156, out i2_164, out i4_1158, out i5_15, out i6_16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015F24:
	word32 o2_183 = Mem181[0x00028068:word32]
	byte NV_1747 = SLICE(cond(o2_183 - Mem181[i6_16 + 68:word32]), bool, 3)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015F48:
	branch NV_1747 l00015F48_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015F48_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015F48_ds_f:
	word32 o0_196 = o2_183 << 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015F50:
	word32 o0_205
	word32 o0_199 = Mem198[i1_156 + o0_196:word32]
	branch (int32) Mem198[o0_199:int8] != 0x0000002D l00015F50_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015F50_ds_t:
	o0_205 = Mem198[0x00028068:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015F64:
	branch (int32) Mem198[o0_199 + 1:int8] == 0x00000000 l00015F64_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015F64_ds_t:
	o0_205 = Mem198[0x00028068:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015F34:
	word32 o0_216 = o0_205 + 0x00000001
	word32 o1_214 = Mem198[i6_16 + 68:word32]
	Mem219[0x00028068:word32] = o0_216
	o2_183 = o0_216
	NV_1747 = SLICE(cond(o0_216 - o1_214), bool, 3) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015F64_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015F74:
	Mem230[0x0002B300:word32] = o2_183
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015F78:
	word32 o2_270
	word32 o1_238 = Mem237[0x00028068:word32]
	branch o1_238 - Mem237[i6_16 + 68:word32] == 0x00000000 l00015F78_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015F78_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015F78_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015F8C:
	branch strcmp(Mem237[i1_156 + (o1_238 << 0x00000002):word32], 0x00017938) != 0x00000000 l00015F8C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015F8C_ds_t:
	o2_270 = Mem237[0x00028068:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015F8C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015FA8:
	word32 o0_301
	word32 o1_287
	word32 o2_282 = Mem237[0x0002B300:word32]
	word32 o0_272 = Mem237[0x00028068:word32]
	branch Mem237[0x0002B2F0:word32] - o2_282 == 0x00000000 l00015FA8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015FA8_ds_t:
	Mem286[0x00028068:word32] = o0_272 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015FE0:
	o1_287 = Mem286[0x0002B2F0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015FA8_ds_f:
	Mem288[0x00028068:word32] = o0_272 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015FC4:
	branch o2_282 - (o0_272 + 0x00000001) == 0x00000000 l00015FC4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015FC4_ds_t:
	o1_287 = Mem288[0x0002B2F0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015FE4:
	branch o1_287 - Mem294[0x0002B300:word32] != 0x00000000 l00015FE4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015FE4_ds_t:
	o0_301 = Mem294[i6_16 + 68:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015FE4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015FF4:
	Mem306[0x0002B2F0:word32] = Mem294[0x00028068:word32]
	o0_301 = Mem306[i6_16 + 68:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015FC4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015FD0:
	i1_156 = exchange(i1_156, out i2_164, out i4_1158, out i5_15, out i6_16)
	o0_301 = Mem288[i6_16 + 68:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016000:
	Mem334[0x0002B300:word32] = o0_301
	Mem336[0x00028068:word32] = o0_301
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016008:
	o2_270 = Mem338[0x00028068:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001600C:
	branch o2_270 - Mem343[i6_16 + 68:word32] != 0x00000000 l0001600C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001600C_ds_t:
	word32 o0_349 = o2_270 << 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016038:
	word32 o0_1515
	word32 o3_354 = Mem343[i1_156 + o0_349:word32]
	branch (int32) Mem343[o3_354:int8] != 0x0000002D l00016038_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016038_ds_t:
	o0_1515 = Mem343[0x0002B2D0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016038_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001604C:
	word32 o0_372 = (int32) Mem343[o3_354 + 1:int8]
	branch o0_372 != 0x00000000 l0001604C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001604C_ds_t:
	word32 o2_376 = Mem343[i6_16 + 80:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016098:
	word32 o1_380
	branch o2_376 == 0x00000000 l00016098_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016098_ds_t:
	o1_380 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016098_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000160A4:
	o1_380 = 0x00000001 - ((o0_372 ^ 0x0000002D) >u 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000160B0:
	Mem406[0x0002B2C0:word32] = o3_354 + (o1_380 + 0x00000001)
	o0_408 = Mem406[i6_16 + 80:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000160C0:
	word32 o1_1206
	word32 o0_1211
	word32 o0_1088
	word32 o1_419
	branch o0_408 == 0x00000000 l000160C0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000160C0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001649C:
	o1_419 = Mem416[0x0002B2C0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000160C0_ds_f:
	word32 o0_420 = Mem416[0x00028068:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000160CC:
	word32 l2_456
	word32 o0_424 = Mem416[i1_156 + (o0_420 << 0x00000002):word32]
	word32 o1_425 = (int32) Mem416[o0_424 + 1:int8]
	branch o1_425 == 0x0000002D l000160CC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000160CC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000160CC_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000160E4:
	branch i5_15 == 0x00000000 l000160E4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000160E4_ds_t:
	o1_419 = Mem416[0x0002B2C0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000160EC:
	branch (int32) Mem416[o0_424 + 2:int8] != 0x00000000 l000160EC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000160EC_ds_t:
	l2_456 = Mem416[0x0002B2C0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000160EC_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000160FC:
	branch my_index(i2_164, o1_425) != 0x00000000 l000160FC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000160FC_ds_t:
	o1_419 = Mem416[0x0002B2C0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000160FC_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016110:
	l2_456 = Mem416[0x0002B2C0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016114:
	word32 l3_492 = 0x00000000
	word32 i3_498 = 0x00000000
	word32 o0_500 = (int32) Mem416[l2_456:int8]
	word32 i0_501 = 0x00000000
	word32 o1_502 = Mem416[Mem416[i6_16 + 80:word32]:word32]
	l7 = 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016138:
	branch o0_500 == 0x00000000 l00016138_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016138_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016138_ds_f:
	word32 g0_510 = o0_500 - 0x0000003D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016144:
	branch g0_510 != 0x00000000 l00016144_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016144_ds_t:
	l2_456 = l2_456 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016134:
	o0_500 = (int32) Mem416[l2_456:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001614C:
	word32 l1_520 = Mem416[i6_16 + 80:word32]
	branch o1_502 == 0x00000000 l0001614C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001614C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001614C_ds_f:
	word32 l4_527 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001615C:
	word32 o1_530 = Mem416[0x0002B2C0:word32]
	branch strncmp(Mem416[l1_520:word32], o1_530, l2_456 - o1_530) != 0x00000000 l0001615C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001615C_ds_t:
	l1_520 = l1_520 + 0x00000010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016178:
	l0_127 = l2_456 - Mem416[0x0002B2C0:word32]
	branch l0_127 - strlen(Mem416[l1_520:word32]) == 0x00000000 l00016178_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016178_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016088:
	l3_492 = l1_520
	l7 = l4_527
	i3_498 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016178_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016194:
	branch l3_492 != 0x00000000 l00016194_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016194_ds_t:
	i0_501 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001619C:
	l3_492 = l1_520
	l7 = l4_527
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000161A4:
	l1_520 = l1_520 + 0x00000010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000161A8:
	branch Mem416[l1_520:word32] != 0x00000000 l000161A8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000161A8_ds_t:
	l4_527 = l4_527 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000161A8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000161B8:
	bool Z_605
	branch i0_501 == 0x00000000 l000161B8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000161B8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016230:
	Z_605 = SLICE(cond(l3_492), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000161B8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000161C4:
	branch i3_498 != 0x00000000 l000161C4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000161C4_ds_t:
	Z_605 = SLICE(cond(l3_492), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016234:
	branch Z_605 l00016234_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016234_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000163D0:
	branch i5_15 == 0x00000000 l000163D0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000163D0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000163D0_ds_f:
	word32 o0_633 = Mem416[0x00028068:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000163DC:
	branch (int32) Mem416[Mem416[i1_156 + (o0_633 << 0x00000002):word32] + 1:int8] == 0x0000002D l000163DC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000163DC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000163DC_ds_f:
	word32 o2_657 = Mem416[0x0002B2C0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000163F4:
	branch my_index(i2_164, (int32) Mem416[o2_657:int8]) != 0x00000000 l000163F4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000163F4_ds_t:
	o1_419 = Mem416[0x0002B2C0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000164A0:
	bool Z_714
	word32 i0_685 = (word32) Mem416[o1_419:byte]
	Mem690[0x0002B2C0:word32] = o1_419 + 0x00000001
	l0_127 = i0_685 << 0x00000018 >> 0x00000018
	word32 o0_695 = my_index(i2_164, l0_127)
	word32 o3_700 = Mem690[0x0002B2C0:word32]
	branch (int32) Mem690[o3_700:int8] != 0x00000000 l000164A0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000164A0_ds_t:
	Z_714 = SLICE(cond(o0_695), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000164A0_ds_f:
	Z_714 = SLICE(cond(o0_695), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000164D8:
	Mem713[0x00028068:word32] = Mem690[0x00028068:word32] + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000164E4:
	branch Z_714 l000164E4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000164E4_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000164E4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000164EC:
	branch l0_127 != 0x0000003A l000164EC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000164EC_ds_t:
	word32 o0_725 = (int32) Mem724[o0_695:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016568:
	word32 o0_730
	branch o0_725 != 0x00000057 l00016568_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016568_ds_t:
	word32 o1_729 = (word32) Mem724[o0_695 + 1:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016888:
	o0_730 = o1_729 << 0x00000018
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016568_ds_f:
	word32 o1_731 = (word32) Mem724[o0_695 + 1:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016574:
	branch o1_731 != 0x0000003B l00016574_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016574_ds_t:
	o0_730 = o1_731 << 0x00000018
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001688C:
	branch o0_730 >> 0x00000018 != 0x0000003A l0001688C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001688C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001689C:
	word32 o1_752
	word32 o0_828
	branch (int32) Mem724[o0_695 + 2:int8] != 0x0000003A l0001689C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001689C_ds_t:
	o1_752 = Mem724[0x0002B2C0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168C8:
	branch (int32) Mem724[o1_752:int8] == 0x00000000 l000168C8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168C8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168EC:
	word32 o2_760 = Mem724[0x00028068:word32]
	branch o2_760 - Mem724[i6_16 + 68:word32] != 0x00000000 l000168EC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168EC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016958:
	Mem780[0x00028064:word32] = Mem724[i1_156 + (o2_760 << 0x00000002):word32]
	Mem781[0x00028068:word32] = o2_760 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168EC_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016900:
	branch Mem724[0x00028070:word32] == 0x00000000 l00016900_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016900_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016930:
	Mem792[0x00028074:word32] = i0_685 << 0x00000018 >> 0x00000018
	branch (int32) Mem792[i2_164:int8] != 0x0000003A l00016930_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016930_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016930_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016950:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016900_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016914:
	fprintf(0x0002B640, 0x00017A70, Mem724[i1_156:word32], i0_685 << 0x00000018 >> 0x00000018)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168C8_ds_f:
	o0_828 = Mem724[0x00028068:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001689C_ds_f:
	o1_752 = Mem724[0x0002B2C0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168AC:
	branch (int32) Mem724[o1_752:int8] != 0x00000000 l000168AC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168AC_ds_t:
	o0_828 = Mem724[0x00028068:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168D8:
	Mem839[0x00028064:word32] = o1_752
	Mem841[0x00028068:word32] = o0_828 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168AC_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168BC:
	Mem844[0x00028064:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001696C:
	Mem847[0x0002B2C0:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016574_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016580:
	word32 l3_1001 = 0x00000000
	word32 i0_854 = 0x00000000
	word32 l4_855 = 0x00000000
	branch (int32) Mem724[o3_700:int8] == 0x00000000 l00016580_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016580_ds_t:
	l7 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000165B4:
	word32 o2_858 = Mem724[0x00028068:word32]
	branch o2_858 - Mem724[i6_16 + 68:word32] != 0x00000000 l000165B4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000165B4_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016624:
	Mem867[0x00028064:word32] = Mem724[i1_156 + (o2_858 << 0x00000002):word32]
	Mem868[0x00028068:word32] = o2_858 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000165B4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000165C8:
	branch Mem724[0x00028070:word32] == 0x00000000 l000165C8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000165C8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000165F4:
	Mem878[0x00028074:word32] = l0_127
	branch (int32) Mem878[i2_164:int8] != 0x0000003A l000165F4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000165F4_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000165F4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001660C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016970:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016974:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000165C8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000165DC:
	fprintf(0x0002B640, 0x00017A70, Mem724[i1_156:word32], l0_127)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016580_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001659C:
	word32 o0_901 = Mem724[0x00028068:word32]
	Mem904[0x00028064:word32] = o3_700
	Mem905[0x00028068:word32] = o0_901 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001663C:
	word32 l1_908 = Mem907[0x00028064:word32]
	Mem910[0x0002B2C0:word32] = l1_908
	l7 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016644:
	word32 o0_913 = (int32) Mem910[l1_908:int8]
	branch o0_913 == 0x00000000 l0001663C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001663C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001663C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016654:
	branch o0_913 != 0x0000003D l00016654_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016654_ds_t:
	l1_908 = l1_908 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001665C:
	word32 i3_927 = Mem910[i6_16 + 80:word32]
	branch Mem910[i3_927:word32] == 0x00000000 l0001665C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001665C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001665C_ds_f:
	word32 l2_933 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016670:
	word32 o1_936 = Mem910[0x0002B2C0:word32]
	branch strncmp(Mem910[i3_927:word32], o1_936, l1_908 - o1_936) != 0x00000000 l00016670_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016670_ds_t:
	i3_927 = i3_927 + 0x00000010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001668C:
	l0_127 = l1_908 - Mem910[0x0002B2C0:word32]
	branch l0_127 - strlen(Mem910[i3_927:word32]) == 0x00000000 l0001668C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001668C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016614:
	l3_1001 = i3_927
	l7 = l2_933
	i0_854 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001668C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000166A8:
	branch l3_1001 != 0x00000000 l000166A8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000166A8_ds_t:
	l4_855 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000166B0:
	l3_1001 = i3_927
	l7 = l2_933
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000166B8:
	i3_927 = i3_927 + 0x00000010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000166BC:
	branch Mem910[i3_927:word32] != 0x00000000 l000166BC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000166BC_ds_t:
	l2_933 = l2_933 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000166BC_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000166CC:
	bool Z_1014
	branch l4_855 == 0x00000000 l000166CC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000166CC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001673C:
	Z_1014 = SLICE(cond(l3_1001), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000166CC_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000166D8:
	branch i0_854 != 0x00000000 l000166D8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000166D8_ds_t:
	Z_1014 = SLICE(cond(l3_1001), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016740:
	branch Z_1014 l00016740_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016740_ds_t:
	Mem1023[0x0002B2C0:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016880:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016748:
	branch (int32) Mem910[l1_908:int8] == 0x00000000 l00016748_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016748_ds_t:
	word32 o0_1037 = Mem910[l3_1001 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167B8:
	branch o0_1037 != 0x00000001 l000167B8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167B8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167B8_ds_f:
	word32 o2_1050 = Mem910[0x00028068:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167C4:
	branch o2_1050 - Mem910[i6_16 + 68:word32] >= 0x00000000 l000167C4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167C4_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167F0:
	branch Mem910[0x00028070:word32] == 0x00000000 l000167F0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167F0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016820:
	Mem1079[0x0002B2C0:word32] = Mem910[0x0002B2C0:word32] + strlen(Mem910[0x0002B2C0:word32])
	o0_1088 = (int32) Mem1079[i2_164:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167F0_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016800:
	fprintf(0x0002B640, 0x000179C0, Mem910[i1_156:word32], Mem910[(o2_1050 << 0x00000002) + i1_156 + -4:word32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167C4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167D4:
	Mem1112[0x00028064:word32] = Mem910[i1_156 + (o2_1050 << 0x00000002):word32]
	Mem1113[0x00028068:word32] = o2_1050 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016748_ds_f:
	word32 o0_1114 = Mem910[l3_1001 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016758:
	branch o0_1114 == 0x00000000 l00016758_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016758_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016770:
	branch Mem910[0x00028070:word32] == 0x00000000 l00016770_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016770_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001679C:
	Mem1131[0x0002B2C0:word32] = Mem910[0x0002B2C0:word32] + strlen(Mem910[0x0002B2C0:word32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016770_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016784:
	fprintf(0x0002B640, 0x00017AC0, Mem910[i1_156:word32], Mem910[l3_1001:word32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016758_ds_f:
	word32 o0_1140 = l1_908 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016764:
	Mem1142[0x00028064:word32] = o0_1140
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016840:
	word32 o1_1189 = Mem1144[0x0002B2C0:word32] + strlen(Mem1144[0x0002B2C0:word32])
	branch i4_1158 == 0x00000000 l00016840_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016840_ds_t:
	Mem1191[0x0002B2C0:word32] = o1_1189
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016840_ds_f:
	Mem1192[0x0002B2C0:word32] = o1_1189
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001685C:
	Mem1202[i4_1158:word32] = l7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016860:
	o1_1206 = Mem1205[l3_1001 + 8:word32]
	branch o1_1206 == 0x00000000 l00016860_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016860_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016870:
	o0_1211 = Mem1205[l3_1001 + 12:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000166D8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000166E0:
	branch Mem910[0x00028070:word32] == 0x00000000 l000166E0_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000166E0_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016714:
	word32 o0_1222 = strlen(Mem910[0x0002B2C0:word32])
	word32 o2_1225 = Mem910[0x00028068:word32]
	Mem1228[0x0002B2C0:word32] = Mem910[0x0002B2C0:word32] + o0_1222
	Mem1229[0x00028068:word32] = o2_1225 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000166E0_ds_f:
	word32 o1_1230 = Mem910[0x00028068:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000166F4:
	fprintf(0x0002B640, 0x00017A98, Mem910[i1_156:word32], Mem910[i1_156 + (o1_1230 << 0x00000002):word32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000164F4:
	branch Mem724[0x00028070:word32] == 0x00000000 l000164F4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000164F4_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016550:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000164F4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016508:
	branch Mem724[0x0002B2E0:word32] == 0x00000000 l00016508_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016508_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016538:
	fprintf(0x0002B640, 0x00017A50, Mem724[i1_156:word32], l0_127)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016508_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016518:
	fprintf(0x0002B640, 0x00017A30, Mem724[i1_156:word32], l0_127)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016554:
	Mem1277[0x00028074:word32] = i0_685 << 0x00000018 >> 0x00000018
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000163F4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001640C:
	word32 o0_1288
	branch Mem416[0x00028070:word32] == 0x00000000 l0001640C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001640C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016474:
	o0_1288 = Mem416[0x00028068:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001640C_ds_f:
	word32 o0_1289 = Mem416[0x00028068:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016420:
	word32 o3_1292 = Mem416[i1_156 + (o0_1289 << 0x00000002):word32]
	branch (int32) Mem416[o3_1292 + 1:int8] != 0x0000002D l00016420_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016420_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016458:
	fprintf(0x0002B640, 0x00017A08, Mem416[i1_156:word32], (int32) Mem416[o3_1292:int8], Mem416[0x0002B2C0:word32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016420_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016438:
	fprintf(0x0002B640, 0x000179E8, Mem416[i1_156:word32], Mem416[0x0002B2C0:word32])
	o0_1288 = Mem416[0x00028068:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016478:
	Mem1323[0x0002B2C0:word32] = 0x00017A28
	Mem1325[0x00028068:word32] = o0_1288 + 0x00000001
	Mem1326[0x00028074:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016234_ds_f:
	word32 o2_1328 = Mem416[0x00028068:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001623C:
	Mem1330[0x00028068:word32] = o2_1328 + 0x00000001
	branch (int32) Mem1330[l2_456:int8] == 0x00000000 l0001623C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001623C_ds_t:
	word32 o0_1341 = Mem1330[l3_492 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000162FC:
	branch o0_1341 != 0x00000001 l000162FC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000162FC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000162FC_ds_f:
	word32 o0_1346 = Mem1330[i6_16 + 68:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016308:
	branch o2_1328 + 0x00000001 - o0_1346 >= 0x00000000 l00016308_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016308_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016330:
	branch Mem1330[0x00028070:word32] == 0x00000000 l00016330_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016330_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016360:
	word32 o0_1357 = strlen(Mem1330[0x0002B2C0:word32])
	word32 o2_1361 = Mem1330[l3_492 + 12:word32]
	Mem1363[0x0002B2C0:word32] = Mem1330[0x0002B2C0:word32] + o0_1357
	Mem1364[0x00028074:word32] = o2_1361
	o0_1088 = (int32) Mem1364[i2_164:int8]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016388:
	branch o0_1088 == 0x0000003A l00016360_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016360_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016394:
	strlen(Mem1373[0x0002B2C0:word32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016330_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016340:
	fprintf(0x0002B640, 0x000179C0, Mem1330[i1_156:word32], Mem1330[(o2_1328 + 0x00000001 << 0x00000002) + i1_156 + -4:word32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016308_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016314:
	Mem1393[0x00028064:word32] = Mem1330[i1_156 + (o2_1328 + 0x00000001 << 0x00000002):word32]
	Mem1394[0x00028068:word32] = o2_1328 + 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001623C_ds_f:
	word32 o0_1395 = Mem1330[l3_492 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016254:
	branch o0_1395 == 0x00000000 l00016254_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016254_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001626C:
	branch Mem1330[0x00028070:word32] == 0x00000000 l0001626C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001626C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001626C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016280:
	word32 o0_1422
	word32 o3_1408 = Mem1330[(o2_1328 + 0x00000001 << 0x00000002) + i1_156 + -4:word32]
	branch (int32) Mem1330[o3_1408 + 1:int8] != 0x0000002D l00016280_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016280_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000162B8:
	fprintf(0x0002B640, 0x00017990, Mem1330[i1_156:word32], (int32) Mem1330[o3_1408:int8], Mem1330[l3_492:word32])
	o0_1422 = Mem1330[0x0002B2C0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016280_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016298:
	fprintf(0x0002B640, 0x00017960, Mem1330[i1_156:word32], Mem1330[l3_492:word32])
	o0_1422 = Mem1330[0x0002B2C0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000162D8:
	word32 o0_1434 = strlen(o0_1422)
	word32 o2_1442 = Mem1330[l3_492 + 12:word32]
	Mem1444[0x0002B2C0:word32] = Mem1330[0x0002B2C0:word32] + o0_1434
	Mem1445[0x00028074:word32] = o2_1442
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016254_ds_f:
	word32 o0_1446 = l2_456 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016260:
	Mem1448[0x00028064:word32] = o0_1446
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016398:
	word32 o1_1459 = Mem1450[0x0002B2C0:word32] + strlen(Mem1450[0x0002B2C0:word32])
	branch i4_1158 == 0x00000000 l00016398_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016398_ds_t:
	Mem1461[0x0002B2C0:word32] = o1_1459
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016398_ds_f:
	Mem1462[0x0002B2C0:word32] = o1_1459
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000163B4:
	Mem1471[i4_1158:word32] = l7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000163B8:
	o1_1206 = Mem1474[l3_492 + 8:word32]
	branch o1_1206 != 0x00000000 l000163B8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000163B8_ds_t:
	o0_1211 = Mem1474[l3_492 + 12:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016874:
	Mem1483[o1_1206:word32] = o0_1211
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000163C8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000161C4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000161CC:
	branch Mem416[0x00028070:word32] == 0x00000000 l000161CC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000161CC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016200:
	word32 o0_1495 = strlen(Mem416[0x0002B2C0:word32])
	word32 o2_1499 = Mem416[0x00028068:word32]
	Mem1502[0x0002B2C0:word32] = Mem416[0x0002B2C0:word32] + o0_1495
	Mem1503[0x00028068:word32] = o2_1499 + 0x00000001
	Mem1504[0x00028074:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000161CC_ds_f:
	word32 o1_1505 = Mem416[0x00028068:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000161E0:
	fprintf(0x0002B640, 0x00017940, Mem416[i1_156:word32], Mem416[i1_156 + (o1_1505 << 0x00000002):word32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001605C:
	o0_1515 = Mem343[0x0002B2D0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016060:
	branch o0_1515 != 0x00000000 l00016060_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016060_ds_t:
	word32 o0_1521 = o2_270 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016074:
	Mem1524[0x00028064:word32] = o3_354
	Mem1526[0x00028068:word32] = o0_1521
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016060_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001600C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001601C:
	word32 o1_1533 = Mem343[0x0002B2F0:word32]
	branch o1_1533 - Mem343[0x0002B300:word32] != 0x00000000 l0001601C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001601C_ds_t:
	Mem1540[0x00028068:word32] = o1_1533
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001606C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016030:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016978:
	l6Out = 0x0002B000
	l7Out = l7
	i6Out = i6_16
	return l0_127
// DataOut:
// DataOut (flags):
// SymbolicIn:

_getopt_internal_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void getopt(word32 o1, word32 o2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o1:[0..31] o2:[0..31]
// LiveOut:
// Trashed: NZVC g0 g2 g3 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 l3 l4 l5 l6 l7 o1 o2 o3 o4 o5 o7 sp
// Preserved:
getopt_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016980:
	word32 i6_33
	word32 l6_66
	word32 l7_67
	_getopt_internal(o1, o2, 0x00000000, 0x00000000, out l6_66, out l7_67, out i6_33)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

getopt_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 getopt_long(word32 o1, word32 o2, word32 o4, ptr32 & l6Out, ptr32 & l7Out, ptr32 & i6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o1:[0..31] o2:[0..31] o4:[0..31]
// LiveOut: i6 l0 l6 l7
// Trashed: NZVC g0 g2 g3 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 l3 l4 l5 l6 l7 o1 o2 o3 o4 o5 o7 sp
// Preserved:
getopt_long_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000169A8:
	word32 i6_33
	word32 l6_39
	word32 l7_52
	word32 l0_35 = _getopt_internal(o1, o2, o4, 0x00000000, out l6_39, out l7_52, out i6_33)
	l6Out = l6_39
	l7Out = l7_52
	i6Out = i6_33
	return l0_35
// DataOut:
// DataOut (flags):
// SymbolicIn:

getopt_long_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void getopt_long_only(word32 o1, word32 o2, word32 o4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o1:[0..31] o2:[0..31] o4:[0..31]
// LiveOut:
// Trashed: NZVC g0 g2 g3 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 l2 l3 l4 l5 l6 l7 o1 o2 o3 o4 o5 o7 sp
// Preserved:
getopt_long_only_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000169D0:
	word32 i6_33
	word32 l6_66
	word32 l7_67
	_getopt_internal(o1, o2, o4, 0x00000001, out l6_66, out l7_67, out i6_33)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

getopt_long_only_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 pexecute(word32 o0, word32 o1, word32 o3, word32 o4, word32 o5, word32 l1, word32 dwArg5C, ptr32 & l0Out, ptr32 & i6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  l1:[0..31] o0:[0..31] o1:[0..31] o3:[0..31] o4:[0..31] o5:[0..31] Stack +005C:[0..31]
// LiveOut: i6 l0 o0
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l1 o0
// Preserved: o1 o2 o3 o4 o5 o7 sp
pexecute_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000169F8:
	word32 o0_31
	branch (dwArg5C & 0x00000004) == 0x00000000 l000169F8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000169F8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A28:
	o0_31 = 0x00027E48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000169F8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A1C:
	o0_31 = 0x00027E3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A30:
	branch (dwArg5C & 0x00000001) == 0x00000000 l00016A30_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A30_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A30_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A3C:
	Mem44[0x0002B310:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A44:
	word32 dwLoc24_354
	word32 i0_263
	word32 o0_114
	word32 o0_47 = Mem46[0x0002B310:word32]
	branch (dwArg5C & 0x00000002) != 0x00000000 l00016A44_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A44_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A8C:
	Mem55[0x0002B310:word32] = 0x00000000
	dwLoc24_354 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A44_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A58:
	branch pipe(fp + 0xFFFFFFE8) >= 0x00000000 l00016A58_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A58_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A7C:
	Mem68[0x0002B310:word32] = dwLoc18
	dwLoc24_354 = dwLoc14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A98:
	word32 dwLoc2C_363 = 0x00000001
	word32 dwLoc28_364 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AC8:
	bool Z_104
	word32 g0_83
	branch dwLoc28_364 > 0x00000003 l00016AC8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AC8_ds_t:
	Z_104 = SLICE(cond(g0_83), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AC8_ds_f:
	g0_83 = l1 - 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AD8:
	word32 o0_85 = vfork()
	l1 = o0_85
	branch o0_85 < 0x00000000 l00016AD8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AD8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AA8:
	sleep(dwLoc2C_363)
	dwLoc2C_363 = dwLoc2C_363 << 0x00000001
	dwLoc28_364 = dwLoc28_364 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AD8_ds_f:
	Z_104 = SLICE(cond(o0_85 - 0xFFFFFFFF), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AEC:
	branch Z_104 l00016AEC_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AEC_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016B04:
	o0_114 = 0x00017B20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AEC_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AF4:
	branch l1 == 0x00000000 l00016AF4_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AF4_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016B24:
	branch o0_47 == 0x00000000 l00016B24_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016B24_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016B24_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016B30:
	close(0x00000000)
	dup(o0_47)
	close(o0_47)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016B4C:
	branch dwLoc24_354 == 0x00000001 l00016B4C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016B4C_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016B4C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016B58:
	close(0x00000001)
	dup(dwLoc24_354)
	close(dwLoc24_354)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016B74:
	word32 o0_156 = Mem75[0x0002B310:word32]
	branch o0_156 == 0x00000000 l00016B74_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016B74_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016B84:
	close(o0_156)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016B90:
	word32 i6_210
	call fn00000000 (retsize: 0;)
		uses: l1:0x0002B640,o0:o0,o1:o1,o2:o0_39,o3:o3,o4:o4,o5:o5,o7:0x00016B94,Stack +005C:dwArg5C,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFEC:dwLoc14
		defs: i6:i6_210
	fprintf(0x0002B640, 0x00017B28, Mem75[i6_210 + 76:word32])
	fprintf(0x0002B640, Mem75[0x00028078:word32], Mem75[i6_210 + 68:word32])
	word32 o0_232 = Mem75[0x0002B760:word32]
	xstrerror(o0_232)
	fprintf(0x0002B640, 0x00017B30, o0_232)
	exit(0xFFFFFFFF)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AF4_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AFC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016BF8:
	branch o0_47 == 0x00000000 l00016BF8_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016BF8_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016BF8_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016C00:
	close(o0_47)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016C0C:
	branch dwLoc24_354 == 0x00000001 l00016C0C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016C0C_ds_t:
	i0_263 = l1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016C0C_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016C18:
	close(dwLoc24_354)
	i0_263 = l1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A6C:
	o0_114 = 0x00017B18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016B10:
	Mem275[o4:word32] = o0_114
	Mem279[o5:word32] = 0x00000000
	i0_263 = 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016C24:
	l0Out = 0x0002B000
	i6Out = fp
	return i0_263
// DataOut:
// DataOut (flags):
// SymbolicIn:

pexecute_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 pwait(word32 o1, ptr32 & i2Out, ptr32 & i6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o1:[0..31]
// LiveOut: i0 i2 i6
// Trashed: i0 i1 i2 i3 i4 i5 i6 i7
// Preserved: o1 o2 o3 o4 o5 o7 sp
pwait_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016C2C:
	wait(o1)
	i2Out = o2
	i6Out = fp
	return o0
// DataOut:
// DataOut (flags):
// SymbolicIn:

pwait_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 mkstemps(word32 o0, word32 o1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0:[0..31] o1:[0..31]
// LiveOut: o0
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 o0 o1
// Preserved: g2 g3 l0 l1 l2 l3 l4 l5 o2 o3 o4 o5 o7 sp
mkstemps_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016C40:
	word32 i0_433
	word32 o0_21 = strlen(o0)
	branch o0_21 - (o1 + 0x00000006) < 0x00000000 l00016C40_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016C40_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016C40_ds_f:
	word32 o0_29 = o0_21 - (o1 + 0x00000006)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016C60:
	branch strncmp(o0 + o0_29, 0x00017B78, 0x00000006) == 0x00000000 l00016C60_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016C60_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016C94:
	gettimeofday(fp + 0xFFFFFFE8, 0x00000000)
	word32 o0_45 = getpid()
	word32 o1_54 = dwLoc14 >> 0x0000001F << 0x00000010
	word32 o5_408 = dwLoc14 << 0x00000010 ^ dwLoc18 ^ o0_45
	word32 o4_406 = (dwLoc14 >>u 0x00000010 | o1_54) ^ dwLoc18 >> 0x0000001F ^ o0_45 >> 0x0000001F
	Mem75[0x0002B400:word64] = Mem0[0x0002B400:word64] + o4_406 + (o1_54 + o5_408 <u 0x00000000)
	word32 l1_416 = dwLoc18
	word32 o7_411 = 0x0002B400
	word32 l4_418 = 0x0002B400
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016D0C:
	word32 l0_78 = Mem77[l4_418:word64]
	word32 i1_91
	word32 o1_92
	word32 o4_98
	word32 o5_100
	word32 o7_103
	word32 l1_108
	word32 l0_109
	word32 l2_112
	call __urem64 (retsize: 0;)
		uses: g2:g2_415,g3:g3_414,l0:l0_78,l1:l1_416,l2:l2_420,l3:l3_413,l4:l4_418,l5:l5_419,o0:l0_78,o1:l1_82,o2:0x00000000,o3:0x0000003E,o4:o4_84,o5:o5_85,o7:o7_86,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFEC:dwLoc14
		defs: i1:i1_91,l0:l0_109,l1:l1_108,l2:l2_112,o1:o1_92,o4:o4_98,o5:o5_100,o7:o7_103
	Mem115[i1_91:byte] = (byte) (word32) Mem77[l2_112 + o1_92:byte]
	word32 o0_122
	word32 o1_124
	word32 o4_130
	word32 o5_132
	word32 o7_135
	call __udiv64 (retsize: 0;)
		uses: g2:g2_415,g3:g3_414,l0:l0_417,l1:l1_416,l2:l2_420,l3:l3_413,l4:l4_418,l5:l5_419,o0:l0_109,o1:l1_108,o2:0x00000000,o3:0x0000003E,o4:o4_98,o5:o5_100,o7:o7_103,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFEC:dwLoc14
		defs: o0:o0_122,o1:o1_124,o4:o4_130,o5:o5_132,o7:o7_135
	word32 i1_153
	word32 o1_154
	word32 o4_160
	word32 o5_162
	word32 o7_165
	word32 l1_170
	word32 l0_171
	word32 l2_174
	call __urem64 (retsize: 0;)
		uses: g2:g2_415,g3:g3_414,l0:o0_122,l1:o1_124,l2:l2_420,l3:l3_413,l4:l4_418,l5:l5_419,o0:o0_122,o1:o1_124,o2:0x00000000,o3:0x0000003E,o4:o4_130,o5:o5_132,o7:o7_135,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFEC:dwLoc14
		defs: i1:i1_153,l0:l0_171,l1:l1_170,l2:l2_174,o1:o1_154,o4:o4_160,o5:o5_162,o7:o7_165
	Mem177[i1_153 + 1:byte] = (byte) (word32) Mem115[l2_174 + o1_154:byte]
	word32 o0_184
	word32 o1_186
	word32 o4_192
	word32 o5_194
	word32 o7_197
	call __udiv64 (retsize: 0;)
		uses: g2:g2_415,g3:g3_414,l0:l0_417,l1:l1_416,l2:l2_420,l3:l3_413,l4:l4_418,l5:l5_419,o0:l0_171,o1:l1_170,o2:0x00000000,o3:0x0000003E,o4:o4_160,o5:o5_162,o7:o7_165,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFEC:dwLoc14
		defs: o0:o0_184,o1:o1_186,o4:o4_192,o5:o5_194,o7:o7_197
	word32 i1_215
	word32 o1_216
	word32 o4_222
	word32 o5_224
	word32 o7_227
	word32 l1_232
	word32 l0_233
	word32 l2_236
	call __urem64 (retsize: 0;)
		uses: g2:g2_415,g3:g3_414,l0:o0_184,l1:o1_186,l2:l2_420,l3:l3_413,l4:l4_418,l5:l5_419,o0:o0_184,o1:o1_186,o2:0x00000000,o3:0x0000003E,o4:o4_192,o5:o5_194,o7:o7_197,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFEC:dwLoc14
		defs: i1:i1_215,l0:l0_233,l1:l1_232,l2:l2_236,o1:o1_216,o4:o4_222,o5:o5_224,o7:o7_227
	Mem239[i1_215 + 2:byte] = (byte) (word32) Mem177[l2_236 + o1_216:byte]
	word32 o0_246
	word32 o1_248
	word32 o4_254
	word32 o5_256
	word32 o7_259
	call __udiv64 (retsize: 0;)
		uses: g2:g2_415,g3:g3_414,l0:l0_417,l1:l1_416,l2:l2_420,l3:l3_413,l4:l4_418,l5:l5_419,o0:l0_233,o1:l1_232,o2:0x00000000,o3:0x0000003E,o4:o4_222,o5:o5_224,o7:o7_227,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFEC:dwLoc14
		defs: o0:o0_246,o1:o1_248,o4:o4_254,o5:o5_256,o7:o7_259
	word32 i1_277
	word32 o1_278
	word32 o4_284
	word32 o5_286
	word32 o7_289
	word32 l1_294
	word32 l0_295
	word32 l2_298
	call __urem64 (retsize: 0;)
		uses: g2:g2_415,g3:g3_414,l0:o0_246,l1:o1_248,l2:l2_420,l3:l3_413,l4:l4_418,l5:l5_419,o0:o0_246,o1:o1_248,o2:0x00000000,o3:0x0000003E,o4:o4_254,o5:o5_256,o7:o7_259,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFEC:dwLoc14
		defs: i1:i1_277,l0:l0_295,l1:l1_294,l2:l2_298,o1:o1_278,o4:o4_284,o5:o5_286,o7:o7_289
	Mem301[i1_277 + 3:byte] = (byte) (word32) Mem239[l2_298 + o1_278:byte]
	word32 o0_308
	word32 o1_310
	word32 o4_316
	word32 o5_318
	word32 o7_321
	call __udiv64 (retsize: 0;)
		uses: g2:g2_415,g3:g3_414,l0:l0_417,l1:l1_416,l2:l2_420,l3:l3_413,l4:l4_418,l5:l5_419,o0:l0_295,o1:l1_294,o2:0x00000000,o3:0x0000003E,o4:o4_284,o5:o5_286,o7:o7_289,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFEC:dwLoc14
		defs: o0:o0_308,o1:o1_310,o4:o4_316,o5:o5_318,o7:o7_321
	word32 i1_339
	word32 o1_340
	word32 o4_346
	word32 o5_348
	word32 o7_351
	word32 l1_356
	word32 l0_357
	word32 l2_360
	call __urem64 (retsize: 0;)
		uses: g2:g2_415,g3:g3_414,l0:o0_308,l1:o1_310,l2:l2_420,l3:l3_413,l4:l4_418,l5:l5_419,o0:o0_308,o1:o1_310,o2:0x00000000,o3:0x0000003E,o4:o4_316,o5:o5_318,o7:o7_321,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFEC:dwLoc14
		defs: i1:i1_339,l0:l0_357,l1:l1_356,l2:l2_360,o1:o1_340,o4:o4_346,o5:o5_348,o7:o7_351
	Mem363[i1_339 + 4:byte] = (byte) (word32) Mem301[l2_360 + o1_340:byte]
	word32 o0_370
	word32 o1_372
	word32 o4_378
	word32 o5_380
	word32 o7_383
	call __udiv64 (retsize: 0;)
		uses: g2:g2_415,g3:g3_414,l0:l0_417,l1:l1_416,l2:l2_420,l3:l3_413,l4:l4_418,l5:l5_419,o0:l0_357,o1:l1_356,o2:0x00000000,o3:0x0000003E,o4:o4_346,o5:o5_348,o7:o7_351,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFEC:dwLoc14
		defs: o0:o0_370,o1:o1_372,o4:o4_378,o5:o5_380,o7:o7_383
	word32 i0_397
	word32 i1_399
	word32 o1_400
	word32 o3_404
	word32 l3_413
	word32 g3_414
	word32 g2_415
	word32 l0_417
	word32 l5_419
	word32 l2_420
	call __urem64 (retsize: 0;)
		uses: g2:g2_415,g3:g3_414,l0:l0_417,l1:l1_416,l2:l2_420,l3:l3_413,l4:l4_418,l5:l5_419,o0:o0_370,o1:o1_372,o2:0x00000000,o3:0x0000003E,o4:o4_378,o5:o5_380,o7:o7_383,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFEC:dwLoc14
		defs: g2:g2_415,g3:g3_414,i0:i0_397,i1:i1_399,l0:l0_417,l1:l1_416,l2:l2_420,l3:l3_413,l4:l4_418,l5:l5_419,o1:o1_400,o3:o3_404,o4:o4_406,o5:o5_408,o7:o7_411
	Mem423[i1_399 + 5:byte] = (byte) (word32) Mem363[l2_420 + o1_400:byte]
	word32 o0_427 = open(i0_397, 0x00000502)
	branch o0_427 >= 0x00000000 l00016C94_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016C94_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016C8C:
	i0_433 = o0_427
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016C94_ds_f:
	word32 o2_434 = Mem423[l4_418:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016E30:
	word32 o2_441 = o2_434 + (o3_404 <u 0x00001E61)
	branch l3_413 + 0x00000001 - l5_419 <= 0x00000000 l00016E30_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016E30_ds_t:
	Mem446[l4_418:word64] = o2_441
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016E30_ds_f:
	Mem447[l4_418:word64] = o2_441
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016E54:
	Mem448[i0_397:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016E58:
	i0_433 = 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016C60_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016C84:
	i0_433 = 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016E5C:
	return i0_433
// DataOut:
// DataOut (flags):
// SymbolicIn:

mkstemps_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00016E64(word32 o7, word32 l7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  l7:[0..31] o7:[0..31]
// LiveOut: l7
// Trashed: l7
// Preserved: sp
fn00016E64_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016E64:
	return o7 + l7
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00016E64_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 __do_global_ctors_aux(word32 o3, word32 o4, word32 o5, word32 o7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o3:[0..31] o4:[0..31] o5:[0..31] o7:[0..31]
// LiveOut: l0
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l7
// Preserved: o0 o1 o2 o3 o4 o5 o7 sp
__do_global_ctors_aux_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016E6C:
	word32 l0_31
	word32 o1_26 = Mem0[fn00016E64(o7, 0x00010D08) + 0x00000014:word32]
	word32 o2_27 = Mem0[o1_26 + -4:word32]
	branch o2_27 == 0xFFFFFFFF l00016E6C_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016E6C_ds_t:
	l0_31 = o1_26 + 0xFFFFFFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016E6C_ds_f:
	l0_31 = o1_26 + 0xFFFFFFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016E98:
	call fn00000014 (retsize: 0;)
		uses: l0:l0_33 + 0xFFFFFFFC,o0:Mem0[l0_33:word32],o1:o1_38,o2:o2_39,o3:o3_40,o4:o4_41,o5:o5_42,o7:0x00016E9C
		defs: l0:l0_62,o1:o1_48,o2:o2_50,o3:o3_52,o4:o4_54,o5:o5_56
	branch Mem0[l0_31:word32] != 0xFFFFFFFF l00016E98_ds_t
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016E98_ds_t:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016E98_ds_f:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016EB4:
	return l0_31
// DataOut:
// DataOut (flags):
// SymbolicIn:

__do_global_ctors_aux_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void init_dummy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: i0 i1 i2 i3 i4 i5 i6 i7
// Preserved: o0 o1 o2 o3 o4 o5 o7 sp
init_dummy_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016EBC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

init_dummy_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 _init(word32 o3, word32 o4, word32 o5, word32 o7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o3:[0..31] o4:[0..31] o5:[0..31] o7:[0..31]
// LiveOut: l0
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l0 l7 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
_init_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016EC8:
	frame_dummy(o3, o4, o5, o7)
	return __do_global_ctors_aux(o3, o4, o5, o7)
// DataOut:
// DataOut (flags):
// SymbolicIn:

_init_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _fini(word32 o3, word32 o4, word32 o5, word32 o7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o3:[0..31] o4:[0..31] o5:[0..31] o7:[0..31]
// LiveOut:
// Trashed: NZVC g0 i0 i1 i2 i3 i4 i5 i6 i7 l7 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
_fini_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016EE4:
	__do_global_dtors_aux(o3, o4, o5, o7)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_fini_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void atexit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
atexit_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

atexit_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void exit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
exit_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

exit_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _exit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
_exit_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

_exit_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vfprintf()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vfprintf_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

vfprintf_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void strerror()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strerror_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

strerror_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void malloc()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
malloc_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

malloc_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void realloc()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
realloc_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

realloc_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void free()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
free_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

free_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void strcpy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strcpy_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

strcpy_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void strncpy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strncpy_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

strncpy_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void read()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
read_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

read_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void write()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
write_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

write_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void abort()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
abort_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

abort_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void strlen()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strlen_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

strlen_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void strncmp()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strncmp_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

strncmp_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void strcmp()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strcmp_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

strcmp_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void stat()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
stat_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

stat_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void atoi()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
atoi_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

atoi_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void memcpy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
memcpy_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

memcpy_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fprintf()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fprintf_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fprintf_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void strcat()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strcat_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

strcat_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void access()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
access_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

access_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void open()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
open_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

open_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void close()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
close_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

close_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void unlink()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
unlink_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

unlink_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void strrchr()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strrchr_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

strrchr_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void longjmp()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
longjmp_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

longjmp_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void setjmp()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
setjmp_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

setjmp_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fflush()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fflush_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fflush_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void link()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
link_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

link_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void creat()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
creat_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

creat_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void chmod()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
chmod_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

chmod_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void setlocale()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
setlocale_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

setlocale_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void getenv()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
getenv_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

getenv_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void getcwd()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
getcwd_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

getcwd_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fputs()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fputs_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fputs_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void mktemp()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
mktemp_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

mktemp_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void execvp()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
execvp_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

execvp_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void execv()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
execv_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

execv_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void pipe()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
pipe_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

pipe_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void sleep()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
sleep_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

sleep_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vfork()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vfork_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

vfork_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void dup()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
dup_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

dup_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void wait()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
wait_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

wait_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void gettimeofday()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
gettimeofday_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

gettimeofday_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void getpid()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
getpid_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

getpid_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __urem64()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__urem64_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

__urem64_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __udiv64()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__udiv64_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

__udiv64_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



