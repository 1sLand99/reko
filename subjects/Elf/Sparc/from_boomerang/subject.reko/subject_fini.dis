// _fini
// Return size: 0
define _fini
_fini_entry:
	sp = fp
	// succ:  l00010CB8
l00010CB8:
	v4 = sp + 0xFFFFFFA0<32>
	Mem0[v4:word32] = i0
	Mem0[v4 + 4<i32>:word32] = i1
	Mem0[v4 + 8<i32>:word32] = i2
	Mem0[v4 + 12<i32>:word32] = i3
	Mem0[v4 + 16<i32>:word32] = i4
	Mem0[v4 + 20<i32>:word32] = i5
	Mem0[v4 + 24<i32>:word32] = i6
	Mem0[v4 + 28<i32>:word32] = i7
	Mem0[v4 + 32<i32>:word32] = l0
	Mem0[v4 + 36<i32>:word32] = l1
	Mem0[v4 + 40<i32>:word32] = l2
	Mem0[v4 + 44<i32>:word32] = l3
	Mem0[v4 + 48<i32>:word32] = l4
	Mem0[v4 + 52<i32>:word32] = l5
	Mem0[v4 + 56<i32>:word32] = l6
	Mem0[v4 + 60<i32>:word32] = l7
	i0 = o0
	i1 = o1
	i2 = o2
	i3 = o3
	i4 = o4
	i5 = o5
	i6 = sp
	i7 = o7
	sp = v4
	call fn00010CC8 (retsize: 0;)
_fini_exit:


// fn00010CC8
// Return size: 0
define fn00010CC8
fn00010CC8_entry:
	sp = fp
	// succ:  l00010CC8
l00010CC8:
	o0 = Mem0[o7 + 8<i32>:word32]
	o0 = o7 + o0
	l0 = Mem0[o0 + -4<i32>:word32]
	g0 = l0 - 0<32>
	NZVC = cond(g0)
	branch Test(EQ,Z) l00010CE8
	// succ:  l00010CE0 l00010CE8
l00010CE0:
	o7 = 0x00010CE0<p32>
	call l0 + 0<32> (retsize: 0;)
l00010CE8:
	v11 = sp
	o0 = i0
	o1 = i1
	o2 = i2
	o3 = i3
	o4 = i4
	o5 = i5
	sp = i6
	o7 = i7
	i0 = Mem0[v11:word32]
	i1 = Mem0[v11 + 4<i32>:word32]
	i2 = Mem0[v11 + 8<i32>:word32]
	i3 = Mem0[v11 + 12<i32>:word32]
	i4 = Mem0[v11 + 16<i32>:word32]
	i5 = Mem0[v11 + 20<i32>:word32]
	i6 = Mem0[v11 + 24<i32>:word32]
	i7 = Mem0[v11 + 28<i32>:word32]
	l0 = Mem0[v11 + 32<i32>:word32]
	l1 = Mem0[v11 + 36<i32>:word32]
	l2 = Mem0[v11 + 40<i32>:word32]
	l3 = Mem0[v11 + 44<i32>:word32]
	l4 = Mem0[v11 + 48<i32>:word32]
	l5 = Mem0[v11 + 52<i32>:word32]
	l6 = Mem0[v11 + 56<i32>:word32]
	l7 = Mem0[v11 + 60<i32>:word32]
	return
	// succ:  fn00010CC8_exit
fn00010CC8_exit:


