void _start(word32 g1, word32 o7, word32 fsr, word32 dwArg40)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fsr g1 o7
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0040(32)
// Terminates process
_start_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

_start_entry:
// DataOut: fsr g1 o7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0040(32)

l00010958:
	Mem7[0x00020E60:word32] = fp + 0x00000044
	Mem12[0x00020E3C:word32] = fp + 0x00000044 + ((dwArg40 << 0x00000002) + 0x00000004)
	branch 0x00000000 == 0x00000000 l00010958_ds_t
// DataOut: fsr g1 l0 l2 o7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00010958_ds_t:
// DataOut: g1 l0 l2 o7
// DataOut (flags): 
// SymbolicIn: sp:fp i6:0x00000000 l0:<invalid> l1:fp + 0x00000044 o1:0x00020C00 l2:<invalid> l3:0x00020C00 l5:0x00000000 g0:0x00000000
// LocalsOut: fp(32)

l00010958_ds_f:
// DataOut: fsr g1 l0 l2 o7
// DataOut (flags): 
// SymbolicIn: sp:fp i6:0x00000000 l0:<invalid> l1:fp + 0x00000044 o1:0x00020C00 l2:<invalid> l3:0x00020C00 l5:0x00000000 g0:0x00000000
// LocalsOut: fp(32)

l00010994:
	Mem48[0x00020E58:word32] = fsr
	Mem54[0x00020E58:word32] = Mem48[0x00020E58:word32] & 0x303FFFFF
	branch true l00010994_ds_t
// DataOut: g1 l0 l2 o7
// DataOut (flags): 
// SymbolicIn: sp:fp i6:0x00000000 l0:<invalid> l1:fp + 0x00000044 o1:0x00020C00 l2:<invalid> l3:0x00020C00 l5:0x00000000 g0:0x00000000
// LocalsOut: fp(32)

l00010994_ds_t:
// DataOut: g1 l0 l2 o7
// DataOut (flags): 
// SymbolicIn: sp:fp i6:0x00000000 l0:<invalid> l1:fp + 0x00000044 o1:0x00020C00 l2:<invalid> l3:0x00020C00 l5:0x00000000 g0:0xFFFFFFCB l6:<invalid> l7:0x303FFFFF l4:0x00020E58 fsr:<invalid>
// LocalsOut: fp(32)

l00010994_ds_f:
// DataOut: g1 l0 l2 o7
// DataOut (flags): 
// SymbolicIn: sp:fp i6:0x00000000 l0:<invalid> l1:fp + 0x00000044 o1:0x00020C00 l2:<invalid> l3:0x00020C00 l5:0x00000000 g0:0xFFFFFFCB l6:<invalid> l7:0x303FFFFF l4:0x00020E58 fsr:<invalid>
// LocalsOut: fp(32)

l000109E8:
	Mem65[0x00020E5C:word32] = 0x00000001
// DataOut: g1 l0 l2 o7
// DataOut (flags): 
// SymbolicIn: sp:fp i6:0x00000000 l0:<invalid> l1:fp + 0x00000044 o1:0x00020C00 l2:<invalid> l3:0x00020C00 l5:0x00000000 g0:0xFFFFFFCB l6:<invalid> l7:0x303FFFFF l4:0x00020E58 fsr:<invalid>
// LocalsOut: fp(32)

l000109F8:
	branch g1 == 0x00000000 l000109F8_ds_t
// DataOut: g1 l0 l2 o7
// DataOut (flags): 
// SymbolicIn: sp:fp i6:0x00000000 l0:<invalid> l1:fp + 0x00000044 o1:0x00020C00 l2:<invalid> l3:0x00020C00 l5:<invalid> g0:<invalid> l6:<invalid> l7:0x303FFFFF l4:<invalid> fsr:<invalid>
// LocalsOut: fp(32)

l000109F8_ds_t:
// DataOut: l0 l2 o7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000020 i6:0x00000000 l0:<invalid> l1:fp + 0x00000044 o1:0x00020C00 l2:<invalid> l3:0x00020C00 l5:<invalid> g0:g1 l6:<invalid> l7:0x303FFFFF l4:<invalid> fsr:<invalid>
// LocalsOut: fp(32)

l00010A10:
	atexit(0x00010CB8)
	_init(o7)
	exit(main(dwArg40))
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000020 i6:0x00000000 l0:<invalid> l1:fp + 0x00000044 o1:0x00020C00 l2:<invalid> l3:0x00020C00 l5:<invalid> g0:g1 o0:g1 l6:<invalid> l7:0x303FFFFF l4:<invalid> fsr:<invalid>

l000109F8_ds_f:
// DataOut: o0
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000020 i6:0x00000000 l0:<invalid> l1:fp + 0x00000044 o1:0x00020C00 l2:<invalid> l3:0x00020C00 l5:<invalid> g0:g1 l6:<invalid> l7:0x303FFFFF l4:<invalid> fsr:<invalid>
// LocalsOut: fp(32)

l00010A08:
	atexit(g1)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000020 i6:0x00000000 l0:<invalid> l1:fp + 0x00000044 o1:0x00020C00 l2:<invalid> l3:0x00020C00 l5:<invalid> g0:g1 o0:g1 l6:<invalid> l7:0x303FFFFF l4:<invalid> fsr:<invalid>



void func1()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
func1_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00010A5C:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

func1_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void func2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
func2_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00010A74:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

func2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void func3()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
func3_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00010A8C:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

func3_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void func4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
func4_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00010AA4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

func4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void func5()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
func5_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00010ABC:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

func5_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void func6()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
func6_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00010AD4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

func6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void func7()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
func7_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00010AEC:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

func7_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void func8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
func8_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00010B04:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

func8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word32 main(word32 o0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o0
// LiveOut: o0
// Trashed: NZVC g0 g1 i0 i1 i2 i3 i4 i5 i6 i7 o0 o1
// Preserved: o2 o3 o4 o5 o7 sp
main_entry:
// DataOut: o0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00010B0C:
	word32 o0_159 = 0x00000001
	branch o0 <= 0x00000001 l00010B0C_ds_t
// DataOut: o0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00010B0C_ds_t:
	o0_159 = 0x00000000
// DataOut: o0
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00000001 g0:0x00000000
// LocalsOut: fp(32)

l00010B20:
	word32 o0_155
	branch o0_159 == 0x00000000 l00010B20_ds_t
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:0x00000000
// LocalsOut: fp(32)

l00010B20_ds_t:
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid>
// LocalsOut: fp(32)

l00010B34:
	o0_155 = 0x00010A74
// DataOut: o0
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010800 g0:<invalid>
// LocalsOut: fp(32)

l00010B20_ds_f:
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid>
// LocalsOut: fp(32)

l00010B2C:
	o0_155 = 0x00010A5C
// DataOut: o0
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010800 g0:<invalid>
// LocalsOut: fp(32)

l00010B3C:
	word32 o3_150
	branch o0_159 == 0x00000000 l00010B3C_ds_t
// DataOut: o0
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid>
// LocalsOut: fp(32)

l00010B3C_ds_t:
// DataOut: o0
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid>
// LocalsOut: fp(32)

l00010B4C:
	o3_150 = 0x00010AA4
// DataOut: o0 o3
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:0x00010800
// LocalsOut: fp(32)

l00010B3C_ds_f:
// DataOut: o0
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid>
// LocalsOut: fp(32)

l00010B44:
	o3_150 = 0x00010A8C
// DataOut: o0 o3
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:0x00010800
// LocalsOut: fp(32)

l00010B54:
	word32 o2_145
	branch o0_159 == 0x00000000 l00010B54_ds_t
// DataOut: o0 o3
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:0x00010800 o3:<invalid>
// LocalsOut: fp(32)

l00010B54_ds_t:
// DataOut: o0 o3
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:0x00010800 o3:<invalid>
// LocalsOut: fp(32)

l00010B64:
	o2_145 = 0x00010AD4
// DataOut: o0 o2 o3
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:0x00010800 o3:<invalid>
// LocalsOut: fp(32)

l00010B54_ds_f:
// DataOut: o0 o3
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:0x00010800 o3:<invalid>
// LocalsOut: fp(32)

l00010B5C:
	o2_145 = 0x00010ABC
// DataOut: o0 o2 o3
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:0x00010800 o3:<invalid>
// LocalsOut: fp(32)

l00010B6C:
	word32 o1_140
	branch o0_159 == 0x00000000 l00010B6C_ds_t
// DataOut: o0 o2 o3
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:0x00010800 o3:<invalid> o2:<invalid>
// LocalsOut: fp(32)

l00010B6C_ds_t:
// DataOut: o0 o2 o3
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:0x00010800 o3:<invalid> o2:<invalid>
// LocalsOut: fp(32)

l00010B7C:
	o1_140 = 0x00010B04
// DataOut: o0 o1 o2 o3
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:0x00010800 o3:<invalid> o2:<invalid>
// LocalsOut: fp(32)

l00010B6C_ds_f:
// DataOut: o0 o2 o3
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:0x00010800 o3:<invalid> o2:<invalid>
// LocalsOut: fp(32)

l00010B74:
	o1_140 = 0x00010AEC
// DataOut: o0 o1 o2 o3
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:0x00010800 o3:<invalid> o2:<invalid>
// LocalsOut: fp(32)

l00010B84:
	word32 i1_105
	byte Z_38
	branch o0_159 == 0x00000000 l00010B84_ds_t
// DataOut: o0 o1 o2 o3
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid>
// LocalsOut: fp(32)

l00010B84_ds_t:
// DataOut: o0 o1 o2 o3
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid>
// LocalsOut: fp(32)

l00010BE8:
	branch o0_155 != 0x00010A74 l00010BE8_ds_t
// DataOut: o1 o2 o3
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010800
// LocalsOut: fp(32)

l00010BE8_ds_t:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A74
// LocalsOut: fp(32)

l00010BE8_ds_f:
// DataOut: o1 o2 o3
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A74
// LocalsOut: fp(32)

l00010BFC:
	branch o3_150 != 0x00010AA4 l00010BFC_ds_t
// DataOut: o1 o2
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010800 g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A74
// LocalsOut: fp(32)

l00010BFC_ds_t:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010AA4 g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A74
// LocalsOut: fp(32)

l00010BFC_ds_f:
// DataOut: o1 o2
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010AA4 g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A74
// LocalsOut: fp(32)

l00010C0C:
	branch o2_145 != 0x00010AD4 l00010C0C_ds_t
// DataOut: o1
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010AA4 g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A74
// LocalsOut: fp(32)

l00010C0C_ds_t:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010AD4 g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A74
// LocalsOut: fp(32)

l00010C0C_ds_f:
// DataOut: o1
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010AD4 g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A74
// LocalsOut: fp(32)

l00010C20:
	branch o1_140 != 0x00010B04 l00010C20_ds_t
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010AD4 g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A74
// LocalsOut: fp(32)

l00010C20_ds_t:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010B04 g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A74
// LocalsOut: fp(32)

l00010C3C:
	i1_105 = 0x00000000
// DataOut: i1
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A74
// LocalsOut: fp(32)

l00010C20_ds_f:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010B04 g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A74
// LocalsOut: fp(32)

l00010C34:
	i1_105 = 0x00000001
// DataOut: i1
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010B04 g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A74
// LocalsOut: fp(32)

l00010B84_ds_f:
// DataOut: o0 o1 o2 o3
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid>
// LocalsOut: fp(32)

l00010B8C:
	branch o0_155 != 0x00010A5C l00010B8C_ds_t
// DataOut: o1 o2 o3
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010800
// LocalsOut: fp(32)

l00010B8C_ds_t:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A5C
// LocalsOut: fp(32)

l00010BDC:
// DataOut: i1
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010800 g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A5C
// LocalsOut: fp(32)

l00010B8C_ds_f:
// DataOut: o1 o2 o3
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A5C
// LocalsOut: fp(32)

l00010B9C:
	branch o3_150 != 0x00010A8C l00010B9C_ds_t
// DataOut: o1 o2
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010800 g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A5C
// LocalsOut: fp(32)

l00010B9C_ds_t:
// DataOut: i1
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010A8C g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A5C
// LocalsOut: fp(32)

l00010B9C_ds_f:
// DataOut: o1 o2
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:o1 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010A8C g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A5C
// LocalsOut: fp(32)

l00010BAC:
	branch o2_145 != 0x00010ABC l00010BAC_ds_t
// DataOut: o1
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:0x00000000 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010A8C g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A5C
// LocalsOut: fp(32)

l00010BAC_ds_t:
// DataOut: i1
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:0x00000000 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010ABC g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A5C
// LocalsOut: fp(32)

l00010BAC_ds_f:
// DataOut: o1
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:0x00000000 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010ABC g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A5C
// LocalsOut: fp(32)

l00010BC0:
	branch o1_140 != 0x00010AEC l00010BC0_ds_t
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:0x00000000 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010ABC g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A5C
// LocalsOut: fp(32)

l00010BC0_ds_t:
// DataOut: i1
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:0x00000000 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010AEC g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A5C
// LocalsOut: fp(32)

l00010BE0:
	i1_105 = 0x00000000
	Z_38 = cond(0x00000000) (alias)
// DataOut: i1
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:0x00000000 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A5C
// LocalsOut: fp(32)

l00010BC0_ds_f:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:0x00000000 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010AEC g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A5C
// LocalsOut: fp(32)

l00010BD4:
	i1_105 = 0x00000001
// DataOut: i1
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:0x00000000 i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:0x00010AEC g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:0x00010A5C
// LocalsOut: fp(32)

l00010C40:
	Z_38 = cond(i1_105) (alias)
// DataOut: i1
// DataOut (flags): Z
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:<invalid> i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:<invalid>
// LocalsOut: fp(32)

l00010C44:
	branch Z_38 l00010C40_ds_t
// DataOut: i1
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:<invalid> i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:<invalid>
// LocalsOut: fp(32)

l00010C40_ds_t:
// DataOut: i1
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:<invalid> i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:<invalid>
// LocalsOut: fp(32)

l00010C5C:
	printf(0x00010D00)
// DataOut: i0 i1
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:<invalid> i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:<invalid> g1:0x00010C00

l00010C40_ds_f:
// DataOut: i1
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:<invalid> i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:<invalid>
// LocalsOut: fp(32)

l00010C4C:
	printf(0x00010CF8)
// DataOut: i0 i1
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFA0 i0:o0 i1:<invalid> i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:<invalid> g1:0x00010C00

l00010C6C:
	word32 i0_42 = 0x00000000
	branch i1_105 == 0x00000000 l00010C6C_ds_t
// DataOut: i0
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF9C i0:0x00000000 i1:<invalid> i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:<invalid> g1:0x00010C00

l00010C6C_ds_t:
	i0_42 = 0x00000001
// DataOut: i0
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF9C i0:0x00000000 i1:<invalid> i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:<invalid> g1:0x00010C00

l00010C78:
	return i0_42
// DataOut: o0
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF9C i0:<invalid> i1:<invalid> i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:<invalid> o3:<invalid> o2:<invalid> o4:<invalid> g1:0x00010C00

main_exit:
// DataOut: o0
// DataOut (flags): 
// SymbolicIn: sp:fp i0:<invalid> i1:<invalid> i2:o2 i3:o3 i4:o4 i5:o5 i6:fp i7:o7 o0:<invalid> g0:<invalid> o1:<invalid> o3:o3 o2:o2 o4:o4 g1:0x00010C00 o5:o5 o7:o7



void _init(word32 o7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
_init_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

_init_entry:
// DataOut: o7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00010C80:
	fn00010C90(o7)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00010C90(word32 o7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o7
// LiveOut:
// Trashed: NZVC g0 l0 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
fn00010C90_entry:
// DataOut: o7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00010C90:
	word32 o0_5 = o7 + Mem0[o7 + 8:word32]
	word32 l0_6 = Mem0[o0_5 + -8:word32]
	branch l0_6 == 0x00000000 l00010C90_ds_t
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00010C90_ds_t:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp o0:<invalid> l0:<invalid> g0:<invalid>

l00010CB0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp o0:<invalid> l0:<invalid> g0:<invalid>

fn00010C90_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:i6 o0:i0 l0:<invalid> g0:<invalid> o1:i1 o2:i2 o3:i3 o4:i4 o5:i5 o7:i7

l00010C90_ds_f:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp o0:<invalid> l0:<invalid> g0:<invalid>

l00010CA8:
	word32 sp_11
	word32 o0_12
	word32 o7_13
	word32 l0_14
	word32 g0_15
	byte NZVC_16
	byte Z_17
	word32 i7_18
	word32 i0_19
	word32 o1_20
	word32 i1_21
	word32 o2_22
	word32 i2_23
	word32 o3_24
	word32 i3_25
	word32 o4_26
	word32 i4_27
	word32 o5_28
	word32 i5_29
	word32 i6_30
	call fn81C7E008 (retsize: 0;)
		uses: g0_7,l0_6,NZVC_8,o0_5,o7_10,sp_1,Z_9
		defs: g0_15,i0_19,i1_21,i2_23,i3_25,i4_27,i5_29,i6_30,i7_18,l0_14,NZVC_16,o0_12,o1_20,o2_22,o3_24,o4_26,o5_28,o7_13,sp_11,Z_17
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp o0:<invalid> l0:<invalid> g0:<invalid>



void _fini(word32 o7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
_fini_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

_fini_entry:
// DataOut: o7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00010CB8:
	fn00010CC8(o7)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00010CC8(word32 o7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  o7
// LiveOut:
// Trashed: NZVC g0 l0 o0 o1 o2 o3 o4 o5 o7 sp
// Preserved:
fn00010CC8_entry:
// DataOut: o7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00010CC8:
	word32 o0_5 = o7 + Mem0[o7 + 8:word32]
	word32 l0_6 = Mem0[o0_5 + -4:word32]
	branch l0_6 == 0x00000000 l00010CC8_ds_t
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00010CC8_ds_t:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp o0:<invalid> l0:<invalid> g0:<invalid>

l00010CE8:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp o0:<invalid> l0:<invalid> g0:<invalid>

fn00010CC8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:i6 o0:i0 l0:<invalid> g0:<invalid> o1:i1 o2:i2 o3:i3 o4:i4 o5:i5 o7:i7

l00010CC8_ds_f:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp o0:<invalid> l0:<invalid> g0:<invalid>

l00010CE0:
	word32 sp_11
	word32 o0_12
	word32 o7_13
	word32 l0_14
	word32 g0_15
	byte NZVC_16
	byte Z_17
	word32 i7_18
	word32 i0_19
	word32 o1_20
	word32 i1_21
	word32 o2_22
	word32 i2_23
	word32 o3_24
	word32 i3_25
	word32 o4_26
	word32 i4_27
	word32 o5_28
	word32 i5_29
	word32 i6_30
	call l0_6 (retsize: 0;)
		uses: g0_7,l0_6,NZVC_8,o0_5,o7_10,sp_1,Z_9
		defs: g0_15,i0_19,i1_21,i2_23,i3_25,i4_27,i5_29,i6_30,i7_18,l0_14,NZVC_16,o0_12,o1_20,o2_22,o3_24,o4_26,o5_28,o7_13,sp_11,Z_17
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp o0:<invalid> l0:<invalid> g0:<invalid>



void atexit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
atexit_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

atexit_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void exit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
exit_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

exit_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void _exit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
_exit_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

_exit_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void printf()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
printf_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

printf_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



