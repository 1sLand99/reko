// acknowledge
// Return size: 0
define acknowledge
acknowledge_entry:
	sp = fp
	r25 = 0x4000F0<32>
	// succ:  l004000F0
l004000F0:
	r7 = Mem0[0x004544E4<p32>:word32]
	r5 = r7 - r4
	r6 = r5 & 0xFFFF<32>
	branch !__bit(r5, 0xF<32>) l00400136
	// succ:  l004000FE l00400136
l004000FE:
	r5 = Mem0[0x00430078<p32>:word32]
	branch r6 < r5 l00400110
	// succ:  l00400108 l00400110
l00400108:
	r6 = r6 + 1<32>
	Mem0[0x00430078<p32>:word32] = r6
	// succ:  l00400110
l00400110:
	r6 = 0x400<32>
	r8 = CONVERT(Mem0[r6 + 0x518<32>:uint16], uint16, word32)
	r5 = r4 - r8
	v9 = SLICE(r5, word16, 0)
	r5 = CONVERT(v9, word16, int32)
	branch 0<32> < r5 l00400132
	// succ:  l00400124 l00400132
l00400124:
	r7 = r7 & 0xFFFF<32>
	r5 = 0x7FFF<32>
	r7 = r7 - r8
	branch r5 >= r7 l00400136
	// succ:  l00400132 l00400136
l00400132:
	Mem0[r6 + 0x518<32>:byte] = SLICE(r4, byte, 0)
	// succ:  l00400136
l00400136:
	return
	// succ:  acknowledge_exit
acknowledge_exit:


// set_socket_option.isra.0.part.1
// Return size: 0
define set_socket_option.isra.0.part.1
set_socket_option.isra.0.part.1_entry:
	sp = fp
	r25 = 0x400138<32>
	// succ:  l00400138
l00400138:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	goto 0x004049B0<p32>
	// succ:  l0040013A_thunk___errno_location
l0040013A_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  set_socket_option.isra.0.part.1_exit
set_socket_option.isra.0.part.1_exit:


// exit
// Return size: 0
define exit
exit_entry:
	sp = fp
	r25 = 0x40015A<32>
	// succ:  l0040015A
l0040015A:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 32<i32>
	Mem0[sp + 0xC<32>:word32] = r4
	goto 0x00404A20<p32>
	// succ:  l0040015E_thunk___funcs_on_exit
l0040015E_thunk___funcs_on_exit:
	call __funcs_on_exit (retsize: 0;)
	return
	// succ:  exit_exit
exit_exit:


// main
// Return size: 0
define main
main_entry:
	sp = fp
	r25 = 0x400170<32>
	// succ:  l00400170
l00400170:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	sp = sp - 96<i32>
	r6 = 0x20<32>
	r19 = 2<32>
	r16 = r4
	r18 = r5
	r5 = 0<32>
	r4 = sp + r6
	goto 0x0040A690<p32>
	// succ:  l0040017E_thunk_memset
l0040017E_thunk_memset:
	call memset (retsize: 0;)
	return
	// succ:  main_exit
main_exit:


// _start
// Return size: 0
define _start
_start_entry:
	sp = fp
	r25 = 0x400840<32>
	// succ:  l00400840
l00400840:
	r30 = 0<32>
	r25 = 0x00400853<p32>
	r5 = 0x00400425<p32>
	r28 = 0x004185FF<p32>
	r4 = sp
	r1 = 0xFFFFFFF0<32>
	sp = sp & r1
	call r25 (retsize: 0;)
_start_exit:


// _start_c
// Return size: 0
define _start_c
_start_c_entry:
	sp = fp
	r25 = 0x400860<32>
	// succ:  l00400860
l00400860:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r5 = Mem0[r4:word32]
	r6 = r4 + 4<32>
	r9 = 0<32>
	r8 = 0x00410340<p32>
	r7 = 0x004000D4<p32>
	r4 = 0x004004F4<p32>
	goto 0x00404988<p32>
	// succ:  l00400878_thunk___libc_start_main
l00400878_thunk___libc_start_main:
	call __libc_start_main (retsize: 0;)
	return
	// succ:  _start_c_exit
_start_c_exit:


// deregister_tm_clones
// Return size: 0
define deregister_tm_clones
deregister_tm_clones_entry:
	sp = fp
	r25 = 0x400880<32>
	// succ:  l00400880
l00400880:
	r7 = 0x0041861A<p32>
	r4 = 0x0041861C<p32>
	r7 = r7 + 3<32>
	r7 = r7 - r4
	branch r7 <u 7<32> l0040089A
	// succ:  l00400890 l0040089A
l00400890:
	r7 = null
	branch r7 == 0<32> l0040089A
	// succ:  l00400898 l0040089A
l00400898:
	call r7 (retsize: 0;)
	return
	// succ:  deregister_tm_clones_exit
l0040089A:
	return
	// succ:  deregister_tm_clones_exit
deregister_tm_clones_exit:


// register_tm_clones
// Return size: 0
define register_tm_clones
register_tm_clones_entry:
	sp = fp
	r25 = 0x40089C<32>
	// succ:  l0040089C
l0040089C:
	r4 = 0x00418628<p32>
	r6 = 2<32>
	r7 = 0x0041862B<p32>
	r7 = r7 - r4
	r7 = r7 >> 2<32>
	lo = r5 / r7
	hi = r5 % r7
	branch r5 == 0<32> l004008BC
	// succ:  l004008B2 l004008BC
l004008B2:
	r7 = null
	branch r7 == 0<32> l004008BC
	// succ:  l004008BA l004008BC
l004008BA:
	call r7 (retsize: 0;)
	return
	// succ:  register_tm_clones_exit
l004008BC:
	return
	// succ:  register_tm_clones_exit
register_tm_clones_exit:


// __do_global_dtors_aux
// Return size: 0
define __do_global_dtors_aux
__do_global_dtors_aux_entry:
	sp = fp
	r25 = 0x4008BE<32>
	// succ:  l004008BE
l004008BE:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r7 = 0x400<32>
	r6 = CONVERT(Mem0[r7 + 0x3C0<32>:byte], byte, word32)
	r16 = r7
	branch r6 != 0<32> l004008E4
	// succ:  l004008CC l004008E4
l004008CC:
	goto 0x00400880<p32>
	// succ:  l004008CC_thunk_deregister_tm_clones
l004008CC_thunk_deregister_tm_clones:
	call deregister_tm_clones (retsize: 0;)
	return
	// succ:  __do_global_dtors_aux_exit
l004008E4:
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  __do_global_dtors_aux_exit
__do_global_dtors_aux_exit:


// frame_dummy
// Return size: 0
define frame_dummy
frame_dummy_entry:
	sp = fp
	r25 = 0x4008E6<32>
	// succ:  l004008E6
l004008E6:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r7 = null
	branch r7 == 0<32> l004008FA
	// succ:  l004008F0 l004008FA
l004008F0:
	r5 = 0x0041865C<p32>
	r4 = 0x00409F44<p32>
	call r7 (retsize: 0;)
	// succ:  l004008FA
l004008FA:
	r4 = 0x0041847D<p32>
	r7 = Mem0[r4:word32]
	branch r7 != 0<32> l0040090A
	// succ:  l00400902 l0040090A
l00400902:
	ra = Mem0[sp + 12<i32>:word32]
	sp = sp + 16<i32>
	goto 0x0040089C<p32>
	// succ:  l00400906_thunk_register_tm_clones
l00400906_thunk_register_tm_clones:
	call register_tm_clones (retsize: 0;)
	return
	// succ:  frame_dummy_exit
l0040090A:
	r7 = null
	branch r7 == 0<32> l00400902
	// succ:  l00400912 l00400902
l00400912:
	call r7 (retsize: 0;)
	goto 0x00400902<p32>
	goto l00400902
	// succ:  l00400902
frame_dummy_exit:


// in_cksum
// Return size: 0
define in_cksum
in_cksum_entry:
	sp = fp
	r25 = 0x400920<32>
	// succ:  l00400920
l00400920:
	goto 0x0040092C<p32>
	goto l0040092C
	// succ:  l0040092C
l00400922:
	r4 = r4 + 2<32>
	r5 = r5 + 0xFFFFFFFE<32>
	r7 = CONVERT(Mem0[r4 - 2<32>:uint16], uint16, word32)
	r6 = r6 + r7
	// succ:  l0040092C
l0040092C:
	branch r5 >= 2<32> l00400922
	// succ:  l00400930 l00400922
l00400930:
	branch r5 != 1<32> l00400938
	// succ:  l00400934 l00400938
l00400934:
	r7 = CONVERT(Mem0[r4:byte], byte, word32)
	r6 = r6 + r7
	// succ:  l00400938
l00400938:
	r4 = r6 >> 0x10<32>
	r6 = r6 & 0xFFFF<32>
	r6 = r4 + r6
	r4 = r6 >> 0x10<32>
	r6 = r6 + r4
	r4 = ~r6
	r4 = r4 & 0xFFFF<32>
	return
	// succ:  in_cksum_exit
in_cksum_exit:


// usage
// Return size: 0
define usage
usage_entry:
	sp = fp
	r25 = 0x40094E<32>
	// succ:  l0040094E
l0040094E:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r5 = Mem0[0x00412EF0<p32>:word32]
	r4 = 0x00408659<p32>
	goto 0x00400B5A<p32>
	// succ:  l00400B5A
l00400B5A:
	goto 0x004083F0<p32>
	// succ:  l00400B5A_thunk_fputs_unlocked
l00400B5A_thunk_fputs_unlocked:
	call fputs_unlocked (retsize: 0;)
	return
	// succ:  usage_exit
usage_exit:


// create_socket
// Return size: 0
define create_socket
create_socket_entry:
	sp = fp
	r25 = 0x400966<32>
	// succ:  l00400966
l00400966:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	sp = sp - 32<i32>
	r17 = r4
	r19 = r5
	r16 = r6
	r20 = r7
	r18 = r8
	goto 0x00400B56<p32>
	// succ:  l00400B56
l00400B56:
	goto 0x004049B0<p32>
	// succ:  l00400B56_thunk___errno_location
l00400B56_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  create_socket_exit
create_socket_exit:


// pr_echo_reply
// Return size: 0
define pr_echo_reply
pr_echo_reply_entry:
	sp = fp
	r25 = 0x4009EE<32>
	// succ:  l004009EE
l004009EE:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r4 = CONVERT(Mem0[r4 + 6<32>:uint16], uint16, word32)
	goto 0x00407630<p32>
	// succ:  l004009F2_thunk_ntohs
l004009F2_thunk_ntohs:
	call ntohs (retsize: 0;)
	return
	// succ:  pr_echo_reply_exit
pr_echo_reply_exit:


// write_stdout
// Return size: 0
define write_stdout
write_stdout_entry:
	sp = fp
	r25 = 0x400A04<32>
	// succ:  l00400A04
l00400A04:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 16<i32>
	r16 = 0<32>
	r18 = r4
	r17 = r5
	r6 = r17 - r16
	r5 = r18 + r16
	r4 = 1<32>
	goto 0x0040B080<p32>
	// succ:  l00400A10_thunk_write
l00400A10_thunk_write:
	call write (retsize: 0;)
	return
	// succ:  write_stdout_exit
write_stdout_exit:


// ping4_send_probe
// Return size: 0
define ping4_send_probe
ping4_send_probe_entry:
	sp = fp
	r25 = 0x400A20<32>
	// succ:  l00400A20
l00400A20:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 32<i32>
	r18 = r4
	r16 = r5
	r7 = 8<32>
	Mem0[r16:byte] = SLICE(r7, byte, 0)
	Mem0[r16 + 1<32>:byte] = SLICE(0<32>, byte, 0)
	r4 = Mem0[0x004544E4<p32>:word32]
	Mem0[r16 + 2<32>:word16] = SLICE(0<32>, word16, 0)
	r4 = r4 + 1<32>
	r4 = r4 & 0xFFFF<32>
	goto 0x00400B62<p32>
	// succ:  l00400A36_thunk_fn00400B62
l00400A36_thunk_fn00400B62:
	call fn00400B62 (retsize: 0;)
	return
	// succ:  ping4_send_probe_exit
ping4_send_probe_exit:


// ping4_install_filter
// Return size: 0
define ping4_install_filter
ping4_install_filter_entry:
	sp = fp
	r25 = 0x400AF2<32>
	// succ:  l00400AF2
l00400AF2:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 32<i32>
	r7 = Mem0[0x0045451C<p32>:word32]
	r17 = r4
	branch r7 != 0<32> l00400B48
	// succ:  l00400AFE l00400B48
l00400AFE:
	r7 = Mem0[0x004544C4<p32>:word32]
	r16 = 1<32>
	Mem0[sp + 0xC<32>:word32] = r7
	Mem0[0x0045451C<p32>:word32] = r16
	r4 = CONVERT(Mem0[sp + 0xC<32>:uint16], uint16, word32)
	goto 0x00400B62<p32>
	// succ:  l00400B12_thunk_fn00400B62
l00400B12_thunk_fn00400B62:
	call fn00400B62 (retsize: 0;)
	return
	// succ:  ping4_install_filter_exit
l00400B48:
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  ping4_install_filter_exit
ping4_install_filter_exit:


// fn00400B62
// Return size: 0
define fn00400B62
fn00400B62_entry:
	sp = fp
	r25 = 0x400B62<32>
	// succ:  l00400B62
l00400B62:
	goto 0x00406700<p32>
	// succ:  l00400B62_thunk_htons
l00400B62_thunk_htons:
	call htons (retsize: 0;)
	return
	// succ:  fn00400B62_exit
fn00400B62_exit:


// ping4_run
// Return size: 0
define ping4_run
ping4_run_entry:
	sp = fp
	r25 = 0x400B6A<32>
	goto l00400B6A
	// succ:  l00400B6A
l00400B4A:
	goto 0x00407D60<p32>
	// succ:  l00400B4A_thunk_setsockopt
l00400B4A_thunk_setsockopt:
	call setsockopt (retsize: 0;)
	return
	// succ:  ping4_run_exit
l00400B4E:
	goto 0x0040A690<p32>
	// succ:  l00400B4E_thunk_memset
l00400B4E_thunk_memset:
	call memset (retsize: 0;)
	return
	// succ:  ping4_run_exit
l00400B52:
	goto 0x0040A130<p32>
	// succ:  l00400B52_thunk_memcpy
l00400B52_thunk_memcpy:
	call memcpy (retsize: 0;)
	return
	// succ:  ping4_run_exit
l00400B6A:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	Mem0[sp + -32<i32>:word32] = r22
	sp = sp - 384<i32>
	r17 = r4
	r21 = r5
	r18 = r6
	r16 = r7
	branch r17 < 2<32> l00400C24
	// succ:  l00400B76 l00400C24
l00400B76:
	r7 = Mem0[0x004544EC<p32>:word32]
	branch __bit(r7, 5<32>) l00400B82
	// succ:  l00400B80 l00400B82
l00400B80:
	goto 0x0040094E<p32>
	// succ:  l00400B80_thunk_usage
l00400B80_thunk_usage:
	call usage (retsize: 0;)
	return
	// succ:  ping4_run_exit
l00400B82:
	branch __bit(r7, 9<32>) l00400B96
	// succ:  l00400B86 l00400B96
l00400B86:
	r7 = Mem0[0x0045453C<p32>:word32]
	branch r7 != 3<32> l00400B80
	// succ:  l00400B90 l00400B80
l00400B90:
	branch r17 < 6<32> l00400C24
	// succ:  l00400B94 l00400C24
l00400B94:
	goto 0x00400B80<p32>
	goto l00400B80
	// succ:  l00400B80
l00400B96:
	branch r17 >= 0xB<32> l00400B80
	// succ:  l00400B9A l00400B80
l00400B9A:
	r7 = r7 | 0x400<32>
	Mem0[0x004544EC<p32>:word32] = r7
	goto 0x00400C24<p32>
	goto l00400C24
	// succ:  l00400C24
l00400BA6:
	Mem0[sp + 0x38<32>:word32] = 0<32>
	branch r17 != 1<32> l00400BAE
	// succ:  l00400BAC l00400BAE
l00400BAC:
	branch r18 != 0<32> l00400BD2
	// succ:  l00400BAE l00400BD2
l00400BAE:
	r7 = sp + 0x38<32>
	r6 = 0x004096D8<p32>
	r4 = r20
	r5 = 0<32>
	goto 0x00405E20<p32>
	// succ:  l00400BB6_thunk_getaddrinfo
l00400BB6_thunk_getaddrinfo:
	call getaddrinfo (retsize: 0;)
	return
	// succ:  ping4_run_exit
l00400BD2:
	r5 = Mem0[r18 + 0x14<32>:word32]
	r6 = 0x10<32>
	r4 = 0x00419031<p32>
	r20 = sp + 0x60<32>
	goto 0x00400B52<p32>
	goto l00400B52
	// succ:  l00400B52
l00400C06:
	r7 = Mem0[0x00454538<p32>:word32]
	r5 = Mem0[r19 + 4<32>:word32]
	r6 = r7 + 1<32>
	Mem0[0x00454538<p32>:word32] = r6
	r6 = 0x0041905A<p32>
	Mem0[r6 + r7 * 4<32>:word32] = r5
	// succ:  l00400C20
l00400C20:
	r17 = r17 + 0xFFFFFFFF<32>
	r21 = r21 + 4<32>
	// succ:  l00400C24
l00400C24:
	branch 0<32> >= r17 l00400C6A
	// succ:  l00400C28 l00400C6A
l00400C28:
	r20 = Mem0[r21:word32]
	r19 = 0x0041905B<p32>
	r7 = 0x400<32>
	r6 = 2<32>
	Mem0[r7 + 0x488<32>:byte] = SLICE(0<32>, byte, 0)
	r5 = 0x00419064<p32>
	Mem0[sp + 0x44<32>:word32] = 0<32>
	Mem0[sp + 0x48<32>:word32] = 0<32>
	Mem0[sp + 0x4C<32>:word32] = 0<32>
	Mem0[r7 + 0x488<32>:byte] = SLICE(r6, byte, 0)
	r4 = r20
	call __inet_aton (retsize: 0;)
	branch r4 != 1<32> l00400BA6
	// succ:  l00400C4E l00400BA6
l00400C4E:
	Mem0[0x004544C0<p32>:word32] = r20
	branch r17 != 1<32> l00400C06
	// succ:  l00400C58 l00400C06
l00400C58:
	r7 = Mem0[0x004544EC<p32>:word32]
	r7 = r7 | 4<32>
	Mem0[0x004544EC<p32>:word32] = r7
	goto 0x00400C20<p32>
	goto l00400C20
	// succ:  l00400C20
l00400C6A:
	r18 = 0x0041865D<p32>
	r7 = Mem0[r18 + 4<32>:word32]
	branch 0<32> != r7 l00400E36
	// succ:  l00400C74 l00400E36
l00400C74:
	r6 = 0x10<32>
	r5 = 0x00419081<p32>
	r4 = sp + 0x28<32>
	goto 0x00400B52<p32>
	goto l00400B52
	// succ:  l00400B52
l00400E0A:
	goto 0x00400B5A<p32>
	// succ:  l00400E0A_thunk_usage
l00400E0A_thunk_usage:
	call usage (retsize: 0;)
	return
	// succ:  ping4_run_exit
l00400E36:
	r17 = 0x00419161<p32>
	r7 = Mem0[r17 + 4<32>:word32]
	branch r7 != 0<32> l00400E42
	// succ:  l00400E3E l00400E42
l00400E3E:
	r7 = Mem0[r18 + 4<32>:word32]
	Mem0[sp + 0x44<32>:word32] = r7
	// succ:  l00400E42
l00400E42:
	r19 = Mem0[0x00454528<p32>:word32]
	branch r19 == 0<32> l00400E72
	// succ:  l00400E4A l00400E72
l00400E4A:
	r6 = 0x20<32>
	r5 = 0<32>
	r4 = sp + 0x38<32>
	goto 0x00400B4E<p32>
	goto l00400B4E
	// succ:  l00400B4E
l00400E72:
	r7 = Mem0[0x0045452C<p32>:word32]
	branch r7 == 0<32> l00400EC4
	// succ:  l00400E7A l00400EC4
l00400E7A:
	r7 = Mem0[0x00454514<p32>:word32]
	branch r7 != 0<32> l00400EFC
	// succ:  l00400E82 l00400EFC
l00400E82:
	r7 = Mem0[0x00430048<p32>:word32]
	branch r7 >= 0<32> l00400EE0
	// succ:  l00400E8C l00400EE0
l00400E8C:
	r7 = 2<32>
	Mem0[0x00430048<p32>:word32] = r7
	goto 0x00400ED6<p32>
	goto l00400ED6
	// succ:  l00400ED6
l00400EC4:
	r4 = Mem0[r17 + 4<32>:word32]
	goto 0x00407620<p32>
	// succ:  l00400EC6_thunk_ntohl
l00400EC6_thunk_ntohl:
	call ntohl (retsize: 0;)
	return
	// succ:  ping4_run_exit
l00400ED6:
	r7 = Mem0[0x00430048<p32>:word32]
	branch r7 < 0<32> l00400F30
	// succ:  l00400EE0 l00400F30
l00400EE0:
	r4 = Mem0[r16:word32]
	r7 = 0x00418797<p32>
	r8 = 4<32>
	r6 = 0xA<32>
	r5 = 0<32>
	goto 0x00400B4A<p32>
	goto l00400B4A
	// succ:  l00400B4A
l00400EFC:
	r7 = Mem0[0x0043008C<p32>:word32]
	r6 = 0x3E7<32>
	branch r6 < r7 l00400F16
	// succ:  l00400F0A l00400F16
l00400F0A:
	r5 = Mem0[0x00412EF0<p32>:word32]
	r4 = 0x00408AC2<p32>
	goto 0x00400E0A<p32>
	goto l00400E0A
	// succ:  l00400E0A
l00400F16:
	r7 = Mem0[0x00430048<p32>:word32]
	branch r7 < 0<32> l00400E82
	// succ:  l00400F20 l00400E82
l00400F20:
	branch r7 == 2<32> l00400E82
	// succ:  l00400F24 l00400E82
l00400F24:
	r5 = Mem0[0x00412EF0<p32>:word32]
	r4 = 0x00408AE7<p32>
	goto 0x00400E0A<p32>
	goto l00400E0A
	// succ:  l00400E0A
l00400F30:
	r7 = Mem0[0x004544EC<p32>:word32]
	branch __bit(r7, 0xF<32>) l00400F50
	// succ:  l00400F3A l00400F50
l00400F3A:
	r4 = Mem0[r16:word32]
	r6 = 0x10<32>
	r5 = 0x004187C7<p32>
	goto 0x00405DB0<p32>
	// succ:  l00400F42_thunk_bind
l00400F42_thunk_bind:
	call bind (retsize: 0;)
	return
	// succ:  ping4_run_exit
l00400F50:
	r7 = Mem0[r16 + 4<32>:word32]
	branch r7 != 3<32> l00400F78
	// succ:  l00400F56 l00400F78
l00400F56:
	r7 = 0xFFFFE7C6<32>
	r4 = Mem0[r16:word32]
	Mem0[sp + 0x38<32>:word32] = r7
	r8 = 4<32>
	r7 = sp + 0x38<32>
	r6 = 1<32>
	r5 = 0xFF<32>
	goto 0x00401280<p32>
	goto l00401280
	// succ:  l00401280
l00400F78:
	r7 = 1<32>
	r4 = Mem0[r16:word32]
	Mem0[sp + 0x1C<32>:word32] = r7
	r8 = 4<32>
	r6 = 0xB<32>
	r5 = 0<32>
	r7 = sp + 0x1C<32>
	goto 0x00401280<p32>
	// succ:  l00401280
l00401280:
	goto 0x00407D60<p32>
	// succ:  l00401280_thunk_setsockopt
l00401280_thunk_setsockopt:
	call setsockopt (retsize: 0;)
	return
	// succ:  ping4_run_exit
ping4_run_exit:


// pr_addr
// Return size: 0
define pr_addr
pr_addr_entry:
	sp = fp
	r25 = 0x401288<32>
	// succ:  l00401288
l00401288:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 544<i32>
	r16 = 0xFB<32>
	Mem0[sp + 8<32>:word32] = r5
	r6 = r16
	Mem0[sp + 0xC<32>:word32] = r4
	r5 = 0<32>
	r4 = sp + 0x14<32>
	Mem0[sp + 0x10<32>:word32] = 0<32>
	goto 0x00401366<p32>
	// succ:  l00401366
l00401366:
	goto 0x0040A690<p32>
	// succ:  l00401366_thunk_memset
l00401366_thunk_memset:
	call memset (retsize: 0;)
	return
	// succ:  pr_addr_exit
pr_addr_exit:


// pr_options
// Return size: 0
define pr_options
pr_options_entry:
	sp = fp
	r25 = 0x40136A<32>
	// succ:  l0040136A
l0040136A:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 80<i32>
	r16 = r4
	r20 = r5 + 0xFFFFFFEC<32>
	// succ:  l00401372
l00401372:
	branch 0<32> < r20 l00401378
	// succ:  l00401376 l00401378
l00401376:
	r30 = Mem0[sp + 76<i32>:word32]
	ra = Mem0[sp + 72<i32>:word32]
	r16 = Mem0[sp + 68<i32>:word32]
	r17 = Mem0[sp + 64<i32>:word32]
	r18 = Mem0[sp + 60<i32>:word32]
	r19 = Mem0[sp + 56<i32>:word32]
	r20 = Mem0[sp + 52<i32>:word32]
	r21 = Mem0[sp + 48<i32>:word32]
	r22 = Mem0[sp + 44<i32>:word32]
	r23 = Mem0[sp + 40<i32>:word32]
	sp = sp + 80<i32>
	return
	// succ:  pr_options_exit
l00401378:
	r5 = CONVERT(Mem0[r16:byte], byte, word32)
	branch r5 == 0<32> l00401376
	// succ:  l0040137C l00401376
l0040137C:
	branch r5 != 1<32> l0040138C
	// succ:  l00401380 l0040138C
l00401380:
	r4 = 0x00408FFC<p32>
	r20 = r20 + 0xFFFFFFFF<32>
	r16 = r16 + 1<32>
	goto 0x00401594<p32>
	// succ:  l00401388_thunk_fn00401594
l00401388_thunk_fn00401594:
	call fn00401594 (retsize: 0;)
	return
	// succ:  pr_options_exit
l0040138C:
	r19 = CONVERT(Mem0[r16 + 1<32>:byte], byte, word32)
	branch r19 < 2<32> l00401376
	// succ:  l00401392 l00401376
l00401392:
	branch r20 < r19 l00401376
	// succ:  l00401396 l00401376
l00401396:
	branch r5 == 4<32> l004014BC
	// succ:  l0040139A l004014BC
l0040139A:
	branch r5 >=u 5<32> l004013A8
	// succ:  l0040139E l004013A8
l0040139E:
	branch r5 == 7<32> l00401422
	// succ:  l004013A2 l00401422
l004013A2:
	r4 = 0x0040905F<p32>
	goto 0x0040158C<p32>
	goto l0040158C
	// succ:  l0040158C
l004013A8:
	r6 = 0x83<32>
	r7 = 0x89<32>
	branch r5 == r6 l004013B6
	// succ:  l004013B2 l004013B6
l004013B2:
	branch r7 != r5 l004013A2
	// succ:  l004013B6 l004013A2
l004013B6:
	r5 = r5 ^ 0x89<32>
	r6 = 0x4C<32>
	r7 = 0x53<32>
	r4 = 0x0040901F<p32>
	branch r5 == 0<32> l004013C6
	// succ:  l004013C2_1 l004013C6
l004013C2_1:
	r7 = r6
	// succ:  l004013C6
l004013C6:
	r5 = r7
	call printf (retsize: 0;)
	r21 = CONVERT(Mem0[r16 + 1<32>:byte], byte, word32)
	branch r21 < 5<32> l004013FA
	// succ:  l004013D2 l004013FA
l004013D2:
	r18 = r16 + 3<32>
	r17 = r18
	r5 = r17
	r6 = 4<32>
	r4 = sp + 0xC<32>
	r17 = r17 + 4<32>
	goto 0x00401608<p32>
	goto l00401608
	// succ:  l00401608
l004013FA:
	r20 = r20 - r19
	r16 = r16 + r19
	goto 0x00401372<p32>
	goto l00401372
	// succ:  l00401372
l00401422:
	r7 = CONVERT(Mem0[r16 + 2<32>:byte], byte, word32)
	r17 = CONVERT(r7 < r19, bool, word32)
	branch r17 != 0<32> l0040142C
	// succ:  l00401428_1 l0040142C
l00401428_1:
	r7 = r19
	// succ:  l0040142C
l0040142C:
	r17 = r7
	r17 = r17 + 0xFFFFFFFC<32>
	r21 = r17
	branch 0<32> >= r17 l004013FA
	// succ:  l00401436 l004013FA
l00401436:
	r7 = Mem0[0x00454524<p32>:word32]
	r18 = r16 + 2<32>
	branch r7 != r17 l00401462
	// succ:  l00401444 l00401462
l00401444:
	r6 = r17
	r5 = 0x00419455<p32>
	r4 = r18
	call memcmp (retsize: 0;)
	branch r4 != 0<32> l00401462
	// succ:  l00401450 l00401462
l00401450:
	r7 = Mem0[0x004544EC<p32>:word32]
	branch !__bit(r7, 0<32>) l00401462
	// succ:  l0040145A l00401462
l0040145A:
	r4 = 0x0040907B<p32>
	goto 0x00401594<p32>
	// succ:  l0040145E_thunk_fn00401594
l0040145E_thunk_fn00401594:
	call fn00401594 (retsize: 0;)
	return
	// succ:  pr_options_exit
l00401462:
	r5 = r18
	r6 = r17
	r4 = 0x00419464<p32>
	Mem0[0x00454524<p32>:word32] = r17
	goto 0x00401608<p32>
	goto l00401608
	// succ:  l00401608
l004014BC:
	r7 = CONVERT(Mem0[r16 + 2<32>:byte], byte, word32)
	r18 = CONVERT(r7 < r19, bool, word32)
	branch r18 != 0<32> l004014C6
	// succ:  l004014C2_1 l004014C6
l004014C2_1:
	r7 = r19
	// succ:  l004014C6
l004014C6:
	r18 = r7
	r18 = r18 + 0xFFFFFFFB<32>
	branch 0<32> >= r18 l004013FA
	// succ:  l004014CE l004013FA
l004014CE:
	r4 = 0x004090C1<p32>
	r21 = CONVERT(Mem0[r16 + 3<32>:byte], byte, word32)
	r30 = r16 + 4<32>
	r23 = 0<32>
	goto 0x00401594<p32>
	// succ:  l004014DC_thunk_fn00401594
l004014DC_thunk_fn00401594:
	call fn00401594 (retsize: 0;)
	return
	// succ:  pr_options_exit
l0040158C:
	goto 0x00401594<p32>
	// succ:  l0040158C_thunk_fn00401594
l0040158C_thunk_fn00401594:
	call fn00401594 (retsize: 0;)
	return
	// succ:  pr_options_exit
l00401608:
	goto 0x0040A130<p32>
	// succ:  l00401608_thunk_memcpy
l00401608_thunk_memcpy:
	call memcpy (retsize: 0;)
	return
	// succ:  pr_options_exit
pr_options_exit:


// fn00401594
// Return size: 0
define fn00401594
fn00401594_entry:
	sp = fp
	r25 = 0x401594<32>
	// succ:  l00401594
l00401594:
	goto 0x004086C0<p32>
	// succ:  l00401594_thunk_printf
l00401594_thunk_printf:
	call printf (retsize: 0;)
	return
	// succ:  fn00401594_exit
fn00401594_exit:


// pr_iph
// Return size: 0
define pr_iph
pr_iph_entry:
	sp = fp
	r25 = 0x401598<32>
	// succ:  l00401598
l00401598:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 16<i32>
	r16 = r4
	r4 = 0x00409166<p32>
	r18 = 0x004091A8<p32>
	r17 = Mem0[r16:word32]
	goto 0x00401762<p32>
	// succ:  l00401762
l00401762:
	goto 0x00408780<p32>
	// succ:  l00401762_thunk_puts
l00401762_thunk_puts:
	call puts (retsize: 0;)
	return
	// succ:  pr_iph_exit
pr_iph_exit:


// pr_icmph
// Return size: 0
define pr_icmph
pr_icmph_entry:
	sp = fp
	r25 = 0x40160C<32>
	// succ:  l0040160C
l0040160C:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 32<i32>
	r17 = r6
	r16 = r7
	branch r4 >=u 0x13<32> l00401758
	// succ:  l00401614 l00401758
l00401614:
	r7 = 0x00409BC4<p32>
	r7 = Mem0[r7 + r4 * 4<32>:word32]
	call r7 (retsize: 0;)
	return
	// succ:  pr_icmph_exit
l00401758:
	r5 = r4
	r4 = 0x00409461<p32>
	goto 0x00401594<p32>
	// succ:  l0040175E_thunk_fn00401594
l0040175E_thunk_fn00401594:
	call fn00401594 (retsize: 0;)
	return
	// succ:  pr_icmph_exit
pr_icmph_exit:


// ping4_receive_error_msg
// Return size: 0
define ping4_receive_error_msg
ping4_receive_error_msg_entry:
	sp = fp
	r25 = 0x40176A<32>
	// succ:  l0040176A
l0040176A:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	sp = sp - 624<i32>
	r17 = r4
	goto 0x004049B0<p32>
	// succ:  l00401770_thunk___errno_location
l00401770_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  ping4_receive_error_msg_exit
ping4_receive_error_msg_exit:


// ping4_parse_reply
// Return size: 0
define ping4_parse_reply
ping4_parse_reply_entry:
	sp = fp
	r25 = 0x401940<32>
	// succ:  l00401940
l00401940:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	Mem0[sp + -32<i32>:word32] = r22
	Mem0[sp + -36<i32>:word32] = r23
	sp = sp - 80<i32>
	r20 = r6
	r18 = r7
	r7 = Mem0[r5 + 8<32>:word32]
	r9 = r4
	r17 = r8
	r16 = Mem0[r7:word32]
	r7 = Mem0[r4 + 4<32>:word32]
	branch r7 != 3<32> l004019E8
	// succ:  l00401952 l004019E8
l00401952:
	r5 = Mem0[r16:word32]
	r5 = r5 & 0xF<32>
	r7 = r5 << 2<32>
	r6 = r7 + 7<32>
	branch r6 >= r20 l00401964
	// succ:  l00401960 l00401964
l00401960:
	branch r5 >= 5<32> l0040198C
	// succ:  l00401964 l0040198C
l00401964:
	r7 = Mem0[0x004544EC<p32>:word32]
	branch !__bit(r7, 8<32>) l00401974
	// succ:  l0040196E l00401974
l0040196E:
	r17 = 1<32>
	// succ:  l00401970
l00401970:
	r4 = r17
	ra = Mem0[sp + 76<i32>:word32]
	r16 = Mem0[sp + 72<i32>:word32]
	r17 = Mem0[sp + 68<i32>:word32]
	r18 = Mem0[sp + 64<i32>:word32]
	r19 = Mem0[sp + 60<i32>:word32]
	r20 = Mem0[sp + 56<i32>:word32]
	r21 = Mem0[sp + 52<i32>:word32]
	r22 = Mem0[sp + 48<i32>:word32]
	r23 = Mem0[sp + 44<i32>:word32]
	sp = sp + 80<i32>
	return
	// succ:  ping4_parse_reply_exit
l00401974:
	r5 = 0x10<32>
	r4 = r18
	call pr_addr (retsize: 0;)
	r5 = 0x004095C1<p32>
	r6 = r20
	r7 = r4
	r4 = Mem0[0x00412EF0<p32>:word32]
	goto 0x00408340<p32>
	// succ:  l00401986_thunk_fprintf
l00401986_thunk_fprintf:
	call fprintf (retsize: 0;)
	return
	// succ:  ping4_parse_reply_exit
l0040198C:
	r23 = CONVERT(Mem0[r16 + 8<32>:byte], byte, word32)
	r21 = r16 + 0x14<32>
	r22 = r7 + 0xFFFFFFEC<32>
	// succ:  l00401998
l00401998:
	r20 = r20 - r7
	r16 = r16 + r7
	r5 = r20
	r6 = 0<32>
	r4 = r16
	call in_cksum (retsize: 0;)
	r7 = CONVERT(Mem0[r16:byte], byte, word32)
	r19 = r4
	branch 0<32> != r7 l00401A40
	// succ:  l004019AC l00401A40
l004019AC:
	r5 = CONVERT(Mem0[r16 + 4<32>:uint16], uint16, word32)
	r4 = r9
	call is_ours (retsize: 0;)
	branch r4 == 0<32> l0040196E
	// succ:  l004019B4 l0040196E
l004019B4:
	r4 = CONVERT(Mem0[r16 + 6<32>:uint16], uint16, word32)
	goto 0x00401B9C<p32>
	goto l00401B9C
	// succ:  l00401B9C
l004019E4:
	r17 = 0<32>
	goto 0x00401970<p32>
	goto l00401970
	// succ:  l00401970
l004019E8:
	r19 = Mem0[r5 + 0x14<32>:word32]
	branch r19 <u 0xC<32> l00401A36
	// succ:  l004019EE l00401A36
l004019EE:
	r5 = Mem0[r5 + 0x10<32>:word32]
	r21 = r16
	r22 = 0<32>
	r23 = 0<32>
	r7 = r5
	// succ:  l004019F8
l004019F8:
	branch r7 == 0<32> l00401998
	// succ:  l004019FA l00401998
l004019FA:
	r6 = Mem0[r7 + 4<32>:word32]
	r4 = Mem0[r7:word32]
	branch r6 != 0<32> l00401A0E
	// succ:  l00401A00 l00401A0E
l00401A00:
	r6 = Mem0[r7 + 8<32>:word32]
	branch r6 != 2<32> l00401A2A
	// succ:  l00401A06 l00401A2A
l00401A06:
	branch r4 <u 4<32> l00401A26
	// succ:  l00401A0A l00401A26
l00401A0A:
	r23 = CONVERT(Mem0[r7 + 0xC<32>:byte], byte, word32)
	// succ:  l00401A0E
l00401A0E:
	branch r4 <u 0xC<32> l00401A26
	// succ:  l00401A12 l00401A26
l00401A12:
	r4 = r4 + 3<32>
	r6 = r5 + r19
	r4 = __ins(r4, 0<32>, 0<32>, 1<32>)
	r6 = r6 - r7
	r8 = r4 + 0xC<32>
	r7 = r7 + r4
	branch r8 <u r6 l004019F8
	// succ:  l00401A26 l004019F8
l00401A26:
	r7 = 0<32>
	goto 0x004019F8<p32>
	goto l004019F8
	// succ:  l004019F8
l00401A2A:
	branch r6 != 7<32> l00401A0E
	// succ:  l00401A2E l00401A0E
l00401A2E:
	r21 = r7 + 0xC<32>
	r22 = r4
	goto 0x00401A0E<p32>
	goto l00401A0E
	// succ:  l00401A0E
l00401A36:
	r21 = r16
	r22 = 0<32>
	r23 = 0<32>
	r7 = 0<32>
	goto 0x00401998<p32>
	goto l00401998
	// succ:  l00401998
l00401A40:
	r7 = r7 + 0xFFFFFFFD<32>
	r17 = r4
	r7 = r7 & 0xFF<32>
	branch r7 >=u 0xA<32> l00401A5A
	// succ:  l00401A4A l00401A5A
l00401A4A:
	r6 = 1<32>
	r7 = r6 << r7
	r6 = r7 & 0x307<32>
	branch r6 != 0<32> l00401A76
	// succ:  l00401A56 l00401A76
l00401A56:
	branch !__bit(r7, 5<32>) l0040196E
	// succ:  l00401A5A l0040196E
l00401A5A:
	r7 = Mem0[0x004544EC<p32>:word32]
	r6 = r7 & 0x111<32>
	branch r6 != 1<32> l00401B04
	// succ:  l00401A68 l00401B04
l00401A68:
	branch 0<32> != r19 l00401AFA
	// succ:  l00401A6C l00401AFA
l00401A6C:
	r5 = 2<32>
	r4 = 0x00409665<p32>
	goto 0x00401BA0<p32>
	goto l00401BA0
	// succ:  l00401BA0
l00401A76:
	branch r20 <u 0x24<32> l0040196E
	// succ:  l00401A7A l0040196E
l00401A7A:
	r17 = Mem0[r16 + 8<32>:word32]
	r17 = r17 & 0xF<32>
	r17 = r17 + 4<32>
	r17 = r17 << 2<32>
	branch r20 < r17 l0040196E
	// succ:  l00401A86 l0040196E
l00401A86:
	r17 = r17 + 0xFFFFFFF8<32>
	r17 = r16 + r17
	r7 = CONVERT(Mem0[r17:byte], byte, word32)
	branch r7 != 8<32> l0040196E
	// succ:  l00401A90 l0040196E
l00401A90:
	r7 = 0x0041978E<p32>
	r6 = Mem0[r16 + 0x18<32>:word32]
	r7 = Mem0[r7 + 4<32>:word32]
	branch r7 != r6 l0040196E
	// succ:  l00401A9C l0040196E
l00401A9C:
	r5 = CONVERT(Mem0[r17 + 4<32>:uint16], uint16, word32)
	r4 = r9
	call is_ours (retsize: 0;)
	branch 0<32> == r4 l0040196E
	// succ:  l00401AA6 l0040196E
l00401AA6:
	r7 = CONVERT(Mem0[r16:byte], byte, word32)
	r7 = r7 + 0xFFFFFFFC<32>
	r7 = r7 & 0xFF<32>
	branch r7 <u 2<32> l00401ABA
	// succ:  l00401AB0 l00401ABA
l00401AB0:
	r4 = CONVERT(Mem0[r17 + 6<32>:uint16], uint16, word32)
	goto 0x00401B9C<p32>
	goto l00401B9C
	// succ:  l00401B9C
l00401ABA:
	r7 = Mem0[0x004544EC<p32>:word32]
	r7 = r7 & 0x11<32>
	branch 0<32> != r7 l0040196E
	// succ:  l00401AC8 l0040196E
l00401AC8:
	goto 0x00401E5C<p32>
	// succ:  l00401AC8_thunk_print_timestamp
l00401AC8_thunk_print_timestamp:
	call print_timestamp (retsize: 0;)
	return
	// succ:  ping4_parse_reply_exit
l00401AFA:
	r5 = 3<32>
	r4 = 0x004096AE<p32>
	goto 0x00401BA0<p32>
	goto l00401BA0
	// succ:  l00401BA0
l00401B04:
	branch __bit(r7, 8<32>) l004019E4
	// succ:  l00401B08 l004019E4
l00401B08:
	r6 = Mem0[0x00454514<p32>:word32]
	branch 0<32> != r6 l004019E4
	// succ:  l00401B12 l004019E4
l00401B12:
	branch __bit(r7, 0x13<32>) l00401B28
	// succ:  l00401B16 l00401B28
l00401B16:
	r5 = 0<32>
	r4 = sp + 0x18<32>
	goto 0x0040AF40<p32>
	// succ:  l00401B1A_thunk_gettimeofday
l00401B1A_thunk_gettimeofday:
	call gettimeofday (retsize: 0;)
	return
	// succ:  ping4_parse_reply_exit
l00401B28:
	r5 = 0x10<32>
	r4 = r18
	call pr_addr (retsize: 0;)
	r5 = r4
	r4 = 0x004096D0<p32>
	goto 0x00401B94<p32>
	// succ:  l00401B94
l00401B94:
	goto 0x004086C0<p32>
	// succ:  l00401B94_thunk_printf
l00401B94_thunk_printf:
	call printf (retsize: 0;)
	return
	// succ:  ping4_parse_reply_exit
l00401B9C:
	goto 0x00407630<p32>
	// succ:  l00401B9C_thunk_ntohs
l00401B9C_thunk_ntohs:
	call ntohs (retsize: 0;)
	return
	// succ:  ping4_parse_reply_exit
l00401BA0:
	goto 0x00400A04<p32>
	// succ:  l00401BA0_thunk_write_stdout
l00401BA0_thunk_write_stdout:
	call write_stdout (retsize: 0;)
	return
	// succ:  ping4_parse_reply_exit
ping4_parse_reply_exit:


// in_flight
// Return size: 0
define in_flight
in_flight_entry:
	sp = fp
	r25 = 0x401BB0<32>
	// succ:  l00401BB0
l00401BB0:
	r6 = 0x401<32>
	r7 = Mem0[0x004544E4<p32>:word32]
	r6 = CONVERT(Mem0[r6 + 0x518<32>:uint16], uint16, word32)
	r6 = r7 - r6
	r4 = r6 & 0xFFFF<32>
	branch __bit(r6, 0xF<32>) l00401BD6
	// succ:  l00401BC6 l00401BD6
l00401BC6:
	r4 = Mem0[0x004544DC<p32>:word32]
	r7 = r7 - r4
	r4 = Mem0[0x004544D0<p32>:word32]
	r4 = r7 - r4
	// succ:  l00401BD6
l00401BD6:
	return
	// succ:  in_flight_exit
in_flight_exit:


// advance_ntransmitted
// Return size: 0
define advance_ntransmitted
advance_ntransmitted_entry:
	sp = fp
	r25 = 0x401BD8<32>
	// succ:  l00401BD8
l00401BD8:
	r6 = Mem0[0x004544E4<p32>:word32]
	r5 = 0x401<32>
	r7 = r6 + 1<32>
	r4 = CONVERT(Mem0[r5 + 0x518<32>:uint16], uint16, word32)
	Mem0[0x004544E4<p32>:word32] = r7
	r7 = r7 & 0xFFFF<32>
	r7 = r7 - r4
	r4 = 0x7FFF<32>
	branch r4 >= r7 l00401C02
	// succ:  l00401BFC l00401C02
l00401BFC:
	r6 = r6 + 2<32>
	Mem0[r5 + 0x518<32>:byte] = SLICE(r6, byte, 0)
	// succ:  l00401C02
l00401C02:
	return
	// succ:  advance_ntransmitted_exit
advance_ntransmitted_exit:


// sigstatus
// Return size: 0
define sigstatus
sigstatus_entry:
	sp = fp
	r25 = 0x401C04<32>
	// succ:  l00401C04
l00401C04:
	r7 = 1<32>
	Mem0[0x00454500<p32>:word32] = r7
	return
	// succ:  sigstatus_exit
sigstatus_exit:


// update_interval
// Return size: 0
define update_interval
update_interval_entry:
	sp = fp
	r25 = 0x401C0E<32>
	// succ:  l00401C0E
l00401C0E:
	r6 = Mem0[0x004544F4<p32>:word32]
	branch r6 == 0<32> l00401C52
	// succ:  l00401C16 l00401C52
l00401C16:
	r5 = 8<32>
	lo = r7 / r6
	hi = r7 % r6
	// succ:  l00401C1C
l00401C1C:
	r6 = Mem0[0x004544F8<p32>:word32]
	r5 = 0x3E8<32>
	r7 = r7 + r6
	r7 = r7 + 0x1F4<32>
	lo = r6 / r7
	hi = r6 % r7
	r7 = Mem0[0x00454514<p32>:word32]
	Mem0[0x0043008C<p32>:word32] = r6
	branch r7 == 0<32> l00401C50
	// succ:  l00401C3E l00401C50
l00401C3E:
	r7 = 0xC7<32>
	branch r7 < r6 l00401C50
	// succ:  l00401C46 l00401C50
l00401C46:
	r7 = 0xC8<32>
	Mem0[0x0043008C<p32>:word32] = r7
	// succ:  l00401C50
l00401C50:
	return
	// succ:  update_interval_exit
l00401C52:
	r6 = 0x3E8<32>
	r7 = Mem0[0x0043008C<p32>:word32]
	r7 = r7 *s r6
	goto 0x00401C1C<p32>
	goto l00401C1C
	// succ:  l00401C1C
update_interval_exit:


// write_stdout
// Return size: 0
define write_stdout
write_stdout_entry:
	sp = fp
	r25 = 0x401C60<32>
	// succ:  l00401C60
l00401C60:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 16<i32>
	r16 = 0<32>
	r18 = r4
	r17 = r5
	r6 = r17 - r16
	r5 = r18 + r16
	r4 = 1<32>
	goto 0x0040B080<p32>
	// succ:  l00401C6C_thunk_write
l00401C6C_thunk_write:
	call write (retsize: 0;)
	return
	// succ:  write_stdout_exit
write_stdout_exit:


// set_signal
// Return size: 0
define set_signal
set_signal_entry:
	sp = fp
	r25 = 0x401C7C<32>
	// succ:  l00401C7C
l00401C7C:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 160<i32>
	r6 = 0x8C<32>
	r16 = r4
	r17 = r5
	r5 = 0<32>
	r4 = sp + 4<32>
	goto 0x0040A690<p32>
	// succ:  l00401C88_thunk_memset
l00401C88_thunk_memset:
	call memset (retsize: 0;)
	return
	// succ:  set_signal_exit
set_signal_exit:


// sigexit
// Return size: 0
define sigexit
sigexit_entry:
	sp = fp
	r25 = 0x401C98<32>
	// succ:  l00401C98
l00401C98:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r7 = 1<32>
	Mem0[0x004544B8<p32>:word32] = r7
	r7 = Mem0[0x004314C0<p32>:word32]
	branch r7 != 0<32> l00401CAC
	// succ:  l00401CAA l00401CAC
l00401CAA:
	ra = Mem0[sp + 12<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  sigexit_exit
l00401CAC:
	r5 = 0<32>
	r4 = 0x0042AFF9<p32>
	goto 0x00407E60<p32>
	// succ:  l00401CB2_thunk__longjmp
l00401CB2_thunk__longjmp:
	call _longjmp (retsize: 0;)
	return
	// succ:  sigexit_exit
sigexit_exit:


// limit_capabilities
// Return size: 0
define limit_capabilities
limit_capabilities_entry:
	sp = fp
	r25 = 0x401CB6<32>
	// succ:  l00401CB6
l00401CB6:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	goto 0x00401E82<p32>
	// succ:  l00401CB8_thunk_fn00401E82
l00401CB8_thunk_fn00401E82:
	call fn00401E82 (retsize: 0;)
	return
	// succ:  limit_capabilities_exit
limit_capabilities_exit:


// modify_capability
// Return size: 0
define modify_capability
modify_capability_entry:
	sp = fp
	r25 = 0x401CE2<32>
	// succ:  l00401CE2
l00401CE2:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r7 = Mem0[0x004544B4<p32>:word32]
	branch r4 != 0<32> l00401CF0
	// succ:  l00401CEC l00401CF0
l00401CEC:
	goto 0x00401E82<p32>
	// succ:  l00401CEC_thunk_fn00401E82
l00401CEC_thunk_fn00401E82:
	call fn00401E82 (retsize: 0;)
	return
	// succ:  modify_capability_exit
l00401CF0:
	r4 = r7
	call seteuid (retsize: 0;)
	branch r4 != 0<32> l00401CF8
	// succ:  l00401CF6 l00401CF8
l00401CF6:
	ra = Mem0[sp + 12<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  modify_capability_exit
l00401CF8:
	r4 = 0x004097C2<p32>
	goto 0x00401E7A<p32>
	// succ:  l00401E7A
l00401E7A:
	goto 0x00408630<p32>
	// succ:  l00401E7A_thunk_perror
l00401E7A_thunk_perror:
	call perror (retsize: 0;)
	return
	// succ:  modify_capability_exit
modify_capability_exit:


// drop_capabilities
// Return size: 0
define drop_capabilities
drop_capabilities_entry:
	sp = fp
	r25 = 0x401D02<32>
	// succ:  l00401D02
l00401D02:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	goto 0x00401E82<p32>
	// succ:  l00401D04_thunk_fn00401E82
l00401D04_thunk_fn00401E82:
	call fn00401E82 (retsize: 0;)
	return
	// succ:  drop_capabilities_exit
drop_capabilities_exit:


// fill
// Return size: 0
define fill
fill_entry:
	sp = fp
	r25 = 0x401D18<32>
	// succ:  l00401D18
l00401D18:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	sp = sp - 144<i32>
	r20 = r4
	r18 = r5
	r19 = r6
	r16 = r20
	r4 = CONVERT(Mem0[r16:byte], byte, word32)
	branch r4 != 0<32> l00401D92
	// succ:  l00401D24 l00401D92
l00401D24:
	r7 = sp + 0x6C<32>
	r17 = sp + 0x30<32>
	Mem0[sp + 0x24<32>:word32] = r7
	r7 = sp + 0x68<32>
	Mem0[sp + 0x20<32>:word32] = r7
	r7 = sp + 0x64<32>
	Mem0[sp + 0x1C<32>:word32] = r7
	r7 = sp + 0x60<32>
	Mem0[sp + 0x18<32>:word32] = r7
	r7 = sp + 0x5C<32>
	Mem0[sp + 0x14<32>:word32] = r7
	r7 = sp + 0x58<32>
	Mem0[sp + 0x10<32>:word32] = r7
	r7 = sp + 0x54<32>
	Mem0[sp + 0xC<32>:word32] = r7
	r7 = sp + 0x50<32>
	Mem0[sp + 8<32>:word32] = r7
	r7 = sp + 0x4C<32>
	Mem0[sp + 4<32>:word32] = r7
	r7 = sp + 0x48<32>
	r6 = r17
	Mem0[sp:word32] = r7
	r11 = sp + 0x44<32>
	r10 = sp + 0x40<32>
	r9 = sp + 0x3C<32>
	r8 = sp + 0x38<32>
	r5 = 0x00409814<p32>
	r7 = sp + 0x34<32>
	r4 = r20
	call __isoc99_sscanf (retsize: 0;)
	r6 = 0<32>
	r16 = r4
	branch 0<32> < r4 l00401DC0
	// succ:  l00401D72 l00401DC0
l00401D72:
	r7 = Mem0[0x004544EC<p32>:word32]
	branch !__bit(r7, 4<32>) l00401D90
	// succ:  l00401D7C l00401D90
l00401D7C:
	r4 = 0x0040983C<p32>
	r17 = r18
	goto 0x0040212A<p32>
	goto l0040212A
	// succ:  l0040212A
l00401D90:
	ra = Mem0[sp + 140<i32>:word32]
	r16 = Mem0[sp + 136<i32>:word32]
	r17 = Mem0[sp + 132<i32>:word32]
	r18 = Mem0[sp + 128<i32>:word32]
	r19 = Mem0[sp + 124<i32>:word32]
	r20 = Mem0[sp + 120<i32>:word32]
	sp = sp + 144<i32>
	return
	// succ:  fill_exit
l00401D92:
	goto 0x00404850<p32>
	// succ:  l00401D92_thunk_isxdigit
l00401D92_thunk_isxdigit:
	call isxdigit (retsize: 0;)
	return
	// succ:  fill_exit
l00401DAC:
	r7 = 0<32>
	// succ:  l00401DAE
l00401DAE:
	r5 = r7 + r6
	r4 = Mem0[r17 + r7 * 4<32>:word32]
	r5 = r18 + r5
	r7 = r7 + 1<32>
	Mem0[r5 + 8<32>:byte] = SLICE(r4, byte, 0)
	branch r7 != r16 l00401DAE
	// succ:  l00401DBE l00401DAE
l00401DBE:
	r6 = r6 + r16
	// succ:  l00401DC0
l00401DC0:
	r7 = r19 + 0xFFFFFFF8<32>
	r7 = r7 - r16
	branch r7 >=u r6 l00401DAC
	// succ:  l00401DCA l00401DAC
l00401DCA:
	goto 0x00401D72<p32>
	goto l00401D72
	// succ:  l00401D72
l0040212A:
	goto 0x004086C0<p32>
	// succ:  l0040212A_thunk_printf
l0040212A_thunk_printf:
	call printf (retsize: 0;)
	return
	// succ:  fill_exit
fill_exit:


// __schedule_exit
// Return size: 0
define __schedule_exit
__schedule_exit_entry:
	sp = fp
	r25 = 0x401DDA<32>
	// succ:  l00401DDA
l00401DDA:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 32<i32>
	r7 = Mem0[0x00454548<p32>:word32]
	r16 = r4
	branch r7 != 0<32> l00401E4A
	// succ:  l00401DE6 l00401E4A
l00401DE6:
	r7 = Mem0[0x004544DC<p32>:word32]
	branch r7 == 0<32> l00401E4E
	// succ:  l00401DEE l00401E4E
l00401DEE:
	r5 = 0x3E8<32>
	r7 = Mem0[0x0043008C<p32>:word32]
	r7 = r7 *s r5
	r6 = Mem0[0x0045450C<p32>:word32]
	r6 = r6 << 1<32>
	Mem0[0x00454548<p32>:word32] = r6
	branch r6 >=u r7 l00401E12
	// succ:  l00401E0C l00401E12
l00401E0C:
	Mem0[0x00454548<p32>:word32] = r7
	// succ:  l00401E12
l00401E12:
	r7 = Mem0[0x00454548<p32>:word32]
	r5 = 0x3E8<32>
	lo = r6 /u r7
	hi = r6 % r7
	branch r16 < 0<32> l00401E28
	// succ:  l00401E24 l00401E28
l00401E24:
	branch r16 >=u r6 l00401E2A
	// succ:  l00401E28 l00401E2A
l00401E28:
	r16 = r6
	// succ:  l00401E2A
l00401E2A:
	r6 = 0xF4240<32>
	r4 = 0<32>
	lo = r5 /u r7
	hi = r5 % r7
	Mem0[sp + 8<32>:word32] = r5
	r5 = r7 % r6
	r6 = 0<32>
	Mem0[sp + 0xC<32>:word32] = r5
	r5 = sp
	Mem0[sp:word32] = 0<32>
	Mem0[sp + 4<32>:word32] = 0<32>
	goto 0x00407F10<p32>
	// succ:  l00401E46_thunk_setitimer
l00401E46_thunk_setitimer:
	call setitimer (retsize: 0;)
	return
	// succ:  __schedule_exit_exit
l00401E4A:
	r4 = r16
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  __schedule_exit_exit
l00401E4E:
	r6 = 0x3E8<32>
	r7 = Mem0[0x00430084<p32>:word32]
	r7 = r7 *s r6
	goto 0x00401E0C<p32>
	goto l00401E0C
	// succ:  l00401E0C
__schedule_exit_exit:


// print_timestamp
// Return size: 0
define print_timestamp
print_timestamp_entry:
	sp = fp
	r25 = 0x401E5C<32>
	// succ:  l00401E5C
l00401E5C:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 32<i32>
	r7 = Mem0[0x004544EC<p32>:word32]
	branch __bit(r7, 0x13<32>) l00401E78
	// succ:  l00401E68 l00401E78
l00401E68:
	r5 = 0<32>
	r4 = sp + 8<32>
	goto 0x004021B0<p32>
	// succ:  l00401E6C_thunk_fn004021B0
l00401E6C_thunk_fn004021B0:
	call fn004021B0 (retsize: 0;)
	return
	// succ:  print_timestamp_exit
l00401E78:
	ra = Mem0[sp + 28<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  print_timestamp_exit
print_timestamp_exit:


// fn00401E82
// Return size: 0
define fn00401E82
fn00401E82_entry:
	sp = fp
	r25 = 0x401E82<32>
	// succ:  l00401E82
l00401E82:
	goto 0x0040AFC0<p32>
	// succ:  l00401E82_thunk_getuid
l00401E82_thunk_getuid:
	call getuid (retsize: 0;)
	return
	// succ:  fn00401E82_exit
fn00401E82_exit:


// pinger
// Return size: 0
define pinger
pinger_entry:
	sp = fp
	r25 = 0x401E86<32>
	// succ:  l00401E86
l00401E86:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	sp = sp - 48<i32>
	r7 = Mem0[0x004544B8<p32>:word32]
	r16 = r4
	r17 = r5
	r4 = 0x3E8<32>
	branch 0<32> != r7 l004020FC
	// succ:  l00401E98 l004020FC
l00401E98:
	r7 = Mem0[0x004544D8<p32>:word32]
	branch r7 == 0<32> l00401EB4
	// succ:  l00401EA0 l00401EB4
l00401EA0:
	r6 = Mem0[0x004544E4<p32>:word32]
	branch r6 < r7 l00401EB4
	// succ:  l00401EAA l00401EB4
l00401EAA:
	r7 = Mem0[0x004314C8<p32>:word32]
	branch 0<32> == r7 l004020FC
	// succ:  l00401EB4 l004020FC
l00401EB4:
	r19 = 0x401<32>
	r5 = 0<32>
	r7 = Mem0[r19 + 0x490<32>:word32]
	r18 = r19
	branch 0<32> != r7 l00401F8C
	// succ:  l00401EC4 l00401F8C
l00401EC4:
	r4 = 0x0042B1AC<p32>
	goto 0x004021B0<p32>
	// succ:  l00401EC8_thunk_fn004021B0
l00401EC8_thunk_fn004021B0:
	call fn004021B0 (retsize: 0;)
	return
	// succ:  pinger_exit
l00401F8C:
	r4 = sp + 8<32>
	goto 0x004021B0<p32>
	// succ:  l00401F8E_thunk_fn004021B0
l00401F8E_thunk_fn004021B0:
	call fn004021B0 (retsize: 0;)
	return
	// succ:  pinger_exit
l004020FC:
	ra = Mem0[sp + 44<i32>:word32]
	r16 = Mem0[sp + 40<i32>:word32]
	r17 = Mem0[sp + 36<i32>:word32]
	r18 = Mem0[sp + 32<i32>:word32]
	r19 = Mem0[sp + 28<i32>:word32]
	sp = sp + 48<i32>
	return
	// succ:  pinger_exit
pinger_exit:


// sock_setbufs
// Return size: 0
define sock_setbufs
sock_setbufs_entry:
	sp = fp
	r25 = 0x40212E<32>
	// succ:  l0040212E
l0040212E:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 32<i32>
	r7 = 4<32>
	Mem0[sp + 0xC<32>:word32] = r7
	r7 = Mem0[0x004544FC<p32>:word32]
	r17 = r4
	r16 = r5
	branch r7 != 0<32> l00402144
	// succ:  l0040213E l00402144
l0040213E:
	Mem0[0x004544FC<p32>:word32] = r16
	// succ:  l00402144
l00402144:
	r4 = Mem0[r17:word32]
	r7 = 0x0042B323<p32>
	r8 = 4<32>
	r6 = 0x1001<32>
	r5 = 0xFFFF<32>
	goto 0x004023EE<p32>
	// succ:  l00402156_thunk_fn004023EE
l00402156_thunk_fn004023EE:
	call fn004023EE (retsize: 0;)
	return
	// succ:  sock_setbufs_exit
sock_setbufs_exit:


// fn004021B0
// Return size: 0
define fn004021B0
fn004021B0_entry:
	sp = fp
	r25 = 0x4021B0<32>
	// succ:  l004021B0
l004021B0:
	goto 0x0040AF40<p32>
	// succ:  l004021B0_thunk_gettimeofday
l004021B0_thunk_gettimeofday:
	call gettimeofday (retsize: 0;)
	return
	// succ:  fn004021B0_exit
fn004021B0_exit:


// setup
// Return size: 0
define setup
setup_entry:
	sp = fp
	r25 = 0x4021B4<32>
	goto l004021B4
	// succ:  l004021B4
l00402126:
	goto 0x004083F0<p32>
	// succ:  l00402126_thunk_fputs_unlocked
l00402126_thunk_fputs_unlocked:
	call fputs_unlocked (retsize: 0;)
	return
	// succ:  setup_exit
l004021B4:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 176<i32>
	r7 = Mem0[0x004544EC<p32>:word32]
	r16 = r4
	r6 = r7 & 3<32>
	branch r6 != 1<32> l004021CA
	// succ:  l004021C4 l004021CA
l004021C4:
	Mem0[0x0043008C<p32>:word32] = r0
	// succ:  l004021CA
l004021CA:
	r5 = Mem0[0x00454514<p32>:word32]
	r6 = Mem0[0x0043008C<p32>:word32]
	branch r5 == 0<32> l004021F4
	// succ:  l004021D8 l004021F4
l004021D8:
	r5 = 0xC7<32>
	branch r5 < r6 l004021F4
	// succ:  l004021E0 l004021F4
l004021E0:
	r6 = 0xC8<32>
	r5 = 0x00409ABA<p32>
	r4 = Mem0[0x00412EF0<p32>:word32]
	goto 0x004023F2<p32>
	// succ:  l004021EE_thunk_fn004023F2
l004021EE_thunk_fn004023F2:
	call fn004023F2 (retsize: 0;)
	return
	// succ:  setup_exit
l004021F4:
	r4 = Mem0[0x00430088<p32>:word32]
	r17 = 0x7FFFFFFF<32>
	lo = r5 / r17
	hi = r5 % r17
	branch r6 < r5 l00402216
	// succ:  l00402208 l00402216
l00402208:
	r5 = Mem0[0x00412EF0<p32>:word32]
	r4 = 0x00409AEF<p32>
	goto 0x00402126<p32>
	goto l00402126
	// succ:  l00402126
l00402216:
	r6 = 1<32>
	Mem0[sp + 4<32>:word32] = r6
	branch __bit(r7, 6<32>) l0040222E
	// succ:  l0040221E l0040222E
l0040221E:
	r8 = 4<32>
	r4 = Mem0[r16:word32]
	r7 = sp + r8
	r5 = 0xFFFF<32>
	goto 0x004023EE<p32>
	// succ:  l0040222C_thunk_fn004023EE
l0040222C_thunk_fn004023EE:
	call fn004023EE (retsize: 0;)
	return
	// succ:  setup_exit
l0040222E:
	r7 = Mem0[0x004544EC<p32>:word32]
	branch __bit(r7, 7<32>) l0040224A
	// succ:  l00402238 l0040224A
l00402238:
	r8 = 4<32>
	r4 = Mem0[r16:word32]
	r7 = sp + r8
	r6 = 0x10<32>
	r5 = 0xFFFF<32>
	goto 0x004023EE<p32>
	// succ:  l00402248_thunk_fn004023EE
l00402248_thunk_fn004023EE:
	call fn004023EE (retsize: 0;)
	return
	// succ:  setup_exit
l0040224A:
	r7 = Mem0[0x004544EC<p32>:word32]
	branch !__bit(r7, 0xC<32>) l00402276
	// succ:  l00402254 l00402276
l00402254:
	r7 = 1<32>
	r4 = Mem0[r16:word32]
	Mem0[sp + 0x20<32>:word32] = r7
	r8 = 4<32>
	r6 = 0x1D<32>
	r5 = 0xFFFF<32>
	r7 = sp + 0x20<32>
	goto 0x004023EE<p32>
	// succ:  l00402266_thunk_fn004023EE
l00402266_thunk_fn004023EE:
	call fn004023EE (retsize: 0;)
	return
	// succ:  setup_exit
l00402276:
	r7 = Mem0[0x004544EC<p32>:word32]
	branch __bit(r7, 0x12<32>) l004022B6
	// succ:  l00402280 l004022B6
l00402280:
	r4 = 1<32>
	goto 0x00401CE2<p32>
	// succ:  l00402282_thunk_modify_capability
l00402282_thunk_modify_capability:
	call modify_capability (retsize: 0;)
	return
	// succ:  setup_exit
l004022B6:
	r7 = 1<32>
	r6 = Mem0[0x0043008C<p32>:word32]
	Mem0[sp + 8<32>:word32] = r7
	r7 = 0x3E7<32>
	Mem0[sp + 0xC<32>:word32] = 0<32>
	branch r7 < r6 l004022E0
	// succ:  l004022CA l004022E0
l004022CA:
	r7 = CONVERT(r6 < 0xA<32>, bool, word32)
	r5 = 0xA<32>
	branch r7 != 0<32> l004022D4
	// succ:  l004022D0_1 l004022D4
l004022D0_1:
	r5 = r6
	// succ:  l004022D4
l004022D4:
	r6 = 0x3E8<32>
	r7 = r5 *s r6
	Mem0[sp + 8<32>:word32] = 0<32>
	Mem0[sp + 0xC<32>:word32] = r7
	// succ:  l004022E0
l004022E0:
	r8 = 8<32>
	r4 = Mem0[r16:word32]
	r7 = sp + r8
	r6 = 0x1005<32>
	r5 = 0xFFFF<32>
	goto 0x004023EE<p32>
	// succ:  l004022F2_thunk_fn004023EE
l004022F2_thunk_fn004023EE:
	call fn004023EE (retsize: 0;)
	return
	// succ:  setup_exit
setup_exit:


// fn004023EE
// Return size: 0
define fn004023EE
fn004023EE_entry:
	sp = fp
	r25 = 0x4023EE<32>
	// succ:  l004023EE
l004023EE:
	goto 0x00407D60<p32>
	// succ:  l004023EE_thunk_setsockopt
l004023EE_thunk_setsockopt:
	call setsockopt (retsize: 0;)
	return
	// succ:  fn004023EE_exit
fn004023EE_exit:


// fn004023F2
// Return size: 0
define fn004023F2
fn004023F2_entry:
	sp = fp
	r25 = 0x4023F2<32>
	// succ:  l004023F2
l004023F2:
	goto 0x00408340<p32>
	// succ:  l004023F2_thunk_fprintf
l004023F2_thunk_fprintf:
	call fprintf (retsize: 0;)
	return
	// succ:  fn004023F2_exit
fn004023F2_exit:


// gather_statistics
// Return size: 0
define gather_statistics
gather_statistics_entry:
	sp = fp
	r25 = 0x4023F6<32>
	// succ:  l004023F6
l004023F6:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 64<i32>
	r19 = r6
	r16 = r7
	r7 = Mem0[0x004544DC<p32>:word32]
	r7 = r7 + 1<32>
	r23 = r4
	r21 = r8
	r18 = r9
	r17 = r10
	r30 = r11
	r20 = r4 + r5
	Mem0[0x004544DC<p32>:word32] = r7
	branch 0<32> != r9 l0040245C
	// succ:  l0040241A l0040245C
l0040241A:
	r7 = Mem0[0x004544E4<p32>:word32]
	r5 = r7 - r16
	r6 = r5 & 0xFFFF<32>
	branch !__bit(r5, 0xF<32>) l0040245C
	// succ:  l00402428 l0040245C
l00402428:
	r5 = Mem0[0x00430078<p32>:word32]
	branch r6 < r5 l0040243A
	// succ:  l00402432 l0040243A
l00402432:
	r6 = r6 + 1<32>
	Mem0[0x00430078<p32>:word32] = r6
	// succ:  l0040243A
l0040243A:
	r6 = 0x402<32>
	r4 = CONVERT(Mem0[r6 + 0x518<32>:uint16], uint16, word32)
	r5 = r16 - r4
	v21 = SLICE(r5, word16, 0)
	r5 = CONVERT(v21, word16, int32)
	branch 0<32> < r5 l00402458
	// succ:  l0040244C l00402458
l0040244C:
	r7 = r7 & 0xFFFF<32>
	r5 = 0x7FFF<32>
	r7 = r7 - r4
	branch r5 >= r7 l0040245C
	// succ:  l00402458 l0040245C
l00402458:
	Mem0[r6 + 0x518<32>:byte] = SLICE(r16, byte, 0)
	// succ:  l0040245C
l0040245C:
	r7 = Mem0[0x00454508<p32>:word32]
	r22 = 0<32>
	branch 0<32> == r7 l004025DC
	// succ:  l00402468 l004025DC
l00402468:
	branch r19 <u 0x10<32> l004025DC
	// succ:  l0040246C l004025DC
l0040246C:
	r6 = 8<32>
	r4 = sp + r6
	r5 = r20
	call memcpy (retsize: 0;)
	goto 0x004024C2<p32>
	goto l004024C2
	// succ:  l004024C2
l00402478:
	r8 = Mem0[r17:word32]
	r17 = Mem0[sp + 8<32>:word32]
	r8 = r8 - r7
	r7 = 0xF4240<32>
	Mem0[r17:word32] = r8
	r8 = r8 *s r7
	r7 = Mem0[r17 + 4<32>:word32]
	r22 = r8 + r7
	branch r22 >= 0<32> l004024E0
	// succ:  l00402494 l004024E0
l00402494:
	r6 = r22
	r5 = 0x00409C77<p32>
	r4 = Mem0[0x00412EF0<p32>:word32]
	goto 0x004023F2<p32>
	// succ:  l004024A0_thunk_fn004023F2
l004024A0_thunk_fn004023F2:
	call fn004023F2 (retsize: 0;)
	return
	// succ:  gather_statistics_exit
l004024C2:
	r7 = Mem0[r17 + 4<32>:word32]
	r17 = Mem0[sp + 0xC<32>:word32]
	r7 = r7 - r6
	Mem0[sp + 0x44<32>:word32] = r7
	branch r7 >= 0<32> l00402478
	// succ:  l004024CE l00402478
l004024CE:
	r6 = Mem0[r17:word32]
	r7 = r7 + 0xF4240<32>
	r6 = r6 + 0xFFFFFFFF<32>
	Mem0[r17 + 0<i32>:word32] = r6
	Mem0[r17 + 4<i32>:word32] = r7
	goto 0x00402478<p32>
	goto l00402478
	// succ:  l00402478
l004024E0:
	branch 0<32> != r18 l004025DE
	// succ:  l004024E4 l004025DE
l004024E4:
	r6 = 0x402<32>
	r5 = r22 >> 0x1F<32>
	r7 = Mem0[r6 + 0x480<32>:word32]
	r4 = Mem0[r6 + 0x484<32>:word32]
	r17 = r7 + r22
	r5 = r4 + r5
	r7 = CONVERT(r17 <u r7, bool, word32)
	r7 = r7 + r5
	Mem0[r6 + 0x480<32>:byte] = SLICE(r17, byte, 0)
	Mem0[r6 + 0x484<32>:byte] = SLICE(r7, byte, 0)
	r5 = 0x402<32>
	r6 = r22 *s r22
	r4 = SLICE(r22 *s r22, word32, 32)
	r7 = Mem0[r5 + 0x488<32>:word32]
	r17 = Mem0[r5 + 0x48C<32>:word32]
	r6 = r7 + r6
	r7 = CONVERT(r6 <u r7, bool, word32)
	r4 = r17 + r4
	r7 = r7 + r4
	Mem0[r5 + 0x488<32>:byte] = SLICE(r6, byte, 0)
	Mem0[r5 + 0x48C<32>:byte] = SLICE(r7, byte, 0)
	r7 = Mem0[0x0043007C<p32>:word32]
	branch r22 >= r7 l0040253E
	// succ:  l00402538 l0040253E
l00402538:
	Mem0[0x0043007C<p32>:word32] = r22
	// succ:  l0040253E
l0040253E:
	r7 = Mem0[0x0045450C<p32>:word32]
	branch r7 >= r22 l0040254E
	// succ:  l00402548 l0040254E
l00402548:
	Mem0[0x0045450C<p32>:word32] = r22
	// succ:  l0040254E
l0040254E:
	r6 = Mem0[0x004544F4<p32>:word32]
	r7 = r22 << 3<32>
	branch r6 == 0<32> l00402566
	// succ:  l0040255A l00402566
l0040255A:
	r5 = 8<32>
	lo = r7 / r6
	hi = r7 % r6
	r7 = r22 - r7
	r7 = r7 + r6
	// succ:  l00402566
l00402566:
	Mem0[0x004544F4<p32>:word32] = r7
	r7 = Mem0[0x004544EC<p32>:word32]
	branch __bit(r7, 0xE<32>) l0040257A
	// succ:  l00402576 l0040257A
l00402576:
	goto 0x00401C0E<p32>
	// succ:  l00402576_thunk_update_interval
l00402576_thunk_update_interval:
	call update_interval (retsize: 0;)
	return
	// succ:  gather_statistics_exit
l0040257A:
	r7 = r16 >>u 5<32>
	r6 = 0x0042A460<p32>
	r7 = r6 + (r7 << 2<8>)
	r17 = 1<32>
	r16 = r17 << r16
	r6 = Mem0[r7:word32]
	r5 = r6 & r16
	branch r5 == 0<32> l004025FE
	// succ:  l00402592 l004025FE
l00402592:
	r7 = Mem0[0x004544E0<p32>:word32]
	r7 = r7 + r17
	Mem0[0x004544E0<p32>:word32] = r7
	r7 = Mem0[0x004544DC<p32>:word32]
	r7 = r7 + 0xFFFFFFFF<32>
	Mem0[0x004544DC<p32>:word32] = r7
	// succ:  l004025AE
l004025AE:
	r7 = Mem0[0x00430080<p32>:word32]
	r16 = 1<32>
	Mem0[0x004314C4<p32>:word32] = r7
	r7 = Mem0[0x004544EC<p32>:word32]
	branch !__bit(r7, 4<32>) l004025D8
	// succ:  l004025C6 l004025D8
l004025C6:
	r16 = r16 & r7
	branch r16 == 0<32> l0040260C
	// succ:  l004025CA l0040260C
l004025CA:
	branch r18 != 0<32> l00402604
	// succ:  l004025CC l00402604
l004025CC:
	r5 = 3<32>
	r4 = 0x00409D35<p32>
	// succ:  l004025D2
l004025D2:
	goto 0x00401C60<p32>
	// succ:  l004025D2_thunk_write_stdout
l004025D2_thunk_write_stdout:
	call write_stdout (retsize: 0;)
	return
	// succ:  gather_statistics_exit
l004025D8:
	r4 = r16
	r30 = Mem0[sp + 60<i32>:word32]
	ra = Mem0[sp + 56<i32>:word32]
	r16 = Mem0[sp + 52<i32>:word32]
	r17 = Mem0[sp + 48<i32>:word32]
	r18 = Mem0[sp + 44<i32>:word32]
	r19 = Mem0[sp + 40<i32>:word32]
	r20 = Mem0[sp + 36<i32>:word32]
	r21 = Mem0[sp + 32<i32>:word32]
	r22 = Mem0[sp + 28<i32>:word32]
	r23 = Mem0[sp + 24<i32>:word32]
	sp = sp + 64<i32>
	return
	// succ:  gather_statistics_exit
l004025DC:
	branch r18 == 0<32> l0040257A
	// succ:  l004025DE l0040257A
l004025DE:
	r7 = Mem0[0x004544CC<p32>:word32]
	r7 = r7 + 1<32>
	Mem0[0x004544CC<p32>:word32] = r7
	r7 = Mem0[0x004544DC<p32>:word32]
	r7 = r7 + 0xFFFFFFFF<32>
	Mem0[0x004544DC<p32>:word32] = r7
	// succ:  l004025FA
l004025FA:
	r17 = 0<32>
	goto 0x004025AE<p32>
	goto l004025AE
	// succ:  l004025AE
l004025FE:
	r16 = r16 | r6
	Mem0[r7:word32] = r16
	goto 0x004025FA<p32>
	goto l004025FA
	// succ:  l004025FA
l00402604:
	r5 = 2<32>
	r4 = 0x00409D53<p32>
	goto 0x004025D2<p32>
	goto l004025D2
	// succ:  l004025D2
l0040260C:
	goto 0x00401E5C<p32>
	// succ:  l0040260C_thunk_print_timestamp
l0040260C_thunk_print_timestamp:
	call print_timestamp (retsize: 0;)
	return
	// succ:  gather_statistics_exit
gather_statistics_exit:


// finish
// Return size: 0
define finish
finish_entry:
	sp = fp
	r25 = 0x402720<32>
	// succ:  l00402720
l00402720:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 80<i32>
	r7 = 0x402<32>
	r16 = Mem0[r7 + 0x490<32>:word32]
	r7 = 0x0042B5DF<p32>
	r20 = Mem0[r7 + 1<32>:word32]
	r7 = 0x0042B5E6<p32>
	r4 = Mem0[r7 + 4<32>:word32]
	r20 = r20 - r4
	branch r20 >= 0<32> l00402746
	// succ:  l0040273E l00402746
l0040273E:
	r16 = r16 + 0xFFFFFFFF<32>
	r20 = r20 + 0xF4240<32>
	// succ:  l00402746
l00402746:
	r7 = 0x402<32>
	r4 = 0xA<32>
	r5 = Mem0[r7 + 0x498<32>:word32]
	r16 = r16 - r5
	goto 0x00402A96<p32>
	// succ:  l00402A96
l00402A96:
	goto 0x00408770<p32>
	// succ:  l00402A96_thunk_putchar
l00402A96_thunk_putchar:
	call putchar (retsize: 0;)
	return
	// succ:  finish_exit
finish_exit:


// status
// Return size: 0
define status
status_entry:
	sp = fp
	r25 = 0x4029CA<32>
	// succ:  l004029CA
l004029CA:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 48<i32>
	r16 = Mem0[0x004544E4<p32>:word32]
	r4 = 0<32>
	Mem0[0x00454500<p32>:word32] = r0
	r17 = Mem0[0x004544DC<p32>:word32]
	branch r16 == 0<32> l004029F6
	// succ:  l004029E2 l004029F6
l004029E2:
	r8 = r16 - r17
	r4 = 0x64<32>
	r5 = SLICE(r8 *s r4, word32, 32)
	r6 = r16
	r4 = r4 *s r8
	r7 = r16 >> 0x1F<32>
	goto 0x00402A9A<p32>
	goto l00402A9A
	// succ:  l00402A9A
l004029F6:
	r7 = Mem0[0x00412EF0<p32>:word32]
	r8 = r4
	Mem0[sp + 0x1C<32>:word32] = r7
	r6 = r17
	r7 = r16
	r17 = Mem0[sp + 0x1C<32>:word32]
	r5 = 0x0040A04A<p32>
	goto 0x00408340<p32>
	// succ:  l00402A08_thunk_fprintf
l00402A08_thunk_fprintf:
	call fprintf (retsize: 0;)
	return
	// succ:  status_exit
l00402A9A:
	goto 0x00403CB0<p32>
	// succ:  l00402A9A_thunk___divdi3
l00402A9A_thunk___divdi3:
	call __divdi3 (retsize: 0;)
	return
	// succ:  status_exit
status_exit:


// main_loop
// Return size: 0
define main_loop
main_loop_entry:
	sp = fp
	r25 = 0x402A9E<32>
	// succ:  l00402A9E
l00402A9E:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	sp = sp - 32<i32>
	sp = sp + 0xFFFFEF50<32>
	r17 = r4
	r16 = r5
	r18 = r7
	Mem0[sp + 4<32>:word32] = r6
	r7 = Mem0[0x004544B8<p32>:word32]
	branch 0<32> != r7 l00402C92
	// succ:  l00402AB6 l00402C92
l00402AB6:
	r6 = Mem0[0x004544D8<p32>:word32]
	branch r6 == 0<32> l00402AD0
	// succ:  l00402ABE l00402AD0
l00402ABE:
	r5 = Mem0[0x004544D0<p32>:word32]
	r7 = Mem0[0x004544DC<p32>:word32]
	r7 = r7 + r5
	branch r7 >= r6 l00402C92
	// succ:  l00402AD0 l00402C92
l00402AD0:
	r7 = Mem0[0x004314C8<p32>:word32]
	branch r7 == 0<32> l00402AE2
	// succ:  l00402AD8 l00402AE2
l00402AD8:
	r7 = Mem0[0x004544D0<p32>:word32]
	branch 0<32> != r7 l00402C92
	// succ:  l00402AE2 l00402C92
l00402AE2:
	r7 = Mem0[0x00454500<p32>:word32]
	branch r7 == 0<32> l00402AEC
	// succ:  l00402AEA l00402AEC
l00402AEA:
	goto 0x004029CA<p32>
	// succ:  l00402AEA_thunk_status
l00402AEA_thunk_status:
	call status (retsize: 0;)
	return
	// succ:  main_loop_exit
l00402AEC:
	r4 = r17
	r5 = r16
	goto 0x00401E86<p32>
	// succ:  l00402AEE_thunk_pinger
l00402AEE_thunk_pinger:
	call pinger (retsize: 0;)
	return
	// succ:  main_loop_exit
l00402C92:
	goto 0x00402720<p32>
	// succ:  l00402C92_thunk_finish
l00402C92_thunk_finish:
	call finish (retsize: 0;)
	return
	// succ:  main_loop_exit
main_loop_exit:


// is_ours
// Return size: 0
define is_ours
is_ours_entry:
	sp = fp
	r25 = 0x402CD6<32>
	// succ:  l00402CD6
l00402CD6:
	r7 = Mem0[r4 + 4<32>:word32]
	r4 = 1<32>
	branch r4 == r7 l00402CE8
	// succ:  l00402CDC l00402CE8
l00402CDC:
	r4 = Mem0[0x004544C4<p32>:word32]
	r4 = r4 ^ r5
	r4 = CONVERT(r4 <u 1<32>, bool, word32)
	// succ:  l00402CE8
l00402CE8:
	return
	// succ:  is_ours_exit
is_ours_exit:


// niquery_option_help_handler
// Return size: 0
define niquery_option_help_handler
niquery_option_help_handler_entry:
	sp = fp
	r25 = 0x402D00<32>
	// succ:  l00402D00
l00402D00:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r5 = Mem0[0x00412EF0<p32>:word32]
	r4 = 0x0040A202<p32>
	goto 0x00403098<p32>
	// succ:  l00402D0C_thunk_fn00403098
l00402D0C_thunk_fn00403098:
	call fn00403098 (retsize: 0;)
	return
	// succ:  niquery_option_help_handler_exit
niquery_option_help_handler_exit:


// niquery_option_subject_name_handler
// Return size: 0
define niquery_option_subject_name_handler
niquery_option_subject_name_handler_entry:
	sp = fp
	r25 = 0x402D12<32>
	// succ:  l00402D12
l00402D12:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r5 = Mem0[0x00412EF0<p32>:word32]
	r4 = 0x0040A27D<p32>
	goto 0x00403098<p32>
	// succ:  l00402D1E_thunk_fn00403098
l00402D1E_thunk_fn00403098:
	call fn00403098 (retsize: 0;)
	return
	// succ:  niquery_option_subject_name_handler_exit
niquery_option_subject_name_handler_exit:


// niquery_set_qtype
// Return size: 0
define niquery_set_qtype
niquery_set_qtype_entry:
	sp = fp
	r25 = 0x402D24<32>
	// succ:  l00402D24
l00402D24:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r7 = Mem0[0x00430214<p32>:word32]
	branch r7 < 0<32> l00402D3E
	// succ:  l00402D30 l00402D3E
l00402D30:
	branch r4 == r7 l00402D3E
	// succ:  l00402D32 l00402D3E
l00402D32:
	r4 = 0x0040A2A1<p32>
	goto 0x00408780<p32>
	// succ:  l00402D36_thunk_puts
l00402D36_thunk_puts:
	call puts (retsize: 0;)
	return
	// succ:  niquery_set_qtype_exit
l00402D3E:
	Mem0[0x00430214<p32>:word32] = r4
	r4 = 0<32>
	ra = Mem0[sp + 12<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  niquery_set_qtype_exit
niquery_set_qtype_exit:


// niquery_option_ipv4_flag_handler
// Return size: 0
define niquery_option_ipv4_flag_handler
niquery_option_ipv4_flag_handler_entry:
	sp = fp
	r25 = 0x402D48<32>
	// succ:  l00402D48
l00402D48:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r16 = r4
	r4 = 4<32>
	goto 0x00402D24<p32>
	// succ:  l00402D4E_thunk_niquery_set_qtype
l00402D4E_thunk_niquery_set_qtype:
	call niquery_set_qtype (retsize: 0;)
	return
	// succ:  niquery_option_ipv4_flag_handler_exit
niquery_option_ipv4_flag_handler_exit:


// niquery_option_ipv4_handler
// Return size: 0
define niquery_option_ipv4_handler
niquery_option_ipv4_handler_entry:
	sp = fp
	r25 = 0x402D76<32>
	// succ:  l00402D76
l00402D76:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r4 = 4<32>
	goto 0x00402D24<p32>
	// succ:  l00402D7A_thunk_niquery_set_qtype
l00402D7A_thunk_niquery_set_qtype:
	call niquery_set_qtype (retsize: 0;)
	return
	// succ:  niquery_option_ipv4_handler_exit
niquery_option_ipv4_handler_exit:


// niquery_option_ipv6_flag_handler
// Return size: 0
define niquery_option_ipv6_flag_handler
niquery_option_ipv6_flag_handler_entry:
	sp = fp
	r25 = 0x402D82<32>
	// succ:  l00402D82
l00402D82:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r16 = r4
	r4 = 3<32>
	goto 0x00402D24<p32>
	// succ:  l00402D88_thunk_niquery_set_qtype
l00402D88_thunk_niquery_set_qtype:
	call niquery_set_qtype (retsize: 0;)
	return
	// succ:  niquery_option_ipv6_flag_handler_exit
niquery_option_ipv6_flag_handler_exit:


// niquery_option_ipv6_handler
// Return size: 0
define niquery_option_ipv6_handler
niquery_option_ipv6_handler_entry:
	sp = fp
	r25 = 0x402DB0<32>
	// succ:  l00402DB0
l00402DB0:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r4 = 3<32>
	goto 0x00402D24<p32>
	// succ:  l00402DB4_thunk_niquery_set_qtype
l00402DB4_thunk_niquery_set_qtype:
	call niquery_set_qtype (retsize: 0;)
	return
	// succ:  niquery_option_ipv6_handler_exit
niquery_option_ipv6_handler_exit:


// niquery_option_name_handler
// Return size: 0
define niquery_option_name_handler
niquery_option_name_handler_entry:
	sp = fp
	r25 = 0x402DBC<32>
	// succ:  l00402DBC
l00402DBC:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r4 = 2<32>
	goto 0x00402D24<p32>
	// succ:  l00402DC0_thunk_niquery_set_qtype
l00402DC0_thunk_niquery_set_qtype:
	call niquery_set_qtype (retsize: 0;)
	return
	// succ:  niquery_option_name_handler_exit
niquery_option_name_handler_exit:


// pr_icmph
// Return size: 0
define pr_icmph
pr_icmph_entry:
	sp = fp
	r25 = 0x402DC8<32>
	// succ:  l00402DC8
l00402DC8:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 16<i32>
	r7 = 0x80<32>
	r16 = r5
	r17 = r6
	branch r4 == r7 l00402EB4
	// succ:  l00402DD4 l00402EB4
l00402DD4:
	branch r7 <u r4 l00402E12
	// succ:  l00402DD8 l00402E12
l00402DD8:
	branch r4 == 2<32> l00402E72
	// succ:  l00402DDC l00402E72
l00402DDC:
	branch r4 >=u 3<32> l00402DEC
	// succ:  l00402DE0 l00402DEC
l00402DE0:
	branch r4 == 1<32> l00402E34
	// succ:  l00402DE4 l00402E34
l00402DE4:
	r5 = r4
	r4 = 0x0040A3D1<p32>
	goto 0x00402E6E<p32>
	goto l00402E6E
	// succ:  l00402E6E
l00402DEC:
	branch r4 == 3<32> l00402E84
	// succ:  l00402DF0 l00402E84
l00402DF0:
	branch r4 != 4<32> l00402DE4
	// succ:  l00402DF4 l00402DE4
l00402DF4:
	r4 = 0x0040A388<p32>
	goto 0x0040309C<p32>
	goto l0040309C
	// succ:  l0040309C
l00402E12:
	r7 = 0x82<32>
	branch r4 == r7 l00402EC0
	// succ:  l00402E1A l00402EC0
l00402E1A:
	branch r4 <u r7 l00402EBA
	// succ:  l00402E1E l00402EBA
l00402E1E:
	r7 = 0x83<32>
	branch r4 == r7 l00402EC6
	// succ:  l00402E26 l00402EC6
l00402E26:
	r7 = 0x84<32>
	branch r7 != r4 l00402DE4
	// succ:  l00402E2E l00402DE4
l00402E2E:
	r4 = 0x0040A3ED<p32>
	goto 0x00402E4A<p32>
	goto l00402E4A
	// succ:  l00402E4A
l00402E34:
	r4 = 0x0040A32A<p32>
	goto 0x0040309C<p32>
	goto l0040309C
	// succ:  l0040309C
l00402E4A:
	goto 0x0040309C<p32>
	goto l0040309C
	// succ:  l0040309C
l00402E4C:
	r4 = 0<32>
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	r17 = Mem0[sp + 4<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  pr_icmph_exit
l00402E6E:
	goto 0x0040309C<p32>
	goto l0040309C
	// succ:  l0040309C
l00402E72:
	r4 = 0x0040A397<p32>
	r5 = r17
	call printf (retsize: 0;)
	branch r16 == 0<32> l00402E4C
	// succ:  l00402E7C l00402E4C
l00402E7C:
	r5 = r16
	r4 = 0x0040A3A9<p32>
	goto 0x00402E6E<p32>
	goto l00402E6E
	// succ:  l00402E6E
l00402E84:
	r4 = 0x0040A3B2<p32>
	goto 0x0040309C<p32>
	goto l0040309C
	// succ:  l0040309C
l00402EB4:
	r4 = 0x0040A416<p32>
	goto 0x00402E4A<p32>
	goto l00402E4A
	// succ:  l00402E4A
l00402EBA:
	r4 = 0x0040A421<p32>
	goto 0x00402E4A<p32>
	goto l00402E4A
	// succ:  l00402E4A
l00402EC0:
	r4 = 0x0040A42A<p32>
	goto 0x00402E4A<p32>
	goto l00402E4A
	// succ:  l00402E4A
l00402EC6:
	r4 = 0x0040A433<p32>
	goto 0x00402E4A<p32>
	goto l00402E4A
	// succ:  l00402E4A
l0040309C:
	goto 0x004086C0<p32>
	// succ:  l0040309C_thunk_printf
l0040309C_thunk_printf:
	call printf (retsize: 0;)
	return
	// succ:  pr_icmph_exit
pr_icmph_exit:


// pr_echo_reply
// Return size: 0
define pr_echo_reply
pr_echo_reply_entry:
	sp = fp
	r25 = 0x402ECC<32>
	// succ:  l00402ECC
l00402ECC:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r4 = CONVERT(Mem0[r4 + 6<32>:uint16], uint16, word32)
	goto 0x004030A4<p32>
	// succ:  l00402ED0_thunk_fn004030A4
l00402ED0_thunk_fn004030A4:
	call fn004030A4 (retsize: 0;)
	return
	// succ:  pr_echo_reply_exit
pr_echo_reply_exit:


// write_stdout
// Return size: 0
define write_stdout
write_stdout_entry:
	sp = fp
	r25 = 0x402EE0<32>
	// succ:  l00402EE0
l00402EE0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 16<i32>
	r16 = 0<32>
	r18 = r4
	r17 = r5
	r6 = r17 - r16
	r5 = r18 + r16
	r4 = 1<32>
	goto 0x0040B080<p32>
	// succ:  l00402EEC_thunk_write
l00402EEC_thunk_write:
	call write (retsize: 0;)
	return
	// succ:  write_stdout_exit
write_stdout_exit:


// ping6_receive_error_msg
// Return size: 0
define ping6_receive_error_msg
ping6_receive_error_msg_entry:
	sp = fp
	r25 = 0x402EFC<32>
	// succ:  l00402EFC
l00402EFC:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	sp = sp - 640<i32>
	r17 = r4
	goto 0x004032A0<p32>
	// succ:  l00402F02_thunk_fn004032A0
l00402F02_thunk_fn004032A0:
	call fn004032A0 (retsize: 0;)
	return
	// succ:  ping6_receive_error_msg_exit
ping6_receive_error_msg_exit:


// niquery_nonce.isra.0
// Return size: 0
define niquery_nonce.isra.0
niquery_nonce.isra.0_entry:
	sp = fp
	r25 = 0x403086<32>
	// succ:  l00403086
l00403086:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r5 = Mem0[0x00412EF0<p32>:word32]
	r4 = 0x0040A437<p32>
	goto 0x00403098<p32>
	// succ:  l00403092_thunk_fn00403098
l00403092_thunk_fn00403098:
	call fn00403098 (retsize: 0;)
	return
	// succ:  niquery_nonce.isra.0_exit
niquery_nonce.isra.0_exit:


// fn00403098
// Return size: 0
define fn00403098
fn00403098_entry:
	sp = fp
	r25 = 0x403098<32>
	// succ:  l00403098
l00403098:
	goto 0x004083F0<p32>
	// succ:  l00403098_thunk_fputs_unlocked
l00403098_thunk_fputs_unlocked:
	call fputs_unlocked (retsize: 0;)
	return
	// succ:  fn00403098_exit
fn00403098_exit:


// fn004030A4
// Return size: 0
define fn004030A4
fn004030A4_entry:
	sp = fp
	r25 = 0x4030A4<32>
	// succ:  l004030A4
l004030A4:
	goto 0x00407630<p32>
	// succ:  l004030A4_thunk_ntohs
l004030A4_thunk_ntohs:
	call ntohs (retsize: 0;)
	return
	// succ:  fn004030A4_exit
fn004030A4_exit:


// ping6_parse_reply
// Return size: 0
define ping6_parse_reply
ping6_parse_reply_entry:
	sp = fp
	r25 = 0x4030A8<32>
	// succ:  l004030A8
l004030A8:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 80<i32>
	r21 = r6
	r19 = r7
	r7 = Mem0[r5 + 8<32>:word32]
	r20 = r4
	r23 = Mem0[r5 + 0x14<32>:word32]
	r22 = r8
	r16 = Mem0[r7:word32]
	r7 = 0xFFFFFFFF<32>
	Mem0[sp + 0x1C<32>:word32] = r7
	branch r23 >=u 0xC<32> l0040310A
	// succ:  l004030C0 l0040310A
l004030C0:
	branch r21 < 8<32> l0040314E
	// succ:  l004030C4 l0040314E
l004030C4:
	r7 = CONVERT(Mem0[r16:byte], byte, word32)
	r6 = 0x81<32>
	branch r7 != r6 l0040316E
	// succ:  l004030CE l0040316E
l004030CE:
	r5 = CONVERT(Mem0[r16 + 4<32>:uint16], uint16, word32)
	r4 = r20
	call is_ours (retsize: 0;)
	branch 0<32> == r4 l00403158
	// succ:  l004030D8 l00403158
l004030D8:
	r4 = CONVERT(Mem0[r16 + 6<32>:uint16], uint16, word32)
	goto 0x004030A4<p32>
	// succ:  l004030DA_thunk_fn004030A4
l004030DA_thunk_fn004030A4:
	call fn004030A4 (retsize: 0;)
	return
	// succ:  ping6_parse_reply_exit
l0040310A:
	r30 = Mem0[r5 + 0x10<32>:word32]
	r17 = r30
	// succ:  l00403110
l00403110:
	branch r17 == 0<32> l004030C0
	// succ:  l00403112 l004030C0
l00403112:
	r7 = Mem0[r17 + 4<32>:word32]
	r18 = Mem0[r17:word32]
	branch r7 != 0x29<32> l00403146
	// succ:  l0040311A l00403146
l0040311A:
	r7 = Mem0[r17 + 8<32>:word32]
	branch r7 == 8<32> l00403124
	// succ:  l00403120 l00403124
l00403120:
	branch r7 != 0x34<32> l00403146
	// succ:  l00403124 l00403146
l00403124:
	branch r18 <u 0x10<32> l00403146
	// succ:  l00403128 l00403146
l00403128:
	r6 = 4<32>
	r5 = r17 + 0xC<32>
	r4 = sp + 0x1C<32>
	goto 0x004034E2<p32>
	goto l004034E2
	// succ:  l004034E2
l00403130:
	r18 = r18 + 3<32>
	r7 = r30 + r23
	r18 = __ins(r18, 0<32>, 0<32>, 1<32>)
	r7 = r7 - r17
	r6 = r18 + 0xC<32>
	r17 = r17 + r18
	branch r6 <u r7 l00403110
	// succ:  l00403144 l00403110
l00403144:
	goto 0x0040314A<p32>
	goto l0040314A
	// succ:  l0040314A
l00403146:
	branch r18 >=u 0xC<32> l00403130
	// succ:  l0040314A l00403130
l0040314A:
	r17 = 0<32>
	goto 0x00403110<p32>
	goto l00403110
	// succ:  l00403110
l0040314E:
	r7 = Mem0[0x004544EC<p32>:word32]
	branch !__bit(r7, 8<32>) l0040315E
	// succ:  l00403158 l0040315E
l00403158:
	r17 = 1<32>
	r4 = r17
	r30 = Mem0[sp + 76<i32>:word32]
	ra = Mem0[sp + 72<i32>:word32]
	r16 = Mem0[sp + 68<i32>:word32]
	r17 = Mem0[sp + 64<i32>:word32]
	r18 = Mem0[sp + 60<i32>:word32]
	r19 = Mem0[sp + 56<i32>:word32]
	r20 = Mem0[sp + 52<i32>:word32]
	r21 = Mem0[sp + 48<i32>:word32]
	r22 = Mem0[sp + 44<i32>:word32]
	r23 = Mem0[sp + 40<i32>:word32]
	sp = sp + 80<i32>
	return
	// succ:  ping6_parse_reply_exit
l0040315E:
	r6 = r21
	r5 = 0x0040A59A<p32>
	r4 = Mem0[0x00412EF0<p32>:word32]
	goto 0x004032FE<p32>
	// succ:  l0040316A_thunk_fn004032FE
l0040316A_thunk_fn004032FE:
	call fn004032FE (retsize: 0;)
	return
	// succ:  ping6_parse_reply_exit
l0040316E:
	r6 = 0x8C<32>
	branch r6 != r7 l00403176
	// succ:  l00403174 l00403176
l00403174:
	goto 0x00403086<p32>
	// succ:  l00403174_thunk_niquery_nonce.isra.0
l00403174_thunk_niquery_nonce.isra.0:
	call niquery_nonce.isra.0 (retsize: 0;)
	return
	// succ:  ping6_parse_reply_exit
l00403176:
	branch r21 < 0x38<32> l00403158
	// succ:  l0040317A l00403158
l0040317A:
	r6 = 0x10<32>
	r5 = 0x0041AB40<p32>
	r4 = r16 + 0x20<32>
	goto 0x0040A100<p32>
	// succ:  l00403184_thunk_memcmp
l00403184_thunk_memcmp:
	call memcmp (retsize: 0;)
	return
	// succ:  ping6_parse_reply_exit
l004034E2:
	goto 0x0040A130<p32>
	// succ:  l004034E2_thunk_memcpy
l004034E2_thunk_memcpy:
	call memcpy (retsize: 0;)
	return
	// succ:  ping6_parse_reply_exit
ping6_parse_reply_exit:


// fn004032A0
// Return size: 0
define fn004032A0
fn004032A0_entry:
	sp = fp
	r25 = 0x4032A0<32>
	// succ:  l004032A0
l004032A0:
	goto 0x004049B0<p32>
	// succ:  l004032A0_thunk___errno_location
l004032A0_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  fn004032A0_exit
fn004032A0_exit:


// ping6_install_filter
// Return size: 0
define ping6_install_filter
ping6_install_filter_entry:
	sp = fp
	r25 = 0x4032A4<32>
	// succ:  l004032A4
l004032A4:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 32<i32>
	r7 = Mem0[0x0045454C<p32>:word32]
	r17 = r4
	branch r7 != 0<32> l004032FC
	// succ:  l004032B0 l004032FC
l004032B0:
	r7 = Mem0[0x004544C4<p32>:word32]
	r16 = 1<32>
	Mem0[sp + 0xC<32>:word32] = r7
	Mem0[0x0045454C<p32>:word32] = r16
	r4 = CONVERT(Mem0[sp + 0xC<32>:uint16], uint16, word32)
	goto 0x0040359C<p32>
	// succ:  l004032C4_thunk_fn0040359C
l004032C4_thunk_fn0040359C:
	call fn0040359C (retsize: 0;)
	return
	// succ:  ping6_install_filter_exit
l004032FC:
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  ping6_install_filter_exit
ping6_install_filter_exit:


// fn004032FE
// Return size: 0
define fn004032FE
fn004032FE_entry:
	sp = fp
	r25 = 0x4032FE<32>
	// succ:  l004032FE
l004032FE:
	goto 0x00408340<p32>
	// succ:  l004032FE_thunk_fprintf
l004032FE_thunk_fprintf:
	call fprintf (retsize: 0;)
	return
	// succ:  fn004032FE_exit
fn004032FE_exit:


// niquery_option_subject_addr_handler
// Return size: 0
define niquery_option_subject_addr_handler
niquery_option_subject_addr_handler_entry:
	sp = fp
	r25 = 0x403302<32>
	// succ:  l00403302
l00403302:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	sp = sp - 80<i32>
	r6 = 0x20<32>
	r16 = r4
	r19 = r5
	r5 = 0<32>
	r4 = sp + 0x10<32>
	goto 0x0040A690<p32>
	// succ:  l0040330C_thunk_memset
l0040330C_thunk_memset:
	call memset (retsize: 0;)
	return
	// succ:  niquery_option_subject_addr_handler_exit
niquery_option_subject_addr_handler_exit:


// if_name2index
// Return size: 0
define if_name2index
if_name2index_entry:
	sp = fp
	r25 = 0x4033CC<32>
	// succ:  l004033CC
l004033CC:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r16 = r4
	goto 0x00406760<p32>
	// succ:  l004033D0_thunk_if_nametoindex
l004033D0_thunk_if_nametoindex:
	call if_nametoindex (retsize: 0;)
	return
	// succ:  if_name2index_exit
if_name2index_exit:


// niquery_option_handler
// Return size: 0
define niquery_option_handler
niquery_option_handler_entry:
	sp = fp
	r25 = 0x4033F6<32>
	// succ:  l004033F6
l004033F6:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	sp = sp - 32<i32>
	r17 = 0xFFFFFFFF<32>
	r20 = r4
	r19 = 0<32>
	r16 = 0x00419A69<p32>
	goto 0x00403416<p32>
	// succ:  l00403416
l00403416:
	r4 = Mem0[r16:word32]
	branch r4 == 0<32> l0040343C
	// succ:  l0040341A l0040343C
l0040341A:
	r18 = Mem0[r16 + 4<32>:word32]
	r5 = r20
	r6 = r18
	goto 0x0040A8E0<p32>
	// succ:  l0040341E_thunk_strncmp
l0040341E_thunk_strncmp:
	call strncmp (retsize: 0;)
	return
	// succ:  niquery_option_handler_exit
l0040343C:
	r7 = Mem0[r16:word32]
	branch r7 != 0<32> l00403446
	// succ:  l00403440 l00403446
l00403440:
	r4 = 0<32>
	r5 = 0<32>
	goto 0x00402D00<p32>
	// succ:  l00403442_thunk_niquery_option_help_handler
l00403442_thunk_niquery_option_help_handler:
	call niquery_option_help_handler (retsize: 0;)
	return
	// succ:  niquery_option_handler_exit
l00403446:
	r4 = r17
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	r20 = Mem0[sp + 8<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  niquery_option_handler_exit
niquery_option_handler_exit:


// hextoui
// Return size: 0
define hextoui
hextoui_entry:
	sp = fp
	r25 = 0x40344A<32>
	// succ:  l0040344A
l0040344A:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 32<i32>
	r16 = r4
	goto 0x004032A0<p32>
	// succ:  l0040344E_thunk_fn004032A0
l0040344E_thunk_fn004032A0:
	call fn004032A0 (retsize: 0;)
	return
	// succ:  hextoui_exit
hextoui_exit:


// build_echo
// Return size: 0
define build_echo
build_echo_entry:
	sp = fp
	r25 = 0x403474<32>
	// succ:  l00403474
l00403474:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r7 = 0xFFFFFF80<32>
	Mem0[r4 + 1<32>:byte] = SLICE(0<32>, byte, 0)
	Mem0[r4:byte] = SLICE(r7, byte, 0)
	r16 = r4
	Mem0[r4 + 2<32>:word16] = SLICE(0<32>, word16, 0)
	r4 = Mem0[0x004544E4<p32>:word32]
	r4 = r4 + 1<32>
	r4 = r4 & 0xFFFF<32>
	goto 0x0040359C<p32>
	// succ:  l0040348C_thunk_fn0040359C
l0040348C_thunk_fn0040359C:
	call fn0040359C (retsize: 0;)
	return
	// succ:  build_echo_exit
build_echo_exit:


// build_niquery
// Return size: 0
define build_niquery
build_niquery_entry:
	sp = fp
	r25 = 0x4034B2<32>
	// succ:  l004034B2
l004034B2:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 32<i32>
	r7 = 0xFFFFFF8B<32>
	r16 = r4
	Mem0[r4:byte] = SLICE(r7, byte, 0)
	Mem0[r4 + 2<32>:word16] = SLICE(0<32>, word16, 0)
	r4 = Mem0[0x004544E4<p32>:word32]
	r4 = r4 + 1<32>
	Mem0[0x00430074<p32>:word32] = r0
	r4 = r4 & 0xFFFF<32>
	goto 0x0040359C<p32>
	// succ:  l004034CE_thunk_fn0040359C
l004034CE_thunk_fn0040359C:
	call fn0040359C (retsize: 0;)
	return
	// succ:  build_niquery_exit
build_niquery_exit:


// ping6_send_probe
// Return size: 0
define ping6_send_probe
ping6_send_probe_entry:
	sp = fp
	r25 = 0x4034E6<32>
	// succ:  l004034E6
l004034E6:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	sp = sp - 80<i32>
	r7 = Mem0[0x004544E4<p32>:word32]
	r18 = r4
	r17 = r5
	r7 = r7 + 1<32>
	r5 = r6
	r7 = r7 & 0xFFFF<32>
	r6 = 0x0042AC1D<p32>
	r4 = r7 >>u 5<32>
	r19 = 1<32>
	r4 = r6 + (r4 << 2<8>)
	r7 = r19 << r7
	r7 = ~r7
	r6 = Mem0[r4:word32]
	r7 = r7 & r6
	Mem0[sp:word32] = r7
	r7 = Mem0[0x00430214<p32>:word32]
	r4 = r17
	branch r7 >= 0<32> l0040354C
	// succ:  l0040351C l0040354C
l0040351C:
	goto 0x00403474<p32>
	// succ:  l0040351C_thunk_build_echo
l0040351C_thunk_build_echo:
	call build_echo (retsize: 0;)
	return
	// succ:  ping6_send_probe_exit
l0040354C:
	goto 0x004034B2<p32>
	// succ:  l0040354C_thunk_build_niquery
l0040354C_thunk_build_niquery:
	call build_niquery (retsize: 0;)
	return
	// succ:  ping6_send_probe_exit
ping6_send_probe_exit:


// ping6_usage
// Return size: 0
define ping6_usage
ping6_usage_entry:
	sp = fp
	r25 = 0x40357C<32>
	// succ:  l0040357C
l0040357C:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r7 = 0x0040A7D3<p32>
	r6 = 0x0040A7D1<p32>
	branch r4 != 0<32> l0040358A
	// succ:  l00403586_1 l0040358A
l00403586_1:
	r6 = r7
	// succ:  l0040358A
l0040358A:
	r5 = 0x0040A7DD<p32>
	r4 = Mem0[0x00412EF0<p32>:word32]
	goto 0x004032FE<p32>
	// succ:  l00403594_thunk_fn004032FE
l00403594_thunk_fn004032FE:
	call fn004032FE (retsize: 0;)
	return
	// succ:  ping6_usage_exit
ping6_usage_exit:


// fn0040359C
// Return size: 0
define fn0040359C
fn0040359C_entry:
	sp = fp
	r25 = 0x40359C<32>
	// succ:  l0040359C
l0040359C:
	goto 0x00406700<p32>
	// succ:  l0040359C_thunk_htons
l0040359C_thunk_htons:
	call htons (retsize: 0;)
	return
	// succ:  fn0040359C_exit
fn0040359C_exit:


// ping6_run
// Return size: 0
define ping6_run
ping6_run_entry:
	sp = fp
	r25 = 0x4035A0<32>
	// succ:  l004035A0
l004035A0:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 112<i32>
	r30 = sp + 0xFFFFF070<32>
	r19 = r6
	r16 = r7
	r7 = Mem0[0x00430214<p32>:word32]
	r17 = r4
	r18 = r5
	Mem0[r30 + 0xFA4<32>:byte] = SLICE(0<32>, byte, 0)
	branch r7 < 0<32> l004035E0
	// succ:  l004035B8 l004035E0
l004035B8:
	r5 = 0<32>
	r4 = 0x0042BD17<p32>
	goto 0x0040AF40<p32>
	// succ:  l004035BE_thunk_gettimeofday
l004035BE_thunk_gettimeofday:
	call gettimeofday (retsize: 0;)
	return
	// succ:  ping6_run_exit
l004035E0:
	branch r17 < 2<32> l004035F6
	// succ:  l004035E4 l004035F6
l004035E4:
	r5 = Mem0[0x00412EF0<p32>:word32]
	r4 = 0x0040A8A9<p32>
	goto 0x004083F0<p32>
	// succ:  l004035EE_thunk_fputs_unlocked
l004035EE_thunk_fputs_unlocked:
	call fputs_unlocked (retsize: 0;)
	return
	// succ:  ping6_run_exit
l004035F2:
	r4 = 0<32>
	goto 0x0040357C<p32>
	// succ:  l004035F4_thunk_ping6_usage
l004035F4_thunk_ping6_usage:
	call ping6_usage (retsize: 0;)
	return
	// succ:  ping6_run_exit
l004035F6:
	branch r17 != 1<32> l0040362C
	// succ:  l004035FA l0040362C
l004035FA:
	r17 = Mem0[r18:word32]
	// succ:  l004035FC
l004035FC:
	branch r19 != 0<32> l00403648
	// succ:  l004035FE l00403648
l004035FE:
	r7 = r30 + 0xFA4<32>
	r6 = 0x0040AC75<p32>
	r4 = r17
	r5 = 0<32>
	goto 0x00405E20<p32>
	// succ:  l00403608_thunk_getaddrinfo
l00403608_thunk_getaddrinfo:
	call getaddrinfo (retsize: 0;)
	return
	// succ:  ping6_run_exit
l0040362C:
	r7 = Mem0[0x00430214<p32>:word32]
	branch r7 >= 0<32> l00403640
	// succ:  l00403636 l00403640
l00403636:
	r7 = Mem0[0x00430210<p32>:word32]
	branch r7 != 1<32> l004035F2
	// succ:  l00403640 l004035F2
l00403640:
	r17 = Mem0[0x004544D4<p32>:word32]
	goto 0x004035FC<p32>
	goto l004035FC
	// succ:  l004035FC
l00403648:
	r18 = 0x0041ADA2<p32>
	r5 = Mem0[r19 + 0x14<32>:word32]
	r6 = 0x1C<32>
	r4 = r18
	call memcpy (retsize: 0;)
	r4 = 0x3A<32>
	goto 0x0040359C<p32>
	// succ:  l00403656_thunk_fn0040359C
l00403656_thunk_fn0040359C:
	call fn0040359C (retsize: 0;)
	return
	// succ:  ping6_run_exit
ping6_run_exit:


// __divdi3
// Return size: 0
define __divdi3
__divdi3_entry:
	sp = fp
	r25 = 0x403CB0<32>
	// succ:  l00403CB0
l00403CB0:
	r8 = r6
	r12 = r7
	r2 = 0<32>
	branch r5 >= 0<32> l00403CCE
	// succ:  l00403CBA l00403CCE
l00403CBA:
	r4 = -r4
	r5 = -r5
	r9 = CONVERT(0<32> <u r4, bool, word32)
	r2 = 0xFFFFFFFF<32>
	r5 = r5 - r9
	// succ:  l00403CCE
l00403CCE:
	branch r7 >= 0<32> l00403CE6
	// succ:  l00403CD2 l00403CE6
l00403CD2:
	r8 = -r6
	r7 = -r7
	r12 = CONVERT(0<32> <u r8, bool, word32)
	r2 = ~r2
	r12 = r7 - r12
	// succ:  l00403CE6
l00403CE6:
	r9 = r8
	r11 = r12
	r10 = r4
	r7 = r5
	branch 0<32> != r12 l00403E44
	// succ:  l00403CF0 l00403E44
l00403CF0:
	branch r7 >=u r8 l00403D94
	// succ:  l00403CF4 l00403D94
l00403CF4:
	r6 = __clz(r8)
	branch r6 == 0<32> l00403D10
	// succ:  l00403CFA l00403D10
l00403CFA:
	r5 = -r6
	r7 = r7 << r6
	r5 = r10 >>u r5
	r9 = r8 << r6
	r7 = r7 | r5
	r10 = r10 << r6
	// succ:  l00403D10
l00403D10:
	r8 = __ext(r9, 0<32>, 0x10<32>)
	r4 = r9 >>u 0x10<32>
	lo = r3 /u r7
	hi = r3 % r7
	r5 = r8 *s r3
	r6 = r7 % r4
	r7 = r10 >>u 0x10<32>
	r6 = r6 << 0x10<32>
	r6 = r6 | r7
	r7 = r3
	branch r6 >=u r5 l00403D46
	// succ:  l00403D34 l00403D46
l00403D34:
	r6 = r6 + r9
	r7 = r7 + 0xFFFFFFFF<32>
	branch r6 <u r9 l00403D46
	// succ:  l00403D3C l00403D46
l00403D3C:
	branch r6 >=u r5 l00403D46
	// succ:  l00403D40 l00403D46
l00403D40:
	r7 = r3 + 0xFFFFFFFE<32>
	r6 = r6 + r9
	// succ:  l00403D46
l00403D46:
	r6 = r6 - r5
	lo = r3 /u r6
	hi = r3 % r6
	r8 = r8 *s r3
	r5 = r6 % r4
	r10 = __ext(r10, 0<32>, 0x10<32>)
	r6 = r5 << 0x10<32>
	r10 = r6 | r10
	r4 = r3
	branch r10 >=u r8 l00403D76
	// succ:  l00403D66 l00403D76
l00403D66:
	r10 = r10 + r9
	r4 = r4 + 0xFFFFFFFF<32>
	branch r10 <u r9 l00403D76
	// succ:  l00403D6E l00403D76
l00403D6E:
	branch r10 >=u r8 l00403D76
	// succ:  l00403D72 l00403D76
l00403D72:
	r4 = r3 + 0xFFFFFFFE<32>
	// succ:  l00403D76
l00403D76:
	r7 = r7 << 0x10<32>
	r7 = r7 | r4
	// succ:  l00403D7C
l00403D7C:
	r4 = r7
	r5 = r11
	branch 0<32> == r2 l00403D92
	// succ:  l00403D84 l00403D92
l00403D84:
	r4 = -r7
	r5 = -r11
	r7 = CONVERT(0<32> <u r4, bool, word32)
	r5 = r5 - r7
	// succ:  l00403D92
l00403D92:
	return
	// succ:  __divdi3_exit
l00403D94:
	branch 0<32> != r8 l00403D9E
	// succ:  l00403D98 l00403D9E
l00403D98:
	r7 = 1<32>
	lo = r9 /u r7
	hi = r9 % r7
	// succ:  l00403D9E
l00403D9E:
	r7 = __clz(r9)
	branch r7 != 0<32> l00403DAE
	// succ:  l00403DA4 l00403DAE
l00403DA4:
	r7 = r5 - r9
	r11 = 1<32>
	goto 0x00403D10<p32>
	goto l00403D10
	// succ:  l00403D10
l00403DAE:
	r8 = 0x20<32>
	r9 = r9 << r7
	r8 = r8 - r7
	r10 = r4 << r7
	r11 = r5 >>u r8
	r5 = r5 << r7
	r8 = r4 >>u r8
	r7 = __ext(r9, 0<32>, 0x10<32>)
	r8 = r8 | r5
	r5 = r9 >>u 0x10<32>
	lo = r3 /u r11
	hi = r3 % r11
	r4 = r7 *s r3
	r6 = r11 % r5
	r11 = r8 >>u 0x10<32>
	r6 = r6 << 0x10<32>
	r6 = r6 | r11
	r11 = r3
	branch r6 >=u r4 l00403E06
	// succ:  l00403DF4 l00403E06
l00403DF4:
	r6 = r6 + r9
	r11 = r11 + 0xFFFFFFFF<32>
	branch r6 <u r9 l00403E06
	// succ:  l00403DFC l00403E06
l00403DFC:
	branch r6 >=u r4 l00403E06
	// succ:  l00403E00 l00403E06
l00403E00:
	r11 = r3 + 0xFFFFFFFE<32>
	r6 = r6 + r9
	// succ:  l00403E06
l00403E06:
	r4 = r6 - r4
	lo = r3 /u r4
	hi = r3 % r4
	r7 = r7 *s r3
	r6 = r4 % r5
	r8 = __ext(r8, 0<32>, 0x10<32>)
	r6 = r6 << 0x10<32>
	r5 = r6 | r8
	r6 = r3
	branch r5 >=u r7 l00403E38
	// succ:  l00403E26 l00403E38
l00403E26:
	r5 = r5 + r9
	r6 = r6 + 0xFFFFFFFF<32>
	branch r5 <u r9 l00403E38
	// succ:  l00403E2E l00403E38
l00403E2E:
	branch r5 >=u r7 l00403E38
	// succ:  l00403E32 l00403E38
l00403E32:
	r6 = r3 + 0xFFFFFFFE<32>
	r5 = r5 + r9
	// succ:  l00403E38
l00403E38:
	r11 = r11 << 0x10<32>
	r7 = r5 - r7
	r11 = r11 | r6
	goto 0x00403D10<p32>
	goto l00403D10
	// succ:  l00403D10
l00403E44:
	branch r5 <u r12 l00403F24
	// succ:  l00403E48 l00403F24
l00403E48:
	r13 = __clz(r12)
	branch 0<32> != r13 l00403E60
	// succ:  l00403E50 l00403E60
l00403E50:
	branch r12 <u r5 l00403F2A
	// succ:  l00403E54 l00403F2A
l00403E54:
	r7 = CONVERT(r4 <u r8, bool, word32)
	r7 = r7 ^ 1<32>
	// succ:  l00403E5C
l00403E5C:
	r11 = 0<32>
	goto 0x00403D7C<p32>
	goto l00403D7C
	// succ:  l00403D7C
l00403E60:
	r9 = 0x20<32>
	r12 = r12 << r13
	r9 = r9 - r13
	r7 = r8 >>u r9
	r6 = r5 >>u r9
	r12 = r7 | r12
	r5 = r5 << r13
	r9 = r4 >>u r9
	r10 = __ext(r12, 0<32>, 0x10<32>)
	r3 = r9 | r5
	r7 = r12 >>u 0x10<32>
	r11 = r6 % r7
	lo = r5 /u r6
	hi = r5 % r6
	r6 = r10 *s r5
	r9 = r3 >>u 0x10<32>
	r11 = r11 << 0x10<32>
	r8 = r8 << r13
	r11 = r11 | r9
	r9 = r5
	branch r11 >=u r6 l00403EC4
	// succ:  l00403EAE l00403EC4
l00403EAE:
	r11 = r11 + r12
	r9 = r9 + 0xFFFFFFFF<32>
	branch r11 <u r12 l00403EC4
	// succ:  l00403EB8 l00403EC4
l00403EB8:
	branch r11 >=u r6 l00403EC4
	// succ:  l00403EBC l00403EC4
l00403EBC:
	r9 = r5 + 0xFFFFFFFE<32>
	r11 = r11 + r12
	// succ:  l00403EC4
l00403EC4:
	r11 = r11 - r6
	lo = r6 /u r11
	hi = r6 % r11
	r10 = r10 *s r6
	r5 = r11 % r7
	r3 = __ext(r3, 0<32>, 0x10<32>)
	r5 = r5 << 0x10<32>
	r5 = r5 | r3
	r7 = r6
	branch r5 >=u r10 l00403EFA
	// succ:  l00403EE4 l00403EFA
l00403EE4:
	r5 = r5 + r12
	r7 = r7 + 0xFFFFFFFF<32>
	branch r5 <u r12 l00403EFA
	// succ:  l00403EEE l00403EFA
l00403EEE:
	branch r5 >=u r10 l00403EFA
	// succ:  l00403EF2 l00403EFA
l00403EF2:
	r7 = r6 + 0xFFFFFFFE<32>
	r5 = r5 + r12
	// succ:  l00403EFA
l00403EFA:
	r9 = r9 << 0x10<32>
	r10 = r5 - r10
	r7 = r9 | r7
	r6 = r7 *s r8
	r8 = SLICE(r7 *u r8, word32, 32)
	branch r10 <u r8 l00403F20
	// succ:  l00403F12 l00403F20
l00403F12:
	r11 = 0<32>
	branch r10 != r8 l00403D7C
	// succ:  l00403F18 l00403D7C
l00403F18:
	r4 = r4 << r13
	branch r4 >=u r6 l00403D7C
	// succ:  l00403F20 l00403D7C
l00403F20:
	r7 = r7 + 0xFFFFFFFF<32>
	goto 0x00403E5C<p32>
	goto l00403E5C
	// succ:  l00403E5C
l00403F24:
	r11 = 0<32>
	r7 = 0<32>
	goto 0x00403D7C<p32>
	goto l00403D7C
	// succ:  l00403D7C
l00403F2A:
	r11 = 0<32>
	r7 = 1<32>
	goto 0x00403D7C<p32>
	goto l00403D7C
	// succ:  l00403D7C
__divdi3_exit:


// __moddi3
// Return size: 0
define __moddi3
__moddi3_entry:
	sp = fp
	r25 = 0x403F30<32>
	// succ:  l00403F30
l00403F30:
	r2 = r6
	r10 = r7
	r11 = 0<32>
	branch r5 >= 0<32> l00403F4E
	// succ:  l00403F3A l00403F4E
l00403F3A:
	r4 = -r4
	r5 = -r5
	r8 = CONVERT(0<32> <u r4, bool, word32)
	r11 = 0xFFFFFFFF<32>
	r5 = r5 - r8
	// succ:  l00403F4E
l00403F4E:
	branch r7 >= 0<32> l00403F62
	// succ:  l00403F52 l00403F62
l00403F52:
	r2 = -r6
	r7 = -r7
	r10 = CONVERT(0<32> <u r2, bool, word32)
	r10 = r7 - r10
	// succ:  l00403F62
l00403F62:
	r9 = r2
	r7 = r5
	r8 = r4
	branch 0<32> != r10 l004040BA
	// succ:  l00403F6A l004040BA
l00403F6A:
	branch r7 >=u r2 l00404000
	// succ:  l00403F6E l00404000
l00403F6E:
	r2 = __clz(r2)
	branch 0<32> == r2 l00403F8C
	// succ:  l00403F76 l00403F8C
l00403F76:
	r5 = -r2
	r7 = r7 << r2
	r5 = r8 >>u r5
	r9 = r9 << r2
	r7 = r7 | r5
	r8 = r8 << r2
	// succ:  l00403F8C
l00403F8C:
	r4 = __ext(r9, 0<32>, 0x10<32>)
	r10 = r9 >>u 0x10<32>
	lo = r5 /u r7
	hi = r5 % r7
	r5 = r5 *s r4
	r6 = r7 % r10
	r7 = r6 << 0x10<32>
	r6 = r8 >>u 0x10<32>
	r7 = r7 | r6
	branch r7 >=u r5 l00403FB8
	// succ:  l00403FAC l00403FB8
l00403FAC:
	r7 = r7 + r9
	branch r7 <u r9 l00403FB8
	// succ:  l00403FB2 l00403FB8
l00403FB2:
	branch r7 >=u r5 l00403FB8
	// succ:  l00403FB6 l00403FB8
l00403FB6:
	r7 = r7 + r9
	// succ:  l00403FB8
l00403FB8:
	r7 = r7 - r5
	// succ:  l00403FBA
l00403FBA:
	lo = r5 /u r7
	hi = r5 % r7
	r4 = r4 *s r5
	r6 = r7 % r10
	r8 = __ext(r8, 0<32>, 0x10<32>)
	r7 = r6 << 0x10<32>
	r8 = r7 | r8
	branch r8 >=u r4 l00403FE0
	// succ:  l00403FD4 l00403FE0
l00403FD4:
	r8 = r8 + r9
	branch r8 <u r9 l00403FE0
	// succ:  l00403FDA l00403FE0
l00403FDA:
	branch r8 >=u r4 l00403FE0
	// succ:  l00403FDE l00403FE0
l00403FDE:
	r8 = r8 + r9
	// succ:  l00403FE0
l00403FE0:
	r8 = r8 - r4
	r5 = 0<32>
	r4 = r8 >>u r2
	// succ:  l00403FEA
l00403FEA:
	branch 0<32> == r11 l00403FFE
	// succ:  l00403FEE l00403FFE
l00403FEE:
	r8 = -r4
	r5 = -r5
	r7 = CONVERT(0<32> <u r8, bool, word32)
	r4 = r8
	r5 = r5 - r7
	// succ:  l00403FFE
l00403FFE:
	return
	// succ:  __moddi3_exit
l00404000:
	branch 0<32> != r2 l0040400A
	// succ:  l00404004 l0040400A
l00404004:
	r7 = 1<32>
	lo = r9 /u r7
	hi = r9 % r7
	// succ:  l0040400A
l0040400A:
	r2 = __clz(r9)
	branch 0<32> != r2 l00404046
	// succ:  l00404012 l00404046
l00404012:
	r5 = r5 - r9
	// succ:  l00404016
l00404016:
	r4 = __ext(r9, 0<32>, 0x10<32>)
	r10 = r9 >>u 0x10<32>
	lo = r6 /u r5
	hi = r6 % r5
	r6 = r6 *s r4
	r7 = r5 % r10
	r5 = r8 >>u 0x10<32>
	r7 = r7 << 0x10<32>
	r7 = r7 | r5
	branch r7 >=u r6 l00404042
	// succ:  l00404036 l00404042
l00404036:
	r7 = r7 + r9
	branch r7 <u r9 l00404042
	// succ:  l0040403C l00404042
l0040403C:
	branch r7 >=u r6 l00404042
	// succ:  l00404040 l00404042
l00404040:
	r7 = r7 + r9
	// succ:  l00404042
l00404042:
	r7 = r7 - r6
	goto 0x00403FBA<p32>
	goto l00403FBA
	// succ:  l00403FBA
l00404046:
	r6 = 0x20<32>
	r9 = r9 << r2
	r6 = r6 - r2
	r3 = r9 >>u 0x10<32>
	r12 = r5 >>u r6
	r6 = r4 >>u r6
	r5 = r5 << r2
	lo = r10 /u r12
	hi = r10 % r12
	r7 = r6 | r5
	r5 = __ext(r9, 0<32>, 0x10<32>)
	r10 = r10 *s r5
	r8 = r4 << r2
	r6 = r12 % r3
	r4 = r7 >>u 0x10<32>
	r6 = r6 << 0x10<32>
	r6 = r6 | r4
	branch r6 >=u r10 l00404090
	// succ:  l00404084 l00404090
l00404084:
	r6 = r6 + r9
	branch r6 <u r9 l00404090
	// succ:  l0040408A l00404090
l0040408A:
	branch r6 >=u r10 l00404090
	// succ:  l0040408E l00404090
l0040408E:
	r6 = r6 + r9
	// succ:  l00404090
l00404090:
	r10 = r6 - r10
	lo = r4 /u r10
	hi = r4 % r10
	r4 = r4 *s r5
	r6 = r10 % r3
	r5 = r7 & 0xFFFF<32>
	r6 = r6 << 0x10<32>
	r5 = r5 | r6
	branch r5 >=u r4 l004040B6
	// succ:  l004040AA l004040B6
l004040AA:
	r5 = r5 + r9
	branch r5 <u r9 l004040B6
	// succ:  l004040B0 l004040B6
l004040B0:
	branch r5 >=u r4 l004040B6
	// succ:  l004040B4 l004040B6
l004040B4:
	r5 = r5 + r9
	// succ:  l004040B6
l004040B6:
	r5 = r5 - r4
	goto 0x00404016<p32>
	goto l00404016
	// succ:  l00404016
l004040BA:
	branch r5 <u r10 l00403FEA
	// succ:  l004040BE l00403FEA
l004040BE:
	r3 = __clz(r10)
	branch 0<32> != r3 l004040E0
	// succ:  l004040C6 l004040E0
l004040C6:
	branch r10 <u r5 l004040CE
	// succ:  l004040CA l004040CE
l004040CA:
	branch r4 <u r2 l004040DC
	// succ:  l004040CE l004040DC
l004040CE:
	r8 = r4 - r2
	r5 = r5 - r10
	r7 = CONVERT(r4 <u r8, bool, word32)
	r7 = r5 - r7
	// succ:  l004040DC
l004040DC:
	r4 = r8
	r5 = r7
	goto 0x00403FEA<p32>
	goto l00403FEA
	// succ:  l00403FEA
l004040E0:
	r9 = 0x20<32>
	r10 = r10 << r3
	r9 = r9 - r3
	r8 = r2 << r3
	r6 = r2 >>u r9
	r7 = r4 >>u r9
	r12 = r6 | r10
	r6 = r5 >>u r9
	r5 = r5 << r3
	r13 = r12 >>u 0x10<32>
	r5 = r5 | r7
	r7 = __ext(r12, 0<32>, 0x10<32>)
	r2 = r6 % r13
	lo = r14 /u r6
	hi = r14 % r6
	r6 = r7 *s r14
	r10 = r5 >>u 0x10<32>
	r2 = r2 << 0x10<32>
	r4 = r4 << r3
	r2 = r2 | r10
	r10 = r14
	branch r2 >=u r6 l00404146
	// succ:  l00404130 l00404146
l00404130:
	r2 = r2 + r12
	r10 = r10 + 0xFFFFFFFF<32>
	branch r2 <u r12 l00404146
	// succ:  l0040413A l00404146
l0040413A:
	branch r2 >=u r6 l00404146
	// succ:  l0040413E l00404146
l0040413E:
	r10 = r14 + 0xFFFFFFFE<32>
	r2 = r2 + r12
	// succ:  l00404146
l00404146:
	r2 = r2 - r6
	r6 = r2 % r13
	lo = r14 /u r2
	hi = r14 % r2
	r2 = r7 *s r14
	r5 = r5 & 0xFFFF<32>
	r6 = r6 << 0x10<32>
	r7 = r6 | r5
	r5 = r14
	branch r7 >=u r2 l0040417C
	// succ:  l00404166 l0040417C
l00404166:
	r7 = r7 + r12
	r5 = r5 + 0xFFFFFFFF<32>
	branch r7 <u r12 l0040417C
	// succ:  l00404170 l0040417C
l00404170:
	branch r7 >=u r2 l0040417C
	// succ:  l00404174 l0040417C
l00404174:
	r5 = r14 + 0xFFFFFFFE<32>
	r7 = r7 + r12
	// succ:  l0040417C
l0040417C:
	r6 = r10 << 0x10<32>
	r7 = r7 - r2
	r6 = r6 | r5
	r10 = r6 *s r8
	r6 = SLICE(r6 *u r8, word32, 32)
	r2 = r10
	r5 = r6
	branch r7 <u r6 l0040419C
	// succ:  l00404196 l0040419C
l00404196:
	branch r6 != r7 l004041AC
	// succ:  l00404198 l004041AC
l00404198:
	branch r4 >=u r10 l004041AC
	// succ:  l0040419C l004041AC
l0040419C:
	r2 = r10 - r8
	r6 = r6 - r12
	r10 = CONVERT(r10 <u r2, bool, word32)
	r5 = r6 - r10
	// succ:  l004041AC
l004041AC:
	r2 = r4 - r2
	r7 = r7 - r5
	r4 = CONVERT(r4 <u r2, bool, word32)
	r7 = r7 - r4
	r4 = r2 >>u r3
	r8 = r7 << r9
	r5 = r7 >>u r3
	r4 = r8 | r4
	goto 0x00403FEA<p32>
	goto l00403FEA
	// succ:  l00403FEA
__moddi3_exit:


// __gtdf2
// Return size: 0
define __gtdf2
__gtdf2_entry:
	sp = fp
	r25 = 0x4041D0<32>
	// succ:  l004041D0
l004041D0:
	r10 = __ext(r5, 4<32>, 0xB<32>)
	r2 = 0x7FF<32>
	r8 = __ext(r5, 0<32>, 0x14<32>)
	r9 = __ext(r7, 0<32>, 0x14<32>)
	r11 = __ext(r7, 4<32>, 0xB<32>)
	r3 = r4
	r5 = r5 >>u 0x1F<32>
	r12 = r6
	r7 = r7 >>u 0x1F<32>
	branch r10 != r2 l004041FC
	// succ:  l004041F4 l004041FC
l004041F4:
	r13 = r8 | r4
	branch 0<32> != r13 l00404254
	// succ:  l004041FC l00404254
l004041FC:
	branch r11 != r2 l00404208
	// succ:  l00404200 l00404208
l00404200:
	r2 = r9 | r6
	branch 0<32> != r2 l00404254
	// succ:  l00404208 l00404254
l00404208:
	r2 = 0<32>
	branch 0<32> != r10 l00404216
	// succ:  l0040420E l00404216
l0040420E:
	r4 = r8 | r4
	r2 = CONVERT(r4 <u 1<32>, bool, word32)
	// succ:  l00404216
l00404216:
	branch 0<32> != r11 l00404220
	// succ:  l0040421A l00404220
l0040421A:
	r6 = r9 | r6
	branch r6 == 0<32> l0040425A
	// succ:  l00404220 l0040425A
l00404220:
	branch 0<32> == r2 l00404260
	// succ:  l00404224 l00404260
l00404224:
	r5 = 0xFFFFFFFF<32>
	branch r7 == 0<32> l0040422A
	// succ:  l00404226_1 l0040422A
l00404226_1:
	r5 = r7
	// succ:  l0040422A
l0040422A:
	r4 = r5
	return
	// succ:  __gtdf2_exit
l0040422E:
	branch r10 >= r11 l0040423A
	// succ:  l00404232 l0040423A
l00404232:
	r7 = 0xFFFFFFFF<32>
	branch r5 != 0<32> l00404238
	// succ:  l00404234_1 l00404238
l00404234_1:
	r5 = r7
	// succ:  l00404238
l00404238:
	goto 0x0040422A<p32>
	goto l0040422A
	// succ:  l0040422A
l0040423A:
	branch r9 <u r8 l00404266
	// succ:  l0040423E l00404266
l0040423E:
	branch r8 != r9 l0040424C
	// succ:  l00404242 l0040424C
l00404242:
	branch r12 <u r3 l00404266
	// succ:  l00404246 l00404266
l00404246:
	branch r3 <u r12 l00404232
	// succ:  l0040424A l00404232
l0040424A:
	goto 0x00404250<p32>
	goto l00404250
	// succ:  l00404250
l0040424C:
	branch r8 <u r9 l00404232
	// succ:  l00404250 l00404232
l00404250:
	r5 = 0<32>
	goto 0x0040422A<p32>
	goto l0040422A
	// succ:  l0040422A
l00404254:
	r5 = 0xFFFFFFFE<32>
	goto 0x0040422A<p32>
	goto l0040422A
	// succ:  l0040422A
l0040425A:
	branch 0<32> != r2 l00404250
	// succ:  l0040425E l00404250
l0040425E:
	goto 0x00404266<p32>
	goto l00404266
	// succ:  l00404266
l00404260:
	branch r5 != r7 l00404266
	// succ:  l00404262 l00404266
l00404262:
	branch r11 >= r10 l0040422E
	// succ:  l00404266 l0040422E
l00404266:
	r7 = 0xFFFFFFFF<32>
	r6 = 1<32>
	branch r5 != 0<32> l0040426E
	// succ:  l0040426A_1 l0040426E
l0040426A_1:
	r7 = r6
	// succ:  l0040426E
l0040426E:
	r5 = r7
	goto 0x0040422A<p32>
	goto l0040422A
	// succ:  l0040422A
__gtdf2_exit:


// __ltdf2
// Return size: 0
define __ltdf2
__ltdf2_entry:
	sp = fp
	r25 = 0x404280<32>
	// succ:  l00404280
l00404280:
	r11 = __ext(r5, 4<32>, 0xB<32>)
	r14 = 0x7FF<32>
	r9 = __ext(r5, 0<32>, 0x14<32>)
	r10 = __ext(r7, 0<32>, 0x14<32>)
	r2 = __ext(r7, 4<32>, 0xB<32>)
	r12 = r4
	r5 = r5 >>u 0x1F<32>
	r13 = r6
	r7 = r7 >>u 0x1F<32>
	branch r11 != r14 l004042B0
	// succ:  l004042A4 l004042B0
l004042A4:
	r3 = r9 | r4
	r8 = 2<32>
	branch 0<32> != r3 l004042E4
	// succ:  l004042B0 l004042E4
l004042B0:
	branch r2 != r14 l004042C0
	// succ:  l004042B4 l004042C0
l004042B4:
	r3 = r10 | r6
	r8 = 2<32>
	branch 0<32> != r3 l004042E4
	// succ:  l004042C0 l004042E4
l004042C0:
	r3 = 0<32>
	branch 0<32> != r11 l004042CE
	// succ:  l004042C6 l004042CE
l004042C6:
	r4 = r9 | r4
	r3 = CONVERT(r4 <u 1<32>, bool, word32)
	// succ:  l004042CE
l004042CE:
	branch 0<32> != r2 l004042D8
	// succ:  l004042D2 l004042D8
l004042D2:
	r6 = r10 | r6
	branch r6 == 0<32> l00404312
	// succ:  l004042D8 l00404312
l004042D8:
	branch 0<32> == r3 l0040431A
	// succ:  l004042DC l0040431A
l004042DC:
	r8 = 0xFFFFFFFF<32>
	branch r7 == 0<32> l004042E4
	// succ:  l004042E0_1 l004042E4
l004042E0_1:
	r8 = r7
	// succ:  l004042E4
l004042E4:
	r4 = r8
	return
	// succ:  __ltdf2_exit
l004042E8:
	branch r11 >= r2 l004042F6
	// succ:  l004042EC l004042F6
l004042EC:
	r8 = 0xFFFFFFFF<32>
	branch r5 == 0<32> l004042F4
	// succ:  l004042F0_1 l004042F4
l004042F0_1:
	r8 = r5
	// succ:  l004042F4
l004042F4:
	goto 0x004042E4<p32>
	goto l004042E4
	// succ:  l004042E4
l004042F6:
	branch r10 <u r9 l00404320
	// succ:  l004042FA l00404320
l004042FA:
	branch r9 != r10 l0040430A
	// succ:  l004042FE l0040430A
l004042FE:
	branch r13 <u r12 l00404320
	// succ:  l00404302 l00404320
l00404302:
	r8 = 0<32>
	branch r12 <u r13 l004042EC
	// succ:  l00404308 l004042EC
l00404308:
	goto 0x004042E4<p32>
	goto l004042E4
	// succ:  l004042E4
l0040430A:
	r8 = 0<32>
	branch r9 <u r10 l004042EC
	// succ:  l00404310 l004042EC
l00404310:
	goto 0x004042E4<p32>
	goto l004042E4
	// succ:  l004042E4
l00404312:
	r8 = 0<32>
	branch 0<32> != r3 l004042E4
	// succ:  l00404318 l004042E4
l00404318:
	goto 0x00404320<p32>
	goto l00404320
	// succ:  l00404320
l0040431A:
	branch r5 != r7 l00404320
	// succ:  l0040431C l00404320
l0040431C:
	branch r2 >= r11 l004042E8
	// succ:  l00404320 l004042E8
l00404320:
	r4 = 0xFFFFFFFF<32>
	r8 = 1<32>
	branch r5 == 0<32> l0040432A
	// succ:  l00404326_1 l0040432A
l00404326_1:
	r8 = r4
	// succ:  l0040432A
l0040432A:
	goto 0x004042E4<p32>
	goto l004042E4
	// succ:  l004042E4
__ltdf2_exit:


// __muldf3
// Return size: 0
define __muldf3
__muldf3_entry:
	sp = fp
	r25 = 0x404330<32>
	// succ:  l00404330
l00404330:
	r10 = __ext(r5, 4<32>, 0xB<32>)
	r11 = __ext(r5, 0<32>, 0x14<32>)
	r12 = r6
	r5 = r5 >>u 0x1F<32>
	branch 0<32> == r10 l004043BE
	// succ:  l00404342 l004043BE
l00404342:
	r6 = 0x7FF<32>
	branch r10 == r6 l00404410
	// succ:  l0040434A l00404410
l0040434A:
	r8 = 0x8000000<32>
	r6 = r4 >>u 0x1D<32>
	r6 = r6 | r8
	r11 = r11 << 3<32>
	r11 = r6 | r11
	r8 = r4 << 3<32>
	r10 = r10 + 0xFFFFFC01<32>
	// succ:  l00404366
l00404366:
	r13 = 0<32>
	// succ:  l00404368
l00404368:
	r6 = __ext(r7, 4<32>, 0xB<32>)
	r4 = __ext(r7, 0<32>, 0x14<32>)
	r14 = r7 >>u 0x1F<32>
	branch 0<32> == r6 l00404432
	// succ:  l00404378 l00404432
l00404378:
	r7 = 0x7FF<32>
	branch r6 == r7 l00404482
	// succ:  l00404380 l00404482
l00404380:
	r9 = r12 >>u 0x1D<32>
	r7 = 0x8000000<32>
	r9 = r9 | r7
	r4 = r4 << 3<32>
	r4 = r9 | r4
	r6 = r6 + 0xFFFFFC01<32>
	r9 = r12 << 3<32>
	// succ:  l0040439A
l0040439A:
	r3 = 0<32>
	// succ:  l0040439C
l0040439C:
	r6 = r6 + r10
	r10 = r13 << 2<32>
	r10 = r10 | r3
	r2 = r5 ^ r14
	r10 = r10 + 0xFFFFFFFF<32>
	r12 = r6 + 1<32>
	branch r10 >=u 0xF<32> l004044A4
	// succ:  l004043B4 l004044A4
l004043B4:
	r7 = 0x0040B35E<p32>
	r7 = Mem0[r7 + r10 * 4<32>:word32]
	call r7 (retsize: 0;)
	return
	// succ:  __muldf3_exit
l004043BE:
	r8 = r11 | r4
	branch 0<32> == r8 l00404420
	// succ:  l004043C6 l00404420
l004043C6:
	r9 = __clz(r11)
	branch 0<32> != r11 l004043D6
	// succ:  l004043CE l004043D6
l004043CE:
	r10 = __clz(r4)
	r9 = r10 + 0x20<32>
	// succ:  l004043D6
l004043D6:
	r6 = r9 + 0xFFFFFFF5<32>
	branch r6 >= 0x1D<32> l00404404
	// succ:  l004043DE l00404404
l004043DE:
	r10 = 0x1D<32>
	r8 = r9 + 0xFFFFFFF8<32>
	r10 = r10 - r6
	r11 = r11 << r8
	r10 = r4 >>u r10
	r8 = r4 << r8
	r11 = r10 | r11
	// succ:  l004043FA
l004043FA:
	r10 = 0xFFFFFC0D<32>
	r10 = r10 - r9
	goto 0x00404366<p32>
	goto l00404366
	// succ:  l00404366
l00404404:
	r11 = r9 + 0xFFFFFFD8<32>
	r8 = 0<32>
	r11 = r4 << r11
	goto 0x004043FA<p32>
	goto l004043FA
	// succ:  l004043FA
l00404410:
	r8 = r11 | r4
	branch 0<32> == r8 l0040442A
	// succ:  l00404418 l0040442A
l00404418:
	r8 = r4
	r13 = 3<32>
	goto 0x00404368<p32>
	goto l00404368
	// succ:  l00404368
l00404420:
	r11 = 0<32>
	r10 = 0<32>
	r13 = 1<32>
	goto 0x00404368<p32>
	goto l00404368
	// succ:  l00404368
l0040442A:
	r11 = 0<32>
	r13 = 2<32>
	goto 0x00404368<p32>
	goto l00404368
	// succ:  l00404368
l00404432:
	r9 = r4 | r12
	branch 0<32> == r9 l00404492
	// succ:  l0040443A l00404492
l0040443A:
	r2 = __clz(r4)
	branch r4 != 0<32> l00404448
	// succ:  l00404440 l00404448
l00404440:
	r2 = __clz(r12)
	r2 = r2 + 0x20<32>
	// succ:  l00404448
l00404448:
	r6 = r2 + 0xFFFFFFF5<32>
	branch r6 >= 0x1D<32> l00404476
	// succ:  l00404450 l00404476
l00404450:
	r3 = 0x1D<32>
	r9 = r2 + 0xFFFFFFF8<32>
	r3 = r3 - r6
	r4 = r4 << r9
	r3 = r12 >>u r3
	r9 = r12 << r9
	r4 = r3 | r4
	// succ:  l0040446C
l0040446C:
	r6 = 0xFFFFFC0D<32>
	r6 = r6 - r2
	goto 0x0040439A<p32>
	goto l0040439A
	// succ:  l0040439A
l00404476:
	r4 = r2 + 0xFFFFFFD8<32>
	r9 = 0<32>
	r4 = r12 << r4
	goto 0x0040446C<p32>
	goto l0040446C
	// succ:  l0040446C
l00404482:
	r9 = r4 | r12
	branch 0<32> == r9 l0040449C
	// succ:  l0040448A l0040449C
l0040448A:
	r9 = r12
	r3 = 3<32>
	goto 0x0040439C<p32>
	goto l0040439C
	// succ:  l0040439C
l00404492:
	r4 = 0<32>
	r6 = 0<32>
	r3 = 1<32>
	goto 0x0040439C<p32>
	goto l0040439C
	// succ:  l0040439C
l0040449C:
	r4 = 0<32>
	r3 = 2<32>
	goto 0x0040439C<p32>
	goto l0040439C
	// succ:  l0040439C
l004044A4:
	r3 = r8 *s r4
	r10 = SLICE(r8 *u r9, word32, 32)
	r13 = r8 *s r9
	r15 = r4 *s r11
	r8 = SLICE(r8 *u r4, word32, 32)
	r5 = r9 *s r11
	r9 = SLICE(r9 *u r11, word32, 32)
	r10 = r3 + r10
	r7 = SLICE(r4 *u r11, word32, 32)
	r3 = CONVERT(r10 <u r3, bool, word32)
	r15 = r8 + r15
	r10 = r10 + r5
	r25 = r3 + r15
	r5 = CONVERT(r10 <u r5, bool, word32)
	r24 = r9 + r25
	r14 = r5 + r24
	r8 = CONVERT(r15 <u r8, bool, word32)
	r3 = CONVERT(r25 <u r3, bool, word32)
	r9 = CONVERT(r24 <u r9, bool, word32)
	r4 = r8 | r3
	r5 = CONVERT(r14 <u r5, bool, word32)
	r4 = r4 + r7
	r5 = r9 | r5
	r8 = r10 << 9<32>
	r4 = r4 + r5
	r8 = r8 | r13
	r7 = r14 >>u 0x17<32>
	r4 = r4 << 9<32>
	r8 = CONVERT(0<32> <u r8, bool, word32)
	r5 = r10 >>u 0x17<32>
	r11 = r4 | r7
	r8 = r8 | r5
	r7 = r14 << 9<32>
	r8 = r8 | r7
	branch __bit(r11, 0x18<32>) l004045E8
	// succ:  l0040452A l004045E8
l0040452A:
	r7 = r8 >>u 1<32>
	r8 = r8 & 1<32>
	r8 = r7 | r8
	r7 = r11 << 0x1F<32>
	r8 = r8 | r7
	r11 = r11 >>u 1<32>
	// succ:  l00404542
l00404542:
	r5 = r12 + 0x3FF<32>
	branch 0<32> >= r5 l004045EC
	// succ:  l0040454A l004045EC
l0040454A:
	r7 = r8 & 7<32>
	branch r7 == 0<32> l00404564
	// succ:  l00404550 l00404564
l00404550:
	r7 = r8 & 0xF<32>
	branch r7 == 4<32> l00404564
	// succ:  l00404558 l00404564
l00404558:
	r7 = r8 + 4<32>
	r8 = CONVERT(r7 <u r8, bool, word32)
	r11 = r11 + r8
	r8 = r7
	// succ:  l00404564
l00404564:
	branch __bit(r11, 0x18<32>) l00404570
	// succ:  l00404568 l00404570
l00404568:
	r11 = __ins(r11, 0<32>, 8<32>, 1<32>)
	r5 = r12 + 0x400<32>
	// succ:  l00404570
l00404570:
	r7 = 0x7FE<32>
	branch r7 < r5 l0040467C
	// succ:  l00404578 l0040467C
l00404578:
	r7 = r11 << 0x1D<32>
	r8 = r8 >>u 3<32>
	r8 = r7 | r8
	r7 = r11 >>u 3<32>
	// succ:  l00404588
l00404588:
	r6 = 0<32>
	r9 = r8
	r6 = __ins(r6, r7, 0<32>, 1<32>)
	r6 = __ins(r6, r5, 4<32>, 1<32>)
	r6 = __ins(r6, r2, 0xF<32>, 1<32>)
	r7 = r6
	r4 = r9
	r5 = r7
	return
	// succ:  __muldf3_exit
l004045C6:
	r5 = 0x7FF<32>
	goto 0x00404588<p32>
	goto l00404588
	// succ:  l00404588
l004045DA:
	r7 = 0<32>
	r8 = 0<32>
	goto 0x00404642<p32>
	goto l00404642
	// succ:  l00404642
l004045E8:
	r12 = r6
	goto 0x00404542<p32>
	goto l00404542
	// succ:  l00404542
l004045EC:
	r7 = 1<32>
	r7 = r7 - r5
	branch r7 >= 0x39<32> l004045DA
	// succ:  l004045F4 l004045DA
l004045F4:
	branch r7 >= 0x20<32> l00404646
	// succ:  l004045F8 l00404646
l004045F8:
	r5 = 0x20<32>
	r4 = r8 >>u r7
	r5 = r5 - r7
	r7 = r11 >>u r7
	r6 = r11 << r5
	r8 = r8 << r5
	r6 = r6 | r4
	r8 = CONVERT(0<32> <u r8, bool, word32)
	r8 = r6 | r8
	// succ:  l00404616
l00404616:
	r6 = r8 & 7<32>
	branch r6 == 0<32> l00404630
	// succ:  l0040461C l00404630
l0040461C:
	r6 = r8 & 0xF<32>
	branch r6 == 4<32> l00404630
	// succ:  l00404624 l00404630
l00404624:
	r6 = r8 + 4<32>
	r8 = CONVERT(r6 <u r8, bool, word32)
	r7 = r7 + r8
	r8 = r6
	// succ:  l00404630
l00404630:
	branch !__bit(r7, 0x17<32>) l00404680
	// succ:  l00404634 l00404680
l00404634:
	r6 = r7 << 0x1D<32>
	r8 = r8 >>u 3<32>
	r8 = r6 | r8
	r7 = r7 >>u 3<32>
	// succ:  l00404642
l00404642:
	r5 = 0<32>
	goto 0x00404588<p32>
	goto l00404588
	// succ:  l00404588
l00404646:
	r6 = 0xFFFFFFE1<32>
	r6 = r6 - r5
	r5 = 0<32>
	r6 = r11 >>u r6
	branch r7 == 0x20<32> l0040465E
	// succ:  l00404656 l0040465E
l00404656:
	r7 = -r7
	r5 = r11 << r7
	// succ:  l0040465E
l0040465E:
	r8 = r5 | r8
	r7 = 0<32>
	r8 = CONVERT(0<32> <u r8, bool, word32)
	r8 = r6 | r8
	goto 0x00404616<p32>
	goto l00404616
	// succ:  l00404616
l0040467C:
	r7 = 0<32>
	r8 = 0<32>
	goto 0x004045C6<p32>
	goto l004045C6
	// succ:  l004045C6
l00404680:
	r7 = 0<32>
	r8 = 0<32>
	r5 = 1<32>
	goto 0x00404588<p32>
	goto l00404588
	// succ:  l00404588
__muldf3_exit:


// __unorddf2
// Return size: 0
define __unorddf2
__unorddf2_entry:
	sp = fp
	r25 = 0x404690<32>
	// succ:  l00404690
l00404690:
	r9 = __ext(r5, 0<32>, 0x14<32>)
	r10 = 0x7FF<32>
	r5 = __ext(r5, 4<32>, 0xB<32>)
	r8 = __ext(r7, 0<32>, 0x14<32>)
	r7 = __ext(r7, 4<32>, 0xB<32>)
	branch r5 != r10 l004046B0
	// succ:  l004046A8 l004046B0
l004046A8:
	r5 = r9 | r4
	r4 = 1<32>
	branch r5 != 0<32> l004046BE
	// succ:  l004046B0 l004046BE
l004046B0:
	r4 = 0<32>
	branch r7 != r10 l004046BE
	// succ:  l004046B6 l004046BE
l004046B6:
	r4 = r8 | r6
	r4 = CONVERT(0<32> <u r4, bool, word32)
	// succ:  l004046BE
l004046BE:
	return
	// succ:  __unorddf2_exit
__unorddf2_exit:


// __fixdfsi
// Return size: 0
define __fixdfsi
__fixdfsi_entry:
	sp = fp
	r25 = 0x4046C0<32>
	// succ:  l004046C0
l004046C0:
	r6 = __ext(r5, 4<32>, 0xB<32>)
	r7 = 0x3FE<32>
	r9 = r4
	r8 = __ext(r5, 0<32>, 0x14<32>)
	r4 = 0<32>
	r5 = r5 >>u 0x1F<32>
	branch r7 >= r6 l00404714
	// succ:  l004046D8 l00404714
l004046D8:
	r7 = 0x41D<32>
	branch r7 >= r6 l004046EA
	// succ:  l004046E0 l004046EA
l004046E0:
	r5 = r5 + 0x7FFFFFFF<32>
	r4 = r5
	return
	// succ:  __fixdfsi_exit
l004046EA:
	r7 = 0x1000000<32>
	r7 = r8 | r7
	r8 = 0x433<32>
	r8 = r8 - r6
	branch r8 >= 0x20<32> l00404716
	// succ:  l004046FE l00404716
l004046FE:
	r4 = r6 + 0xFFFFFBED<32>
	r8 = r9 >>u r8
	r4 = r7 << r4
	r4 = r4 | r8
	// succ:  l0040470E
l0040470E:
	branch r5 == 0<32> l00404714
	// succ:  l00404710 l00404714
l00404710:
	r4 = -r4
	// succ:  l00404714
l00404714:
	return
	// succ:  __fixdfsi_exit
l00404716:
	r4 = 0x413<32>
	r4 = r4 - r6
	r4 = r7 >>u r4
	goto 0x0040470E<p32>
	goto l0040470E
	// succ:  l0040470E
__fixdfsi_exit:


// sysconf
// Return size: 0
define sysconf
sysconf_entry:
	sp = fp
	r25 = 0x404730<32>
	// succ:  l00404730
l00404730:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 336<i32>
	r7 = 0xF8<32>
	r16 = r4
	branch r7 <u r4 l00404748
	// succ:  l0040473E l00404748
l0040473E:
	r7 = 0x0040B555<p32>
	r4 = CONVERT(Mem0[r7 + r4 * 2<32>:int16], int16, int32)
	branch r4 != 0<32> l00404756
	// succ:  l00404748 l00404756
l00404748:
	goto 0x004049B0<p32>
	// succ:  l00404748_thunk___errno_location
l00404748_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  sysconf_exit
l00404752:
	ra = Mem0[sp + 332<i32>:word32]
	r16 = Mem0[sp + 328<i32>:word32]
	sp = sp + 336<i32>
	return
	// succ:  sysconf_exit
l00404756:
	r7 = 0xFFFFFFFF<32>
	branch r4 >= r7 l00404752
	// succ:  l0040475C l00404752
l0040475C:
	r7 = r7 + 0xFFFFFF01<32>
	branch r4 >= r7 l00404782
	// succ:  l00404764 l00404782
l00404764:
	r5 = sp + 8<32>
	r4 = __ext(r4, 0<32>, 0xE<32>)
	goto 0x00405B30<p32>
	// succ:  l0040476A_thunk_getrlimit64
l0040476A_thunk_getrlimit64:
	call getrlimit64 (retsize: 0;)
	return
	// succ:  sysconf_exit
l00404782:
	r7 = r4 + 0xFFFFFFFF<32>
	r7 = r7 & 0xFF<32>
	branch r7 >=u 0xA<32> l00404752
	// succ:  l0040478C l00404752
l0040478C:
	r6 = 0x0040B568<p32>
	r7 = Mem0[r6 + r7 * 4<32>:word32]
sysconf_exit:


// isxdigit
// Return size: 0
define isxdigit
isxdigit_entry:
	sp = fp
	r25 = 0x404850<32>
	// succ:  l00404850
l00404850:
	r6 = r4 + 0xFFFFFFD0<32>
	r7 = 1<32>
	branch r6 <u 0xA<32> l00404866
	// succ:  l0040485A l00404866
l0040485A:
	r4 = r4 | 0x20<32>
	r4 = r4 + 0xFFFFFF9F<32>
	r7 = CONVERT(r4 <u 6<32>, bool, word32)
	// succ:  l00404866
l00404866:
	r4 = r7
	return
	// succ:  isxdigit_exit
isxdigit_exit:


// isxdigit_l
// Return size: 0
define isxdigit_l
isxdigit_l_entry:
	sp = fp
	r25 = 0x40486A<32>
	// succ:  l0040486A
l0040486A:
	goto 0x00404850<p32>
	// succ:  l0040486A_thunk_isxdigit
l0040486A_thunk_isxdigit:
	call isxdigit (retsize: 0;)
	return
	// succ:  isxdigit_l_exit
isxdigit_l_exit:


// dummy
// Return size: 0
define dummy
dummy_entry:
	sp = fp
	r25 = 0x404870<32>
	// succ:  l00404870
l00404870:
	return
	// succ:  dummy_exit
dummy_exit:


// __init_ssp
// Return size: 0
define __init_ssp
__init_ssp_entry:
	sp = fp
	r25 = 0x404872<32>
	// succ:  l00404872
l00404872:
	return
	// succ:  __init_ssp_exit
__init_ssp_exit:


// __init_libc
// Return size: 0
define __init_libc
__init_libc_entry:
	sp = fp
	r25 = 0x404874<32>
	// succ:  l00404874
l00404874:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 208<i32>
	r6 = 0x98<32>
	r17 = r4
	r16 = r5
	r5 = 0<32>
	r4 = sp + 0x28<32>
	goto 0x0040A690<p32>
	// succ:  l00404880_thunk_memset
l00404880_thunk_memset:
	call memset (retsize: 0;)
	return
	// succ:  __init_libc_exit
__init_libc_exit:


// __libc_start_init
// Return size: 0
define __libc_start_init
__libc_start_init_entry:
	sp = fp
	r25 = 0x404968<32>
	// succ:  l00404968
l00404968:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r16 = 0x0042FFF4<p32>
	goto 0x004000D4<p32>
	// succ:  l00404970_thunk__init
l00404970_thunk__init:
	call _init (retsize: 0;)
	return
	// succ:  __libc_start_init_exit
__libc_start_init_exit:


// __libc_start_main
// Return size: 0
define __libc_start_main
__libc_start_main_entry:
	sp = fp
	r25 = 0x404988<32>
	// succ:  l00404988
l00404988:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	sp = sp - 32<i32>
	r19 = r4
	r18 = r5
	r16 = r18 + 1<32>
	r5 = Mem0[r6:word32]
	r16 = r6 + (r16 << 2<8>)
	r17 = r6
	r4 = r16
	call __init_libc (retsize: 0;)
	goto 0x00404968<p32>
	// succ:  l0040499C_thunk___libc_start_init
l0040499C_thunk___libc_start_init:
	call __libc_start_init (retsize: 0;)
	return
	// succ:  __libc_start_main_exit
__libc_start_main_exit:


// __errno_location
// Return size: 0
define __errno_location
__errno_location_entry:
	sp = fp
	r25 = 0x4049B0<32>
	goto l004049B0
	// succ:  l004049B0
l0040085C_thunk__start_c:
	call _start_c (retsize: 0;)
	return
	// succ:  __errno_location_exit
l004049B0:
	r3 = __read_hardware_register(sp)
	r4 = r3 + 0xFFFFFF78<32>
	return
	// succ:  __errno_location_exit
l004049B0:
	goto l0040085C_thunk__start_c
	// succ:  l0040085C_thunk__start_c
__errno_location_exit:


// strerror_l
// Return size: 0
define strerror_l
strerror_l_entry:
	sp = fp
	r25 = 0x4049C0<32>
	// succ:  l004049C0
l004049C0:
	r7 = 0<32>
	// succ:  l004049C2
l004049C2:
	r6 = 0x0040BB17<p32>
	r6 = CONVERT(Mem0[r6 + r7:byte], byte, word32)
	branch r6 != 0<32> l004049D8
	// succ:  l004049CC l004049D8
l004049CC:
	r4 = 0x0040B796<p32>
	// succ:  l004049D0
l004049D0:
	branch r7 != 0<32> l004049E0
	// succ:  l004049D2 l004049E0
l004049D2:
	r5 = Mem0[r5 + 0x14<32>:word32]
	goto 0x00404A92<p32>
	// succ:  l004049D4_thunk___lctrans
l004049D4_thunk___lctrans:
	call __lctrans (retsize: 0;)
	return
	// succ:  strerror_l_exit
l004049D8:
	branch r4 == r6 l004049CC
	// succ:  l004049DC l004049CC
l004049DC:
	r7 = r7 + 1<32>
	goto 0x004049C2<p32>
	goto l004049C2
	// succ:  l004049C2
l004049E0:
	r6 = CONVERT(Mem0[r4:byte], byte, word32)
	r4 = r4 + 1<32>
	branch r6 != 0<32> l004049E0
	// succ:  l004049E6 l004049E0
l004049E6:
	r7 = r7 + 0xFFFFFFFF<32>
	goto 0x004049D0<p32>
	goto l004049D0
	// succ:  l004049D0
strerror_l_exit:


// strerror
// Return size: 0
define strerror
strerror_entry:
	sp = fp
	r25 = 0x4049EA<32>
	// succ:  l004049EA
l004049EA:
	r3 = __read_hardware_register(sp)
	r5 = Mem0[r3 - 0x38<32>:word32]
	goto 0x004049C0<p32>
	// succ:  l004049F2_thunk_strerror_l
l004049F2_thunk_strerror_l:
	call strerror_l (retsize: 0;)
	return
	// succ:  strerror_exit
strerror_exit:


// abort
// Return size: 0
define abort
abort_entry:
	sp = fp
	r25 = 0x404A00<32>
	// succ:  l00404A00
l00404A00:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r4 = 6<32>
	goto 0x00407EE0<p32>
	// succ:  l00404A04_thunk_raise
l00404A04_thunk_raise:
	call raise (retsize: 0;)
	return
	// succ:  abort_exit
abort_exit:


// __funcs_on_exit
// Return size: 0
define __funcs_on_exit
__funcs_on_exit_entry:
	sp = fp
	r25 = 0x404A20<32>
	// succ:  l00404A20
l00404A20:
	return
	// succ:  __funcs_on_exit_exit
__funcs_on_exit_exit:


// __libc_exit_fini
// Return size: 0
define __libc_exit_fini
__libc_exit_fini_entry:
	sp = fp
	r25 = 0x404A22<32>
	// succ:  l00404A22
l00404A22:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r16 = 0x0042FFFC<p32>
	goto 0x00404A32<p32>
	goto l00404A32
	// succ:  l00404A32
l00404A2C:
	r16 = r16 + 0xFFFFFFFC<32>
	r7 = Mem0[r16:word32]
	call r7 (retsize: 0;)
	// succ:  l00404A32
l00404A32:
	r7 = 0x0042FFF8<p32>
	branch r7 <u r16 l00404A2C
	// succ:  l00404A3C l00404A2C
l00404A3C:
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	goto 0x00410340<p32>
	// succ:  l00404A40_thunk__fini
l00404A40_thunk__fini:
	call _fini (retsize: 0;)
	return
	// succ:  __libc_exit_fini_exit
__libc_exit_fini_exit:


// __syscall
// Return size: 0
define __syscall
__syscall_entry:
	sp = fp
	r25 = 0x404A50<32>
	// succ:  l00404A50
l00404A50:
	r2 = r4
	r4 = r5
	r5 = r6
	r6 = r7
	r7 = r8
	r8 = r9
	r9 = r10
	__syscall(0<32>)
	return
	// succ:  __syscall_exit
__syscall_exit:


// sysinfo
// Return size: 0
define sysinfo
sysinfo_entry:
	sp = fp
	r25 = 0x404A70<32>
	// succ:  l00404A70
l00404A70:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r5 = r4
	r4 = 0xB3<32>
	goto 0x00404A50<p32>
	// succ:  l00404A78_thunk___syscall
l00404A78_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  sysinfo_exit
sysinfo_exit:


// __lctrans_impl
// Return size: 0
define __lctrans_impl
__lctrans_impl_entry:
	sp = fp
	r25 = 0x404A90<32>
	// succ:  l00404A90
l00404A90:
	return
	// succ:  __lctrans_impl_exit
__lctrans_impl_exit:


// __lctrans
// Return size: 0
define __lctrans
__lctrans_entry:
	sp = fp
	r25 = 0x404A92<32>
	// succ:  l00404A92
l00404A92:
	goto 0x00404A90<p32>
	// succ:  l00404A92_thunk___lctrans_impl
l00404A92_thunk___lctrans_impl:
	call __lctrans_impl (retsize: 0;)
	return
	// succ:  __lctrans_exit
__lctrans_exit:


// __lctrans_cur
// Return size: 0
define __lctrans_cur
__lctrans_cur_entry:
	sp = fp
	r25 = 0x404A96<32>
	// succ:  l00404A96
l00404A96:
	r3 = __read_hardware_register(sp)
	r7 = Mem0[r3 - 0x38<32>:word32]
	r5 = Mem0[r7 + 0x14<32>:word32]
	goto 0x00404A90<p32>
	// succ:  l00404AA0_thunk___lctrans_impl
l00404AA0_thunk___lctrans_impl:
	call __lctrans_impl (retsize: 0;)
	return
	// succ:  __lctrans_cur_exit
__lctrans_cur_exit:


// __simple_malloc
// Return size: 0
define __simple_malloc
__simple_malloc_entry:
	sp = fp
	r25 = 0x404AB0<32>
	// succ:  l00404AB0
l00404AB0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 32<i32>
	branch r4 == 0<32> l00404B26
	// succ:  l00404AB4 l00404B26
l00404AB4:
	r17 = r4
	branch r4 <u 2<32> l00404B72
	// succ:  l00404ABA l00404B72
l00404ABA:
	r16 = 1<32>
	goto 0x00404AC2<p32>
	goto l00404AC2
	// succ:  l00404AC2
l00404ABE:
	branch r16 >=u 0x10<32> l00404B3A
	// succ:  l00404AC2 l00404B3A
l00404AC2:
	r16 = r16 << 1<32>
	branch r16 <u r17 l00404ABE
	// succ:  l00404AC8 l00404ABE
l00404AC8:
	r16 = r16 + 0xFFFFFFFF<32>
	// succ:  l00404ACA
l00404ACA:
	r4 = 0x0041B803<p32>
	goto 0x0040AD30<p32>
	// succ:  l00404ACE_thunk___lock
l00404ACE_thunk___lock:
	call __lock (retsize: 0;)
	return
	// succ:  __simple_malloc_exit
l00404B26:
	r4 = 0x0041B831<p32>
	r16 = 0<32>
	goto 0x0040AD30<p32>
	// succ:  l00404B2C_thunk___lock
l00404B2C_thunk___lock:
	call __lock (retsize: 0;)
	return
	// succ:  __simple_malloc_exit
l00404B3A:
	r4 = 0x0041B83B<p32>
	r16 = r16 + 0xFFFFFFFF<32>
	goto 0x0040AD30<p32>
	// succ:  l00404B40_thunk___lock
l00404B40_thunk___lock:
	call __lock (retsize: 0;)
	return
	// succ:  __simple_malloc_exit
l00404B72:
	r16 = 0<32>
	r17 = 1<32>
	goto 0x00404ACA<p32>
	goto l00404ACA
	// succ:  l00404ACA
__simple_malloc_exit:


// alloc_fwd
// Return size: 0
define alloc_fwd
alloc_fwd_entry:
	sp = fp
	r25 = 0x404B80<32>
	// succ:  l00404B80
l00404B80:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	Mem0[sp + -32<i32>:word32] = r22
	sp = sp - 32<i32>
	r19 = r4
	// succ:  l00404B84
l00404B84:
	r18 = Mem0[r19 + 4<32>:word32]
	// succ:  l00404B86
l00404B86:
	branch !__bit(r18, 0<32>) l00404C4A
	// succ:  l00404B8A l00404C4A
l00404B8A:
	r7 = r18 >>u 4<32>
	r7 = r7 + 0xFFFFFFFF<32>
	branch r7 >=u 0x21<32> l00404C24
	// succ:  l00404B92 l00404C24
l00404B92:
	r20 = r7 << 4<32>
	r17 = r7
	r22 = r7
	r16 = r20 + 8<32>
	// succ:  l00404B9E
l00404B9E:
	r7 = 0x0042C7E9<p32>
	r7 = Mem0[r7 + 0xC<32>:word32]
	r21 = 0x0041B87C<p32>
	r16 = r16 + r21
	branch r7 != 0<32> l00404C12
	// succ:  l00404BAC l00404C12
l00404BAC:
	r7 = r21 + r20
	r7 = Mem0[r7 + 0x10<32>:word32]
	branch 0<32> != r7 l00404C8E
	// succ:  l00404BB6 l00404C8E
l00404BB6:
	r7 = r18
	// succ:  l00404BB8
l00404BB8:
	r6 = r22 << 4<32>
	r20 = r20 + r21
	r6 = r6 + 8<32>
	r6 = r6 + r21
	Mem0[r20 + 0x10<32>:byte] = SLICE(r6, byte, 0)
	Mem0[r20 + 0x14<32>:byte] = SLICE(r6, byte, 0)
	// succ:  l00404BCA
l00404BCA:
	branch r18 == r7 l00404C8E
	// succ:  l00404BCE l00404C8E
l00404BCE:
	r6 = Mem0[r16:word32]
	branch r6 == 0<32> l00404C44
	// succ:  l00404BD2 l00404C44
l00404BD2:
	__sync(0<32>)
	Mem0[sp:word32] = 0<32>
	__sync(0<32>)
	r7 = Mem0[r16 + 4<32>:word32]
	branch r7 == 0<32> l00404B84
	// succ:  l00404BE0 l00404B84
l00404BE0:
	r7 = 1<32>
	r6 = 0x81<32>
	r4 = 0x62<32>
	r5 = r16
	call __syscall (retsize: 0;)
	r7 = 0xFFFFFFDA<32>
	branch r7 != r4 l00404B84
	// succ:  l00404BF4 l00404B84
l00404BF4:
	r7 = 1<32>
	r6 = 1<32>
	r4 = 0x62<32>
	r5 = r16
	call __syscall (retsize: 0;)
	r18 = Mem0[r19 + 4<32>:word32]
	goto 0x00404B86<p32>
	goto l00404B86
	// succ:  l00404B86
l00404C02:
	__sync(0<32>)
	branch r6 == 0<32> l00404C4E
	// succ:  l00404C08 l00404C4E
l00404C08:
	r7 = 1<32>
	r6 = 1<32>
	r5 = r16 + 4<32>
	r4 = r16
	call __wait (retsize: 0;)
	// succ:  l00404C12
l00404C12:
	__sync(0<32>)
	// succ:  l00404C16
l00404C16:
	r6 = __load_linked_32(Mem0[r16:word32])
	r7 = 1<32>
	r7 = __store_conditional_32(Mem0[r16:word32], r7)
	branch r7 == 0<32> l00404C16
	// succ:  l00404C22 l00404C16
l00404C22:
	goto 0x00404C02<p32>
	goto l00404C02
	// succ:  l00404C02
l00404C24:
	r6 = 0x1FF<32>
	branch r6 <u r7 l00404C5C
	// succ:  l00404C2C l00404C5C
l00404C2C:
	r7 = r7 >>u 3<32>
	r6 = 0x0040BC89<p32>
	r7 = r7 + r6
	r17 = CONVERT(Mem0[r7 - 4<32>:byte], byte, word32)
	r20 = r17 << 4<32>
	r22 = r17
	r16 = r20 + 8<32>
	goto 0x00404B9E<p32>
	goto l00404B9E
	// succ:  l00404B9E
l00404C44:
	r18 = r7
	branch __bit(r18, 0<32>) l00404B8A
	// succ:  l00404C4A l00404B8A
l00404C4A:
	r4 = 0<32>
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	r20 = Mem0[sp + 8<i32>:word32]
	r21 = Mem0[sp + 4<i32>:word32]
	r22 = Mem0[sp + 0<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  alloc_fwd_exit
l00404C4E:
	r6 = r21 + r20
	r7 = Mem0[r19 + 4<32>:word32]
	r6 = Mem0[r6 + 0x10<32>:word32]
	branch 0<32> != r6 l00404BCA
	// succ:  l00404C5A l00404BCA
l00404C5A:
	goto 0x00404BB8<p32>
	goto l00404BB8
	// succ:  l00404BB8
l00404C5C:
	r6 = 0x1C00<32>
	branch r6 <u r7 l00404C7E
	// succ:  l00404C64 l00404C7E
l00404C64:
	r7 = r7 >>u 7<32>
	r6 = 0x0040BCA5<p32>
	r7 = r7 + r6
	r7 = CONVERT(Mem0[r7 - 4<32>:byte], byte, word32)
	r17 = r7 + 0x10<32>
	r20 = r17 << 4<32>
	r22 = r17
	r16 = r20 + 8<32>
	goto 0x00404B9E<p32>
	goto l00404B9E
	// succ:  l00404B9E
l00404C7E:
	r16 = 0x3F8<32>
	r22 = 0x3F<32>
	r17 = 0x3F<32>
	r20 = 0x3F0<32>
	goto 0x00404B9E<p32>
	goto l00404B9E
	// succ:  l00404B9E
l00404C8E:
	r6 = Mem0[r19 + 8<i32>:word32]
	r7 = Mem0[r19 + 12<i32>:word32]
	branch r6 == r7 l00404CEC
	// succ:  l00404C96 l00404CEC
l00404C96:
	r5 = r18
	Mem0[sp + 0x48<32>:word32] = r6
	r5 = __ins(r5, 0<32>, 0<32>, 1<32>)
	r4 = Mem0[r19 + 8<32>:word32]
	r18 = r18 | 1<32>
	r6 = Mem0[r19 + r5:word32]
	Mem0[sp + 0xC<32>:word32] = r7
	r6 = r6 | 1<32>
	Mem0[sp + 0x44<32>:word32] = r18
	Mem0[r19 + r5:word32] = r6
	r7 = Mem0[r16:word32]
	branch r7 == 0<32> l00404CC6
	// succ:  l00404CB8 l00404CC6
l00404CB8:
	__sync(0<32>)
	Mem0[sp:word32] = 0<32>
	__sync(0<32>)
	r7 = Mem0[r16 + 4<32>:word32]
	branch r7 != 0<32> l00404CCA
	// succ:  l00404CC6 l00404CCA
l00404CC6:
	r4 = 1<32>
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	r20 = Mem0[sp + 8<i32>:word32]
	r21 = Mem0[sp + 4<i32>:word32]
	r22 = Mem0[sp + 0<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  alloc_fwd_exit
l00404CCA:
	r7 = 1<32>
	r6 = 0x81<32>
	r4 = 0x62<32>
	r5 = r16
	call __syscall (retsize: 0;)
	r7 = 0xFFFFFFDA<32>
	branch r7 != r4 l00404CC6
	// succ:  l00404CDE l00404CC6
l00404CDE:
	r7 = 1<32>
	r6 = 1<32>
	r4 = 0x62<32>
	r5 = r16
	call __syscall (retsize: 0;)
	r4 = 1<32>
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	r20 = Mem0[sp + 8<i32>:word32]
	r21 = Mem0[sp + 4<i32>:word32]
	r22 = Mem0[sp + 0<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  alloc_fwd_exit
l00404CEC:
	r6 = 1<32>
	r7 = -r17
	r7 = r6 >>u r7
	r5 = CONVERT(r17 < 0x20<32>, bool, word32)
	r6 = r6 << r17
	branch r17 != 0<32> l00404D02
	// succ:  l00404CFE_1 l00404D02
l00404CFE_1:
	r7 = 0<32>
	// succ:  l00404D02
l00404D02:
	branch r5 != 0<32> l00404D06
	// succ:  l00404D02_1 l00404D06
l00404D02_1:
	r7 = r6
	// succ:  l00404D06
l00404D06:
	branch r5 != 0<32> l00404D0A
	// succ:  l00404D06_1 l00404D0A
l00404D06_1:
	r6 = 0<32>
	// succ:  l00404D0A
l00404D0A:
	r7 = ~r7
	r4 = ~r6
	branch r6 == 0<32> l00404D34
	// succ:  l00404D14 l00404D34
l00404D14:
	__sync(0<32>)
	r5 = 0x404<32>
	// succ:  l00404D1C
l00404D1C:
	r6 = r5 | 0x550<32>
	r6 = __load_linked_32(Mem0[r6:word32])
	r6 = r6 & r4
	r17 = r5 | 0x550<32>
	r6 = __store_conditional_32(Mem0[r17:word32], r6)
	branch r6 == 0<32> l00404D1C
	// succ:  l00404D30 l00404D1C
l00404D30:
	__sync(0<32>)
	// succ:  l00404D34
l00404D34:
	r6 = 0xFFFFFFFF<32>
	branch r6 == r7 l00404D4C
	// succ:  l00404D38 l00404D4C
l00404D38:
	__sync(0<32>)
	// succ:  l00404D3C
l00404D3C:
	r6 = __load_linked_32(Mem0[r21 + 4<32>:word32])
	r6 = r6 & r7
	r6 = __store_conditional_32(Mem0[r21 + 4<32>:word32], r6)
	branch r6 == 0<32> l00404D3C
	// succ:  l00404D48 l00404D3C
l00404D48:
	__sync(0<32>)
	// succ:  l00404D4C
l00404D4C:
	r18 = Mem0[r19 + 4<32>:word32]
	r6 = Mem0[r19 + 8<i32>:word32]
	r7 = Mem0[r19 + 12<i32>:word32]
	goto 0x00404C96<p32>
	goto l00404C96
	// succ:  l00404C96
alloc_fwd_exit:


// alloc_rev
// Return size: 0
define alloc_rev
alloc_rev_entry:
	sp = fp
	r25 = 0x404D54<32>
	// succ:  l00404D54
l00404D54:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	Mem0[sp + -32<i32>:word32] = r22
	sp = sp - 32<i32>
	r19 = r4
	// succ:  l00404D58
l00404D58:
	r18 = Mem0[r19:word32]
	// succ:  l00404D5A
l00404D5A:
	branch !__bit(r18, 0<32>) l00404E1E
	// succ:  l00404D5E l00404E1E
l00404D5E:
	r7 = r18 >>u 4<32>
	r7 = r7 + 0xFFFFFFFF<32>
	branch r7 >=u 0x21<32> l00404DF8
	// succ:  l00404D66 l00404DF8
l00404D66:
	r20 = r7 << 4<32>
	r17 = r7
	r22 = r7
	r16 = r20 + 8<32>
	// succ:  l00404D72
l00404D72:
	r7 = 0x0042C8D3<p32>
	r7 = Mem0[r7 + 0xC<32>:word32]
	r21 = 0x0041B966<p32>
	r16 = r16 + r21
	branch r7 != 0<32> l00404DE6
	// succ:  l00404D80 l00404DE6
l00404D80:
	r7 = r21 + r20
	r7 = Mem0[r7 + 0x10<32>:word32]
	branch 0<32> != r7 l00404E62
	// succ:  l00404D8A l00404E62
l00404D8A:
	r7 = r18
	// succ:  l00404D8C
l00404D8C:
	r6 = r22 << 4<32>
	r20 = r20 + r21
	r6 = r6 + 8<32>
	r6 = r6 + r21
	Mem0[r20 + 0x10<32>:byte] = SLICE(r6, byte, 0)
	Mem0[r20 + 0x14<32>:byte] = SLICE(r6, byte, 0)
	// succ:  l00404D9E
l00404D9E:
	branch r18 == r7 l00404E62
	// succ:  l00404DA2 l00404E62
l00404DA2:
	r6 = Mem0[r16:word32]
	branch r6 == 0<32> l00404E18
	// succ:  l00404DA6 l00404E18
l00404DA6:
	__sync(0<32>)
	Mem0[sp:word32] = 0<32>
	__sync(0<32>)
	r7 = Mem0[r16 + 4<32>:word32]
	branch r7 == 0<32> l00404D58
	// succ:  l00404DB4 l00404D58
l00404DB4:
	r7 = 1<32>
	r6 = 0x81<32>
	r4 = 0x62<32>
	r5 = r16
	call __syscall (retsize: 0;)
	r7 = 0xFFFFFFDA<32>
	branch r7 != r4 l00404D58
	// succ:  l00404DC8 l00404D58
l00404DC8:
	r7 = 1<32>
	r6 = 1<32>
	r4 = 0x62<32>
	r5 = r16
	call __syscall (retsize: 0;)
	r18 = Mem0[r19:word32]
	goto 0x00404D5A<p32>
	goto l00404D5A
	// succ:  l00404D5A
l00404DD6:
	__sync(0<32>)
	branch r6 == 0<32> l00404E22
	// succ:  l00404DDC l00404E22
l00404DDC:
	r7 = 1<32>
	r6 = 1<32>
	r5 = r16 + 4<32>
	r4 = r16
	call __wait (retsize: 0;)
	// succ:  l00404DE6
l00404DE6:
	__sync(0<32>)
	// succ:  l00404DEA
l00404DEA:
	r6 = __load_linked_32(Mem0[r16:word32])
	r7 = 1<32>
	r7 = __store_conditional_32(Mem0[r16:word32], r7)
	branch r7 == 0<32> l00404DEA
	// succ:  l00404DF6 l00404DEA
l00404DF6:
	goto 0x00404DD6<p32>
	goto l00404DD6
	// succ:  l00404DD6
l00404DF8:
	r6 = 0x1FF<32>
	branch r6 <u r7 l00404E30
	// succ:  l00404E00 l00404E30
l00404E00:
	r7 = r7 >>u 3<32>
	r6 = 0x0040BD73<p32>
	r7 = r7 + r6
	r17 = CONVERT(Mem0[r7 - 4<32>:byte], byte, word32)
	r20 = r17 << 4<32>
	r22 = r17
	r16 = r20 + 8<32>
	goto 0x00404D72<p32>
	goto l00404D72
	// succ:  l00404D72
l00404E18:
	r18 = r7
	branch __bit(r18, 0<32>) l00404D5E
	// succ:  l00404E1E l00404D5E
l00404E1E:
	r4 = 0<32>
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	r20 = Mem0[sp + 8<i32>:word32]
	r21 = Mem0[sp + 4<i32>:word32]
	r22 = Mem0[sp + 0<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  alloc_rev_exit
l00404E22:
	r6 = r21 + r20
	r7 = Mem0[r19:word32]
	r6 = Mem0[r6 + 0x10<32>:word32]
	branch 0<32> != r6 l00404D9E
	// succ:  l00404E2E l00404D9E
l00404E2E:
	goto 0x00404D8C<p32>
	goto l00404D8C
	// succ:  l00404D8C
l00404E30:
	r6 = 0x1C00<32>
	branch r6 <u r7 l00404E52
	// succ:  l00404E38 l00404E52
l00404E38:
	r7 = r7 >>u 7<32>
	r6 = 0x0040BD8F<p32>
	r7 = r7 + r6
	r7 = CONVERT(Mem0[r7 - 4<32>:byte], byte, word32)
	r17 = r7 + 0x10<32>
	r20 = r17 << 4<32>
	r22 = r17
	r16 = r20 + 8<32>
	goto 0x00404D72<p32>
	goto l00404D72
	// succ:  l00404D72
l00404E52:
	r16 = 0x3F8<32>
	r22 = 0x3F<32>
	r17 = 0x3F<32>
	r20 = 0x3F0<32>
	goto 0x00404D72<p32>
	goto l00404D72
	// succ:  l00404D72
l00404E62:
	r18 = __ins(r18, 0<32>, 0<32>, 1<32>)
	r19 = r19 - r18
	r5 = Mem0[r19 + 8<i32>:word32]
	r6 = Mem0[r19 + 12<i32>:word32]
	branch r5 == r6 l00404EC8
	// succ:  l00404E70 l00404EC8
l00404E70:
	r7 = Mem0[r19 + 4<32>:word32]
	Mem0[sp + 8<32>:word32] = r5
	r4 = r7
	r17 = Mem0[r19 + 8<32>:word32]
	r4 = __ins(r4, 0<32>, 0<32>, 1<32>)
	r7 = r7 | 1<32>
	r5 = Mem0[r19 + r4:word32]
	Mem0[sp + 0x4C<32>:word32] = r6
	r5 = r5 | 1<32>
	Mem0[sp + 0x44<32>:word32] = r7
	Mem0[r19 + r4:word32] = r5
	r7 = Mem0[r16:word32]
	branch r7 == 0<32> l00404EA2
	// succ:  l00404E94 l00404EA2
l00404E94:
	__sync(0<32>)
	Mem0[sp:word32] = 0<32>
	__sync(0<32>)
	r7 = Mem0[r16 + 4<32>:word32]
	branch r7 != 0<32> l00404EA6
	// succ:  l00404EA2 l00404EA6
l00404EA2:
	r4 = 1<32>
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	r20 = Mem0[sp + 8<i32>:word32]
	r21 = Mem0[sp + 4<i32>:word32]
	r22 = Mem0[sp + 0<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  alloc_rev_exit
l00404EA6:
	r7 = 1<32>
	r6 = 0x81<32>
	r4 = 0x62<32>
	r5 = r16
	call __syscall (retsize: 0;)
	r7 = 0xFFFFFFDA<32>
	branch r7 != r4 l00404EA2
	// succ:  l00404EBA l00404EA2
l00404EBA:
	r7 = 1<32>
	r6 = 1<32>
	r4 = 0x62<32>
	r5 = r16
	call __syscall (retsize: 0;)
	r4 = 1<32>
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	r20 = Mem0[sp + 8<i32>:word32]
	r21 = Mem0[sp + 4<i32>:word32]
	r22 = Mem0[sp + 0<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  alloc_rev_exit
l00404EC8:
	r6 = 1<32>
	r7 = -r17
	r7 = r6 >>u r7
	r5 = CONVERT(r17 < 0x20<32>, bool, word32)
	r6 = r6 << r17
	branch r17 != 0<32> l00404EDE
	// succ:  l00404EDA_1 l00404EDE
l00404EDA_1:
	r7 = 0<32>
	// succ:  l00404EDE
l00404EDE:
	branch r5 != 0<32> l00404EE2
	// succ:  l00404EDE_1 l00404EE2
l00404EDE_1:
	r7 = r6
	// succ:  l00404EE2
l00404EE2:
	branch r5 != 0<32> l00404EE6
	// succ:  l00404EE2_1 l00404EE6
l00404EE2_1:
	r6 = 0<32>
	// succ:  l00404EE6
l00404EE6:
	r7 = ~r7
	r4 = ~r6
	branch r6 == 0<32> l00404F10
	// succ:  l00404EF0 l00404F10
l00404EF0:
	__sync(0<32>)
	r5 = 0x404<32>
	// succ:  l00404EF8
l00404EF8:
	r6 = r5 | 0x550<32>
	r6 = __load_linked_32(Mem0[r6:word32])
	r6 = r6 & r4
	r17 = r5 | 0x550<32>
	r6 = __store_conditional_32(Mem0[r17:word32], r6)
	branch r6 == 0<32> l00404EF8
	// succ:  l00404F0C l00404EF8
l00404F0C:
	__sync(0<32>)
	// succ:  l00404F10
l00404F10:
	r6 = 0xFFFFFFFF<32>
	branch r6 == r7 l00404F28
	// succ:  l00404F14 l00404F28
l00404F14:
	__sync(0<32>)
	// succ:  l00404F18
l00404F18:
	r6 = __load_linked_32(Mem0[r21 + 4<32>:word32])
	r6 = r6 & r7
	r6 = __store_conditional_32(Mem0[r21 + 4<32>:word32], r6)
	branch r6 == 0<32> l00404F18
	// succ:  l00404F24 l00404F18
l00404F24:
	__sync(0<32>)
	// succ:  l00404F28
l00404F28:
	r5 = Mem0[r19 + 8<i32>:word32]
	r6 = Mem0[r19 + 12<i32>:word32]
	goto 0x00404E70<p32>
	goto l00404E70
	// succ:  l00404E70
alloc_rev_exit:


// free
// Return size: 0
define free
free_entry:
	sp = fp
	r25 = 0x404F2E<32>
	// succ:  l00404F2E
l00404F2E:
	branch 0<32> == r4 l00405290
	// succ:  l00404F32 l00405290
l00404F32:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 64<i32>
	r7 = Mem0[r4 - 4<32>:word32]
	r17 = r4 + 0xFFFFFFF8<32>
	r22 = r7
	r22 = __ins(r22, 0<32>, 0<32>, 1<32>)
	branch !__bit(r7, 0<32>) l00404F5C
	// succ:  l00404F46 l00404F5C
l00404F46:
	r7 = Mem0[r4 - 8<32>:word32]
	r4 = r17 - r7
	r5 = r7 + r22
	branch __bit(r7, 0<32>) l00404F6E
	// succ:  l00404F54 l00404F6E
l00404F54:
	Mem0[r0:byte] = SLICE(0<32>, byte, 0)
	__trap_code(0<32>)
	// succ:  l00404F5C
l00404F5C:
	r6 = Mem0[r17 + r22:word32]
	r18 = r17 + r22
	branch r6 == r7 l00404F76
	// succ:  l00404F66 l00404F76
l00404F66:
	Mem0[r0:byte] = SLICE(0<32>, byte, 0)
	__trap_code(0<32>)
	// succ:  l00404F6E
l00404F6E:
	r30 = Mem0[sp + 60<i32>:word32]
	ra = Mem0[sp + 56<i32>:word32]
	r16 = Mem0[sp + 52<i32>:word32]
	r17 = Mem0[sp + 48<i32>:word32]
	r18 = Mem0[sp + 44<i32>:word32]
	r19 = Mem0[sp + 40<i32>:word32]
	r20 = Mem0[sp + 36<i32>:word32]
	r21 = Mem0[sp + 32<i32>:word32]
	r22 = Mem0[sp + 28<i32>:word32]
	r23 = Mem0[sp + 24<i32>:word32]
	sp = sp + 64<i32>
	goto 0x00405CC2<p32>
	// succ:  l00404F72_thunk_munmap
l00404F72_thunk_munmap:
	call munmap (retsize: 0;)
	return
	// succ:  free_exit
l00404F76:
	r19 = r22
	r30 = 0x0041BA66<p32>
	r21 = 0x0042C9D8<p32>
	Mem0[sp + 8<32>:word32] = 0<32>
	// succ:  l00404F82
l00404F82:
	r7 = Mem0[r17:word32]
	r6 = Mem0[r18 + 4<32>:word32]
	r7 = r7 & r6
	branch __bit(r7, 0<32>) l0040500C
	// succ:  l00404F8C l0040500C
l00404F8C:
	r16 = r19 >>u 4<32>
	r7 = r19 | 1<32>
	r16 = r16 + 0xFFFFFFFF<32>
	Mem0[sp + 0x44<32>:word32] = r7
	Mem0[sp:word32] = r7
	branch r16 <u 0x21<32> l00404FB0
	// succ:  l00404F9C l00404FB0
l00404F9C:
	r7 = 0x1FF<32>
	branch r7 <u r16 l004050C6
	// succ:  l00404FA4 l004050C6
l00404FA4:
	r16 = r16 >>u 3<32>
	r7 = 0x0040BE45<p32>
	r7 = r16 + r7
	r16 = CONVERT(Mem0[r7 - 4<32>:byte], byte, word32)
	// succ:  l00404FB0
l00404FB0:
	r20 = r16 << 4<32>
	Mem0[sp + 0xC<32>:word32] = r16
	r8 = r20 + 8<32>
	// succ:  l00404FBA
l00404FBA:
	r7 = Mem0[r21 + 3<32>:word32]
	r23 = r30 + r8
	branch 0<32> != r7 l004050B4
	// succ:  l00404FC4 l004050B4
l00404FC4:
	r7 = r30 + r20
	r6 = Mem0[r7 + 0x10<32>:word32]
	branch 0<32> == r6 l004050E8
	// succ:  l00404FCE l004050E8
l00404FCE:
	r7 = Mem0[r21 + 3<32>:word32]
	branch 0<32> != r7 l00405086
	// succ:  l00404FD4 l00405086
l00404FD4:
	r7 = Mem0[r17:word32]
	r6 = Mem0[r18 + 4<32>:word32]
	r7 = r7 & r6
	branch !__bit(r7, 0<32>) l00405150
	// succ:  l00404FDE l00405150
l00404FDE:
	r7 = Mem0[r30 + 0x408<32>:word32]
	branch r7 == 0<32> l00404FF8
	// succ:  l00404FE4 l00404FF8
l00404FE4:
	__sync(0<32>)
	Mem0[r30 + 0x408<32>:byte] = SLICE(0<32>, byte, 0)
	__sync(0<32>)
	r7 = Mem0[r30 + 0x40C<32>:word32]
	branch 0<32> != r7 l00405118
	// succ:  l00404FF8 l00405118
l00404FF8:
	r7 = Mem0[r23:word32]
	branch r7 == 0<32> l0040500C
	// succ:  l00404FFC l0040500C
l00404FFC:
	__sync(0<32>)
	Mem0[r23:word32] = r11
	__sync(0<32>)
	r7 = Mem0[r23 + 1<32>:word32]
	branch 0<32> != r7 l004050F8
	// succ:  l0040500C l004050F8
l0040500C:
	r4 = r17
	call alloc_rev (retsize: 0;)
	branch r4 == 0<32> l0040503E
	// succ:  l00405012 l0040503E
l00405012:
	r7 = Mem0[r17:word32]
	r5 = 0x280000<32>
	r7 = __ins(r7, 0<32>, 0<32>, 1<32>)
	r17 = r17 - r7
	r7 = Mem0[r17 + 4<32>:word32]
	r7 = __ins(r7, 0<32>, 0<32>, 1<32>)
	r6 = r7 + r22
	r19 = r19 + r7
	branch r5 >=u r6 l0040503E
	// succ:  l0040502E l0040503E
l0040502E:
	r6 = r6 ^ r7
	r17 = Mem0[sp + 8<32>:word32]
	r7 = CONVERT(r7 <u r6, bool, word32)
	r6 = 1<32>
	branch r7 == 0<32> l0040503C
	// succ:  l00405038_1 l0040503C
l00405038_1:
	r5 = r6
	// succ:  l0040503C
l0040503C:
	Mem0[sp + 8<32>:word32] = r5
	// succ:  l0040503E
l0040503E:
	r4 = r18
	call alloc_fwd (retsize: 0;)
	branch 0<32> == r4 l00404F82
	// succ:  l00405046 l00404F82
l00405046:
	r7 = Mem0[r18 + 4<32>:word32]
	r5 = 0x280000<32>
	r7 = __ins(r7, 0<32>, 0<32>, 1<32>)
	r6 = r7 + r22
	r19 = r19 + r7
	branch r5 >=u r6 l0040506A
	// succ:  l0040505A l0040506A
l0040505A:
	r17 = Mem0[sp + 8<32>:word32]
	r6 = r6 ^ r7
	r6 = CONVERT(r7 <u r6, bool, word32)
	r5 = 1<32>
	branch r6 == 0<32> l00405068
	// succ:  l00405064_1 l00405068
l00405064_1:
	r4 = r5
	// succ:  l00405068
l00405068:
	Mem0[sp + 8<32>:word32] = r4
	// succ:  l0040506A
l0040506A:
	r18 = r18 + r7
	goto 0x00404F82<p32>
	goto l00404F82
	// succ:  l00404F82
l0040506E:
	__sync(0<32>)
	branch 0<32> == r6 l00404FD4
	// succ:  l00405076 l00404FD4
l00405076:
	r7 = 1<32>
	r6 = 1<32>
	r5 = 0x0041BCED<p32>
	r4 = 0x0041BCED<p32>
	goto 0x0040ADB0<p32>
	// succ:  l00405082_thunk___wait
l00405082_thunk___wait:
	call __wait (retsize: 0;)
	return
	// succ:  free_exit
l00405086:
	__sync(0<32>)
	// succ:  l0040508A
l0040508A:
	r7 = r30 + 0x408<32>
	r6 = __load_linked_32(Mem0[r7:word32])
	r7 = 1<32>
	r5 = r30 + 0x408<32>
	r7 = __store_conditional_32(Mem0[r5:word32], r7)
	branch r7 == 0<32> l0040508A
	// succ:  l0040509E l0040508A
l0040509E:
	goto 0x0040506E<p32>
	goto l0040506E
	// succ:  l0040506E
l004050A0:
	__sync(0<32>)
	branch 0<32> == r6 l00404FC4
	// succ:  l004050A8 l00404FC4
l004050A8:
	r7 = 1<32>
	r6 = 1<32>
	r5 = r23 + 4<32>
	r4 = r23
	call __wait (retsize: 0;)
	// succ:  l004050B4
l004050B4:
	__sync(0<32>)
	// succ:  l004050B8
l004050B8:
	r6 = __load_linked_32(Mem0[r23:word32])
	r7 = 1<32>
	r7 = __store_conditional_32(Mem0[r23:word32], r7)
	branch r7 == 0<32> l004050B8
	// succ:  l004050C4 l004050B8
l004050C4:
	goto 0x004050A0<p32>
	goto l004050A0
	// succ:  l004050A0
l004050C6:
	r7 = 0x1C00<32>
	branch r7 <u r16 l00405140
	// succ:  l004050CE l00405140
l004050CE:
	r16 = r16 >>u 7<32>
	r7 = 0x0040BEDA<p32>
	r7 = r16 + r7
	r16 = CONVERT(Mem0[r7 - 4<32>:byte], byte, word32)
	r16 = r16 + 0x10<32>
	r20 = r16 << 4<32>
	Mem0[sp + 0xC<32>:word32] = r16
	r8 = r20 + 8<32>
	goto 0x00404FBA<p32>
	goto l00404FBA
	// succ:  l00404FBA
l004050E8:
	r17 = Mem0[sp + 0xC<32>:word32]
	r6 = r6 << 4<32>
	r6 = r6 + 8<32>
	r6 = r30 + r6
	Mem0[sp + 0x50<32>:word32] = r6
	Mem0[sp + 0x54<32>:word32] = r6
	goto 0x00404FCE<p32>
	goto l00404FCE
	// succ:  l00404FCE
l004050F8:
	r7 = 1<32>
	r6 = 0x81<32>
	r4 = 0x62<32>
	r5 = r23
	call __syscall (retsize: 0;)
	r7 = 0xFFFFFFDA<32>
	branch r7 != r4 l0040500C
	// succ:  l0040510C l0040500C
l0040510C:
	r7 = 1<32>
	r6 = 1<32>
	r4 = 0x62<32>
	r5 = r23
	call __syscall (retsize: 0;)
	goto 0x0040500C<p32>
	goto l0040500C
	// succ:  l0040500C
l00405118:
	r7 = 1<32>
	r6 = 0x81<32>
	r5 = 0x0041BD3D<p32>
	r4 = 0x62<32>
	goto 0x00404A50<p32>
	// succ:  l00405124_thunk___syscall
l00405124_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  free_exit
l00405140:
	r7 = 0x3F<32>
	r8 = 0x3F8<32>
	r16 = 0x3F<32>
	r20 = 0x3F0<32>
	Mem0[sp + 0xC<32>:word32] = r7
	goto 0x00404FBA<p32>
	goto l00404FBA
	// succ:  l00404FBA
l00405150:
	r4 = 0x405<32>
	r7 = -r16
	r10 = Mem0[r4 + 0x550<32>:word32]
	r22 = CONVERT(r16 < 0x20<32>, bool, word32)
	r11 = Mem0[r4 + 0x554<32>:word32]
	r6 = r10 >>u r16
	r5 = r11 << r7
	r10 = r11 >>u r16
	branch r16 != 0<32> l00405174
	// succ:  l00405170_1 l00405174
l00405170_1:
	r5 = 0<32>
	// succ:  l00405174
l00405174:
	r6 = r6 | r5
	branch r22 != 0<32> l0040517A
	// succ:  l00405176_1 l0040517A
l00405176_1:
	r6 = r10
	// succ:  l0040517A
l0040517A:
	branch __bit(r6, 0<32>) l00405218
	// succ:  l0040517E l00405218
l0040517E:
	Mem0[sp + 0x44<32>:word32] = r19
	Mem0[sp:word32] = r19
	r7 = Mem0[r30 + 0x408<32>:word32]
	branch r7 == 0<32> l0040519C
	// succ:  l00405188 l0040519C
l00405188:
	__sync(0<32>)
	Mem0[r30 + 0x408<32>:byte] = SLICE(0<32>, byte, 0)
	__sync(0<32>)
	r7 = Mem0[r30 + 0x40C<32>:word32]
	branch 0<32> != r7 l00405268
	// succ:  l0040519C l00405268
l0040519C:
	r17 = Mem0[sp + 0xC<32>:word32]
	r20 = r30 + r20
	r6 = Mem0[r20 + 0x14<32>:word32]
	r7 = r7 + 1<32>
	r7 = r7 << 4<32>
	Mem0[sp + 0x4C<32>:word32] = r6
	r9 = r30 + r7
	r7 = r9 + 0xFFFFFFF8<32>
	Mem0[sp + 0x48<32>:word32] = r7
	Mem0[r9 + 1<32>:word32] = r17
	r7 = Mem0[r17 + 0xC<32>:word32]
	Mem0[sp + 0x48<32>:word32] = r17
	r17 = Mem0[sp + 8<32>:word32]
	branch r7 != 0<32> l004051F8
	// succ:  l004051C0 l004051F8
l004051C0:
	r7 = Mem0[r23:word32]
	branch r7 == 0<32> l004051D2
	// succ:  l004051C4 l004051D2
l004051C4:
	__sync(0<32>)
	Mem0[r23:word32] = r11
	__sync(0<32>)
	r7 = Mem0[r23 + 1<32>:word32]
	branch r7 != 0<32> l004051D4
	// succ:  l004051D2 l004051D4
l004051D2:
	r30 = Mem0[sp + 60<i32>:word32]
	ra = Mem0[sp + 56<i32>:word32]
	r16 = Mem0[sp + 52<i32>:word32]
	r17 = Mem0[sp + 48<i32>:word32]
	r18 = Mem0[sp + 44<i32>:word32]
	r19 = Mem0[sp + 40<i32>:word32]
	r20 = Mem0[sp + 36<i32>:word32]
	r21 = Mem0[sp + 32<i32>:word32]
	r22 = Mem0[sp + 28<i32>:word32]
	r23 = Mem0[sp + 24<i32>:word32]
	sp = sp + 64<i32>
	return
	// succ:  free_exit
l004051D4:
	r7 = 1<32>
	r6 = 0x81<32>
	r4 = 0x62<32>
	r5 = r23
	call __syscall (retsize: 0;)
	r7 = 0xFFFFFFDA<32>
	branch r7 != r4 l004051D2
	// succ:  l004051E8 l004051D2
l004051E8:
	r5 = r23
	r7 = 1<32>
	r6 = 1<32>
	r4 = 0x62<32>
	r30 = Mem0[sp + 60<i32>:word32]
	ra = Mem0[sp + 56<i32>:word32]
	r16 = Mem0[sp + 52<i32>:word32]
	r17 = Mem0[sp + 48<i32>:word32]
	r18 = Mem0[sp + 44<i32>:word32]
	r19 = Mem0[sp + 40<i32>:word32]
	r20 = Mem0[sp + 36<i32>:word32]
	r21 = Mem0[sp + 32<i32>:word32]
	r22 = Mem0[sp + 28<i32>:word32]
	r23 = Mem0[sp + 24<i32>:word32]
	sp = sp + 64<i32>
	goto 0x00404A50<p32>
	// succ:  l004051F4_thunk___syscall
l004051F4_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  free_exit
l004051F8:
	r7 = Mem0[r21 + 0x24<32>:word32]
	r5 = r18 + 0xFFFFFFF0<32>
	r6 = 4<32>
	r4 = r7 + 0xF<32>
	r7 = -r7
	r4 = r17 + r4
	r5 = r5 & r7
	r4 = r4 & r7
	r5 = r5 - r4
	goto 0x00405BC0<p32>
	// succ:  l00405212_thunk_madvise
l00405212_thunk_madvise:
	call madvise (retsize: 0;)
	return
	// succ:  free_exit
l00405218:
	r5 = 1<32>
	r7 = r5 >>u r7
	r5 = r5 << r16
	branch r16 != 0<32> l00405226
	// succ:  l00405222_1 l00405226
l00405222_1:
	r7 = 0<32>
	// succ:  l00405226
l00405226:
	branch r22 != 0<32> l0040522A
	// succ:  l00405226_1 l0040522A
l00405226_1:
	r7 = r5
	// succ:  l0040522A
l0040522A:
	branch r22 != 0<32> l0040522E
	// succ:  l0040522A_1 l0040522E
l0040522A_1:
	r5 = 0<32>
	// succ:  l0040522E
l0040522E:
	r6 = r7
	branch r5 == 0<32> l0040524E
	// succ:  l00405232 l0040524E
l00405232:
	__sync(0<32>)
	// succ:  l00405236
l00405236:
	r7 = r4 | 0x550<32>
	r7 = __load_linked_32(Mem0[r7:word32])
	r7 = r7 | r5
	r16 = r4 | 0x550<32>
	r7 = __store_conditional_32(Mem0[r16:word32], r7)
	branch r7 == 0<32> l00405236
	// succ:  l0040524A l00405236
l0040524A:
	__sync(0<32>)
	// succ:  l0040524E
l0040524E:
	branch 0<32> == r6 l0040517E
	// succ:  l00405252 l0040517E
l00405252:
	__sync(0<32>)
	// succ:  l00405256
l00405256:
	r7 = __load_linked_32(Mem0[r30 + 4<32>:word32])
	r7 = r7 | r6
	r7 = __store_conditional_32(Mem0[r30 + 4<32>:word32], r7)
	branch r7 == 0<32> l00405256
	// succ:  l00405262 l00405256
l00405262:
	__sync(0<32>)
	goto 0x0040517E<p32>
	goto l0040517E
	// succ:  l0040517E
l00405268:
	r7 = 1<32>
	r6 = 0x81<32>
	r5 = 0x0041BDE5<p32>
	r4 = 0x62<32>
	goto 0x00404A50<p32>
	// succ:  l00405274_thunk___syscall
l00405274_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  free_exit
l00405290:
	return
	// succ:  free_exit
free_exit:


// malloc
// Return size: 0
define malloc
malloc_entry:
	sp = fp
	r25 = 0x405292<32>
	// succ:  l00405292
l00405292:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 80<i32>
	r22 = 0x0042CB64<p32>
	r7 = 0x7FFFFFEF<32>
	r6 = Mem0[r22 + 0x24<32>:word32]
	r5 = r4 + 0xFFFFFFFF<32>
	r7 = r7 - r6
	branch r7 >=u r5 l00405472
	// succ:  l004052AC l00405472
l004052AC:
	branch 0<32> != r4 l004056DC
	// succ:  l004052B0 l004056DC
l004052B0:
	r7 = 0x10<32>
	r21 = 0xFFFFFFFF<32>
	r20 = 0xFFFFFFFF<32>
	Mem0[sp + 8<32>:word32] = r7
	Mem0[sp + 0xC<32>:word32] = 0<32>
	// succ:  l004052BE
l004052BE:
	r23 = 0x405<32>
	// succ:  l004052C2
l004052C2:
	r4 = Mem0[r23 + 0x550<32>:word32]
	r5 = Mem0[r23 + 0x554<32>:word32]
	r7 = r4 & r21
	r6 = r5 & r20
	r5 = r7 | r6
	branch 0<32> == r5 l00405370
	// succ:  l004052DA l00405370
l004052DA:
	branch 0<32> != r7 l00405450
	// succ:  l004052DE l00405450
l004052DE:
	r7 = -r6
	r7 = r7 & r6
	r6 = 0x76BE629<32>
	r7 = r7 *s r6
	r6 = 0x0040BFD8<p32>
	r7 = r7 >>u 0x1B<32>
	r19 = CONVERT(Mem0[r7 + r6:byte], byte, word32)
	r19 = r19 + 0x20<32>
	// succ:  l004052FC
l004052FC:
	r17 = r19 << 4<32>
	r7 = Mem0[r22 + 3<32>:word32]
	r18 = r17 + 8<32>
	r16 = 0x0041BC2B<p32>
	r30 = r16 + r18
	branch 0<32> != r7 l0040543E
	// succ:  l0040530E l0040543E
l0040530E:
	r17 = r16 + r17
	r7 = r16 + r18
	r9 = Mem0[r17 + 0x10<32>:word32]
	branch 0<32> == r9 l0040546C
	// succ:  l0040531A l0040546C
l0040531A:
	branch r7 != r9 l00405514
	// succ:  l0040531E l00405514
l0040531E:
	r7 = Mem0[r16 + r18:word32]
	branch r7 == 0<32> l004052C2
	// succ:  l00405324 l004052C2
l00405324:
	__sync(0<32>)
	Mem0[r16 + r18:word32] = 0<32>
	__sync(0<32>)
	r7 = Mem0[r30 + 4<32>:word32]
	branch r7 == 0<32> l004052C2
	// succ:  l00405336 l004052C2
l00405336:
	r7 = 1<32>
	r6 = 0x81<32>
	r5 = r30
	r4 = 0x62<32>
	goto 0x00404A50<p32>
	// succ:  l00405340_thunk___syscall
l00405340_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  malloc_exit
l00405370:
	r17 = Mem0[sp + 8<32>:word32]
	r17 = 0x405<32>
	r7 = Mem0[r22 + 3<32>:word32]
	r6 = r6 + 0x10<32>
	Mem0[sp + 0x1C<32>:word32] = r6
	branch 0<32> != r7 l004055B4
	// succ:  l00405380 l004055B4
l00405380:
	r4 = sp + 0x1C<32>
	goto 0x0040CDF0<p32>
	// succ:  l00405382_thunk___expand_heap
l00405382_thunk___expand_heap:
	call __expand_heap (retsize: 0;)
	return
	// succ:  malloc_exit
l00405412:
	r7 = __ins(r7, 0<32>, 0<32>, 1<32>)
	r17 = Mem0[sp + 8<32>:word32]
	r6 = r7 + 0xFFFFFFF0<32>
	branch r5 <u r6 l004055CE
	// succ:  l00405420 l004055CE
l00405420:
	r16 = r9 + 8<32>
	r4 = r16
	r30 = Mem0[sp + 76<i32>:word32]
	ra = Mem0[sp + 72<i32>:word32]
	r16 = Mem0[sp + 68<i32>:word32]
	r17 = Mem0[sp + 64<i32>:word32]
	r18 = Mem0[sp + 60<i32>:word32]
	r19 = Mem0[sp + 56<i32>:word32]
	r20 = Mem0[sp + 52<i32>:word32]
	r21 = Mem0[sp + 48<i32>:word32]
	r22 = Mem0[sp + 44<i32>:word32]
	r23 = Mem0[sp + 40<i32>:word32]
	sp = sp + 80<i32>
	return
	// succ:  malloc_exit
l00405428:
	__sync(0<32>)
	branch 0<32> == r6 l0040530E
	// succ:  l00405430 l0040530E
l00405430:
	r7 = 1<32>
	r6 = 1<32>
	r5 = r30 + 4<32>
	r4 = r30
	goto 0x0040ADB0<p32>
	// succ:  l0040543A_thunk___wait
l0040543A_thunk___wait:
	call __wait (retsize: 0;)
	return
	// succ:  malloc_exit
l0040543E:
	__sync(0<32>)
	// succ:  l00405442
l00405442:
	r6 = __load_linked_32(Mem0[r30:word32])
	r7 = 1<32>
	r7 = __store_conditional_32(Mem0[r30:word32], r7)
	branch r7 == 0<32> l00405442
	// succ:  l0040544E l00405442
l0040544E:
	goto 0x00405428<p32>
	goto l00405428
	// succ:  l00405428
l00405450:
	r6 = -r7
	r7 = r7 & r6
	r6 = 0x76BE629<32>
	r7 = r7 *s r6
	r6 = 0x0040C091<p32>
	r7 = r7 >>u 0x1B<32>
	r19 = CONVERT(Mem0[r7 + r6:byte], byte, word32)
	goto 0x004052FC<p32>
	goto l004052FC
	// succ:  l004052FC
l0040546C:
	Mem0[sp + 0x50<32>:word32] = r7
	Mem0[sp + 0x54<32>:word32] = r7
	goto 0x0040531E<p32>
	goto l0040531E
	// succ:  l0040531E
l00405472:
	r4 = r4 + 0x17<32>
	r7 = 0x1C0000<32>
	r4 = __ins(r4, 0<32>, 0<32>, 1<32>)
	Mem0[sp + 8<32>:word32] = r4
	branch r7 >=u r4 l004054BA
	// succ:  l00405484 l004054BA
l00405484:
	r16 = r6 + 7<32>
	r6 = -r6
	r16 = r16 + r4
	r7 = 0x802<32>
	r16 = r16 & r6
	r10 = 0<32>
	r11 = 0<32>
	r8 = 0xFFFFFFFF<32>
	r6 = 3<32>
	r4 = 0<32>
	r5 = r16
	goto 0x00405BE2<p32>
	// succ:  l004054A0_thunk_mmap64
l004054A0_thunk_mmap64:
	call mmap64 (retsize: 0;)
	return
	// succ:  malloc_exit
l004054BA:
	r7 = r4 >>u 4<32>
	r30 = r7 + 0xFFFFFFFF<32>
	branch r30 <u 0x21<32> l00405790
	// succ:  l004054C4 l00405790
l004054C4:
	r7 = r7 + 0xFFFFFFFE<32>
	r6 = 0x1FF<32>
	branch r6 <u r7 l004056A6
	// succ:  l004054CE l004056A6
l004054CE:
	r7 = r7 >>u 3<32>
	r6 = 0x0040C0DA<p32>
	r7 = r7 + r6
	r5 = 1<32>
	r30 = CONVERT(Mem0[r7 - 4<32>:byte], byte, word32)
	r7 = r30 + 1<32>
	// succ:  l004054E0
l004054E0:
	r4 = r7
	Mem0[sp + 0xC<32>:word32] = r7
	// succ:  l004054E4
l004054E4:
	r7 = -r7
	r6 = r5 << r4
	r7 = r5 >>u r7
	r5 = CONVERT(r4 < 0x20<32>, bool, word32)
	branch r4 != 0<32> l004054F8
	// succ:  l004054F4_1 l004054F8
l004054F4_1:
	r7 = 0<32>
	// succ:  l004054F8
l004054F8:
	branch r5 != 0<32> l004054FC
	// succ:  l004054F8_1 l004054FC
l004054F8_1:
	r7 = r6
	// succ:  l004054FC
l004054FC:
	branch r5 != 0<32> l00405500
	// succ:  l004054FC_1 l00405500
l004054FC_1:
	r6 = 0<32>
	// succ:  l00405500
l00405500:
	r6 = -r6
	r20 = -r7
	r7 = CONVERT(0<32> <u r6, bool, word32)
	r21 = r6
	r20 = r20 - r7
	goto 0x004052BE<p32>
	goto l004052BE
	// succ:  l004052BE
l00405514:
	r17 = Mem0[r9 + 2<32>:word32]
	r5 = Mem0[r9 + 3<32>:word32]
	branch r19 < 0x28<32> l00405610
	// succ:  l0040551C l00405610
l0040551C:
	r17 = Mem0[sp + 0xC<32>:word32]
	r7 = r7 + 2<32>
	branch r7 >= r19 l004055FA
	// succ:  l00405524 l004055FA
l00405524:
	r6 = Mem0[r9 + 1<32>:word32]
	r17 = Mem0[sp + 8<32>:word32]
	r6 = __ins(r6, 0<32>, 0<32>, 1<32>)
	r18 = r6 - r7
	// succ:  l0040552E
l0040552E:
	r7 = r18 >>u 4<32>
	r7 = r7 + 0xFFFFFFFF<32>
	branch r7 <u 0x21<32> l00405610
	// succ:  l00405536 l00405610
l00405536:
	r4 = 0x1FF<32>
	branch r4 <u r7 l004056BA
	// succ:  l0040553E l004056BA
l0040553E:
	r7 = r7 >>u 3<32>
	r4 = 0x0040C112<p32>
	r7 = r7 + r4
	r7 = CONVERT(Mem0[r7 - 4<32>:byte], byte, word32)
	// succ:  l0040554A
l0040554A:
	branch r7 != r19 l00405610
	// succ:  l0040554E l00405610
l0040554E:
	r4 = Mem0[sp + 8<32>:word32]
	r4 = r9 + r16
	r7 = r16 | 1<32>
	Mem0[sp + 8<32>:word32] = r17
	Mem0[sp + 0xC<32>:word32] = r5
	Mem0[sp + 0x48<32>:word32] = r4
	r5 = Mem0[r4 + 8<32>:word32]
	Mem0[sp + 0x4C<32>:word32] = r4
	Mem0[r9 + r16:word32] = r7
	Mem0[sp + 4<32>:word32] = r18
	Mem0[r9 + r6:word32] = r18
	Mem0[r9 + 1<32>:word32] = r7
	// succ:  l0040556E
l0040556E:
	r6 = Mem0[r30:word32]
	branch 0<32> == r6 l00405412
	// succ:  l00405576 l00405412
l00405576:
	__sync(0<32>)
	Mem0[r30:byte] = SLICE(0<32>, byte, 0)
	__sync(0<32>)
	r7 = Mem0[r30 + 4<32>:word32]
	branch 0<32> != r7 l0040564A
	// succ:  l0040558A l0040564A
l0040558A:
	r7 = Mem0[r9 + 1<32>:word32]
	r7 = __ins(r7, 0<32>, 0<32>, 1<32>)
	r17 = Mem0[sp + 8<32>:word32]
	r6 = r7 + 0xFFFFFFF0<32>
	branch r5 >=u r6 l00405420
	// succ:  l0040559A l00405420
l0040559A:
	goto 0x004055CE<p32>
	goto l004055CE
	// succ:  l004055CE
l0040559C:
	__sync(0<32>)
	branch 0<32> == r6 l00405380
	// succ:  l004055A4 l00405380
l004055A4:
	r7 = 1<32>
	r6 = 1<32>
	r5 = 0x0041BD7A<p32>
	r4 = 0x0041BD7A<p32>
	goto 0x0040ADB0<p32>
	// succ:  l004055B0_thunk___wait
l004055B0_thunk___wait:
	call __wait (retsize: 0;)
	return
	// succ:  malloc_exit
l004055B4:
	__sync(0<32>)
	// succ:  l004055B8
l004055B8:
	r7 = r17 | 0x544<32>
	r6 = __load_linked_32(Mem0[r7:word32])
	r7 = 1<32>
	r5 = r17 | 0x544<32>
	r7 = __store_conditional_32(Mem0[r5:word32], r7)
	branch r7 == 0<32> l004055B8
	// succ:  l004055CC l004055B8
l004055CC:
	goto 0x0040559C<p32>
	goto l0040559C
	// succ:  l0040559C
l004055CE:
	r4 = r5
	r6 = r7 - r5
	r16 = r9 + r5
	r6 = r6 | 1<32>
	r5 = r5 | 1<32>
	Mem0[sp + 8<32>:word32] = r9
	Mem0[r9 + r4:word32] = r5
	r4 = r16 + 8<32>
	Mem0[sp + 4<32>:word32] = r6
	Mem0[r9 + r7:word32] = r6
	Mem0[r9 + 1<32>:word32] = r5
	goto 0x00404F2E<p32>
	// succ:  l004055EE_thunk_free
l004055EE_thunk_free:
	call free (retsize: 0;)
	return
	// succ:  malloc_exit
l004055FA:
	branch r19 != 0x3F<32> l00405610
	// succ:  l004055FE l00405610
l004055FE:
	r6 = Mem0[r9 + 1<32>:word32]
	r7 = 0x1C0000<32>
	r17 = Mem0[sp + 8<32>:word32]
	r6 = __ins(r6, 0<32>, 0<32>, 1<32>)
	r18 = r6 - r4
	branch r7 <u r18 l0040552E
	// succ:  l00405610 l0040552E
l00405610:
	branch r17 == r5 l0040572E
	// succ:  l00405614 l0040572E
l00405614:
	r7 = Mem0[r9 + 1<32>:word32]
	r4 = r7
	r7 = r7 | 1<32>
	r4 = __ins(r4, 0<32>, 0<32>, 1<32>)
	r6 = Mem0[r9 + r4:word32]
	Mem0[sp + 0x48<32>:word32] = r17
	r16 = Mem0[r9 + 2<32>:word32]
	r6 = r6 | 1<32>
	Mem0[sp + 0xC<32>:word32] = r5
	Mem0[r9 + 1<32>:word32] = r7
	Mem0[r9 + r4:word32] = r6
	goto 0x0040556E<p32>
	goto l0040556E
	// succ:  l0040556E
l0040564A:
	r7 = 1<32>
	r6 = 0x81<32>
	r5 = r30
	r4 = 0x62<32>
	Mem0[sp + 0xC<32>:word32] = r9
	goto 0x00404A50<p32>
	// succ:  l00405656_thunk___syscall
l00405656_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  malloc_exit
l004056A6:
	r7 = r7 >>u 7<32>
	r6 = 0x0040C1C6<p32>
	r7 = r7 + r6
	r5 = 1<32>
	r30 = CONVERT(Mem0[r7 - 4<32>:byte], byte, word32)
	r7 = r30 + 0x11<32>
	goto 0x004054E0<p32>
	goto l004054E0
	// succ:  l004054E0
l004056BA:
	r4 = 0x1C00<32>
	branch r4 <u r7 l004056D8
	// succ:  l004056C2 l004056D8
l004056C2:
	r7 = r7 >>u 7<32>
	r4 = 0x0040C1D4<p32>
	r7 = r7 + r4
	r7 = CONVERT(Mem0[r7 - 4<32>:byte], byte, word32)
	r7 = r7 + 0x10<32>
	goto 0x0040554A<p32>
	goto l0040554A
	// succ:  l0040554A
l004056D8:
	r7 = 0x3F<32>
	goto 0x0040554A<p32>
	goto l0040554A
	// succ:  l0040554A
l004056DC:
	goto 0x004049B0<p32>
	// succ:  l004056DC_thunk___errno_location
l004056DC_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  malloc_exit
l0040572E:
	r6 = 1<32>
	r7 = -r19
	r7 = r6 >>u r7
	r5 = CONVERT(r19 < 0x20<32>, bool, word32)
	r6 = r6 << r19
	branch r19 != 0<32> l00405744
	// succ:  l00405740_1 l00405744
l00405740_1:
	r7 = 0<32>
	// succ:  l00405744
l00405744:
	branch r5 != 0<32> l00405748
	// succ:  l00405744_1 l00405748
l00405744_1:
	r7 = r6
	// succ:  l00405748
l00405748:
	branch r5 != 0<32> l0040574C
	// succ:  l00405748_1 l0040574C
l00405748_1:
	r6 = 0<32>
	// succ:  l0040574C
l0040574C:
	r7 = ~r7
	r5 = ~r6
	branch r6 == 0<32> l00405772
	// succ:  l00405756 l00405772
l00405756:
	__sync(0<32>)
	// succ:  l0040575A
l0040575A:
	r6 = r23 | 0x550<32>
	r6 = __load_linked_32(Mem0[r6:word32])
	r6 = r6 & r5
	r4 = r23 | 0x550<32>
	r6 = __store_conditional_32(Mem0[r4:word32], r6)
	branch r6 == 0<32> l0040575A
	// succ:  l0040576E l0040575A
l0040576E:
	__sync(0<32>)
	// succ:  l00405772
l00405772:
	r6 = 0xFFFFFFFF<32>
	branch r6 == r7 l0040578A
	// succ:  l00405776 l0040578A
l00405776:
	__sync(0<32>)
	// succ:  l0040577A
l0040577A:
	r6 = __load_linked_32(Mem0[r16 + 4<32>:word32])
	r6 = r6 & r7
	r6 = __store_conditional_32(Mem0[r16 + 4<32>:word32], r6)
	branch r6 == 0<32> l0040577A
	// succ:  l00405786 l0040577A
l00405786:
	__sync(0<32>)
	// succ:  l0040578A
l0040578A:
	r17 = Mem0[r9 + 2<32>:word32]
	r5 = Mem0[r9 + 3<32>:word32]
	goto 0x00405614<p32>
	goto l00405614
	// succ:  l00405614
l00405790:
	r4 = r30
	r5 = 1<32>
	r7 = r30
	Mem0[sp + 0xC<32>:word32] = r30
	goto 0x004054E4<p32>
	goto l004054E4
	// succ:  l004054E4
malloc_exit:


// __malloc0
// Return size: 0
define __malloc0
__malloc0_entry:
	sp = fp
	r25 = 0x40579A<32>
	// succ:  l0040579A
l0040579A:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r16 = r4
	goto 0x00405292<p32>
	// succ:  l0040579E_thunk_malloc
l0040579E_thunk_malloc:
	call malloc (retsize: 0;)
	return
	// succ:  __malloc0_exit
__malloc0_exit:


// realloc
// Return size: 0
define realloc
realloc_entry:
	sp = fp
	r25 = 0x4057D0<32>
	// succ:  l004057D0
l004057D0:
	branch 0<32> == r4 l00405918
	// succ:  l004057D4 l00405918
l004057D4:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	Mem0[sp + -32<i32>:word32] = r22
	Mem0[sp + -36<i32>:word32] = r23
	sp = sp - 48<i32>
	r23 = 0x0042CE05<p32>
	r16 = r4
	r4 = Mem0[r23 + 0x24<32>:word32]
	r7 = 0x7FFFFFEF<32>
	r6 = r5 + 0xFFFFFFFF<32>
	r7 = r7 - r4
	branch r7 <u r6 l00405822
	// succ:  l004057F0 l00405822
l004057F0:
	r5 = r5 + 0x17<32>
	r5 = __ins(r5, 0<32>, 0<32>, 1<32>)
	r19 = r5
	// succ:  l004057FA
l004057FA:
	r7 = Mem0[r16 - 4<32>:word32]
	r21 = r16 + 0xFFFFFFF8<32>
	r17 = r7
	r17 = __ins(r17, 0<32>, 0<32>, 1<32>)
	branch !__bit(r7, 0<32>) l00405868
	// succ:  l0040580C l00405868
l0040580C:
	r22 = Mem0[r16 - 8<32>:word32]
	r17 = r17 + r22
	r20 = r22 + r19
	branch __bit(r22, 0<32>) l00405834
	// succ:  l0040581A l00405834
l0040581A:
	Mem0[r0:byte] = SLICE(0<32>, byte, 0)
	__trap_code(0<32>)
	// succ:  l00405822
l00405822:
	r19 = 0x10<32>
	branch r5 == 0<32> l004057FA
	// succ:  l00405826 l004057FA
l00405826:
	goto 0x004049B0<p32>
	// succ:  l00405826_thunk___errno_location
l00405826_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  realloc_exit
l00405834:
	branch r20 <u r4 l00405900
	// succ:  l00405838 l00405900
l00405838:
	r20 = r20 + 0xFFFFFFFF<32>
	r7 = -r4
	r4 = r4 + r20
	r20 = r7 & r4
	branch r17 == r20 l00405896
	// succ:  l00405848 l00405896
l00405848:
	r7 = 1<32>
	r4 = r21 - r22
	r5 = r17
	r6 = r20
	goto 0x00405C52<p32>
	// succ:  l00405850_thunk_mremap
l00405850_thunk_mremap:
	call mremap (retsize: 0;)
	return
	// succ:  realloc_exit
l00405868:
	r6 = Mem0[r21 + r17:word32]
	r18 = r21 + r17
	branch r6 == r7 l0040587A
	// succ:  l00405872 l0040587A
l00405872:
	Mem0[r0:byte] = SLICE(0<32>, byte, 0)
	__trap_code(0<32>)
	// succ:  l0040587A
l0040587A:
	branch r17 <u r19 l004058C4
	// succ:  l0040587E l004058C4
l0040587E:
	r7 = r17 | 1<32>
	Mem0[r16 - 4<32>:word32] = r7
	Mem0[r21 + r17:word32] = r7
	// succ:  l0040588A
l0040588A:
	r7 = __ins(r7, 0<32>, 0<32>, 1<32>)
	r6 = r7 + 0xFFFFFFF0<32>
	branch r19 <u r6 l0040589C
	// succ:  l00405896 l0040589C
l00405896:
	r18 = r16
	r4 = r18
	ra = Mem0[sp + 44<i32>:word32]
	r16 = Mem0[sp + 40<i32>:word32]
	r17 = Mem0[sp + 36<i32>:word32]
	r18 = Mem0[sp + 32<i32>:word32]
	r19 = Mem0[sp + 28<i32>:word32]
	r20 = Mem0[sp + 24<i32>:word32]
	r21 = Mem0[sp + 20<i32>:word32]
	r22 = Mem0[sp + 16<i32>:word32]
	r23 = Mem0[sp + 12<i32>:word32]
	sp = sp + 48<i32>
	return
	// succ:  realloc_exit
l0040589C:
	r6 = r7 - r19
	r5 = r19 | 1<32>
	r6 = r6 | 1<32>
	r17 = r21 + r19
	Mem0[r21 + r19:word32] = r5
	r4 = r17 + 8<32>
	Mem0[sp + 0x44<32>:word32] = r6
	r18 = r16
	Mem0[r21 + r7:word32] = r6
	Mem0[r16 - 4<32>:word32] = r5
	goto 0x00404F2E<p32>
	// succ:  l004058BC_thunk_free
l004058BC_thunk_free:
	call free (retsize: 0;)
	return
	// succ:  realloc_exit
l004058C4:
	r4 = r18
	call alloc_fwd (retsize: 0;)
	branch r4 == 0<32> l0040591E
	// succ:  l004058CA l0040591E
l004058CA:
	r6 = Mem0[r18 + 4<32>:word32]
	r6 = __ins(r6, 0<32>, 0<32>, 1<32>)
	r5 = r17 + r6
	r7 = r5 | 1<32>
	Mem0[r16 - 4<32>:word32] = r7
	Mem0[r18 + r6:word32] = r7
	branch r5 >=u r19 l0040588A
	// succ:  l004058E2 l0040588A
l004058E2:
	r4 = r19 + 0xFFFFFFF8<32>
	goto 0x00405292<p32>
	// succ:  l004058E6_thunk_malloc
l004058E6_thunk_malloc:
	call malloc (retsize: 0;)
	return
	// succ:  realloc_exit
l00405900:
	r4 = r19
	call malloc (retsize: 0;)
	r18 = r4
	branch r4 == 0<32> l0040592C
	// succ:  l00405908 l0040592C
l00405908:
	r6 = r19 + 0xFFFFFFF8<32>
	r5 = r16
	call memcpy (retsize: 0;)
	r4 = r16
	call free (retsize: 0;)
	r4 = r18
	ra = Mem0[sp + 44<i32>:word32]
	r16 = Mem0[sp + 40<i32>:word32]
	r17 = Mem0[sp + 36<i32>:word32]
	r18 = Mem0[sp + 32<i32>:word32]
	r19 = Mem0[sp + 28<i32>:word32]
	r20 = Mem0[sp + 24<i32>:word32]
	r21 = Mem0[sp + 20<i32>:word32]
	r22 = Mem0[sp + 16<i32>:word32]
	r23 = Mem0[sp + 12<i32>:word32]
	sp = sp + 48<i32>
	return
	// succ:  realloc_exit
l00405918:
	r4 = r5
	goto 0x00405292<p32>
	// succ:  l0040591A_thunk_malloc
l0040591A_thunk_malloc:
	call malloc (retsize: 0;)
	return
	// succ:  realloc_exit
l0040591E:
	r7 = r17 | 1<32>
	Mem0[r16 - 4<32>:word32] = r7
	Mem0[r21 + r17:word32] = r7
	goto 0x004058E2<p32>
	goto l004058E2
	// succ:  l004058E2
l0040592C:
	r4 = Mem0[r23 + 0x24<32>:word32]
	goto 0x00405838<p32>
	goto l00405838
	// succ:  l00405838
realloc_exit:


// __getopt_msg
// Return size: 0
define __getopt_msg
__getopt_msg_entry:
	sp = fp
	r25 = 0x405940<32>
	// succ:  l00405940
l00405940:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	sp = sp - 32<i32>
	r20 = r4
	r16 = Mem0[0x00412EF0<p32>:word32]
	r19 = r6
	r17 = r7
	r4 = r5
	call __lctrans_cur (retsize: 0;)
	r18 = r4
	r4 = r16
	call flockfile (retsize: 0;)
	r4 = r20
	r5 = r16
	goto 0x004083F0<p32>
	// succ:  l00405958_thunk_fputs_unlocked
l00405958_thunk_fputs_unlocked:
	call fputs_unlocked (retsize: 0;)
	return
	// succ:  __getopt_msg_exit
__getopt_msg_exit:


// __posix_getopt
// Return size: 0
define __posix_getopt
__posix_getopt_entry:
	sp = fp
	r25 = 0x40598A<32>
	// succ:  l0040598A
l0040598A:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	sp = sp - 64<i32>
	r7 = Mem0[0x00430254<p32>:word32]
	r19 = r4
	r18 = r5
	r17 = r6
	branch r7 == 0<32> l004059A0
	// succ:  l00405998 l004059A0
l00405998:
	r7 = Mem0[0x00432960<p32>:word32]
	branch r7 == 0<32> l004059B4
	// succ:  l004059A0 l004059B4
l004059A0:
	r7 = 1<32>
	Mem0[0x00432960<p32>:word32] = r0
	Mem0[0x004544A4<p32>:word32] = r0
	Mem0[0x00430254<p32>:word32] = r7
	// succ:  l004059B4
l004059B4:
	r7 = Mem0[0x00430254<p32>:word32]
	r4 = 0xFFFFFFFF<32>
	branch r7 >= r19 l00405B00
	// succ:  l004059C0 l00405B00
l004059C0:
	r5 = Mem0[r18 + r7 * 4<32>:word32]
	branch 0<32> == r5 l00405B00
	// succ:  l004059C6 l00405B00
l004059C6:
	r6 = CONVERT(Mem0[r5:byte], byte, word32)
	branch r6 == 0x2D<32> l004059E4
	// succ:  l004059CC l004059E4
l004059CC:
	r6 = CONVERT(Mem0[r17:byte], byte, word32)
	branch r6 != 0x2D<32> l00405B00
	// succ:  l004059D2 l00405B00
l004059D2:
	r7 = r7 + 1<32>
	Mem0[0x004544E8<p32>:word32] = r5
	Mem0[0x00430254<p32>:word32] = r7
	r4 = 1<32>
	ra = Mem0[sp + 60<i32>:word32]
	r16 = Mem0[sp + 56<i32>:word32]
	r17 = Mem0[sp + 52<i32>:word32]
	r18 = Mem0[sp + 48<i32>:word32]
	r19 = Mem0[sp + 44<i32>:word32]
	r20 = Mem0[sp + 40<i32>:word32]
	sp = sp + 64<i32>
	return
	// succ:  __posix_getopt_exit
l004059E4:
	r6 = CONVERT(Mem0[r5 + 1<32>:byte], byte, word32)
	r4 = 0xFFFFFFFF<32>
	branch 0<32> == r6 l00405B00
	// succ:  l004059EC l00405B00
l004059EC:
	branch r6 != 0x2D<32> l004059FE
	// succ:  l004059F0 l004059FE
l004059F0:
	r6 = CONVERT(Mem0[r5 + 2<32>:byte], byte, word32)
	branch r6 != 0<32> l004059FE
	// succ:  l004059F4 l004059FE
l004059F4:
	r7 = r7 + 1<32>
	Mem0[0x00430254<p32>:word32] = r7
	ra = Mem0[sp + 60<i32>:word32]
	r16 = Mem0[sp + 56<i32>:word32]
	r17 = Mem0[sp + 52<i32>:word32]
	r18 = Mem0[sp + 48<i32>:word32]
	r19 = Mem0[sp + 44<i32>:word32]
	r20 = Mem0[sp + 40<i32>:word32]
	sp = sp + 64<i32>
	return
	// succ:  __posix_getopt_exit
l004059FE:
	r7 = Mem0[0x004544A4<p32>:word32]
	branch r7 != 0<32> l00405A0E
	// succ:  l00405A06 l00405A0E
l00405A06:
	r7 = 1<32>
	Mem0[0x004544A4<p32>:word32] = r7
	// succ:  l00405A0E
l00405A0E:
	r7 = Mem0[0x004544A4<p32>:word32]
	r6 = 4<32>
	r5 = r5 + r7
	r4 = sp + 0x18<32>
	goto 0x00405CE0<p32>
	// succ:  l00405A1A_thunk_mbtowc
l00405A1A_thunk_mbtowc:
	call mbtowc (retsize: 0;)
	return
	// succ:  __posix_getopt_exit
l00405B00:
	ra = Mem0[sp + 60<i32>:word32]
	r16 = Mem0[sp + 56<i32>:word32]
	r17 = Mem0[sp + 52<i32>:word32]
	r18 = Mem0[sp + 48<i32>:word32]
	r19 = Mem0[sp + 44<i32>:word32]
	r20 = Mem0[sp + 40<i32>:word32]
	sp = sp + 64<i32>
	return
	// succ:  __posix_getopt_exit
__posix_getopt_exit:


// getrlimit64
// Return size: 0
define getrlimit64
getrlimit64_entry:
	sp = fp
	r25 = 0x405B30<32>
	// succ:  l00405B30
l00405B30:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r16 = r5
	r7 = 0<32>
	r8 = r16
	r5 = 0<32>
	r6 = r4
	r4 = 0x105<32>
	goto 0x00404A50<p32>
	// succ:  l00405B3C_thunk___syscall
l00405B3C_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  getrlimit64_exit
getrlimit64_exit:


// ioctl
// Return size: 0
define ioctl
ioctl_entry:
	sp = fp
	r25 = 0x405B80<32>
	// succ:  l00405B80
l00405B80:
	sp = sp + 0xFFFFFFE0<32>
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 32<i32>
	Mem0[sp + 40<i32>:word32] = r6
	Mem0[sp + 44<i32>:word32] = r7
	r7 = sp + 0x40<32>
	Mem0[sp:word32] = r7
	Mem0[sp + 48<i32>:word32] = r8
	Mem0[sp + 52<i32>:word32] = r9
	Mem0[sp + 4<32>:word32] = r7
	Mem0[sp + 56<i32>:word32] = r10
	Mem0[sp + 60<i32>:word32] = r11
	Mem0[sp + 8<32>:word32] = r7
	r7 = 0x40<32>
	Mem0[sp + 0xD<32>:byte] = SLICE(r7, byte, 0)
	r7 = 0x14<32>
	Mem0[sp + 0xC<32>:byte] = SLICE(r7, byte, 0)
	r7 = r6
	r6 = r5
	r5 = r4
	r4 = 0x1D<32>
	goto 0x00404A50<p32>
	// succ:  l00405BAE_thunk___syscall
l00405BAE_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  ioctl_exit
ioctl_exit:


// madvise
// Return size: 0
define madvise
madvise_entry:
	sp = fp
	r25 = 0x405BC0<32>
	// succ:  l00405BC0
l00405BC0:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r7 = r6
	r6 = r5
	r5 = r4
	r4 = 0xE9<32>
	goto 0x00404A50<p32>
	// succ:  l00405BCC_thunk___syscall
l00405BCC_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  madvise_exit
madvise_exit:


// __vm_wait
// Return size: 0
define __vm_wait
__vm_wait_entry:
	sp = fp
	r25 = 0x405BE0<32>
	// succ:  l00405BE0
l00405BE0:
	return
	// succ:  __vm_wait_exit
__vm_wait_exit:


// mmap64
// Return size: 0
define mmap64
mmap64_entry:
	sp = fp
	r25 = 0x405BE2<32>
	// succ:  l00405BE2
l00405BE2:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	Mem0[sp + -32<i32>:word32] = r22
	sp = sp - 32<i32>
	r21 = r6
	r19 = r7
	r7 = r11
	r16 = r10
	r7 = __ins(r7, 0<32>, 0<32>, 1<32>)
	r10 = r10 & 0xFFF<32>
	r10 = r10 | r7
	r22 = r8
	r20 = r4
	r18 = r5
	r17 = r11
	branch 0<32> == r10 l00405C0C
	// succ:  l00405C00 l00405C0C
l00405C00:
	goto 0x004049B0<p32>
	// succ:  l00405C00_thunk___errno_location
l00405C00_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  mmap64_exit
l00405C0C:
	r7 = 0x7FFFFFFE<32>
	branch r7 >=u r18 l00405C1E
	// succ:  l00405C16 l00405C1E
l00405C16:
	goto 0x004049B0<p32>
	// succ:  l00405C16_thunk___errno_location
l00405C16_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  mmap64_exit
l00405C1E:
	branch __bit(r19, 4<32>) l00405C26
	// succ:  l00405C22 l00405C26
l00405C22:
	goto 0x00405BE0<p32>
	// succ:  l00405C22_thunk___vm_wait
l00405C22_thunk___vm_wait:
	call __vm_wait (retsize: 0;)
	return
	// succ:  mmap64_exit
l00405C26:
	r10 = r17 << 0x14<32>
	r16 = r16 >>u 0xC<32>
	r10 = r10 | r16
	r9 = r22
	r7 = r21
	r8 = r19
	r5 = r20
	r6 = r18
	r4 = 0xDE<32>
	goto 0x00404A50<p32>
	// succ:  l00405C3C_thunk___syscall
l00405C3C_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  mmap64_exit
mmap64_exit:


// dummy
// Return size: 0
define dummy
dummy_entry:
	sp = fp
	r25 = 0x405C50<32>
	// succ:  l00405C50
l00405C50:
	return
	// succ:  dummy_exit
dummy_exit:


// mremap
// Return size: 0
define mremap
mremap_entry:
	sp = fp
	r25 = 0x405C52<32>
	// succ:  l00405C52
l00405C52:
	sp = sp + 0xFFFFFFF0<32>
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	sp = sp - 48<i32>
	r16 = r6
	r17 = r7
	Mem0[sp + 48<i32>:word32] = r8
	Mem0[sp + 52<i32>:word32] = r9
	r7 = 0x7FFFFFFE<32>
	Mem0[sp + 56<i32>:word32] = r10
	Mem0[sp + 60<i32>:word32] = r11
	r18 = r4
	r19 = r5
	branch r7 >=u r16 l00405C82
	// succ:  l00405C6E l00405C82
l00405C6E:
	goto 0x004049B0<p32>
	// succ:  l00405C6E_thunk___errno_location
l00405C6E_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  mremap_exit
l00405C82:
	r9 = 0<32>
	branch __bit(r17, 1<32>) l00405CA2
	// succ:  l00405C88 l00405CA2
l00405C88:
	goto 0x00405BE0<p32>
	// succ:  l00405C88_thunk___vm_wait
l00405C88_thunk___vm_wait:
	call __vm_wait (retsize: 0;)
	return
	// succ:  mremap_exit
l00405CA2:
	r7 = r16
	r8 = r17
	r5 = r18
	r6 = r19
	r4 = 0xD8<32>
	goto 0x00404A50<p32>
	// succ:  l00405CAA_thunk___syscall
l00405CAA_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  mremap_exit
mremap_exit:


// dummy
// Return size: 0
define dummy
dummy_entry:
	sp = fp
	r25 = 0x405CC0<32>
	// succ:  l00405CC0
l00405CC0:
	return
	// succ:  dummy_exit
dummy_exit:


// munmap
// Return size: 0
define munmap
munmap_entry:
	sp = fp
	r25 = 0x405CC2<32>
	// succ:  l00405CC2
l00405CC2:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 16<i32>
	r16 = r4
	r17 = r5
	goto 0x00405BE0<p32>
	// succ:  l00405CC6_thunk___vm_wait
l00405CC6_thunk___vm_wait:
	call __vm_wait (retsize: 0;)
	return
	// succ:  munmap_exit
munmap_exit:


// mbtowc
// Return size: 0
define mbtowc
mbtowc_entry:
	sp = fp
	r25 = 0x405CE0<32>
	// succ:  l00405CE0
l00405CE0:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 32<i32>
	r7 = 0<32>
	branch r5 == 0<32> l00405CFE
	// succ:  l00405CE6 l00405CFE
l00405CE6:
	branch 0<32> == r6 l00405D9E
	// succ:  l00405CEA l00405D9E
l00405CEA:
	branch r4 != 0<32> l00405CEE
	// succ:  l00405CEC l00405CEE
l00405CEC:
	r4 = sp + 0xC<32>
	// succ:  l00405CEE
l00405CEE:
	r7 = CONVERT(Mem0[r5:byte], byte, word32)
	v9 = SLICE(r8, byte, 0)
	r7 = CONVERT(v9, byte, int32)
	branch r8 < 0<32> l00405D02
	// succ:  l00405CF8 l00405D02
l00405CF8:
	Mem0[sp:word32] = r7
	r7 = CONVERT(0<32> <u r7, bool, word32)
	// succ:  l00405CFE
l00405CFE:
	r4 = r7
	ra = Mem0[sp + 28<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  mbtowc_exit
l00405D02:
	r3 = __read_hardware_register(sp)
	r8 = Mem0[r3 - 0x38<32>:word32]
	r8 = Mem0[r8:word32]
	branch 0<32> != r8 l00405D1E
	// succ:  l00405D10 l00405D1E
l00405D10:
	r7 = CONVERT(Mem0[r5:int8], int8, word32)
	r6 = 0xDFFF<32>
	r7 = r7 & r6
	Mem0[sp:word32] = r7
	r7 = 1<32>
	goto 0x00405CFE<p32>
	goto l00405CFE
	// succ:  l00405CFE
l00405D1E:
	r7 = r7 + 0xFFFFFF3E<32>
	branch r7 >=u 0x33<32> l00405D9E
	// succ:  l00405D26 l00405D9E
l00405D26:
	r8 = 0x0040C84D<p32>
	r7 = Mem0[r8 + r7 * 4<32>:word32]
	branch r6 >=u 4<32> l00405D42
	// succ:  l00405D32 l00405D42
l00405D32:
	r6 = r6 + (r6 << 1<8>)
	r6 = r6 << 1<32>
	r6 = r6 + 0xFFFFFFFA<32>
	r6 = r7 << r6
	branch r6 < 0<32> l00405D9E
	// succ:  l00405D42 l00405D9E
l00405D42:
	r8 = CONVERT(Mem0[r5 + 1<32>:byte], byte, word32)
	r9 = r7 >> 0x1A<32>
	r6 = r8 >>u 3<32>
	r9 = r9 + r6
	r6 = r6 + 0xFFFFFFF0<32>
	r9 = r9 | r6
	r9 = __ins(r9, 0<32>, 0<32>, 1<32>)
	branch 0<32> != r9 l00405D9E
	// succ:  l00405D60 l00405D9E
l00405D60:
	r7 = r7 << 6<32>
	r6 = r8 + 0xFFFFFF80<32>
	r6 = r6 | r7
	branch r6 < 0<32> l00405D72
	// succ:  l00405D6C l00405D72
l00405D6C:
	r7 = 2<32>
	Mem0[sp:word32] = r6
	goto 0x00405CFE<p32>
	goto l00405CFE
	// succ:  l00405CFE
l00405D72:
	r7 = CONVERT(Mem0[r5 + 2<32>:byte], byte, word32)
	r7 = r7 + 0xFFFFFF80<32>
	branch r7 >=u 0<32> l00405D9E
	// succ:  l00405D7C l00405D9E
l00405D7C:
	r6 = r6 << 6<32>
	r7 = r7 | r6
	branch r7 < 0<32> l00405D8A
	// succ:  l00405D84 l00405D8A
l00405D84:
	Mem0[sp:word32] = r7
	r7 = 3<32>
	goto 0x00405CFE<p32>
	goto l00405CFE
	// succ:  l00405CFE
l00405D8A:
	r6 = CONVERT(Mem0[r5 + 3<32>:byte], byte, word32)
	r6 = r6 + 0xFFFFFF80<32>
	branch r6 >=u 0<32> l00405D9E
	// succ:  l00405D94 l00405D9E
l00405D94:
	r7 = r7 << 6<32>
	r7 = r7 | r6
	Mem0[sp:word32] = r7
	r7 = 4<32>
	goto 0x00405CFE<p32>
	goto l00405CFE
	// succ:  l00405CFE
l00405D9E:
	goto 0x004049B0<p32>
	// succ:  l00405D9E_thunk___errno_location
l00405D9E_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  mbtowc_exit
mbtowc_exit:


// bind
// Return size: 0
define bind
bind_entry:
	sp = fp
	r25 = 0x405DB0<32>
	// succ:  l00405DB0
l00405DB0:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r10 = 0<32>
	r9 = 0<32>
	r7 = r6
	r8 = 0<32>
	r6 = r5
	r5 = r4
	r4 = 0xC8<32>
	goto 0x00404A50<p32>
	// succ:  l00405DC0_thunk___syscall
l00405DC0_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  bind_exit
bind_exit:


// connect
// Return size: 0
define connect
connect_entry:
	sp = fp
	r25 = 0x405DD0<32>
	// succ:  l00405DD0
l00405DD0:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r10 = 0<32>
	r9 = 0<32>
	r7 = r6
	r8 = 0<32>
	r6 = r5
	r5 = r4
	r4 = 0xCB<32>
	goto 0x0040ADA4<p32>
	// succ:  l00405DE0_thunk___syscall_cp
l00405DE0_thunk___syscall_cp:
	call __syscall_cp (retsize: 0;)
	return
	// succ:  connect_exit
connect_exit:


// freeaddrinfo
// Return size: 0
define freeaddrinfo
freeaddrinfo_entry:
	sp = fp
	r25 = 0x405DF0<32>
	// succ:  l00405DF0
l00405DF0:
	goto 0x00404F2E<p32>
	// succ:  l00405DF0_thunk_free
l00405DF0_thunk_free:
	call free (retsize: 0;)
	return
	// succ:  freeaddrinfo_exit
freeaddrinfo_exit:


// gai_strerror
// Return size: 0
define gai_strerror
gai_strerror_entry:
	sp = fp
	r25 = 0x405E00<32>
	// succ:  l00405E00
l00405E00:
	r7 = r4 + 1<32>
	r4 = 0x0040C592<p32>
	// succ:  l00405E08
l00405E08:
	r6 = CONVERT(Mem0[r4:byte], byte, word32)
	branch r7 != 0<32> l00405E14
	// succ:  l00405E0C l00405E14
l00405E0C:
	branch r6 != 0<32> l00405E10
	// succ:  l00405E0E l00405E10
l00405E0E:
	r4 = r4 + 1<32>
	// succ:  l00405E10
l00405E10:
	goto 0x00404A96<p32>
	// succ:  l00405E10_thunk___lctrans_cur
l00405E10_thunk___lctrans_cur:
	call __lctrans_cur (retsize: 0;)
	return
	// succ:  gai_strerror_exit
l00405E14:
	branch r6 == 0<32> l00405E0E
	// succ:  l00405E16 l00405E0E
l00405E16:
	r6 = CONVERT(Mem0[r4:byte], byte, word32)
	r4 = r4 + 1<32>
	branch r6 != 0<32> l00405E16
	// succ:  l00405E1C l00405E16
l00405E1C:
	r7 = r7 + 1<32>
	goto 0x00405E08<p32>
	goto l00405E08
	// succ:  l00405E08
gai_strerror_exit:


// getaddrinfo
// Return size: 0
define getaddrinfo
getaddrinfo_entry:
	sp = fp
	r25 = 0x405E20<32>
	// succ:  l00405E20
l00405E20:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 1712<i32>
	r18 = r4
	Mem0[sp + 0x1C<32>:word32] = r7
	branch r4 != 0<32> l00405E30
	// succ:  l00405E2A l00405E30
l00405E2A:
	r30 = 0xFFFFFFFE<32>
	branch r5 == 0<32> l00405E58
	// succ:  l00405E30 l00405E58
l00405E30:
	branch r6 == 0<32> l00405E5E
	// succ:  l00405E32 l00405E5E
l00405E32:
	r16 = Mem0[r6 + 0<i32>:word32]
	r17 = Mem0[r6 + 4<i32>:word32]
	r7 = Mem0[r6 + 8<32>:word32]
	r19 = Mem0[r6 + 0xC<32>:word32]
	r6 = r16 & 0x43F<32>
	r30 = 0xFFFFFFFF<32>
	branch r16 != r6 l00405E58
	// succ:  l00405E44 l00405E58
l00405E44:
	r30 = 0xFFFFFFFA<32>
	branch r17 >=u 0xB<32> l00405E58
	// succ:  l00405E4C l00405E58
l00405E4C:
	r4 = 1<32>
	r4 = r4 << r17
	r4 = r4 & 0x405<32>
	branch r4 != 0<32> l00405E66
	// succ:  l00405E58 l00405E66
l00405E58:
	r4 = r30
	r30 = Mem0[sp + 1708<i32>:word32]
	ra = Mem0[sp + 1704<i32>:word32]
	r16 = Mem0[sp + 1700<i32>:word32]
	r17 = Mem0[sp + 1696<i32>:word32]
	r18 = Mem0[sp + 1692<i32>:word32]
	r19 = Mem0[sp + 1688<i32>:word32]
	r20 = Mem0[sp + 1684<i32>:word32]
	r21 = Mem0[sp + 1680<i32>:word32]
	r22 = Mem0[sp + 1676<i32>:word32]
	r23 = Mem0[sp + 1672<i32>:word32]
	sp = sp + 1712<i32>
	return
	// succ:  getaddrinfo_exit
l00405E5E:
	r7 = 0<32>
	r19 = 0<32>
	r16 = 0<32>
	r17 = 0<32>
	// succ:  l00405E66
l00405E66:
	r8 = r16
	r6 = r19
	r4 = sp + 0x38<32>
	goto 0x004073A0<p32>
	// succ:  l00405E6C_thunk___lookup_serv
l00405E6C_thunk___lookup_serv:
	call __lookup_serv (retsize: 0;)
	return
	// succ:  getaddrinfo_exit
getaddrinfo_exit:


// copy_addr
// Return size: 0
define copy_addr
copy_addr_entry:
	sp = fp
	r25 = 0x405FC0<32>
	// succ:  l00405FC0
l00405FC0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 16<i32>
	r17 = r4
	r16 = r6
	branch r5 == 2<32> l00405FD0
	// succ:  l00405FCA l00405FD0
l00405FCA:
	branch r5 == 0xA<32> l00405FE2
	// succ:  l00405FCE l00405FE2
l00405FCE:
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	r17 = Mem0[sp + 4<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  copy_addr_exit
l00405FD0:
	r4 = r6 + 4<32>
	r6 = 4<32>
	// succ:  l00405FD4
l00405FD4:
	branch r8 <u r6 l00405FE0
	// succ:  l00405FD8 l00405FE0
l00405FD8:
	Mem0[r16:word16] = SLICE(r5, word16, 0)
	r5 = r7
	call memcpy (retsize: 0;)
	Mem0[r17:word32] = r16
	// succ:  l00405FE0
l00405FE0:
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	r17 = Mem0[sp + 4<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  copy_addr_exit
l00405FE2:
	r10 = CONVERT(Mem0[r7:byte], byte, word32)
	r4 = r6 + 8<32>
	r6 = 0xFE<32>
	branch r10 != r6 l00406002
	// succ:  l00405FF0 l00406002
l00405FF0:
	r6 = CONVERT(Mem0[r7 + 1<32>:byte], byte, word32)
	r10 = 0x80<32>
	r6 = r6 & 0xC0<32>
	branch r6 == r10 l00406018
	// succ:  l00405FFE l00406018
l00405FFE:
	r6 = 0x10<32>
	goto 0x00405FD4<p32>
	goto l00405FD4
	// succ:  l00405FD4
l00406002:
	r11 = 0xFF<32>
	r6 = 0x10<32>
	branch r10 != r11 l00405FD4
	// succ:  l0040600C l00405FD4
l0040600C:
	r10 = CONVERT(Mem0[r7 + 1<32>:byte], byte, word32)
	r10 = r10 & 0xF<32>
	branch r10 != 2<32> l00405FD4
	// succ:  l00406018 l00405FD4
l00406018:
	Mem0[r16 + 0x18<32>:byte] = SLICE(r9, byte, 0)
	goto 0x00405FFE<p32>
	goto l00405FFE
	// succ:  l00405FFE
copy_addr_exit:


// netlink_msg_to_ifaddr
// Return size: 0
define netlink_msg_to_ifaddr
netlink_msg_to_ifaddr_entry:
	sp = fp
	r25 = 0x40601E<32>
	// succ:  l0040601E
l0040601E:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	Mem0[sp + -32<i32>:word32] = r22
	sp = sp - 48<i32>
	r19 = r4
	r17 = r5
	r7 = CONVERT(Mem0[r17 + 4<32>:uint16], uint16, word32)
	branch r7 != 0x10<32> l004060AC
	// succ:  l00406028 l004060AC
l00406028:
	r6 = Mem0[r17:word32]
	r7 = r17 + 0x20<32>
	r6 = r17 + r6
	// succ:  l00406030
l00406030:
	r5 = r6 - r7
	branch r5 >=u 4<32> l0040603A
	// succ:  l00406036 l0040603A
l00406036:
	r5 = 0<32>
	goto 0x0040604E<p32>
	goto l0040604E
	// succ:  l0040604E
l0040603A:
	r4 = CONVERT(Mem0[r7 + 2<32>:uint16], uint16, word32)
	r5 = CONVERT(Mem0[r7:uint16], uint16, word32)
	branch r4 == 7<32> l0040604C
	// succ:  l00406042 l0040604C
l00406042:
	r5 = r5 + 3<32>
	r5 = __ins(r5, 0<32>, 0<32>, 1<32>)
	r7 = r7 + r5
	goto 0x00406030<p32>
	goto l00406030
	// succ:  l00406030
l0040604C:
	r5 = r5 + 0xFFFFFFFC<32>
	// succ:  l0040604E
l0040604E:
	r5 = r5 + 0xA4<32>
	r4 = 1<32>
	goto 0x0040CDC0<p32>
	// succ:  l00406054_thunk_calloc
l00406054_thunk_calloc:
	call calloc (retsize: 0;)
	return
	// succ:  netlink_msg_to_ifaddr_exit
l004060A8:
	r4 = 0<32>
	ra = Mem0[sp + 44<i32>:word32]
	r16 = Mem0[sp + 40<i32>:word32]
	r17 = Mem0[sp + 36<i32>:word32]
	r18 = Mem0[sp + 32<i32>:word32]
	r19 = Mem0[sp + 28<i32>:word32]
	r20 = Mem0[sp + 24<i32>:word32]
	r21 = Mem0[sp + 20<i32>:word32]
	r22 = Mem0[sp + 16<i32>:word32]
	sp = sp + 48<i32>
	return
	// succ:  netlink_msg_to_ifaddr_exit
l004060AC:
	r6 = Mem0[r17 + 0x14<32>:word32]
	r7 = r6 & 0x3F<32>
	r7 = r19 + (r7 << 2<8>)
	r18 = Mem0[r7 + 8<32>:word32]
	// succ:  l004060B8
l004060B8:
	branch r18 == 0<32> l004060A8
	// succ:  l004060BA l004060A8
l004060BA:
	r7 = Mem0[r18 + 0x8C<32>:word32]
	branch r6 == r7 l00406036
	// succ:  l004060C2 l00406036
l004060C2:
	r18 = Mem0[r18 + 0x1C<32>:word32]
	goto 0x004060B8<p32>
	goto l004060B8
	// succ:  l004060B8
netlink_msg_to_ifaddr_exit:


// freeifaddrs
// Return size: 0
define freeifaddrs
freeifaddrs_entry:
	sp = fp
	r25 = 0x406292<32>
	// succ:  l00406292
l00406292:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	goto 0x0040629E<p32>
	goto l0040629E
	// succ:  l0040629E
l00406296:
	r16 = Mem0[r4:word32]
	goto 0x00404F2E<p32>
	// succ:  l00406298_thunk_free
l00406298_thunk_free:
	call free (retsize: 0;)
	return
	// succ:  freeifaddrs_exit
l0040629E:
	branch r4 != 0<32> l00406296
	// succ:  l004062A0 l00406296
l004062A0:
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  freeifaddrs_exit
freeifaddrs_exit:


// getifaddrs
// Return size: 0
define getifaddrs
getifaddrs_entry:
	sp = fp
	r25 = 0x4062A2<32>
	// succ:  l004062A2
l004062A2:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 288<i32>
	r6 = 0x108<32>
	r5 = 0<32>
	r17 = r4
	r4 = sp + 8<32>
	goto 0x0040A690<p32>
	// succ:  l004062B0_thunk_memset
l004062B0_thunk_memset:
	call memset (retsize: 0;)
	return
	// succ:  getifaddrs_exit
getifaddrs_exit:


// dns_parse_callback
// Return size: 0
define dns_parse_callback
dns_parse_callback_entry:
	sp = fp
	r25 = 0x4062E0<32>
	// succ:  l004062E0
l004062E0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r16 = r4
	r4 = r8
	branch r5 != 0xC<32> l004062FE
	// succ:  l004062EA l004062FE
l004062EA:
	r8 = 0x100<32>
	r7 = r16
	r5 = r4 + 0x200<32>
	goto 0x0040D000<p32>
	// succ:  l004062F4_thunk_dn_expand
l004062F4_thunk_dn_expand:
	call dn_expand (retsize: 0;)
	return
	// succ:  dns_parse_callback_exit
l004062FE:
	r4 = 0<32>
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  dns_parse_callback_exit
dns_parse_callback_exit:


// getnameinfo
// Return size: 0
define getnameinfo
getnameinfo_entry:
	sp = fp
	r25 = 0x406302<32>
	// succ:  l00406302
l00406302:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 2160<i32>
	r20 = CONVERT(Mem0[r4:uint16], uint16, word32)
	r16 = r4
	r23 = r6
	r30 = r7
	r19 = r10
	Mem0[sp + 20<i32>:word32] = r8
	Mem0[sp + 24<i32>:word32] = r9
	branch r20 == 2<32> l00406324
	// succ:  l0040631A l00406324
l0040631A:
	branch r20 == 0xA<32> l004064E4
	// succ:  l0040631E l004064E4
l0040631E:
	r4 = 0xFFFFFFFA<32>
	goto 0x004065A0<p32>
	goto l004065A0
	// succ:  l004065A0
l00406324:
	r17 = r4 + 4<32>
	r4 = 0xFFFFFFFA<32>
	branch r5 <u 0x10<32> l004065A0
	// succ:  l0040632E l004065A0
l0040632E:
	r9 = CONVERT(Mem0[r16 + 4<32>:byte], byte, word32)
	r5 = 0x0040C115<p32>
	r8 = CONVERT(Mem0[r16 + 5<32>:byte], byte, word32)
	r4 = sp + 0x58<32>
	r7 = CONVERT(Mem0[r16 + 6<32>:byte], byte, word32)
	r18 = 0<32>
	r6 = CONVERT(Mem0[r16 + 7<32>:byte], byte, word32)
	goto 0x00408860<p32>
	// succ:  l00406346_thunk_sprintf
l00406346_thunk_sprintf:
	call sprintf (retsize: 0;)
	return
	// succ:  getnameinfo_exit
l004064E4:
	r17 = r4 + 8<32>
	r4 = 0xFFFFFFFA<32>
	branch r5 <u 0x1C<32> l004065A0
	// succ:  l004064EE l004065A0
l004064EE:
	r6 = 0xC<32>
	r5 = 0x0040C980<p32>
	r4 = r17
	call memcmp (retsize: 0;)
	branch r4 == 0<32> l00406536
	// succ:  l004064FA l00406536
l004064FA:
	r7 = sp + 0x58<32>
	r6 = 0xF<32>
	// succ:  l004064FE
l004064FE:
	r5 = CONVERT(Mem0[r17 + r6:byte], byte, word32)
	r18 = 0x0040C991<p32>
	r6 = r6 + 0xFFFFFFFF<32>
	r4 = r5 & 0xF<32>
	r5 = r5 >>u 4<32>
	r4 = CONVERT(Mem0[r18 + r4:byte], byte, word32)
	r5 = CONVERT(Mem0[r18 + r5:byte], byte, word32)
	Mem0[r7:byte] = SLICE(r4, byte, 0)
	r4 = 0x2E<32>
	Mem0[r7 + 2<32>:byte] = SLICE(r5, byte, 0)
	r5 = 0xFFFFFFFF<32>
	Mem0[r7 + 1<32>:byte] = SLICE(r4, byte, 0)
	r7 = r7 + 4<32>
	Mem0[r7 - 1<32>:int8] = SLICE(r4, int8, 0)
	branch r6 != r5 l004064FE
	// succ:  l00406528 l004064FE
l00406528:
	r5 = 0x0040C21E<p32>
	r4 = sp + 0x98<32>
	goto 0x0040A860<p32>
	// succ:  l0040652E_thunk_strcpy
l0040652E_thunk_strcpy:
	call strcpy (retsize: 0;)
	return
	// succ:  getnameinfo_exit
l00406536:
	r9 = CONVERT(Mem0[r16 + 0x14<32>:byte], byte, word32)
	r5 = 0x0040C219<p32>
	r8 = CONVERT(Mem0[r16 + 0x15<32>:byte], byte, word32)
	r4 = sp + 0x58<32>
	r7 = CONVERT(Mem0[r16 + 0x16<32>:byte], byte, word32)
	r6 = CONVERT(Mem0[r16 + 0x17<32>:byte], byte, word32)
	goto 0x00408860<p32>
	// succ:  l0040654C_thunk_sprintf
l0040654C_thunk_sprintf:
	call sprintf (retsize: 0;)
	return
	// succ:  getnameinfo_exit
l004065A0:
	r30 = Mem0[sp + 2156<i32>:word32]
	ra = Mem0[sp + 2152<i32>:word32]
	r16 = Mem0[sp + 2148<i32>:word32]
	r17 = Mem0[sp + 2144<i32>:word32]
	r18 = Mem0[sp + 2140<i32>:word32]
	r19 = Mem0[sp + 2136<i32>:word32]
	r20 = Mem0[sp + 2132<i32>:word32]
	r21 = Mem0[sp + 2128<i32>:word32]
	r22 = Mem0[sp + 2124<i32>:word32]
	r23 = Mem0[sp + 2120<i32>:word32]
	sp = sp + 2160<i32>
	return
	// succ:  getnameinfo_exit
getnameinfo_exit:


// getsockname
// Return size: 0
define getsockname
getsockname_entry:
	sp = fp
	r25 = 0x4066B0<32>
	// succ:  l004066B0
l004066B0:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r10 = 0<32>
	r9 = 0<32>
	r7 = r6
	r8 = 0<32>
	r6 = r5
	r5 = r4
	r4 = 0xCC<32>
	goto 0x00404A50<p32>
	// succ:  l004066C0_thunk___syscall
l004066C0_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  getsockname_exit
getsockname_exit:


// getsockopt
// Return size: 0
define getsockopt
getsockopt_entry:
	sp = fp
	r25 = 0x4066D0<32>
	// succ:  l004066D0
l004066D0:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r10 = 0<32>
	r9 = r8
	r8 = r7
	r7 = r6
	r6 = r5
	r5 = r4
	r4 = 0xD1<32>
	goto 0x00404A50<p32>
	// succ:  l004066E2_thunk___syscall
l004066E2_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  getsockopt_exit
getsockopt_exit:


// htonl
// Return size: 0
define htonl
htonl_entry:
	sp = fp
	r25 = 0x4066F0<32>
	// succ:  l004066F0
l004066F0:
	r4 = __rotx(r4, 8<32>, 0x18<32>, 0<32>)
	return
	// succ:  htonl_exit
htonl_exit:


// htons
// Return size: 0
define htons
htons_entry:
	sp = fp
	r25 = 0x406700<32>
	// succ:  l00406700
l00406700:
	r4 = __rotx(r4, 0x18<32>, 8<32>, 0<32>)
	r4 = r4 & 0xFFFF<32>
	return
	// succ:  htons_exit
htons_exit:


// if_indextoname
// Return size: 0
define if_indextoname
if_indextoname_entry:
	sp = fp
	r25 = 0x406710<32>
	// succ:  l00406710
l00406710:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 48<i32>
	r6 = 0<32>
	r18 = r4
	r17 = r5
	r5 = 0x80001<32>
	r4 = 1<32>
	goto 0x00407D80<p32>
	// succ:  l0040671E_thunk_socket
l0040671E_thunk_socket:
	call socket (retsize: 0;)
	return
	// succ:  if_indextoname_exit
if_indextoname_exit:


// if_nametoindex
// Return size: 0
define if_nametoindex
if_nametoindex_entry:
	sp = fp
	r25 = 0x406760<32>
	// succ:  l00406760
l00406760:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 48<i32>
	r6 = 0<32>
	r17 = r4
	r5 = 0x80001<32>
	r4 = 1<32>
	goto 0x00407D80<p32>
	// succ:  l0040676E_thunk_socket
l0040676E_thunk_socket:
	call socket (retsize: 0;)
	return
	// succ:  if_nametoindex_exit
if_nametoindex_exit:


// __inet_aton
// Return size: 0
define __inet_aton
__inet_aton_entry:
	sp = fp
	r25 = 0x4067A0<32>
	// succ:  l004067A0
l004067A0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 48<i32>
	r16 = 0<32>
	Mem0[sp + 0x10<32>:word32] = 0<32>
	r17 = r4
	r18 = r5
	Mem0[sp + 0x14<32>:word32] = 0<32>
	Mem0[sp + 0x18<32>:word32] = 0<32>
	Mem0[sp + 0x1C<32>:word32] = 0<32>
	// succ:  l004067AE
l004067AE:
	r6 = 0<32>
	r5 = sp + 0xC<32>
	r4 = r17
	call __strtoul_internal (retsize: 0;)
	r7 = sp + 0x10<32>
	Mem0[r7 + r16 * 4<32>:word32] = r4
	r17 = Mem0[sp + 0xC<32>:word32]
	branch r17 != r7 l004067C4
	// succ:  l004067C0 l004067C4
l004067C0:
	r4 = 0<32>
	ra = Mem0[sp + 44<i32>:word32]
	r16 = Mem0[sp + 40<i32>:word32]
	r17 = Mem0[sp + 36<i32>:word32]
	r18 = Mem0[sp + 32<i32>:word32]
	sp = sp + 48<i32>
	return
	// succ:  __inet_aton_exit
l004067C4:
	r6 = CONVERT(Mem0[r7:byte], byte, word32)
	branch r6 == 0<32> l004067CC
	// succ:  l004067C8 l004067CC
l004067C8:
	branch r6 != 0x2E<32> l004067C0
	// succ:  l004067CC l004067C0
l004067CC:
	r5 = CONVERT(Mem0[r17:byte], byte, word32)
	r5 = r5 + 0xFFFFFFD0<32>
	branch r5 >=u 0xA<32> l004067C0
	// succ:  l004067D6 l004067C0
l004067D6:
	branch r6 == 0<32> l004067E4
	// succ:  l004067D8 l004067E4
l004067D8:
	r16 = r16 + 1<32>
	r17 = r7 + 1<32>
	branch r16 != 4<32> l004067AE
	// succ:  l004067E2 l004067AE
l004067E2:
	goto 0x004067C0<p32>
	goto l004067C0
	// succ:  l004067C0
l004067E4:
	branch r16 == 1<32> l004067FC
	// succ:  l004067E8 l004067FC
l004067E8:
	branch r16 == 2<32> l00406808
	// succ:  l004067EC l00406808
l004067EC:
	branch r16 != 0<32> l00406812
	// succ:  l004067EE l00406812
l004067EE:
	r17 = Mem0[sp + 0x10<32>:word32]
	r6 = __ext(r7, 0<32>, 0x18<32>)
	r7 = r7 >>u 0x18<32>
	Mem0[sp + 0x10<32>:word32] = r7
	Mem0[sp + 0x14<32>:word32] = r6
	// succ:  l004067FC
l004067FC:
	r17 = Mem0[sp + 0x14<32>:word32]
	r6 = r7 & 0xFFFF<32>
	r7 = r7 >>u 0x10<32>
	Mem0[sp + 0x14<32>:word32] = r7
	Mem0[sp + 0x18<32>:word32] = r6
	// succ:  l00406808
l00406808:
	r17 = Mem0[sp + 0x18<32>:word32]
	r6 = r7 & 0xFF<32>
	r7 = r7 >>u 8<32>
	Mem0[sp + 0x18<32>:word32] = r7
	Mem0[sp + 0x1C<32>:word32] = r6
	// succ:  l00406812
l00406812:
	r7 = 0<32>
	// succ:  l00406814
l00406814:
	r6 = sp + 0x10<32>
	r5 = 0xFF<32>
	r6 = Mem0[r6 + r7 * 4<32>:word32]
	branch r5 <u r6 l004067C0
	// succ:  l00406820 l004067C0
l00406820:
	Mem0[r7 + r18:byte] = SLICE(r6, byte, 0)
	r7 = r7 + 1<32>
	branch r7 != 4<32> l00406814
	// succ:  l0040682A l00406814
l0040682A:
	r4 = 1<32>
	ra = Mem0[sp + 44<i32>:word32]
	r16 = Mem0[sp + 40<i32>:word32]
	r17 = Mem0[sp + 36<i32>:word32]
	r18 = Mem0[sp + 32<i32>:word32]
	sp = sp + 48<i32>
	return
	// succ:  __inet_aton_exit
__inet_aton_exit:


// inet_ntoa
// Return size: 0
define inet_ntoa
inet_ntoa_entry:
	sp = fp
	r25 = 0x406830<32>
	// succ:  l00406830
l00406830:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r6 = 0x0040C3BF<p32>
	r10 = r4 >>u 0x18<32>
	r9 = __ext(r4, 0<32>, 8<32>)
	r8 = __ext(r4, 8<32>, 8<32>)
	r7 = r4 & 0xFF<32>
	r5 = 0x10<32>
	r4 = 0x0041C8DD<p32>
	goto 0x00408820<p32>
	// succ:  l0040684A_thunk_snprintf
l0040684A_thunk_snprintf:
	call snprintf (retsize: 0;)
	return
	// succ:  inet_ntoa_exit
inet_ntoa_exit:


// inet_ntop
// Return size: 0
define inet_ntop
inet_ntop_entry:
	sp = fp
	r25 = 0x406860<32>
	// succ:  l00406860
l00406860:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	sp = sp - 176<i32>
	r16 = r5
	r17 = r6
	r20 = r7
	branch r4 == 2<32> l0040687A
	// succ:  l0040686A l0040687A
l0040686A:
	branch r4 == 0xA<32> l0040689E
	// succ:  l0040686E l0040689E
l0040686E:
	goto 0x004049B0<p32>
	// succ:  l0040686E_thunk___errno_location
l0040686E_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  inet_ntop_exit
l0040687A:
	r10 = CONVERT(Mem0[r16 + 3<32>:byte], byte, word32)
	r6 = 0x0040C3E5<p32>
	r9 = CONVERT(Mem0[r16 + 2<32>:byte], byte, word32)
	r8 = CONVERT(Mem0[r16 + 1<32>:byte], byte, word32)
	r7 = CONVERT(Mem0[r16:byte], byte, word32)
	r4 = r17
	r5 = r20
	goto 0x00408820<p32>
	// succ:  l0040688E_thunk_snprintf
l0040688E_thunk_snprintf:
	call snprintf (retsize: 0;)
	return
	// succ:  inet_ntop_exit
l00406896:
	goto 0x004049B0<p32>
	// succ:  l00406896_thunk___errno_location
l00406896_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  inet_ntop_exit
l0040689E:
	r6 = 0xC<32>
	r5 = 0x0040CB6A<p32>
	r18 = sp + 0x2C<32>
	r4 = r16
	call memcmp (retsize: 0;)
	r5 = CONVERT(Mem0[r16 + 2<32>:byte], byte, word32)
	r6 = CONVERT(Mem0[r16:byte], byte, word32)
	r2 = CONVERT(Mem0[r16 + 8<32>:byte], byte, word32)
	r5 = r5 << 8<32>
	r21 = CONVERT(Mem0[r16 + 6<32>:byte], byte, word32)
	r7 = r6 << 8<32>
	r19 = CONVERT(Mem0[r16 + 4<32>:byte], byte, word32)
	r2 = r2 << 8<32>
	r8 = CONVERT(Mem0[r16 + 3<32>:byte], byte, word32)
	r21 = r21 << 8<32>
	r13 = CONVERT(Mem0[r16 + 1<32>:byte], byte, word32)
	r19 = r19 << 8<32>
	r11 = CONVERT(Mem0[r16 + 9<32>:byte], byte, word32)
	r10 = CONVERT(Mem0[r16 + 7<32>:byte], byte, word32)
	r9 = CONVERT(Mem0[r16 + 5<32>:byte], byte, word32)
	r12 = CONVERT(Mem0[r16 + 0xE<32>:byte], byte, word32)
	r15 = CONVERT(Mem0[r16 + 0xF<32>:byte], byte, word32)
	r3 = CONVERT(Mem0[r16 + 0xC<32>:byte], byte, word32)
	r14 = CONVERT(Mem0[r16 + 0xD<32>:byte], byte, word32)
	branch r4 == 0<32> l00406932
	// succ:  l004068EE l00406932
l004068EE:
	r12 = r12 << 8<32>
	r3 = r3 << 8<32>
	r15 = r12 + r15
	r14 = r3 + r14
	Mem0[sp + 4<i32>:word32] = r14
	Mem0[sp + 8<i32>:word32] = r15
	r4 = CONVERT(Mem0[r16 + 0xA<32>:byte], byte, word32)
	r6 = CONVERT(Mem0[r16 + 0xB<32>:byte], byte, word32)
	r8 = r8 + r5
	r4 = r4 << 8<32>
	r11 = r2 + r11
	r4 = r4 + r6
	r10 = r10 + r21
	Mem0[sp:word32] = r4
	r9 = r9 + r19
	r7 = r7 + r13
	r5 = 0x64<32>
	r6 = 0x0040C43C<p32>
	r4 = r18
	call snprintf (retsize: 0;)
	// succ:  l00406928
l00406928:
	r19 = 0<32>
	r21 = 2<32>
	r16 = 0<32>
	goto 0x00406964<p32>
	goto l00406964
	// succ:  l00406964
l00406932:
	Mem0[sp + 4<32>:word32] = r3
	r8 = r8 + r5
	Mem0[sp + 8<32>:word32] = r14
	r11 = r2 + r11
	Mem0[sp + 0xC<32>:word32] = r12
	r10 = r10 + r21
	Mem0[sp + 0x10<32>:word32] = r15
	r9 = r9 + r19
	r4 = CONVERT(Mem0[r16 + 0xA<32>:byte], byte, word32)
	r7 = r7 + r13
	r6 = CONVERT(Mem0[r16 + 0xB<32>:byte], byte, word32)
	r5 = 0x64<32>
	r4 = r4 << 8<32>
	r4 = r4 + r6
	r6 = 0x0040C463<p32>
	Mem0[sp:word32] = r4
	r4 = r18
	call snprintf (retsize: 0;)
	goto 0x00406928<p32>
	goto l00406928
	// succ:  l00406928
l00406962:
	r16 = r16 + 1<32>
	// succ:  l00406964
l00406964:
	r7 = CONVERT(Mem0[r18 + r16:byte], byte, word32)
	branch r7 == 0<32> l00406984
	// succ:  l0040696A l00406984
l0040696A:
	branch r16 == 0<32> l00406970
	// succ:  l0040696C l00406970
l0040696C:
	branch r7 != 0x3A<32> l00406962
	// succ:  l00406970 l00406962
l00406970:
	r5 = 0x0040C480<p32>
	r4 = r18 + r16
	goto 0x0040A960<p32>
	// succ:  l00406976_thunk_strspn
l00406976_thunk_strspn:
	call strspn (retsize: 0;)
	return
	// succ:  inet_ntop_exit
l00406984:
	branch r21 < 3<32> l004069AE
	// succ:  l00406988 l004069AE
l00406988:
	r7 = sp + 0x90<32>
	r6 = 0x3A<32>
	r7 = r7 + r19
	r5 = r21 + r19
	Mem0[r7 - 0x64<32>:int8] = SLICE(r6, int8, 0)
	r4 = r19 + 2<32>
	Mem0[r7 - 0x63<32>:int8] = SLICE(r6, int8, 0)
	r6 = r16 - r19
	r6 = r6 - r21
	r5 = r18 + r5
	r4 = r18 + r4
	r6 = r6 + 1<32>
	goto 0x0040A510<p32>
	// succ:  l004069AA_thunk_memmove
l004069AA_thunk_memmove:
	call memmove (retsize: 0;)
	return
	// succ:  inet_ntop_exit
l004069AE:
	r4 = r18
	call strlen (retsize: 0;)
	branch r4 >=u r20 l00406896
	// succ:  l004069B6 l00406896
l004069B6:
	r4 = r17
	r5 = r18
	goto 0x0040A860<p32>
	// succ:  l004069B8_thunk_strcpy
l004069B8_thunk_strcpy:
	call strcpy (retsize: 0;)
	return
	// succ:  inet_ntop_exit
inet_ntop_exit:


// inet_pton
// Return size: 0
define inet_pton
inet_pton_entry:
	sp = fp
	r25 = 0x4069C0<32>
	// succ:  l004069C0
l004069C0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	sp = sp - 48<i32>
	r16 = r5
	r19 = r6
	branch r4 != 2<32> l00406A24
	// succ:  l004069C8 l00406A24
l004069C8:
	r7 = 0<32>
	goto 0x00406A20<p32>
	goto l00406A20
	// succ:  l00406A20
l004069CC:
	r18 = 0xA<32>
	r6 = r6 + 1<32>
	r5 = r5 *s r18
	r5 = r5 + r17
	r5 = r5 + 0xFFFFFFD0<32>
	branch r6 == 3<32> l004069F4
	// succ:  l004069DC l004069F4
l004069DC:
	r17 = CONVERT(Mem0[r16 + r6:byte], byte, word32)
	r18 = r17 + 0xFFFFFFD0<32>
	branch r18 <u 0xA<32> l004069CC
	// succ:  l004069E8 l004069CC
l004069E8:
	branch r6 != 0<32> l004069EE
	// succ:  l004069EA l004069EE
l004069EA:
	r4 = 0<32>
	ra = Mem0[sp + 44<i32>:word32]
	r16 = Mem0[sp + 40<i32>:word32]
	r17 = Mem0[sp + 36<i32>:word32]
	r18 = Mem0[sp + 32<i32>:word32]
	r19 = Mem0[sp + 28<i32>:word32]
	r20 = Mem0[sp + 24<i32>:word32]
	sp = sp + 48<i32>
	return
	// succ:  inet_pton_exit
l004069EE:
	branch r6 == 1<32> l004069FA
	// succ:  l004069F2 l004069FA
l004069F2:
	r6 = r4
	// succ:  l004069F4
l004069F4:
	r17 = CONVERT(Mem0[r16:byte], byte, word32)
	branch r17 == 0x30<32> l004069EA
	// succ:  l004069FA l004069EA
l004069FA:
	r17 = 0xFF<32>
	branch r17 < r5 l004069EA
	// succ:  l00406A02 l004069EA
l00406A02:
	Mem0[r7 + r19:byte] = SLICE(r5, byte, 0)
	r5 = CONVERT(Mem0[r16 + r6:byte], byte, word32)
	branch r5 != 0<32> l00406A12
	// succ:  l00406A0C l00406A12
l00406A0C:
	r4 = CONVERT(r7 == 3<32>, bool, word32)
	ra = Mem0[sp + 44<i32>:word32]
	r16 = Mem0[sp + 40<i32>:word32]
	r17 = Mem0[sp + 36<i32>:word32]
	r18 = Mem0[sp + 32<i32>:word32]
	r19 = Mem0[sp + 28<i32>:word32]
	r20 = Mem0[sp + 24<i32>:word32]
	sp = sp + 48<i32>
	return
	// succ:  inet_pton_exit
l00406A12:
	branch r5 != 0x2E<32> l004069EA
	// succ:  l00406A16 l004069EA
l00406A16:
	r6 = r6 + 1<32>
	r7 = r7 + 1<32>
	r16 = r16 + r6
	branch r7 == 4<32> l004069EA
	// succ:  l00406A20 l004069EA
l00406A20:
	r5 = 0<32>
	r6 = 0<32>
	goto 0x004069DC<p32>
	goto l004069DC
	// succ:  l004069DC
l00406A24:
	branch r4 == 0xA<32> l00406A34
	// succ:  l00406A28 l00406A34
l00406A28:
	goto 0x004049B0<p32>
	// succ:  l00406A28_thunk___errno_location
l00406A28_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  inet_pton_exit
l00406A34:
	r7 = CONVERT(Mem0[r16:byte], byte, word32)
	branch r7 != 0x3A<32> l00406A42
	// succ:  l00406A3A l00406A42
l00406A3A:
	r7 = CONVERT(Mem0[r16 + 1<32>:byte], byte, word32)
	branch r7 != 0x3A<32> l004069EA
	// succ:  l00406A40 l004069EA
l00406A40:
	r16 = r16 + 1<32>
	// succ:  l00406A42
l00406A42:
	r4 = 0xFFFFFFFF<32>
	r17 = 0<32>
	// succ:  l00406A46
l00406A46:
	r7 = CONVERT(Mem0[r16:byte], byte, word32)
	branch r7 != 0x3A<32> l00406A74
	// succ:  l00406A4C l00406A74
l00406A4C:
	r7 = 0xFFFFFFFF<32>
	branch r7 != r4 l00406A74
	// succ:  l00406A52 l00406A74
l00406A52:
	r6 = sp + 0x10<32>
	r7 = r17 & 7<32>
	r7 = r6 + (r7 << 1<8>)
	r6 = CONVERT(Mem0[r16 + 1<32>:byte], byte, word32)
	Mem0[r7 - 0x10<32>:int16] = SLICE(0<32>, int16, 0)
	r7 = r16 + 1<32>
	branch 0<32> == r6 l00406B3C
	// succ:  l00406A68 l00406B3C
l00406A68:
	branch r17 == 7<32> l004069EA
	// succ:  l00406A6C l004069EA
l00406A6C:
	r4 = r17
	// succ:  l00406A6E
l00406A6E:
	r17 = r17 + 1<32>
	r16 = r7
	goto 0x00406A46<p32>
	goto l00406A46
	// succ:  l00406A46
l00406A74:
	r5 = 0<32>
	r7 = 0<32>
	// succ:  l00406A78
l00406A78:
	r18 = CONVERT(Mem0[r16 + r7:byte], byte, word32)
	r6 = r18 + 0xFFFFFFD0<32>
	branch r6 <u 0xA<32> l00406A94
	// succ:  l00406A84 l00406A94
l00406A84:
	r6 = r18 | 0x20<32>
	r18 = r6 + 0xFFFFFF9F<32>
	branch r18 >=u 6<32> l00406AA0
	// succ:  l00406A90 l00406AA0
l00406A90:
	r6 = r6 + 0xFFFFFFA9<32>
	// succ:  l00406A94
l00406A94:
	r5 = r5 << 4<32>
	r7 = r7 + 1<32>
	r5 = r5 + r6
	branch r7 != 4<32> l00406A78
	// succ:  l00406A9E l00406A78
l00406A9E:
	goto 0x00406AA4<p32>
	goto l00406AA4
	// succ:  l00406AA4
l00406AA0:
	branch 0<32> == r7 l004069EA
	// succ:  l00406AA4 l004069EA
l00406AA4:
	r6 = r17 & 7<32>
	r18 = sp + 0x10<32>
	r6 = r18 + (r6 << 1<8>)
	Mem0[r6 - 0x10<32>:int16] = SLICE(r5, int16, 0)
	r6 = CONVERT(Mem0[r16 + r7:byte], byte, word32)
	branch r6 != 0<32> l00406AC4
	// succ:  l00406AB6 l00406AC4
l00406AB6:
	r7 = 0xFFFFFFFF<32>
	branch r7 != r4 l00406B40
	// succ:  l00406ABC l00406B40
l00406ABC:
	branch r17 != 7<32> l004069EA
	// succ:  l00406AC0 l004069EA
l00406AC0:
	r18 = 0<32>
	goto 0x00406B0E<p32>
	goto l00406B0E
	// succ:  l00406B0E
l00406AC4:
	branch r17 == 7<32> l004069EA
	// succ:  l00406AC8 l004069EA
l00406AC8:
	branch r6 == 0x3A<32> l00406B36
	// succ:  l00406ACC l00406B36
l00406ACC:
	branch r6 != 0x2E<32> l004069EA
	// succ:  l00406AD0 l004069EA
l00406AD0:
	r7 = 0xFFFFFFFF<32>
	branch r17 >= 6<32> l00406B08
	// succ:  l00406AD6 l00406B08
l00406AD6:
	branch r4 == r7 l004069EA
	// succ:  l00406ADA l004069EA
l00406ADA:
	r17 = r17 + 1<32>
	r18 = 1<32>
	// succ:  l00406ADE
l00406ADE:
	r6 = r17 + 1<32>
	r20 = sp + (r4 << 1<8>)
	r6 = r6 - r4
	r4 = r4 + 7<32>
	r4 = r4 - r17
	r6 = r6 << 1<32>
	r4 = sp + (r4 << 1<8>)
	r5 = r20
	call memmove (retsize: 0;)
	r7 = 0<32>
	// succ:  l00406AF8
l00406AF8:
	r6 = 7<32>
	r6 = r6 - r17
	branch r7 >= r6 l00406B0E
	// succ:  l00406B00 l00406B0E
l00406B00:
	Mem0[r20 + r7 * 2<32>:word16] = SLICE(0<32>, word16, 0)
	r7 = r7 + 1<32>
	goto 0x00406AF8<p32>
	goto l00406AF8
	// succ:  l00406AF8
l00406B08:
	r18 = 1<32>
	branch r7 != r4 l00406ADA
	// succ:  l00406B0E l00406ADA
l00406B0E:
	r6 = r19
	r7 = 0<32>
	// succ:  l00406B10
l00406B10:
	r5 = CONVERT(Mem0[sp + r7 * 2<32>:word16], word16, word32)
	r7 = r7 + 1<32>
	r4 = r5 >>u 8<32>
	Mem0[r6:byte] = SLICE(r4, byte, 0)
	r6 = r6 + 2<32>
	Mem0[r6 - 1<32>:int8] = SLICE(r5, int8, 0)
	branch r7 != 8<32> l00406B10
	// succ:  l00406B24 l00406B10
l00406B24:
	r4 = 1<32>
	branch r18 == 0<32> l00406B44
	// succ:  l00406B28 l00406B44
l00406B28:
	r6 = r19 + 0xC<32>
	r4 = 2<32>
	r5 = r16
	call inet_pton (retsize: 0;)
	r4 = CONVERT(0<32> < r4, bool, word32)
	ra = Mem0[sp + 44<i32>:word32]
	r16 = Mem0[sp + 40<i32>:word32]
	r17 = Mem0[sp + 36<i32>:word32]
	r18 = Mem0[sp + 32<i32>:word32]
	r19 = Mem0[sp + 28<i32>:word32]
	r20 = Mem0[sp + 24<i32>:word32]
	sp = sp + 48<i32>
	return
	// succ:  inet_pton_exit
l00406B36:
	r7 = r7 + 1<32>
	r7 = r16 + r7
	goto 0x00406A6E<p32>
	goto l00406A6E
	// succ:  l00406A6E
l00406B3C:
	r4 = r17
	r16 = r7
	// succ:  l00406B40
l00406B40:
	r18 = 0<32>
	goto 0x00406ADE<p32>
	goto l00406ADE
	// succ:  l00406ADE
l00406B44:
	ra = Mem0[sp + 44<i32>:word32]
	r16 = Mem0[sp + 40<i32>:word32]
	r17 = Mem0[sp + 36<i32>:word32]
	r18 = Mem0[sp + 32<i32>:word32]
	r19 = Mem0[sp + 28<i32>:word32]
	r20 = Mem0[sp + 24<i32>:word32]
	sp = sp + 48<i32>
	return
	// succ:  inet_pton_exit
inet_pton_exit:


// __lookup_ipliteral
// Return size: 0
define __lookup_ipliteral
__lookup_ipliteral_entry:
	sp = fp
	r25 = 0x406B50<32>
	// succ:  l00406B50
l00406B50:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	sp = sp - 128<i32>
	r16 = r4
	r18 = r5
	r5 = sp + 8<32>
	r20 = r6
	r4 = r18
	call __inet_aton (retsize: 0;)
	branch 0<32> >= r4 l00406B7E
	// succ:  l00406B60 l00406B7E
l00406B60:
	branch r20 != 0xA<32> l00406B6A
	// succ:  l00406B64 l00406B6A
l00406B64:
	r7 = 0xFFFFFFFE<32>
	goto 0x00406B7A<p32>
	goto l00406B7A
	// succ:  l00406B7A
l00406B6A:
	r6 = 4<32>
	r5 = sp + 8<32>
	r4 = r16 + 8<32>
	goto 0x00406C24<p32>
	goto l00406C24
	// succ:  l00406C24
l00406B7A:
	r4 = r7
	ra = Mem0[sp + 124<i32>:word32]
	r16 = Mem0[sp + 120<i32>:word32]
	r17 = Mem0[sp + 116<i32>:word32]
	r18 = Mem0[sp + 112<i32>:word32]
	r19 = Mem0[sp + 108<i32>:word32]
	r20 = Mem0[sp + 104<i32>:word32]
	sp = sp + 128<i32>
	return
	// succ:  __lookup_ipliteral_exit
l00406B7E:
	r5 = 0x25<32>
	r4 = r18
	call strchr (retsize: 0;)
	r17 = r4
	branch r4 == 0<32> l00406B9E
	// succ:  l00406B88 l00406B9E
l00406B88:
	r19 = r4 - r18
	branch r19 >= 0<32> l00406B9E
	// succ:  l00406B8E l00406B9E
l00406B8E:
	r5 = r18
	r6 = r19
	r4 = sp + 0x20<32>
	r18 = sp + 0x20<32>
	goto 0x00406C24<p32>
	goto l00406C24
	// succ:  l00406C24
l00406B9E:
	r6 = sp + 0x10<32>
	r4 = 0xA<32>
	r5 = r18
	call inet_pton (retsize: 0;)
	r7 = 0<32>
	branch 0<32> >= r4 l00406B7A
	// succ:  l00406BAC l00406B7A
l00406BAC:
	branch r20 == 2<32> l00406B64
	// succ:  l00406BB0 l00406B64
l00406BB0:
	r6 = 0x10<32>
	r4 = r16 + 8<32>
	r5 = sp + r6
	goto 0x00406C24<p32>
	// succ:  l00406C24
l00406C24:
	goto 0x0040A130<p32>
	// succ:  l00406C24_thunk_memcpy
l00406C24_thunk_memcpy:
	call memcpy (retsize: 0;)
	return
	// succ:  __lookup_ipliteral_exit
__lookup_ipliteral_exit:


// __isspace
// Return size: 0
define __isspace
__isspace_entry:
	sp = fp
	r25 = 0x406C30<32>
	// succ:  l00406C30
l00406C30:
	r7 = 1<32>
	branch r4 == 0x20<32> l00406C3E
	// succ:  l00406C36 l00406C3E
l00406C36:
	r4 = r4 + 0xFFFFFFF7<32>
	r7 = CONVERT(r4 <u 5<32>, bool, word32)
	// succ:  l00406C3E
l00406C3E:
	r4 = r7
	return
	// succ:  __isspace_exit
__isspace_exit:


// scopeof
// Return size: 0
define scopeof
scopeof_entry:
	sp = fp
	r25 = 0x406C42<32>
	// succ:  l00406C42
l00406C42:
	r6 = CONVERT(Mem0[r4:byte], byte, word32)
	r5 = 0xFF<32>
	r7 = r4
	branch r5 != r6 l00406C52
	// succ:  l00406C4C l00406C52
l00406C4C:
	r4 = CONVERT(Mem0[r4 + 1<32>:byte], byte, word32)
	r4 = r4 & 0xF<32>
	return
	// succ:  scopeof_exit
l00406C52:
	r5 = 0xFE<32>
	branch r5 != r6 l00406C68
	// succ:  l00406C58 l00406C68
l00406C58:
	r5 = CONVERT(Mem0[r4 + 1<32>:byte], byte, word32)
	r8 = 0x80<32>
	r4 = 2<32>
	r5 = r5 & 0xC0<32>
	branch r5 == r8 l00406CA8
	// succ:  l00406C68 l00406CA8
l00406C68:
	r5 = Mem0[r7:word32]
	branch r5 != 0<32> l00406C90
	// succ:  l00406C6C l00406C90
l00406C6C:
	r5 = Mem0[r7 + 4<32>:word32]
	branch r5 != 0<32> l00406C90
	// succ:  l00406C70 l00406C90
l00406C70:
	r5 = Mem0[r7 + 8<32>:word32]
	branch r5 != 0<32> l00406C90
	// succ:  l00406C74 l00406C90
l00406C74:
	r5 = CONVERT(Mem0[r7 + 0xC<32>:byte], byte, word32)
	branch r5 != 0<32> l00406C90
	// succ:  l00406C7A l00406C90
l00406C7A:
	r5 = CONVERT(Mem0[r7 + 0xD<32>:byte], byte, word32)
	branch r5 != 0<32> l00406C90
	// succ:  l00406C80 l00406C90
l00406C80:
	r5 = CONVERT(Mem0[r7 + 0xE<32>:byte], byte, word32)
	branch r5 != 0<32> l00406C90
	// succ:  l00406C86 l00406C90
l00406C86:
	r5 = CONVERT(Mem0[r7 + 0xF<32>:byte], byte, word32)
	r4 = 2<32>
	branch r5 == 1<32> l00406CA8
	// succ:  l00406C90 l00406CA8
l00406C90:
	r5 = 0xFE<32>
	r4 = 0xE<32>
	branch r5 != r6 l00406CA8
	// succ:  l00406C98 l00406CA8
l00406C98:
	r7 = CONVERT(Mem0[r7 + 1<32>:byte], byte, word32)
	r6 = 5<32>
	r7 = r7 & 0xC0<32>
	r7 = r7 ^ 0xC0<32>
	branch r7 != 0<32> l00406CA8
	// succ:  l00406CA4_1 l00406CA8
l00406CA4_1:
	r4 = r6
	// succ:  l00406CA8
l00406CA8:
	return
	// succ:  scopeof_exit
scopeof_exit:


// addrcmp
// Return size: 0
define addrcmp
addrcmp_entry:
	sp = fp
	r25 = 0x406CAA<32>
	// succ:  l00406CAA
l00406CAA:
	r4 = Mem0[r4 + 0x18<32>:word32]
	r7 = Mem0[r5 + 0x18<32>:word32]
	r4 = r7 - r4
	return
	// succ:  addrcmp_exit
addrcmp_exit:


// name_from_dns
// Return size: 0
define name_from_dns
name_from_dns_entry:
	sp = fp
	r25 = 0x406CB2<32>
	// succ:  l00406CB2
l00406CB2:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	sp = sp - 1680<i32>
	r19 = r6
	r21 = r7
	r7 = sp + 0xFFFFF670<32>
	r17 = sp + 0x40<32>
	r16 = r7
	r20 = r8
	r7 = sp + 0x158<32>
	r18 = sp + 0x270<32>
	Mem0[r16 + 0x9A8<32>:byte] = SLICE(r7, byte, 0)
	r7 = sp + 0x470<32>
	Mem0[r16 + 0x9AC<32>:byte] = SLICE(r18, byte, 0)
	Mem0[r16 + 0x9C4<32>:byte] = SLICE(r4, byte, 0)
	Mem0[r16 + 0x9C8<32>:byte] = SLICE(r5, byte, 0)
	Mem0[sp + 0x14<32>:word32] = r17
	Mem0[sp + 0x3C<32>:word32] = 0<32>
	Mem0[r16 + 0x9B0<32>:byte] = SLICE(r7, byte, 0)
	branch r21 == 0xA<32> l00406D5A
	// succ:  l00406CE8 l00406D5A
l00406CE8:
	r7 = 0x118<32>
	r11 = r17
	Mem0[sp:word32] = r7
	r7 = 1<32>
	r6 = r7
	r10 = 0<32>
	r9 = 0<32>
	r8 = 0<32>
	r4 = 0<32>
	r5 = r19
	goto 0x00407690<p32>
	// succ:  l00406CFC_thunk_res_mkquery
l00406CFC_thunk_res_mkquery:
	call res_mkquery (retsize: 0;)
	return
	// succ:  name_from_dns_exit
l00406D5A:
	r16 = 0<32>
	r7 = 0x118<32>
	r10 = 0<32>
	r11 = r16 *s r7
	r9 = 0<32>
	Mem0[sp:word32] = r7
	r8 = 0<32>
	r7 = 0x1C<32>
	r6 = 1<32>
	r4 = 0<32>
	r5 = r19
	r11 = r11 + r17
	goto 0x00407690<p32>
	// succ:  l00406D74_thunk_res_mkquery
l00406D74_thunk_res_mkquery:
	call res_mkquery (retsize: 0;)
	return
	// succ:  name_from_dns_exit
name_from_dns_exit:


// policyof
// Return size: 0
define policyof
policyof_entry:
	sp = fp
	r25 = 0x406DAC<32>
	// succ:  l00406DAC
l00406DAC:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	sp = sp - 32<i32>
	r16 = 0x0040CE01<p32>
	r19 = r4
	r17 = 0<32>
	r20 = r16
	goto 0x00406DBE<p32>
	goto l00406DBE
	// succ:  l00406DBE
l00406DBA:
	r17 = r17 + 1<32>
	r16 = r16 + 0x14<32>
	// succ:  l00406DBE
l00406DBE:
	r18 = CONVERT(Mem0[r16 + 0x10<32>:byte], byte, word32)
	r5 = r16
	r6 = r18
	r4 = r19
	call memcmp (retsize: 0;)
	branch r4 != 0<32> l00406DBA
	// succ:  l00406DCA l00406DBA
l00406DCA:
	r7 = 0x14<32>
	r4 = CONVERT(Mem0[r16 + 0x11<32>:byte], byte, word32)
	r7 = r7 *s r17
	r6 = CONVERT(Mem0[r19 + r18:byte], byte, word32)
	r7 = r7 + r20
	r5 = CONVERT(Mem0[r7 + r18:byte], byte, word32)
	r7 = r6 & r4
	branch r7 != r5 l00406DBA
	// succ:  l00406DE4 l00406DBA
l00406DE4:
	r4 = r16
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	r20 = Mem0[sp + 8<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  policyof_exit
policyof_exit:


// is_valid_hostname
// Return size: 0
define is_valid_hostname
is_valid_hostname_entry:
	sp = fp
	r25 = 0x406DE8<32>
	// succ:  l00406DE8
l00406DE8:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r5 = 0xFF<32>
	r16 = r4
	goto 0x0040A940<p32>
	// succ:  l00406DF0_thunk_strnlen
l00406DF0_thunk_strnlen:
	call strnlen (retsize: 0;)
	return
	// succ:  is_valid_hostname_exit
is_valid_hostname_exit:


// name_from_hosts
// Return size: 0
define name_from_hosts
name_from_hosts_entry:
	sp = fp
	r25 = 0x406E34<32>
	// succ:  l00406E34
l00406E34:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 1760<i32>
	r22 = r4
	r23 = r5
	r20 = r6
	r30 = r7
	r4 = r6
	call strlen (retsize: 0;)
	r7 = 0x408<32>
	Mem0[sp + 0xC<32>:word32] = r4
	r6 = sp + 0x2A8<32>
	r5 = sp + 0x18<32>
	r4 = 0x0040C6B7<p32>
	goto 0x00408070<p32>
	// succ:  l00406E52_thunk___fopen_rb_ca
l00406E52_thunk___fopen_rb_ca:
	call __fopen_rb_ca (retsize: 0;)
	return
	// succ:  name_from_hosts_exit
name_from_hosts_exit:


// dns_parse_callback
// Return size: 0
define dns_parse_callback
dns_parse_callback_entry:
	sp = fp
	r25 = 0x406F4A<32>
	// succ:  l00406F4A
l00406F4A:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 272<i32>
	r16 = r4
	r9 = r5
	r4 = r8
	r5 = r6
	branch r9 == 5<32> l00406FAA
	// succ:  l00406F56 l00406FAA
l00406F56:
	branch r9 == 0x1C<32> l00406F8A
	// succ:  l00406F5A l00406F8A
l00406F5A:
	branch r9 != 1<32> l00406F84
	// succ:  l00406F5E l00406F84
l00406F5E:
	r4 = 0xFFFFFFFF<32>
	branch r7 != 4<32> l00406F86
	// succ:  l00406F64 l00406F86
l00406F64:
	r6 = Mem0[r16 + 8<32>:word32]
	r4 = 0x1C<32>
	r8 = r6 *s r4
	r6 = r6 + 1<32>
	r4 = Mem0[r16:word32]
	r4 = r4 + r8
	r8 = 2<32>
	Mem0[r4:word32] = r8
	Mem0[sp + 4<32>:word32] = 0<32>
	r4 = r4 + 8<32>
	Mem0[sp + 8<32>:word32] = r6
	r6 = r7
	// succ:  l00406F80
l00406F80:
	goto 0x0040A130<p32>
	// succ:  l00406F80_thunk_memcpy
l00406F80_thunk_memcpy:
	call memcpy (retsize: 0;)
	return
	// succ:  dns_parse_callback_exit
l00406F84:
	r4 = 0<32>
	// succ:  l00406F86
l00406F86:
	ra = Mem0[sp + 268<i32>:word32]
	r16 = Mem0[sp + 264<i32>:word32]
	sp = sp + 272<i32>
	return
	// succ:  dns_parse_callback_exit
l00406F8A:
	r4 = 0xFFFFFFFF<32>
	branch r7 != 0x10<32> l00406F86
	// succ:  l00406F90 l00406F86
l00406F90:
	r6 = Mem0[r16 + 8<32>:word32]
	r4 = Mem0[r16:word32]
	r9 = r9 *s r6
	r6 = r6 + 1<32>
	r9 = r9 + r4
	r4 = 0xA<32>
	Mem0[r9:word32] = r4
	r4 = r9 + 8<32>
	Mem0[r9 + 1<32>:word32] = r11
	Mem0[sp + 8<32>:word32] = r6
	r6 = r7
	goto 0x00406F80<p32>
	goto l00406F80
	// succ:  l00406F80
l00406FAA:
	r8 = 0x100<32>
	r7 = sp
	r5 = r4 + 0x200<32>
	goto 0x0040D000<p32>
	// succ:  l00406FB4_thunk_dn_expand
l00406FB4_thunk_dn_expand:
	call dn_expand (retsize: 0;)
	return
	// succ:  dns_parse_callback_exit
dns_parse_callback_exit:


// __lookup_name
// Return size: 0
define __lookup_name
__lookup_name_entry:
	sp = fp
	r25 = 0x406FCE<32>
	// succ:  l00406FCE
l00406FCE:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 432<i32>
	r16 = r4
	r21 = r5
	r22 = r6
	r19 = r7
	r18 = r8
	Mem0[r21:byte] = SLICE(0<32>, byte, 0)
	branch 0<32> == r22 l00407006
	// succ:  l00406FE0 l00407006
l00406FE0:
	r5 = 0xFF<32>
	r4 = r22
	call strnlen (retsize: 0;)
	r6 = 0xFD<32>
	r7 = r4 + 0xFFFFFFFF<32>
	branch r6 >=u r7 l00406FFE
	// succ:  l00406FF4 l00406FFE
l00406FF4:
	r17 = 0xFFFFFFFE<32>
	// succ:  l00406FF8
l00406FF8:
	r4 = r17
	r30 = Mem0[sp + 428<i32>:word32]
	ra = Mem0[sp + 424<i32>:word32]
	r16 = Mem0[sp + 420<i32>:word32]
	r17 = Mem0[sp + 416<i32>:word32]
	r18 = Mem0[sp + 412<i32>:word32]
	r19 = Mem0[sp + 408<i32>:word32]
	r20 = Mem0[sp + 404<i32>:word32]
	r21 = Mem0[sp + 400<i32>:word32]
	r22 = Mem0[sp + 396<i32>:word32]
	r23 = Mem0[sp + 392<i32>:word32]
	sp = sp + 432<i32>
	return
	// succ:  __lookup_name_exit
l00406FFE:
	r6 = r4 + 1<32>
	r4 = r21
	r5 = r22
	goto 0x0040738E<p32>
	goto l0040738E
	// succ:  l0040738E
l00407006:
	branch __bit(r18, 3<32>) l00407010
	// succ:  l0040700A l00407010
l0040700A:
	branch r19 == 0xA<32> l00407034
	// succ:  l0040700E l00407034
l0040700E:
	r18 = r18 + 0xFFFFFFF8<32>
	// succ:  l00407010
l00407010:
	branch 0<32> != r22 l004070D2
	// succ:  l00407014 l004070D2
l00407014:
	r7 = r18 & 1<32>
	branch r7 == 0<32> l00407088
	// succ:  l00407018 l00407088
l00407018:
	branch r19 == 0xA<32> l00407038
	// succ:  l0040701C l00407038
l0040701C:
	r6 = 2<32>
	Mem0[sp + 4<32>:word32] = 0<32>
	Mem0[sp:word32] = r6
	Mem0[sp + 8<32>:word32] = 0<32>
	Mem0[sp + 0xC<32>:word32] = 0<32>
	Mem0[sp + 0x10<32>:word32] = 0<32>
	Mem0[sp + 0x14<32>:word32] = 0<32>
	Mem0[sp + 0x18<32>:word32] = 0<32>
	branch r19 != r6 l0040703A
	// succ:  l0040702E l0040703A
l0040702E:
	r20 = 1<32>
	goto 0x00407054<p32>
	goto l00407054
	// succ:  l00407054
l00407034:
	r19 = 0<32>
	goto 0x00407010<p32>
	goto l00407010
	// succ:  l00407010
l00407038:
	r7 = 0<32>
	// succ:  l0040703A
l0040703A:
	r6 = 0x1C<32>
	r20 = r7 + 1<32>
	r7 = r7 *s r6
	r6 = 0xA<32>
	r7 = r16 + r7
	Mem0[sp + 0x40<32>:word32] = r6
	Mem0[sp + 0x44<32>:word32] = 0<32>
	Mem0[sp + 0x48<32>:word32] = 0<32>
	Mem0[sp + 0x4C<32>:word32] = 0<32>
	Mem0[sp + 0x50<32>:word32] = 0<32>
	Mem0[sp + 0x54<32>:word32] = 0<32>
	Mem0[sp + 0x58<32>:word32] = 0<32>
	// succ:  l00407054
l00407054:
	r17 = r20
	branch __bit(r18, 3<32>) l0040706A
	// succ:  l0040705A l0040706A
l0040705A:
	r18 = r18 & 0x10<32>
	branch 0<32> == r18 l0040720C
	// succ:  l00407062 l0040720C
l00407062:
	r18 = r16 + 0x14<32>
	r17 = 0<32>
	// succ:  l00407066
l00407066:
	branch r20 != r17 l00407210
	// succ:  l0040706A l00407210
l0040706A:
	branch r17 < 2<32> l00406FF8
	// succ:  l0040706E l00406FF8
l0040706E:
	branch r19 == 2<32> l00406FF8
	// succ:  l00407072 l00406FF8
l00407072:
	r7 = 0<32>
	// succ:  l00407074
l00407074:
	r6 = 0x1C<32>
	r6 = r6 *s r7
	r6 = Mem0[r16 + r6:word32]
	branch r6 != 2<32> l00407238
	// succ:  l00407080 l00407238
l00407080:
	r7 = r7 + 1<32>
	branch r7 != r17 l00407074
	// succ:  l00407086 l00407074
l00407086:
	goto 0x00406FF8<p32>
	goto l00406FF8
	// succ:  l00406FF8
l00407088:
	branch r19 == 0xA<32> l004070B0
	// succ:  l0040708C l004070B0
l0040708C:
	r7 = 2<32>
	Mem0[sp + 8<32>:word32] = 0<32>
	Mem0[sp:word32] = r7
	r7 = 0x7F<32>
	Mem0[r16 + 8<32>:byte] = SLICE(r7, byte, 0)
	r7 = 1<32>
	Mem0[sp + 4<32>:word32] = 0<32>
	Mem0[sp + 0xC<32>:word32] = 0<32>
	Mem0[sp + 0x10<32>:word32] = 0<32>
	Mem0[sp + 0x14<32>:word32] = 0<32>
	Mem0[sp + 0x18<32>:word32] = 0<32>
	Mem0[r16 + 0xB<32>:byte] = SLICE(r7, byte, 0)
	branch r19 == 2<32> l0040702E
	// succ:  l004070AE l0040702E
l004070AE:
	r7 = 1<32>
	// succ:  l004070B0
l004070B0:
	r6 = 0x1C<32>
	r20 = r7 + 1<32>
	r7 = r7 *s r6
	r6 = 0xA<32>
	r7 = r16 + r7
	Mem0[sp + 0x40<32>:word32] = r6
	r6 = 1<32>
	Mem0[sp + 0x54<32>:word32] = 0<32>
	Mem0[sp + 0x44<32>:word32] = 0<32>
	Mem0[sp + 0x48<32>:word32] = 0<32>
	Mem0[sp + 0x4C<32>:word32] = 0<32>
	Mem0[sp + 0x50<32>:word32] = 0<32>
	Mem0[sp + 0x58<32>:word32] = 0<32>
	Mem0[r7 + 0x17<32>:byte] = SLICE(r6, byte, 0)
	goto 0x00407054<p32>
	goto l00407054
	// succ:  l00407054
l004070D2:
	r5 = r22
	r6 = r19
	r4 = r16
	call __lookup_ipliteral (retsize: 0;)
	r17 = r4
	branch 0<32> != r4 l004071AC
	// succ:  l004070DE l004071AC
l004070DE:
	branch !__bit(r18, 2<32>) l00406FF4
	// succ:  l004070E2 l00406FF4
l004070E2:
	r6 = r22
	r7 = r19
	r4 = r16
	r5 = r21
	goto 0x00406E34<p32>
	// succ:  l004070E6_thunk_name_from_hosts
l004070E6_thunk_name_from_hosts:
	call name_from_hosts (retsize: 0;)
	return
	// succ:  __lookup_name_exit
l004071AC:
	r20 = r17
	branch 0<32> < r17 l00407054
	// succ:  l004071B2 l00407054
l004071B2:
	goto 0x00406FF8<p32>
	goto l00406FF8
	// succ:  l00406FF8
l004071D2:
	r21 = r21 + 1<32>
	branch r21 >= r20 l00407062
	// succ:  l004071D8 l00407062
l004071D8:
	r17 = 0x1C<32>
	r17 = r17 *s r21
	r7 = Mem0[r16 + r17:word32]
	branch r7 != 0xA<32> l004071D2
	// succ:  l004071E4 l004071D2
l004071E4:
	branch r21 >= r20 l00407062
	// succ:  l004071E8 l00407062
l004071E8:
	r17 = r16 + r17
	// succ:  l004071EA
l004071EA:
	r7 = Mem0[r17:word32]
	branch r7 != 0xA<32> l00407200
	// succ:  l004071F0 l00407200
l004071F0:
	r6 = 0x1C<32>
	r22 = r18 + 1<32>
	r18 = r18 *s r6
	r4 = r16 + r18
	r18 = r22
	r5 = r17
	call memcpy (retsize: 0;)
	// succ:  l00407200
l00407200:
	r21 = r21 + 1<32>
	r17 = r17 + 0x1C<32>
	branch r21 != r20 l004071EA
	// succ:  l00407208 l004071EA
l00407208:
	r20 = r18
	goto 0x00407062<p32>
	goto l00407062
	// succ:  l00407062
l0040720C:
	r21 = 0<32>
	goto 0x004071D8<p32>
	goto l004071D8
	// succ:  l004071D8
l00407210:
	r7 = Mem0[r18 - 0x14<32>:word32]
	branch r7 != 2<32> l00407232
	// succ:  l00407218 l00407232
l00407218:
	r21 = r18 + 0xFFFFFFF4<32>
	r6 = 4<32>
	r4 = r18
	r5 = r21
	goto 0x0040738E<p32>
	goto l0040738E
	// succ:  l0040738E
l00407232:
	r17 = r17 + 1<32>
	r18 = r18 + 0x1C<32>
	goto 0x00407066<p32>
	goto l00407066
	// succ:  l00407066
l00407238:
	branch r17 == r7 l00406FF8
	// succ:  l0040723C l00406FF8
l0040723C:
	r5 = sp + 0x14<32>
	r4 = 1<32>
	goto 0x0040AE50<p32>
	// succ:  l00407240_thunk___pthread_setcancelstate
l00407240_thunk___pthread_setcancelstate:
	call __pthread_setcancelstate (retsize: 0;)
	return
	// succ:  __lookup_name_exit
l0040738E:
	goto 0x0040A130<p32>
	// succ:  l0040738E_thunk_memcpy
l0040738E_thunk_memcpy:
	call memcpy (retsize: 0;)
	return
	// succ:  __lookup_name_exit
__lookup_name_exit:


// __lookup_serv
// Return size: 0
define __lookup_serv
__lookup_serv_entry:
	sp = fp
	r25 = 0x4073A0<32>
	// succ:  l004073A0
l004073A0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	Mem0[sp + -32<i32>:word32] = r22
	Mem0[sp + -36<i32>:word32] = r23
	sp = sp - 1360<i32>
	r19 = r6
	r6 = 0x0040BC11<p32>
	r18 = r4
	r20 = r5
	r16 = r8
	Mem0[sp + 4<32>:word32] = r6
	branch r7 == 1<32> l0040740E
	// succ:  l004073B4 l0040740E
l004073B4:
	branch r7 == 2<32> l00407402
	// succ:  l004073B8 l00407402
l004073B8:
	branch r7 != 0<32> l00407418
	// succ:  l004073BA l00407418
l004073BA:
	branch 0<32> == r20 l0040742E
	// succ:  l004073BE l0040742E
l004073BE:
	r7 = CONVERT(Mem0[r20:byte], byte, word32)
	branch r7 == 0<32> l00407408
	// succ:  l004073C4 l00407408
l004073C4:
	r6 = 0xA<32>
	r5 = sp + 4<32>
	r4 = r20
	call __strtoul_internal (retsize: 0;)
	// succ:  l004073CC
l004073CC:
	r17 = Mem0[sp + 4<32>:word32]
	r7 = CONVERT(Mem0[r7:byte], byte, word32)
	branch r7 != 0<32> l00407436
	// succ:  l004073D2 l00407436
l004073D2:
	r7 = 0xFFFF<32>
	branch r7 <u r4 l00407408
	// succ:  l004073DA l00407408
l004073DA:
	r4 = r4 & 0xFFFF<32>
	branch r19 == 0x11<32> l00407432
	// succ:  l004073E0 l00407432
l004073E0:
	r7 = 2<32>
	r16 = 1<32>
	Mem0[r18 + 3<32>:byte] = SLICE(r7, byte, 0)
	r7 = 6<32>
	Mem0[r18:word16] = SLICE(r4, word16, 0)
	Mem0[r18 + 2<32>:byte] = SLICE(r7, byte, 0)
	branch r19 == 6<32> l00407424
	// succ:  l004073F0 l00407424
l004073F0:
	r18 = r18 + (r16 << 2<8>)
	r7 = 1<32>
	r16 = r16 + 1<32>
	Mem0[r18 + 3<32>:byte] = SLICE(r7, byte, 0)
	r7 = 0x11<32>
	Mem0[r18:word16] = SLICE(r4, word16, 0)
	Mem0[r18 + 2<32>:byte] = SLICE(r7, byte, 0)
	goto 0x00407424<p32>
	goto l00407424
	// succ:  l00407424
l00407402:
	branch r19 == 0<32> l0040742A
	// succ:  l00407404 l0040742A
l00407404:
	branch r19 == 6<32> l0040742A
	// succ:  l00407408 l0040742A
l00407408:
	r16 = 0xFFFFFFF8<32>
	goto 0x00407424<p32>
	goto l00407424
	// succ:  l00407424
l0040740E:
	branch r19 == 0<32> l00407414
	// succ:  l00407410 l00407414
l00407410:
	branch r19 != 0x11<32> l00407408
	// succ:  l00407414 l00407408
l00407414:
	r19 = 0x11<32>
	goto 0x004073BA<p32>
	goto l004073BA
	// succ:  l004073BA
l00407418:
	branch 0<32> != r20 l00407408
	// succ:  l0040741C l00407408
l0040741C:
	r16 = 1<32>
	Mem0[r18:word16] = SLICE(0<32>, word16, 0)
	Mem0[r18 + 2<32>:byte] = SLICE(r19, byte, 0)
	Mem0[r18 + 3<32>:byte] = SLICE(r7, byte, 0)
	// succ:  l00407424
l00407424:
	r4 = r16
	ra = Mem0[sp + 1356<i32>:word32]
	r16 = Mem0[sp + 1352<i32>:word32]
	r17 = Mem0[sp + 1348<i32>:word32]
	r18 = Mem0[sp + 1344<i32>:word32]
	r19 = Mem0[sp + 1340<i32>:word32]
	r20 = Mem0[sp + 1336<i32>:word32]
	r21 = Mem0[sp + 1332<i32>:word32]
	r22 = Mem0[sp + 1328<i32>:word32]
	r23 = Mem0[sp + 1324<i32>:word32]
	sp = sp + 1360<i32>
	return
	// succ:  __lookup_serv_exit
l0040742A:
	r19 = 6<32>
	goto 0x004073BA<p32>
	goto l004073BA
	// succ:  l004073BA
l0040742E:
	r4 = 0<32>
	goto 0x004073CC<p32>
	goto l004073CC
	// succ:  l004073CC
l00407432:
	r16 = 0<32>
	goto 0x004073F0<p32>
	goto l004073F0
	// succ:  l004073F0
l00407436:
	r16 = r16 & 0x400<32>
	branch r16 != 0<32> l00407408
	// succ:  l0040743C l00407408
l0040743C:
	r4 = r20
	call strlen (retsize: 0;)
	r7 = 0x408<32>
	r22 = r4
	r6 = sp + 0x118<32>
	r5 = sp + 0x88<32>
	r4 = 0x0040C9BC<p32>
	goto 0x00408070<p32>
	// succ:  l00407450_thunk___fopen_rb_ca
l00407450_thunk___fopen_rb_ca:
	call __fopen_rb_ca (retsize: 0;)
	return
	// succ:  __lookup_serv_exit
__lookup_serv_exit:


// __netlink_enumerate
// Return size: 0
define __netlink_enumerate
__netlink_enumerate_entry:
	sp = fp
	r25 = 0x407550<32>
	// succ:  l00407550
l00407550:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	sp = sp - 32<i32>
	sp = sp + 0xFFFFE000<32>
	r21 = r6
	r16 = r7
	r17 = r4
	r20 = r5
	r6 = 0x14<32>
	r5 = 0<32>
	r4 = sp
	r18 = r8
	r19 = r9
	goto 0x0040A690<p32>
	// succ:  l00407566_thunk_memset
l00407566_thunk_memset:
	call memset (retsize: 0;)
	return
	// succ:  __netlink_enumerate_exit
__netlink_enumerate_exit:


// __rtnetlink_enumerate
// Return size: 0
define __rtnetlink_enumerate
__rtnetlink_enumerate_entry:
	sp = fp
	r25 = 0x4075D2<32>
	// succ:  l004075D2
l004075D2:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	sp = sp - 32<i32>
	r21 = r4
	r20 = r5
	r18 = r6
	r19 = r7
	r5 = 0x80003<32>
	r6 = 0<32>
	r4 = 0x10<32>
	r16 = 0xFFFFFFFF<32>
	goto 0x00407D80<p32>
	// succ:  l004075E4_thunk_socket
l004075E4_thunk_socket:
	call socket (retsize: 0;)
	return
	// succ:  __rtnetlink_enumerate_exit
__rtnetlink_enumerate_exit:


// ntohl
// Return size: 0
define ntohl
ntohl_entry:
	sp = fp
	r25 = 0x407620<32>
	// succ:  l00407620
l00407620:
	r4 = __rotx(r4, 8<32>, 0x18<32>, 0<32>)
	return
	// succ:  ntohl_exit
ntohl_exit:


// ntohs
// Return size: 0
define ntohs
ntohs_entry:
	sp = fp
	r25 = 0x407630<32>
	// succ:  l00407630
l00407630:
	r4 = __rotx(r4, 0x18<32>, 8<32>, 0<32>)
	r4 = r4 & 0xFFFF<32>
	return
	// succ:  ntohs_exit
ntohs_exit:


// recv
// Return size: 0
define recv
recv_entry:
	sp = fp
	r25 = 0x407640<32>
	// succ:  l00407640
l00407640:
	r9 = 0<32>
	r8 = 0<32>
	goto 0x00407650<p32>
	// succ:  l00407644_thunk_recvfrom
l00407644_thunk_recvfrom:
	call recvfrom (retsize: 0;)
	return
	// succ:  recv_exit
recv_exit:


// recvfrom
// Return size: 0
define recvfrom
recvfrom_entry:
	sp = fp
	r25 = 0x407650<32>
	// succ:  l00407650
l00407650:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r10 = r9
	r9 = r8
	r8 = r7
	r7 = r6
	r6 = r5
	r5 = r4
	r4 = 0xCF<32>
	goto 0x0040ADA4<p32>
	// succ:  l00407662_thunk___syscall_cp
l00407662_thunk___syscall_cp:
	call __syscall_cp (retsize: 0;)
	return
	// succ:  recvfrom_exit
recvfrom_exit:


// recvmsg
// Return size: 0
define recvmsg
recvmsg_entry:
	sp = fp
	r25 = 0x407670<32>
	// succ:  l00407670
l00407670:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r10 = 0<32>
	r9 = 0<32>
	r7 = r6
	r8 = 0<32>
	r6 = r5
	r5 = r4
	r4 = 0xD4<32>
	goto 0x0040ADA4<p32>
	// succ:  l00407680_thunk___syscall_cp
l00407680_thunk___syscall_cp:
	call __syscall_cp (retsize: 0;)
	return
	// succ:  recvmsg_exit
recvmsg_exit:


// res_mkquery
// Return size: 0
define res_mkquery
res_mkquery_entry:
	sp = fp
	r25 = 0x407690<32>
	// succ:  l00407690
l00407690:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 336<i32>
	r30 = r5
	r21 = r4
	r5 = 0xFF<32>
	r4 = r30
	r22 = r6
	r23 = r7
	r20 = r11
	r18 = Mem0[sp + 0x150<32>:word32]
	goto 0x0040A940<p32>
	// succ:  l004076A6_thunk_strnlen
l004076A6_thunk_strnlen:
	call strnlen (retsize: 0;)
	return
	// succ:  res_mkquery_exit
res_mkquery_exit:


// mtime
// Return size: 0
define mtime
mtime_entry:
	sp = fp
	r25 = 0x407780<32>
	// succ:  l00407780
l00407780:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 32<i32>
	r4 = 0<32>
	r5 = sp + 8<32>
	goto 0x0040AEF4<p32>
	// succ:  l00407786_thunk___clock_gettime
l00407786_thunk___clock_gettime:
	call __clock_gettime (retsize: 0;)
	return
	// succ:  mtime_exit
mtime_exit:


// cleanup
// Return size: 0
define cleanup
cleanup_entry:
	sp = fp
	r25 = 0x4077A2<32>
	// succ:  l004077A2
l004077A2:
	r5 = r4
	r4 = 0x39<32>
	goto 0x00404A50<p32>
	// succ:  l004077A6_thunk___syscall
l004077A6_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  cleanup_exit
cleanup_exit:


// __res_msend_rc
// Return size: 0
define __res_msend_rc
__res_msend_rc_entry:
	sp = fp
	r25 = 0x4077AA<32>
	// succ:  l004077AA
l004077AA:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 240<i32>
	r30 = r10
	Mem0[sp + 16<i32>:word32] = r6
	Mem0[sp + 20<i32>:word32] = r7
	Mem0[sp + 8<32>:word32] = r5
	r6 = 0x54<32>
	r5 = 0<32>
	r18 = r4
	r4 = sp + 0x6C<32>
	r23 = r10 + 8<32>
	Mem0[sp + 4<32>:word32] = r8
	r16 = sp + 0x6C<32>
	Mem0[sp + 0x20<32>:word32] = r9
	r17 = 2<32>
	Mem0[sp + 0x50<32>:word32] = 0<32>
	r20 = 0<32>
	Mem0[sp + 0x54<32>:word32] = 0<32>
	r19 = 0x10<32>
	Mem0[sp + 0x58<32>:word32] = 0<32>
	Mem0[sp + 0x5C<32>:word32] = 0<32>
	Mem0[sp + 0x60<32>:word32] = 0<32>
	Mem0[sp + 0x64<32>:word32] = 0<32>
	Mem0[sp + 0x68<32>:word32] = 0<32>
	goto 0x0040A690<p32>
	// succ:  l004077DA_thunk_memset
l004077DA_thunk_memset:
	call memset (retsize: 0;)
	return
	// succ:  __res_msend_rc_exit
__res_msend_rc_exit:


// __res_msend
// Return size: 0
define __res_msend
__res_msend_entry:
	sp = fp
	r25 = 0x407A86<32>
	// succ:  l00407A86
l00407A86:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 144<i32>
	r16 = r4
	r17 = r5
	r18 = r6
	r4 = sp + 0x1C<32>
	r5 = 0<32>
	r6 = 0<32>
	Mem0[sp + 4<32>:word32] = r9
	Mem0[sp + 8<32>:word32] = r8
	Mem0[sp + 0xC<32>:word32] = r7
	goto 0x00407B02<p32>
	// succ:  l00407A96_thunk___get_resolv_conf
l00407A96_thunk___get_resolv_conf:
	call __get_resolv_conf (retsize: 0;)
	return
	// succ:  __res_msend_exit
__res_msend_exit:


// res_send
// Return size: 0
define res_send
res_send_entry:
	sp = fp
	r25 = 0x407AC0<32>
	// succ:  l00407AC0
l00407AC0:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 32<i32>
	r9 = r7
	Mem0[sp:word32] = r7
	Mem0[sp + 4<32>:word32] = r6
	r8 = sp
	Mem0[sp + 8<32>:word32] = r5
	r7 = sp + 4<32>
	Mem0[sp + 0xC<32>:word32] = r4
	r6 = sp + 8<32>
	r5 = sp + 0xC<32>
	r4 = 1<32>
	goto 0x00407A86<p32>
	// succ:  l00407AD6_thunk___res_msend
l00407AD6_thunk___res_msend:
	call __res_msend (retsize: 0;)
	return
	// succ:  res_send_exit
res_send_exit:


// __isspace
// Return size: 0
define __isspace
__isspace_entry:
	sp = fp
	r25 = 0x407AF0<32>
	// succ:  l00407AF0
l00407AF0:
	r7 = 1<32>
	branch r4 == 0x20<32> l00407AFE
	// succ:  l00407AF6 l00407AFE
l00407AF6:
	r4 = r4 + 0xFFFFFFF7<32>
	r7 = CONVERT(r4 <u 5<32>, bool, word32)
	// succ:  l00407AFE
l00407AFE:
	r4 = r7
	return
	// succ:  __isspace_exit
__isspace_exit:


// __get_resolv_conf
// Return size: 0
define __get_resolv_conf
__get_resolv_conf_entry:
	sp = fp
	r25 = 0x407B02<32>
	// succ:  l00407B02
l00407B02:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	Mem0[sp + -32<i32>:word32] = r22
	sp = sp - 704<i32>
	r16 = r4
	r20 = r5
	r7 = 1<32>
	r21 = r6
	Mem0[r16 + 0x5C<32>:byte] = SLICE(r7, byte, 0)
	r7 = 5<32>
	Mem0[r16 + 0x60<32>:byte] = SLICE(r7, byte, 0)
	r7 = 2<32>
	Mem0[r16 + 0x58<32>:byte] = SLICE(r7, byte, 0)
	branch 0<32> == r20 l00407B24
	// succ:  l00407B20 l00407B24
l00407B20:
	Mem0[r20:byte] = SLICE(0<32>, byte, 0)
	// succ:  l00407B24
l00407B24:
	r7 = 0x100<32>
	r6 = sp + 0x1A0<32>
	r5 = sp + 0x10<32>
	r4 = 0x0040CD61<p32>
	goto 0x00408070<p32>
	// succ:  l00407B32_thunk___fopen_rb_ca
l00407B32_thunk___fopen_rb_ca:
	call __fopen_rb_ca (retsize: 0;)
	return
	// succ:  __get_resolv_conf_exit
__get_resolv_conf_exit:


// send
// Return size: 0
define send
send_entry:
	sp = fp
	r25 = 0x407D10<32>
	// succ:  l00407D10
l00407D10:
	r9 = 0<32>
	r8 = 0<32>
	goto 0x00407D40<p32>
	// succ:  l00407D14_thunk_sendto
l00407D14_thunk_sendto:
	call sendto (retsize: 0;)
	return
	// succ:  send_exit
send_exit:


// sendmsg
// Return size: 0
define sendmsg
sendmsg_entry:
	sp = fp
	r25 = 0x407D20<32>
	// succ:  l00407D20
l00407D20:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r10 = 0<32>
	r9 = 0<32>
	r7 = r6
	r8 = 0<32>
	r6 = r5
	r5 = r4
	r4 = 0xD3<32>
	goto 0x0040ADA4<p32>
	// succ:  l00407D30_thunk___syscall_cp
l00407D30_thunk___syscall_cp:
	call __syscall_cp (retsize: 0;)
	return
	// succ:  sendmsg_exit
sendmsg_exit:


// sendto
// Return size: 0
define sendto
sendto_entry:
	sp = fp
	r25 = 0x407D40<32>
	// succ:  l00407D40
l00407D40:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r10 = r9
	r9 = r8
	r8 = r7
	r7 = r6
	r6 = r5
	r5 = r4
	r4 = 0xCE<32>
	goto 0x0040ADA4<p32>
	// succ:  l00407D52_thunk___syscall_cp
l00407D52_thunk___syscall_cp:
	call __syscall_cp (retsize: 0;)
	return
	// succ:  sendto_exit
sendto_exit:


// setsockopt
// Return size: 0
define setsockopt
setsockopt_entry:
	sp = fp
	r25 = 0x407D60<32>
	// succ:  l00407D60
l00407D60:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r10 = 0<32>
	r9 = r8
	r8 = r7
	r7 = r6
	r6 = r5
	r5 = r4
	r4 = 0xD0<32>
	goto 0x00404A50<p32>
	// succ:  l00407D72_thunk___syscall
l00407D72_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  setsockopt_exit
setsockopt_exit:


// socket
// Return size: 0
define socket
socket_entry:
	sp = fp
	r25 = 0x407D80<32>
	// succ:  l00407D80
l00407D80:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	sp = sp - 32<i32>
	r18 = r4
	r17 = r5
	r19 = r6
	r10 = 0<32>
	r9 = 0<32>
	r4 = 0xC6<32>
	r7 = r19
	r8 = 0<32>
	r5 = r18
	r6 = r17
	goto 0x00404A50<p32>
	// succ:  l00407D92_thunk___syscall
l00407D92_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  socket_exit
socket_exit:


// sched_yield
// Return size: 0
define sched_yield
sched_yield_entry:
	sp = fp
	r25 = 0x407E10<32>
	// succ:  l00407E10
l00407E10:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r4 = 0x7C<32>
	goto 0x00404A50<p32>
	// succ:  l00407E14_thunk___syscall
l00407E14_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  sched_yield_exit
sched_yield_exit:


// poll
// Return size: 0
define poll
poll_entry:
	sp = fp
	r25 = 0x407E20<32>
	// succ:  l00407E20
l00407E20:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 32<i32>
	r7 = 0<32>
	branch r6 < 0<32> l00407E42
	// succ:  l00407E28 l00407E42
l00407E28:
	r8 = 0x3E8<32>
	lo = r7 / r6
	hi = r7 % r6
	Mem0[sp + 8<32>:word32] = r7
	r7 = r6 % r8
	r6 = 0xF4240<32>
	r7 = r7 *s r6
	Mem0[sp + 0xC<32>:word32] = r7
	r7 = sp + 8<32>
	// succ:  l00407E42
l00407E42:
	r6 = r5
	r10 = 0<32>
	r5 = r4
	r9 = 8<32>
	r8 = 0<32>
	r4 = 0x49<32>
	goto 0x0040ADA4<p32>
	// succ:  l00407E50_thunk___syscall_cp
l00407E50_thunk___syscall_cp:
	call __syscall_cp (retsize: 0;)
	return
	// succ:  poll_exit
poll_exit:


// _longjmp
// Return size: 0
define _longjmp
_longjmp_entry:
	sp = fp
	r25 = 0x407E60<32>
	// succ:  l00407E60
l00407E60:
	ra = Mem0[r4:word32]
	sp = Mem0[r4 + 4<32>:word32]
	r16 = Mem0[r4 + 8<i32>:word32]
	r17 = Mem0[r4 + 12<i32>:word32]
	r18 = Mem0[r4 + 16<i32>:word32]
	r19 = Mem0[r4 + 20<i32>:word32]
	r20 = Mem0[r4 + 24<i32>:word32]
	r21 = Mem0[r4 + 28<i32>:word32]
	r22 = Mem0[r4 + 32<i32>:word32]
	r23 = Mem0[r4 + 36<i32>:word32]
	r30 = Mem0[r4 + 0x28<32>:word32]
	r28 = Mem0[r4 + 0x2C<32>:word32]
	r4 = r5
	branch r4 != 0<32> l00407E7A
	// succ:  l00407E78 l00407E7A
l00407E78:
	r4 = r4 + 1<32>
	// succ:  l00407E7A
l00407E7A:
	return
	// succ:  _longjmp_exit
_longjmp_exit:


// _setjmp
// Return size: 0
define _setjmp
_setjmp_entry:
	sp = fp
	r25 = 0x407E80<32>
	// succ:  l00407E80
l00407E80:
	Mem0[r4:byte] = SLICE(ra, byte, 0)
	Mem0[r4 + 4<32>:byte] = SLICE(sp, byte, 0)
	Mem0[r4 + 8<i32>:word32] = r16
	Mem0[r4 + 12<i32>:word32] = r17
	Mem0[r4 + 16<i32>:word32] = r18
	Mem0[r4 + 20<i32>:word32] = r19
	Mem0[r4 + 24<i32>:word32] = r20
	Mem0[r4 + 28<i32>:word32] = r21
	Mem0[r4 + 32<i32>:word32] = r22
	Mem0[r4 + 36<i32>:word32] = r23
	Mem0[r4 + 0x28<32>:byte] = SLICE(r30, byte, 0)
	Mem0[r4 + 0x2C<32>:byte] = SLICE(r28, byte, 0)
	r4 = 0<32>
	return
	// succ:  _setjmp_exit
_setjmp_exit:


// __block_all_sigs
// Return size: 0
define __block_all_sigs
__block_all_sigs_entry:
	sp = fp
	r25 = 0x407EA0<32>
	// succ:  l00407EA0
l00407EA0:
	r7 = r4
	r8 = 8<32>
	r6 = 0x0040D6C9<p32>
	r5 = 0<32>
	r4 = 0x87<32>
	goto 0x00404A50<p32>
	// succ:  l00407EB0_thunk___syscall
l00407EB0_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  __block_all_sigs_exit
__block_all_sigs_exit:


// __block_app_sigs
// Return size: 0
define __block_app_sigs
__block_app_sigs_entry:
	sp = fp
	r25 = 0x407EB4<32>
	// succ:  l00407EB4
l00407EB4:
	r7 = r4
	r8 = 8<32>
	r6 = 0x0040D6CB<p32>
	r5 = 0<32>
	r4 = 0x87<32>
	goto 0x00404A50<p32>
	// succ:  l00407EC4_thunk___syscall
l00407EC4_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  __block_app_sigs_exit
__block_app_sigs_exit:


// __restore_sigs
// Return size: 0
define __restore_sigs
__restore_sigs_entry:
	sp = fp
	r25 = 0x407EC8<32>
	// succ:  l00407EC8
l00407EC8:
	r6 = r4
	r7 = 0<32>
	r8 = 8<32>
	r5 = 2<32>
	r4 = 0x87<32>
	goto 0x00404A50<p32>
	// succ:  l00407ED4_thunk___syscall
l00407ED4_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  __restore_sigs_exit
__restore_sigs_exit:


// raise
// Return size: 0
define raise
raise_entry:
	sp = fp
	r25 = 0x407EE0<32>
	// succ:  l00407EE0
l00407EE0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 144<i32>
	r16 = r4
	r4 = sp
	goto 0x00407EB4<p32>
	// succ:  l00407EE6_thunk___block_app_sigs
l00407EE6_thunk___block_app_sigs:
	call __block_app_sigs (retsize: 0;)
	return
	// succ:  raise_exit
raise_exit:


// setitimer
// Return size: 0
define setitimer
setitimer_entry:
	sp = fp
	r25 = 0x407F10<32>
	// succ:  l00407F10
l00407F10:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r7 = r6
	r6 = r5
	r5 = r4
	r4 = 0x67<32>
	goto 0x00404A50<p32>
	// succ:  l00407F1A_thunk___syscall
l00407F1A_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  setitimer_exit
setitimer_exit:


// __get_handler_set
// Return size: 0
define __get_handler_set
__get_handler_set_entry:
	sp = fp
	r25 = 0x407F30<32>
	// succ:  l00407F30
l00407F30:
	r6 = 8<32>
	r5 = 0x0041D45B<p32>
	goto 0x0040A130<p32>
	// succ:  l00407F36_thunk_memcpy
l00407F36_thunk_memcpy:
	call memcpy (retsize: 0;)
	return
	// succ:  __get_handler_set_exit
__get_handler_set_exit:


// __libc_sigaction
// Return size: 0
define __libc_sigaction
__libc_sigaction_entry:
	sp = fp
	r25 = 0x407F3A<32>
	// succ:  l00407F3A
l00407F3A:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 64<i32>
	r18 = r4
	r17 = r5
	r16 = r6
	r6 = 0<32>
	branch 0<32> == r17 l00407FD2
	// succ:  l00407F46 l00407FD2
l00407F46:
	r7 = Mem0[r17:word32]
	branch r7 <u 2<32> l00407FA4
	// succ:  l00407F4C l00407FA4
l00407F4C:
	r7 = r18 + 0xFFFFFFFF<32>
	r5 = 0x0041D46A<p32>
	r6 = r7 >>u 5<32>
	r6 = r5 + (r6 << 2<8>)
	r5 = 1<32>
	r5 = r5 << r7
	__sync(0<32>)
	// succ:  l00407F64
l00407F64:
	r7 = __load_linked_32(Mem0[r6:word32])
	r7 = r7 | r5
	r7 = __store_conditional_32(Mem0[r6:word32], r7)
	branch r7 == 0<32> l00407F64
	// succ:  l00407F70 l00407F64
l00407F70:
	__sync(0<32>)
	r7 = 0x0042E1D4<p32>
	r7 = Mem0[r7 + 4<32>:word32]
	branch r7 != 0<32> l00407FA4
	// succ:  l00407F7C l00407FA4
l00407F7C:
	r7 = Mem0[0x00432988<p32>:word32]
	branch r7 != 0<32> l00407FA4
	// succ:  l00407F84 l00407FA4
l00407F84:
	r7 = 3<32>
	r8 = 8<32>
	Mem0[sp + 4<32>:word32] = r7
	r6 = sp
	r7 = 0<32>
	r5 = 1<32>
	r4 = 0x87<32>
	Mem0[sp:word32] = 0<32>
	goto 0x00404A50<p32>
	// succ:  l00407F98_thunk___syscall
l00407F98_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  __libc_sigaction_exit
l00407FA4:
	r7 = Mem0[r17:word32]
	r6 = 0x40000000<32>
	r5 = 0x0040A8B7<p32>
	r4 = sp + 0x10<32>
	Mem0[sp + 8<32>:word32] = r7
	r7 = Mem0[r17 + 0x84<32>:word32]
	r6 = r6 | r7
	r7 = r7 & 4<32>
	Mem0[sp + 0xC<32>:word32] = r6
	r6 = 0x0040A8C0<p32>
	branch r7 == 0<32> l00407FC4
	// succ:  l00407FC0_1 l00407FC4
l00407FC0_1:
	r6 = r5
	// succ:  l00407FC4
l00407FC4:
	r5 = r17 + 4<32>
	r7 = r6
	r6 = 8<32>
	Mem0[sp + 0x18<32>:word32] = r7
	goto 0x0040A130<p32>
	// succ:  l00407FCC_thunk_memcpy
l00407FCC_thunk_memcpy:
	call memcpy (retsize: 0;)
	return
	// succ:  __libc_sigaction_exit
l00407FD2:
	r7 = 0<32>
	branch r16 == 0<32> l00407FD8
	// succ:  l00407FD6 l00407FD8
l00407FD6:
	r7 = sp + 0x1C<32>
	// succ:  l00407FD8
l00407FD8:
	r8 = 8<32>
	r4 = 0x86<32>
	r5 = r18
	call __syscall (retsize: 0;)
	goto 0x0040CC30<p32>
	// succ:  l00407FE4_thunk___syscall_ret
l00407FE4_thunk___syscall_ret:
	call __syscall_ret (retsize: 0;)
	return
	// succ:  __libc_sigaction_exit
__libc_sigaction_exit:


// __sigaction
// Return size: 0
define __sigaction
__sigaction_entry:
	sp = fp
	r25 = 0x40800A<32>
	// succ:  l0040800A
l0040800A:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r8 = r4 + 0xFFFFFFE0<32>
	r7 = r4
	branch r8 <u 3<32> l00408024
	// succ:  l00408016 l00408024
l00408016:
	r7 = r7 + 0xFFFFFFFF<32>
	branch r7 >=u 0x3F<32> l00408024
	// succ:  l0040801C l00408024
l0040801C:
	ra = Mem0[sp + 12<i32>:word32]
	sp = sp + 16<i32>
	goto 0x00407F3A<p32>
	// succ:  l00408020_thunk___libc_sigaction
l00408020_thunk___libc_sigaction:
	call __libc_sigaction (retsize: 0;)
	return
	// succ:  __sigaction_exit
l00408024:
	goto 0x004049B0<p32>
	// succ:  l00408024_thunk___errno_location
l00408024_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  __sigaction_exit
__sigaction_exit:


// sigemptyset
// Return size: 0
define sigemptyset
sigemptyset_entry:
	sp = fp
	r25 = 0x408030<32>
	// succ:  l00408030
l00408030:
	Mem0[sp:word32] = 0<32>
	Mem0[sp + 4<32>:word32] = 0<32>
	r4 = 0<32>
	return
	// succ:  sigemptyset_exit
sigemptyset_exit:


// sigprocmask
// Return size: 0
define sigprocmask
sigprocmask_entry:
	sp = fp
	r25 = 0x408040<32>
	// succ:  l00408040
l00408040:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	goto 0x0040AE70<p32>
	// succ:  l00408042_thunk_pthread_sigmask
l00408042_thunk_pthread_sigmask:
	call pthread_sigmask (retsize: 0;)
	return
	// succ:  sigprocmask_exit
sigprocmask_exit:


// __fclose_ca
// Return size: 0
define __fclose_ca
__fclose_ca_entry:
	sp = fp
	r25 = 0x408060<32>
	// succ:  l00408060
l00408060:
	r7 = Mem0[r4 + 0xC<32>:word32]
	call r7 (retsize: 0;)
	return
	// succ:  __fclose_ca_exit
__fclose_ca_exit:


// __fopen_rb_ca
// Return size: 0
define __fopen_rb_ca
__fopen_rb_ca_entry:
	sp = fp
	r25 = 0x408070<32>
	// succ:  l00408070
l00408070:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	sp = sp - 32<i32>
	r19 = r4
	r16 = r5
	r18 = r6
	r17 = r7
	r4 = r16
	r5 = 0<32>
	r6 = 0x90<32>
	goto 0x0040A690<p32>
	// succ:  l0040807C_thunk_memset
l0040807C_thunk_memset:
	call memset (retsize: 0;)
	return
	// succ:  __fopen_rb_ca_exit
__fopen_rb_ca_exit:


// __aio_close
// Return size: 0
define __aio_close
__aio_close_entry:
	sp = fp
	r25 = 0x4080E0<32>
	// succ:  l004080E0
l004080E0:
	return
	// succ:  __aio_close_exit
__aio_close_exit:


// __stdio_close
// Return size: 0
define __stdio_close
__stdio_close_entry:
	sp = fp
	r25 = 0x4080E2<32>
	// succ:  l004080E2
l004080E2:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r4 = Mem0[r4 + 0x3C<32>:word32]
	goto 0x004080E0<p32>
	// succ:  l004080E6_thunk___aio_close
l004080E6_thunk___aio_close:
	call __aio_close (retsize: 0;)
	return
	// succ:  __stdio_close_exit
__stdio_close_exit:


// __stdio_read
// Return size: 0
define __stdio_read
__stdio_read_entry:
	sp = fp
	r25 = 0x408100<32>
	// succ:  l00408100
l00408100:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 32<i32>
	r16 = r4
	r18 = r5
	r17 = r6
	r4 = 0x41<32>
	r6 = Mem0[r16 + 0x30<32>:word32]
	r5 = Mem0[r16 + 0x3C<32>:word32]
	r7 = CONVERT(0<32> <u r6, bool, word32)
	Mem0[sp + 0xC<32>:word32] = r6
	r7 = r17 - r7
	r6 = sp
	Mem0[sp + 4<32>:word32] = r7
	r7 = Mem0[r16 + 0x2C<32>:word32]
	Mem0[sp:word32] = r18
	Mem0[sp + 8<32>:word32] = r7
	r7 = 2<32>
	goto 0x00404A50<p32>
	// succ:  l00408120_thunk___syscall
l00408120_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  __stdio_read_exit
__stdio_read_exit:


// __stdio_seek
// Return size: 0
define __stdio_seek
__stdio_seek_entry:
	sp = fp
	r25 = 0x408170<32>
	// succ:  l00408170
l00408170:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 32<i32>
	r5 = r7
	r9 = r8
	r7 = r6
	r6 = r5
	r5 = Mem0[r4 + 0x3C<32>:word32]
	r8 = sp + 8<32>
	r4 = 0x3E<32>
	goto 0x00404A50<p32>
	// succ:  l00408180_thunk___syscall
l00408180_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  __stdio_seek_exit
__stdio_seek_exit:


// fflush_unlocked
// Return size: 0
define fflush_unlocked
fflush_unlocked_entry:
	sp = fp
	r25 = 0x4081A0<32>
	// succ:  l004081A0
l004081A0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 16<i32>
	r16 = r4
	branch r4 != 0<32> l004081DE
	// succ:  l004081A6 l004081DE
l004081A6:
	r7 = Mem0[0x00430300<p32>:word32]
	r17 = 0<32>
	branch r7 == 0<32> l004081BA
	// succ:  l004081B0 l004081BA
l004081B0:
	r4 = Mem0[0x00430300<p32>:word32]
	goto 0x004081A0<p32>
	goto l004081A0
	// succ:  l004081A0
l004081BA:
	goto 0x00408610<p32>
	// succ:  l004081BA_thunk___ofl_lock
l004081BA_thunk___ofl_lock:
	call __ofl_lock (retsize: 0;)
	return
	// succ:  fflush_unlocked_exit
l004081DA:
	r4 = r17
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	r17 = Mem0[sp + 4<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  fflush_unlocked_exit
l004081DE:
	r7 = Mem0[r4 + 0x4C<32>:word32]
	r17 = 0<32>
	branch r7 < 0<32> l004081EE
	// succ:  l004081E8 l004081EE
l004081E8:
	goto 0x0040D1D0<p32>
	// succ:  l004081E8_thunk___lockfile
l004081E8_thunk___lockfile:
	call __lockfile (retsize: 0;)
	return
	// succ:  fflush_unlocked_exit
l004081EE:
	r7 = Mem0[r16 + 0x14<32>:word32]
	r6 = Mem0[r16 + 0x1C<32>:word32]
	branch r6 >=u r7 l0040820C
	// succ:  l004081F6 l0040820C
l004081F6:
	r7 = Mem0[r16 + 0x24<32>:word32]
	r4 = r16
	r5 = 0<32>
	r6 = 0<32>
	call r7 (retsize: 0;)
	r7 = Mem0[r16 + 0x14<32>:word32]
	branch r7 != 0<32> l0040820C
	// succ:  l00408202 l0040820C
l00408202:
	branch r17 == 0<32> l00408208
	// succ:  l00408204 l00408208
l00408204:
	r4 = r16
	call __unlockfile (retsize: 0;)
	// succ:  l00408208
l00408208:
	r17 = 0xFFFFFFFF<32>
	goto 0x004081DA<p32>
	goto l004081DA
	// succ:  l004081DA
l0040820C:
	r6 = Mem0[r16 + 4<i32>:word32]
	r7 = Mem0[r16 + 8<i32>:word32]
	branch r6 >=u r7 l00408224
	// succ:  l00408214 l00408224
l00408214:
	r6 = r6 - r7
	r5 = Mem0[r16 + 0x28<32>:word32]
	r8 = 1<32>
	r7 = r6 >> 0x1F<32>
	r4 = r16
	call r5 (retsize: 0;)
	// succ:  l00408224
l00408224:
	Mem0[sp + 4<32>:word32] = 0<32>
	Mem0[sp + 8<32>:word32] = 0<32>
	Mem0[sp + 0x10<32>:word32] = 0<32>
	Mem0[sp + 0x14<32>:word32] = 0<32>
	Mem0[sp + 0x1C<32>:word32] = 0<32>
	branch r17 == 0<32> l004081DA
	// succ:  l00408230 l004081DA
l00408230:
	r17 = 0<32>
	r4 = r16
	call __unlockfile (retsize: 0;)
	goto 0x004081DA<p32>
	goto l004081DA
	// succ:  l004081DA
fflush_unlocked_exit:


// fgets_unlocked
// Return size: 0
define fgets_unlocked
fgets_unlocked_entry:
	sp = fp
	r25 = 0x408240<32>
	// succ:  l00408240
l00408240:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	Mem0[sp + -32<i32>:word32] = r22
	sp = sp - 32<i32>
	r7 = Mem0[r6 + 0x4C<32>:word32]
	r16 = r6
	r19 = r4
	r18 = r5
	r21 = 0<32>
	branch r7 < 0<32> l00408256
	// succ:  l00408250 l00408256
l00408250:
	r4 = r6
	call __lockfile (retsize: 0;)
	r21 = r4
	// succ:  l00408256
l00408256:
	r20 = r18 + 0xFFFFFFFF<32>
	r17 = r19
	branch r18 >= 2<32> l004082BC
	// succ:  l00408260 l004082BC
l00408260:
	r7 = CONVERT(Mem0[r16 + 0x4A<32>:int8], int8, word32)
	r6 = r7 + 0xFFFFFFFF<32>
	r7 = r7 | r6
	Mem0[r16 + 0x4A<32>:byte] = SLICE(r7, byte, 0)
	branch 0<32> == r21 l00408276
	// succ:  l00408272 l00408276
l00408272:
	r4 = r16
	call __unlockfile (retsize: 0;)
	// succ:  l00408276
l00408276:
	r17 = 0<32>
	branch 0<32> != r20 l00408280
	// succ:  l0040827C l00408280
l0040827C:
	r17 = r19
	Mem0[r19:byte] = SLICE(0<32>, byte, 0)
	// succ:  l00408280
l00408280:
	r4 = r17
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	r20 = Mem0[sp + 8<i32>:word32]
	r21 = Mem0[sp + 4<i32>:word32]
	r22 = Mem0[sp + 0<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  fgets_unlocked_exit
l0040829C:
	branch r19 == 0<32> l004082A0
	// succ:  l0040829E l004082A0
l0040829E:
	Mem0[r17:byte] = SLICE(0<32>, byte, 0)
	// succ:  l004082A0
l004082A0:
	r17 = r19
	branch 0<32> == r21 l00408280
	// succ:  l004082A6 l00408280
l004082A6:
	r4 = r16
	call __unlockfile (retsize: 0;)
	goto 0x00408280<p32>
	goto l00408280
	// succ:  l00408280
l004082BC:
	branch 0<32> == r20 l0040829C
	// succ:  l004082C0 l0040829C
l004082C0:
	r4 = Mem0[r16 + 4<32>:word32]
	r5 = 0xA<32>
	r6 = Mem0[r16 + 8<32>:word32]
	r6 = r6 - r4
	goto 0x0040A050<p32>
	// succ:  l004082C8_thunk_memchr
l004082C8_thunk_memchr:
	call memchr (retsize: 0;)
	return
	// succ:  fgets_unlocked_exit
fgets_unlocked_exit:


// flockfile
// Return size: 0
define flockfile
flockfile_entry:
	sp = fp
	r25 = 0x408310<32>
	// succ:  l00408310
l00408310:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r16 = r4
	// succ:  l00408314
l00408314:
	r4 = r16
	call ftrylockfile (retsize: 0;)
	branch r4 == 0<32> l00408330
	// succ:  l0040831A l00408330
l0040831A:
	r6 = Mem0[r16 + 0x4C<32>:word32]
	branch r6 == 0<32> l00408314
	// succ:  l00408320 l00408314
l00408320:
	r7 = 1<32>
	r5 = r16 + 0x50<32>
	r4 = r16 + 0x4C<32>
	goto 0x0040ADB0<p32>
	// succ:  l0040832A_thunk___wait
l0040832A_thunk___wait:
	call __wait (retsize: 0;)
	return
	// succ:  flockfile_exit
l00408330:
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  flockfile_exit
flockfile_exit:


// fprintf
// Return size: 0
define fprintf
fprintf_entry:
	sp = fp
	r25 = 0x408340<32>
	// succ:  l00408340
l00408340:
	sp = sp + 0xFFFFFFE0<32>
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 32<i32>
	Mem0[sp + 40<i32>:word32] = r6
	Mem0[sp + 44<i32>:word32] = r7
	r7 = sp + 0x40<32>
	Mem0[sp:word32] = r7
	r6 = sp
	Mem0[sp + 4<32>:word32] = r7
	Mem0[sp + 48<i32>:word32] = r8
	Mem0[sp + 52<i32>:word32] = r9
	Mem0[sp + 8<32>:word32] = r7
	r7 = 0x18<32>
	Mem0[sp + 0xC<32>:byte] = SLICE(r7, byte, 0)
	r7 = 0x40<32>
	Mem0[sp + 56<i32>:word32] = r10
	Mem0[sp + 60<i32>:word32] = r11
	Mem0[sp + 0xD<32>:byte] = SLICE(r7, byte, 0)
	goto 0x004099EE<p32>
	// succ:  l00408368_thunk_vfprintf
l00408368_thunk_vfprintf:
	call vfprintf (retsize: 0;)
	return
	// succ:  fprintf_exit
fprintf_exit:


// fputc
// Return size: 0
define fputc
fputc_entry:
	sp = fp
	r25 = 0x408380<32>
	// succ:  l00408380
l00408380:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	sp = sp - 32<i32>
	r18 = r4
	r16 = r5
	r19 = r18 & 0xFF<32>
	r17 = r18 & 0xFF<32>
	r7 = Mem0[r16 + 0x4C<32>:word32]
	branch r7 >= 0<32> l004083A2
	// succ:  l00408390 l004083A2
l00408390:
	r7 = CONVERT(Mem0[r16 + 0x4B<32>:int8], int8, word32)
	branch r7 != r17 l004083C6
	// succ:  l00408398 l004083C6
l00408398:
	r4 = r16
	r5 = r18
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	sp = sp + 32<i32>
	goto 0x0040D250<p32>
	// succ:  l0040839E_thunk___overflow
l0040839E_thunk___overflow:
	call __overflow (retsize: 0;)
	return
	// succ:  fputc_exit
l004083A2:
	r4 = r16
	call __lockfile (retsize: 0;)
	branch r4 == 0<32> l00408390
	// succ:  l004083A8 l00408390
l004083A8:
	r7 = CONVERT(Mem0[r16 + 0x4B<32>:int8], int8, word32)
	branch r17 == r7 l004083DA
	// succ:  l004083B0 l004083DA
l004083B0:
	r6 = Mem0[r16 + 16<i32>:word32]
	r7 = Mem0[r16 + 20<i32>:word32]
	branch r7 >=u r6 l004083DA
	// succ:  l004083B8 l004083DA
l004083B8:
	r6 = r7 + 1<32>
	Mem0[sp + 0x14<32>:word32] = r6
	Mem0[r7:byte] = SLICE(r19, byte, 0)
	r4 = r16
	call __unlockfile (retsize: 0;)
	goto 0x004083D6<p32>
	goto l004083D6
	// succ:  l004083D6
l004083C6:
	r6 = Mem0[r16 + 16<i32>:word32]
	r7 = Mem0[r16 + 20<i32>:word32]
	branch r7 >=u r6 l00408398
	// succ:  l004083CE l00408398
l004083CE:
	r6 = r7 + 1<32>
	Mem0[sp + 0x14<32>:word32] = r6
	Mem0[r7:byte] = SLICE(r19, byte, 0)
	// succ:  l004083D6
l004083D6:
	r4 = r17
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  fputc_exit
l004083DA:
	r4 = r16
	r5 = r18
	goto 0x0040D250<p32>
	// succ:  l004083DC_thunk___overflow
l004083DC_thunk___overflow:
	call __overflow (retsize: 0;)
	return
	// succ:  fputc_exit
fputc_exit:


// fputs_unlocked
// Return size: 0
define fputs_unlocked
fputs_unlocked_entry:
	sp = fp
	r25 = 0x4083F0<32>
	// succ:  l004083F0
l004083F0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 16<i32>
	r17 = r4
	r18 = r5
	goto 0x0040A890<p32>
	// succ:  l004083F4_thunk_strlen
l004083F4_thunk_strlen:
	call strlen (retsize: 0;)
	return
	// succ:  fputs_unlocked_exit
fputs_unlocked_exit:


// __do_orphaned_stdio_locks
// Return size: 0
define __do_orphaned_stdio_locks
__do_orphaned_stdio_locks_entry:
	sp = fp
	r25 = 0x408410<32>
	// succ:  l00408410
l00408410:
	r3 = __read_hardware_register(sp)
	r7 = Mem0[r3 - 0xC<32>:word32]
	goto 0x0040842E<p32>
	goto l0040842E
	// succ:  l0040842E
l0040841A:
	__sync(0<32>)
	r6 = 0<32>
	Mem0[r7 + 0x4C<32>:byte] = SLICE(r6, byte, 0)
	__sync(0<32>)
	r7 = Mem0[r7 + 0x84<32>:word32]
	// succ:  l0040842E
l0040842E:
	branch r7 != 0<32> l0040841A
	// succ:  l00408430 l0040841A
l00408430:
	return
	// succ:  __do_orphaned_stdio_locks_exit
__do_orphaned_stdio_locks_exit:


// __unlist_locked_file
// Return size: 0
define __unlist_locked_file
__unlist_locked_file_entry:
	sp = fp
	r25 = 0x408432<32>
	// succ:  l00408432
l00408432:
	r4 = r4 + 0x44<32>
	r7 = Mem0[r4:word32]
	branch r7 == 0<32> l0040845A
	// succ:  l0040843A l0040845A
l0040843A:
	r6 = Mem0[r4 + 60<i32>:word32]
	r7 = Mem0[r4 + 64<i32>:word32]
	branch r7 == 0<32> l00408444
	// succ:  l00408440 l00408444
l00408440:
	Mem0[r7 + 0x80<32>:byte] = SLICE(r6, byte, 0)
	// succ:  l00408444
l00408444:
	r6 = Mem0[r4 + 0x3C<32>:word32]
	branch r6 == 0<32> l0040844E
	// succ:  l00408448 l0040844E
l00408448:
	Mem0[r6 + 0x84<32>:byte] = SLICE(r7, byte, 0)
	return
	// succ:  __unlist_locked_file_exit
l0040844E:
	r3 = __read_hardware_register(sp)
	r7 = Mem0[r4 + 0x40<32>:word32]
	Mem0[r3 - 0xC<32>:word32] = r7
	// succ:  l0040845A
l0040845A:
	return
	// succ:  __unlist_locked_file_exit
__unlist_locked_file_exit:


// ftrylockfile
// Return size: 0
define ftrylockfile
ftrylockfile_entry:
	sp = fp
	r25 = 0x40845C<32>
	// succ:  l0040845C
l0040845C:
	r7 = r4
	r3 = __read_hardware_register(sp)
	r6 = Mem0[r4 + 0x4C<32>:word32]
	r8 = Mem0[r3 - 0x94<32>:word32]
	branch r8 != r6 l00408488
	// succ:  l0040846E l00408488
l0040846E:
	r6 = Mem0[r4 + 0x44<32>:word32]
	r5 = 0x7FFFFFFF<32>
	branch r5 != r6 l0040847E
	// succ:  l0040847A l0040847E
l0040847A:
	r4 = 0xFFFFFFFF<32>
	return
	// succ:  ftrylockfile_exit
l0040847E:
	r6 = r6 + 1<32>
	r4 = 0<32>
	Mem0[r7 + 0x44<32>:byte] = SLICE(r6, byte, 0)
	return
	// succ:  ftrylockfile_exit
l00408488:
	r6 = Mem0[r4 + 0x4C<32>:word32]
	branch r6 >= 0<32> l00408494
	// succ:  l00408490 l00408494
l00408490:
	Mem0[r4 + 0x4C<32>:byte] = SLICE(0<32>, byte, 0)
	// succ:  l00408494
l00408494:
	r6 = Mem0[r7 + 0x4C<32>:word32]
	branch r6 != 0<32> l0040847A
	// succ:  l0040849A l0040847A
l0040849A:
	r5 = r7 + 0x4C<32>
	__sync(0<32>)
	// succ:  l004084A2
l004084A2:
	r4 = __load_linked_32(Mem0[r5:word32])
	branch r4 != 0<32> l004084B0
	// succ:  l004084A8 l004084B0
l004084A8:
	r6 = r8
	r6 = __store_conditional_32(Mem0[r5:word32], r6)
	branch r6 == 0<32> l004084A2
	// succ:  l004084B0 l004084A2
l004084B0:
	__sync(0<32>)
	branch r4 != 0<32> l0040847A
	// succ:  l004084B6 l0040847A
l004084B6:
	r6 = 1<32>
	Mem0[r7 + 0x80<32>:byte] = SLICE(0<32>, byte, 0)
	Mem0[r7 + 0x44<32>:byte] = SLICE(r6, byte, 0)
	r6 = Mem0[r3 - 0xC<32>:word32]
	Mem0[r7 + 0x84<32>:byte] = SLICE(r6, byte, 0)
	branch r6 == 0<32> l004084CE
	// succ:  l004084CA l004084CE
l004084CA:
	Mem0[r6 + 0x80<32>:byte] = SLICE(r7, byte, 0)
	// succ:  l004084CE
l004084CE:
	Mem0[r3 - 0xC<32>:word32] = r7
	return
	// succ:  ftrylockfile_exit
ftrylockfile_exit:


// funlockfile
// Return size: 0
define funlockfile
funlockfile_entry:
	sp = fp
	r25 = 0x4084E0<32>
	// succ:  l004084E0
l004084E0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r7 = Mem0[r4 + 0x44<32>:word32]
	r16 = r4
	branch r7 == 1<32> l004084F4
	// succ:  l004084EC l004084F4
l004084EC:
	r7 = r7 + 0xFFFFFFFF<32>
	Mem0[r4 + 0x44<32>:byte] = SLICE(r7, byte, 0)
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  funlockfile_exit
l004084F4:
	goto 0x00408432<p32>
	// succ:  l004084F4_thunk___unlist_locked_file
l004084F4_thunk___unlist_locked_file:
	call __unlist_locked_file (retsize: 0;)
	return
	// succ:  funlockfile_exit
funlockfile_exit:


// __fwritex
// Return size: 0
define __fwritex
__fwritex_entry:
	sp = fp
	r25 = 0x408510<32>
	// succ:  l00408510
l00408510:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	sp = sp - 32<i32>
	r7 = Mem0[r6 + 0x10<32>:word32]
	r16 = r6
	r19 = r4
	r18 = r5
	branch r7 == 0<32> l00408530
	// succ:  l0040851A l00408530
l0040851A:
	r7 = Mem0[r16 + 0x10<32>:word32]
	r6 = Mem0[r16 + 0x14<32>:word32]
	r7 = r7 - r6
	branch r7 >=u r18 l0040853A
	// succ:  l00408524 l0040853A
l00408524:
	r7 = Mem0[r16 + 0x24<32>:word32]
	r4 = r16
	r5 = r19
	r6 = r18
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	sp = sp + 32<i32>
	call r7 (retsize: 0;)
	return
	// succ:  __fwritex_exit
l00408530:
	r4 = r6
	call __towrite (retsize: 0;)
	branch r4 == 0<32> l0040851A
	// succ:  l00408536 l0040851A
l00408536:
	r4 = 0<32>
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  __fwritex_exit
l0040853A:
	r7 = CONVERT(Mem0[r16 + 0x4B<32>:int8], int8, word32)
	r17 = r18
	branch r7 >= 0<32> l0040854A
	// succ:  l00408544 l0040854A
l00408544:
	r17 = 0<32>
	goto 0x0040856A<p32>
	goto l0040856A
	// succ:  l0040856A
l00408548:
	r17 = r7
	// succ:  l0040854A
l0040854A:
	branch r17 == 0<32> l0040856A
	// succ:  l0040854C l0040856A
l0040854C:
	r7 = r17 + 0xFFFFFFFF<32>
	r6 = CONVERT(Mem0[r19 + r7:byte], byte, word32)
	branch r6 != 0xA<32> l00408548
	// succ:  l00408558 l00408548
l00408558:
	r7 = Mem0[r16 + 0x24<32>:word32]
	r4 = r16
	r5 = r19
	r6 = r17
	call r7 (retsize: 0;)
	branch r4 >=u r17 l00408566
	// succ:  l00408564 l00408566
l00408564:
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  __fwritex_exit
l00408566:
	r19 = r19 + r17
	r18 = r18 - r17
	// succ:  l0040856A
l0040856A:
	r4 = Mem0[r16 + 0x14<32>:word32]
	r5 = r19
	r6 = r18
	goto 0x0040A130<p32>
	// succ:  l0040856E_thunk_memcpy
l0040856E_thunk_memcpy:
	call memcpy (retsize: 0;)
	return
	// succ:  __fwritex_exit
__fwritex_exit:


// fwrite_unlocked
// Return size: 0
define fwrite_unlocked
fwrite_unlocked_entry:
	sp = fp
	r25 = 0x40857C<32>
	// succ:  l0040857C
l0040857C:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	sp = sp - 32<i32>
	r16 = r6
	r17 = r7
	r19 = r4
	r18 = r5
	r7 = Mem0[r17 + 0x4C<32>:word32]
	r21 = 0<32>
	r20 = r18 *s r16
	branch r18 != 0<32> l00408590
	// succ:  l0040858C_1 l00408590
l0040858C_1:
	r16 = 0<32>
	// succ:  l00408590
l00408590:
	branch r7 < 0<32> l0040859A
	// succ:  l00408594 l0040859A
l00408594:
	r4 = r17
	call __lockfile (retsize: 0;)
	r21 = r4
	// succ:  l0040859A
l0040859A:
	r5 = r20
	r6 = r17
	r4 = r19
	call __fwritex (retsize: 0;)
	r19 = r4
	branch 0<32> == r21 l004085AA
	// succ:  l004085A6 l004085AA
l004085A6:
	r4 = r17
	call __unlockfile (retsize: 0;)
	// succ:  l004085AA
l004085AA:
	branch r20 == r19 l004085B2
	// succ:  l004085AE l004085B2
l004085AE:
	lo = r16 /u r19
	hi = r16 % r19
	// succ:  l004085B2
l004085B2:
	r4 = r16
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	r20 = Mem0[sp + 8<i32>:word32]
	r21 = Mem0[sp + 4<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  fwrite_unlocked_exit
fwrite_unlocked_exit:


// _IO_getc
// Return size: 0
define _IO_getc
_IO_getc_entry:
	sp = fp
	r25 = 0x4085C0<32>
	// succ:  l004085C0
l004085C0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 16<i32>
	r7 = Mem0[r4 + 0x4C<32>:word32]
	r16 = r4
	branch r7 >= 0<32> l004085DE
	// succ:  l004085CC l004085DE
l004085CC:
	r7 = Mem0[r16 + 4<32>:word32]
	r6 = Mem0[r16 + 8<32>:word32]
	branch r7 <u r6 l004085FA
	// succ:  l004085D4 l004085FA
l004085D4:
	r4 = r16
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	r17 = Mem0[sp + 4<i32>:word32]
	sp = sp + 16<i32>
	goto 0x0040D3E0<p32>
	// succ:  l004085DA_thunk___uflow
l004085DA_thunk___uflow:
	call __uflow (retsize: 0;)
	return
	// succ:  _IO_getc_exit
l004085DE:
	goto 0x0040D1D0<p32>
	// succ:  l004085DE_thunk___lockfile
l004085DE_thunk___lockfile:
	call __lockfile (retsize: 0;)
	return
	// succ:  _IO_getc_exit
l004085FA:
	r6 = r7 + 1<32>
	Mem0[sp + 4<32>:word32] = r6
	r17 = CONVERT(Mem0[r7:byte], byte, word32)
	r4 = r17
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	r17 = Mem0[sp + 4<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  _IO_getc_exit
_IO_getc_exit:


// __ofl_lock
// Return size: 0
define __ofl_lock
__ofl_lock_entry:
	sp = fp
	r25 = 0x408610<32>
	// succ:  l00408610
l00408610:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r4 = 0x0041D7DB<p32>
	goto 0x0040AD30<p32>
	// succ:  l00408616_thunk___lock
l00408616_thunk___lock:
	call __lock (retsize: 0;)
	return
	// succ:  __ofl_lock_exit
__ofl_lock_exit:


// __ofl_unlock
// Return size: 0
define __ofl_unlock
__ofl_unlock_entry:
	sp = fp
	r25 = 0x408620<32>
	// succ:  l00408620
l00408620:
	r4 = 0x0041D7E2<p32>
	goto 0x0040AD60<p32>
	// succ:  l00408624_thunk___unlock
l00408624_thunk___unlock:
	call __unlock (retsize: 0;)
	return
	// succ:  __ofl_unlock_exit
__ofl_unlock_exit:


// perror
// Return size: 0
define perror
perror_entry:
	sp = fp
	r25 = 0x408630<32>
	// succ:  l00408630
l00408630:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	sp = sp - 32<i32>
	r16 = Mem0[0x00412EF0<p32>:word32]
	r17 = r4
	goto 0x004049B0<p32>
	// succ:  l0040863A_thunk___errno_location
l0040863A_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  perror_exit
perror_exit:


// printf
// Return size: 0
define printf
printf_entry:
	sp = fp
	r25 = 0x4086C0<32>
	// succ:  l004086C0
l004086C0:
	sp = sp + 0xFFFFFFE0<32>
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 32<i32>
	Mem0[sp + 44<i32>:word32] = r7
	Mem0[sp + 48<i32>:word32] = r8
	r7 = sp + 0x40<32>
	Mem0[sp:word32] = r7
	Mem0[sp + 36<i32>:word32] = r5
	Mem0[sp + 40<i32>:word32] = r6
	Mem0[sp + 4<32>:word32] = r7
	r6 = sp
	Mem0[sp + 8<32>:word32] = r7
	r7 = 0x1C<32>
	r5 = r4
	Mem0[sp + 0xC<32>:byte] = SLICE(r7, byte, 0)
	r4 = Mem0[0x00412EF4<p32>:word32]
	r7 = 0x40<32>
	Mem0[sp + 52<i32>:word32] = r9
	Mem0[sp + 56<i32>:word32] = r10
	Mem0[sp + 0x3C<32>:word32] = r11
	Mem0[sp + 0xD<32>:byte] = SLICE(r7, byte, 0)
	goto 0x004099EE<p32>
	// succ:  l004086F2_thunk_vfprintf
l004086F2_thunk_vfprintf:
	call vfprintf (retsize: 0;)
	return
	// succ:  printf_exit
printf_exit:


// _IO_putc
// Return size: 0
define _IO_putc
_IO_putc_entry:
	sp = fp
	r25 = 0x408700<32>
	// succ:  l00408700
l00408700:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	sp = sp - 32<i32>
	r18 = r4
	r16 = r5
	r19 = r18 & 0xFF<32>
	r17 = r18 & 0xFF<32>
	r7 = Mem0[r16 + 0x4C<32>:word32]
	branch r7 >= 0<32> l00408722
	// succ:  l00408710 l00408722
l00408710:
	r7 = CONVERT(Mem0[r16 + 0x4B<32>:int8], int8, word32)
	branch r7 != r17 l00408746
	// succ:  l00408718 l00408746
l00408718:
	r4 = r16
	r5 = r18
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	sp = sp + 32<i32>
	goto 0x0040D250<p32>
	// succ:  l0040871E_thunk___overflow
l0040871E_thunk___overflow:
	call __overflow (retsize: 0;)
	return
	// succ:  _IO_putc_exit
l00408722:
	r4 = r16
	call __lockfile (retsize: 0;)
	branch r4 == 0<32> l00408710
	// succ:  l00408728 l00408710
l00408728:
	r7 = CONVERT(Mem0[r16 + 0x4B<32>:int8], int8, word32)
	branch r17 == r7 l0040875A
	// succ:  l00408730 l0040875A
l00408730:
	r6 = Mem0[r16 + 16<i32>:word32]
	r7 = Mem0[r16 + 20<i32>:word32]
	branch r7 >=u r6 l0040875A
	// succ:  l00408738 l0040875A
l00408738:
	r6 = r7 + 1<32>
	Mem0[sp + 0x14<32>:word32] = r6
	Mem0[r7:byte] = SLICE(r19, byte, 0)
	r4 = r16
	call __unlockfile (retsize: 0;)
	goto 0x00408756<p32>
	goto l00408756
	// succ:  l00408756
l00408746:
	r6 = Mem0[r16 + 16<i32>:word32]
	r7 = Mem0[r16 + 20<i32>:word32]
	branch r7 >=u r6 l00408718
	// succ:  l0040874E l00408718
l0040874E:
	r6 = r7 + 1<32>
	Mem0[sp + 0x14<32>:word32] = r6
	Mem0[r7:byte] = SLICE(r19, byte, 0)
	// succ:  l00408756
l00408756:
	r4 = r17
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  _IO_putc_exit
l0040875A:
	r4 = r16
	r5 = r18
	goto 0x0040D250<p32>
	// succ:  l0040875C_thunk___overflow
l0040875C_thunk___overflow:
	call __overflow (retsize: 0;)
	return
	// succ:  _IO_putc_exit
_IO_putc_exit:


// putchar
// Return size: 0
define putchar
putchar_entry:
	sp = fp
	r25 = 0x408770<32>
	// succ:  l00408770
l00408770:
	r5 = Mem0[0x00412EF4<p32>:word32]
	goto 0x00408380<p32>
	// succ:  l00408776_thunk_fputc
l00408776_thunk_fputc:
	call fputc (retsize: 0;)
	return
	// succ:  putchar_exit
putchar_exit:


// puts
// Return size: 0
define puts
puts_entry:
	sp = fp
	r25 = 0x408780<32>
	// succ:  l00408780
l00408780:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 16<i32>
	r16 = Mem0[0x00412EF4<p32>:word32]
	r17 = r4
	r7 = Mem0[r16 + 0x4C<32>:word32]
	r18 = 0<32>
	branch r7 < 0<32> l0040879A
	// succ:  l00408794 l0040879A
l00408794:
	r4 = r16
	call __lockfile (retsize: 0;)
	r18 = r4
	// succ:  l0040879A
l0040879A:
	r4 = r17
	r5 = r16
	goto 0x004083F0<p32>
	// succ:  l0040879C_thunk_fputs_unlocked
l0040879C_thunk_fputs_unlocked:
	call fputs_unlocked (retsize: 0;)
	return
	// succ:  puts_exit
puts_exit:


// setbuf
// Return size: 0
define setbuf
setbuf_entry:
	sp = fp
	r25 = 0x4087E0<32>
	// succ:  l004087E0
l004087E0:
	r6 = 2<32>
	r7 = 0x400<32>
	branch r5 == 0<32> l004087EA
	// succ:  l004087E6_1 l004087EA
l004087E6_1:
	r6 = 0<32>
	// succ:  l004087EA
l004087EA:
	goto 0x004087F0<p32>
	// succ:  l004087EA_thunk_setvbuf
l004087EA_thunk_setvbuf:
	call setvbuf (retsize: 0;)
	return
	// succ:  setbuf_exit
setbuf_exit:


// setvbuf
// Return size: 0
define setvbuf
setvbuf_entry:
	sp = fp
	r25 = 0x4087F0<32>
	// succ:  l004087F0
l004087F0:
	r7 = 0xFFFFFFFF<32>
	Mem0[r4 + 0x4B<32>:byte] = SLICE(r7, byte, 0)
	branch r6 != 2<32> l00408808
	// succ:  l004087FA l00408808
l004087FA:
	Mem0[sp + 0x30<32>:word32] = 0<32>
	// succ:  l004087FC
l004087FC:
	r7 = Mem0[r4:word32]
	r7 = r7 | 0x40<32>
	Mem0[sp:word32] = r7
	r4 = 0<32>
	return
	// succ:  setvbuf_exit
l00408808:
	branch r6 != 1<32> l004087FC
	// succ:  l0040880C l004087FC
l0040880C:
	r7 = 0xA<32>
	Mem0[r4 + 0x4B<32>:byte] = SLICE(r7, byte, 0)
	goto 0x004087FC<p32>
	goto l004087FC
	// succ:  l004087FC
setvbuf_exit:


// snprintf
// Return size: 0
define snprintf
snprintf_entry:
	sp = fp
	r25 = 0x408820<32>
	// succ:  l00408820
l00408820:
	sp = sp + 0xFFFFFFE0<32>
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 32<i32>
	Mem0[sp + 44<i32>:word32] = r7
	Mem0[sp + 48<i32>:word32] = r8
	r7 = sp + 0x40<32>
	Mem0[sp:word32] = r7
	Mem0[sp + 52<i32>:word32] = r9
	Mem0[sp + 56<i32>:word32] = r10
	Mem0[sp + 4<32>:word32] = r7
	Mem0[sp + 8<32>:word32] = r7
	r7 = 0x14<32>
	Mem0[sp + 0xC<32>:byte] = SLICE(r7, byte, 0)
	r7 = 0x40<32>
	Mem0[sp + 0xD<32>:byte] = SLICE(r7, byte, 0)
	r7 = sp
	Mem0[sp + 0x3C<32>:word32] = r11
	goto 0x00409B10<p32>
	// succ:  l00408846_thunk_vsnprintf
l00408846_thunk_vsnprintf:
	call vsnprintf (retsize: 0;)
	return
	// succ:  snprintf_exit
snprintf_exit:


// sprintf
// Return size: 0
define sprintf
sprintf_entry:
	sp = fp
	r25 = 0x408860<32>
	// succ:  l00408860
l00408860:
	sp = sp + 0xFFFFFFE0<32>
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 32<i32>
	Mem0[sp + 40<i32>:word32] = r6
	Mem0[sp + 44<i32>:word32] = r7
	r7 = sp + 0x40<32>
	Mem0[sp:word32] = r7
	r6 = sp
	Mem0[sp + 4<32>:word32] = r7
	Mem0[sp + 48<i32>:word32] = r8
	Mem0[sp + 52<i32>:word32] = r9
	Mem0[sp + 8<32>:word32] = r7
	r7 = 0x18<32>
	Mem0[sp + 0xC<32>:byte] = SLICE(r7, byte, 0)
	r7 = 0x40<32>
	Mem0[sp + 56<i32>:word32] = r10
	Mem0[sp + 60<i32>:word32] = r11
	Mem0[sp + 0xD<32>:byte] = SLICE(r7, byte, 0)
	goto 0x00409B70<p32>
	// succ:  l00408888_thunk_vsprintf
l00408888_thunk_vsprintf:
	call vsprintf (retsize: 0;)
	return
	// succ:  sprintf_exit
sprintf_exit:


// __isoc99_sscanf
// Return size: 0
define __isoc99_sscanf
__isoc99_sscanf_entry:
	sp = fp
	r25 = 0x4088A0<32>
	// succ:  l004088A0
l004088A0:
	sp = sp + 0xFFFFFFE0<32>
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 32<i32>
	Mem0[sp + 40<i32>:word32] = r6
	Mem0[sp + 44<i32>:word32] = r7
	r7 = sp + 0x40<32>
	Mem0[sp:word32] = r7
	r6 = sp
	Mem0[sp + 4<32>:word32] = r7
	Mem0[sp + 48<i32>:word32] = r8
	Mem0[sp + 52<i32>:word32] = r9
	Mem0[sp + 8<32>:word32] = r7
	r7 = 0x18<32>
	Mem0[sp + 0xC<32>:byte] = SLICE(r7, byte, 0)
	r7 = 0x40<32>
	Mem0[sp + 56<i32>:word32] = r10
	Mem0[sp + 60<i32>:word32] = r11
	Mem0[sp + 0xD<32>:byte] = SLICE(r7, byte, 0)
	goto 0x00409B94<p32>
	// succ:  l004088C8_thunk___isoc99_vsscanf
l004088C8_thunk___isoc99_vsscanf:
	call __isoc99_vsscanf (retsize: 0;)
	return
	// succ:  __isoc99_sscanf_exit
__isoc99_sscanf_exit:


// fmt_u
// Return size: 0
define fmt_u
fmt_u_entry:
	sp = fp
	r25 = 0x4088E0<32>
	// succ:  l004088E0
l004088E0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 16<i32>
	r16 = r4
	r18 = r5
	r17 = r6
	goto 0x00408906<p32>
	goto l00408906
	// succ:  l00408906
l004088E8:
	r7 = 0<32>
	r6 = 0xA<32>
	r4 = r16
	r5 = r18
	goto 0x0040ED50<p32>
	// succ:  l004088EE_thunk___umoddi3
l004088EE_thunk___umoddi3:
	call __umoddi3 (retsize: 0;)
	return
	// succ:  fmt_u_exit
l00408906:
	branch r18 != 0<32> l004088E8
	// succ:  l00408908 l004088E8
l00408908:
	goto 0x0040891E<p32>
	goto l0040891E
	// succ:  l0040891E
l0040890A:
	r6 = 0xA<32>
	r17 = r17 + 0xFFFFFFFF<32>
	r7 = r16 % r6
	r7 = r7 + 0x30<32>
	Mem0[r17:byte] = SLICE(r7, byte, 0)
	r7 = r16
	lo = r16 /u r7
	hi = r16 % r7
	// succ:  l0040891E
l0040891E:
	branch r16 != 0<32> l0040890A
	// succ:  l00408920 l0040890A
l00408920:
	r4 = r17
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	r17 = Mem0[sp + 4<i32>:word32]
	r18 = Mem0[sp + 0<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  fmt_u_exit
fmt_u_exit:


// getint
// Return size: 0
define getint
getint_entry:
	sp = fp
	r25 = 0x408924<32>
	// succ:  l00408924
l00408924:
	r7 = 0<32>
	goto 0x0040892E<p32>
	goto l0040892E
	// succ:  l0040892E
l00408928:
	r7 = 0xFFFFFFFF<32>
	// succ:  l0040892A
l0040892A:
	r8 = r8 + 1<32>
	Mem0[r4:word32] = r8
	// succ:  l0040892E
l0040892E:
	r8 = Mem0[r4:word32]
	r6 = CONVERT(Mem0[r8:byte], byte, word32)
	r6 = r6 + 0xFFFFFFD0<32>
	branch r6 >=u 0xA<32> l0040895E
	// succ:  l0040893C l0040895E
l0040893C:
	r5 = 0xCCCCCCC<32>
	branch r5 <u r7 l00408928
	// succ:  l00408946 l00408928
l00408946:
	r5 = 0xFFFFFFF6<32>
	r5 = r5 *s r7
	r5 = r5 + 0x7FFFFFFF<32>
	branch r5 < r6 l00408928
	// succ:  l00408956 l00408928
l00408956:
	r5 = 0xA<32>
	r7 = r7 *s r5
	r7 = r6 + r7
	goto 0x0040892A<p32>
	goto l0040892A
	// succ:  l0040892A
l0040895E:
	r4 = r7
	return
	// succ:  getint_exit
getint_exit:


// out
// Return size: 0
define out
out_entry:
	sp = fp
	r25 = 0x408962<32>
	// succ:  l00408962
l00408962:
	r7 = r4
	r4 = r5
	r5 = r6
	r6 = Mem0[r7:word32]
	branch !__bit(r6, 5<32>) l00408974
	// succ:  l0040896E l00408974
l0040896E:
	r6 = r7
	goto 0x00408510<p32>
	// succ:  l00408970_thunk___fwritex
l00408970_thunk___fwritex:
	call __fwritex (retsize: 0;)
	return
	// succ:  out_exit
l00408974:
	return
	// succ:  out_exit
out_exit:


// pop_arg
// Return size: 0
define pop_arg
pop_arg_entry:
	sp = fp
	r25 = 0x408976<32>
	// succ:  l00408976
l00408976:
	branch r5 >=u 0x1D<32> l00408A76
	// succ:  l0040897A l00408A76
l0040897A:
	r5 = r5 + 0xFFFFFFF7<32>
	branch r5 >=u 0x12<32> l00408A76
	// succ:  l00408982 l00408A76
l00408982:
	r7 = 0x0040DC3F<p32>
	r5 = Mem0[r7 + r5 * 4<32>:word32]
	r7 = CONVERT(Mem0[r6 + 0xC<32>:int8], int8, word32)
	call r5 (retsize: 0;)
	return
	// succ:  pop_arg_exit
l00408A76:
	return
	// succ:  pop_arg_exit
pop_arg_exit:


// pad
// Return size: 0
define pad
pad_entry:
	sp = fp
	r25 = 0x408B22<32>
	// succ:  l00408B22
l00408B22:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 272<i32>
	r17 = r4
	r4 = 0x120000<32>
	r8 = r8 & r4
	branch 0<32> != r8 l00408B6E
	// succ:  l00408B34 l00408B6E
l00408B34:
	branch r7 >= r6 l00408B6E
	// succ:  l00408B38 l00408B6E
l00408B38:
	r16 = r6 - r7
	r7 = 0x100<32>
	r6 = CONVERT(r16 <u 0x101<32>, bool, word32)
	r4 = sp
	branch r6 == 0<32> l00408B48
	// succ:  l00408B44_1 l00408B48
l00408B44_1:
	r7 = r16
	// succ:  l00408B48
l00408B48:
	r18 = r16
	r6 = r7
	goto 0x0040A690<p32>
	// succ:  l00408B4C_thunk_memset
l00408B4C_thunk_memset:
	call memset (retsize: 0;)
	return
	// succ:  pad_exit
l00408B6E:
	ra = Mem0[sp + 268<i32>:word32]
	r16 = Mem0[sp + 264<i32>:word32]
	r17 = Mem0[sp + 260<i32>:word32]
	r18 = Mem0[sp + 256<i32>:word32]
	sp = sp + 272<i32>
	return
	// succ:  pad_exit
pad_exit:


// printf_core
// Return size: 0
define printf_core
printf_core_entry:
	sp = fp
	r25 = 0x408B72<32>
	// succ:  l00408B72
l00408B72:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 736<i32>
	r22 = 0<32>
	r16 = r4
	Mem0[sp + 4<32>:word32] = 0<32>
	Mem0[sp + 0xC<32>:word32] = r6
	Mem0[sp + 0x1C<32>:word32] = 0<32>
	Mem0[sp + 0x20<32>:word32] = r8
	Mem0[sp + 0x28<32>:word32] = r7
	Mem0[sp + 0x4C<32>:word32] = r5
	// succ:  l00408B86
l00408B86:
	r17 = Mem0[sp + 4<32>:word32]
	r7 = 0x7FFFFFFF<32>
	r7 = r7 - r6
	branch r7 < r22 l00408D8E
	// succ:  l00408B94 l00408D8E
l00408B94:
	r5 = Mem0[sp + 0x4C<32>:word32]
	r7 = r6 + r22
	Mem0[sp + 4<32>:word32] = r7
	r7 = CONVERT(Mem0[r21:byte], byte, word32)
	branch r7 != 0<32> l00408BCC
	// succ:  l00408BA2 l00408BCC
l00408BA2:
	branch 0<32> != r16 l00408E04
	// succ:  l00408BA6 l00408E04
l00408BA6:
	r17 = Mem0[sp + 0x1C<32>:word32]
	r16 = 1<32>
	branch 0<32> == r7 l00408E02
	// succ:  l00408BAE l00408E02
l00408BAE:
	r17 = Mem0[sp + 0x20<32>:word32]
	r5 = Mem0[r7 + r16 * 4<32>:word32]
	branch 0<32> != r5 l004099B4
	// succ:  l00408BB6 l004099B4
l00408BB6:
	r17 = Mem0[sp + 0x20<32>:word32]
	r7 = Mem0[r7 + r16 * 4<32>:word32]
	branch 0<32> != r7 l00408D3A
	// succ:  l00408BBE l00408D3A
l00408BBE:
	r16 = r16 + 1<32>
	branch r16 != 0xA<32> l00408BB6
	// succ:  l00408BC4 l00408BB6
l00408BC4:
	goto 0x004099CA<p32>
	goto l004099CA
	// succ:  l004099CA
l00408BC8:
	r22 = r22 + 1<32>
	Mem0[sp + 0x4C<32>:word32] = r22
	// succ:  l00408BCC
l00408BCC:
	r5 = Mem0[sp + 0x4C<32>:word32]
	r7 = CONVERT(Mem0[r22:byte], byte, word32)
	branch r7 == 0<32> l00408BEE
	// succ:  l00408BD4 l00408BEE
l00408BD4:
	branch r7 != 0x25<32> l00408BC8
	// succ:  l00408BD8 l00408BC8
l00408BD8:
	goto 0x00408BE0<p32>
	goto l00408BE0
	// succ:  l00408BE0
l00408BDA:
	r7 = r7 + 2<32>
	r22 = r22 + 1<32>
	Mem0[sp + 0x4C<32>:word32] = r7
	// succ:  l00408BE0
l00408BE0:
	r17 = Mem0[sp + 0x4C<32>:word32]
	r6 = CONVERT(Mem0[r7:byte], byte, word32)
	branch r6 != 0x25<32> l00408BEE
	// succ:  l00408BE8 l00408BEE
l00408BE8:
	r6 = CONVERT(Mem0[r7 + 1<32>:byte], byte, word32)
	branch r6 == 0x25<32> l00408BDA
	// succ:  l00408BEE l00408BDA
l00408BEE:
	r17 = Mem0[sp + 4<32>:word32]
	r20 = 0x7FFFFFFF<32>
	r22 = r22 - r21
	r7 = r20 - r7
	Mem0[sp + 8<32>:word32] = r7
	branch r7 < r22 l00408D8E
	// succ:  l00408C04 l00408D8E
l00408C04:
	branch r16 == 0<32> l00408C0C
	// succ:  l00408C06 l00408C0C
l00408C06:
	r5 = r21
	r6 = r22
	r4 = r16
	call out (retsize: 0;)
	// succ:  l00408C0C
l00408C0C:
	branch 0<32> != r22 l00408B86
	// succ:  l00408C10 l00408B86
l00408C10:
	r17 = Mem0[sp + 0x4C<32>:word32]
	r19 = CONVERT(Mem0[r7 + 1<32>:byte], byte, word32)
	r19 = r19 + 0xFFFFFFD0<32>
	branch r19 >=u 0xA<32> l00408D20
	// succ:  l00408C1C l00408D20
l00408C1C:
	r6 = CONVERT(Mem0[r7 + 2<32>:byte], byte, word32)
	branch r6 != 0x24<32> l00408D20
	// succ:  l00408C22 l00408D20
l00408C22:
	r7 = r7 + 3<32>
	Mem0[sp + 0x4C<32>:word32] = r7
	r7 = 1<32>
	Mem0[sp + 0x1C<32>:word32] = r7
	// succ:  l00408C2A
l00408C2A:
	r17 = 0<32>
	// succ:  l00408C2C
l00408C2C:
	r17 = Mem0[sp + 0x4C<32>:word32]
	r4 = CONVERT(Mem0[r7:byte], byte, word32)
	r5 = r4 + 0xFFFFFFE0<32>
	branch r5 >=u 0x20<32> l00408C46
	// succ:  l00408C38 l00408C46
l00408C38:
	r6 = 0x12889<32>
	r6 = r6 >>u r5
	branch !__bit(r6, 0<32>) l00408D28
	// succ:  l00408C46 l00408D28
l00408C46:
	branch r4 != 0x2A<32> l00408D82
	// succ:  l00408C4A l00408D82
l00408C4A:
	r6 = CONVERT(Mem0[r7 + 1<32>:byte], byte, word32)
	r5 = r6 + 0xFFFFFFD0<32>
	branch r5 >=u 0xA<32> l00408D36
	// succ:  l00408C54 l00408D36
l00408C54:
	r5 = CONVERT(Mem0[r7 + 2<32>:byte], byte, word32)
	branch r5 != 0x24<32> l00408D36
	// succ:  l00408C5A l00408D36
l00408C5A:
	r17 = Mem0[sp + 0x20<32>:word32]
	r6 = r6 + 0x3FFFFFD0<32>
	r5 = 0xA<32>
	Mem0[r4 + r6 * 4<32>:word32] = r5
	r6 = CONVERT(Mem0[r7 + 1<32>:byte], byte, word32)
	r7 = r7 + 3<32>
	r17 = Mem0[sp + 0x28<32>:word32]
	r6 = r6 + 0x1FFFFFD0<32>
	Mem0[sp + 0x4C<32>:word32] = r7
	r6 = r5 + (r6 << 3<8>)
	r7 = 1<32>
	Mem0[sp + 0x1C<32>:word32] = r7
	r6 = Mem0[r6:word32]
	Mem0[sp:word32] = r6
	// succ:  l00408C82
l00408C82:
	r17 = Mem0[sp:word32]
	branch r7 >= 0<32> l00408C96
	// succ:  l00408C88 l00408C96
l00408C88:
	r7 = 0x2000<32>
	r17 = r17 | r7
	r17 = Mem0[sp:word32]
	r7 = -r7
	Mem0[sp:word32] = r7
	// succ:  l00408C96
l00408C96:
	r17 = Mem0[sp + 0x4C<32>:word32]
	r30 = 0<32>
	r18 = 0xFFFFFFFF<32>
	r6 = CONVERT(Mem0[r7:byte], byte, word32)
	branch r6 != 0x2E<32> l00408CE2
	// succ:  l00408CA2 l00408CE2
l00408CA2:
	r6 = CONVERT(Mem0[r7 + 1<32>:byte], byte, word32)
	branch r6 != 0x2A<32> l00408DD0
	// succ:  l00408CA8 l00408DD0
l00408CA8:
	r6 = CONVERT(Mem0[r7 + 2<32>:byte], byte, word32)
	r5 = r6 + 0xFFFFFFD0<32>
	branch r5 >=u 0xA<32> l00408D96
	// succ:  l00408CB2 l00408D96
l00408CB2:
	r5 = CONVERT(Mem0[r7 + 3<32>:byte], byte, word32)
	branch r5 != 0x24<32> l00408D96
	// succ:  l00408CB8 l00408D96
l00408CB8:
	r17 = Mem0[sp + 0x20<32>:word32]
	r6 = r6 + 0x3FFFFFD0<32>
	r5 = 0xA<32>
	Mem0[r4 + r6 * 4<32>:word32] = r5
	r6 = CONVERT(Mem0[r7 + 2<32>:byte], byte, word32)
	r7 = r7 + 4<32>
	r17 = Mem0[sp + 0x28<32>:word32]
	r6 = r6 + 0x1FFFFFD0<32>
	r6 = r5 + (r6 << 3<8>)
	r18 = Mem0[r6:word32]
	// succ:  l00408CD8
l00408CD8:
	r30 = ~r18
	Mem0[sp + 0x4C<32>:word32] = r7
	r30 = r30 >>u 0x1F<32>
	// succ:  l00408CE2
l00408CE2:
	r23 = 0<32>
	// succ:  l00408CE4
l00408CE4:
	r17 = Mem0[sp + 0x4C<32>:word32]
	r6 = CONVERT(Mem0[r7:byte], byte, word32)
	r6 = r6 + 0xFFFFFFBF<32>
	branch r6 >=u 0x3A<32> l00408D3A
	// succ:  l00408CF0 l00408D3A
l00408CF0:
	r6 = r7 + 1<32>
	r5 = 0x0040DEA4<p32>
	Mem0[sp + 0x4C<32>:word32] = r6
	r6 = CONVERT(Mem0[r7:byte], byte, word32)
	r7 = 0x3A<32>
	r7 = r7 *s r23
	r7 = r7 + r5
	r7 = r7 + r6
	r5 = CONVERT(Mem0[r7 - 0x41<32>:byte], byte, word32)
	r7 = r5 + 0xFFFFFFFF<32>
	branch r7 <u 8<32> l00408DE2
	// succ:  l00408D10 l00408DE2
l00408D10:
	branch r5 == 0<32> l00408D3A
	// succ:  l00408D12 l00408D3A
l00408D12:
	branch r5 != 0x1B<32> l00408DE6
	// succ:  l00408D16 l00408DE6
l00408D16:
	branch r19 >= 0<32> l00408D3A
	// succ:  l00408D1A l00408D3A
l00408D1A:
	branch 0<32> != r16 l00408E12
	// succ:  l00408D1E l00408E12
l00408D1E:
	goto 0x00408B86<p32>
	goto l00408B86
	// succ:  l00408B86
l00408D20:
	r7 = r7 + 1<32>
	r19 = 0xFFFFFFFF<32>
	Mem0[sp + 0x4C<32>:word32] = r7
	goto 0x00408C2A<p32>
	goto l00408C2A
	// succ:  l00408C2A
l00408D28:
	r6 = 1<32>
	r5 = r6 << r5
	r7 = r7 + r6
	r17 = r17 | r5
	Mem0[sp + 0x4C<32>:word32] = r7
	goto 0x00408C2C<p32>
	goto l00408C2C
	// succ:  l00408C2C
l00408D36:
	r17 = Mem0[sp + 0x1C<32>:word32]
	branch r7 == 0<32> l00408D48
	// succ:  l00408D3A l00408D48
l00408D3A:
	goto 0x004049B0<p32>
	// succ:  l00408D3A_thunk___errno_location
l00408D3A_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  printf_core_exit
l00408D48:
	Mem0[sp:word32] = 0<32>
	branch r16 == 0<32> l00408D6E
	// succ:  l00408D4C l00408D6E
l00408D4C:
	r17 = Mem0[sp + 0xC<32>:word32]
	r5 = CONVERT(Mem0[r7 + 0xC<32>:int8], int8, word32)
	branch 0<32> >= r5 l00408D76
	// succ:  l00408D56 l00408D76
l00408D56:
	r6 = r5 + 0xFFFFFFFC<32>
	v19 = SLICE(r6, byte, 0)
	r6 = CONVERT(v19, byte, int32)
	Mem0[r7 + 0xC<32>:byte] = SLICE(r6, byte, 0)
	branch r6 < 0<32> l00408D76
	// succ:  l00408D66 l00408D76
l00408D66:
	r7 = Mem0[r7 + 4<32>:word32]
	r7 = r7 - r5
	// succ:  l00408D6A
l00408D6A:
	r7 = Mem0[r7:word32]
	Mem0[sp:word32] = r7
	// succ:  l00408D6E
l00408D6E:
	r17 = Mem0[sp + 0x4C<32>:word32]
	r7 = r7 + 1<32>
	Mem0[sp + 0x4C<32>:word32] = r7
	goto 0x00408C82<p32>
	goto l00408C82
	// succ:  l00408C82
l00408D76:
	r17 = Mem0[sp + 0xC<32>:word32]
	r17 = Mem0[sp + 0xC<32>:word32]
	r7 = Mem0[r7:word32]
	r6 = r7 + 4<32>
	Mem0[sp + 0x40<32>:word32] = r6
	goto 0x00408D6A<p32>
	goto l00408D6A
	// succ:  l00408D6A
l00408D82:
	r4 = sp + 0x4C<32>
	goto 0x00408924<p32>
	// succ:  l00408D84_thunk_getint
l00408D84_thunk_getint:
	call getint (retsize: 0;)
	return
	// succ:  printf_core_exit
l00408D8E:
	goto 0x004049B0<p32>
	// succ:  l00408D8E_thunk___errno_location
l00408D8E_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  printf_core_exit
l00408D96:
	r17 = Mem0[sp + 0x1C<32>:word32]
	branch r7 != 0<32> l00408D3A
	// succ:  l00408D9A l00408D3A
l00408D9A:
	r18 = 0<32>
	branch r16 == 0<32> l00408DBE
	// succ:  l00408D9E l00408DBE
l00408D9E:
	r17 = Mem0[sp + 0xC<32>:word32]
	r5 = CONVERT(Mem0[r7 + 0xC<32>:int8], int8, word32)
	branch 0<32> >= r5 l00408DC4
	// succ:  l00408DA8 l00408DC4
l00408DA8:
	r6 = r5 + 0xFFFFFFFC<32>
	v18 = SLICE(r6, byte, 0)
	r6 = CONVERT(v18, byte, int32)
	Mem0[r7 + 0xC<32>:byte] = SLICE(r6, byte, 0)
	branch r6 < 0<32> l00408DC4
	// succ:  l00408DB8 l00408DC4
l00408DB8:
	r7 = Mem0[r7 + 4<32>:word32]
	r7 = r7 - r5
	// succ:  l00408DBC
l00408DBC:
	r18 = Mem0[r7:word32]
	// succ:  l00408DBE
l00408DBE:
	r17 = Mem0[sp + 0x4C<32>:word32]
	r7 = r7 + 2<32>
	goto 0x00408CD8<p32>
	goto l00408CD8
	// succ:  l00408CD8
l00408DC4:
	r17 = Mem0[sp + 0xC<32>:word32]
	r17 = Mem0[sp + 0xC<32>:word32]
	r7 = Mem0[r7:word32]
	r6 = r7 + 4<32>
	Mem0[sp + 0x40<32>:word32] = r6
	goto 0x00408DBC<p32>
	goto l00408DBC
	// succ:  l00408DBC
l00408DD0:
	r7 = r7 + 1<32>
	r4 = sp + 0x4C<32>
	Mem0[sp + 0x4C<32>:word32] = r7
	goto 0x00408924<p32>
	// succ:  l00408DD6_thunk_getint
l00408DD6_thunk_getint:
	call getint (retsize: 0;)
	return
	// succ:  printf_core_exit
l00408DE2:
	r23 = r5
	goto 0x00408CE4<p32>
	goto l00408CE4
	// succ:  l00408CE4
l00408DE6:
	branch r19 < 0<32> l00408E00
	// succ:  l00408DEA l00408E00
l00408DEA:
	r17 = Mem0[sp + 0x20<32>:word32]
	Mem0[r7 + r19 * 4<32>:word32] = r5
	r17 = Mem0[sp + 0x28<32>:word32]
	r19 = r7 + (r19 << 3<8>)
	r6 = Mem0[r19 + 0<i32>:word32]
	r7 = Mem0[r19 + 4<i32>:word32]
	Mem0[sp + 88<i32>:word32] = r6
	Mem0[sp + 92<i32>:word32] = r7
	goto 0x00408D1A<p32>
	goto l00408D1A
	// succ:  l00408D1A
l00408E00:
	branch r16 != 0<32> l00408E0A
	// succ:  l00408E02 l00408E0A
l00408E02:
	Mem0[sp + 4<32>:word32] = 0<32>
	// succ:  l00408E04
l00408E04:
	r17 = Mem0[sp + 4<32>:word32]
	r30 = Mem0[sp + 732<i32>:word32]
	ra = Mem0[sp + 728<i32>:word32]
	r16 = Mem0[sp + 724<i32>:word32]
	r17 = Mem0[sp + 720<i32>:word32]
	r18 = Mem0[sp + 716<i32>:word32]
	r19 = Mem0[sp + 712<i32>:word32]
	r20 = Mem0[sp + 708<i32>:word32]
	r21 = Mem0[sp + 704<i32>:word32]
	r22 = Mem0[sp + 700<i32>:word32]
	r23 = Mem0[sp + 696<i32>:word32]
	sp = sp + 736<i32>
	return
	// succ:  printf_core_exit
l00408E0A:
	r17 = Mem0[sp + 0xC<32>:word32]
	r4 = sp + 0x58<32>
	goto 0x00408976<p32>
	// succ:  l00408E0E_thunk_pop_arg
l00408E0E_thunk_pop_arg:
	call pop_arg (retsize: 0;)
	return
	// succ:  printf_core_exit
l00408E12:
	r17 = Mem0[sp + 0x4C<32>:word32]
	r19 = CONVERT(Mem0[r7 - 1<32>:byte], byte, word32)
	branch 0<32> == r23 l00408E26
	// succ:  l00408E1C l00408E26
l00408E1C:
	r7 = r19 & 0xF<32>
	branch r7 != 3<32> l00408E26
	// succ:  l00408E22 l00408E26
l00408E22:
	r19 = __ins(r19, 0<32>, 5<32>, 1<32>)
	// succ:  l00408E26
l00408E26:
	branch __bit(r17, 0xD<32>) l00408E2E
	// succ:  l00408E2A l00408E2E
l00408E2A:
	r17 = __ins(r17, 0<32>, 0<32>, 1<32>)
	// succ:  l00408E2E
l00408E2E:
	r7 = r19 + 0xFFFFFFBF<32>
	branch r7 <u 0x38<32> l00408E3A
	// succ:  l00408E36 l00408E3A
l00408E36:
	goto 0x004099D2<p32>
	goto l004099D2
	// succ:  l004099D2
l00408E3A:
	r6 = 0x0040DEBF<p32>
	r7 = Mem0[r6 + r7 * 4<32>:word32]
	call r7 (retsize: 0;)
	return
	// succ:  printf_core_exit
l00408FC8:
	r17 = Mem0[sp:word32]
	r20 = r30 + r22
	r4 = Mem0[sp:word32]
	r7 = CONVERT(r7 < r20, bool, word32)
	branch r7 == 0<32> l00408FD8
	// succ:  l00408FD4_1 l00408FD8
l00408FD4_1:
	r18 = r20
	// succ:  l00408FD8
l00408FD8:
	r17 = Mem0[sp + 8<32>:word32]
	branch r7 < r18 l00408D8E
	// succ:  l00408FDE l00408D8E
l00408FDE:
	r7 = r20
	r8 = r17
	r6 = r18
	r5 = 0x20<32>
	r4 = r16
	call pad (retsize: 0;)
	r5 = r23
	r6 = r22
	r4 = r16
	call out (retsize: 0;)
	r8 = 0x100000<32>
	r6 = r18
	r7 = r20
	r8 = r17 ^ r8
	r5 = 0x30<32>
	r22 = r18
	r4 = r16
	call pad (retsize: 0;)
	r6 = r30
	r7 = r19
	r8 = 0<32>
	r5 = 0x30<32>
	r4 = r16
	call pad (retsize: 0;)
	r5 = r21
	r6 = r19
	r4 = r16
	call out (retsize: 0;)
	r8 = 0x2000<32>
	r8 = r17 ^ r8
	r5 = 0x20<32>
	r6 = r18
	r7 = r20
	r4 = r16
	call pad (retsize: 0;)
	goto 0x00408B86<p32>
	goto l00408B86
	// succ:  l00408B86
l004099B4:
	r17 = Mem0[sp + 0x28<32>:word32]
	r17 = Mem0[sp + 0xC<32>:word32]
	r4 = r7 + (r16 << 3<8>)
	r16 = r16 + 1<32>
	goto 0x00408976<p32>
	// succ:  l004099BE_thunk_pop_arg
l004099BE_thunk_pop_arg:
	call pop_arg (retsize: 0;)
	return
	// succ:  printf_core_exit
l004099CA:
	r7 = 1<32>
	Mem0[sp + 4<32>:word32] = r7
	goto 0x00408E04<p32>
	goto l00408E04
	// succ:  l00408E04
l004099D2:
	r19 = sp + 0xB8<32>
	r23 = 0x0040DCE6<p32>
	r19 = r19 - r21
	r30 = CONVERT(r18 < r19, bool, word32)
	branch r30 == 0<32> l004099E4
	// succ:  l004099E0_1 l004099E4
l004099E0_1:
	r18 = r19
	// succ:  l004099E4
l004099E4:
	r30 = r18
	goto 0x00408FC8<p32>
	goto l00408FC8
	// succ:  l00408FC8
printf_core_exit:


// vfprintf
// Return size: 0
define vfprintf
vfprintf_entry:
	sp = fp
	r25 = 0x4099EE<32>
	// succ:  l004099EE
l004099EE:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	sp = sp - 272<i32>
	r16 = r4
	r21 = r5
	r5 = r6
	r4 = sp + 0x18<32>
	r6 = 0x10<32>
	r17 = 0xFFFFFFFF<32>
	goto 0x0040A130<p32>
	// succ:  l004099FC_thunk_memcpy
l004099FC_thunk_memcpy:
	call memcpy (retsize: 0;)
	return
	// succ:  vfprintf_exit
vfprintf_exit:


// sn_write
// Return size: 0
define sn_write
sn_write_entry:
	sp = fp
	r25 = 0x409AB0<32>
	// succ:  l00409AB0
l00409AB0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	sp = sp - 32<i32>
	r17 = r4
	r20 = r5
	r19 = r6
	r16 = Mem0[r17 + 0x54<32>:word32]
	r18 = Mem0[r17 + 0x14<32>:word32]
	r5 = Mem0[r17 + 0x1C<32>:word32]
	r6 = Mem0[r16 + 4<32>:word32]
	r7 = r18 - r5
	r18 = CONVERT(r6 <u r7, bool, word32)
	branch r18 != 0<32> l00409ACA
	// succ:  l00409AC6_1 l00409ACA
l00409AC6_1:
	r6 = r7
	// succ:  l00409ACA
l00409ACA:
	r18 = r6
	branch r6 == 0<32> l00409AE0
	// succ:  l00409ACE l00409AE0
l00409ACE:
	r4 = Mem0[r16:word32]
	goto 0x0040A130<p32>
	// succ:  l00409AD0_thunk_memcpy
l00409AD0_thunk_memcpy:
	call memcpy (retsize: 0;)
	return
	// succ:  sn_write_exit
l00409AE0:
	r7 = Mem0[r16 + 4<32>:word32]
	r18 = CONVERT(r19 <u r7, bool, word32)
	branch r18 == 0<32> l00409AEA
	// succ:  l00409AE6_1 l00409AEA
l00409AE6_1:
	r7 = r19
	// succ:  l00409AEA
l00409AEA:
	r18 = r7
	branch r7 == 0<32> l00409B02
	// succ:  l00409AEE l00409B02
l00409AEE:
	r4 = Mem0[r16:word32]
	r5 = r20
	r6 = r18
	goto 0x0040A130<p32>
	// succ:  l00409AF2_thunk_memcpy
l00409AF2_thunk_memcpy:
	call memcpy (retsize: 0;)
	return
	// succ:  sn_write_exit
l00409B02:
	r7 = Mem0[r16:word32]
	r4 = r19
	Mem0[r7:byte] = SLICE(0<32>, byte, 0)
	r7 = Mem0[r17 + 0x2C<32>:word32]
	Mem0[sp + 0x54<32>:word32] = r7
	Mem0[sp + 0x5C<32>:word32] = r7
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	r20 = Mem0[sp + 8<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  sn_write_exit
sn_write_exit:


// vsnprintf
// Return size: 0
define vsnprintf
vsnprintf_entry:
	sp = fp
	r25 = 0x409B10<32>
	// succ:  l00409B10
l00409B10:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	sp = sp - 208<i32>
	r16 = r4
	r18 = r5
	r19 = r6
	r17 = sp + 4<32>
	r6 = 0x10<32>
	r4 = sp + r6
	branch r18 == 0<32> l00409B22
	// succ:  l00409B1E_1 l00409B22
l00409B1E_1:
	r17 = r16
	// succ:  l00409B22
l00409B22:
	r5 = r7
	call memcpy (retsize: 0;)
	r7 = 0<32>
	Mem0[sp + 8<32>:word32] = r17
	branch r18 == 0<32> l00409B30
	// succ:  l00409B2C l00409B30
l00409B2C:
	r7 = r18 + 0xFFFFFFFF<32>
	// succ:  l00409B30
l00409B30:
	r6 = 0x90<32>
	r5 = 0<32>
	r4 = sp + 0x20<32>
	Mem0[sp + 0xC<32>:word32] = r7
	goto 0x0040A690<p32>
	// succ:  l00409B3A_thunk_memset
l00409B3A_thunk_memset:
	call memset (retsize: 0;)
	return
	// succ:  vsnprintf_exit
vsnprintf_exit:


// vsprintf
// Return size: 0
define vsprintf
vsprintf_entry:
	sp = fp
	r25 = 0x409B70<32>
	// succ:  l00409B70
l00409B70:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 32<i32>
	r16 = r4
	r17 = r5
	r5 = r6
	r4 = sp
	r6 = 0x10<32>
	goto 0x0040A130<p32>
	// succ:  l00409B7A_thunk_memcpy
l00409B7A_thunk_memcpy:
	call memcpy (retsize: 0;)
	return
	// succ:  vsprintf_exit
vsprintf_exit:


// do_read
// Return size: 0
define do_read
do_read_entry:
	sp = fp
	r25 = 0x409B90<32>
	// succ:  l00409B90
l00409B90:
	goto 0x0040D360<p32>
	// succ:  l00409B90_thunk___string_read
l00409B90_thunk___string_read:
	call __string_read (retsize: 0;)
	return
	// succ:  do_read_exit
do_read_exit:


// __isoc99_vsscanf
// Return size: 0
define __isoc99_vsscanf
__isoc99_vsscanf_entry:
	sp = fp
	r25 = 0x409B94<32>
	// succ:  l00409B94
l00409B94:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 176<i32>
	r16 = r4
	r17 = r5
	r5 = r6
	r4 = sp
	r6 = 0x10<32>
	goto 0x0040A130<p32>
	// succ:  l00409B9E_thunk_memcpy
l00409B9E_thunk_memcpy:
	call memcpy (retsize: 0;)
	return
	// succ:  __isoc99_vsscanf_exit
__isoc99_vsscanf_exit:


// atoi
// Return size: 0
define atoi
atoi_entry:
	sp = fp
	r25 = 0x409BD0<32>
	// succ:  l00409BD0
l00409BD0:
	r7 = r4
	goto 0x00409BFE<p32>
	goto l00409BFE
	// succ:  l00409BFE
l00409BD4:
	r5 = 1<32>
	// succ:  l00409BD6
l00409BD6:
	r7 = r7 + 1<32>
	// succ:  l00409BD8
l00409BD8:
	r4 = 0<32>
	goto 0x00409BEA<p32>
	goto l00409BEA
	// succ:  l00409BEA
l00409BDC:
	r5 = 0<32>
	goto 0x00409BD6<p32>
	goto l00409BD6
	// succ:  l00409BD6
l00409BE0:
	r8 = 0xA<32>
	r7 = r7 + 1<32>
	r4 = r4 *s r8
	r4 = r4 - r6
	// succ:  l00409BEA
l00409BEA:
	r6 = CONVERT(Mem0[r7:byte], byte, word32)
	r6 = r6 + 0xFFFFFFD0<32>
	branch r6 <u 0xA<32> l00409BE0
	// succ:  l00409BF4 l00409BE0
l00409BF4:
	branch r5 != 0<32> l00409C18
	// succ:  l00409BF6 l00409C18
l00409BF6:
	r4 = -r4
	return
	// succ:  atoi_exit
l00409BFC:
	r7 = r7 + 1<32>
	// succ:  l00409BFE
l00409BFE:
	r6 = CONVERT(Mem0[r7:byte], byte, word32)
	branch r6 == 0x20<32> l00409BFC
	// succ:  l00409C04 l00409BFC
l00409C04:
	r5 = r6 + 0xFFFFFFF7<32>
	branch r5 <u 5<32> l00409BFC
	// succ:  l00409C0C l00409BFC
l00409C0C:
	branch r6 == 0x2B<32> l00409BDC
	// succ:  l00409C10 l00409BDC
l00409C10:
	branch r6 == 0x2D<32> l00409BD4
	// succ:  l00409C14 l00409BD4
l00409C14:
	r5 = 0<32>
	goto 0x00409BD8<p32>
	goto l00409BD8
	// succ:  l00409BD8
l00409C18:
	return
	// succ:  atoi_exit
atoi_exit:


// shl
// Return size: 0
define shl
shl_entry:
	sp = fp
	r25 = 0x409C20<32>
	// succ:  l00409C20
l00409C20:
	branch r5 <u 0x20<32> l00409C2E
	// succ:  l00409C24 l00409C2E
l00409C24:
	r7 = Mem0[r4:word32]
	r5 = r5 + 0xFFFFFFE0<32>
	Mem0[sp:word32] = 0<32>
	Mem0[sp + 4<32>:word32] = r7
	// succ:  l00409C2E
l00409C2E:
	r8 = -r5
	r6 = Mem0[r4 + 0<i32>:word32]
	r7 = Mem0[r4 + 4<i32>:word32]
	r7 = r7 << r5
	r8 = r6 >>u r8
	r7 = r7 | r8
	r5 = r6 << r5
	Mem0[sp:word32] = r5
	Mem0[sp + 4<32>:word32] = r7
	return
	// succ:  shl_exit
shl_exit:


// shr
// Return size: 0
define shr
shr_entry:
	sp = fp
	r25 = 0x409C4C<32>
	// succ:  l00409C4C
l00409C4C:
	branch r5 <u 0x20<32> l00409C5A
	// succ:  l00409C50 l00409C5A
l00409C50:
	r7 = Mem0[r4 + 4<32>:word32]
	r5 = r5 + 0xFFFFFFE0<32>
	Mem0[sp + 4<32>:word32] = 0<32>
	Mem0[sp:word32] = r7
	// succ:  l00409C5A
l00409C5A:
	r6 = Mem0[r4 + 4<32>:word32]
	r8 = -r5
	r7 = Mem0[r4:word32]
	r8 = r6 << r8
	r7 = r7 >>u r5
	r5 = r6 >>u r5
	r7 = r7 | r8
	Mem0[sp + 4<32>:word32] = r5
	Mem0[sp:word32] = r7
	return
	// succ:  shr_exit
shr_exit:


// cycle
// Return size: 0
define cycle
cycle_entry:
	sp = fp
	r25 = 0x409C78<32>
	// succ:  l00409C78
l00409C78:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	Mem0[sp + -32<i32>:word32] = r22
	sp = sp - 288<i32>
	r18 = r4
	r19 = r5
	r20 = r6
	branch r6 < 2<32> l00409C8E
	// succ:  l00409C84 l00409C8E
l00409C84:
	r22 = r19 + (r6 << 2<8>)
	Mem0[r22:byte] = SLICE(sp, byte, 0)
	branch r18 != 0<32> l00409C92
	// succ:  l00409C8E l00409C92
l00409C8E:
	ra = Mem0[sp + 284<i32>:word32]
	r16 = Mem0[sp + 280<i32>:word32]
	r17 = Mem0[sp + 276<i32>:word32]
	r18 = Mem0[sp + 272<i32>:word32]
	r19 = Mem0[sp + 268<i32>:word32]
	r20 = Mem0[sp + 264<i32>:word32]
	r21 = Mem0[sp + 260<i32>:word32]
	r22 = Mem0[sp + 256<i32>:word32]
	sp = sp + 288<i32>
	return
	// succ:  cycle_exit
l00409C92:
	r16 = CONVERT(r18 <u 0x101<32>, bool, word32)
	r7 = 0x100<32>
	branch r16 == 0<32> l00409C9E
	// succ:  l00409C9A_1 l00409C9E
l00409C9A_1:
	r7 = r18
	// succ:  l00409C9E
l00409C9E:
	r5 = Mem0[r19:word32]
	r4 = Mem0[r22:word32]
	r6 = r7
	r16 = r7
	r17 = r19
	r21 = 0<32>
	goto 0x0040A130<p32>
	// succ:  l00409CAA_thunk_memcpy
l00409CAA_thunk_memcpy:
	call memcpy (retsize: 0;)
	return
	// succ:  cycle_exit
cycle_exit:


// sift
// Return size: 0
define sift
sift_entry:
	sp = fp
	r25 = 0x409CCA<32>
	// succ:  l00409CCA
l00409CCA:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	Mem0[sp + -32<i32>:word32] = r22
	sp = sp - 272<i32>
	r16 = r4
	r21 = r5
	r20 = r6
	r17 = r7
	r22 = r8
	r18 = 1<32>
	Mem0[sp + 0xC<32>:word32] = r16
	goto 0x00409CFA<p32>
	goto l00409CFA
	// succ:  l00409CFA
l00409CDA:
	r17 = Mem0[sp + 0xC<32>:word32]
	r5 = r19
	call r20 (retsize: 0;)
	branch r4 < 0<32> l00409D1E
	// succ:  l00409CE4 l00409D1E
l00409CE4:
	r6 = r18
	r5 = sp + 0xC<32>
	r4 = r21
	call cycle (retsize: 0;)
	ra = Mem0[sp + 268<i32>:word32]
	r16 = Mem0[sp + 264<i32>:word32]
	r17 = Mem0[sp + 260<i32>:word32]
	r18 = Mem0[sp + 256<i32>:word32]
	r19 = Mem0[sp + 252<i32>:word32]
	r20 = Mem0[sp + 248<i32>:word32]
	r21 = Mem0[sp + 244<i32>:word32]
	r22 = Mem0[sp + 240<i32>:word32]
	sp = sp + 272<i32>
	return
	// succ:  sift_exit
l00409CF0:
	r7 = sp + 0xC<32>
	r17 = r17 + 0xFFFFFFFF<32>
	Mem0[r7 + r18 * 4<32>:word32] = r16
	// succ:  l00409CF8
l00409CF8:
	r18 = r18 + 1<32>
	// succ:  l00409CFA
l00409CFA:
	branch r17 < 2<32> l00409CE4
	// succ:  l00409CFE l00409CE4
l00409CFE:
	r6 = r17
	r7 = -r21
	r6 = r6 + 0x3FFFFFFE<32>
	r19 = r16 + r7
	r6 = Mem0[r22 + r6 * 4<32>:word32]
	r17 = Mem0[sp + 0xC<32>:word32]
	r7 = r7 - r6
	r16 = r16 + r7
	r5 = r16
	call r20 (retsize: 0;)
	branch r4 >= 0<32> l00409CDA
	// succ:  l00409D1E l00409CDA
l00409D1E:
	r4 = r16
	r5 = r19
	call r20 (retsize: 0;)
	branch r4 >= 0<32> l00409CF0
	// succ:  l00409D26 l00409CF0
l00409D26:
	r7 = sp + 0xC<32>
	r17 = r17 + 0xFFFFFFFE<32>
	Mem0[r7 + r18 * 4<32>:word32] = r19
	r16 = r19
	goto 0x00409CF8<p32>
	goto l00409CF8
	// succ:  l00409CF8
sift_exit:


// pntz
// Return size: 0
define pntz
pntz_entry:
	sp = fp
	r25 = 0x409D32<32>
	// succ:  l00409D32
l00409D32:
	r5 = Mem0[r4:word32]
	r7 = 1<32>
	r8 = 0x76BE629<32>
	r6 = r5 + 0xFFFFFFFF<32>
	r7 = r7 - r5
	r6 = r6 & r7
	r5 = 0x0040E7B4<p32>
	r6 = r6 *s r8
	r6 = r6 >>u 0x1B<32>
	r6 = CONVERT(Mem0[r5 + r6:byte], byte, word32)
	branch r6 != 0<32> l00409D70
	// succ:  l00409D54 l00409D70
l00409D54:
	r6 = Mem0[r4 + 4<32>:word32]
	r7 = -r6
	r7 = r7 & r6
	r7 = r7 *s r8
	r7 = r7 >>u 0x1B<32>
	r6 = CONVERT(Mem0[r5 + r7:byte], byte, word32)
	r4 = r6 + 0x20<32>
	branch r6 != 0<32> l00409D6E
	// succ:  l00409D6A_1 l00409D6E
l00409D6A_1:
	r4 = 0<32>
	// succ:  l00409D6E
l00409D6E:
	r6 = r4
	// succ:  l00409D70
l00409D70:
	r4 = r6
	return
	// succ:  pntz_exit
pntz_exit:


// trinkle
// Return size: 0
define trinkle
trinkle_entry:
	sp = fp
	r25 = 0x409D74<32>
	// succ:  l00409D74
l00409D74:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 288<i32>
	r17 = r4
	r22 = r5
	r21 = r6
	r18 = r8
	r6 = Mem0[r7 + 0<i32>:word32]
	r7 = Mem0[r7 + 4<i32>:word32]
	r19 = r9
	r23 = r10
	r20 = 1<32>
	Mem0[sp + 4<i32>:word32] = r6
	Mem0[sp + 8<i32>:word32] = r7
	Mem0[sp + 0xC<32>:word32] = r17
	goto 0x00409DC6<p32>
	goto l00409DC6
	// succ:  l00409DC6
l00409D92:
	r16 = Mem0[r23 + r18 * 4<32>:word32]
	r30 = r18 << 2<32>
	r17 = Mem0[sp + 0xC<32>:word32]
	r16 = r17 - r16
	r4 = r16
	call r21 (retsize: 0;)
	branch 0<32> >= r4 l00409DD0
	// succ:  l00409DA6 l00409DD0
l00409DA6:
	branch r19 == 0<32> l00409DE6
	// succ:  l00409DA8 l00409DE6
l00409DA8:
	r7 = sp + 0xC<32>
	r4 = sp + 4<32>
	Mem0[r7 + r20 * 4<32>:word32] = r16
	r19 = 0<32>
	goto 0x00409D32<p32>
	// succ:  l00409DB2_thunk_pntz
l00409DB2_thunk_pntz:
	call pntz (retsize: 0;)
	return
	// succ:  trinkle_exit
l00409DC6:
	r17 = Mem0[sp + 4<32>:word32]
	branch r7 != 1<32> l00409D92
	// succ:  l00409DCC l00409D92
l00409DCC:
	r17 = Mem0[sp + 8<32>:word32]
	branch r7 != 0<32> l00409D92
	// succ:  l00409DD0 l00409D92
l00409DD0:
	branch r19 != 0<32> l00409DE2
	// succ:  l00409DD2 l00409DE2
l00409DD2:
	r6 = r20
	r5 = sp + 0xC<32>
	r4 = r22
	call cycle (retsize: 0;)
	r7 = r18
	r8 = r23
	r5 = r22
	r6 = r21
	r4 = r17
	call sift (retsize: 0;)
	// succ:  l00409DE2
l00409DE2:
	r30 = Mem0[sp + 284<i32>:word32]
	ra = Mem0[sp + 280<i32>:word32]
	r16 = Mem0[sp + 276<i32>:word32]
	r17 = Mem0[sp + 272<i32>:word32]
	r18 = Mem0[sp + 268<i32>:word32]
	r19 = Mem0[sp + 264<i32>:word32]
	r20 = Mem0[sp + 260<i32>:word32]
	r21 = Mem0[sp + 256<i32>:word32]
	r22 = Mem0[sp + 252<i32>:word32]
	r23 = Mem0[sp + 248<i32>:word32]
	sp = sp + 288<i32>
	return
	// succ:  trinkle_exit
l00409DE6:
	branch r18 < 2<32> l00409DA8
	// succ:  l00409DEA l00409DA8
l00409DEA:
	r30 = r23 + r30
	r4 = -r22
	r19 = Mem0[r30 - 8<32>:word32]
	r5 = r16
	r19 = r4 - r19
	r4 = r17 + r4
	r19 = r17 + r19
	call r21 (retsize: 0;)
	branch r4 >= 0<32> l00409DD2
	// succ:  l00409E04 l00409DD2
l00409E04:
	r4 = r19
	r5 = r16
	call r21 (retsize: 0;)
	branch r4 < 0<32> l00409DA8
	// succ:  l00409E0C l00409DA8
l00409E0C:
	goto 0x00409DD2<p32>
	goto l00409DD2
	// succ:  l00409DD2
trinkle_exit:


// qsort
// Return size: 0
define qsort
qsort_entry:
	sp = fp
	r25 = 0x409E0E<32>
	// succ:  l00409E0E
l00409E0E:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 256<i32>
	r17 = r6
	r20 = r7
	r5 = r5 *s r17
	r7 = 1<32>
	Mem0[sp + 8<32>:word32] = r7
	Mem0[sp + 0xC<32>:word32] = 0<32>
	branch 0<32> == r5 l00409EEC
	// succ:  l00409E20 l00409EEC
l00409E20:
	r19 = r5 - r17
	r6 = sp + 0x10<32>
	r22 = r4 + r19
	r21 = r6
	Mem0[sp + 0x10<32>:word32] = r17
	Mem0[sp + 0x14<32>:word32] = r17
	// succ:  l00409E2E
l00409E2E:
	r7 = Mem0[r6:word32]
	r16 = Mem0[r6 + 4<32>:word32]
	r7 = r7 + r16
	r7 = r7 + r17
	Mem0[sp + 8<32>:word32] = r7
	r6 = r6 + 4<32>
	branch r7 <u r5 l00409E2E
	// succ:  l00409E3E l00409E2E
l00409E3E:
	r23 = -r17
	r18 = r4
	r16 = 1<32>
	// succ:  l00409E46
l00409E46:
	branch r18 <u r22 l00409E5A
	// succ:  l00409E4A l00409E5A
l00409E4A:
	r10 = r21
	r9 = 0<32>
	r8 = r16
	r7 = sp + 8<32>
	r5 = r17
	r6 = r20
	r4 = r18
	call trinkle (retsize: 0;)
	goto 0x00409EDE<p32>
	goto l00409EDE
	// succ:  l00409EDE
l00409E5A:
	r17 = Mem0[sp + 8<32>:word32]
	r7 = r7 & 3<32>
	branch r7 != 3<32> l00409E80
	// succ:  l00409E62 l00409E80
l00409E62:
	r7 = r16
	r8 = r21
	r5 = r17
	r6 = r20
	r16 = r16 + 2<32>
	r4 = r18
	call sift (retsize: 0;)
	r5 = 2<32>
	r4 = sp + 8<32>
	goto 0x00409F4C<p32>
	goto l00409F4C
	// succ:  l00409F4C
l00409E72:
	r17 = Mem0[sp + 8<32>:word32]
	r18 = r18 + r17
	r19 = r19 - r17
	r7 = r7 | 1<32>
	Mem0[sp + 8<32>:word32] = r7
	goto 0x00409E46<p32>
	goto l00409E46
	// succ:  l00409E46
l00409E80:
	r30 = r16 + 0xFFFFFFFF<32>
	r7 = sp + 0xD0<32>
	r7 = r7 + (r30 << 2<8>)
	r7 = Mem0[r7 - 0xC0<32>:word32]
	branch r7 <u r19 l00409EAE
	// succ:  l00409E92 l00409EAE
l00409E92:
	r10 = r21
	r9 = 0<32>
	r8 = r16
	r7 = sp + 8<32>
	r5 = r17
	r6 = r20
	r4 = r18
	call trinkle (retsize: 0;)
	// succ:  l00409EA0
l00409EA0:
	branch r16 != 1<32> l00409EB8
	// succ:  l00409EA4 l00409EB8
l00409EA4:
	r4 = sp + 8<32>
	r5 = r16
	call shl (retsize: 0;)
	r16 = 0<32>
	goto 0x00409E72<p32>
	goto l00409E72
	// succ:  l00409E72
l00409EAE:
	r7 = r16
	r8 = r21
	r5 = r17
	r6 = r20
	r4 = r18
	call sift (retsize: 0;)
	goto 0x00409EA0<p32>
	goto l00409EA0
	// succ:  l00409EA0
l00409EB8:
	r5 = r30
	r4 = sp + 8<32>
	goto 0x00409F48<p32>
	goto l00409F48
	// succ:  l00409F48
l00409EC2:
	r22 = r18 + r23
	branch r16 >= 2<32> l00409EF0
	// succ:  l00409ECA l00409EF0
l00409ECA:
	r4 = sp + 8<32>
	goto 0x00409D32<p32>
	// succ:  l00409ECC_thunk_pntz
l00409ECC_thunk_pntz:
	call pntz (retsize: 0;)
	return
	// succ:  qsort_exit
l00409EDE:
	branch r16 != 1<32> l00409EC2
	// succ:  l00409EE2 l00409EC2
l00409EE2:
	r17 = Mem0[sp + 8<32>:word32]
	branch r7 != 1<32> l00409ECA
	// succ:  l00409EE8 l00409ECA
l00409EE8:
	r17 = Mem0[sp + 0xC<32>:word32]
	branch r7 != 0<32> l00409ECA
	// succ:  l00409EEC l00409ECA
l00409EEC:
	r30 = Mem0[sp + 252<i32>:word32]
	ra = Mem0[sp + 248<i32>:word32]
	r16 = Mem0[sp + 244<i32>:word32]
	r17 = Mem0[sp + 240<i32>:word32]
	r18 = Mem0[sp + 236<i32>:word32]
	r19 = Mem0[sp + 232<i32>:word32]
	r20 = Mem0[sp + 228<i32>:word32]
	r21 = Mem0[sp + 224<i32>:word32]
	r22 = Mem0[sp + 220<i32>:word32]
	r23 = Mem0[sp + 216<i32>:word32]
	sp = sp + 256<i32>
	return
	// succ:  qsort_exit
l00409EF0:
	r4 = sp + 8<32>
	r5 = 2<32>
	goto 0x00409F48<p32>
	// succ:  l00409F48
l00409F48:
	goto 0x00409C20<p32>
	// succ:  l00409F48_thunk_shl
l00409F48_thunk_shl:
	call shl (retsize: 0;)
	return
	// succ:  qsort_exit
l00409F4C:
	goto 0x00409C4C<p32>
	// succ:  l00409F4C_thunk_shr
l00409F4C_thunk_shr:
	call shr (retsize: 0;)
	return
	// succ:  qsort_exit
qsort_exit:


// strtox
// Return size: 0
define strtox
strtox_entry:
	sp = fp
	r25 = 0x409F50<32>
	// succ:  l00409F50
l00409F50:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 160<i32>
	r16 = r4
	r17 = r5
	r18 = r6
	r5 = 0<32>
	r6 = 0x90<32>
	r4 = sp
	goto 0x0040A690<p32>
	// succ:  l00409F5E_thunk_memset
l00409F5E_thunk_memset:
	call memset (retsize: 0;)
	return
	// succ:  strtox_exit
strtox_exit:


// strtof_l
// Return size: 0
define strtof_l
strtof_l_entry:
	sp = fp
	r25 = 0x409FA4<32>
	// succ:  l00409FA4
l00409FA4:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r6 = 0<32>
	goto 0x00409F50<p32>
	// succ:  l00409FA8_thunk_strtox
l00409FA8_thunk_strtox:
	call strtox (retsize: 0;)
	return
	// succ:  strtof_l_exit
strtof_l_exit:


// strtod_l
// Return size: 0
define strtod_l
strtod_l_entry:
	sp = fp
	r25 = 0x409FB2<32>
	// succ:  l00409FB2
l00409FB2:
	r6 = 1<32>
	goto 0x00409F50<p32>
	// succ:  l00409FB4_thunk_strtox
l00409FB4_thunk_strtox:
	call strtox (retsize: 0;)
	return
	// succ:  strtod_l_exit
strtod_l_exit:


// strtold_l
// Return size: 0
define strtold_l
strtold_l_entry:
	sp = fp
	r25 = 0x409FB8<32>
	// succ:  l00409FB8
l00409FB8:
	r6 = 2<32>
	goto 0x00409F50<p32>
	// succ:  l00409FBA_thunk_strtox
l00409FBA_thunk_strtox:
	call strtox (retsize: 0;)
	return
	// succ:  strtold_l_exit
strtold_l_exit:


// strtox
// Return size: 0
define strtox
strtox_entry:
	sp = fp
	r25 = 0x409FC0<32>
	// succ:  l00409FC0
l00409FC0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 176<i32>
	r16 = r4
	r17 = r5
	r18 = r6
	Mem0[sp + 0x10<32>:word32] = 0<32>
	Mem0[sp + 0x14<32>:word32] = r16
	r7 = 0xFFFFFFFF<32>
	Mem0[sp + 0x3C<32>:word32] = r16
	branch r16 < 0<32> l00409FDA
	// succ:  l00409FD2 l00409FDA
l00409FD2:
	r7 = r16
	r7 = r7 + 0x7FFFFFFF<32>
	// succ:  l00409FDA
l00409FDA:
	Mem0[sp + 0x18<32>:word32] = r7
	r7 = 0xFFFFFFFF<32>
	r4 = sp + 0x10<32>
	Mem0[sp + 0x5C<32>:word32] = r7
	r6 = 0<32>
	r7 = 0<32>
	Mem0[sp + 8<i32>:word32] = r8
	Mem0[sp + 12<i32>:word32] = r9
	goto 0x0040CB40<p32>
	// succ:  l00409FE8_thunk___shlim
l00409FE8_thunk___shlim:
	call __shlim (retsize: 0;)
	return
	// succ:  strtox_exit
strtox_exit:


// __strtoull_internal
// Return size: 0
define __strtoull_internal
__strtoull_internal_entry:
	sp = fp
	r25 = 0x40A00C<32>
	// succ:  l0040A00C
l0040A00C:
	r8 = 0xFFFFFFFF<32>
	r9 = 0xFFFFFFFF<32>
	goto 0x00409FC0<p32>
	// succ:  l0040A014_thunk_strtox
l0040A014_thunk_strtox:
	call strtox (retsize: 0;)
	return
	// succ:  __strtoull_internal_exit
__strtoull_internal_exit:


// __strtoll_internal
// Return size: 0
define __strtoll_internal
__strtoll_internal_entry:
	sp = fp
	r25 = 0x40A018<32>
	// succ:  l0040A018
l0040A018:
	r8 = 0<32>
	r9 = 0<32>
	goto 0x00409FC0<p32>
	// succ:  l0040A01E_thunk_strtox
l0040A01E_thunk_strtox:
	call strtox (retsize: 0;)
	return
	// succ:  __strtoll_internal_exit
__strtoll_internal_exit:


// __strtoul_internal
// Return size: 0
define __strtoul_internal
__strtoul_internal_entry:
	sp = fp
	r25 = 0x40A022<32>
	// succ:  l0040A022
l0040A022:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r8 = 0xFFFFFFFF<32>
	r9 = 0<32>
	goto 0x00409FC0<p32>
	// succ:  l0040A02A_thunk_strtox
l0040A02A_thunk_strtox:
	call strtox (retsize: 0;)
	return
	// succ:  __strtoul_internal_exit
__strtoul_internal_exit:


// __strtol_internal
// Return size: 0
define __strtol_internal
__strtol_internal_entry:
	sp = fp
	r25 = 0x40A030<32>
	// succ:  l0040A030
l0040A030:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r8 = 0<32>
	r9 = 0<32>
	goto 0x00409FC0<p32>
	// succ:  l0040A038_thunk_strtox
l0040A038_thunk_strtox:
	call strtox (retsize: 0;)
	return
	// succ:  __strtol_internal_exit
__strtol_internal_exit:


// __strtoimax_internal
// Return size: 0
define __strtoimax_internal
__strtoimax_internal_entry:
	sp = fp
	r25 = 0x40A03E<32>
	// succ:  l0040A03E
l0040A03E:
	goto 0x0040A018<p32>
	// succ:  l0040A03E_thunk___strtoll_internal
l0040A03E_thunk___strtoll_internal:
	call __strtoll_internal (retsize: 0;)
	return
	// succ:  __strtoimax_internal_exit
__strtoimax_internal_exit:


// __strtoumax_internal
// Return size: 0
define __strtoumax_internal
__strtoumax_internal_entry:
	sp = fp
	r25 = 0x40A042<32>
	// succ:  l0040A042
l0040A042:
	goto 0x0040A00C<p32>
	// succ:  l0040A042_thunk___strtoull_internal
l0040A042_thunk___strtoull_internal:
	call __strtoull_internal (retsize: 0;)
	return
	// succ:  __strtoumax_internal_exit
__strtoumax_internal_exit:


// memchr
// Return size: 0
define memchr
memchr_entry:
	sp = fp
	r25 = 0x40A050<32>
	// succ:  l0040A050
l0040A050:
	r7 = r4 & 3<32>
	r5 = r5 & 0xFF<32>
	branch r7 == 0<32> l0040A072
	// succ:  l0040A056 l0040A072
l0040A056:
	branch 0<32> == r6 l0040A0F8
	// succ:  l0040A05A l0040A0F8
l0040A05A:
	r7 = CONVERT(Mem0[r4:byte], byte, word32)
	branch r5 != r7 l0040A06A
	// succ:  l0040A05E l0040A06A
l0040A05E:
	goto 0x0040A0FC<p32>
	goto l0040A0FC
	// succ:  l0040A0FC
l0040A060:
	branch 0<32> == r6 l0040A0F8
	// succ:  l0040A064 l0040A0F8
l0040A064:
	r7 = CONVERT(Mem0[r4:byte], byte, word32)
	branch r5 == r7 l0040A0FC
	// succ:  l0040A06A l0040A0FC
l0040A06A:
	r4 = r4 + 1<32>
	r6 = r6 + 0xFFFFFFFF<32>
	r7 = r4 & 3<32>
	branch r7 != 0<32> l0040A060
	// succ:  l0040A072 l0040A060
l0040A072:
	branch 0<32> == r6 l0040A0F8
	// succ:  l0040A076 l0040A0F8
l0040A076:
	r7 = CONVERT(Mem0[r4:byte], byte, word32)
	branch r5 == r7 l0040A0FC
	// succ:  l0040A07C l0040A0FC
l0040A07C:
	r9 = r5 << 8<32>
	r9 = r9 + r5
	r7 = r9 << 0x10<32>
	r9 = r9 + r7
	branch r6 <u 4<32> l0040A0E0
	// succ:  l0040A08C l0040A0E0
l0040A08C:
	r7 = Mem0[r4:word32]
	r7 = r9 ^ r7
	r8 = ~r7
	r7 = r7 + 0xFEFEFEFF<32>
	r7 = r8 & r7
	r8 = 0x80808080<32>
	r7 = r7 & r8
	branch r7 != 0<32> l0040A0E0
	// succ:  l0040A0AC l0040A0E0
l0040A0AC:
	r8 = r4
	goto 0x0040A0CE<p32>
	goto l0040A0CE
	// succ:  l0040A0CE
l0040A0B0:
	r7 = Mem0[r8:word32]
	r7 = r9 ^ r7
	r4 = r7
	r7 = ~r7
	r4 = r4 + 0xFEFEFEFF<32>
	r7 = r7 & r4
	r4 = 0x80808080<32>
	r7 = r7 & r4
	branch r7 != 0<32> l0040A0D8
	// succ:  l0040A0CE l0040A0D8
l0040A0CE:
	r6 = r6 + 0xFFFFFFFC<32>
	r8 = r8 + 4<32>
	branch r6 >=u 4<32> l0040A0B0
	// succ:  l0040A0D6 l0040A0B0
l0040A0D6:
	branch r6 == 0<32> l0040A0F8
	// succ:  l0040A0D8 l0040A0F8
l0040A0D8:
	r7 = CONVERT(Mem0[r8:byte], byte, word32)
	r4 = r8
	branch r5 == r7 l0040A0FC
	// succ:  l0040A0E0 l0040A0FC
l0040A0E0:
	r7 = r4 + 1<32>
	r6 = r4 + r6
	goto 0x0040A0F2<p32>
	goto l0040A0F2
	// succ:  l0040A0F2
l0040A0E8:
	r8 = CONVERT(Mem0[r7:byte], byte, word32)
	r7 = r7 + 1<32>
	branch r5 == r8 l0040A0FC
	// succ:  l0040A0F2 l0040A0FC
l0040A0F2:
	r4 = r7
	branch r7 != r6 l0040A0E8
	// succ:  l0040A0F8 l0040A0E8
l0040A0F8:
	r4 = 0<32>
	return
	// succ:  memchr_exit
l0040A0FC:
	return
	// succ:  memchr_exit
memchr_exit:


// memcmp
// Return size: 0
define memcmp
memcmp_entry:
	sp = fp
	r25 = 0x40A100<32>
	// succ:  l0040A100
l0040A100:
	branch r6 == 0<32> l0040A12A
	// succ:  l0040A102 l0040A12A
l0040A102:
	r8 = CONVERT(Mem0[r4:byte], byte, word32)
	r9 = CONVERT(Mem0[r5:byte], byte, word32)
	branch r9 != r8 l0040A124
	// succ:  l0040A10E l0040A124
l0040A10E:
	r7 = 1<32>
	// succ:  l0040A110
l0040A110:
	branch r6 == r7 l0040A12A
	// succ:  l0040A112 l0040A12A
l0040A112:
	r8 = CONVERT(Mem0[r4 + r7:byte], byte, word32)
	r7 = r7 + 1<32>
	r9 = r5 + r7
	r9 = CONVERT(Mem0[r9 - 1<32>:byte], byte, word32)
	branch r8 == r9 l0040A110
	// succ:  l0040A124 l0040A110
l0040A124:
	r4 = r8 - r9
	return
	// succ:  memcmp_exit
l0040A12A:
	r4 = 0<32>
	return
	// succ:  memcmp_exit
memcmp_exit:


// memcpy
// Return size: 0
define memcpy
memcpy_entry:
	sp = fp
	r25 = 0x40A130<32>
	// succ:  l0040A130
l0040A130:
	r7 = r5 & 3<32>
	branch 0<32> == r7 l0040A4F2
	// succ:  l0040A136 l0040A4F2
l0040A136:
	branch 0<32> == r6 l0040A1EE
	// succ:  l0040A13A l0040A1EE
l0040A13A:
	r13 = r4
	goto 0x0040A142<p32>
	goto l0040A142
	// succ:  l0040A142
l0040A13E:
	branch 0<32> == r6 l0040A286
	// succ:  l0040A142 l0040A286
l0040A142:
	r5 = r5 + 1<32>
	r13 = r13 + 1<32>
	r8 = CONVERT(Mem0[r5 - 1<32>:byte], byte, word32)
	r7 = r5 & 3<32>
	r6 = r6 + 0xFFFFFFFF<32>
	Mem0[r13 - 1<32>:int8] = SLICE(r8, int8, 0)
	branch r7 != 0<32> l0040A13E
	// succ:  l0040A154 l0040A13E
l0040A154:
	Mem0[sp + -4<i32>:word32] = r16
	Mem0[sp + -8<i32>:word32] = r17
	sp = sp - 16<i32>
	r8 = r13 & 3<32>
	branch 0<32> != r8 l0040A1F0
	// succ:  l0040A160 l0040A1F0
l0040A160:
	branch r6 <u 0x10<32> l0040A506
	// succ:  l0040A164 l0040A506
l0040A164:
	r12 = r6 + 0xFFFFFFF0<32>
	r8 = r5
	r3 = r12
	r7 = r13
	r3 = __ins(r3, 0<32>, 0<32>, 1<32>)
	r3 = r3 + 0x10<32>
	r3 = r13 + r3
	// succ:  l0040A17A
l0040A17A:
	r2 = Mem0[r8:word32]
	r11 = Mem0[r8 + 1<32>:word32]
	r10 = Mem0[r8 + 2<32>:word32]
	r9 = Mem0[r8 + 3<32>:word32]
	r8 = r8 + 0x10<32>
	Mem0[r7:byte] = SLICE(r2, byte, 0)
	Mem0[r7 + 4<32>:byte] = SLICE(r11, byte, 0)
	Mem0[r7 + 2<32>:word32] = r10
	Mem0[r7 + 3<32>:word32] = r9
	r7 = r7 + 0x10<32>
	branch r7 != r3 l0040A17A
	// succ:  l0040A19A l0040A17A
l0040A19A:
	r7 = r12
	r17 = r6 & 8<32>
	r7 = __ins(r7, 0<32>, 0<32>, 1<32>)
	r16 = r6 & 4<32>
	r7 = r7 + 0x10<32>
	r5 = r5 + r7
	r13 = r13 + r7
	r7 = r6 & 2<32>
	r6 = r6 & 1<32>
	// succ:  l0040A1B0
l0040A1B0:
	branch r17 == 0<32> l0040A1C4
	// succ:  l0040A1B2 l0040A1C4
l0040A1B2:
	r8 = Mem0[r5:word32]
	r17 = Mem0[r5 + 4<32>:word32]
	r5 = r5 + 8<32>
	Mem0[r13:byte] = SLICE(r8, byte, 0)
	Mem0[r13 + 4<32>:byte] = SLICE(r17, byte, 0)
	r13 = r13 + 8<32>
	// succ:  l0040A1C4
l0040A1C4:
	branch r16 == 0<32> l0040A1D0
	// succ:  l0040A1C6 l0040A1D0
l0040A1C6:
	r16 = Mem0[r5:word32]
	r5 = r5 + 4<32>
	Mem0[r13:byte] = SLICE(r16, byte, 0)
	r13 = r13 + 4<32>
	// succ:  l0040A1D0
l0040A1D0:
	branch r7 == 0<32> l0040A1E2
	// succ:  l0040A1D2 l0040A1E2
l0040A1D2:
	r16 = CONVERT(Mem0[r5:byte], byte, word32)
	r7 = CONVERT(Mem0[r5 + 1<32>:byte], byte, word32)
	r5 = r5 + 2<32>
	Mem0[r13:byte] = SLICE(r16, byte, 0)
	Mem0[r13 + 1<32>:byte] = SLICE(r7, byte, 0)
	r13 = r13 + 2<32>
	// succ:  l0040A1E2
l0040A1E2:
	branch r6 == 0<32> l0040A1EA
	// succ:  l0040A1E4 l0040A1EA
l0040A1E4:
	r7 = CONVERT(Mem0[r5:byte], byte, word32)
	Mem0[r13:byte] = SLICE(r7, byte, 0)
	// succ:  l0040A1EA
l0040A1EA:
	r16 = Mem0[sp + 12<i32>:word32]
	r17 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	// succ:  l0040A1EE
l0040A1EE:
	return
	// succ:  memcpy_exit
l0040A1F0:
	branch r6 <u 0x20<32> l0040A322
	// succ:  l0040A1F4 l0040A322
l0040A1F4:
	r9 = CONVERT(Mem0[r5:byte], byte, word32)
	r7 = Mem0[r5:word32]
	branch r8 == 2<32> l0040A288
	// succ:  l0040A1FE l0040A288
l0040A1FE:
	branch r8 != 3<32> l0040A44A
	// succ:  l0040A202 l0040A44A
l0040A202:
	r16 = r6 + 0xFFFFFFEC<32>
	r24 = r13 + 1<32>
	r17 = r16 >>u 4<32>
	r5 = r5 + 1<32>
	r25 = r17 << 4<32>
	r2 = r5
	r25 = r25 + 0x11<32>
	r8 = r24
	r25 = r13 + r25
	Mem0[r13:byte] = SLICE(r9, byte, 0)
	// succ:  l0040A222
l0040A222:
	r11 = Mem0[r2 + 3<32>:word32]
	r3 = r7 >>u 8<32>
	r10 = Mem0[r2 + 7<32>:word32]
	r9 = Mem0[r2 + 0xB<32>:word32]
	r15 = r11 << 0x18<32>
	r7 = Mem0[r2 + 0xF<32>:word32]
	r14 = r10 << 0x18<32>
	r13 = r9 << 0x18<32>
	r11 = r11 >>u 8<32>
	r10 = r10 >>u 8<32>
	r9 = r9 >>u 8<32>
	r12 = r7 << 0x18<32>
	r3 = r3 | r15
	r11 = r11 | r14
	r10 = r10 | r13
	r9 = r9 | r12
	Mem0[r8:byte] = SLICE(r3, byte, 0)
	Mem0[r8 + 4<32>:byte] = SLICE(r11, byte, 0)
	r2 = r2 + 0x10<32>
	Mem0[r8 + 2<32>:word32] = r10
	Mem0[r8 + 3<32>:word32] = r9
	r8 = r8 + 0x10<32>
	branch r8 != r25 l0040A222
	// succ:  l0040A27A l0040A222
l0040A27A:
	r16 = __ins(r16, 0<32>, 0<32>, 1<32>)
	r6 = r6 + 0xFFFFFFEF<32>
	r13 = r16
	goto 0x0040A312<p32>
	goto l0040A312
	// succ:  l0040A312
l0040A286:
	return
	// succ:  memcpy_exit
l0040A288:
	r16 = r6 + 0xFFFFFFEC<32>
	r8 = CONVERT(Mem0[r5 + 1<32>:byte], byte, word32)
	r17 = r16 >>u 4<32>
	r24 = r13 + 2<32>
	r25 = r17 + 1<32>
	r5 = r5 + 2<32>
	r25 = r25 << 4<32>
	Mem0[r13 + 1<32>:byte] = SLICE(r8, byte, 0)
	r25 = r24 + r25
	r2 = r5
	Mem0[r13:byte] = SLICE(r9, byte, 0)
	r8 = r24
	// succ:  l0040A2B0
l0040A2B0:
	r11 = Mem0[r2 + 2<32>:word32]
	r3 = r7 >>u 0x10<32>
	r10 = Mem0[r2 + 6<32>:word32]
	r9 = Mem0[r2 + 0xA<32>:word32]
	r15 = r11 << 0x10<32>
	r7 = Mem0[r2 + 0xE<32>:word32]
	r14 = r10 << 0x10<32>
	r13 = r9 << 0x10<32>
	r11 = r11 >>u 0x10<32>
	r10 = r10 >>u 0x10<32>
	r9 = r9 >>u 0x10<32>
	r12 = r7 << 0x10<32>
	r3 = r3 | r15
	r11 = r11 | r14
	r10 = r10 | r13
	r9 = r9 | r12
	Mem0[r8:byte] = SLICE(r3, byte, 0)
	Mem0[r8 + 4<32>:byte] = SLICE(r11, byte, 0)
	r2 = r2 + 0x10<32>
	Mem0[r8 + 2<32>:word32] = r10
	Mem0[r8 + 3<32>:word32] = r9
	r8 = r8 + 0x10<32>
	branch r8 != r25 l0040A2B0
	// succ:  l0040A308 l0040A2B0
l0040A308:
	r16 = __ins(r16, 0<32>, 0<32>, 1<32>)
	r6 = r6 + 0xFFFFFFEE<32>
	r13 = r16
	// succ:  l0040A312
l0040A312:
	r13 = r13 + 0x10<32>
	r17 = r17 << 4<32>
	r5 = r5 + r13
	r6 = r6 - r17
	r13 = r24 + r13
	// succ:  l0040A322
l0040A322:
	r8 = r6 & 8<32>
	r10 = r6 & 4<32>
	r17 = r6 & 2<32>
	r16 = r6 & 1<32>
	branch __bit(r6, 4<32>) l0040A4F6
	// succ:  l0040A332 l0040A4F6
l0040A332:
	r9 = CONVERT(Mem0[r5 + 2<32>:byte], byte, word32)
	r6 = CONVERT(Mem0[r5 + 1<32>:byte], byte, word32)
	Mem0[r13 + 2<32>:byte] = SLICE(r9, byte, 0)
	r9 = CONVERT(Mem0[r5 + 3<32>:byte], byte, word32)
	r7 = CONVERT(Mem0[r5:byte], byte, word32)
	Mem0[r13 + 3<32>:byte] = SLICE(r9, byte, 0)
	r9 = CONVERT(Mem0[r5 + 4<32>:byte], byte, word32)
	r25 = CONVERT(Mem0[r5 + 6<32>:byte], byte, word32)
	Mem0[r13 + 4<32>:byte] = SLICE(r9, byte, 0)
	r9 = CONVERT(Mem0[r5 + 5<32>:byte], byte, word32)
	r24 = CONVERT(Mem0[r5 + 7<32>:byte], byte, word32)
	r15 = CONVERT(Mem0[r5 + 8<32>:byte], byte, word32)
	r14 = CONVERT(Mem0[r5 + 9<32>:byte], byte, word32)
	r12 = CONVERT(Mem0[r5 + 0xA<32>:byte], byte, word32)
	r3 = CONVERT(Mem0[r5 + 0xB<32>:byte], byte, word32)
	r2 = CONVERT(Mem0[r5 + 0xC<32>:byte], byte, word32)
	r11 = CONVERT(Mem0[r5 + 0xD<32>:byte], byte, word32)
	Mem0[r13 + 1<32>:byte] = SLICE(r6, byte, 0)
	r6 = r5 + 0x10<32>
	Mem0[r13 + 5<32>:byte] = SLICE(r9, byte, 0)
	r9 = CONVERT(Mem0[r5 + 0xE<32>:byte], byte, word32)
	r5 = CONVERT(Mem0[r5 + 0xF<32>:byte], byte, word32)
	Mem0[r13:byte] = SLICE(r7, byte, 0)
	r7 = r13 + 0x10<32>
	Mem0[r13 + 6<32>:byte] = SLICE(r25, byte, 0)
	Mem0[r13 + 7<32>:byte] = SLICE(r24, byte, 0)
	Mem0[r13 + 8<32>:byte] = SLICE(r15, byte, 0)
	Mem0[r13 + 9<32>:byte] = SLICE(r14, byte, 0)
	Mem0[r13 + 0xA<32>:byte] = SLICE(r12, byte, 0)
	Mem0[r13 + 0xB<32>:byte] = SLICE(r3, byte, 0)
	Mem0[r13 + 0xC<32>:byte] = SLICE(r2, byte, 0)
	Mem0[r13 + 0xD<32>:byte] = SLICE(r11, byte, 0)
	Mem0[r13 + 0xE<32>:byte] = SLICE(r9, byte, 0)
	Mem0[r13 + 0xF<32>:byte] = SLICE(r5, byte, 0)
	// succ:  l0040A3B4
l0040A3B4:
	branch 0<32> == r8 l0040A4FC
	// succ:  l0040A3B8 l0040A4FC
l0040A3B8:
	r14 = CONVERT(Mem0[r6:byte], byte, word32)
	r9 = r6 + 8<32>
	r13 = CONVERT(Mem0[r6 + 1<32>:byte], byte, word32)
	r8 = r7 + 8<32>
	r12 = CONVERT(Mem0[r6 + 2<32>:byte], byte, word32)
	r3 = CONVERT(Mem0[r6 + 3<32>:byte], byte, word32)
	r2 = CONVERT(Mem0[r6 + 4<32>:byte], byte, word32)
	r11 = CONVERT(Mem0[r6 + 5<32>:byte], byte, word32)
	r5 = CONVERT(Mem0[r6 + 6<32>:byte], byte, word32)
	r6 = CONVERT(Mem0[r6 + 7<32>:byte], byte, word32)
	Mem0[r7:byte] = SLICE(r14, byte, 0)
	Mem0[r7 + 1<32>:byte] = SLICE(r13, byte, 0)
	Mem0[r7 + 2<32>:byte] = SLICE(r12, byte, 0)
	Mem0[r7 + 3<32>:byte] = SLICE(r3, byte, 0)
	Mem0[r7 + 4<32>:byte] = SLICE(r2, byte, 0)
	Mem0[r7 + 5<32>:byte] = SLICE(r11, byte, 0)
	Mem0[r7 + 6<32>:byte] = SLICE(r5, byte, 0)
	Mem0[r7 + 7<32>:byte] = SLICE(r6, byte, 0)
	// succ:  l0040A400
l0040A400:
	branch 0<32> == r10 l0040A500
	// succ:  l0040A404 l0040A500
l0040A404:
	r11 = CONVERT(Mem0[r9:byte], byte, word32)
	r13 = r8 + 4<32>
	r10 = CONVERT(Mem0[r9 + 1<32>:byte], byte, word32)
	r5 = r9 + 4<32>
	r6 = CONVERT(Mem0[r9 + 2<32>:byte], byte, word32)
	r7 = CONVERT(Mem0[r9 + 3<32>:byte], byte, word32)
	Mem0[r8:byte] = SLICE(r11, byte, 0)
	Mem0[r8 + 1<32>:byte] = SLICE(r10, byte, 0)
	Mem0[r8 + 2<32>:byte] = SLICE(r6, byte, 0)
	Mem0[r8 + 3<32>:byte] = SLICE(r7, byte, 0)
	// succ:  l0040A42C
l0040A42C:
	branch r17 == 0<32> l0040A43E
	// succ:  l0040A42E l0040A43E
l0040A42E:
	r6 = CONVERT(Mem0[r5:byte], byte, word32)
	r7 = CONVERT(Mem0[r5 + 1<32>:byte], byte, word32)
	r5 = r5 + 2<32>
	Mem0[r13:byte] = SLICE(r6, byte, 0)
	Mem0[r13 + 1<32>:byte] = SLICE(r7, byte, 0)
	r13 = r13 + 2<32>
	// succ:  l0040A43E
l0040A43E:
	branch 0<32> == r16 l0040A1EA
	// succ:  l0040A442 l0040A1EA
l0040A442:
	r7 = CONVERT(Mem0[r5:byte], byte, word32)
	Mem0[r13:byte] = SLICE(r7, byte, 0)
	goto 0x0040A1EA<p32>
	goto l0040A1EA
	// succ:  l0040A1EA
l0040A44A:
	r24 = r6 + 0xFFFFFFEC<32>
	r8 = CONVERT(Mem0[r5 + 1<32>:byte], byte, word32)
	r25 = r24 >>u 4<32>
	r17 = CONVERT(Mem0[r5 + 2<32>:byte], byte, word32)
	r15 = r25 + 1<32>
	r16 = r13 + 3<32>
	r5 = r5 + 3<32>
	r15 = r15 << 4<32>
	Mem0[r13 + 1<32>:byte] = SLICE(r8, byte, 0)
	r15 = r16 + r15
	r2 = r5
	Mem0[r13:byte] = SLICE(r9, byte, 0)
	Mem0[r13 + 2<32>:byte] = SLICE(r17, byte, 0)
	r8 = r16
	// succ:  l0040A47A
l0040A47A:
	r11 = Mem0[r2 + 1<32>:word32]
	r3 = r7 >>u 0x18<32>
	r10 = Mem0[r2 + 5<32>:word32]
	r9 = Mem0[r2 + 9<32>:word32]
	r17 = r11 << 8<32>
	r7 = Mem0[r2 + 0xD<32>:word32]
	r14 = r10 << 8<32>
	r13 = r9 << 8<32>
	r11 = r11 >>u 0x18<32>
	r10 = r10 >>u 0x18<32>
	r9 = r9 >>u 0x18<32>
	r12 = r7 << 8<32>
	r3 = r3 | r17
	r11 = r11 | r14
	r10 = r10 | r13
	r9 = r9 | r12
	Mem0[r8:byte] = SLICE(r3, byte, 0)
	Mem0[r8 + 4<32>:byte] = SLICE(r11, byte, 0)
	r2 = r2 + 0x10<32>
	Mem0[r8 + 2<32>:word32] = r10
	Mem0[r8 + 3<32>:word32] = r9
	r8 = r8 + 0x10<32>
	branch r8 != r15 l0040A47A
	// succ:  l0040A4D2 l0040A47A
l0040A4D2:
	r13 = r24
	r6 = r6 + 0xFFFFFFED<32>
	r13 = __ins(r13, 0<32>, 0<32>, 1<32>)
	r25 = r25 << 4<32>
	r13 = r13 + 0x10<32>
	r6 = r6 - r25
	r5 = r5 + r13
	r13 = r16 + r13
	goto 0x0040A322<p32>
	goto l0040A322
	// succ:  l0040A322
l0040A4F2:
	r13 = r4
	goto 0x0040A154<p32>
	goto l0040A154
	// succ:  l0040A154
l0040A4F6:
	r6 = r5
	r7 = r13
	goto 0x0040A3B4<p32>
	goto l0040A3B4
	// succ:  l0040A3B4
l0040A4FC:
	r9 = r6
	r8 = r7
	goto 0x0040A400<p32>
	goto l0040A400
	// succ:  l0040A400
l0040A500:
	r5 = r9
	r13 = r8
	goto 0x0040A42C<p32>
	goto l0040A42C
	// succ:  l0040A42C
l0040A506:
	r17 = r6 & 8<32>
	r16 = r6 & 4<32>
	r7 = r6 & 2<32>
	r6 = r6 & 1<32>
	goto 0x0040A1B0<p32>
	goto l0040A1B0
	// succ:  l0040A1B0
memcpy_exit:


// memmove
// Return size: 0
define memmove
memmove_entry:
	sp = fp
	r25 = 0x40A510<32>
	// succ:  l0040A510
l0040A510:
	branch r4 == r5 l0040A688
	// succ:  l0040A514 l0040A688
l0040A514:
	r7 = r5 + r6
	branch r4 >=u r7 l0040A616
	// succ:  l0040A51A l0040A616
l0040A51A:
	r7 = r4 + r6
	branch r5 >=u r7 l0040A616
	// succ:  l0040A520 l0040A616
l0040A520:
	r8 = r5 ^ r4
	r8 = r8 & 3<32>
	branch r4 >=u r5 l0040A61A
	// succ:  l0040A52C l0040A61A
l0040A52C:
	branch 0<32> != r8 l0040A666
	// succ:  l0040A530 l0040A666
l0040A530:
	r7 = r4 & 3<32>
	branch 0<32> == r7 l0040A67C
	// succ:  l0040A536 l0040A67C
l0040A536:
	r8 = r6 + 0xFFFFFFFF<32>
	r7 = r4
	branch r6 != 0<32> l0040A546
	// succ:  l0040A53E l0040A546
l0040A53E:
	goto 0x0040A688<p32>
	goto l0040A688
	// succ:  l0040A688
l0040A540:
	r8 = r8 + 0xFFFFFFFF<32>
	branch r8 == r10 l0040A688
	// succ:  l0040A546 l0040A688
l0040A546:
	r5 = r5 + 1<32>
	r7 = r7 + 1<32>
	r9 = CONVERT(Mem0[r5 - 1<32>:byte], byte, word32)
	r6 = r7 & 3<32>
	r10 = 0xFFFFFFFF<32>
	Mem0[r7 - 1<32>:int8] = SLICE(r9, int8, 0)
	branch r6 != 0<32> l0040A540
	// succ:  l0040A55A l0040A540
l0040A55A:
	branch r8 <u 4<32> l0040A684
	// succ:  l0040A55E l0040A684
l0040A55E:
	r11 = r8 + 0xFFFFFFFC<32>
	r6 = 0<32>
	r10 = r11
	r10 = __ins(r10, 0<32>, 0<32>, 1<32>)
	r10 = r10 + 4<32>
	// succ:  l0040A56C
l0040A56C:
	r9 = Mem0[r5 + r6:word32]
	Mem0[r7 + r6:word32] = r9
	r6 = r6 + 4<32>
	branch r6 != r10 l0040A56C
	// succ:  l0040A57A l0040A56C
l0040A57A:
	r11 = __ins(r11, 0<32>, 0<32>, 1<32>)
	r6 = r8 & 3<32>
	r8 = r11 + 4<32>
	r7 = r7 + r8
	r5 = r5 + r8
	// succ:  l0040A58A
l0040A58A:
	branch 0<32> == r6 l0040A688
	// succ:  l0040A58E l0040A688
l0040A58E:
	r8 = r5 + 4<32>
	r10 = r7 + 4<32>
	r8 = CONVERT(r7 <u r8, bool, word32)
	r10 = CONVERT(r5 <u r10, bool, word32)
	r8 = r8 ^ 1<32>
	r10 = r10 ^ 1<32>
	r9 = CONVERT(r6 <u 0xA<32>, bool, word32)
	r8 = r8 | r10
	r9 = r9 ^ 1<32>
	r8 = r9 & r8
	branch 0<32> == r8 l0040A66A
	// succ:  l0040A5BA l0040A66A
l0040A5BA:
	r8 = r5 | r7
	r8 = r8 & 3<32>
	branch 0<32> != r8 l0040A66A
	// succ:  l0040A5C6 l0040A66A
l0040A5C6:
	r8 = r6 + 0xFFFFFFFC<32>
	r9 = 0<32>
	r8 = r8 >>u 2<32>
	r8 = r8 + 1<32>
	r10 = r8 << 2<32>
	// succ:  l0040A5D6
l0040A5D6:
	r11 = Mem0[r5 + r9 * 4<32>:word32]
	Mem0[r7 + r9 * 4<32>:word32] = r11
	r9 = r9 + 1<32>
	branch r9 <u r8 l0040A5D6
	// succ:  l0040A5E4 l0040A5D6
l0040A5E4:
	r8 = r6 - r10
	r9 = r7 + r10
	r11 = r5 + r10
	branch r6 == r10 l0040A688
	// succ:  l0040A5F4 l0040A688
l0040A5F4:
	r6 = CONVERT(Mem0[r5 + r10:byte], byte, word32)
	Mem0[r10 + r7:byte] = SLICE(r6, byte, 0)
	branch r8 == 1<32> l0040A688
	// succ:  l0040A600 l0040A688
l0040A600:
	r7 = CONVERT(Mem0[r11 + 1<32>:byte], byte, word32)
	Mem0[r9 + 1<32>:byte] = SLICE(r7, byte, 0)
	branch r8 == 2<32> l0040A688
	// succ:  l0040A60C l0040A688
l0040A60C:
	r7 = CONVERT(Mem0[r11 + 2<32>:byte], byte, word32)
	Mem0[r9 + 2<32>:byte] = SLICE(r7, byte, 0)
	return
	// succ:  memmove_exit
l0040A616:
	goto 0x0040A130<p32>
	// succ:  l0040A616_thunk_memcpy
l0040A616_thunk_memcpy:
	call memcpy (retsize: 0;)
	return
	// succ:  memmove_exit
l0040A61A:
	branch 0<32> != r8 l0040A658
	// succ:  l0040A61E l0040A658
l0040A61E:
	r7 = r7 & 3<32>
	branch r7 == 0<32> l0040A680
	// succ:  l0040A622 l0040A680
l0040A622:
	r7 = r6 + 0xFFFFFFFF<32>
	branch r6 != 0<32> l0040A630
	// succ:  l0040A628 l0040A630
l0040A628:
	goto 0x0040A688<p32>
	goto l0040A688
	// succ:  l0040A688
l0040A62A:
	r7 = r7 + 0xFFFFFFFF<32>
	branch r7 == r9 l0040A688
	// succ:  l0040A630 l0040A688
l0040A630:
	r8 = CONVERT(Mem0[r5 + r7:byte], byte, word32)
	r6 = r4 + r7
	r6 = r6 & 3<32>
	r9 = 0xFFFFFFFF<32>
	Mem0[r7 + r4:byte] = SLICE(r8, byte, 0)
	branch r6 != 0<32> l0040A62A
	// succ:  l0040A642 l0040A62A
l0040A642:
	r6 = r7
	branch r7 <u 4<32> l0040A658
	// succ:  l0040A648 l0040A658
l0040A648:
	r6 = r6 + 0xFFFFFFFC<32>
	r8 = Mem0[r5 + r6:word32]
	Mem0[r4 + r6:word32] = r8
	branch r6 >=u 4<32> l0040A648
	// succ:  l0040A656 l0040A648
l0040A656:
	r6 = r7 & 3<32>
	// succ:  l0040A658
l0040A658:
	branch r6 == 0<32> l0040A688
	// succ:  l0040A65A l0040A688
l0040A65A:
	r6 = r6 + 0xFFFFFFFF<32>
	r7 = CONVERT(Mem0[r5 + r6:byte], byte, word32)
	Mem0[r6 + r4:byte] = SLICE(r7, byte, 0)
	goto 0x0040A658<p32>
	goto l0040A658
	// succ:  l0040A658
l0040A666:
	r7 = r4
	goto 0x0040A58A<p32>
	goto l0040A58A
	// succ:  l0040A58A
l0040A66A:
	r8 = 0<32>
	// succ:  l0040A66C
l0040A66C:
	r9 = CONVERT(Mem0[r5 + r8:byte], byte, word32)
	Mem0[r8 + r7:byte] = SLICE(r9, byte, 0)
	r8 = r8 + 1<32>
	branch r6 != r8 l0040A66C
	// succ:  l0040A67A l0040A66C
l0040A67A:
	return
	// succ:  memmove_exit
l0040A67C:
	r7 = r4
	r8 = r6
	goto 0x0040A55A<p32>
	goto l0040A55A
	// succ:  l0040A55A
l0040A680:
	r7 = r6
	goto 0x0040A642<p32>
	goto l0040A642
	// succ:  l0040A642
l0040A684:
	r6 = r8
	goto 0x0040A58A<p32>
	goto l0040A58A
	// succ:  l0040A58A
l0040A688:
	return
	// succ:  memmove_exit
memmove_exit:


// memset
// Return size: 0
define memset
memset_entry:
	sp = fp
	r25 = 0x40A690<32>
	// succ:  l0040A690
l0040A690:
	branch 0<32> == r6 l0040A74C
	// succ:  l0040A694 l0040A74C
l0040A694:
	r7 = r5 & 0xFF<32>
	r8 = r4 + r6
	Mem0[r8 - 1<32>:int8] = SLICE(r7, int8, 0)
	Mem0[r4:byte] = SLICE(r7, byte, 0)
	branch r6 <u 3<32> l0040A74C
	// succ:  l0040A6A4 l0040A74C
l0040A6A4:
	Mem0[r8 - 2<32>:int8] = SLICE(r7, int8, 0)
	Mem0[r4 + 1<32>:byte] = SLICE(r7, byte, 0)
	Mem0[r8 - 3<32>:int8] = SLICE(r7, int8, 0)
	Mem0[r4 + 2<32>:byte] = SLICE(r7, byte, 0)
	branch r6 <u 7<32> l0040A74C
	// succ:  l0040A6B4 l0040A74C
l0040A6B4:
	Mem0[r8 - 4<32>:int8] = SLICE(r7, int8, 0)
	Mem0[r4 + 3<32>:byte] = SLICE(r7, byte, 0)
	branch r6 <u 9<32> l0040A74C
	// succ:  l0040A6BE l0040A74C
l0040A6BE:
	r9 = -r4
	r7 = r5 & 0xFF<32>
	r9 = r9 & 3<32>
	r5 = r7 << 8<32>
	r6 = r6 - r9
	r5 = r5 + r7
	r6 = __ins(r6, 0<32>, 0<32>, 1<32>)
	r7 = r4 + r9
	r8 = r6
	r6 = r5 << 0x10<32>
	r6 = r5 + r6
	r10 = r7 + r8
	Mem0[r4 + r9:word32] = r6
	Mem0[r10 - 4<32>:word32] = r6
	branch r8 <u 9<32> l0040A74C
	// succ:  l0040A6F0 l0040A74C
l0040A6F0:
	Mem0[sp + 0x44<32>:word32] = r6
	Mem0[sp + 0x48<32>:word32] = r6
	Mem0[r10 - 0xC<32>:word32] = r6
	Mem0[r10 - 8<32>:word32] = r6
	branch r8 <u 0x19<32> l0040A74C
	// succ:  l0040A700 l0040A74C
l0040A700:
	r5 = r7 & 4<32>
	Mem0[sp + 0x4C<32>:word32] = r6
	r5 = r5 + 0x18<32>
	Mem0[sp + 0x50<32>:word32] = r6
	r8 = r8 - r5
	Mem0[sp + 0x54<32>:word32] = r6
	Mem0[sp + 0x58<32>:word32] = r6
	r7 = r7 + r5
	Mem0[r10 - 0x1C<32>:word32] = r6
	Mem0[r10 - 0x18<32>:word32] = r6
	Mem0[r10 - 0x14<32>:word32] = r6
	Mem0[r10 - 0x10<32>:word32] = r6
	branch r8 <u 0x20<32> l0040A74C
	// succ:  l0040A726 l0040A74C
l0040A726:
	r5 = r8 + 0xFFFFFFE0<32>
	r5 = __ins(r5, 0<32>, 0<32>, 1<32>)
	r5 = r5 + 0x20<32>
	r5 = r7 + r5
	// succ:  l0040A734
l0040A734:
	Mem0[sp + 0x40<32>:word32] = r6
	Mem0[sp + 0x44<32>:word32] = r6
	Mem0[sp + 0x48<32>:word32] = r6
	Mem0[sp + 0x4C<32>:word32] = r6
	Mem0[sp + 0x50<32>:word32] = r6
	Mem0[sp + 0x54<32>:word32] = r6
	Mem0[sp + 0x58<32>:word32] = r6
	Mem0[sp + 0x5C<32>:word32] = r6
	r7 = r7 + 0x20<32>
	branch r7 != r5 l0040A734
	// succ:  l0040A74C l0040A734
l0040A74C:
	return
	// succ:  memset_exit
memset_exit:


// strcat
// Return size: 0
define strcat
strcat_entry:
	sp = fp
	r25 = 0x40A750<32>
	// succ:  l0040A750
l0040A750:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 32<i32>
	r16 = r4
	Mem0[sp + 0xC<32>:word32] = r5
	goto 0x0040A890<p32>
	// succ:  l0040A756_thunk_strlen
l0040A756_thunk_strlen:
	call strlen (retsize: 0;)
	return
	// succ:  strcat_exit
strcat_exit:


// strchr
// Return size: 0
define strchr
strchr_entry:
	sp = fp
	r25 = 0x40A770<32>
	// succ:  l0040A770
l0040A770:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r16 = r5
	goto 0x0040A790<p32>
	// succ:  l0040A774_thunk_strchrnul
l0040A774_thunk_strchrnul:
	call strchrnul (retsize: 0;)
	return
	// succ:  strchr_exit
strchr_exit:


// strchrnul
// Return size: 0
define strchrnul
strchrnul_entry:
	sp = fp
	r25 = 0x40A790<32>
	// succ:  l0040A790
l0040A790:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r5 = r5 & 0xFF<32>
	r16 = r4
	branch r5 != 0<32> l0040A7A6
	// succ:  l0040A798 l0040A7A6
l0040A798:
	goto 0x0040A824<p32>
	goto l0040A824
	// succ:  l0040A824
l0040A79A:
	r7 = CONVERT(Mem0[r16:byte], byte, word32)
	branch 0<32> == r7 l0040A820
	// succ:  l0040A7A0 l0040A820
l0040A7A0:
	branch r5 == r7 l0040A820
	// succ:  l0040A7A4 l0040A820
l0040A7A4:
	r16 = r16 + 1<32>
	// succ:  l0040A7A6
l0040A7A6:
	r7 = r16 & 3<32>
	branch r7 != 0<32> l0040A79A
	// succ:  l0040A7AA l0040A79A
l0040A7AA:
	r10 = r5 << 8<32>
	r7 = Mem0[r16:word32]
	r10 = r10 + r5
	r4 = 0xFEFEFEFF<32>
	r8 = r10 << 0x10<32>
	r6 = r7 + r4
	r10 = r10 + r8
	r8 = ~r7
	r7 = r10 ^ r7
	r6 = r6 & r8
	r4 = r7 + r4
	r7 = ~r7
	r7 = r7 & r4
	r7 = r7 | r6
	r6 = 0x80808080<32>
	r7 = r7 & r6
	branch r7 != 0<32> l0040A814
	// succ:  l0040A7E0 l0040A814
l0040A7E0:
	r4 = r16
	// succ:  l0040A7E2
l0040A7E2:
	r4 = r4 + 4<32>
	r6 = 0xFEFEFEFF<32>
	r8 = Mem0[r4:word32]
	r9 = r10 ^ r8
	r7 = r8 + r6
	r6 = r6 + r9
	r8 = ~r8
	r9 = ~r9
	r7 = r7 & r8
	r6 = r6 & r9
	r7 = r7 | r6
	r6 = 0x80808080<32>
	r7 = r7 & r6
	branch r7 == 0<32> l0040A7E2
	// succ:  l0040A812 l0040A7E2
l0040A812:
	r16 = r4
	// succ:  l0040A814
l0040A814:
	r7 = CONVERT(Mem0[r16:byte], byte, word32)
	branch r7 == 0<32> l0040A820
	// succ:  l0040A818 l0040A820
l0040A818:
	branch r5 == r7 l0040A820
	// succ:  l0040A81A l0040A820
l0040A81A:
	r16 = r16 + 1<32>
	r7 = CONVERT(Mem0[r16:byte], byte, word32)
	branch r7 != 0<32> l0040A818
	// succ:  l0040A820 l0040A818
l0040A820:
	r4 = r16
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  strchrnul_exit
l0040A824:
	goto 0x0040A890<p32>
	// succ:  l0040A824_thunk_strlen
l0040A824_thunk_strlen:
	call strlen (retsize: 0;)
	return
	// succ:  strchrnul_exit
strchrnul_exit:


// strcmp
// Return size: 0
define strcmp
strcmp_entry:
	sp = fp
	r25 = 0x40A830<32>
	// succ:  l0040A830
l0040A830:
	r7 = CONVERT(Mem0[r4:byte], byte, word32)
	r6 = CONVERT(Mem0[r5:byte], byte, word32)
	branch r7 != r6 l0040A858
	// succ:  l0040A838 l0040A858
l0040A838:
	branch r6 == 0<32> l0040A854
	// succ:  l0040A83A l0040A854
l0040A83A:
	r7 = 1<32>
	goto 0x0040A840<p32>
	goto l0040A840
	// succ:  l0040A840
l0040A83E:
	branch r6 == 0<32> l0040A854
	// succ:  l0040A840 l0040A854
l0040A840:
	r6 = CONVERT(Mem0[r4 + r7:byte], byte, word32)
	r8 = CONVERT(Mem0[r5 + r7:byte], byte, word32)
	r7 = r7 + 1<32>
	branch r6 == r8 l0040A83E
	// succ:  l0040A84E l0040A83E
l0040A84E:
	r4 = r6 - r8
	return
	// succ:  strcmp_exit
l0040A854:
	r4 = 0<32>
	return
	// succ:  strcmp_exit
l0040A858:
	r4 = r7 - r6
	return
	// succ:  strcmp_exit
strcmp_exit:


// strcpy
// Return size: 0
define strcpy
strcpy_entry:
	sp = fp
	r25 = 0x40A860<32>
	// succ:  l0040A860
l0040A860:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r16 = r4
	goto 0x0040DC10<p32>
	// succ:  l0040A864_thunk_stpcpy
l0040A864_thunk_stpcpy:
	call stpcpy (retsize: 0;)
	return
	// succ:  strcpy_exit
strcpy_exit:


// __strdup
// Return size: 0
define __strdup
__strdup_entry:
	sp = fp
	r25 = 0x40A870<32>
	// succ:  l0040A870
l0040A870:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 16<i32>
	r17 = r4
	goto 0x0040A890<p32>
	// succ:  l0040A874_thunk_strlen
l0040A874_thunk_strlen:
	call strlen (retsize: 0;)
	return
	// succ:  __strdup_exit
__strdup_exit:


// strlen
// Return size: 0
define strlen
strlen_entry:
	sp = fp
	r25 = 0x40A890<32>
	// succ:  l0040A890
l0040A890:
	r6 = r4 & 3<32>
	r7 = r4
	branch r6 == 0<32> l0040A8D8
	// succ:  l0040A896 l0040A8D8
l0040A896:
	r6 = CONVERT(Mem0[r4:byte], byte, word32)
	branch r6 != 0<32> l0040A8A0
	// succ:  l0040A89A l0040A8A0
l0040A89A:
	goto 0x0040A8DC<p32>
	goto l0040A8DC
	// succ:  l0040A8DC
l0040A89C:
	r6 = CONVERT(Mem0[r7:byte], byte, word32)
	branch r6 == 0<32> l0040A8D4
	// succ:  l0040A8A0 l0040A8D4
l0040A8A0:
	r7 = r7 + 1<32>
	r6 = r7 & 3<32>
	branch r6 != 0<32> l0040A89C
	// succ:  l0040A8A6 l0040A89C
l0040A8A6:
	goto 0x0040A8AA<p32>
	goto l0040A8AA
	// succ:  l0040A8AA
l0040A8A8:
	r7 = r7 + 4<32>
	// succ:  l0040A8AA
l0040A8AA:
	r5 = Mem0[r7:word32]
	r6 = r5
	r5 = ~r5
	r6 = r6 + 0xFEFEFEFF<32>
	r6 = r6 & r5
	r5 = 0x80808080<32>
	r6 = r6 & r5
	branch r6 == 0<32> l0040A8A8
	// succ:  l0040A8C4 l0040A8A8
l0040A8C4:
	r6 = r7
	r7 = CONVERT(Mem0[r7:byte], byte, word32)
	branch r7 == 0<32> l0040A8D0
	// succ:  l0040A8CA l0040A8D0
l0040A8CA:
	r6 = r6 + 1<32>
	r5 = CONVERT(Mem0[r6:byte], byte, word32)
	branch r5 != 0<32> l0040A8CA
	// succ:  l0040A8D0 l0040A8CA
l0040A8D0:
	r4 = r6 - r4
	return
	// succ:  strlen_exit
l0040A8D4:
	r4 = r7 - r4
	return
	// succ:  strlen_exit
l0040A8D8:
	r7 = r4
	goto 0x0040A8AA<p32>
	goto l0040A8AA
	// succ:  l0040A8AA
l0040A8DC:
	r4 = 0<32>
	return
	// succ:  strlen_exit
strlen_exit:


// strncmp
// Return size: 0
define strncmp
strncmp_entry:
	sp = fp
	r25 = 0x40A8E0<32>
	// succ:  l0040A8E0
l0040A8E0:
	branch r6 == 0<32> l0040A91E
	// succ:  l0040A8E2 l0040A91E
l0040A8E2:
	r7 = CONVERT(Mem0[r4:byte], byte, word32)
	r9 = CONVERT(Mem0[r5:byte], byte, word32)
	branch r7 == 0<32> l0040A926
	// succ:  l0040A8EA l0040A926
l0040A8EA:
	branch 0<32> == r9 l0040A922
	// succ:  l0040A8EE l0040A922
l0040A8EE:
	r6 = r6 + 0xFFFFFFFF<32>
	branch r6 == 0<32> l0040A922
	// succ:  l0040A8F2 l0040A922
l0040A8F2:
	branch r9 != r7 l0040A922
	// succ:  l0040A8F6 l0040A922
l0040A8F6:
	r7 = 1<32>
	goto 0x0040A908<p32>
	goto l0040A908
	// succ:  l0040A908
l0040A8FA:
	r5 = r10
	branch 0<32> == r9 l0040A918
	// succ:  l0040A900 l0040A918
l0040A900:
	branch r6 == r7 l0040A918
	// succ:  l0040A902 l0040A918
l0040A902:
	r7 = r7 + 1<32>
	branch r8 != r9 l0040A918
	// succ:  l0040A908 l0040A918
l0040A908:
	r8 = CONVERT(Mem0[r4 + r7:byte], byte, word32)
	r10 = r5 + 1<32>
	r9 = CONVERT(Mem0[r5 + 1<32>:byte], byte, word32)
	branch 0<32> != r8 l0040A8FA
	// succ:  l0040A918 l0040A8FA
l0040A918:
	r4 = r8 - r9
	return
	// succ:  strncmp_exit
l0040A91E:
	r4 = 0<32>
	return
	// succ:  strncmp_exit
l0040A922:
	r8 = r7
	goto 0x0040A918<p32>
	goto l0040A918
	// succ:  l0040A918
l0040A926:
	r8 = 0<32>
	goto 0x0040A918<p32>
	goto l0040A918
	// succ:  l0040A918
strncmp_exit:


// strncpy
// Return size: 0
define strncpy
strncpy_entry:
	sp = fp
	r25 = 0x40A930<32>
	// succ:  l0040A930
l0040A930:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r16 = r4
	goto 0x0040DC90<p32>
	// succ:  l0040A934_thunk_stpncpy
l0040A934_thunk_stpncpy:
	call stpncpy (retsize: 0;)
	return
	// succ:  strncpy_exit
strncpy_exit:


// strnlen
// Return size: 0
define strnlen
strnlen_entry:
	sp = fp
	r25 = 0x40A940<32>
	// succ:  l0040A940
l0040A940:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 16<i32>
	r17 = r4
	r16 = r5
	r5 = 0<32>
	r6 = r16
	goto 0x0040A050<p32>
	// succ:  l0040A946_thunk_memchr
l0040A946_thunk_memchr:
	call memchr (retsize: 0;)
	return
	// succ:  strnlen_exit
strnlen_exit:


// strspn
// Return size: 0
define strspn
strspn_entry:
	sp = fp
	r25 = 0x40A960<32>
	// succ:  l0040A960
l0040A960:
	Mem0[sp + -4<i32>:word32] = r16
	sp = sp - 48<i32>
	r7 = CONVERT(Mem0[r5:byte], byte, word32)
	Mem0[sp:word32] = 0<32>
	Mem0[sp + 4<32>:word32] = 0<32>
	Mem0[sp + 8<32>:word32] = 0<32>
	Mem0[sp + 0xC<32>:word32] = 0<32>
	Mem0[sp + 0x10<32>:word32] = 0<32>
	Mem0[sp + 0x14<32>:word32] = 0<32>
	Mem0[sp + 0x18<32>:word32] = 0<32>
	Mem0[sp + 0x1C<32>:word32] = 0<32>
	branch 0<32> == r7 l0040AA18
	// succ:  l0040A97A l0040AA18
l0040A97A:
	r6 = r4
	r4 = CONVERT(Mem0[r5 + 1<32>:byte], byte, word32)
	r10 = r6
	r9 = CONVERT(Mem0[r6:byte], byte, word32)
	branch 0<32> == r4 l0040AA0A
	// succ:  l0040A988 l0040AA0A
l0040A988:
	r4 = r7 >>u 5<32>
	r16 = sp + 0x20<32>
	r4 = r16 + (r4 << 2<8>)
	r8 = 1<32>
	r7 = r8 << r7
	Mem0[r4 - 0x20<32>:word32] = r7
	goto 0x0040A9B2<p32>
	goto l0040A9B2
	// succ:  l0040A9B2
l0040A99E:
	r16 = sp + 0x20<32>
	r4 = r16 + (r4 << 2<8>)
	r8 = Mem0[r4 - 0x20<32>:word32]
	r7 = r7 | r8
	Mem0[r4 - 0x20<32>:word32] = r7
	branch r7 == 0<32> l0040A9C6
	// succ:  l0040A9B2 l0040A9C6
l0040A9B2:
	r5 = r5 + 1<32>
	r7 = 1<32>
	r8 = CONVERT(Mem0[r5:byte], byte, word32)
	r4 = r8 >>u 5<32>
	r7 = r7 << r8
	branch 0<32> != r8 l0040A99E
	// succ:  l0040A9C6 l0040A99E
l0040A9C6:
	branch 0<32> == r9 l0040AA18
	// succ:  l0040A9CA l0040AA18
l0040A9CA:
	r7 = r9 >>u 5<32>
	r5 = sp + 0x20<32>
	r7 = r5 + (r7 << 2<8>)
	r4 = 1<32>
	r9 = r4 << r9
	r4 = Mem0[r7 - 0x20<32>:word32]
	r4 = r9 & r4
	branch r4 != 0<32> l0040A9F4
	// succ:  l0040A9E4 l0040A9F4
l0040A9E4:
	goto 0x0040AA06<p32>
	goto l0040AA06
	// succ:  l0040AA06
l0040A9E6:
	r5 = sp + 0x20<32>
	r4 = r5 + (r4 << 2<8>)
	r5 = Mem0[r4 - 0x20<32>:word32]
	r7 = r7 & r5
	branch r7 == 0<32> l0040AA02
	// succ:  l0040A9F4 l0040AA02
l0040A9F4:
	r6 = r6 + 1<32>
	r7 = 1<32>
	r5 = CONVERT(Mem0[r6:byte], byte, word32)
	r4 = r5 >>u 5<32>
	r7 = r7 << r5
	branch r5 != 0<32> l0040A9E6
	// succ:  l0040AA02 l0040A9E6
l0040AA02:
	r4 = r6 - r10
	// succ:  l0040AA06
l0040AA06:
	r16 = Mem0[sp + 44<i32>:word32]
	sp = sp + 48<i32>
	return
	// succ:  strspn_exit
l0040AA0A:
	branch r9 != r7 l0040AA18
	// succ:  l0040AA0E l0040AA18
l0040AA0E:
	r6 = r6 + 1<32>
	r7 = CONVERT(Mem0[r6:byte], byte, word32)
	branch r7 == r9 l0040AA0E
	// succ:  l0040AA16 l0040AA0E
l0040AA16:
	goto 0x0040AA02<p32>
	goto l0040AA02
	// succ:  l0040AA02
l0040AA18:
	r4 = 0<32>
	r16 = Mem0[sp + 44<i32>:word32]
	sp = sp + 48<i32>
	return
	// succ:  strspn_exit
strspn_exit:


// twoway_strstr
// Return size: 0
define twoway_strstr
twoway_strstr_entry:
	sp = fp
	r25 = 0x40AA20<32>
	// succ:  l0040AA20
l0040AA20:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 1120<i32>
	r6 = CONVERT(Mem0[r5:byte], byte, word32)
	r22 = r4
	r19 = r5
	Mem0[sp + 0x10<32>:word32] = 0<32>
	Mem0[sp + 0x14<32>:word32] = 0<32>
	Mem0[sp + 0x18<32>:word32] = 0<32>
	Mem0[sp + 0x1C<32>:word32] = 0<32>
	Mem0[sp + 0x20<32>:word32] = 0<32>
	Mem0[sp + 0x24<32>:word32] = 0<32>
	Mem0[sp + 0x28<32>:word32] = 0<32>
	Mem0[sp + 0x2C<32>:word32] = 0<32>
	branch 0<32> == r6 l0040AC1C
	// succ:  l0040AA3C l0040AC1C
l0040AA3C:
	r7 = CONVERT(Mem0[r22:byte], byte, word32)
	r20 = 0<32>
	branch r7 != 0<32> l0040AA4E
	// succ:  l0040AA44 l0040AA4E
l0040AA44:
	goto 0x0040AB86<p32>
	goto l0040AB86
	// succ:  l0040AB86
l0040AA46:
	r7 = CONVERT(Mem0[r22 + r20:byte], byte, word32)
	branch 0<32> == r7 l0040AB86
	// succ:  l0040AA4E l0040AB86
l0040AA4E:
	r5 = r6 >>u 5<32>
	r7 = sp + 0xFFFFF430<32>
	r5 = r7 + (r5 << 2<8>)
	r20 = r20 + 1<32>
	r7 = 1<32>
	r4 = sp + 0xFFFFF430<32>
	r16 = Mem0[r5 + 0xBE0<32>:word32]
	r7 = r7 << r6
	r4 = r4 + (r6 << 2<8>)
	r6 = CONVERT(Mem0[r19 + r20:byte], byte, word32)
	r7 = r7 | r16
	Mem0[r4 + 0xC00<32>:byte] = SLICE(r20, byte, 0)
	Mem0[r5 + 0xBE0<32>:byte] = SLICE(r7, byte, 0)
	branch r6 != 0<32> l0040AA46
	// succ:  l0040AA7C l0040AA46
l0040AA7C:
	r21 = 1<32>
	r6 = 1<32>
	r16 = 0<32>
	r18 = 0xFFFFFFFF<32>
	// succ:  l0040AA86
l0040AA86:
	r7 = r16 + r6
	r5 = r19 + r18
	branch r7 >=u r20 l0040AAAE
	// succ:  l0040AA8E l0040AAAE
l0040AA8E:
	r5 = CONVERT(Mem0[r5 + r6:byte], byte, word32)
	r4 = CONVERT(Mem0[r19 + r7:byte], byte, word32)
	branch r4 == r5 l0040AB9A
	// succ:  l0040AA9A l0040AB9A
l0040AA9A:
	branch r4 >=u r5 l0040AB8E
	// succ:  l0040AA9E l0040AB8E
l0040AA9E:
	r21 = r7 - r18
	// succ:  l0040AAA2
l0040AAA2:
	r16 = r7
	r6 = 1<32>
	r7 = r16 + r6
	r5 = r19 + r18
	branch r7 <u r20 l0040AA8E
	// succ:  l0040AAAE l0040AA8E
l0040AAAE:
	r8 = r18 + 1<32>
	r17 = 1<32>
	r6 = 1<32>
	r16 = 0<32>
	r23 = 0xFFFFFFFF<32>
	// succ:  l0040AABC
l0040AABC:
	r7 = r16 + r6
	r5 = r19 + r23
	branch r7 >=u r20 l0040AAE8
	// succ:  l0040AAC6 l0040AAE8
l0040AAC6:
	r4 = CONVERT(Mem0[r5 + r6:byte], byte, word32)
	r5 = CONVERT(Mem0[r19 + r7:byte], byte, word32)
	branch r4 == r5 l0040ABAC
	// succ:  l0040AAD2 l0040ABAC
l0040AAD2:
	branch r4 >=u r5 l0040ABA2
	// succ:  l0040AAD6 l0040ABA2
l0040AAD6:
	r17 = r7 - r23
	// succ:  l0040AADA
l0040AADA:
	r16 = r7
	r6 = 1<32>
	r7 = r16 + r6
	r5 = r19 + r23
	branch r7 <u r20 l0040AAC6
	// succ:  l0040AAE8 l0040AAC6
l0040AAE8:
	r30 = r23 + 1<32>
	branch r8 <u r30 l0040AAF6
	// succ:  l0040AAF0 l0040AAF6
l0040AAF0:
	r30 = r8
	r23 = r18
	r17 = r21
	// succ:  l0040AAF6
l0040AAF6:
	r6 = r30
	r5 = r19 + r17
	r4 = r19
	call memcmp (retsize: 0;)
	branch 0<32> == r4 l0040AC14
	// succ:  l0040AB02 l0040AC14
l0040AB02:
	r7 = r20 + 0xFFFFFFFF<32>
	Mem0[sp + 0xC<32>:word32] = 0<32>
	r7 = r7 - r23
	r17 = CONVERT(r7 <u r23, bool, word32)
	branch r17 == 0<32> l0040AB14
	// succ:  l0040AB10_1 l0040AB14
l0040AB10_1:
	r7 = r23
	// succ:  l0040AB14
l0040AB14:
	r17 = r7 + 1<32>
	// succ:  l0040AB18
l0040AB18:
	r16 = r22
	r21 = 0<32>
	// succ:  l0040AB1C
l0040AB1C:
	r7 = r22 - r16
	branch r7 <u r20 l0040AB6E
	// succ:  l0040AB24 l0040AB6E
l0040AB24:
	r4 = r16 + r20
	r18 = sp + 0xFFFFF430<32>
	r6 = CONVERT(Mem0[r4 - 1<32>:byte], byte, word32)
	r7 = 1<32>
	r5 = r6 >>u 5<32>
	r7 = r7 << r6
	r5 = r18 + (r5 << 2<8>)
	r5 = Mem0[r5 + 0xBE0<32>:word32]
	r7 = r7 & r5
	branch r7 == 0<32> l0040ABB4
	// succ:  l0040AB44 l0040ABB4
l0040AB44:
	r6 = r18 + (r6 << 2<8>)
	r7 = Mem0[r6 + 0xC00<32>:word32]
	r7 = r20 - r7
	branch r7 == 0<32> l0040ABBA
	// succ:  l0040AB52 l0040ABBA
l0040AB52:
	r17 = Mem0[sp + 0xC<32>:word32]
	branch r6 == 0<32> l0040AB62
	// succ:  l0040AB56 l0040AB62
l0040AB56:
	branch 0<32> == r21 l0040AB62
	// succ:  l0040AB5A l0040AB62
l0040AB5A:
	branch r7 >=u r17 l0040AB62
	// succ:  l0040AB5E l0040AB62
l0040AB5E:
	r7 = r20 - r17
	// succ:  l0040AB62
l0040AB62:
	r16 = r16 + r7
	r21 = 0<32>
	r7 = r22 - r16
	branch r7 >=u r20 l0040AB24
	// succ:  l0040AB6E l0040AB24
l0040AB6E:
	r18 = r20 | 0x3F<32>
	r5 = 0<32>
	r6 = r18
	r4 = r22
	call memchr (retsize: 0;)
	branch 0<32> == r4 l0040AC10
	// succ:  l0040AB7C l0040AC10
l0040AB7C:
	r7 = r4 - r16
	branch r7 <u r20 l0040AB86
	// succ:  l0040AB82 l0040AB86
l0040AB82:
	r22 = r4
	goto 0x0040AB24<p32>
	goto l0040AB24
	// succ:  l0040AB24
l0040AB86:
	r16 = 0<32>
	// succ:  l0040AB88
l0040AB88:
	r4 = r16
	r30 = Mem0[sp + 1116<i32>:word32]
	ra = Mem0[sp + 1112<i32>:word32]
	r16 = Mem0[sp + 1108<i32>:word32]
	r17 = Mem0[sp + 1104<i32>:word32]
	r18 = Mem0[sp + 1100<i32>:word32]
	r19 = Mem0[sp + 1096<i32>:word32]
	r20 = Mem0[sp + 1092<i32>:word32]
	r21 = Mem0[sp + 1088<i32>:word32]
	r22 = Mem0[sp + 1084<i32>:word32]
	r23 = Mem0[sp + 1080<i32>:word32]
	sp = sp + 1120<i32>
	return
	// succ:  twoway_strstr_exit
l0040AB8E:
	r18 = r16
	r21 = 1<32>
	r16 = r16 + 1<32>
	r6 = 1<32>
	goto 0x0040AA86<p32>
	goto l0040AA86
	// succ:  l0040AA86
l0040AB9A:
	branch r6 == r21 l0040AAA2
	// succ:  l0040AB9E l0040AAA2
l0040AB9E:
	r6 = r6 + 1<32>
	goto 0x0040AA86<p32>
	goto l0040AA86
	// succ:  l0040AA86
l0040ABA2:
	r23 = r16
	r17 = 1<32>
	r16 = r16 + 1<32>
	r6 = 1<32>
	goto 0x0040AABC<p32>
	goto l0040AABC
	// succ:  l0040AABC
l0040ABAC:
	branch r17 == r6 l0040AADA
	// succ:  l0040ABB0 l0040AADA
l0040ABB0:
	r6 = r6 + 1<32>
	goto 0x0040AABC<p32>
	goto l0040AABC
	// succ:  l0040AABC
l0040ABB4:
	r16 = r4
	r21 = 0<32>
	goto 0x0040AB1C<p32>
	goto l0040AB1C
	// succ:  l0040AB1C
l0040ABBA:
	r7 = CONVERT(r21 <u r30, bool, word32)
	r6 = r30
	branch r7 != 0<32> l0040ABC4
	// succ:  l0040ABC0_1 l0040ABC4
l0040ABC0_1:
	r6 = r21
	// succ:  l0040ABC4
l0040ABC4:
	r7 = r6
	r6 = CONVERT(Mem0[r19 + r6:byte], byte, word32)
	branch r6 != 0<32> l0040ABD6
	// succ:  l0040ABCC l0040ABD6
l0040ABCC:
	goto 0x0040ABE8<p32>
	goto l0040ABE8
	// succ:  l0040ABE8
l0040ABCE:
	r7 = r7 + 1<32>
	r6 = CONVERT(Mem0[r19 + r7:byte], byte, word32)
	branch r6 == 0<32> l0040ABE8
	// succ:  l0040ABD6 l0040ABE8
l0040ABD6:
	r5 = CONVERT(Mem0[r16 + r7:byte], byte, word32)
	branch r5 == r6 l0040ABCE
	// succ:  l0040ABDE l0040ABCE
l0040ABDE:
	r7 = r7 - r23
	r21 = 0<32>
	r16 = r16 + r7
	goto 0x0040AB1C<p32>
	goto l0040AB1C
	// succ:  l0040AB1C
l0040ABE8:
	branch r21 >=u r30 l0040AB88
	// succ:  l0040ABEC l0040AB88
l0040ABEC:
	r5 = CONVERT(Mem0[r16 + r23:byte], byte, word32)
	r7 = r23
	r6 = CONVERT(Mem0[r19 + r23:byte], byte, word32)
	branch r5 != r6 l0040AC0A
	// succ:  l0040ABF8 l0040AC0A
l0040ABF8:
	branch r21 >=u r7 l0040AB88
	// succ:  l0040ABFC l0040AB88
l0040ABFC:
	r7 = r7 + 0xFFFFFFFF<32>
	r5 = CONVERT(Mem0[r19 + r7:byte], byte, word32)
	r6 = CONVERT(Mem0[r16 + r7:byte], byte, word32)
	branch r5 == r6 l0040ABF8
	// succ:  l0040AC0A l0040ABF8
l0040AC0A:
	r16 = r16 + r17
	r5 = Mem0[sp + 0xC<32>:word32]
	goto 0x0040AB1C<p32>
	goto l0040AB1C
	// succ:  l0040AB1C
l0040AC10:
	r22 = r22 + r18
	goto 0x0040AB24<p32>
	goto l0040AB24
	// succ:  l0040AB24
l0040AC14:
	r7 = r20 - r17
	Mem0[sp + 0xC<32>:word32] = r7
	goto 0x0040AB18<p32>
	goto l0040AB18
	// succ:  l0040AB18
l0040AC1C:
	r20 = 0<32>
	r30 = 0<32>
	r23 = 0xFFFFFFFF<32>
	r17 = 1<32>
	goto 0x0040AAF6<p32>
	goto l0040AAF6
	// succ:  l0040AAF6
twoway_strstr_exit:


// strstr
// Return size: 0
define strstr
strstr_entry:
	sp = fp
	r25 = 0x40AC28<32>
	// succ:  l0040AC28
l0040AC28:
	r6 = CONVERT(Mem0[r5:byte], byte, word32)
	branch r6 != 0<32> l0040AC2E
	// succ:  l0040AC2C l0040AC2E
l0040AC2C:
	return
	// succ:  strstr_exit
l0040AC2E:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r16 = r5
	r5 = r6
	call strchr (retsize: 0;)
	r7 = r4
	branch r4 == 0<32> l0040ACB2
	// succ:  l0040AC3A l0040ACB2
l0040AC3A:
	r5 = CONVERT(Mem0[r16 + 1<32>:byte], byte, word32)
	branch r5 == 0<32> l0040ACB6
	// succ:  l0040AC3E l0040ACB6
l0040AC3E:
	r8 = CONVERT(Mem0[r4 + 1<32>:byte], byte, word32)
	branch 0<32> == r8 l0040ACB2
	// succ:  l0040AC46 l0040ACB2
l0040AC46:
	r9 = CONVERT(Mem0[r16 + 2<32>:byte], byte, word32)
	branch 0<32> == r9 l0040ACB8
	// succ:  l0040AC4E l0040ACB8
l0040AC4E:
	r10 = CONVERT(Mem0[r4 + 2<32>:byte], byte, word32)
	branch 0<32> == r10 l0040ACB2
	// succ:  l0040AC56 l0040ACB2
l0040AC56:
	r11 = CONVERT(Mem0[r16 + 3<32>:byte], byte, word32)
	branch 0<32> == r11 l0040AC76
	// succ:  l0040AC5E l0040AC76
l0040AC5E:
	r2 = CONVERT(Mem0[r4 + 3<32>:byte], byte, word32)
	branch 0<32> == r2 l0040ACB2
	// succ:  l0040AC66 l0040ACB2
l0040AC66:
	r6 = CONVERT(Mem0[r16 + 4<32>:byte], byte, word32)
	branch r6 == 0<32> l0040ACDC
	// succ:  l0040AC6C l0040ACDC
l0040AC6C:
	r5 = r16
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	goto 0x0040AA20<p32>
	// succ:  l0040AC72_thunk_twoway_strstr
l0040AC72_thunk_twoway_strstr:
	call twoway_strstr (retsize: 0;)
	return
	// succ:  strstr_exit
l0040AC76:
	r4 = CONVERT(Mem0[r16:byte], byte, word32)
	r5 = r5 << 0x10<32>
	r6 = CONVERT(Mem0[r7:byte], byte, word32)
	r8 = r8 << 0x10<32>
	r4 = r4 << 0x18<32>
	r9 = r9 << 8<32>
	r6 = r6 << 0x18<32>
	r5 = r5 | r4
	r6 = r6 | r8
	r10 = r10 << 8<32>
	r9 = r5 | r9
	r6 = r6 | r10
	r4 = r7 + 2<32>
	// succ:  l0040ACA4
l0040ACA4:
	branch r9 == r6 l0040AD2A
	// succ:  l0040ACA8 l0040AD2A
l0040ACA8:
	r4 = r4 + 1<32>
	r7 = CONVERT(Mem0[r4:byte], byte, word32)
	r6 = r6 | r7
	r6 = r6 << 8<32>
	branch r7 != 0<32> l0040ACA4
	// succ:  l0040ACB2 l0040ACA4
l0040ACB2:
	r4 = 0<32>
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  strstr_exit
l0040ACB6:
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  strstr_exit
l0040ACB8:
	r6 = CONVERT(Mem0[r16:byte], byte, word32)
	r4 = r4 + 1<32>
	r7 = CONVERT(Mem0[r7:byte], byte, word32)
	r6 = r6 << 8<32>
	r7 = r7 << 8<32>
	r5 = r5 | r6
	r7 = r7 | r8
	// succ:  l0040ACC8
l0040ACC8:
	branch r5 == r7 l0040AD22
	// succ:  l0040ACCC l0040AD22
l0040ACCC:
	r4 = r4 + 1<32>
	r7 = r7 << 8<32>
	r6 = CONVERT(Mem0[r4:byte], byte, word32)
	r7 = r7 | r6
	r7 = r7 & 0xFFFF<32>
	branch r6 != 0<32> l0040ACC8
	// succ:  l0040ACD8 l0040ACC8
l0040ACD8:
	r4 = 0<32>
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  strstr_exit
l0040ACDC:
	r4 = CONVERT(Mem0[r16:byte], byte, word32)
	r5 = r5 << 0x10<32>
	r6 = CONVERT(Mem0[r7:byte], byte, word32)
	r8 = r8 << 0x10<32>
	r4 = r4 << 0x18<32>
	r9 = r9 << 8<32>
	r6 = r6 << 0x18<32>
	r5 = r5 | r4
	r6 = r6 | r8
	r5 = r5 | r11
	r6 = r6 | r2
	r10 = r10 << 8<32>
	r5 = r5 | r9
	r6 = r6 | r10
	r4 = r7 + 3<32>
	// succ:  l0040AD12
l0040AD12:
	branch r5 == r6 l0040AD26
	// succ:  l0040AD14 l0040AD26
l0040AD14:
	r4 = r4 + 1<32>
	r6 = r6 << 8<32>
	r7 = CONVERT(Mem0[r4:byte], byte, word32)
	r6 = r6 | r7
	branch r7 != 0<32> l0040AD12
	// succ:  l0040AD1E l0040AD12
l0040AD1E:
	r4 = 0<32>
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  strstr_exit
l0040AD22:
	r4 = r4 + 0xFFFFFFFF<32>
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  strstr_exit
l0040AD26:
	r4 = r4 + 0xFFFFFFFD<32>
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  strstr_exit
l0040AD2A:
	r4 = r4 + 0xFFFFFFFE<32>
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  strstr_exit
strstr_exit:


// __lock
// Return size: 0
define __lock
__lock_entry:
	sp = fp
	r25 = 0x40AD30<32>
	// succ:  l0040AD30
l0040AD30:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r7 = 0x0042F8B3<p32>
	r16 = r4
	r7 = Mem0[r7 + 0xC<32>:word32]
	branch r7 != 0<32> l0040AD46
	// succ:  l0040AD3C l0040AD46
l0040AD3C:
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  __lock_exit
l0040AD3E:
	r6 = r7
	r5 = r16 + 4<32>
	r4 = r16
	call __wait (retsize: 0;)
	// succ:  l0040AD46
l0040AD46:
	__sync(0<32>)
	// succ:  l0040AD4A
l0040AD4A:
	r5 = __load_linked_32(Mem0[r16:word32])
	r7 = 1<32>
	r6 = r7
	r6 = __store_conditional_32(Mem0[r16:word32], r6)
	branch r6 == 0<32> l0040AD4A
	// succ:  l0040AD58 l0040AD4A
l0040AD58:
	__sync(0<32>)
	branch r5 != 0<32> l0040AD3E
	// succ:  l0040AD5E l0040AD3E
l0040AD5E:
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  __lock_exit
__lock_exit:


// __unlock
// Return size: 0
define __unlock
__unlock_entry:
	sp = fp
	r25 = 0x40AD60<32>
	// succ:  l0040AD60
l0040AD60:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r7 = Mem0[r4:word32]
	r16 = r4
	branch r7 == 0<32> l0040AD98
	// succ:  l0040AD68 l0040AD98
l0040AD68:
	__sync(0<32>)
	Mem0[sp:word32] = 0<32>
	__sync(0<32>)
	r7 = Mem0[r4 + 4<32>:word32]
	branch r7 == 0<32> l0040AD98
	// succ:  l0040AD76 l0040AD98
l0040AD76:
	r7 = 1<32>
	r5 = r4
	r6 = 0x81<32>
	r4 = 0x62<32>
	goto 0x00404A50<p32>
	// succ:  l0040AD80_thunk___syscall
l0040AD80_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  __unlock_exit
l0040AD98:
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  __unlock_exit
__unlock_exit:


// __syscall_cp_c
// Return size: 0
define __syscall_cp_c
__syscall_cp_c_entry:
	sp = fp
	r25 = 0x40ADA0<32>
	// succ:  l0040ADA0
l0040ADA0:
	goto 0x00404A50<p32>
	// succ:  l0040ADA0_thunk___syscall
l0040ADA0_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  __syscall_cp_c_exit
__syscall_cp_c_exit:


// __syscall_cp
// Return size: 0
define __syscall_cp
__syscall_cp_entry:
	sp = fp
	r25 = 0x40ADA4<32>
	// succ:  l0040ADA4
l0040ADA4:
	goto 0x0040ADA0<p32>
	// succ:  l0040ADA4_thunk___syscall_cp_c
l0040ADA4_thunk___syscall_cp_c:
	call __syscall_cp_c (retsize: 0;)
	return
	// succ:  __syscall_cp_exit
__syscall_cp_exit:


// __wait
// Return size: 0
define __wait
__wait_entry:
	sp = fp
	r25 = 0x40ADB0<32>
	// succ:  l0040ADB0
l0040ADB0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	sp = sp - 32<i32>
	r19 = 0x80<32>
	r17 = r6
	branch r7 != 0<32> l0040ADBC
	// succ:  l0040ADB8_1 l0040ADBC
l0040ADB8_1:
	r19 = 0<32>
	// succ:  l0040ADBC
l0040ADBC:
	r7 = 0x65<32>
	r18 = r4
	r16 = r5
	goto 0x0040ADCC<p32>
	goto l0040ADCC
	// succ:  l0040ADCC
l0040ADC2:
	r6 = Mem0[r18:word32]
	branch r6 != r17 l0040AE08
	// succ:  l0040ADC8 l0040AE08
l0040ADC8:
	__sync(0<32>)
	// succ:  l0040ADCC
l0040ADCC:
	r7 = r7 + 0xFFFFFFFF<32>
	branch r7 == 0<32> l0040ADEC
	// succ:  l0040ADD0 l0040ADEC
l0040ADD0:
	branch r16 == 0<32> l0040ADC2
	// succ:  l0040ADD2 l0040ADC2
l0040ADD2:
	r6 = Mem0[r16:word32]
	branch r6 == 0<32> l0040ADC2
	// succ:  l0040ADD6 l0040ADC2
l0040ADD6:
	__sync(0<32>)
	// succ:  l0040ADDA
l0040ADDA:
	r7 = __load_linked_32(Mem0[r16:word32])
	r7 = r7 + 1<32>
	r7 = __store_conditional_32(Mem0[r16:word32], r7)
	branch r7 == 0<32> l0040ADDA
	// succ:  l0040ADE6 l0040ADDA
l0040ADE6:
	__sync(0<32>)
	goto 0x0040ADEE<p32>
	goto l0040ADEE
	// succ:  l0040ADEE
l0040ADEC:
	branch r16 != 0<32> l0040ADD6
	// succ:  l0040ADEE l0040ADD6
l0040ADEE:
	r7 = Mem0[r18:word32]
	branch r17 == r7 l0040AE0A
	// succ:  l0040ADF2 l0040AE0A
l0040ADF2:
	branch r16 == 0<32> l0040AE08
	// succ:  l0040ADF4 l0040AE08
l0040ADF4:
	__sync(0<32>)
	// succ:  l0040ADF8
l0040ADF8:
	r7 = __load_linked_32(Mem0[r16:word32])
	r7 = r7 + 0xFFFFFFFF<32>
	r7 = __store_conditional_32(Mem0[r16:word32], r7)
	branch r7 == 0<32> l0040ADF8
	// succ:  l0040AE04 l0040ADF8
l0040AE04:
	__sync(0<32>)
	// succ:  l0040AE08
l0040AE08:
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  __wait_exit
l0040AE0A:
	r7 = r17
	r8 = 0<32>
	r5 = r18
	r6 = r19
	r4 = 0x62<32>
	goto 0x00404A50<p32>
	// succ:  l0040AE10_thunk___syscall
l0040AE10_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  __wait_exit
__wait_exit:


// __do_cleanup_push
// Return size: 0
define __do_cleanup_push
__do_cleanup_push_entry:
	sp = fp
	r25 = 0x40AE30<32>
	// succ:  l0040AE30
l0040AE30:
	return
	// succ:  __do_cleanup_push_exit
__do_cleanup_push_exit:


// _pthread_cleanup_push
// Return size: 0
define _pthread_cleanup_push
_pthread_cleanup_push_entry:
	sp = fp
	r25 = 0x40AE32<32>
	// succ:  l0040AE32
l0040AE32:
	Mem0[r4 + 0<i32>:word32] = r5
	Mem0[r4 + 4<i32>:word32] = r6
	goto 0x0040AE30<p32>
	// succ:  l0040AE36_thunk___do_cleanup_push
l0040AE36_thunk___do_cleanup_push:
	call __do_cleanup_push (retsize: 0;)
	return
	// succ:  _pthread_cleanup_push_exit
_pthread_cleanup_push_exit:


// _pthread_cleanup_pop
// Return size: 0
define _pthread_cleanup_pop
_pthread_cleanup_pop_entry:
	sp = fp
	r25 = 0x40AE3A<32>
	// succ:  l0040AE3A
l0040AE3A:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 16<i32>
	r16 = r4
	r17 = r5
	goto 0x0040AE30<p32>
	// succ:  l0040AE3E_thunk___do_cleanup_push
l0040AE3E_thunk___do_cleanup_push:
	call __do_cleanup_push (retsize: 0;)
	return
	// succ:  _pthread_cleanup_pop_exit
_pthread_cleanup_pop_exit:


// __pthread_setcancelstate
// Return size: 0
define __pthread_setcancelstate
__pthread_setcancelstate_entry:
	sp = fp
	r25 = 0x40AE50<32>
	// succ:  l0040AE50
l0040AE50:
	r7 = 0x16<32>
	branch r4 >=u 3<32> l0040AE68
	// succ:  l0040AE56 l0040AE68
l0040AE56:
	r3 = __read_hardware_register(sp)
	branch r5 == 0<32> l0040AE62
	// succ:  l0040AE5C l0040AE62
l0040AE5C:
	r7 = Mem0[r3 - 0x80<32>:word32]
	Mem0[sp + 0x40<32>:word32] = r7
	// succ:  l0040AE62
l0040AE62:
	r7 = 0<32>
	Mem0[r3 - 0x80<32>:word32] = r4
	// succ:  l0040AE68
l0040AE68:
	r4 = r7
	return
	// succ:  __pthread_setcancelstate_exit
__pthread_setcancelstate_exit:


// pthread_sigmask
// Return size: 0
define pthread_sigmask
pthread_sigmask_entry:
	sp = fp
	r25 = 0x40AE70<32>
	// succ:  l0040AE70
l0040AE70:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r9 = r4
	r16 = r6
	r4 = 0x16<32>
	branch r9 >=u 3<32> l0040AEA6
	// succ:  l0040AE7C l0040AEA6
l0040AE7C:
	r6 = r5
	r7 = r16
	r8 = 8<32>
	r4 = 0x87<32>
	r5 = r9
	call __syscall (retsize: 0;)
	branch r4 == 0<32> l0040AE92
	// succ:  l0040AE8C l0040AE92
l0040AE8C:
	r4 = -r4
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  pthread_sigmask_exit
l0040AE92:
	r4 = 0<32>
	branch r16 == 0<32> l0040AEA6
	// succ:  l0040AE96 l0040AEA6
l0040AE96:
	r7 = Mem0[r16:word32]
	r7 = __ext(r7, 0<32>, 0x1F<32>)
	Mem0[sp:word32] = r7
	r7 = Mem0[r16 + 4<32>:word32]
	r7 = __ins(r7, 0<32>, 0<32>, 1<32>)
	Mem0[sp + 4<32>:word32] = r7
	// succ:  l0040AEA6
l0040AEA6:
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  pthread_sigmask_exit
pthread_sigmask_exit:


// cgt_init
// Return size: 0
define cgt_init
cgt_init_entry:
	sp = fp
	r25 = 0x40AEB0<32>
	// succ:  l0040AEB0
l0040AEB0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 16<i32>
	r16 = r4
	r17 = r5
	r5 = 0x0040E772<p32>
	r4 = 0x0040E780<p32>
	goto 0x0040CC50<p32>
	// succ:  l0040AEBC_thunk___vdsosym
l0040AEBC_thunk___vdsosym:
	call __vdsosym (retsize: 0;)
	return
	// succ:  cgt_init_exit
cgt_init_exit:


// __clock_gettime
// Return size: 0
define __clock_gettime
__clock_gettime_entry:
	sp = fp
	r25 = 0x40AEF4<32>
	// succ:  l0040AEF4
l0040AEF4:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 16<i32>
	r7 = Mem0[0x004303A0<p32>:word32]
	r17 = r4
	r16 = r5
	branch r7 == 0<32> l0040AF12
	// succ:  l0040AF00 l0040AF12
l0040AF00:
	call r7 (retsize: 0;)
	branch r4 == 0<32> l0040AF3C
	// succ:  l0040AF04 l0040AF3C
l0040AF04:
	r6 = 0xFFFFFFEA<32>
	branch r4 != r6 l0040AF12
	// succ:  l0040AF0A l0040AF12
l0040AF0A:
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	r17 = Mem0[sp + 4<i32>:word32]
	sp = sp + 16<i32>
	goto 0x0040CC30<p32>
	// succ:  l0040AF0E_thunk___syscall_ret
l0040AF0E_thunk___syscall_ret:
	call __syscall_ret (retsize: 0;)
	return
	// succ:  __clock_gettime_exit
l0040AF12:
	r5 = r17
	r6 = r16
	r4 = 0x71<32>
	goto 0x00404A50<p32>
	// succ:  l0040AF16_thunk___syscall
l0040AF16_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  __clock_gettime_exit
l0040AF3C:
	r4 = 0<32>
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	r17 = Mem0[sp + 4<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  __clock_gettime_exit
__clock_gettime_exit:


// gettimeofday
// Return size: 0
define gettimeofday
gettimeofday_entry:
	sp = fp
	r25 = 0x40AF40<32>
	// succ:  l0040AF40
l0040AF40:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 32<i32>
	r16 = r4
	branch r4 == 0<32> l0040AF5E
	// succ:  l0040AF46 l0040AF5E
l0040AF46:
	r5 = sp + 8<32>
	r4 = 0<32>
	goto 0x0040AEF4<p32>
	// succ:  l0040AF4A_thunk___clock_gettime
l0040AF4A_thunk___clock_gettime:
	call __clock_gettime (retsize: 0;)
	return
	// succ:  gettimeofday_exit
l0040AF5E:
	r4 = 0<32>
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  gettimeofday_exit
gettimeofday_exit:


// dummy
// Return size: 0
define dummy
dummy_entry:
	sp = fp
	r25 = 0x40AF70<32>
	// succ:  l0040AF70
l0040AF70:
	return
	// succ:  dummy_exit
dummy_exit:


// close
// Return size: 0
define close
close_entry:
	sp = fp
	r25 = 0x40AF72<32>
	// succ:  l0040AF72
l0040AF72:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	goto 0x004080E0<p32>
	// succ:  l0040AF74_thunk___aio_close
l0040AF74_thunk___aio_close:
	call __aio_close (retsize: 0;)
	return
	// succ:  close_exit
close_exit:


// geteuid
// Return size: 0
define geteuid
geteuid_entry:
	sp = fp
	r25 = 0x40AFA0<32>
	// succ:  l0040AFA0
l0040AFA0:
	r4 = 0xAF<32>
	goto 0x00404A50<p32>
	// succ:  l0040AFA4_thunk___syscall
l0040AFA4_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  geteuid_exit
geteuid_exit:


// getpid
// Return size: 0
define getpid
getpid_entry:
	sp = fp
	r25 = 0x40AFB0<32>
	// succ:  l0040AFB0
l0040AFB0:
	r4 = 0xAC<32>
	goto 0x00404A50<p32>
	// succ:  l0040AFB4_thunk___syscall
l0040AFB4_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  getpid_exit
getpid_exit:


// getuid
// Return size: 0
define getuid
getuid_entry:
	sp = fp
	r25 = 0x40AFC0<32>
	// succ:  l0040AFC0
l0040AFC0:
	r4 = 0xAE<32>
	goto 0x00404A50<p32>
	// succ:  l0040AFC4_thunk___syscall
l0040AFC4_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  getuid_exit
getuid_exit:


// isatty
// Return size: 0
define isatty
isatty_entry:
	sp = fp
	r25 = 0x40AFD0<32>
	// succ:  l0040AFD0
l0040AFD0:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 32<i32>
	r6 = 0x40087468<32>
	r5 = r4
	r7 = sp + 8<32>
	r4 = 0x1D<32>
	goto 0x00404A50<p32>
	// succ:  l0040AFDE_thunk___syscall
l0040AFDE_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  isatty_exit
isatty_exit:


// seteuid
// Return size: 0
define seteuid
seteuid_entry:
	sp = fp
	r25 = 0x40AFF0<32>
	// succ:  l0040AFF0
l0040AFF0:
	r7 = 0xFFFFFFFF<32>
	r5 = r7
	r6 = r4
	r4 = 0x93<32>
	goto 0x0040B04C<p32>
	// succ:  l0040AFF8_thunk___setxid
l0040AFF8_thunk___setxid:
	call __setxid (retsize: 0;)
	return
	// succ:  seteuid_exit
seteuid_exit:


// setuid
// Return size: 0
define setuid
setuid_entry:
	sp = fp
	r25 = 0x40B000<32>
	// succ:  l0040B000
l0040B000:
	r5 = r4
	r4 = 0x92<32>
	r6 = 0<32>
	r7 = 0<32>
	goto 0x0040B04C<p32>
	// succ:  l0040B008_thunk___setxid
l0040B008_thunk___setxid:
	call __setxid (retsize: 0;)
	return
	// succ:  setuid_exit
setuid_exit:


// do_setxid
// Return size: 0
define do_setxid
do_setxid_entry:
	sp = fp
	r25 = 0x40B010<32>
	// succ:  l0040B010
l0040B010:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 16<i32>
	r7 = Mem0[r4 + 0x10<32>:word32]
	r16 = r4
	branch 0<32> < r7 l0040B046
	// succ:  l0040B01A l0040B046
l0040B01A:
	r5 = Mem0[r4 + 0<i32>:word32]
	r6 = Mem0[r4 + 4<i32>:word32]
	r7 = Mem0[r4 + 8<32>:word32]
	r4 = Mem0[r4 + 0xC<32>:word32]
	goto 0x0040B048<p32>
	goto l0040B048
	// succ:  l0040B048
l0040B046:
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	r17 = Mem0[sp + 4<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  do_setxid_exit
l0040B048:
	goto 0x00404A50<p32>
	// succ:  l0040B048_thunk___syscall
l0040B048_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  do_setxid_exit
do_setxid_exit:


// __setxid
// Return size: 0
define __setxid
__setxid_entry:
	sp = fp
	r25 = 0x40B04C<32>
	// succ:  l0040B04C
l0040B04C:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 48<i32>
	r16 = 0xFFFFFFFF<32>
	Mem0[sp + 12<i32>:word32] = r5
	Mem0[sp + 16<i32>:word32] = r6
	Mem0[sp + 0x18<32>:word32] = r4
	r5 = sp + 0xC<32>
	r4 = 0x0040B036<p32>
	Mem0[sp + 0x14<32>:word32] = r7
	Mem0[sp + 0x1C<32>:word32] = r16
	goto 0x0040DDF2<p32>
	// succ:  l0040B060_thunk___synccall
l0040B060_thunk___synccall:
	call __synccall (retsize: 0;)
	return
	// succ:  __setxid_exit
__setxid_exit:


// write
// Return size: 0
define write
write_entry:
	sp = fp
	r25 = 0x40B080<32>
	// succ:  l0040B080
l0040B080:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r10 = 0<32>
	r9 = 0<32>
	r7 = r6
	r8 = 0<32>
	r6 = r5
	r5 = r4
	r4 = 0x40<32>
	goto 0x0040ADA4<p32>
	// succ:  l0040B08E_thunk___syscall_cp
l0040B08E_thunk___syscall_cp:
	call __syscall_cp (retsize: 0;)
	return
	// succ:  write_exit
write_exit:


// isalnum
// Return size: 0
define isalnum
isalnum_entry:
	sp = fp
	r25 = 0x40B0A0<32>
	// succ:  l0040B0A0
l0040B0A0:
	r7 = r4 | 0x20<32>
	r6 = 1<32>
	r7 = r7 + 0xFFFFFF9F<32>
	branch r7 <u 0x1A<32> l0040B0B6
	// succ:  l0040B0AE l0040B0B6
l0040B0AE:
	r4 = r4 + 0xFFFFFFD0<32>
	r6 = CONVERT(r4 <u 0xA<32>, bool, word32)
	// succ:  l0040B0B6
l0040B0B6:
	r4 = r6
	return
	// succ:  isalnum_exit
isalnum_exit:


// isalnum_l
// Return size: 0
define isalnum_l
isalnum_l_entry:
	sp = fp
	r25 = 0x40B0BA<32>
	// succ:  l0040B0BA
l0040B0BA:
	goto 0x0040B0A0<p32>
	// succ:  l0040B0BA_thunk_isalnum
l0040B0BA_thunk_isalnum:
	call isalnum (retsize: 0;)
	return
	// succ:  isalnum_l_exit
isalnum_l_exit:


// __init_tp
// Return size: 0
define __init_tp
__init_tp_entry:
	sp = fp
	r25 = 0x40B0C0<32>
	// succ:  l0040B0C0
l0040B0C0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r16 = r4
	r4 = r4 + 0xB0<32>
	Mem0[r16:word32] = r16
	goto 0x0040DD30<p32>
	// succ:  l0040B0CA_thunk___set_thread_area
l0040B0CA_thunk___set_thread_area:
	call __set_thread_area (retsize: 0;)
	return
	// succ:  __init_tp_exit
__init_tp_exit:


// __copy_tls
// Return size: 0
define __copy_tls
__copy_tls_entry:
	sp = fp
	r25 = 0x40B100<32>
	// succ:  l0040B100
l0040B100:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	sp = sp - 32<i32>
	r7 = 0x0042FA9B<p32>
	r16 = Mem0[r7 + 0x20<32>:word32]
	r18 = r7
	r6 = Mem0[r7 + 0x18<32>:word32]
	r17 = Mem0[r7 + 0x1C<32>:word32]
	r16 = ~r16
	r16 = r6 + (r16 << 2<8>)
	r6 = 0xFFFFFF50<32>
	r17 = r17 + 0xFFFFFFFF<32>
	r6 = r6 - r4
	r16 = r4 + r16
	r17 = r17 & r6
	r19 = Mem0[r7 + 0x14<32>:word32]
	r17 = r4 + r17
	r20 = r16 + 4<32>
	goto 0x0040B142<p32>
	goto l0040B142
	// succ:  l0040B142
l0040B12C:
	r4 = Mem0[r19 + 0x14<32>:word32]
	r6 = Mem0[r19 + 8<32>:word32]
	r4 = r4 + 0xB0<32>
	r4 = r17 + r4
	Mem0[r20:word32] = r4
	r20 = r20 + 4<32>
	r5 = Mem0[r19 + 4<32>:word32]
	goto 0x0040A130<p32>
	// succ:  l0040B13C_thunk_memcpy
l0040B13C_thunk_memcpy:
	call memcpy (retsize: 0;)
	return
	// succ:  __copy_tls_exit
l0040B142:
	branch r19 != 0<32> l0040B12C
	// succ:  l0040B144 l0040B12C
l0040B144:
	r7 = Mem0[r18 + 0x20<32>:word32]
	r4 = r17
	Mem0[sp:word32] = r7
	Mem0[r17 + 1<32>:word32] = r16
	Mem0[r17 + 0xAC<32>:byte] = SLICE(r16, byte, 0)
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	r20 = Mem0[sp + 8<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  __copy_tls_exit
__copy_tls_exit:


// __init_tls
// Return size: 0
define __init_tls
__init_tls_entry:
	sp = fp
	r25 = 0x40B152<32>
	// succ:  l0040B152
l0040B152:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r10 = Mem0[r4 + 3<32>:word32]
	r5 = 0<32>
	r6 = 0<32>
	r9 = Mem0[r4 + 0x14<32>:word32]
	r7 = r10
	goto 0x0040B17C<p32>
	goto l0040B17C
	// succ:  l0040B17C
l0040B160:
	branch r8 != 2<32> l0040B18E
	// succ:  l0040B164 l0040B18E
l0040B164:
	r8 = null
	branch 0<32> == r8 l0040B174
	// succ:  l0040B16E l0040B174
l0040B16E:
	r5 = Mem0[r7 + 8<32>:word32]
	r5 = r8 - r5
	// succ:  l0040B174
l0040B174:
	r8 = Mem0[r4 + 0x10<32>:word32]
	r9 = r9 + 0xFFFFFFFF<32>
	r7 = r7 + r8
	// succ:  l0040B17C
l0040B17C:
	branch 0<32> == r9 l0040B198
	// succ:  l0040B180 l0040B198
l0040B180:
	r8 = Mem0[r7:word32]
	branch r8 != 6<32> l0040B160
	// succ:  l0040B186 l0040B160
l0040B186:
	r5 = Mem0[r7 + 8<32>:word32]
	r5 = r10 - r5
	goto 0x0040B174<p32>
	goto l0040B174
	// succ:  l0040B174
l0040B18E:
	r8 = r8 ^ 7<32>
	branch r8 != 0<32> l0040B196
	// succ:  l0040B192_1 l0040B196
l0040B192_1:
	r6 = r7
	// succ:  l0040B196
l0040B196:
	goto 0x0040B174<p32>
	goto l0040B174
	// succ:  l0040B174
l0040B198:
	r7 = 0x0041EFBE<p32>
	r4 = 0x0042FAE8<p32>
	branch r6 == 0<32> l0040B1BA
	// succ:  l0040B1A2 l0040B1BA
l0040B1A2:
	r8 = Mem0[r6 + 2<32>:word32]
	r5 = r5 + r8
	Mem0[sp + 0x44<32>:word32] = r5
	r5 = Mem0[r6 + 0x10<32>:word32]
	Mem0[sp + 0x48<32>:word32] = r5
	r5 = Mem0[r6 + 0x14<32>:word32]
	r6 = Mem0[r6 + 0x1C<32>:word32]
	Mem0[r7 + 12<i32>:word32] = r5
	Mem0[r7 + 16<i32>:word32] = r6
	r6 = 1<32>
	Mem0[sp + 0x14<32>:word32] = r7
	Mem0[sp + 0x20<32>:word32] = r6
	// succ:  l0040B1BA
l0040B1BA:
	r5 = Mem0[r7 + 0xC<32>:word32]
	r6 = Mem0[r7 + 4<32>:word32]
	r8 = Mem0[r7 + 0x10<32>:word32]
	r6 = r6 + r5
	r6 = -r6
	r9 = r8 + 0xFFFFFFFF<32>
	r6 = r6 & r9
	r5 = r6 + r5
	Mem0[sp + 0x4C<32>:word32] = r5
	branch r8 >=u 4<32> l0040B1DC
	// succ:  l0040B1D8 l0040B1DC
l0040B1D8:
	r6 = 4<32>
	Mem0[sp + 0x50<32>:word32] = r6
	// succ:  l0040B1DC
l0040B1DC:
	r7 = Mem0[r7 + 0x10<32>:word32]
	r6 = r7 + 0xBB<32>
	r6 = r6 + r5
	r6 = __ins(r6, 0<32>, 0<32>, 1<32>)
	Mem0[r4 + 24<i32>:word32] = r6
	Mem0[r4 + 28<i32>:word32] = r7
	r7 = 0xF4<32>
	r4 = 0x0041EFF6<p32>
	branch r7 >=u r6 l0040B20E
	// succ:  l0040B1F8 l0040B20E
l0040B1F8:
	r10 = 0<32>
	r9 = 0xFFFFFFFF<32>
	r8 = 0x802<32>
	r7 = 3<32>
	r5 = 0<32>
	r4 = 0xDE<32>
	goto 0x00404A50<p32>
	// succ:  l0040B20A_thunk___syscall
l0040B20A_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  __init_tls_exit
l0040B20E:
	goto 0x0040B100<p32>
	// succ:  l0040B20E_thunk___copy_tls
l0040B20E_thunk___copy_tls:
	call __copy_tls (retsize: 0;)
	return
	// succ:  __init_tls_exit
__init_tls_exit:


// _Exit
// Return size: 0
define _Exit
_Exit_entry:
	sp = fp
	r25 = 0x40B230<32>
	// succ:  l0040B230
l0040B230:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r16 = r4
	r5 = r4
	r4 = 0x5E<32>
	goto 0x00404A50<p32>
	// succ:  l0040B238_thunk___syscall
l0040B238_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  _Exit_exit
_Exit_exit:


// scanexp
// Return size: 0
define scanexp
scanexp_entry:
	sp = fp
	r25 = 0x40B250<32>
	// succ:  l0040B250
l0040B250:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	sp = sp - 48<i32>
	r7 = Mem0[r4 + 4<32>:word32]
	r19 = r4
	r9 = Mem0[r4 + 0x68<32>:word32]
	branch r7 >=u r9 l0040B3BC
	// succ:  l0040B25E l0040B3BC
l0040B25E:
	r6 = r7 + 1<32>
	Mem0[sp + 4<32>:word32] = r6
	r17 = CONVERT(Mem0[r7:byte], byte, word32)
	branch r17 == 0x2B<32> l0040B39E
	// succ:  l0040B26A l0040B39E
l0040B26A:
	branch r17 == 0x2D<32> l0040B39E
	// succ:  l0040B26E l0040B39E
l0040B26E:
	r7 = r17 + 0xFFFFFFD0<32>
	branch r7 >=u 0xA<32> l0040B334
	// succ:  l0040B276 l0040B334
l0040B276:
	r18 = 0<32>
	// succ:  l0040B278
l0040B278:
	r16 = 0<32>
	goto 0x0040B292<p32>
	goto l0040B292
	// succ:  l0040B292
l0040B27C:
	Mem0[sp + 0x44<32>:word32] = r6
	r17 = CONVERT(Mem0[r7:byte], byte, word32)
	r7 = 0xCCCCCCB<32>
	r10 = r17 + 0xFFFFFFD0<32>
	branch r10 >=u 0xA<32> l0040B2C0
	// succ:  l0040B28E l0040B2C0
l0040B28E:
	branch r7 < r16 l0040B2C0
	// succ:  l0040B292 l0040B2C0
l0040B292:
	r16 = r16 + (r16 << 2<8>)
	r7 = Mem0[r19 + 4<32>:word32]
	r16 = r17 + (r16 << 1<8>)
	r16 = r16 + 0xFFFFFFD0<32>
	r6 = r7 + 1<32>
	branch r7 <u r9 l0040B27C
	// succ:  l0040B2A8 l0040B27C
l0040B2A8:
	r4 = r19
	call __shgetc (retsize: 0;)
	r9 = Mem0[r19 + 0x68<32>:word32]
	r17 = r4
	r7 = 0xCCCCCCB<32>
	r10 = r17 + 0xFFFFFFD0<32>
	branch r10 <u 0xA<32> l0040B28E
	// succ:  l0040B2C0 l0040B28E
l0040B2C0:
	r20 = r16 >> 0x1F<32>
	// succ:  l0040B2C4
l0040B2C4:
	r6 = r16 << 2<32>
	r7 = r16 >>u 0x1E<32>
	r4 = r20 << 2<32>
	r8 = r6 + r16
	r4 = r4 | r7
	r6 = CONVERT(r8 <u r6, bool, word32)
	r7 = r4 + r20
	r4 = r8 << 1<32>
	r7 = r6 + r7
	r8 = r8 >>u 0x1F<32>
	r7 = r7 << 1<32>
	r6 = r4 + r17
	r7 = r7 | r8
	r17 = r17 >> 0x1F<32>
	r4 = CONVERT(r6 <u r4, bool, word32)
	r7 = r7 + r17
	r17 = r6 + 0xFFFFFFD0<32>
	r7 = r4 + r7
	r5 = 0x147AE14<32>
	r6 = CONVERT(r17 <u r6, bool, word32)
	branch r10 >=u 0xA<32> l0040B37E
	// succ:  l0040B30C l0040B37E
l0040B30C:
	branch r5 < r20 l0040B356
	// succ:  l0040B310 l0040B356
l0040B310:
	branch r20 == r5 l0040B3CC
	// succ:  l0040B314 l0040B3CC
l0040B314:
	r5 = Mem0[r19 + 4<32>:word32]
	r7 = r7 + 0xFFFFFFFF<32>
	r16 = r17
	r20 = r6 + r7
	branch r5 >=u r9 l0040B36E
	// succ:  l0040B322 l0040B36E
l0040B322:
	r7 = r5 + 1<32>
	Mem0[sp + 0x44<32>:word32] = r7
	r17 = CONVERT(Mem0[r5:byte], byte, word32)
	r10 = r17 + 0xFFFFFFD0<32>
	goto 0x0040B2C4<p32>
	goto l0040B2C4
	// succ:  l0040B2C4
l0040B330:
	branch 0<32> != r5 l0040B3D8
	// succ:  l0040B334 l0040B3D8
l0040B334:
	branch 0<32> == r9 l0040B3F2
	// succ:  l0040B338 l0040B3F2
l0040B338:
	r7 = Mem0[r19 + 4<32>:word32]
	// succ:  l0040B33A
l0040B33A:
	r7 = r7 + 0xFFFFFFFF<32>
	r16 = 0<32>
	r20 = 0<32>
	Mem0[sp + 0x44<32>:word32] = r7
	// succ:  l0040B344
l0040B344:
	r4 = r16
	r5 = r20
	ra = Mem0[sp + 44<i32>:word32]
	r16 = Mem0[sp + 40<i32>:word32]
	r17 = Mem0[sp + 36<i32>:word32]
	r18 = Mem0[sp + 32<i32>:word32]
	r19 = Mem0[sp + 28<i32>:word32]
	r20 = Mem0[sp + 24<i32>:word32]
	sp = sp + 48<i32>
	return
	// succ:  scanexp_exit
l0040B348:
	r4 = r19
	call __shgetc (retsize: 0;)
	r9 = Mem0[r19 + 0x68<32>:word32]
	r17 = r4
	r10 = r17 + 0xFFFFFFD0<32>
	// succ:  l0040B356
l0040B356:
	branch r10 >=u 0xA<32> l0040B37E
	// succ:  l0040B35A l0040B37E
l0040B35A:
	r7 = Mem0[r19 + 4<32>:word32]
	branch r7 >=u r9 l0040B348
	// succ:  l0040B360 l0040B348
l0040B360:
	r6 = r7 + 1<32>
	Mem0[sp + 0x44<32>:word32] = r6
	r17 = CONVERT(Mem0[r7:byte], byte, word32)
	r10 = r17 + 0xFFFFFFD0<32>
	goto 0x0040B356<p32>
	goto l0040B356
	// succ:  l0040B356
l0040B36E:
	r4 = r19
	call __shgetc (retsize: 0;)
	r9 = Mem0[r19 + 0x68<32>:word32]
	r17 = r4
	r10 = r17 + 0xFFFFFFD0<32>
	goto 0x0040B2C4<p32>
	goto l0040B2C4
	// succ:  l0040B2C4
l0040B37E:
	branch 0<32> == r9 l0040B388
	// succ:  l0040B382 l0040B388
l0040B382:
	r7 = Mem0[r19 + 4<32>:word32]
	r7 = r7 + 0xFFFFFFFF<32>
	Mem0[sp + 0x44<32>:word32] = r7
	// succ:  l0040B388
l0040B388:
	branch r18 == 0<32> l0040B344
	// succ:  l0040B38A l0040B344
l0040B38A:
	r16 = -r16
	r7 = -r20
	r5 = CONVERT(0<32> <u r16, bool, word32)
	r20 = r7 - r5
	r4 = r16
	r5 = r20
	ra = Mem0[sp + 44<i32>:word32]
	r16 = Mem0[sp + 40<i32>:word32]
	r17 = Mem0[sp + 36<i32>:word32]
	r18 = Mem0[sp + 32<i32>:word32]
	r19 = Mem0[sp + 28<i32>:word32]
	r20 = Mem0[sp + 24<i32>:word32]
	sp = sp + 48<i32>
	return
	// succ:  scanexp_exit
l0040B39E:
	r7 = Mem0[r19 + 4<32>:word32]
	branch r7 >=u r9 l0040B3E4
	// succ:  l0040B3A4 l0040B3E4
l0040B3A4:
	r6 = r7 + 1<32>
	Mem0[sp + 0x44<32>:word32] = r6
	r4 = CONVERT(Mem0[r7:byte], byte, word32)
	// succ:  l0040B3AC
l0040B3AC:
	r7 = r4 + 0xFFFFFFD0<32>
	branch r7 >=u 0xA<32> l0040B330
	// succ:  l0040B3B4 l0040B330
l0040B3B4:
	r18 = CONVERT(r17 == 0x2D<32>, bool, word32)
	r17 = r4
	goto 0x0040B278<p32>
	goto l0040B278
	// succ:  l0040B278
l0040B3BC:
	Mem0[sp + 0xC<32>:word32] = r5
	goto 0x0040CB78<p32>
	// succ:  l0040B3BE_thunk___shgetc
l0040B3BE_thunk___shgetc:
	call __shgetc (retsize: 0;)
	return
	// succ:  scanexp_exit
l0040B3CC:
	r5 = 0x7AE147AD<32>
	branch r5 >=u r16 l0040B314
	// succ:  l0040B3D6 l0040B314
l0040B3D6:
	goto 0x0040B356<p32>
	goto l0040B356
	// succ:  l0040B356
l0040B3D8:
	branch 0<32> == r9 l0040B3F2
	// succ:  l0040B3DC l0040B3F2
l0040B3DC:
	r7 = Mem0[r19 + 4<32>:word32]
	r7 = r7 + 0xFFFFFFFF<32>
	Mem0[sp + 0x44<32>:word32] = r7
	goto 0x0040B33A<p32>
	goto l0040B33A
	// succ:  l0040B33A
l0040B3E4:
	Mem0[sp + 0xC<32>:word32] = r5
	r4 = r19
	call __shgetc (retsize: 0;)
	r9 = Mem0[r19 + 0x68<32>:word32]
	r17 = Mem0[sp + 0xC<32>:word32]
	goto 0x0040B3AC<p32>
	goto l0040B3AC
	// succ:  l0040B3AC
l0040B3F2:
	r16 = 0<32>
	r20 = 0<32>
	goto 0x0040B344<p32>
	goto l0040B344
	// succ:  l0040B344
scanexp_exit:


// decfloat
// Return size: 0
define decfloat
decfloat_entry:
	sp = fp
	r25 = 0x40B3FA<32>
	// succ:  l0040B3FA
l0040B3FA:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 608<i32>
	r16 = r4
	Mem0[sp + 4<i32>:word32] = r7
	Mem0[sp + 8<i32>:word32] = r8
	Mem0[sp + 0x10<32>:word32] = r6
	Mem0[sp + 0x14<32>:word32] = r9
	branch r5 == 0x30<32> l0040B410
	// succ:  l0040B40C l0040B410
l0040B40C:
	goto 0x0040BAE8<p32>
	goto l0040BAE8
	// succ:  l0040BAE8
l0040B410:
	r6 = Mem0[r16 + 0x68<32>:word32]
	// succ:  l0040B414
l0040B414:
	r7 = Mem0[r16 + 4<32>:word32]
	branch r7 >=u r6 l0040B62E
	// succ:  l0040B41A l0040B62E
l0040B41A:
	r5 = r7 + 1<32>
	Mem0[sp + 4<32>:word32] = r5
	r5 = CONVERT(Mem0[r7:byte], byte, word32)
	branch r5 == 0x30<32> l0040B414
	// succ:  l0040B426 l0040B414
l0040B426:
	r7 = 1<32>
	Mem0[sp:word32] = r7
	// succ:  l0040B42A
l0040B42A:
	branch r5 == 0x2E<32> l0040B836
	// succ:  l0040B42E l0040B836
l0040B42E:
	r21 = 0<32>
	r23 = 0<32>
	r18 = 0<32>
	// succ:  l0040B434
l0040B434:
	r19 = 0<32>
	r22 = 0<32>
	r17 = 0<32>
	r30 = 0<32>
	r20 = 0<32>
	Mem0[sp + 0x30<32>:word32] = 0<32>
	// succ:  l0040B440
l0040B440:
	r7 = r5 + 0xFFFFFFD0<32>
	branch r7 <u 0xA<32> l0040B472
	// succ:  l0040B448 l0040B472
l0040B448:
	branch r5 != 0x2E<32> l0040B4CC
	// succ:  l0040B44C l0040B4CC
l0040B44C:
	branch 0<32> != r21 l0040B822
	// succ:  l0040B450 l0040B822
l0040B450:
	r23 = r22
	r18 = r17
	r21 = 1<32>
	// succ:  l0040B458
l0040B458:
	r7 = Mem0[r16 + 4<32>:word32]
	r6 = Mem0[r16 + 0x68<32>:word32]
	branch r7 >=u r6 l0040B4C4
	// succ:  l0040B462 l0040B4C4
l0040B462:
	r6 = r7 + 1<32>
	Mem0[sp + 4<32>:word32] = r6
	r5 = CONVERT(Mem0[r7:byte], byte, word32)
	r7 = r5 + 0xFFFFFFD0<32>
	branch r7 >=u 0xA<32> l0040B448
	// succ:  l0040B472 l0040B448
l0040B472:
	branch r5 == 0x2E<32> l0040B44C
	// succ:  l0040B476 l0040B44C
l0040B476:
	r6 = r22 + 1<32>
	r4 = CONVERT(r6 <u r22, bool, word32)
	r22 = r6
	r17 = r4 + r17
	branch r30 >= 0x3D<32> l0040B602
	// succ:  l0040B486 l0040B602
l0040B486:
	r5 = r5 ^ 0x30<32>
	r4 = r20 + 1<32>
	branch r5 == 0<32> l0040B492
	// succ:  l0040B48E_1 l0040B492
l0040B48E_1:
	r19 = r6
	// succ:  l0040B492
l0040B492:
	branch 0<32> == r20 l0040B618
	// succ:  l0040B496 l0040B618
l0040B496:
	r6 = sp + 0xFFFFF230<32>
	r5 = r6 + (r30 << 2<8>)
	r6 = Mem0[r5 + 0xE00<32>:word32]
	r6 = r6 + (r6 << 2<8>)
	r7 = r7 + (r6 << 1<8>)
	Mem0[r5 + 0xE00<32>:byte] = SLICE(r7, byte, 0)
	branch r4 != 9<32> l0040B63E
	// succ:  l0040B4B2 l0040B63E
l0040B4B2:
	r7 = 1<32>
	r6 = Mem0[r16 + 0x68<32>:word32]
	Mem0[sp:word32] = r7
	r30 = r30 + 1<32>
	r7 = Mem0[r16 + 4<32>:word32]
	r20 = 0<32>
	branch r7 <u r6 l0040B462
	// succ:  l0040B4C4 l0040B462
l0040B4C4:
	r4 = r16
	call __shgetc (retsize: 0;)
	r5 = r4
	goto 0x0040B440<p32>
	goto l0040B440
	// succ:  l0040B440
l0040B4CC:
	branch r21 != 0<32> l0040B4D0
	// succ:  l0040B4CC_1 l0040B4D0
l0040B4CC_1:
	r23 = r22
	// succ:  l0040B4D0
l0040B4D0:
	branch r21 != 0<32> l0040B4D4
	// succ:  l0040B4D0_1 l0040B4D4
l0040B4D0_1:
	r18 = r17
	// succ:  l0040B4D4
l0040B4D4:
	r17 = Mem0[sp:word32]
	branch 0<32> == r7 l0040B646
	// succ:  l0040B4DA l0040B646
l0040B4DA:
	r7 = r5 | 0x20<32>
	branch r7 == 0x25<32> l0040BAEE
	// succ:  l0040B4E2 l0040BAEE
l0040B4E2:
	branch r5 < 0<32> l0040B4F8
	// succ:  l0040B4E6 l0040B4F8
l0040B4E6:
	r7 = Mem0[r16 + 0x68<32>:word32]
	branch r7 == 0<32> l0040B4F8
	// succ:  l0040B4EC l0040B4F8
l0040B4EC:
	r7 = Mem0[r16 + 4<32>:word32]
	r7 = r7 + 0xFFFFFFFF<32>
	Mem0[sp + 4<32>:word32] = r7
	r17 = Mem0[sp:word32]
	branch 0<32> == r7 l0040B652
	// succ:  l0040B4F8 l0040B652
l0040B4F8:
	r4 = Mem0[sp + 0x30<32>:word32]
	branch 0<32> == r16 l0040B826
	// succ:  l0040B4FE l0040B826
l0040B4FE:
	branch r22 == r23 l0040BBA4
	// succ:  l0040B502 l0040BBA4
l0040B502:
	r17 = Mem0[sp + 4<32>:word32]
	r7 = r6 >>u 0x1F<32>
	r7 = r7 + r6
	r7 = r7 >> 1<32>
	r7 = -r7
	r6 = r7 >> 0x1F<32>
	branch r6 < r18 l0040BBF6
	// succ:  l0040B51A l0040BBF6
l0040B51A:
	branch r18 == r6 l0040BBF2
	// succ:  l0040B51E l0040BBF2
l0040B51E:
	r17 = Mem0[sp + 4<32>:word32]
	r6 = r7 + 0xFFFFFF96<32>
	r7 = r6 >> 0x1F<32>
	branch r18 < r7 l0040BB0C
	// succ:  l0040B52C l0040BB0C
l0040B52C:
	branch r18 == r7 l0040BB08
	// succ:  l0040B530 l0040BB08
l0040B530:
	branch 0<32> == r20 l0040B59E
	// succ:  l0040B534 l0040B59E
l0040B534:
	branch r20 >= 9<32> l0040B59C
	// succ:  l0040B538 l0040B59C
l0040B538:
	r5 = r30 << 2<32>
	r7 = sp + 0xFFFFF230<32>
	r7 = r7 + r5
	r7 = Mem0[r7 + 0xE00<32>:word32]
	r7 = r7 + (r7 << 2<8>)
	r6 = r7 << 1<32>
	branch r20 == 8<32> l0040B592
	// succ:  l0040B550 l0040B592
l0040B550:
	r7 = r6 + (r7 << 3<8>)
	r6 = r7 << 1<32>
	branch r20 == 7<32> l0040B592
	// succ:  l0040B55A l0040B592
l0040B55A:
	r7 = r6 + (r7 << 3<8>)
	r6 = r7 << 1<32>
	branch r20 == 6<32> l0040B592
	// succ:  l0040B564 l0040B592
l0040B564:
	r7 = r6 + (r7 << 3<8>)
	r6 = r7 << 1<32>
	branch r20 == 5<32> l0040B592
	// succ:  l0040B56E l0040B592
l0040B56E:
	r7 = r6 + (r7 << 3<8>)
	r6 = r7 << 1<32>
	branch r20 == 4<32> l0040B592
	// succ:  l0040B578 l0040B592
l0040B578:
	r7 = r6 + (r7 << 3<8>)
	r6 = r7 << 1<32>
	branch r20 == 3<32> l0040B592
	// succ:  l0040B582 l0040B592
l0040B582:
	r7 = r6 + (r7 << 3<8>)
	r6 = r7 << 1<32>
	branch r20 != 1<32> l0040B592
	// succ:  l0040B58C l0040B592
l0040B58C:
	r6 = r6 + (r7 << 3<8>)
	r6 = r6 << 1<32>
	// succ:  l0040B592
l0040B592:
	r7 = sp + 0xFFFFF230<32>
	r5 = r7 + r5
	Mem0[r5 + 0xE00<32>:byte] = SLICE(r6, byte, 0)
	// succ:  l0040B59C
l0040B59C:
	r30 = r30 + 1<32>
	// succ:  l0040B59E
l0040B59E:
	r17 = Mem0[sp + 8<32>:word32]
	r20 = r23
	goto 0x00410170<p32>
	// succ:  l0040B5A2_thunk___floatsidf
l0040B5A2_thunk___floatsidf:
	call __floatsidf (retsize: 0;)
	return
	// succ:  decfloat_exit
l0040B602:
	branch r5 == 0x30<32> l0040B458
	// succ:  l0040B606 l0040B458
l0040B606:
	r7 = Mem0[sp + 0x220<32>:word32]
	r19 = 0x45C<32>
	r7 = r7 | 1<32>
	Mem0[sp + 0x220<32>:byte] = SLICE(r7, byte, 0)
	goto 0x0040B458<p32>
	goto l0040B458
	// succ:  l0040B458
l0040B618:
	r6 = 1<32>
	r20 = 1<32>
	Mem0[sp:word32] = r6
	r6 = sp + 0xFFFFF230<32>
	r6 = r6 + (r30 << 2<8>)
	Mem0[r6 + 0xE00<32>:byte] = SLICE(r7, byte, 0)
	goto 0x0040B458<p32>
	goto l0040B458
	// succ:  l0040B458
l0040B62E:
	r4 = r16
	call __shgetc (retsize: 0;)
	r5 = r4
	branch r4 == 0x30<32> l0040B410
	// succ:  l0040B638 l0040B410
l0040B638:
	r7 = 1<32>
	Mem0[sp:word32] = r7
	goto 0x0040B42A<p32>
	goto l0040B42A
	// succ:  l0040B42A
l0040B63E:
	r7 = 1<32>
	r20 = r4
	Mem0[sp:word32] = r7
	goto 0x0040B458<p32>
	goto l0040B458
	// succ:  l0040B458
l0040B646:
	branch r5 < 0<32> l0040B652
	// succ:  l0040B64A l0040B652
l0040B64A:
	r7 = Mem0[r16 + 0x68<32>:word32]
	branch 0<32> != r7 l0040B4EC
	// succ:  l0040B652 l0040B4EC
l0040B652:
	goto 0x004049B0<p32>
	// succ:  l0040B652_thunk___errno_location
l0040B652_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  decfloat_exit
l0040B65A:
	r6 = 0<32>
	r7 = 0<32>
	r4 = r16
	call __shlim (retsize: 0;)
	r4 = 0<32>
	r5 = 0<32>
	r30 = Mem0[sp + 604<i32>:word32]
	ra = Mem0[sp + 600<i32>:word32]
	r16 = Mem0[sp + 596<i32>:word32]
	r17 = Mem0[sp + 592<i32>:word32]
	r18 = Mem0[sp + 588<i32>:word32]
	r19 = Mem0[sp + 584<i32>:word32]
	r20 = Mem0[sp + 580<i32>:word32]
	r21 = Mem0[sp + 576<i32>:word32]
	r22 = Mem0[sp + 572<i32>:word32]
	r23 = Mem0[sp + 568<i32>:word32]
	sp = sp + 608<i32>
	return
	// succ:  decfloat_exit
l0040B822:
	r5 = 0x2E<32>
	goto 0x0040B4D4<p32>
	goto l0040B4D4
	// succ:  l0040B4D4
l0040B826:
	r17 = Mem0[sp + 8<32>:word32]
	goto 0x00410170<p32>
	// succ:  l0040B828_thunk___floatsidf
l0040B828_thunk___floatsidf:
	call __floatsidf (retsize: 0;)
	return
	// succ:  decfloat_exit
l0040B836:
	r7 = Mem0[r16 + 4<32>:word32]
	r6 = Mem0[r16 + 0x68<32>:word32]
	branch r7 >=u r6 l0040BC40
	// succ:  l0040B840 l0040BC40
l0040B840:
	r6 = r7 + 1<32>
	Mem0[sp + 4<32>:word32] = r6
	r5 = CONVERT(Mem0[r7:byte], byte, word32)
	// succ:  l0040B848
l0040B848:
	branch r5 != 0x30<32> l0040BCEC
	// succ:  l0040B84C l0040BCEC
l0040B84C:
	r6 = Mem0[r16 + 0x68<32>:word32]
	r23 = 0<32>
	r18 = 0<32>
	// succ:  l0040B854
l0040B854:
	r5 = r23 + 0xFFFFFFFF<32>
	r7 = Mem0[r16 + 4<32>:word32]
	r4 = CONVERT(r5 <u r23, bool, word32)
	r18 = r18 + 0xFFFFFFFF<32>
	r23 = r5
	r18 = r4 + r18
	r21 = r7 + 1<32>
	branch r7 >=u r6 l0040B880
	// succ:  l0040B86C l0040B880
l0040B86C:
	Mem0[r16 + 1<32>:word32] = r21
	r5 = CONVERT(Mem0[r7:byte], byte, word32)
	branch r5 == 0x30<32> l0040B854
	// succ:  l0040B874 l0040B854
l0040B874:
	r7 = 1<32>
	r21 = 1<32>
	Mem0[sp:word32] = r7
	goto 0x0040B434<p32>
	goto l0040B434
	// succ:  l0040B434
l0040B880:
	r4 = r16
	call __shgetc (retsize: 0;)
	r5 = r4
	branch r4 != 0x30<32> l0040B874
	// succ:  l0040B88A l0040B874
l0040B88A:
	r6 = Mem0[r16 + 0x68<32>:word32]
	goto 0x0040B854<p32>
	goto l0040B854
	// succ:  l0040B854
l0040BAE8:
	Mem0[sp:word32] = 0<32>
	goto 0x0040B42A<p32>
	goto l0040B42A
	// succ:  l0040B42A
l0040BAEE:
	r17 = Mem0[sp + 0x14<32>:word32]
	r4 = r16
	call scanexp (retsize: 0;)
	branch 0<32> == r4 l0040BCCE
	// succ:  l0040BAF8 l0040BCCE
l0040BAF8:
	r4 = r4 + r23
	r5 = r18 + r5
	r18 = CONVERT(r4 <u r23, bool, word32)
	r23 = r4
	r18 = r18 + r5
	goto 0x0040B4F8<p32>
	goto l0040B4F8
	// succ:  l0040B4F8
l0040BB08:
	branch r23 >=u r6 l0040B530
	// succ:  l0040BB0C l0040B530
l0040BB0C:
	goto 0x004049B0<p32>
	// succ:  l0040BB0C_thunk___errno_location
l0040BB0C_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  decfloat_exit
l0040BBA4:
	branch r18 != r17 l0040B502
	// succ:  l0040BBA8 l0040B502
l0040BBA8:
	branch 0<32> < r18 l0040B502
	// succ:  l0040BBAC l0040B502
l0040BBAC:
	branch r18 != 0<32> l0040BBB6
	// succ:  l0040BBAE l0040BBB6
l0040BBAE:
	branch r23 <u 0xA<32> l0040BBB6
	// succ:  l0040BBB2 l0040BBB6
l0040BBB2:
	goto 0x0040B502<p32>
	goto l0040B502
	// succ:  l0040B502
l0040BBB6:
	r17 = Mem0[sp + 0x10<32>:word32]
	branch r7 >= 0x1F<32> l0040BBC4
	// succ:  l0040BBBC l0040BBC4
l0040BBBC:
	r7 = r16 >>u r7
	branch 0<32> != r7 l0040B502
	// succ:  l0040BBC4 l0040B502
l0040BBC4:
	r17 = Mem0[sp + 8<32>:word32]
	goto 0x00410170<p32>
	// succ:  l0040BBC6_thunk___floatsidf
l0040BBC6_thunk___floatsidf:
	call __floatsidf (retsize: 0;)
	return
	// succ:  decfloat_exit
l0040BBF2:
	branch r7 >=u r23 l0040B51E
	// succ:  l0040BBF6 l0040B51E
l0040BBF6:
	goto 0x004049B0<p32>
	// succ:  l0040BBF6_thunk___errno_location
l0040BBF6_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  decfloat_exit
l0040BC40:
	r4 = r16
	call __shgetc (retsize: 0;)
	r5 = r4
	goto 0x0040B848<p32>
	goto l0040B848
	// succ:  l0040B848
l0040BCCE:
	r7 = 0<32>
	branch r7 != r5 l0040BAF8
	// succ:  l0040BCD6 l0040BAF8
l0040BCD6:
	r17 = Mem0[sp + 0x14<32>:word32]
	branch 0<32> == r7 l0040B65A
	// succ:  l0040BCDC l0040B65A
l0040BCDC:
	r7 = Mem0[r16 + 0x68<32>:word32]
	branch r7 == 0<32> l0040BD58
	// succ:  l0040BCE2 l0040BD58
l0040BCE2:
	r7 = Mem0[r16 + 4<32>:word32]
	r5 = 0<32>
	r7 = r7 + 0xFFFFFFFF<32>
	Mem0[sp + 4<32>:word32] = r7
	goto 0x0040BAF8<p32>
	goto l0040BAF8
	// succ:  l0040BAF8
l0040BCEC:
	r21 = 1<32>
	r23 = 0<32>
	r18 = 0<32>
	goto 0x0040B434<p32>
	goto l0040B434
	// succ:  l0040B434
l0040BD58:
	r5 = 0<32>
	goto 0x0040BAF8<p32>
	goto l0040BAF8
	// succ:  l0040BAF8
decfloat_exit:


// __floatscan
// Return size: 0
define __floatscan
__floatscan_entry:
	sp = fp
	r25 = 0x40BD5C<32>
	// succ:  l0040BD5C
l0040BD5C:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 128<i32>
	r21 = r4
	r16 = r6
	branch 0<32> == r5 l0040BEA8
	// succ:  l0040BD66 l0040BEA8
l0040BD66:
	branch r5 < 0<32> l0040BEA0
	// succ:  l0040BD6A l0040BEA0
l0040BD6A:
	branch r5 >= 3<32> l0040BEA0
	// succ:  l0040BD6E l0040BEA0
l0040BD6E:
	r7 = 0x35<32>
	r19 = 0xFFFFFBCE<32>
	Mem0[sp + 8<32>:word32] = r7
	r7 = 0xFFFFFB64<32>
	Mem0[sp + 0x18<32>:word32] = r7
	r7 = 0x432<32>
	r20 = 0xFFFFFFFF<32>
	r30 = 0<32>
	r18 = 0xFFFFFBCE<32>
	r17 = 0x35<32>
	Mem0[sp + 0x14<32>:word32] = 0<32>
	Mem0[sp + 0x1C<32>:word32] = r7
	// succ:  l0040BD90
l0040BD90:
	r7 = Mem0[r21 + 1<32>:word32]
	r6 = Mem0[r21 + 0x68<32>:word32]
	r5 = r7 + 1<32>
	branch r7 >=u r6 l0040BE96
	// succ:  l0040BD9E l0040BE96
l0040BD9E:
	Mem0[r21 + 1<32>:word32] = r5
	r4 = CONVERT(Mem0[r7:byte], byte, word32)
	branch r4 == 0x20<32> l0040BD90
	// succ:  l0040BDA6 l0040BD90
l0040BDA6:
	r7 = r4 + 0xFFFFFFF7<32>
	branch r7 <u 5<32> l0040BD90
	// succ:  l0040BDAE l0040BD90
l0040BDAE:
	r5 = r4
	branch r4 == 0x2B<32> l0040C00A
	// succ:  l0040BDB4 l0040C00A
l0040BDB4:
	branch r5 == 0x2D<32> l0040BEEA
	// succ:  l0040BDB8 l0040BEEA
l0040BDB8:
	r7 = 0x4120000<32>
	r8 = 1<32>
	r22 = Mem0[r7 + 0x2A0<32>:word32]
	r23 = Mem0[r7 + 0x2A4<32>:word32]
	// succ:  l0040BDC8
l0040BDC8:
	r7 = r5 | 0x20<32>
	branch r7 != 0x29<32> l0040BF0E
	// succ:  l0040BDD0 l0040BF0E
l0040BDD0:
	r6 = Mem0[r21 + 1<32>:word32]
	r7 = Mem0[r21 + 0x68<32>:word32]
	branch r6 >=u r7 l0040BED6
	// succ:  l0040BDDA l0040BED6
l0040BDDA:
	r5 = r6 + 1<32>
	Mem0[r21 + 1<32>:word32] = r5
	r4 = CONVERT(Mem0[r6:byte], byte, word32)
	// succ:  l0040BDE2
l0040BDE2:
	r4 = r4 | 0x20<32>
	branch r4 != 0x2E<32> l0040BE78
	// succ:  l0040BDEA l0040BE78
l0040BDEA:
	r6 = Mem0[r21 + 1<32>:word32]
	branch r6 >=u r7 l0040BEE0
	// succ:  l0040BDF0 l0040BEE0
l0040BDF0:
	r5 = r6 + 1<32>
	Mem0[r21 + 1<32>:word32] = r5
	r4 = CONVERT(Mem0[r6:byte], byte, word32)
	// succ:  l0040BDF8
l0040BDF8:
	r4 = r4 | 0x20<32>
	branch r4 != 0x26<32> l0040BE78
	// succ:  l0040BE00 l0040BE78
l0040BE00:
	r6 = Mem0[r21 + 1<32>:word32]
	branch r6 >=u r7 l0040BFB6
	// succ:  l0040BE06 l0040BFB6
l0040BE06:
	r5 = r6 + 1<32>
	Mem0[r21 + 1<32>:word32] = r5
	r4 = CONVERT(Mem0[r6:byte], byte, word32)
	// succ:  l0040BE0E
l0040BE0E:
	r4 = r4 | 0x20<32>
	branch r4 != 0x29<32> l0040C048
	// succ:  l0040BE16 l0040C048
l0040BE16:
	r6 = Mem0[r21 + 1<32>:word32]
	branch r6 >=u r7 l0040BFC0
	// succ:  l0040BE1C l0040BFC0
l0040BE1C:
	r5 = r6 + 1<32>
	Mem0[r21 + 1<32>:word32] = r5
	r4 = CONVERT(Mem0[r6:byte], byte, word32)
	// succ:  l0040BE24
l0040BE24:
	r4 = r4 | 0x20<32>
	branch r4 != 0x2E<32> l0040C0CC
	// succ:  l0040BE2C l0040C0CC
l0040BE2C:
	r6 = Mem0[r21 + 1<32>:word32]
	branch r6 >=u r7 l0040C01C
	// succ:  l0040BE32 l0040C01C
l0040BE32:
	r5 = r6 + 1<32>
	Mem0[r21 + 1<32>:word32] = r5
	r4 = CONVERT(Mem0[r6:byte], byte, word32)
	// succ:  l0040BE3A
l0040BE3A:
	r4 = r4 | 0x20<32>
	branch r4 != 0x29<32> l0040C0D4
	// succ:  l0040BE42 l0040C0D4
l0040BE42:
	r6 = Mem0[r21 + 1<32>:word32]
	branch r6 >=u r7 l0040BECC
	// succ:  l0040BE48 l0040BECC
l0040BE48:
	r5 = r6 + 1<32>
	Mem0[r21 + 1<32>:word32] = r5
	r4 = CONVERT(Mem0[r6:byte], byte, word32)
	// succ:  l0040BE50
l0040BE50:
	r4 = r4 | 0x20<32>
	branch r4 != 0x34<32> l0040C0DC
	// succ:  l0040BE58 l0040C0DC
l0040BE58:
	r6 = Mem0[r21 + 1<32>:word32]
	branch r6 >=u r7 l0040C026
	// succ:  l0040BE5E l0040C026
l0040BE5E:
	r7 = r6 + 1<32>
	Mem0[r21 + 1<32>:word32] = r7
	r4 = CONVERT(Mem0[r6:byte], byte, word32)
	// succ:  l0040BE66
l0040BE66:
	r4 = r4 | 0x20<32>
	branch r4 == 0x39<32> l0040BEA4
	// succ:  l0040BE6E l0040BEA4
l0040BE6E:
	r5 = 7<32>
	r7 = Mem0[r21 + 0x68<32>:word32]
	branch 0<32> != r16 l0040C04A
	// succ:  l0040BE78 l0040C04A
l0040BE78:
	branch r7 == 0<32> l0040BE80
	// succ:  l0040BE7A l0040BE80
l0040BE7A:
	r7 = Mem0[r21 + 1<32>:word32]
	r7 = r7 + 0xFFFFFFFF<32>
	Mem0[r21 + 1<32>:word32] = r7
	// succ:  l0040BE80
l0040BE80:
	goto 0x004049B0<p32>
	// succ:  l0040BE80_thunk___errno_location
l0040BE80_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  __floatscan_exit
l0040BE96:
	r4 = r21
	call __shgetc (retsize: 0;)
	branch r4 == 0x20<32> l0040BD90
	// succ:  l0040BE9E l0040BD90
l0040BE9E:
	goto 0x0040BDA6<p32>
	goto l0040BDA6
	// succ:  l0040BDA6
l0040BEA0:
	r22 = 0<32>
	r23 = 0<32>
	// succ:  l0040BEA4
l0040BEA4:
	r4 = r22
	r5 = r23
	r30 = Mem0[sp + 124<i32>:word32]
	ra = Mem0[sp + 120<i32>:word32]
	r16 = Mem0[sp + 116<i32>:word32]
	r17 = Mem0[sp + 112<i32>:word32]
	r18 = Mem0[sp + 108<i32>:word32]
	r19 = Mem0[sp + 104<i32>:word32]
	r20 = Mem0[sp + 100<i32>:word32]
	r21 = Mem0[sp + 96<i32>:word32]
	r22 = Mem0[sp + 92<i32>:word32]
	r23 = Mem0[sp + 88<i32>:word32]
	sp = sp + 128<i32>
	return
	// succ:  __floatscan_exit
l0040BEA8:
	r7 = 0x18<32>
	r19 = 0xFFFFFF6B<32>
	Mem0[sp + 8<32>:word32] = r7
	r7 = 0xFFFFFF01<32>
	Mem0[sp + 0x18<32>:word32] = r7
	r7 = 0x95<32>
	r20 = 0xFFFFFFFF<32>
	r30 = 0<32>
	r18 = 0xFFFFFF6B<32>
	r17 = 0x18<32>
	Mem0[sp + 0x14<32>:word32] = 0<32>
	Mem0[sp + 0x1C<32>:word32] = r7
	goto 0x0040BD90<p32>
	goto l0040BD90
	// succ:  l0040BD90
l0040BECC:
	r4 = r21
	call __shgetc (retsize: 0;)
	r7 = Mem0[r21 + 0x68<32>:word32]
	goto 0x0040BE50<p32>
	goto l0040BE50
	// succ:  l0040BE50
l0040BED6:
	r4 = r21
	call __shgetc (retsize: 0;)
	r7 = Mem0[r21 + 0x68<32>:word32]
	goto 0x0040BDE2<p32>
	goto l0040BDE2
	// succ:  l0040BDE2
l0040BEE0:
	r4 = r21
	call __shgetc (retsize: 0;)
	r7 = Mem0[r21 + 0x68<32>:word32]
	goto 0x0040BDF8<p32>
	goto l0040BDF8
	// succ:  l0040BDF8
l0040BEEA:
	r7 = 0x4120000<32>
	r8 = 0xFFFFFFFF<32>
	r22 = Mem0[r7 + 0x298<32>:word32]
	r23 = Mem0[r7 + 0x29C<32>:word32]
	// succ:  l0040BEFA
l0040BEFA:
	r7 = Mem0[r21 + 1<32>:word32]
	r6 = Mem0[r21 + 0x68<32>:word32]
	branch r7 >=u r6 l0040BFFE
	// succ:  l0040BF04 l0040BFFE
l0040BF04:
	r6 = r7 + 1<32>
	Mem0[r21 + 1<32>:word32] = r6
	r5 = CONVERT(Mem0[r7:byte], byte, word32)
	goto 0x0040BDC8<p32>
	goto l0040BDC8
	// succ:  l0040BDC8
l0040BF0E:
	branch r7 != 0x2E<32> l0040BFCA
	// succ:  l0040BF12 l0040BFCA
l0040BF12:
	r6 = Mem0[r21 + 1<32>:word32]
	r7 = Mem0[r21 + 0x68<32>:word32]
	branch r6 >=u r7 l0040C0C2
	// succ:  l0040BF1C l0040C0C2
l0040BF1C:
	r5 = r6 + 1<32>
	Mem0[r21 + 1<32>:word32] = r5
	r4 = CONVERT(Mem0[r6:byte], byte, word32)
	// succ:  l0040BF24
l0040BF24:
	r6 = r4 | 0x20<32>
	branch r6 != 0x21<32> l0040BE78
	// succ:  l0040BF2C l0040BE78
l0040BF2C:
	r6 = Mem0[r21 + 1<32>:word32]
	branch r6 >=u r7 l0040C02C
	// succ:  l0040BF32 l0040C02C
l0040BF32:
	r5 = r6 + 1<32>
	Mem0[r21 + 1<32>:word32] = r5
	r4 = CONVERT(Mem0[r6:byte], byte, word32)
	// succ:  l0040BF3A
l0040BF3A:
	r4 = r4 | 0x20<32>
	branch r4 != 0x2E<32> l0040BE78
	// succ:  l0040BF42 l0040BE78
l0040BF42:
	r6 = Mem0[r21 + 1<32>:word32]
	branch r6 >=u r7 l0040C0B0
	// succ:  l0040BF48 l0040C0B0
l0040BF48:
	r5 = r6 + 1<32>
	Mem0[r21 + 1<32>:word32] = r5
	r6 = CONVERT(Mem0[r6:byte], byte, word32)
	r6 = r6 ^ 0x28<32>
	r6 = CONVERT(0<32> <u r6, bool, word32)
	// succ:  l0040BF58
l0040BF58:
	branch 0<32> != r6 l0040C098
	// succ:  l0040BF5C l0040C098
l0040BF5C:
	r6 = Mem0[r21 + 1<32>:word32]
	r17 = 1<32>
	branch r6 >=u r7 l0040C092
	// succ:  l0040BF64 l0040C092
l0040BF64:
	r7 = r6 + 1<32>
	Mem0[r21 + 1<32>:word32] = r7
	r4 = CONVERT(Mem0[r6:byte], byte, word32)
	// succ:  l0040BF6C
l0040BF6C:
	r7 = r4
	r6 = r4 + 0xFFFFFFD0<32>
	r7 = __ins(r7, 0<32>, 5<32>, 1<32>)
	branch r6 <u 0xA<32> l0040C086
	// succ:  l0040BF7A l0040C086
l0040BF7A:
	r7 = r7 + 0xFFFFFFBF<32>
	branch r7 <u 0x1A<32> l0040C086
	// succ:  l0040BF82 l0040C086
l0040BF82:
	branch r4 == 0x1F<32> l0040C086
	// succ:  l0040BF86 l0040C086
l0040BF86:
	branch r4 == 0x29<32> l0040BFA8
	// succ:  l0040BF8A l0040BFA8
l0040BF8A:
	r7 = Mem0[r21 + 0x68<32>:word32]
	branch 0<32> == r7 l0040C0E4
	// succ:  l0040BF92 l0040C0E4
l0040BF92:
	r7 = Mem0[r21 + 1<32>:word32]
	r7 = r7 + 0xFFFFFFFF<32>
	Mem0[r21 + 1<32>:word32] = r7
	branch r16 != 0<32> l0040BFA0
	// succ:  l0040BF9A l0040BFA0
l0040BF9A:
	goto 0x0040BE80<p32>
	goto l0040BE80
	// succ:  l0040BE80
l0040BF9C:
	r7 = r7 + 0xFFFFFFFF<32>
	Mem0[r21 + 1<32>:word32] = r7
	// succ:  l0040BFA0
l0040BFA0:
	r17 = r17 + 0xFFFFFFFF<32>
	r6 = 0xFFFFFFFF<32>
	branch r6 != r17 l0040BF9C
	// succ:  l0040BFA8 l0040BF9C
l0040BFA8:
	r7 = 0x4120000<32>
	r22 = Mem0[r7 + 0x2A8<32>:word32]
	r23 = Mem0[r7 + 0x2AC<32>:word32]
	goto 0x0040BEA4<p32>
	goto l0040BEA4
	// succ:  l0040BEA4
l0040BFB6:
	r4 = r21
	call __shgetc (retsize: 0;)
	r7 = Mem0[r21 + 0x68<32>:word32]
	goto 0x0040BE0E<p32>
	goto l0040BE0E
	// succ:  l0040BE0E
l0040BFC0:
	r4 = r21
	call __shgetc (retsize: 0;)
	r7 = Mem0[r21 + 0x68<32>:word32]
	goto 0x0040BE24<p32>
	goto l0040BE24
	// succ:  l0040BE24
l0040BFCA:
	branch r5 != 0x30<32> l0040BFF0
	// succ:  l0040BFCE l0040BFF0
l0040BFCE:
	r6 = Mem0[r21 + 1<32>:word32]
	r7 = Mem0[r21 + 0x68<32>:word32]
	branch r6 >=u r7 l0040C036
	// succ:  l0040BFD8 l0040C036
l0040BFD8:
	r4 = r6 + 1<32>
	Mem0[r21 + 1<32>:word32] = r4
	r4 = CONVERT(Mem0[r6:byte], byte, word32)
	// succ:  l0040BFE0
l0040BFE0:
	r6 = r4 | 0x20<32>
	branch r6 == 0x38<32> l0040C0EA
	// succ:  l0040BFE8 l0040C0EA
l0040BFE8:
	branch r7 == 0<32> l0040BFF0
	// succ:  l0040BFEA l0040BFF0
l0040BFEA:
	r7 = Mem0[r21 + 1<32>:word32]
	r7 = r7 + 0xFFFFFFFF<32>
	Mem0[r21 + 1<32>:word32] = r7
	// succ:  l0040BFF0
l0040BFF0:
	r9 = r16
	r4 = r21
	r6 = r17
	r7 = r18
	r30 = Mem0[sp + 124<i32>:word32]
	ra = Mem0[sp + 120<i32>:word32]
	r16 = Mem0[sp + 116<i32>:word32]
	r17 = Mem0[sp + 112<i32>:word32]
	r18 = Mem0[sp + 108<i32>:word32]
	r19 = Mem0[sp + 104<i32>:word32]
	r20 = Mem0[sp + 100<i32>:word32]
	r21 = Mem0[sp + 96<i32>:word32]
	r22 = Mem0[sp + 92<i32>:word32]
	r23 = Mem0[sp + 88<i32>:word32]
	sp = sp + 128<i32>
	goto 0x0040B3FA<p32>
	// succ:  l0040BFFA_thunk_decfloat
l0040BFFA_thunk_decfloat:
	call decfloat (retsize: 0;)
	return
	// succ:  __floatscan_exit
l0040BFFE:
	Mem0[sp + 0x30<32>:word32] = r8
	r4 = r21
	call __shgetc (retsize: 0;)
	r18 = Mem0[sp + 0x30<32>:word32]
	r5 = r4
	goto 0x0040BDC8<p32>
	goto l0040BDC8
	// succ:  l0040BDC8
l0040C00A:
	r7 = 0x4120000<32>
	r8 = 1<32>
	r22 = Mem0[r7 + 0x2A0<32>:word32]
	r23 = Mem0[r7 + 0x2A4<32>:word32]
	goto 0x0040BEFA<p32>
	goto l0040BEFA
	// succ:  l0040BEFA
l0040C01C:
	r4 = r21
	call __shgetc (retsize: 0;)
	r7 = Mem0[r21 + 0x68<32>:word32]
	goto 0x0040BE3A<p32>
	goto l0040BE3A
	// succ:  l0040BE3A
l0040C026:
	r4 = r21
	call __shgetc (retsize: 0;)
	goto 0x0040BE66<p32>
	goto l0040BE66
	// succ:  l0040BE66
l0040C02C:
	r4 = r21
	call __shgetc (retsize: 0;)
	r7 = Mem0[r21 + 0x68<32>:word32]
	goto 0x0040BF3A<p32>
	goto l0040BF3A
	// succ:  l0040BF3A
l0040C036:
	Mem0[sp + 0x20<32>:word32] = r5
	Mem0[sp + 0x30<32>:word32] = r8
	r4 = r21
	call __shgetc (retsize: 0;)
	r7 = Mem0[r21 + 0x68<32>:word32]
	r17 = Mem0[sp + 0x20<32>:word32]
	r18 = Mem0[sp + 0x30<32>:word32]
	goto 0x0040BFE0<p32>
	goto l0040BFE0
	// succ:  l0040BFE0
l0040C048:
	r5 = 3<32>
	// succ:  l0040C04A
l0040C04A:
	branch r7 == 0<32> l0040C052
	// succ:  l0040C04C l0040C052
l0040C04C:
	r6 = Mem0[r21 + 1<32>:word32]
	r6 = r6 + 0xFFFFFFFF<32>
	Mem0[r21 + 1<32>:word32] = r6
	// succ:  l0040C052
l0040C052:
	branch 0<32> == r16 l0040BEA4
	// succ:  l0040C056 l0040BEA4
l0040C056:
	branch r5 == 3<32> l0040BEA4
	// succ:  l0040C05A l0040BEA4
l0040C05A:
	branch 0<32> == r7 l0040BEA4
	// succ:  l0040C05E l0040BEA4
l0040C05E:
	r7 = Mem0[r21 + 1<32>:word32]
	r6 = r7 + 0xFFFFFFFF<32>
	Mem0[r21 + 1<32>:word32] = r6
	branch r5 == 4<32> l0040BEA4
	// succ:  l0040C06A l0040BEA4
l0040C06A:
	r6 = r7 + 0xFFFFFFFE<32>
	Mem0[r21 + 1<32>:word32] = r6
	branch r5 == 5<32> l0040BEA4
	// succ:  l0040C074 l0040BEA4
l0040C074:
	r6 = r7 + 0xFFFFFFFD<32>
	Mem0[r21 + 1<32>:word32] = r6
	branch r5 != 7<32> l0040BEA4
	// succ:  l0040C07E l0040BEA4
l0040C07E:
	r7 = r7 + 0xFFFFFFFC<32>
	Mem0[r21 + 1<32>:word32] = r7
	r4 = r22
	r5 = r23
	r30 = Mem0[sp + 124<i32>:word32]
	ra = Mem0[sp + 120<i32>:word32]
	r16 = Mem0[sp + 116<i32>:word32]
	r17 = Mem0[sp + 112<i32>:word32]
	r18 = Mem0[sp + 108<i32>:word32]
	r19 = Mem0[sp + 104<i32>:word32]
	r20 = Mem0[sp + 100<i32>:word32]
	r21 = Mem0[sp + 96<i32>:word32]
	r22 = Mem0[sp + 92<i32>:word32]
	r23 = Mem0[sp + 88<i32>:word32]
	sp = sp + 128<i32>
	return
	// succ:  __floatscan_exit
l0040C086:
	r7 = Mem0[r21 + 0x68<32>:word32]
	r17 = r17 + 1<32>
	r6 = Mem0[r21 + 1<32>:word32]
	branch r6 <u r7 l0040BF64
	// succ:  l0040C092 l0040BF64
l0040C092:
	r4 = r21
	call __shgetc (retsize: 0;)
	goto 0x0040BF6C<p32>
	goto l0040BF6C
	// succ:  l0040BF6C
l0040C098:
	branch 0<32> == r7 l0040BFA8
	// succ:  l0040C09C l0040BFA8
l0040C09C:
	r7 = Mem0[r21 + 1<32>:word32]
	r6 = 0x4120000<32>
	r22 = Mem0[r6 + 0x2A8<32>:word32]
	r7 = r7 + 0xFFFFFFFF<32>
	r23 = Mem0[r6 + 0x2AC<32>:word32]
	Mem0[r21 + 1<32>:word32] = r7
	goto 0x0040BEA4<p32>
	goto l0040BEA4
	// succ:  l0040BEA4
l0040C0B0:
	r4 = r21
	call __shgetc (retsize: 0;)
	r7 = Mem0[r21 + 0x68<32>:word32]
	r6 = r4 ^ 0x28<32>
	r6 = CONVERT(0<32> <u r6, bool, word32)
	goto 0x0040BF58<p32>
	goto l0040BF58
	// succ:  l0040BF58
l0040C0C2:
	r4 = r21
	call __shgetc (retsize: 0;)
	r7 = Mem0[r21 + 0x68<32>:word32]
	goto 0x0040BF24<p32>
	goto l0040BF24
	// succ:  l0040BF24
l0040C0CC:
	r5 = 4<32>
	branch 0<32> != r16 l0040C04A
	// succ:  l0040C0D2 l0040C04A
l0040C0D2:
	goto 0x0040BE78<p32>
	goto l0040BE78
	// succ:  l0040BE78
l0040C0D4:
	r5 = 5<32>
	branch 0<32> != r16 l0040C04A
	// succ:  l0040C0DA l0040C04A
l0040C0DA:
	goto 0x0040BE78<p32>
	goto l0040BE78
	// succ:  l0040BE78
l0040C0DC:
	r5 = 6<32>
	branch 0<32> != r16 l0040C04A
	// succ:  l0040C0E2 l0040C04A
l0040C0E2:
	goto 0x0040BE78<p32>
	goto l0040BE78
	// succ:  l0040BE78
l0040C0E4:
	branch 0<32> != r16 l0040BFA8
	// succ:  l0040C0E8 l0040BFA8
l0040C0E8:
	goto 0x0040BE80<p32>
	goto l0040BE80
	// succ:  l0040BE80
l0040C0EA:
	r6 = Mem0[r21 + 1<32>:word32]
	branch r6 >=u r7 l0040C4E2
	// succ:  l0040C0F0 l0040C4E2
l0040C0F0:
	r7 = r6 + 1<32>
	Mem0[r21 + 1<32>:word32] = r7
	r4 = CONVERT(Mem0[r6:byte], byte, word32)
	// succ:  l0040C0F8
l0040C0F8:
	branch r4 != 0x30<32> l0040C4EC
	// succ:  l0040C0FC l0040C4EC
l0040C0FC:
	r7 = Mem0[r21 + 0x68<32>:word32]
	r22 = r8
	// succ:  l0040C102
l0040C102:
	r6 = Mem0[r21 + 1<32>:word32]
	branch r6 >=u r7 l0040C242
	// succ:  l0040C108 l0040C242
l0040C108:
	r5 = r6 + 1<32>
	Mem0[r21 + 1<32>:word32] = r5
	r4 = CONVERT(Mem0[r6:byte], byte, word32)
	branch r4 == 0x30<32> l0040C102
	// succ:  l0040C114 l0040C102
l0040C114:
	r8 = r22
	r6 = 1<32>
	// succ:  l0040C118
l0040C118:
	branch r4 == 0x2E<32> l0040C464
	// succ:  l0040C11C l0040C464
l0040C11C:
	Mem0[sp + 0x30<32>:word32] = 0<32>
	Mem0[sp + 0x34<32>:word32] = 0<32>
	Mem0[sp + 0x38<32>:word32] = 0<32>
	// succ:  l0040C122
l0040C122:
	r7 = 0x4120000<32>
	r22 = 0<32>
	r11 = 0<32>
	r23 = 0<32>
	Mem0[sp + 0x20<32>:word32] = 0<32>
	Mem0[sp + 0x24<32>:word32] = 0<32>
	Mem0[sp + 0x48<32>:word32] = 0<32>
	Mem0[sp + 0x4C<32>:word32] = r7
	r2 = Mem0[r7 + 0x258<32>:word32]
	r3 = Mem0[r7 + 0x25C<32>:word32]
	Mem0[sp + 40<i32>:word32] = r2
	Mem0[sp + 44<i32>:word32] = r3
	// succ:  l0040C140
l0040C140:
	r9 = r4 + 0xFFFFFFD0<32>
	branch r9 <u 0xA<32> l0040C180
	// succ:  l0040C148 l0040C180
l0040C148:
	r5 = r4 | 0x20<32>
	r7 = r5 + 0xFFFFFF9F<32>
	branch r7 <u 6<32> l0040C180
	// succ:  l0040C154 l0040C180
l0040C154:
	branch r4 != 0x2E<32> l0040C442
	// succ:  l0040C158 l0040C442
l0040C158:
	r17 = Mem0[sp + 0x30<32>:word32]
	branch 0<32> != r7 l0040C250
	// succ:  l0040C15E l0040C250
l0040C15E:
	r7 = 1<32>
	Mem0[sp + 0x34<32>:word32] = r22
	Mem0[sp + 0x30<32>:word32] = r7
	Mem0[sp + 0x38<32>:word32] = r11
	// succ:  l0040C166
l0040C166:
	r7 = Mem0[r21 + 1<32>:word32]
	r5 = Mem0[r21 + 0x68<32>:word32]
	branch r7 >=u r5 l0040C230
	// succ:  l0040C170 l0040C230
l0040C170:
	r5 = r7 + 1<32>
	Mem0[r21 + 1<32>:word32] = r5
	r4 = CONVERT(Mem0[r7:byte], byte, word32)
	r9 = r4 + 0xFFFFFFD0<32>
	branch r9 >=u 0xA<32> l0040C148
	// succ:  l0040C180 l0040C148
l0040C180:
	branch r4 == 0x2E<32> l0040C158
	// succ:  l0040C184 l0040C158
l0040C184:
	branch r4 < 0x3A<32> l0040C190
	// succ:  l0040C188 l0040C190
l0040C188:
	r4 = r4 | 0x20<32>
	r9 = r4 + 0xFFFFFFA9<32>
	// succ:  l0040C190
l0040C190:
	branch 0<32> < r11 l0040C1EE
	// succ:  l0040C194 l0040C1EE
l0040C194:
	branch 0<32> != r11 l0040C228
	// succ:  l0040C198 l0040C228
l0040C198:
	branch r22 <u 8<32> l0040C228
	// succ:  l0040C19C l0040C228
l0040C19C:
	branch r22 >=u 0xE<32> l0040C1EE
	// succ:  l0040C1A0 l0040C1EE
l0040C1A0:
	r7 = 0x4120000<32>
	Mem0[sp + 0x40<32>:word32] = r8
	r6 = Mem0[r7 + 0x2B0<32>:word32]
	r4 = Mem0[sp + 40<i32>:word32]
	r5 = Mem0[sp + 44<i32>:word32]
	r7 = Mem0[r7 + 0x2B4<32>:word32]
	Mem0[sp + 0x44<32>:word32] = r11
	Mem0[sp + 0x3C<32>:word32] = r9
	goto 0x00404330<p32>
	// succ:  l0040C1B6_thunk___muldf3
l0040C1B6_thunk___muldf3:
	call __muldf3 (retsize: 0;)
	return
	// succ:  __floatscan_exit
l0040C1DE:
	r7 = r22 + 1<32>
	r6 = 1<32>
	r5 = CONVERT(r7 <u r22, bool, word32)
	r22 = r7
	r11 = r11 + r5
	goto 0x0040C166<p32>
	goto l0040C166
	// succ:  l0040C166
l0040C1EE:
	branch 0<32> == r9 l0040C1DE
	// succ:  l0040C1F2 l0040C1DE
l0040C1F2:
	r17 = Mem0[sp + 0x48<32>:word32]
	branch r7 != 0<32> l0040C1DE
	// succ:  l0040C1F6 l0040C1DE
l0040C1F6:
	r7 = 0x4120000<32>
	Mem0[sp + 0x3C<32>:word32] = r8
	r6 = Mem0[r7 + 0x250<32>:word32]
	r8 = 1<32>
	r7 = Mem0[r7 + 0x254<32>:word32]
	r4 = Mem0[sp + 40<i32>:word32]
	r5 = Mem0[sp + 44<i32>:word32]
	Mem0[sp + 0x40<32>:word32] = r11
	Mem0[sp + 0x48<32>:word32] = r8
	goto 0x00404330<p32>
	// succ:  l0040C210_thunk___muldf3
l0040C210_thunk___muldf3:
	call __muldf3 (retsize: 0;)
	return
	// succ:  __floatscan_exit
l0040C228:
	r23 = r23 << 4<32>
	r23 = r23 + r9
	goto 0x0040C1DE<p32>
	goto l0040C1DE
	// succ:  l0040C1DE
l0040C230:
	Mem0[sp + 0x3C<32>:word32] = r8
	Mem0[sp + 0x40<32>:word32] = r6
	Mem0[sp + 0x44<32>:word32] = r11
	r4 = r21
	call __shgetc (retsize: 0;)
	r18 = Mem0[sp + 0x3C<32>:word32]
	r17 = Mem0[sp + 0x40<32>:word32]
	r18 = Mem0[sp + 0x44<32>:word32]
	goto 0x0040C140<p32>
	goto l0040C140
	// succ:  l0040C140
l0040C242:
	r4 = r21
	call __shgetc (retsize: 0;)
	branch r4 != 0x30<32> l0040C114
	// succ:  l0040C24A l0040C114
l0040C24A:
	r7 = Mem0[r21 + 0x68<32>:word32]
	goto 0x0040C102<p32>
	goto l0040C102
	// succ:  l0040C102
l0040C250:
	branch 0<32> == r6 l0040C410
	// succ:  l0040C254 l0040C410
l0040C254:
	branch 0<32> < r11 l0040C2DE
	// succ:  l0040C258 l0040C2DE
l0040C258:
	branch 0<32> == r11 l0040C62C
	// succ:  l0040C25C l0040C62C
l0040C25C:
	r5 = 0x2E<32>
	// succ:  l0040C25E
l0040C25E:
	r7 = r22 + 1<32>
	r23 = r23 << 4<32>
	r6 = CONVERT(r7 <u r22, bool, word32)
	r6 = r6 + r11
	branch r7 == 8<32> l0040C600
	// succ:  l0040C270 l0040C600
l0040C270:
	r7 = r22 + 2<32>
	r23 = r23 << 4<32>
	r6 = CONVERT(r7 <u r22, bool, word32)
	r6 = r6 + r11
	branch r7 == 8<32> l0040C626
	// succ:  l0040C282 l0040C626
l0040C282:
	r7 = r22 + 3<32>
	r23 = r23 << 4<32>
	r6 = CONVERT(r7 <u r22, bool, word32)
	r6 = r6 + r11
	branch r7 == 8<32> l0040C620
	// succ:  l0040C294 l0040C620
l0040C294:
	r7 = r22 + 4<32>
	r23 = r23 << 4<32>
	r6 = CONVERT(r7 <u r22, bool, word32)
	r6 = r6 + r11
	branch r7 == 8<32> l0040C61A
	// succ:  l0040C2A6 l0040C61A
l0040C2A6:
	r7 = r22 + 5<32>
	r23 = r23 << 4<32>
	r6 = CONVERT(r7 <u r22, bool, word32)
	r6 = r6 + r11
	branch r7 == 8<32> l0040C614
	// succ:  l0040C2B8 l0040C614
l0040C2B8:
	r7 = r22 + 6<32>
	r23 = r23 << 4<32>
	r6 = CONVERT(r7 <u r22, bool, word32)
	r6 = r6 + r11
	branch r7 == 8<32> l0040C5FA
	// succ:  l0040C2CA l0040C5FA
l0040C2CA:
	r11 = r22 | r11
	r23 = r23 << 4<32>
	branch 0<32> != r11 l0040C2DA
	// succ:  l0040C2D6 l0040C2DA
l0040C2D6:
	r23 = r23 << 4<32>
	// succ:  l0040C2DA
l0040C2DA:
	branch r5 == 0x30<32> l0040C5D2
	// succ:  l0040C2DE l0040C5D2
l0040C2DE:
	r7 = Mem0[r21 + 0x68<32>:word32]
	branch 0<32> == r7 l0040C5CC
	// succ:  l0040C2E6 l0040C5CC
l0040C2E6:
	r7 = Mem0[r21 + 1<32>:word32]
	r4 = 0<32>
	r5 = 0<32>
	r7 = r7 + 0xFFFFFFFF<32>
	Mem0[r21 + 1<32>:word32] = r7
	// succ:  l0040C2EE
l0040C2EE:
	branch 0<32> == r23 l0040C432
	// succ:  l0040C2F2 l0040C432
l0040C2F2:
	r17 = Mem0[sp + 0x34<32>:word32]
	r17 = Mem0[sp + 0x38<32>:word32]
	r16 = r7 + 0xFFFFFFF8<32>
	r9 = r6 + 0xFFFFFFFF<32>
	r6 = CONVERT(r16 <u r7, bool, word32)
	r6 = r6 + r9
	r7 = r16 << 2<32>
	r6 = r6 << 2<32>
	r16 = r16 >>u 0x1E<32>
	r4 = r7 + r4
	r6 = r6 | r16
	r7 = CONVERT(r4 <u r7, bool, word32)
	r6 = r6 + r5
	r7 = r7 + r6
	r16 = r4
	r21 = r7
	branch r30 < r7 l0040C59A
	// succ:  l0040C320 l0040C59A
l0040C320:
	branch 0<32> == r7 l0040C594
	// succ:  l0040C324 l0040C594
l0040C324:
	branch r7 < r20 l0040C51E
	// succ:  l0040C328 l0040C51E
l0040C328:
	branch r20 == r7 l0040C518
	// succ:  l0040C32C l0040C518
l0040C32C:
	branch r23 < 0<32> l0040C390
	// succ:  l0040C330 l0040C390
l0040C330:
	Mem0[sp + 0x18<32>:word32] = r17
	r17 = r16
	r5 = Mem0[sp + 0x20<32>:word32]
	r16 = r23
	r5 = Mem0[sp + 0x24<32>:word32]
	r20 = 0x4120000<32>
	r30 = r8
	r6 = Mem0[r20 + 0x250<32>:word32]
	r16 = r16 << 1<32>
	r7 = Mem0[r20 + 0x254<32>:word32]
	r4 = r22
	r5 = r23
	goto 0x004041D0<p32>
	// succ:  l0040C34C_thunk___gtdf2
l0040C34C_thunk___gtdf2:
	call __gtdf2 (retsize: 0;)
	return
	// succ:  __floatscan_exit
l0040C390:
	r6 = r16 + 0x20<32>
	r7 = CONVERT(r6 <u r16, bool, word32)
	r19 = r6 - r19
	r7 = r7 + r21
	r6 = CONVERT(r6 <u r19, bool, word32)
	r7 = r7 + 1<32>
	r7 = r7 - r6
	branch r7 < 0<32> l0040C3B2
	// succ:  l0040C3A8 l0040C3B2
l0040C3A8:
	r17 = Mem0[sp + 0x14<32>:word32]
	branch r6 != r7 l0040C3BC
	// succ:  l0040C3AC l0040C3BC
l0040C3AC:
	r17 = Mem0[sp + 8<32>:word32]
	branch r19 >=u r7 l0040C3BC
	// succ:  l0040C3B2 l0040C3BC
l0040C3B2:
	r17 = r16 - r18
	r17 = r17 + 0x20<32>
	branch r17 < 0<32> l0040C550
	// succ:  l0040C3BC l0040C550
l0040C3BC:
	branch r17 < 0x35<32> l0040C63C
	// succ:  l0040C3C0 l0040C63C
l0040C3C0:
	r18 = 0<32>
	r19 = 0<32>
	r4 = r8
	call __floatsidf (retsize: 0;)
	r6 = Mem0[sp + 32<i32>:word32]
	r7 = Mem0[sp + 36<i32>:word32]
	r8 = r4
	r9 = r5
	Mem0[sp + 8<i32>:word32] = r8
	Mem0[sp + 12<i32>:word32] = r9
	goto 0x00404330<p32>
	// succ:  l0040C3D2_thunk___muldf3
l0040C3D2_thunk___muldf3:
	call __muldf3 (retsize: 0;)
	return
	// succ:  __floatscan_exit
l0040C410:
	r7 = Mem0[r21 + 0x68<32>:word32]
	branch 0<32> == r7 l0040C4F0
	// succ:  l0040C418 l0040C4F0
l0040C418:
	r7 = Mem0[r21 + 1<32>:word32]
	r6 = r7 + 0xFFFFFFFF<32>
	Mem0[r21 + 1<32>:word32] = r6
	branch 0<32> == r16 l0040C4F4
	// succ:  l0040C424 l0040C4F4
l0040C424:
	r6 = r7 + 0xFFFFFFFE<32>
	Mem0[r21 + 1<32>:word32] = r6
	r17 = Mem0[sp + 0x30<32>:word32]
	branch r6 == 0<32> l0040C432
	// succ:  l0040C42E l0040C432
l0040C42E:
	r7 = r7 + 0xFFFFFFFD<32>
	Mem0[r21 + 1<32>:word32] = r7
	// succ:  l0040C432
l0040C432:
	r4 = r8
	call __floatsidf (retsize: 0;)
	r6 = 0<32>
	r7 = 0<32>
	goto 0x00404330<p32>
	// succ:  l0040C438_thunk___muldf3
l0040C438_thunk___muldf3:
	call __muldf3 (retsize: 0;)
	return
	// succ:  __floatscan_exit
l0040C442:
	branch r6 == 0<32> l0040C410
	// succ:  l0040C444 l0040C410
l0040C444:
	r6 = Mem0[sp + 48<i32>:word32]
	r7 = Mem0[sp + 52<i32>:word32]
	branch r6 != 0<32> l0040C44C
	// succ:  l0040C448_1 l0040C44C
l0040C448_1:
	r7 = r22
	// succ:  l0040C44C
l0040C44C:
	Mem0[sp + 0x34<32>:word32] = r7
	r17 = Mem0[sp + 0x38<32>:word32]
	branch r6 != 0<32> l0040C454
	// succ:  l0040C450_1 l0040C454
l0040C450_1:
	r7 = r11
	// succ:  l0040C454
l0040C454:
	Mem0[sp + 0x38<32>:word32] = r7
	branch 0<32> < r11 l0040C2DA
	// succ:  l0040C45A l0040C2DA
l0040C45A:
	branch 0<32> != r11 l0040C25E
	// succ:  l0040C45E l0040C25E
l0040C45E:
	branch r22 <u 8<32> l0040C25E
	// succ:  l0040C462 l0040C25E
l0040C462:
	goto 0x0040C2DA<p32>
	goto l0040C2DA
	// succ:  l0040C2DA
l0040C464:
	r5 = Mem0[r21 + 1<32>:word32]
	r7 = Mem0[r21 + 0x68<32>:word32]
	branch r5 >=u r7 l0040C50A
	// succ:  l0040C46E l0040C50A
l0040C46E:
	r7 = r5 + 1<32>
	Mem0[r21 + 1<32>:word32] = r7
	r4 = CONVERT(Mem0[r5:byte], byte, word32)
	// succ:  l0040C476
l0040C476:
	branch r4 != 0x30<32> l0040C500
	// succ:  l0040C47A l0040C500
l0040C47A:
	r7 = Mem0[r21 + 0x68<32>:word32]
	r22 = 0<32>
	Mem0[sp + 0x30<32>:word32] = r30
	r23 = 0<32>
	r30 = r20
	r20 = r19
	r19 = r16
	r16 = r8
	// succ:  l0040C48C
l0040C48C:
	r6 = Mem0[r21 + 1<32>:word32]
	r5 = r22 + 0xFFFFFFFF<32>
	r9 = CONVERT(r5 <u r22, bool, word32)
	r4 = r23 + 0xFFFFFFFF<32>
	branch r6 >=u r7 l0040C4C6
	// succ:  l0040C49E l0040C4C6
l0040C49E:
	r23 = r6 + 1<32>
	r22 = r5
	Mem0[r21 + 1<32>:word32] = r23
	r23 = r9 + r4
	r4 = CONVERT(Mem0[r6:byte], byte, word32)
	branch r4 == 0x30<32> l0040C48C
	// succ:  l0040C4B0 l0040C48C
l0040C4B0:
	r7 = 1<32>
	r8 = r16
	r6 = 1<32>
	r16 = r19
	Mem0[sp + 52<i32>:word32] = r22
	Mem0[sp + 56<i32>:word32] = r23
	r19 = r20
	r20 = r30
	r7 = Mem0[sp + 0x30<32>:word32]
	Mem0[sp + 0x30<32>:word32] = r7
	goto 0x0040C122<p32>
	goto l0040C122
	// succ:  l0040C122
l0040C4C6:
	r23 = r23 + 0xFFFFFFFF<32>
	r4 = r21
	call __shgetc (retsize: 0;)
	r7 = r22 + 0xFFFFFFFF<32>
	r6 = CONVERT(r7 <u r22, bool, word32)
	r22 = r7
	r23 = r23 + r6
	branch r4 != 0x30<32> l0040C4B0
	// succ:  l0040C4DC l0040C4B0
l0040C4DC:
	r7 = Mem0[r21 + 0x68<32>:word32]
	goto 0x0040C48C<p32>
	goto l0040C48C
	// succ:  l0040C48C
l0040C4E2:
	Mem0[sp + 0x30<32>:word32] = r8
	r4 = r21
	call __shgetc (retsize: 0;)
	r18 = Mem0[sp + 0x30<32>:word32]
	goto 0x0040C0F8<p32>
	goto l0040C0F8
	// succ:  l0040C0F8
l0040C4EC:
	r6 = 0<32>
	goto 0x0040C118<p32>
	goto l0040C118
	// succ:  l0040C118
l0040C4F0:
	branch 0<32> != r16 l0040C432
	// succ:  l0040C4F4 l0040C432
l0040C4F4:
	r6 = 0<32>
	r7 = 0<32>
	Mem0[sp + 8<32>:word32] = r8
	r4 = r21
	call __shlim (retsize: 0;)
	r18 = Mem0[sp + 8<32>:word32]
	goto 0x0040C432<p32>
	goto l0040C432
	// succ:  l0040C432
l0040C500:
	r7 = 1<32>
	Mem0[sp + 0x34<32>:word32] = 0<32>
	Mem0[sp + 0x30<32>:word32] = r7
	Mem0[sp + 0x38<32>:word32] = 0<32>
	goto 0x0040C122<p32>
	goto l0040C122
	// succ:  l0040C122
l0040C50A:
	Mem0[sp + 0x20<32>:word32] = r6
	Mem0[sp + 0x30<32>:word32] = r8
	r4 = r21
	call __shgetc (retsize: 0;)
	r17 = Mem0[sp + 0x20<32>:word32]
	r18 = Mem0[sp + 0x30<32>:word32]
	goto 0x0040C476<p32>
	goto l0040C476
	// succ:  l0040C476
l0040C518:
	r17 = Mem0[sp + 0x18<32>:word32]
	branch r4 >=u r7 l0040C32C
	// succ:  l0040C51E l0040C32C
l0040C51E:
	Mem0[sp + 8<32>:word32] = r8
	goto 0x004049B0<p32>
	// succ:  l0040C520_thunk___errno_location
l0040C520_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  __floatscan_exit
l0040C550:
	r17 = Mem0[sp + 0x4C<32>:word32]
	r6 = 0x54<32>
	Mem0[sp + 8<32>:word32] = r8
	r4 = Mem0[r7 + 0x258<32>:word32]
	r5 = Mem0[r7 + 0x25C<32>:word32]
	goto 0x0040CF40<p32>
	// succ:  l0040C55E_thunk_scalbn
l0040C55E_thunk_scalbn:
	call scalbn (retsize: 0;)
	return
	// succ:  __floatscan_exit
l0040C594:
	r17 = Mem0[sp + 0x1C<32>:word32]
	branch r6 >=u r4 l0040C324
	// succ:  l0040C59A l0040C324
l0040C59A:
	Mem0[sp + 8<32>:word32] = r8
	goto 0x004049B0<p32>
	// succ:  l0040C59C_thunk___errno_location
l0040C59C_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  __floatscan_exit
l0040C5CC:
	r4 = 0<32>
	r5 = 0<32>
	goto 0x0040C2EE<p32>
	goto l0040C2EE
	// succ:  l0040C2EE
l0040C5D2:
	r4 = r21
	r5 = r16
	Mem0[sp + 0x30<32>:word32] = r8
	goto 0x0040B250<p32>
	// succ:  l0040C5D6_thunk_scanexp
l0040C5D6_thunk_scanexp:
	call scanexp (retsize: 0;)
	return
	// succ:  __floatscan_exit
l0040C5FA:
	branch 0<32> != r6 l0040C2CA
	// succ:  l0040C5FE l0040C2CA
l0040C5FE:
	goto 0x0040C2DA<p32>
	goto l0040C2DA
	// succ:  l0040C2DA
l0040C600:
	branch 0<32> != r6 l0040C270
	// succ:  l0040C604 l0040C270
l0040C604:
	goto 0x0040C2DA<p32>
	goto l0040C2DA
	// succ:  l0040C2DA
l0040C614:
	branch 0<32> != r6 l0040C2B8
	// succ:  l0040C618 l0040C2B8
l0040C618:
	goto 0x0040C2DA<p32>
	goto l0040C2DA
	// succ:  l0040C2DA
l0040C61A:
	branch 0<32> != r6 l0040C2A6
	// succ:  l0040C61E l0040C2A6
l0040C61E:
	goto 0x0040C2DA<p32>
	goto l0040C2DA
	// succ:  l0040C2DA
l0040C620:
	branch 0<32> != r6 l0040C294
	// succ:  l0040C624 l0040C294
l0040C624:
	goto 0x0040C2DA<p32>
	goto l0040C2DA
	// succ:  l0040C2DA
l0040C626:
	branch 0<32> != r6 l0040C282
	// succ:  l0040C62A l0040C282
l0040C62A:
	goto 0x0040C2DA<p32>
	goto l0040C2DA
	// succ:  l0040C2DA
l0040C62C:
	branch r22 <u 8<32> l0040C25C
	// succ:  l0040C630 l0040C25C
l0040C630:
	goto 0x0040C2DE<p32>
	goto l0040C2DE
	// succ:  l0040C2DE
l0040C63C:
	r17 = Mem0[sp + 0x4C<32>:word32]
	r6 = 0x54<32>
	r6 = r6 - r17
	Mem0[sp + 8<32>:word32] = r8
	r4 = Mem0[r7 + 0x258<32>:word32]
	r5 = Mem0[r7 + 0x25C<32>:word32]
	goto 0x0040CF40<p32>
	// succ:  l0040C64C_thunk_scalbn
l0040C64C_thunk_scalbn:
	call scalbn (retsize: 0;)
	return
	// succ:  __floatscan_exit
__floatscan_exit:


// __intscan
// Return size: 0
define __intscan
__intscan_entry:
	sp = fp
	r25 = 0x40C670<32>
	// succ:  l0040C670
l0040C670:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 80<i32>
	Mem0[sp + 4<32>:word32] = r9
	Mem0[sp + 8<32>:word32] = r8
	branch r5 >=u 0x25<32> l0040C736
	// succ:  l0040C67A l0040C736
l0040C67A:
	r30 = r5
	branch r5 == 1<32> l0040C736
	// succ:  l0040C680 l0040C736
l0040C680:
	r19 = Mem0[r4 + 0x68<32>:word32]
	r16 = r4
	r17 = r6
	// succ:  l0040C688
l0040C688:
	r7 = Mem0[r16 + 4<32>:word32]
	branch r7 >=u r19 l0040C708
	// succ:  l0040C68E l0040C708
l0040C68E:
	r6 = r7 + 1<32>
	Mem0[sp + 4<32>:word32] = r6
	r4 = CONVERT(Mem0[r7:byte], byte, word32)
	branch r4 == 0x20<32> l0040C688
	// succ:  l0040C69A l0040C688
l0040C69A:
	r7 = r4 + 0xFFFFFFF7<32>
	branch r7 <u 5<32> l0040C688
	// succ:  l0040C6A2 l0040C688
l0040C6A2:
	branch r4 == 0x2B<32> l0040C742
	// succ:  l0040C6A6 l0040C742
l0040C6A6:
	branch r4 == 0x2D<32> l0040C742
	// succ:  l0040C6AA l0040C742
l0040C6AA:
	r23 = 0<32>
	// succ:  l0040C6AC
l0040C6AC:
	branch 0<32> == r30 l0040C716
	// succ:  l0040C6B0 l0040C716
l0040C6B0:
	branch r30 == 0x10<32> l0040C95A
	// succ:  l0040C6B4 l0040C95A
l0040C6B4:
	r22 = 0x0041326D<p32>
	r7 = CONVERT(Mem0[r22 + r4:byte], byte, word32)
	branch r7 >=u r30 l0040C728
	// succ:  l0040C6C2 l0040C728
l0040C6C2:
	r22 = 0x0041326D<p32>
	branch r30 == 0xA<32> l0040C75A
	// succ:  l0040C6CC l0040C75A
l0040C6CC:
	r7 = r30 + 0xFFFFFFFF<32>
	r20 = CONVERT(Mem0[r22 + r4:byte], byte, word32)
	r7 = r7 & r30
	branch 0<32> == r7 l0040C9A2
	// succ:  l0040C6DC l0040C9A2
l0040C6DC:
	r17 = 0<32>
	// succ:  l0040C6DE
l0040C6DE:
	r6 = r17 *s r30
	r7 = 0x71C71C6<32>
	branch r20 >=u r30 l0040C8A2
	// succ:  l0040C6EC l0040C8A2
l0040C6EC:
	branch r7 <u r17 l0040C8A2
	// succ:  l0040C6F0 l0040C8A2
l0040C6F0:
	r7 = Mem0[r16 + 4<32>:word32]
	r17 = r20 + r6
	r5 = r7 + 1<32>
	branch r7 >=u r19 l0040C808
	// succ:  l0040C6FE l0040C808
l0040C6FE:
	Mem0[sp + 4<32>:word32] = r5
	r4 = CONVERT(Mem0[r7:byte], byte, word32)
	r20 = CONVERT(Mem0[r22 + r4:byte], byte, word32)
	goto 0x0040C6DE<p32>
	goto l0040C6DE
	// succ:  l0040C6DE
l0040C708:
	r4 = r16
	call __shgetc (retsize: 0;)
	r19 = Mem0[r16 + 0x68<32>:word32]
	branch r4 == 0x20<32> l0040C688
	// succ:  l0040C714 l0040C688
l0040C714:
	goto 0x0040C69A<p32>
	goto l0040C69A
	// succ:  l0040C69A
l0040C716:
	branch r4 == 0x30<32> l0040C95E
	// succ:  l0040C71A l0040C95E
l0040C71A:
	r7 = 0x0041326D<p32>
	r7 = CONVERT(Mem0[r4 + r7:byte], byte, word32)
	branch r7 <u 0xA<32> l0040C75A
	// succ:  l0040C728 l0040C75A
l0040C728:
	branch r19 == 0<32> l0040C730
	// succ:  l0040C72A l0040C730
l0040C72A:
	r7 = Mem0[r16 + 4<32>:word32]
	r7 = r7 + 0xFFFFFFFF<32>
	Mem0[sp + 4<32>:word32] = r7
	// succ:  l0040C730
l0040C730:
	r6 = 0<32>
	r7 = 0<32>
	r4 = r16
	call __shlim (retsize: 0;)
	// succ:  l0040C736
l0040C736:
	goto 0x004049B0<p32>
	// succ:  l0040C736_thunk___errno_location
l0040C736_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  __intscan_exit
l0040C73E:
	r4 = 0<32>
	r5 = 0<32>
	r30 = Mem0[sp + 76<i32>:word32]
	ra = Mem0[sp + 72<i32>:word32]
	r16 = Mem0[sp + 68<i32>:word32]
	r17 = Mem0[sp + 64<i32>:word32]
	r18 = Mem0[sp + 60<i32>:word32]
	r19 = Mem0[sp + 56<i32>:word32]
	r20 = Mem0[sp + 52<i32>:word32]
	r21 = Mem0[sp + 48<i32>:word32]
	r22 = Mem0[sp + 44<i32>:word32]
	r23 = Mem0[sp + 40<i32>:word32]
	sp = sp + 80<i32>
	return
	// succ:  __intscan_exit
l0040C742:
	r7 = Mem0[r16 + 4<32>:word32]
	r4 = CONVERT(r4 == 0x2D<32>, bool, word32)
	r23 = -r4
	branch r7 >=u r19 l0040C98A
	// succ:  l0040C750 l0040C98A
l0040C750:
	r6 = r7 + 1<32>
	Mem0[sp + 4<32>:word32] = r6
	r4 = CONVERT(Mem0[r7:byte], byte, word32)
	goto 0x0040C6AC<p32>
	goto l0040C6AC
	// succ:  l0040C6AC
l0040C75A:
	r17 = 0<32>
	// succ:  l0040C75C
l0040C75C:
	r7 = r17 + (r17 << 2<8>)
	r6 = r4 + 0xFFFFFFD0<32>
	r5 = 0x19999998<32>
	r7 = r4 + (r7 << 1<8>)
	branch r6 >=u 0xA<32> l0040C79E
	// succ:  l0040C772 l0040C79E
l0040C772:
	branch r5 <u r17 l0040C79E
	// succ:  l0040C776 l0040C79E
l0040C776:
	r6 = Mem0[r16 + 4<32>:word32]
	r17 = r7 + 0xFFFFFFD0<32>
	branch r6 >=u r19 l0040C824
	// succ:  l0040C780 l0040C824
l0040C780:
	r7 = r6 + 1<32>
	r5 = 0x19999998<32>
	Mem0[sp + 4<32>:word32] = r7
	r7 = r17 + (r17 << 2<8>)
	r4 = CONVERT(Mem0[r6:byte], byte, word32)
	r6 = r4 + 0xFFFFFFD0<32>
	r7 = r4 + (r7 << 1<8>)
	branch r6 <u 0xA<32> l0040C772
	// succ:  l0040C79E l0040C772
l0040C79E:
	r18 = 0<32>
	// succ:  l0040C7A0
l0040C7A0:
	branch r6 >=u 0xA<32> l0040C846
	// succ:  l0040C7A4 l0040C846
l0040C7A4:
	r7 = 0x19999999<32>
	branch r7 <u r18 l0040C838
	// succ:  l0040C7AE l0040C838
l0040C7AE:
	branch r18 == r7 l0040C82E
	// succ:  l0040C7B2 l0040C82E
l0040C7B2:
	r7 = r17 << 2<32>
	r30 = r17 >>u 0x1E<32>
	r20 = r18 << 2<32>
	r5 = r7 + r17
	r20 = r20 | r30
	r7 = CONVERT(r5 <u r7, bool, word32)
	r20 = r20 + r18
	r8 = r5 >>u 0x1F<32>
	r7 = r7 + r20
	r20 = r6 >> 0x1F<32>
	r7 = r7 << 1<32>
	r30 = ~r20
	r7 = r7 | r8
	r5 = r5 << 1<32>
	r8 = ~r6
	branch r30 <u r7 l0040C838
	// succ:  l0040C7E6 l0040C838
l0040C7E6:
	branch r7 == r30 l0040CADC
	// succ:  l0040C7EA l0040CADC
l0040C7EA:
	r17 = r5 + r6
	r4 = Mem0[r16 + 4<32>:word32]
	r5 = CONVERT(r17 <u r5, bool, word32)
	r7 = r7 + r20
	r18 = r5 + r7
	branch r4 >=u r19 l0040C816
	// succ:  l0040C7FA l0040C816
l0040C7FA:
	r7 = r4 + 1<32>
	Mem0[sp + 4<32>:word32] = r7
	r4 = CONVERT(Mem0[r4:byte], byte, word32)
	r6 = r4 + 0xFFFFFFD0<32>
	goto 0x0040C7A0<p32>
	goto l0040C7A0
	// succ:  l0040C7A0
l0040C808:
	r4 = r16
	call __shgetc (retsize: 0;)
	r19 = Mem0[r16 + 0x68<32>:word32]
	r20 = CONVERT(Mem0[r22 + r4:byte], byte, word32)
	goto 0x0040C6DE<p32>
	goto l0040C6DE
	// succ:  l0040C6DE
l0040C816:
	r4 = r16
	call __shgetc (retsize: 0;)
	r19 = Mem0[r16 + 0x68<32>:word32]
	r6 = r4 + 0xFFFFFFD0<32>
	goto 0x0040C7A0<p32>
	goto l0040C7A0
	// succ:  l0040C7A0
l0040C824:
	r4 = r16
	call __shgetc (retsize: 0;)
	r19 = Mem0[r16 + 0x68<32>:word32]
	goto 0x0040C75C<p32>
	goto l0040C75C
	// succ:  l0040C75C
l0040C82E:
	r7 = 0x99999999<32>
	branch r7 >=u r17 l0040C7B2
	// succ:  l0040C838 l0040C7B2
l0040C838:
	r22 = 0x0041326D<p32>
	r7 = CONVERT(Mem0[r22 + r4:byte], byte, word32)
	branch r7 <u 0xA<32> l0040C8F8
	// succ:  l0040C846 l0040C8F8
l0040C846:
	branch r19 == 0<32> l0040C84E
	// succ:  l0040C848 l0040C84E
l0040C848:
	r7 = Mem0[r16 + 4<32>:word32]
	r7 = r7 + 0xFFFFFFFF<32>
	Mem0[sp + 4<32>:word32] = r7
	// succ:  l0040C84E
l0040C84E:
	r17 = Mem0[sp + 4<32>:word32]
	branch r18 >=u r7 l0040C86E
	// succ:  l0040C854 l0040C86E
l0040C854:
	r17 = r23 ^ r17
	r5 = r23 ^ r18
	r4 = r17 - r23
	r23 = r5 - r23
	r17 = CONVERT(r17 <u r4, bool, word32)
	r5 = r23 - r17
	r30 = Mem0[sp + 76<i32>:word32]
	ra = Mem0[sp + 72<i32>:word32]
	r16 = Mem0[sp + 68<i32>:word32]
	r17 = Mem0[sp + 64<i32>:word32]
	r18 = Mem0[sp + 60<i32>:word32]
	r19 = Mem0[sp + 56<i32>:word32]
	r20 = Mem0[sp + 52<i32>:word32]
	r21 = Mem0[sp + 48<i32>:word32]
	r22 = Mem0[sp + 44<i32>:word32]
	r23 = Mem0[sp + 40<i32>:word32]
	sp = sp + 80<i32>
	return
	// succ:  __intscan_exit
l0040C86E:
	branch r18 != r7 l0040C876
	// succ:  l0040C870 l0040C876
l0040C870:
	r17 = Mem0[sp + 8<32>:word32]
	branch r17 <u r7 l0040C854
	// succ:  l0040C876 l0040C854
l0040C876:
	r17 = Mem0[sp + 8<32>:word32]
	branch !__bit(r7, 0<32>) l0040C884
	// succ:  l0040C87C l0040C884
l0040C87C:
	branch 0<32> == r23 l0040CAE2
	// succ:  l0040C880 l0040CAE2
l0040C880:
	r23 = 0xFFFFFFFF<32>
	// succ:  l0040C884
l0040C884:
	r17 = Mem0[sp + 4<32>:word32]
	branch r7 <u r18 l0040C894
	// succ:  l0040C88A l0040C894
l0040C88A:
	branch r7 != r18 l0040C854
	// succ:  l0040C88E l0040C854
l0040C88E:
	r17 = Mem0[sp + 8<32>:word32]
	branch r7 >=u r17 l0040C854
	// succ:  l0040C894 l0040C854
l0040C894:
	goto 0x004049B0<p32>
	// succ:  l0040C894_thunk___errno_location
l0040C894_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  __intscan_exit
l0040C8A2:
	r18 = 0<32>
	r6 = r30
	r7 = 0<32>
	branch r20 >=u r30 l0040C846
	// succ:  l0040C8AC l0040C846
l0040C8AC:
	r4 = 0xFFFFFFFF<32>
	r5 = 0xFFFFFFFF<32>
	goto 0x0040EAB0<p32>
	// succ:  l0040C8B0_thunk___udivdi3
l0040C8B0_thunk___udivdi3:
	call __udivdi3 (retsize: 0;)
	return
	// succ:  __intscan_exit
l0040C8F8:
	r21 = Mem0[r16 + 1<32>:word32]
	r30 = 0xA<32>
	// succ:  l0040C8FE
l0040C8FE:
	branch r21 >=u r19 l0040C91A
	// succ:  l0040C902 l0040C91A
l0040C902:
	r7 = r21 + 1<32>
	Mem0[sp + 4<32>:word32] = r7
	r7 = CONVERT(Mem0[r21:byte], byte, word32)
	r7 = CONVERT(Mem0[r22 + r7:byte], byte, word32)
	branch r7 >=u r30 l0040C92E
	// succ:  l0040C914 l0040C92E
l0040C914:
	r21 = Mem0[r16 + 1<32>:word32]
	// succ:  l0040C916
l0040C916:
	branch r21 <u r19 l0040C902
	// succ:  l0040C91A l0040C902
l0040C91A:
	r4 = r16
	call __shgetc (retsize: 0;)
	r7 = CONVERT(Mem0[r22 + r4:byte], byte, word32)
	branch r7 >=u r30 l0040C92E
	// succ:  l0040C926 l0040C92E
l0040C926:
	r19 = Mem0[r16 + 0x68<32>:word32]
	r21 = Mem0[r16 + 1<32>:word32]
	goto 0x0040C916<p32>
	goto l0040C916
	// succ:  l0040C916
l0040C92E:
	goto 0x004049B0<p32>
	// succ:  l0040C92E_thunk___errno_location
l0040C92E_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  __intscan_exit
l0040C95A:
	branch r4 != 0x30<32> l0040CA88
	// succ:  l0040C95E l0040CA88
l0040C95E:
	r7 = Mem0[r16 + 4<32>:word32]
	branch r7 >=u r19 l0040CAA4
	// succ:  l0040C964 l0040CAA4
l0040C964:
	r6 = r7 + 1<32>
	Mem0[sp + 4<32>:word32] = r6
	r4 = CONVERT(Mem0[r7:byte], byte, word32)
	// succ:  l0040C96C
l0040C96C:
	r7 = r4 | 0x20<32>
	branch r7 == 0x38<32> l0040CAAE
	// succ:  l0040C974 l0040CAAE
l0040C974:
	branch 0<32> != r30 l0040C6C2
	// succ:  l0040C978 l0040C6C2
l0040C978:
	r22 = 0x0041326D<p32>
	r7 = 5<32>
	r20 = CONVERT(Mem0[r22 + r4:byte], byte, word32)
	r30 = 8<32>
	goto 0x0040C9B0<p32>
	goto l0040C9B0
	// succ:  l0040C9B0
l0040C98A:
	r4 = r16
	call __shgetc (retsize: 0;)
	r19 = Mem0[r16 + 0x68<32>:word32]
	goto 0x0040C6AC<p32>
	goto l0040C6AC
	// succ:  l0040C6AC
l0040C9A2:
	r7 = r30 + (r30 << 1<8>)
	r7 = r7 << 3<32>
	r7 = r7 - r30
	r7 = __ext(r7, 5<32>, 3<32>)
	// succ:  l0040C9B0
l0040C9B0:
	r6 = 0x0040FE0A<p32>
	r17 = 0<32>
	r5 = CONVERT(Mem0[r7 + r6:byte], byte, word32)
	// succ:  l0040C9BA
l0040C9BA:
	r7 = 0x7FFFFFF<32>
	r6 = r17 << r5
	branch r20 >=u r30 l0040C9F6
	// succ:  l0040C9C8 l0040C9F6
l0040C9C8:
	branch r7 <u r17 l0040C9F6
	// succ:  l0040C9CC l0040C9F6
l0040C9CC:
	r7 = Mem0[r16 + 4<32>:word32]
	r17 = r20 | r6
	branch r7 >=u r19 l0040C9E4
	// succ:  l0040C9D6 l0040C9E4
l0040C9D6:
	r6 = r7 + 1<32>
	Mem0[sp + 4<32>:word32] = r6
	r4 = CONVERT(Mem0[r7:byte], byte, word32)
	r20 = CONVERT(Mem0[r22 + r4:byte], byte, word32)
	goto 0x0040C9BA<p32>
	goto l0040C9BA
	// succ:  l0040C9BA
l0040C9E4:
	Mem0[sp + 0xC<32>:word32] = r5
	r4 = r16
	call __shgetc (retsize: 0;)
	r19 = Mem0[r16 + 0x68<32>:word32]
	r17 = Mem0[sp + 0xC<32>:word32]
	r20 = CONVERT(Mem0[r22 + r4:byte], byte, word32)
	goto 0x0040C9BA<p32>
	goto l0040C9BA
	// succ:  l0040C9BA
l0040C9F6:
	r3 = 0xFFFFFFFF<32>
	r2 = -r5
	r7 = r3 << r2
	r3 = r3 >>u r5
	branch r5 != 0<32> l0040CA0A
	// succ:  l0040CA06_1 l0040CA0A
l0040CA06_1:
	r7 = 0<32>
	// succ:  l0040CA0A
l0040CA0A:
	r10 = r3
	r11 = CONVERT(r5 < 0x20<32>, bool, word32)
	r3 = r3 | r7
	branch r11 != 0<32> l0040CA18
	// succ:  l0040CA14_1 l0040CA18
l0040CA14_1:
	r3 = r10
	// succ:  l0040CA18
l0040CA18:
	r18 = 0<32>
	branch r11 != 0<32> l0040CA1E
	// succ:  l0040CA1A_1 l0040CA1E
l0040CA1A_1:
	r10 = 0<32>
	// succ:  l0040CA1E
l0040CA1E:
	r4 = r17 >>u r2
	r7 = r18 << r5
	branch r5 != 0<32> l0040CA2A
	// succ:  l0040CA26_1 l0040CA2A
l0040CA26_1:
	r4 = 0<32>
	// succ:  l0040CA2A
l0040CA2A:
	r6 = r17 << r5
	branch r20 >=u r30 l0040C846
	// succ:  l0040CA32 l0040C846
l0040CA32:
	r7 = r7 | r4
	r21 = Mem0[r16 + 1<32>:word32]
	branch r10 <u r18 l0040C8FE
	// succ:  l0040CA3A l0040C8FE
l0040CA3A:
	r4 = r21 + 1<32>
	branch r11 != 0<32> l0040CA42
	// succ:  l0040CA3E_1 l0040CA42
l0040CA3E_1:
	r7 = r6
	// succ:  l0040CA42
l0040CA42:
	branch r18 == r10 l0040CA82
	// succ:  l0040CA46 l0040CA82
l0040CA46:
	branch r11 != 0<32> l0040CA4A
	// succ:  l0040CA46_1 l0040CA4A
l0040CA46_1:
	r6 = 0<32>
	// succ:  l0040CA4A
l0040CA4A:
	r18 = r7
	r17 = r20 | r6
	branch r21 >=u r19 l0040CA60
	// succ:  l0040CA54 l0040CA60
l0040CA54:
	Mem0[sp + 4<32>:word32] = r4
	r4 = CONVERT(Mem0[r21:byte], byte, word32)
	r20 = CONVERT(Mem0[r22 + r4:byte], byte, word32)
	goto 0x0040CA1E<p32>
	goto l0040CA1E
	// succ:  l0040CA1E
l0040CA60:
	Mem0[sp + 0xC<32>:word32] = r5
	Mem0[sp + 0x10<32>:word32] = r3
	Mem0[sp + 20<i32>:word32] = r10
	Mem0[sp + 24<i32>:word32] = r11
	Mem0[sp + 0x1C<32>:word32] = r2
	r4 = r16
	call __shgetc (retsize: 0;)
	r20 = CONVERT(Mem0[r22 + r4:byte], byte, word32)
	r10 = Mem0[sp + 20<i32>:word32]
	r11 = Mem0[sp + 24<i32>:word32]
	r19 = Mem0[r16 + 0x68<32>:word32]
	r17 = Mem0[sp + 0xC<32>:word32]
	r16 = Mem0[sp + 0x10<32>:word32]
	r16 = Mem0[sp + 0x1C<32>:word32]
	goto 0x0040CA1E<p32>
	goto l0040CA1E
	// succ:  l0040CA1E
l0040CA82:
	branch r3 >=u r17 l0040CA46
	// succ:  l0040CA86 l0040CA46
l0040CA86:
	goto 0x0040C8FE<p32>
	goto l0040C8FE
	// succ:  l0040C8FE
l0040CA88:
	r22 = 0x0041326D<p32>
	r7 = CONVERT(Mem0[r22 + r4:byte], byte, word32)
	branch r7 <u 0x10<32> l0040C6CC
	// succ:  l0040CA96 l0040C6CC
l0040CA96:
	goto 0x0040C728<p32>
	goto l0040C728
	// succ:  l0040C728
l0040CAA4:
	r4 = r16
	call __shgetc (retsize: 0;)
	r19 = Mem0[r16 + 0x68<32>:word32]
	goto 0x0040C96C<p32>
	goto l0040C96C
	// succ:  l0040C96C
l0040CAAE:
	r7 = Mem0[r16 + 4<32>:word32]
	branch r7 >=u r19 l0040CB16
	// succ:  l0040CAB4 l0040CB16
l0040CAB4:
	r6 = r7 + 1<32>
	Mem0[sp + 4<32>:word32] = r6
	r4 = CONVERT(Mem0[r7:byte], byte, word32)
	// succ:  l0040CABC
l0040CABC:
	r22 = 0x0041326D<p32>
	r20 = CONVERT(Mem0[r22 + r4:byte], byte, word32)
	branch r20 <u 0x10<32> l0040CB00
	// succ:  l0040CACA l0040CB00
l0040CACA:
	branch r19 == 0<32> l0040CB2C
	// succ:  l0040CACC l0040CB2C
l0040CACC:
	r7 = Mem0[r16 + 4<32>:word32]
	r6 = r7 + 0xFFFFFFFF<32>
	branch r17 == 0<32> l0040CB20
	// succ:  l0040CAD4 l0040CB20
l0040CAD4:
	r7 = r7 + 0xFFFFFFFE<32>
	r4 = 0<32>
	r5 = 0<32>
	Mem0[sp + 4<32>:word32] = r7
	r30 = Mem0[sp + 76<i32>:word32]
	ra = Mem0[sp + 72<i32>:word32]
	r16 = Mem0[sp + 68<i32>:word32]
	r17 = Mem0[sp + 64<i32>:word32]
	r18 = Mem0[sp + 60<i32>:word32]
	r19 = Mem0[sp + 56<i32>:word32]
	r20 = Mem0[sp + 52<i32>:word32]
	r21 = Mem0[sp + 48<i32>:word32]
	r22 = Mem0[sp + 44<i32>:word32]
	r23 = Mem0[sp + 40<i32>:word32]
	sp = sp + 80<i32>
	return
	// succ:  __intscan_exit
l0040CADC:
	branch r8 >=u r5 l0040C7EA
	// succ:  l0040CAE0 l0040C7EA
l0040CAE0:
	goto 0x0040C838<p32>
	goto l0040C838
	// succ:  l0040C838
l0040CAE2:
	goto 0x004049B0<p32>
	// succ:  l0040CAE2_thunk___errno_location
l0040CAE2_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  __intscan_exit
l0040CB00:
	r7 = 3<32>
	r30 = 0x10<32>
	goto 0x0040C9B0<p32>
	goto l0040C9B0
	// succ:  l0040C9B0
l0040CB16:
	r4 = r16
	call __shgetc (retsize: 0;)
	r19 = Mem0[r16 + 0x68<32>:word32]
	goto 0x0040CABC<p32>
	goto l0040CABC
	// succ:  l0040CABC
l0040CB20:
	Mem0[sp + 4<32>:word32] = r6
	// succ:  l0040CB22
l0040CB22:
	r6 = 0<32>
	r7 = 0<32>
	r4 = r16
	call __shlim (retsize: 0;)
	r4 = 0<32>
	r5 = 0<32>
	r30 = Mem0[sp + 76<i32>:word32]
	ra = Mem0[sp + 72<i32>:word32]
	r16 = Mem0[sp + 68<i32>:word32]
	r17 = Mem0[sp + 64<i32>:word32]
	r18 = Mem0[sp + 60<i32>:word32]
	r19 = Mem0[sp + 56<i32>:word32]
	r20 = Mem0[sp + 52<i32>:word32]
	r21 = Mem0[sp + 48<i32>:word32]
	r22 = Mem0[sp + 44<i32>:word32]
	r23 = Mem0[sp + 40<i32>:word32]
	sp = sp + 80<i32>
	return
	// succ:  __intscan_exit
l0040CB2C:
	branch 0<32> != r17 l0040C73E
	// succ:  l0040CB30 l0040C73E
l0040CB30:
	goto 0x0040CB22<p32>
	goto l0040CB22
	// succ:  l0040CB22
__intscan_exit:


// __shlim
// Return size: 0
define __shlim
__shlim_entry:
	sp = fp
	r25 = 0x40CB40<32>
	// succ:  l0040CB40
l0040CB40:
	r10 = Mem0[r4 + 1<32>:word32]
	r11 = r6 | r7
	r5 = Mem0[r4 + 8<32>:word32]
	Mem0[r4 + 112<i32>:word32] = r6
	Mem0[r4 + 116<i32>:word32] = r7
	r8 = r5 - r10
	r9 = r8 >> 0x1F<32>
	Mem0[r4 + 120<i32>:word32] = r8
	Mem0[r4 + 124<i32>:word32] = r9
	branch 0<32> == r11 l0040CB64
	// succ:  l0040CB5C l0040CB64
l0040CB5C:
	branch r7 < r9 l0040CB6E
	// succ:  l0040CB60 l0040CB6E
l0040CB60:
	branch r9 == r7 l0040CB6A
	// succ:  l0040CB64 l0040CB6A
l0040CB64:
	Mem0[r4 + 0x68<32>:byte] = SLICE(r5, byte, 0)
	return
	// succ:  __shlim_exit
l0040CB6A:
	branch r6 >=u r8 l0040CB64
	// succ:  l0040CB6E l0040CB64
l0040CB6E:
	r5 = r10 + r6
	Mem0[r4 + 0x68<32>:byte] = SLICE(r5, byte, 0)
	return
	// succ:  __shlim_exit
__shlim_exit:


// __shgetc
// Return size: 0
define __shgetc
__shgetc_entry:
	sp = fp
	r25 = 0x40CB78<32>
	// succ:  l0040CB78
l0040CB78:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r6 = Mem0[r4 + 112<i32>:word32]
	r7 = Mem0[r4 + 116<i32>:word32]
	r5 = r6 | r7
	r16 = r4
	branch r5 == 0<32> l0040CB8E
	// succ:  l0040CB86 l0040CB8E
l0040CB86:
	r5 = Mem0[r4 + 0x7C<32>:word32]
	branch r5 >= r7 l0040CC1C
	// succ:  l0040CB8E l0040CC1C
l0040CB8E:
	r4 = r16
	call __uflow (retsize: 0;)
	branch r4 < 0<32> l0040CC26
	// succ:  l0040CB96 l0040CC26
l0040CB96:
	r6 = Mem0[r16 + 0x70<32>:word32]
	r5 = Mem0[r16 + 0x74<32>:word32]
	r8 = Mem0[r16 + 1<32>:word32]
	r9 = r6 | r5
	r7 = Mem0[r16 + 8<32>:word32]
	branch 0<32> != r9 l0040CBE4
	// succ:  l0040CBAA l0040CBE4
l0040CBAA:
	r6 = r7
	// succ:  l0040CBAC
l0040CBAC:
	Mem0[r16 + 0x68<32>:byte] = SLICE(r6, byte, 0)
	branch r7 == 0<32> l0040CBD8
	// succ:  l0040CBB2 l0040CBD8
l0040CBB2:
	r6 = Mem0[r16 + 0x78<32>:word32]
	r7 = r7 - r8
	r7 = r7 + 1<32>
	r5 = Mem0[r16 + 0x7C<32>:word32]
	r9 = r6 + r7
	r7 = r7 >> 0x1F<32>
	r6 = CONVERT(r9 <u r6, bool, word32)
	r7 = r5 + r7
	r7 = r6 + r7
	Mem0[r16 + 0x78<32>:byte] = SLICE(r9, byte, 0)
	Mem0[r16 + 0x7C<32>:byte] = SLICE(r7, byte, 0)
	// succ:  l0040CBD8
l0040CBD8:
	r7 = CONVERT(Mem0[r8 - 1<32>:byte], byte, word32)
	branch r4 == r7 l0040CBE2
	// succ:  l0040CBDE l0040CBE2
l0040CBDE:
	Mem0[r8 - 1<32>:int8] = SLICE(r4, int8, 0)
	// succ:  l0040CBE2
l0040CBE2:
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  __shgetc_exit
l0040CBE4:
	r9 = Mem0[r16 + 0x78<32>:word32]
	r2 = r7 - r8
	r12 = Mem0[r16 + 0x7C<32>:word32]
	r10 = r2 >> 0x1F<32>
	r11 = r6 - r9
	r3 = CONVERT(r6 <u r11, bool, word32)
	r5 = r5 - r12
	r5 = r5 - r3
	branch r10 < r5 l0040CBAA
	// succ:  l0040CC08 l0040CBAA
l0040CC08:
	branch r5 == r10 l0040CC16
	// succ:  l0040CC0C l0040CC16
l0040CC0C:
	r6 = r6 + 0xFFFFFFFF<32>
	r6 = r6 - r9
	r6 = r6 + r8
	goto 0x0040CBAC<p32>
	goto l0040CBAC
	// succ:  l0040CBAC
l0040CC16:
	branch r2 <u r11 l0040CBAA
	// succ:  l0040CC1A l0040CBAA
l0040CC1A:
	goto 0x0040CC0C<p32>
	goto l0040CC0C
	// succ:  l0040CC0C
l0040CC1C:
	branch r5 != r7 l0040CC26
	// succ:  l0040CC1E l0040CC26
l0040CC1E:
	r7 = Mem0[r4 + 0x78<32>:word32]
	branch r7 <u r6 l0040CB8E
	// succ:  l0040CC26 l0040CB8E
l0040CC26:
	r4 = 0xFFFFFFFF<32>
	Mem0[r16 + 0x68<32>:byte] = SLICE(0<32>, byte, 0)
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  __shgetc_exit
__shgetc_exit:


// __syscall_ret
// Return size: 0
define __syscall_ret
__syscall_ret_entry:
	sp = fp
	r25 = 0x40CC30<32>
	// succ:  l0040CC30
l0040CC30:
	r7 = 0xFFFF0000<32>
	branch r7 <u r4 l0040CC3A
	// succ:  l0040CC38 l0040CC3A
l0040CC38:
	return
	// succ:  __syscall_ret_exit
l0040CC3A:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r16 = r4
	goto 0x004049B0<p32>
	// succ:  l0040CC3E_thunk___errno_location
l0040CC3E_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  __syscall_ret_exit
__syscall_ret_exit:


// __vdsosym
// Return size: 0
define __vdsosym
__vdsosym_entry:
	sp = fp
	r25 = 0x40CC50<32>
	// succ:  l0040CC50
l0040CC50:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 48<i32>
	r7 = 0x00430843<p32>
	r17 = Mem0[r7 + 0x10<32>:word32]
	r7 = Mem0[r17:word32]
	branch r7 == 0x21<32> l0040CDA2
	// succ:  l0040CC5E l0040CDA2
l0040CC5E:
	r16 = 0<32>
	branch r7 != 0<32> l0040CC6A
	// succ:  l0040CC62 l0040CC6A
l0040CC62:
	goto 0x0040CD20<p32>
	goto l0040CD20
	// succ:  l0040CD20
l0040CC64:
	r16 = r6
	branch 0<32> == r7 l0040CD20
	// succ:  l0040CC6A l0040CD20
l0040CC6A:
	r6 = r16 + 2<32>
	r7 = Mem0[r17 + r6 * 4<32>:word32]
	branch r7 != 0x21<32> l0040CC64
	// succ:  l0040CC74 l0040CC64
l0040CC74:
	r16 = r16 + 3<32>
	r16 = r16 << 2<32>
	// succ:  l0040CC78
l0040CC78:
	r11 = Mem0[r17 + r16:word32]
	branch 0<32> == r11 l0040CD20
	// succ:  l0040CC80 l0040CD20
l0040CC80:
	r6 = Mem0[r11 + 0x1C<32>:word32]
	r9 = CONVERT(Mem0[r11 + 0x2C<32>:uint16], uint16, word32)
	r6 = r6 + r11
	branch 0<32> == r9 l0040CD20
	// succ:  l0040CC8E l0040CD20
l0040CC8E:
	r10 = CONVERT(Mem0[r11 + 0x2A<32>:uint16], uint16, word32)
	r17 = 0xFFFFFFFF<32>
	r7 = 0<32>
	r16 = 0<32>
	goto 0x0040CCA6<p32>
	goto l0040CCA6
	// succ:  l0040CCA6
l0040CC9A:
	branch r8 == 2<32> l0040CD24
	// succ:  l0040CC9E l0040CD24
l0040CC9E:
	r16 = r16 + 1<32>
	r6 = r6 + r10
	branch r16 == r9 l0040CCBC
	// succ:  l0040CCA6 l0040CCBC
l0040CCA6:
	r8 = Mem0[r6:word32]
	branch r8 != 1<32> l0040CC9A
	// succ:  l0040CCAC l0040CC9A
l0040CCAC:
	r17 = Mem0[r6 + 4<i32>:word32]
	r18 = Mem0[r6 + 8<i32>:word32]
	r16 = r16 + 1<32>
	r17 = r17 + r11
	r6 = r6 + r10
	r17 = r17 - r18
	branch r16 != r9 l0040CCA6
	// succ:  l0040CCBC l0040CCA6
l0040CCBC:
	branch r7 == 0<32> l0040CD20
	// succ:  l0040CCBE l0040CD20
l0040CCBE:
	r6 = 0xFFFFFFFF<32>
	branch r17 == r6 l0040CD20
	// succ:  l0040CCC4 l0040CD20
l0040CCC4:
	r16 = Mem0[r7:word32]
	branch r16 == 0<32> l0040CD20
	// succ:  l0040CCC8 l0040CD20
l0040CCC8:
	r7 = r7 + 4<32>
	r22 = 0<32>
	r30 = 0<32>
	r23 = 0<32>
	r18 = 0<32>
	r21 = 0<32>
	goto 0x0040CCEA<p32>
	goto l0040CCEA
	// succ:  l0040CCEA
l0040CCD6:
	branch r16 == 4<32> l0040CD2E
	// succ:  l0040CCDA l0040CD2E
l0040CCDA:
	r16 = r16 ^ 5<32>
	branch r16 != 0<32> l0040CCE2
	// succ:  l0040CCDE_1 l0040CCE2
l0040CCDE_1:
	r21 = r6
	// succ:  l0040CCE2
l0040CCE2:
	r7 = r7 + 8<32>
	r16 = Mem0[r7 - 4<32>:word32]
	branch r16 == 0<32> l0040CD16
	// succ:  l0040CCEA l0040CD16
l0040CCEA:
	r6 = Mem0[r7:word32]
	r8 = 0x6FFFFFF0<32>
	r6 = r17 + r6
	branch r16 == 6<32> l0040CD2A
	// succ:  l0040CCF8 l0040CD2A
l0040CCF8:
	branch r16 <u 7<32> l0040CCD6
	// succ:  l0040CCFC l0040CCD6
l0040CCFC:
	branch r16 == r8 l0040CD32
	// succ:  l0040CD00 l0040CD32
l0040CD00:
	r8 = 0x6FFFFFFC<32>
	r7 = r7 + 8<32>
	r16 = r16 ^ r8
	branch r16 != 0<32> l0040CD10
	// succ:  l0040CD0C_1 l0040CD10
l0040CD0C_1:
	r22 = r6
	// succ:  l0040CD10
l0040CD10:
	r16 = Mem0[r7 - 4<32>:word32]
	branch r16 != 0<32> l0040CCEA
	// succ:  l0040CD16 l0040CCEA
l0040CD16:
	branch 0<32> == r21 l0040CD20
	// succ:  l0040CD1A l0040CD20
l0040CD1A:
	branch r18 == 0<32> l0040CD20
	// succ:  l0040CD1C l0040CD20
l0040CD1C:
	branch 0<32> != r23 l0040CD36
	// succ:  l0040CD20 l0040CD36
l0040CD20:
	r4 = 0<32>
	r30 = Mem0[sp + 44<i32>:word32]
	ra = Mem0[sp + 40<i32>:word32]
	r16 = Mem0[sp + 36<i32>:word32]
	r17 = Mem0[sp + 32<i32>:word32]
	r18 = Mem0[sp + 28<i32>:word32]
	r19 = Mem0[sp + 24<i32>:word32]
	r20 = Mem0[sp + 20<i32>:word32]
	r21 = Mem0[sp + 16<i32>:word32]
	r22 = Mem0[sp + 12<i32>:word32]
	r23 = Mem0[sp + 8<i32>:word32]
	sp = sp + 48<i32>
	return
	// succ:  __vdsosym_exit
l0040CD24:
	r7 = Mem0[r6 + 4<32>:word32]
	r7 = r7 + r11
	goto 0x0040CC9E<p32>
	goto l0040CC9E
	// succ:  l0040CC9E
l0040CD2A:
	r18 = r6
	goto 0x0040CCE2<p32>
	goto l0040CCE2
	// succ:  l0040CCE2
l0040CD2E:
	r23 = r6
	goto 0x0040CCE2<p32>
	goto l0040CCE2
	// succ:  l0040CCE2
l0040CD32:
	r30 = r6
	goto 0x0040CCE2<p32>
	goto l0040CCE2
	// succ:  l0040CCE2
l0040CD36:
	r8 = Mem0[r23 + 1<32>:word32]
	branch r22 != 0<32> l0040CD3C
	// succ:  l0040CD38_1 l0040CD3C
l0040CD38_1:
	r30 = 0<32>
	// succ:  l0040CD3C
l0040CD3C:
	branch 0<32> == r8 l0040CD20
	// succ:  l0040CD40 l0040CD20
l0040CD40:
	r20 = r4
	r19 = r5
	goto 0x0040CD4C<p32>
	goto l0040CD4C
	// succ:  l0040CD4C
l0040CD44:
	r16 = r16 + 1<32>
	r18 = r18 + 0x10<32>
	branch r16 >=u r8 l0040CD20
	// succ:  l0040CD4C l0040CD20
l0040CD4C:
	r6 = CONVERT(Mem0[r18 + 0xC<32>:byte], byte, word32)
	r7 = 0x27<32>
	r5 = r6 & 0xF<32>
	r7 = r7 >> r5
	branch __bit(r7, 0<32>) l0040CD44
	// succ:  l0040CD5C l0040CD44
l0040CD5C:
	r6 = r6 >>u 4<32>
	r7 = 0x406<32>
	r6 = r7 >> r6
	branch __bit(r6, 0<32>) l0040CD44
	// succ:  l0040CD6A l0040CD44
l0040CD6A:
	r7 = CONVERT(Mem0[r18 + 0xE<32>:uint16], uint16, word32)
	branch r7 == 0<32> l0040CD44
	// succ:  l0040CD70 l0040CD44
l0040CD70:
	r5 = Mem0[r18:word32]
	r5 = r5 + r21
	r4 = r19
	call strcmp (retsize: 0;)
	branch r4 != 0<32> l0040CD9E
	// succ:  l0040CD7A l0040CD9E
l0040CD7A:
	branch 0<32> == r30 l0040CDB4
	// succ:  l0040CD7E l0040CDB4
l0040CD7E:
	r5 = CONVERT(Mem0[r30 + r16 * 2<32>:word16], word16, word32)
	r7 = r22
	r5 = __ext(r5, 0<32>, 0xF<32>)
	goto 0x0040CD8C<p32>
	goto l0040CD8C
	// succ:  l0040CD8C
l0040CD8A:
	r7 = r7 + r6
	// succ:  l0040CD8C
l0040CD8C:
	r6 = CONVERT(Mem0[r7 + 2<32>:uint16], uint16, word32)
	branch !__bit(r6, 0<32>) l0040CD9A
	// succ:  l0040CD92 l0040CD9A
l0040CD92:
	r6 = CONVERT(Mem0[r7 + 4<32>:uint16], uint16, word32)
	r6 = __ext(r6, 0<32>, 0xF<32>)
	branch r5 == r6 l0040CDA6
	// succ:  l0040CD9A l0040CDA6
l0040CD9A:
	r6 = Mem0[r7 + 0x10<32>:word32]
	branch r6 != 0<32> l0040CD8A
	// succ:  l0040CD9E l0040CD8A
l0040CD9E:
	r8 = Mem0[r23 + 1<32>:word32]
	goto 0x0040CD44<p32>
	goto l0040CD44
	// succ:  l0040CD44
l0040CDA2:
	r16 = 4<32>
	goto 0x0040CC78<p32>
	goto l0040CC78
	// succ:  l0040CC78
l0040CDA6:
	r6 = Mem0[r7 + 0xC<32>:word32]
	r5 = Mem0[r7 + r6:word32]
	r5 = r5 + r21
	r4 = r20
	call strcmp (retsize: 0;)
	branch r4 != 0<32> l0040CD9E
	// succ:  l0040CDB4 l0040CD9E
l0040CDB4:
	r4 = Mem0[r18 + 4<32>:word32]
	r4 = r17 + r4
	r30 = Mem0[sp + 44<i32>:word32]
	ra = Mem0[sp + 40<i32>:word32]
	r16 = Mem0[sp + 36<i32>:word32]
	r17 = Mem0[sp + 32<i32>:word32]
	r18 = Mem0[sp + 28<i32>:word32]
	r19 = Mem0[sp + 24<i32>:word32]
	r20 = Mem0[sp + 20<i32>:word32]
	r21 = Mem0[sp + 16<i32>:word32]
	r22 = Mem0[sp + 12<i32>:word32]
	r23 = Mem0[sp + 8<i32>:word32]
	sp = sp + 48<i32>
	return
	// succ:  __vdsosym_exit
__vdsosym_exit:


// calloc
// Return size: 0
define calloc
calloc_entry:
	sp = fp
	r25 = 0x40CDC0<32>
	// succ:  l0040CDC0
l0040CDC0:
	branch r5 == 0<32> l0040CDD0
	// succ:  l0040CDC2 l0040CDD0
l0040CDC2:
	r6 = 0xFFFFFFFF<32>
	lo = r7 /u r6
	hi = r7 % r6
	branch r5 != r0 l0040CDCC
	// succ:  l0040CDC8_1 l0040CDCC
l0040CDC8_1:
	__trap_code(7<32>)
	// succ:  l0040CDCC
l0040CDCC:
	branch r7 <u r4 l0040CDD6
	// succ:  l0040CDD0 l0040CDD6
l0040CDD0:
	r4 = r4 *s r5
	goto 0x0040579A<p32>
	// succ:  l0040CDD2_thunk___malloc0
l0040CDD2_thunk___malloc0:
	call __malloc0 (retsize: 0;)
	return
	// succ:  calloc_exit
l0040CDD6:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	goto 0x004049B0<p32>
	// succ:  l0040CDD8_thunk___errno_location
l0040CDD8_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  calloc_exit
calloc_exit:


// __expand_heap
// Return size: 0
define __expand_heap
__expand_heap_entry:
	sp = fp
	r25 = 0x40CDF0<32>
	// succ:  l0040CDF0
l0040CDF0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 32<i32>
	r18 = 0x00430913<p32>
	r7 = 0x7FFFFFFF<32>
	r6 = Mem0[r18 + 0x24<32>:word32]
	r16 = Mem0[r4:word32]
	r7 = r7 - r6
	branch r7 <u r16 l0040CEDC
	// succ:  l0040CE06 l0040CEDC
l0040CE06:
	r7 = -r16
	r5 = r6 + 0xFFFFFFFF<32>
	r17 = r4
	r7 = r7 & r5
	r4 = Mem0[0x00432EF4<p32>:word32]
	r16 = r16 + r7
	branch 0<32> == r4 l0040CEB4
	// succ:  l0040CE1E l0040CEB4
l0040CE1E:
	r7 = ~r4
	branch r16 >=u r7 l0040CE42
	// succ:  l0040CE26 l0040CE42
l0040CE26:
	r7 = Mem0[r18 + 0x10<32>:word32]
	r8 = 0x8000000<32>
	r5 = r16 + r4
	branch r8 >=u r7 l0040CED4
	// succ:  l0040CE32 l0040CED4
l0040CE32:
	r8 = r7
	r8 = r8 + 0xFF800000<32>
	// succ:  l0040CE3A
l0040CE3A:
	branch r8 >=u r5 l0040CE82
	// succ:  l0040CE3E l0040CE82
l0040CE3E:
	branch r4 >=u r7 l0040CE82
	// succ:  l0040CE42 l0040CE82
l0040CE42:
	r5 = Mem0[0x00432EF0<p32>:word32]
	r7 = 0x802<32>
	r5 = r5 >>u 1<32>
	r10 = 0<32>
	r5 = r6 << r5
	r11 = 0<32>
	r4 = CONVERT(r5 <u r16, bool, word32)
	r8 = 0xFFFFFFFF<32>
	branch r4 != 0<32> l0040CE62
	// succ:  l0040CE5E_1 l0040CE62
l0040CE5E_1:
	r16 = r5
	// succ:  l0040CE62
l0040CE62:
	r6 = 3<32>
	r4 = 0<32>
	r5 = r16
	goto 0x00405BE2<p32>
	// succ:  l0040CE66_thunk_mmap64
l0040CE66_thunk_mmap64:
	call mmap64 (retsize: 0;)
	return
	// succ:  __expand_heap_exit
l0040CE82:
	r7 = sp + 0xC<32>
	r8 = 0x8000000<32>
	branch r8 >=u r7 l0040CED8
	// succ:  l0040CE8C l0040CED8
l0040CE8C:
	r8 = r7
	r8 = r8 + 0xFF800000<32>
	// succ:  l0040CE94
l0040CE94:
	branch r8 >=u r5 l0040CE9C
	// succ:  l0040CE98 l0040CE9C
l0040CE98:
	branch r4 <u r7 l0040CE42
	// succ:  l0040CE9C l0040CE42
l0040CE9C:
	r4 = 0xD6<32>
	goto 0x00404A50<p32>
	// succ:  l0040CEA0_thunk___syscall
l0040CEA0_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  __expand_heap_exit
l0040CEB4:
	r5 = 0<32>
	r4 = 0xD6<32>
	goto 0x00404A50<p32>
	// succ:  l0040CEBA_thunk___syscall
l0040CEBA_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  __expand_heap_exit
l0040CED4:
	r8 = 0<32>
	goto 0x0040CE3A<p32>
	goto l0040CE3A
	// succ:  l0040CE3A
l0040CED8:
	r8 = 0<32>
	goto 0x0040CE94<p32>
	goto l0040CE94
	// succ:  l0040CE94
l0040CEDC:
	goto 0x004049B0<p32>
	// succ:  l0040CEDC_thunk___errno_location
l0040CEDC_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  __expand_heap_exit
__expand_heap_exit:


// copysignl
// Return size: 0
define copysignl
copysignl_entry:
	sp = fp
	r25 = 0x40CF00<32>
	// succ:  l0040CF00
l0040CF00:
	goto 0x0040E120<p32>
	// succ:  l0040CF00_thunk_copysign
l0040CF00_thunk_copysign:
	call copysign (retsize: 0;)
	return
	// succ:  copysignl_exit
copysignl_exit:


// fabs
// Return size: 0
define fabs
fabs_entry:
	sp = fp
	r25 = 0x40CF10<32>
	// succ:  l0040CF10
l0040CF10:
	r6 = r4
	r7 = __ext(r5, 0<32>, 0x1F<32>)
	r4 = r6
	r5 = r7
	return
	// succ:  fabs_exit
fabs_exit:


// fmodl
// Return size: 0
define fmodl
fmodl_entry:
	sp = fp
	r25 = 0x40CF20<32>
	// succ:  l0040CF20
l0040CF20:
	goto 0x0040E140<p32>
	// succ:  l0040CF20_thunk_fmod
l0040CF20_thunk_fmod:
	call fmod (retsize: 0;)
	return
	// succ:  fmodl_exit
fmodl_exit:


// frexpl
// Return size: 0
define frexpl
frexpl_entry:
	sp = fp
	r25 = 0x40CF30<32>
	// succ:  l0040CF30
l0040CF30:
	goto 0x0040E2C0<p32>
	// succ:  l0040CF30_thunk_frexp
l0040CF30_thunk_frexp:
	call frexp (retsize: 0;)
	return
	// succ:  frexpl_exit
frexpl_exit:


// scalbn
// Return size: 0
define scalbn
scalbn_entry:
	sp = fp
	r25 = 0x40CF40<32>
	// succ:  l0040CF40
l0040CF40:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	sp = sp - 32<i32>
	r18 = 0x3FF<32>
	r17 = r6
	r8 = r4
	r9 = r5
	branch r18 >= r6 l0040CF90
	// succ:  l0040CF4E l0040CF90
l0040CF4E:
	r19 = 0x4120000<32>
	r16 = r17 + 0xFFFFFC01<32>
	r6 = Mem0[r19 + 0x2B8<32>:word32]
	r7 = Mem0[r19 + 0x2BC<32>:word32]
	goto 0x0040CFCC<p32>
	goto l0040CFCC
	// succ:  l0040CFCC
l0040CF7E:
	r16 = r16 + 0x3FF<32>
	r4 = 0<32>
	r5 = r16 << 0x14<32>
	r6 = r4
	r7 = r5
	r4 = r8
	r5 = r9
	goto 0x0040CFCC<p32>
	goto l0040CFCC
	// succ:  l0040CFCC
l0040CF90:
	r18 = 0xFFFFFC02<32>
	r16 = r6
	branch r6 >= r18 l0040CF7E
	// succ:  l0040CF9A l0040CF7E
l0040CF9A:
	r19 = 0x4120000<32>
	r16 = r17 + 0x3C9<32>
	r6 = Mem0[r19 + 0x2C0<32>:word32]
	r7 = Mem0[r19 + 0x2C4<32>:word32]
	goto 0x0040CFCC<p32>
	// succ:  l0040CFCC
l0040CFCC:
	goto 0x00404330<p32>
	// succ:  l0040CFCC_thunk___muldf3
l0040CFCC_thunk___muldf3:
	call __muldf3 (retsize: 0;)
	return
	// succ:  scalbn_exit
scalbn_exit:


// scalbnl
// Return size: 0
define scalbnl
scalbnl_entry:
	sp = fp
	r25 = 0x40CFD0<32>
	// succ:  l0040CFD0
l0040CFD0:
	goto 0x0040CF40<p32>
	// succ:  l0040CFD0_thunk_scalbn
l0040CFD0_thunk_scalbn:
	call scalbn (retsize: 0;)
	return
	// succ:  scalbnl_exit
scalbnl_exit:


// mbstowcs
// Return size: 0
define mbstowcs
mbstowcs_entry:
	sp = fp
	r25 = 0x40CFE0<32>
	// succ:  l0040CFE0
l0040CFE0:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 32<i32>
	r7 = 0<32>
	Mem0[sp + 0xC<32>:word32] = r5
	r5 = sp + 0xC<32>
	goto 0x0040E410<p32>
	// succ:  l0040CFE8_thunk_mbsrtowcs
l0040CFE8_thunk_mbsrtowcs:
	call mbsrtowcs (retsize: 0;)
	return
	// succ:  mbstowcs_exit
mbstowcs_exit:


// wctomb
// Return size: 0
define wctomb
wctomb_entry:
	sp = fp
	r25 = 0x40CFF0<32>
	// succ:  l0040CFF0
l0040CFF0:
	branch r4 == 0<32> l0040CFF8
	// succ:  l0040CFF2 l0040CFF8
l0040CFF2:
	r6 = 0<32>
	goto 0x0040E600<p32>
	// succ:  l0040CFF4_thunk_wcrtomb
l0040CFF4_thunk_wcrtomb:
	call wcrtomb (retsize: 0;)
	return
	// succ:  wctomb_exit
l0040CFF8:
	return
	// succ:  wctomb_exit
wctomb_exit:


// dn_expand
// Return size: 0
define dn_expand
dn_expand_entry:
	sp = fp
	r25 = 0x40D000<32>
	// succ:  l0040D000
l0040D000:
	branch r5 != r6 l0040D00A
	// succ:  l0040D002 l0040D00A
l0040D002:
	r9 = 0xFFFFFFFF<32>
	// succ:  l0040D006
l0040D006:
	r4 = r9
	return
	// succ:  dn_expand_exit
l0040D00A:
	branch 0<32> >= r8 l0040D002
	// succ:  l0040D00E l0040D002
l0040D00E:
	r9 = CONVERT(r8 < 0xFF<32>, bool, word32)
	r10 = 0xFE<32>
	branch r9 != 0<32> l0040D01A
	// succ:  l0040D016_1 l0040D01A
l0040D016_1:
	r8 = r10
	// succ:  l0040D01A
l0040D01A:
	r13 = r6
	r8 = r8 + r7
	r11 = r7
	r14 = 0<32>
	r9 = 0xFFFFFFFF<32>
	// succ:  l0040D026
l0040D026:
	r2 = r5 - r4
	branch r14 >= r2 l0040D002
	// succ:  l0040D02E l0040D002
l0040D02E:
	r10 = CONVERT(Mem0[r13:byte], byte, word32)
	r3 = r10 & 0xC0<32>
	branch 0<32> == r3 l0040D06E
	// succ:  l0040D03A l0040D06E
l0040D03A:
	r3 = r13 + 1<32>
	branch r5 == r3 l0040D002
	// succ:  l0040D042 l0040D002
l0040D042:
	r3 = 0x3F00<32>
	r10 = r10 << 8<32>
	r10 = r10 & r3
	r3 = CONVERT(Mem0[r13 + 1<32>:byte], byte, word32)
	r10 = r10 | r3
	branch r9 >= 0<32> l0040D062
	// succ:  l0040D05A l0040D062
l0040D05A:
	r9 = r13 + 2<32>
	r9 = r9 - r6
	// succ:  l0040D062
l0040D062:
	branch r10 >= r2 l0040D002
	// succ:  l0040D066 l0040D002
l0040D066:
	r13 = r4 + r10
	// succ:  l0040D06A
l0040D06A:
	r14 = r14 + 2<32>
	goto 0x0040D026<p32>
	goto l0040D026
	// succ:  l0040D026
l0040D06E:
	branch 0<32> == r10 l0040D0BC
	// succ:  l0040D072 l0040D0BC
l0040D072:
	r2 = r7
	branch r11 == r7 l0040D084
	// succ:  l0040D078 l0040D084
l0040D078:
	r10 = 0x2E<32>
	r2 = r11 + 1<32>
	Mem0[r11:byte] = SLICE(r10, byte, 0)
	// succ:  l0040D084
l0040D084:
	r3 = r13 + 1<32>
	r10 = CONVERT(Mem0[r13:byte], byte, word32)
	r11 = r5 - r3
	branch r10 >= r11 l0040D002
	// succ:  l0040D094 l0040D002
l0040D094:
	r11 = r8 - r2
	branch r10 >= r11 l0040D002
	// succ:  l0040D09C l0040D002
l0040D09C:
	r11 = 0<32>
	goto 0x0040D0AE<p32>
	goto l0040D0AE
	// succ:  l0040D0AE
l0040D0A0:
	r12 = r13 + r11
	r12 = CONVERT(Mem0[r12 + 1<32>:byte], byte, word32)
	Mem0[r11 + r2:byte] = SLICE(r12, byte, 0)
	r11 = r11 + 1<32>
	// succ:  l0040D0AE
l0040D0AE:
	branch r10 != r11 l0040D0A0
	// succ:  l0040D0B2 l0040D0A0
l0040D0B2:
	r11 = r2 + r10
	r13 = r3 + r10
	goto 0x0040D06A<p32>
	goto l0040D06A
	// succ:  l0040D06A
l0040D0BC:
	Mem0[r11:byte] = SLICE(0<32>, byte, 0)
	branch r9 >= 0<32> l0040D006
	// succ:  l0040D0C4 l0040D006
l0040D0C4:
	r9 = r13 + 1<32>
	r9 = r9 - r6
	goto 0x0040D006<p32>
	goto l0040D006
	// succ:  l0040D006
dn_expand_exit:


// __dns_parse
// Return size: 0
define __dns_parse
__dns_parse_entry:
	sp = fp
	r25 = 0x40D0D0<32>
	// succ:  l0040D0D0
l0040D0D0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	Mem0[sp + -32<i32>:word32] = r22
	sp = sp - 32<i32>
	r18 = r4
	r20 = r5
	r21 = r6
	r22 = r7
	branch r20 >= 0xC<32> l0040D0DE
	// succ:  l0040D0DA l0040D0DE
l0040D0DA:
	r4 = 0xFFFFFFFF<32>
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	r20 = Mem0[sp + 8<i32>:word32]
	r21 = Mem0[sp + 4<i32>:word32]
	r22 = Mem0[sp + 0<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  __dns_parse_exit
l0040D0DE:
	r7 = CONVERT(Mem0[r18 + 3<32>:byte], byte, word32)
	r7 = r7 & 0xF<32>
	branch r7 == 0<32> l0040D0E8
	// succ:  l0040D0E4 l0040D0E8
l0040D0E4:
	r4 = 0<32>
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	r20 = Mem0[sp + 8<i32>:word32]
	r21 = Mem0[sp + 4<i32>:word32]
	r22 = Mem0[sp + 0<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  __dns_parse_exit
l0040D0E8:
	r6 = CONVERT(Mem0[r18 + 4<32>:byte], byte, word32)
	r7 = r18 + 0xC<32>
	r5 = CONVERT(Mem0[r18 + 5<32>:byte], byte, word32)
	r6 = r6 << 8<32>
	r19 = CONVERT(Mem0[r18 + 6<32>:byte], byte, word32)
	r6 = r6 + r5
	r5 = CONVERT(Mem0[r18 + 7<32>:byte], byte, word32)
	r19 = r19 << 8<32>
	r19 = r19 + r5
	r5 = r6 + r19
	branch r5 >= 1<32> l0040D0DA
	// succ:  l0040D108 l0040D0DA
l0040D108:
	r6 = r6 + 0xFFFFFFFF<32>
	r5 = 0xFFFFFFFF<32>
	branch r5 != r6 l0040D11A
	// succ:  l0040D10E l0040D11A
l0040D10E:
	r19 = r19 + 0xFFFFFFFF<32>
	r6 = 0xFFFFFFFF<32>
	branch r6 != r19 l0040D156
	// succ:  l0040D116 l0040D156
l0040D116:
	goto 0x0040D0E4<p32>
	goto l0040D0E4
	// succ:  l0040D0E4
l0040D118:
	r7 = r7 + 1<32>
	// succ:  l0040D11A
l0040D11A:
	r4 = r7 - r18
	r5 = CONVERT(Mem0[r7:byte], byte, word32)
	branch r4 >= r20 l0040D12A
	// succ:  l0040D122 l0040D12A
l0040D122:
	r4 = r5 + 0xFFFFFFFF<32>
	branch r4 <u 0x3F<32> l0040D118
	// succ:  l0040D12A l0040D118
l0040D12A:
	r4 = 0xC1<32>
	branch r4 <u r5 l0040D0DA
	// succ:  l0040D132 l0040D0DA
l0040D132:
	branch r4 != r5 l0040D13E
	// succ:  l0040D134 l0040D13E
l0040D134:
	r16 = CONVERT(Mem0[r7 + 1<32>:byte], byte, word32)
	r4 = 0xFF<32>
	branch r16 == r4 l0040D0DA
	// succ:  l0040D13E l0040D0DA
l0040D13E:
	r4 = r20 + 0xFFFFFFFA<32>
	r4 = r18 + r4
	branch r4 <u r7 l0040D0DA
	// succ:  l0040D148 l0040D0DA
l0040D148:
	r4 = 6<32>
	r16 = 5<32>
	branch r5 != 0<32> l0040D150
	// succ:  l0040D14C_1 l0040D150
l0040D14C_1:
	r4 = r16
	// succ:  l0040D150
l0040D150:
	r7 = r7 + r4
	goto 0x0040D108<p32>
	goto l0040D108
	// succ:  l0040D108
l0040D154:
	r7 = r7 + 1<32>
	// succ:  l0040D156
l0040D156:
	r6 = r7 - r18
	r16 = CONVERT(Mem0[r7:byte], byte, word32)
	branch r6 >= r20 l0040D166
	// succ:  l0040D15E l0040D166
l0040D15E:
	r6 = r16 + 0xFFFFFFFF<32>
	branch r6 <u 0x3F<32> l0040D154
	// succ:  l0040D166 l0040D154
l0040D166:
	r6 = 0xC1<32>
	branch r6 <u r16 l0040D0DA
	// succ:  l0040D16E l0040D0DA
l0040D16E:
	branch r16 != r6 l0040D17A
	// succ:  l0040D170 l0040D17A
l0040D170:
	r5 = CONVERT(Mem0[r7 + 1<32>:byte], byte, word32)
	r6 = 0xFF<32>
	branch r5 == r6 l0040D0DA
	// succ:  l0040D17A l0040D0DA
l0040D17A:
	r6 = r20 + 0xFFFFFFFA<32>
	r6 = r18 + r6
	branch r6 <u r7 l0040D0DA
	// succ:  l0040D184 l0040D0DA
l0040D184:
	r6 = 2<32>
	r5 = 1<32>
	branch r16 != 0<32> l0040D18C
	// succ:  l0040D188_1 l0040D18C
l0040D188_1:
	r6 = r5
	// succ:  l0040D18C
l0040D18C:
	r16 = r7 + r6
	r6 = r18 + r20
	r17 = CONVERT(Mem0[r16 + 8<32>:byte], byte, word32)
	r7 = CONVERT(Mem0[r16 + 9<32>:byte], byte, word32)
	r17 = r17 << 8<32>
	r17 = r17 + r7
	r7 = r16 + r17
	branch r6 <u r7 l0040D0DA
	// succ:  l0040D1A4 l0040D0DA
l0040D1A4:
	r5 = CONVERT(Mem0[r16 + 1<32>:byte], byte, word32)
	r6 = r16 + 0xA<32>
	r7 = r17
	r8 = r18
	r4 = r22
	call r21 (retsize: 0;)
	branch r4 < 0<32> l0040D0DA
	// succ:  l0040D1B4 l0040D0DA
l0040D1B4:
	r7 = r17 + 0xA<32>
	r7 = r16 + r7
	goto 0x0040D10E<p32>
	goto l0040D10E
	// succ:  l0040D10E
__dns_parse_exit:


// __restore
// Return size: 0
define __restore
__restore_entry:
	sp = fp
	r25 = 0x40D1C0<32>
	// succ:  l0040D1C0
l0040D1C0:
	r2 = 0x8B<32>
	__syscall(0<32>)
	// succ:  l0040D1CC_thunk___lockfile
l0040D1CC_thunk___lockfile:
	call __lockfile (retsize: 0;)
	return
	// succ:  __restore_exit
__restore_exit:


// __lockfile
// Return size: 0
define __lockfile
__lockfile_entry:
	sp = fp
	r25 = 0x40D1D0<32>
	// succ:  l0040D1D0
l0040D1D0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 16<i32>
	r16 = r4
	r3 = __read_hardware_register(sp)
	r7 = Mem0[r4 + 0x4C<32>:word32]
	r4 = 0<32>
	r17 = Mem0[r3 - 0x94<32>:word32]
	branch r17 != r7 l0040D1F0
	// succ:  l0040D1E4 l0040D1F0
l0040D1E4:
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	r17 = Mem0[sp + 4<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  __lockfile_exit
l0040D1E6:
	r7 = 1<32>
	r5 = r16 + 0x50<32>
	goto 0x0040ADB0<p32>
	// succ:  l0040D1EC_thunk___wait
l0040D1EC_thunk___wait:
	call __wait (retsize: 0;)
	return
	// succ:  __lockfile_exit
l0040D1F0:
	r4 = r16 + 0x4C<32>
	__sync(0<32>)
	// succ:  l0040D1F8
l0040D1F8:
	r6 = __load_linked_32(Mem0[r4:word32])
	branch r6 != 0<32> l0040D206
	// succ:  l0040D1FE l0040D206
l0040D1FE:
	r7 = r17
	r7 = __store_conditional_32(Mem0[r4:word32], r7)
	branch r7 == 0<32> l0040D1F8
	// succ:  l0040D206 l0040D1F8
l0040D206:
	__sync(0<32>)
	branch r6 != 0<32> l0040D1E6
	// succ:  l0040D20C l0040D1E6
l0040D20C:
	r4 = 1<32>
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	r17 = Mem0[sp + 4<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  __lockfile_exit
__lockfile_exit:


// __unlockfile
// Return size: 0
define __unlockfile
__unlockfile_entry:
	sp = fp
	r25 = 0x40D210<32>
	// succ:  l0040D210
l0040D210:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	__sync(0<32>)
	Mem0[r4 + 0x4C<32>:byte] = SLICE(0<32>, byte, 0)
	__sync(0<32>)
	r7 = Mem0[r4 + 0x50<32>:word32]
	branch r7 == 0<32> l0040D248
	// succ:  l0040D224 l0040D248
l0040D224:
	r16 = r4 + 0x4C<32>
	r7 = 1<32>
	r6 = 0x81<32>
	r4 = 0x62<32>
	r5 = r16
	call __syscall (retsize: 0;)
	r7 = 0xFFFFFFDA<32>
	branch r4 != r7 l0040D248
	// succ:  l0040D23A l0040D248
l0040D23A:
	r7 = 1<32>
	r4 = 0x62<32>
	r5 = r16
	r6 = r7
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	goto 0x00404A50<p32>
	// succ:  l0040D244_thunk___syscall
l0040D244_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  __unlockfile_exit
l0040D248:
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  __unlockfile_exit
__unlockfile_exit:


// __overflow
// Return size: 0
define __overflow
__overflow_entry:
	sp = fp
	r25 = 0x40D250<32>
	// succ:  l0040D250
l0040D250:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 32<i32>
	r7 = Mem0[r4 + 0x10<32>:word32]
	r16 = r4
	Mem0[sp + 0xF<32>:byte] = SLICE(r5, byte, 0)
	branch r7 == 0<32> l0040D27A
	// succ:  l0040D25C l0040D27A
l0040D25C:
	r6 = Mem0[r16 + 16<i32>:word32]
	r7 = Mem0[r16 + 20<i32>:word32]
	branch r7 <u r6 l0040D284
	// succ:  l0040D264 l0040D284
l0040D264:
	r7 = Mem0[r16 + 0x24<32>:word32]
	r6 = 1<32>
	r5 = sp + 0xF<32>
	r4 = r16
	call r7 (retsize: 0;)
	branch r4 != 1<32> l0040D280
	// succ:  l0040D274 l0040D280
l0040D274:
	r4 = CONVERT(Mem0[sp + 0xF<32>:byte], byte, word32)
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  __overflow_exit
l0040D27A:
	goto 0x0040D3A0<p32>
	// succ:  l0040D27A_thunk___towrite
l0040D27A_thunk___towrite:
	call __towrite (retsize: 0;)
	return
	// succ:  __overflow_exit
l0040D280:
	r4 = 0xFFFFFFFF<32>
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  __overflow_exit
l0040D284:
	r4 = CONVERT(Mem0[sp + 0xF<32>:byte], byte, word32)
	r6 = CONVERT(Mem0[r16 + 0x4B<32>:int8], int8, word32)
	branch r4 == r6 l0040D264
	// succ:  l0040D290 l0040D264
l0040D290:
	r6 = r7 + 1<32>
	Mem0[sp + 0x14<32>:word32] = r6
	Mem0[r7:byte] = SLICE(r4, byte, 0)
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  __overflow_exit
__overflow_exit:


// __stdio_write
// Return size: 0
define __stdio_write
__stdio_write_entry:
	sp = fp
	r25 = 0x40D2A0<32>
	// succ:  l0040D2A0
l0040D2A0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	sp = sp - 48<i32>
	r7 = Mem0[r4 + 0x1C<32>:word32]
	r16 = r4
	r18 = Mem0[r4 + 0x14<32>:word32]
	r19 = r6
	r20 = 2<32>
	r17 = sp
	r18 = r18 - r7
	Mem0[sp:word32] = r7
	Mem0[sp + 4<32>:word32] = r18
	r18 = r18 + r6
	Mem0[sp + 8<32>:word32] = r5
	Mem0[sp + 0xC<32>:word32] = r6
	goto 0x0040D2F2<p32>
	// succ:  l0040D2F2
l0040D2F2:
	r5 = Mem0[r16 + 0x3C<32>:word32]
	r4 = 0x42<32>
	r6 = r17
	r7 = r20
	goto 0x00404A50<p32>
	// succ:  l0040D2F8_thunk___syscall
l0040D2F8_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  __stdio_write_exit
__stdio_write_exit:


// __stdout_write
// Return size: 0
define __stdout_write
__stdout_write_entry:
	sp = fp
	r25 = 0x40D320<32>
	// succ:  l0040D320
l0040D320:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 32<i32>
	r16 = r4
	r17 = r5
	r7 = 0x0040D2E4<p32>
	r18 = r6
	Mem0[sp + 0x24<32>:word32] = r7
	r7 = Mem0[r16:word32]
	branch !__bit(r7, 6<32>) l0040D34A
	// succ:  l0040D332 l0040D34A
l0040D332:
	r5 = Mem0[r16 + 0x3C<32>:word32]
	r7 = sp + 8<32>
	r6 = 0x40087468<32>
	r4 = 0x1D<32>
	goto 0x00404A50<p32>
	// succ:  l0040D33E_thunk___syscall
l0040D33E_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  __stdout_write_exit
l0040D34A:
	r5 = r17
	r6 = r18
	r4 = r16
	call __stdio_write (retsize: 0;)
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  __stdout_write_exit
__stdout_write_exit:


// __string_read
// Return size: 0
define __string_read
__string_read_entry:
	sp = fp
	r25 = 0x40D360<32>
	// succ:  l0040D360
l0040D360:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	sp = sp - 32<i32>
	r19 = r4
	r21 = r5
	r18 = r6 + 0x100<32>
	r20 = r6
	r16 = Mem0[r19 + 0x54<32>:word32]
	r5 = 0<32>
	r6 = r18
	r4 = r16
	call memchr (retsize: 0;)
	branch r4 == 0<32> l0040D378
	// succ:  l0040D376 l0040D378
l0040D376:
	r18 = r4 - r16
	// succ:  l0040D378
l0040D378:
	r17 = CONVERT(r20 <u r18, bool, word32)
	branch r17 != 0<32> l0040D380
	// succ:  l0040D37C_1 l0040D380
l0040D37C_1:
	r20 = r18
	// succ:  l0040D380
l0040D380:
	r17 = r20
	r5 = r16
	r6 = r17
	r4 = r21
	call memcpy (retsize: 0;)
	r7 = r16 + r17
	r16 = r16 + r18
	r4 = r20
	Mem0[sp + 0x44<32>:word32] = r7
	Mem0[r19 + 2<32>:word32] = r16
	Mem0[r19 + 0x54<32>:byte] = SLICE(r16, byte, 0)
	ra = Mem0[sp + 28<i32>:word32]
	r16 = Mem0[sp + 24<i32>:word32]
	r17 = Mem0[sp + 20<i32>:word32]
	r18 = Mem0[sp + 16<i32>:word32]
	r19 = Mem0[sp + 12<i32>:word32]
	r20 = Mem0[sp + 8<i32>:word32]
	r21 = Mem0[sp + 4<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  __string_read_exit
__string_read_exit:


// __towrite
// Return size: 0
define __towrite
__towrite_entry:
	sp = fp
	r25 = 0x40D3A0<32>
	// succ:  l0040D3A0
l0040D3A0:
	r7 = CONVERT(Mem0[r4 + 0x4A<32>:int8], int8, word32)
	r6 = r7 + 0xFFFFFFFF<32>
	r7 = r7 | r6
	Mem0[r4 + 0x4A<32>:byte] = SLICE(r7, byte, 0)
	r7 = Mem0[r4:word32]
	branch !__bit(r7, 3<32>) l0040D3C8
	// succ:  l0040D3B4 l0040D3C8
l0040D3B4:
	r7 = Mem0[r4 + 0x2C<32>:word32]
	r6 = Mem0[r4 + 0x30<32>:word32]
	Mem0[sp + 0x14<32>:word32] = r7
	Mem0[sp + 0x1C<32>:word32] = r7
	r7 = r7 + r6
	Mem0[sp + 4<32>:word32] = 0<32>
	Mem0[sp + 8<32>:word32] = 0<32>
	Mem0[sp + 0x10<32>:word32] = r7
	r4 = 0<32>
	return
	// succ:  __towrite_exit
l0040D3C8:
	r7 = r7 | 0x20<32>
	Mem0[sp:word32] = r7
	r4 = 0xFFFFFFFF<32>
	return
	// succ:  __towrite_exit
__towrite_exit:


// __towrite_needs_stdio_exit
// Return size: 0
define __towrite_needs_stdio_exit
__towrite_needs_stdio_exit_entry:
	sp = fp
	r25 = 0x40D3D2<32>
	// succ:  l0040D3D2
l0040D3D2:
	goto 0x0040E720<p32>
	// succ:  l0040D3D2_thunk___stdio_exit_needed
l0040D3D2_thunk___stdio_exit_needed:
	call __stdio_exit_needed (retsize: 0;)
	return
	// succ:  __towrite_needs_stdio_exit_exit
__towrite_needs_stdio_exit_exit:


// __uflow
// Return size: 0
define __uflow
__uflow_entry:
	sp = fp
	r25 = 0x40D3E0<32>
	// succ:  l0040D3E0
l0040D3E0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 32<i32>
	r16 = r4
	goto 0x0040E750<p32>
	// succ:  l0040D3E4_thunk___toread
l0040D3E4_thunk___toread:
	call __toread (retsize: 0;)
	return
	// succ:  __uflow_exit
__uflow_exit:


// store_int
// Return size: 0
define store_int
store_int_entry:
	sp = fp
	r25 = 0x40D410<32>
	// succ:  l0040D410
l0040D410:
	branch r4 == 0<32> l0040D432
	// succ:  l0040D412 l0040D432
l0040D412:
	r5 = r5 + 2<32>
	branch r5 >=u 6<32> l0040D432
	// succ:  l0040D418 l0040D432
l0040D418:
	r8 = 0x0041042C<p32>
	r5 = Mem0[r8 + r5 * 4<32>:word32]
	call r5 (retsize: 0;)
	return
	// succ:  store_int_exit
l0040D432:
	return
	// succ:  store_int_exit
store_int_exit:


// arg_n
// Return size: 0
define arg_n
arg_n_entry:
	sp = fp
	r25 = 0x40D434<32>
	// succ:  l0040D434
l0040D434:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 48<i32>
	r6 = 0x10<32>
	r16 = r5
	r5 = r4
	r4 = sp + r6
	goto 0x0040A130<p32>
	// succ:  l0040D440_thunk_memcpy
l0040D440_thunk_memcpy:
	call memcpy (retsize: 0;)
	return
	// succ:  arg_n_exit
arg_n_exit:


// __isoc99_vfscanf
// Return size: 0
define __isoc99_vfscanf
__isoc99_vfscanf_entry:
	sp = fp
	r25 = 0x40D4A6<32>
	// succ:  l0040D4A6
l0040D4A6:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 400<i32>
	r16 = r5
	r17 = r6
	r30 = r4
	r6 = 0x10<32>
	r4 = sp + 0x4C<32>
	r5 = r17
	call memcpy (retsize: 0;)
	r7 = Mem0[r17:word32]
	Mem0[sp + 0x20<32>:word32] = 0<32>
	Mem0[sp + 0x1C<32>:word32] = r7
	r7 = Mem0[r17 + 4<32>:word32]
	Mem0[sp + 0x24<32>:word32] = r7
	r7 = CONVERT(Mem0[r17 + 0xC<32>:int8], int8, word32)
	Mem0[sp + 0x18<32>:word32] = r7
	r7 = Mem0[r30 + 0x4C<32>:word32]
	branch r7 < 0<32> l0040D4D6
	// succ:  l0040D4CE l0040D4D6
l0040D4CE:
	r4 = r30
	goto 0x0040D1D0<p32>
	// succ:  l0040D4D0_thunk___lockfile
l0040D4D0_thunk___lockfile:
	call __lockfile (retsize: 0;)
	return
	// succ:  __isoc99_vfscanf_exit
l0040D4D6:
	r23 = 0<32>
	Mem0[sp + 8<32>:word32] = 0<32>
	Mem0[sp + 0x10<32>:word32] = 0<32>
	r7 = CONVERT(Mem0[r16:byte], byte, word32)
	branch r7 != 0<32> l0040D4F0
	// succ:  l0040D4E0 l0040D4F0
l0040D4E0:
	r17 = Mem0[sp + 0x20<32>:word32]
	branch r7 == 0<32> l0040D4EA
	// succ:  l0040D4E4 l0040D4EA
l0040D4E4:
	r4 = r30
	goto 0x0040D210<p32>
	// succ:  l0040D4E6_thunk___unlockfile
l0040D4E6_thunk___unlockfile:
	call __unlockfile (retsize: 0;)
	return
	// succ:  __isoc99_vfscanf_exit
l0040D4EA:
	r17 = Mem0[sp + 8<32>:word32]
	r30 = Mem0[sp + 396<i32>:word32]
	ra = Mem0[sp + 392<i32>:word32]
	r16 = Mem0[sp + 388<i32>:word32]
	r17 = Mem0[sp + 384<i32>:word32]
	r18 = Mem0[sp + 380<i32>:word32]
	r19 = Mem0[sp + 376<i32>:word32]
	r20 = Mem0[sp + 372<i32>:word32]
	r21 = Mem0[sp + 368<i32>:word32]
	r22 = Mem0[sp + 364<i32>:word32]
	r23 = Mem0[sp + 360<i32>:word32]
	sp = sp + 400<i32>
	return
	// succ:  __isoc99_vfscanf_exit
l0040D4F0:
	branch r7 != 0x20<32> l0040D4F8
	// succ:  l0040D4F4 l0040D4F8
l0040D4F4:
	goto 0x0040DB50<p32>
	goto l0040DB50
	// succ:  l0040DB50
l0040D4F8:
	r6 = r7 + 0xFFFFFFF7<32>
	branch r6 >=u 5<32> l0040D504
	// succ:  l0040D500 l0040D504
l0040D500:
	goto 0x0040DB50<p32>
	goto l0040DB50
	// succ:  l0040DB50
l0040D504:
	branch r7 != 0x25<32> l0040D50E
	// succ:  l0040D508 l0040D50E
l0040D508:
	r5 = CONVERT(Mem0[r16 + 1<32>:byte], byte, word32)
	branch r5 != 0x25<32> l0040D57C
	// succ:  l0040D50E l0040D57C
l0040D50E:
	r7 = CONVERT(r7 == 0x25<32>, bool, word32)
	r4 = r30
	r16 = r16 + r7
	r6 = 0<32>
	r7 = 0<32>
	goto 0x0040CB40<p32>
	// succ:  l0040D518_thunk___shlim
l0040D518_thunk___shlim:
	call __shlim (retsize: 0;)
	return
	// succ:  __isoc99_vfscanf_exit
l0040D57C:
	branch r5 != 0x2A<32> l0040D5C0
	// succ:  l0040D580 l0040D5C0
l0040D580:
	r7 = r16 + 2<32>
	r18 = 0<32>
	// succ:  l0040D586
l0040D586:
	Mem0[sp + 0xC<32>:word32] = 0<32>
	// succ:  l0040D588
l0040D588:
	r6 = CONVERT(Mem0[r7:byte], byte, word32)
	r5 = r7 + 1<32>
	r4 = r6 + 0xFFFFFFD0<32>
	branch r4 <u 0xA<32> l0040D620
	// succ:  l0040D596 l0040D620
l0040D596:
	Mem0[sp + 0x14<32>:word32] = 0<32>
	branch r6 != 0x2D<32> l0040D5A8
	// succ:  l0040D59C l0040D5A8
l0040D59C:
	r7 = CONVERT(0<32> <u r18, bool, word32)
	r20 = 0<32>
	Mem0[sp + 0x14<32>:word32] = r7
	r19 = 0<32>
	r7 = r5
	// succ:  l0040D5A8
l0040D5A8:
	r6 = CONVERT(Mem0[r7:byte], byte, word32)
	r16 = r7 + 1<32>
	r6 = r6 + 0xFFFFFFBF<32>
	r6 = r6 & 0xFF<32>
	branch r6 >=u 0x3A<32> l0040D7B4
	// succ:  l0040D5B8 l0040D7B4
l0040D5B8:
	r5 = 0x00410508<p32>
	r6 = Mem0[r5 + r6 * 4<32>:word32]
	switch (r6) { }
l0040D5C0:
	r5 = r5 + 0xFFFFFFD0<32>
	branch r5 >=u 0xA<32> l0040D5EC
	// succ:  l0040D5C8 l0040D5EC
l0040D5C8:
	r7 = CONVERT(Mem0[r16 + 2<32>:byte], byte, word32)
	branch r7 != 0x24<32> l0040D5EC
	// succ:  l0040D5CE l0040D5EC
l0040D5CE:
	r17 = Mem0[sp + 0x1C<32>:word32]
	r4 = sp + 0x4C<32>
	Mem0[sp + 0x4C<32>:word32] = r7
	r17 = Mem0[sp + 0x24<32>:word32]
	Mem0[sp + 0x50<32>:word32] = r7
	r7 = CONVERT(Mem0[sp + 0x18<32>:byte], byte, word32)
	Mem0[sp + 0x58<32>:byte] = SLICE(r7, byte, 0)
	goto 0x0040D434<p32>
	// succ:  l0040D5E0_thunk_arg_n
l0040D5E0_thunk_arg_n:
	call arg_n (retsize: 0;)
	return
	// succ:  __isoc99_vfscanf_exit
l0040D5EC:
	r17 = Mem0[sp + 0x18<32>:word32]
	branch 0<32> >= r7 l0040D618
	// succ:  l0040D5F2 l0040D618
l0040D5F2:
	r6 = r7 + 0xFFFFFFFC<32>
	v21 = SLICE(r6, byte, 0)
	r6 = CONVERT(v21, byte, int32)
	branch r6 < 0<32> l0040D616
	// succ:  l0040D5FE l0040D616
l0040D5FE:
	r17 = Mem0[sp + 0x24<32>:word32]
	r4 = Mem0[sp + 24<i32>:word32]
	r5 = Mem0[sp + 28<i32>:word32]
	r7 = r7 - r4
	Mem0[sp + 0x1C<32>:word32] = r7
	// succ:  l0040D608
l0040D608:
	r17 = Mem0[sp + 0x1C<32>:word32]
	r7 = r16 + 1<32>
	Mem0[sp + 0x18<32>:word32] = r6
	Mem0[sp + 0x1C<32>:word32] = r5
	r18 = Mem0[r4:word32]
	goto 0x0040D586<p32>
	goto l0040D586
	// succ:  l0040D586
l0040D616:
	Mem0[sp + 0x18<32>:word32] = r6
	// succ:  l0040D618
l0040D618:
	r6 = Mem0[sp + 24<i32>:word32]
	r7 = Mem0[sp + 28<i32>:word32]
	r5 = r7 + 4<32>
	goto 0x0040D608<p32>
	goto l0040D608
	// succ:  l0040D608
l0040D620:
	r17 = Mem0[sp + 0xC<32>:word32]
	r7 = 0xA<32>
	r7 = r7 *s r4
	r7 = r7 + r6
	r7 = r7 + 0xFFFFFFD0<32>
	Mem0[sp + 0xC<32>:word32] = r7
	r7 = r5
	goto 0x0040D588<p32>
	goto l0040D588
	// succ:  l0040D588
l0040D7B4:
	r17 = Mem0[sp + 8<32>:word32]
	r7 = 0xFFFFFFFF<32>
	branch r6 != 0<32> l0040D7BC
	// succ:  l0040D7B8_1 l0040D7BC
l0040D7B8_1:
	r6 = r7
	// succ:  l0040D7BC
l0040D7BC:
	Mem0[sp + 8<32>:word32] = r6
	goto 0x0040D974<p32>
	// succ:  l0040D974
l0040D974:
	r17 = Mem0[sp + 0x14<32>:word32]
	branch 0<32> == r7 l0040D4E0
	// succ:  l0040D97A l0040D4E0
l0040D97A:
	r4 = r19
	call free (retsize: 0;)
	r4 = r20
	call free (retsize: 0;)
	goto 0x0040D4E0<p32>
	goto l0040D4E0
	// succ:  l0040D4E0
l0040DB4E:
	r16 = r16 + 1<32>
	// succ:  l0040DB50
l0040DB50:
	r7 = CONVERT(Mem0[r16 + 1<32>:byte], byte, word32)
	branch r7 == 0x20<32> l0040DB4E
	// succ:  l0040DB56 l0040DB4E
l0040DB56:
	r7 = r7 + 0xFFFFFFF7<32>
	branch r7 <u 5<32> l0040DB4E
	// succ:  l0040DB5E l0040DB4E
l0040DB5E:
	r6 = 0<32>
	r7 = 0<32>
	r4 = r30
	goto 0x0040CB40<p32>
	// succ:  l0040DB62_thunk___shlim
l0040DB62_thunk___shlim:
	call __shlim (retsize: 0;)
	return
	// succ:  __isoc99_vfscanf_exit
__isoc99_vfscanf_exit:


// stpcpy
// Return size: 0
define stpcpy
stpcpy_entry:
	sp = fp
	r25 = 0x40DC10<32>
	// succ:  l0040DC10
l0040DC10:
	r7 = r4 ^ r5
	r7 = r7 & 3<32>
	branch r7 != 0<32> l0040DC80
	// succ:  l0040DC18 l0040DC80
l0040DC18:
	r7 = r5 & 3<32>
	branch r7 == 0<32> l0040DC32
	// succ:  l0040DC1C l0040DC32
l0040DC1C:
	r7 = CONVERT(Mem0[r5:byte], byte, word32)
	Mem0[r4:byte] = SLICE(r7, byte, 0)
	branch r7 != 0<32> l0040DC2A
	// succ:  l0040DC22 l0040DC2A
l0040DC22:
	goto 0x0040DC88<p32>
	goto l0040DC88
	// succ:  l0040DC88
l0040DC24:
	r7 = CONVERT(Mem0[r5:byte], byte, word32)
	Mem0[r4:byte] = SLICE(r7, byte, 0)
	branch r7 == 0<32> l0040DC88
	// succ:  l0040DC2A l0040DC88
l0040DC2A:
	r5 = r5 + 1<32>
	r4 = r4 + 1<32>
	r7 = r5 & 3<32>
	branch r7 != 0<32> l0040DC24
	// succ:  l0040DC32 l0040DC24
l0040DC32:
	r6 = Mem0[r5:word32]
	r8 = r4
	r9 = r5
	r7 = r6
	r10 = ~r6
	r7 = r7 + 0xFEFEFEFF<32>
	r7 = r7 & r10
	r10 = 0x80808080<32>
	r7 = r7 & r10
	branch r7 != 0<32> l0040DC80
	// succ:  l0040DC52 l0040DC80
l0040DC52:
	r8 = r8 + 4<32>
	r9 = r9 + 4<32>
	Mem0[r8 - 4<32>:word32] = r6
	r6 = Mem0[r9:word32]
	r7 = r6
	r5 = ~r6
	r7 = r7 + 0xFEFEFEFF<32>
	r7 = r7 & r5
	r5 = 0x80808080<32>
	r7 = r7 & r5
	branch r7 == 0<32> l0040DC52
	// succ:  l0040DC74 l0040DC52
l0040DC74:
	r4 = r8
	r5 = r9
	r7 = CONVERT(Mem0[r5:byte], byte, word32)
	Mem0[r4:byte] = SLICE(r7, byte, 0)
	branch r7 == 0<32> l0040DC88
	// succ:  l0040DC7C l0040DC88
l0040DC7C:
	r5 = r5 + 1<32>
	r4 = r4 + 1<32>
	// succ:  l0040DC80
l0040DC80:
	r7 = CONVERT(Mem0[r5:byte], byte, word32)
	Mem0[r4:byte] = SLICE(r7, byte, 0)
	branch r7 != 0<32> l0040DC7C
	// succ:  l0040DC86 l0040DC7C
l0040DC86:
	return
	// succ:  stpcpy_exit
l0040DC88:
	return
	// succ:  stpcpy_exit
stpcpy_exit:


// stpncpy
// Return size: 0
define stpncpy
stpncpy_entry:
	sp = fp
	r25 = 0x40DC90<32>
	// succ:  l0040DC90
l0040DC90:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r7 = r4 ^ r5
	r16 = r4
	r7 = r7 & 3<32>
	branch r7 != 0<32> l0040DD0A
	// succ:  l0040DC9C l0040DD0A
l0040DC9C:
	r7 = r5 & 3<32>
	branch r7 == 0<32> l0040DCB2
	// succ:  l0040DCA0 l0040DCB2
l0040DCA0:
	branch r6 == 0<32> l0040DD1A
	// succ:  l0040DCA2 l0040DD1A
l0040DCA2:
	r7 = CONVERT(Mem0[r5:byte], byte, word32)
	Mem0[r16:byte] = SLICE(r7, byte, 0)
	branch r7 == 0<32> l0040DD1A
	// succ:  l0040DCA8 l0040DD1A
l0040DCA8:
	r5 = r5 + 1<32>
	r6 = r6 + 0xFFFFFFFF<32>
	r7 = r5 & 3<32>
	r16 = r16 + 1<32>
	branch r7 != 0<32> l0040DCA0
	// succ:  l0040DCB2 l0040DCA0
l0040DCB2:
	branch r6 == 0<32> l0040DD1A
	// succ:  l0040DCB4 l0040DD1A
l0040DCB4:
	r9 = CONVERT(Mem0[r5:byte], byte, word32)
	branch 0<32> == r9 l0040DD1A
	// succ:  l0040DCBC l0040DD1A
l0040DCBC:
	branch r6 <u 4<32> l0040DD24
	// succ:  l0040DCC0 l0040DD24
l0040DCC0:
	r4 = Mem0[r5:word32]
	r8 = r4
	r7 = ~r4
	r8 = r8 + 0xFEFEFEFF<32>
	r7 = r7 & r8
	r8 = 0x80808080<32>
	r7 = r7 & r8
	branch r7 == 0<32> l0040DCFE
	// succ:  l0040DCDE l0040DCFE
l0040DCDE:
	goto 0x0040DD24<p32>
	goto l0040DD24
	// succ:  l0040DD24
l0040DCE0:
	r4 = Mem0[r5:word32]
	r7 = r4
	r8 = ~r4
	r7 = r7 + 0xFEFEFEFF<32>
	r7 = r7 & r8
	r8 = 0x80808080<32>
	r7 = r7 & r8
	branch r7 != 0<32> l0040DD0C
	// succ:  l0040DCFE l0040DD0C
l0040DCFE:
	r6 = r6 + 0xFFFFFFFC<32>
	Mem0[sp:word32] = r4
	r5 = r5 + 4<32>
	r16 = r16 + 4<32>
	branch r6 >=u 4<32> l0040DCE0
	// succ:  l0040DD0A l0040DCE0
l0040DD0A:
	branch r6 == 0<32> l0040DD1A
	// succ:  l0040DD0C l0040DD1A
l0040DD0C:
	r7 = CONVERT(Mem0[r5:byte], byte, word32)
	Mem0[r16:byte] = SLICE(r7, byte, 0)
	branch r7 == 0<32> l0040DD1A
	// succ:  l0040DD12 l0040DD1A
l0040DD12:
	r6 = r6 + 0xFFFFFFFF<32>
	r5 = r5 + 1<32>
	r16 = r16 + 1<32>
	branch r6 != 0<32> l0040DD0C
	// succ:  l0040DD1A l0040DD0C
l0040DD1A:
	r4 = r16
	r5 = 0<32>
	goto 0x0040A690<p32>
	// succ:  l0040DD1C_thunk_memset
l0040DD1C_thunk_memset:
	call memset (retsize: 0;)
	return
	// succ:  stpncpy_exit
l0040DD24:
	Mem0[r16:byte] = SLICE(r9, byte, 0)
	goto 0x0040DD12<p32>
	goto l0040DD12
	// succ:  l0040DD12
stpncpy_exit:


// __set_thread_area
// Return size: 0
define __set_thread_area
__set_thread_area_entry:
	sp = fp
	r25 = 0x40DD30<32>
	// succ:  l0040DD30
l0040DD30:
	r5 = r4
	r4 = 0xF4<32>
	goto 0x00404A50<p32>
	// succ:  l0040DD36_thunk___syscall
l0040DD36_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  __set_thread_area_exit
__set_thread_area_exit:


// handler
// Return size: 0
define handler
handler_entry:
	sp = fp
	r25 = 0x40DD40<32>
	// succ:  l0040DD40
l0040DD40:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 64<i32>
	goto 0x004049B0<p32>
	// succ:  l0040DD42_thunk___errno_location
l0040DD42_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  handler_exit
handler_exit:


// __synccall
// Return size: 0
define __synccall
__synccall_entry:
	sp = fp
	r25 = 0x40DDF2<32>
	// succ:  l0040DDF2
l0040DDF2:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	Mem0[sp + -24<i32>:word32] = r20
	Mem0[sp + -28<i32>:word32] = r21
	sp = sp - 2400<i32>
	r6 = 0x820<32>
	r21 = 0x00431117<p32>
	r18 = r4
	r19 = r5
	r5 = 0<32>
	r4 = sp + 0x120<32>
	goto 0x0040E008<p32>
	// succ:  l0040E008
l0040E008:
	goto 0x0040A690<p32>
	// succ:  l0040E008_thunk_memset
l0040E008_thunk_memset:
	call memset (retsize: 0;)
	return
	// succ:  __synccall_exit
__synccall_exit:


// readdir64
// Return size: 0
define readdir64
readdir64_entry:
	sp = fp
	r25 = 0x40E010<32>
	// succ:  l0040E010
l0040E010:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 16<i32>
	r16 = r4
	r17 = r4 + 0x20<32>
	r6 = Mem0[r4 + 16<i32>:word32]
	r7 = Mem0[r4 + 20<i32>:word32]
	branch r6 < r7 l0040E050
	// succ:  l0040E020 l0040E050
l0040E020:
	r5 = Mem0[r16:word32]
	r7 = 0x800<32>
	r6 = r17
	r4 = 0x3D<32>
	goto 0x00404A50<p32>
	// succ:  l0040E02A_thunk___syscall
l0040E02A_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  readdir64_exit
l0040E050:
	r6 = Mem0[r16 + 0x10<32>:word32]
	r17 = r17 + r6
	r7 = CONVERT(Mem0[r17 + 0x10<32>:uint16], uint16, word32)
	r7 = r7 + r6
	r6 = Mem0[r17 + 8<32>:word32]
	Mem0[sp + 0x10<32>:word32] = r7
	r7 = Mem0[r17 + 0xC<32>:word32]
	Mem0[r16 + 8<i32>:word32] = r6
	Mem0[r16 + 12<i32>:word32] = r7
	r4 = r17
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	r17 = Mem0[sp + 4<i32>:word32]
	r18 = Mem0[sp + 0<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  readdir64_exit
readdir64_exit:


// rewinddir
// Return size: 0
define rewinddir
rewinddir_entry:
	sp = fp
	r25 = 0x40E070<32>
	// succ:  l0040E070
l0040E070:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 16<i32>
	r16 = r4
	r17 = r4 + 0x18<32>
	r4 = r17
	call __lock (retsize: 0;)
	r4 = Mem0[r16:word32]
	r6 = 0<32>
	r7 = 0<32>
	r8 = 0<32>
	goto 0x0040E860<p32>
	// succ:  l0040E080_thunk_lseek64
l0040E080_thunk_lseek64:
	call lseek64 (retsize: 0;)
	return
	// succ:  rewinddir_exit
rewinddir_exit:


// open64
// Return size: 0
define open64
open64_entry:
	sp = fp
	r25 = 0x40E0A0<32>
	// succ:  l0040E0A0
l0040E0A0:
	sp = sp + 0xFFFFFFE0<32>
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 32<i32>
	r16 = r5
	Mem0[sp + 40<i32>:word32] = r6
	Mem0[sp + 44<i32>:word32] = r7
	Mem0[sp + 48<i32>:word32] = r8
	Mem0[sp + 52<i32>:word32] = r9
	Mem0[sp + 56<i32>:word32] = r10
	Mem0[sp + 60<i32>:word32] = r11
	branch !__bit(r5, 6<32>) l0040E0C4
	// succ:  l0040E0B8 l0040E0C4
l0040E0B8:
	r7 = 0x4100000<32>
	r8 = 0<32>
	r6 = r5 & r7
	branch r6 != r7 l0040E0DA
	// succ:  l0040E0C4 l0040E0DA
l0040E0C4:
	r7 = sp + 0x40<32>
	r18 = Mem0[sp + 0x28<32>:word32]
	Mem0[sp:word32] = r7
	Mem0[sp + 4<32>:word32] = r7
	Mem0[sp + 8<32>:word32] = r7
	r7 = 0x40<32>
	Mem0[sp + 0xD<32>:byte] = SLICE(r7, byte, 0)
	r7 = 0x14<32>
	Mem0[sp + 0xC<32>:byte] = SLICE(r7, byte, 0)
	// succ:  l0040E0DA
l0040E0DA:
	r7 = 0x8000<32>
	r6 = r4
	r10 = 0<32>
	r9 = 0<32>
	r7 = r7 | r16
	r5 = 0xFFFFFF9C<32>
	r4 = 0x38<32>
	goto 0x0040ADA4<p32>
	// succ:  l0040E0EC_thunk___syscall_cp
l0040E0EC_thunk___syscall_cp:
	call __syscall_cp (retsize: 0;)
	return
	// succ:  open64_exit
open64_exit:


// copysign
// Return size: 0
define copysign
copysign_entry:
	sp = fp
	r25 = 0x40E120<32>
	// succ:  l0040E120
l0040E120:
	r5 = __ext(r5, 0<32>, 0x1F<32>)
	r7 = __ins(r7, 0<32>, 0<32>, 1<32>)
	r8 = r4
	r6 = r5 | r7
	r4 = r8
	r5 = r6
	return
	// succ:  copysign_exit
copysign_exit:


// fmod
// Return size: 0
define fmod
fmod_entry:
	sp = fp
	r25 = 0x40E140<32>
	// succ:  l0040E140
l0040E140:
	Mem0[sp + -4<i32>:word32] = r30
	Mem0[sp + -8<i32>:word32] = ra
	Mem0[sp + -12<i32>:word32] = r16
	Mem0[sp + -16<i32>:word32] = r17
	Mem0[sp + -20<i32>:word32] = r18
	Mem0[sp + -24<i32>:word32] = r19
	Mem0[sp + -28<i32>:word32] = r20
	Mem0[sp + -32<i32>:word32] = r21
	Mem0[sp + -36<i32>:word32] = r22
	Mem0[sp + -40<i32>:word32] = r23
	sp = sp - 48<i32>
	r20 = r6
	r19 = r7
	r6 = r20 >>u 0x1F<32>
	r7 = r19 << 1<32>
	r23 = r4
	r22 = r5
	r7 = r7 | r6
	r5 = r20 << 1<32>
	r6 = r5 | r7
	r4 = r23
	r21 = r22
	branch r6 == 0<32> l0040E178
	// succ:  l0040E15C l0040E178
l0040E15C:
	r16 = __ext(r19, 0<32>, 0x1F<32>)
	r6 = 0xFF000000<32>
	branch r6 <u r16 l0040E178
	// succ:  l0040E168 l0040E178
l0040E168:
	branch r16 != r6 l0040E16E
	// succ:  l0040E16A l0040E16E
l0040E16A:
	branch 0<32> != r20 l0040E178
	// succ:  l0040E16E l0040E178
l0040E16E:
	r16 = __ext(r21, 4<32>, 0xB<32>)
	r6 = 0x7FF<32>
	branch r16 != r6 l0040E18C
	// succ:  l0040E178 l0040E18C
l0040E178:
	r6 = r20
	r7 = r19
	r4 = r23
	r5 = r22
	goto 0x00404330<p32>
	// succ:  l0040E17C_thunk___muldf3
l0040E17C_thunk___muldf3:
	call __muldf3 (retsize: 0;)
	return
	// succ:  fmod_exit
l0040E188:
	r4 = r23
	r5 = r22
	r30 = Mem0[sp + 44<i32>:word32]
	ra = Mem0[sp + 40<i32>:word32]
	r16 = Mem0[sp + 36<i32>:word32]
	r17 = Mem0[sp + 32<i32>:word32]
	r18 = Mem0[sp + 28<i32>:word32]
	r19 = Mem0[sp + 24<i32>:word32]
	r20 = Mem0[sp + 20<i32>:word32]
	r21 = Mem0[sp + 16<i32>:word32]
	r22 = Mem0[sp + 12<i32>:word32]
	r23 = Mem0[sp + 8<i32>:word32]
	sp = sp + 48<i32>
	return
	// succ:  fmod_exit
l0040E18C:
	r17 = r4 >>u 0x1F<32>
	r6 = r21 << 1<32>
	r6 = r6 | r17
	r17 = r4 << 1<32>
	branch r7 <u r6 l0040E1B4
	// succ:  l0040E19C l0040E1B4
l0040E19C:
	branch r6 != r7 l0040E1A2
	// succ:  l0040E19E l0040E1A2
l0040E19E:
	branch r5 <u r17 l0040E1B4
	// succ:  l0040E1A2 l0040E1B4
l0040E1A2:
	branch r5 != r17 l0040E188
	// succ:  l0040E1A6 l0040E188
l0040E1A6:
	branch r7 != r6 l0040E188
	// succ:  l0040E1AA l0040E188
l0040E1AA:
	r6 = 0<32>
	r7 = 0<32>
	r4 = r23
	r5 = r22
	goto 0x00404330<p32>
	// succ:  l0040E1AE_thunk___muldf3
l0040E1AE_thunk___muldf3:
	call __muldf3 (retsize: 0;)
	return
	// succ:  fmod_exit
l0040E1B4:
	branch r16 != 0<32> l0040E20C
	// succ:  l0040E1B6 l0040E20C
l0040E1B6:
	r6 = r4 >>u 0x14<32>
	r7 = r21 << 0xC<32>
	r7 = r7 | r6
	r5 = r4 << 0xC<32>
	// succ:  l0040E1C4
l0040E1C4:
	branch r7 >= 0<32> l0040E1FC
	// succ:  l0040E1C8 l0040E1FC
l0040E1C8:
	r6 = 1<32>
	r6 = r6 - r16
	r5 = r21
	call __ashldi3 (retsize: 0;)
	r17 = r4
	r18 = r5
	// succ:  l0040E1D2
l0040E1D2:
	r30 = __ext(r19, 4<32>, 0xB<32>)
	branch 0<32> != r30 l0040E22A
	// succ:  l0040E1DA l0040E22A
l0040E1DA:
	r6 = r20 >>u 0x14<32>
	r7 = r19 << 0xC<32>
	r7 = r7 | r6
	r5 = r20 << 0xC<32>
	// succ:  l0040E1E8
l0040E1E8:
	branch r7 >= 0<32> l0040E21A
	// succ:  l0040E1EC l0040E21A
l0040E1EC:
	r6 = 1<32>
	r6 = r6 - r30
	r4 = r20
	r5 = r19
	goto 0x0040EA50<p32>
	// succ:  l0040E1F4_thunk___ashldi3
l0040E1F4_thunk___ashldi3:
	call __ashldi3 (retsize: 0;)
	return
	// succ:  fmod_exit
l0040E1F8:
	r19 = r4
	goto 0x0040E244<p32>
	goto l0040E244
	// succ:  l0040E244
l0040E1FC:
	r17 = r5 >>u 0x1F<32>
	r6 = r7 << 1<32>
	r16 = r16 + 0xFFFFFFFF<32>
	r7 = r6 | r17
	r5 = r5 << 1<32>
	goto 0x0040E1C4<p32>
	goto l0040E1C4
	// succ:  l0040E1C4
l0040E20C:
	r18 = __ext(r21, 0<32>, 0x14<32>)
	r5 = 0x1000000<32>
	r17 = r4
	r18 = r18 | r5
	goto 0x0040E1D2<p32>
	goto l0040E1D2
	// succ:  l0040E1D2
l0040E21A:
	r4 = r5 >>u 0x1F<32>
	r6 = r7 << 1<32>
	r30 = r30 + 0xFFFFFFFF<32>
	r7 = r6 | r4
	r5 = r5 << 1<32>
	goto 0x0040E1E8<p32>
	goto l0040E1E8
	// succ:  l0040E1E8
l0040E22A:
	r19 = __ext(r19, 0<32>, 0x14<32>)
	r5 = 0x1000000<32>
	r4 = r20
	r5 = r5 | r19
	goto 0x0040E1F8<p32>
	goto l0040E1F8
	// succ:  l0040E1F8
l0040E238:
	r7 = r17 >>u 0x1F<32>
	r18 = r18 << 1<32>
	r18 = r18 | r7
	r17 = r17 << 1<32>
	r16 = r16 + 0xFFFFFFFF<32>
	// succ:  l0040E244
l0040E244:
	r20 = r17 - r19
	r6 = r18 - r5
	r7 = CONVERT(r17 <u r20, bool, word32)
	r4 = r20
	r6 = r6 - r7
	r7 = r6
	branch r30 >= r16 l0040E26A
	// succ:  l0040E258 l0040E26A
l0040E258:
	branch r6 < 0<32> l0040E238
	// succ:  l0040E25C l0040E238
l0040E25C:
	r7 = r20 | r6
	branch 0<32> == r7 l0040E1AA
	// succ:  l0040E264 l0040E1AA
l0040E264:
	r17 = r20
	r18 = r6
	goto 0x0040E238<p32>
	goto l0040E238
	// succ:  l0040E238
l0040E26A:
	branch r6 < 0<32> l0040E29A
	// succ:  l0040E26E l0040E29A
l0040E26E:
	r6 = r20 | r6
	branch 0<32> == r6 l0040E1AA
	// succ:  l0040E276 l0040E1AA
l0040E276:
	r6 = r7 >>u 0x14<32>
	branch r6 == 0<32> l0040E2A0
	// succ:  l0040E27C l0040E2A0
l0040E27C:
	branch 0<32> >= r16 l0040E2B0
	// succ:  l0040E280 l0040E2B0
l0040E280:
	r7 = r7 + 0xFFF00000<32>
	r5 = r16 << 0x14<32>
	r5 = r5 | r7
	// succ:  l0040E28C
l0040E28C:
	r6 = r21
	r23 = r4
	r6 = __ins(r6, 0<32>, 0<32>, 1<32>)
	r22 = r6 | r5
	goto 0x0040E188<p32>
	goto l0040E188
	// succ:  l0040E188
l0040E29A:
	r4 = r17
	r7 = r18
	goto 0x0040E276<p32>
	goto l0040E276
	// succ:  l0040E276
l0040E2A0:
	r6 = r4 >>u 0x1F<32>
	r5 = r7 << 1<32>
	r7 = r5 | r6
	r4 = r4 << 1<32>
	r16 = r16 + 0xFFFFFFFF<32>
	goto 0x0040E276<p32>
	goto l0040E276
	// succ:  l0040E276
l0040E2B0:
	r6 = 1<32>
	r6 = r6 - r16
	r5 = r7
	call __lshrdi3 (retsize: 0;)
	goto 0x0040E28C<p32>
	goto l0040E28C
	// succ:  l0040E28C
fmod_exit:


// frexp
// Return size: 0
define frexp
frexp_entry:
	sp = fp
	r25 = 0x40E2C0<32>
	// succ:  l0040E2C0
l0040E2C0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 16<i32>
	r17 = r4
	r16 = r5
	r7 = __ext(r16, 4<32>, 0xB<32>)
	r18 = r6
	r6 = r16
	branch r7 != 0<32> l0040E2FE
	// succ:  l0040E2CE l0040E2FE
l0040E2CE:
	r6 = 0<32>
	r7 = 0<32>
	goto 0x0040FA70<p32>
	// succ:  l0040E2D0_thunk___nedf2
l0040E2D0_thunk___nedf2:
	call __nedf2 (retsize: 0;)
	return
	// succ:  frexp_exit
l0040E2F6:
	r4 = r17
	r5 = r16
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	r17 = Mem0[sp + 4<i32>:word32]
	r18 = Mem0[sp + 0<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  frexp_exit
l0040E2FE:
	r5 = 0x7FF<32>
	branch r5 == r7 l0040E2F6
	// succ:  l0040E306 l0040E2F6
l0040E306:
	r7 = r7 + 0xFFFFFC02<32>
	r6 = __ins(r6, 0<32>, 4<32>, 1<32>)
	r16 = 0xFE000000<32>
	Mem0[sp:word32] = r7
	r16 = r16 | r6
	goto 0x0040E2F6<p32>
	goto l0040E2F6
	// succ:  l0040E2F6
frexp_exit:


// mbrtowc
// Return size: 0
define mbrtowc
mbrtowc_entry:
	sp = fp
	r25 = 0x40E320<32>
	// succ:  l0040E320
l0040E320:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 32<i32>
	r2 = r4
	r4 = 0x00420924<p32>
	branch r7 != 0<32> l0040E32C
	// succ:  l0040E328_1 l0040E32C
l0040E328_1:
	r7 = r4
	// succ:  l0040E32C
l0040E32C:
	r9 = Mem0[r7:word32]
	branch r5 != 0<32> l0040E338
	// succ:  l0040E330 l0040E338
l0040E330:
	branch 0<32> != r9 l0040E3F2
	// succ:  l0040E334 l0040E3F2
l0040E334:
	r4 = 0<32>
	ra = Mem0[sp + 28<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  mbrtowc_exit
l0040E338:
	branch 0<32> != r2 l0040E340
	// succ:  l0040E33C l0040E340
l0040E33C:
	r2 = sp + 0xC<32>
	// succ:  l0040E340
l0040E340:
	r4 = 0xFFFFFFFE<32>
	branch 0<32> == r6 l0040E3FE
	// succ:  l0040E348 l0040E3FE
l0040E348:
	branch 0<32> != r9 l0040E3A0
	// succ:  l0040E34C l0040E3A0
l0040E34C:
	r8 = CONVERT(Mem0[r5:byte], byte, word32)
	v11 = SLICE(r4, byte, 0)
	r8 = CONVERT(v11, byte, int32)
	branch r4 < 0<32> l0040E362
	// succ:  l0040E358 l0040E362
l0040E358:
	r4 = CONVERT(0<32> <u r8, bool, word32)
	Mem0[r2:byte] = SLICE(r8, byte, 0)
	ra = Mem0[sp + 28<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  mbrtowc_exit
l0040E362:
	r3 = __read_hardware_register(sp)
	r4 = Mem0[r3 - 0x38<32>:word32]
	r4 = Mem0[r4:word32]
	branch r4 != 0<32> l0040E37E
	// succ:  l0040E36E l0040E37E
l0040E36E:
	r7 = CONVERT(Mem0[r5:int8], int8, word32)
	r6 = 0xDFFF<32>
	r4 = 1<32>
	r7 = r7 & r6
	Mem0[r2:byte] = SLICE(r7, byte, 0)
	ra = Mem0[sp + 28<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  mbrtowc_exit
l0040E37E:
	r8 = r8 + 0xFFFFFF3E<32>
	branch r8 >=u 0x33<32> l0040E3F2
	// succ:  l0040E386 l0040E3F2
l0040E386:
	r4 = 0x00410B7D<p32>
	r5 = r5 + 1<32>
	r9 = Mem0[r4 + r8 * 4<32>:word32]
	r8 = r6 + 0xFFFFFFFF<32>
	branch 0<32> != r8 l0040E3A2
	// succ:  l0040E398 l0040E3A2
l0040E398:
	r4 = 0xFFFFFFFE<32>
	Mem0[r7:word32] = r9
	ra = Mem0[sp + 28<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  mbrtowc_exit
l0040E3A0:
	r8 = r6
	// succ:  l0040E3A2
l0040E3A2:
	r11 = CONVERT(Mem0[r5:byte], byte, word32)
	r10 = r9 >> 0x1A<32>
	r11 = r11 >>u 3<32>
	r10 = r10 + r11
	r11 = r11 + 0xFFFFFFF0<32>
	r10 = r10 | r11
	r10 = __ins(r10, 0<32>, 0<32>, 1<32>)
	branch 0<32> != r10 l0040E3F2
	// succ:  l0040E3C0 l0040E3F2
l0040E3C0:
	r5 = r5 + 1<32>
	r9 = r9 << 6<32>
	r4 = CONVERT(Mem0[r5 - 1<32>:byte], byte, word32)
	r8 = r8 + 0xFFFFFFFF<32>
	r4 = r4 + 0xFFFFFF80<32>
	r9 = r4 | r9
	branch r9 < 0<32> l0040E3E4
	// succ:  l0040E3D8 l0040E3E4
l0040E3D8:
	r4 = r6 - r8
	Mem0[r2:byte] = SLICE(r9, byte, 0)
	Mem0[sp + 0x40<32>:word32] = 0<32>
	ra = Mem0[sp + 28<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  mbrtowc_exit
l0040E3E4:
	branch 0<32> == r8 l0040E398
	// succ:  l0040E3E8 l0040E398
l0040E3E8:
	r4 = CONVERT(Mem0[r5:byte], byte, word32)
	r4 = r4 + 0xFFFFFF80<32>
	branch r4 <u 0<32> l0040E3C0
	// succ:  l0040E3F2 l0040E3C0
l0040E3F2:
	Mem0[sp + 0x40<32>:word32] = 0<32>
	goto 0x004049B0<p32>
	// succ:  l0040E3F4_thunk___errno_location
l0040E3F4_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  mbrtowc_exit
l0040E3FE:
	ra = Mem0[sp + 28<i32>:word32]
	sp = sp + 32<i32>
	return
	// succ:  mbrtowc_exit
mbrtowc_exit:


// mbsinit
// Return size: 0
define mbsinit
mbsinit_entry:
	sp = fp
	r25 = 0x40E400<32>
	// succ:  l0040E400
l0040E400:
	r7 = 1<32>
	branch r4 == 0<32> l0040E40A
	// succ:  l0040E404 l0040E40A
l0040E404:
	r7 = Mem0[r4:word32]
	r7 = CONVERT(r7 <u 1<32>, bool, word32)
	// succ:  l0040E40A
l0040E40A:
	r4 = r7
	return
	// succ:  mbsinit_exit
mbsinit_exit:


// mbsrtowcs
// Return size: 0
define mbsrtowcs
mbsrtowcs_entry:
	sp = fp
	r25 = 0x40E410<32>
	// succ:  l0040E410
l0040E410:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 16<i32>
	r17 = r4
	r18 = r5
	r16 = Mem0[r18:word32]
	branch r7 == 0<32> l0040E458
	// succ:  l0040E418 l0040E458
l0040E418:
	r8 = Mem0[r7:word32]
	branch 0<32> == r8 l0040E458
	// succ:  l0040E41E l0040E458
l0040E41E:
	branch 0<32> == r17 l0040E544
	// succ:  l0040E422 l0040E544
l0040E422:
	Mem0[sp + 0x40<32>:word32] = 0<32>
	r7 = r6
	// succ:  l0040E426
l0040E426:
	r9 = CONVERT(Mem0[r16:byte], byte, word32)
	r4 = r8 >> 0x1A<32>
	r5 = r9 >>u 3<32>
	r4 = r4 + r5
	r5 = r5 + 0xFFFFFFF0<32>
	r4 = r4 | r5
	r4 = __ins(r4, 0<32>, 0<32>, 1<32>)
	branch 0<32> != r4 l0040E530
	// succ:  l0040E442 l0040E530
l0040E442:
	r4 = r8 << 6<32>
	r8 = r9 + 0xFFFFFF80<32>
	r8 = r8 | r4
	branch r8 < 0<32> l0040E5CA
	// succ:  l0040E452 l0040E5CA
l0040E452:
	r16 = r16 + 1<32>
	// succ:  l0040E454
l0040E454:
	Mem0[r17:word32] = r8
	goto 0x0040E4BC<p32>
	goto l0040E4BC
	// succ:  l0040E4BC
l0040E458:
	r3 = __read_hardware_register(sp)
	r7 = Mem0[r3 - 0x38<32>:word32]
	r7 = Mem0[r7:word32]
	branch r7 != 0<32> l0040E49A
	// succ:  l0040E464 l0040E49A
l0040E464:
	r5 = r6
	branch r17 != 0<32> l0040E48A
	// succ:  l0040E468 l0040E48A
l0040E468:
	r4 = r16
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	r17 = Mem0[sp + 4<i32>:word32]
	r18 = Mem0[sp + 0<i32>:word32]
	sp = sp + 16<i32>
	goto 0x0040A890<p32>
	// succ:  l0040E46E_thunk_strlen
l0040E46E_thunk_strlen:
	call strlen (retsize: 0;)
	return
	// succ:  mbsrtowcs_exit
l0040E472:
	r7 = CONVERT(Mem0[r16:byte], byte, word32)
	branch r7 == 0<32> l0040E490
	// succ:  l0040E476 l0040E490
l0040E476:
	v14 = SLICE(r7, byte, 0)
	r7 = CONVERT(v14, byte, int32)
	r4 = 0xDFFF<32>
	r17 = r17 + 4<32>
	r7 = r7 & r4
	r16 = r16 + 1<32>
	r5 = r5 + 0xFFFFFFFF<32>
	Mem0[r17 - 4<32>:word32] = r7
	// succ:  l0040E48A
l0040E48A:
	branch r5 != 0<32> l0040E472
	// succ:  l0040E48C l0040E472
l0040E48C:
	Mem0[r18:word32] = r16
	goto 0x0040E496<p32>
	goto l0040E496
	// succ:  l0040E496
l0040E490:
	r6 = r6 - r5
	Mem0[sp + 0x40<32>:word32] = 0<32>
	Mem0[sp:word32] = 0<32>
	// succ:  l0040E496
l0040E496:
	r4 = r6
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	r17 = Mem0[sp + 4<i32>:word32]
	r18 = Mem0[sp + 0<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  mbsrtowcs_exit
l0040E49A:
	r7 = r6
	branch r17 == 0<32> l0040E4C2
	// succ:  l0040E49E l0040E4C2
l0040E49E:
	branch r7 == 0<32> l0040E48C
	// succ:  l0040E4A0 l0040E48C
l0040E4A0:
	r5 = CONVERT(Mem0[r16:byte], byte, word32)
	r5 = r5 + 0xFFFFFFFF<32>
	branch r5 >=u 0x3F<32> l0040E4AE
	// succ:  l0040E4A8 l0040E4AE
l0040E4A8:
	r5 = r16 & 3<32>
	branch 0<32> == r5 l0040E596
	// succ:  l0040E4AE l0040E596
l0040E4AE:
	r5 = CONVERT(Mem0[r16:byte], byte, word32)
	r4 = r5 + 0xFFFFFFFF<32>
	branch r4 >=u 0x3F<32> l0040E5B6
	// succ:  l0040E4B8 l0040E5B6
l0040E4B8:
	r16 = r16 + 1<32>
	Mem0[sp + 0x40<32>:word32] = r5
	// succ:  l0040E4BC
l0040E4BC:
	r7 = r7 + 0xFFFFFFFF<32>
	r17 = r17 + 4<32>
	goto 0x0040E49E<p32>
	goto l0040E49E
	// succ:  l0040E49E
l0040E4C2:
	r5 = CONVERT(Mem0[r16:byte], byte, word32)
	r5 = r5 + 0xFFFFFFFF<32>
	branch r5 >=u 0x3F<32> l0040E4F4
	// succ:  l0040E4CA l0040E4F4
l0040E4CA:
	r5 = r16 & 3<32>
	branch r5 != 0<32> l0040E4F4
	// succ:  l0040E4CE l0040E4F4
l0040E4CE:
	r5 = r16
	// succ:  l0040E4D0
l0040E4D0:
	r9 = Mem0[r5:word32]
	r8 = r7 - r5
	r8 = r8 + r16
	r4 = r9
	r4 = r4 + 0xFEFEFEFF<32>
	r4 = r4 | r9
	r9 = 0x80808080<32>
	r4 = r4 & r9
	branch r4 == 0<32> l0040E504
	// succ:  l0040E4F0 l0040E504
l0040E4F0:
	r16 = r5
	r7 = r8
	// succ:  l0040E4F4
l0040E4F4:
	r5 = CONVERT(Mem0[r16:byte], byte, word32)
	r4 = r5 + 0xFFFFFFFF<32>
	branch r4 >=u 0x3F<32> l0040E508
	// succ:  l0040E4FE l0040E508
l0040E4FE:
	r16 = r16 + 1<32>
	// succ:  l0040E500
l0040E500:
	r7 = r7 + 0xFFFFFFFF<32>
	goto 0x0040E4C2<p32>
	goto l0040E4C2
	// succ:  l0040E4C2
l0040E504:
	r5 = r5 + 4<32>
	goto 0x0040E4D0<p32>
	goto l0040E4D0
	// succ:  l0040E4D0
l0040E508:
	r5 = r5 + 0xFFFFFF3E<32>
	branch r5 >=u 0x33<32> l0040E536
	// succ:  l0040E510 l0040E536
l0040E510:
	r4 = 0x00410C42<p32>
	r16 = r16 + 1<32>
	r8 = Mem0[r4 + r5 * 4<32>:word32]
	// succ:  l0040E51A
l0040E51A:
	r5 = CONVERT(Mem0[r16:byte], byte, word32)
	r4 = r8 >> 0x1A<32>
	r5 = r5 >>u 3<32>
	r4 = r4 + r5
	r5 = r5 + 0xFFFFFFF0<32>
	r4 = r4 | r5
	r4 = __ins(r4, 0<32>, 0<32>, 1<32>)
	branch r4 == 0<32> l0040E548
	// succ:  l0040E530 l0040E548
l0040E530:
	r16 = r16 + 0xFFFFFFFF<32>
	branch 0<32> != r8 l0040E558
	// succ:  l0040E536 l0040E558
l0040E536:
	r5 = CONVERT(Mem0[r16:byte], byte, word32)
	branch r5 != 0<32> l0040E558
	// succ:  l0040E53A l0040E558
l0040E53A:
	branch r17 == 0<32> l0040E540
	// succ:  l0040E53C l0040E540
l0040E53C:
	Mem0[sp + 0x40<32>:word32] = 0<32>
	Mem0[sp:word32] = 0<32>
	// succ:  l0040E540
l0040E540:
	r6 = r6 - r7
	goto 0x0040E496<p32>
	goto l0040E496
	// succ:  l0040E496
l0040E544:
	r7 = r6
	goto 0x0040E51A<p32>
	goto l0040E51A
	// succ:  l0040E51A
l0040E548:
	branch __bit(r8, 0x19<32>) l0040E4FE
	// succ:  l0040E54C l0040E4FE
l0040E54C:
	r5 = CONVERT(Mem0[r16 + 1<32>:byte], byte, word32)
	r5 = r5 + 0xFFFFFF80<32>
	branch r5 <u 0<32> l0040E568
	// succ:  l0040E556 l0040E568
l0040E556:
	r16 = r16 + 0xFFFFFFFF<32>
	// succ:  l0040E558
l0040E558:
	goto 0x004049B0<p32>
	// succ:  l0040E558_thunk___errno_location
l0040E558_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  mbsrtowcs_exit
l0040E568:
	branch !__bit(r8, 0x13<32>) l0040E570
	// succ:  l0040E56C l0040E570
l0040E56C:
	r16 = r16 + 2<32>
	goto 0x0040E500<p32>
	goto l0040E500
	// succ:  l0040E500
l0040E570:
	r5 = CONVERT(Mem0[r16 + 2<32>:byte], byte, word32)
	r5 = r5 + 0xFFFFFF80<32>
	branch r5 >=u 0<32> l0040E556
	// succ:  l0040E57A l0040E556
l0040E57A:
	r16 = r16 + 3<32>
	goto 0x0040E500<p32>
	goto l0040E500
	// succ:  l0040E500
l0040E57E:
	Mem0[r17:word32] = r8
	r7 = r7 + 0xFFFFFFFC<32>
	r5 = CONVERT(Mem0[r16 + 1<32>:byte], byte, word32)
	Mem0[sp + 0x44<32>:word32] = r5
	r5 = CONVERT(Mem0[r16 + 2<32>:byte], byte, word32)
	r16 = r16 + 4<32>
	Mem0[sp + 0x48<32>:word32] = r5
	r17 = r17 + 0x10<32>
	r5 = CONVERT(Mem0[r16 - 1<32>:byte], byte, word32)
	Mem0[r17 - 4<32>:word32] = r5
	// succ:  l0040E596
l0040E596:
	r8 = CONVERT(Mem0[r16:byte], byte, word32)
	branch r7 <u 5<32> l0040E4AE
	// succ:  l0040E59E l0040E4AE
l0040E59E:
	r4 = Mem0[r16:word32]
	r5 = r4
	r5 = r5 + 0xFEFEFEFF<32>
	r5 = r5 | r4
	r4 = 0x80808080<32>
	r5 = r5 & r4
	branch r5 == 0<32> l0040E57E
	// succ:  l0040E5B4 l0040E57E
l0040E5B4:
	goto 0x0040E4AE<p32>
	goto l0040E4AE
	// succ:  l0040E4AE
l0040E5B6:
	r5 = r5 + 0xFFFFFF3E<32>
	branch r5 >=u 0x33<32> l0040E536
	// succ:  l0040E5BE l0040E536
l0040E5BE:
	r4 = 0x00410C99<p32>
	r16 = r16 + 1<32>
	r8 = Mem0[r4 + r5 * 4<32>:word32]
	goto 0x0040E426<p32>
	goto l0040E426
	// succ:  l0040E426
l0040E5CA:
	r5 = CONVERT(Mem0[r16 + 1<32>:byte], byte, word32)
	r5 = r5 + 0xFFFFFF80<32>
	branch r5 >=u 0<32> l0040E556
	// succ:  l0040E5D4 l0040E556
l0040E5D4:
	r8 = r8 << 6<32>
	r8 = r5 | r8
	branch r8 < 0<32> l0040E5E4
	// succ:  l0040E5E0 l0040E5E4
l0040E5E0:
	r16 = r16 + 2<32>
	goto 0x0040E454<p32>
	goto l0040E454
	// succ:  l0040E454
l0040E5E4:
	r5 = CONVERT(Mem0[r16 + 2<32>:byte], byte, word32)
	r5 = r5 + 0xFFFFFF80<32>
	branch r5 >=u 0<32> l0040E556
	// succ:  l0040E5EE l0040E556
l0040E5EE:
	r8 = r8 << 6<32>
	r16 = r16 + 3<32>
	r8 = r5 | r8
	goto 0x0040E454<p32>
	goto l0040E454
	// succ:  l0040E454
mbsrtowcs_exit:


// wcrtomb
// Return size: 0
define wcrtomb
wcrtomb_entry:
	sp = fp
	r25 = 0x40E600<32>
	// succ:  l0040E600
l0040E600:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	r7 = 1<32>
	branch r4 == 0<32> l0040E612
	// succ:  l0040E606 l0040E612
l0040E606:
	r7 = 0x80<32>
	branch r5 >=u r7 l0040E616
	// succ:  l0040E60E l0040E616
l0040E60E:
	r7 = 1<32>
	Mem0[r4:byte] = SLICE(r5, byte, 0)
	// succ:  l0040E612
l0040E612:
	r4 = r7
	ra = Mem0[sp + 12<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  wcrtomb_exit
l0040E616:
	r3 = __read_hardware_register(sp)
	r6 = Mem0[r3 - 0x38<32>:word32]
	r6 = Mem0[r6:word32]
	branch r6 != 0<32> l0040E63A
	// succ:  l0040E622 l0040E63A
l0040E622:
	r6 = r5
	r6 = r6 + 0xFFFF2080<32>
	branch r6 <u r7 l0040E60E
	// succ:  l0040E62E l0040E60E
l0040E62E:
	goto 0x004049B0<p32>
	// succ:  l0040E62E_thunk___errno_location
l0040E62E_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  wcrtomb_exit
l0040E63A:
	r7 = 0x7FF<32>
	branch r7 <u r5 l0040E65E
	// succ:  l0040E642 l0040E65E
l0040E642:
	r7 = r5 >> 6<32>
	r6 = 0xFFFFFFC0<32>
	r7 = r7 | r6
	r5 = r5 & 0x3F<32>
	Mem0[r4:byte] = SLICE(r7, byte, 0)
	r7 = 0xFFFFFF80<32>
	r5 = r5 | r7
	r7 = 2<32>
	Mem0[r4 + 1<32>:byte] = SLICE(r5, byte, 0)
	goto 0x0040E612<p32>
	goto l0040E612
	// succ:  l0040E612
l0040E65E:
	r7 = 0xD7FF<32>
	branch r7 >=u r5 l0040E676
	// succ:  l0040E666 l0040E676
l0040E666:
	r7 = r5
	r6 = 0x1FFF<32>
	r7 = r7 + 0xFFFF2000<32>
	branch r6 <u r7 l0040E69A
	// succ:  l0040E676 l0040E69A
l0040E676:
	r7 = r5 >> 0xC<32>
	r6 = 0xFFFFFFE0<32>
	r7 = r7 | r6
	r6 = 0xFFFFFF80<32>
	Mem0[r4:byte] = SLICE(r7, byte, 0)
	r7 = __ext(r5, 6<32>, 6<32>)
	r5 = r5 & 0x3F<32>
	r7 = r7 | r6
	r5 = r5 | r6
	Mem0[r4 + 1<32>:byte] = SLICE(r7, byte, 0)
	Mem0[r4 + 2<32>:byte] = SLICE(r5, byte, 0)
	r7 = 3<32>
	goto 0x0040E612<p32>
	goto l0040E612
	// succ:  l0040E612
l0040E69A:
	r7 = r5
	r6 = 0xFFFFF<32>
	r7 = r7 + 0xFFFF0000<32>
	branch r6 <u r7 l0040E62E
	// succ:  l0040E6AC l0040E62E
l0040E6AC:
	r7 = r5 >> 0x12<32>
	r6 = 0xFFFFFFF0<32>
	r7 = r7 | r6
	r6 = __ext(r5, 0xC<32>, 6<32>)
	Mem0[r4:byte] = SLICE(r7, byte, 0)
	r7 = 0xFFFFFF80<32>
	r6 = r6 | r7
	Mem0[r4 + 1<32>:byte] = SLICE(r6, byte, 0)
	r6 = __ext(r5, 6<32>, 6<32>)
	r5 = r5 & 0x3F<32>
	r6 = r6 | r7
	r5 = r5 | r7
	Mem0[r4 + 2<32>:byte] = SLICE(r6, byte, 0)
	r7 = 4<32>
	Mem0[r4 + 3<32>:byte] = SLICE(r5, byte, 0)
	goto 0x0040E612<p32>
	goto l0040E612
	// succ:  l0040E612
wcrtomb_exit:


// close_file
// Return size: 0
define close_file
close_file_entry:
	sp = fp
	r25 = 0x40E6E0<32>
	// succ:  l0040E6E0
l0040E6E0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r16 = r4
	branch r4 == 0<32> l0040E71E
	// succ:  l0040E6E6 l0040E71E
l0040E6E6:
	r7 = Mem0[r4 + 0x4C<32>:word32]
	branch r7 < 0<32> l0040E6F2
	// succ:  l0040E6EE l0040E6F2
l0040E6EE:
	goto 0x0040D1D0<p32>
	// succ:  l0040E6EE_thunk___lockfile
l0040E6EE_thunk___lockfile:
	call __lockfile (retsize: 0;)
	return
	// succ:  close_file_exit
l0040E6F2:
	r7 = Mem0[r16 + 0x14<32>:word32]
	r6 = Mem0[r16 + 0x1C<32>:word32]
	branch r6 >=u r7 l0040E702
	// succ:  l0040E6FA l0040E702
l0040E6FA:
	r7 = Mem0[r16 + 0x24<32>:word32]
	r4 = r16
	r5 = 0<32>
	r6 = 0<32>
	call r7 (retsize: 0;)
	// succ:  l0040E702
l0040E702:
	r6 = Mem0[r16 + 4<i32>:word32]
	r7 = Mem0[r16 + 8<i32>:word32]
	branch r6 >=u r7 l0040E71E
	// succ:  l0040E70A l0040E71E
l0040E70A:
	r6 = r6 - r7
	r5 = Mem0[r16 + 0x28<32>:word32]
	r4 = r16
	r8 = 1<32>
	r7 = r6 >> 0x1F<32>
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	call r5 (retsize: 0;)
	return
	// succ:  close_file_exit
l0040E71E:
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  close_file_exit
close_file_exit:


// __stdio_exit_needed
// Return size: 0
define __stdio_exit_needed
__stdio_exit_needed_entry:
	sp = fp
	r25 = 0x40E720<32>
	// succ:  l0040E720
l0040E720:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	goto 0x00408610<p32>
	// succ:  l0040E722_thunk___ofl_lock
l0040E722_thunk___ofl_lock:
	call __ofl_lock (retsize: 0;)
	return
	// succ:  __stdio_exit_needed_exit
__stdio_exit_needed_exit:


// __toread
// Return size: 0
define __toread
__toread_entry:
	sp = fp
	r25 = 0x40E750<32>
	// succ:  l0040E750
l0040E750:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r7 = CONVERT(Mem0[r4 + 0x4A<32>:int8], int8, word32)
	r16 = r4
	r6 = r7 + 0xFFFFFFFF<32>
	r7 = r7 | r6
	r6 = Mem0[r4 + 0x1C<32>:word32]
	Mem0[r4 + 0x4A<32>:byte] = SLICE(r7, byte, 0)
	r7 = Mem0[r4 + 0x14<32>:word32]
	branch r6 >=u r7 l0040E770
	// succ:  l0040E76A l0040E770
l0040E76A:
	r7 = Mem0[r4 + 0x24<32>:word32]
	r5 = 0<32>
	r6 = 0<32>
	call r7 (retsize: 0;)
	// succ:  l0040E770
l0040E770:
	r4 = Mem0[r16:word32]
	Mem0[sp + 0x10<32>:word32] = 0<32>
	Mem0[sp + 0x14<32>:word32] = 0<32>
	Mem0[sp + 0x1C<32>:word32] = 0<32>
	branch !__bit(r4, 2<32>) l0040E790
	// succ:  l0040E77C l0040E790
l0040E77C:
	r7 = Mem0[r16 + 0x2C<32>:word32]
	r4 = __ext(r4, 4<32>, 1<32>)
	r6 = Mem0[r16 + 0x30<32>:word32]
	r4 = -r4
	r7 = r7 + r6
	Mem0[sp + 4<32>:word32] = r7
	Mem0[sp + 8<32>:word32] = r7
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  __toread_exit
l0040E790:
	r4 = r4 | 0x20<32>
	Mem0[sp:word32] = r4
	r4 = 0xFFFFFFFF<32>
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  __toread_exit
__toread_exit:


// __toread_needs_stdio_exit
// Return size: 0
define __toread_needs_stdio_exit
__toread_needs_stdio_exit_entry:
	sp = fp
	r25 = 0x40E79A<32>
	// succ:  l0040E79A
l0040E79A:
	goto 0x0040E720<p32>
	// succ:  l0040E79A_thunk___stdio_exit_needed
l0040E79A_thunk___stdio_exit_needed:
	call __stdio_exit_needed (retsize: 0;)
	return
	// succ:  __toread_needs_stdio_exit_exit
__toread_needs_stdio_exit_exit:


// sem_init
// Return size: 0
define sem_init
sem_init_entry:
	sp = fp
	r25 = 0x40E7A0<32>
	// succ:  l0040E7A0
l0040E7A0:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	branch r6 < 0<32> l0040E7B6
	// succ:  l0040E7A6 l0040E7B6
l0040E7A6:
	r5 = CONVERT(r5 <u 1<32>, bool, word32)
	Mem0[sp:word32] = r6
	r5 = r5 << 7<32>
	Mem0[sp + 4<32>:word32] = 0<32>
	Mem0[sp + 8<32>:word32] = r5
	r4 = 0<32>
	ra = Mem0[sp + 12<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  sem_init_exit
l0040E7B6:
	goto 0x004049B0<p32>
	// succ:  l0040E7B6_thunk___errno_location
l0040E7B6_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  sem_init_exit
sem_init_exit:


// sem_post
// Return size: 0
define sem_post
sem_post_entry:
	sp = fp
	r25 = 0x40E7D0<32>
	// succ:  l0040E7D0
l0040E7D0:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	sp = sp - 16<i32>
	r6 = Mem0[r4 + 8<32>:word32]
	r16 = r4
	// succ:  l0040E7D6
l0040E7D6:
	r7 = Mem0[r16:word32]
	r5 = 0x7FFFFFFF<32>
	r9 = Mem0[r16 + 1<32>:word32]
	branch r5 != r7 l0040E7EE
	// succ:  l0040E7E2 l0040E7EE
l0040E7E2:
	goto 0x004049B0<p32>
	// succ:  l0040E7E2_thunk___errno_location
l0040E7E2_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  sem_post_exit
l0040E7EE:
	r5 = r7 + 1<32>
	r4 = r7 >>u 0x1F<32>
	r5 = r5 + r4
	__sync(0<32>)
	// succ:  l0040E7FC
l0040E7FC:
	r8 = __load_linked_32(Mem0[r16:word32])
	branch r7 != r8 l0040E80C
	// succ:  l0040E804 l0040E80C
l0040E804:
	r4 = r5
	r4 = __store_conditional_32(Mem0[r16:word32], r4)
	branch r4 == 0<32> l0040E7FC
	// succ:  l0040E80C l0040E7FC
l0040E80C:
	__sync(0<32>)
	branch r7 != r8 l0040E7D6
	// succ:  l0040E814 l0040E7D6
l0040E814:
	branch r7 < 0<32> l0040E820
	// succ:  l0040E818 l0040E820
l0040E818:
	branch 0<32> != r9 l0040E820
	// succ:  l0040E81C l0040E820
l0040E81C:
	r4 = 0<32>
	ra = Mem0[sp + 12<i32>:word32]
	r16 = Mem0[sp + 8<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  sem_post_exit
l0040E820:
	r7 = 0x80<32>
	branch r6 == 0<32> l0040E828
	// succ:  l0040E824_1 l0040E828
l0040E824_1:
	r6 = r7
	// succ:  l0040E828
l0040E828:
	r7 = 1<32>
	r6 = r6 | r7
	r4 = 0x62<32>
	r5 = r16
	call __syscall (retsize: 0;)
	r7 = 0xFFFFFFDA<32>
	branch r7 != r4 l0040E81C
	// succ:  l0040E83A l0040E81C
l0040E83A:
	r7 = 1<32>
	r4 = 0x62<32>
	r5 = r16
	r6 = r7
	goto 0x00404A50<p32>
	// succ:  l0040E840_thunk___syscall
l0040E840_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  sem_post_exit
sem_post_exit:


// sem_wait
// Return size: 0
define sem_wait
sem_wait_entry:
	sp = fp
	r25 = 0x40E850<32>
	// succ:  l0040E850
l0040E850:
	r5 = 0<32>
	goto 0x0040E8A6<p32>
	// succ:  l0040E852_thunk_sem_timedwait
l0040E852_thunk_sem_timedwait:
	call sem_timedwait (retsize: 0;)
	return
	// succ:  sem_wait_exit
sem_wait_exit:


// lseek64
// Return size: 0
define lseek64
lseek64_entry:
	sp = fp
	r25 = 0x40E860<32>
	// succ:  l0040E860
l0040E860:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 32<i32>
	r5 = r7
	r9 = r8
	r7 = r6
	r8 = sp + 8<32>
	r6 = r5
	r5 = r4
	r4 = 0x3E<32>
	goto 0x00404A50<p32>
	// succ:  l0040E870_thunk___syscall
l0040E870_thunk___syscall:
	call __syscall (retsize: 0;)
	return
	// succ:  lseek64_exit
lseek64_exit:


// cleanup
// Return size: 0
define cleanup
cleanup_entry:
	sp = fp
	r25 = 0x40E890<32>
	// succ:  l0040E890
l0040E890:
	__sync(0<32>)
	// succ:  l0040E894
l0040E894:
	r7 = __load_linked_32(Mem0[r4:word32])
	r7 = r7 + 0xFFFFFFFF<32>
	r7 = __store_conditional_32(Mem0[r4:word32], r7)
	branch r7 == 0<32> l0040E894
	// succ:  l0040E8A0 l0040E894
l0040E8A0:
	__sync(0<32>)
	return
	// succ:  cleanup_exit
cleanup_exit:


// sem_timedwait
// Return size: 0
define sem_timedwait
sem_timedwait_entry:
	sp = fp
	r25 = 0x40E8A6<32>
	// succ:  l0040E8A6
l0040E8A6:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	sp = sp - 32<i32>
	r16 = r4
	r18 = r5
	goto 0x0040EA42<p32>
	// succ:  l0040E8AA_thunk___pthread_testcancel
l0040E8AA_thunk___pthread_testcancel:
	call __pthread_testcancel (retsize: 0;)
	return
	// succ:  sem_timedwait_exit
sem_timedwait_exit:


// sem_trywait
// Return size: 0
define sem_trywait
sem_trywait_entry:
	sp = fp
	r25 = 0x40E930<32>
	// succ:  l0040E930
l0040E930:
	Mem0[sp + -4<i32>:word32] = ra
	sp = sp - 16<i32>
	// succ:  l0040E932
l0040E932:
	r7 = Mem0[r4:word32]
	branch 0<32> < r7 l0040E944
	// succ:  l0040E938 l0040E944
l0040E938:
	goto 0x004049B0<p32>
	// succ:  l0040E938_thunk___errno_location
l0040E938_thunk___errno_location:
	call __errno_location (retsize: 0;)
	return
	// succ:  sem_trywait_exit
l0040E944:
	r5 = r7 + 0xFFFFFFFF<32>
	r6 = 0<32>
	branch r7 != 1<32> l0040E954
	// succ:  l0040E94E l0040E954
l0040E94E:
	r6 = Mem0[r4 + 4<32>:word32]
	r6 = CONVERT(0<32> <u r6, bool, word32)
	// succ:  l0040E954
l0040E954:
	r5 = r5 - r6
	__sync(0<32>)
	// succ:  l0040E95A
l0040E95A:
	r8 = __load_linked_32(Mem0[r4:word32])
	branch r7 != r8 l0040E96A
	// succ:  l0040E962 l0040E96A
l0040E962:
	r6 = r5
	r6 = __store_conditional_32(Mem0[r4:word32], r6)
	branch r6 == 0<32> l0040E95A
	// succ:  l0040E96A l0040E95A
l0040E96A:
	__sync(0<32>)
	branch r7 != r8 l0040E932
	// succ:  l0040E972 l0040E932
l0040E972:
	r4 = 0<32>
	ra = Mem0[sp + 12<i32>:word32]
	sp = sp + 16<i32>
	return
	// succ:  sem_trywait_exit
sem_trywait_exit:


// __timedwait_cp
// Return size: 0
define __timedwait_cp
__timedwait_cp_entry:
	sp = fp
	r25 = 0x40E980<32>
	// succ:  l0040E980
l0040E980:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	Mem0[sp + -16<i32>:word32] = r18
	Mem0[sp + -20<i32>:word32] = r19
	sp = sp - 48<i32>
	r19 = 0x80<32>
	r16 = r7
	r17 = r4
	r18 = r5
	branch r8 != 0<32> l0040E98E
	// succ:  l0040E98A_1 l0040E98E
l0040E98A_1:
	r19 = 0<32>
	// succ:  l0040E98E
l0040E98E:
	branch r7 == 0<32> l0040E9D4
	// succ:  l0040E990 l0040E9D4
l0040E990:
	r7 = Mem0[r7 + 4<32>:word32]
	r5 = 0x3B9AC9FF<32>
	branch r5 >=u r7 l0040E9A0
	// succ:  l0040E99C l0040E9A0
l0040E99C:
	r4 = 0x16<32>
	ra = Mem0[sp + 44<i32>:word32]
	r16 = Mem0[sp + 40<i32>:word32]
	r17 = Mem0[sp + 36<i32>:word32]
	r18 = Mem0[sp + 32<i32>:word32]
	r19 = Mem0[sp + 28<i32>:word32]
	sp = sp + 48<i32>
	return
	// succ:  __timedwait_cp_exit
l0040E9A0:
	r5 = sp + 8<32>
	r4 = r6
	call __clock_gettime (retsize: 0;)
	branch r4 != 0<32> l0040E99C
	// succ:  l0040E9A8 l0040E99C
l0040E9A8:
	r17 = Mem0[sp + 8<32>:word32]
	r5 = Mem0[r16:word32]
	r17 = Mem0[sp + 0xC<32>:word32]
	r5 = r5 - r7
	r7 = Mem0[r16 + 4<32>:word32]
	Mem0[sp + 8<32>:word32] = r5
	r7 = r7 - r6
	Mem0[sp + 0xC<32>:word32] = r7
	branch r7 >= 0<32> l0040E9C8
	// succ:  l0040E9BC l0040E9C8
l0040E9BC:
	r5 = r5 + 0xFFFFFFFF<32>
	r7 = r7 + 0x3B9ACA00<32>
	Mem0[sp + 8<32>:word32] = r5
	Mem0[sp + 0xC<32>:word32] = r7
	// succ:  l0040E9C8
l0040E9C8:
	r17 = Mem0[sp + 8<32>:word32]
	r16 = sp + 8<32>
	branch r7 >= 0<32> l0040E9D6
	// succ:  l0040E9D0 l0040E9D6
l0040E9D0:
	r4 = 0x6E<32>
	ra = Mem0[sp + 44<i32>:word32]
	r16 = Mem0[sp + 40<i32>:word32]
	r17 = Mem0[sp + 36<i32>:word32]
	r18 = Mem0[sp + 32<i32>:word32]
	r19 = Mem0[sp + 28<i32>:word32]
	sp = sp + 48<i32>
	return
	// succ:  __timedwait_cp_exit
l0040E9D4:
	r16 = 0<32>
	// succ:  l0040E9D6
l0040E9D6:
	r7 = r18
	r8 = r16
	r5 = r17
	r6 = r19
	r10 = 0<32>
	r9 = 0<32>
	r4 = 0x62<32>
	goto 0x0040ADA4<p32>
	// succ:  l0040E9E0_thunk___syscall_cp
l0040E9E0_thunk___syscall_cp:
	call __syscall_cp (retsize: 0;)
	return
	// succ:  __timedwait_cp_exit
__timedwait_cp_exit:


// __timedwait
// Return size: 0
define __timedwait
__timedwait_entry:
	sp = fp
	r25 = 0x40EA14<32>
	// succ:  l0040EA14
l0040EA14:
	Mem0[sp + -4<i32>:word32] = ra
	Mem0[sp + -8<i32>:word32] = r16
	Mem0[sp + -12<i32>:word32] = r17
	sp = sp - 48<i32>
	r16 = r4
	r17 = r5
	r5 = sp + 0x1C<32>
	r4 = 1<32>
	Mem0[sp + 4<32>:word32] = r8
	Mem0[sp + 8<32>:word32] = r7
	Mem0[sp + 0xC<32>:word32] = r6
	goto 0x0040AE50<p32>
	// succ:  l0040EA22_thunk___pthread_setcancelstate
l0040EA22_thunk___pthread_setcancelstate:
	call __pthread_setcancelstate (retsize: 0;)
	return
	// succ:  __timedwait_exit
__timedwait_exit:


// __testcancel
// Return size: 0
define __testcancel
__testcancel_entry:
	sp = fp
	r25 = 0x40EA40<32>
	// succ:  l0040EA40
l0040EA40:
	return
	// succ:  __testcancel_exit
__testcancel_exit:


// __pthread_testcancel
// Return size: 0
define __pthread_testcancel
__pthread_testcancel_entry:
	sp = fp
	r25 = 0x40EA42<32>
	// succ:  l0040EA42
l0040EA42:
	goto 0x0040EA40<p32>
	// succ:  l0040EA42_thunk___testcancel
l0040EA42_thunk___testcancel:
	call __testcancel (retsize: 0;)
	return
	// succ:  __pthread_testcancel_exit
__pthread_testcancel_exit:


// __ashldi3
// Return size: 0
define __ashldi3
__ashldi3_entry:
	sp = fp
	r25 = 0x40EA50<32>
	// succ:  l0040EA50
l0040EA50:
	r7 = -r6
	r5 = r5 << r6
	r7 = r4 >>u r7
	r4 = r4 << r6
	branch r6 != 0<32> l0040EA64
	// succ:  l0040EA60_1 l0040EA64
l0040EA60_1:
	r7 = 0<32>
	// succ:  l0040EA64
l0040EA64:
	r6 = CONVERT(r6 < 0x20<32>, bool, word32)
	r5 = r5 | r7
	branch r6 != 0<32> l0040EA6E
	// succ:  l0040EA6A_1 l0040EA6E
l0040EA6A_1:
	r5 = r4
	// succ:  l0040EA6E
l0040EA6E:
	branch r6 != 0<32> l0040EA72
	// succ:  l0040EA6E_1 l0040EA72
l0040EA6E_1:
	r4 = 0<32>
	// succ:  l0040EA72
l0040EA72:
	return
	// succ:  __ashldi3_exit
__ashldi3_exit:


// __lshrdi3
// Return size: 0
define __lshrdi3
__lshrdi3_entry:
	sp = fp
	r25 = 0x40EA80<32>
	// succ:  l0040EA80
l0040EA80:
	r7 = -r6
	r4 = r4 >>u r6
	r7 = r5 << r7
	r5 = r5 >>u r6
	branch r6 != 0<32> l0040EA94
	// succ:  l0040EA90_1 l0040EA94
l0040EA90_1:
	r7 = 0<32>
	// succ:  l0040EA94
l0040EA94:
	r6 = CONVERT(r6 < 0x20<32>, bool, word32)
	r4 = r4 | r7
	branch r6 != 0<32> l0040EA9E
	// succ:  l0040EA9A_1 l0040EA9E
l0040EA9A_1:
	r4 = r5
	// succ:  l0040EA9E
l0040EA9E:
	branch r6 != 0<32> l0040EAA2
	// succ:  l0040EA9E_1 l0040EAA2
l0040EA9E_1:
	r5 = 0<32>
	// succ:  l0040EAA2
l0040EAA2:
	return
	// succ:  __lshrdi3_exit
__lshrdi3_exit:


// __udivdi3
// Return size: 0
define __udivdi3
__udivdi3_entry:
	sp = fp
	r25 = 0x40EAB0<32>
	// succ:  l0040EAB0
l0040EAB0:
	r8 = r5
	r10 = r4
	r9 = r6
	r5 = r7
	r11 = r8
	branch 0<32> != r5 l0040EC5A
	// succ:  l0040EABC l0040EC5A
l0040EABC:
	branch r8 >=u r9 l0040EB4C
	// succ:  l0040EAC0 l0040EB4C
l0040EAC0:
	r7 = __clz(r6)
	branch r7 == 0<32> l0040EADE
	// succ:  l0040EAC6 l0040EADE
l0040EAC6:
	r11 = -r7
	r8 = r8 << r7
	r11 = r4 >>u r11
	r9 = r6 << r7
	r11 = r11 | r8
	r10 = r4 << r7
	// succ:  l0040EADE
l0040EADE:
	r8 = __ext(r9, 0<32>, 0x10<32>)
	r2 = r9 >>u 0x10<32>
	lo = r3 /u r11
	hi = r3 % r11
	r4 = r8 *s r3
	r7 = r10 >>u 0x10<32>
	r6 = r11 % r2
	r6 = r6 << 0x10<32>
	r6 = r6 | r7
	r7 = r3
	branch r6 >=u r4 l0040EB14
	// succ:  l0040EB02 l0040EB14
l0040EB02:
	r6 = r6 + r9
	r7 = r7 + 0xFFFFFFFF<32>
	branch r6 <u r9 l0040EB14
	// succ:  l0040EB0A l0040EB14
l0040EB0A:
	branch r6 >=u r4 l0040EB14
	// succ:  l0040EB0E l0040EB14
l0040EB0E:
	r7 = r3 + 0xFFFFFFFE<32>
	r6 = r6 + r9
	// succ:  l0040EB14
l0040EB14:
	r6 = r6 - r4
	lo = r11 /u r6
	hi = r11 % r6
	r8 = r8 *s r11
	r4 = r6 % r2
	r10 = __ext(r10, 0<32>, 0x10<32>)
	r6 = r4 << 0x10<32>
	r10 = r6 | r10
	r4 = r11
	branch r10 >=u r8 l0040EB42
	// succ:  l0040EB32 l0040EB42
l0040EB32:
	r10 = r10 + r9
	r4 = r4 + 0xFFFFFFFF<32>
	branch r10 <u r9 l0040EB42
	// succ:  l0040EB3A l0040EB42
l0040EB3A:
	branch r10 >=u r8 l0040EB42
	// succ:  l0040EB3E l0040EB42
l0040EB3E:
	r4 = r11 + 0xFFFFFFFE<32>
	// succ:  l0040EB42
l0040EB42:
	r7 = r7 << 0x10<32>
	r7 = r7 | r4
	// succ:  l0040EB48
l0040EB48:
	r4 = r7
	return
	// succ:  __udivdi3_exit
l0040EB4C:
	branch 0<32> != r9 l0040EB56
	// succ:  l0040EB50 l0040EB56
l0040EB50:
	r7 = 1<32>
	lo = r9 /u r7
	hi = r9 % r7
	// succ:  l0040EB56
l0040EB56:
	r6 = __clz(r9)
	branch r6 != 0<32> l0040EBCA
	// succ:  l0040EB5C l0040EBCA
l0040EB5C:
	r8 = r8 - r9
	r5 = 1<32>
	// succ:  l0040EB62
l0040EB62:
	r11 = __ext(r9, 0<32>, 0x10<32>)
	r2 = r9 >>u 0x10<32>
	lo = r3 /u r8
	hi = r3 % r8
	r4 = r11 *s r3
	r7 = r10 >>u 0x10<32>
	r6 = r8 % r2
	r6 = r6 << 0x10<32>
	r6 = r6 | r7
	r7 = r3
	branch r6 >=u r4 l0040EB98
	// succ:  l0040EB86 l0040EB98
l0040EB86:
	r6 = r6 + r9
	r7 = r7 + 0xFFFFFFFF<32>
	branch r6 <u r9 l0040EB98
	// succ:  l0040EB8E l0040EB98
l0040EB8E:
	branch r6 >=u r4 l0040EB98
	// succ:  l0040EB92 l0040EB98
l0040EB92:
	r7 = r3 + 0xFFFFFFFE<32>
	r6 = r6 + r9
	// succ:  l0040EB98
l0040EB98:
	r6 = r6 - r4
	lo = r3 /u r6
	hi = r3 % r6
	r8 = r11 *s r3
	r4 = r6 % r2
	r10 = __ext(r10, 0<32>, 0x10<32>)
	r6 = r4 << 0x10<32>
	r10 = r6 | r10
	r4 = r3
	branch r10 >=u r8 l0040EB42
	// succ:  l0040EBB8 l0040EB42
l0040EBB8:
	r10 = r10 + r9
	r4 = r4 + 0xFFFFFFFF<32>
	branch r10 <u r9 l0040EB42
	// succ:  l0040EBC0 l0040EB42
l0040EBC0:
	branch r10 >=u r8 l0040EB42
	// succ:  l0040EBC4 l0040EB42
l0040EBC4:
	r4 = r3 + 0xFFFFFFFE<32>
	goto 0x0040EB42<p32>
	goto l0040EB42
	// succ:  l0040EB42
l0040EBCA:
	r9 = r9 << r6
	r7 = 0x20<32>
	r7 = r7 - r6
	r5 = __ext(r9, 0<32>, 0x10<32>)
	r3 = r8 >>u r7
	r10 = r4 << r6
	r8 = r8 << r6
	r11 = r9 >>u 0x10<32>
	lo = r2 /u r3
	hi = r2 % r3
	r6 = r5 *s r2
	r7 = r4 >>u r7
	r8 = r7 | r8
	r7 = r3 % r11
	r4 = r8 >>u 0x10<32>
	r7 = r7 << 0x10<32>
	r7 = r7 | r4
	r4 = r2
	branch r7 >=u r6 l0040EC1C
	// succ:  l0040EC0A l0040EC1C
l0040EC0A:
	r7 = r7 + r9
	r4 = r4 + 0xFFFFFFFF<32>
	branch r7 <u r9 l0040EC1C
	// succ:  l0040EC12 l0040EC1C
l0040EC12:
	branch r7 >=u r6 l0040EC1C
	// succ:  l0040EC16 l0040EC1C
l0040EC16:
	r4 = r2 + 0xFFFFFFFE<32>
	r7 = r7 + r9
	// succ:  l0040EC1C
l0040EC1C:
	r6 = r7 - r6
	r7 = r6 % r11
	lo = r2 /u r6
	hi = r2 % r6
	r6 = r5 *s r2
	r7 = r7 << 0x10<32>
	r8 = __ext(r8, 0<32>, 0x10<32>)
	r8 = r7 | r8
	r7 = r2
	branch r8 >=u r6 l0040EC4E
	// succ:  l0040EC3C l0040EC4E
l0040EC3C:
	r8 = r8 + r9
	r7 = r7 + 0xFFFFFFFF<32>
	branch r8 <u r9 l0040EC4E
	// succ:  l0040EC44 l0040EC4E
l0040EC44:
	branch r8 >=u r6 l0040EC4E
	// succ:  l0040EC48 l0040EC4E
l0040EC48:
	r7 = r2 + 0xFFFFFFFE<32>
	r8 = r8 + r9
	// succ:  l0040EC4E
l0040EC4E:
	r5 = r4 << 0x10<32>
	r8 = r8 - r6
	r5 = r5 | r7
	goto 0x0040EB62<p32>
	goto l0040EB62
	// succ:  l0040EB62
l0040EC5A:
	branch r8 <u r5 l0040ED3A
	// succ:  l0040EC5E l0040ED3A
l0040EC5E:
	r3 = __clz(r7)
	branch 0<32> != r3 l0040EC76
	// succ:  l0040EC66 l0040EC76
l0040EC66:
	branch r5 <u r8 l0040ED40
	// succ:  l0040EC6A l0040ED40
l0040EC6A:
	r6 = CONVERT(r4 <u r6, bool, word32)
	r7 = r6 ^ 1<32>
	// succ:  l0040EC72
l0040EC72:
	r5 = 0<32>
	goto 0x0040EB48<p32>
	goto l0040EB48
	// succ:  l0040EB48
l0040EC76:
	r5 = 0x20<32>
	r7 = r7 << r3
	r5 = r5 - r3
	r2 = r6 >>u r5
	r13 = r8 >>u r5
	r2 = r2 | r7
	r8 = r8 << r3
	r5 = r4 >>u r5
	r9 = __ext(r2, 0<32>, 0x10<32>)
	r11 = r5 | r8
	r7 = r2 >>u 0x10<32>
	lo = r12 /u r13
	hi = r12 % r13
	r5 = r9 *s r12
	r8 = r11 >>u 0x10<32>
	r10 = r13 % r7
	r10 = r10 << 0x10<32>
	r6 = r6 << r3
	r10 = r10 | r8
	r8 = r12
	branch r10 >=u r5 l0040ECD8
	// succ:  l0040ECC2 l0040ECD8
l0040ECC2:
	r10 = r10 + r2
	r8 = r8 + 0xFFFFFFFF<32>
	branch r10 <u r2 l0040ECD8
	// succ:  l0040ECCC l0040ECD8
l0040ECCC:
	branch r10 >=u r5 l0040ECD8
	// succ:  l0040ECD0 l0040ECD8
l0040ECD0:
	r8 = r12 + 0xFFFFFFFE<32>
	r10 = r10 + r2
	// succ:  l0040ECD8
l0040ECD8:
	r10 = r10 - r5
	lo = r12 /u r10
	hi = r12 % r10
	r9 = r9 *s r12
	r5 = r10 % r7
	r11 = __ext(r11, 0<32>, 0x10<32>)
	r5 = r5 << 0x10<32>
	r5 = r5 | r11
	r7 = r12
	branch r5 >=u r9 l0040ED10
	// succ:  l0040ECFA l0040ED10
l0040ECFA:
	r5 = r5 + r2
	r7 = r7 + 0xFFFFFFFF<32>
	branch r5 <u r2 l0040ED10
	// succ:  l0040ED04 l0040ED10
l0040ED04:
	branch r5 >=u r9 l0040ED10
	// succ:  l0040ED08 l0040ED10
l0040ED08:
	r7 = r12 + 0xFFFFFFFE<32>
	r5 = r5 + r2
	// succ:  l0040ED10
l0040ED10:
	r8 = r8 << 0x10<32>
	r9 = r5 - r9
	r7 = r8 | r7
	r8 = r7 *s r6
	r6 = SLICE(r7 *u r6, word32, 32)
	branch r9 <u r6 l0040ED36
	// succ:  l0040ED28 l0040ED36
l0040ED28:
	r5 = 0<32>
	branch r9 != r6 l0040EB48
	// succ:  l0040ED2E l0040EB48
l0040ED2E:
	r6 = r4 << r3
	branch r6 >=u r8 l0040EB48
	// succ:  l0040ED36 l0040EB48
l0040ED36:
	r7 = r7 + 0xFFFFFFFF<32>
	goto 0x0040EC72<p32>
	goto l0040EC72
	// succ:  l0040EC72
l0040ED3A:
	r5 = 0<32>
	r7 = 0<32>
	goto 0x0040EB48<p32>
	goto l0040EB48
	// succ:  l0040EB48
l0040ED40:
	r5 = 0<32>
	r7 = 1<32>
	goto 0x0040EB48<p32>
	goto l0040EB48
	// succ:  l0040EB48
__udivdi3_exit:


// __umoddi3
// Return size: 0
define __umoddi3
__umoddi3_entry:
	sp = fp
	r25 = 0x40ED50<32>
	// succ:  l0040ED50
l0040ED50:
	r9 = r6
	r11 = r7
	r8 = r4
	r10 = r5
	branch 0<32> != r11 l0040EEA8
	// succ:  l0040ED58 l0040EEA8
l0040ED58:
	branch r10 >=u r9 l0040EDDE
	// succ:  l0040ED5C l0040EDDE
l0040ED5C:
	r11 = __clz(r6)
	branch 0<32> == r11 l0040ED7C
	// succ:  l0040ED64 l0040ED7C
l0040ED64:
	r10 = -r11
	r5 = r5 << r11
	r10 = r4 >>u r10
	r9 = r6 << r11
	r10 = r10 | r5
	r8 = r4 << r11
	// succ:  l0040ED7C
l0040ED7C:
	r4 = __ext(r9, 0<32>, 0x10<32>)
	r5 = r9 >>u 0x10<32>
	lo = r6 /u r10
	hi = r6 % r10
	r6 = r6 *s r4
	r7 = r10 % r5
	r10 = r8 >>u 0x10<32>
	r7 = r7 << 0x10<32>
	r7 = r7 | r10
	branch r7 >=u r6 l0040EDAA
	// succ:  l0040ED9E l0040EDAA
l0040ED9E:
	r7 = r7 + r9
	branch r7 <u r9 l0040EDAA
	// succ:  l0040EDA4 l0040EDAA
l0040EDA4:
	branch r7 >=u r6 l0040EDAA
	// succ:  l0040EDA8 l0040EDAA
l0040EDA8:
	r7 = r7 + r9
	// succ:  l0040EDAA
l0040EDAA:
	r7 = r7 - r6
	lo = r10 /u r7
	hi = r10 % r7
	r4 = r4 *s r10
	r6 = r7 % r5
	// succ:  l0040EDB6
l0040EDB6:
	r7 = r6 << 0x10<32>
	r8 = __ext(r8, 0<32>, 0x10<32>)
	r8 = r7 | r8
	branch r8 >=u r4 l0040EDD2
	// succ:  l0040EDC6 l0040EDD2
l0040EDC6:
	r8 = r8 + r9
	branch r8 <u r9 l0040EDD2
	// succ:  l0040EDCC l0040EDD2
l0040EDCC:
	branch r8 >=u r4 l0040EDD2
	// succ:  l0040EDD0 l0040EDD2
l0040EDD0:
	r8 = r8 + r9
	// succ:  l0040EDD2
l0040EDD2:
	r8 = r8 - r4
	r5 = 0<32>
	r4 = r8 >>u r11
	// succ:  l0040EDDC
l0040EDDC:
	return
	// succ:  __umoddi3_exit
l0040EDDE:
	branch 0<32> != r9 l0040EDE8
	// succ:  l0040EDE2 l0040EDE8
l0040EDE2:
	r7 = 1<32>
	lo = r9 /u r7
	hi = r9 % r7
	// succ:  l0040EDE8
l0040EDE8:
	r11 = __clz(r9)
	branch 0<32> != r11 l0040EE2E
	// succ:  l0040EDF0 l0040EE2E
l0040EDF0:
	r5 = r5 - r9
	// succ:  l0040EDF4
l0040EDF4:
	r4 = __ext(r9, 0<32>, 0x10<32>)
	r10 = r9 >>u 0x10<32>
	lo = r6 /u r5
	hi = r6 % r5
	r6 = r6 *s r4
	r7 = r5 % r10
	r5 = r8 >>u 0x10<32>
	r7 = r7 << 0x10<32>
	r7 = r7 | r5
	branch r7 >=u r6 l0040EE20
	// succ:  l0040EE14 l0040EE20
l0040EE14:
	r7 = r7 + r9
	branch r7 <u r9 l0040EE20
	// succ:  l0040EE1A l0040EE20
l0040EE1A:
	branch r7 >=u r6 l0040EE20
	// succ:  l0040EE1E l0040EE20
l0040EE1E:
	r7 = r7 + r9
	// succ:  l0040EE20
l0040EE20:
	r7 = r7 - r6
	lo = r5 /u r7
	hi = r5 % r7
	r6 = r7 % r10
	r4 = r4 *s r5
	goto 0x0040EDB6<p32>
	goto l0040EDB6
	// succ:  l0040EDB6
l0040EE2E:
	r2 = 0x20<32>
	r9 = r9 << r11
	r2 = r2 - r11
	r8 = r4 << r11
	r3 = r5 >>u r2
	r5 = r5 << r11
	r2 = r4 >>u r2
	r4 = r9 >>u 0x10<32>
	r2 = r2 | r5
	r5 = __ext(r9, 0<32>, 0x10<32>)
	lo = r6 /u r3
	hi = r6 % r3
	r6 = r6 *s r5
	r7 = r3 % r4
	r10 = r2 >>u 0x10<32>
	r7 = r7 << 0x10<32>
	r7 = r7 | r10
	branch r7 >=u r6 l0040EE7C
	// succ:  l0040EE70 l0040EE7C
l0040EE70:
	r7 = r7 + r9
	branch r7 <u r9 l0040EE7C
	// succ:  l0040EE76 l0040EE7C
l0040EE76:
	branch r7 >=u r6 l0040EE7C
	// succ:  l0040EE7A l0040EE7C
l0040EE7A:
	r7 = r7 + r9
	// succ:  l0040EE7C
l0040EE7C:
	r6 = r7 - r6
	lo = r10 /u r6
	hi = r10 % r6
	r10 = r10 *s r5
	r7 = r6 % r4
	r5 = __ext(r2, 0<32>, 0x10<32>)
	r7 = r7 << 0x10<32>
	r5 = r5 | r7
	branch r5 >=u r10 l0040EEA2
	// succ:  l0040EE96 l0040EEA2
l0040EE96:
	r5 = r5 + r9
	branch r5 <u r9 l0040EEA2
	// succ:  l0040EE9C l0040EEA2
l0040EE9C:
	branch r5 >=u r10 l0040EEA2
	// succ:  l0040EEA0 l0040EEA2
l0040EEA0:
	r5 = r5 + r9
	// succ:  l0040EEA2
l0040EEA2:
	r5 = r5 - r10
	goto 0x0040EDF4<p32>
	goto l0040EDF4
	// succ:  l0040EDF4
l0040EEA8:
	branch r5 <u r11 l0040EDDC
	// succ:  l0040EEAC l0040EDDC
l0040EEAC:
	r12 = __clz(r7)
	branch 0<32> != r12 l0040EECE
	// succ:  l0040EEB4 l0040EECE
l0040EEB4:
	branch r11 <u r10 l0040EEBC
	// succ:  l0040EEB8 l0040EEBC
l0040EEB8:
	branch r8 <u r9 l0040EECA
	// succ:  l0040EEBC l0040EECA
l0040EEBC:
	r8 = r4 - r6
	r5 = r5 - r7
	r10 = CONVERT(r4 <u r8, bool, word32)
	r10 = r5 - r10
	// succ:  l0040EECA
l0040EECA:
	r4 = r8
	r5 = r10
	goto 0x0040EDDC<p32>
	goto l0040EDDC
	// succ:  l0040EDDC
l0040EECE:
	r9 = 0x20<32>
	r7 = r7 << r12
	r9 = r9 - r12
	r11 = r6 >>u r9
	r10 = r4 >>u r9
	r8 = r11 | r7
	r11 = r5 >>u r9
	r5 = r5 << r12
	r7 = r8 >>u 0x10<32>
	r5 = r10 | r5
	r10 = __ext(r8, 0<32>, 0x10<32>)
	r3 = r11 % r7
	lo = r13 /u r11
	hi = r13 % r11
	r11 = r10 *s r13
	r2 = r5 >>u 0x10<32>
	r3 = r3 << 0x10<32>
	r6 = r6 << r12
	r3 = r3 | r2
	r4 = r4 << r12
	r2 = r13
	branch r3 >=u r11 l0040EF36
	// succ:  l0040EF20 l0040EF36
l0040EF20:
	r3 = r3 + r8
	r2 = r2 + 0xFFFFFFFF<32>
	branch r3 <u r8 l0040EF36
	// succ:  l0040EF2A l0040EF36
l0040EF2A:
	branch r3 >=u r11 l0040EF36
	// succ:  l0040EF2E l0040EF36
l0040EF2E:
	r2 = r13 + 0xFFFFFFFE<32>
	r3 = r3 + r8
	// succ:  l0040EF36
l0040EF36:
	r3 = r3 - r11
	r11 = r3 % r7
	lo = r13 /u r3
	hi = r13 % r3
	r7 = r10 *s r13
	r5 = r5 & 0xFFFF<32>
	r11 = r11 << 0x10<32>
	r10 = r11 | r5
	r5 = r13
	branch r10 >=u r7 l0040EF68
	// succ:  l0040EF56 l0040EF68
l0040EF56:
	r10 = r10 + r8
	r5 = r5 + 0xFFFFFFFF<32>
	branch r10 <u r8 l0040EF68
	// succ:  l0040EF5E l0040EF68
l0040EF5E:
	branch r10 >=u r7 l0040EF68
	// succ:  l0040EF62 l0040EF68
l0040EF62:
	r5 = r13 + 0xFFFFFFFE<32>
	r10 = r10 + r8
	// succ:  l0040EF68
l0040EF68:
	r11 = r2 << 0x10<32>
	r10 = r10 - r7
	r11 = r11 | r5
	r2 = r11 *s r6
	r11 = SLICE(r11 *u r6, word32, 32)
	r7 = r2
	r5 = r11
	branch r10 <u r11 l0040EF8C
	// succ:  l0040EF84 l0040EF8C
l0040EF84:
	branch r10 != r11 l0040EF9C
	// succ:  l0040EF88 l0040EF9C
l0040EF88:
	branch r4 >=u r2 l0040EF9C
	// succ:  l0040EF8C l0040EF9C
l0040EF8C:
	r7 = r2 - r6
	r11 = r11 - r8
	r2 = CONVERT(r2 <u r7, bool, word32)
	r5 = r11 - r2
	// succ:  l0040EF9C
l0040EF9C:
	r7 = r4 - r7
	r10 = r10 - r5
	r4 = CONVERT(r4 <u r7, bool, word32)
	r10 = r10 - r4
	r4 = r7 >>u r12
	r8 = r10 << r9
	r5 = r10 >>u r12
	r4 = r8 | r4
	goto 0x0040EDDC<p32>
	goto l0040EDDC
	// succ:  l0040EDDC
__umoddi3_exit:


// __adddf3
// Return size: 0
define __adddf3
__adddf3_entry:
	sp = fp
	r25 = 0x40EFC0<32>
	// succ:  l0040EFC0
l0040EFC0:
	r10 = __ext(r5, 0<32>, 0x14<32>)
	r9 = __ext(r7, 0<32>, 0x14<32>)
	r10 = r10 << 3<32>
	r8 = r4 >>u 0x1D<32>
	r13 = __ext(r5, 4<32>, 0xB<32>)
	r8 = r8 | r10
	r3 = r7 >>u 0x1F<32>
	r10 = __ext(r7, 4<32>, 0xB<32>)
	r5 = r5 >>u 0x1F<32>
	r7 = r9 << 3<32>
	r9 = r6 >>u 0x1D<32>
	r12 = r4 << 3<32>
	r9 = r9 | r7
	r6 = r6 << 3<32>
	r11 = r13 - r10
	r2 = 0x7FF<32>
	branch r5 != r3 l0040F2C4
	// succ:  l0040F002 l0040F2C4
l0040F002:
	r3 = r11
	branch 0<32> >= r11 l0040F152
	// succ:  l0040F008 l0040F152
l0040F008:
	branch 0<32> != r10 l0040F0CE
	// succ:  l0040F00C l0040F0CE
l0040F00C:
	r7 = r9 | r6
	branch r7 != 0<32> l0040F074
	// succ:  l0040F012 l0040F074
l0040F012:
	r10 = r11
	branch r11 != r2 l0040F23A
	// succ:  l0040F018 l0040F23A
l0040F018:
	r7 = r8 | r12
	branch 0<32> != r7 l0040F23A
	// succ:  l0040F020 l0040F23A
l0040F020:
	r8 = 0<32>
	r12 = 0<32>
	// succ:  l0040F024
l0040F024:
	branch __bit(r8, 0x17<32>) l0040F03A
	// succ:  l0040F028 l0040F03A
l0040F028:
	r10 = r10 + 1<32>
	r7 = 0x7FF<32>
	r8 = __ins(r8, 0<32>, 7<32>, 1<32>)
	branch r10 != r7 l0040F03A
	// succ:  l0040F036 l0040F03A
l0040F036:
	r8 = 0<32>
	r12 = 0<32>
	// succ:  l0040F03A
l0040F03A:
	r6 = r8 << 0x1D<32>
	r7 = r12 >>u 3<32>
	r7 = r7 | r6
	r6 = 0x7FF<32>
	r8 = r8 >>u 3<32>
	branch r10 != r6 l0040F060
	// succ:  l0040F050 l0040F060
l0040F050:
	r6 = r7 | r8
	branch 0<32> == r6 l0040F5D2
	// succ:  l0040F058 l0040F5D2
l0040F058:
	r6 = 0x800000<32>
	r8 = r8 | r6
	// succ:  l0040F060
l0040F060:
	r6 = 0<32>
	r6 = __ins(r6, r8, 0<32>, 1<32>)
	r6 = __ins(r6, r10, 4<32>, 1<32>)
	r6 = __ins(r6, r5, 0xF<32>, 1<32>)
	r8 = r6
	r9 = r7
	r4 = r9
	r5 = r8
	return
	// succ:  __adddf3_exit
l0040F074:
	r7 = r11 + 0xFFFFFFFF<32>
	branch r7 != 0<32> l0040F0BA
	// succ:  l0040F07A l0040F0BA
l0040F07A:
	r6 = r12 + r6
	r8 = r8 + r9
	r7 = CONVERT(r6 <u r12, bool, word32)
	r10 = 1<32>
	r8 = r8 + r7
	r12 = r6
	// succ:  l0040F08C
l0040F08C:
	branch __bit(r8, 0x17<32>) l0040F23A
	// succ:  l0040F090 l0040F23A
l0040F090:
	r10 = r10 + 1<32>
	r7 = 0x7FF<32>
	branch r10 == r7 l0040F020
	// succ:  l0040F09A l0040F020
l0040F09A:
	r6 = r8
	r2 = r12 >>u 1<32>
	r6 = __ins(r6, 0<32>, 7<32>, 1<32>)
	r12 = r12 & 1<32>
	r8 = r6 << 0x1F<32>
	r12 = r2 | r12
	r12 = r8 | r12
	r8 = r6 >>u 1<32>
	goto 0x0040F23A<p32>
	goto l0040F23A
	// succ:  l0040F23A
l0040F0BA:
	branch r11 != r2 l0040F0EC
	// succ:  l0040F0BE l0040F0EC
l0040F0BE:
	r7 = r8 | r12
	branch 0<32> != r7 l0040F292
	// succ:  l0040F0C6 l0040F292
l0040F0C6:
	r8 = 0<32>
	r12 = 0<32>
	r10 = r11
	goto 0x0040F024<p32>
	goto l0040F024
	// succ:  l0040F024
l0040F0CE:
	branch r13 != r2 l0040F0E2
	// succ:  l0040F0D2 l0040F0E2
l0040F0D2:
	r7 = r8 | r12
	branch 0<32> != r7 l0040F292
	// succ:  l0040F0DA l0040F292
l0040F0DA:
	r8 = 0<32>
	r12 = 0<32>
	r10 = r13
	goto 0x0040F024<p32>
	goto l0040F024
	// succ:  l0040F024
l0040F0E2:
	r7 = 0x8000000<32>
	r9 = r9 | r7
	r7 = r11
	// succ:  l0040F0EC
l0040F0EC:
	branch r7 >= 0x39<32> l0040F148
	// succ:  l0040F0F0 l0040F148
l0040F0F0:
	branch r7 >= 0x20<32> l0040F128
	// succ:  l0040F0F4 l0040F128
l0040F0F4:
	r10 = 0x20<32>
	r11 = r6 >>u r7
	r10 = r10 - r7
	r7 = r9 >>u r7
	r4 = r9 << r10
	r6 = r6 << r10
	r4 = r4 | r11
	r6 = CONVERT(0<32> <u r6, bool, word32)
	r6 = r6 | r4
	// succ:  l0040F116
l0040F116:
	r6 = r6 + r12
	r7 = r7 + r8
	r8 = CONVERT(r6 <u r12, bool, word32)
	r10 = r13
	r8 = r8 + r7
	r12 = r6
	goto 0x0040F08C<p32>
	goto l0040F08C
	// succ:  l0040F08C
l0040F128:
	r4 = r9 >>u r7
	r10 = 0<32>
	branch r7 == 0x20<32> l0040F13A
	// succ:  l0040F132 l0040F13A
l0040F132:
	r7 = -r7
	r10 = r9 << r7
	// succ:  l0040F13A
l0040F13A:
	r6 = r10 | r6
	r6 = CONVERT(0<32> <u r6, bool, word32)
	r6 = r6 | r4
	// succ:  l0040F144
l0040F144:
	r7 = 0<32>
	goto 0x0040F116<p32>
	goto l0040F116
	// succ:  l0040F116
l0040F148:
	r6 = r9 | r6
	r6 = CONVERT(0<32> <u r6, bool, word32)
	goto 0x0040F144<p32>
	goto l0040F144
	// succ:  l0040F144
l0040F152:
	branch 0<32> == r11 l0040F200
	// succ:  l0040F156 l0040F200
l0040F156:
	branch 0<32> != r13 l0040F1C2
	// succ:  l0040F15A l0040F1C2
l0040F15A:
	r7 = r8 | r12
	branch r7 != 0<32> l0040F174
	// succ:  l0040F160 l0040F174
l0040F160:
	branch r10 != r2 l0040F16E
	// succ:  l0040F164 l0040F16E
l0040F164:
	r12 = r9 | r6
	r8 = 0<32>
	branch 0<32> == r12 l0040F024
	// succ:  l0040F16E l0040F024
l0040F16E:
	r8 = r9
	r12 = r6
	goto 0x0040F23A<p32>
	goto l0040F23A
	// succ:  l0040F23A
l0040F174:
	r11 = ~r11
	branch 0<32> != r11 l0040F18A
	// succ:  l0040F17C l0040F18A
l0040F17C:
	r12 = r12 + r6
	r8 = r8 + r9
	// succ:  l0040F182
l0040F182:
	r6 = CONVERT(r12 <u r6, bool, word32)
	r8 = r8 + r6
	goto 0x0040F08C<p32>
	goto l0040F08C
	// succ:  l0040F08C
l0040F18A:
	branch r10 == r2 l0040F164
	// succ:  l0040F18E l0040F164
l0040F18E:
	branch r11 >= 0x39<32> l0040F1F6
	// succ:  l0040F192 l0040F1F6
l0040F192:
	branch r11 >= 0x20<32> l0040F1D4
	// succ:  l0040F196 l0040F1D4
l0040F196:
	r7 = 0x20<32>
	r2 = r12 >>u r11
	r7 = r7 - r11
	r11 = r8 >>u r11
	r4 = r8 << r7
	r12 = r12 << r7
	r4 = r4 | r2
	r12 = CONVERT(0<32> <u r12, bool, word32)
	r12 = r4 | r12
	// succ:  l0040F1B8
l0040F1B8:
	r12 = r12 + r6
	r8 = r11 + r9
	goto 0x0040F182<p32>
	goto l0040F182
	// succ:  l0040F182
l0040F1C2:
	branch r10 == r2 l0040F164
	// succ:  l0040F1C6 l0040F164
l0040F1C6:
	r7 = 0x8000000<32>
	r11 = -r11
	r8 = r8 | r7
	goto 0x0040F18E<p32>
	goto l0040F18E
	// succ:  l0040F18E
l0040F1D4:
	r4 = r8 >>u r11
	r7 = 0<32>
	branch r11 == 0x20<32> l0040F1E6
	// succ:  l0040F1DE l0040F1E6
l0040F1DE:
	r11 = -r11
	r7 = r8 << r11
	// succ:  l0040F1E6
l0040F1E6:
	r12 = r7 | r12
	r12 = CONVERT(0<32> <u r12, bool, word32)
	r12 = r4 | r12
	// succ:  l0040F1F2
l0040F1F2:
	r11 = 0<32>
	goto 0x0040F1B8<p32>
	goto l0040F1B8
	// succ:  l0040F1B8
l0040F1F6:
	r12 = r8 | r12
	r12 = CONVERT(0<32> <u r12, bool, word32)
	goto 0x0040F1F2<p32>
	goto l0040F1F2
	// succ:  l0040F1F2
l0040F200:
	r10 = r13 + 1<32>
	r7 = r10 & 0x7FF<32>
	branch r7 >= 2<32> l0040F2A2
	// succ:  l0040F20C l0040F2A2
l0040F20C:
	r7 = r8 | r12
	branch 0<32> != r13 l0040F258
	// succ:  l0040F214 l0040F258
l0040F214:
	branch 0<32> == r7 l0040F5AC
	// succ:  l0040F218 l0040F5AC
l0040F218:
	r7 = r9 | r6
	r10 = 0<32>
	branch r7 == 0<32> l0040F23A
	// succ:  l0040F220 l0040F23A
l0040F220:
	r6 = r12 + r6
	r8 = r8 + r9
	r7 = CONVERT(r6 <u r12, bool, word32)
	r12 = r6
	r8 = r8 + r7
	branch __bit(r8, 0x17<32>) l0040F23A
	// succ:  l0040F232 l0040F23A
l0040F232:
	r8 = __ins(r8, 0<32>, 7<32>, 1<32>)
	r10 = 1<32>
	// succ:  l0040F23A
l0040F23A:
	r7 = r12 & 7<32>
	branch 0<32> == r7 l0040F024
	// succ:  l0040F242 l0040F024
l0040F242:
	r7 = r12 & 0xF<32>
	branch r7 == 4<32> l0040F024
	// succ:  l0040F24A l0040F024
l0040F24A:
	r6 = r12 + 4<32>
	r7 = CONVERT(r6 <u r12, bool, word32)
	r12 = r6
	r8 = r8 + r7
	goto 0x0040F024<p32>
	goto l0040F024
	// succ:  l0040F024
l0040F258:
	branch 0<32> == r7 l0040F5B2
	// succ:  l0040F25C l0040F5B2
l0040F25C:
	r6 = r9 | r6
	r10 = r2
	branch r6 == 0<32> l0040F23A
	// succ:  l0040F264 l0040F23A
l0040F264:
	r10 = r8 >>u 3<32>
	r9 = r9 >>u 3<32>
	r9 = r9 | r10
	branch !__bit(r9, 0x13<32>) l0040F298
	// succ:  l0040F274 l0040F298
l0040F274:
	r4 = __ext(r4, 0<32>, 0x1D<32>)
	r7 = r8 << 0x1D<32>
	r7 = r7 | r4
	r3 = r5
	// succ:  l0040F280
l0040F280:
	r10 = r10 << 3<32>
	r8 = r7 >>u 0x1D<32>
	r8 = r8 | r10
	r12 = r7 << 3<32>
	// succ:  l0040F290
l0040F290:
	r5 = r3
	// succ:  l0040F292
l0040F292:
	r10 = 0x7FF<32>
	goto 0x0040F23A<p32>
	goto l0040F23A
	// succ:  l0040F23A
l0040F298:
	r10 = 0xFFFFF<32>
	r7 = 0xFFFFFFFF<32>
	goto 0x0040F280<p32>
	goto l0040F280
	// succ:  l0040F280
l0040F2A2:
	branch r10 == r2 l0040F020
	// succ:  l0040F2A6 l0040F020
l0040F2A6:
	r6 = r12 + r6
	r8 = r8 + r9
	r7 = CONVERT(r6 <u r12, bool, word32)
	r6 = r6 >>u 1<32>
	r2 = r8 + r7
	r8 = r2 << 0x1F<32>
	r12 = r8 | r6
	r8 = r2 >>u 1<32>
	goto 0x0040F23A<p32>
	goto l0040F23A
	// succ:  l0040F23A
l0040F2C4:
	r14 = r11
	branch 0<32> >= r11 l0040F37E
	// succ:  l0040F2CA l0040F37E
l0040F2CA:
	branch 0<32> != r10 l0040F344
	// succ:  l0040F2CE l0040F344
l0040F2CE:
	r7 = r9 | r6
	branch 0<32> == r7 l0040F012
	// succ:  l0040F2D6 l0040F012
l0040F2D6:
	r7 = r11 + 0xFFFFFFFF<32>
	branch r7 != 0<32> l0040F300
	// succ:  l0040F2DC l0040F300
l0040F2DC:
	r6 = r12 - r6
	r8 = r8 - r9
	r7 = CONVERT(r12 <u r6, bool, word32)
	r10 = 1<32>
	r8 = r8 - r7
	r12 = r6
	// succ:  l0040F2F2
l0040F2F2:
	branch __bit(r8, 0x17<32>) l0040F23A
	// succ:  l0040F2F6 l0040F23A
l0040F2F6:
	r4 = __ext(r8, 0<32>, 0x17<32>)
	r11 = r12
	r13 = r10
	goto 0x0040F508<p32>
	goto l0040F508
	// succ:  l0040F508
l0040F300:
	branch r11 == r2 l0040F0BE
	// succ:  l0040F304 l0040F0BE
l0040F304:
	branch r7 >= 0x39<32> l0040F374
	// succ:  l0040F308 l0040F374
l0040F308:
	branch r7 >= 0x20<32> l0040F354
	// succ:  l0040F30C l0040F354
l0040F30C:
	r10 = 0x20<32>
	r11 = r6 >>u r7
	r10 = r10 - r7
	r7 = r9 >>u r7
	r4 = r9 << r10
	r6 = r6 << r10
	r4 = r4 | r11
	r6 = CONVERT(0<32> <u r6, bool, word32)
	r6 = r6 | r4
	// succ:  l0040F32E
l0040F32E:
	r6 = r12 - r6
	r7 = r8 - r7
	r8 = CONVERT(r12 <u r6, bool, word32)
	r10 = r13
	r8 = r7 - r8
	r12 = r6
	goto 0x0040F2F2<p32>
	goto l0040F2F2
	// succ:  l0040F2F2
l0040F344:
	branch r13 == r2 l0040F0D2
	// succ:  l0040F348 l0040F0D2
l0040F348:
	r7 = 0x8000000<32>
	r9 = r9 | r7
	r7 = r11
	goto 0x0040F304<p32>
	goto l0040F304
	// succ:  l0040F304
l0040F354:
	r4 = r9 >>u r7
	r10 = 0<32>
	branch r7 == 0x20<32> l0040F366
	// succ:  l0040F35E l0040F366
l0040F35E:
	r7 = -r7
	r10 = r9 << r7
	// succ:  l0040F366
l0040F366:
	r6 = r10 | r6
	r6 = CONVERT(0<32> <u r6, bool, word32)
	r6 = r6 | r4
	// succ:  l0040F370
l0040F370:
	r7 = 0<32>
	goto 0x0040F32E<p32>
	goto l0040F32E
	// succ:  l0040F32E
l0040F374:
	r6 = r9 | r6
	r6 = CONVERT(0<32> <u r6, bool, word32)
	goto 0x0040F370<p32>
	goto l0040F370
	// succ:  l0040F370
l0040F37E:
	branch 0<32> == r11 l0040F42E
	// succ:  l0040F382 l0040F42E
l0040F382:
	branch 0<32> != r13 l0040F3F0
	// succ:  l0040F386 l0040F3F0
l0040F386:
	r7 = r8 | r12
	branch r7 != 0<32> l0040F39E
	// succ:  l0040F38C l0040F39E
l0040F38C:
	branch r10 != r2 l0040F398
	// succ:  l0040F390 l0040F398
l0040F390:
	r12 = r9 | r6
	branch 0<32> == r12 l0040F5B8
	// succ:  l0040F398 l0040F5B8
l0040F398:
	r8 = r9
	r12 = r6
	goto 0x0040F482<p32>
	goto l0040F482
	// succ:  l0040F482
l0040F39E:
	r11 = ~r11
	branch 0<32> != r11 l0040F3BA
	// succ:  l0040F3A6 l0040F3BA
l0040F3A6:
	r12 = r6 - r12
	r8 = r9 - r8
	// succ:  l0040F3AE
l0040F3AE:
	r6 = CONVERT(r6 <u r12, bool, word32)
	r5 = r3
	r8 = r8 - r6
	goto 0x0040F2F2<p32>
	goto l0040F2F2
	// succ:  l0040F2F2
l0040F3BA:
	branch r10 == r2 l0040F390
	// succ:  l0040F3BE l0040F390
l0040F3BE:
	branch r11 >= 0x39<32> l0040F424
	// succ:  l0040F3C2 l0040F424
l0040F3C2:
	branch r11 >= 0x20<32> l0040F402
	// succ:  l0040F3C6 l0040F402
l0040F3C6:
	r7 = 0x20<32>
	r4 = r12 >>u r11
	r7 = r7 - r11
	r11 = r8 >>u r11
	r5 = r8 << r7
	r12 = r12 << r7
	r5 = r5 | r4
	r12 = CONVERT(0<32> <u r12, bool, word32)
	r12 = r5 | r12
	// succ:  l0040F3E6
l0040F3E6:
	r12 = r6 - r12
	r8 = r9 - r11
	goto 0x0040F3AE<p32>
	goto l0040F3AE
	// succ:  l0040F3AE
l0040F3F0:
	branch r10 == r2 l0040F390
	// succ:  l0040F3F4 l0040F390
l0040F3F4:
	r7 = 0x8000000<32>
	r11 = -r11
	r8 = r8 | r7
	goto 0x0040F3BE<p32>
	goto l0040F3BE
	// succ:  l0040F3BE
l0040F402:
	r5 = r8 >>u r11
	r7 = 0<32>
	branch r11 == 0x20<32> l0040F414
	// succ:  l0040F40C l0040F414
l0040F40C:
	r11 = -r11
	r7 = r8 << r11
	// succ:  l0040F414
l0040F414:
	r12 = r7 | r12
	r12 = CONVERT(0<32> <u r12, bool, word32)
	r12 = r5 | r12
	// succ:  l0040F420
l0040F420:
	r11 = 0<32>
	goto 0x0040F3E6<p32>
	goto l0040F3E6
	// succ:  l0040F3E6
l0040F424:
	r12 = r8 | r12
	r12 = CONVERT(0<32> <u r12, bool, word32)
	goto 0x0040F420<p32>
	goto l0040F420
	// succ:  l0040F420
l0040F42E:
	r7 = r13 + 1<32>
	r7 = r7 & 0x7FF<32>
	branch r7 >= 2<32> l0040F4E4
	// succ:  l0040F43A l0040F4E4
l0040F43A:
	r10 = r8 | r12
	r7 = r9 | r6
	branch 0<32> != r13 l0040F496
	// succ:  l0040F446 l0040F496
l0040F446:
	branch 0<32> != r10 l0040F45A
	// succ:  l0040F44A l0040F45A
l0040F44A:
	branch 0<32> != r7 l0040F398
	// succ:  l0040F44E l0040F398
l0040F44E:
	r8 = 0<32>
	r12 = 0<32>
	// succ:  l0040F452
l0040F452:
	r10 = 0<32>
	r5 = 0<32>
	goto 0x0040F024<p32>
	goto l0040F024
	// succ:  l0040F024
l0040F45A:
	branch r7 == 0<32> l0040F492
	// succ:  l0040F45C l0040F492
l0040F45C:
	r4 = r12 - r6
	r7 = r8 - r9
	r10 = CONVERT(r12 <u r4, bool, word32)
	r7 = r7 - r10
	branch __bit(r7, 0x17<32>) l0040F486
	// succ:  l0040F470 l0040F486
l0040F470:
	r12 = r6 - r12
	r8 = r9 - r8
	r6 = CONVERT(r6 <u r12, bool, word32)
	r10 = 0<32>
	r8 = r8 - r6
	// succ:  l0040F482
l0040F482:
	r5 = r3
	goto 0x0040F23A<p32>
	goto l0040F23A
	// succ:  l0040F23A
l0040F486:
	r12 = r4 | r7
	branch 0<32> == r12 l0040F56C
	// succ:  l0040F48E l0040F56C
l0040F48E:
	r8 = r7
	r12 = r4
	// succ:  l0040F492
l0040F492:
	r10 = 0<32>
	goto 0x0040F23A<p32>
	goto l0040F23A
	// succ:  l0040F23A
l0040F496:
	branch 0<32> != r10 l0040F4A4
	// succ:  l0040F49A l0040F4A4
l0040F49A:
	branch 0<32> == r7 l0040F5C0
	// succ:  l0040F49E l0040F5C0
l0040F49E:
	r8 = r9
	r12 = r6
	goto 0x0040F290<p32>
	goto l0040F290
	// succ:  l0040F290
l0040F4A4:
	r10 = r2
	branch 0<32> == r7 l0040F23A
	// succ:  l0040F4AA l0040F23A
l0040F4AA:
	r7 = r8 >>u 3<32>
	r9 = r9 >>u 3<32>
	r9 = r9 | r7
	branch !__bit(r9, 0x13<32>) l0040F4DA
	// succ:  l0040F4BA l0040F4DA
l0040F4BA:
	r4 = __ext(r4, 0<32>, 0x1D<32>)
	r12 = r8 << 0x1D<32>
	r4 = r12 | r4
	r14 = r5
	// succ:  l0040F4C8
l0040F4C8:
	r7 = r7 << 3<32>
	r8 = r4 >>u 0x1D<32>
	r8 = r8 | r7
	r12 = r4 << 3<32>
	r5 = r14
	goto 0x0040F292<p32>
	goto l0040F292
	// succ:  l0040F292
l0040F4DA:
	r7 = 0xFFFFF<32>
	r4 = 0xFFFFFFFF<32>
	goto 0x0040F4C8<p32>
	goto l0040F4C8
	// succ:  l0040F4C8
l0040F4E4:
	r11 = r12 - r6
	r4 = r8 - r9
	r7 = CONVERT(r12 <u r11, bool, word32)
	r4 = r4 - r7
	branch __bit(r4, 0x17<32>) l0040F564
	// succ:  l0040F4F6 l0040F564
l0040F4F6:
	r11 = r6 - r12
	r8 = r9 - r8
	r6 = CONVERT(r6 <u r11, bool, word32)
	r5 = r3
	r4 = r8 - r6
	// succ:  l0040F508
l0040F508:
	r7 = __clz(r4)
	branch r4 != 0<32> l0040F516
	// succ:  l0040F50E l0040F516
l0040F50E:
	r7 = __clz(r11)
	r7 = r7 + 0x20<32>
	// succ:  l0040F516
l0040F516:
	r10 = r7 + 0xFFFFFFF8<32>
	branch r10 >= 0x20<32> l0040F570
	// succ:  l0040F51E l0040F570
l0040F51E:
	r8 = -r10
	r4 = r4 << r10
	r8 = r11 >>u r8
	r12 = r11 << r10
	r8 = r8 | r4
	// succ:  l0040F532
l0040F532:
	branch r10 < r13 l0040F5A2
	// succ:  l0040F536 l0040F5A2
l0040F536:
	r10 = r10 - r13
	r6 = r10 + 1<32>
	branch r6 >= 0x20<32> l0040F57C
	// succ:  l0040F542 l0040F57C
l0040F542:
	r7 = 0x20<32>
	r9 = r12 >>u r6
	r7 = r7 - r6
	r4 = r8 << r7
	r7 = r12 << r7
	r4 = r4 | r9
	r7 = CONVERT(0<32> <u r7, bool, word32)
	r12 = r4 | r7
	r8 = r8 >>u r6
	goto 0x0040F492<p32>
	goto l0040F492
	// succ:  l0040F492
l0040F564:
	r12 = r11 | r4
	branch 0<32> != r12 l0040F508
	// succ:  l0040F56C l0040F508
l0040F56C:
	r8 = 0<32>
	goto 0x0040F452<p32>
	goto l0040F452
	// succ:  l0040F452
l0040F570:
	r8 = r7 + 0xFFFFFFD8<32>
	r12 = 0<32>
	r8 = r11 << r8
	goto 0x0040F532<p32>
	goto l0040F532
	// succ:  l0040F532
l0040F57C:
	r10 = r10 + 0xFFFFFFE1<32>
	r7 = 0<32>
	r10 = r8 >>u r10
	branch r6 == 0x20<32> l0040F592
	// succ:  l0040F58A l0040F592
l0040F58A:
	r6 = -r6
	r7 = r8 << r6
	// succ:  l0040F592
l0040F592:
	r8 = r12 | r7
	r8 = CONVERT(0<32> <u r8, bool, word32)
	r12 = r10 | r8
	r8 = 0<32>
	goto 0x0040F492<p32>
	goto l0040F492
	// succ:  l0040F492
l0040F5A2:
	r10 = r13 - r10
	r8 = __ins(r8, 0<32>, 7<32>, 1<32>)
	goto 0x0040F23A<p32>
	goto l0040F23A
	// succ:  l0040F23A
l0040F5AC:
	r8 = r9
	r12 = r6
	goto 0x0040F492<p32>
	goto l0040F492
	// succ:  l0040F492
l0040F5B2:
	r8 = r9
	r12 = r6
	goto 0x0040F292<p32>
	goto l0040F292
	// succ:  l0040F292
l0040F5B8:
	r8 = 0<32>
	r5 = r3
	goto 0x0040F024<p32>
	goto l0040F024
	// succ:  l0040F024
l0040F5C0:
	r5 = 0<32>
	r8 = 0x7FFFFF<32>
	r12 = 0xFFFFFFF8<32>
	r10 = r2
	goto 0x0040F024<p32>
	goto l0040F024
	// succ:  l0040F024
l0040F5D2:
	r8 = 0<32>
	goto 0x0040F060<p32>
	goto l0040F060
	// succ:  l0040F060
__adddf3_exit:


// __divdf3
// Return size: 0
define __divdf3
__divdf3_entry:
	sp = fp
	r25 = 0x40F5E0<32>
	// succ:  l0040F5E0
l0040F5E0:
	r11 = __ext(r5, 4<32>, 0xB<32>)
	r10 = __ext(r5, 0<32>, 0x14<32>)
	r9 = r4
	r5 = r5 >>u 0x1F<32>
	branch 0<32> == r11 l0040F66A
	// succ:  l0040F5F2 l0040F66A
l0040F5F2:
	r8 = 0x7FF<32>
	branch r11 == r8 l0040F6BC
	// succ:  l0040F5FA l0040F6BC
l0040F5FA:
	r9 = 0x8000000<32>
	r8 = r4 >>u 0x1D<32>
	r8 = r8 | r9
	r10 = r10 << 3<32>
	r8 = r8 | r10
	r9 = r4 << 3<32>
	r2 = r11 + 0xFFFFFC01<32>
	// succ:  l0040F616
l0040F616:
	r12 = 0<32>
	// succ:  l0040F618
l0040F618:
	r11 = __ext(r7, 4<32>, 0xB<32>)
	r4 = __ext(r7, 0<32>, 0x14<32>)
	r13 = r7 >>u 0x1F<32>
	branch 0<32> == r11 l0040F6E2
	// succ:  l0040F628 l0040F6E2
l0040F628:
	r7 = 0x7FF<32>
	branch r11 == r7 l0040F730
	// succ:  l0040F630 l0040F730
l0040F630:
	r10 = r6 >>u 0x1D<32>
	r7 = 0x8000000<32>
	r10 = r10 | r7
	r4 = r4 << 3<32>
	r7 = r6 << 3<32>
	r4 = r10 | r4
	r6 = r11 + 0xFFFFFC01<32>
	// succ:  l0040F648
l0040F648:
	r3 = 0<32>
	// succ:  l0040F64A
l0040F64A:
	r11 = r2 - r6
	r6 = r12 << 2<32>
	r6 = r6 | r3
	r10 = r5 ^ r13
	r6 = r6 + 0xFFFFFFFF<32>
	branch r6 >=u 0xF<32> l0040F754
	// succ:  l0040F660 l0040F754
l0040F660:
	r2 = 0x004115D0<p32>
	r6 = Mem0[r2 + r6 * 4<32>:word32]
	call r6 (retsize: 0;)
	return
	// succ:  __divdf3_exit
l0040F66A:
	r8 = r10 | r4
	branch 0<32> == r8 l0040F6CE
	// succ:  l0040F672 l0040F6CE
l0040F672:
	r11 = __clz(r10)
	branch 0<32> != r10 l0040F682
	// succ:  l0040F67A l0040F682
l0040F67A:
	r11 = __clz(r4)
	r11 = r11 + 0x20<32>
	// succ:  l0040F682
l0040F682:
	r2 = r11 + 0xFFFFFFF5<32>
	branch r2 >= 0x1D<32> l0040F6B0
	// succ:  l0040F68A l0040F6B0
l0040F68A:
	r8 = 0x1D<32>
	r9 = r11 + 0xFFFFFFF8<32>
	r8 = r8 - r2
	r10 = r10 << r9
	r8 = r4 >>u r8
	r9 = r4 << r9
	r8 = r8 | r10
	// succ:  l0040F6A6
l0040F6A6:
	r2 = 0xFFFFFC0D<32>
	r2 = r2 - r11
	goto 0x0040F616<p32>
	goto l0040F616
	// succ:  l0040F616
l0040F6B0:
	r8 = r11 + 0xFFFFFFD8<32>
	r9 = 0<32>
	r8 = r4 << r8
	goto 0x0040F6A6<p32>
	goto l0040F6A6
	// succ:  l0040F6A6
l0040F6BC:
	r8 = r10 | r4
	branch 0<32> == r8 l0040F6D8
	// succ:  l0040F6C4 l0040F6D8
l0040F6C4:
	r8 = r10
	r2 = r11
	r12 = 3<32>
	goto 0x0040F618<p32>
	goto l0040F618
	// succ:  l0040F618
l0040F6CE:
	r9 = 0<32>
	r2 = 0<32>
	r12 = 1<32>
	goto 0x0040F618<p32>
	goto l0040F618
	// succ:  l0040F618
l0040F6D8:
	r9 = 0<32>
	r2 = r11
	r12 = 2<32>
	goto 0x0040F618<p32>
	goto l0040F618
	// succ:  l0040F618
l0040F6E2:
	r7 = r4 | r6
	branch r7 == 0<32> l0040F740
	// succ:  l0040F6E8 l0040F740
l0040F6E8:
	r11 = __clz(r4)
	branch r4 != 0<32> l0040F6F6
	// succ:  l0040F6EE l0040F6F6
l0040F6EE:
	r11 = __clz(r6)
	r11 = r11 + 0x20<32>
	// succ:  l0040F6F6
l0040F6F6:
	r3 = r11 + 0xFFFFFFF5<32>
	branch r3 >= 0x1D<32> l0040F724
	// succ:  l0040F6FE l0040F724
l0040F6FE:
	r10 = 0x1D<32>
	r7 = r11 + 0xFFFFFFF8<32>
	r10 = r10 - r3
	r4 = r4 << r7
	r10 = r6 >>u r10
	r7 = r6 << r7
	r4 = r10 | r4
	// succ:  l0040F71A
l0040F71A:
	r6 = 0xFFFFFC0D<32>
	r6 = r6 - r11
	goto 0x0040F648<p32>
	goto l0040F648
	// succ:  l0040F648
l0040F724:
	r4 = r11 + 0xFFFFFFD8<32>
	r7 = 0<32>
	r4 = r6 << r4
	goto 0x0040F71A<p32>
	goto l0040F71A
	// succ:  l0040F71A
l0040F730:
	r7 = r4 | r6
	branch r7 == 0<32> l0040F74A
	// succ:  l0040F736 l0040F74A
l0040F736:
	r7 = r6
	r3 = 3<32>
	r6 = r11
	goto 0x0040F64A<p32>
	goto l0040F64A
	// succ:  l0040F64A
l0040F740:
	r4 = 0<32>
	r6 = 0<32>
	r3 = 1<32>
	goto 0x0040F64A<p32>
	goto l0040F64A
	// succ:  l0040F64A
l0040F74A:
	r4 = 0<32>
	r6 = r11
	r3 = 2<32>
	goto 0x0040F64A<p32>
	goto l0040F64A
	// succ:  l0040F64A
l0040F754:
	branch r4 <u r8 l0040F760
	// succ:  l0040F758 l0040F760
l0040F758:
	branch r8 != r4 l0040F976
	// succ:  l0040F75C l0040F976
l0040F75C:
	branch r9 <u r7 l0040F976
	// succ:  l0040F760 l0040F976
l0040F760:
	r5 = r8 << 0x1F<32>
	r6 = r9 >>u 1<32>
	r2 = r9 << 0x1F<32>
	r8 = r8 >>u 1<32>
	r9 = r5 | r6
	// succ:  l0040F774
l0040F774:
	r6 = r7 >>u 0x18<32>
	r4 = r4 << 8<32>
	r4 = r4 | r6
	r7 = r7 << 8<32>
	r13 = __ext(r4, 0<32>, 0x10<32>)
	r12 = r4 >>u 0x10<32>
	lo = r14 /u r8
	hi = r14 % r8
	r6 = r13 *s r14
	r5 = r8 % r12
	r8 = r5 << 0x10<32>
	r5 = r9 >>u 0x10<32>
	r3 = r14
	r5 = r5 | r8
	branch r5 >=u r6 l0040F7B6
	// succ:  l0040F7A4 l0040F7B6
l0040F7A4:
	r5 = r5 + r4
	r3 = r3 + 0xFFFFFFFF<32>
	branch r5 <u r4 l0040F7B6
	// succ:  l0040F7AC l0040F7B6
l0040F7AC:
	branch r5 >=u r6 l0040F7B6
	// succ:  l0040F7B0 l0040F7B6
l0040F7B0:
	r3 = r14 + 0xFFFFFFFE<32>
	r5 = r5 + r4
	// succ:  l0040F7B6
l0040F7B6:
	r5 = r5 - r6
	lo = r14 /u r5
	hi = r14 % r5
	r8 = r13 *s r14
	r6 = r5 % r12
	r9 = __ext(r9, 0<32>, 0x10<32>)
	r6 = r6 << 0x10<32>
	r9 = r9 | r6
	r6 = r14
	branch r9 >=u r8 l0040F7E8
	// succ:  l0040F7D6 l0040F7E8
l0040F7D6:
	r9 = r9 + r4
	r6 = r6 + 0xFFFFFFFF<32>
	branch r9 <u r4 l0040F7E8
	// succ:  l0040F7DE l0040F7E8
l0040F7DE:
	branch r9 >=u r8 l0040F7E8
	// succ:  l0040F7E2 l0040F7E8
l0040F7E2:
	r6 = r14 + 0xFFFFFFFE<32>
	r9 = r9 + r4
	// succ:  l0040F7E8
l0040F7E8:
	r3 = r3 << 0x10<32>
	r9 = r9 - r8
	r3 = r3 | r6
	r6 = SLICE(r3 *u r7, word32, 32)
	r5 = r3 *s r7
	branch r9 <u r6 l0040F80A
	// succ:  l0040F800 l0040F80A
l0040F800:
	r8 = r3
	branch r9 != r6 l0040F84A
	// succ:  l0040F806 l0040F84A
l0040F806:
	branch r2 >=u r5 l0040F84A
	// succ:  l0040F80A l0040F84A
l0040F80A:
	r2 = r2 + r7
	r8 = r3 + 0xFFFFFFFF<32>
	r14 = CONVERT(r2 <u r7, bool, word32)
	r14 = r14 + r4
	r9 = r9 + r14
	branch r4 <u r9 l0040F82A
	// succ:  l0040F822 l0040F82A
l0040F822:
	branch r4 != r9 l0040F84A
	// succ:  l0040F826 l0040F84A
l0040F826:
	branch r2 <u r7 l0040F84A
	// succ:  l0040F82A l0040F84A
l0040F82A:
	branch r9 <u r6 l0040F836
	// succ:  l0040F82E l0040F836
l0040F82E:
	branch r6 != r9 l0040F84A
	// succ:  l0040F832 l0040F84A
l0040F832:
	branch r2 >=u r5 l0040F84A
	// succ:  l0040F836 l0040F84A
l0040F836:
	r2 = r2 + r7
	r8 = r3 + 0xFFFFFFFE<32>
	r3 = CONVERT(r2 <u r7, bool, word32)
	r3 = r3 + r4
	r9 = r9 + r3
	// succ:  l0040F84A
l0040F84A:
	r5 = r2 - r5
	r9 = r9 - r6
	r2 = CONVERT(r2 <u r5, bool, word32)
	r6 = r9 - r2
	r9 = 0xFFFFFFFF<32>
	branch r4 == r6 l0040F91A
	// succ:  l0040F862 l0040F91A
l0040F862:
	lo = r14 /u r6
	hi = r14 % r6
	r3 = r13 *s r14
	r2 = r6 % r12
	r6 = r2 << 0x10<32>
	r2 = r5 >>u 0x10<32>
	r9 = r14
	r2 = r2 | r6
	branch r2 >=u r3 l0040F896
	// succ:  l0040F880 l0040F896
l0040F880:
	r2 = r2 + r4
	r9 = r9 + 0xFFFFFFFF<32>
	branch r2 <u r4 l0040F896
	// succ:  l0040F88A l0040F896
l0040F88A:
	branch r2 >=u r3 l0040F896
	// succ:  l0040F88E l0040F896
l0040F88E:
	r9 = r14 + 0xFFFFFFFE<32>
	r2 = r2 + r4
	// succ:  l0040F896
l0040F896:
	r2 = r2 - r3
	lo = r14 /u r2
	hi = r14 % r2
	r3 = r13 *s r14
	r6 = r2 % r12
	r5 = r5 & 0xFFFF<32>
	r6 = r6 << 0x10<32>
	r6 = r6 | r5
	r2 = r14
	branch r6 >=u r3 l0040F8C6
	// succ:  l0040F8B4 l0040F8C6
l0040F8B4:
	r6 = r6 + r4
	r2 = r2 + 0xFFFFFFFF<32>
	branch r6 <u r4 l0040F8C6
	// succ:  l0040F8BC l0040F8C6
l0040F8BC:
	branch r6 >=u r3 l0040F8C6
	// succ:  l0040F8C0 l0040F8C6
l0040F8C0:
	r2 = r14 + 0xFFFFFFFE<32>
	r6 = r6 + r4
	// succ:  l0040F8C6
l0040F8C6:
	r5 = r9 << 0x10<32>
	r6 = r6 - r3
	r5 = r5 | r2
	r2 = SLICE(r7 *u r5, word32, 32)
	r3 = r7 *s r5
	branch r6 <u r2 l0040F8E8
	// succ:  l0040F8DE l0040F8E8
l0040F8DE:
	r9 = r5
	branch r6 != r2 l0040F916
	// succ:  l0040F8E4 l0040F916
l0040F8E4:
	branch 0<32> == r3 l0040F91A
	// succ:  l0040F8E8 l0040F91A
l0040F8E8:
	r6 = r4 + r6
	r9 = r5 + 0xFFFFFFFF<32>
	branch r6 <u r4 l0040F90E
	// succ:  l0040F8F2 l0040F90E
l0040F8F2:
	branch r6 <u r2 l0040F8FE
	// succ:  l0040F8F6 l0040F8FE
l0040F8F6:
	branch r2 != r6 l0040F916
	// succ:  l0040F8FA l0040F916
l0040F8FA:
	branch r7 >=u r3 l0040F912
	// succ:  l0040F8FE l0040F912
l0040F8FE:
	r9 = r5 + 0xFFFFFFFE<32>
	r5 = r7 << 1<32>
	r7 = CONVERT(r5 <u r7, bool, word32)
	r4 = r7 + r4
	r7 = r5
	r6 = r6 + r4
	// succ:  l0040F90E
l0040F90E:
	branch r6 != r2 l0040F916
	// succ:  l0040F912 l0040F916
l0040F912:
	branch r3 == r7 l0040F91A
	// succ:  l0040F916 l0040F91A
l0040F916:
	r9 = r9 | 1<32>
	// succ:  l0040F91A
l0040F91A:
	r6 = r11 + 0x3FF<32>
	branch 0<32> >= r6 l0040F9C8
	// succ:  l0040F922 l0040F9C8
l0040F922:
	r7 = r9 & 7<32>
	branch r7 == 0<32> l0040F93C
	// succ:  l0040F928 l0040F93C
l0040F928:
	r7 = r9 & 0xF<32>
	branch r7 == 4<32> l0040F93C
	// succ:  l0040F930 l0040F93C
l0040F930:
	r7 = r9 + 4<32>
	r9 = CONVERT(r7 <u r9, bool, word32)
	r8 = r8 + r9
	r9 = r7
	// succ:  l0040F93C
l0040F93C:
	branch __bit(r8, 0x18<32>) l0040F948
	// succ:  l0040F940 l0040F948
l0040F940:
	r8 = __ins(r8, 0<32>, 8<32>, 1<32>)
	r6 = r11 + 0x400<32>
	// succ:  l0040F948
l0040F948:
	r7 = 0x7FE<32>
	branch r7 < r6 l0040FA5A
	// succ:  l0040F950 l0040FA5A
l0040F950:
	r7 = r8 << 0x1D<32>
	r9 = r9 >>u 3<32>
	r9 = r7 | r9
	r8 = r8 >>u 3<32>
	// succ:  l0040F960
l0040F960:
	r7 = 0<32>
	r7 = __ins(r7, r8, 0<32>, 1<32>)
	r8 = r9
	r7 = __ins(r7, r6, 4<32>, 1<32>)
	r7 = __ins(r7, r10, 0xF<32>, 1<32>)
	r6 = r7
	r4 = r8
	r5 = r6
	return
	// succ:  __divdf3_exit
l0040F976:
	r11 = r11 + 0xFFFFFFFF<32>
	r2 = 0<32>
	goto 0x0040F774<p32>
	goto l0040F774
	// succ:  l0040F774
l0040F9A4:
	r6 = 0x7FF<32>
	goto 0x0040F960<p32>
	goto l0040F960
	// succ:  l0040F960
l0040F9BE:
	r8 = 0<32>
	r9 = 0<32>
	goto 0x0040FA20<p32>
	goto l0040FA20
	// succ:  l0040FA20
l0040F9C8:
	r5 = 1<32>
	r5 = r5 - r6
	branch r5 >= 0x39<32> l0040F9BE
	// succ:  l0040F9D0 l0040F9BE
l0040F9D0:
	branch r5 >= 0x20<32> l0040FA24
	// succ:  l0040F9D4 l0040FA24
l0040F9D4:
	r6 = 0x20<32>
	r4 = r9 >>u r5
	r6 = r6 - r5
	r7 = r8 << r6
	r9 = r9 << r6
	r7 = r7 | r4
	r9 = CONVERT(0<32> <u r9, bool, word32)
	r9 = r7 | r9
	r8 = r8 >>u r5
	// succ:  l0040F9F2
l0040F9F2:
	r7 = r9 & 7<32>
	branch r7 == 0<32> l0040FA0C
	// succ:  l0040F9F8 l0040FA0C
l0040F9F8:
	r7 = r9 & 0xF<32>
	branch r7 == 4<32> l0040FA0C
	// succ:  l0040FA00 l0040FA0C
l0040FA00:
	r7 = r9 + 4<32>
	r9 = CONVERT(r7 <u r9, bool, word32)
	r8 = r8 + r9
	r9 = r7
	// succ:  l0040FA0C
l0040FA0C:
	branch !__bit(r8, 0x17<32>) l0040FA60
	// succ:  l0040FA10 l0040FA60
l0040FA10:
	r7 = r8 << 0x1D<32>
	r9 = r9 >>u 3<32>
	r9 = r7 | r9
	r8 = r8 >>u 3<32>
	// succ:  l0040FA20
l0040FA20:
	r6 = 0<32>
	goto 0x0040F960<p32>
	goto l0040F960
	// succ:  l0040F960
l0040FA24:
	r7 = 0xFFFFFFE1<32>
	r7 = r7 - r6
	r6 = 0<32>
	r7 = r8 >>u r7
	branch r5 == 0x20<32> l0040FA3C
	// succ:  l0040FA34 l0040FA3C
l0040FA34:
	r5 = -r5
	r6 = r8 << r5
	// succ:  l0040FA3C
l0040FA3C:
	r9 = r6 | r9
	r8 = 0<32>
	r9 = CONVERT(0<32> <u r9, bool, word32)
	r9 = r7 | r9
	goto 0x0040F9F2<p32>
	goto l0040F9F2
	// succ:  l0040F9F2
l0040FA5A:
	r8 = 0<32>
	r9 = 0<32>
	goto 0x0040F9A4<p32>
	goto l0040F9A4
	// succ:  l0040F9A4
l0040FA60:
	r8 = 0<32>
	r9 = 0<32>
	r6 = 1<32>
	goto 0x0040F960<p32>
	goto l0040F960
	// succ:  l0040F960
__divdf3_exit:


// __nedf2
// Return size: 0
define __nedf2
__nedf2_entry:
	sp = fp
	r25 = 0x40FA70<32>
	// succ:  l0040FA70
l0040FA70:
	r11 = r4
	r12 = r4
	r9 = __ext(r5, 4<32>, 0xB<32>)
	r4 = 0x7FF<32>
	r8 = __ext(r5, 0<32>, 0x14<32>)
	r3 = __ext(r7, 0<32>, 0x14<32>)
	r10 = __ext(r7, 4<32>, 0xB<32>)
	r5 = r5 >>u 0x1F<32>
	r13 = r6
	r7 = r7 >>u 0x1F<32>
	branch r9 != r4 l0040FAA6
	// succ:  l0040FA96 l0040FAA6
l0040FA96:
	r2 = r8 | r11
	r4 = 1<32>
	branch 0<32> != r2 l0040FAD2
	// succ:  l0040FAA0 l0040FAD2
l0040FAA0:
	branch r10 == r9 l0040FAAA
	// succ:  l0040FAA4 l0040FAAA
l0040FAA4:
	return
	// succ:  __nedf2_exit
l0040FAA6:
	branch r10 != r4 l0040FAB2
	// succ:  l0040FAAA l0040FAB2
l0040FAAA:
	r6 = r3 | r6
	r4 = 1<32>
	branch r6 != 0<32> l0040FAD2
	// succ:  l0040FAB2 l0040FAD2
l0040FAB2:
	r4 = 1<32>
	branch r9 != r10 l0040FAD2
	// succ:  l0040FAB8 l0040FAD2
l0040FAB8:
	branch r8 != r3 l0040FAD2
	// succ:  l0040FABC l0040FAD2
l0040FABC:
	branch r12 != r13 l0040FAD2
	// succ:  l0040FAC0 l0040FAD2
l0040FAC0:
	branch r5 == r7 l0040FAD0
	// succ:  l0040FAC2 l0040FAD0
l0040FAC2:
	branch 0<32> != r9 l0040FAD2
	// succ:  l0040FAC6 l0040FAD2
l0040FAC6:
	r4 = r8 | r11
	r4 = CONVERT(0<32> <u r4, bool, word32)
	return
	// succ:  __nedf2_exit
l0040FAD0:
	r4 = 0<32>
	// succ:  l0040FAD2
l0040FAD2:
	return
	// succ:  __nedf2_exit
__nedf2_exit:


// __subdf3
// Return size: 0
define __subdf3
__subdf3_entry:
	sp = fp
	r25 = 0x40FAE0<32>
	// succ:  l0040FAE0
l0040FAE0:
	r10 = __ext(r5, 0<32>, 0x14<32>)
	r9 = __ext(r7, 0<32>, 0x14<32>)
	r10 = r10 << 3<32>
	r8 = r4 >>u 0x1D<32>
	r8 = r8 | r10
	r12 = r7 >>u 0x1F<32>
	r10 = __ext(r7, 4<32>, 0xB<32>)
	r7 = r9 << 3<32>
	r9 = r6 >>u 0x1D<32>
	r13 = __ext(r5, 4<32>, 0xB<32>)
	r9 = r9 | r7
	r7 = 0x7FF<32>
	r5 = r5 >>u 0x1F<32>
	r3 = r4 << 3<32>
	r6 = r6 << 3<32>
	branch r10 != r7 l0040FB24
	// succ:  l0040FB1E l0040FB24
l0040FB1E:
	r7 = r9 | r6
	branch r7 != 0<32> l0040FB28
	// succ:  l0040FB24 l0040FB28
l0040FB24:
	r12 = r12 ^ 1<32>
	// succ:  l0040FB28
l0040FB28:
	r11 = r13 - r10
	r2 = 0x7FF<32>
	branch r12 != r5 l0040FDF2
	// succ:  l0040FB34 l0040FDF2
l0040FB34:
	branch 0<32> >= r11 l0040FC82
	// succ:  l0040FB38 l0040FC82
l0040FB38:
	branch 0<32> != r10 l0040FBFE
	// succ:  l0040FB3C l0040FBFE
l0040FB3C:
	r7 = r9 | r6
	branch r7 != 0<32> l0040FBA4
	// succ:  l0040FB42 l0040FBA4
l0040FB42:
	r10 = r11
	branch r11 != r2 l0040FD6A
	// succ:  l0040FB48 l0040FD6A
l0040FB48:
	r7 = r8 | r3
	branch 0<32> != r7 l0040FD6A
	// succ:  l0040FB50 l0040FD6A
l0040FB50:
	r8 = 0<32>
	r3 = 0<32>
	// succ:  l0040FB54
l0040FB54:
	branch __bit(r8, 0x17<32>) l0040FB6A
	// succ:  l0040FB58 l0040FB6A
l0040FB58:
	r10 = r10 + 1<32>
	r7 = 0x7FF<32>
	r8 = __ins(r8, 0<32>, 7<32>, 1<32>)
	branch r10 != r7 l0040FB6A
	// succ:  l0040FB66 l0040FB6A
l0040FB66:
	r8 = 0<32>
	r3 = 0<32>
	// succ:  l0040FB6A
l0040FB6A:
	r6 = r8 << 0x1D<32>
	r7 = r3 >>u 3<32>
	r7 = r7 | r6
	r6 = 0x7FF<32>
	r8 = r8 >>u 3<32>
	branch r10 != r6 l0040FB90
	// succ:  l0040FB80 l0040FB90
l0040FB80:
	r6 = r7 | r8
	branch 0<32> == r6 l004100FE
	// succ:  l0040FB88 l004100FE
l0040FB88:
	r6 = 0x800000<32>
	r8 = r8 | r6
	// succ:  l0040FB90
l0040FB90:
	r6 = 0<32>
	r6 = __ins(r6, r8, 0<32>, 1<32>)
	r6 = __ins(r6, r10, 4<32>, 1<32>)
	r6 = __ins(r6, r5, 0xF<32>, 1<32>)
	r8 = r6
	r9 = r7
	r4 = r9
	r5 = r8
	return
	// succ:  __subdf3_exit
l0040FBA4:
	r7 = r11 + 0xFFFFFFFF<32>
	branch r7 != 0<32> l0040FBEA
	// succ:  l0040FBAA l0040FBEA
l0040FBAA:
	r6 = r3 + r6
	r8 = r8 + r9
	r7 = CONVERT(r6 <u r3, bool, word32)
	r10 = 1<32>
	r8 = r8 + r7
	r3 = r6
	// succ:  l0040FBBC
l0040FBBC:
	branch __bit(r8, 0x17<32>) l0040FD6A
	// succ:  l0040FBC0 l0040FD6A
l0040FBC0:
	r10 = r10 + 1<32>
	r7 = 0x7FF<32>
	branch r10 == r7 l0040FB50
	// succ:  l0040FBCA l0040FB50
l0040FBCA:
	r6 = r8
	r11 = r3 >>u 1<32>
	r6 = __ins(r6, 0<32>, 7<32>, 1<32>)
	r3 = r3 & 1<32>
	r8 = r6 << 0x1F<32>
	r3 = r11 | r3
	r3 = r8 | r3
	r8 = r6 >>u 1<32>
	goto 0x0040FD6A<p32>
	goto l0040FD6A
	// succ:  l0040FD6A
l0040FBEA:
	branch r11 != r2 l0040FC1C
	// succ:  l0040FBEE l0040FC1C
l0040FBEE:
	r7 = r8 | r3
	branch 0<32> != r7 l0040FDC0
	// succ:  l0040FBF6 l0040FDC0
l0040FBF6:
	r8 = 0<32>
	r3 = 0<32>
	r10 = r11
	goto 0x0040FB54<p32>
	goto l0040FB54
	// succ:  l0040FB54
l0040FBFE:
	branch r13 != r2 l0040FC12
	// succ:  l0040FC02 l0040FC12
l0040FC02:
	r7 = r8 | r3
	branch 0<32> != r7 l0040FDC0
	// succ:  l0040FC0A l0040FDC0
l0040FC0A:
	r8 = 0<32>
	r3 = 0<32>
	r10 = r13
	goto 0x0040FB54<p32>
	goto l0040FB54
	// succ:  l0040FB54
l0040FC12:
	r7 = 0x8000000<32>
	r9 = r9 | r7
	r7 = r11
	// succ:  l0040FC1C
l0040FC1C:
	branch r7 >= 0x39<32> l0040FC78
	// succ:  l0040FC20 l0040FC78
l0040FC20:
	branch r7 >= 0x20<32> l0040FC58
	// succ:  l0040FC24 l0040FC58
l0040FC24:
	r10 = 0x20<32>
	r11 = r6 >>u r7
	r10 = r10 - r7
	r7 = r9 >>u r7
	r4 = r9 << r10
	r6 = r6 << r10
	r4 = r4 | r11
	r6 = CONVERT(0<32> <u r6, bool, word32)
	r6 = r6 | r4
	// succ:  l0040FC46
l0040FC46:
	r6 = r6 + r3
	r7 = r7 + r8
	r8 = CONVERT(r6 <u r3, bool, word32)
	r10 = r13
	r8 = r8 + r7
	r3 = r6
	goto 0x0040FBBC<p32>
	goto l0040FBBC
	// succ:  l0040FBBC
l0040FC58:
	r4 = r9 >>u r7
	r10 = 0<32>
	branch r7 == 0x20<32> l0040FC6A
	// succ:  l0040FC62 l0040FC6A
l0040FC62:
	r7 = -r7
	r10 = r9 << r7
	// succ:  l0040FC6A
l0040FC6A:
	r6 = r10 | r6
	r6 = CONVERT(0<32> <u r6, bool, word32)
	r6 = r6 | r4
	// succ:  l0040FC74
l0040FC74:
	r7 = 0<32>
	goto 0x0040FC46<p32>
	goto l0040FC46
	// succ:  l0040FC46
l0040FC78:
	r6 = r9 | r6
	r6 = CONVERT(0<32> <u r6, bool, word32)
	goto 0x0040FC74<p32>
	goto l0040FC74
	// succ:  l0040FC74
l0040FC82:
	branch 0<32> == r11 l0040FD30
	// succ:  l0040FC86 l0040FD30
l0040FC86:
	branch 0<32> != r13 l0040FCF2
	// succ:  l0040FC8A l0040FCF2
l0040FC8A:
	r7 = r8 | r3
	branch r7 != 0<32> l0040FCA4
	// succ:  l0040FC90 l0040FCA4
l0040FC90:
	branch r10 != r2 l0040FC9E
	// succ:  l0040FC94 l0040FC9E
l0040FC94:
	r3 = r9 | r6
	r8 = 0<32>
	branch 0<32> == r3 l0040FB54
	// succ:  l0040FC9E l0040FB54
l0040FC9E:
	r8 = r9
	r3 = r6
	goto 0x0040FD6A<p32>
	goto l0040FD6A
	// succ:  l0040FD6A
l0040FCA4:
	r11 = ~r11
	branch 0<32> != r11 l0040FCBA
	// succ:  l0040FCAC l0040FCBA
l0040FCAC:
	r3 = r3 + r6
	r8 = r8 + r9
	// succ:  l0040FCB2
l0040FCB2:
	r6 = CONVERT(r3 <u r6, bool, word32)
	r8 = r8 + r6
	goto 0x0040FBBC<p32>
	goto l0040FBBC
	// succ:  l0040FBBC
l0040FCBA:
	branch r10 == r2 l0040FC94
	// succ:  l0040FCBE l0040FC94
l0040FCBE:
	branch r11 >= 0x39<32> l0040FD26
	// succ:  l0040FCC2 l0040FD26
l0040FCC2:
	branch r11 >= 0x20<32> l0040FD04
	// succ:  l0040FCC6 l0040FD04
l0040FCC6:
	r7 = 0x20<32>
	r2 = r3 >>u r11
	r7 = r7 - r11
	r11 = r8 >>u r11
	r4 = r8 << r7
	r3 = r3 << r7
	r4 = r4 | r2
	r3 = CONVERT(0<32> <u r3, bool, word32)
	r3 = r4 | r3
	// succ:  l0040FCE8
l0040FCE8:
	r3 = r3 + r6
	r8 = r11 + r9
	goto 0x0040FCB2<p32>
	goto l0040FCB2
	// succ:  l0040FCB2
l0040FCF2:
	branch r10 == r2 l0040FC94
	// succ:  l0040FCF6 l0040FC94
l0040FCF6:
	r7 = 0x8000000<32>
	r11 = -r11
	r8 = r8 | r7
	goto 0x0040FCBE<p32>
	goto l0040FCBE
	// succ:  l0040FCBE
l0040FD04:
	r4 = r8 >>u r11
	r7 = 0<32>
	branch r11 == 0x20<32> l0040FD16
	// succ:  l0040FD0E l0040FD16
l0040FD0E:
	r11 = -r11
	r7 = r8 << r11
	// succ:  l0040FD16
l0040FD16:
	r3 = r7 | r3
	r3 = CONVERT(0<32> <u r3, bool, word32)
	r3 = r4 | r3
	// succ:  l0040FD22
l0040FD22:
	r11 = 0<32>
	goto 0x0040FCE8<p32>
	goto l0040FCE8
	// succ:  l0040FCE8
l0040FD26:
	r3 = r8 | r3
	r3 = CONVERT(0<32> <u r3, bool, word32)
	goto 0x0040FD22<p32>
	goto l0040FD22
	// succ:  l0040FD22
l0040FD30:
	r10 = r13 + 1<32>
	r7 = r10 & 0x7FF<32>
	branch r7 >= 2<32> l0040FDD0
	// succ:  l0040FD3C l0040FDD0
l0040FD3C:
	r7 = r8 | r3
	branch 0<32> != r13 l0040FD88
	// succ:  l0040FD44 l0040FD88
l0040FD44:
	branch 0<32> == r7 l004100D8
	// succ:  l0040FD48 l004100D8
l0040FD48:
	r7 = r9 | r6
	r10 = 0<32>
	branch r7 == 0<32> l0040FD6A
	// succ:  l0040FD50 l0040FD6A
l0040FD50:
	r6 = r3 + r6
	r8 = r8 + r9
	r7 = CONVERT(r6 <u r3, bool, word32)
	r3 = r6
	r8 = r8 + r7
	branch __bit(r8, 0x17<32>) l0040FD6A
	// succ:  l0040FD62 l0040FD6A
l0040FD62:
	r8 = __ins(r8, 0<32>, 7<32>, 1<32>)
	r10 = 1<32>
	// succ:  l0040FD6A
l0040FD6A:
	r7 = r3 & 7<32>
	branch 0<32> == r7 l0040FB54
	// succ:  l0040FD72 l0040FB54
l0040FD72:
	r7 = r3 & 0xF<32>
	branch r7 == 4<32> l0040FB54
	// succ:  l0040FD7A l0040FB54
l0040FD7A:
	r6 = r3 + 4<32>
	r7 = CONVERT(r6 <u r3, bool, word32)
	r3 = r6
	r8 = r8 + r7
	goto 0x0040FB54<p32>
	goto l0040FB54
	// succ:  l0040FB54
l0040FD88:
	branch 0<32> == r7 l004100DE
	// succ:  l0040FD8C l004100DE
l0040FD8C:
	r6 = r9 | r6
	r10 = r2
	branch r6 == 0<32> l0040FD6A
	// succ:  l0040FD94 l0040FD6A
l0040FD94:
	r5 = r8 >>u 3<32>
	r9 = r9 >>u 3<32>
	r9 = r9 | r5
	branch !__bit(r9, 0x13<32>) l0040FDC6
	// succ:  l0040FDA4 l0040FDC6
l0040FDA4:
	r4 = __ext(r4, 0<32>, 0x1D<32>)
	r7 = r8 << 0x1D<32>
	r7 = r7 | r4
	r11 = r12
	// succ:  l0040FDB0
l0040FDB0:
	r5 = r5 << 3<32>
	r8 = r7 >>u 0x1D<32>
	r8 = r8 | r5
	r3 = r7 << 3<32>
	// succ:  l0040FDBE
l0040FDBE:
	r5 = r11
	// succ:  l0040FDC0
l0040FDC0:
	r10 = 0x7FF<32>
	goto 0x0040FD6A<p32>
	goto l0040FD6A
	// succ:  l0040FD6A
l0040FDC6:
	r5 = 0xFFFFF<32>
	r7 = 0xFFFFFFFF<32>
	goto 0x0040FDB0<p32>
	goto l0040FDB0
	// succ:  l0040FDB0
l0040FDD0:
	branch r10 == r2 l0040FB50
	// succ:  l0040FDD4 l0040FB50
l0040FDD4:
	r6 = r3 + r6
	r8 = r8 + r9
	r7 = CONVERT(r6 <u r3, bool, word32)
	r6 = r6 >>u 1<32>
	r11 = r8 + r7
	r8 = r11 << 0x1F<32>
	r3 = r8 | r6
	r8 = r11 >>u 1<32>
	goto 0x0040FD6A<p32>
	goto l0040FD6A
	// succ:  l0040FD6A
l0040FDF2:
	branch 0<32> >= r11 l0040FEAA
	// succ:  l0040FDF6 l0040FEAA
l0040FDF6:
	branch 0<32> != r10 l0040FE70
	// succ:  l0040FDFA l0040FE70
l0040FDFA:
	r7 = r9 | r6
	branch 0<32> == r7 l0040FB42
	// succ:  l0040FE02 l0040FB42
l0040FE02:
	r7 = r11 + 0xFFFFFFFF<32>
	branch r7 != 0<32> l0040FE2C
	// succ:  l0040FE08 l0040FE2C
l0040FE08:
	r6 = r3 - r6
	r8 = r8 - r9
	r7 = CONVERT(r3 <u r6, bool, word32)
	r10 = 1<32>
	r8 = r8 - r7
	r3 = r6
	// succ:  l0040FE1E
l0040FE1E:
	branch __bit(r8, 0x17<32>) l0040FD6A
	// succ:  l0040FE22 l0040FD6A
l0040FE22:
	r4 = __ext(r8, 0<32>, 0x17<32>)
	r11 = r3
	r13 = r10
	goto 0x00410034<p32>
	goto l00410034
	// succ:  l00410034
l0040FE2C:
	branch r11 == r2 l0040FBEE
	// succ:  l0040FE30 l0040FBEE
l0040FE30:
	branch r7 >= 0x39<32> l0040FEA0
	// succ:  l0040FE34 l0040FEA0
l0040FE34:
	branch r7 >= 0x20<32> l0040FE80
	// succ:  l0040FE38 l0040FE80
l0040FE38:
	r10 = 0x20<32>
	r11 = r6 >>u r7
	r10 = r10 - r7
	r7 = r9 >>u r7
	r4 = r9 << r10
	r6 = r6 << r10
	r4 = r4 | r11
	r6 = CONVERT(0<32> <u r6, bool, word32)
	r6 = r6 | r4
	// succ:  l0040FE5A
l0040FE5A:
	r6 = r3 - r6
	r7 = r8 - r7
	r8 = CONVERT(r3 <u r6, bool, word32)
	r10 = r13
	r8 = r7 - r8
	r3 = r6
	goto 0x0040FE1E<p32>
	goto l0040FE1E
	// succ:  l0040FE1E
l0040FE70:
	branch r13 == r2 l0040FC02
	// succ:  l0040FE74 l0040FC02
l0040FE74:
	r7 = 0x8000000<32>
	r9 = r9 | r7
	r7 = r11
	goto 0x0040FE30<p32>
	goto l0040FE30
	// succ:  l0040FE30
l0040FE80:
	r4 = r9 >>u r7
	r10 = 0<32>
	branch r7 == 0x20<32> l0040FE92
	// succ:  l0040FE8A l0040FE92
l0040FE8A:
	r7 = -r7
	r10 = r9 << r7
	// succ:  l0040FE92
l0040FE92:
	r6 = r10 | r6
	r6 = CONVERT(0<32> <u r6, bool, word32)
	r6 = r6 | r4
	// succ:  l0040FE9C
l0040FE9C:
	r7 = 0<32>
	goto 0x0040FE5A<p32>
	goto l0040FE5A
	// succ:  l0040FE5A
l0040FEA0:
	r6 = r9 | r6
	r6 = CONVERT(0<32> <u r6, bool, word32)
	goto 0x0040FE9C<p32>
	goto l0040FE9C
	// succ:  l0040FE9C
l0040FEAA:
	branch 0<32> == r11 l0040FF5A
	// succ:  l0040FEAE l0040FF5A
l0040FEAE:
	branch 0<32> != r13 l0040FF1C
	// succ:  l0040FEB2 l0040FF1C
l0040FEB2:
	r7 = r8 | r3
	branch r7 != 0<32> l0040FECA
	// succ:  l0040FEB8 l0040FECA
l0040FEB8:
	branch r10 != r2 l0040FEC4
	// succ:  l0040FEBC l0040FEC4
l0040FEBC:
	r3 = r9 | r6
	branch 0<32> == r3 l004100E4
	// succ:  l0040FEC4 l004100E4
l0040FEC4:
	r8 = r9
	r3 = r6
	goto 0x0040FFAE<p32>
	goto l0040FFAE
	// succ:  l0040FFAE
l0040FECA:
	r11 = ~r11
	branch 0<32> != r11 l0040FEE6
	// succ:  l0040FED2 l0040FEE6
l0040FED2:
	r3 = r6 - r3
	r8 = r9 - r8
	// succ:  l0040FEDA
l0040FEDA:
	r6 = CONVERT(r6 <u r3, bool, word32)
	r5 = r12
	r8 = r8 - r6
	goto 0x0040FE1E<p32>
	goto l0040FE1E
	// succ:  l0040FE1E
l0040FEE6:
	branch r10 == r2 l0040FEBC
	// succ:  l0040FEEA l0040FEBC
l0040FEEA:
	branch r11 >= 0x39<32> l0040FF50
	// succ:  l0040FEEE l0040FF50
l0040FEEE:
	branch r11 >= 0x20<32> l0040FF2E
	// succ:  l0040FEF2 l0040FF2E
l0040FEF2:
	r7 = 0x20<32>
	r4 = r3 >>u r11
	r7 = r7 - r11
	r11 = r8 >>u r11
	r5 = r8 << r7
	r3 = r3 << r7
	r5 = r5 | r4
	r3 = CONVERT(0<32> <u r3, bool, word32)
	r3 = r5 | r3
	// succ:  l0040FF12
l0040FF12:
	r3 = r6 - r3
	r8 = r9 - r11
	goto 0x0040FEDA<p32>
	goto l0040FEDA
	// succ:  l0040FEDA
l0040FF1C:
	branch r10 == r2 l0040FEBC
	// succ:  l0040FF20 l0040FEBC
l0040FF20:
	r7 = 0x8000000<32>
	r11 = -r11
	r8 = r8 | r7
	goto 0x0040FEEA<p32>
	goto l0040FEEA
	// succ:  l0040FEEA
l0040FF2E:
	r5 = r8 >>u r11
	r7 = 0<32>
	branch r11 == 0x20<32> l0040FF40
	// succ:  l0040FF38 l0040FF40
l0040FF38:
	r11 = -r11
	r7 = r8 << r11
	// succ:  l0040FF40
l0040FF40:
	r3 = r7 | r3
	r3 = CONVERT(0<32> <u r3, bool, word32)
	r3 = r5 | r3
	// succ:  l0040FF4C
l0040FF4C:
	r11 = 0<32>
	goto 0x0040FF12<p32>
	goto l0040FF12
	// succ:  l0040FF12
l0040FF50:
	r3 = r8 | r3
	r3 = CONVERT(0<32> <u r3, bool, word32)
	goto 0x0040FF4C<p32>
	goto l0040FF4C
	// succ:  l0040FF4C
l0040FF5A:
	r7 = r13 + 1<32>
	r7 = r7 & 0x7FF<32>
	branch r7 >= 2<32> l00410010
	// succ:  l0040FF66 l00410010
l0040FF66:
	r10 = r8 | r3
	r7 = r9 | r6
	branch 0<32> != r13 l0040FFC2
	// succ:  l0040FF72 l0040FFC2
l0040FF72:
	branch 0<32> != r10 l0040FF86
	// succ:  l0040FF76 l0040FF86
l0040FF76:
	branch 0<32> != r7 l0040FEC4
	// succ:  l0040FF7A l0040FEC4
l0040FF7A:
	r8 = 0<32>
	r3 = 0<32>
	// succ:  l0040FF7E
l0040FF7E:
	r10 = 0<32>
	r5 = 0<32>
	goto 0x0040FB54<p32>
	goto l0040FB54
	// succ:  l0040FB54
l0040FF86:
	branch r7 == 0<32> l0040FFBE
	// succ:  l0040FF88 l0040FFBE
l0040FF88:
	r4 = r3 - r6
	r7 = r8 - r9
	r10 = CONVERT(r3 <u r4, bool, word32)
	r7 = r7 - r10
	branch __bit(r7, 0x17<32>) l0040FFB2
	// succ:  l0040FF9C l0040FFB2
l0040FF9C:
	r3 = r6 - r3
	r8 = r9 - r8
	r6 = CONVERT(r6 <u r3, bool, word32)
	r10 = 0<32>
	r8 = r8 - r6
	// succ:  l0040FFAE
l0040FFAE:
	r5 = r12
	goto 0x0040FD6A<p32>
	goto l0040FD6A
	// succ:  l0040FD6A
l0040FFB2:
	r3 = r4 | r7
	branch 0<32> == r3 l00410098
	// succ:  l0040FFBA l00410098
l0040FFBA:
	r8 = r7
	r3 = r4
	// succ:  l0040FFBE
l0040FFBE:
	r10 = 0<32>
	goto 0x0040FD6A<p32>
	goto l0040FD6A
	// succ:  l0040FD6A
l0040FFC2:
	branch 0<32> != r10 l0040FFD2
	// succ:  l0040FFC6 l0040FFD2
l0040FFC6:
	branch 0<32> == r7 l004100EC
	// succ:  l0040FFCA l004100EC
l0040FFCA:
	r8 = r9
	r3 = r6
	r5 = r12
	goto 0x0040FDC0<p32>
	goto l0040FDC0
	// succ:  l0040FDC0
l0040FFD2:
	r10 = r2
	branch 0<32> == r7 l0040FD6A
	// succ:  l0040FFD8 l0040FD6A
l0040FFD8:
	r7 = r8 >>u 3<32>
	r9 = r9 >>u 3<32>
	r9 = r9 | r7
	branch !__bit(r9, 0x13<32>) l00410006
	// succ:  l0040FFE8 l00410006
l0040FFE8:
	r4 = __ext(r4, 0<32>, 0x1D<32>)
	r3 = r8 << 0x1D<32>
	r4 = r3 | r4
	r11 = r5
	// succ:  l0040FFF6
l0040FFF6:
	r7 = r7 << 3<32>
	r8 = r4 >>u 0x1D<32>
	r8 = r8 | r7
	r3 = r4 << 3<32>
	goto 0x0040FDBE<p32>
	goto l0040FDBE
	// succ:  l0040FDBE
l00410006:
	r7 = 0xFFFFF<32>
	r4 = 0xFFFFFFFF<32>
	goto 0x0040FFF6<p32>
	goto l0040FFF6
	// succ:  l0040FFF6
l00410010:
	r11 = r3 - r6
	r4 = r8 - r9
	r7 = CONVERT(r3 <u r11, bool, word32)
	r4 = r4 - r7
	branch __bit(r4, 0x17<32>) l00410090
	// succ:  l00410022 l00410090
l00410022:
	r11 = r6 - r3
	r8 = r9 - r8
	r6 = CONVERT(r6 <u r11, bool, word32)
	r5 = r12
	r4 = r8 - r6
	// succ:  l00410034
l00410034:
	r7 = __clz(r4)
	branch r4 != 0<32> l00410042
	// succ:  l0041003A l00410042
l0041003A:
	r7 = __clz(r11)
	r7 = r7 + 0x20<32>
	// succ:  l00410042
l00410042:
	r10 = r7 + 0xFFFFFFF8<32>
	branch r10 >= 0x20<32> l0041009C
	// succ:  l0041004A l0041009C
l0041004A:
	r8 = -r10
	r4 = r4 << r10
	r8 = r11 >>u r8
	r3 = r11 << r10
	r8 = r8 | r4
	// succ:  l0041005E
l0041005E:
	branch r10 < r13 l004100CE
	// succ:  l00410062 l004100CE
l00410062:
	r10 = r10 - r13
	r6 = r10 + 1<32>
	branch r6 >= 0x20<32> l004100A8
	// succ:  l0041006E l004100A8
l0041006E:
	r7 = 0x20<32>
	r9 = r3 >>u r6
	r7 = r7 - r6
	r4 = r8 << r7
	r7 = r3 << r7
	r4 = r4 | r9
	r7 = CONVERT(0<32> <u r7, bool, word32)
	r3 = r4 | r7
	r8 = r8 >>u r6
	goto 0x0040FFBE<p32>
	goto l0040FFBE
	// succ:  l0040FFBE
l00410090:
	r3 = r11 | r4
	branch 0<32> != r3 l00410034
	// succ:  l00410098 l00410034
l00410098:
	r8 = 0<32>
	goto 0x0040FF7E<p32>
	goto l0040FF7E
	// succ:  l0040FF7E
l0041009C:
	r8 = r7 + 0xFFFFFFD8<32>
	r3 = 0<32>
	r8 = r11 << r8
	goto 0x0041005E<p32>
	goto l0041005E
	// succ:  l0041005E
l004100A8:
	r10 = r10 + 0xFFFFFFE1<32>
	r7 = 0<32>
	r10 = r8 >>u r10
	branch r6 == 0x20<32> l004100BE
	// succ:  l004100B6 l004100BE
l004100B6:
	r6 = -r6
	r7 = r8 << r6
	// succ:  l004100BE
l004100BE:
	r8 = r3 | r7
	r8 = CONVERT(0<32> <u r8, bool, word32)
	r3 = r10 | r8
	r8 = 0<32>
	goto 0x0040FFBE<p32>
	goto l0040FFBE
	// succ:  l0040FFBE
l004100CE:
	r10 = r13 - r10
	r8 = __ins(r8, 0<32>, 7<32>, 1<32>)
	goto 0x0040FD6A<p32>
	goto l0040FD6A
	// succ:  l0040FD6A
l004100D8:
	r8 = r9
	r3 = r6
	goto 0x0040FFBE<p32>
	goto l0040FFBE
	// succ:  l0040FFBE
l004100DE:
	r8 = r9
	r3 = r6
	goto 0x0040FDC0<p32>
	goto l0040FDC0
	// succ:  l0040FDC0
l004100E4:
	r8 = 0<32>
	r5 = r12
	goto 0x0040FB54<p32>
	goto l0040FB54
	// succ:  l0040FB54
l004100EC:
	r5 = 0<32>
	r8 = 0x7FFFFF<32>
	r3 = 0xFFFFFFF8<32>
	r10 = r2
	goto 0x0040FB54<p32>
	goto l0040FB54
	// succ:  l0040FB54
l004100FE:
	r8 = 0<32>
	goto 0x0040FB90<p32>
	goto l0040FB90
	// succ:  l0040FB90
__subdf3_exit:


