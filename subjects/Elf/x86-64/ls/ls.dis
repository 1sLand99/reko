void _init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rax
// Preserved: rsp
_init_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402168:
	branch __gmon_start__ == 0x0000000000000000 l000000000040217D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402178:
	call __gmon_start__ (retsize: 8;)
		uses: rax:__gmon_start__,rsp:fp - 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040217D:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_init_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void free()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
// Terminates process
free_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

free_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void malloc()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
// Terminates process
malloc_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

malloc_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00000000004028C0(word64 rsi, word32 edi, word64 r9, word64 r10, word64 r13, word64 r14, word64 r15, selector fs, word128 xmm0, word128 xmm1, word128 xmm2, int8 Top)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31] fs:[0..15] r10:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] r9:[0..63] rsi:[0..63] Top:[0..7] xmm0:[0..127] xmm1:[0..127] xmm2:[0..127]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00000000004028C0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00000000004028C0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004028C0:
	fn000000000040D6A0(Mem22[rsi:word64])
	setlocale(0x0000000000000006, 0x0000000000416919)
	bindtextdomain(0x0000000000413800, 0x000000000041381C)
	textdomain(0x0000000000413800)
	Mem52[0x000000000061A580:word32] = 0x00000002
	fn0000000000411EE0(0x000000000040A200)
	Mem61[0x000000000061B030:word32] = 0x00000000
	Mem62[0x000000000061B0D0:byte] = 0x01
	Mem63[0x000000000061B180:word64] = 0x0000000000000000
	word32 eax_68 = SLICE((uint64) Mem63[0x000000000061A56C:word32], word32, 0)
	Mem65[0x000000000061B190:word64] = 0x0000000000000000
	Mem66[0x000000000061B188:word64] = 0xFFFFFFFFFFFFFFFF
	Mem67[0x000000000061B0F0:byte] = 0x00
	word64 rbp_1262 = rsi
	word64 rbx_221 = (uint64) edi
	word64 rsp_1244 = fp - 952
	branch eax_68 == 0x00000002 l0000000000403203
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403203:
	Mem3777[0x000000000061B150:word32] = 0x00000002
	fn000000000040E640(0x00000005, 0x0000000000000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040297B:
	branch eax_68 == 0x00000003 l00000000004029AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004029AF:
	Mem78[0x000000000061B150:word32] = 0x00000000
	fn000000000040E640(0x00000005, 0x0000000000000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402980:
	branch SLICE((uint64) (eax_68 - 0x00000001), word32, 0) == 0x00000000 l000000000040298A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040298A:
	branch isatty(0x0000000000000001) == 0x00000000 l00000000004037EC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004037EC:
	Mem94[0x000000000061B150:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040299C:
	Mem95[0x000000000061B150:word32] = 0x00000002
	Mem96[0x000000000061B0F0:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004029C5:
	Mem98[0x000000000061B14C:word32] = 0x00000000
	Mem99[0x000000000061B148:word32] = 0x00000000
	Mem100[0x000000000061B147:byte] = 0x00
	Mem101[0x000000000061B145:byte] = 0x00
	Mem102[0x000000000061B144:byte] = 0x00
	Mem103[0x000000000061B12C:word32] = 0x00000000
	Mem104[0x000000000061B114:byte] = 0x00
	Mem105[0x000000000061B110:word32] = 0x00000001
	Mem106[0x000000000061B10E:byte] = 0x00
	Mem107[0x000000000061B10D:byte] = 0x00
	Mem108[0x000000000061B108:word32] = 0x00000000
	Mem109[0x000000000061B100:word64] = 0x0000000000000000
	Mem110[0x000000000061B0F8:word64] = 0x0000000000000000
	Mem111[0x000000000061B17D:byte] = 0x00
	word64 rax_112 = getenv(0x000000000041382E)
	word32 rax_32_32_121 = SLICE(rax_112, word32, 32)
	word64 r9_141 = r9
	branch rax_112 == 0x0000000000000000 l0000000000402A7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402A50:
	word32 ecx_4567
	word64 rax_123 = fn0000000000409E50(rax_32_32_121, 0x0000000000000004, 0x0000000000416460, 0x0000000000416480, rax_112, out ecx_4567)
	byte al_164 = SLICE(rax_123, byte, 0)
	word48 rax_48_16_170 = SLICE(rax_123, word48, 16)
	branch SLICE(rax_123, word32, 0) < 0x00000000 l0000000000403786
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403786:
	word64 r8_4568
	fn000000000040E930(rax_112, r10, fs, out r8_4568, out r9_141, out r10)
	error(0x0000000000000000, 0x0000000000000000, dcgettext(0x0000000000000000, 0x0000000000415B00, 0x0000000000000005), 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402A6F:
	fn000000000040E640(SLICE((uint64) Mem111[SEQ(rax_48_16_170, (int16) al_164) * 0x0000000000000004 + 0x00416460:word32], word32, 0), 0x0000000000000000)
	r9_141 = r9 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402A7F:
	Mem180[0x000000000061B0C8:word64] = 0x0000000000000050
	word32 r9_32_32_211 = SLICE(r9_141, word32, 32)
	word64 rax_181 = getenv(0x000000000041383C)
	word64 r9_218 = r9_141
	branch rax_181 == 0x0000000000000000 l0000000000402AB1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402AA6:
	r9_218 = r9_141 (alias)
	branch Mem188[rax_181:byte] != 0x00 l00000000004037B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004037B8:
	word64 r12_214
	branch SLICE((uint64) (uint32) fn0000000000410E90(fp - 0x0000000000000378, 0x00000000, rbx_221, rsi, 0x0000000000000000, rax_181, 0x0000000000000000, r9_32_32_211, rax_181, r13, r14, r15, out rbx_221, out rsp_1244, out rbp_1262, out r9_218, out r12_214, out r13, out r14, out r15), word32, 0) != 0x00000000 l0000000000403A93
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004037D2:
	word64 rax_236 = Mem188[rsp_1244 + 0x0000000000000040:word64]
	branch rax_236 == 0x0000000000000000 l0000000000403A93
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403A93:
	word64 r8_4580
	fn000000000040E930(r12_214, r10, fs, out r8_4580, out r9_218, out r10)
	error(0x0000000000000000, 0x0000000000000000, dcgettext(0x0000000000000000, 0x0000000000415B48, 0x0000000000000005), 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004037E0:
	Mem272[0x000000000061B0C8:word64] = rax_236
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402AB1:
	word32 r9_32_32_325 = SLICE(r9_218, word32, 32)
	branch ioctl(0x0000000000000001, 0x0000000000005413, 0x00000000) == 0xFFFFFFFF l0000000000402ADD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402ACC:
	word32 eax_284 = (word32) Mem275[rsp_1244 + 0x0000000000000042:word16]
	word64 rax_290 = (uint64) (uint32) eax_284
	branch SLICE(eax_284, word16, 0) == 0x0000 l0000000000402ADD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402AD6:
	Mem291[0x000000000061B0C8:word64] = rax_290
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402ADD:
	word64 rax_293 = getenv(0x0000000000413844)
	Mem297[0x000000000061B0D8:word64] = 0x0000000000000008
	word64 r9_1049 = r9_218
	branch rax_293 == 0x0000000000000000 l0000000000402B22
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402AFA:
	word64 r12_328
	word64 r14_4570
	word64 r13_4569
	branch SLICE((uint64) (uint32) fn0000000000410E90(Mem297[rsp_1244 + 0x0000000000000020:word64], 0x00000000, rbx_221, rbp_1262, 0x0000000000000000, rax_293, 0x0000000000000000, r9_32_32_325, rax_293, r13, r14, r15, out rbx_221, out rsp_1244, out rbp_1262, out r9_1049, out r12_328, out r13_4569, out r14_4570, out r15), word32, 0) != 0x00000000 l00000000004041BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004041BB:
	word64 r8_4571
	fn000000000040E930(r12_328, r10, fs, out r8_4571, out r9_1049, out r10)
	error(0x0000000000000000, 0x0000000000000000, dcgettext(0x0000000000000000, 0x0000000000415B88, 0x0000000000000005), 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402B16:
	Mem382[0x000000000061B0D8:word64] = Mem297[rsp_1244 + 0x0000000000000040:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402B22:
	word64 r14_1004 = 0x0000000000000000
	word64 r12_3523 = 0x0000000000000000
	word64 r13_3524 = 0x0000000000000000
	word64 rbx_3530 = rbx_221
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402B30:
	Mem397[rsp_1244 + 0x0000000000000038:word32] = 0xFFFFFFFF
	word32 ebx_1858 = SLICE(rbx_4588, word32, 0)
	word64 r8_1048 = rsp_1244 + 0x0000000000000038
	byte r13b_581 = SLICE(r13_4590, byte, 0)
	word32 r9_32_32_3522 = SLICE(r9_1049, word32, 32)
	word32 eax_398 = getopt_long((uint64) ebx_1858, rbp_1262, 0x0000000000415BC8, 0x0000000000413080, r8_1048)
	branch eax_398 == 0xFFFFFFFF l000000000040321E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040321E:
	branch Mem397[0x000000000061B138:word64] == 0x0000000000000000 l000000000040398A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040398A:
	word64 rax_404 = getenv(0x00000000004138E1)
	word64 r14_417
	fn000000000040C810(SLICE(rax_404, word32, 32), 0x000000000061B138, 0x000000000061B140, rax_404, r8_1048, r9_1049, r14_1004, rax_404, out r8_1048, out r9_1049, out r14_417, out r15)
	byte r14b_441 = SLICE(r14_417, byte, 0)
	branch r15 == 0x0000000000000000 l0000000000404531
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404531:
	branch getenv(0x00000000004138E4) != 0x0000000000000000 l00000000004039B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404544:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004039B2:
	Mem436[0x000000000061B134:word32] = SLICE((uint64) Mem397[0x000000000061B140:word32], word32, 0)
	Mem438[0x000000000061A560:word64] = Mem436[0x000000000061B138:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004039CC:
	r14_1004 = r14_417 (alias)
	branch r14b_441 == 0x00 l000000000040322C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004039D5:
	Mem445[0x000000000061B140:word32] = 0x00000000
	Mem446[0x000000000061B138:word64] = 0x0000000000000400
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040322C:
	word64 rdx_449 = Mem447[0x000000000061B0C8:word64]
	word64 rax_450 = 0x0000000000000001
	branch rdx_449 >u 0x0000000000000002 l00000000004037FB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004037FB:
	rax_450 = (uint64) ((uint128) (uint64) rdx_449 /u 0x0000000000000003)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403242:
	Mem466[0x000000000061B020:word64] = rax_450
	word64 rsi_470
	word64 rax_467 = fn000000000040E600(0x0000000000000000, out rsi_470)
	Mem476[0x000000000061B0E8:word64] = rax_467
	word32 rsi_32_32_3896 = SLICE(rsi_470, word32, 32)
	branch SLICE((uint64) (uint32) fn000000000040E630(rax_467), word32, 0) == 0x00000005 l000000000040426C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040426C:
	rsi_32_32_3896 = SLICE(fn000000000040E650(0x00000001, 0x00000020, 0x00000000, Mem476[0x000000000061B0E8:word64]), word32, 32) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403268:
	word64 rax_501 = (uint64) Mem476[0x000000000061B12C:word32]
	branch SLICE(rax_501, word32, 0) <=u 0x00000001 l00000000004032A9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403273:
	r14_1004 = rax_501 + 0x00000000004138ED
	byte al_508 = SLICE((word32) Mem476[rax_501 + 0x00000000004138ED:byte], byte, 0)
	branch al_508 == 0x00 l00000000004032A9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403289:
	r14_1004 = r14_1004 + 0x0000000000000001
	rsi_32_32_3896 = SLICE(fn000000000040E650(0x00000001, (int32) al_508, rsi_32_32_3896, Mem476[0x000000000061B0E8:word64]), word32, 32) (alias)
	al_508 = SLICE((word32) Mem476[r14_1004:byte], byte, 0) (alias)
	branch al_508 != 0x00 l0000000000403289
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004032A9:
	word64 rsi_4579
	word64 rax_540 = fn000000000040E600(0x0000000000000000, out rsi_4579)
	Mem551[0x000000000061B0E0:word64] = rax_540
	fn000000000040E650(0x00000001, 0x0000003A, 0x00000000, rax_540)
	branch Mem551[0x000000000061B130:byte] == 0x00 l00000000004032E2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004032D2:
	branch Mem551[0x000000000061B150:word32] == 0x00000000 l00000000004032E2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004032DB:
	Mem568[0x000000000061B130:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004032E2:
	word64 rax_572 = (uint64) (SLICE((uint64) Mem569[0x000000000061B14C:word32], word32, 0) - 0x00000001)
	word32 rax_32_32_662 = SLICE(rax_572, word32, 32)
	branch SLICE(rax_572, word32, 0) <=u 0x00000001 l0000000000403965
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403965:
	branch r13b_581 != 0x00 l00000000004032F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040396E:
	branch Mem569[0x000000000061B150:word32] == 0x00000000 l000000000040380D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040397B:
	Mem590[0x000000000061B148:word32] = 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004032F4:
	branch Mem591[0x000000000061B150:word32] == 0x00000000 l000000000040380D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040380D:
	bool Z_3938 = SLICE(cond(r12_3523), bool, 2)
	branch r12_3523 == 0x0000000000000000 l00000000004045C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004045C6:
	word64 rax_609 = getenv(0x00000000004138F5)
	r12_3523 = rax_609
	Z_3938 = SLICE(cond(rax_609), bool, 2) (alias)
	branch rax_609 != 0x0000000000000000 l00000000004045DF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004045DB_1:
	r12_3523 = 0x0000000000413827
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004045DF:
	rax_32_32_662 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403816:
	r14_1004 = 0x0000000000412CA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040383E:
	word64 rsi_619 = r12_3523
	word64 rdi_621 = 0x0000000000412CA0
	word64 rcx_623 = 0x0000000000000006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403847:
	branch rcx_623 == 0x0000000000000000 l0000000000403849
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403847_1:
	Z_3938 = SLICE(cond(Mem3936[rsi_4582:byte] - Mem3936[rdi_4583:byte]), bool, 2) (alias)
	rsi_619 = rsi_4582 + 0x0000000000000001
	rdi_621 = rdi_4583 + 0x0000000000000001
	rcx_623 = rcx_623 - 0x0000000000000001
	rsi_4582 = rsi_619
	rdi_4583 = rdi_621
	branch Mem3936[rsi_4582:byte] != Mem3936[rdi_4583:byte] l0000000000403847
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403849:
	branch Z_3938 l0000000000403828
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403828:
	word64 rax_637 = fn000000000040AB70(0x0000000000000002)
	rax_32_32_662 = SLICE(rax_637, word32, 32) (alias)
	branch SLICE(rax_637, byte, 0) == 0x00 l0000000000403301
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040383A:
	r12_3523 = r12_3523 + 0x0000000000000006
	Z_3938 = SLICE(cond(r12_3523), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040384B:
	branch Mem3936[r12_3523:byte] == 0x2B l00000000004043D9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004043D9:
	word64 r13_1037
	word64 r12_1029 = r12_3523 + 0x0000000000000001
	word64 rax_1032 = strchr(r12_1029, 0x000000000000000A)
	r14_1004 = rax_1032
	branch rax_1032 == 0x0000000000000000 l000000000040444F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040444F:
	r13_1037 = r12_1029
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004043F2:
	r13_1037 = rax_1032 + 0x0000000000000001
	branch strchr(rax_1032 + 0x0000000000000001, 0x000000000000000A) == 0x0000000000000000 l0000000000404438
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404408:
	word64 r11_4574
	r15 = fn000000000040EC10(r12_1029, r10, fs, out r8_1048, out r9_1049, out r10, out r11_4574)
	error(0x0000000000000002, 0x0000000000000000, dcgettext(0x0000000000000000, 0x0000000000413900, 0x0000000000000005), 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404438:
	Mem1073[rax_1032:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040443C:
	Mem1076[0x000000000061A3D0:word64] = r12_1029
	Mem1079[0x000000000061A3D8:word64] = r13_1037
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403856:
	word32 ecx_4581
	word64 rax_672 = fn0000000000409E50(rax_32_32_662, 0x0000000000000004, 0x00000000004136F0, 0x0000000000413700, r12_3523, out ecx_4581)
	branch rax_672 < 0x0000000000000000 l0000000000404564
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404564:
	fn0000000000409F80(rax_672, r12_3523, 0x000000000041391D, r10, fs)
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000413928, 0x0000000000000005), Mem3936[0x000000000061A650:word64])
	word64 rbx_741 = 0x0000000000413700
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040459C:
	branch Mem3936[rbx_741:word64] == 0x0000000000000000 l00000000004031D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004031D6:
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000415BF8, 0x0000000000000005), Mem3936[0x000000000061A650:word64])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004045A8:
	__fprintf_chk(Mem3936[0x000000000061A650:word64], 0x0000000000000001, 0x000000000041393E, 0x00000000)
	rbx_741 = rbx_741 + 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403876:
	branch rax_672 == 0x0000000000000001 l0000000000404549
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404549:
	Mem769[0x000000000061A3D8:word64] = 0x0000000000413966
	Mem770[0x000000000061A3D0:word64] = 0x0000000000413966
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403880:
	branch rax_672 <= 0x0000000000000001 l0000000000404465
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404465:
	branch rax_672 != 0x0000000000000000 l00000000004038A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040446E:
	Mem775[0x000000000061A3D8:word64] = 0x000000000041394E
	Mem776[0x000000000061A3D0:word64] = 0x000000000041394E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403886:
	branch rax_672 == 0x0000000000000002 l00000000004045F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004045F3:
	Mem779[0x000000000061A3D0:word64] = 0x0000000000413975
	Mem780[0x000000000061A3D8:word64] = 0x0000000000413969
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403890:
	branch rax_672 != 0x0000000000000003 l00000000004038A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403896:
	branch SLICE(fn000000000040AB70(0x0000000000000002), byte, 0) != 0x00 l000000000040460E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040460E:
	word64 rax_799 = dcgettext(0x0000000000000000, Mem3936[0x000000000061A3D0:word64], 0x0000000000000002)
	word64 rsi_800 = Mem3936[0x000000000061A3D8:word64]
	Mem806[0x000000000061A3D0:word64] = rax_799
	Mem808[0x000000000061A3D8:word64] = dcgettext(0x0000000000000000, rsi_800, 0x0000000000000002)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004038A8:
	branch strstr(Mem1080[0x000000000061A3D0:word64], 0x0000000000413766) == 0x0000000000000000 l0000000000404484
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404484:
	branch strstr(Mem1087[0x000000000061A3D8:word64], 0x0000000000413766) != 0x0000000000000000 l00000000004038C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040449E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004038C2:
	Mem1094[0x000000000061A748:word64] = 0x0000000000000005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004038CD:
	r14_1004 = Mem1095[0x000000000061A748:word64]
	Mem1098[0x000000000061A748:word64] = 0x0000000000000000
	word64 r13_1097 = 0x000000000061A760
	word32 r12d_1100 = 0x0002000E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004038EB:
	Mem1104[rsp_1244 + 0x0000000000000040:word64] = r14_1004
	word64 rax_1105 = nl_langinfo((uint64) r12d_1100)
	fn000000000040CDC0(SLICE(rax_1105, word32, 32), Mem1104[rsp_1244 + 0x0000000000000020:word64], 0x00000000000000A1, r13_1097, rax_1105, 0x00000000, 0x00000000)
	r9_1049 = 0x0000000000000000
	r8_1048 = 0x0000000000000000
	branch false l0000000000404356
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404356:
	Mem1129[0x000000000061A748:word64] = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040391F:
	word64 rax_1130 = Mem1104[rsp_1244 + 0x0000000000000040:word64]
	branch Mem1104[0x000000000061A748:word64] <u rax_1130 l0000000000403933
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040392B_1:
	rax_1130 = Mem1104[0x000000000061A748:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403933:
	Mem1141[0x000000000061A748:word64] = rax_1130
	r12d_1100 = SLICE((uint64) (r12d_1100 + 0x00000001), word32, 0) (alias)
	r13_1097 = r13_1097 + 161
	branch r12d_1100 != 0x0002001A l00000000004038EB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040394E:
	branch rax_1130 <u r14_1004 l00000000004038CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403957:
	branch rax_1130 != 0x0000000000000000 l0000000000403301
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403960:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404361:
	error(0x0000000000000000, 0x0000000000000000, dcgettext(0x0000000000000000, 0x0000000000415C30, 0x0000000000000005), 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403301:
	word64 r12_1163 = (uint64) Mem1160[0x000000000061A620:word32]
	branch Mem1160[0x000000000061B129:byte] != 0x00 l0000000000403AC5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403AC5:
	word64 rax_1166 = getenv(0x000000000041397F)
	Mem1191[rsp_1244 + 0x0000000000000038:word64] = rax_1166
	word32 rax_32_32_1202 = SLICE(rax_1166, word32, 32)
	branch rax_1166 == 0x0000000000000000 l0000000000403AE2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403AD9:
	word64 r12_1261 = r12_1163
	word64 rbx_1263 = rbx_4588
	branch Mem1191[rax_1166:byte] != 0x00 l00000000004044FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004044FA:
	Mem1196[rsp_1244 + 0x0000000000000030:word16] = 0x3F3F
	Mem1197[rsp_1244 + 0x0000000000000032:byte] = 0x00
	word64 rax_1203 = fn0000000000410E30(rax_32_32_1202, rax_1166)
	Mem1215[0x000000000061B118:word64] = rax_1203
	Mem1216[rsp_1244 + 0x0000000000000040:word64] = rax_1203
	word64 r13_1198 = 0x0000000000000000
	word32 edx_1212 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040451F:
	branch edx_1212 >u 0x00000005 l0000000000402985
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404528:
	ebx_1858 = SLICE(rbx_1263, word32, 0) (alias)
	ebx_1858 = SLICE(rbx_1263, word32, 0) (alias)
	switch (edx_1212) { l0000000000404703 l00000000004046D6 l000000000040473B l0000000000404690 l0000000000402985 l0000000000404647 }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404647:
	error(0x0000000000000000, 0x0000000000000000, dcgettext(0x0000000000000000, 0x0000000000415D98, 0x0000000000000005), 0x00000000)
	free(Mem1233[0x000000000061B118:word64])
	word64 rdi_1235 = Mem1233[0x000000000061B120:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404679:
	branch rdi_1235 == 0x0000000000000000 l0000000000404787
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404787:
	Mem1240[0x000000000061B129:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404682:
	word64 r13_1242 = Mem1233[rdi_1235 + 0x0000000000000020:word64]
	free(rdi_1235)
	rdi_1235 = r13_1242
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404690:
	word64 rax_1245 = Mem1233[rsp_1244 + 0x0000000000000038:word64]
	Mem1247[rsp_1244 + 0x0000000000000038:word64] = rax_1245 + 0x0000000000000001
	edx_1212 = 0x00000005 (alias)
	branch Mem1247[rax_1245:byte] != 0x3D l0000000000404528
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004046AC:
	word64 rdi_1252 = Mem1247[rsp_1244 + 0x0000000000000020:word64]
	Mem1259[r13_1198 + 0x0000000000000018:word64] = Mem1247[rsp_1244 + 0x0000000000000040:word64]
	edx_1212 = SLICE((uint64) (SLICE((uint64) (0x00000000 - SLICE(cond(SLICE((uint64) ((uint8) fn00000000004049E0(r13_1198 + 0x0000000000000010, 0x00, rbx_1263, rbp_1262, rsp_1244 + 0x0000000000000038, rdi_1252, r12_1261, r14_1004, out rbx_1263, out rsp_1244, out rbp_1262, out r8_1048, out r9_1049, out r10, out r12_1261)), byte, 0) - 0x01), bool, 1)), word32, 0) & 0x00000005), word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040473B:
	word64 rax_1290 = Mem1233[rsp_1244 + 0x0000000000000038:word64]
	Mem1293[rsp_1244 + 0x0000000000000038:word64] = rax_1290 + 0x0000000000000001
	r15 = 0x0000000000000000
	edx_1212 = 0x00000005 (alias)
	branch Mem1293[rax_1290:byte] != 0x3D l0000000000404528
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040475A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404772:
	word64 rsi_1299 = Mem1293[r15 * 0x0000000000000008 + 0x004135E0:word64]
	word64 r14_1301 = (int64) SLICE(r15, word32, 0)
	branch rsi_1299 != 0x0000000000000000 l000000000040475C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040475C:
	r15 = r15 + 0x0000000000000001
	branch strcmp(rsp_1244 + 0x0000000000000030, rsi_1299) == 0x00000000 l0000000000404828
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404828:
	word64 rdi_1314 = Mem1293[rsp_1244 + 0x0000000000000020:word64]
	word64 rcx_1315 = (r14_1301 << 0x0000000000000004) + 0x000000000061A3E0
	Mem1321[rcx_1315 + 0x0000000000000008:word64] = Mem1293[rsp_1244 + 0x0000000000000040:word64]
	r14_1004 = r14_1301 << 0x0000000000000004
	edx_1212 = 0x00000000 (alias)
	branch SLICE((uint64) (uint8) fn00000000004049E0(rcx_1315, 0x00, rbx_1263, rbp_1262, rsp_1244 + 0x0000000000000038, rdi_1314, r12_1261, r14_1301 << 0x0000000000000004, out rbx_1263, out rsp_1244, out rbp_1262, out r8_1048, out r9_1049, out r10, out r12_1261), byte, 0) != 0x00 l0000000000404528
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404782:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404857:
	r14_1004 = fn000000000040E930(rsp_1244 + 0x0000000000000030, r10, fs, out r8_1048, out r9_1049, out r10)
	error(0x0000000000000000, 0x0000000000000000, dcgettext(0x0000000000000000, 0x00000000004139FB, 0x0000000000000005), 0x00000000)
	edx_1212 = 0x00000005 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004046D6:
	word64 rax_1383 = Mem1233[rsp_1244 + 0x0000000000000038:word64]
	edx_1212 = 0x00000005 (alias)
	branch Mem1233[rax_1383:byte] == 0x00 l0000000000404528
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004046E9:
	Mem1388[rsp_1244 + 0x0000000000000038:word64] = rax_1383 + 0x0000000000000001
	Mem1392[rsp_1244 + 0x0000000000000031:byte] = SLICE((word32) Mem1388[rax_1383:byte], byte, 0)
	edx_1212 = 0x00000002 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404703:
	word64 rax_1393 = Mem1233[rsp_1244 + 0x0000000000000038:word64]
	byte cl_1395 = SLICE((word32) Mem1233[rax_1393:byte], byte, 0)
	branch cl_1395 == 0x2A l00000000004047D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004047D4:
	word64 rax_1399 = fn0000000000410C40(0x0000000000000028)
	word64 rax_1405 = Mem1233[0x000000000061B120:word64]
	word64 rdi_1406 = Mem1233[rsp_1244 + 0x0000000000000020:word64]
	Mem1411[rsp_1244 + 0x0000000000000038:word64] = Mem1233[rsp_1244 + 0x0000000000000038:word64] + 0x0000000000000001
	Mem1413[0x000000000061B120:word64] = rax_1399
	Mem1414[rax_1399 + 0x0000000000000020:word64] = rax_1405
	Mem1416[rax_1399 + 0x0000000000000008:word64] = Mem1414[rsp_1244 + 0x0000000000000040:word64]
	r13_1198 = rax_1399
	edx_1212 = SLICE((uint64) (SLICE((uint64) (SLICE((uint64) (0x00000000 - SLICE(cond(SLICE((uint64) ((uint8) fn00000000004049E0(rax_1399, 0x01, rbx_1263, rbp_1262, rsp_1244 + 0x0000000000000038, rdi_1406, r12_1261, r14_1004, out rbx_1263, out rsp_1244, out rbp_1262, out r8_1048, out r9_1049, out r10, out r12_1261)), byte, 0) - 0x01), bool, 1)), word32, 0) & 0x00000002), word32, 0) + 0x00000003), word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404714:
	branch cl_1395 == 0x3A l00000000004047C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004047C6:
	Mem1449[rsp_1244 + 0x0000000000000038:word64] = rax_1393 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040471D:
	branch cl_1395 == 0x00 l000000000040478E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040478E:
	r12_1163 = r12_1261 (alias)
	branch Mem1453[0x000000000061A450:word64] != 0x0000000000000006 l0000000000403AE2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040479C:
	r12_1163 = r12_1261 (alias)
	branch strncmp(Mem1453[0x000000000061A458:word64], 0x0000000000413989, 0x0000000000000006) != 0x00000000 l0000000000403AE2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004047BA:
	Mem1463[0x000000000061B198:byte] = 0x01
	r12_1163 = r12_1261 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404721:
	Mem1465[rsp_1244 + 0x0000000000000038:word64] = rax_1393 + 0x0000000000000001
	Mem1469[rsp_1244 + 0x0000000000000030:byte] = SLICE((word32) Mem1465[rax_1393:byte], byte, 0)
	edx_1212 = 0x00000001 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403AE2:
	branch Mem1470[0x000000000061B129:byte] == 0x00 l0000000000403315
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403AEF:
	branch SLICE(fn0000000000404CD0(0x0000000D), byte, 0) != 0x00 l0000000000403B2B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403AFD:
	branch SLICE(fn0000000000404CD0(0x0000000E), byte, 0) == 0x00 l0000000000403B14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B0B:
	branch Mem1470[0x000000000061B198:byte] != 0x00 l0000000000403B2B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B14:
	branch SLICE(fn0000000000404CD0(0x0000000C), byte, 0) == 0x00 l0000000000403B32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B22:
	branch Mem1470[0x000000000061B150:word32] != 0x00000000 l0000000000403B32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B2B:
	Mem1523[0x000000000061B115:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B32:
	branch tcgetpgrp(0x0000000000000001) < 0x00000000 l0000000000403315
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B44:
	sigemptyset(0x000000000061B040)
	word64 r13_1530 = 0x0000000000412CC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B51:
	word32 r14d_1541 = SLICE((uint64) Mem1606[r13_1530 + 0x0000000000000000:word32], word32, 0)
	sigaction((uint64) r14d_1541, 0x0000000000000000, Mem1606[rsp_1244 + 0x0000000000000020:word64])
	branch Mem1606[rsp_1244 + 0x0000000000000040:word64] == 0x0000000000000001 l0000000000403B7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B6F:
	sigaddset(0x000000000061B040, (uint64) r14d_1541)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B7C:
	r13_1530 = r13_1530 + 0x0000000000000004
	word56 r13_56_8_4064 = SLICE(r13_1530, word56, 8)
	branch r13_1530 != 0xFFFFFFFFFFBED370 l0000000000403B51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B86:
	word64 rdi_1554 = rsp_1244 + 0x0000000000000048
	word64 rsi_1555 = 0x000000000061B040
	word64 rcx_1556 = 0x0000000000000020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B95:
	branch rcx_1556 == 0x0000000000000000 l0000000000403B97
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B97:
	Mem1559[rsp_1244 + 0x00000000000000C8:word32] = 0x10000000
	r14_1004 = 0x00000000004049B0
	word64 r13_1564 = SEQ(r13_56_8_4064, 0x00) + 0x0000000000412CC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403BAB:
	word64 r15_1566 = (uint64) Mem1565[r13_1564 + 0x0000000000000000:word32]
	word32 r15d_1568 = SLICE(r15_1566, word32, 0)
	branch sigismember(0x000000000061B040, (uint64) r15d_1568) == 0x00000000 l0000000000403BE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403BC3:
	word64 rsi_1575 = Mem1565[rsp_1244 + 0x0000000000000020:word64]
	word64 rax_1577 = 0x00000000004057F0
	branch r15d_1568 == 0x00000014 l0000000000403BD5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403BD1_1:
	rax_1577 = 0x00000000004049B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403BD5:
	Mem1589[rsp_1244 + 0x0000000000000040:word64] = rax_1577
	sigaction((uint64) r15d_1568, rsi_1575, 0x0000000000000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403BE4:
	r15 = r15_1566
	r13_1564 = r13_1564 + 0x0000000000000004
	branch r13_1564 != 0xFFFFFFFFFFBED370 l0000000000403BAB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403BEE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B95_1:
	Mem1601[rdi_1554:word32] = Mem1598[rsi_1555:word32]
	rsi_1555 = rsi_1555 + 0x0000000000000004
	rdi_1554 = rdi_1554 + 0x0000000000000004
	rcx_1556 = rcx_1556 - 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403315:
	word32 r12d_1909 = SLICE(r12_1163, word32, 0)
	branch Mem1605[0x000000000061B110:word32] == 0x00000001 l0000000000403A39
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403A39:
	word32 eax_1622 = 0x00000002
	branch Mem1605[0x000000000061B10D:byte] != 0x00 l0000000000403A5F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403A47:
	branch Mem1605[0x000000000061B12C:word32] == 0x00000003 l0000000000403A5F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403A50:
	eax_1622 = SLICE((uint64) (SLICE((uint64) (SLICE((uint64) (0x00000000 - SLICE(cond(Mem1605[0x000000000061B150:word32] - 0x00000001), bool, 1)), word32, 0) & 0xFFFFFFFE), word32, 0) + 0x00000004), word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403A5F:
	Mem1626[0x000000000061B110:word32] = eax_1622
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403322:
	branch Mem1627[0x000000000061B10E:byte] != 0x00 l00000000004039EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004039EF:
	word64 rax_1773 = fn000000000040B400(0x0000000000404990, 0x0000000000404980, 0x0000000000000000, 0x000000000000001E, 0x00000000004049D0, xmm0, xmm1, xmm2, out r9_1049, out xmm0, out xmm1, out xmm2)
	Mem1791[0x000000000061B1C8:word64] = rax_1773
	branch rax_1773 == 0x0000000000000000 l00000000004043BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403A1B:
	_obstack_begin(0x000000000061AF00, 0x0000000000000000, 0x0000000000000000, 0x0000000000402640, 0x00000000004021F0)
	r8_1048 = 0x00000000004021F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040332F:
	byte al_1830
	word32 eax_1804 = SLICE((uint64) Mem1802[0x000000000061B148:word32], word32, 0)
	branch eax_1804 == 0x00000004 l000000000040377A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040333E:
	branch eax_1804 == 0x00000002 l000000000040377A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403347:
	branch Mem1802[0x000000000061B150:word32] == 0x00000000 l000000000040377A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403354:
	branch Mem1802[0x000000000061B17D:byte] != 0x00 l000000000040377A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403361:
	branch Mem1802[0x000000000061B144:byte] != 0x00 l000000000040377A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040377A:
	Mem1815[0x000000000061B0C1:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040336E:
	Mem1817[0x000000000061B0C1:byte] = 0x00
	al_1830 = 0x01 (alias)
	branch Mem1802[0x000000000061B10E:byte] != 0x00 l00000000004033A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403383:
	branch Mem1817[0x000000000061B129:byte] != 0x00 l00000000004033A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040338C:
	branch Mem1817[0x000000000061B12C:word32] != 0x00000000 l00000000004033A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403395:
	branch Mem1817[0x000000000061B10C:byte] != 0x00 l00000000004033A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040339E:
	al_1830 = 0x00 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004033A0:
	Mem1833[0x000000000061B0C0:byte] = al_1830
	Mem1835[0x000000000061B0C0:byte] = Mem1833[0x000000000061B0C0:byte] & 0x01
	branch Mem1835[0x000000000061B130:byte] == 0x00 l00000000004033E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004033B6:
	_obstack_begin(0x000000000061AFC0, 0x0000000000000000, 0x0000000000000000, 0x0000000000402640, 0x00000000004021F0)
	_obstack_begin(0x000000000061AF60, 0x0000000000000000, 0x0000000000000000, 0x0000000000402640, 0x00000000004021F0)
	r8_1048 = 0x00000000004021F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004033E8:
	Mem1903[0x000000000061B1B8:word64] = 0x0000000000000064
	word64 rax_1931 = fn0000000000410C40(0x0000000000004B00)
	Mem1936[0x000000000061B1B0:word64] = 0x0000000000000000
	Mem1937[0x000000000061B1C0:word64] = rax_1931
	fn0000000000404DD0()
	word64 r13_1928 = (uint64) (SLICE((uint64) ebx_1858, word32, 0) - r12d_1909)
	word32 r13d_2412 = SLICE(r13_1928, word32, 0)
	r13d_2412 = SLICE(r13_1928, word32, 0) (alias)
	word64 r12_2140 = r12_1163
	branch SLICE(r13_1928, word32, 0) <= 0x00000000 l00000000004042A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004042A0:
	branch Mem1937[0x000000000061B10D:byte] == 0x00 l00000000004043A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004043A5:
	fn0000000000404D20(0x0000000000000001, 0x0000000000000000, 0x0000000000413990)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004042AD:
	fn0000000000407EA0(0x0000000000416919, 0x00000001, 0x00000003, 0x0000000000413990, r10, fs, Top, out r9_1049)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403423:
	rbp_1262 = rbp_1262 + (int64) r12d_1909 * 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040342B:
	fn0000000000407EA0(0x0000000000416919, 0x00000001, 0x00000000, Mem1937[rbp_1262:word64], r10, fs, Top, out r9_1049)
	r12_2140 = (uint64) (r12d_1909 + 0x00000001)
	r12d_1909 = SLICE(r12_2140, word32, 0) (alias)
	rbp_1262 = rbp_1262 + 0x0000000000000008
	branch ebx_1858 > r12d_1909 l000000000040342B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040344D:
	word64 r13_2416
	branch Mem1937[0x000000000061B1B0:word64] != 0x0000000000000000 l0000000000404200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404200:
	fn0000000000404E80(r8_1048, r12_2140, r13_1928, r14_1004, r15, out r8_1048)
	branch Mem1937[0x000000000061B10D:byte] == 0x00 l0000000000404454
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404454:
	fn0000000000405090(0x0000000000000001, 0x0000000000000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404212:
	r13_2416 = r13_1928 (alias)
	branch Mem1937[0x000000000061B1B0:word64] == 0x0000000000000000 l000000000040345B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404220:
	r8_1048 = fn00000000004079F0(r10, r12_2140, r15, fs, Top, out r9_1049, out r10)
	branch Mem1937[0x000000000061B190:word64] == 0x0000000000000000 l00000000004044B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004044B5:
	Mem2393[rsp_1244 + 0x0000000000000018:word64] = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404233:
	word64 rdi_2394 = Mem1937[0x000000000061A610:word64]
	word64 rax_2395 = Mem1937[rdi_2394 + 0x0000000000000028:word64]
	branch rax_2395 >=u Mem1937[rdi_2394 + 0x0000000000000030:word64] l00000000004044A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004044A3:
	__overflow(rdi_2394, 0x000000000000000A)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404248:
	Mem2401[rdi_2394 + 0x0000000000000028:word64] = rax_2395 + 0x0000000000000001
	Mem2402[rax_2395:byte] = 0x0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404253:
	word64 rax_2404 = Mem2403[0x000000000061B190:word64]
	Mem2406[0x000000000061B018:word64] = Mem2403[0x000000000061B018:word64] + 0x0000000000000001
	Mem2409[rsp_1244 + 0x0000000000000018:word64] = rax_2404
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040345B:
	word64 rax_2411 = Mem1937[0x000000000061B190:word64]
	Mem2420[rsp_1244 + 0x0000000000000018:word64] = rax_2411
	r13_2416 = (uint64) (r13d_2412 - 0x00000001)
	branch SLICE(r13_2416, word32, 0) > 0x00000000 l00000000004034D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040346D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404385:
	branch rax_2411 == 0x0000000000000000 l00000000004034D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040438E:
	branch Mem2420[rax_2411 + 0x0000000000000018:word64] != 0x0000000000000000 l00000000004034D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404399:
	Mem2427[0x000000000061B0D0:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004034D2:
	branch Mem2429[rsp_1244 + 0x0000000000000018:word64] == 0x0000000000000000 l00000000004040B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004040B5:
	branch Mem2429[0x000000000061B129:byte] == 0x00 l0000000000404152
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004040C2:
	branch Mem2429[0x000000000061B128:byte] == 0x00 l00000000004040ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004040CB:
	branch Mem2429[0x000000000061A3E0:word64] == 0x0000000000000002 l00000000004042CB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004042CB:
	branch memcmp(Mem2429[0x000000000061A3E8:word64], 0x00000000004139E1, 0x0000000000000002) != 0x00000000 l00000000004040D9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004042E9:
	branch Mem2429[0x000000000061A3F0:word64] != 0x0000000000000001 l00000000004040D9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004042F7:
	branch Mem2429[Mem2429[0x000000000061A3F8:word64]:byte] != 0x6D l00000000004040D9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404307:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004040D9:
	word64 rcx_4576
	fn0000000000406440(0x000000000061A3E0, out rcx_4576)
	word64 rcx_4577
	fn0000000000406440(0x000000000061A3F0, out rcx_4577)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004040ED:
	fflush_unlocked(Mem2429[0x000000000061A610:word64])
	word64 rbx_2473 = 0x0000000000412CC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040410D:
	word64 rbp_2477 = (uint64) Mem2429[rbx_2473:word32]
	word32 ebp_2479 = SLICE(rbp_2477, word32, 0)
	branch sigismember(0x000000000061B040, (uint64) ebp_2479) == 0x00000000 l0000000000404100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040411F:
	signal((uint64) ebp_2479, 0x0000000000000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404100:
	rbp_1262 = rbp_2477
	rbx_2473 = rbx_2473 + 0x0000000000000004
	branch rbx_2473 == 0x0000000000412CF0 l000000000040412A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040412A:
	word32 ebx_2497 = SLICE((uint64) Mem2429[0x000000000061B034:word32], word32, 0)
	branch ebx_2497 == 0x00000000 l0000000000404143
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404134:
	raise(0x0000000000000013)
	ebx_2497 = SLICE((uint64) (ebx_2497 - 0x00000001), word32, 0) (alias)
	branch ebx_2497 != 0x00000000 l0000000000404134
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404143:
	word64 rdi_2510 = (uint64) Mem2429[0x000000000061B038:word32]
	branch SLICE(rdi_2510, word32, 0) == 0x00000000 l0000000000404152
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040414D:
	raise(rdi_2510)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404152:
	branch Mem2429[0x000000000061B130:byte] != 0x00 l000000000040430C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040430C:
	fn0000000000405630(0x000000000061AFC0, 0x00000000004139E4)
	fn0000000000405630(0x000000000061AF60, 0x00000000004139EE)
	fn000000000040E630(Mem2429[0x000000000061B0E8:word64])
	__printf_chk(0x0000000000000001, 0x0000000000415D40, 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040415F:
	word64 rbx_2558 = Mem2429[0x000000000061B1C8:word64]
	branch rbx_2558 == 0x0000000000000000 l00000000004041F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040416F:
	word64 rax_2563 = fn000000000040AFB0(rbx_2558)
	branch rax_2563 == 0x0000000000000000 l00000000004041ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004041ED:
	fn000000000040B640(rax_2563, rbx_2558, rbp_1262, rbx_2558, r12_2140)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004041F5:
	exit((uint64) Mem2429[0x000000000061B030:word32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040417C:
	__assert_fail(0x0000000000415D68, 0x0000000000413736, 0x00000000000005DC, 0x0000000000412CA7)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004034DE:
	word64 r14_2602
	word64 rcx_2596 = Mem2429[rsp_1244 + 0x0000000000000018:word64]
	Mem2599[0x000000000061B190:word64] = Mem2429[rcx_2596 + 0x0000000000000018:word64]
	branch Mem2429[0x000000000061B1C8:word64] == 0x0000000000000000 l0000000000403FB5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403FB5:
	r14_2602 = Mem2599[Mem2599[rsp_1244 + 0x0000000000000018:word64]:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004034FC:
	r14_2602 = Mem2599[rcx_2596:word64]
	branch r14_2602 == 0x0000000000000000 l0000000000403FC2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403FC2:
	word64 rax_2607 = Mem2599[0x000000000061AF18:word64]
	branch SLICE(rax_2607 - Mem2599[0x000000000061AF10:word64], word32, 0) <=u 0x0000000F l00000000004044C3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004044C3:
	__assert_fail(0x0000000000415C58, 0x0000000000413736, 0x00000000000003D5, 0x0000000000412C38)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403FDC:
	branch Mem2599[0x000000000061AF20:word64] - rax_2607 >= 0xFFFFFFFFFFFFFFF0 l0000000000404002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403FEC:
	_obstack_newchunk(0x000000000061AF00, 0x00000000FFFFFFF0)
	rax_2607 = Mem2599[0x000000000061AF18:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404002:
	word64 rsi_2628 = Mem2599[rsp_1244 + 0x0000000000000020:word64]
	word64 rdi_2629 = Mem2599[0x000000000061B1C8:word64]
	Mem2630[0x000000000061AF18:word64] = rax_2607 - 0x0000000000000010
	word64 rax_2632 = Mem2630[rax_2607 - 0x0000000000000008:word64]
	Mem2633[rsp_1244 + 0x0000000000000040:word64] = Mem2630[rax_2607 - 0x0000000000000010:word64]
	Mem2634[rsp_1244 + 0x0000000000000048:word64] = rax_2632
	word64 rax_2654 = fn000000000040BB90(rax_2632, rbp_1262, rsi_2628, rdi_2629, r8_1048, r9_1049, r10, r12_2140, r13_2416, r14_2602, xmm0, xmm1, xmm2, out r8_1048, out r9_1049, out r10, out xmm0, out xmm1, out xmm2)
	branch rax_2654 == 0x0000000000000000 l0000000000404287
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404287:
	__assert_fail(0x0000000000413992, 0x0000000000413736, 0x000000000000059D, 0x0000000000412CA7)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404039:
	free(rax_2654)
	word64 rbx_2677 = Mem2634[rsp_1244 + 0x0000000000000018:word64]
	free(Mem2634[rbx_2677:word64])
	free(Mem2634[rbx_2677 + 0x0000000000000008:word64])
	free(rbx_2677)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403508:
	word64 rax_2683 = Mem2599[rsp_1244 + 0x0000000000000018:word64]
	word64 rbx_2685 = Mem2599[rax_2683 + 0x0000000000000008:word64]
	Mem2687[rsp_1244 + 0x000000000000002F:byte] = SLICE((word32) Mem2599[rax_2683 + 0x0000000000000010:byte], byte, 0)
	word64 rax_2688 = __errno_location()
	Mem2691[rax_2688:word32] = 0x00000000
	word64 rax_2693 = opendir(r14_2602)
	r12_2140 = rax_2688
	r13_2416 = rax_2693
	branch rax_2693 == 0x0000000000000000 l0000000000404195
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404195:
	fn0000000000405810(r14_2602, dcgettext(0x0000000000000000, 0x0000000000413998, 0x0000000000000005), (word32) Mem2691[rsp_1244 + 0x000000000000002F:byte], r10, fs, out r8_1048, out r9_1049, out r10)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040353B:
	word64 rax_2861
	rax_2861 = rax_2693
	branch Mem2691[0x000000000061B1C8:word64] == 0x0000000000000000 l00000000004035FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403549:
	byte al_2744
	word32 eax_2727 = dirfd(rax_2693)
	word64 rdx_2730 = Mem2691[rsp_1244 + 0x0000000000000020:word64]
	branch eax_2727 < 0x00000000 l0000000000403E95
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403E95:
	al_2744 = SLICE((uint64) (__xstat(0x0000000000000001, r14_2602, rdx_2730) >>u 0x0000001F), byte, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040355E:
	al_2744 = SLICE((uint64) (__fxstat(0x0000000000000001, (uint64) eax_2727, rdx_2730) >>u 0x0000001F), byte, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040356D:
	branch al_2744 != 0x00 l0000000000403478
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403478:
	fn0000000000405810(r14_2602, dcgettext(0x0000000000000000, 0x0000000000415CE8, 0x0000000000000005), (word32) Mem2691[rsp_1244 + 0x000000000000002F:byte], r10, fs, out r8_1048, out r9_1049, out r10)
	closedir(rax_2693)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403575:
	word64 rdx_2782 = Mem2691[rsp_1244 + 0x0000000000000040:word64]
	Mem2784[rsp_1244 + 0x0000000000000010:word64] = Mem2691[rsp_1244 + 0x0000000000000048:word64]
	Mem2785[rsp_1244 + 0x0000000000000008:word64] = rdx_2782
	word64 rax_2786 = fn0000000000410C40(0x0000000000000010)
	word64 rdx_2792 = Mem2785[rsp_1244 + 0x0000000000000008:word64]
	word64 rdi_2794 = Mem2785[0x000000000061B1C8:word64]
	Mem2796[rax_2786:word64] = Mem2785[rsp_1244 + 0x0000000000000010:word64]
	Mem2797[rax_2786 + 0x0000000000000008:word64] = rdx_2792
	rbp_1262 = rax_2786
	word64 rax_2811 = fn000000000040BB50(rax_2786, rax_2786, rdi_2794, r8_1048, r9_1049, r10, rax_2693, r14_2602, xmm0, xmm1, xmm2, out r8_1048, out r9_1049, out r10, out xmm0, out xmm1, out xmm2)
	branch rax_2811 == 0x0000000000000000 l00000000004043BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004043BB:
	fn0000000000410E50()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004035BF:
	branch rax_2786 != rax_2811 l0000000000403EE2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403EE2:
	free(rax_2786)
	r8_1048 = fn000000000040EAB0(r14_2602, r10, fs, out r9_1049, out r10)
	error(0x0000000000000000, 0x0000000000000000, dcgettext(0x0000000000000000, 0x0000000000415D10, 0x0000000000000005), 0x00000000)
	closedir(rax_2693)
	Mem2860[0x000000000061B030:word32] = 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004035C8:
	rax_2861 = Mem2797[0x000000000061AF18:word64]
	branch Mem2797[0x000000000061AF20:word64] - rax_2861 <= 0x000000000000000F l0000000000404064
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404064:
	_obstack_newchunk(0x000000000061AF00, 0x0000000000000010)
	rax_2861 = Mem2797[0x000000000061AF18:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004035E3:
	Mem2871[0x000000000061AF18:word64] = rax_2861 + 0x0000000000000010
	Mem2874[rax_2861 + 0x0000000000000008:word64] = Mem2871[rsp_1244 + 0x0000000000000040:word64]
	Mem2876[rax_2861:word64] = Mem2874[rsp_1244 + 0x0000000000000048:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004035FF:
	branch Mem2877[0x000000000061B10E:byte] != 0x00 l0000000000403615
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403608:
	branch Mem2877[0x000000000061B0D0:byte] == 0x00 l00000000004036D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403615:
	branch Mem2877[0x000000000061A3C0:byte] != 0x00 l0000000000403646
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040361E:
	word64 rdi_2885 = Mem2877[0x000000000061A610:word64]
	rax_2861 = Mem2877[rdi_2885 + 0x0000000000000028:word64]
	word32 rax_32_32_2999 = SLICE(rax_2861, word32, 32)
	branch rax_2861 >=u Mem2877[rdi_2885 + 0x0000000000000030:word64] l00000000004045E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004045E4:
	rax_2861 = SEQ(rax_32_32_2999, __overflow(rdi_2885, 0x000000000000000A)) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403633:
	Mem2892[rdi_2885 + 0x0000000000000028:word64] = rax_2861 + 0x0000000000000001
	Mem2893[rax_2861:byte] = 0x0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040363E:
	Mem2896[0x000000000061B018:word64] = Mem2894[0x000000000061B018:word64] + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403646:
	Mem2900[0x000000000061A3C0:byte] = 0x00
	word32 rax_32_32_3001 = SLICE(rax_2861, word32, 32)
	branch Mem2898[0x000000000061B130:byte] != 0x00 l0000000000403F2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403F2E:
	word32 eax_2906 = fwrite_unlocked(0x0000000000413771, 0x0000000000000001, 0x0000000000000002, Mem2900[0x000000000061A610:word64])
	Mem2908[0x000000000061B018:word64] = Mem2900[0x000000000061B018:word64] + 0x0000000000000002
	rax_2861 = SEQ(rax_32_32_3001, eax_2906) (alias)
	branch Mem2908[0x000000000061B130:byte] == 0x00 l000000000040365A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403F5E:
	rax_2861 = Mem2908[0x000000000061AF78:word64]
	branch Mem2908[0x000000000061AF80:word64] <u rax_2861 + 0x0000000000000008 l000000000040407F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040407F:
	_obstack_newchunk(0x000000000061AF60, 0x0000000000000008)
	rax_2861 = Mem2908[0x000000000061AF78:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403F76:
	Mem2921[rax_2861:word64] = Mem2908[0x000000000061B018:word64]
	Mem2923[0x000000000061AF78:word64] = Mem2921[0x000000000061AF78:word64] + 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040365A:
	word64 rdx_2936 = Mem2935[0x000000000061B0E0:word64]
	word64 rdi_2937 = Mem2935[0x000000000061A610:word64]
	branch rbx_2685 != 0x0000000000000000 l000000000040366F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040366B_1:
	rbx_2685 = r14_2602
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040366F:
	fn00000000004052D0(0x0000000000000000, rdx_2936, rbx_2685, rdi_2937, r10, rax_2688, fs, out r8_1048, out r9_1049, out r10)
	Mem3004[0x000000000061B018:word64] = Mem2935[0x000000000061B018:word64] + rax_2861
	branch Mem3004[0x000000000061B130:byte] == 0x00 l00000000004036B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403689:
	word64 rax_3007 = Mem3004[0x000000000061AF78:word64]
	branch Mem3004[0x000000000061AF80:word64] <u rax_3007 + 0x0000000000000008 l000000000040409A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040409A:
	_obstack_newchunk(0x000000000061AF60, 0x0000000000000008)
	rax_3007 = Mem3004[0x000000000061AF78:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004036A1:
	Mem3017[rax_3007:word64] = Mem3004[0x000000000061B018:word64]
	Mem3019[0x000000000061AF78:word64] = Mem3017[0x000000000061AF78:word64] + 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004036B3:
	fwrite_unlocked(0x000000000041393B, 0x0000000000000001, 0x0000000000000002, Mem3021[0x000000000061A610:word64])
	Mem3028[0x000000000061B018:word64] = Mem3021[0x000000000061B018:word64] + 0x0000000000000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004036D6:
	fn0000000000404DD0()
	word32 eax_3047 = (word32) Mem3046[rsp_1244 + 0x000000000000002F:byte]
	Mem3048[rsp_1244 + 0x0000000000000008:word64] = 0x0000000000000000
	Mem3049[rsp_1244 + 0x0000000000000010:word32] = eax_3047
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004036F0:
	Mem3051[rax_2688:word32] = 0x00000000
	word64 rax_3054 = readdir(rax_2693)
	rbp_1262 = rax_3054
	branch rax_3054 == 0x0000000000000000 l0000000000403CC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403CC0:
	branch SLICE((uint64) Mem3051[rax_2688:word32], word32, 0) == 0x00000000 l0000000000403CF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403CC8:
	fn0000000000405810(r14_2602, dcgettext(0x0000000000000000, 0x00000000004139B1, 0x0000000000000005), SLICE((uint64) Mem3051[rsp_1244 + 0x0000000000000010:word32], word32, 0), r10, fs, out r8_1048, out r9_1049, out r10)
	branch Mem3051[rax_2688:word32] == 0x0000004B l0000000000403770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403CF3:
	branch closedir(rax_2693) != 0x00000000 l0000000000403EBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403EBC:
	fn0000000000405810(r14_2602, dcgettext(0x0000000000000000, 0x00000000004139C6, 0x0000000000000005), (word32) Mem3051[rsp_1244 + 0x000000000000002F:byte], r10, fs, out r8_1048, out r9_1049, out r10)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403D03:
	word32 rsi_32_32_3154 = SLICE(fn0000000000404E80(r8_1048, rax_2688, rax_2693, r14_2602, r15, out r8_1048), word32, 32)
	branch Mem3051[0x000000000061B10E:byte] != 0x00 l0000000000403EAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403EAA:
	fn0000000000405090(SEQ(rsi_32_32_3154, (word32) Mem3051[rsp_1244 + 0x000000000000002F:byte]), r14_2602)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403D15:
	branch SLICE((uint64) Mem3051[0x000000000061B150:word32], word32, 0) == 0x00000000 l0000000000403D2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403D1F:
	branch Mem3051[0x000000000061B144:byte] == 0x00 l0000000000403E00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403D2C:
	branch Mem3051[0x000000000061B130:byte] != 0x00 l0000000000403F8D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403F8D:
	fwrite_unlocked(0x0000000000413771, 0x0000000000000001, 0x0000000000000002, Mem3051[0x000000000061A610:word64])
	Mem3182[0x000000000061B018:word64] = Mem3051[0x000000000061B018:word64] + 0x0000000000000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403D39:
	word64 rax_3187 = dcgettext(0x0000000000000000, 0x00000000004139DB, 0x0000000000000005)
	fputs_unlocked(rax_3187, Mem3188[0x000000000061A610:word64])
	word32 eax_3194 = strlen(rax_3187)
	word64 rdi_3195 = Mem3188[0x000000000061A610:word64]
	Mem3199[0x000000000061B018:word64] = Mem3188[0x000000000061B018:word64] + SEQ(SLICE(rax_3187, word32, 32), eax_3194)
	word64 rax_3200 = Mem3199[rdi_3195 + 0x0000000000000028:word64]
	branch rax_3200 >=u Mem3199[rdi_3195 + 0x0000000000000030:word64] l00000000004044EB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004044EB:
	__overflow(rdi_3195, 0x0000000000000020)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403D80:
	Mem3206[rdi_3195 + 0x0000000000000028:word64] = rax_3200 + 0x0000000000000001
	Mem3207[rax_3200:byte] = 0x20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403D8B:
	word64 r8_3209 = Mem3208[0x000000000061B138:word64]
	word32 edx_3221 = SLICE((uint64) Mem3208[0x000000000061B140:word32], word32, 0)
	word64 rdi_3216 = Mem3208[rsp_1244 + 0x0000000000000008:word64]
	Mem3219[0x000000000061B018:word64] = Mem3208[0x000000000061B018:word64] + 0x0000000000000001
	word64 rax_3237 = fn000000000040BD70(0x0000000000000200, edx_3221, rsp_1244 + 0x00000000000000E0, rdi_3216, r8_3209, fs, Top, out r8_1048, out r9_1049)
	fputs_unlocked(rax_3237, Mem3219[0x000000000061A610:word64])
	word32 eax_3251 = strlen(rax_3237)
	word64 rdi_3252 = Mem3219[0x000000000061A610:word64]
	Mem3256[0x000000000061B018:word64] = Mem3219[0x000000000061B018:word64] + SEQ(SLICE(rax_3237, word32, 32), eax_3251)
	word64 rax_3257 = Mem3256[rdi_3252 + 0x0000000000000028:word64]
	branch rax_3257 >=u Mem3256[rdi_3252 + 0x0000000000000030:word64] l00000000004044DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004044DC:
	__overflow(rdi_3252, 0x000000000000000A)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403DED:
	Mem3263[rdi_3252 + 0x0000000000000028:word64] = rax_3257 + 0x0000000000000001
	Mem3264[rax_3257:byte] = 0x0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403DF8:
	Mem3267[0x000000000061B018:word64] = Mem3265[0x000000000061B018:word64] + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403E00:
	branch Mem3269[0x000000000061B1B0:word64] == 0x0000000000000000 l00000000004034A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403E0E:
	r8_1048 = fn00000000004079F0(r10, rax_2688, r15, fs, Top, out r9_1049, out r10)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004034A1:
	word64 rbx_3312 = Mem3311[rsp_1244 + 0x0000000000000018:word64]
	free(Mem3311[rbx_3312:word64])
	free(Mem3311[rbx_3312 + 0x0000000000000008:word64])
	free(rbx_3312)
	Mem3316[0x000000000061B0D0:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004034C6:
	Mem3320[rsp_1244 + 0x0000000000000018:word64] = Mem3317[0x000000000061B190:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040370C:
	word32 eax_3323 = SLICE((uint64) Mem3051[0x000000000061B108:word32], word32, 0)
	branch eax_3323 == 0x00000002 l0000000000403C78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040371F:
	branch Mem3051[rax_3054 + 0x0000000000000013:byte] == 0x2E l0000000000403C58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403C58:
	branch eax_3323 == 0x00000000 l0000000000403770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403C60:
	branch Mem3051[rax_3054 + 0x0000000000000014 + (uint64) ((uint8) (Mem3051[rax_3054 + 0x0000000000000014:byte] == 0x2E)):byte] == 0x00 l0000000000403770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403C74:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403729:
	branch eax_3323 != 0x00000000 l0000000000403C78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403731:
	r15 = Mem3051[0x000000000061B0F8:word64]
	branch r15 != 0x0000000000000000 l0000000000403755
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403755:
	branch fnmatch(Mem3051[r15:word64], rax_3054 + 0x0000000000000013, 0x0000000000000004) != 0x00000000 l0000000000403748
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403748:
	r15 = Mem3051[r15 + 0x0000000000000008:word64]
	branch r15 == 0x0000000000000000 l0000000000403C78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403769:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040373D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403C78:
	r15 = Mem3051[0x000000000061B100:word64]
	branch r15 != 0x0000000000000000 l0000000000403C9D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403C9D:
	branch fnmatch(Mem3051[r15:word64], rax_3054 + 0x0000000000000013, 0x0000000000000004) != 0x00000000 l0000000000403C90
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403C90:
	r15 = Mem3051[r15 + 0x0000000000000008:word64]
	branch r15 == 0x0000000000000000 l0000000000403E20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403CB1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403C84:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403E20:
	word64 rax_3386 = (uint64) ((word32) Mem3051[rax_3054 + 0x0000000000000012:byte] - 0x00000001)
	word32 esi_3408 = 0x00000000
	byte al_3387 = SLICE(rax_3386, byte, 0)
	word32 rax_32_32_3391 = SLICE(rax_3386, word32, 32)
	branch al_3387 >u 0x0D l0000000000403E37
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403E2D:
	esi_3408 = SLICE((uint64) Mem3051[SEQ(rax_32_32_3391, (word32) al_3387) * 0x0000000000000004 + 0x00412C00:word32], word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403E37:
	Mem3443[rsp_1244 + 0x0000000000000008:word64] = Mem3051[rsp_1244 + 0x0000000000000008:word64] + fn0000000000407EA0(r14_2602, 0x00000000, esi_3408, rax_3054 + 0x0000000000000013, r10, fs, Top, out r9_1049)
	branch Mem3443[0x000000000061B150:word32] != 0x00000001 l0000000000403770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403E56:
	branch Mem3443[0x000000000061B148:word32] != 0xFFFFFFFF l0000000000403770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403E63:
	branch Mem3443[0x000000000061B144:byte] != 0x00 l0000000000403770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403E70:
	branch Mem3443[0x000000000061B10E:byte] != 0x00 l0000000000403770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403E7D:
	word64 r8_4575
	fn0000000000404E80(r8_1048, rax_2688, rax_2693, r14_2602, r15, out r8_4575)
	r8_1048 = fn00000000004079F0(r10, rax_2688, r15, fs, Top, out r9_1049, out r10)
	fn0000000000404DD0()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403770:
	fn0000000000406490()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402B5A:
	word64 rax_809 = (uint64) (eax_398 + 0x00000083)
	word32 eax_810 = SLICE(rax_809, word32, 0)
	word32 rax_32_32_825 = SLICE(rax_809, word32, 32)
	branch eax_810 >u 0x00000112 l00000000004031F9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402B6A:
	switch (eax_810) { l0000000000402DFF l0000000000402DF8 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l0000000000402DDC l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l0000000000402DC0 l0000000000402D75 l0000000000402D66 l0000000000402D5A l00000000004031F9 l0000000000402D4B l0000000000402D3F l0000000000402D30 l0000000000402D05 l00000000004031F9 l00000000004031F9 l0000000000402CF6 l00000000004031F9 l0000000000402CE8 l00000000004031F9 l00000000004031F9 l0000000000402CD7 l0000000000402CCB l0000000000402CB6 l0000000000402C85 l0000000000402C70 l00000000004031F9 l00000000004031F9 l0000000000402C5B l00000000004031F9 l0000000000402C4F l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l0000000000402C40 l0000000000402C2F l0000000000402C20 l0000000000402C14 l00000000004031F9 l0000000000402BDA l0000000000402BC4 l0000000000402B95 l0000000000402B8C l00000000004031F9 l0000000000402B84 l0000000000402B78 l00000000004031C7 l0000000000402B71 l00000000004031B1 l00000000004031A2 l0000000000403196 l000000000040318A l000000000040317E l0000000000403169 l000000000040315A l0000000000403145 l00000000004030DC l00000000004030CD l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004030C1 l0000000000403084 l000000000040302E l000000000040301F l0000000000403010 l0000000000402FD6 l0000000000402FC1 l0000000000402FB5 l0000000000402F8A l0000000000402F50 l0000000000402F15 l0000000000402F09 l0000000000402EDA l0000000000402E9A l0000000000402E60 l0000000000402E54 }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402E54:
	r12_3523 = Mem397[0x000000000061A640:word64]
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402E60:
	Mem841[0x000000000061B14C:word32] = SLICE((uint64) Mem397[fn000000000040A120(rax_32_32_825, 0x0000000000412F50, 0x0000000000412F80, rbx_4588, rbp_1262, Mem397[0x000000000061A640:word64], 0x0000000000413883, 0x0000000000000004, Mem397[0x000000000061A578:word64], r10, r12_3523, r13_4590, r14_1004, r15, fs, out r9_1049, out r10) * 0x0000000000000004 + 0x00412F50:word32], word32, 0)
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402E9A:
	Mem864[0x000000000061B148:word32] = SLICE((uint64) Mem397[fn000000000040A120(rax_32_32_825, 0x0000000000412FB0, 0x0000000000412FE0, rbx_4588, rbp_1262, Mem397[0x000000000061A640:word64], 0x000000000041387C, 0x0000000000000004, Mem397[0x000000000061A578:word64], r10, r12_3523, 0x0000000000000001, r14_1004, r15, fs, out r9_1049, out r10) * 0x0000000000000004 + 0x00412FB0:word32], word32, 0)
	r13_3524 = 0x0000000000000001 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402EDA:
	Mem865[0x000000000061B140:word32] = 0x00000090
	Mem866[0x000000000061B134:word32] = 0x00000090
	Mem867[0x000000000061B138:word64] = 0x0000000000000001
	Mem868[0x000000000061A560:word64] = 0x0000000000000001
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402F09:
	Mem869[0x000000000061B0F0:byte] = 0x00
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402F15:
	fn000000000040E640(SLICE((uint64) Mem397[fn000000000040A120(rax_32_32_825, 0x0000000000416460, 0x0000000000416480, rbx_4588, rbp_1262, Mem397[0x000000000061A640:word64], 0x00000000004138AD, 0x0000000000000004, Mem397[0x000000000061A578:word64], r10, r12_3523, r13_4590, r14_1004, r15, fs, out r9_1049, out r10) * 0x0000000000000004 + 0x00416460:word32], word32, 0), 0x0000000000000000)
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402F50:
	Mem921[0x000000000061B12C:word32] = SLICE((uint64) Mem397[fn000000000040A120(rax_32_32_825, 0x00000000004136B0, 0x00000000004136C0, rbx_4588, rbp_1262, Mem397[0x000000000061A640:word64], 0x000000000041389B, 0x0000000000000004, Mem397[0x000000000061A578:word64], r10, r12_3523, r13_4590, r14_1004, r15, fs, out r9_1049, out r10) * 0x0000000000000004 + 0x004136B0:word32], word32, 0)
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402F8A:
	word64 rax_923 = fn0000000000410C40(0x0000000000000010)
	Mem929[rax_923:word64] = Mem397[0x000000000061A640:word64]
	word64 rdx_930 = Mem929[0x000000000061B0F8:word64]
	Mem931[0x000000000061B0F8:word64] = rax_923
	Mem932[rax_923 + 0x0000000000000008:word64] = rdx_930
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402FB5:
	Mem933[0x000000000061B10C:byte] = 0x01
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402FC1:
	Mem934[0x000000000061B150:word32] = 0x00000000
	r12_3523 = 0x0000000000413813
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402FD6:
	Mem957[0x000000000061B150:word32] = SLICE((uint64) Mem397[fn000000000040A120(rax_32_32_825, 0x0000000000413010, 0x0000000000413040, rbx_4588, rbp_1262, Mem397[0x000000000061A640:word64], 0x000000000041388A, 0x0000000000000004, Mem397[0x000000000061A578:word64], r10, r12_3523, r13_4590, r14_1004, r15, fs, out r9_1049, out r10) * 0x0000000000000004 + 0x00413010:word32], word32, 0)
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403010:
	Mem958[0x000000000061B12C:word32] = 0x00000002
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040301F:
	Mem959[0x000000000061B110:word32] = 0x00000004
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040302E:
	word64 rsi_960 = Mem397[0x000000000061A640:word64]
	branch rsi_960 == 0x0000000000000000 l0000000000403A7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040303E:
	word32 eax_983 = SLICE((uint64) Mem397[fn000000000040A120(rax_32_32_825, 0x0000000000412EC0, 0x0000000000412F00, rbx_4588, rbp_1262, rsi_960, 0x0000000000413893, 0x0000000000000004, Mem397[0x000000000061A578:word64], r10, r12_3523, r13_4590, r14_1004, r15, fs, out r9_1049, out r10) * 0x0000000000000004 + 0x00412EC0:word32], word32, 0)
	branch eax_983 == 0x00000001 l0000000000403A7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040306F:
	branch eax_983 == 0x00000002 l0000000000403A6A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403A6A:
	branch isatty(0x0000000000000001) == 0x00000000 l0000000000403078
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403A7C:
	Mem993[0x000000000061B129:byte] = 0x01
	Mem994[0x000000000061B0D8:word64] = 0x0000000000000000
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403078:
	Mem995[0x000000000061B129:byte] = 0x00
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403084:
	word64 r8_4572
	word32 eax_1012 = SLICE((uint64) (uint32) fn000000000040C810(rax_32_32_825, 0x000000000061B138, 0x000000000061B140, Mem397[0x000000000061A640:word64], r8_1048, r9_1049, r14_1004, r15, out r8_4572, out r9_1049, out r14_1004, out r15), word32, 0)
	branch eax_1012 != 0x00000000 l00000000004043C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004043C0:
	fn00000000004112D0(SLICE((uint64) Mem397[rsp_1244 + 0x0000000000000038:word32], word32, 0), SLICE((uint64) eax_1012, word32, 0))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004030A2:
	Mem3508[0x000000000061B134:word32] = SLICE((uint64) Mem397[0x000000000061B140:word32], word32, 0)
	Mem3510[0x000000000061A560:word64] = Mem3508[0x000000000061B138:word64]
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004030C1:
	Mem3511[0x000000000061B146:byte] = 0x01
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004030CD:
	Mem3512[0x000000000061B150:word32] = 0x00000003
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004030DC:
	branch SLICE((uint64) (uint32) fn0000000000410E90(Mem397[rsp_1244 + 0x0000000000000020:word64], 0x00000000, rbx_4588, rbp_1262, 0x0000000000000000, Mem397[0x000000000061A640:word64], 0x0000000000000000, r9_32_32_3522, r12_3523, r13_4590, r14_1004, r15, out rbx_3530, out rsp_1244, out rbp_1262, out r9_1049, out r12_3523, out r13_3524, out r14_1004, out r15), word32, 0) != 0x00000000 l0000000000403100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004030F8:
	branch Mem397[rsp_1244 + 0x0000000000000040:word64] != 0x0000000000000000 l0000000000403134
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403100:
	word64 r8_4573
	r15 = fn000000000040E930(Mem397[0x000000000061A640:word64], r10, fs, out r8_4573, out r9_1049, out r10)
	error(0x0000000000000002, 0x0000000000000000, dcgettext(0x0000000000000000, 0x000000000041384C, 0x0000000000000005), 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403134:
	Mem3581[0x000000000061B0C8:word64] = Mem397[rsp_1244 + 0x0000000000000040:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403145:
	Mem3582[0x000000000061B148:word32] = 0x00000003
	r13_3524 = 0x0000000000000001 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040315A:
	Mem3584[0x000000000061B14C:word32] = 0x00000002
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403169:
	Mem3585[0x000000000061B148:word32] = 0x00000004
	r13_3524 = 0x0000000000000001 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040317E:
	Mem3587[0x000000000061B144:byte] = 0x01
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040318A:
	Mem3588[0x000000000061B147:byte] = 0x01
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403196:
	Mem3589[0x000000000061B0F0:byte] = 0x01
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004031A2:
	Mem3590[0x000000000061B12C:word32] = 0x00000001
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004031B1:
	Mem3591[0x000000000061B150:word32] = 0x00000000
	Mem3592[0x000000000061A568:byte] = 0x00
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402B71:
	Mem3593[0x000000000061B145:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004031C7:
	Mem3594[0x000000000061B150:word32] = 0x00000004
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402B78:
	Mem3595[0x000000000061B150:word32] = 0x00000000
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402B84:
	r14_1004 = 0x0000000000000001
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402B8C:
	Mem3597[0x000000000061B114:byte] = 0x01
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402B95:
	Mem3598[0x000000000061B140:word32] = 0x000000B0
	Mem3599[0x000000000061B134:word32] = 0x000000B0
	Mem3600[0x000000000061B138:word64] = 0x0000000000000001
	Mem3601[0x000000000061A560:word64] = 0x0000000000000001
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402BC4:
	Mem3602[0x000000000061B150:word32] = 0x00000000
	Mem3603[0x000000000061A569:byte] = 0x00
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402BDA:
	Mem3605[0x000000000061B108:word32] = 0x00000002
	Mem3606[0x000000000061B148:word32] = 0xFFFFFFFF
	branch Mem397[0x000000000061B150:word32] == 0x00000000 l0000000000403C36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403C36:
	Mem3617[0x000000000061B150:word32] = SLICE((uint64) (SLICE((uint64) (0x00000000 - SLICE(cond(isatty(0x0000000000000001) - 0x00000001), bool, 1)), word32, 0) + 0x00000002), word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402BFB:
	Mem3618[0x000000000061B144:byte] = 0x00
	Mem3619[0x000000000061B129:byte] = 0x00
	r13_3524 = 0x0000000000000001 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402C14:
	Mem3621[0x000000000061B10D:byte] = 0x01
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402C20:
	Mem3622[0x000000000061B14C:word32] = 0x00000001
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402C2F:
	fn000000000040E640(0x00000005, 0x0000000000000000)
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402C40:
	Mem3634[0x000000000061B108:word32] = 0x00000002
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402C4F:
	Mem3635[0x000000000061B17D:byte] = 0x01
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402C5B:
	Mem3636[0x000000000061B148:word32] = 0x00000001
	r13_3524 = 0x0000000000000001 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402C70:
	Mem3638[0x000000000061B148:word32] = 0xFFFFFFFF
	r13_3524 = 0x0000000000000001 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402C85:
	branch SLICE((uint64) (uint32) fn0000000000410E90(Mem397[rsp_1244 + 0x0000000000000020:word64], 0x00000000, rbx_4588, rbp_1262, 0x0000000000000000, Mem397[0x000000000061A640:word64], 0x0000000000000000, r9_32_32_3522, r12_3523, r13_4590, r14_1004, r15, out rbx_3530, out rsp_1244, out rbp_1262, out r9_1049, out r12_3523, out r13_3524, out r14_1004, out r15), word32, 0) != 0x00000000 l0000000000403BFD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403BFD:
	word64 r8_4578
	r15 = fn000000000040E930(Mem397[0x000000000061A640:word64], r10, fs, out r8_4578, out r9_1049, out r10)
	error(0x0000000000000002, 0x0000000000000000, dcgettext(0x0000000000000000, 0x0000000000413867, 0x0000000000000005), 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402CA5:
	Mem3701[0x000000000061B0D8:word64] = Mem397[rsp_1244 + 0x0000000000000040:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402CB6:
	Mem3702[0x000000000061B148:word32] = 0x00000002
	r13_3524 = 0x0000000000000001 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402CCB:
	Mem3704[0x000000000061B10E:byte] = 0x01
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402CD7:
	fn000000000040E640(0x00000003, 0x0000000000000000)
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402CE8:
	fn000000000040E640(0x00000000, 0x0000000000000000)
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402CF6:
	Mem3727[0x000000000061B110:word32] = 0x00000005
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402D05:
	r15 = Mem397[0x000000000061A640:word64]
	word64 rax_3730 = fn0000000000410C40(0x0000000000000010)
	word64 rdx_3735 = Mem397[0x000000000061B100:word64]
	Mem3736[rax_3730:word64] = r15
	Mem3737[rax_3730 + 0x0000000000000008:word64] = rdx_3735
	Mem3738[0x000000000061B100:word64] = rax_3730
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402D30:
	Mem3739[0x000000000061B110:word32] = 0x00000003
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402D3F:
	Mem3740[0x000000000061A568:byte] = 0x00
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402D4B:
	Mem3741[0x000000000061B12C:word32] = 0x00000003
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402D5A:
	Mem3742[0x000000000061B130:byte] = 0x01
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402D66:
	Mem3743[0x000000000061B150:word32] = 0x00000002
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402D75:
	word64 rax_3745 = fn0000000000410C40(0x0000000000000010)
	word64 rdx_3750 = Mem397[0x000000000061B100:word64]
	Mem3751[rax_3745:word64] = 0x0000000000413864
	Mem3753[0x000000000061B100:word64] = rax_3745
	Mem3754[rax_3745 + 0x0000000000000008:word64] = rdx_3750
	word64 rax_3755 = fn0000000000410C40(0x0000000000000010)
	word64 rdx_3760 = Mem3754[0x000000000061B100:word64]
	Mem3761[rax_3755:word64] = 0x0000000000413863
	Mem3762[rax_3755 + 0x0000000000000008:word64] = rdx_3760
	Mem3763[0x000000000061B100:word64] = rax_3755
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402DC0:
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
	rbx_4588 = rbx_3530
	r13_4590 = r13_3524
	branch Mem397[0x000000000061B108:word32] != 0x00000000 l0000000000402B30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402DCD:
	Mem3766[0x000000000061B108:word32] = 0x00000001
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402DDC:
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
	rbx_4589 = rbx_3530
	r13_4591 = r13_3524
	branch Mem397[0x000000000061B150:word32] == 0x00000000 l0000000000402B30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402DE9:
	Mem3769[0x000000000061B150:word32] = 0x00000001
	r13_3524 = r13_4590 (alias)
	rbx_3530 = rbx_4588 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004031F9:
	fn0000000000409750(0x00000002)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402DF8:
	fn0000000000409750(0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402DFF:
	word64 rsi_3793
	word32 eax_3790 = SLICE((uint64) Mem397[0x000000000061A56C:word32], word32, 0)
	word64 rcx_3789 = Mem397[0x000000000061A570:word64]
	branch eax_3790 == 0x00000001 l0000000000403BF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403BF3:
	rsi_3793 = 0x0000000000413807
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402E15:
	rsi_3793 = 0x000000000041380F
	branch eax_3790 == 0x00000002 l0000000000402E26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402E22_1:
	rsi_3793 = 0x000000000041380E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402E26:
	word64 rdi_3800 = Mem397[0x000000000061A610:word64]
	Mem3802[rsp_1244:word64] = 0x0000000000000000
	fn0000000000410B30(0x00, rcx_3789, rbx_4588, rbp_1262, rsi_3793, rdi_3800, r12_3523, r13_4590, r14_1004, r15)
	exit(0x0000000000000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402985:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000404890(word64 rdx, word64 qwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdx:[0..63] Stack +0000:[0..63]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000404890_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000404890_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404890:
	__align(fp + 8)
	__libc_start_main(0x00000000004028C0, qwArg00, fp + 8, 0x0000000000411E60, 0x0000000000411ED0, rdx, fp)
	__hlt()
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00000000004048C0(word64 rbp, word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8:[0..63] rbp:[0..63]
// LiveOut:
// Trashed: SCZO r8 rax rdi
// Preserved: rbp rsp
fn00000000004048C0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004048C0:
	branch false l00000000004048D7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004048D7:
	branch 0x0000000000000000 == 0x0000000000000000 l00000000004048D5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004048E1:
	call 0x0000000000000000 (retsize: 8;)
		uses: r8:r8 - 6399480,rax:0x0000000000000000,rdi:0x000000000061A5F8,Stack +0000:rbp
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004048D5:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00000000004048C0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn00000000004049E0(word64 rcx, byte dl, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r12, word64 r14, ptr64 & rbxOut, ptr64 & rspOut, ptr64 & rbpOut, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dl:[0..7] r12:[0..63] r14:[0..63] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut: r10 r12 r8 r9 rax rbp rbx rsp
// Trashed: SCZO dl r10 r11 r12 r8 r9 rax rbp rbx rcx rdi rsi rsp
// Preserved: r14
fn00000000004049E0_entry:
	word32 rcx_32_32_190 = SLICE(rcx, word32, 32)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004049E0:
	word64 r8_116 = Mem5[rsi:word64]
	word64 r9_10 = Mem5[rdi:word64]
	word64 r10_107 = 0x0000000000000000
	word64 r11_12 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A06:
	word64 rax_281
	byte al_142
	word32 eax_123
	word32 eax_175
	byte SZO_145
	byte al_130
	word32 r11_32_32_404 = SLICE(r11_12, word32, 32)
	word32 rax_32_32_124 = 0x00000000
	branch 0xFFFFFFFE == 0x00000000 l0000000000404A59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A59:
	word64 rax_36 = (uint64) (uint32) (word32) Mem122[r8_116:byte]
	word32 r11_32_32_357 = SLICE(r11_12, word32, 32)
	rax_32_32_124 = 0x00000000
	branch SLICE(rax_36 - 0x0000000000000030, byte, 0) <=u 0x07 l0000000000404A50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A50:
	r8_116 = r8_116 + 0x0000000000000001
	r11_12 = SEQ(r11_32_32_357, rax_36 - 0x0000000000000030 + r11_12 * 0x0000000000000008) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A0B:
	branch false l0000000000404B20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B20:
	branch true l0000000000404A70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A11:
	branch 0xFFFFFFFD == 0x00000000 l0000000000404AE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404AE0:
	word64 rax_54 = SEQ(rax_32_32_124, (word32) Mem122[r8_116:byte])
	word32 r11d_366 = r11_12
	r11_12 = SEQ(SEQ(r11_32_32_404, SLICE(r11_12, word24, 8)), SLICE(r11_12, byte, 0)) (alias)
	word32 ecx_579 = SLICE(rax_54 - 0x0000000000000030, word32, 0)
	branch SLICE(rax_54 - 0x0000000000000030, byte, 0) >u 0x36 l0000000000404A65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404AF0:
	word64 r14_62 = 0x0000000000000001 << SLICE(ecx_579, byte, 0)
	rax_32_32_124 = SLICE(rax_54, word32, 32) (alias)
	rax_32_32_124 = SLICE(rax_54, word32, 32) (alias)
	rax_32_32_124 = SLICE(rax_54, word32, 32) (alias)
	rax_32_32_124 = SLICE(rax_54, word32, 32) (alias)
	byte r11b_97 = SLICE(r11d_366, byte, 0)
	word24 r11d_24_8_113 = SLICE(r11d_366, word24, 8)
	word32 r14d_90 = SLICE(r14_62, word32, 0)
	branch (SLICE(r14_62, word32, 0) & 0x007E0000) != 0x00000000 l0000000000404B78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B78:
	word64 r11_70 = (uint64) (r11d_366 << 0x00000004)
	r8_116 = r8_116 + 0x0000000000000001
	r11d_366 = rax_54 - 0x0000000000000037 + r11_70
	rax_54 = SEQ(rax_32_32_124, (word32) Mem122[r8_116:byte]) (alias)
	r11_32_32_404 = SLICE(r11_70, word32, 32) (alias)
	r11_12 = SEQ(SEQ(SLICE(r11_70, word32, 32), SLICE(r11d_366, word24, 8)), SLICE(r11d_366, byte, 0)) (alias)
	branch SLICE(rax_54 - 0x0000000000000030, byte, 0) >u 0x36 l0000000000404A65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B95:
	ecx_579 = SLICE(rax_54 - 0x0000000000000030, word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404AFF:
	branch (r14_62 & 0x0000000000000000) != 0x0000000000000000 l0000000000404AD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404AD0:
	word64 r11_86 = (uint64) (r11d_366 << 0x00000004)
	r11_32_32_404 = SLICE(r11_86, word32, 32) (alias)
	r8_116 = r8_116 + 0x0000000000000001
	r11_12 = rax_54 - 0x0000000000000057 + r11_86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B04:
	r11_12 = SEQ(SEQ(r11_32_32_404, r11d_24_8_113), r11b_97) (alias)
	branch (r14d_90 & 0x000003FF) == 0x00000000 l0000000000404A65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A65:
	Mem104[r9_10:byte] = SLICE(r11_12, byte, 0)
	r10_107 = r10_107 + 0x0000000000000001
	r9_10 = r9_10 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B11:
	word64 r11_115 = (uint64) (r11d_366 << 0x00000004)
	r11_32_32_404 = SLICE(r11_115, word32, 32) (alias)
	r8_116 = r8_116 + 0x0000000000000001
	r11_12 = rax_54 - 0x0000000000000030 + r11_115
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A1A:
	branch true l0000000000404A70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A22:
	eax_123 = (word32) Mem122[r8_116:byte]
	al_130 = SLICE(eax_123, byte, 0) (alias)
	branch SLICE((uint64) (uint32) eax_123 - 0x0000000000000040, byte, 0) <=u 0x3E l0000000000404AA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A2E:
	branch al_130 == 0x3F l0000000000404CB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404CB0:
	Mem134[r9_10:byte] = 0x7F
	r10_107 = r10_107 + 0x0000000000000001
	r9_10 = r9_10 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A70:
	al_142 = SLICE((word32) Mem140[r8_116:byte], byte, 0) (alias)
	SZO_145 = SLICE(cond(al_142 - 0x3D), bool, 4) (alias)
	branch al_142 == 0x3D l0000000000404ABA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A78:
	branch SZO_145 l0000000000404B40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B40:
	branch al_142 == 0x00 l0000000000404B48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B44:
	branch al_142 != 0x3A l0000000000404B60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B48:
	eax_175 = 0x00000005 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A7E:
	branch al_142 == 0x5C l0000000000404CA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404CA0:
	r8_116 = r8_116 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B29:
	word32 eax_161 = (word32) Mem159[r8_116:byte]
	byte al_162 = SLICE(eax_161, byte, 0)
	word56 rax_56_8_206 = SEQ(rax_32_32_124, SLICE(eax_161, word24, 8))
	branch al_162 >u 0x78 l0000000000404C90
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404C90:
	word64 r11_165 = (uint64) eax_161
	byte r11b_166 = SLICE(r11_165, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404BD0:
	Mem169[r9_10:byte] = r11b_166
	r10_107 = r10_107 + 0x0000000000000001
	r9_10 = r9_10 + 0x0000000000000001
	eax_175 = 0x00000000 (alias)
	r11_12 = r11_165 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404BB0:
	r8_116 = r8_116 + 0x0000000000000001
	branch false l0000000000404A06
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404BBD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B4D:
	rax_281 = SEQ(0x00000000, SLICE(eax_175, word24, 8), eax_175 != 0x00000006) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B35:
	word64 rcx_191 = SEQ(rcx_32_32_190, (word32) al_162)
	word64 r8_198
	word64 rax_208
	word64 r9_209
	word64 r10_214
	call Mem159[rcx_191 * 0x0000000000000008 + 0x00411F40:word64] (retsize: 8;)
		uses: dl:dl,r10:r10_170,r11:r11_215,r8:r8_158,r9:r9_167,rax:SEQ(rax_56_8_206, al_162),rcx:rcx_191,rdi:rdi,rsi:rsi,Stack +0008:rbx,Stack +0010:rbp,Stack +0018:r12,Stack +0020:r14
		defs: r10:r10_214,r8:r8_198,r9:r9_209,rax:rax_208
	rbxOut = 0x0000000000000001
	rspOut = fp - 32
	rbpOut = rcx
	r8Out = r8_198
	r9Out = r9_209
	r10Out = r10_214
	r12Out = 0x0000000000000000
	return (byte) rax_208
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A86:
	branch al_142 != 0x5E l0000000000404B60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A8E:
	r8_116 = r8_116 + 0x0000000000000001
	eax_123 = (word32) Mem160[r8_116:byte]
	al_130 = SLICE(eax_123, byte, 0) (alias)
	branch SLICE(SEQ(rax_32_32_124, eax_123) - 0x0000000000000040, byte, 0) >u 0x3E l0000000000404A2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A9E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404AA0:
	word64 rax_247 = (uint64) (eax_123 & 0x0000001F)
	Mem254[r9_10:byte] = SLICE(rax_247, byte, 0)
	r8_116 = r8_116 + 0x0000000000000001
	al_142 = SLICE((word32) Mem254[r8_116:byte], byte, 0) (alias)
	rax_32_32_124 = SLICE(rax_247, word32, 32) (alias)
	r10_107 = r10_107 + 0x0000000000000001
	r9_10 = r9_10 + 0x0000000000000001
	SZO_145 = SLICE(cond(al_142 - 0x3D), bool, 4) (alias)
	branch al_142 != 0x3D l0000000000404A78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404ABA:
	branch dl == 0x00 l0000000000404B60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B60:
	Mem271[r9_10:byte] = al_142
	r8_116 = r8_116 + 0x0000000000000001
	r10_107 = r10_107 + 0x0000000000000001
	r9_10 = r9_10 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404AC2:
	rax_281 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A36:
	rax_281 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A38:
	Mem301[rdi:word64] = r9_10
	Mem318[rsi:word64] = r8_116
	Mem334[rcx:word64] = r10_107
	rbxOut = rbx
	rspOut = fp
	rbpOut = rbp
	r8Out = r8_116
	r9Out = r9_10
	r10Out = r10_107
	r12Out = r12
	return (byte) rax_281
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00000000004049E0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000404CD0(word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rsp
fn0000000000404CD0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404CD0:
	word64 rdi_4 = (uint64) edi
	word64 rax_19 = 0x0000000000000000
	word64 rdx_8 = Mem0[(rdi_4 << 0x0000000000000004) + 0x000000000061A3E0:word64]
	word64 rsi_24 = Mem0[(rdi_4 << 0x0000000000000004) + 0x000000000061A3E8:word64]
	branch rdx_8 == 0x0000000000000000 l0000000000404CFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404CEB:
	branch rdx_8 == 0x0000000000000001 l0000000000404D10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D10:
	return (uint64) (uint8) (Mem0[rsi_24:byte] != 0x30)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404CF1:
	bool Z_20 = SLICE(cond(rdx_8 - 0x0000000000000002), bool, 2)
	rax_19 = 0x0000000000000001
	branch rdx_8 == 0x0000000000000002 l0000000000404D00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D00:
	word64 rdi_21 = 0x0000000000413733
	word64 rcx_22 = 0x0000000000000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D0A:
	branch rcx_22 == 0x0000000000000000 l0000000000404D0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D0A_1:
	Z_20 = SLICE(cond(Mem0[rsi_86:byte] - Mem0[rdi_87:byte]), bool, 2) (alias)
	rsi_24 = rsi_86 + 0x0000000000000001
	rdi_21 = rdi_87 + 0x0000000000000001
	rcx_22 = rcx_22 - 0x0000000000000001
	rsi_86 = rsi_24
	rdi_87 = rdi_21
	branch Mem0[rsi_86:byte] != Mem0[rdi_87:byte] l0000000000404D0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D0C:
	return (uint64) (1) Z_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404CFC:
	return rax_19
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000404CD0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000404D20(word32 edx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rdx:[0..31] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rdi rdx rsi
// Preserved: r12 r13 rbp rbx rsp
fn0000000000404D20_entry:
	word32 edx = SLICE(rdx, word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D20:
	byte r13b_68 = SLICE((uint64) edx, byte, 0)
	word64 rax_24 = fn0000000000410C40(0x0000000000000020)
	word64 rax_30 = 0x0000000000000000
	branch rsi == 0x0000000000000000 l0000000000404D4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D47:
	rax_30 = fn0000000000410E30(0x00000000, rsi)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D4F:
	Mem46[rax_24 + 0x0000000000000008:word64] = rax_30
	word64 rax_47 = 0x0000000000000000
	branch rdi == 0x0000000000000000 l0000000000404D62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D5A:
	rax_47 = fn0000000000410E30(0x00000000, rdi)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D62:
	Mem64[rax_24:word64] = rax_47
	word64 rax_65 = Mem64[0x000000000061B190:word64]
	Mem69[rax_24 + 0x0000000000000010:byte] = r13b_68
	Mem70[0x000000000061B190:word64] = rax_24
	Mem71[rax_24 + 0x0000000000000018:word64] = rax_65
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000404D20_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000404D90(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut:
// Trashed: SCZO rdi
// Preserved: rbx rsp
fn0000000000404D90_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D90:
	free(Mem5[rdi:word64])
	free(Mem5[rdi + 0x0000000000000008:word64])
	word64 rdi_10 = Mem5[rdi + 0x00000000000000A8:word64]
	branch rdi_10 == 0x000000000061A56A l0000000000404DC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404DC0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404DB5:
	freecon(rdi_10)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000404D90_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000404DD0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rax rdi
// Preserved: rbx rsp
fn0000000000404DD0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404DD0:
	word64 rbx_11 = 0x0000000000000000
	branch Mem5[0x000000000061B1B0:word64] == 0x0000000000000000 l0000000000404DFD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404DDD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404DE0:
	fn0000000000404D90(Mem5[Mem5[0x000000000061B1A8:word64] + rbx_11 * 0x0000000000000008:word64])
	rbx_11 = rbx_11 + 0x0000000000000001
	branch Mem5[0x000000000061B1B0:word64] >u rbx_11 l0000000000404DE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404DFD:
	Mem22[0x000000000061B1B0:word64] = 0x0000000000000000
	Mem23[0x000000000061B17C:byte] = 0x00
	Mem24[0x000000000061B178:word32] = 0x00000000
	Mem25[0x000000000061B174:word32] = 0x00000000
	Mem26[0x000000000061B170:word32] = 0x00000000
	Mem27[0x000000000061B168:word32] = 0x00000000
	Mem28[0x000000000061B164:word32] = 0x00000000
	Mem29[0x000000000061B160:word32] = 0x00000000
	Mem30[0x000000000061B16C:word32] = 0x00000000
	Mem31[0x000000000061B15C:word32] = 0x00000000
	Mem32[0x000000000061B158:word32] = 0x00000000
	Mem33[0x000000000061B154:word32] = 0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000404DD0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000404E80(word64 r8, word64 r12, word64 r13, word64 r14, word64 r15, ptr64 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] r8:[32..63]
// LiveOut: r8 rsi
// Trashed: SCZO r8 rax rcx rdi rdx rsi
// Preserved: rbp rbx rsp
fn0000000000404E80_entry:
	word32 r8_32_32 = SLICE(r8, word32, 32)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404E80:
	word64 rbx_10 = Mem8[0x000000000061B1B0:word64]
	word64 rbp_12 = rbx_10
	word64 rax_14 = (rbx_10 >>u 0x0000000000000001) + rbx_10
	branch rax_14 >u Mem8[0x000000000061B1A0:word64] l0000000000404F98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404F98:
	free(Mem8[0x000000000061B1A8:word64])
	branch rbx_10 >u 0x00000000AAAAAAAA l0000000000404FF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404FF8:
	fn0000000000410E50()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404FB3:
	word64 rax_24 = fn0000000000410C40(rbx_10 * 0x0000000000000018)
	rbp_12 = Mem8[0x000000000061B1B0:word64]
	Mem30[0x000000000061B1A8:word64] = rax_24
	Mem32[0x000000000061B1A0:word64] = rbp_12 * 0x0000000000000003
	rax_14 = rbp_12 * 0x0000000000000003 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404EA6:
	word64 rax_269 = rax_14
	branch rbp_12 == 0x0000000000000000 l0000000000404ED3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404EAB:
	rax_269 = Mem37[0x000000000061B1A8:word64]
	word64 rdx_39 = Mem37[0x000000000061B1C0:word64]
	word64 rcx_40 = rax_269 + rbp_12 * 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404EC0:
	Mem43[rax_269:word64] = rdx_39
	rax_269 = rax_269 + 0x0000000000000008
	rdx_39 = rdx_39 + 192
	branch rax_269 != rcx_40 l0000000000404EC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404ED3:
	word32 rax_32_32_113 = SLICE(rax_269, word32, 32)
	word64 r8_135 = r8
	branch Mem49[0x000000000061B148:word32] == 0xFFFFFFFF l0000000000404F8C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404EE0:
	word64 rsi_143
	word64 rdi_139
	word32 ecx_89
	word32 eax_53 = _setjmp(0x000000000061A680)
	byte al_100 = SLICE(eax_53, byte, 0)
	word48 rax_48_16_111 = SEQ(rax_32_32_113, SLICE(eax_53, word16, 16))
	branch eax_53 == 0x00000000 l0000000000404F40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404F40:
	ecx_89 = SLICE((uint64) Mem49[0x000000000061B148:word32], word32, 0) (alias)
	rsi_143 = Mem49[0x000000000061B1B0:word64]
	rdi_139 = Mem49[0x000000000061B1A8:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404EEE:
	word64 r8_60 = (uint64) Mem49[0x000000000061B148:word32]
	word32 r8d_61 = SLICE(r8_60, word32, 0)
	r8_32_32 = SLICE(r8_60, word32, 32) (alias)
	branch r8d_61 == 0x00000003 l0000000000404FDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404FDF:
	__assert_fail(0x000000000041373F, 0x0000000000413736, 0x0000000000000DDB, 0x0000000000412C95)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404EFF:
	rsi_143 = Mem49[0x000000000061B1B0:word64]
	rdi_139 = Mem49[0x000000000061B1A8:word64]
	branch rsi_143 == 0x0000000000000000 l0000000000404F33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404F12:
	word64 rdx_73 = Mem49[0x000000000061B1C0:word64]
	word64 rcx_74 = rdi_139 + rsi_143 * 0x0000000000000008
	word64 rax_75 = rdi_139
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404F20:
	Mem78[rax_75:word64] = rdx_73
	rax_75 = rax_75 + 0x0000000000000008
	rdx_73 = rdx_73 + 192
	branch rax_75 != rcx_74 l0000000000404F20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404F33:
	ecx_89 = SLICE((uint64) r8d_61, word32, 0) (alias)
	al_100 = 0x01 (alias)
	rax_48_16_111 = 0x000000000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404F54:
	word32 rax_32_32_123 = SLICE(rax_48_16_111, word32, 32)
	word32 edx_104 = 0x00000000
	branch ecx_89 != 0x00000004 l0000000000404F60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404F59_1:
	edx_104 = Mem94[0x000000000061B14C:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404F60:
	r8_135 = SEQ(r8_32_32, (word32) Mem94[0x000000000061B10C:byte]) (alias)
	rsi = fn000000000040D690(Mem94[(r8_135 + (SEQ(rax_32_32_123, (word32) Mem94[0x000000000061B147:byte]) + (SEQ(rax_48_16_111, (int16) al_100) + (uint64) (edx_104 + ecx_89) * 0x0000000000000002) * 0x0000000000000002) * 0x0000000000000002) * 0x0000000000000008 + 0x00412D00:word64], rbx_10, rbp_12, rsi_143, rdi_139, r12, r13, r14, r15)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404F8C:
	r8Out = r8_135
	return rsi
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000404E80_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000405090(byte sil, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..7]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn0000000000405090_entry:
	byte sil = SLICE(rsi, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405090:
	word32 r14d_10 = (word32) sil
	branch rdi == 0x0000000000000000 l00000000004050C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004050AA:
	branch Mem24[0x000000000061B1C8:word64] == 0x0000000000000000 l00000000004050C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004050B4:
	fn0000000000404D20(0x0000000000000000, rdi, 0x0000000000000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004050C0:
	word64 rbx_211 = Mem24[0x000000000061B1B0:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405108:
	branch rbx_211 == 0x0000000000000000 l00000000004051A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004051A8:
	word64 rdx_57
	word64 rdi_53 = Mem24[0x000000000061B1B0:word64]
	branch rdi_53 == 0x0000000000000000 l00000000004051F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004051F7:
	rdx_57 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004051B4:
	word64 rsi_61 = Mem24[0x000000000061B1A8:word64]
	rdx_57 = 0x0000000000000000
	word64 rax_63 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004051C0:
	word64 rcx_70 = Mem69[rsi_61 + rax_63 * 0x0000000000000008:word64]
	Mem73[rsi_61 + rdx_57 * 0x0000000000000008:word64] = rcx_70
	rax_63 = rax_63 + 0x0000000000000001
	rdx_57 = rdx_57 + SEQ(SLICE(rcx_70, word32, 32), (word32) (Mem69[rcx_70 + 0x00000000000000A0:word32] != 0x00000009))
	branch rax_63 != rdi_53 l00000000004051C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004051E1:
	Mem85[0x000000000061B1B0:word64] = rdx_57
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000405090_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405111:
	word64 rbp_104 = Mem24[Mem24[0x000000000061B1A8:word64]:word64]
	word32 eax_106 = SLICE((uint64) Mem24[rbp_104 + 0x00000000000000A0:word32], word32, 0)
	branch eax_106 == 0x00000009 l000000000040512C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405127:
	branch eax_106 != 0x00000003 l0000000000405100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040512C:
	word64 r15_117 = Mem24[rbp_104:word64]
	branch rdi == 0x0000000000000000 l00000000004050E2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405135:
	word64 rax_120 = fn000000000040A390(r15_117)
	branch Mem24[rax_120:byte] != 0x2E l00000000004050D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405142:
	byte al_137 = SLICE((word32) Mem24[rax_120 + 0x0000000000000001 + (uint64) ((uint8) (Mem24[rax_120 + 0x0000000000000001:byte] == 0x2E)):byte], byte, 0)
	branch al_137 == 0x2F l0000000000405100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405154:
	branch al_137 == 0x00 l0000000000405100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405158:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004050D8:
	branch Mem24[r15_117:byte] != 0x2F l0000000000405160
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405160:
	word64 rax_154 = fn000000000040A610(0x0000000000000000, r15_117, rdi)
	fn0000000000404D20((uint64) r14d_10, Mem24[rbp_104 + 0x0000000000000008:word64], rax_154)
	free(rax_154)
	branch Mem24[rbp_104 + 0x00000000000000A0:word32] != 0x00000009 l0000000000405100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004050E2:
	fn0000000000404D20((uint64) r14d_10, Mem24[rbp_104 + 0x0000000000000008:word64], r15_117)
	branch Mem24[rbp_104 + 0x00000000000000A0:word32] == 0x00000009 l0000000000405194
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405194:
	fn0000000000404D90(rbp_104)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004050FE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405100:
	rbx_211 = rbx_211 - 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000405200(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rbp rbx rsp
fn0000000000405200_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405200:
	word64 rbx_12 = rdi
	branch rdi <u rsi l000000000040526B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040526B:
	word64 rcx_17 = Mem16[0x000000000061B0D8:word64]
	branch rcx_17 != 0x0000000000000000 l0000000000405220
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405220:
	word64 rsi_25 = rbx_12 + 0x0000000000000001
	branch (uint64) ((uint128) (uint64) rsi /u rcx_17) <=u (uint64) ((uint128) ((uint64) rsi_25) /u rcx_17) l00000000004052A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004052A8:
	rbx_12 = rsi_25
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040523C:
	word64 rdi_40 = Mem16[0x000000000061A610:word64]
	word64 rax_41 = Mem16[rdi_40 + 0x0000000000000028:word64]
	branch rax_41 >=u Mem16[rdi_40 + 0x0000000000000030:word64] l00000000004052B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004052B9:
	__overflow(rdi_40, 0x0000000000000009)
	rcx_17 = Mem16[0x000000000061B0D8:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040524D:
	Mem48[rdi_40 + 0x0000000000000028:word64] = rax_41 + 0x0000000000000001
	Mem49[rax_41:byte] = 0x09
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405258:
	rbx_12 = rbx_12 + rcx_17 - (uint64) ((uint128) ((uint64) rbx_12) % rcx_17)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405277:
	rbx_12 = rbx_12 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040527B:
	word64 rdi_64 = Mem16[0x000000000061A610:word64]
	word64 rdx_65 = Mem16[rdi_64 + 0x0000000000000028:word64]
	branch rdx_65 >=u Mem16[rdi_64 + 0x0000000000000030:word64] l00000000004052AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004052AD:
	__overflow(rdi_64, 0x0000000000000020)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405266:
	branch rsi <=u rbx_12 l000000000040529C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040528C:
	Mem79[rdi_64 + 0x0000000000000028:word64] = rdx_65 + 0x0000000000000001
	Mem80[rdx_65:byte] = 0x20
	branch rsi >u rbx_12 l000000000040526B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405211:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040529C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000405200_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn00000000004052D0(word64 rcx, word64 rdx, word64 rsi, word64 rdi, word64 r10, word64 r12, selector fs, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] r12:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r10 r8 r9 rcx
// Trashed: SCZO r10 r11 r8 r9 rcx rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn00000000004052D0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004052D0:
	word64 rax_37 = Mem34[fs:0x00000028:word64]
	word64 rsi_52
	word64 r9_47
	word64 r8_46
	word64 r10_44
	word64 rax_48 = fn000000000040E6F0(0xFFFFFFFFFFFFFFFF, rsi, 0x0000000000002000, fp + 0xFFFFFFFFFFFFDFB8, rdx, r10, fs, out rsi_52, out r8_46, out r9_47, out r10_44)
	word64 rbx_132 = rax_48
	word32 rax_32_32_152 = SLICE(fp + 0xFFFFFFFFFFFFDFB8, word32, 32)
	word64 qwLoc2070_444 = fp + 0xFFFFFFFFFFFFDFB8
	branch rax_48 >u 0x0000000000001FFF l0000000000405590
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405590:
	word64 v24_71 = fp - 8328 - (rax_48 + 0x000000000000001F & 0xFFFFFFFFFFFFFFF0) + 0x000000000000000F & 0xFFFFFFFFFFFFFFF0
	qwLoc2070_444 = v24_71
	rax_32_32_152 = SLICE(fn000000000040E6F0(0xFFFFFFFFFFFFFFFF, rsi, rax_48 + 0x0000000000000001, v24_71, rdx, r10_44, fs, out rsi_52, out r8_46, out r9_47, out r10_44), word32, 32) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405343:
	word64 rdx_51
	word32 rdx_32_32_432 = SLICE(rdx_51, word32, 32)
	word32 rsi_32_32_413 = SLICE(rsi_52, word32, 32)
	branch Mem89[0x000000000061B0F0:byte] != 0x00 l0000000000405412
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405412:
	branch SEQ(rax_32_32_152, __ctype_get_mb_cur_max()) <=u 0x0000000000000001 l00000000004055D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004055D1:
	word64 r12_102 = qwLoc2070_444 + rax_48
	branch qwLoc2070_444 >=u r12_102 l0000000000405602
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004055E1:
	word64 rax_105 = __ctype_b_loc()
	word64 rdx_106 = qwLoc2070_444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004055E9:
	branch (Mem108[Mem108[rax_105:word64] + 0x0000000000000001 + SEQ(rsi_32_32_413, (word32) Mem108[rdx_106:byte]) * 0x0000000000000002:byte] & 0x40) != 0x00 l00000000004055F9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004055F6:
	Mem117[rdx_106:byte] = 0x3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004055F9:
	rdx_106 = rdx_106 + 0x0000000000000001
	branch rdx_106 != r12_102 l00000000004055E9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405602:
	r12 = rax_48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405421:
	word64 r15_128 = qwLoc2070_444
	word64 r13_129 = qwLoc2070_444 + rax_48
	branch qwLoc2070_444 >=u r13_129 l0000000000405612
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405612:
	rbx_132 = 0x0000000000000000
	r12 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405435:
	word64 rbx_137 = qwLoc2070_444
	r12 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405440:
	word32 eax_144 = (word32) Mem143[r15_128:byte]
	word56 rax_56_8_154 = SEQ(rax_32_32_152, SLICE(eax_144, word24, 8))
	byte al_145 = SLICE(eax_144, byte, 0)
	rax_32_32_152 = SLICE(rax_56_8_154, word32, 32) (alias)
	rax_32_32_152 = SLICE(rax_56_8_154, word32, 32) (alias)
	rax_32_32_152 = SLICE(rax_56_8_154, word32, 32) (alias)
	branch al_145 > 0x3F l0000000000405520
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405520:
	branch al_145 < 0x41 l0000000000405460
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405528:
	word64 rax_155 = SEQ(rax_56_8_154, al_145)
	rax_32_32_152 = SLICE(rax_155, word32, 32) (alias)
	branch al_145 <= 0x5F l0000000000405538
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040552C:
	branch SLICE(rax_155 - 0x0000000000000061, byte, 0) >u 0x1D l0000000000405460
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040544C:
	word64 rax_162 = SEQ(rax_56_8_154, al_145)
	rax_32_32_152 = SLICE(rax_162, word32, 32) (alias)
	branch al_145 >= 0x25 l0000000000405538
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405454:
	branch SLICE(rax_162 - 0x0000000000000020, byte, 0) <=u 0x03 l0000000000405538
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405538:
	Mem174[rbx_137:byte] = al_145
	r15_128 = r15_128 + 0x0000000000000001
	r12 = r12 + 0x0000000000000001
	rbx_137 = rbx_137 + 0x0000000000000001
	branch r15_128 <u r13_129 l0000000000405440
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040554F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405460:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405470:
	word64 rax_196 = SEQ(rax_32_32_152, mbrtowc(fp + 0xFFFFFFFFFFFFDFA4, r15_128, r13_129 - r15_128, fp + 0xFFFFFFFFFFFFDFA8))
	word64 r14_198 = rax_196
	branch rax_196 == 0xFFFFFFFFFFFFFFFF l0000000000405551
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405551:
	Mem202[rbx_137:byte] = 0x3F
	r15_128 = r15_128 + 0x0000000000000001
	r12 = r12 + 0x0000000000000001
	rbx_137 = rbx_137 + 0x0000000000000001
	branch r15_128 <u r13_129 l0000000000405440
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405569:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405499:
	branch rax_196 == 0xFFFFFFFFFFFFFFFE l000000000040556B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040556B:
	Mem211[rbx_137:byte] = 0x3F
	r15_128 = r13_129
	r12 = r12 + 0x0000000000000001
	rbx_137 = rbx_137 + 0x0000000000000001
	branch false l0000000000405440
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405582:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004054A3:
	word64 rdi_217 = (uint64) dwLoc205C
	branch rax_196 != 0x0000000000000000 l00000000004054B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004054B1_1:
	r14_198 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004054B5:
	word32 eax_224 = wcwidth(rdi_217)
	word48 rax_48_16_262 = (uint48) (uint16) SLICE(eax_224, word16, 16)
	rax_32_32_152 = 0x00000000
	byte al_251 = SLICE(eax_224, byte, 0)
	rax_32_32_152 = SLICE(rax_48_16_262, word32, 32) (alias)
	branch eax_224 < 0x00000000 l0000000000405510
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405510:
	Mem229[rbx_137:byte] = 0x3F
	r15_128 = r15_128 + r14_198
	r12 = r12 + 0x0000000000000001
	rbx_137 = rbx_137 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004054BE:
	word64 rsi_237 = r15_128 + r14_198
	word64 rdx_238 = rbx_137
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004054C8:
	r15_128 = r15_128 + 0x0000000000000001
	rdx_238 = rdx_238 + 0x0000000000000001
	Mem248[rdx_238 - 0x0000000000000001:byte] = SLICE((word32) Mem241[r15_128 - 0x0000000000000001:byte], byte, 0)
	branch r15_128 != rsi_237 l00000000004054C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004054DD:
	rbx_137 = rbx_137 + r14_198
	r12 = r12 + SEQ(rax_48_16_262, (int16) al_251)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004054E5:
	branch mbsinit(fp + 0xFFFFFFFFFFFFDFA8) == 0x00000000 l0000000000405470
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004054F9:
	branch r15_128 <u r13_129 l0000000000405440
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405502:
	rbx_132 = rbx_137 - qwLoc2070_444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405350:
	branch rcx == 0x0000000000000000 l0000000000405379
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040535A:
	branch SEQ(rax_32_32_152, __ctype_get_mb_cur_max()) <=u 0x0000000000000001 l00000000004053CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004053CD:
	word64 r13_295 = qwLoc2070_444 + rax_48
	branch qwLoc2070_444 >=u r13_295 l000000000040560A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040560A:
	r12 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004053E1:
	r12 = 0x0000000000000000
	word64 rcx_307 = Mem89[__ctype_b_loc():word64]
	word64 rax_308 = qwLoc2070_444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004053F0:
	r12 = r12 - 0xFF - ((SLICE((word32) Mem89[rcx_307 + SEQ(rdx_32_32_432, (word32) Mem89[rax_308:byte]) * 0x0000000000000002:word16], word16, 0) & 0x4000) <u 0x0001)
	rax_308 = rax_308 + 0x0000000000000001
	branch rax_308 != r13_295 l00000000004053F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040540D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405365:
	r12 = (int64) SLICE(fn000000000040D240(0x0000000000000000, rax_48, qwLoc2070_444, fs), word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405379:
	branch rdi == 0x0000000000000000 l0000000000405399
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405385:
	fwrite_unlocked(qwLoc2070_444, 0x0000000000000001, rbx_132, rdi)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405399:
	branch rcx == 0x0000000000000000 l00000000004053A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004053A5:
	Mem373[rcx:word64] = r12
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004053A8:
	branch (rax_37 ^ Mem378[fs:0x00000028:word64]) != 0x0000000000000000 l000000000040561C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040561C:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004053BE:
	r8Out = r8_46
	r9Out = r9_47
	r10Out = r10_44
	return rdi
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00000000004052D0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000405630(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: r12 rbp rbx rsp
fn0000000000405630_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405630:
	word64 rax_13 = Mem11[rsi + 0x0000000000000018:word64]
	word64 rbp_14 = Mem11[rsi + 0x0000000000000010:word64]
	word64 r12_18 = (uint64) (SLICE(rax_13 - rbp_14, word32, 0) >>u 0x00000003)
	branch r12_18 == 0x0000000000000000 l00000000004056DB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040564F:
	branch rax_13 == rbp_14 l00000000004056E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004056E6:
	Mem25[rsi + 0x0000000000000050:byte] = Mem11[rsi + 0x0000000000000050:byte] | 0x02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405658:
	word64 rcx_30 = (int64) Mem29[rsi + 0x0000000000000030:word32]
	word64 rcx_35 = Mem29[rsi + 0x0000000000000020:word64]
	word64 rdx_40 = (int64) SLICE((uint64) ~SLICE((uint64) SLICE(rcx_30, word32, 0), word32, 0), word32, 0) & rax_13 + rcx_30
	word64 rax_41 = Mem29[rsi + 0x0000000000000008:word64]
	Mem43[rsi + 0x0000000000000018:word64] = rdx_40
	branch rdx_40 - rax_41 > rcx_35 - rax_41 l00000000004056E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004056E0:
	Mem48[rsi + 0x0000000000000018:word64] = rcx_35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405683:
	Mem56[rsi + 0x0000000000000010:word64] = Mem50[rsi + 0x0000000000000018:word64]
	fputs_unlocked(rdi, Mem56[0x000000000061A610:word64])
	word64 rbx_52 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004056A0:
	__printf_chk(0x0000000000000001, 0x0000000000413759, 0x00000000)
	rbx_52 = rbx_52 + 0x0000000000000001
	branch r12_18 >u rbx_52 l00000000004056A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004056BF:
	word64 rdi_74 = Mem56[0x000000000061A610:word64]
	word64 rax_75 = Mem56[rdi_74 + 0x0000000000000028:word64]
	branch rax_75 >=u Mem56[rdi_74 + 0x0000000000000030:word64] l00000000004056EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004056EF:
	__overflow(rdi_74, 0x000000000000000A)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004056D0:
	Mem90[rdi_74 + 0x0000000000000028:word64] = rax_75 + 0x0000000000000001
	Mem91[rax_75:byte] = 0x0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004056DB:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000405630_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000405700(word32 rax_32_32, word32 edx, word64 rdi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] rax_32_32:[0..31] rdi:[0..63] rdx:[0..31]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rbp rbx rsp
fn0000000000405700_entry:
	word32 edx = SLICE(rdx, word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405700:
	word64 rbp_26
	word32 ebx_25 = SLICE((uint64) edx, word32, 0)
	branch rdi == 0x0000000000000000 l0000000000405780
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405780:
	__printf_chk(0x0000000000000001, 0x000000000041375E, 0x00000000)
	rbp_26 = (int64) ebx_25
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405710:
	word32 eax_42 = SLICE(fn000000000040D420(rax_32_32, 0x00000000, rdi, fs), word32, 0)
	word64 rsi_41 = Mem10[0x000000000061A610:word64]
	word32 ebx_44 = SLICE((uint64) (ebx_25 - eax_42), word32, 0)
	branch ebx_44 >= 0x00000000 l0000000000405728
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405725_1:
	ebx_44 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405728:
	fputs_unlocked(rdi, rsi_41)
	rbp_26 = (int64) ebx_44 + (uint64) ((uint32) strlen(rdi))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405740:
	word64 rdi_64 = Mem63[0x000000000061A610:word64]
	word64 rcx_65 = Mem63[rdi_64 + 0x0000000000000028:word64]
	branch rcx_65 >=u Mem63[rdi_64 + 0x0000000000000030:word64] l0000000000405799
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405799:
	__overflow(rdi_64, 0x0000000000000020)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405751:
	Mem71[rdi_64 + 0x0000000000000028:word64] = rcx_65 + 0x0000000000000001
	Mem72[rcx_65:byte] = 0x20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040575C:
	ebx_44 = SLICE((uint64) (ebx_44 - 0x00000001), word32, 0) (alias)
	branch ebx_44 != 0xFFFFFFFF l0000000000405740
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405764:
	word64 rax_85 = rbp_26 + 0x0000000000000001 + Mem79[0x000000000061B018:word64]
	Mem86[0x000000000061B018:word64] = rax_85
	return rax_85
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000405700_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn00000000004057B0(byte dl, word32 esi, word64 rdi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dl:[0..7] esi:[0..31] fs:[0..15] rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rbx rsp
fn00000000004057B0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004057B0:
	word64 rax_14 = 0x0000000000413764
	branch dl == 0x00 l00000000004057CB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004057C0:
	rax_14 = 0x0000000000000000
	branch Mem5[0x000000000061B145:byte] == 0x00 l00000000004057E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004057E0:
	rax_14 = fn000000000040C9B0(rdi)
	esi = SLICE((uint64) esi, word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004057CB:
	word32 rax_32_32_43 = SLICE(rax_14, word32, 32)
	word64 rdx_35 = (uint64) esi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004057D8_thunk_fn0000000000405700:
	return fn0000000000405700(rax_32_32_43, rdx_35, rax_14, fs)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00000000004057B0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000405810(word64 rdx, word64 rsi, word32 edi, word64 r10, selector fs, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31] fs:[0..15] r10:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r10 r8 r9 rax
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi
// Preserved: r12 rbp rbx rsp
fn0000000000405810_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405810:
	word64 r10_20
	word64 r9_23
	fn000000000040EAB0(rdx, r10, fs, out r9_23, out r10_20)
	error(0x0000000000000000, (uint64) Mem15[__errno_location():word32], rsi, 0x00000000)
	word64 rax_37 = 0x0000000000000000
	branch SLICE((uint64) edi, byte, 0) == 0x00 l0000000000405850
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405850:
	rax_37 = (uint64) Mem15[0x000000000061B030:word32]
	branch SLICE(rax_37, word32, 0) != 0x00000000 l000000000040584A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040585A:
	Mem53[0x000000000061B030:word32] = 0x00000001
	r8Out = <invalid>
	r9Out = <invalid>
	r10Out = <invalid>
	return rax_37
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405840:
	Mem56[0x000000000061B030:word32] = 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040584A:
	r8Out = <invalid>
	r9Out = <invalid>
	r10Out = <invalid>
	return rax_37
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000405810_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000405C20(word32 ecx, word32 edx, word32 esi, byte dil, ptr64 & rsiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dil:[0..7] edx:[0..31] rcx:[8..31] rsi:[0..31]
// LiveOut: rax rsi
// Trashed: SCZO rax rcx rsi
// Preserved: rsp
fn0000000000405C20_entry:
	word24 ecx_24_8 = SLICE(rcx, word24, 8)
	word32 esi = SLICE(rsi, word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C20:
	word64 rcx_170
	word64 rsi_135
	word64 rax_122
	word56 rcx_56_8_131 = SLICE(rcx, word56, 8)
	branch dil == 0x00 l0000000000405C40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C40:
	rax_122 = 0x0000000000000000
	rsi_135 = rsi (alias)
	branch edx == 0x00000005 l0000000000405C3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C47:
	rcx_170 = (uint64) (SEQ(ecx_24_8, edx == 0x00000009) | (uint32) ((uint8) (edx == 0x00000003)))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C25:
	word32 eax_29 = SLICE((uint64) (SLICE((uint64) esi, word32, 0) & 0x0000F000), word32, 0)
	branch eax_29 != 0x00008000 l0000000000405CA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405CA0:
	rcx_170 = SEQ(rcx_56_8_131, eax_29 == 0x00004000) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C55:
	rax_122 = 0x000000000000002F
	rsi_135 = rsi (alias)
	branch SLICE(rcx_170, byte, 0) != 0x00 l0000000000405C3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C5E:
	branch Mem0[0x000000000061B12C:word32] == 0x00000001 l0000000000405CF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405CF0:
	rsiOut = rsi
	return 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C6B:
	word32 eax_75
	rsi_135 = rsi (alias)
	branch dil == 0x00 l0000000000405CC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405CC0:
	rax_122 = 0x0000000000000040
	branch edx == 0x00000006 l0000000000405C3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405CCE:
	rax_122 = 0x000000000000007C
	branch edx == 0x00000001 l0000000000405C3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405CDC:
	eax_75 = (uint32) (uint8) (edx == 0x00000007) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C70:
	rsi_135 = (uint64) (esi & 0x0000F000)
	word32 esi_66 = SLICE(rsi_135, word32, 0)
	rax_122 = 0x0000000000000040
	branch esi_66 == 0x0000A000 l0000000000405C3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C83:
	rax_122 = 0x000000000000007C
	branch esi_66 == 0x00001000 l0000000000405C3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C90:
	eax_75 = (uint32) (uint8) (esi_66 == 0x0000C000) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405CE2:
	rsiOut = rsi_135
	return (uint64) (SLICE((uint64) -eax_75, word32, 0) & 0x0000003D)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C33:
	rax_122 = 0x0000000000000000
	rsi_135 = rsi (alias)
	branch Mem0[0x000000000061B12C:word32] == 0x00000003 l0000000000405CB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405CB0:
	word64 rsi_89 = (uint64) (esi & 0x00000049)
	rsiOut = rsi_89
	return (uint64) (SLICE((uint64) ~SLICE((uint64) (0x00000000 - SLICE(cond(SLICE(rsi_89, word32, 0) - 0x00000001), bool, 1)), word32, 0), word32, 0) & 0x0000002A)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C3E:
	rsiOut = rsi_135
	return rax_122
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000405C20_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000405D00(word64 rcx, word32 edx, word64 rsi, byte dil)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dil:[0..7] rcx:[0..63] rdx:[0..31] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rbx rsp
fn0000000000405D00_entry:
	word32 edx = SLICE(rdx, word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D00:
	word64 rsi_14
	word64 rax_12 = fn0000000000405C20(rcx, edx, rsi, SLICE((word32) dil, byte, 0), out rsi_14)
	word32 rsi_32_32_31 = SLICE(rsi_14, word32, 32)
	word56 rax_56_8_56 = SLICE(rax_12, word56, 8)
	byte bl_29 = SLICE((uint64) SLICE(rax_12, word32, 0), byte, 0)
	branch SLICE(rax_12, byte, 0) == 0x00 l0000000000405D33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D10:
	word64 rdi_25 = Mem5[0x000000000061A610:word64]
	word64 rax_26 = Mem5[rdi_25 + 0x0000000000000028:word64]
	rax_56_8_56 = SLICE(rax_26, word56, 8) (alias)
	word32 rax_32_32_60 = SLICE(rax_26, word32, 32)
	branch rax_26 >=u Mem5[rdi_25 + 0x0000000000000030:word64] l0000000000405D3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D3A:
	rax_56_8_56 = SEQ(rax_32_32_60, SLICE(__overflow(rdi_25, SEQ(rsi_32_32_31, (word32) bl_29)), word24, 8)) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D21:
	Mem35[rdi_25 + 0x0000000000000028:word64] = rax_26 + 0x0000000000000001
	Mem36[rax_26:byte] = bl_29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D2B:
	Mem39[0x000000000061B018:word64] = Mem37[0x000000000061B018:word64] + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D33:
	return SEQ(rax_56_8_56, bl_29 != 0x00)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000405D00_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000405D50(word64 rdi, word64 r10, word64 r12, selector fs, int8 Top, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] r12:[0..63] rdi:[0..63] Top:[0..7]
// LiveOut: r10 r8 r9 rax
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi
// Preserved: rbp rbx rsp
fn0000000000405D50_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D50:
	word64 rbx_106 = 0x0000000000000000
	word64 rax_14 = Mem10[fs:0x00000028:word64]
	word32 rax_32_32_34 = 0x00000000
	branch Mem15[0x000000000061B114:byte] == 0x00 l0000000000405D92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D7A:
	branch Mem15[0x000000000061B150:word32] == 0x00000004 l0000000000405EA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405EA0:
	word64 rax_23 = fn000000000040CD70(fp - 0x00000000000002B8, Mem15[rdi + 0x0000000000000018:word64])
	rax_32_32_34 = SLICE(rax_23, word32, 32) (alias)
	rbx_106 = SEQ(rax_32_32_34, strlen(rax_23)) + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D87:
	rbx_106 = (int64) Mem15[0x000000000061B178:word32] + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D92:
	branch Mem15[0x000000000061B144:byte] == 0x00 l0000000000405DB6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D9B:
	word64 rax_47
	branch Mem15[0x000000000061B150:word32] == 0x00000004 l0000000000405E58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405E58:
	rax_47 = 0x0000000000000002
	branch Mem15[rdi + 0x00000000000000B0:byte] == 0x00 l0000000000405DB3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405E6A:
	word64 r8_240
	word64 r9_241
	word64 rax_62 = fn000000000040BD70(0x0000000000000200, SLICE((uint64) Mem15[0x000000000061B140:word32], word32, 0), fp - 0x00000000000002B8, Mem15[rdi + 0x0000000000000050:word64], Mem15[0x000000000061B138:word64], fs, Top, out r8_240, out r9_241)
	rax_47 = SEQ(SLICE(rax_62, word32, 32), strlen(rax_62)) + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405DA8:
	rax_47 = (int64) Mem15[0x000000000061B174:word32] + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405DB3:
	rax_32_32_34 = SLICE(rax_47, word32, 32) (alias)
	rbx_106 = rbx_106 + rax_47
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405DB6:
	branch Mem15[0x000000000061B17D:byte] == 0x00 l0000000000405DD6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405DBF:
	word64 rax_100
	branch Mem15[0x000000000061B150:word32] == 0x00000004 l0000000000405E40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405E40:
	rax_100 = SEQ(rax_32_32_34, strlen(Mem15[rdi + 0x00000000000000A8:word64])) + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405DC8:
	rax_100 = (int64) Mem15[0x000000000061B16C:word32] + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405DD3:
	rbx_106 = rbx_106 + rax_100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405DD6:
	word64 r10_141
	word64 r8_143
	word64 r9_144
	word64 rcx_145 = fn00000000004052D0(fp - 0x00000000000002C0, Mem15[0x000000000061B0E8:word64], Mem15[rdi:word64], 0x0000000000000000, r10, r12, fs, out r8_143, out r9_144, out r10_141)
	word64 rbx_155 = rbx_106 + qwLoc02C0
	branch SLICE((uint64) Mem15[0x000000000061B12C:word32], word32, 0) == 0x00000000 l0000000000405E1C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405DFC:
	word64 rsi_242
	word64 rax_165 = fn0000000000405C20(rcx_145, SLICE((uint64) Mem15[rdi + 0x00000000000000A0:word32], word32, 0), (uint64) Mem15[rdi + 0x0000000000000028:word32], SLICE((word32) Mem15[rdi + 0x00000000000000B0:byte], byte, 0), out rsi_242)
	rbx_155 = rbx_155 + SEQ(SLICE(rax_165, word32, 32), (word32) (SLICE(rax_165, byte, 0) != 0x00))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405E1C:
	branch (rax_14 ^ Mem15[fs:0x00000028:word64]) != 0x0000000000000000 l0000000000405EBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405EBF:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405E36:
	r8Out = r8_143
	r9Out = r9_144
	r10Out = r10_141
	return rbx_155
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000405D50_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000405ED0(word32 edi, word64 r10, selector fs, int8 Top, ptr64 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] rdi:[0..31] Top:[0..7]
// LiveOut: r8 rax
// Trashed: SCZO r8 rax rdi rdx rsi
// Preserved: r10 r11 r12 r13 r14 r9 rbp rbx rcx rsp
fn0000000000405ED0_entry:
	word32 edi = SLICE(rdi, word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405ED0:
	word64 rdx_6 = Mem5[0x000000000061B1B0:word64]
	word64 rax_7 = Mem5[0x000000000061B020:word64]
	word64 r12_16 = (uint64) edi
	word64 rbx_23 = rdx_6
	branch rax_7 >u rdx_6 l0000000000405EF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405EEF_1:
	rbx_23 = rax_7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405EF3:
	word64 r8_125
	word64 rsi_126
	word64 rax_116
	branch rbx_23 <=u Mem22[0x000000000061A660:word64] l00000000004060C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004060C8:
	rax_116 = 0x0000000000000000
	r8_125 = rdx_6
	rsi_126 = Mem22[0x000000000061B028:word64]
	branch rbx_23 == 0x0000000000000000 l0000000000406004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004060DD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405F00:
	word64 rbp_46
	word64 rdi_39 = Mem22[0x000000000061B028:word64]
	branch rbx_23 <u rax_7 >>u 0x0000000000000001 l0000000000406170
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406170:
	branch rbx_23 >u 0x0000000055555555 l000000000040619D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040617F:
	rbp_46 = rbx_23 * 0x0000000000000002
	Mem55[0x000000000061B028:word64] = fn0000000000410C90(rbp_46 + rbx_23 << 0x0000000000000004, rdi_39)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405F16:
	branch rax_7 >u 0x00000000AAAAAAAA l000000000040619D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405F29:
	word64 rax_62 = fn0000000000410C90(rax_7 * 0x0000000000000018, rdi_39)
	rbp_46 = Mem22[0x000000000061B020:word64]
	Mem68[0x000000000061B028:word64] = rax_62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405F44:
	word64 rax_70 = Mem69[0x000000000061A660:word64]
	word64 rsi_73 = rbp_46 + 0x0000000000000001 + rax_70
	word64 rdi_74 = rbp_46 - rax_70
	word64 rcx_76 = rsi_73 *s rdi_74
	branch rbp_46 >u rsi_73 l000000000040619D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405F66:
	branch rsi_73 != (uint64) ((uint128) ((uint64) rcx_76) /u rdi_74) l000000000040619D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405F77:
	branch rcx_76 >>u 0x0000000000000001 >u 0x00000000FFFFFFFF l000000000040619D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040619D:
	fn0000000000410E50()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405F8D:
	word64 rax_106 = fn0000000000410C40((rcx_76 >>u 0x0000000000000001) * 0x0000000000000008)
	word64 rcx_97 = Mem69[0x000000000061A660:word64]
	branch rbp_46 <=u rcx_97 l0000000000405FE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405FA6:
	word64 rsi_100 = Mem69[0x000000000061B028:word64]
	word64 rcx_103 = rcx_97 * 0x0000000000000008 + 0x00000008
	word64 rdx_104 = rsi_100 + rcx_97 * 0x0000000000000018 + 0x0000000000000010
	word64 rsi_105 = rsi_100 + rbp_46 * 0x0000000000000018
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405FD0:
	Mem108[rdx_104 + 0x0000000000000000:word64] = rax_106
	rdx_104 = rdx_104 + 0x0000000000000018
	rax_106 = rax_106 + rcx_103
	rcx_103 = rcx_103 + 0x0000000000000008
	branch rdx_104 != rsi_105 l0000000000405FD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405FE4:
	Mem124[0x000000000061A660:word64] = rbp_46
	rax_116 = 0x0000000000000000
	r8_125 = Mem124[0x000000000061B1B0:word64]
	rsi_126 = Mem124[0x000000000061B028:word64]
	branch rbx_23 != 0x0000000000000000 l00000000004060E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004060E0:
	word64 rcx_132 = Mem131[rsi_126 + 0x0000000000000010:word64]
	Mem133[rsi_126:byte] = 0x01
	word64 rdi_129 = rax_116 + 0x0000000000000001
	Mem135[rsi_126 + 0x0000000000000008:word64] = rdi_129 * 0x0000000000000003
	word64 rdx_136 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004060F8:
	Mem142[rcx_132 + rdx_136 * 0x0000000000000008:word64] = 0x0000000000000003
	rdx_136 = rdx_136 + 0x0000000000000001
	branch rdx_136 <=u rax_116 l00000000004060F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406109:
	rsi_126 = rsi_126 + 0x0000000000000018
	branch rdi_129 == rbx_23 l0000000000406004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406116:
	rax_116 = rdi_129
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406004:
	word64 rbp_155 = 0x0000000000000000
	branch r8_125 == 0x0000000000000000 l000000000040612D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040600F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406010:
	word64 r9_553
	word64 rax_174 = fn0000000000405D50(Mem162[Mem162[0x000000000061B1A8:word64] + rbp_155 * 0x0000000000000008:word64], r10, r12_16, fs, Top, out r8_125, out r9_553, out r10)
	word64 r14_187 = Mem162[0x000000000061B1B0:word64]
	branch rbx_23 == 0x0000000000000000 l0000000000406120
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406033:
	word64 r13_189 = Mem162[0x000000000061B0C8:word64]
	word64 rsi_190 = Mem162[0x000000000061B028:word64]
	word64 rcx_191 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004060A7:
	byte r12b_200 = SLICE(r12_16, byte, 0)
	word64 r9_197 = rcx_554 - 0x0000000000000001
	branch Mem194[rsi_190:byte] == 0x00 l000000000040609A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004060B3:
	branch r12b_200 != 0x00 l0000000000406050
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406050:
	r10 = (uint64) ((uint128) (uint64) rbp_155 /u (uint64) ((uint128) ((uint64) ((r14_187 - 0x0000000000000001) + rcx_554)) /u rcx_554))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004060B8:
	r10 = (uint64) ((uint128) (uint64) rbp_155 % rcx_554)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040606A:
	word64 rax_245 = Mem194[rsi_190 + 0x0000000000000010:word64] + r10 * 0x0000000000000008
	word64 rdx_241 = rax_174 + (uint64) ((uint8) (r9_197 != r10)) * 0x0000000000000002
	word64 r9_246 = Mem194[rax_245:word64]
	branch rdx_241 <=u r9_246 l000000000040609A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406086:
	r10 = rdx_241 - r9_246
	Mem252[rsi_190 + 0x0000000000000008:word64] = Mem194[rsi_190 + 0x0000000000000008:word64] + r10
	Mem253[rax_245:word64] = rdx_241
	Mem258[rsi_190:byte] = Mem253[rsi_190 + 0x0000000000000008:word64] <u r13_189
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040609A:
	r8_125 = rcx_554
	rsi_190 = rsi_190 + 0x0000000000000018
	rcx_191 = rcx_554 + 0x0000000000000001
	rcx_554 = rcx_191
	branch rbx_23 <=u rcx_554 l0000000000406120
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406120:
	rbp_155 = rbp_155 + 0x0000000000000001
	branch rbp_155 <u r14_187 l0000000000406010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040612D:
	branch rbx_23 <=u 0x0000000000000001 l0000000000406164
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406133:
	word64 rdx_290 = Mem286[0x000000000061B028:word64]
	word64 rax_291 = rbx_23 * 0x0000000000000003
	branch Mem286[rdx_290 - 0x0000000000000018 + (rax_291 << 0x0000000000000003):byte] != 0x00 l0000000000406164
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406149:
	word64 rax_295 = (rax_291 << 0x0000000000000003) + rdx_290
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040615A:
	rbx_23 = rbx_23 - 0x0000000000000001
	branch rbx_23 != 0x0000000000000001 l0000000000406150
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406150:
	rax_295 = rax_295 - 0x0000000000000018
	branch Mem286[rax_295 - 0x0000000000000018:byte] != 0x00 l0000000000406164
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406164:
	r8Out = r8_125
	return rbx_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000405ED0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn00000000004061B0(word64 rdi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdi rdx rsi
// Preserved: r8 rbp rbx rcx rsp
fn00000000004061B0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004061B0:
	word64 rdx_108
	word64 rax_13 = Mem10[fs:0x00000028:word64]
	branch Mem14[0x000000000061B145:byte] == 0x00 l0000000000406248
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406248:
	word64 rax_20 = fn000000000040C9B0(rdi)
	word32 rax_32_32_36 = SLICE(rax_20, word32, 32)
	branch rax_20 == 0x0000000000000000 l00000000004061D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406259:
	word32 eax_45 = SLICE(fn000000000040D420(rax_32_32_36, 0x00000000, rax_20, fs), word32, 0)
	word32 edx_131 = 0x00000000
	branch eax_45 < 0x00000000 l0000000000406267
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406264_1:
	edx_131 = eax_45
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406267:
	rdx_108 = (uint64) (uint32) edx_131 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004061D1:
	__sprintf_chk(fp - 0x0000000000000038, 0x0000000000000001, 0x0000000000000015, 0x000000000041375A, 0x00000000)
	word32 ebx_107 = SLICE(fp - 0x0000000000000038, word32, 0)
	word64 rax_64 = fp - 0x0000000000000038
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004061F3:
	word64 rcx_67 = (uint64) Mem14[rax_64:word32]
	word32 edx_76 = SLICE((uint64) (SLICE((uint64) (rcx_67 + 0xFFFFFFFFFEFEFEFF & SLICE((uint64) (~SLICE(rcx_67, word32, 0)), word32, 0)), word32, 0) & 0x80808080), word32, 0)
	rax_64 = rax_64 + 0x0000000000000004
	byte dl_93 = SLICE(edx_76, byte, 0)
	branch edx_76 == 0x00000000 l00000000004061F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040620B:
	word32 ecx_86 = SLICE((uint64) (SLICE((uint64) edx_76, word32, 0) >>u 0x00000010), word32, 0)
	branch (edx_76 & 0x00008080) != 0x00000000 l0000000000406219
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406216_1:
	dl_93 = SLICE(ecx_86, byte, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406219:
	branch (edx_76 & 0x00008080) != 0x00000000 l0000000000406221
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040621D_1:
	rax_64 = rax_64 + 0x0000000000000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406221:
	rdx_108 = (uint64) (SLICE((uint64) SLICE(rax_64 - 0x03 - (dl_93 * 0x02 <u 0x00), word32, 0), word32, 0) - ebx_107)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040622B:
	word64 rax_133 = (uint64) SLICE(rdx_108, word32, 0)
	branch (rax_13 ^ Mem14[fs:0x00000028:word64]) != 0x0000000000000000 l0000000000406269
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406269:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040623D:
	return rax_133
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00000000004061B0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000406400()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rdi
// Preserved: rsp
fn0000000000406400_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406400:
	branch Mem0[0x000000000061A408:word64] == 0x0000000000000000 l0000000000406418
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406418:
	word64 rcx_36
	fn0000000000406440(0x000000000061A3E0, out rcx_36)
	word64 rcx_37
	fn0000000000406440(0x000000000061A410, out rcx_37)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406439_thunk_fn0000000000406440:
	word64 rcx_39
	fn0000000000406440(0x000000000061A3F0, out rcx_39)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040640A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040640F_thunk_fn0000000000406440:
	word64 rcx_38
	fn0000000000406440(0x000000000061A400, out rcx_38)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000406400_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000000000406440(word64 rdi, ptr64 & rcxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut: eax rcx
// Trashed: SCZO eax rcx rdi rdx rsi
// Preserved: rsp
fn0000000000406440_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406440:
	branch Mem0[0x000000000061B128:byte] == 0x00 l0000000000406470
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406470:
	Mem9[0x000000000061B128:byte] = 0x01
	fn0000000000406400()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040644D:
	word64 rcx_24 = Mem22[0x000000000061A610:word64]
	word32 eax_30 = fwrite_unlocked(Mem22[rdi + 0x0000000000000008:word64], Mem22[rdi:word64], 0x0000000000000001, rcx_24)
	rcxOut = rcx_24
	return eax_30
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000406440_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000406490()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rax rdi rdx rsi
// Preserved: rbx rcx rsp
fn0000000000406490_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406490:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004064EF:
	branch SLICE((uint64) Mem8[0x000000000061B038:word32], word32, 0) != 0x00000000 l0000000000406503
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004064F9:
	branch SLICE((uint64) Mem8[0x000000000061B034:word32], word32, 0) == 0x00000000 l0000000000406538
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406538:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000406490_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406503:
	branch Mem8[0x000000000061B128:byte] == 0x00 l00000000004064A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040650C:
	word64 rcx_107
	fn0000000000406440(0x000000000061A3E0, out rcx_107)
	word64 rcx_108
	fn0000000000406440(0x000000000061A3F0, out rcx_108)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004064A0:
	fflush_unlocked(Mem8[0x000000000061A610:word64])
	sigprocmask(0x0000000000000000, 0x000000000061B040, fp + 0xFFFFFFFFFFFFFF78)
	word32 ebx_66 = SLICE((uint64) Mem8[0x000000000061B038:word32], word32, 0)
	word32 eax_58 = SLICE((uint64) Mem8[0x000000000061B034:word32], word32, 0)
	branch eax_58 == 0x00000000 l0000000000406528
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406528:
	signal((uint64) ebx_66, 0x0000000000000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004064CB:
	Mem73[0x000000000061B034:word32] = SLICE((uint64) (eax_58 - 0x00000001), word32, 0)
	ebx_66 = 0x00000013 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004064D9:
	raise((uint64) ebx_66)
	sigprocmask(0x0000000000000002, fp + 0xFFFFFFFFFFFFFF78, 0x0000000000000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000406540(word64 rax, word64 rcx, word64 rdx, byte sil, word64 rdi, word64 r10, selector fs, ptr64 & rcxOut, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] rax:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] sil:[0..7]
// LiveOut: r10 r8 r9 rax rcx
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn0000000000406540_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406540:
	byte r14b_688
	word64 rbp_393
	word32 edx_286
	word32 r14d_315
	word32 r15d_95
	word64 rdx_31 = Mem24[rdi:word64]
	word64 r12_32 = Mem24[rdi + 0x0000000000000008:word64]
	branch sil == 0x00 l00000000004069BD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004069BD:
	branch Mem24[0x000000000061B129:byte] != 0x00 l00000000004069D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004069D8:
	word32 r14d_38
	branch Mem24[0x000000000061B198:byte] == 0x00 l0000000000406A08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406A08:
	r14d_38 = (word32) Mem24[rdi + 0x00000000000000B1:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004069E1:
	branch Mem24[rdi + 0x00000000000000B1:byte] == 0x00 l0000000000406A20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406A20:
	r14d_38 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406A10:
	r15d_95 = SLICE((uint64) Mem24[rdi + 0x0000000000000028:word32], word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004069EA:
	r15d_95 = SLICE((uint64) Mem24[rdi + 0x00000000000000A4:word32], word32, 0) (alias)
	r14d_38 = 0x00000001 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004069F7:
	r14d_315 = SLICE((uint64) (r14d_38 ^ 0x00000001), word32, 0) (alias)
	r12_32 = rdx_31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004069C6:
	r12_32 = rdx_31
	r14b_688 = 0x00 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406567:
	branch Mem24[0x000000000061B129:byte] != 0x00 l0000000000406580
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406580:
	r14d_315 = (word32) Mem24[rdi + 0x00000000000000B1:byte]
	r15d_95 = SLICE((uint64) Mem24[rdi + 0x00000000000000A4:word32], word32, 0) (alias)
	branch SLICE(r14d_315, byte, 0) != 0x00 l00000000004065B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406594:
	edx_286 = 0x0000000C (alias)
	branch SLICE(fn0000000000404CD0(0x0000000C), byte, 0) != 0x00 l00000000004066B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004065AB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004065B0:
	word32 rax_32_32_363
	byte r14b_322 = SLICE(r14d_315, byte, 0)
	byte r15b_237 = SLICE(r15d_95, byte, 0)
	branch Mem24[rdi + 0x00000000000000B0:byte] != 0x00 l0000000000406628
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406628:
	word32 eax_103 = SLICE((uint64) (SLICE((uint64) r15d_95, word32, 0) & 0x0000F000), word32, 0)
	branch eax_103 == 0x00008000 l0000000000406868
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406868:
	branch (r15d_95 & 0x00000800) == 0x00000000 l00000000004068B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406871:
	branch SLICE(fn0000000000404CD0(0x00000010), byte, 0) == 0x00 l00000000004068B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004068B8:
	branch (r15d_95 & 0x00000400) == 0x00000000 l000000000040693B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004068C1:
	branch SLICE(fn0000000000404CD0(0x00000011), byte, 0) == 0x00 l000000000040693B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040693B:
	word64 rax_145 = fn0000000000404CD0(0x00000015)
	rax_32_32_363 = SLICE(rax_145, word32, 32) (alias)
	branch SLICE(rax_145, byte, 0) == 0x00 l000000000040695C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406949:
	branch Mem24[rdi + 0x00000000000000B8:byte] == 0x00 l000000000040695C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040695C:
	branch SLICE((uint64) (r15d_95 & 0x00000049), word32, 0) == 0x00000000 l000000000040697A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406962:
	word64 rax_173 = fn0000000000404CD0(0x0000000E)
	rax_32_32_363 = SLICE(rax_173, word32, 32) (alias)
	branch SLICE(rax_173, byte, 0) == 0x00 l000000000040697A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040697A:
	branch Mem24[rdi + 0x0000000000000020:word64] <=u 0x0000000000000001 l00000000004065CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406985:
	word64 rax_194 = fn0000000000404CD0(0x00000016)
	rax_32_32_363 = SLICE(rax_194, word32, 32) (alias)
	branch SLICE(rax_194, byte, 0) == 0x00 l00000000004065CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406997:
	edx_286 = 0x00000016 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406970:
	edx_286 = 0x0000000E (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406952:
	edx_286 = 0x00000015 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004068CF:
	edx_286 = 0x00000011 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040687F:
	edx_286 = 0x00000010 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040663B:
	branch eax_103 == 0x00004000 l00000000004068E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004068E0:
	branch SLICE((uint64) (SLICE((uint64) r15d_95, word32, 0) & 0x00000202), word32, 0) == 0x00000202 l00000000004069A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004069A1:
	edx_286 = 0x00000014 (alias)
	branch SLICE(fn0000000000404CD0(0x00000014), byte, 0) != 0x00 l00000000004066B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004069B8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004068F3:
	branch (r15b_237 & 0x02) == 0x00 l0000000000406910
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004068F9:
	edx_286 = 0x00000013 (alias)
	branch SLICE(fn0000000000404CD0(0x00000013), byte, 0) != 0x00 l00000000004066B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406910:
	edx_286 = 0x00000006 (alias)
	branch SLICE((uint64) (r15d_95 & 0x00000200), word32, 0) == 0x00000000 l00000000004066B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406922:
	edx_286 = SLICE((uint64) (SLICE((uint64) (SLICE((uint64) (0x00000000 - SLICE(cond(SLICE(fn0000000000404CD0(0x00000012), byte, 0) - 0x01), bool, 1)), word32, 0) & 0xFFFFFFF4), word32, 0) + 0x00000012), word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406646:
	branch eax_103 == 0x0000A000 l0000000000406859
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406859:
	edx_286 = 0x00000007 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406651:
	edx_286 = 0x00000008 (alias)
	branch eax_103 == 0x00001000 l00000000004066B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040665D:
	edx_286 = 0x00000009 (alias)
	branch eax_103 == 0x0000C000 l00000000004066B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406666:
	edx_286 = 0x0000000A (alias)
	branch eax_103 == 0x00006000 l00000000004066B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040666F:
	word64 rdx_305 = (uint64) (uint8) (eax_103 != 0x00002000)
	edx_286 = rdx_305 + 0x000000000000000B + rdx_305
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004065B9:
	word64 rax_307 = (uint64) Mem24[rdi + 0x00000000000000A0:word32]
	word24 eax_24_8_316 = SLICE(rax_307, word24, 8)
	rax_32_32_363 = SLICE(rax_307, word32, 32) (alias)
	edx_286 = SLICE((uint64) Mem24[rax_307 * 0x0000000000000004 + 0x00412C60:word32], word32, 0) (alias)
	branch edx_286 != 0x00000005 l0000000000406680
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406680:
	r14b_322 = SLICE((uint64) (r14d_315 & SEQ(eax_24_8_316, edx_286 == 0x00000007)), byte, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406689:
	branch r14b_322 == 0x00 l00000000004066B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040668E:
	edx_286 = 0x0000000D (alias)
	branch Mem24[0x000000000061B198:byte] != 0x00 l00000000004066B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040669C:
	edx_286 = SLICE((uint64) (SLICE((uint64) (SLICE((uint64) (0x00000000 - SLICE(cond(SLICE(fn0000000000404CD0(0x0000000D), byte, 0) - 0x01), bool, 1)), word32, 0) & 0xFFFFFFFA), word32, 0) + 0x0000000D), word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004065CF:
	word32 eax_360 = strlen(r12_32)
	word64 rax_370 = SEQ(rax_32_32_363, eax_360)
	word64 rbp_362 = Mem24[0x000000000061B120:word64]
	word64 r15_372 = r12_32 + rax_370
	branch rbp_362 == 0x0000000000000000 l0000000000406619
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004065EA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004065F0:
	word64 rdx_378 = Mem24[rbp_362:word64]
	branch rax_370 <u rdx_378 l0000000000406610
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004065F9:
	branch strncmp(r15_372 - rdx_378, Mem24[rbp_362 + 0x0000000000000008:word64], rdx_378) == 0x00000000 l00000000004068A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004068A0:
	branch rbp_362 == 0x0000000000000000 l0000000000406619
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004068A9:
	rbp_393 = rbp_362 + 0x0000000000000010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406610:
	rbp_362 = Mem24[rbp_362 + 0x0000000000000020:word64]
	branch rbp_362 != 0x0000000000000000 l00000000004065F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406619:
	edx_286 = 0x00000005 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004066B0:
	rbp_393 = ((uint64) edx_286 << 0x0000000000000004) + 6398944
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004066C0:
	branch Mem24[rbp_393 + 0x0000000000000008:word64] == 0x0000000000000000 l0000000000406890
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406890:
	rax = fn0000000000404CD0(0x00000004)
	r14b_688 = SLICE((uint64) SLICE(rax, word32, 0), byte, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004066D0:
	word64 rax_445 = fn0000000000404CD0(0x00000004)
	word32 rax_32_32_607 = SLICE(rax_445, word32, 32)
	branch SLICE(rax_445, byte, 0) != 0x00 l0000000000406840
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406840:
	word64 rcx_967
	fn0000000000406440(0x000000000061A3E0, out rcx_967)
	word64 rcx_968
	fn0000000000406440(0x000000000061A3F0, out rcx_968)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004066DD:
	word64 rcx_969
	fn0000000000406440(0x000000000061A3E0, out rcx_969)
	word64 rcx_970
	fn0000000000406440(rbp_393, out rcx_970)
	r14b_688 = 0x01 (alias)
	word64 rcx_971
	rax = SEQ(rax_32_32_607, fn0000000000406440(0x000000000061A3F0, out rcx_971)) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406570:
	r14b_688 = 0x00 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004066FF:
	word64 rbp_609
	word64 rcx_596
	word64 r9_595
	word64 r8_594
	word64 r10_592
	branch rdx == 0x0000000000000000 l00000000004067D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004067D8:
	rcx_596 = fn00000000004052D0(0x0000000000000000, Mem24[0x000000000061B0E8:word64], r12_32, Mem24[0x000000000061A610:word64], r10, r12_32, fs, out r8_594, out r9_595, out r10_592)
	Mem611[0x000000000061B018:word64] = Mem24[0x000000000061B018:word64] + rax
	rbp_609 = rax
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406708:
	branch Mem24[0x000000000061B130:byte] == 0x00 l0000000000406732
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406711:
	rax = Mem24[rdx + 0x0000000000000018:word64]
	branch Mem24[rdx + 0x0000000000000020:word64] <u rax + 0x0000000000000008 l0000000000406820
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406820:
	_obstack_newchunk(rdx, 0x0000000000000008)
	rax = Mem24[rdx + 0x0000000000000018:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406723:
	Mem625[rax:word64] = Mem24[0x000000000061B018:word64]
	Mem628[rdx + 0x0000000000000018:word64] = Mem625[rdx + 0x0000000000000018:word64] + 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406732:
	rcx_596 = fn00000000004052D0(0x0000000000000000, Mem630[0x000000000061B0E8:word64], r12_32, Mem630[0x000000000061A610:word64], r10, r12_32, fs, out r8_594, out r9_595, out r10_592)
	word64 rdx_658 = rax + Mem630[0x000000000061B018:word64]
	Mem661[0x000000000061B018:word64] = rdx_658
	rbp_609 = rax
	branch Mem630[0x000000000061B130:byte] == 0x00 l0000000000406781
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406767:
	word64 rax_664 = Mem661[rdx + 0x0000000000000018:word64]
	rcx_596 = rax_664 + 0x0000000000000008
	branch Mem661[rdx + 0x0000000000000020:word64] <u rax_664 + 0x0000000000000008 l0000000000406800
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406800:
	_obstack_newchunk(rdx, 0x0000000000000008)
	rax_664 = Mem661[rdx + 0x0000000000000018:word64]
	rdx_658 = Mem661[0x000000000061B018:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406779:
	Mem674[rax_664:word64] = rdx_658
	Mem677[rdx + 0x0000000000000018:word64] = Mem674[rdx + 0x0000000000000018:word64] + 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406781:
	fn0000000000406490()
	branch r14b_688 != 0x00 l00000000004067A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004067A0:
	fn0000000000406400()
	rcx_596 = Mem704[0x000000000061B0C8:word64]
	branch (uint64) ((uint128) (uint64) rcx /u rcx_596) == (uint64) ((uint128) ((uint64) ((rbp_609 - 0x0000000000000001) + rcx)) /u rcx_596) l000000000040678B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004067C6:
	fn0000000000406440(0x000000000061A550, out rcx_596)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040678B:
	rcxOut = rcx_596
	r8Out = r8_594
	r9Out = r9_595
	r10Out = r10_592
	return rbp_609
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000406540_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000406A30()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rsp
fn0000000000406A30_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406A30:
	branch Mem0[0x000000000061B129:byte] == 0x00 l0000000000406A4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406A39:
	rax = fn0000000000404CD0(0x00000004)
	word32 rax_32_32_68 = SLICE(rax, word32, 32)
	branch SLICE(rax, byte, 0) != 0x00 l0000000000406A58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406A58:
	word64 rcx_91
	fn0000000000406440(0x000000000061A3E0, out rcx_91)
	word64 rcx_92
	fn0000000000406440(0x000000000061A420, out rcx_92)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406A75_thunk_fn0000000000406440:
	word64 rcx_93
	return SEQ(rax_32_32_68, fn0000000000406440(0x000000000061A3F0, out rcx_93))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406A4B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406A4F:
	return rax
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000406A30_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000406A80(word32 ecx, word64 rdx, word64 rsi, word64 rdi, word64 r14, word64 r15, selector fs, ptr64 & r10Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] fs:[0..15] r14:[0..63] r15:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r10 r15 rax
// Trashed: SCZO r10 r11 r15 r8 r9 rax rcx rdi rdx rsi
// Preserved: r12 r13 r14 rbp rbx rsp
fn0000000000406A80_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406A80:
	word64 r13_10 = (uint64) ecx
	word64 rbx_25 = rsi
	word64 rax_28 = Mem23[fs:0x00000028:word64]
	branch Mem29[0x000000000061A748:word64] == 0x0000000000000000 l0000000000406ADB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406AB8:
	word64 rax_35 = strstr(rsi, 0x0000000000413766)
	word32 rax_32_32_42 = SLICE(rax_35, word32, 32)
	r14 = rax_35
	branch rax_35 == 0x0000000000000000 l0000000000406ADB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406ACD:
	branch SEQ(rax_32_32_42, strlen(rsi)) <=u 0x0000000000000065 l0000000000406B20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406B20:
	word64 rax_52 = __mempcpy_chk(fp - 312, rsi, rax_35 - rsi, 0x0000000000000105)
	word64 rcx_53 = (int64) Mem29[rdx + 0x0000000000000010:word32]
	strcpy(stpcpy(rax_52, rcx_53 + 0x000000000061A760 + rcx_53 * 0x00000000000000A0), rax_35 + 0x0000000000000002)
	rbx_25 = fp - 312
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406ADB:
	word64 r10_84
	word64 r15_89
	word64 rax_92 = fn0000000000410600(rdx, rbx_25, rbx_25, rdx, 0x00000000000003E9, rdi, 0x00000000, rdi, r13_10, r14, r15, fs, out r10_84, out r15_89)
	branch (rax_28 ^ Mem29[fs:0x00000028:word64]) != 0x0000000000000000 l0000000000406B66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406B66:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406B07:
	r10Out = r10_84
	r15Out = r15_89
	return rax_92
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000406A80_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000406B70(word64 rdi, word64 r10, word64 r15, selector fs, int8 Top, ptr64 & r9Out, ptr64 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] r15:[0..63] rdi:[0..63] Top:[0..7]
// LiveOut: r10 r8 r9
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi
// Preserved: fs r12 r13 r14 r15 rbp rbx rsp Top
fn0000000000406B70_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406B70:
	word32 rax_32_32_248
	word32 eax_67
	bool C_87
	word64 rax_25 = Mem20[fs:0x00000028:word64]
	branch Mem26[rdi + 0x00000000000000B0:byte] == 0x00 l0000000000406E00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406E00:
	branch Mem26[0x000000000061B17C:byte] == 0x00 l0000000000406BC2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406BA4:
	fn000000000040A600(fp - 0x00000000000012A8, rdi + 0x0000000000000010)
	branch Mem26[0x000000000061B17C:byte] != 0x00 l0000000000406E41
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406E41:
	word32 eax_58 = SLICE((uint64) Mem56[rdi + 0x00000000000000B4:word32], word32, 0)
	branch eax_58 == 0x00000001 l0000000000407138
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407138:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406E50:
	branch eax_58 != 0x00000002 l0000000000406BC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406E59:
	eax_67 = SLICE((uint64) Mem56[0x000000000061B14C:word32], word32, 0) (alias)
	C_87 = SLICE(cond(eax_67 - 0x00000001), bool, 1) (alias)
	branch eax_67 != 0x00000001 l0000000000406BD6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406E6D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406BC2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406BC7:
	eax_67 = SLICE((uint64) Mem72[0x000000000061B14C:word32], word32, 0) (alias)
	C_87 = SLICE(cond(eax_67 - 0x00000001), bool, 1) (alias)
	branch eax_67 == 0x00000001 l0000000000406E70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406E70:
	rax_32_32_248 = Mem80[rdi + 0x0000000000000084:word32] (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406BD6:
	branch C_87 l0000000000407040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407040:
	rax_32_32_248 = Mem91[rdi + 0x0000000000000074:word32] (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406BDC:
	branch eax_67 != 0x00000002 l0000000000406E90
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406E90:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406BE5:
	rax_32_32_248 = Mem91[rdi + 0x0000000000000064:word32] (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406BF7:
	word64 rbp_108 = fp - 0x0000000000000E88
	branch Mem104[0x000000000061B114:byte] != 0x00 l0000000000407060
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407060:
	branch Mem104[rdi + 0x00000000000000B0:byte] == 0x00 l0000000000407085
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040706F:
	word64 rdi_114 = Mem104[rdi + 0x0000000000000018:word64]
	branch rdi_114 == 0x0000000000000000 l0000000000407085
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407078:
	fn000000000040CD70(fp - 0x0000000000001278, rdi_114)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407085:
	__sprintf_chk(fp - 0x0000000000000E88, 0x0000000000000001, 0x0000000000000E3B, 0x0000000000413779, 0x00000000)
	word64 rdx_142 = fp - 0x0000000000000E88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004070B0:
	word64 rcx_145 = (uint64) Mem104[rdx_142:word32]
	word64 rax_153 = (uint64) (SLICE((uint64) (rcx_145 + 0xFFFFFFFFFEFEFEFF & SLICE((uint64) (~SLICE(rcx_145, word32, 0)), word32, 0)), word32, 0) & 0x80808080)
	word32 eax_154 = SLICE(rax_153, word32, 0)
	rdx_142 = rdx_142 + 0x0000000000000004
	byte al_171 = SLICE(eax_154, byte, 0)
	rax_32_32_248 = SLICE(rax_153, word32, 32) (alias)
	branch eax_154 == 0x00000000 l00000000004070B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004070C7:
	word64 rbp_159 = rdx_142 + 0x0000000000000002
	word32 ecx_165 = SLICE((uint64) (SLICE((uint64) eax_154, word32, 0) >>u 0x00000010), word32, 0)
	branch (eax_154 & 0x00008080) != 0x00000000 l00000000004070D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004070D5_1:
	al_171 = SLICE(ecx_165, byte, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004070D8:
	branch (eax_154 & 0x00008080) == 0x00000000 l00000000004070DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004070D8_1:
	rbp_159 = rdx_142
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004070DC:
	rbp_108 = rbp_159 - 0x03 - (al_171 * 0x02 <u 0x00)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406C0F:
	branch Mem104[0x000000000061B144:byte] == 0x00 l0000000000406C8F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406C18:
	word64 r14_1224 = 0x0000000000413764
	branch Mem104[rdi + 0x00000000000000B0:byte] != 0x00 l0000000000407288
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407288:
	word64 r8_1616
	word64 r9_1617
	word64 rax_230 = fn000000000040BD70(0x0000000000000200, SLICE((uint64) Mem104[0x000000000061B140:word32], word32, 0), fp - 0x0000000000001278, Mem104[rdi + 0x0000000000000050:word64], Mem104[0x000000000061B138:word64], fs, Top, out r8_1616, out r9_1617)
	rax_32_32_248 = SLICE(rax_230, word32, 32) (alias)
	r14_1224 = rax_230
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406C2B:
	word64 rdx_295
	word64 r15_268 = (uint64) SLICE((uint64) Mem104[0x000000000061B174:word32] - fn000000000040D420(rax_32_32_248, 0x00000000, r14_1224, fs), word32, 0)
	word32 r15d_269 = SLICE(r15_268, word32, 0)
	word32 eax_273 = SLICE((uint64) r15d_269, word32, 0)
	branch r15d_269 <= 0x00000000 l0000000000406F50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406C4B:
	word64 rax_274 = (uint64) (eax_273 - 0x00000001)
	byte al_289 = SLICE(rax_274, byte, 0)
	word48 rax_48_16_293 = SLICE(rax_274, word48, 16)
	word64 rcx_280 = rbp_108 + 0x0000000000000001 + (uint64) SLICE(rax_274, word32, 0)
	word64 rdx_281 = rbp_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406C60:
	rdx_281 = rdx_281 + 0x0000000000000001
	Mem284[rdx_281 - 0x0000000000000001:byte] = 0x20
	branch rdx_281 != rcx_280 l0000000000406C60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406C6D:
	rdx_295 = rbp_108 + 0x0000000000000001 + SEQ(rax_48_16_293, (int16) al_289)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406C74:
	r14_1224 = r14_1224 + 0x0000000000000001
	byte al_302 = SLICE((word32) Mem298[r14_1224 - 0x0000000000000001:byte], byte, 0)
	rbp_108 = rdx_295 + 0x0000000000000001
	Mem305[rbp_108 - 0x0000000000000001:byte] = al_302
	r15 = r15_268 (alias)
	branch al_302 != 0x00 l0000000000406F50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F50:
	rdx_295 = rbp_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406C8C:
	Mem309[rdx_295:byte] = 0x20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406C8F:
	word64 r10_1070 = r10
	word64 rsp_320 = fp - 4840
	branch Mem315[rdi + 0x00000000000000B0:byte] != 0x00 l0000000000407120
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407120:
	fn000000000040CD70(fp - 0x0000000000001278, Mem315[rdi + 0x0000000000000020:word64])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406CA1:
	__sprintf_chk(rbp_108, 0x0000000000000001, 0xFFFFFFFFFFFFFFFF, 0x0000000000413769, 0x00000000)
	word32 rax_32_32_368 = 0x00000000
	word64 rbp_1222 = rbp_108 + (uint64) ((uint32) strlen(rbp_108))
	branch Mem342[0x000000000061B130:byte] != 0x00 l00000000004070F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004070F0:
	fwrite_unlocked(0x0000000000413771, 0x0000000000000001, 0x0000000000000002, Mem342[0x000000000061A610:word64])
	Mem379[0x000000000061B018:word64] = Mem342[0x000000000061B018:word64] + 0x0000000000000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406CE2:
	branch Mem381[0x000000000061A569:byte] != 0x00 l0000000000406D08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406CEB:
	branch Mem381[0x000000000061A568:byte] != 0x00 l0000000000406D08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406CF4:
	branch Mem381[0x000000000061B146:byte] == 0x00 l0000000000407148
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407148:
	branch Mem381[0x000000000061B17D:byte] == 0x00 l0000000000406D58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407155:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406D01:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406D08:
	fputs_unlocked(fp - 0x0000000000000E88, Mem381[0x000000000061A610:word64])
	Mem410[0x000000000061B018:word64] = Mem381[0x000000000061B018:word64] + (rbp_1222 - (fp - 0x0000000000000E88))
	branch Mem410[0x000000000061A569:byte] != 0x00 l0000000000407248
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407248:
	rax_32_32_368 = SLICE(fn00000000004057B0(SLICE((word32) Mem410[rdi + 0x00000000000000B0:byte], byte, 0), SLICE((uint64) Mem410[0x000000000061B168:word32], word32, 0), (uint64) Mem410[rdi + 0x000000000000002C:word32], fs), word32, 32) (alias)
	rsp_320 = fp - 0x00000000000012F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406D2E:
	branch Mem410[0x000000000061A568:byte] != 0x00 l0000000000407210
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407210:
	word64 rax_445 = (uint64) Mem410[rdi + 0x0000000000000030:word32]
	word64 rdx_447 = (uint64) Mem410[0x000000000061B164:word32]
	word32 eax_448 = SLICE(rax_445, word32, 0)
	word32 rax_32_32_474 = SLICE(rax_445, word32, 32)
	word64 rdi_446 = 0x0000000000413764
	word32 edx_457 = SLICE(rdx_447, word32, 0)
	word64 rsi_449 = (uint64) eax_448
	branch Mem410[rdi + 0x00000000000000B0:byte] == 0x00 l0000000000407238
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407229:
	rdi_446 = 0x0000000000000000
	branch Mem410[0x000000000061B145:byte] == 0x00 l0000000000407415
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407415:
	Mem456[rsp_320 + 0x0000000000000018:word64] = rsi_449
	Mem458[rsp_320 + 0x0000000000000010:word32] = edx_457
	word64 rax_459 = fn000000000040CB40((uint64) eax_448)
	rax_32_32_474 = SLICE(rax_459, word32, 32) (alias)
	rdi_446 = rax_459
	rdx_447 = (uint64) Mem458[rsp_320 + 0x0000000000000010:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407238:
	rax_32_32_368 = SLICE(fn0000000000405700(rax_32_32_474, rdx_447, rdi_446, fs), word32, 32) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406D3B:
	branch Mem488[0x000000000061B146:byte] != 0x00 l00000000004071D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004071D0:
	rbp_1222 = fp - 0x0000000000000E88
	rax_32_32_368 = SLICE(fn00000000004057B0(SLICE((word32) Mem488[rdi + 0x00000000000000B0:byte], byte, 0), SLICE((uint64) Mem488[0x000000000061B160:word32], word32, 0), (uint64) Mem488[rdi + 0x000000000000002C:word32], fs), word32, 32) (alias)
	rsp_320 = rsp_320 + 0xFFFFFFFFFFFFFFF8
	branch Mem488[0x000000000061B17D:byte] == 0x00 l0000000000406D58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406D48:
	rbp_1222 = fp - 0x0000000000000E88
	branch Mem488[0x000000000061B17D:byte] != 0x00 l00000000004071F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004071F5:
	rbp_1222 = fp - 0x0000000000000E88
	rax_32_32_368 = SLICE(fn0000000000405700(rax_32_32_368, (uint64) Mem488[0x000000000061B16C:word32], Mem488[rdi + 0x00000000000000A8:word64], fs), word32, 32) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406D58:
	word64 r14_551
	word64 r13_648
	branch Mem548[rdi + 0x00000000000000B0:byte] == 0x00 l0000000000406F60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F60:
	r14_551 = 0x0000000000413764
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406D65:
	branch SLICE((uint64) (SLICE((uint64) Mem548[rdi + 0x0000000000000028:word32], word32, 0) & 0x0000B000), word32, 0) == 0x00002000 l00000000004072B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004072B0:
	word64 rax_558 = Mem548[rdi + 0x0000000000000038:word64]
	word32 r13d_619 = SLICE((uint64) (SLICE((uint64) (SLICE((uint64) (0xFFFFFFFE - Mem548[0x000000000061B15C:word32]), word32, 0) - Mem548[0x000000000061B158:word32]), word32, 0) + Mem548[0x000000000061B154:word32]), word32, 0)
	word64 rax_581 = fn000000000040CD70(rsp_320 + 0x0000000000000070, (uint64) (SEQ(SLICE(rax_558 >>u 0x000000000000000C, word24, 8), SLICE(rax_558 >>u 0x000000000000000C, byte, 0) & 0x00) | (word32) SLICE(rax_558, byte, 0)))
	word64 r14_593 = (uint64) Mem548[0x000000000061B158:word32]
	word64 rdx_590 = Mem548[rdi + 0x0000000000000038:word64]
	fn000000000040CD70(rsp_320 + 0x0000000000000050, (uint64) (SLICE((uint64) (SLICE(rdx_590 >>u 0x0000000000000020, word32, 0) & 0xFFFFF000), word32, 0) | SLICE((uint64) (SLICE((uint64) SLICE(rdx_590 >>u 0x0000000000000008, word32, 0), word32, 0) & 0x00000FFF), word32, 0)))
	r15 = rax_581
	word32 r14d_633 = SLICE(r14_593, word32, 0)
	branch r13d_619 < 0x00000000 l0000000000407328
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407324_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407328:
	Mem631[rsp_320 + 0x0000000000000008:word64] = rax_581
	Mem634[rsp_320:word32] = r14d_633
	__sprintf_chk(rbp_1222, 0x0000000000000001, 0xFFFFFFFFFFFFFFFF, 0x0000000000413774, 0x00000000)
	r13_648 = rbp_1222 + 0x0000000000000001 + (int64) Mem634[0x000000000061B154:word32]
	r14_551 = r14_593 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406D78:
	word64 r8_1618
	word64 r9_1619
	word64 rax_672 = fn000000000040BD70(0x0000000000000001, SLICE((uint64) Mem548[0x000000000061B134:word32], word32, 0), rsp_320 + 0x0000000000000070, Mem548[rdi + 0x0000000000000040:word64], Mem548[0x000000000061A560:word64], fs, Top, out r8_1618, out r9_1619)
	rax_32_32_368 = SLICE(rax_672, word32, 32) (alias)
	r14_551 = rax_672
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406D9B:
	word32 r13d_705 = SLICE((uint64) SLICE((uint64) Mem548[0x000000000061B154:word32] - fn000000000040D420(rax_32_32_368, 0x00000000, r14_551, fs), word32, 0), word32, 0)
	word32 eax_709 = SLICE((uint64) r13d_705, word32, 0)
	branch r13d_705 <= 0x00000000 l0000000000406DDC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406DB7:
	word64 rax_710 = (uint64) (eax_709 - 0x00000001)
	byte al_724 = SLICE(rax_710, byte, 0)
	word48 rax_48_16_728 = SLICE(rax_710, word48, 16)
	word64 rcx_715 = rbp_1222 + 0x0000000000000001 + (uint64) SLICE(rax_710, word32, 0)
	word64 rdx_716 = rbp_1222
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406DC8:
	rdx_716 = rdx_716 + 0x0000000000000001
	Mem719[rdx_716 - 0x0000000000000001:byte] = 0x20
	branch rdx_716 != rcx_715 l0000000000406DC8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406DD5:
	rbp_1222 = rbp_1222 + 0x0000000000000001 + SEQ(rax_48_16_728, (int16) al_724)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406DDC:
	r14_551 = r14_551 + 0x0000000000000001
	byte al_737 = SLICE((word32) Mem733[r14_551 - 0x0000000000000001:byte], byte, 0)
	r13_648 = rbp_1222 + 0x0000000000000001
	Mem740[r13_648 - 0x0000000000000001:byte] = al_737
	branch al_737 == 0x00 l0000000000406E98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406E98:
	Mem742[rbp_1222:byte] = 0x20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406E9C:
	word32 rax_32_32_1012
	word64 r13_1014
	word64 r9_913
	word64 rax_746 = localtime(rsp_320 + 0x0000000000000030)
	Mem748[r13_648:byte] = 0x01
	branch Mem748[rdi + 0x00000000000000B0:byte] == 0x00 l0000000000406F80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406EB8:
	branch rax_746 == 0x0000000000000000 l0000000000407364
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406EC1:
	word32 r8d_798
	word64 rdi_759 = Mem748[0x000000000061B188:word64]
	word64 rdx_757 = Mem748[0x000000000061B180:word64]
	word64 rsi_758 = Mem748[rsp_320 + 0x0000000000000030:word64]
	word32 edi_764 = SLICE(rdi_759, word32, 0)
	word32 ecx_765 = Mem748[rsp_320 + 0x0000000000000038:word32]
	branch rsi_758 > rdx_757 l0000000000407380
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406EE2:
	branch rsi_758 < rdx_757 l0000000000406EEC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406EE4:
	branch edi_764 < ecx_765 l0000000000407380
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407380:
	Mem771[rsp_320 + 0x0000000000000010:word64] = rax_746
	fn000000000040AB30(0x000000000061B180)
	rdx_757 = Mem771[0x000000000061B180:word64]
	r8d_798 = Mem771[0x000000000061B188:word32] (alias)
	rsi_758 = Mem771[rsp_320 + 0x0000000000000030:word64]
	ecx_765 = Mem771[rsp_320 + 0x0000000000000038:word32] (alias)
	rax_746 = Mem771[rsp_320 + 0x0000000000000010:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406EEC:
	r8d_798 = SLICE(rdi_759, word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406EEF:
	word32 edi_820
	word64 rdi_791 = rdx_757 + 0xFFFFFFFFFF0F3D54
	branch rdi_791 >= rsi_758 l0000000000407268
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407268:
	edi_820 = 0x00000000 (alias)
	branch rdi_791 > rsi_758 l0000000000406F20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407273:
	branch r8d_798 >= ecx_765 l0000000000406F20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040727C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406EFF:
	edi_820 = 0x00000001 (alias)
	branch rdx_757 > rsi_758 l0000000000406F20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F09:
	edi_820 = 0x00000000 (alias)
	branch rdx_757 < rsi_758 l0000000000406F20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F0E:
	edi_820 = SLICE((uint64) (SLICE((uint64) (SLICE((uint64) ecx_765, word32, 0) - r8d_798), word32, 0) >>u 0x0000001F), word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F20:
	word64 rax_874 = fn0000000000406A80(ecx_765, rax_746, Mem835[(int64) edi_820 * 0x0000000000000008 + 0x0061A3D0:word64], r13_648, r14_551, r15, fs, out r10_1070, out r15)
	branch rax_874 == 0x0000000000000000 l0000000000406F6B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F6B:
	branch Mem835[r13_648:byte] == 0x00 l0000000000406F3B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F72:
	branch Mem835[rdi + 0x00000000000000B0:byte] != 0x00 l0000000000407364
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407364:
	r9_913 = fn000000000040CCD0(rsp_320 + 0x0000000000000050, Mem900[rsp_320 + 0x0000000000000030:word64])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F7F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F80:
	r9_913 = 0x0000000000413764
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F86:
	branch SLICE((uint64) Mem915[0x000000000061A3C4:word32], word32, 0) < 0x00000000 l00000000004073B1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004073B1:
	Mem926[rsp_320 + 0x0000000000000010:word64] = r9_913
	Mem927[rsp_320 + 0x0000000000000028:word64] = 0x0000000000000000
	word64 rax_928 = localtime(rsp_320 + 0x0000000000000028)
	branch rax_928 == 0x0000000000000000 l0000000000407403
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004073D3:
	word64 r15_1620
	word64 rax_954 = fn0000000000406A80(0x00000000, rax_928, Mem927[0x000000000061A3D0:word64], rsp_320 + 0x0000000000000070, r14_551, r15, fs, out r10_1070, out r15_1620)
	word32 r8d_987 = SLICE((uint64) Mem927[0x000000000061A3C4:word32], word32, 0)
	word64 r9_966 = Mem927[rsp_320 + 0x0000000000000010:word64]
	branch rax_954 != 0x0000000000000000 l0000000000407436
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407436:
	Mem974[rsp_320 + 0x0000000000000010:word64] = r9_966
	word32 eax_984 = SLICE(fn000000000040D240(0x0000000000000000, rax_954, rsp_320 + 0x0000000000000070, fs), word32, 0)
	Mem985[0x000000000061A3C4:word32] = eax_984
	r8d_987 = SLICE((uint64) eax_984, word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004073FA:
	branch r8d_987 >= 0x00000000 l0000000000406F96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407403:
	Mem993[0x000000000061A3C4:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F96:
	__sprintf_chk(r13_648, 0x0000000000000001, 0xFFFFFFFFFFFFFFFF, 0x0000000000413779, 0x00000000)
	rax_32_32_1012 = 0x00000000 (alias)
	r13_1014 = r13_648 + (uint64) ((uint32) strlen(r13_648))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F3B:
	word64 rax_1018 = rax_874 + r13_648
	Mem1021[rax_1018:byte] = 0x20
	Mem1022[rax_1018 + 0x0000000000000001:byte] = 0x00
	rax_32_32_1012 = SLICE(rax_1018, word32, 32) (alias)
	r13_1014 = rax_1018 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406FBC:
	word64 r13_1046 = r13_1014 - (fp - 0x0000000000000E88)
	word32 eax_1048 = fputs_unlocked(fp - 0x0000000000000E88, Mem1023[0x000000000061A610:word64])
	Mem1062[0x000000000061B018:word64] = Mem1023[0x000000000061B018:word64] + r13_1046
	word64 rcx_1113
	word64 r10_1109
	word64 r8_1111
	word64 r9_1112
	word64 rax_1117 = fn0000000000406540(SEQ(rax_32_32_1012, eax_1048), r13_1046, 0x000000000061AFC0, 0x00, rdi, r10_1070, fs, out rcx_1113, out r8_1111, out r9_1112, out r10_1109)
	word64 rdx_1122 = (uint64) Mem1062[rdi + 0x00000000000000A0:word32]
	word32 rax_32_32_1142 = SLICE(rax_1117, word32, 32)
	branch SLICE(rdx_1122, word32, 0) == 0x00000006 l0000000000407160
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407160:
	branch Mem1062[rdi + 0x0000000000000008:word64] == 0x0000000000000000 l0000000000407012
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040716B:
	word32 eax_1133 = fwrite_unlocked(0x000000000041377E, 0x0000000000000001, 0x0000000000000004, Mem1062[0x000000000061A610:word64])
	Mem1139[0x000000000061B018:word64] = Mem1062[0x000000000061B018:word64] + 0x0000000000000004
	word64 rcx_1148
	fn0000000000406540(SEQ(rax_32_32_1142, eax_1133), r13_1046 + 0x0000000000000004 + rax_1117, 0x0000000000000000, 0x01, rdi, r10_1109, fs, out rcx_1148, out r8_1111, out r9_1112, out r10_1109)
	branch SLICE((uint64) Mem1139[0x000000000061B12C:word32], word32, 0) == 0x00000000 l0000000000407012
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004071B0:
	fn0000000000405D00(rcx_1148, 0x0000000000000000, (uint64) Mem1139[rdi + 0x00000000000000A4:word32], 0x01)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406FF9:
	branch SLICE((uint64) Mem1062[0x000000000061B12C:word32], word32, 0) == 0x00000000 l0000000000407012
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407003:
	fn0000000000405D00(rcx_1113, rdx_1122, (uint64) Mem1062[rdi + 0x0000000000000028:word32], SLICE((word32) Mem1062[rdi + 0x00000000000000B0:byte], byte, 0))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407012:
	branch (rax_25 ^ Mem1201[fs:0x00000028:word64]) != 0x0000000000000000 l000000000040745A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040745A:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407029:
	r9Out = r9_1112
	r10Out = r10_1109
	return r8_1111
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000406B70_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406DF5:
	rbp_1222 = r13_648
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000407870(word64 rsi, word64 rdi, word64 r10, selector fs, int8 Top, ptr64 & r9Out, ptr64 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] rdi:[0..63] rsi:[0..63] Top:[0..7]
// LiveOut: r10 r8 r9
// Trashed: SCZO r10 r11 r8 r9 rcx rdi rdx rsi
// Preserved: rbp rbx rsp
fn0000000000407870_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407870:
	word64 rax_15 = Mem10[fs:0x00000028:word64]
	word64 rax_166 = fn0000000000406A30()
	branch Mem16[0x000000000061B114:byte] != 0x00 l0000000000407970
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407970:
	branch Mem16[rdi + 0x00000000000000B0:byte] == 0x00 l0000000000407992
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040797E:
	word64 rdi_35 = Mem16[rdi + 0x0000000000000018:word64]
	branch rdi_35 == 0x0000000000000000 l0000000000407992
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407987:
	fn000000000040CD70(fp - 696, rdi_35)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407992:
	branch Mem16[0x000000000061B150:word32] == 0x00000004 l00000000004079A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004079A0_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004079A7:
	rax_166 = (uint64) (uint32) __printf_chk(0x0000000000000001, 0x0000000000413779, 0x00000000) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004078A4:
	branch Mem16[0x000000000061B144:byte] == 0x00 l00000000004078E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004078AD:
	branch Mem16[rdi + 0x00000000000000B0:byte] != 0x00 l00000000004079C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004079C0:
	word64 r9_280
	word64 r8_279
	fn000000000040BD70(0x0000000000000200, SLICE((uint64) Mem16[0x000000000061B140:word32], word32, 0), fp - 696, Mem16[rdi + 0x0000000000000050:word64], Mem16[0x000000000061B138:word64], fs, Top, out r8_279, out r9_280)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004078BF:
	branch Mem16[0x000000000061B150:word32] == 0x00000004 l00000000004078D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004078CD_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004078D4:
	rax_166 = (uint64) (uint32) __printf_chk(0x0000000000000001, 0x0000000000413779, 0x00000000) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004078E0:
	branch Mem16[0x000000000061B17D:byte] == 0x00 l0000000000407911
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004078E9:
	branch Mem16[0x000000000061B150:word32] == 0x00000004 l0000000000407900
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004078F9_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407900:
	rax_166 = (uint64) (uint32) __printf_chk(0x0000000000000001, 0x0000000000413779, 0x00000000) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407911:
	word64 r10_175
	word64 r8_177
	word64 r9_178
	word64 rcx_179
	fn0000000000406540(rax_166, rsi, 0x0000000000000000, 0x00, rdi, r10, fs, out rcx_179, out r8_177, out r9_178, out r10_175)
	branch SLICE((uint64) Mem16[0x000000000061B12C:word32], word32, 0) == 0x00000000 l0000000000407948
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040792D:
	fn0000000000405D00(rcx_179, (uint64) Mem16[rdi + 0x00000000000000A0:word32], (uint64) Mem16[rdi + 0x0000000000000028:word32], SLICE((word32) Mem16[rdi + 0x00000000000000B0:byte], byte, 0))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407948:
	branch (rax_15 ^ Mem16[fs:0x00000028:word64]) != 0x0000000000000000 l00000000004079E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004079E6:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407962:
	r9Out = r9_178
	r10Out = r10_175
	return r8_177
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000407870_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn00000000004079F0(word64 r10, word64 r12, word64 r15, selector fs, int8 Top, ptr64 & r9Out, ptr64 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] r12:[0..63] r15:[0..63] Top:[0..7]
// LiveOut: r10 r8 r9
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn00000000004079F0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004079F0:
	branch Mem0[0x000000000061B150:word32] >u 0x00000004 l0000000000407A46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004079F9:
	switch (Mem23[0x000000000061B150:word32]) { l0000000000407C01 l0000000000407C75 l0000000000407CDA l0000000000407A48 l0000000000407B31 }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407B31:
	branch Mem23[0x000000000061B1B0:word64] == 0x0000000000000000 l0000000000407A18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407B3F:
	word64 r13_35 = Mem23[Mem23[0x000000000061B1A8:word64]:word64]
	word64 rbx_30 = 0x0000000000000000
	word64 r12_102 = 0x0000000000000000
	word64 r8_861
	word64 r9_862
	word64 r10_40
	word64 rbp_100 = fn0000000000405D50(r13_35, r10, 0x0000000000000000, fs, Top, out r8_861, out r9_862, out r10_40)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407B60:
	rbx_30 = rbx_30 + 0x0000000000000001
	r8 = fn0000000000407870(r12_102, r13_35, r10_40, fs, Top, out r9, out r10)
	r12_102 = rbp_100
	branch rbx_30 >=u Mem76[0x000000000061B1B0:word64] l0000000000407A18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407B7F:
	r13_35 = Mem76[Mem76[0x000000000061B1A8:word64] + rbx_30 * 0x0000000000000008:word64]
	word64 r8_863
	word64 r9_864
	word64 rax_88 = fn0000000000405D50(r13_35, r10, rbp_100, fs, Top, out r8_863, out r9_864, out r10_40)
	branch rbx_30 == 0x0000000000000000 l0000000000407E00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407E00:
	rbp_100 = rbp_100 + rax_88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407B9B:
	byte r14b_139
	word32 r15d_131
	r12_102 = rbp_100 + 0x0000000000000002
	branch rax_88 >=u Mem76[0x000000000061B0C8:word64] l0000000000407E10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407E10:
	r15d_131 = 0x0000000A (alias)
	r14b_139 = 0x0A (alias)
	r12_102 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407BB0:
	r15d_131 = 0x00000020 (alias)
	r14b_139 = 0x20 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407BBC:
	word64 rdi_116 = Mem76[0x000000000061A610:word64]
	rbp_100 = rax_88
	word64 rax_117 = Mem76[rdi_116 + 0x0000000000000028:word64]
	branch rax_117 >=u Mem76[rdi_116 + 0x0000000000000030:word64] l0000000000407E8B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407E8B:
	__overflow(rdi_116, 0x000000000000002C)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407BD1:
	Mem123[rdi_116 + 0x0000000000000028:word64] = rax_117 + 0x0000000000000001
	Mem124[rax_117:byte] = 0x2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407BDC:
	word64 rdi_126 = Mem125[0x000000000061A610:word64]
	word64 rax_127 = Mem125[rdi_126 + 0x0000000000000028:word64]
	branch rax_127 >=u Mem125[rdi_126 + 0x0000000000000030:word64] l0000000000407E7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407E7E:
	__overflow(rdi_126, (uint64) r15d_131)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407BF1:
	Mem137[rdi_126 + 0x0000000000000028:word64] = rax_127 + 0x0000000000000001
	Mem142[rax_127:byte] = r14b_139
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407A48:
	word64 r8_858
	word64 rax_149 = fn0000000000405ED0(0x0000000000000000, r10, fs, Top, out r8_858)
	word64 r14_160 = Mem23[0x000000000061B028:word64] - 0x0000000000000018 + rax_149 * 0x0000000000000018
	word64 rbx_162 = Mem23[Mem23[0x000000000061B1A8:word64]:word64]
	word64 r10_164
	word64 r9_860
	word64 r8_859
	word64 rax_168 = fn0000000000405D50(rbx_162, r10, r12, fs, Top, out r8_859, out r9_860, out r10_164)
	word64 r12_185 = Mem177[Mem177[r14_160 + 0x0000000000000010:word64]:word64]
	word64 r15_144 = 0x0000000000000000
	word64 rbx_184 = 0x0000000000000001
	r8 = fn0000000000407870(0x0000000000000000, rbx_162, r10_164, fs, Top, out r9, out r10)
	word64 rcx_199 = rax_168
	branch Mem177[0x000000000061B1B0:word64] >u 0x0000000000000001 l0000000000407B0D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407B0D:
	word64 rdx_207 = (uint64) ((uint128) (uint64) rbx_184 % rax_149)
	branch rdx_207 == 0x0000000000000000 l0000000000407AB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407AB0:
	word64 rdi_214 = Mem213[0x000000000061A610:word64]
	word64 rax_215 = Mem213[rdi_214 + 0x0000000000000028:word64]
	branch rax_215 >=u Mem213[rdi_214 + 0x0000000000000030:word64] l0000000000407E27
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407E27:
	__overflow(rdi_214, 0x000000000000000A)
	r15_144 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407AC5:
	Mem229[rdi_214 + 0x0000000000000028:word64] = rax_215 + 0x0000000000000001
	Mem230[rax_215:byte] = 0x0A
	r15_144 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407B1D:
	word64 r12_233 = r12_185 + r15_144
	fn0000000000405200(r12_233, rcx_199 + r15_144)
	r15_144 = r12_233
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407AD3:
	word64 r12_253 = Mem248[Mem248[0x000000000061B1A8:word64] + rbx_184 * 0x0000000000000008:word64]
	word64 r10_263
	word64 r9_867
	fn0000000000407870(r15_144, r12_253, r10, fs, Top, out r9_867, out r10_263)
	rcx_199 = fn0000000000405D50(r12_253, r10_263, r12_253, fs, Top, out r8, out r9, out r10)
	rbx_184 = rbx_184 + 0x0000000000000001
	r12_185 = Mem248[Mem248[r14_160 + 0x0000000000000010:word64] + rdx_207 * 0x0000000000000008:word64]
	branch rbx_184 >=u Mem248[0x000000000061B1B0:word64] l0000000000407A18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407AA1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407A18:
	word64 rdi_298 = Mem297[0x000000000061A610:word64]
	word64 rax_299 = Mem297[rdi_298 + 0x0000000000000028:word64]
	branch rax_299 >=u Mem297[rdi_298 + 0x0000000000000030:word64] l0000000000407E39
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407E39:
	__overflow(rdi_298, 0x000000000000000A)
	r9Out = r9
	r10Out = r10
	return r8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407A2D:
	Mem325[rdi_298 + 0x0000000000000028:word64] = rax_299 + 0x0000000000000001
	Mem326[rax_299:byte] = 0x0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407CDA:
	word64 rax_329 = fn0000000000405ED0(0x0000000000000001, r10, fs, Top, out r8)
	word128 rdx_rax_343 = (uint128) (uint64) Mem23[0x000000000061B1B0:word64]
	word64 rdx_345 = (uint64) (rdx_rax_343 % rax_329)
	word64 r15_340 = Mem23[0x000000000061B028:word64] - 0x0000000000000018 + rax_329 * 0x0000000000000018
	word64 rdx_353 = SEQ(SLICE(rdx_345, word32, 32), (word32) (rdx_345 != 0x0000000000000000)) + (uint64) (rdx_rax_343 /u rax_329)
	branch rdx_353 == 0x0000000000000000 l0000000000407A38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407D1A:
	word64 qwLoc40_677 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407D30:
	word64 rbp_363 = 0x0000000000000000
	word64 rbx_364 = 0x0000000000000000
	word64 r13_368 = qwLoc40_677 * 0x0000000000000008
	word64 r12_369 = qwLoc40_677
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407D6B:
	word64 r14_373 = Mem370[Mem370[0x000000000061B1A8:word64] + r13_368:word64]
	word64 r8_865
	word64 r10_379
	word64 r9_866
	word64 rax_383 = fn0000000000405D50(r14_373, r10, r12_369, fs, Top, out r8_865, out r9_866, out r10_379)
	word64 rcx_400 = Mem393[Mem393[r15_340 + 0x0000000000000010:word64] + rbp_363:word64]
	rbp_363 = rbp_363 + 0x0000000000000008
	r8 = fn0000000000407870(rbx_364, r14_373, r10_379, fs, Top, out r9, out r10)
	r12_369 = r12_369 + rdx_353
	r13_368 = r13_368 + rdx_353 * 0x0000000000000008
	branch r12_369 <u Mem403[0x000000000061B1B0:word64] l0000000000407D50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407D50:
	word64 r14_422 = rcx_400 + rbx_364
	fn0000000000405200(r14_422, rax_383 + rbx_364)
	rbx_364 = r14_422
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407DB2:
	word64 rdi_436 = Mem403[0x000000000061A610:word64]
	word64 rax_437 = Mem403[rdi_436 + 0x0000000000000028:word64]
	branch rax_437 >=u Mem403[rdi_436 + 0x0000000000000030:word64] l0000000000407E51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407E51:
	__overflow(rdi_436, 0x000000000000000A)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407DC7:
	Mem443[rdi_436 + 0x0000000000000028:word64] = rax_437 + 0x0000000000000001
	Mem444[rax_437:byte] = 0x0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407DD2:
	word64 v32_447 = qwLoc40_677 + 0x0000000000000001
	qwLoc40_677 = v32_447
	branch v32_447 != rdx_353 l0000000000407D30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407DE8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407C75:
	word64 rbx_466 = 0x0000000000000000
	branch Mem23[0x000000000061B1B0:word64] == 0x0000000000000000 l0000000000407A38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407C85:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407C88:
	r8 = fn0000000000407870(0x0000000000000000, Mem469[Mem469[0x000000000061B1A8:word64] + rbx_466 * 0x0000000000000008:word64], r10, fs, Top, out r9, out r10)
	word64 rdi_492 = Mem469[0x000000000061A610:word64]
	word64 rax_493 = Mem469[rdi_492 + 0x0000000000000028:word64]
	branch rax_493 >=u Mem469[rdi_492 + 0x0000000000000030:word64] l0000000000407E60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407E60:
	__overflow(rdi_492, 0x000000000000000A)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407CAF:
	Mem499[rdi_492 + 0x0000000000000028:word64] = rax_493 + 0x0000000000000001
	Mem500[rax_493:byte] = 0x0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407CBA:
	rbx_466 = rbx_466 + 0x0000000000000001
	branch Mem503[0x000000000061B1B0:word64] >u rbx_466 l0000000000407C88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407CC7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407C01:
	word64 rbx_522 = 0x0000000000000000
	branch Mem23[0x000000000061B1B0:word64] == 0x0000000000000000 l0000000000407A38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407A38:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407C11:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407C18:
	fn0000000000406A30()
	r8 = fn0000000000406B70(Mem550[Mem550[0x000000000061B1A8:word64] + rbx_522 * 0x0000000000000008:word64], r10, r15, fs, Top, out r9, out r10)
	word64 rdi_571 = Mem550[0x000000000061A610:word64]
	word64 rax_572 = Mem550[rdi_571 + 0x0000000000000028:word64]
	branch rax_572 >=u Mem550[rdi_571 + 0x0000000000000030:word64] l0000000000407E6F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407E6F:
	__overflow(rdi_571, 0x000000000000000A)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407C42:
	Mem578[rdi_571 + 0x0000000000000028:word64] = rax_572 + 0x0000000000000001
	Mem579[rax_572:byte] = 0x0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407C4D:
	Mem582[0x000000000061B018:word64] = Mem580[0x000000000061B018:word64] + 0x0000000000000001
	rbx_522 = rbx_522 + 0x0000000000000001
	branch Mem582[0x000000000061B1B0:word64] >u rbx_522 l0000000000407C18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407C62:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407A46:
	r9Out = r9
	r10Out = r10
	return r8
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00000000004079F0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000407EA0(word64 rcx, word32 edx, word32 esi, word64 rdi, word64 r10, selector fs, int8 Top, ptr64 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx:[0..31] esi:[0..31] fs:[0..15] r10:[0..63] rcx:[0..63] rdi:[0..63] Top:[0..7]
// LiveOut: r9 rax
// Trashed: SCZO r9 rax rcx rdi rdx rsi
// Preserved: r10 r11 r12 r13 r14 r15 r8 rbp rbx rsp
fn0000000000407EA0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407EA0:
	word32 r13d_2122 = SLICE((uint64) esi, word32, 0)
	byte bLoc038C_2835 = SLICE(edx, byte, 0)
	word64 rax_32 = Mem28[fs:0x00000028:word64]
	word64 rcx_113 = Mem33[0x000000000061B1B0:word64]
	word64 r9_112 = Mem33[0x000000000061B1C0:word64]
	branch rcx_113 == Mem33[0x000000000061B1B8:word64] l0000000000408400
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408400:
	word64 rdi_40 = Mem33[0x000000000061B1C0:word64]
	branch rcx_113 >u 0x00000000AAAAAAAA l0000000000408C7B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408C7B:
	fn0000000000410E50()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040841A:
	word64 rax_103 = fn0000000000410C90(rcx_113 * 0x0000000000000180, rdi_40)
	Mem109[0x000000000061B1B8:word64] = Mem100[0x000000000061B1B8:word64] << 0x0000000000000001
	Mem111[0x000000000061B1C0:word64] = rax_103
	r9_112 = rax_103
	rcx_113 = Mem111[0x000000000061B1B0:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407EED:
	word64 rdi_3185
	word64 rcx_116 = rcx_113 * 0x0000000000000003
	word64 r14_120 = r9_112 + (rcx_116 << 0x0000000000000006)
	word32 esi_141 = 0x000000C0
	rdi_3185 = r14_120
	branch (SLICE(r14_120, byte, 0) & 0x01) != 0x00 l0000000000408A18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408A18:
	Mem126[r14_120:byte] = 0x00
	esi_141 = 0x000000BF (alias)
	rdi_3185 = r14_120 + 0x0000000000000001 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F0B:
	word64 rdi_140
	word64 r9_1150
	byte dil_129 = SLICE(rdi_3185, byte, 0)
	branch (dil_129 & 0x02) != 0x00 l00000000004089E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004089E0:
	Mem147[rdi_3185:word16] = 0x0000
	r9_1150 = 0x0000000000000000
	rdi_140 = rdi_3185 + 0x0000000000000002
	esi_141 = SLICE((uint64) (esi_141 - 0x00000002), word32, 0) (alias)
	branch (SLICE(rdi_3185 + 0x0000000000000002, byte, 0) & 0x04) == 0x00 l0000000000407F1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004089F9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F15:
	rdi_140 = rdi_3185 (alias)
	r9_1150 = r9_112
	r9_1150 = r9_112
	branch (dil_129 & 0x04) != 0x00 l0000000000408A00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408A00:
	Mem157[rdi_140:word32] = 0x00000000
	esi_141 = SLICE((uint64) (esi_141 - 0x00000004), word32, 0) (alias)
	rdi_140 = rdi_140 + 0x0000000000000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F1F:
	byte sil_169 = SLICE(esi_141, byte, 0)
	word64 rcx_168 = (uint64) (SLICE((uint64) esi_141, word32, 0) >>u 0x00000003)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F2A:
	word32 rax_32_32_1998 = 0x00000000
	word24 r13d_24_8_1003 = SLICE(r13d_2122, word24, 8)
	branch rcx_168 == 0x0000000000000000 l0000000000407F2D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F2D:
	branch (sil_169 & 0x04) != 0x00 l0000000000408360
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408360:
	Mem175[rdi_140:word32] = 0x00000000
	rdi_140 = rdi_140 + 0x0000000000000004
	branch (sil_169 & 0x02) == 0x00 l0000000000407F3D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408374:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F33:
	branch (sil_169 & 0x02) != 0x00 l0000000000408340
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408340:
	rdi_140 = rdi_140 + 0x0000000000000002
	Mem188[rdi_140 - 0x0000000000000002:word16] = 0x0000
	branch SLICE((uint64) (esi_141 & 0x00000001), word32, 0) == 0x00000000 l0000000000407F46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408355:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F3D:
	branch SLICE((uint64) (esi_141 & 0x00000001), word32, 0) != 0x00000000 l0000000000408338
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408338:
	Mem206[rdi_140:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F46:
	word64 r12_1409
	word32 ecx_308
	Mem221[r14_120 + 0x0000000000000018:word64] = 0x0000000000000000
	Mem227[r14_120 + 0x00000000000000A0:word32] = r13d_2122
	branch bLoc038C_2835 == 0x00 l0000000000408220
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408220:
	branch Mem227[0x000000000061B0C1:byte] != 0x00 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040822D:
	branch r13d_2122 == 0x00000003 l0000000000408910
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408910:
	branch Mem227[0x000000000061B129:byte] == 0x00 l0000000000408237
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040891D:
	word64 rax_243 = fn0000000000404CD0(0x00000013)
	rax_32_32_1998 = SLICE(rax_243, word32, 32) (alias)
	branch SLICE(rax_243, byte, 0) != 0x00 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040893D:
	word64 rax_259 = fn0000000000404CD0(0x00000012)
	rax_32_32_1998 = SLICE(rax_259, word32, 32) (alias)
	branch SLICE(rax_259, byte, 0) != 0x00 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408956:
	word64 rax_275 = fn0000000000404CD0(0x00000014)
	rax_32_32_1998 = SLICE(rax_275, word32, 32) (alias)
	branch SLICE(rax_275, byte, 0) != 0x00 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040896F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408237:
	byte al_291 = SLICE((word32) Mem289[0x000000000061B114:byte], byte, 0)
	branch al_291 == 0x00 l0000000000408818
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408818:
	branch Mem289[0x000000000061B0C0:byte] != 0x00 l0000000000408246
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408246:
	branch r13d_2122 == 0x00000000 l0000000000408255
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040824F:
	branch r13d_2122 != 0x00000006 l0000000000408280
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408255:
	ecx_308 = SLICE((uint64) Mem289[0x000000000061B110:word32], word32, 0) (alias)
	branch ecx_308 == 0x00000005 l0000000000408BD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408BD0:
	ecx_308 = 0x00000005 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408264:
	branch Mem289[0x000000000061B198:byte] != 0x00 l0000000000407F68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408271:
	branch Mem289[0x000000000061B115:byte] != 0x00 l0000000000407F68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040827E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408280:
	branch al_291 != 0x00 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408288:
	branch Mem289[0x000000000061B0C0:byte] == 0x00 l0000000000408825
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408825:
	r12_1409 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408295:
	branch r13d_2122 == 0x00000000 != 0x00 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040829E:
	r12_1409 = 0x0000000000000000
	branch r13d_2122 != 0x00000005 l00000000004081E1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004082AB:
	branch Mem289[0x000000000061B12C:word32] == 0x00000003 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004082B8:
	branch Mem289[0x000000000061B129:byte] == 0x00 l00000000004081E1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004082C5:
	word64 rax_354 = fn0000000000404CD0(0x0000000E)
	rax_32_32_1998 = SLICE(rax_354, word32, 32) (alias)
	branch SLICE(rax_354, byte, 0) != 0x00 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004082E5:
	word64 rax_370 = fn0000000000404CD0(0x00000010)
	rax_32_32_1998 = SLICE(rax_370, word32, 32) (alias)
	branch SLICE(rax_370, byte, 0) != 0x00 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004082FE:
	word64 rax_386 = fn0000000000404CD0(0x00000011)
	rax_32_32_1998 = SLICE(rax_386, word32, 32) (alias)
	branch SLICE(rax_386, byte, 0) != 0x00 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408317:
	word64 rax_402 = fn0000000000404CD0(0x00000015)
	rax_32_32_1998 = SLICE(rax_402, word32, 32) (alias)
	branch SLICE(rax_402, byte, 0) != 0x00 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408330:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F62:
	ecx_308 = SLICE((uint64) Mem416[0x000000000061B110:word32], word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F68:
	word32 esi_430 = (word32) Mem429[rdi:byte]
	word64 r12_431 = rdi
	branch SLICE(esi_430, byte, 0) == 0x2F l0000000000407F81
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F74:
	byte r15b_438 = SLICE((word32) Mem429[rcx:byte], byte, 0)
	branch r15b_438 != 0x00 l0000000000408670
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408670:
	word64 rax_494 = fp - 936 - ((SEQ(rax_32_32_1998, strlen(rdi)) + 0x0000000000000020) + SEQ(rax_32_32_1998, strlen(rcx)) & 0xFFFFFFFFFFFFFFF0) + 0x000000000000000F & 0xFFFFFFFFFFFFFFF0
	byte sil_527 = SLICE((uint64) esi_430, byte, 0)
	ecx_308 = SLICE((uint64) ecx_308, word32, 0) (alias)
	r12_431 = rax_494
	branch r15b_438 == 0x2E l0000000000408B30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408B30:
	branch Mem450[rcx + 0x0000000000000001:byte] == 0x00 l0000000000408705
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408B3A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004086D2:
	word64 rsi_501 = rcx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004086D8:
	rax_494 = rax_494 + 0x0000000000000001
	Mem507[rax_494 - 0x0000000000000001:byte] = r15b_438
	rsi_501 = rsi_501 + 0x0000000000000001
	r15b_438 = SLICE((word32) Mem507[rsi_501:byte], byte, 0) (alias)
	branch r15b_438 != 0x00 l00000000004086D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004086ED:
	branch rcx >=u rsi_501 l0000000000408702
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004086F5:
	branch Mem507[rsi_501 - 0x0000000000000001:byte] == 0x2F l0000000000408702
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004086FB:
	Mem521[rax_494:byte] = 0x2F
	rax_494 = rax_494 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408702:
	sil_527 = SLICE((word32) Mem525[rdi:byte], byte, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408705:
	branch sil_527 == 0x00 l0000000000408724
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040870A:
	word64 rdx_534 = rdi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408710:
	rax_494 = rax_494 + 0x0000000000000001
	Mem540[rax_494 - 0x0000000000000001:byte] = sil_527
	rdx_534 = rdx_534 + 0x0000000000000001
	sil_527 = SLICE((word32) Mem540[rdx_534:byte], byte, 0) (alias)
	branch sil_527 != 0x00 l0000000000408710
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408724:
	Mem549[rax_494:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F81:
	word64 r15_585
	word32 edx_643
	word32 esi_639
	branch ecx_308 <u 0x00000003 l0000000000407FFD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F86:
	branch ecx_308 <=u 0x00000004 l0000000000407FF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407FF0:
	branch bLoc038C_2835 != 0x00 l00000000004088B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004088B0:
	word32 eax_597 = __xstat(0x0000000000000001, r12_431, r14_120 + 0x0000000000000010)
	r15_585 = r14_120 + 0x0000000000000010
	edx_643 = SLICE((uint64) eax_597, word32, 0) (alias)
	esi_639 = 0x00000001 (alias)
	branch SLICE((uint64) ecx_308, word32, 0) == 0x00000003 l0000000000408015
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004088E0:
	byte al_612
	branch eax_597 < 0x00000000 l0000000000408B5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408B5E:
	edx_643 = SLICE((uint64) eax_597, word32, 0) (alias)
	al_612 = Mem607[__errno_location():word32] == 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004088E8:
	al_612 = SLICE((uint64) (SLICE((uint64) Mem595[r14_120 + 0x0000000000000028:word32], word32, 0) & 0x0000F000), word32, 0) != 0x00004000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004088F9:
	esi_639 = 0x00000001 (alias)
	branch al_612 == 0x00 l0000000000408015
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408906:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F8B:
	branch ecx_308 != 0x00000005 l0000000000407FFD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407FFD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408001:
	r15_585 = r9_112 + (rcx_116 << 0x0000000000000006) + 0x0000000000000010
	esi_639 = 0x00000000 (alias)
	edx_643 = SLICE((uint64) __lxstat(0x0000000000000001, r12_431, r15_585), word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408015:
	branch edx_643 != 0x00000000 l0000000000407FB1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F92:
	r15_585 = r14_120 + 0x0000000000000010
	edx_643 = SLICE((uint64) __xstat(0x0000000000000001, r12_431, r14_120 + 0x0000000000000010), word32, 0) (alias)
	esi_639 = 0x00000001 (alias)
	branch edx_643 == 0x00000000 l0000000000408019
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408019:
	Mem681[r14_120 + 0x00000000000000B0:byte] = 0x01
	byte sil_776 = SLICE(esi_639, byte, 0)
	sil_776 = SLICE(esi_639, byte, 0) (alias)
	branch r13d_2122 == 0x00000005 l0000000000408380
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040802B:
	branch SLICE((uint64) (SLICE((uint64) Mem681[r14_120 + 0x0000000000000028:word32], word32, 0) & 0x0000F000), word32, 0) == 0x00008000 l0000000000408380
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408380:
	branch Mem681[0x000000000061B129:byte] == 0x00 l000000000040803F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040838D:
	word64 rsi_723 = (uint64) esi_639
	edx_643 = SLICE((uint64) edx_643, word32, 0) (alias)
	word32 esi_733 = SLICE(rsi_723, word32, 0)
	sil_776 = SLICE(rsi_723, byte, 0) (alias)
	branch SLICE(fn0000000000404CD0(0x00000015), byte, 0) == 0x00 l000000000040803F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004083B7:
	word64 r13_726 = Mem708[r14_120 + 0x0000000000000010:word64]
	r13d_24_8_1003 = SLICE(r13_726, word24, 8) (alias)
	r13d_24_8_1003 = SLICE(r13_726, word24, 8) (alias)
	branch r13_726 == Mem708[0x000000000061A678:word64] l0000000000408C1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408C1F:
	Mem731[__errno_location():word32] = 0x0000005F
	edx_643 = SLICE((uint64) edx_643, word32, 0) (alias)
	sil_776 = SLICE((uint64) esi_639, byte, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004083C8:
	Mem740[__errno_location():word32] = 0x0000005F
	Mem741[0x000000000061A678:word64] = r13_726
	sil_776 = SLICE((uint64) esi_733, byte, 0) (alias)
	edx_643 = SLICE((uint64) edx_643, word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004083F2:
	Mem743[r14_120 + 0x00000000000000B8:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040803F:
	word32 r13d_1185
	word32 eax_1172
	branch SLICE((uint64) Mem744[0x000000000061B150:word32], word32, 0) == 0x00000000 l0000000000408056
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408049:
	branch Mem744[0x000000000061B17D:byte] == 0x00 l00000000004080EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408056:
	word32 edx_1042
	byte r13b_874
	branch Mem744[r14_120 + 0x0000000000000010:word64] == Mem744[0x000000000061A670:word64] l0000000000408C52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408C52:
	Mem772[__errno_location():word32] = 0x0000005F
	Mem774[r14_120 + 0x00000000000000A8:word64] = 0x000000000061A56A
	r13b_874 = 0x00 (alias)
	r13d_24_8_1003 = 0x000000 (alias)
	edx_1042 = SLICE((uint64) edx_643, word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040806D:
	bool Z_868
	branch sil_776 == 0x00 l0000000000408458
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408458:
	word32 eax_803 = SLICE((uint64) (uint32) fn0000000000411840(r14_120 + 0x00000000000000A8, r12_431), word32, 0)
	Z_868 = SLICE(cond(eax_803), bool, 2) (alias)
	edx_1042 = SLICE((uint64) edx_643, word32, 0) (alias)
	branch eax_803 >= 0x00000000 l0000000000408093
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408080:
	word32 eax_817 = SLICE((uint64) (uint32) fn0000000000411820(r14_120 + 0x00000000000000A8, r12_431), word32, 0)
	Z_868 = SLICE(cond(eax_817), bool, 2) (alias)
	edx_1042 = SLICE((uint64) edx_643, word32, 0) (alias)
	branch eax_817 < 0x00000000 l000000000040846B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040846B:
	word32 eax_830 = SLICE((uint64) Mem826[__errno_location():word32], word32, 0)
	edx_1042 = SLICE((uint64) edx_1042, word32, 0) (alias)
	branch eax_830 == 0x00000016 l000000000040848C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408483:
	branch eax_830 != 0x00000026 l00000000004089C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004089C0:
	branch eax_830 != 0x0000005F l0000000000408497
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004089C9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040848C:
	Mem841[0x000000000061A670:word64] = Mem826[r14_120 + 0x0000000000000010:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408497:
	Mem846[r14_120 + 0x00000000000000A8:word64] = 0x000000000061A56A
	branch eax_830 == 0x0000005F l00000000004089D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004084AB:
	branch eax_830 == 0x0000003D l00000000004089D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004089D0:
	r13b_874 = 0x00 (alias)
	r13d_24_8_1003 = 0x000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004084B4:
	Mem854[r14_120 + 0x00000000000000B4:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408093:
	word64 rdi_857 = Mem765[r14_120 + 0x00000000000000A8:word64]
	word64 rsi_858 = 0x00000000004137B1
	word64 rcx_859 = 0x000000000000000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080A4:
	branch rcx_859 == 0x0000000000000000 l00000000004080A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080A4_1:
	Z_868 = SLICE(cond(Mem765[rsi_3194:byte] - Mem765[rdi_3195:byte]), bool, 2) (alias)
	rsi_858 = rsi_3194 + 0x0000000000000001
	rdi_857 = rdi_3195 + 0x0000000000000001
	rcx_859 = rcx_859 - 0x0000000000000001
	rsi_3194 = rsi_858
	rdi_3195 = rdi_857
	branch Mem765[rsi_3194:byte] != Mem765[rdi_3195:byte] l00000000004080A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080A6:
	r13b_874 = Z_868
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080AA:
	word32 ecx_909
	branch SLICE((uint64) Mem875[0x000000000061B150:word32], word32, 0) == 0x00000000 l0000000000408830
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408830:
	branch Mem875[r14_120 + 0x0000000000000010:word64] == Mem875[0x000000000061A668:word64] l0000000000408B40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408B40:
	Mem912[__errno_location():word32] = 0x0000005F
	ecx_909 = 0x00000000 (alias)
	edx_1042 = SLICE((uint64) edx_1042, word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408841:
	word64 rax_915 = __errno_location()
	Mem931[rax_915:word32] = 0x00000000
	word32 eax_947 = SLICE((uint64) (uint32) fn0000000000409CC0(r15_585, r12_431), word32, 0)
	ecx_909 = 0x00000001 (alias)
	edx_1042 = SLICE((uint64) edx_1042, word32, 0) (alias)
	branch eax_947 > 0x00000000 l00000000004080BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040887E:
	word32 edx_954 = SLICE((uint64) Mem941[rax_915:word32], word32, 0)
	branch edx_954 == 0x00000016 l0000000000408C3B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040888A:
	branch edx_954 == 0x00000026 l0000000000408C3B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408893:
	branch edx_954 == 0x0000005F l0000000000408C3B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408C3B:
	Mem970[0x000000000061A668:word64] = Mem941[r14_120 + 0x0000000000000010:word64]
	ecx_909 = 0x00000000 (alias)
	edx_1042 = SLICE((uint64) SLICE((uint64) (eax_947 >>u 0x0000001F), word32, 0), word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040889C:
	edx_1042 = SLICE((uint64) SLICE((uint64) (eax_947 >>u 0x0000001F), word32, 0), word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080B8:
	ecx_909 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080BA:
	word32 eax_1028 = 0x00000000
	byte sil_1034 = SLICE((uint64) ecx_909, byte, 0) | r13b_874
	branch sil_1034 == 0x00 l00000000004080D9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080C3:
	byte r13b_998 = r13b_874 & SLICE((uint64) (ecx_909 ^ 0x00000001), byte, 0)
	word32 eax_1022 = SLICE((uint64) SEQ(r13d_24_8_1003, r13b_998), word32, 0)
	branch r13b_998 == 0x00 l00000000004080D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080CC_2:
	sil_1034 = r13b_998 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080D0:
	eax_1028 = SLICE((uint64) (SLICE((uint64) (SLICE((uint64) (eax_1022 << 0x0000001F), word32, 0) >> 0x0000001F), word32, 0) + 0x00000002), word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080D9:
	Mem1038[0x000000000061B17C:byte] = Mem1032[0x000000000061B17C:byte] | sil_1034
	Mem1056[r14_120 + 0x00000000000000B4:word32] = eax_1028
	branch edx_1042 != 0x00000000 l00000000004084BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004084BF:
	fn000000000040EAB0(r12_431, r10, fs, out r9_1150, out r10)
	error(0x0000000000000000, (uint64) Mem1162[__errno_location():word32], 0x0000000000415E54, 0x00000000)
	word64 rax_1171 = (uint64) (SLICE((uint64) Mem1162[r14_120 + 0x0000000000000028:word32], word32, 0) & 0x0000F000)
	eax_1172 = SLICE(rax_1171, word32, 0) (alias)
	rax_32_32_1998 = SLICE(rax_1171, word32, 32) (alias)
	branch eax_1172 != 0x0000A000 l0000000000408103
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004084F6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080EF:
	word64 rax_1179 = (uint64) (SLICE((uint64) Mem1176[r14_120 + 0x0000000000000028:word32], word32, 0) & 0x0000F000)
	eax_1172 = SLICE(rax_1179, word32, 0) (alias)
	rax_32_32_1998 = SLICE(rax_1179, word32, 32) (alias)
	branch eax_1172 == 0x0000A000 l0000000000408500
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408500:
	r13d_1185 = SLICE((uint64) Mem1183[0x000000000061B150:word32], word32, 0) (alias)
	branch r13d_1185 == 0x00000000 l0000000000408519
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040850C:
	branch Mem1183[0x000000000061B115:byte] == 0x00 l000000000040862A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408519:
	word64 rax_1199 = fn0000000000409D20(Mem1183[r14_120 + 0x0000000000000040:word64], r12_431)
	Mem1210[r14_120 + 0x0000000000000008:word64] = rax_1199
	word32 rax_32_32_1259 = SLICE(rax_1199, word32, 32)
	word64 r13_1209 = rax_1199
	branch rax_1199 == 0x0000000000000000 l0000000000408BDA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408BDA:
	word64 r10_3193
	word64 r8_3192
	rax_32_32_1259 = SLICE(fn0000000000405810(r12_431, dcgettext(0x0000000000000000, 0x0000000000413794, 0x0000000000000005), (word32) bLoc038C_2835, r10, fs, out r8_3192, out r9_1150, out r10_3193), word32, 32) (alias)
	r13_1209 = Mem1210[r14_120 + 0x0000000000000008:word64]
	branch r13_1209 != 0x0000000000000000 l0000000000408535
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408C0A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408535:
	branch Mem1210[r13_1209:byte] == 0x2F l0000000000408C0F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408C0F:
	r13_1209 = fn0000000000410E30(rax_32_32_1259, r13_1209)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408540:
	word64 rax_1273 = fn000000000040A2B0(r12_431)
	word32 rax_32_32_1286 = SLICE(rax_1273, word32, 32)
	branch rax_1273 == 0x0000000000000000 l0000000000408B98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408B98:
	r13_1209 = fn0000000000410E30(rax_32_32_1286, r13_1209)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408557:
	word64 rax_1299 = fn0000000000410C40(rax_1273 + 0x0000000000000002 + SEQ(rax_32_32_1286, strlen(r13_1209)))
	strcpy(stpncpy(rax_1299, r12_431, rax_1273 + (uint64) ((uint8) (Mem1210[(r12_431 - 0x0000000000000001) + rax_1273:byte] != 0x2F))), r13_1209)
	r13_1209 = rax_1299
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004085A1:
	branch r13_1209 == 0x0000000000000000 l0000000000408607
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004085A6:
	branch Mem1328[0x000000000061B12C:word32] <=u 0x00000001 l0000000000408B80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408B80:
	branch Mem1328[0x000000000061B115:byte] == 0x00 l0000000000408607
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408B8D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004085B3:
	branch __xstat(0x0000000000000001, r13_1209, fp - 0x0000000000000388) != 0x00000000 l0000000000408607
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004085CB:
	Mem1348[r14_120 + 0x00000000000000B1:byte] = 0x01
	word32 eax_1356 = SLICE((uint64) dwLoc0370, word32, 0)
	branch bLoc038C_2835 == 0x00 l0000000000408600
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004085E2:
	branch SLICE((uint64) Mem1348[0x000000000061B150:word32], word32, 0) == 0x00000000 l0000000000408600
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004085EC:
	branch SLICE((uint64) (SLICE((uint64) eax_1356, word32, 0) & 0x0000F000), word32, 0) == 0x00004000 l0000000000408607
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004085FC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408600:
	Mem1365[r14_120 + 0x00000000000000A4:word32] = eax_1356
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408607:
	free(r13_1209)
	word64 rax_1373 = (uint64) (SLICE((uint64) Mem1370[r14_120 + 0x0000000000000028:word32], word32, 0) & 0x0000F000)
	eax_1172 = SLICE(rax_1373, word32, 0) (alias)
	rax_32_32_1998 = SLICE(rax_1373, word32, 32) (alias)
	branch eax_1172 != 0x0000A000 l0000000000408103
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408623:
	r13d_1185 = SLICE((uint64) Mem1370[0x000000000061B150:word32], word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040862A:
	Mem1379[r14_120 + 0x00000000000000A0:word32] = 0x00000006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408103:
	branch eax_1172 == 0x00004000 l0000000000408978
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408978:
	branch bLoc038C_2835 == 0x00 l00000000004089A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408981:
	branch Mem1386[0x000000000061B10D:byte] != 0x00 l00000000004089A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004089A8:
	Mem1393[r14_120 + 0x00000000000000A0:word32] = 0x00000003
	r13d_1185 = SLICE((uint64) Mem1393[0x000000000061B150:word32], word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040898A:
	Mem1395[r14_120 + 0x00000000000000A0:word32] = 0x00000009
	r13d_1185 = SLICE((uint64) Mem1395[0x000000000061B150:word32], word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040810E:
	r13d_1185 = SLICE((uint64) Mem1386[0x000000000061B150:word32], word32, 0) (alias)
	Mem1398[r14_120 + 0x00000000000000A0:word32] = 0x00000005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408120:
	r12_1409 = Mem1408[r14_120 + 0x0000000000000050:word64]
	branch r13d_1185 == 0x00000000 l0000000000408132
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408129:
	branch Mem1408[0x000000000061B144:byte] == 0x00 l00000000004081A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408132:
	word64 r8_3190
	word64 rax_1493 = fn000000000040BD70(0x0000000000000200, SLICE((uint64) Mem1408[0x000000000061B140:word32], word32, 0), fp - 0x00000000000002D8, r12_1409, Mem1408[0x000000000061B138:word64], fs, Top, out r8_3190, out r9_1150)
	word64 rax_1508 = fn000000000040D420(SLICE(rax_1493, word32, 32), 0x00000000, rax_1493, fs)
	word32 r15d_1638 = SLICE(fp - 0x00000000000002D8, word32, 0)
	word32 eax_1515 = SLICE(rax_1508, word32, 0)
	rax_32_32_1998 = SLICE(rax_1508, word32, 32) (alias)
	branch eax_1515 <= Mem1408[0x000000000061B174:word32] l000000000040816E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408168:
	Mem1518[0x000000000061B174:word32] = eax_1515
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040816E:
	r13d_1185 = SLICE((uint64) Mem1519[0x000000000061B150:word32], word32, 0) (alias)
	branch r13d_1185 != 0x00000000 l00000000004081A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040817A:
	branch Mem1519[0x000000000061A569:byte] != 0x00 l0000000000408B10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408B10:
	word64 rax_1531 = fn00000000004061B0((uint64) Mem1519[r14_120 + 0x000000000000002C:word32], fs)
	word32 eax_1539 = SLICE(rax_1531, word32, 0)
	rax_32_32_1998 = SLICE(rax_1531, word32, 32) (alias)
	branch eax_1539 <= Mem1519[0x000000000061B168:word32] l0000000000408187
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408B25:
	Mem1542[0x000000000061B168:word32] = eax_1539
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408187:
	branch Mem1543[0x000000000061A568:byte] != 0x00 l0000000000408A90
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408A90:
	word32 edx_1582
	word32 r13d_1550 = SLICE((uint64) Mem1543[r14_120 + 0x0000000000000030:word32], word32, 0)
	branch Mem1543[0x000000000061B145:byte] == 0x00 l0000000000408BA8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408BA8:
	word64 rax_1552 = fn000000000040CB40((uint64) r13d_1550)
	word32 rax_32_32_1568 = SLICE(rax_1552, word32, 32)
	branch rax_1552 == 0x0000000000000000 l0000000000408AA1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408BBC:
	word64 rax_1570 = fn000000000040D420(rax_32_32_1568, 0x00000000, rax_1552, fs)
	word32 eax_1578 = SLICE(rax_1570, word32, 0)
	rax_32_32_1998 = SLICE(rax_1570, word32, 32) (alias)
	edx_1582 = 0x00000000 (alias)
	branch eax_1578 < 0x00000000 l0000000000408BCA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408BC7_1:
	edx_1582 = eax_1578
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408BCA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408AA1:
	__sprintf_chk(fp - 0x00000000000002D8, 0x0000000000000001, 0x0000000000000015, 0x000000000041375A, 0x00000000)
	word64 rdx_1597 = fp - 0x00000000000002D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408AC0:
	word64 rcx_1600 = (uint64) Mem1543[rdx_1597:word32]
	word64 rax_1608 = (uint64) (SLICE((uint64) (rcx_1600 + 0xFFFFFFFFFEFEFEFF & SLICE((uint64) (~SLICE(rcx_1600, word32, 0)), word32, 0)), word32, 0) & 0x80808080)
	word32 eax_1609 = SLICE(rax_1608, word32, 0)
	rdx_1597 = rdx_1597 + 0x0000000000000004
	byte al_1626 = SLICE(eax_1609, byte, 0)
	rax_32_32_1998 = SLICE(rax_1608, word32, 32) (alias)
	branch eax_1609 == 0x00000000 l0000000000408AC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408AD7:
	word32 ecx_1619 = SLICE((uint64) (SLICE((uint64) eax_1609, word32, 0) >>u 0x00000010), word32, 0)
	branch (eax_1609 & 0x00008080) != 0x00000000 l0000000000408AE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408AE1_1:
	al_1626 = SLICE(ecx_1619, byte, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408AE4:
	branch (eax_1609 & 0x00008080) != 0x00000000 l0000000000408AEC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408AE8_1:
	rdx_1597 = rdx_1597 + 0x0000000000000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408AEC:
	edx_1582 = SLICE((uint64) (SLICE(rdx_1597 - 0x03 - (al_1626 * 0x02 <u 0x00), word32, 0) - r15d_1638), word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408AF5:
	branch Mem1543[0x000000000061B164:word32] >= edx_1582 l0000000000408194
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408B01:
	Mem1651[0x000000000061B164:word32] = edx_1582
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408194:
	branch Mem1652[0x000000000061B146:byte] != 0x00 l0000000000408A70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408A70:
	word64 rax_1670 = fn00000000004061B0((uint64) Mem1652[r14_120 + 0x000000000000002C:word32], fs)
	word32 eax_1678 = SLICE(rax_1670, word32, 0)
	rax_32_32_1998 = SLICE(rax_1670, word32, 32) (alias)
	branch eax_1678 <= Mem1652[0x000000000061B160:word32] l00000000004081A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408A85:
	Mem1681[0x000000000061B160:word32] = eax_1678
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004081A1:
	r13d_1185 = SLICE((uint64) Mem1682[0x000000000061B150:word32], word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004081A8:
	branch Mem1684[0x000000000061B17D:byte] == 0x00 l00000000004081C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004081B1:
	word32 eax_1690 = strlen(Mem1684[r14_120 + 0x00000000000000A8:word64])
	branch eax_1690 > Mem1684[0x000000000061B16C:word32] l0000000000408730
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408730:
	Mem1697[0x000000000061B16C:word32] = eax_1690
	branch r13d_1185 != 0x00000000 l00000000004081D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004081C9:
	branch r13d_1185 == 0x00000000 l000000000040873F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040873F:
	word32 eax_1732 = strlen(fn000000000040CD70(fp - 0x00000000000002F8, Mem1705[r14_120 + 0x0000000000000020:word64]))
	branch eax_1732 <= Mem1705[0x000000000061B170:word32] l0000000000408765
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040875F:
	Mem1735[0x000000000061B170:word32] = eax_1732
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408765:
	word32 eax_1795
	branch SLICE((uint64) (SLICE((uint64) Mem1737[r14_120 + 0x0000000000000028:word32], word32, 0) & 0x0000B000), word32, 0) != 0x00002000 l0000000000408A30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408A30:
	word64 r8_3191
	word64 rax_1773 = fn000000000040BD70(0x0000000000000001, SLICE((uint64) Mem1737[0x000000000061B134:word32], word32, 0), fp - 0x00000000000002D8, Mem1737[r14_120 + 0x0000000000000040:word64], Mem1737[0x000000000061A560:word64], fs, Top, out r8_3191, out r9_1150)
	word64 rax_1788 = fn000000000040D420(SLICE(rax_1773, word32, 32), 0x00000000, rax_1773, fs)
	eax_1795 = SLICE(rax_1788, word32, 0) (alias)
	rax_32_32_1998 = SLICE(rax_1788, word32, 32) (alias)
	branch eax_1795 <= Mem1737[0x000000000061B154:word32] l00000000004081D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408A68:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408779:
	word64 rax_1798 = Mem1737[r14_120 + 0x0000000000000038:word64]
	word32 eax_1824 = strlen(fn000000000040CD70(fp - 0x00000000000002D8, (uint64) (SLICE((uint64) (SLICE(rax_1798 >>u 0x0000000000000020, word32, 0) & 0xFFFFF000), word32, 0) | SLICE((uint64) (SLICE(rax_1798 >>u 0x0000000000000008, word32, 0) & 0x00000FFF), word32, 0))))
	branch eax_1824 <= Mem1737[0x000000000061B15C:word32] l00000000004087BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004087B4:
	Mem1827[0x000000000061B15C:word32] = eax_1824
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004087BA:
	word64 rax_1830 = Mem1829[r14_120 + 0x0000000000000038:word64]
	word32 eax_1855 = strlen(fn000000000040CD70(fp - 0x00000000000002D8, (uint64) (SEQ(SLICE(rax_1830 >>u 0x000000000000000C, word24, 8), SLICE(rax_1830 >>u 0x000000000000000C, byte, 0) & 0x00) | (word32) SLICE(rax_1830, byte, 0))))
	word64 rdx_1856 = (uint64) Mem1829[0x000000000061B158:word32]
	branch eax_1855 <= SLICE(rdx_1856, word32, 0) l00000000004087F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004087E8:
	Mem1860[0x000000000061B158:word32] = eax_1855
	rdx_1856 = (uint64) eax_1855
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004087F0:
	word64 rax_1863 = (uint64) Mem1862[0x000000000061B15C:word32]
	rax_32_32_1998 = SLICE(rax_1863, word32, 32) (alias)
	eax_1795 = rdx_1856 + 0x0000000000000002 + rax_1863
	branch eax_1795 <= Mem1862[0x000000000061B154:word32] l00000000004081D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408806:
	Mem1869[0x000000000061B154:word32] = eax_1795
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004081D2:
	branch SLICE((word32) Mem1870[0x000000000061B114:byte], byte, 0) != 0x00 l0000000000408640
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408640:
	word64 rax_1885 = fn000000000040CD70(fp - 0x00000000000002D8, Mem1870[r14_120 + 0x0000000000000018:word64])
	rax_32_32_1998 = SLICE(rax_1885, word32, 32) (alias)
	word32 eax_1895 = strlen(rax_1885)
	branch eax_1895 <= Mem1870[0x000000000061B178:word32] l00000000004081E1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408664:
	Mem1898[0x000000000061B178:word32] = eax_1895
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407FB1:
	byte r15b_1917 = SLICE((uint64) edx, byte, 0)
	r12_1409 = 0x0000000000000000
	word64 r10_3189
	word64 r8_3188
	rax_32_32_1998 = SLICE(fn0000000000405810(r12_431, dcgettext(0x0000000000000000, 0x0000000000413783, 0x0000000000000005), (word32) r15b_1917, r10, fs, out r8_3188, out r9_1150, out r10_3189), word32, 32) (alias)
	branch r15b_1917 != 0x00 l00000000004081F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407FE4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004081E1:
	word64 rax_2029 = fn0000000000410E30(rax_32_32_1998, rdi)
	Mem2040[0x000000000061B1B0:word64] = Mem2037[0x000000000061B1B0:word64] + 0x0000000000000001
	Mem2045[r14_120:word64] = rax_2029
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004081F4:
	branch (rax_32 ^ Mem2049[fs:0x00000028:word64]) != 0x0000000000000000 l0000000000408C76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408C76:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040820A:
	r9Out = r9_1150
	return r12_1409
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000407EA0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F2A_1:
	Mem2098[rdi_140:word64] = 0x0000000000000000
	rdi_140 = rdi_140 + 0x0000000000000008
	rcx_168 = rcx_168 - 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000409750(word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000409750_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000409750_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409750:
	word32 ebx_333 = SLICE((uint64) edi, word32, 0)
	branch edi == 0x00000000 l0000000000409794
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409794:
	__printf_chk(0x0000000000000001, dcgettext(0x0000000000000000, 0x0000000000413D88, 0x0000000000000005), 0x00000000)
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000413DB0, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000413E40, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000413E90, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000413FA0, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x00000000004141E8, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000414398, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000414540, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000414580, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000414670, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000414780, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000414928, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000414AC0, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000414C28, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000414DA0, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000414F58, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000415020, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x00000000004151F0, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x00000000004153F0, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000415480, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x00000000004155E8, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000415748, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000415778, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x00000000004157B0, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000415850, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000415970, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fn000000000040A390(Mem9[0x000000000061B200:word64])
	__printf_chk(0x0000000000000001, dcgettext(0x0000000000000000, 0x00000000004137BB, 0x0000000000000005), 0x00000000)
	__printf_chk(0x0000000000000001, dcgettext(0x0000000000000000, 0x00000000004137E8, 0x0000000000000005), 0x00000000)
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000415A30, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	word64 rax_264 = setlocale(0x0000000000000005, 0x0000000000000000)
	branch rax_264 == 0x0000000000000000 l0000000000409BC8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409BB2:
	branch strncmp(rax_264, 0x000000000041380A, 0x0000000000000003) != 0x00000000 l0000000000409BFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409BFF:
	fn000000000040A390(Mem9[0x000000000061B200:word64])
	__printf_chk(0x0000000000000001, dcgettext(0x0000000000000000, 0x0000000000415A70, 0x0000000000000005), 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409BC8:
	fn000000000040A390(Mem9[0x000000000061B200:word64])
	__printf_chk(0x0000000000000001, dcgettext(0x0000000000000000, 0x0000000000415AB8, 0x0000000000000005), 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409768:
	__fprintf_chk(Mem9[0x000000000061A650:word64], 0x0000000000000001, dcgettext(0x0000000000000000, 0x0000000000413D60, 0x0000000000000005), 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040978D:
	exit((uint64) ebx_333)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000000000409CC0(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax
// Preserved: rsp
fn0000000000409CC0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409CC0:
	word64 rax_7 = (uint64) (SLICE((uint64) Mem0[rsi + 0x0000000000000018:word32], word32, 0) & 0x0000F000)
	word32 rax_32_32_54 = SLICE(rax_7, word32, 32)
	branch SLICE(rax_7, word32, 0) == 0x0000A000 l0000000000409D10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409D10:
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409CCF:
	word32 eax_17 = acl_extended_file(rdi)
	word64 rax_38 = SEQ(rax_32_32_54, eax_17)
	branch eax_17 < 0x00000000 l0000000000409CE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409CE8:
	word32 eax_23 = SLICE((uint64) Mem0[__errno_location():word32], word32, 0)
	branch eax_23 == 0x0000005F l0000000000409D18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409CF4:
	branch eax_23 == 0x00000026 l0000000000409D18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409CF9:
	branch eax_23 == 0x00000016 l0000000000409D18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409D18:
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409CFE:
	rax_38 = (uint64) -(word32) (eax_23 != 0x00000010)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409CDC:
	return (word32) rax_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000409CC0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000409D20(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn0000000000409D20_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409D20:
	word64 rbx_121 = 0x0000000000000401
	branch rsi >u 0x0000000000000400 l0000000000409D59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409D55_1:
	rbx_121 = rsi + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409D59:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409D60:
	word64 rax_124 = malloc(rbx_121)
	word64 rbp_127 = rax_124
	branch rax_124 == 0x0000000000000000 l0000000000409DAB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409D70:
	word64 rax_47 = SEQ(SLICE(rax_124, word32, 32), readlink(rdi, rax_124, rbx_121))
	branch rax_47 < 0x0000000000000000 l0000000000409DD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409DD8:
	word64 rax_52 = __errno_location()
	word32 edx_55 = SLICE((uint64) Mem26[rax_52:word32], word32, 0)
	branch edx_55 == 0x00000022 l0000000000409D86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409DE4:
	free(rbp_127)
	Mem66[rax_52:word32] = SLICE((uint64) edx_55, word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409D86:
	branch rbx_121 >u rax_47 l0000000000409E08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409E08:
	Mem76[rbp_127:byte] = 0x00
	return rbp_127
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409D8B:
	free(rbp_127)
	branch rbx_121 >u 0x00000000FFFFFFFF l0000000000409DC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409DC0:
	branch rbx_121 >u 0x00000000FFFFFFFE l0000000000409E20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409E20:
	Mem103[__errno_location():word32] = 0x0000000C
	return 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409DC5:
	rbx_121 = 0x00000000FFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409D98:
	rbx_121 = rbx_121 * 0x0000000000000002
	rax_124 = malloc(rbx_121)
	rbp_127 = rax_124
	branch rax_124 != 0x0000000000000000 l0000000000409D70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409DAB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409DAD:
	return 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000409D20_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000409E50(word32 rax_32_32, word64 rcx, word64 rdx, word64 rsi, word64 rdi, ptr64 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rax_32_32:[0..31] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: ecx rax
// Trashed: SCZO ecx rax rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn0000000000409E50_entry:
	word32 ecx_229 = SLICE(rcx, word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409E50:
	word64 rax_133
	word64 qwLoc50_169
	word32 eax_31 = strlen(rdi)
	word64 rbp_113 = rdx
	word64 r14_118 = Mem30[rsi:word64]
	word64 rax_38 = SEQ(rax_32_32, eax_31)
	word32 rax_32_32_156 = rax_32_32
	branch r14_118 == 0x0000000000000000 l0000000000409F72
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F72:
	qwLoc50_169 = 0xFFFFFFFFFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409E81:
	byte bLoc41_170 = 0x00
	qwLoc50_169 = 0xFFFFFFFFFFFFFFFF
	word64 rbx_108 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409EE8:
	branch strncmp(r14_118, rdi, rax_38) != 0x00000000 l0000000000409ED8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409EFB:
	branch SEQ(rax_32_32_156, strlen(r14_118)) == rax_38 l0000000000409F60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F60:
	ecxOut = ecx_229
	return rbx_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F08:
	branch qwLoc50_169 != 0xFFFFFFFFFFFFFFFF l0000000000409EA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409EA0:
	rax_32_32_156 = SLICE(rdx, word32, 32) (alias)
	branch rdx == 0x0000000000000000 l0000000000409F50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F50:
	bLoc41_170 = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409EAE:
	word32 ecx_275 = (word32) bLoc41_170
	rax_32_32_156 = 0x00000000 (alias)
	branch memcmp(qwLoc50_169 *s rcx + rdx, rbp_113, rcx) == 0x00000000 l0000000000409ED4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409ED1_1:
	ecx_275 = 0x00000001 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409ED4:
	bLoc41_170 = SLICE(ecx_275, byte, 0)
	ecx_229 = ecx_275 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409ED8:
	rbx_108 = rbx_108 + 0x0000000000000001
	rbp_113 = rbp_113 + rcx
	r14_118 = Mem117[rsi + rbx_108 * 0x0000000000000008:word64]
	branch r14_118 == 0x0000000000000000 l0000000000409F28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F10:
	rbx_108 = rbx_108 + 0x0000000000000001
	qwLoc50_169 = rbx_108
	rbp_113 = rbp_113 + rcx
	r14_118 = Mem122[rsi + rbx_108 * 0x0000000000000008:word64]
	branch r14_118 != 0x0000000000000000 l0000000000409EE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F25:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F28:
	rax_133 = 0xFFFFFFFFFFFFFFFE
	branch bLoc41_170 != 0x00 l0000000000409F3B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F36:
	rax_133 = qwLoc50_169
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F3B:
	ecxOut = ecx_229
	return rax_133
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000409E50_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000409F80(word64 rdx, word64 rsi, word64 rdi, word64 r10, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r10
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi
// Preserved: r12 rbp rbx rsp
fn0000000000409F80_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F80:
	word64 r12_26
	branch rdx == 0xFFFFFFFFFFFFFFFF l0000000000409FE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409FE0:
	r12_26 = dcgettext(0x0000000000000000, 0x0000000000415DFD, 0x0000000000000005)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F95:
	r12_26 = dcgettext(0x0000000000000000, 0x0000000000415E18, 0x0000000000000005)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409FA4:
	word64 r10_64 = fn000000000040E970(rsi, 0x00000006, 0x00000000, fn000000000040EBF0(rdi, 0x00000001, r10, fs), fs)
	error(0x0000000000000000, 0x0000000000000000, r12_26, 0x00000000)
	return r10_64
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000409F80_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040A000(word64 rdx, word64 rsi, word64 rdi, word64 r10, selector fs, ptr64 & rcxOut, ptr64 & rdxOut, ptr64 & rsiOut, ptr64 & rdiOut, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r10 r11 r8 r9 rax rcx rdi rdx rsi
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040A000_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A000:
	word64 rbx_32 = Mem30[0x000000000061A650:word64]
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000415E35, 0x0000000000000005), rbx_32)
	word64 r14_12 = 0x0000000000000000
	word64 rdx_116 = 0x0000000000000005
	word64 rbp_26 = rsi
	word64 rsi_118 = rbx_32
	word64 rbx_36 = 0x0000000000000000
	word64 r12_120 = Mem30[rdi:word64]
	branch r12_120 != 0x0000000000000000 l000000000040A086
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A086:
	branch rbx_36 == 0x0000000000000000 l000000000040A050
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A08B:
	branch memcmp(r14_12, rbp_26, rdx) != 0x00000000 l000000000040A050
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A050:
	word64 r11_69
	word64 r8_70
	word64 r9_71
	fn000000000040EC10(r12_120, r10, fs, out r8_70, out r9_71, out r10, out r11_69)
	__fprintf_chk(Mem30[0x000000000061A650:word64], 0x0000000000000001, 0x0000000000415E4A, 0x00000000)
	rbx_36 = rbx_36 + 0x0000000000000001
	r14_12 = rbp_26
	rdx_116 = 0x0000000000415E4A
	rsi_118 = 0x0000000000000001
	rbp_26 = rbp_26 + rdx
	r12_120 = Mem30[rdi + rbx_36 * 0x0000000000000008:word64]
	branch r12_120 == 0x0000000000000000 l000000000040A0D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A09D:
	word64 r11_102
	word64 r8_103
	word64 r9_104
	fn000000000040EC10(r12_120, r10, fs, out r8_103, out r9_104, out r10, out r11_102)
	__fprintf_chk(Mem30[0x000000000061A650:word64], 0x0000000000000001, 0x0000000000415E52, 0x00000000)
	rbx_36 = rbx_36 + 0x0000000000000001
	rbp_26 = rbp_26 + rdx
	rdx_116 = 0x0000000000415E52
	rsi_118 = 0x0000000000000001
	r12_120 = Mem30[rdi + rbx_36 * 0x0000000000000008:word64]
	branch r12_120 != 0x0000000000000000 l000000000040A086
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A047:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A0D0:
	word64 rdi_125 = Mem30[0x000000000061A650:word64]
	word64 rax_126 = Mem30[rdi_125 + 0x0000000000000028:word64]
	word32 rax_32_32_213 = SLICE(rax_126, word32, 32)
	branch rax_126 >=u Mem30[rdi_125 + 0x0000000000000030:word64] l000000000040A0FB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A0FB:
	word64 rax_214 = SEQ(rax_32_32_213, __overflow(rdi_125, 0x000000000000000A))
	rcxOut = <invalid>
	rdxOut = rdx_116
	rsiOut = 0x000000000000000A
	rdiOut = <invalid>
	r8Out = <invalid>
	r9Out = <invalid>
	r10Out = <invalid>
	r11Out = <invalid>
	return rax_214
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A0E1:
	Mem149[rdi_125 + 0x0000000000000028:word64] = rax_126 + 0x0000000000000001
	Mem150[rax_126:byte] = 0x0A
	rcxOut = <invalid>
	rdxOut = rax_126 + 0x0000000000000001
	rsiOut = rsi_118
	rdiOut = <invalid>
	r8Out = <invalid>
	r9Out = <invalid>
	r10Out = <invalid>
	r11Out = <invalid>
	return rax_126
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040A000_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040A120(word32 rax_32_32, word64 rcx, word64 rdx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r8, word64 r9, word64 r10, word64 r12, word64 r13, word64 r14, word64 r15, selector fs, ptr64 & r9Out, ptr64 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] r8:[0..63] r9:[0..63] rax_32_32:[0..31] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r10 r9 rax
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040A120_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A120:
	word32 ecx_40
	word64 rax_132 = fn0000000000409E50(rax_32_32, r8, rcx, rdx, rsi, out ecx_40)
	branch rax_132 < 0x0000000000000000 l000000000040A165
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A165:
	word64 r10_73
	word64 r11_74
	word64 r8_75
	word64 r9_76
	word64 rcx_78
	word64 rdi_79
	word64 rdx_80
	word64 rsi_81
	call r9 (retsize: 8;)
		uses: r10:r10_73,r11:r11_74,r8:r8_75,r9:r9_76,rax:fn000000000040A000(r8, rcx, rdx, fn0000000000409F80(rax_41, rsi, rdi, r10, fs), fs, out rcx_78, out rdx_80, out rsi_81, out rdi_79, out r8_75, out r9_76, out r10_73, out r11_74),rcx:rcx_78,rdi:rdi_79,rdx:rdx_80,rsi:rsi_81,Stack +0010:rbx,Stack +0018:rbp,Stack +0020:r12,Stack +0028:r13,Stack +0030:r14,Stack +0038:r15
		defs: r10:r10_93,r9:r9_88
	rax_132 = 0xFFFFFFFFFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A156:
	r9Out = r9
	r10Out = r10
	return rax_132
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040A120_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040A2B0(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdx rsi
// Preserved: rbp rbx rsp
fn000000000040A2B0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A2B0:
	word64 rdx_31
	byte bpl_15 = Mem9[rdi:byte] == 0x2F
	word64 rax_16 = fn000000000040A390(rdi)
	word64 rcx_25 = rax_16 - rdi
	word64 rbp_27 = (uint64) (uint8) bpl_15
	branch rcx_25 <=u rbp_27 l000000000040A2FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A2D2:
	rdx_31 = rcx_25 - 0x0000000000000001
	branch Mem9[rax_16 - 0x0000000000000001:byte] == 0x2F l000000000040A2EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A2EE:
	branch rbp_27 <u rdx_31 l000000000040A2E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A2E0:
	word64 rax_40 = rdx_31 - 0x0000000000000001
	branch Mem9[rdi - 0x0000000000000001 + rdx_31:byte] != 0x2F l000000000040A2F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A2EB:
	rdx_31 = rax_40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A2DC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A2FD:
	rdx_31 = rcx_25
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A2F3:
	return rdx_31
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040A2B0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040A390(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdx rsi
// Preserved: rsp
fn000000000040A390_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A390:
	word32 edx_13 = (word32) Mem0[rdi:byte]
	word64 rax_10 = rdi
	branch SLICE(edx_13, byte, 0) != 0x2F l000000000040A3AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A39B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A3A0:
	rax_10 = rax_10 + 0x0000000000000001
	edx_13 = (word32) Mem0[rax_10:byte]
	branch SLICE(edx_13, byte, 0) == 0x2F l000000000040A3A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A3AC:
	word64 rdx_21 = rax_10
	branch SLICE((uint64) edx_13, byte, 0) == 0x00 l000000000040A3F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A3F7:
	return rax_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A3B7:
	word64 rsi_100 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A3C0:
	rdx_21 = rdx_21 + 0x0000000000000001
	byte cl_30 = SLICE((word32) Mem0[rdx_21:byte], byte, 0)
	branch cl_30 == 0x00 l000000000040A3E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A3CB:
	byte sil_38 = SLICE(rsi_100, byte, 0)
	branch cl_30 == 0x2F l000000000040A3F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A3F0:
	rsi_100 = 0x0000000000000001 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A3D0:
	branch sil_38 == 0x00 l000000000040A3C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A3D5:
	rdx_21 = rdx_21 + 0x0000000000000001
	rax_10 = rdx_21
	cl_30 = SLICE((word32) Mem0[rdx_21:byte], byte, 0) (alias)
	rsi_100 = 0x0000000000000000 (alias)
	branch cl_30 != 0x00 l000000000040A3CB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A3E5:
	return rax_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040A390_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040A400(word32 rax_32_32, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rax_32_32:[0..31] rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdx
// Preserved: rbx rsp
fn000000000040A400_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A400:
	word64 rax_10 = SEQ(rax_32_32, strlen(rdi))
	branch rax_10 <=u 0x0000000000000001 l000000000040A41A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A40F:
	word64 rdx_17 = rax_10 - 0x0000000000000001
	branch Mem5[rdi - 0x0000000000000001 + rax_10:byte] == 0x2F l000000000040A420
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A420:
	rax_10 = rdx_17
	branch rdx_17 != 0x0000000000000001 l000000000040A40F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A429:
	return rdx_17
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A41A:
	return rax_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040A400_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040A600(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rdi rdx
// Preserved: rsp
fn000000000040A600_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A600:
	word32 edi_6 = SLICE((uint64) Mem0[rdi + 0x0000000000000018:word32], word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A430:
	byte dl_37
	word32 eax_10 = SLICE((uint64) (SLICE((uint64) edi_6, word32, 0) & 0x0000F000), word32, 0)
	branch eax_10 == 0x00008000 l000000000040A5B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A5B0:
	dl_37 = 0x2D (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A442:
	branch eax_10 == 0x00004000 l000000000040A5C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A5C0:
	dl_37 = 0x64 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A44D:
	branch eax_10 == 0x00006000 l000000000040A5D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A5D0:
	dl_37 = 0x62 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A458:
	branch eax_10 == 0x00002000 l000000000040A5A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A5A0:
	dl_37 = 0x63 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A463:
	branch eax_10 == 0x0000A000 l000000000040A5E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A5E0:
	dl_37 = 0x6C (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A46E:
	branch eax_10 == 0x00001000 l000000000040A5F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A5F0:
	dl_37 = 0x70 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A479:
	dl_37 = 0x73 (alias)
	branch eax_10 == 0x0000C000 l000000000040A48B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A488_1:
	dl_37 = 0x3F (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A48B:
	byte al_95
	Mem48[rsi:byte] = dl_37
	Mem60[rsi + 0x0000000000000001:byte] = SLICE((uint64) (SLICE((uint64) (SLICE((uint64) (0x00000000 - SLICE(cond(SLICE((uint64) (SLICE((uint64) edi_6, word32, 0) & 0x00000100), word32, 0) - 0x00000001), bool, 1)), word32, 0) & 0xFFFFFFBB), word32, 0) + 0x00000072), byte, 0)
	Mem73[rsi + 0x0000000000000002:byte] = SLICE((uint64) (SLICE((uint64) (SLICE((uint64) (0x00000000 - SLICE(cond(SLICE((uint64) (SLICE((uint64) edi_6, word32, 0) & 0x00000080), word32, 0) - 0x00000001), bool, 1)), word32, 0) & 0xFFFFFFB6), word32, 0) + 0x00000077), byte, 0)
	word32 eax_84 = SLICE((uint64) (0x00000000 - SLICE(cond(SLICE((uint64) (SLICE((uint64) edi_6, word32, 0) & 0x00000040), word32, 0) - 0x00000001), bool, 1)), word32, 0)
	branch (edi_6 & 0x00000800) == 0x00000000 l000000000040A590
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A590:
	al_95 = SLICE((uint64) (SLICE((uint64) (eax_84 & 0xFFFFFFB5), word32, 0) + 0x00000078), byte, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A4CD:
	al_95 = SLICE((uint64) (SLICE((uint64) (eax_84 & 0xFFFFFFE0), word32, 0) + 0x00000073), byte, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A4D3:
	byte al_148
	Mem99[rsi + 0x0000000000000003:byte] = al_95
	Mem113[rsi + 0x0000000000000004:byte] = SLICE((uint64) (SLICE((uint64) (SLICE((uint64) (0x00000000 - SLICE(cond(SLICE((uint64) (SLICE((uint64) edi_6, word32, 0) & 0x00000020), word32, 0) - 0x00000001), bool, 1)), word32, 0) & 0xFFFFFFBB), word32, 0) + 0x00000072), byte, 0)
	Mem126[rsi + 0x0000000000000005:byte] = SLICE((uint64) (SLICE((uint64) (SLICE((uint64) (0x00000000 - SLICE(cond(SLICE((uint64) (SLICE((uint64) edi_6, word32, 0) & 0x00000010), word32, 0) - 0x00000001), bool, 1)), word32, 0) & 0xFFFFFFB6), word32, 0) + 0x00000077), byte, 0)
	word32 eax_137 = SLICE((uint64) (0x00000000 - SLICE(cond(SLICE((uint64) (SLICE((uint64) edi_6, word32, 0) & 0x00000008), word32, 0) - 0x00000001), bool, 1)), word32, 0)
	branch (edi_6 & 0x00000400) == 0x00000000 l000000000040A580
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A580:
	al_148 = SLICE((uint64) (SLICE((uint64) (eax_137 & 0xFFFFFFB5), word32, 0) + 0x00000078), byte, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A50E:
	al_148 = SLICE((uint64) (SLICE((uint64) (eax_137 & 0xFFFFFFE0), word32, 0) + 0x00000073), byte, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A514:
	Mem152[rsi + 0x0000000000000006:byte] = al_148
	Mem166[rsi + 0x0000000000000007:byte] = SLICE((uint64) (SLICE((uint64) (SLICE((uint64) (0x00000000 - SLICE(cond(SLICE((uint64) (SLICE((uint64) edi_6, word32, 0) & 0x00000004), word32, 0) - 0x00000001), bool, 1)), word32, 0) & 0xFFFFFFBB), word32, 0) + 0x00000072), byte, 0)
	Mem181[rsi + 0x0000000000000008:byte] = SLICE((uint64) (SLICE((uint64) (SLICE((uint64) (0x00000000 - SLICE(cond(SLICE((uint64) (SLICE((uint64) edi_6, word32, 0) & 0x00000002), word32, 0) - 0x00000001), bool, 1)), word32, 0) & 0xFFFFFFB6), word32, 0) + 0x00000077), byte, 0)
	branch (edi_6 & 0x00000200) == 0x00000000 l000000000040A560
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A560:
	Mem184[rsi + 0x000000000000000A:byte] = 0x20
	Mem185[rsi + 0x000000000000000B:byte] = 0x00
	Mem197[rsi + 0x0000000000000009:byte] = SLICE((uint64) (SLICE((uint64) (SLICE((uint64) (0x00000000 - SLICE(cond(SLICE((uint64) (edi_6 & 0x00000001), word32, 0) - 0x00000001), bool, 1)), word32, 0) & 0xFFFFFFB5), word32, 0) + 0x00000078), byte, 0)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A545:
	Mem199[rsi + 0x000000000000000A:byte] = 0x20
	Mem200[rsi + 0x000000000000000B:byte] = 0x00
	Mem212[rsi + 0x0000000000000009:byte] = SLICE((uint64) (SLICE((uint64) (SLICE((uint64) (0x00000000 - SLICE(cond(SLICE((uint64) (edi_6 & 0x00000001), word32, 0) - 0x00000001), bool, 1)), word32, 0) & 0xFFFFFFE0), word32, 0) + 0x00000074), byte, 0)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040A600_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040A610(word64 rdx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rsp
fn000000000040A610_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A610:
	word64 rax_8 = fn000000000040A630(rdx, rsi, rdi)
	branch rax_8 == 0x0000000000000000 l000000000040A623
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A623:
	fn0000000000410E50()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A61E:
	return rax_8
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040A610_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040A630(word64 rdx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040A630_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A630:
	word64 rax_30 = fn000000000040A390(rdi)
	word64 rax_41 = fn000000000040A400(SLICE(rax_30, word32, 32), rax_30)
	word64 r14_11 = 0x0000000000000000
	word32 rax_32_32_80 = SLICE(rax_41, word32, 32)
	rax_32_32_80 = SLICE(rax_41, word32, 32) (alias)
	word64 rsi_51 = rax_30 - rdi + rax_41
	branch rax_41 == 0x0000000000000000 l000000000040A679
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A66D:
	r14_11 = (uint64) (uint8) (Mem52[rax_30 - 0x0000000000000001 + rax_41:byte] != 0x2F) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A679:
	word64 rbx_61 = rsi
	branch Mem52[rsi:byte] == 0x2F l000000000040A700
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A700:
	rbx_61 = rbx_61 + 0x0000000000000001
	branch Mem52[rbx_61:byte] != 0x2F l000000000040A682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A70D:
	rbx_61 = rbx_61 + 0x0000000000000001
	branch Mem52[rbx_61 + 0x0000000000000001:byte] != 0x2F l000000000040A682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A71A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A682:
	word64 rax_138
	word64 rax_84 = SEQ(rax_32_32_80, strlen(rbx_61))
	word64 rax_93 = malloc(rsi_51 + 0x0000000000000001 + r14_11 + rax_84)
	branch rax_93 == 0x0000000000000000 l000000000040A720
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A720:
	rax_138 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A6A8:
	word64 rax_108 = mempcpy(rax_93, rdi, rsi_51)
	Mem114[rax_108:byte] = 0x2F
	word64 rdi_115 = rax_108 + r14_11
	branch rdx == 0x0000000000000000 l000000000040A6D5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A6C3:
	Mem128[rdx:word64] = rdi_115 - (uint64) ((uint8) (Mem114[rsi:byte] == 0x2F))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A6D5:
	Mem136[mempcpy(rdi_115, rbx_61, rax_84):byte] = 0x00
	rax_138 = rax_93
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A6E8:
	return rax_138
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040A630_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040A730(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[32..63]
// LiveOut:
// Trashed: SCZO ecx r10 r8 r9d rax rdx rsi
// Preserved: rsp
fn000000000040A730_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A730:
	word64 rdx_40 = Mem0[rdi:word64]
	byte cl_25 = SLICE((word32) Mem0[rdx_40:byte], byte, 0)
	branch cl_25 == 0x00 l000000000040A7CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A7CD:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A73E:
	word64 rax_16 = 0x0000000000000000
	word64 r8_157 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A776:
	word32 rsi_32_32_44 = SLICE(rsi, word32, 32)
	branch SLICE(r8_157, byte, 0) != 0x00 l000000000040A750
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A750:
	rsi = (uint64) (SLICE((uint64) ((int32) cl_25 & 0xFFFFFFDF), word32, 0) - 0x00000041)
	r8_157 = 0x0000000000000000 (alias)
	r8_157 = 0x0000000000000000 (alias)
	branch SLICE(rsi, word32, 0) <=u 0x00000019 l000000000040A768
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A77B:
	branch cl_25 == 0x2E l000000000040A7B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A7B8:
	branch rax_16 == 0x0000000000000000 l000000000040A7C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A7C8:
	rax_16 = rdx_40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A7BD:
	r8_157 = 0x0000000000000001 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A780:
	word32 esi_43 = (int32) cl_25
	rsi = SEQ(rsi_32_32_44, esi_43) (alias)
	branch SEQ(rsi_32_32_44, esi_43) <=u 0x0000000000000039 l000000000040A768
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A78D:
	rsi = (uint64) (SLICE((uint64) (esi_43 & 0xFFFFFFDF), word32, 0) - 0x00000041)
	branch SLICE(rsi, word32, 0) >u 0x00000019 l000000000040A761
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A761:
	branch cl_25 == 0x7E l000000000040A768
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A764_1:
	rax_16 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A768:
	rdx_40 = rdx_40 + 0x0000000000000001
	Mem69[rdi:word64] = rdx_40
	cl_25 = SLICE((word32) Mem69[rdx_40:byte], byte, 0) (alias)
	branch cl_25 == 0x00 l000000000040A7B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A798:
	rdx_40 = rdx_40 + 0x0000000000000001
	Mem76[rdi:word64] = rdx_40
	cl_25 = SLICE((word32) Mem76[rdx_40:byte], byte, 0) (alias)
	branch cl_25 != 0x00 l000000000040A776
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A7A6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A7B0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040A730_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040AB30(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax rdi rsi
// Preserved: rbx rsp
fn000000000040AB30_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AB30:
	branch clock_gettime(0x0000000000000000, rdi) == 0x00000000 l000000000040AB67
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AB46:
	gettimeofday(fp - 0x0000000000000018, 0x0000000000000000)
	Mem19[rdi:word64] = qwLoc18
	Mem23[rdi + 0x0000000000000008:word64] = qwLoc10 *s 1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AB67:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040AB30_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040AB70(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rsi
// Preserved: rsp
fn000000000040AB70_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AB70:
	word64 rax_6 = setlocale(rdi, 0x0000000000000000)
	word56 rax_56_8_55 = SLICE(rax_6, word56, 8)
	branch rax_6 == 0x0000000000000000 l000000000040ABB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ABB0:
	return 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AB80:
	bool Z_15 = SLICE(cond(Mem0[rax_6:byte] - 0x43), bool, 2)
	branch Mem0[rax_6:byte] != 0x43 l000000000040AB98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AB85:
	Z_15 = SLICE(cond(Mem0[rax_6 + 0x0000000000000001:byte]), bool, 2) (alias)
	branch Mem0[rax_6 + 0x0000000000000001:byte] != 0x00 l000000000040AB98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AB98:
	word64 rsi_19 = rax_6
	word64 rdi_20 = 0x0000000000415E6A
	word64 rcx_21 = 0x0000000000000006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ABA5:
	branch rcx_21 == 0x0000000000000000 l000000000040ABA7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ABA5_1:
	Z_15 = SLICE(cond(Mem0[rsi_73:byte] - Mem0[rdi_74:byte]), bool, 2) (alias)
	rsi_19 = rsi_73 + 0x0000000000000001
	rdi_20 = rdi_74 + 0x0000000000000001
	rcx_21 = rcx_21 - 0x0000000000000001
	rsi_73 = rsi_19
	rdi_74 = rdi_20
	branch Mem0[rsi_73:byte] != Mem0[rdi_74:byte] l000000000040ABA5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ABA7:
	return SEQ(rax_56_8_55, Z_15)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AB8B:
	return 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040AB70_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040ABC0(word64 rdi, ptr64 & r8Out, ptr64 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut: r8 r9 rax
// Trashed: SCZO r8 r9 rax rcx rdi rdx rsi
// Preserved: rsp
fn000000000040ABC0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ABC0:
	word64 rdi_11
	branch rdi >u 0x0000000000000009 l000000000040AC4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC4F:
	rdi_11 = rdi | 0x0000000000000001
	branch (rdi | 0x0000000000000001) != 0xFFFFFFFFFFFFFFFF l000000000040ABCF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC5D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ABCA:
	rdi_11 = 0x000000000000000B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ABCF:
	r9 = 0x00000000AAAAAAAB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ABE0:
	word64 rcx_14
	branch rdi_11 <=u 0x0000000000000009 l000000000040AC48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC48:
	rcx_14 = 0x0000000000000003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ABE6:
	word64 rdx_18 = SLICE(rdi_11 *u 0x00000000AAAAAAAB, word64, 64)
	branch rdi_11 == (rdx_18 >>u 0x0000000000000001) + (rdx_18 >>u 0x0000000000000001) * 0x0000000000000002 l000000000040AC3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ABF8:
	r8 = 0x0000000000000010
	word64 rsi_24 = 0x0000000000000009
	rcx_14 = 0x0000000000000003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC21:
	rsi_24 = rsi_24 + r8
	rcx_14 = rcx_14 + 0x0000000000000002
	branch rsi_24 <u rdi_11 l000000000040AC10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC10:
	r8 = r8 + 0x0000000000000008
	branch (uint64) ((uint128) (uint64) rdi_11 % rcx_14) == 0x0000000000000000 l000000000040AC3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC2D:
	branch (uint64) ((uint128) (uint64) rdi_11 % rcx_14) != 0x0000000000000000 l000000000040AC44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC3A:
	rdi_11 = rdi_11 + 0x0000000000000002
	branch rdi_11 != 0xFFFFFFFFFFFFFFFF l000000000040ABE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC44:
	r8Out = r8
	r9Out = r9
	return rdi_11
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040ABC0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040AC80(word64 rax, word64 rbx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rax:[0..63] rbx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdi rsi
// Preserved: rbx rsp
fn000000000040AC80_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC80:
	word64 rax_14
	call Mem5[rdi + 0x0000000000000030:word64] (retsize: 8;)
		uses: rax:rax,rdi:rsi,rsi:Mem5[rdi + 0x0000000000000010:word64],Stack +0008:rbx
		defs: rax:rax_14
	branch rax_14 >=u Mem5[rdi + 0x0000000000000010:word64] l000000000040AC9D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC9D:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC94:
	return (rax_14 << 0x0000000000000004) + Mem5[rdi:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040AC80_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040ACB0(word64 rax, word64 rcx, word64 rdx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r9, word64 r10, word64 r12, word64 r13, word64 r14, ptr64 & rsiOut, ptr64 & r9Out, ptr64 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..63] r12:[0..63] r13:[0..63] r14:[0..63] r9:[0..63] rax:[0..63] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r10 r9 rax rsi
// Trashed: SCZO r10 r9 rax rcx rdi rdx rsi
// Preserved: r12 r13 r14 rbp rbx rsp
fn000000000040ACB0_entry:
	word32 ecx = SLICE(rcx, word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ACB0:
	word64 r13_12 = (uint64) ecx
	word64 rax_27 = fn000000000040AC80(rax, rbx, rsi, rdi)
	Mem34[rdx:word64] = rax_27
	byte r13b_140 = SLICE(r13_12, byte, 0)
	r13b_140 = SLICE(r13_12, byte, 0) (alias)
	word64 rsi_108 = Mem34[rax_27:word64]
	word64 rbx_121 = rax_27
	branch rsi_108 == 0x0000000000000000 l000000000040AD4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ACD7:
	branch rsi == rsi_108 l000000000040ACE9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ACDC:
	word64 rax_49
	word64 rdx_43
	word64 rcx_46
	call Mem34[rdi + 0x0000000000000038:word64] (retsize: 8;)
		uses: r10:r10,r9:r9,rax:rax_27,rcx:rcx,rdi:rsi,rdx:rdx,rsi:rsi_35,Stack +0008:rbx,Stack +0010:rbp,Stack +0018:r12,Stack +0020:r13,Stack +0028:r14
		defs: r10:r10_53,r9:r9_51,rax:rax_49,rcx:rcx_46,rdx:rdx_43
	branch SLICE(rax_49, byte, 0) == 0x00 l000000000040AD46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AD46:
	byte r13b_92 = SLICE(r13_12, byte, 0)
	r13b_92 = SLICE(r13_12, byte, 0) (alias)
	word64 rax_61 = Mem34[rbx_121 + 0x0000000000000008:word64]
	branch rax_61 != 0x0000000000000000 l000000000040AD30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AD30:
	rsi_108 = Mem34[rax_61:word64]
	branch rsi_108 == rsi l000000000040AD67
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AD38:
	word64 rax_80
	call Mem34[rdi + 0x0000000000000038:word64] (retsize: 8;)
		uses: r10:r10_83,r9:r9_81,rax:rax_61,rcx:rcx_76,rdi:rsi,rdx:rdx_73,rsi:rsi_65,Stack +0008:rbx,Stack +0010:rbp,Stack +0018:r12,Stack +0020:r13,Stack +0028:r14
		defs: r10:r10_84,r9:r9_82,rax:rax_80,rcx:rcx_77,rdx:rdx_74
	branch SLICE(rax_80, byte, 0) != 0x00 l000000000040AD60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AD60:
	rax_61 = Mem34[rbx_121 + 0x0000000000000008:word64]
	rsi_108 = Mem34[rax_61:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AD67:
	branch r13b_92 == 0x00 l000000000040AD1C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AD6C:
	Mem102[rbx_121 + 0x0000000000000008:word64] = Mem34[rax_61 + 0x0000000000000008:word64]
	Mem103[rax_61:word64] = 0x0000000000000000
	Mem106[rax_61 + 0x0000000000000008:word64] = Mem103[rdi + 0x0000000000000048:word64]
	Mem107[rdi + 0x0000000000000048:word64] = rax_61
	rsiOut = rsi_108
	r9Out = r9
	r10Out = r10
	return rsi_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AD42:
	rbx_121 = Mem34[rbx_121 + 0x0000000000000008:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AD4F:
	rsiOut = 0x0000000000000000
	r9Out = r9
	r10Out = r10
	return 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ACE6:
	rsi_108 = Mem34[rax_27:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ACE9:
	branch r13b_140 == 0x00 l000000000040AD1C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ACEE:
	word64 rax_148 = Mem34[rax_27 + 0x0000000000000008:word64]
	branch rax_148 == 0x0000000000000000 l000000000040AD98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AD98:
	Mem152[rax_27:word64] = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ACFB:
	r9 = Mem34[rax_148:word64]
	r10 = Mem34[rax_148 + 0x0000000000000008:word64]
	Mem155[rax_27:word64] = r9
	Mem156[rax_27 + 0x0000000000000008:word64] = r10
	Mem157[rax_148:word64] = 0x0000000000000000
	Mem160[rax_148 + 0x0000000000000008:word64] = Mem157[rdi + 0x0000000000000048:word64]
	Mem161[rdi + 0x0000000000000048:word64] = rax_148
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AD1C:
	rsiOut = rsi_108
	r9Out = r9
	r10Out = r10
	return rsi_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040ACB0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn000000000040ADB0(word64 rdi, word64 r8, word128 xmm0, word128 xmm1, word128 xmm2, ptr64 & xmm0Out, ptr64 & xmm1Out, ptr64 & xmm2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8:[0..63] rdi:[0..63] xmm0:[32..127] xmm1:[32..127] xmm2:[32..127]
// LiveOut: rax xmm0 xmm1 xmm2
// Trashed: SCZOP rax xmm0 xmm1 xmm2 xmm3
// Preserved: rsp
fn000000000040ADB0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ADB0:
	word64 rax_5 = Mem0[rdi:word64]
	branch r8 == 0x0000000000415EE0 l000000000040AE30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE30:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ADBB:
	xmm0 = DPB(xmm0, Mem0[rax_5 + 0x0000000000000008:real32], 0)
	branch Mem0[rax_5 + 0x0000000000000008:real32] <=u Mem0[0x0000000000415EF4:real32] l000000000040AE20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ADC9:
	xmm1 = DPB(xmm1, Mem0[0x0000000000415EF8:real32], 0)
	branch Mem0[0x0000000000415EF8:real32] <=u xmm0 l000000000040AE20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ADD6:
	xmm1 = DPB(xmm1, Mem0[rax_5 + 0x000000000000000C:real32], 0)
	branch Mem0[rax_5 + 0x000000000000000C:real32] <=u Mem0[0x0000000000415EFC:real32] l000000000040AE20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ADE4:
	xmm1 = DPB(xmm1, Mem0[rax_5:real32], 0)
	branch Mem0[rax_5:real32] <u Mem0[0x0000000000415F00:real32] l000000000040AE20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ADF1:
	xmm1 = DPB(xmm1, Mem0[rax_5:real32] + Mem0[0x0000000000415EF4:real32], 0)
	xmm2 = DPB(xmm2, Mem0[rax_5 + 0x0000000000000004:real32], 0)
	branch Mem0[rax_5 + 0x0000000000000004:real32] <=u xmm1 l000000000040AE20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE03:
	branch Mem0[0x0000000000415F04:real32] <u xmm2 l000000000040AE20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE10:
	branch Mem0[rax_5 + 0x0000000000000008:real32] >u xmm1 l000000000040AE35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE35:
	xmm0Out = xmm0
	xmm1Out = xmm1
	xmm2Out = xmm2
	return 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE1A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE20:
	Mem52[rdi:word64] = 0x0000000000415EE0
	xmm0Out = xmm0
	xmm1Out = xmm1
	xmm2Out = xmm2
	return 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040ADB0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040AE40(word64 rax, word32 edx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rax:[0..63] rdi:[0..63] rdx:[0..31] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040AE40_entry:
	word32 edx = SLICE(rdx, word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE40:
	byte r15b_201 = SLICE((uint64) edx, byte, 0)
	word64 r13_169 = Mem26[rsi:word64]
	branch r13_169 >=u Mem26[rsi + 0x0000000000000008:word64] l000000000040AEEF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE64:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE68:
	word64 rbp_33 = Mem32[r13_169:word64]
	branch rbp_33 == 0x0000000000000000 l000000000040AEE1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE71:
	word64 rbx_37 = Mem32[r13_169 + 0x0000000000000008:word64]
	branch rbx_37 != 0x0000000000000000 l000000000040AE94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE94:
	word64 rbp_43 = Mem42[rbx_37:word64]
	rax = fn000000000040AC80(rax, rbx_37, rbp_43, rdi)
	word64 rdx_56 = Mem42[rbx_37 + 0x0000000000000008:word64]
	branch Mem42[rax:word64] != 0x0000000000000000 l000000000040AE80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE80:
	Mem61[rbx_37 + 0x0000000000000008:word64] = Mem42[rax + 0x0000000000000008:word64]
	Mem62[rax + 0x0000000000000008:word64] = rbx_37
	branch rdx_56 == 0x0000000000000000 l000000000040AED0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AEAC:
	Mem64[rax:word64] = rbp_43
	Mem66[rdi + 0x0000000000000018:word64] = Mem64[rdi + 0x0000000000000018:word64] + 0x0000000000000001
	Mem69[rbx_37:word64] = 0x0000000000000000
	rax = Mem69[rdi + 0x0000000000000048:word64]
	Mem71[rbx_37 + 0x0000000000000008:word64] = rax
	Mem72[rdi + 0x0000000000000048:word64] = rbx_37
	branch rdx_56 != 0x0000000000000000 l000000000040AE91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE91:
	rbx_37 = rdx_56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AECF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AED0:
	rbp_33 = Mem79[r13_169:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE7A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AED4:
	Mem89[r13_169 + 0x0000000000000008:word64] = 0x0000000000000000
	branch r15b_201 == 0x00 l000000000040AF08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AF08:
	rax = fn000000000040AC80(rax, rbx_37, rbp_33, rdi)
	branch Mem89[rax:word64] == 0x0000000000000000 l000000000040AF5B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AF5B:
	Mem112[rax:word64] = rbp_33
	Mem114[rdi + 0x0000000000000018:word64] = Mem112[rdi + 0x0000000000000018:word64] + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AF1C:
	rax = Mem89[rdi + 0x0000000000000048:word64]
	branch rax == 0x0000000000000000 l000000000040AF66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AF66:
	rax = malloc(0x0000000000000010)
	branch rax != 0x0000000000000000 l000000000040AF2F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AF75:
	return 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AF26:
	Mem148[rdi + 0x0000000000000048:word64] = Mem89[rax + 0x0000000000000008:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AF2F:
	word64 rdx_151 = Mem150[rax + 0x0000000000000008:word64]
	Mem154[rax:word64] = rbp_33
	Mem155[rax + 0x0000000000000008:word64] = rdx_151
	Mem156[rax + 0x0000000000000008:word64] = rax
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AF3E:
	Mem159[r13_169:word64] = 0x0000000000000000
	Mem168[rsi + 0x0000000000000018:word64] = Mem159[rsi + 0x0000000000000018:word64] - 0x0000000000000001
	r13_169 = r13_169 + 0x0000000000000010
	branch Mem168[rsi + 0x0000000000000008:word64] >u r13_169 l000000000040AE68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AF59:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AEE1:
	r13_169 = r13_169 + 0x0000000000000010
	branch Mem175[rsi + 0x0000000000000008:word64] >u r13_169 l000000000040AE68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AEEF:
	return 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040AE40_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040AFB0(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: rax
// Preserved: rsp
fn000000000040AFB0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AFB0:
	return Mem0[rdi + 0x0000000000000020:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040AFB0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040B400(word64 rcx, word64 rdx, word64 rsi, word64 rdi, word64 r8, word128 xmm0, word128 xmm1, word128 xmm2, ptr64 & r9Out, ptr64 & xmm0Out, ptr64 & xmm1Out, ptr64 & xmm2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..127] xmm0:[0..127] xmm1:[0..127] xmm2:[0..127]
// LiveOut: r9 rax xmm0 xmm1 xmm2
// Trashed: SCZOP r8 r9 rax rcx rdi rdx rsi xmm0 xmm1 xmm2 xmm3
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040B400_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B400:
	word64 r15_140 = rdi
	word32 r15d_106 = SLICE(rdi, word32, 0)
	word32 r15_32_32_136 = SLICE(rdi, word32, 32)
	word64 r13_19 = rdx
	word64 r12_216 = rcx
	word64 rbp_29 = rsi
	branch rdx != 0x0000000000000000 l000000000040B42E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B42A_1:
	r13_19 = 0x000000000040AC60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B42E:
	branch rcx != 0x0000000000000000 l000000000040B43A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B436_1:
	r12_216 = 0x000000000040AC70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B43A:
	word64 rax_227
	word64 rax_46 = malloc(0x0000000000000050)
	branch rax_46 == 0x0000000000000000 l000000000040B598
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B598:
	rax_227 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B44B:
	branch rsi != 0x0000000000000000 l000000000040B45B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B457_1:
	rbp_29 = 0x0000000000415EE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B45B:
	Mem65[rax_46 + 0x0000000000000028:word64] = rbp_29
	branch SLICE((uint64) (uint8) fn000000000040ADB0(rax_46 + 0x0000000000000028, r8, xmm0, xmm1, xmm2, out xmm0, out xmm1, out xmm2), byte, 0) == 0x00 l000000000040B548
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B46C:
	xmm1 = DPB(xmm1, Mem65[rbp_29 + 0x0000000000000008:real32], 0)
	branch Mem65[rbp_29 + 0x0000000000000010:byte] != 0x00 l000000000040B4C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B477:
	word128 xmm0_115
	branch rdi < 0x0000000000000000 l000000000040B578
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B578:
	word64 r15_107 = (uint64) (r15d_106 & 0x00000001)
	real32 v33_112 = (real32) (rdi >>u 0x0000000000000001 | r15_107)
	r15_32_32_136 = SLICE(r15_107, word32, 32) (alias)
	xmm0_115 = DPB(xmm0, v33_112 + DPB(xmm0, v33_112, 0), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B480:
	xmm0_115 = DPB(xmm0, (real32) rdi, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B485:
	real32 v26_120 = (real32) xmm0_115 / xmm1
	xmm0 = DPB(xmm0, v26_120, 0)
	branch v26_120 >=u Mem65[0x0000000000415F08:real32] l000000000040B540
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B496:
	branch v26_120 <u Mem65[0x0000000000415F0C:real32] l000000000040B568
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B568:
	r15_140 = SEQ(r15_32_32_136, v26_120) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B4A3:
	real32 v29_132 = v26_120 - Mem65[0x0000000000415F0C:real32]
	xmm0 = DPB(xmm0, v29_132, 0)
	r15_140 = SEQ(r15_32_32_136, v29_132) ^ 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B4C0:
	word64 r8_151
	word64 rax_147 = fn000000000040ABC0(r15_140, out r8_151, out r9)
	branch rax_147 >u 0x00000000FFFFFFFF l000000000040B540
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B540:
	Mem164[rax_46 + 0x0000000000000010:word64] = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B4DA:
	Mem167[rax_46 + 0x0000000000000010:word64] = rax_147
	branch rax_147 == 0x0000000000000000 l000000000040B548
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B4E3:
	word64 rax_171 = calloc(rax_147, 0x0000000000000010)
	Mem174[rax_46:word64] = rax_171
	branch rax_171 == 0x0000000000000000 l000000000040B548
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B548:
	free(rax_46)
	r9Out = r9
	xmm0Out = xmm0
	xmm1Out = xmm1
	xmm2Out = xmm2
	return 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B4F8:
	Mem204[rax_46 + 0x0000000000000018:word64] = 0x0000000000000000
	Mem205[rax_46 + 0x0000000000000020:word64] = 0x0000000000000000
	Mem213[rax_46 + 0x0000000000000030:word64] = r13_19
	Mem219[rax_46 + 0x0000000000000038:word64] = r12_216
	Mem220[rax_46 + 0x0000000000000008:word64] = rax_171 + (rax_147 << 0x0000000000000004)
	Mem226[rax_46 + 0x0000000000000040:word64] = r8
	Mem228[rax_46 + 0x0000000000000048:word64] = 0x0000000000000000
	rax_227 = rax_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B52A:
	r9Out = r9
	xmm0Out = xmm0
	xmm1Out = xmm1
	xmm2Out = xmm2
	return rax_227
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040B400_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040B640(word64 rax, word64 rbx, word64 rbp, word64 rdi, word64 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..63] rax:[0..63] rbp:[0..63] rbx:[0..63] rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax
// Preserved: r12 rbp rbx rdi rsp
fn000000000040B640_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B640:
	branch Mem13[rdi + 0x0000000000000040:word64] == 0x0000000000000000 l000000000040B655
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B64E:
	branch Mem13[rdi + 0x0000000000000020:word64] != 0x0000000000000000 l000000000040B6C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6C6:
	word64 r12_18 = Mem13[rdi:word64]
	branch r12_18 >=u Mem13[rdi + 0x0000000000000008:word64] l000000000040B693
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6CF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6D0:
	word64 rdi_23 = Mem13[r12_18:word64]
	word64 rbx_24 = r12_18
	branch rdi_23 != 0x0000000000000000 l000000000040B6E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6E3:
	call Mem13[rdi + 0x0000000000000040:word64] (retsize: 8;)
		uses: rax:rax_35,rdi:rdi_32,Stack +0008:rbx,Stack +0010:rbp,Stack +0018:r12
		defs: rax:rax_36
	rbx_24 = Mem13[rbx_24 + 0x0000000000000008:word64]
	branch rbx_24 != 0x0000000000000000 l000000000040B6E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6E0:
	rdi_23 = Mem13[rbx_24:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6DC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6EF:
	rax = Mem13[rdi + 0x0000000000000008:word64]
	r12_18 = r12_18 + 0x0000000000000010
	branch rax >u r12_18 l000000000040B6D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6FC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B655:
	rax = Mem13[rdi + 0x0000000000000008:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B659:
	word64 r12_56 = Mem13[rdi:word64] + 0x0000000000000008
	branch r12_56 >=u rax l000000000040B693
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B662:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B668:
	word64 rdi_62 = Mem13[r12_56 + 0x0000000000000000:word64]
	branch rdi_62 != 0x0000000000000000 l000000000040B67B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B67B:
	word64 rbx_68 = Mem13[rdi_62 + 0x0000000000000008:word64]
	free(rdi_62)
	branch rbx_68 != 0x0000000000000000 l000000000040B678
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B678:
	rdi_62 = rbx_68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B672:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B689:
	r12_56 = r12_56 + 0x0000000000000010
	branch Mem13[rdi + 0x0000000000000008:word64] >u r12_56 l000000000040B668
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B693:
	word64 rdi_84 = Mem13[rdi + 0x0000000000000048:word64]
	branch rdi_84 != 0x0000000000000000 l000000000040B6A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6A3:
	word64 rbx_90 = Mem13[rdi_84 + 0x0000000000000008:word64]
	free(rdi_84)
	branch rbx_90 != 0x0000000000000000 l000000000040B6A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6A0:
	rdi_84 = rbx_90
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B69C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6B1:
	free(Mem13[rdi:word64])
	free(rdi)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040B640_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040B710(word64 rsi, word64 rdi, word128 xmm0, word128 xmm1, ptr64 & r8Out, ptr64 & r9Out, ptr64 & xmm0Out, ptr64 & xmm1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63] xmm0:[32..127] xmm1:[32..127]
// LiveOut: r8 r9 rax xmm0 xmm1
// Trashed: SCZOP r8 r9 rax rcx rdi rdx rsi xmm0 xmm1
// Preserved: r12 rbp rbx rsp
fn000000000040B710_entry:
	word32 esi_25 = SLICE(rsi, word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B710:
	word64 rbp_15 = Mem11[rdi + 0x0000000000000028:word64]
	word128 xmm1_18 = DPB(xmm1, Mem11[rbp_15 + 0x0000000000000008:real32], 0)
	branch Mem11[rbp_15 + 0x0000000000000010:byte] != 0x00 l000000000040B770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B72A:
	word128 xmm0_35
	branch rsi < 0x0000000000000000 l000000000040B8D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B8D0:
	rsi = (uint64) (esi_25 & 0x00000001)
	real32 v28_31 = (real32) (rsi >>u 0x0000000000000001 | rsi)
	xmm0_35 = DPB(xmm0, v28_31 + DPB(xmm0, v28_31, 0), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B733:
	xmm0_35 = DPB(xmm0, (real32) rsi, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B738:
	real32 v16_40 = (real32) xmm0_35 / xmm1_18
	word32 rsi_32_32_56 = SLICE(rsi, word32, 32)
	xmm0 = DPB(xmm0, v16_40, 0)
	branch v16_40 >=u Mem11[0x0000000000415F08:real32] l000000000040B870
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B749:
	branch v16_40 <u Mem11[0x0000000000415F0C:real32] l000000000040B880
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B880:
	rsi = SEQ(rsi_32_32_56, v16_40) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B756:
	real32 v19_52 = v16_40 - Mem11[0x0000000000415F0C:real32]
	xmm0 = DPB(xmm0, v19_52, 0)
	rsi = SEQ(rsi_32_32_56, v19_52) ^ 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B770:
	word64 rax_67 = fn000000000040ABC0(rsi, out r8, out r9)
	branch rax_67 >u 0x00000000FFFFFFFF l000000000040B870
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B792:
	branch Mem11[rdi + 0x0000000000000010:word64] == rax_67 l000000000040B860
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B860:
	r8Out = r8
	r9Out = r9
	xmm0Out = xmm0
	xmm1Out = <invalid>
	return 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B79C:
	word64 rax_102 = calloc(rax_67, 0x0000000000000010)
	branch rax_102 == 0x0000000000000000 l000000000040B870
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B870:
	r8Out = r8
	r9Out = r9
	xmm0Out = xmm0
	xmm1Out = <invalid>
	return 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B7B6:
	word64 rax_140 = Mem139[rdi + 0x0000000000000048:word64]
	word64 rax_142 = fn000000000040AE40(rax_140, 0x0000000000000000, rdi, fp - 0x0000000000000068)
	word64 rax_124 = rax_102 + (rax_67 << 0x0000000000000004)
	word32 ebp_170 = SLICE((uint64) SLICE(rax_142, word32, 0), word32, 0)
	branch SLICE(rax_142, byte, 0) != 0x00 l000000000040B890
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B890:
	free(Mem141[rdi:word64])
	Mem159[rdi:word64] = rax_102
	Mem161[rdi + 0x0000000000000008:word64] = rax_124
	Mem163[rdi + 0x0000000000000010:word64] = rax_67
	Mem165[rdi + 0x0000000000000018:word64] = 0x0000000000000000
	Mem167[rdi + 0x0000000000000048:word64] = rax_140
	r8Out = r8
	r9Out = r9
	xmm0Out = xmm0
	xmm1Out = <invalid>
	return (uint64) ebp_170
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B815:
	Mem182[rdi + 0x0000000000000048:word64] = rax_140
	word64 rax_183 = fn000000000040AE40(rax_140, 0x0000000000000001, fp - 0x0000000000000068, rdi)
	branch SLICE(rax_183, byte, 0) == 0x00 l000000000040B8EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B836:
	branch SLICE(fn000000000040AE40(rax_183, 0x0000000000000000, fp - 0x0000000000000068, rdi), byte, 0) == 0x00 l000000000040B8EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B8EA:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B84B:
	free(rax_102)
	r8Out = r8
	r9Out = r9
	xmm0Out = xmm0
	xmm1Out = <invalid>
	return (uint64) ebp_170
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040B710_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn000000000040B8F0(word64 rax, word64 rdx, word64 rsi, word64 rdi, word64 r8, word64 r9, word64 r10, word64 r13, word64 r14, word128 xmm0, word128 xmm1, word128 xmm2, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & xmm0Out, ptr64 & xmm1Out, ptr64 & xmm2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..63] r13:[0..63] r14:[0..63] r8:[0..63] r9:[0..63] rax:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63] xmm0:[32..127] xmm1:[32..127] xmm2:[0..127]
// LiveOut: r10 r8 r9 rax xmm0 xmm1 xmm2
// Trashed: SCZOP r10 r8 r9 rax rcx rdi rdx rsi xmm0 xmm1 xmm2 xmm3
// Preserved: r12 rbp rbx rsp
fn000000000040B8F0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B8F0:
	branch rsi == 0x0000000000000000 l000000000040BA67
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B904:
	word64 rax_292
	word64 rsi_35
	word64 r10_274
	word64 r9_210
	word64 rax_32 = fn000000000040ACB0(rax, 0x0000000000000000, fp - 0x0000000000000020, rdi, rsi, rsi, rdi, r9, r10, rdx, r13, r14, out rsi_35, out r9_210, out r10_274)
	word32 rsi_32_32_194 = SLICE(rsi_35, word32, 32)
	branch rax_32 == 0x0000000000000000 l000000000040B938
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B938:
	word64 rax_46 = Mem13[rdi + 0x0000000000000018:word64]
	word32 eax_51 = SLICE(rax_46, word32, 0)
	branch rax_46 < 0x0000000000000000 l000000000040BA70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BA70:
	real32 v27_57 = (real32) (rax_46 >>u 0x0000000000000001 | (uint64) (eax_51 & 0x00000001))
	xmm0 = DPB(xmm0, v27_57 + DPB(xmm0, v27_57, 0), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B945:
	xmm0 = DPB(xmm0, (real32) rax_46, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B94A:
	word128 xmm1_83
	word64 rax_66 = Mem13[rdi + 0x0000000000000010:word64]
	word32 eax_72 = SLICE(rax_66, word32, 0)
	word64 rdx_67 = Mem13[rdi + 0x0000000000000028:word64]
	branch rax_66 < 0x0000000000000000 l000000000040BA90
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BA90:
	real32 v46_78 = (real32) (rax_66 >>u 0x0000000000000001 | (uint64) (eax_72 & 0x00000001))
	xmm1_83 = DPB(xmm1, v46_78 + DPB(xmm1, v46_78, 0), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B95B:
	xmm1_83 = DPB(xmm1, (real32) rax_66, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B960:
	xmm1 = DPB(xmm1, (real32) xmm1_83 * Mem13[rdx_67 + 0x0000000000000008:real32], 0)
	branch (real32) xmm0 >u xmm1 l000000000040B9C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B9C8:
	word128 xmm0_106
	word128 xmm1_107
	word128 xmm2_108
	fn000000000040ADB0(rdi + 0x0000000000000028, r8, xmm0, xmm1, xmm2, out xmm0_106, out xmm1_107, out xmm2_108)
	word64 rax_115 = Mem13[rdi + 0x0000000000000010:word64]
	word64 rdx_116 = Mem13[rdi + 0x0000000000000028:word64]
	word32 eax_122 = SLICE(rax_115, word32, 0)
	xmm2 = DPB(xmm2_108, Mem13[rdx_116 + 0x0000000000000008:real32], 0)
	branch rax_115 < 0x0000000000000000 l000000000040BAE7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BAE7:
	real32 v44_128 = (real32) (rax_115 >>u 0x0000000000000001 | (uint64) (eax_122 & 0x00000001))
	xmm0 = DPB(xmm0_106, v44_128 + DPB(xmm0_106, v44_128, 0), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B9E7:
	xmm0 = DPB(xmm0_106, (real32) rax_115, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B9EC:
	word64 rax_136 = Mem13[rdi + 0x0000000000000018:word64]
	word32 eax_141 = SLICE(rax_136, word32, 0)
	branch rax_136 < 0x0000000000000000 l000000000040BB01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BB01:
	real32 v41_147 = (real32) (rax_136 >>u 0x0000000000000001 | (uint64) (eax_141 & 0x00000001))
	xmm1 = DPB(xmm1_107, v41_147 + DPB(xmm1_107, v41_147, 0), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B9F9:
	xmm1 = DPB(xmm1_107, (real32) rax_136, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B9FE:
	branch (real32) xmm1 <=u DPB(xmm2_108, Mem13[rdx_116 + 0x0000000000000008:real32] * xmm0, 0) l000000000040B96A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BA0E:
	real32 v37_170 = (real32) xmm0 * Mem13[rdx_116 + 0x000000000000000C:real32]
	xmm0 = DPB(xmm0_106, v37_170, 0)
	branch Mem13[rdx_116 + 0x0000000000000010:byte] != 0x00 l000000000040BA1D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BA19:
	xmm0 = DPB(xmm0_106, v37_170 * xmm2, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BA1D:
	branch (real32) xmm0 >=u Mem13[0x0000000000415F08:real32] l000000000040BB2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BA2A:
	word64 rsi_196
	branch (real32) xmm0 >=u Mem13[0x0000000000415F0C:real32] l000000000040BAC8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BAC8:
	real32 v43_185 = (real32) xmm0 - Mem13[0x0000000000415F0C:real32]
	xmm0 = DPB(xmm0_106, v43_185, 0)
	rsi_196 = SEQ(rsi_32_32_194, v43_185) ^ 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BA37:
	rsi_196 = SEQ(rsi_32_32_194, (int32) xmm0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BA3C:
	word64 rax_211 = fn000000000040B710(rsi_196, rdi, xmm0, xmm1, out r8, out r9_210, out xmm0, out xmm1)
	branch SLICE(rax_211, byte, 0) == 0x00 l000000000040BB2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BA4C:
	word64 rsi_529
	branch fn000000000040ACB0(rax_211, 0x0000000000000000, fp - 0x0000000000000020, rdi, rsi, rsi, rdi, r9_210, r10_274, rdx, r13, r14, out rsi_529, out r9_210, out r10_274) == 0x0000000000000000 l000000000040B96A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BA67:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B96A:
	branch Mem13[qwLoc20:word64] == 0x0000000000000000 l000000000040BAB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BAB0:
	Mem291[qwLoc20:word64] = rsi
	Mem295[rdi + 0x0000000000000020:word64] = Mem291[rdi + 0x0000000000000020:word64] + 0x0000000000000001
	Mem297[rdi + 0x0000000000000018:word64] = Mem295[rdi + 0x0000000000000018:word64] + 0x0000000000000001
	rax_292 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B97A:
	word64 rax_299 = Mem13[rdi + 0x0000000000000048:word64]
	branch rax_299 == 0x0000000000000000 l000000000040BB1B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BB1B:
	rax_299 = malloc(0x0000000000000010)
	branch rax_299 != 0x0000000000000000 l000000000040B98F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BB2E:
	rax_292 = 0x00000000FFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B987:
	Mem310[rdi + 0x0000000000000048:word64] = Mem13[rax_299 + 0x0000000000000008:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B98F:
	word64 rdx_313 = Mem312[qwLoc20 + 0x0000000000000008:word64]
	Mem316[rax_299:word64] = rsi
	Mem317[rax_299 + 0x0000000000000008:word64] = rdx_313
	Mem318[qwLoc20 + 0x0000000000000008:word64] = rax_299
	Mem322[rdi + 0x0000000000000020:word64] = Mem318[rdi + 0x0000000000000020:word64] + 0x0000000000000001
	r8Out = r8
	r9Out = r9_210
	r10Out = r10_274
	xmm0Out = xmm0
	xmm1Out = xmm1
	xmm2Out = xmm2
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B91B:
	branch rdx == 0x0000000000000000 l000000000040B9B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B9B8:
	r8Out = r8
	r9Out = r9_210
	r10Out = r10_274
	xmm0Out = xmm0
	xmm1Out = xmm1
	xmm2Out = xmm2
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B924:
	Mem346[rdx:word64] = rax_32
	rax_292 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B92A:
	r8Out = r8
	r9Out = r9_210
	r10Out = r10_274
	xmm0Out = xmm0
	xmm1Out = xmm1
	xmm2Out = xmm2
	return (word32) rax_292
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040B8F0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040BB50(word64 rax, word64 rsi, word64 rdi, word64 r8, word64 r9, word64 r10, word64 r13, word64 r14, word128 xmm0, word128 xmm1, word128 xmm2, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & xmm0Out, ptr64 & xmm1Out, ptr64 & xmm2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..63] r13:[0..63] r14:[0..63] r8:[0..63] r9:[0..63] rax:[0..63] rdi:[0..63] rsi:[0..63] xmm0:[0..127] xmm1:[0..127] xmm2:[0..127]
// LiveOut: r10 r8 r9 rax xmm0 xmm1 xmm2
// Trashed: SCZOP r10 r8 r9 rax rcx rdi rdx rsi xmm0 xmm1 xmm2 xmm3
// Preserved: rbx rsp
fn000000000040BB50_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BB50:
	word64 rax_41
	word64 r10_21
	word64 r9_22
	word128 xmm0_28
	word128 xmm1_29
	word128 xmm2_30
	word64 r8_32
	word32 eax_38 = SLICE((uint64) (uint32) fn000000000040B8F0(rax, fp - 0x0000000000000010, rsi, rdi, r8, r9, r10, r13, r14, xmm0, xmm1, xmm2, out r8_32, out r9_22, out r10_21, out xmm0_28, out xmm1_29, out xmm2_30), word32, 0)
	branch eax_38 == 0xFFFFFFFF l000000000040BB80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BB80:
	rax_41 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BB67:
	rax_41 = rsi
	branch eax_38 != 0x00000000 l000000000040BB72
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BB6C_1:
	rax_41 = qwLoc10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BB72:
	r8Out = r8_32
	r9Out = r9_22
	r10Out = r10_21
	xmm0Out = xmm0_28
	xmm1Out = xmm1_29
	xmm2Out = xmm2_30
	return rax_41
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040BB50_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040BB90(word64 rax, word64 rbp, word64 rsi, word64 rdi, word64 r8, word64 r9, word64 r10, word64 r12, word64 r13, word64 r14, word128 xmm0, word128 xmm1, word128 xmm2, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & xmm0Out, ptr64 & xmm1Out, ptr64 & xmm2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..63] r12:[0..63] r13:[0..63] r14:[0..63] r8:[0..63] r9:[0..63] rax:[0..63] rbp:[0..63] rdi:[0..63] rsi:[0..63] xmm0:[32..127] xmm1:[32..127] xmm2:[0..127]
// LiveOut: r10 r8 r9 rax xmm0 xmm1 xmm2
// Trashed: SCZOP r10 r8 r9 rax rcx rdi rdx rsi xmm0 xmm1 xmm2 xmm3
// Preserved: r12 rbp rbx rsp
fn000000000040BB90_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BB90:
	word64 rsi_27
	word64 r10_28
	word64 r9_209
	word64 rax_230 = fn000000000040ACB0(rax, 0x0000000000000001, fp - 0x0000000000000020, rdi, rbp, rsi, rdi, r9, r10, r12, r13, r14, out rsi_27, out r9_209, out r10_28)
	word32 rsi_32_32_193 = SLICE(rsi_27, word32, 32)
	branch rax_230 == 0x0000000000000000 l000000000040BD08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BD08:
	rax_230 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BBB6:
	Mem45[rdi + 0x0000000000000020:word64] = Mem12[rdi + 0x0000000000000020:word64] - 0x0000000000000001
	branch Mem45[qwLoc20:word64] == 0x0000000000000000 l000000000040BBD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BBD0:
	word128 xmm0_134
	word64 rax_48 = Mem45[rdi + 0x0000000000000018:word64]
	Mem52[rdi + 0x0000000000000018:word64] = rax_48 - 0x0000000000000001
	word32 eax_55 = SLICE(rax_48 - 0x0000000000000001, word32, 0)
	branch rax_48 < 0x0000000000000001 l000000000040BCE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BCE8:
	real32 v26_61 = (real32) (rax_48 - 0x0000000000000001 >>u 0x0000000000000001 | (uint64) (eax_55 & 0x00000001))
	xmm0_134 = DPB(xmm0, v26_61 + DPB(xmm0, v26_61, 0), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BBE5:
	xmm0_134 = DPB(xmm0, (real32) (rax_48 - 0x0000000000000001), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BBEA:
	word128 xmm1_87
	word64 rax_70 = Mem52[rdi + 0x0000000000000010:word64]
	word32 eax_76 = SLICE(rax_70, word32, 0)
	word64 rdx_71 = Mem52[rdi + 0x0000000000000028:word64]
	branch rax_70 < 0x0000000000000000 l000000000040BCC8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BCC8:
	real32 v34_82 = (real32) (rax_70 >>u 0x0000000000000001 | (uint64) (eax_76 & 0x00000001))
	xmm1_87 = DPB(xmm1, v34_82 + DPB(xmm1, v34_82, 0), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BBFB:
	xmm1_87 = DPB(xmm1, (real32) rax_70, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC00:
	real32 v22_93 = (real32) xmm1_87 * Mem52[rdx_71:real32]
	word128 xmm1_154 = DPB(xmm1, v22_93, 0)
	branch v22_93 >u xmm0_134 l000000000040BC18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC18:
	word128 xmm0_110
	word128 xmm1_111
	word128 xmm2_112
	fn000000000040ADB0(rdi + 0x0000000000000028, r8, xmm0_134, xmm1_154, xmm2, out xmm0_110, out xmm1_111, out xmm2_112)
	word64 rdx_119 = Mem52[rdi + 0x0000000000000010:word64]
	word32 edx_125 = SLICE(rdx_119, word32, 0)
	word64 rax_120 = Mem52[rdi + 0x0000000000000028:word64]
	branch rdx_119 < 0x0000000000000000 l000000000040BD2F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BD2F:
	real32 v37_131 = (real32) (rdx_119 >>u 0x0000000000000001 | (uint64) (edx_125 & 0x00000001))
	xmm0_134 = DPB(xmm0_110, v37_131 + DPB(xmm0_110, v37_131, 0), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC32:
	xmm0_134 = DPB(xmm0_110, (real32) rdx_119, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC37:
	word64 rdx_139 = Mem52[rdi + 0x0000000000000018:word64]
	word32 edx_144 = SLICE(rdx_139, word32, 0)
	branch rdx_139 < 0x0000000000000000 l000000000040BD49
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BD49:
	real32 v39_150 = (real32) (rdx_139 >>u 0x0000000000000001 | (uint64) (edx_144 & 0x00000001))
	xmm1_154 = DPB(xmm1_111, v39_150 + DPB(xmm1_111, v39_150, 0), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC44:
	xmm1_154 = DPB(xmm1_111, (real32) rdx_139, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC49:
	real32 v31_165 = Mem52[rax_120:real32] * xmm0_134
	xmm2 = DPB(xmm2_112, v31_165, 0)
	branch v31_165 <=u xmm1_154 l000000000040BC09
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC56:
	real32 v32_173 = (real32) xmm0_134 * Mem52[rax_120 + 0x0000000000000004:real32]
	word128 xmm0_174 = DPB(xmm0_110, v32_173, 0)
	branch Mem52[rax_120 + 0x0000000000000010:byte] != 0x00 l000000000040BC66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC61:
	xmm0_174 = DPB(xmm0_110, v32_173 * Mem52[rax_120 + 0x0000000000000008:real32], 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC66:
	word64 rsi_195
	branch (real32) xmm0_174 >=u Mem52[0x0000000000415F0C:real32] l000000000040BD10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BD10:
	real32 v43_184 = (real32) xmm0_174 - Mem52[0x0000000000415F0C:real32]
	xmm0_174 = DPB(xmm0_110, v43_184, 0)
	rsi_195 = SEQ(rsi_32_32_193, v43_184) ^ 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC73:
	rsi_195 = SEQ(rsi_32_32_193, (int32) xmm0_174) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC78:
	branch SLICE((uint64) SLICE(fn000000000040B710(rsi_195, rdi, xmm0_174, xmm1_154, out r8, out r9_209, out xmm0, out xmm1), word32, 0), byte, 0) != 0x00 l000000000040BBC6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC8D:
	word64 rdi_236 = Mem52[rdi + 0x0000000000000048:word64]
	branch rdi_236 != 0x0000000000000000 l000000000040BCA3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BCA3:
	word64 r12_242 = Mem52[rdi_236 + 0x0000000000000008:word64]
	free(rdi_236)
	branch r12_242 != 0x0000000000000000 l000000000040BCA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BCA0:
	rdi_236 = r12_242
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC96:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BCB1:
	Mem249[rdi + 0x0000000000000048:word64] = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC09:
	r8Out = r8
	r9Out = r9_209
	r10Out = <invalid>
	xmm0Out = xmm0_134
	xmm1Out = xmm1_154
	xmm2Out = xmm2
	return rax_230
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BBC6:
	r8Out = r8
	r9Out = r9_209
	r10Out = <invalid>
	xmm0Out = xmm0
	xmm1Out = xmm1
	xmm2Out = xmm2
	return rax_230
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040BB90_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040BD70(word64 rcx, word32 edx, word64 rsi, word64 rdi, word64 r8, selector fs, int8 Top, ptr64 & r8Out, ptr64 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx:[0..31] fs:[0..15] r8:[0..63] rcx:[0..63] rdi:[0..63] rsi:[0..63] Top:[0..7]
// LiveOut: r8 r9 rax
// Trashed: SCZO r11 r8 r9 rax rcx rdi rdx rsi
// Preserved: P r10 r12 r13 r14 r15 rbp rbx rsp Top
fn000000000040BD70_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BD70:
	word64 rcx_42 = Mem40[fs:0x00000028:word64]
	word64 rax_57 = localeconv()
	word64 r15_479 = Mem56[rax_57:word64]
	word32 eax_45 = SLICE((uint64) (SLICE((uint64) edx, word32, 0) & 0x00000020), word32, 0)
	word64 rax_64 = SEQ(SLICE(rax_57, word32, 32), strlen(r15_479))
	word32 eax_32 = SLICE((uint64) (SLICE((uint64) edx, word32, 0) & 0x00000003), word32, 0)
	byte bLocC8_1505 = SLICE(edx, byte, 0)
	word32 v22_55 = (SLICE((uint64) (0x00000000 - SLICE(cond(eax_45 - 0x00000001), bool, 1)), word32, 0) & 0xFFFFFFE8) + 0x00000400
	word64 rbp_1112 = Mem56[rax_57 + 0x0000000000000010:word64]
	word64 r11_65 = rax_64
	word64 r13_1070 = Mem56[rax_57 + 0x0000000000000008:word64]
	branch rax_64 <u 0x0000000000000011 l000000000040BE0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BE06_1:
	r11_65 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BE0A_1:
	r15_479 = 0x0000000000413990
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BE0E:
	branch (uint64) (uint32) strlen(r13_1070) <u 0x0000000000000011 l000000000040BE2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BE26_1:
	r13_1070 = 0x0000000000416919
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BE2A:
	word64 r8_1046
	word64 rdi_133
	word64 r10_124
	word64 r12_1040
	word32 ebx_1187
	word32 rax_32_32_1103
	word32 ecx_142
	word64 qwLocD0_1460 = rsi
	branch r8 >u rcx l000000000040C0E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C0E0:
	branch rcx == 0x0000000000000000 l000000000040BE59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C0E9:
	word128 rdx_rax_107 = (uint128) (uint64) r8
	word64 rax_110 = (uint64) (rdx_rax_107 /u rcx)
	branch (uint64) (rdx_rax_107 % rcx) != 0x0000000000000000 l000000000040BE59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C0FF:
	word128 rdx_rax_119 = (uint128) (uint64) rdi
	word128 rdx_rax_127 = (uint128) (uint64) ((uint64) (rdx_rax_119 % rax_110) * 0x000000000000000A)
	word64 rdx_129 = (uint64) (rdx_rax_127 % rax_110)
	r10_124 = (uint64) (rdx_rax_119 /u rax_110)
	rdi_133 = (uint64) SLICE((uint64) (rdx_rax_127 /u rax_110), word32, 0)
	bool C_136 = SLICE(cond(rax_110 - rdx_129 * 0x0000000000000002), bool, 1)
	branch rax_110 <=u rdx_129 * 0x0000000000000002 l000000000040C6E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C6E0:
	ecx_142 = SLICE((uint64) (SLICE((uint64) ~SLICE((uint64) (0x00000000 - C_136), word32, 0), word32, 0) + 0x00000003), word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C125:
	ecx_142 = (uint32) (uint8) (rdx_129 * 0x0000000000000002 != 0x0000000000000000) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BE43:
	word128 rdx_rax_151 = (uint128) (uint64) rcx
	word64 rax_154 = (uint64) (rdx_rax_151 /u r8)
	branch (uint64) (rdx_rax_151 % r8) == 0x0000000000000000 l000000000040C2F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C2F0:
	r10_124 = rax_154 *s rdi
	branch (uint64) ((uint128) (uint64) r10_124 /u rax_154) != rdi l000000000040BE59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C308:
	ecx_142 = 0x00000000 (alias)
	rdi_133 = 0x0000000000000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C12D:
	word64 r9_180 = (uint64) (SLICE((uint64) edx, word32, 0) & 0x00000010)
	word32 edi_301 = SLICE(rdi_133, word32, 0)
	r8_1046 = rsi
	ebx_1187 = 0xFFFFFFFF (alias)
	word32 r9d_181 = SLICE(r9_180, word32, 0)
	branch r9d_181 == 0x00000000 l000000000040C530
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C146:
	word64 rsi_185 = (uint64) v22_55
	word64 rdi_1396 = rdi_133
	branch r10_124 <u rsi_185 l000000000040C710
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C710:
	r8_1046 = rsi
	ebx_1187 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C153:
	ebx_1187 = 0x00000000 (alias)
	word32 r12d_1400 = SLICE((uint64) v22_55, word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C17D:
	word128 rdx_rax_202 = (uint128) (uint64) r10_124
	word64 rax_206 = (uint64) (rdx_rax_202 /u rsi_185)
	word32 rax_32_32_212 = SLICE(rax_206, word32, 32)
	word64 edx_eax_220 = (uint64) (uint32) (rdi_1396 + SEQ(rax_32_32_212, (uint64) (rdx_rax_202 % rsi_185) * 0x0000000000000005) * 0x0000000000000002)
	word32 eax_224 = (uint32) (edx_eax_220 /u r12d_1400)
	word32 edx_223 = (uint32) (edx_eax_220 % r12d_1400)
	word64 rdi_228 = (uint64) eax_224
	word32 r14d_227 = (uint64) (SLICE((uint64) ecx_142, word32, 0) >> 0x00000001) + (uint64) ((uint32) edx_223) * 0x0000000000000002
	word24 esi_24_8_283 = SLICE(rsi_185, word24, 8)
	r10_124 = rax_206
	word24 edx_24_8_281 = SLICE(edx_223, word24, 8)
	edi_301 = SLICE(rdi_228, word32, 0) (alias)
	word32 ecx_232 = SLICE((uint64) (ecx_142 + r14d_227), word32, 0)
	branch r12d_1400 >u r14d_227 l000000000040C160
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C160:
	ecx_142 = (word32) (ecx_232 != 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C1A8:
	ecx_142 = SLICE((uint64) (SLICE((uint64) ~SLICE((uint64) (0x00000000 - SLICE(cond(r12d_1400 - ecx_232), bool, 1)), word32, 0), word32, 0) + 0x00000003), word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C168:
	ebx_1187 = SLICE((uint64) (ebx_1187 + 0x00000001), word32, 0) (alias)
	branch rsi_185 >u rax_206 l000000000040C49F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C49F:
	branch rax_206 >u 0x0000000000000009 l000000000040C768
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C4A9:
	byte dl_272
	branch eax_32 == 0x00000001 l000000000040C7B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C7B0:
	dl_272 = SLICE((uint64) (SLICE((uint64) (SLICE((uint64) eax_224, word32, 0) & 0x00000001), word32, 0) + ecx_142), word32, 0) > 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C4B4:
	dl_272 = SLICE((uint64) (SEQ(edx_24_8_281, ecx_142 > 0x00000000) & SEQ(esi_24_8_283, SLICE((uint64) eax_32, word32, 0) == 0x00000000)), byte, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C4C7:
	word64 rax_300 = SEQ(rax_32_32_212, eax_224)
	branch dl_272 == 0x00 l000000000040C788
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C788:
	branch eax_224 != 0x00000000 l000000000040C4DB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C4CF:
	edi_301 = rax_300 + 0x0000000000000001
	branch rax_300 == 0x0000000000000009 l000000000040C7CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C7CE:
	r10_124 = rax_206 + 0x0000000000000001
	branch rax_206 != 0x0000000000000009 l000000000040C7FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C7FF:
	ecx_142 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C790:
	branch (bLocC8_1505 & 0x08) != 0x00 l000000000040C7C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C7C2:
	r8_1046 = rsi
	edi_301 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C797:
	edi_301 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C7D8:
	r8_1046 = rsi
	ecx_142 = 0x00000000 (alias)
	edi_301 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C4DB:
	Mem368[rsi + 0x0000000000000287:byte] = SLICE((uint64) (edi_301 + 0x00000030), byte, 0)
	r8_1046 = memcpy(rsi + 0x0000000000000287 - r11_65, r15_479, r11_65)
	r9_180 = (uint64) r9d_181
	ecx_142 = 0x00000000 (alias)
	edi_301 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C174:
	rdi_1396 = rdi_228 (alias)
	branch ebx_1187 == 0x00000008 l000000000040C768
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C768:
	r8_1046 = rsi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C530:
	byte al_420
	word32 r9d_440 = SLICE(r9_180, word32, 0)
	branch eax_32 == 0x00000001 l000000000040C6F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C6F0:
	al_420 = SLICE((uint64) (edi_301 + (word32) ((uint64) (SLICE(r10_124, word32, 0) & 0x00000001) + (int64) ecx_142 != 0x0000000000000000)), word32, 0) > 0x00000005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C53B:
	al_420 = 0x00 (alias)
	branch SLICE((uint64) eax_32, word32, 0) != 0x00000000 l000000000040C54C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C545:
	al_420 = SLICE((uint64) (ecx_142 + edi_301), word32, 0) > 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C54C:
	branch al_420 == 0x00 l000000000040C5A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C550:
	r10_124 = r10_124 + 0x0000000000000001
	branch r9d_440 == 0x00000000 l000000000040C5A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C559:
	branch (uint64) v22_55 != r10_124 l000000000040C5A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C562:
	branch ebx_1187 == 0x00000008 l000000000040C5A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C567:
	ebx_1187 = SLICE((uint64) (ebx_1187 + 0x00000001), word32, 0) (alias)
	r10_124 = 0x0000000000000001
	branch (bLocC8_1505 & 0x08) != 0x00 l000000000040C5A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C577:
	Mem468[r8_1046 - 0x0000000000000001:byte] = 0x30
	r10_124 = 0x0000000000000001
	r8_1046 = memcpy(r8_1046 - 0x0000000000000001 - r11_65, r15_479, r11_65)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C5A0:
	r9 = r9_180
	r12_1040 = r8_1046
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C5B0:
	word64 rdx_498 = SLICE(r10_124 *u 0x00000000CCCCCCCD, word64, 64)
	word64 rax_500 = (rdx_498 >>u 0x0000000000000003) + (rdx_498 >>u 0x0000000000000003) * 0x0000000000000004
	r12_1040 = r12_1040 - 0x0000000000000001
	Mem508[r12_1040:byte] = SLICE((uint64) (SLICE(r10_124 - rax_500 * 0x0000000000000002, word32, 0) + 0x00000030), byte, 0)
	rax_32_32_1103 = SLICE(rax_500 * 0x0000000000000002, word32, 32) (alias)
	r10_124 = rdx_498 >>u 0x0000000000000003
	branch rdx_498 >>u 0x0000000000000003 != 0x0000000000000000 l000000000040C5B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C5D8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BE59:
	ST521[Top - 1:real64] = (real64) rdi
	branch rdi < 0x0000000000000000 l000000000040C5F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C5F0:
	ST523[Top - 1:real64] = ST521[Top - 1:real64] + Mem513[0x0000000000415F08:real32]
	ST529[Top - 2:real64] = (real64) rcx
	branch rcx >= 0x0000000000000000 l000000000040BE7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BE6B:
	ST535[Top - 2:real64] = (real64) rcx
	branch rcx < 0x0000000000000000 l000000000040C608
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C608:
	ST540[Top - 2:real64] = ST538[Top - 2:real64] + Mem539[0x0000000000415F08:real32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BE7D:
	ST550[Top - 3:real64] = (real64) r8
	branch r8 < 0x0000000000000000 l000000000040C5E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C5E0:
	ST552[Top - 3:real64] = ST550[Top - 3:real64] + Mem545[0x0000000000415F08:real32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BE94:
	word64 r14_1026
	word64 r15_1033
	ST559[Top - 2:real64] = ST558[Top - 2:real64] / ST558[Top - 3:real64]
	ST561[Top - 1:real64] = ST559[Top - 1:real64] * ST559[Top - 2:real64]
	branch (bLocC8_1505 & 0x10) == 0x00 l000000000040C1B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C1B8:
	branch eax_32 == 0x00000001 l000000000040C1CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C1BF:
	ST567[Top - 2:real64] = (real64) Mem545[0x0000000000415F90:real80]
	branch ST567[Top - 2:real64] >u ST567[Top - 1:real64] l000000000040C408
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C408:
	word64 rax_596
	ST574[Top - 2:real64] = (real64) Mem545[0x0000000000415F0C:real32]
	real64 v67_575 = ST574[Top - 2:real64]
	ST576[Top - 2:real64] = ST574[Top - 1:real64]
	ST577[Top - 1:real64] = v67_575
	branch ST577[Top - 2:real64] >=u ST577[Top - 1:real64] l000000000040C6A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C6A0:
	word16 wLoc82_1524 = __fstcw()
	ST584[Top - 2:real64] = ST577[Top - 2:real64] - ST577[Top - 1:real64]
	real64 v68_585 = ST584[Top - 2:real64]
	ST586[Top - 2:real64] = ST584[Top - 1:real64]
	ST587[Top - 1:real64] = v68_585
	__fldcw(SLICE((word32) wLoc82_1524, word16, 0))
	word64 qwLoc80_1526 = (int64) ST587[Top - 2:real64]
	__fldcw(wLoc82_1524)
	rax_596 = qwLoc80_1526 ^ 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C418:
	ST599[Top - 1:real64] = ST577[Top - 2:real64]
	word16 wLoc82_1527 = __fstcw()
	ST610[Top - 2:real64] = ST599[Top - 2:real64]
	__fldcw(SLICE((word32) wLoc82_1527, word16, 0))
	word64 qwLoc80_1529 = (int64) ST610[Top - 2:real64]
	__fldcw(wLoc82_1527)
	rax_596 = qwLoc80_1529
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C43E:
	word64 rdx_617 = 0x0000000000000000
	branch SLICE((uint64) eax_32, word32, 0) != 0x00000000 l000000000040C470
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C470:
	ST624[Top - 1:real64] = ST623[Top - 1:real64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C448:
	ST631[Top - 2:real64] = (real64) rax_596
	branch rax_596 < 0x0000000000000000 l000000000040C772
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C772:
	ST633[Top - 2:real64] = ST631[Top - 2:real64] + Mem627[0x0000000000415F08:real32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C45A:
	ST642[Top - 1:real64] = ST637[Top - 1:real64]
	rdx_617 = 0x0000000000000001
	word64 rcx_648 = (uint64) (uint8) PARITY_EVEN(ST637[Top - 2:real64] - ST637[Top - 1:real64])
	branch ST637[Top - 2:real64] != ST637[Top - 1:real64] l000000000040C46C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C468_1:
	rdx_617 = rcx_648
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C46C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C472:
	word64 rax_655 = rax_596 + rdx_617
	ST665[Top - 1:real64] = (real64) rax_655
	branch rax_655 >= 0x0000000000000000 l000000000040C1CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C487:
	ST667[Top - 1:real64] = ST665[Top - 1:real64] + Mem659[0x0000000000415F08:real32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C1CD:
	__sprintf_chk(rsi, 0x0000000000000001, 0xFFFFFFFFFFFFFFFF, 0x0000000000415F18, 0x00000000)
	r14_1026 = 0x0000000000000000
	ebx_1187 = 0xFFFFFFFF (alias)
	r15_1033 = (uint64) (uint32) strlen(rsi)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BEA3:
	ST691[Top - 2:real64] = (real64) v22_55
	ST697[Top - 3:real64] = ST691[Top - 3:real64]
	ebx_1187 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BEB4:
	ST701[Top - 4:real64] = ST700[Top - 4:real64]
	ST704[Top - 4:real64] = ST701[Top - 4:real64] * ST701[Top - 2:real64]
	real64 v42_705 = ST704[Top - 4:real64]
	ST706[Top - 4:real64] = ST704[Top - 1:real64]
	ST707[Top - 1:real64] = v42_705
	ebx_1187 = SLICE((uint64) (ebx_1187 + 0x00000001), word32, 0) (alias)
	branch ST707[Top - 4:real64] <u ST707[Top - 1:real64] l000000000040BED0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BED0:
	ST712[Top - 2:real64] = ST707[Top - 4:real64]
	ST714[Top - 1:real64] = ST712[Top - 3:real64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BEC1:
	branch ebx_1187 != 0x00000008 l000000000040BEB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BEB0:
	ST719[Top - 3:real64] = ST707[Top - 4:real64]
	real64 v53_721 = ST719[Top - 3:real64]
	ST722[Top - 3:real64] = ST719[Top - 1:real64]
	ST723[Top - 1:real64] = v53_721
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BEC6:
	ST724[Top - 2:real64] = ST707[Top - 4:real64]
	ST726[Top - 1:real64] = ST724[Top - 3:real64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BED4:
	ST730[Top - 1:real64] = ST729[Top - 2:real64] / ST729[Top - 1:real64]
	ST738[Top - 2:real64] = ST730[Top - 2:real64]
	branch eax_32 == 0x00000001 l000000000040BF70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BF70:
	real64 v64_740 = ST738[Top - 2:real64]
	ST741[Top - 2:real64] = ST738[Top - 1:real64]
	ST742[Top - 1:real64] = v64_740
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BEE3:
	ST743[Top - 2:real64] = ST738[Top - 2:real64]
	ST746[Top - 2:real64] = (real64) Mem545[0x0000000000415F90:real80]
	branch ST746[Top - 2:real64] <=u ST746[Top - 1:real64] l000000000040C498
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C498:
	ST753[Top - 2:real64] = ST746[Top - 2:real64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BEF3:
	word64 rax_777
	ST755[Top - 2:real64] = (real64) Mem545[0x0000000000415F0C:real32]
	real64 v49_756 = ST755[Top - 2:real64]
	ST757[Top - 2:real64] = ST755[Top - 1:real64]
	ST758[Top - 1:real64] = v49_756
	branch ST758[Top - 2:real64] >=u ST758[Top - 1:real64] l000000000040C660
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C660:
	word16 wLoc82_1551 = __fstcw()
	ST765[Top - 2:real64] = ST758[Top - 2:real64] - ST758[Top - 1:real64]
	real64 v58_766 = ST765[Top - 2:real64]
	ST767[Top - 2:real64] = ST765[Top - 1:real64]
	ST768[Top - 1:real64] = v58_766
	__fldcw(SLICE((word32) wLoc82_1551, word16, 0))
	word64 qwLoc80_1553 = (int64) ST768[Top - 2:real64]
	__fldcw(wLoc82_1551)
	rax_777 = qwLoc80_1553 ^ 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BF03:
	ST780[Top - 1:real64] = ST758[Top - 2:real64]
	word16 wLoc82_1554 = __fstcw()
	ST791[Top - 2:real64] = ST780[Top - 2:real64]
	__fldcw(SLICE((word32) wLoc82_1554, word16, 0))
	word64 qwLoc80_1556 = (int64) ST791[Top - 2:real64]
	__fldcw(wLoc82_1554)
	rax_777 = qwLoc80_1556
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BF29:
	word64 rdx_798 = 0x0000000000000000
	branch SLICE((uint64) eax_32, word32, 0) != 0x00000000 l000000000040BF55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BF33:
	ST809[Top - 2:real64] = (real64) rax_777
	branch rax_777 < 0x0000000000000000 l000000000040C77D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C77D:
	ST811[Top - 2:real64] = ST809[Top - 2:real64] + Mem804[0x0000000000415F08:real32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BF45:
	rdx_798 = 0x0000000000000001
	word64 rcx_824 = (uint64) (uint8) PARITY_EVEN(ST815[Top - 2:real64] - ST815[Top - 1:real64])
	branch ST815[Top - 2:real64] != ST815[Top - 1:real64] l000000000040BF55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BF51_1:
	rdx_798 = rcx_824
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BF55:
	word64 rax_829 = rax_777 + rdx_798
	ST837[Top - 2:real64] = (real64) rax_829
	branch rax_829 < 0x0000000000000000 l000000000040C758
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C758:
	ST839[Top - 2:real64] = ST837[Top - 2:real64] + Mem832[0x0000000000415F08:real32]
	real64 v60_840 = ST839[Top - 2:real64]
	ST841[Top - 2:real64] = ST839[Top - 1:real64]
	ST842[Top - 1:real64] = v60_840
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BF6A:
	real64 v57_843 = ST837[Top - 2:real64]
	ST844[Top - 2:real64] = ST837[Top - 1:real64]
	ST845[Top - 1:real64] = v57_843
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BF72:
	real80 rLocA8_1567 = (real80) ST866[Top - 2:real64]
	__sprintf_chk(rsi, 0x0000000000000001, 0xFFFFFFFFFFFFFFFF, 0x0000000000415F1E, 0x00000000)
	word64 rax_877 = (uint64) (uint32) strlen(rsi)
	ST881[Top - 1:real64] = (real64) rLocA8_1567
	r15_1033 = rax_877
	r14_1026 = r11_65 + 0x0000000000000001
	branch rax_877 >u (r11_65 + 0x0000000000000002) + (uint64) ((uint8) (SLICE((uint64) eax_45, word32, 0) == 0x00000000)) l000000000040BFF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BFCB:
	branch (bLocC8_1505 & 0x08) == 0x00 l000000000040C208
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C208:
	ST895[Top - 1:real64] = ST881[Top - 1:real64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BFD6:
	branch Mem869[rsi - 0x0000000000000001 + rax_877:byte] != 0x30 l000000000040C210
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C210:
	ST900[Top - 1:real64] = ST881[Top - 1:real64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BFE7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BFF0:
	ST907[Top - 1:real64] = ST881[Top - 1:real64] * Mem869[0x0000000000415F84:real32]
	branch eax_32 == 0x00000001 l000000000040C0A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C001:
	ST910[Top - 2:real64] = (real64) Mem869[0x0000000000415F90:real80]
	branch ST910[Top - 2:real64] <=u ST910[Top - 1:real64] l000000000040C0A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C00F:
	word64 rax_939
	ST917[Top - 2:real64] = (real64) Mem869[0x0000000000415F0C:real32]
	real64 v61_918 = ST917[Top - 2:real64]
	ST919[Top - 2:real64] = ST917[Top - 1:real64]
	ST920[Top - 1:real64] = v61_918
	branch ST920[Top - 2:real64] >=u ST920[Top - 1:real64] l000000000040C720
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C720:
	word16 wLoc82_1591 = __fstcw()
	ST927[Top - 2:real64] = ST920[Top - 2:real64] - ST920[Top - 1:real64]
	real64 v62_928 = ST927[Top - 2:real64]
	ST929[Top - 2:real64] = ST927[Top - 1:real64]
	ST930[Top - 1:real64] = v62_928
	__fldcw(SLICE((word32) wLoc82_1591, word16, 0))
	word64 qwLoc80_1593 = (int64) ST930[Top - 2:real64]
	__fldcw(wLoc82_1591)
	rax_939 = qwLoc80_1593 ^ 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C01F:
	ST942[Top - 1:real64] = ST920[Top - 2:real64]
	word16 wLoc82_1594 = __fstcw()
	ST953[Top - 2:real64] = ST942[Top - 2:real64]
	__fldcw(SLICE((word32) wLoc82_1594, word16, 0))
	word64 qwLoc80_1596 = (int64) ST953[Top - 2:real64]
	__fldcw(wLoc82_1594)
	rax_939 = qwLoc80_1596
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C045:
	word64 rdx_960 = 0x0000000000000000
	branch SLICE((uint64) eax_32, word32, 0) != 0x00000000 l000000000040C080
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C080:
	ST967[Top - 1:real64] = ST966[Top - 1:real64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C051:
	ST974[Top - 2:real64] = (real64) rax_939
	branch rax_939 < 0x0000000000000000 l000000000040C79E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C79E:
	ST976[Top - 2:real64] = ST974[Top - 2:real64] + Mem970[0x0000000000415F08:real32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C063:
	ST985[Top - 1:real64] = ST980[Top - 1:real64]
	rdx_960 = 0x0000000000000001
	word64 rcx_991 = (uint64) (uint8) PARITY_EVEN(ST980[Top - 2:real64] - ST980[Top - 1:real64])
	branch ST980[Top - 2:real64] != ST980[Top - 1:real64] l000000000040C075
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C071_1:
	rdx_960 = rcx_991
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C075:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C082:
	word64 rax_998 = rax_939 + rdx_960
	ST1008[Top - 1:real64] = (real64) rax_998
	branch rax_998 >= 0x0000000000000000 l000000000040C0A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C093:
	ST1010[Top - 1:real64] = ST1008[Top - 1:real64] + Mem1002[0x0000000000415F08:real32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C0A0:
	ST1014[Top - 1:real64] = ST1012[Top - 1:real64] / Mem1013[0x0000000000415F84:real32]
	__sprintf_chk(rsi, 0x0000000000000001, 0xFFFFFFFFFFFFFFFF, 0x0000000000415F18, 0x00000000)
	r14_1026 = 0x0000000000000000
	r15_1033 = (uint64) (uint32) strlen(rsi)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C218:
	r12_1040 = rsi - r15_1033
	rax_32_32_1103 = SLICE(memmove(r12_1040, rsi, r15_1033), word32, 32) (alias)
	r8_1046 = r12_1040 + (r15_1033 - r14_1026)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C237:
	branch (bLocC8_1505 & 0x04) != 0x00 l000000000040C318
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C318:
	r8_1046 = r8_1046 - r12_1040
	word64 rax_1106 = SEQ(rax_32_32_1103, strlen(r13_1070))
	__memcpy_chk(fp - 0x0000000000000078, r12_1040, r8_1046, 0x0000000000000029)
	word64 r15_1096 = 0xFFFFFFFFFFFFFFFF
	word64 r14_1097 = r8_1046
	word64 r9_1109 = r12_1040 + r8_1046
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C36C:
	word32 r15_32_32_1130 = SLICE(r15_1096, word32, 32)
	byte dl_1115 = SLICE((word32) Mem1107[rbp_1112:byte], byte, 0)
	branch dl_1115 == 0x00 l000000000040C383
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C374:
	r15_1096 = SEQ(r15_32_32_1130, (word32) dl_1115) (alias)
	branch dl_1115 <=u 0x7E l000000000040C37F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C37B_1:
	r15_1096 = r14_1097
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C37F:
	rbp_1112 = rbp_1112 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C383:
	branch r15_1096 <=u r14_1097 l000000000040C38F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C38B_1:
	r15_1096 = r14_1097
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C38F:
	r14_1097 = r14_1097 - r15_1096
	word64 rax_1153 = memcpy(r9_1109 - r15_1096, fp - 0x0000000000000078 + r14_1097, r15_1096)
	r9 = rax_1153
	branch r14_1097 != 0x0000000000000000 l000000000040C358
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C358:
	r9_1109 = memcpy(rax_1153 - rax_1106, r13_1070, rax_1106)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C3AC:
	r12_1040 = rax_1153
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C242:
	byte bLocC8_1755 = SLICE(edx, byte, 0)
	branch (bLocC8_1505 & 0x80) == 0x00 l000000000040C2BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C249:
	branch ebx_1187 == 0xFFFFFFFF l000000000040C618
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C618:
	branch r8 <=u 0x0000000000000001 l000000000040C7A9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C7A9:
	ebx_1187 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C627:
	word64 r14_1214 = (uint64) v22_55
	ebx_1187 = 0x00000001 (alias)
	word64 rax_1216 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C640:
	rax_1216 = rax_1216 *s r14_1214
	branch r8 <=u rax_1216 l000000000040C252
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C64D:
	ebx_1187 = SLICE((uint64) (ebx_1187 + 0x00000001), word32, 0) (alias)
	branch ebx_1187 != 0x00000008 l000000000040C640
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C655:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C252:
	word32 eax_1238 = SLICE((uint64) (SLICE((uint64) edx, word32, 0) & 0x00000100), word32, 0)
	branch SLICE((uint64) (SLICE((uint64) ebx_1187, word32, 0) | eax_1238), word32, 0) == 0x00000000 l000000000040C2BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C261:
	branch (bLocC8_1755 & 0x40) != 0x00 l000000000040C3E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C3E8:
	Mem1249[rsi + 0x0000000000000288:byte] = 0x20
	qwLocD0_1460 = rsi + 0x0000000000000289
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C26C:
	word64 rdx_1257
	branch ebx_1187 == 0x00000000 l000000000040C7EB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C7EB:
	rdx_1257 = qwLocD0_1460
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C274:
	word64 rcx_2427
	rdx_1257 = qwLocD0_1460 + 0x0000000000000001
	branch SLICE((uint64) eax_45, word32, 0) == 0x00000000 l000000000040C3D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C3D0:
	branch ebx_1187 != 0x00000001 l000000000040C289
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C3DE:
	rcx_2427 = 0x000000000000006B (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C289:
	word64 rcx_1269 = (int64) ebx_1187
	word32 ecx_1271 = (word32) Mem1256[rcx_1269 + 0x0000000000415F78:byte]
	rcx_2427 = SEQ(SEQ(SLICE(rcx_1269, word32, 32), SLICE(ecx_1271, word24, 8)), SLICE(ecx_1271, byte, 0)) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C293:
	Mem1279[qwLocD0_1460:byte] = SLICE(rcx_2427, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C29A:
	branch eax_1238 == 0x00000000 l000000000040C7F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C7F5:
	qwLocD0_1460 = rdx_1257
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C2A2:
	branch SLICE((uint64) eax_45, word32, 0) != 0x00000000 l000000000040C3B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C3B8:
	branch ebx_1187 == 0x00000000 l000000000040C2AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C3C0:
	Mem1303[rdx_1257:byte] = 0x69
	rdx_1257 = rdx_1257 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C2AE:
	Mem1308[rdx_1257:byte] = 0x42
	qwLocD0_1460 = rdx_1257 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C2BA:
	word64 rdi_1364 = rcx_42 ^ Mem1312[fs:0x00000028:word64]
	Mem1367[qwLocD0_1460:byte] = 0x00
	branch rdi_1364 != 0x0000000000000000 l000000000040C7E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C7E6:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C2DC:
	r8Out = r8_1046
	r9Out = r9
	return r12_1040
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040BD70_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn000000000040C810(word32 rax_32_32, word64 rdx, word64 rsi, word64 rdi, word64 r8, word64 r9, word64 r14, word64 r15, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r14Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14:[0..63] r15:[0..63] r8:[0..63] r9:[32..63] rax_32_32:[0..31] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r14 r15 r8 r9 rax
// Trashed: SCZO r14 r15 r8 r9 rax rcx rdi rdx rsi
// Preserved: r12 r13 rbp rbx rsp
fn000000000040C810_entry:
	word32 r9_32_32 = SLICE(r9, word32, 32)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C810:
	word64 rdx_128
	word32 ebp_154
	word64 r9_110
	word64 rax_111
	word64 r13_106 = rsi
	word64 r12_105 = rdx
	word64 rbx_20 = rdi
	branch rdi == 0x0000000000000000 l000000000040C910
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C910:
	word64 rax_26 = getenv(0x00000000004138E4)
	rax_32_32 = SLICE(rax_26, word32, 32) (alias)
	rbx_20 = rax_26
	branch rax_26 != 0x0000000000000000 l000000000040C82C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C926:
	word64 rax_32 = getenv(0x0000000000415F24)
	rax_32_32 = SLICE(rax_32, word32, 32) (alias)
	rbx_20 = rax_32
	r9_110 = r9 (alias)
	branch rax_32 != 0x0000000000000000 l000000000040C82C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C93C:
	word64 rdx_44 = (uint64) (SLICE(0x0000000000000000 - (getenv(0x0000000000415F2E) <u 0x0000000000000001), word32, 0) & 0x00000200)
	Mem47[rdx:word64] = rdx_44 + 512
	ebp_154 = 0x00000000 (alias)
	rdx_128 = rdx_44 + 512
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C82C:
	word64 rbp_101 = 0x0000000000000000
	branch Mem18[rbx_20:byte] == 0x27 l000000000040C8A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C8A0:
	rbx_20 = rbx_20 + 0x0000000000000001
	rbp_101 = 0x0000000000000004 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C833:
	word32 ecx_66
	word64 rax_67 = fn0000000000409E50(rax_32_32, 0x0000000000000004, 0x0000000000415F50, 0x0000000000415F60, rbx_20, out ecx_66)
	word32 ebp_182 = SLICE(rbp_101, word32, 0)
	byte al_178 = SLICE(rax_67, byte, 0)
	word48 rax_48_16_183 = SLICE(rax_67, word48, 16)
	r9_110 = r9 (alias)
	branch SLICE(rax_67, word32, 0) < 0x00000000 l000000000040C8B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C8B0:
	word64 rbp_112 = <invalid>
	ebp_154 = SLICE(rbp_112, word32, 0) (alias)
	word64 rsp_118
	word32 ebp_351
	word64 rbx_113
	rax_111 = (uint64) (uint32) fn0000000000411360(rdx, 0x00000000, rbx_20, rbp_101, fp - 0x0000000000000030, rbx_20, 0x0000000000415F3E, r9_32_32, rdx, rsi, r14, r15, out rbx_113, out rsp_118, out ebp_351, out r8, out r9_110, out r12_105, out r13_106, out r14, out r15)
	byte bpl_159 = SLICE(ebp_154, byte, 0)
	word24 ebp_24_8_164 = SLICE(ebp_154, word24, 8)
	branch SLICE(rax_111, word32, 0) != 0x00000000 l000000000040C968
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C968:
	Mem127[r13_106:word32] = 0x00000000
	rdx_128 = Mem127[r12_105:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C8D0:
	branch SLICE((uint64) ((word32) Mem18[rbx_113:byte] - 0x00000030), byte, 0) <=u 0x09 l000000000040C907
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C8DA:
	word64 rdx_135 = Mem18[rsp_118 + 0x0000000000000008:word64]
	branch rbx_113 != rdx_135 l000000000040C8F9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C8F9:
	rbx_113 = rbx_113 + 0x0000000000000001
	branch SLICE((uint64) ((word32) Mem18[rbx_113:byte] - 0x00000030), byte, 0) >u 0x09 l000000000040C8F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C8F0:
	branch rbx_113 == rdx_135 l000000000040C980
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C8E4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C980:
	branch Mem18[rdx_135 - 0x0000000000000001:byte] == 0x42 l000000000040C998
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C998:
	ebp_154 = SLICE((uint64) (ebp_154 | 0x00000180), word32, 0) (alias)
	branch Mem18[rdx_135 - 0x0000000000000002:byte] != 0x69 l000000000040C907
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C9A8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C986:
	ebp_154 = SEQ(ebp_24_8_164, bpl_159 | 0x80) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C98A:
	ebp_154 = SLICE((uint64) (ebp_154 | 0x00000020), word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C907:
	rdx_128 = Mem18[r12_105:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C84E:
	Mem180[rdx:word64] = 0x0000000000000001
	rdx_128 = 0x0000000000000001
	ebp_154 = SLICE((uint64) (ebp_182 | Mem180[SEQ(rax_48_16_183, (int16) al_178) * 0x0000000000000004 + 0x00415F50:word32]), word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C864:
	Mem197[r13_106:word32] = ebp_154
	rax_111 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C86A:
	branch rdx_128 != 0x0000000000000000 l000000000040C894
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C86F:
	Mem227[r12_105:word64] = (uint64) (SLICE(0x0000000000000000 - (getenv(0x0000000000415F2E) <u 0x0000000000000001), word32, 0) & 0x00000200)
	r8 = r8 + 512
	rax_111 = 0x0000000000000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C894:
	r8Out = r8
	r9Out = r9_110
	r14Out = r14
	r15Out = r15
	return (word32) rax_111
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040C810_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040C9B0(word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..31]
// LiveOut: rax
// Trashed: SCZO rax rdi rdx rsi
// Preserved: r12 rbp rbx rsp
fn000000000040C9B0_entry:
	word32 edi = SLICE(rdi, word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C9B0:
	word32 ebp_28 = SLICE((uint64) edi, word32, 0)
	word64 rbx_14 = Mem13[0x000000000061B1F8:word64]
	branch rbx_14 != 0x0000000000000000 l000000000040C9D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C9D1:
	branch Mem13[rbx_14:word32] != ebp_28 l000000000040C9C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C9C8:
	rbx_14 = Mem13[rbx_14 + 0x0000000000000008:word64]
	branch rbx_14 == 0x0000000000000000 l000000000040C9F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C9C2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C9F0:
	word64 rax_31 = getpwuid((uint64) ebp_28)
	word64 r12_30 = 0x0000000000416919
	word32 rax_32_32_40 = SLICE(rax_31, word32, 32)
	word64 rdi_34 = 0x0000000000000011
	branch rax_31 == 0x0000000000000000 l000000000040CA16
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CA07:
	r12_30 = Mem13[rax_31:word64]
	rdi_34 = SEQ(rax_32_32_40, strlen(r12_30)) + 0x0000000000000011
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CA16:
	word64 rax_44 = fn0000000000410C40(rdi_34)
	Mem51[rax_44:word32] = ebp_28
	strcpy(rax_44 + 0x0000000000000010, r12_30)
	word64 rax_56 = Mem51[0x000000000061B1F8:word64]
	Mem57[0x000000000061B1F8:word64] = rax_44
	Mem58[rax_44 + 0x0000000000000008:word64] = rax_56
	rbx_14 = rax_44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C9D5:
	word64 rax_59 = 0x0000000000000000
	word64 rdx_63 = rbx_14 + 0x0000000000000010
	branch Mem61[rbx_14 + 0x0000000000000010:byte] == 0x00 l000000000040C9E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C9E3_1:
	rax_59 = rdx_63
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C9E7:
	return rax_59
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040C9B0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040CB40(word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..31]
// LiveOut: rax
// Trashed: SCZO rax rdi rdx rsi
// Preserved: r12 rbp rbx rsp
fn000000000040CB40_entry:
	word32 edi = SLICE(rdi, word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CB40:
	word32 ebp_28 = SLICE((uint64) edi, word32, 0)
	word64 rbx_14 = Mem13[0x000000000061B1E8:word64]
	branch rbx_14 != 0x0000000000000000 l000000000040CB61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CB61:
	branch Mem13[rbx_14:word32] != ebp_28 l000000000040CB58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CB58:
	rbx_14 = Mem13[rbx_14 + 0x0000000000000008:word64]
	branch rbx_14 == 0x0000000000000000 l000000000040CB80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CB52:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CB80:
	word64 rax_31 = getgrgid((uint64) ebp_28)
	word64 r12_30 = 0x0000000000416919
	word32 rax_32_32_40 = SLICE(rax_31, word32, 32)
	word64 rdi_34 = 0x0000000000000011
	branch rax_31 == 0x0000000000000000 l000000000040CBA6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CB97:
	r12_30 = Mem13[rax_31:word64]
	rdi_34 = SEQ(rax_32_32_40, strlen(r12_30)) + 0x0000000000000011
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CBA6:
	word64 rax_44 = fn0000000000410C40(rdi_34)
	Mem51[rax_44:word32] = ebp_28
	strcpy(rax_44 + 0x0000000000000010, r12_30)
	word64 rax_56 = Mem51[0x000000000061B1E8:word64]
	Mem57[0x000000000061B1E8:word64] = rax_44
	Mem58[rax_44 + 0x0000000000000008:word64] = rax_56
	rbx_14 = rax_44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CB65:
	word64 rax_59 = 0x0000000000000000
	word64 rdx_63 = rbx_14 + 0x0000000000000010
	branch Mem61[rbx_14 + 0x0000000000000010:byte] == 0x00 l000000000040CB77
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CB73_1:
	rax_59 = rdx_63
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CB77:
	return rax_59
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040CB40_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040CCD0(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO r8 rax rcx rdi rdx rsi
// Preserved: rsp
fn000000000040CCD0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CCD0:
	Mem8[rsi + 0x0000000000000014:byte] = 0x00
	word64 rcx_15 = rsi + 0x0000000000000014
	branch rdi < 0x0000000000000000 l000000000040CD28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CD28:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CD30:
	word64 rdx_23 = (SLICE(rdi *s 0x0000000066666667, word64, 64) >> 0x0000000000000002) - (rdi >> 0x000000000000003F)
	rcx_15 = rcx_15 - 0x0000000000000001
	Mem33[rcx_15:byte] = SLICE((uint64) (rdx_23 * 0x000000000000000A + 0x0000000000000030 - SLICE(rdi, word32, 0)), byte, 0)
	rdi = rdx_23
	branch rdx_23 != 0x0000000000000000 l000000000040CD30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CD5B:
	Mem38[rcx_15 - 0x0000000000000001:byte] = 0x2D
	return rcx_15 - 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CCE7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CCF0:
	word64 rdx_50 = (SLICE(rdi *s 0x0000000066666667, word64, 64) >> 0x0000000000000002) - (rdi >> 0x000000000000003F)
	rcx_15 = rcx_15 - 0x0000000000000001
	Mem59[rcx_15:byte] = SLICE((uint64) (SLICE(rdi - rdx_50 * 0x000000000000000A, word32, 0) + 0x00000030), byte, 0)
	rdi = rdx_50
	branch rdx_50 != 0x0000000000000000 l000000000040CCF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CD20:
	return rcx_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040CCD0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040CD70(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rsp
fn000000000040CD70_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CD70:
	Mem5[rsi + 0x0000000000000014:byte] = 0x00
	word64 rcx_10 = rsi + 0x0000000000000014
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CD88:
	word64 rdx_13 = SLICE(rdi *u 0x00000000CCCCCCCD, word64, 64)
	rcx_10 = rcx_10 - 0x0000000000000001
	Mem23[rcx_10:byte] = SLICE((uint64) (SLICE(rdi - ((rdx_13 >>u 0x0000000000000003) + (rdx_13 >>u 0x0000000000000003) * 0x0000000000000004) * 0x0000000000000002, word32, 0) + 0x00000030), byte, 0)
	rdi = rdx_13 >>u 0x0000000000000003
	branch rdx_13 >>u 0x0000000000000003 != 0x0000000000000000 l000000000040CD88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CDAE:
	return rcx_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040CD70_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040CDC0(word32 rax_32_32, word64 rcx, word64 rdx, word64 rsi, word64 rdi, word32 r8d, word32 r9d)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8d:[0..31] r9d:[0..31] rax_32_32:[0..31] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040CDC0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CDC0:
	word64 rbp_126
	word64 r12_311
	word64 rcx_283
	word64 qwLoc58_556
	word32 eax_291
	word64 rax_122
	word64 r15_116
	word64 rbx_26 = (uint64) r9d
	word64 rax_39 = SEQ(rax_32_32, strlen(rdi))
	word64 r13_13 = rsi
	byte bl_35 = SLICE(rbx_26, byte, 0)
	word64 qwLoc60_552 = rdi
	word64 r14_233 = rax_39
	branch (bl_35 & 0x02) == 0x00 l000000000040CF60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CF60:
	branch SEQ(rax_32_32, __ctype_get_mb_cur_max()) <=u 0x0000000000000001 l000000000040CDFA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CF6F:
	word64 rax_51 = SEQ(rax_32_32, mbstowcs(0x0000000000000000, rdi, 0x0000000000000000))
	branch rax_51 != 0xFFFFFFFFFFFFFFFF l000000000040CFA8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CFA8:
	word64 r15_55 = (rax_51 + 0x0000000000000001) * 0x0000000000000004
	word64 rax_58 = malloc(r15_55)
	word32 rax_32_32_75 = SLICE(rax_58, word32, 32)
	qwLoc58_556 = rax_58
	branch rax_58 == 0x0000000000000000 l000000000040D160
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D160:
	branch (bl_35 & 0x01) == 0x00 l000000000040CF8C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D169:
	r15_116 = rax_39
	rbp_126 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CFCF:
	branch SEQ(rax_32_32_75, mbstowcs(rax_58, rdi, rax_51 + 0x0000000000000001)) == 0x0000000000000000 l000000000040CE03
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CFEC:
	word64 qwLoc48_565
	Mem81[rax_58 - 0x0000000000000004 + r15_55:word32] = 0x00000000
	word64 rdi_106 = (uint64) Mem81[rax_58:word32]
	word32 rax_32_32_142 = SLICE(rax_58, word32, 32)
	branch SLICE(rdi_106, word32, 0) == 0x00000000 l000000000040D106
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D106:
	r15_116 = (int64) wcswidth(rax_58, rax_51 + 0x0000000000000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D004:
	word64 r15_103 = rax_58
	byte bLoc39_557 = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D010:
	branch iswprint(rdi_106) != 0x00000000 l000000000040D025
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D019:
	Mem99[r15_103:word32] = 0x0000FFFD
	bLoc39_557 = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D025:
	r15_103 = r15_103 + 0x0000000000000004
	rdi_106 = (uint64) Mem104[r15_103:word32]
	branch SLICE(rdi_106, word32, 0) != 0x00000000 l000000000040D010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D030:
	r15_116 = (int64) wcswidth(rax_58, rax_51 + 0x0000000000000001)
	branch bLoc39_557 == 0x00 l000000000040D118
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D118:
	rax_122 = Mem121[rcx:word64]
	branch r15_116 <=u rax_122 l000000000040CF28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CF28:
	rbp_126 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D125:
	qwLoc48_565 = rax_39 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D04D:
	qwLoc48_565 = SEQ(rax_32_32_142, wcstombs(0x0000000000000000, rax_58, 0x0000000000000000)) + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D064:
	word64 rax_150 = malloc(qwLoc48_565)
	rbp_126 = rax_150
	branch rax_150 == 0x0000000000000000 l000000000040D138
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D138:
	branch (bl_35 & 0x01) != 0x00 l000000000040CE08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D141:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D07A:
	word64 r14_172
	word64 rdi_167 = (uint64) Mem165[rax_58:word32]
	word64 rax_164 = Mem148[rcx:word64]
	word32 rax_32_32_188 = SLICE(rax_58, word32, 32)
	rax_32_32_188 = SLICE(rax_58, word32, 32) (alias)
	branch SLICE(rdi_167, word32, 0) == 0x00000000 l000000000040D173
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D173:
	r14_172 = rax_58
	r15_116 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D092:
	r14_172 = rax_58
	r15_116 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D0BA:
	word64 rax_193
	word32 eax_183 = wcwidth(rdi_167)
	byte al_186 = SLICE(eax_183, byte, 0)
	word48 rax_48_16_190 = SEQ(rax_32_32_188, SLICE(eax_183, word16, 16))
	branch eax_183 != 0xFFFFFFFF l000000000040D0A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D0A0:
	rax_193 = SEQ(rax_48_16_190, (int16) al_186) + r15_116
	rax_32_32_188 = SLICE(rax_193, word32, 32) (alias)
	branch rax_164 <u rax_193 l000000000040D0E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D0C4:
	Mem200[r14_172:word32] = 0x0000FFFD
	rax_193 = r15_116 + 0x0000000000000001
	rax_32_32_188 = SLICE(rax_193, word32, 32) (alias)
	branch rax_164 >=u rax_193 l000000000040D0AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D0AC:
	r14_172 = r14_172 + 0x0000000000000004
	rdi_167 = (uint64) Mem206[r14_172:word32]
	rax_32_32_188 = SLICE(rax_193, word32, 32) (alias)
	r15_116 = rax_193
	branch SLICE(rdi_167, word32, 0) == 0x00000000 l000000000040D0E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D0DA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D0E0:
	Mem224[r14_172:word32] = 0x00000000
	qwLoc60_552 = rax_150
	r14_233 = SEQ(rax_32_32_188, wcstombs(rax_150, rax_58, qwLoc48_565))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CF83:
	branch (bl_35 & 0x01) != 0x00 l000000000040D14D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D14D:
	r15_116 = rax_39
	qwLoc58_556 = 0x0000000000000000
	rbp_126 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CF8C:
	qwLoc58_556 = 0x0000000000000000
	rbp_126 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CDFA:
	qwLoc58_556 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE03:
	r15_116 = rax_39
	rbp_126 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE08:
	rax_122 = Mem265[rcx:word64]
	branch r15_116 <=u rax_122 l000000000040CF2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CF2A:
	branch r15_116 >=u rax_122 l000000000040D180
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D180:
	rax_122 = r15_116
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CF33:
	Mem286[rcx:word64] = r15_116
	rcx_283 = rax_122 - r15_116
	eax_291 = SLICE((uint64) r8d, word32, 0) (alias)
	branch eax_291 != 0x00000000 l000000000040CE2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE15:
	r14_233 = rax_122
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE1A:
	Mem302[rcx:word64] = rax_122
	rcx_283 = 0x0000000000000000
	eax_291 = SLICE((uint64) r8d, word32, 0) (alias)
	branch eax_291 == 0x00000000 l000000000040CF4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CF4C:
	r12_311 = rcx_283
	rcx_283 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE2A:
	word32 ecx_322 = SLICE(rcx_283, word32, 0)
	r12_311 = 0x0000000000000000
	branch eax_291 == 0x00000001 l000000000040CE3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE32:
	r12_311 = rcx_283 >>u 0x0000000000000001
	rcx_283 = (uint64) (ecx_322 & 0x00000001) + r12_311
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE3E:
	word32 ebx_360 = SLICE(rbx_26, word32, 0)
	branch (bl_35 & 0x04) == 0x00 l000000000040CE47
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE43_1:
	rcx_283 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE47:
	branch SLICE((uint64) (ebx_360 & 0x00000008), word32, 0) == 0x00000000 l000000000040CE4E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE4A_1:
	r12_311 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE4E:
	branch rdx == 0x0000000000000000 l000000000040CEF9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE5A:
	word64 rdx_386 = rcx_283 - 0x0000000000000001
	word64 rbx_404 = rsi - 0x0000000000000001 + rdx
	branch rcx_283 == 0x0000000000000000 l000000000040CE97
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE6D:
	branch rsi >=u rbx_404 l000000000040CE97
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE72:
	word64 rax_408 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE89:
	r13_13 = r13_13 + 0x0000000000000001
	Mem417[r13_13 - 0x0000000000000001:byte] = 0x20
	branch rdx_386 != rax_408 l000000000040CE80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE80:
	rax_408 = rax_408 + 0x0000000000000001
	branch r13_13 == rbx_404 l000000000040CE97
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE97:
	Mem430[r13_13:byte] = 0x00
	word64 rdx_431 = rbx_404 - r13_13
	branch rdx_431 <=u r14_233 l000000000040CEB6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CEB2_1:
	rdx_431 = r14_233
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CEB6:
	word64 rax_458 = mempcpy(r13_13, qwLoc60_552, rdx_431)
	word64 rdx_467 = rax_458
	word64 rsi_468 = r12_311 - 0x0000000000000001
	branch r12_311 == 0x0000000000000000 l000000000040CEF6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CECD:
	branch rbx_404 <=u rax_458 l000000000040CEF6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CED2:
	word64 rax_476 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CEE9:
	rdx_467 = rdx_467 + 0x0000000000000001
	Mem485[rdx_467 - 0x0000000000000001:byte] = 0x20
	branch rsi_468 != rax_476 l000000000040CEE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CEE0:
	rax_476 = rax_476 + 0x0000000000000001
	branch rdx_467 == rbx_404 l000000000040CEF6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CEF6:
	Mem492[rdx_467:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CEF9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CEFF:
	free(qwLoc58_556)
	free(rbp_126)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040CDC0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040D240(word32 edx, word64 rsi, word64 rdi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] rdi:[0..63] rdx:[0..31] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rcx rdi rsp
fn000000000040D240_entry:
	word32 edx = SLICE(rdx, word32, 0)
	word32 rdx_32_32 = SLICE(rdx, word32, 32)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D240:
	word64 rax_186
	word64 rax_29 = Mem26[fs:0x00000028:word64]
	word32 r15d_40 = SLICE((uint64) edx, word32, 0)
	word64 r13_16 = rdi + rsi
	word64 rbp_129 = rdi
	word32 rax_32_32_133 = 0x00000000
	branch (uint64) (uint32) __ctype_get_mb_cur_max() <=u 0x0000000000000001 l000000000040D370
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D370:
	branch rdi >=u r13_16 l000000000040D406
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D379:
	word64 rcx_42 = Mem30[__ctype_b_loc():word64]
	word32 esi_46 = SLICE((uint64) (SLICE((uint64) r15d_40, word32, 0) & 0x00000002), word32, 0)
	word64 rax_488 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D398:
	rbp_129 = rbp_129 + 0x0000000000000001
	word32 edx_56 = (word32) Mem30[rcx_42 + SEQ(rdx_32_32, (word32) Mem30[rbp_129 - 0x0000000000000001:byte]) * 0x0000000000000002:word16]
	word32 eax_71 = SLICE(rax_488, word32, 0)
	word64 rdx_486 = SEQ(rdx_32_32, edx_56)
	branch (SLICE(edx_56, byte, 8) & 0x40) != 0x00 l000000000040D3B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D3A9:
	branch esi_46 != 0x00000000 l000000000040D369
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D3AD:
	rdx_486 = (uint64) (edx_56 & 0x00000002)
	branch SLICE(rdx_486, word32, 0) != 0x00000000 l000000000040D393
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D3B2:
	branch eax_71 != 0x7FFFFFFF l000000000040D390
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D390:
	rax_488 = (uint64) (eax_71 + 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D393:
	rdx_32_32 = SLICE(rdx_486, word32, 32) (alias)
	rax_186 = rax_488 (alias)
	branch rbp_129 == r13_16 l000000000040D3C5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D3B9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D277:
	branch rdi >=u r13_16 l000000000040D406
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D406:
	rax_186 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D280:
	word32 r12d_144 = 0x00000000
	word32 r15d_303 = SLICE((uint64) (r15d_40 & 0x00000001), word32, 0)
	word32 r14d_95 = SLICE((uint64) (SLICE((uint64) r15d_40, word32, 0) & 0x00000002), word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D2AC:
	word32 eax_100 = (word32) Mem99[rbp_129:byte]
	byte al_101 = SLICE(eax_100, byte, 0)
	branch al_101 <= 0x3F l000000000040D290
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D290:
	branch al_101 >= 0x25 l000000000040D29B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D294:
	word64 rax_108 = (uint64) (eax_100 - 0x00000020)
	rax_32_32_133 = SLICE(rax_108, word32, 32) (alias)
	branch SLICE(rax_108, byte, 0) >u 0x03 l000000000040D2C3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D2B4:
	branch al_101 < 0x41 l000000000040D2C3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D2B8:
	branch al_101 <= 0x5F l000000000040D29B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D2BC:
	word64 rax_117 = (uint64) (eax_100 - 0x00000061)
	rax_32_32_133 = SLICE(rax_117, word32, 32) (alias)
	branch SLICE(rax_117, byte, 0) <=u 0x1D l000000000040D29B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D2C3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D2F4:
	word64 rax_134 = SEQ(rax_32_32_133, mbrtowc(fp - 0x000000000000004C, rbp_129, r13_16 - rbp_129, fp - 0x0000000000000048))
	word64 rbx_136 = rax_134
	branch rax_134 == 0xFFFFFFFFFFFFFFFF l000000000040D360
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D360:
	branch r15d_303 == 0x00000000 l000000000040D29B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D29B:
	rbp_129 = rbp_129 + 0x0000000000000001
	r12d_144 = SLICE((uint64) (r12d_144 + 0x00000001), word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D315:
	branch rax_134 == 0xFFFFFFFFFFFFFFFE l000000000040D3E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D3E8:
	branch r15d_303 != 0x00000000 l000000000040D369
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D3F1:
	rbp_129 = r13_16
	r12d_144 = SLICE((uint64) (r12d_144 + 0x00000001), word32, 0) (alias)
	branch true l000000000040D2AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D31F:
	word64 rdi_160 = (uint64) dwLoc4C
	branch rax_134 != 0x0000000000000000 l000000000040D32F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D32B_1:
	rbx_136 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D32F:
	rax_32_32_133 = 0x00000000
	word32 eax_167 = wcwidth(rdi_160)
	branch eax_167 >= 0x00000000 l000000000040D2D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D2D0:
	branch eax_167 > SLICE((uint64) (0x7FFFFFFF - r12d_144), word32, 0) l000000000040D3C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D2E0:
	r12d_144 = SLICE((uint64) (r12d_144 + eax_167), word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D338:
	branch r14d_95 != 0x00000000 l000000000040D369
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D369:
	rax_186 = 0x00000000FFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D33D:
	branch iswcntrl((uint64) dwLoc4C) != 0x00000000 l000000000040D2E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D34A:
	branch r12d_144 == 0x7FFFFFFF l000000000040D3C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D3C0:
	rax_186 = 0x000000007FFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D353:
	r12d_144 = SLICE((uint64) (r12d_144 + 0x00000001), word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D2E3:
	rbp_129 = rbp_129 + rbx_136
	branch mbsinit(fp - 0x0000000000000048) != 0x00000000 l000000000040D2A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D2A3:
	branch r13_16 <=u rbp_129 l000000000040D401
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D401:
	rax_186 = (uint64) r12d_144
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D3C5:
	branch (rax_29 ^ Mem234[fs:0x00000028:word64]) != 0x0000000000000000 l000000000040D40A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D40A:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D3D5:
	return rax_186
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040D240_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040D420(word32 rax_32_32, word32 esi, word64 rdi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  esi:[0..31] fs:[0..15] rax_32_32:[0..31] rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdx rsi
// Preserved: rbp rbx rdi rsp
fn000000000040D420_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D420:
	word64 rdx_19 = (uint64) SLICE((uint64) esi, word32, 0)
	word64 rax_25 = SEQ(rax_32_32, strlen(rdi))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D43E_thunk_fn000000000040D240:
	return fn000000000040D240(rdx_19, rax_25, rdi, fs)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040D420_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040D450(word64 rax, word64 rcx, word64 rdx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r12, word64 r13, word64 r14, word64 r15, ptr64 & rcxOut, ptr64 & rdxOut, ptr64 & rsiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] rax:[0..63] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: rax rcx rdx rsi
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040D450_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D450:
	word64 qwLoc30_289 = rbx
	branch rsi >u 0x0000000000000002 l000000000040D490
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D490:
	word64 r12_138
	word64 rax_38 = rdi + (rsi >>u 0x0000000000000001) * 0x0000000000000008
	word64 rsi_426
	fn000000000040D450(rax_38, rcx, rdx, rdi, rcx, rsi - (rsi >>u 0x0000000000000001), rax_38, r12, r13, r14, rsi >>u 0x0000000000000001, out rcx, out rdx, out rsi_426)
	word64 qwLoc40_293 = rax_38
	branch rsi >>u 0x0000000000000001 == 0x0000000000000001 l000000000040D570
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D570:
	r12_138 = Mem42[rdi:word64]
	Mem54[qwLoc48:word64] = r12_138
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D4C5:
	word64 r13_61 = rdi + (rsi >>u 0x0000000000000003) * 0x0000000000000008
	word64 rsi_430
	word64 rsi_429
	word64 rdx_428
	word64 rcx_427
	word64 rdx_102
	word64 rax_104 = fn000000000040D450(fn000000000040D450(rsi >>u 0x0000000000000003, rcx, qwLoc48, rdi, rcx, qwLoc58 - (rsi >>u 0x0000000000000003), r13_61, r12, r13_61, rsi >>u 0x0000000000000003, qwLoc48, out rcx_427, out rdx_428, out rsi_429), rcx, qwLoc48, rdi, rcx, rsi >>u 0x0000000000000003, rdi, r12, r13_61, rsi >>u 0x0000000000000003, qwLoc48 + 0x0000000000000008, out rcx, out rdx_102, out rsi_430)
	word64 r14_110 = rsi >>u 0x0000000000000003
	word64 r15_208 = qwLoc48 + 0x0000000000000008
	word64 r12_206 = Mem65[rdi:word64]
	word64 r13_115 = Mem65[r13_61:word64]
	qwLoc40_293 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D53B:
	call rcx (retsize: 8;)
		uses: rax:rax_104,rcx:rcx_97,rdi:r12_91,rdx:rdx_102,rsi:r13_89,Stack +0000:qwLoc58,Stack +0008:rdx,Stack +0010:qwLoc48,Stack +0018:qwLoc40_307,Stack +0020:qwLoc38,Stack +0028:rbx,Stack +0030:rbp,Stack +0038:r12,Stack +0040:r13,Stack +0048:r14,Stack +0050:r15,Stack +FFFFFFF0:rsi,Stack +FFFFFFF8:rsi >>u 0x0000000000000001
		defs: rax:rax_105,rcx:rcx_98,rdx:rdx_103
	branch SLICE(rax_104, word32, 0) > 0x00000000 l000000000040D520
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D520:
	Mem113[r15_208 - 0x0000000000000008:word64] = r13_115
	r14_110 = r14_110 + 0x0000000000000001
	branch qwLoc48 == r14_110 l000000000040D634
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D533:
	r13_115 = Mem113[rdi + r14_110 * 0x0000000000000008:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D547:
	word64 v21_116 = qwLoc40_293 + 0x0000000000000001
	Mem118[r15_208 - 0x0000000000000008:word64] = r12_206
	qwLoc40_293 = v21_116
	rax_104 = v21_116
	branch rbx == v21_116 l000000000040D625
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D625:
	qwLoc40_293 = r14_110
	qwLoc30_289 = qwLoc48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D634:
	word64 rdx_131 = qwLoc30_289 - qwLoc40_293
	memcpy(r15_208, rdi + qwLoc40_293 * 0x0000000000000008, rdx_131 << 0x0000000000000003)
	rdx = rdx_131 << 0x0000000000000003
	r12_138 = Mem126[qwLoc38:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D57B:
	rax = qwLoc40_293
	word64 r14_142 = rsi >>u 0x0000000000000001
	word64 r15_143 = 0x0000000000000001
	word64 r13_145 = Mem144[qwLoc40_293:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D5B7:
	call rcx (retsize: 8;)
		uses: rax:rax_161,rcx:rcx_154,rdi:r12_148,rdx:rdx_159,rsi:r13_146,Stack +0000:r15,Stack +0008:rsi,Stack +0010:rsi >>u 0x0000000000000001,Stack +0018:qwLoc58,Stack +0020:rdx,Stack +0028:qwLoc48,Stack +0030:qwLoc40_373,Stack +0038:qwLoc38,Stack +0040:qwLoc30_362,Stack +0048:rbp,Stack +0050:r12,Stack +0058:r13,Stack +0060:r14,Stack +0068:r15,Stack +FFFFFFA0:rsi,Stack +FFFFFFA8:rsi >>u 0x0000000000000001,Stack +FFFFFFB0:qwLoc58,Stack +FFFFFFB8:rdx,Stack +FFFFFFC0:qwLoc48,Stack +FFFFFFC8:qwLoc40_373,Stack +FFFFFFD0:qwLoc38,Stack +FFFFFFD8:qwLoc30_362,Stack +FFFFFFE0:rbp,Stack +FFFFFFE8:r12,Stack +FFFFFFF0:r13,Stack +FFFFFFF8:r14
		defs: rax:rax_162,rcx:rcx_155,rdx:rdx_160,rsi:rsi_158
	branch SLICE(rax, word32, 0) > 0x00000000 l000000000040D5A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D5A0:
	Mem170[rdi - 0x0000000000000008 + r15_143 * 0x0000000000000008:word64] = r13_145
	r14_142 = r14_142 + 0x0000000000000001
	branch rsi == r14_142 l000000000040D5F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D5F0:
	word64 r15_185 = (rsi >>u 0x0000000000000001) - qwLoc58
	word64 rsi_187 = rdx + qwLoc58 * 0x0000000000000008
	word64 rax_193 = memcpy(rdi + r15_143 * 0x0000000000000008, rsi_187, r15_185 * 0x0000000000000008)
	rcxOut = rdx
	rdxOut = r15_185 * 0x0000000000000008
	rsiOut = rsi_187
	return rax_193
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D5AF:
	r13_145 = Mem170[rdi + r14_142 * 0x0000000000000008:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D5C3:
	Mem197[rdi - 0x0000000000000008 + r15_143 * 0x0000000000000008:word64] = r12_138
	rax = qwLoc58 + 0x0000000000000001
	branch rsi >>u 0x0000000000000001 == qwLoc58 + 0x0000000000000001 l000000000040D479
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D5DE:
	rcx = rdx
	r12_138 = Mem197[rdx + (qwLoc58 + 0x0000000000000001) * 0x0000000000000008:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D5B3:
	r15_143 = r15_143 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D561:
	r12_206 = Mem118[rdi + v21_116 * 0x0000000000000008:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D537:
	r15_208 = r15_208 + 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D473:
	branch rsi == 0x0000000000000002 l000000000040D660
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D660:
	word64 r13_211 = Mem30[rdi + 0x0000000000000008:word64]
	word64 r12_212 = Mem30[rdi:word64]
	call rcx (retsize: 8;)
		uses: rax:rax,rcx:rcx,rdi:r12_212,rdx:rdx,rsi:r13_211,Stack +0008:rsi,Stack +0010:qwLoc60,Stack +0018:qwLoc58,Stack +0020:rdx,Stack +0028:qwLoc48,Stack +0030:qwLoc40,Stack +0038:qwLoc38,Stack +0040:rbx,Stack +0048:rbp,Stack +0050:r12,Stack +0058:r13,Stack +0060:r14,Stack +0068:r15
		defs: rax:rax_220,rcx:rcx_215,rdx:rdx_218,rsi:rsi_217
	branch SLICE(rax, word32, 0) <= 0x00000000 l000000000040D479
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D677:
	Mem225[rdi:word64] = r13_211
	Mem226[rdi + 0x0000000000000008:word64] = r12_212
	rcxOut = rcx
	rdxOut = rdx
	rsiOut = rsi
	return rax
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D479:
	rcxOut = rcx
	rdxOut = rdx
	rsiOut = rsi
	return rax
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040D450_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040D690(word64 rdx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r12, word64 r13, word64 r14, word64 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] rbp:[0..63] rbx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: rsi
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rsp
fn000000000040D690_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D690:
	word64 rax_5 = rdi + rsi * 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D69A_thunk_fn000000000040D450:
	word64 rsi_19
	word64 rcx_24
	word64 rdx_25
	fn000000000040D450(rax_5, rdx, rax_5, rbx, rbp, rsi, rdi, r12, r13, r14, r15, out rcx_24, out rdx_25, out rsi_19)
	return rsi_19
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040D690_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040D6A0(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rbx rsp
fn000000000040D6A0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6A0:
	word64 rbx_57 = rdi
	branch rdi == 0x0000000000000000 l000000000040D713
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D713:
	fwrite(0x0000000000415FA0, 0x0000000000000001, 0x0000000000000037, Mem8[0x000000000061A650:word64])
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6A9:
	word64 rax_17 = strrchr(rdi, 0x000000000000002F)
	branch rax_17 == 0x0000000000000000 l000000000040D703
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6B8:
	word64 rcx_23 = rax_17 + 0x0000000000000001 - rdi
	byte SCZO_24 = cond(rcx_23 - 0x0000000000000006)
	bool Z_37 = SLICE(SCZO_24, bool, 2)
	bool C_62 = SLICE(SCZO_24, bool, 1)
	branch rcx_23 <= 0x0000000000000006 l000000000040D703
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6C8:
	word64 rsi_26 = rax_17 - 0x0000000000000006
	word64 rdi_27 = 0x0000000000415FD8
	word64 rcx_28 = 0x0000000000000007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6D6:
	bool C_64 = SLICE(C_62, bool, 1)
	branch rcx_28 == 0x0000000000000000 l000000000040D6D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6D6_1:
	byte SCZO_33 = cond(Mem8[rsi_136:byte] - Mem8[rdi_137:byte])
	Z_37 = SLICE(SCZO_33, bool, 2) (alias)
	C_62 = SLICE(SCZO_33, bool, 1) (alias)
	C_64 = SLICE(SCZO_33, bool, 1) (alias)
	rsi_26 = rsi_136 + 0x0000000000000001
	rdi_27 = rdi_137 + 0x0000000000000001
	rcx_28 = rcx_28 - 0x0000000000000001
	rsi_136 = rsi_26
	rdi_137 = rdi_27
	branch Mem8[rsi_136:byte] != Mem8[rdi_137:byte] l000000000040D6D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6D8:
	byte CZ_58 = Z_37 | SLICE(C_64, bool, 2)
	branch Z_37 l000000000040D703
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6DA:
	word64 rcx_41 = 0x0000000000000003
	word64 rsi_44 = rax_17 + 0x0000000000000001
	word64 rdi_45 = 0x0000000000415FE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6E7:
	branch rcx_41 == 0x0000000000000000 l000000000040D6E9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6E7_2:
	CZ_58 = SLICE(cond(Mem8[rsi_138:byte] - Mem8[rdi_139:byte]), bool, 2) (alias)
	rsi_44 = rsi_138 + 0x0000000000000001
	rdi_45 = rdi_139 + 0x0000000000000001
	rcx_41 = rcx_41 - 0x0000000000000001
	rsi_138 = rsi_44
	rdi_139 = rdi_45
	branch Mem8[rsi_138:byte] != Mem8[rdi_139:byte] l000000000040D6E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6E9:
	rbx_57 = rax_17 + 0x0000000000000001
	branch CZ_58 != SLICE(CZ_58, bool, 1) l000000000040D703
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6F8:
	Mem79[0x000000000061A600:word64] = rax_17 + 0x0000000000000004
	rbx_57 = rax_17 + 0x0000000000000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D703:
	Mem83[0x000000000061B200:word64] = rbx_57
	Mem84[0x000000000061A648:word64] = rbx_57
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040D6A0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040D740(word32 esi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  esi:[0..31] rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx
// Preserved: rsp
fn000000000040D740_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D740:
	word64 rcx_11 = 0x0000000000000007
	word64 rdi_35 = fp - 0x0000000000000048
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D754:
	branch rcx_11 == 0x0000000000000000 l000000000040D757
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D757:
	branch esi == 0x00000008 l000000000040D7A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D7A1:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D759:
	Mem18[rdi:word64] = SEQ(dwLoc44, esi)
	Mem20[rdi + 0x0000000000000008:word64] = qwLoc40
	Mem22[rdi + 0x0000000000000010:word64] = qwLoc38
	Mem24[rdi + 0x0000000000000018:word64] = qwLoc30
	Mem26[rdi + 0x0000000000000020:word64] = qwLoc28
	Mem28[rdi + 0x0000000000000028:word64] = qwLoc20
	Mem30[rdi + 0x0000000000000030:word64] = qwLoc18
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040D740_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D754_1:
	Mem36[rdi_35:word64] = 0x0000000000000000
	rdi_35 = rdi_35 + 0x0000000000000008
	rcx_11 = rcx_11 - 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040D7B0(word32 esi, word64 rdi, selector fs, ptr64 & rcxOut, ptr64 & rdxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  esi:[0..31] fs:[0..15] rdi:[0..63]
// LiveOut: rax rcx rdx
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: r12 r13 rbp rbx rsp
fn000000000040D7B0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D7B0:
	word64 rax_23 = dcgettext(0x0000000000000000, rdi, 0x0000000000000005)
	word64 rdx_154 = 0x0000000000000005
	word32 r12d_82 = SLICE((uint64) esi, word32, 0)
	word64 rbx_100 = rax_23
	branch rax_23 == rdi l000000000040D7E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D7E8:
	rcx = fn0000000000411900(fs)
	word64 rdx_35 = (uint64) ((word32) Mem21[rax_23:byte] & 0xFFFFFFDF)
	byte dl_36 = SLICE(rdx_35, byte, 0)
	branch dl_36 != 0x55 l000000000040D850
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D850:
	rdx_154 = rdx_35 (alias)
	branch dl_36 != 0x47 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D855:
	rdx_154 = (uint64) ((word32) Mem21[rax_23 + 0x0000000000000001:byte] & 0xFFFFFFDF)
	branch SLICE(rdx_154, byte, 0) != 0x42 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D861:
	branch Mem21[rax_23 + 0x0000000000000002:byte] != 0x31 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D867:
	branch Mem21[rax_23 + 0x0000000000000003:byte] != 0x38 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D86D:
	branch Mem21[rax_23 + 0x0000000000000004:byte] != 0x30 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D873:
	branch Mem21[rax_23 + 0x0000000000000005:byte] != 0x33 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D879:
	branch Mem21[rax_23 + 0x0000000000000006:byte] != 0x30 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D87F:
	branch Mem21[rax_23 + 0x0000000000000007:byte] != 0x00 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D885:
	rbx_100 = 0x0000000000415FED
	branch Mem21[rax_23:byte] == 0x60 l000000000040D89B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D897_1:
	rbx_100 = 0x0000000000415FE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D89B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D7F8:
	rdx_154 = (uint64) ((word32) Mem21[rax_23 + 0x0000000000000001:byte] & 0xFFFFFFDF)
	branch SLICE(rdx_154, byte, 0) != 0x54 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D804:
	rdx_154 = (uint64) ((word32) Mem21[rax_23 + 0x0000000000000002:byte] & 0xFFFFFFDF)
	branch SLICE(rdx_154, byte, 0) != 0x46 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D810:
	branch Mem21[rax_23 + 0x0000000000000003:byte] != 0x2D l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D816:
	branch Mem21[rax_23 + 0x0000000000000004:byte] != 0x38 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D81C:
	branch Mem21[rax_23 + 0x0000000000000005:byte] != 0x00 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D838:
	rbx_100 = 0x0000000000415FEB
	branch r12d_82 == 0x00000007 l000000000040D84A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D846_1:
	rbx_100 = 0x0000000000416DEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D84A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D822:
	rbx_100 = 0x0000000000415FE4
	branch Mem21[rax_23:byte] != 0x60 l000000000040D833
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D82F_1:
	rbx_100 = 0x0000000000415FF1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D833:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D7D7:
	rcxOut = rcx
	rdxOut = rdx_154
	return rbx_100
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040D7B0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040D8A0(word64 rcx, word64 rdx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word32 r8d, word32 r9d, word64 r10, word64 r12, word64 r13, word64 r14, word64 r15, selector fs, word64 qwArg08, word64 qwArg10, word64 qwArg18, ptr64 & rbxOut, ptr64 & rspOut, ptr64 & rbpOut, ptr64 & rsiOut, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & r11Out, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r14Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] r8d:[0..31] r9d:[0..31] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63] Stack +0008:[0..63] Stack +0010:[0..63] Stack +0018:[0..63]
// LiveOut: r10 r11 r12 r13 r14 r15 r8 r9 rax rbp rbx rsi rsp
// Trashed: SCZO r10 r11 r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved: fs
fn000000000040D8A0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D8A0:
	word64 rax_43 = Mem41[fs:0x00000028:word64]
	byte al_58 = SLICE((uint64) (SLICE((uint64) (SLICE((uint64) SLICE((uint64) r9d, word32, 0), word32, 0) >>u 0x00000001), word32, 0) & 0x00000001), byte, 0)
	word64 r15_1449 = rcx
	word32 r14d_56 = SLICE((uint64) r8d, word32, 0)
	word56 nLocD7_2114 = SLICE(rsi, word56, 8)
	word32 dwLocC4_1468 = r8d
	word64 qwLoc88_1472 = qwArg10
	word64 qwLoc90_1474 = qwArg18
	word64 rax_48 = (uint64) (uint32) __ctype_get_mb_cur_max()
	byte bLocC5_1477 = al_58
	branch r14d_56 >u 0x00000008 l000000000040E280
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E280:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D92D:
	word64 qwLocD8_2112
	word64 qwLoc98_1494
	word64 rsi_1285
	word64 rdi_1253
	word64 rbx_1098
	word64 rdx_3133
	word64 rcx_3129
	word64 r14_149
	word32 rax_32_32_142 = SLICE((uint64) r14d_56, word32, 32)
	switch (r14d_56) { l000000000040D940 l000000000040E070 l000000000040DF10 l000000000040DF50 l000000000040DFB0 l000000000040DF90 l000000000040DFE0 l000000000040DFE0 l000000000040DFE0 }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DFE0:
	word64 rcx_3165
	word64 rdx_3170
	rsi_1285 = rsi
	rdx_3170 = rdx
	rcx_3165 = rcx
	branch r14d_56 == 0x00000008 l000000000040E012
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DFE2:
	word32 ebx_71 = SLICE((uint64) r8d, word32, 0)
	word64 rcx_3191
	word64 rdx_3192
	qwLoc88_1472 = fn000000000040D7B0(SLICE((uint64) ebx_71, word32, 0), 0x0000000000415FF5, fs, out rcx_3191, out rdx_3192)
	word64 rax_88 = fn000000000040D7B0(SLICE((uint64) ebx_71, word32, 0), 0x0000000000416DEA, fs, out rcx_3165, out rdx_3170)
	nLocD7_2114 = SLICE(rsi, word56, 8) (alias)
	rax_32_32_142 = SLICE(rax_88, word32, 32) (alias)
	qwLoc90_1474 = rax_88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E012:
	rbx_1098 = 0x0000000000000000
	word64 rcx_3150 = rcx_3165
	word64 rdx_3157 = rdx_3170
	branch al_58 != 0x00 l000000000040E044
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E01B:
	byte al_106 = SLICE((word32) Mem101[qwLoc88_1472:byte], byte, 0)
	rcx_3150 = rcx_3165 (alias)
	rdx_3157 = qwLoc88_1472
	branch al_106 == 0x00 l000000000040E044
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E027:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E030:
	branch rbx_1098 >=u rsi l000000000040E038
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E035:
	Mem117[rdi + rbx_1098:byte] = al_106
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E038:
	rbx_1098 = rbx_1098 + 0x0000000000000001
	al_106 = SLICE((word32) Mem122[qwLoc88_1472 + rbx_1098:byte], byte, 0) (alias)
	rcx_3150 = rdi (alias)
	rdx_3157 = qwLoc88_1472
	branch al_106 != 0x00 l000000000040E030
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E044:
	nLocBF = SLICE(rsi, word56, 8) (alias)
	rdi_1253 = qwLoc90_1474
	qwLoc98_1494 = qwLoc90_1474
	r14_149 = SEQ(rax_32_32_142, strlen(qwLoc90_1474))
	qwLocD8_2112 = SEQ(nLocD7_2114, 0x01) (alias)
	rcx_3129 = rcx_3150 (alias)
	rdx_3133 = rdx_3157 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DF90:
	bLocC5_1477 = 0x00
	r14_149 = 0x0000000000000000
	qwLoc98_1494 = 0x0000000000000000
	rbx_1098 = 0x0000000000000000
	qwLocD8_2112 = SEQ(nLocD7_2114, 0x01) (alias)
	rcx_3129 = rcx
	rdx_3133 = rdx
	rdi_1253 = rdi
	rsi_1285 = rsi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DFB0:
	bLocC5_1477 = 0x01
	r14_149 = 0x0000000000000001
	qwLoc98_1494 = 0x0000000000415FEB
	rbx_1098 = 0x0000000000000000
	dwLocC4_1468 = 0x00000003
	qwLocD8_2112 = SEQ(nLocD7_2114, 0x01) (alias)
	rcx_3129 = rcx
	rdx_3133 = rdx
	rdi_1253 = rdi
	rsi_1285 = rsi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DF50:
	branch al_58 != 0x00 l000000000040E428
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E428:
	r14_149 = 0x0000000000000001
	qwLoc98_1494 = 0x0000000000415FEB
	rbx_1098 = 0x0000000000000000
	qwLocD8_2112 = SEQ(nLocD7_2114, 0x01) (alias)
	rcx_3129 = rcx
	rdx_3133 = rdx
	rdi_1253 = rdi
	rsi_1285 = rsi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DF5B:
	branch rsi == 0x0000000000000000 l000000000040E2B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E2B3:
	r14_149 = 0x0000000000000001
	qwLoc98_1494 = 0x0000000000415FEB
	rbx_1098 = 0x0000000000000001
	qwLocD8_2112 = SEQ(nLocD7_2114, 0x01) (alias)
	rcx_3129 = rcx
	rdx_3133 = rdx
	rdi_1253 = rdi
	rsi_1285 = rsi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DF64:
	Mem190[rdi:byte] = 0x22
	r14_149 = 0x0000000000000001
	qwLoc98_1494 = 0x0000000000415FEB
	rbx_1098 = 0x0000000000000001
	qwLocD8_2112 = SEQ(nLocD7_2114, 0x01) (alias)
	rcx_3129 = rcx
	rdx_3133 = rdx
	rdi_1253 = rdi
	rsi_1285 = rsi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DF10:
	branch al_58 != 0x00 l000000000040E408
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E408:
	r14_149 = 0x0000000000000001
	qwLoc98_1494 = 0x0000000000416DEA
	rbx_1098 = 0x0000000000000000
	qwLocD8_2112 = SEQ(nLocD7_2114, 0x00) (alias)
	rcx_3129 = rcx
	rdx_3133 = rdx
	rdi_1253 = rdi
	rsi_1285 = rsi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DF1B:
	branch rsi == 0x0000000000000000 l000000000040E2D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E2D1:
	r14_149 = 0x0000000000000001
	qwLoc98_1494 = 0x0000000000416DEA
	rbx_1098 = 0x0000000000000001
	qwLocD8_2112 = SEQ(nLocD7_2114, 0x00) (alias)
	rcx_3129 = rcx
	rdx_3133 = rdx
	rdi_1253 = rdi
	rsi_1285 = rsi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DF24:
	Mem212[rdi:byte] = 0x27
	r14_149 = 0x0000000000000001
	qwLoc98_1494 = 0x0000000000416DEA
	rbx_1098 = 0x0000000000000001
	qwLocD8_2112 = SEQ(nLocD7_2114, 0x00) (alias)
	rcx_3129 = rcx
	rdx_3133 = rdx
	rdi_1253 = rdi
	rsi_1285 = rsi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E070:
	bLocC5_1477 = 0x01
	r14_149 = 0x0000000000000001
	qwLoc98_1494 = 0x0000000000416DEA
	rbx_1098 = 0x0000000000000000
	dwLocC4_1468 = 0x00000002
	qwLocD8_2112 = SEQ(nLocD7_2114, 0x00) (alias)
	rcx_3129 = rcx
	rdx_3133 = rdx
	rdi_1253 = rdi
	rsi_1285 = rsi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D940:
	bLocC5_1477 = 0x00
	r14_149 = 0x0000000000000000
	qwLoc98_1494 = 0x0000000000000000
	rbx_1098 = 0x0000000000000000
	qwLocD8_2112 = SEQ(nLocD7_2114, 0x00) (alias)
	rcx_3129 = rcx
	rdx_3133 = rdx
	rdi_1253 = rdi
	rsi_1285 = rsi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D960:
	word64 r11_1040
	word32 dwLocB4_2493
	word64 r12_3090
	word64 rax_1001
	word32 rcx_32_32_1171
	word64 r13_380
	word64 rcx_3123
	word24 ecx_24_8_1347
	word64 rax_249 = (uint64) ((word32) SLICE(qwLocD8_2112, byte, 0) ^ 0x00000001)
	byte al_246 = SLICE((uint64) ((word32) bLocC5_1477 ^ 0x00000001), byte, 0)
	word64 r9_1000 = r14_149
	word64 rbp_235 = 0x0000000000000000
	word64 r14_237 = rsi
	word64 r8_244 = rdx
	byte al_250 = SLICE(rax_249, byte, 0)
	word32 rax_32_32_1375 = SLICE(rax_249, word32, 32)
	byte al_260 = rcx != 0x0000000000000000
	word64 qwLocC0_2328 = SEQ(nLocBF, al_246)
	qwLocC0_2328 = SEQ(nLocBF, al_246) (alias)
	word64 rcx_3097 = rcx_3129
	word64 rdx_3100 = rdx_3133
	r12_3090 = r12
	branch rcx == 0xFFFFFFFFFFFFFFFF l000000000040DB76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D996:
	rcx_3123 = rcx_3129 (alias)
	rdx_3100 = rdx_3133 (alias)
	r12_3090 = r12
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D9A0:
	dwLocB4_2493 = SLICE(qwLocB8, word32, 32) (alias)
	ecx_24_8_1347 = SLICE(rcx_3123, word24, 8) (alias)
	rcx_32_32_1171 = SLICE(rcx_3123, word32, 32) (alias)
	branch al_260 == 0x00 l000000000040DB86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D9A8:
	word64 rdx_3111
	word32 r11d_286
	word64 r13_284
	byte cl_271 = r9_1000 != 0x0000000000000000
	word56 nLocBF_2339 = SLICE(qwLocC0_2328, word56, 8)
	word56 nLocD7_2128 = SLICE(qwLocD8_2112, word56, 8)
	byte bLocC0_1609 = SLICE(qwLocC0_2328, byte, 0)
	byte bLocD8_1529 = SLICE(qwLocD8_2112, byte, 0)
	word32 r12_32_32_951 = SLICE(r12_3090, word32, 32)
	word32 ecx_293 = SEQ(ecx_24_8_1347, cl_271)
	word64 rcx_1169 = SEQ(rcx_32_32_1171, ecx_24_8_1347, cl_271)
	branch r9_1000 == 0x0000000000000000 l000000000040E0A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D9B4:
	rcx_1169 = SEQ(rcx_32_32_1171, ecx_293) (alias)
	branch bLocD8_1529 == 0x00 l000000000040E0A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D9BF:
	word64 rax_277 = rbp_235 + r9_1000
	rax_32_32_1375 = SLICE(rax_277, word32, 32) (alias)
	rcx_1169 = SEQ(rcx_32_32_1171, ecx_293) (alias)
	branch r15_1449 <u rax_277 l000000000040E0A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E0A0:
	r13_284 = r8_244 + rbp_235
	r11d_286 = 0x00000000 (alias)
	rdx_3111 = rdx_3100 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D9CD:
	r13_284 = r8_244 + rbp_235
	rsi_1285 = qwLoc98_1494
	dwLocA8 = ecx_293
	qwLocB0 = r8_244
	rdi_1253 = r13_284
	dwLocB4_2493 = SLICE(r9_1000, word32, 32) (alias)
	rcx_1169 = (uint64) ecx_293
	branch memcmp(r13_284, qwLoc98_1494, r9_1000) != 0x00000000 l000000000040E0B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E0B0:
	r11d_286 = 0x00000000 (alias)
	rdx_3111 = r9_1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DA05:
	branch bLocC5_1477 != 0x00 l000000000040DC40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DA10:
	r11d_286 = 0x00000001 (alias)
	rdx_3111 = r9_1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DA20:
	word64 qwLocB8_2501
	word32 r12d_315 = (word32) Mem313[r13_284:byte]
	word32 rdx_32_32_572 = SLICE(rdx_3111, word32, 32)
	byte r11b_370 = SLICE(r11d_286, byte, 0)
	byte r12b_316 = SLICE(r12d_315, byte, 0)
	word56 r12_56_8_1249 = SEQ(r12_32_32_951, SLICE(r12d_315, word24, 8))
	word64 r11_1318 = (uint64) (uint32) r11d_286
	branch r12b_316 >u 0x7E l000000000040DE18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DE18:
	word64 r12_3120
	word64 r12_3162
	word32 edx_3106
	byte r11b_1440
	word32 rdx_32_32_1409
	word64 r12_3139
	word32 rdi_32_32_1270
	word24 edx_24_8_1224
	word64 rdx_3135
	word64 rcx_3131
	word64 rax_404
	byte dl_550
	branch rax_48 != 0x0000000000000001 l000000000040E0C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E0C0:
	qwLoc48 = 0x0000000000000000
	branch r15_1449 == 0xFFFFFFFFFFFFFFFF l000000000040E285
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E285:
	r15_1449 = SEQ(rax_32_32_1375, strlen(r8_244))
	r11b_370 = SLICE((uint64) r11d_286, byte, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E0D6:
	qwLoc78 = rbx_1098
	bLoc62 = r12b_316
	qwLoc60 = r13_284
	rbx_1098 = 0x0000000000000000
	qwLocB0 = rbp_235
	qwLoc70 = r9_1000
	word32 r12d_1390 = 0x00000001
	bLoc61 = r11b_370
	r13_380 = r8_244
	qwLocB8 = r15_1449
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E11D:
	word32 r12d_410
	r14_237 = rbx_1098 + rbp_235
	word64 r15_392 = r8_244 + r14_237
	word64 rax_397 = SEQ(SLICE(rbp_235, word32, 32), mbrtowc(fp - 0x000000000000004C, r15_392, r15_1449 - r14_237, fp - 0x0000000000000048))
	dwLocA8 = SLICE(r14_237, word32, 0) (alias)
	word32 rcx_32_32_1191 = SLICE(fp - 0x0000000000000048, word32, 32)
	word24 ecx_24_8_1361 = SLICE(fp - 0x0000000000000048, word24, 8)
	byte cl_3039 = SLICE(fp - 0x0000000000000048, byte, 0)
	rdi_1253 = fp - 0x000000000000004C
	word32 rdi_32_32_1392 = SLICE(fp - 0x000000000000004C, word32, 32)
	rsi_1285 = r15_392
	rbp_235 = rax_397
	branch rax_397 == 0x0000000000000000 l000000000040E30E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E30E:
	word64 rdx_412 = (uint64) (SLICE((uint64) r12d_1390, word32, 0) ^ 0x00000001)
	rax_404 = rbx_1098
	r11b_1440 = SLICE((word32) r11b_370, byte, 0) (alias)
	r12d_410 = (word32) r12b_316
	dl_550 = SLICE(rdx_412, byte, 0) (alias)
	edx_24_8_1224 = SLICE(rdx_412, word24, 8) (alias)
	rdx_32_32_1409 = SLICE(rdx_412, word32, 32) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E157:
	branch rax_397 == 0xFFFFFFFFFFFFFFFF l000000000040E350
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E350:
	rax_404 = rbx_1098
	r12d_410 = (word32) r12b_316
	r11b_1440 = SLICE((word32) r11b_370, byte, 0) (alias)
	dl_550 = 0x01 (alias)
	edx_24_8_1224 = 0x000000 (alias)
	rdx_32_32_1409 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E161:
	branch rax_397 == 0xFFFFFFFFFFFFFFFE l000000000040E391
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E391:
	r10 = r15_392
	rsi_1285 = r14_237
	rax_404 = rbx_1098
	r12d_410 = (word32) r12b_316
	r11b_1440 = SLICE((word32) r11b_370, byte, 0) (alias)
	branch r15_1449 <=u r14_237 l000000000040E3FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E3DB:
	branch Mem382[r15_392:byte] != 0x00 l000000000040E3F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E3F0:
	rax_404 = rax_404 + 0x0000000000000001
	branch r15_1449 >u rbp_235 + rax_404 l000000000040E3E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E3E8:
	branch Mem382[r13_284 + rax_404:byte] == 0x00 l000000000040E3FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E3E1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E3FE:
	dl_550 = 0x01 (alias)
	edx_24_8_1224 = 0x000000 (alias)
	rdx_32_32_1409 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E16B:
	branch bLocC5_1477 == 0x00 l000000000040E1BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E172:
	branch dwLocC4_1468 != 0x00000002 l000000000040E1BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E179:
	branch rax_397 == 0x0000000000000001 l000000000040E1BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E17F:
	word64 rdx_466 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E190:
	word64 rdi_473 = SEQ(rdi_32_32_1392, (word32) Mem382[r15_392 + rdx_466:byte])
	cl_3039 = SLICE(rdi_473 - 0x000000000000005B, byte, 0) (alias)
	ecx_24_8_1361 = SLICE(rdi_473 - 0x000000000000005B, word24, 8) (alias)
	branch cl_3039 >u 0x21 l000000000040E1B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E19D:
	rdi_32_32_1392 = 0x00000000 (alias)
	r12_3090 = (uint64) (uint32) r12d_1390 (alias)
	branch (0x0000000000000001 << cl_3039 & 0x000000000000002B) != 0x0000000000000000 l000000000040E260
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E260:
	r11_1040 = r14_237
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E1B6:
	rdx_466 = rdx_466 + 0x0000000000000001
	branch rdx_466 != rax_397 l000000000040E190
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E1BF:
	dwLocA8 = SLICE(r14_237, word32, 0) (alias)
	rdi_1253 = fp - 0x0000000000000048
	branch iswprint((uint64) dwLoc4C) != 0x00000000 l000000000040E1DE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E1DA_1:
	r12d_1390 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E1DE:
	rbx_1098 = rbx_1098 + rax_397
	branch mbsinit(fp - 0x0000000000000048) == 0x00000000 l000000000040E11D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E1EE:
	rsi_1285 = (uint64) r12d_1390
	word64 rdx_542 = (uint64) (SLICE((uint64) SLICE(rsi_1285, word32, 0), word32, 0) ^ 0x00000001)
	r11b_1440 = SLICE((word32) r11b_370, byte, 0) (alias)
	r12d_410 = (word32) r12b_316
	rax_404 = rbx_1098
	dl_550 = SLICE(rdx_542, byte, 0) (alias)
	edx_24_8_1224 = SLICE(rdx_542, word24, 8) (alias)
	rdx_32_32_1409 = SLICE(rdx_542, word32, 32) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E22D:
	rdi_32_32_1270 = SLICE(rdi_1253, word32, 32) (alias)
	r12_3162 = (uint64) (uint32) r12d_410 (alias)
	rcx_1169 = SEQ(rcx_32_32_1191, ecx_24_8_1361, cl_3039) (alias)
	branch rax_404 <=u 0x0000000000000001 l000000000040DE61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E237:
	edx_3106 = SEQ(edx_24_8_1224, dl_550 & bLocD8_1529) (alias)
	r12_3139 = (uint64) (uint32) r12d_410 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DE24:
	word32 edx_577 = (word32) Mem565[Mem565[__ctype_b_loc():word64] + SEQ(rdx_32_32_572, (word32) r12b_316) * 0x0000000000000002:word16]
	word64 rdx_585 = (uint64) (SLICE((uint64) (SEQ(SLICE(edx_577, word16, 16), SLICE(edx_577, word16, 0) >>u 0x000E) ^ 0x00000001), word32, 0) & 0x00000001)
	dwLocA8 = SLICE(r8_244, word32, 0) (alias)
	qwLocB0 = r9_1000
	r11b_1440 = SLICE((uint64) r11d_286, byte, 0) (alias)
	rax_404 = 0x0000000000000001
	dl_550 = SLICE(rdx_585, byte, 0) (alias)
	edx_24_8_1224 = SLICE(rdx_585, word24, 8) (alias)
	rdx_32_32_1409 = SLICE(rdx_585, word32, 32) (alias)
	qwLocB8_2501 = SEQ(dwLocB4_2493, r11d_286) (alias)
	r12_3162 = SEQ(r12_32_32_951, r12d_315) (alias)
	qwLocB8 = qwLocB8_2501
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DE61:
	word32 r12d_608 = SLICE(r12_3162, word32, 0)
	byte dl_593 = dl_550 & bLocD8_1529
	rdi_32_32_1270 = SLICE(rdi_1253, word32, 32) (alias)
	word32 r12_32_32_949 = SLICE(r12_3162, word32, 32)
	rax_32_32_1375 = SLICE(rax_404, word32, 32) (alias)
	byte r12b_823 = SLICE(r12d_608, byte, 0)
	byte r12b_824 = SLICE(r12d_608, byte, 0)
	byte r12b_825 = SLICE(r12d_608, byte, 0)
	word24 r12d_24_8_966 = SLICE(r12d_608, word24, 8)
	word24 r12d_24_8_969 = SLICE(r12d_608, word24, 8)
	word24 r12d_24_8_971 = SLICE(r12d_608, word24, 8)
	word32 edx_1231 = SEQ(edx_24_8_1224, dl_593)
	qwLocD8_2142 = qwLocD8_2112 (alias)
	edx_3106 = SEQ(edx_24_8_1224, dl_593) (alias)
	r12_3139 = r12_3162 (alias)
	branch dl_593 == 0x00 l000000000040DAF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DAF8:
	word64 rdx_3171
	word64 rcx_3166
	word64 rdx_3159
	word64 r12_3116
	word64 rcx_3154
	qwLocC0_2353 = qwLocC0_2328 (alias)
	branch bLocC0_1609 == 0x00 l000000000040DB09
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DAFF:
	r12_3116 = SEQ(SEQ(r12_32_32_949, r12d_24_8_966), r12b_823) (alias)
	rcx_3166 = rcx_1169 (alias)
	rdx_3171 = SEQ(rdx_32_32_1409, edx_1231) (alias)
	branch al_250 != 0x00 l000000000040DB2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB09:
	rdi_1253 = qwArg08
	r12_3116 = SEQ(SEQ(r12_32_32_949, r12d_24_8_969), r12b_824) (alias)
	rcx_3166 = rcx_1169 (alias)
	rdx_3171 = SEQ(rdx_32_32_1409, edx_1231) (alias)
	branch qwArg08 == 0x0000000000000000 l000000000040DB2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB13:
	word64 rdx_614 = (uint64) r12d_608
	rcx_3166 = (uint64) (SLICE((uint64) r12d_608, word32, 0) & 0x0000001F)
	word64 rax_624 = (uint64) (0x00000001 << SLICE(rcx_3166, byte, 0))
	word56 r12_56_8_972 = SEQ(r12_32_32_949, r12d_24_8_971)
	word32 rdx_32_32_625 = SLICE(rdx_614, word32, 32)
	word32 edx_621 = (word32) (SLICE(rdx_614, byte, 0) >>u 0x05)
	rax_32_32_1375 = SLICE(rax_624, word32, 32) (alias)
	r12_3116 = SEQ(r12_56_8_972, r12b_825) (alias)
	r12_3116 = SEQ(r12_56_8_972, r12b_825) (alias)
	rdx_3171 = SEQ(rdx_32_32_625, edx_621) (alias)
	rdx_3171 = SEQ(rdx_32_32_625, edx_621) (alias)
	branch (Mem592[qwArg08 + SEQ(rdx_32_32_625, edx_621) * 0x0000000000000004:word32] & SLICE(rax_624, word32, 0)) != 0x00000000 l000000000040DB33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB2E:
	rcx_3154 = rcx_3166 (alias)
	rdx_3159 = rdx_3171 (alias)
	branch r11b_1440 == 0x00 l000000000040DB50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB33:
	r12_3090 = r12_3116 (alias)
	branch bLocC5_1477 != 0x00 l000000000040DC40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB3E:
	branch rbx_1098 >=u r14_237 l000000000040DB4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB43:
	Mem668[rdi + rbx_1098:byte] = 0x5C
	rax_32_32_1375 = SLICE(rdi, word32, 32) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB4C:
	rbx_1098 = rbx_1098 + 0x0000000000000001
	rcx_3154 = rcx_3166 (alias)
	rdx_3159 = rdx_3171 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB50:
	rbp_235 = rbp_235 + 0x0000000000000001
	r12_3120 = r12_3116 (alias)
	rcx_3131 = rcx_3154 (alias)
	rdx_3135 = rdx_3159 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DE6B:
	word32 edi_689 = (word32) bLocC5_1477
	byte dil_1431 = SLICE(edi_689, byte, 0)
	byte dl_1428 = SLICE(edx_3106, byte, 0)
	word64 rax_685 = rax_404 + rbp_235
	word64 rdi_3109 = SEQ(SEQ(rdi_32_32_1270, SLICE(edi_689, word24, 8)), dil_1431)
	word64 r12_3113 = r12_3139
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DEF0:
	word64 r12_3147
	word32 r12d_723 = SLICE(r12_3113, word32, 0)
	rax_32_32_1375 = SLICE(rax_685, word32, 32) (alias)
	byte r12b_829 = SLICE(r12d_723, byte, 0)
	word56 r12_56_8_978 = SEQ(SLICE(r12_3113, word32, 32), SLICE(r12d_723, word24, 8))
	branch dl_1428 != 0x00 l000000000040DE80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DE80:
	r12_3090 = r12_3113 (alias)
	branch dil_1431 != 0x00 l000000000040DC40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DC40:
	r11_1040 = r14_237
	r13_380 = r8_244
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DE89:
	branch rbx_1098 >=u r14_237 l000000000040DE92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DE8E:
	Mem716[rdi + rbx_1098:byte] = 0x5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DE92:
	branch r14_237 <=u rbx_1098 + 0x0000000000000001 l000000000040DEAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DE9B:
	word64 rsi_724 = (uint64) r12d_723
	Mem734[rdi + 0x0000000000000001 + rbx_1098:byte] = SLICE((uint64) (SEQ(SLICE(rsi_724, word24, 8), SLICE(rsi_724, byte, 0) >>u 0x06) + 0x00000030), byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DEAA:
	rsi_1285 = rbx_1098 + 0x0000000000000002
	branch r14_237 <=u rsi_1285 l000000000040DEC5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DEB3:
	word64 rsi_741 = (uint64) r12d_723
	rsi_1285 = (uint64) (SLICE((uint64) (SEQ(SLICE(rsi_741, word24, 8), SLICE(rsi_741, byte, 0) >>u 0x03) & 0x00000007), word32, 0) + 0x00000030)
	Mem753[rdi + 0x0000000000000002 + rbx_1098:byte] = SLICE(rsi_1285, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DEC5:
	rbx_1098 = rbx_1098 + 0x0000000000000003
	r12_3147 = (uint64) (SLICE((uint64) (r12d_723 & 0x00000007), word32, 0) + 0x00000030)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DEF4:
	r12_3147 = SEQ(r12_56_8_978, r12b_829) (alias)
	branch r11b_1440 == 0x00 l000000000040DED1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DEF9:
	branch rbx_1098 >=u r14_237 l000000000040DF02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DEFE:
	Mem768[rdi + rbx_1098:byte] = 0x5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DF02:
	rbx_1098 = rbx_1098 + 0x0000000000000001
	r11b_1440 = 0x00 (alias)
	r12_3147 = SEQ(r12_56_8_978, r12b_829) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DED1:
	rdi_1253 = rdi_3109
	word32 r12_32_32_1453 = SLICE(SLICE(r12_3147, word56, 8), word32, 32)
	byte r12b_828 = SLICE(r12_3147, byte, 0)
	rbp_235 = rbp_235 + 0x0000000000000001
	r12_3120 = r12_3147 (alias)
	rdx_3135 = SEQ(rdx_32_32_1409, edx_3106) (alias)
	rcx_3131 = rdi
	branch rax_685 <=u rbp_235 l000000000040DB54
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB54:
	byte r12b_820 = SLICE(r12_3120, byte, 0)
	branch rbx_1098 >=u r14_237 l000000000040DB62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB59:
	Mem832[rdi + rbx_1098:byte] = r12b_820
	rax_32_32_1375 = SLICE(rdi, word32, 32) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB62:
	r12_3090 = r12_3120
	rbx_1098 = rbx_1098 + 0x0000000000000001
	al_260 = rbp_235 != r15_1449
	rcx_3097 = rcx_3131 (alias)
	rdx_3100 = rdx_3135 (alias)
	rcx_3123 = rcx_3131 (alias)
	rdx_3100 = rdx_3135 (alias)
	qwLocD8_2112 = qwLocD8_2142
	qwLocC0_2328 = qwLocC0_2353
	branch r15_1449 != 0xFFFFFFFFFFFFFFFF l000000000040D9A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB76:
	dwLocB4_2493 = SLICE(qwLocB8, word32, 32) (alias)
	ecx_24_8_1347 = SLICE(rcx_3097, word24, 8) (alias)
	rcx_32_32_1171 = SLICE(rcx_3097, word32, 32) (alias)
	branch Mem869[r8_244 + rbp_235:byte] != 0x00 != 0x00 l000000000040D9A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB86:
	r11_1040 = r14_237
	r13_380 = r8_244
	branch rbx_1098 != 0x0000000000000000 l000000000040DBA3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB91:
	branch dwLocC4_1468 != 0x00000002 l000000000040DBA3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB98:
	branch bLocC5_1477 != 0x00 l000000000040DC46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DC46:
	word64 r12_3197
	word64 r14_3199
	word64 r15_3200
	word64 r13_3198
	word64 rbp_3195
	word64 rsi_3196
	word64 rbx_3193
	word64 rsp_3194
	rax_1001 = fn000000000040D8A0(r15_1449, r13_380, rbx_1098, rbp_235, r11_1040, rdi, SLICE((uint64) dwLocC4_1468, word32, 0), SLICE((uint64) (SLICE((uint64) r9d, word32, 0) & 0xFFFFFFFD), word32, 0), r10, r12_3090, r13_380, r14_237, r15_1449, fs, 0x0000000000000000, qwLoc88_1472, qwLoc90_1474, out rbx_3193, out rsp_3194, out rbp_3195, out rsi_3196, out r8_244, out r9_1000, out r10, out r11_1040, out r12_3197, out r13_3198, out r14_3199, out r15_3200)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DBA3:
	branch bLocC5_1477 != 0x00 l000000000040DBE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DBAA:
	branch qwLoc98_1494 == 0x0000000000000000 l000000000040DBE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DBB2:
	byte al_1089 = SLICE((word32) Mem897[qwLoc98_1494:byte], byte, 0)
	branch al_1089 == 0x00 l000000000040DBE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DBBE:
	word64 rdx_1095 = qwLoc98_1494 - rbx_1098
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DBD0:
	branch r14_237 <=u rbx_1098 l000000000040DBD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DBD5:
	Mem1103[rdi + rbx_1098:byte] = al_1089
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DBD8:
	rbx_1098 = rbx_1098 + 0x0000000000000001
	al_1089 = SLICE((word32) Mem1108[rdx_1095 + rbx_1098:byte], byte, 0) (alias)
	branch al_1089 != 0x00 l000000000040DBD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DBE4:
	rax_1001 = rbx_1098
	branch rbx_1098 >=u r14_237 l000000000040DC86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DBF0:
	Mem1127[rdi + rbx_1098:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DC86:
	word64 rsi_1136 = rax_43 ^ Mem1129[fs:0x00000028:word64]
	branch rsi_1136 != 0x0000000000000000 l000000000040E423
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E423:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DC9D:
	rbxOut = rbx
	rspOut = fp
	rbpOut = rbp
	rsiOut = rsi_1136
	r8Out = r8_244
	r9Out = r9_1000
	r10Out = r10
	r11Out = r11_1040
	r12Out = r12
	r13Out = r13
	r14Out = r14
	r15Out = r15
	return rax_1001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DEDE:
	branch rbx_1098 >=u r14_237 l000000000040DEE7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DEE3:
	Mem1159[rdi + rbx_1098:byte] = r12b_828
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DEE7:
	rbx_1098 = rbx_1098 + 0x0000000000000001
	r12_3113 = SEQ(r12_32_32_1453, (word32) Mem1162[r8_244 + rbp_235:byte]) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DA2F:
	word64 rax_1168 = SEQ(rax_32_32_1375, (word32) r12b_316)
	word64 r8_1206
	word64 r9_1251
	word64 rax_1252
	word64 rsi_1313
	word64 r11_1319
	word64 r10_1320
	call Mem313[rax_1168 * 0x0000000000000008 + 0x00416068:word64] (retsize: 8;)
		uses: r10:r10_1057,r11:r11_1318,r8:r8_282,r9:r9_267,rax:rax_1168,rcx:rcx_1169,rdi:rdi_1253,rdx:rdx_3112,rsi:rsi_1285,Stack +0008:qwLocF8,Stack +0010:qwLocF0,Stack +0018:qwLocE8,Stack +0028:qwLocD8_3119,Stack +0029:nLocD7_2128,Stack +0030:rdi,Stack +003B:bLocC5_1522,Stack +003C:dwLocC4_1689,Stack +0040:qwLocC0_3105,Stack +0041:nLocBF_2339,Stack +0048:qwLocB8_2501,Stack +004C:dwLocB4_2493,Stack +0050:qwLocB0_2800,Stack +0058:dwLocA8_2797,Stack +0060:qwArg08,Stack +0068:qwLoc98_2370,Stack +0070:qwLoc90_1735,Stack +0078:qwLoc88_1818,Stack +0080:rax_48,Stack +0088:qwLoc78_2575,Stack +0090:qwLoc70_2675,Stack +0098:r9d,Stack +009D:al_250,Stack +009E:bLoc62_2607,Stack +009F:bLoc61_2707,Stack +00A0:qwLoc60_2639,Stack +00B4:dwLoc4C,Stack +00B8:qwLoc48_2537,Stack +00C0:rax_43,Stack +00D0:rbx,Stack +00D8:rbp,Stack +00E0:r12,Stack +00E8:r13,Stack +00F0:r14,Stack +00F8:r15,Stack +0108:qwArg08,Stack +0110:qwArg10,Stack +0118:qwArg18
		defs: r10:r10_1320,r11:r11_1319,r8:r8_1206,r9:r9_1251,rax:rax_1252,rsi:rsi_1313
	rbxOut = rbx_1098
	rspOut = fp - 248
	rbpOut = rbp_235
	rsiOut = rsi_1313
	r8Out = r8_1206
	r9Out = r9_1251
	r10Out = r10_1320
	r11Out = r11_1319
	r12Out = SEQ(r12_56_8_1249, r12b_316)
	r13Out = r13_284
	r14Out = r14_237
	r15Out = r15_1449
	return rax_1252
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040D8A0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040E450(word64 rcx, word64 rdx, word64 rsi, word32 edi, word64 r10, selector fs, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31] fs:[0..15] r10:[0..63] rcx:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r10 r11 r8 r9 rax
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040E450_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E450:
	word64 r15_10 = (int64) edi
	word64 rax_41 = __errno_location()
	word32 r15d_44 = SLICE(r15_10, word32, 0)
	word32 eax_48 = SLICE((uint64) Mem40[rax_41:word32], word32, 0)
	word64 r12_106 = Mem40[0x000000000061A5D8:word64]
	branch r15d_44 < 0x00000000 l000000000040E5F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E5F7:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E48C:
	branch r15d_44 <u Mem49[0x000000000061A5F0:word32] l000000000040E4FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E495:
	word64 r14_56 = (uint64) (r15_10 + 0x0000000000000001)
	branch r12_106 != 0x000000000061A5E0 l000000000040E5E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E5E0:
	word64 rax_62 = fn0000000000410C90(r14_56 << 0x0000000000000004, r12_106)
	Mem68[0x000000000061A5D8:word64] = rax_62
	r12_106 = rax_62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E4B0:
	word64 rax_73 = fn0000000000410C90(r14_56 << 0x0000000000000004, 0x0000000000000000)
	word64 rsi_78 = Mem49[0x000000000061A5E0:word64]
	word64 rdi_79 = Mem49[0x000000000061A5E8:word64]
	Mem81[0x000000000061A5D8:word64] = rax_73
	Mem82[rax_73:word64] = rsi_78
	Mem83[rax_73 + 0x0000000000000008:word64] = rdi_79
	r12_106 = rax_73
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E4D6:
	word64 rdi_85 = (uint64) Mem84[0x000000000061A5F0:word32]
	memset((rdi_85 << 0x0000000000000004) + r12_106, 0x0000000000000000, r14_56 - rdi_85 << 0x0000000000000004)
	Mem97[0x000000000061A5F0:word32] = r15_10 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E4FA:
	word64 r12_107 = r12_106 + (r15_10 << 0x0000000000000004)
	word64 rbp_117 = (uint64) (SLICE((uint64) Mem100[rcx + 0x0000000000000004:word32], word32, 0) | 0x00000001)
	word64 r14_111 = Mem100[r12_107 + 0x0000000000000008:word64]
	word64 r15_145
	word64 rbp_149
	word64 rbx_150
	word64 rsi_154
	word64 rsp_155
	word64 r12_156
	word64 r11_309
	word64 r8_146
	word64 r9_147
	word64 r10_141
	word64 r13_143
	word64 r14_144
	word64 rax_148 = fn000000000040D8A0(rdx, rsi, rcx, rbp_117, Mem100[r12_107:word64], r14_111, SLICE((uint64) Mem100[rcx:word32], word32, 0), SLICE((uint64) SLICE(rbp_117, word32, 0), word32, 0), r10, r12_107, rax_41, r14_111, rcx + 0x0000000000000008, fs, rcx + 0x0000000000000008, Mem114[rcx + 0x0000000000000028:word64], Mem100[rcx + 0x0000000000000030:word64], out rbx_150, out rsp_155, out rbp_149, out rsi_154, out r8_146, out r9_147, out r10_141, out r11_309, out r12_156, out r13_143, out r14_144, out r15_145)
	word32 ebp_188 = SLICE(rbp_149, word32, 0)
	word64 r11_161 = Mem128[rsp_155 + 0x0000000000000038:word64]
	branch r11_161 >u rax_148 l000000000040E5BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E554:
	Mem166[r12_156:word64] = rax_148 + 0x0000000000000001
	word64 rsi_164 = rax_148 + 0x0000000000000001
	branch r14_144 == 0x000000000061B220 l000000000040E577
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E565:
	Mem169[rsp_155 + 0x0000000000000038:word64] = rax_148 + 0x0000000000000001
	free(r14_144)
	rsi_164 = Mem169[rsp_155 + 0x0000000000000038:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E577:
	Mem174[rsp_155 + 0x0000000000000038:word64] = rsi_164
	word64 rax_175 = fn0000000000410C40(rsi_164)
	Mem181[r12_156 + 0x0000000000000008:word64] = rax_175
	word32 r8d_198 = SLICE((uint64) Mem181[rbx_150:word32], word32, 0)
	word64 rcx_186 = Mem181[rsp_155 + 0x0000000000000028:word64]
	word64 rdx_190 = Mem181[rsp_155 + 0x0000000000000020:word64]
	word64 rsi_191 = Mem181[rsp_155 + 0x0000000000000038:word64]
	Mem193[rsp_155 + 0x0000000000000010:word64] = Mem181[rbx_150 + 0x0000000000000030:word64]
	word64 rax_194 = Mem193[rbx_150 + 0x0000000000000028:word64]
	Mem196[rsp_155:word64] = r15_145
	Mem197[rsp_155 + 0x0000000000000008:word64] = rax_194
	word64 rsi_219
	word64 r12_313
	word64 r15_314
	word64 rsp_311
	word64 rbp_312
	word64 rbx_310
	fn000000000040D8A0(rcx_186, rdx_190, rbx_150, rbp_149, rsi_191, rax_175, r8d_198, SLICE((uint64) ebp_188, word32, 0), r10_141, r12_156, r13_143, rax_175, r15_145, fs, Mem197[rsp_155:word64], Mem197[rsp_155 + 8:word64], Mem197[rsp_155 + 16:word64], out rbx_310, out rsp_311, out rbp_312, out rsi_219, out r8_146, out r9_147, out r10_141, out r11_161, out r12_313, out r13_143, out r14_144, out r15_314)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E5BF:
	Mem231[r13_143:word32] = SLICE((uint64) eax_48, word32, 0)
	r8Out = r8_146
	r9Out = r9_147
	r10Out = r10_141
	r11Out = r11_161
	return r14_144
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040E450_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040E600(word64 rdi, ptr64 & rsiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut: rax rsi
// Trashed: SCZO rax rdi rdx rsi
// Preserved: r12 rbp rbx rsp
fn000000000040E600_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E600:
	word64 rax_14 = __errno_location()
	word32 r12d_33 = SLICE((uint64) Mem13[rax_14:word32], word32, 0)
	word64 rdi_18 = 0x000000000061B320
	branch rdi == 0x0000000000000000 l000000000040E61E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E61A_1:
	rdi_18 = rdi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E61E:
	word64 rsi_27
	word64 rax_24 = fn0000000000410E00(0x0000000000000038, rdi_18, out rsi_27)
	Mem35[rax_14:word32] = r12d_33
	rsiOut = rsi_27
	return rax_24
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040E600_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn000000000040E630(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax
// Preserved: rsp
fn000000000040E630_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E630:
	word64 rax_6 = 0x000000000061B320
	branch rdi == 0x0000000000000000 l000000000040E63C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E638_1:
	rax_6 = rdi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E63C:
	return (word32) (uint64) Mem0[rax_6:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040E630_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040E640(word32 esi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  esi:[0..31] rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax
// Preserved: rsp
fn000000000040E640_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E640:
	word64 rax_11 = 0x000000000061B320
	branch rdi == 0x0000000000000000 l000000000040E64C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E648_1:
	rax_11 = rdi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E64C:
	Mem12[rax_11:word32] = esi
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040E640_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040E650(word32 edx, word32 esi, word32 rsi_32_32, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx:[0..31] esi:[0..31] rdi:[0..63] rsi_32_32:[0..31]
// LiveOut: rsi
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rsp
fn000000000040E650_entry:
	byte sil_12 = SLICE(esi, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E650:
	word64 rax_10 = 0x000000000061B320
	word32 ecx_15 = SLICE((uint64) esi, word32, 0)
	branch rdi == 0x0000000000000000 l000000000040E65E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E65A_1:
	rax_10 = rdi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E65E:
	word64 rsi_22 = rax_10 + SEQ(rsi_32_32, (word32) (sil_12 >>u 0x05)) * 0x0000000000000004
	word32 edi_26 = SLICE((uint64) Mem0[rsi_22 + 0x0000000000000008:word32], word32, 0)
	byte cl_29 = SLICE((uint64) (ecx_15 & 0x0000001F), byte, 0)
	Mem45[rsi_22 + 0x0000000000000008:word32] = SLICE((uint64) (SLICE((uint64) (SLICE((uint64) (SLICE((uint64) (edx ^ SLICE((uint64) (SLICE((uint64) edi_26, word32, 0) >>u cl_29), word32, 0)), word32, 0) & 0x00000001), word32, 0) << cl_29), word32, 0) ^ edi_26), word32, 0)
	return rsi_22
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040E650_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040E6B0(word64 rdx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax
// Preserved: rdi rsp
fn000000000040E6B0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E6B0:
	branch rdi != 0x0000000000000000 l000000000040E6C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E6BC_1:
	rdi = 0x000000000061B320
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E6C0:
	Mem15[rdi:word32] = 0x00000008
	branch rsi == 0x0000000000000000 l000000000040E6DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E6CB:
	branch rdx == 0x0000000000000000 l000000000040E6DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E6DD:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E6D0:
	Mem22[rdi + 0x0000000000000028:word64] = rsi
	Mem23[rdi + 0x0000000000000030:word64] = rdx
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040E6B0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040E6F0(word64 rcx, word64 rdx, word64 rsi, word64 rdi, word64 r8, word64 r10, selector fs, ptr64 & rsiOut, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] r8:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r10 r8 r9 rax rsi
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040E6F0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E6F0:
	word64 rbx_29 = r8
	branch r8 != 0x0000000000000000 l000000000040E716
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E712_1:
	rbx_29 = 0x000000000061B320
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E716:
	word64 rax_39 = __errno_location()
	word64 r10_64
	word64 r8_69
	word64 r9_70
	word64 rbp_72
	word64 rsi_77
	word64 r12_79
	word64 rsp_125
	word64 rbx_124
	word64 r11_126
	word64 r13_127
	word64 r14_128
	word64 r15_129
	word64 rax_71 = fn000000000040D8A0(rcx, rdx, rbx_29, rax_39, rsi, rdi, SLICE((uint64) Mem56[rbx_29:word32], word32, 0), SLICE((uint64) Mem38[rbx_29 + 0x0000000000000004:word32], word32, 0), r10, (uint64) Mem38[rax_39:word32], rsi, rdx, rcx, fs, rbx_29 + 0x0000000000000008, Mem52[rbx_29 + 0x0000000000000028:word64], Mem38[rbx_29 + 0x0000000000000030:word64], out rbx_124, out rsp_125, out rbp_72, out rsi_77, out r8_69, out r9_70, out r10_64, out r11_126, out r12_79, out r13_127, out r14_128, out r15_129)
	Mem85[rbp_72:word32] = SLICE(r12_79, word32, 0)
	rsiOut = rsi_77
	r8Out = r8_69
	r9Out = r9_70
	r10Out = r10_64
	return rax_71
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040E6F0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040E930(word64 rdi, word64 r10, selector fs, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] rdi:[0..63]
// LiveOut: r10 r8 r9 rax
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi
// Preserved: rsp
fn000000000040E930_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E930:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E941_thunk_fn000000000040E450:
	word64 r10_13
	word64 r8_15
	word64 r9_16
	word64 r11_29
	word64 rax_17 = fn000000000040E450(0x000000000061B320, 0xFFFFFFFFFFFFFFFF, rdi, 0x00000000, r10, fs, out r8_15, out r9_16, out r10_13, out r11_29)
	r8Out = r8_15
	r9Out = r9_16
	r10Out = r10_13
	return rax_17
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040E930_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040E970(word64 rdx, word32 esi, word32 edi, word64 r10, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31] esi:[0..31] fs:[0..15] r10:[0..63] rdx:[0..63]
// LiveOut: r10
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi
// Preserved: rbp rbx rsp
fn000000000040E970_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E970:
	fn000000000040D740(esi, fp - 0x0000000000000058)
	word64 r10_33
	word64 r8_58
	word64 r9_59
	word64 r11_60
	fn000000000040E450(fp - 0x0000000000000058, 0xFFFFFFFFFFFFFFFF, rdx, SLICE((uint64) SLICE((uint64) edi, word32, 0), word32, 0), r10, fs, out r8_58, out r9_59, out r10_33, out r11_60)
	return r10_33
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040E970_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040EAB0(word64 rdi, word64 r10, selector fs, ptr64 & r9Out, ptr64 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] rdi:[0..63]
// LiveOut: r10 r8 r9
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi
// Preserved: rsp
fn000000000040EAB0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EAB0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EA00:
	word64 r10_57
	word64 r8_59
	word64 r9_60
	word64 r11_87
	fn000000000040E450(fp - 0x0000000000000048, 0xFFFFFFFFFFFFFFFF, rdi, 0x00000000, r10, fs, out r8_59, out r9_60, out r10_57, out r11_87)
	r9Out = r9_60
	r10Out = r10_57
	return r8_59
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040EAB0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040EBF0(word64 rsi, word32 edi, word64 r10, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31] fs:[0..15] r10:[0..63] rsi:[0..63]
// LiveOut: r10
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi
// Preserved: rsp
fn000000000040EBF0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EBF0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EBFC_thunk_fn000000000040E450:
	word64 r10_9
	word64 r8_22
	word64 r9_23
	word64 r11_24
	fn000000000040E450(0x000000000061A5A0, 0xFFFFFFFFFFFFFFFF, rsi, edi, r10, fs, out r8_22, out r9_23, out r10_9, out r11_24)
	return r10_9
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040EBF0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040EC10(word64 rdi, word64 r10, selector fs, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] rdi:[0..63]
// LiveOut: r10 r11 r8 r9 rax
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi
// Preserved: rsp
fn000000000040EC10_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EC10:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EC21_thunk_fn000000000040E450:
	word64 r10_13
	word64 r11_14
	word64 r8_15
	word64 r9_16
	word64 rax_17 = fn000000000040E450(0x000000000061A5A0, 0xFFFFFFFFFFFFFFFF, rdi, 0x00000000, r10, fs, out r8_15, out r9_16, out r10_13, out r11_14)
	r8Out = r8_15
	r9Out = r9_16
	r10Out = r10_13
	r11Out = r11_14
	return rax_17
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040EC10_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040EC30(word64 rcx, word64 rdx, word32 esi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx:[32..63] rdi:[0..63] rdx:[0..63] rsi:[0..31]
// LiveOut:
// Trashed: SCZO rax rcx rdx
// Preserved: r12 rbp rbx rsp
fn000000000040EC30_entry:
	word32 rcx_32_32 = SLICE(rcx, word32, 32)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EC30:
	word64 rbx_17 = rdx - 0x0000000000000001
	branch rdx == 0x0000000000000000 l000000000040EC69
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EC40:
	word64 rax_21 = __ctype_tolower_loc()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EC50:
	Mem33[rdi + rbx_17:byte] = SLICE((uint64) Mem24[Mem24[rax_21:word64] + SEQ(rcx_32_32, (word32) Mem24[rsi + rbx_17:byte]) * 0x0000000000000004:word32], byte, 0)
	rbx_17 = rbx_17 - 0x0000000000000001
	branch rbx_17 != 0xFFFFFFFFFFFFFFFF l000000000040EC50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EC69:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040EC30_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040EC80(word64 rcx, word64 rdx, word32 esi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx:[32..63] rdi:[0..63] rdx:[0..63] rsi:[0..31]
// LiveOut:
// Trashed: SCZO rax rcx rdx
// Preserved: r12 rbp rbx rsp
fn000000000040EC80_entry:
	word32 rcx_32_32 = SLICE(rcx, word32, 32)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EC80:
	word64 rbx_17 = rdx - 0x0000000000000001
	branch rdx == 0x0000000000000000 l000000000040ECB9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EC90:
	word64 rax_21 = __ctype_toupper_loc()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ECA0:
	Mem33[rdi + rbx_17:byte] = SLICE((uint64) Mem24[Mem24[rax_21:word64] + SEQ(rcx_32_32, (word32) Mem24[rsi + rbx_17:byte]) * 0x0000000000000004:word32], byte, 0)
	rbx_17 = rbx_17 - 0x0000000000000001
	branch rbx_17 != 0xFFFFFFFFFFFFFFFF l000000000040ECA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ECB9:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040EC80_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040ECD0(word64 rcx, word64 rdx, word64 rbx, word64 rbp, word64 rsi, byte dil, word32 rdi_32_32, word64 r8, word64 r9, word64 r12, word64 r13, word64 r14, word64 r15, selector fs, ptr64 & r10Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..7] fs:[0..15] r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] r8:[0..63] r9:[0..63] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi_32_32:[0..31] rdx:[0..63] rsi:[0..63]
// LiveOut: r10 r15 rax
// Trashed: SCZO r10 r11 r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved:
fn000000000040ECD0_entry:
	word32 r9d = SLICE(r9, word32, 0)
	byte dil = SLICE(edi, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ECD0:
	word32 dwLoc04C8_1075
	word64 r12_18 = rsi
	word64 rbx_104 = rcx
	word64 rax_29 = Mem24[r8 + 0x0000000000000030:word64]
	word64 rsi_31 = Mem24[fs:0x00000028:word64]
	word32 esi_41 = SLICE((uint64) Mem32[r8 + 0x0000000000000008:word32], word32, 0)
	branch esi_41 <= 0x0000000C l000000000040EEE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EEE0:
	word32 esi_47 = SLICE((uint64) esi_41, word32, 0)
	word32 eax_51 = 0x0000000C
	branch esi_47 == 0x00000000 l000000000040EEEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EEEB_1:
	eax_51 = esi_47
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EEEE:
	dwLoc04C8_1075 = eax_51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED26:
	dwLoc04C8_1075 = esi_41 - 0x0000000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED2B:
	word64 rax_1205
	byte al_421 = SLICE((word32) Mem61[rcx:byte], byte, 0)
	word64 r13_406 = 0x0000000000000000
	branch al_421 == 0x00 l000000000040F053
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED39:
	word32 rsi_32_32_666 = SLICE(fp - 0x0000000000000447, word32, 32)
	word64 r9_1271 = r9
	word64 rdi_1276 = SEQ(rdi_32_32, edi)
	r15_204 = r15
	r8_408 = r8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED85:
	word64 r8_408
	word64 r15_204
	word32 rdi_32_32_715 = SLICE(rdi_1276, word32, 32)
	word32 r9_32_32_698 = SLICE(r9_1271, word32, 32)
	word32 rcx_32_32_552 = SLICE(rcx, word32, 32)
	branch al_421 != 0x25 l000000000040ED50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED50:
	branch rdx - r13_406 <=u 0x0000000000000001 l000000000040EE98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED60:
	branch r12_18 == 0x0000000000000000 l000000000040ED6D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED65:
	Mem87[r12_18:byte] = al_421
	r12_18 = r12_18 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED6D:
	r13_406 = r13_406 + 0x0000000000000001
	r8_408 = rbx_104
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED89:
	word64 rax_563 = 0x0000000000000000
	word32 r11d_101 = 0x00000000
	word64 r9_1286 = SEQ(r9_32_32_698, (word32) dil)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED94:
	rbx_104 = rbx_104 + 0x0000000000000001
	word32 edi_107 = (word32) Mem97[rbx_104:byte]
	byte dil_108 = SLICE(edi_107, byte, 0)
	word32 r9_32_32_697 = SLICE(r9_1286, word32, 32)
	word64 r9_354 = SLICE(r9_1286, word32, 0)
	byte SZO_111 = SLICE(cond(dil_108 - 0x30), bool, 4)
	word64 rdi_1314 = SEQ(SEQ(rdi_32_32_715, SLICE(edi_107, word24, 8)), dil_108)
	branch dil_108 == 0x30 l000000000040EDC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EDA1:
	word56 rdi_56_8_591 = SLICE(rdi_1314, word56, 8)
	word32 rdi_32_32_594 = SLICE(rdi_56_8_591, word32, 32)
	rdi_32_32_715 = SLICE(rdi_56_8_591, word32, 32) (alias)
	rdi_32_32_715 = SLICE(rdi_56_8_591, word32, 32) (alias)
	rdi_32_32_715 = SLICE(rdi_56_8_591, word32, 32) (alias)
	rdi_32_32_715 = SLICE(rdi_56_8_591, word32, 32) (alias)
	dil_108 = SLICE(rdi_1314, byte, 0) (alias)
	branch SZO_111 l000000000040EDD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EDD0:
	branch dil_108 != 0x5E l000000000040EE70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE70:
	branch dil_108 != 0x5F l000000000040EDEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE7A:
	r11d_101 = (int32) dil_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EDDA:
	r9_1286 = 0x0000000000000001 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EDA3:
	branch dil_108 != 0x23 l000000000040EDE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EDE8:
	branch dil_108 == 0x2D l000000000040EDC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EDEE:
	word64 rdx_126 = (uint64) ((int32) dil_108 - 0x00000030)
	word32 rdx_32_32_150 = SLICE(rdx_126, word32, 32)
	word64 rbp_1283 = 0x00000000FFFFFFFF
	word64 rdi_1305 = rdi_1314
	branch SLICE(rdx_126, word32, 0) >u 0x00000009 l000000000040EE40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EDFF:
	word64 rbp_1280 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE28:
	word64 rbp_1301
	word32 rbp_32_32_146 = SLICE(rbp_1280, word32, 32)
	word32 ebp_134 = SLICE(rbp_1280, word32, 0)
	branch ebp_134 <= 0x0CCCCCCC l000000000040EE08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE08:
	word32 edx_139 = (int32) Mem97[rbx_104:byte]
	byte dl_141 = SLICE(edx_139, byte, 0)
	word64 rdx_149 = SEQ(rdx_32_32_150, edx_139)
	word56 rdx_56_8_153 = SEQ(rdx_32_32_150, SLICE(edx_139, word24, 8))
	branch ebp_134 == 0x0CCCCCCC l000000000040EE88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE88:
	rdx_149 = SEQ(rdx_56_8_153, dl_141) (alias)
	branch dl_141 <= 0x37 l000000000040EE0D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE8D:
	rbp_1301 = 0x000000007FFFFFFF (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE0D:
	rbp_1301 = SEQ(rbp_32_32_146, rdx_149 - 0x0000000000000030 + SEQ(rcx_32_32_552, rbp_1280 * 0x0000000000000005) * 0x0000000000000002) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE30:
	rbp_1301 = 0x000000007FFFFFFF (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE15:
	rbx_104 = rbx_104 + 0x0000000000000001
	word32 edi_165 = (word32) Mem97[rbx_104:byte]
	byte dil_166 = SLICE(edi_165, byte, 0)
	word64 rdx_168 = (uint64) ((int32) dil_166 - 0x00000030)
	rdx_32_32_150 = SLICE(rdx_168, word32, 32) (alias)
	rbp_1280 = rbp_1301 (alias)
	rbp_1283 = rbp_1301 (alias)
	rdi_1305 = SEQ(SEQ(rdi_32_32_594, SLICE(edi_165, word24, 8)), dil_166) (alias)
	branch SLICE(rdx_168, word32, 0) >u 0x00000009 l000000000040EE40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE40:
	word64 rdi_1291
	word64 rcx_175
	word56 rdi_56_8_589 = SLICE(rdi_1305, word56, 8)
	word32 rdi_32_32_598 = SLICE(rdi_56_8_589, word32, 32)
	rdi_32_32_598 = SLICE(rdi_56_8_589, word32, 32) (alias)
	word32 ebp_220 = SLICE(rbp_1283, word32, 0)
	byte dil_172 = SLICE(rdi_1305, byte, 0)
	branch dil_172 == 0x45 l000000000040EEC8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE4A:
	rcx_175 = 0x0000000000000000
	rcx_32_32_552 = 0x00000000 (alias)
	rdi_1291 = rdi_1305 (alias)
	branch dil_172 == 0x4F l000000000040EEC8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EEC8:
	rbx_104 = rbx_104 + 0x0000000000000001
	word32 edi_190 = (word32) Mem97[rbx_104:byte]
	rcx_175 = SEQ(rcx_32_32_552, (int32) dil_172) (alias)
	rdi_1291 = SEQ(SEQ(rdi_32_32_598, SLICE(edi_190, word24, 8)), SLICE(edi_190, byte, 0)) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE52:
	word56 rdi_56_8_588 = SLICE(rdi_1291, word56, 8)
	byte dil_191 = SLICE(rdi_1291, byte, 0)
	word32 rdi_32_32_729 = SLICE(rdi_56_8_588, word32, 32)
	word24 edi_24_8_1240 = SLICE(rdi_56_8_588, word24, 8)
	word64 rsi_540 = SEQ(rsi_32_32_666, (int32) dil_191)
	word64 r11_613 = (uint64) (uint32) r11d_101
	branch dil_191 >u 0x7A l000000000040FF4D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040FF4D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F39F:
	word64 rcx_212
	word32 edi_1241 = SEQ(edi_24_8_1240, dil_191)
	branch dil_191 != 0x25 l000000000040F0B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F0B2:
	word64 rax_201 = rbx_104 - 0x0000000000000001
	word32 ecx_206 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F0C1:
	r15_204 = rax_201
	rax_201 = rax_201 - 0x0000000000000001
	ecx_206 = SLICE((uint64) (ecx_206 + 0x00000001), word32, 0) (alias)
	branch Mem97[rax_201 + 0x0000000000000001:byte] != 0x25 l000000000040F0C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F0D1:
	rcx_212 = (int64) ecx_206
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F3A9:
	r15_204 = rbx_104
	rcx_212 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F0D7:
	byte al_242 = 0x00
	word48 rax_48_16_248 = 0x000000000000
	branch ebp_220 < 0x00000000 l000000000040F0E1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F0DE_1:
	al_242 = SLICE(ebp_220, byte, 0) (alias)
	rax_48_16_248 = (uint48) (uint16) SLICE(ebp_220, word16, 16) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F0E1:
	word64 rax_253 = SEQ(rax_48_16_248, (int16) al_242)
	word64 rbx_255 = rax_253
	branch rcx_212 <u rax_253 l000000000040F0ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F0E9_1:
	rbx_255 = rcx_212
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F0ED:
	branch rbx_255 >=u rdx - r13_406 l000000000040EE98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE98:
	rax_1205 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F0F9:
	word64 rdi_1311 = SEQ(rdi_32_32_729, edi_1241)
	branch r12_18 == 0x0000000000000000 l000000000040F16E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F0FE:
	branch rax_253 <=u rcx_212 l000000000040F144
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F103:
	qwLoc04D8 = rcx_212
	word64 rbp_328 = (int64) ebp_220 - rcx_212
	branch r11d_101 == 0x00000030 l000000000040F1C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F1C1:
	memset(r12_18, 0x0000000000000030, rbp_328)
	r9_354 = (uint64) r9_354
	r12_18 = r12_18 + rbp_328
	r9_32_32_697 = SLICE(r9_354, word32, 32) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F125:
	memset(r12_18, 0x0000000000000020, rbp_328)
	r9_354 = (uint64) r9_354
	r12_18 = r12_18 + rbp_328
	r9_32_32_697 = SLICE(r9_354, word32, 32) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F144:
	dwLoc04E0 = SLICE(rbx_104, word32, 0) (alias)
	qwLoc04F0 = rcx_212
	rsi_32_32_666 = SLICE(r15_204, word32, 32) (alias)
	rsi_32_32_666 = SLICE(r15_204, word32, 32) (alias)
	branch SLICE(r9_354, byte, 0) == 0x00 l000000000040F180
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F180:
	memcpy(r12_18, r15_204, rcx_212)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F15C:
	fn000000000040EC80(rcx_212, rcx_212, r15_204, r12_18)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F16B:
	r12_18 = r12_18 + rcx_212
	r9_1286 = SEQ(r9_32_32_697, r9_354) (alias)
	rdi_1311 = r12_18 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F16E:
	r8_408 = rbx_104
	r13_406 = r13_406 + rbx_255
	r9_1271 = r9_1286 (alias)
	rcx = rcx_212 (alias)
	rdi_1276 = rdi_1311 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED74:
	al_421 = SLICE((word32) Mem411[r8_408 + 0x0000000000000001:byte], byte, 0) (alias)
	rbx_104 = r8_408 + 0x0000000000000001
	branch al_421 == 0x00 l000000000040F050
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F050:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F053:
	branch r12_18 == 0x0000000000000000 l000000000040F191
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F05C:
	branch rdx == 0x0000000000000000 l000000000040F191
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F191:
	rax_1205 = r13_406
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F065:
	Mem450[r12_18:byte] = 0x00
	rax_1205 = r13_406
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE9A:
	branch (rsi_31 ^ Mem460[fs:0x00000028:word64]) != 0x0000000000000000 l00000000004105EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004105EA:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EEB1:
	r10Out = rdx
	r15Out = r15
	return rax_1205
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE60:
	word64 rdx_513 = SEQ(rdx_32_32_150, (word32) dil_191)
	word64 r10_530
	word64 rax_568
	call Mem97[rdx_513 * 0x0000000000000008 + 0x004164E8:word64] (retsize: 8;)
		uses: r10:rdx,r11:r11_613,r8:r8_693,r9:r9_1290,rax:rax_563,rcx:rcx_551,rdi:rdi_1293,rdx:rdx_513,rsi:rsi_540,Stack +0017:dil,Stack +0018:r8,Stack +0020:qwLoc04F0_1129,Stack +0028:fp - 0x0000000000000447,Stack +0030:dwLoc04E0_1114,Stack +0038:qwLoc04D8_1099,Stack +0048:dwLoc04C8_1075,Stack +004C:r9d,Stack +0050:rax_29,Stack +04D0:rsi_31,Stack +04E0:rbx,Stack +04E8:rbp,Stack +04F0:r12,Stack +04F8:r13,Stack +0500:r14,Stack +0508:r15
		defs: r10:r10_530,rax:rax_568
	r10Out = r10_530
	r15Out = r15_204
	return rax_568
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040ECD0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EDA9:
	rbx_104 = rbx_104 + 0x0000000000000001
	word32 edi_617 = (word32) Mem97[rbx_104:byte]
	dil_108 = SLICE(edi_617, byte, 0) (alias)
	rax_563 = 0x0000000000000001
	SZO_111 = SLICE(cond(dil_108 - 0x30), bool, 4) (alias)
	rdi_1314 = SEQ(SEQ(rdi_32_32_715, SLICE(edi_617, word24, 8)), dil_108) (alias)
	branch dil_108 != 0x30 l000000000040EDA1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EDBB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EDC0:
	r11d_101 = (int32) dil_108
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000410600(word64 rcx, word64 rdx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word32 r8d, word64 r12, word64 r13, word64 r14, word64 r15, selector fs, ptr64 & r10Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] r8d:[0..31] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r10 r15 rax
// Trashed: SCZO r10 r11 r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi
// Preserved: rsp
fn0000000000410600_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410600:
	word64 r10_28
	word64 r15_38
	word64 rax_30 = fn000000000040ECD0(rdx, rsi, rbx, rbp, rdi, 0x00000000, 0x00000000, rcx, (uint64) r8d, r12, r13, r14, r15, fs, out r10_28, out r15_38)
	r10Out = r10_28
	r15Out = r15_38
	return rax_30
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410600_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000410630(word64 rcx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r9, word64 r10, word64 r12, word64 r13, word64 r14, word64 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..63] r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] r9:[0..63] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO r10 r12 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved: r13 r14 r15
fn0000000000410630_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410630:
	word64 r9_128
	branch rsi == 0x0000000000000000 l0000000000410A30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410A30:
	__fprintf_chk(rdi, 0x0000000000000001, 0x00000000004168CC, 0x00000000)
	r9_128 = r9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410650:
	__fprintf_chk(rdi, 0x0000000000000001, 0x00000000004168C0, 0x00000000)
	r9_128 = rcx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041066A:
	word64 rax_56 = dcgettext(0x0000000000000000, 0x00000000004168D3, 0x0000000000000005)
	__fprintf_chk(rdi, 0x0000000000000001, 0x0000000000416BA0, 0x00000000)
	word64 rax_68 = dcgettext(0x0000000000000000, 0x0000000000416930, 0x0000000000000005)
	word64 rax_136 = SEQ(SLICE(rax_68, word32, 32), fputs_unlocked(rax_68, rdi))
	branch r9 >u 0x0000000000000009 l0000000000410A50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410A50:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004107A1:
	__fprintf_chk(rdi, 0x0000000000000001, dcgettext(0x0000000000000000, 0x0000000000416B08, 0x0000000000000005), 0x00000000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004106BE:
	call Mem24[0x0000000000416B48:word64] (retsize: 8;)
		uses: r10:r10,r8:0x00000000000007DD,r9:r9_128,rax:rax_136,rcx:rax_56,rdi:rax_68,rdx:0x0000000000000005,rsi:rdi,Stack +0008:qwLoc88,Stack +0010:qwLoc80,Stack +0018:qwLoc78,Stack +0020:qwLoc70,Stack +0028:qwLoc68,Stack +0030:qwLoc60,Stack +0038:qwLoc58,Stack +0040:qwLoc50,Stack +0048:qwLoc48,Stack +0050:qwLoc40,Stack +0060:rbx,Stack +0068:rbp,Stack +0070:r12,Stack +0078:r13,Stack +0080:r14,Stack +0088:r15
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410630_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000410AC0(word64 rcx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r8, word64 r12, word64 r13, word64 r14, word64 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] r8:[0..63] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO r10 r12 r8 r9 rax rbp rbx rcx rdi rdx rsi
// Preserved: rsp
fn0000000000410AC0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410AC0:
	word64 r9_23 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410AF3:
	word64 r10_15
	word32 eax_11 = SLICE((uint64) Mem9[r8:word32], word32, 0)
	branch eax_11 <u 0x00000030 l0000000000410AD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410AD0:
	r10_15 = (uint64) eax_11 + Mem9[r8 + 0x0000000000000010:word64]
	Mem18[r8:word32] = SLICE((uint64) (eax_11 + 0x00000008), word32, 0)
	word64 rax_19 = Mem18[r10_15:word64]
	Mem24[fp - 0x0000000000000058 + r9_23 * 0x0000000000000008:word64] = rax_19
	branch rax_19 == 0x0000000000000000 l0000000000410B18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410AFB:
	r10_15 = Mem9[r8 + 0x0000000000000008:word64]
	Mem28[r8 + 0x0000000000000008:word64] = r10_15 + 0x0000000000000008
	word64 rax_29 = Mem28[r10_15:word64]
	Mem32[fp - 0x0000000000000058 + r9_23 * 0x0000000000000008:word64] = rax_29
	branch rax_29 != 0x0000000000000000 l0000000000410AE9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410AE9:
	r9_23 = r9_23 + 0x0000000000000001
	branch r9_23 == 0x000000000000000A l0000000000410B18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410B13:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410B18:
	fn0000000000410630(rcx, rbx, rbp, rsi, rdi, r9_23, r10_15, r12, r13, r14, r15)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410AC0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000410B30(byte al, word64 rcx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r12, word64 r13, word64 r14, word64 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO r10 r12 r8 r9 rax rbp rbx rcx rdi rdx rsi
// Preserved: rsp
fn0000000000410B30_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410B30:
	branch al == 0x00 l0000000000410B7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410B45:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410B7C:
	fn0000000000410AC0(rcx, rbx, rbp, rsi, rdi, fp - 0x00000000000000D0, r12, r13, r14, r15)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410B30_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000410C40(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax
// Preserved: rbx rsp
fn0000000000410C40_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410C40:
	word64 rax_9 = malloc(rdi)
	branch rax_9 == 0x0000000000000000 l0000000000410C50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410C50:
	branch rdi == 0x0000000000000000 l0000000000410C4E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410C55:
	fn0000000000410E50()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410C4E:
	return rax_9
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410C40_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000410C90(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax
// Preserved: rbx rsi rsp
fn0000000000410C90_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410C90:
	branch rsi == 0x0000000000000000 l0000000000410CB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410CB0:
	branch rdi == 0x0000000000000000 l0000000000410C99
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410CB5:
	free(rdi)
	return 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410C99:
	word64 rax_25 = realloc(rdi, rsi)
	branch rax_25 == 0x0000000000000000 l0000000000410CBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410CBE:
	branch rsi == 0x0000000000000000 l0000000000410CA6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410CC3:
	fn0000000000410E50()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410CA6:
	return rax_25
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410C90_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000410E00(word64 rsi, word64 rdi, ptr64 & rsiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax rsi
// Trashed: SCZO rax rdi rdx rsi
// Preserved: rbp rbx rsp
fn0000000000410E00_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410E00:
	word64 rax_30 = memcpy(fn0000000000410C40(rsi), rdi, rsi)
	rsiOut = rdi
	return rax_30
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410E00_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000410E30(word32 rax_32_32, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rax_32_32:[0..31] rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdi rdx rsi
// Preserved: rbx rsp
fn0000000000410E30_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410E30:
	word64 rax_11 = SEQ(rax_32_32, strlen(rdi))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410E41_thunk_fn0000000000410E00:
	word64 rsi_24
	return fn0000000000410E00(rax_11 + 0x0000000000000001, rdi, out rsi_24)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410E30_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000410E50()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
// Terminates process
fn0000000000410E50_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410E50_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410E50:
	dcgettext(0x0000000000000000, 0x0000000000416BCF, 0x0000000000000005)
	error((uint64) Mem0[0x000000000061A580:word32], 0x0000000000000000, 0x0000000000415E54, 0x00000000)
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000000000410E90(word64 rcx, word32 edx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r8, word32 r9_32_32, word64 r12, word64 r13, word64 r14, word64 r15, ptr64 & rbxOut, ptr64 & rspOut, ptr64 & rbpOut, ptr64 & r9Out, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r14Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx:[0..31] r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] r8:[0..63] r9_32_32:[0..31] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut: r12 r13 r14 r15 r9 rax rbp rbx rsp
// Trashed: SCZO r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved:
fn0000000000410E90_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410E90:
	word32 r14d_68 = SLICE((uint64) edx, word32, 0)
	branch edx >u 0x00000024 l00000000004112B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004112B0:
	__assert_fail(0x0000000000416BF0, 0x0000000000416BE0, 0x0000000000000060, 0x0000000000416DC8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410EAA:
	word64 r15_34 = rsi
	branch rsi != 0x0000000000000000 l0000000000410EC2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410EBE_1:
	r15_34 = fp - 0x0000000000000040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410EC2:
	byte bl_317 = SLICE((word32) Mem22[rdi:byte], byte, 0)
	word64 rdx_47 = Mem22[__ctype_b_loc():word64]
	word64 rax_49 = rdi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410EDF:
	word64 r9_54 = SEQ(r9_32_32, (word32) bl_317)
	branch (Mem22[rdx_47 + 0x0000000000000001 + r9_54 * 0x0000000000000002:byte] & 0x20) != 0x00 l0000000000410ED8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410ED8:
	rax_49 = rax_49 + 0x0000000000000001
	bl_317 = SLICE((word32) Mem22[rax_49:byte], byte, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410EEB:
	word64 rax_214
	branch bl_317 != 0x2D l0000000000410F08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410F08:
	word32 ebp_120
	word32 edx_150
	word64 rax_65 = __errno_location()
	Mem70[rax_65:word32] = 0x00000000
	word64 rax_82 = SEQ(SLICE(rax_65, word32, 32), strtoul(rdi, r15_34, (uint64) r14d_68))
	word32 rsi_32_32_104 = SLICE(r15_34, word32, 32)
	word32 dwLoc4C_376 = SLICE(rax_65, word32, 32)
	word64 r14_80 = Mem78[r15_34:word64]
	word64 rbx_103 = rax_82
	branch r14_80 == rdi l0000000000410FE7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410FE7:
	branch r8 == 0x0000000000000000 l0000000000410EF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410FF0:
	word32 edx_92 = (word32) Mem78[rdi:byte]
	byte dl_93 = SLICE(edx_92, byte, 0)
	branch dl_93 == 0x00 l0000000000410EF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410FFC:
	ebp_120 = 0x00000000 (alias)
	rbx_103 = 0x0000000000000001
	edx_150 = SLICE((uint64) edx_92, word32, 0) (alias)
	branch strchr(r8, SEQ(rsi_32_32_104, (int32) dl_93)) != 0x0000000000000000 l0000000000410F94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041101F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410F3A:
	word32 eax_112 = SLICE((uint64) Mem78[rax_65:word32], word32, 0)
	branch eax_112 != 0x00000000 l0000000000410F68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410F68:
	ebp_120 = 0x00000001 (alias)
	branch eax_112 != 0x00000022 l0000000000410EF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410F76:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410F40:
	ebp_120 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410F42:
	branch r8 == 0x0000000000000000 l0000000000410F4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410F47:
	word32 edx_129 = (word32) Mem78[r14_80:byte]
	byte dl_130 = SLICE(edx_129, byte, 0)
	branch dl_130 != 0x00 l0000000000410F78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410F78:
	edx_150 = SLICE((uint64) edx_129, word32, 0) (alias)
	branch strchr(r8, SEQ(rsi_32_32_104, (int32) dl_130)) == 0x0000000000000000 l0000000000411028
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410F94:
	word64 rcx_177
	word64 rax_169
	word32 edx_183 = SLICE((uint64) edx_150, word32, 0)
	word64 qwLoc50_378 = SEQ(dwLoc4C_376, edx_150)
	branch strchr(r8, 0x0000000000000030) == 0x0000000000000000 l0000000000410FCB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410FAE:
	byte al_162 = SLICE((word32) Mem154[r14_80 + 0x0000000000000001:byte], byte, 0)
	branch al_162 == 0x44 l0000000000411262
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410FBB:
	branch al_162 == 0x69 l000000000041124A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041124A:
	word64 rcx_173 = (uint64) (uint8) (Mem154[r14_80 + 0x0000000000000002:byte] == 0x42)
	rax_169 = 0x0000000000000400
	rcx_177 = (uint64) (uint32) (rcx_173 + 0x0000000000000001 + rcx_173) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410FC3:
	branch al_162 == 0x42 l0000000000411262
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411262:
	rcx_177 = 0x0000000000000002
	rax_169 = 0x00000000000003E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410FCB:
	rcx_177 = 0x0000000000000001
	rax_169 = 0x0000000000000400
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410FD5:
	word64 rdx_185 = (uint64) (edx_183 - 0x00000042)
	byte dl_186 = SLICE(rdx_185, byte, 0)
	word32 rdx_32_32_219 = SLICE(rdx_185, word32, 32)
	word64 rbp_247 = (uint64) (uint32) ebp_120
	branch dl_186 >u 0x35 l0000000000411028
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411028:
	Mem212[rcx:word64] = rbx_103
	rax_214 = (uint64) (SLICE((uint64) ebp_120, word32, 0) | 0x00000002)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410FDD:
	word64 rdx_220 = SEQ(rdx_32_32_219, (word32) dl_186)
	word64 rax_249
	word64 r9_275
	call Mem154[rdx_220 * 0x0000000000000008 + 0x00416C18:word64] (retsize: 8;)
		uses: r8:r8,r9:r9_54,rax:rax_248,rcx:rcx_258,rdi:r8,rdx:rdx_220,rsi:0x0000000000000030,Stack +0010:qwLoc50_378,Stack +0014:dwLoc4C_376,Stack +0030:rbx,Stack +0038:rbp,Stack +0040:r12,Stack +0048:r13,Stack +0050:r14,Stack +0058:r15
		defs: r9:r9_275,rax:rax_249
	rbxOut = rbx_103
	rspOut = fp - 0x0000000000000058
	rbpOut = rbp_247
	r9Out = r9_275
	r12Out = r8
	r13Out = rcx
	r14Out = r14_80
	r15Out = r15_34
	return (word32) rax_249
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410F4F:
	Mem279[rcx:word64] = rax_82
	rbxOut = rbx
	rspOut = fp
	rbpOut = rbp
	r9Out = r9_54
	r12Out = r12
	r13Out = r13
	r14Out = r14
	r15Out = r15
	return (word32) (uint64) ebp_120
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410EF0:
	rax_214 = 0x0000000000000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410EF5:
	rbxOut = rbx
	rspOut = fp
	rbpOut = rbp
	r9Out = r9_54
	r12Out = r12
	r13Out = r13
	r14Out = r14
	r15Out = r15
	return (word32) rax_214
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410E90_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00000000004112D0(word32 esi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31] esi:[0..31]
// LiveOut:
// Trashed:
// Preserved: rsp
// Terminates process
fn00000000004112D0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00000000004112D0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004112D0:
	word64 rsi_25
	word32 r10d_36 = SLICE((int64) esi, word32, 0)
	word32 ebp_75 = SLICE((uint64) Mem18[0x000000000061A580:word32], word32, 0)
	branch edi >u 0x00000003 l000000000041133B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041133B:
	rsi_25 = 0x0000000000416DD1
	branch edi == 0x00000004 l00000000004112FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411345:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004112EB:
	branch edi >=u 0x00000002 l0000000000411334
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411334:
	rsi_25 = 0x0000000000416E10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004112F0:
	rsi_25 = 0x0000000000416DEC
	branch SLICE((uint64) (edi - 0x00000001), word32, 0) != 0x00000000 l000000000041132F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004112FA:
	branch r10d_36 < 0x00000000 l0000000000411347
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411347:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004112FF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041130C:
	error((uint64) ebp_75, 0x0000000000000000, dcgettext(0x0000000000000000, rsi_25, 0x0000000000000005), 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041132F:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000000000411360(word64 rcx, word32 edx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r8, word32 r9_32_32, word64 r12, word64 r13, word64 r14, word64 r15, ptr64 & rbxOut, ptr64 & rspOut, ptr64 & ebpOut, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r14Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx:[0..31] r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] r8:[0..63] r9_32_32:[0..31] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut: r12 r13 r14 r15 r8 r9 rax rbp rbx rsp
// Trashed: SCZO r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved:
fn0000000000411360_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411360:
	word32 r14d_69 = SLICE((uint64) edx, word32, 0)
	branch edx >u 0x00000024 l0000000000411788
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411788:
	__assert_fail(0x0000000000416BF0, 0x0000000000416BE0, 0x0000000000000060, 0x0000000000416FE8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041137A:
	word64 r15_34 = rsi
	branch rsi != 0x0000000000000000 l0000000000411392
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041138E_1:
	r15_34 = fp - 0x0000000000000040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411392:
	byte bl_316 = SLICE((word32) Mem22[rdi:byte], byte, 0)
	word64 rdx_47 = Mem22[__ctype_b_loc():word64]
	word64 rax_49 = rdi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004113AF:
	word64 r9_54 = SEQ(r9_32_32, (word32) bl_316)
	branch (Mem22[rdx_47 + 0x0000000000000001 + r9_54 * 0x0000000000000002:byte] & 0x20) != 0x00 l00000000004113A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004113A8:
	rax_49 = rax_49 + 0x0000000000000001
	bl_316 = SLICE((word32) Mem22[rax_49:byte], byte, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004113BB:
	word64 rax_215
	branch bl_316 != 0x2D l00000000004113D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004113D8:
	word32 ebp_121
	word32 edx_151
	word64 rax_65 = __errno_location()
	Mem71[rax_65:word32] = 0x00000000
	word64 rax_83 = SEQ(SLICE(rax_65, word32, 32), __strtoul_internal(rdi, r15_34, (uint64) r14d_69, 0x0000000000000000))
	word32 rsi_32_32_105 = SLICE(r15_34, word32, 32)
	word32 dwLoc4C_375 = SLICE(rax_65, word32, 32)
	word64 r14_81 = Mem79[r15_34:word64]
	word64 rbx_104 = rax_83
	r8 = rax_65
	branch r14_81 == rdi l00000000004114BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004114BF:
	branch r8 == 0x0000000000000000 l00000000004113C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004114C8:
	word32 edx_93 = (word32) Mem79[rdi:byte]
	byte dl_94 = SLICE(edx_93, byte, 0)
	branch dl_94 == 0x00 l00000000004113C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004114D4:
	ebp_121 = 0x00000000 (alias)
	rbx_104 = 0x0000000000000001
	edx_151 = SLICE((uint64) edx_93, word32, 0) (alias)
	branch strchr(r8, SEQ(rsi_32_32_105, (int32) dl_94)) != 0x0000000000000000 l000000000041146C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004114F7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041140C:
	word32 eax_113 = SLICE((uint64) Mem79[rax_65:word32], word32, 0)
	branch eax_113 != 0x00000000 l0000000000411440
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411440:
	ebp_121 = 0x00000001 (alias)
	branch eax_113 != 0x00000022 l00000000004113C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041144E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411413:
	ebp_121 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411415:
	branch r8 == 0x0000000000000000 l0000000000411422
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041141A:
	word32 edx_130 = (word32) Mem79[r14_81:byte]
	byte dl_131 = SLICE(edx_130, byte, 0)
	branch dl_131 != 0x00 l0000000000411450
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411450:
	edx_151 = SLICE((uint64) edx_130, word32, 0) (alias)
	branch strchr(r8, SEQ(rsi_32_32_105, (int32) dl_131)) == 0x0000000000000000 l0000000000411500
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041146C:
	word64 rcx_178
	word64 rax_170
	word32 edx_184 = SLICE((uint64) edx_151, word32, 0)
	word64 qwLoc50_377 = SEQ(dwLoc4C_375, edx_151)
	branch strchr(r8, 0x0000000000000030) == 0x0000000000000000 l00000000004114A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411486:
	byte al_163 = SLICE((word32) Mem155[r14_81 + 0x0000000000000001:byte], byte, 0)
	branch al_163 == 0x44 l000000000041173A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411493:
	branch al_163 == 0x69 l0000000000411722
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411722:
	word64 rcx_174 = (uint64) (uint8) (Mem155[r14_81 + 0x0000000000000002:byte] == 0x42)
	rax_170 = 0x0000000000000400
	rcx_178 = (uint64) (uint32) (rcx_174 + 0x0000000000000001 + rcx_174) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041149B:
	branch al_163 == 0x42 l000000000041173A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041173A:
	rcx_178 = 0x0000000000000002
	rax_170 = 0x00000000000003E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004114A3:
	rcx_178 = 0x0000000000000001
	rax_170 = 0x0000000000000400
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004114AD:
	word64 rdx_186 = (uint64) (edx_184 - 0x00000042)
	byte dl_187 = SLICE(rdx_186, byte, 0)
	word32 rdx_32_32_220 = SLICE(rdx_186, word32, 32)
	branch dl_187 >u 0x35 l0000000000411500
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411500:
	Mem213[rcx:word64] = rbx_104
	rax_215 = (uint64) (SLICE((uint64) ebp_121, word32, 0) | 0x00000002)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004114B5:
	word64 rdx_221 = SEQ(rdx_32_32_220, (word32) dl_187)
	word64 rax_250
	word64 r8_268
	word64 r9_274
	call Mem155[rdx_221 * 0x0000000000000008 + 0x00416E38:word64] (retsize: 8;)
		uses: r8:rax_65,r9:r9_54,rax:rax_249,rcx:rcx_259,rdi:r8,rdx:rdx_221,rsi:0x0000000000000030,Stack +0010:qwLoc50_377,Stack +0014:dwLoc4C_375,Stack +0030:rbx,Stack +0038:rbp,Stack +0040:r12,Stack +0048:r13,Stack +0050:r14,Stack +0058:r15
		defs: r8:r8_268,r9:r9_274,rax:rax_250
	rbxOut = rbx_104
	rspOut = fp - 0x0000000000000058
	ebpOut = <invalid>
	r8Out = r8_268
	r9Out = r9_274
	r12Out = r8
	r13Out = rcx
	r14Out = r14_81
	r15Out = r15_34
	return (word32) rax_250
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411422:
	Mem278[rcx:word64] = rax_83
	rbxOut = rbx
	rspOut = fp
	ebpOut = <invalid>
	r8Out = rax_65
	r9Out = r9_54
	r12Out = r12
	r13Out = r13
	r14Out = r14
	r15Out = r15
	return (word32) (uint64) ebp_121
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004113C0:
	rax_215 = 0x0000000000000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004113C5:
	rbxOut = rbx
	rspOut = fp
	ebpOut = <invalid>
	r8Out = r8
	r9Out = r9_54
	r12Out = r12
	r13Out = r13
	r14Out = r14
	r15Out = r15
	return (word32) rax_215
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000411360_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00000000004117B0(word64 rsi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..31] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rsp
fn00000000004117B0_entry:
	word32 edi = SLICE(rdi, word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004117B0:
	word64 rax_10
	branch edi == 0x00000000 l0000000000411800
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411800:
	Mem9[__errno_location():word32] = 0x0000005F
	rax_10 = 0x00000000FFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004117B8:
	bool Z_13 = SLICE(cond(edi - 0x0000000A), bool, 2)
	rax_10 = (uint64) edi
	branch edi == 0x0000000A l00000000004117C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004117C8:
	word64 rdx_16 = Mem0[rsi:word64]
	word64 rdi_17 = 0x00000000004137B1
	word64 rcx_18 = 0x000000000000000A
	word64 rsi_19 = rdx_16
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004117D8:
	branch rcx_18 == 0x0000000000000000 l00000000004117DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004117D8_1:
	Z_13 = SLICE(cond(Mem0[rsi_62:byte] - Mem0[rdi_63:byte]), bool, 2) (alias)
	rsi_19 = rsi_62 + 0x0000000000000001
	rdi_17 = rdi_63 + 0x0000000000000001
	rcx_18 = rcx_18 - 0x0000000000000001
	rsi_62 = rsi_19
	rdi_63 = rdi_17
	branch Mem0[rsi_62:byte] != Mem0[rdi_63:byte] l00000000004117D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004117DA:
	branch Z_13 l00000000004117BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004117DC:
	freecon(rdx_16)
	Mem35[__errno_location():word32] = 0x0000003D
	rax_10 = 0x00000000FFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004117BF:
	return (word32) rax_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00000000004117B0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000000000411820(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rbx rsp
fn0000000000411820_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411820:
	word64 rdi_11 = (uint64) getfilecon(rdi, rsi)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041182F_thunk_fn00000000004117B0:
	return (word32) (uint64) (uint32) fn00000000004117B0(rsi, rdi_11)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000411820_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000000000411840(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rbx rsp
fn0000000000411840_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411840:
	word64 rdi_11 = (uint64) lgetfilecon(rdi, rsi)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041184F_thunk_fn00000000004117B0:
	return (word32) (uint64) (uint32) fn00000000004117B0(rsi, rdi_11)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000411840_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000411880(word32 rax_32_32, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rax_32_32:[0..31] rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax rdx rsi
// Preserved: r12 rbp rbx rdi rsp
fn0000000000411880_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411880:
	word32 eax_14 = __fpending(rdi)
	word32 ebx_27 = SLICE((uint64) Mem13[rdi:word32], word32, 0)
	word64 rax_18 = SEQ(rax_32_32, eax_14)
	word32 eax_29 = SLICE(fn0000000000411D30(rax_32_32, rdi), word32, 0)
	branch SLICE((uint64) (ebx_27 & 0x00000020), word32, 0) != 0x00000000 l00000000004118C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004118C0:
	branch eax_29 != 0x00000000 != 0x00 l00000000004118B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004118C9:
	Mem42[__errno_location():word32] = 0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004118A6:
	branch eax_29 != 0x00000000 == 0x00 l00000000004118B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004118AA:
	branch rax_18 == 0x0000000000000000 l00000000004118E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004118E0:
	__errno_location()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004118B4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000411880_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000411900(selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15]
// LiveOut: rcx
// Trashed: SCZO rcx rdi
// Preserved: fs r10 r12 r13 r14 r15 rbp rbx rdx rsi rsp
fn0000000000411900_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411900:
	word64 rax_24 = Mem21[fs:0x00000028:word64]
	word64 rax_27 = nl_langinfo(0x000000000000000E)
	word64 r14_28 = Mem25[0x000000000061B358:word64]
	word64 rbx_31 = rax_27
	branch rax_27 != 0x0000000000000000 l0000000000411944
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411940_1:
	rbx_31 = 0x0000000000416919
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411944:
	word32 rax_32_32_454 = 0x00000000
	branch r14_28 != 0x0000000000000000 l000000000041196A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411949:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004119D4:
	word32 dwLocD0_601
	word64 r12_54
	word64 r13_65
	word64 rax_56
	word64 rax_40 = getenv(0x0000000000417002)
	word32 rax_32_32_50 = SLICE(rax_40, word32, 32)
	word64 r15_43 = rax_40
	branch rax_40 == 0x0000000000000000 l00000000004119EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004119E6:
	branch Mem25[rax_40:byte] != 0x00 l0000000000411C52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C52:
	word64 rax_51 = SEQ(rax_32_32_50, strlen(rax_40))
	r12_54 = rax_51
	branch rax_51 == 0x0000000000000000 l0000000000411C42
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C62:
	rax_56 = rax_51 - 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004119EF:
	rax_56 = 0x0000000000000007
	r12_54 = 0x0000000000000008
	r15_43 = 0x0000000000416FF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411A00:
	r13_65 = 0x0000000000000001
	dwLocD0_601 = 0x00000001
	branch Mem25[r15_43 + rax_56:byte] == 0x2F l0000000000411C42
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C42:
	r13_65 = 0x0000000000000000
	dwLocD0_601 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411A19:
	word64 r13_81 = r13_65 + r12_54
	word64 rax_83 = malloc(r13_81 + 0x000000000000000E)
	rax_32_32_454 = SLICE(rax_83, word32, 32) (alias)
	branch rax_83 == 0x0000000000000000 l0000000000411CF2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411CF2:
	r14_28 = 0x0000000000416919
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411A31:
	memcpy(rax_83, r15_43, r12_54)
	branch SLICE((uint64) dwLocD0_601, word32, 0) == 0x00000000 l0000000000411A4D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411A47:
	Mem102[rax_83:byte] = 0x2F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411A4D:
	word64 r13_105 = r13_81 + rax_83
	Mem108[r13_105:word64] = 0x0000000072616863
	Mem110[r13_105 + 0x0000000000000008:word32] = 0x61696C61
	Mem112[r13_105 + 0x000000000000000C:word16] = 0x0073
	word32 eax_115 = open(rax_83, 0x0000000000020000)
	rax_32_32_454 = 0x00000000 (alias)
	word32 r12d_127 = SLICE((uint64) eax_115, word32, 0)
	branch eax_115 < 0x00000000 l0000000000411C28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411A8A:
	word64 rdi_121 = (uint64) eax_115
	word64 rax_122 = fdopen(rdi_121, 0x0000000000413A21)
	word32 rdi_32_32_146 = SLICE(rdi_121, word32, 32)
	rax_32_32_454 = SLICE(rax_122, word32, 32) (alias)
	branch rax_122 == 0x0000000000000000 l0000000000411C20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C20:
	close((uint64) r12d_127)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411AA2:
	word64 qwLocD0_604 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411AB0:
	word64 rdi_362
	word64 rax_135 = Mem134[rax_122 + 0x0000000000000008:word64]
	word32 rax_32_32_368 = SLICE(rax_135, word32, 32)
	branch rax_135 >=u Mem134[rax_122 + 0x0000000000000010:word64] l0000000000411C01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411ABE:
	Mem141[rax_122 + 0x0000000000000008:word64] = rax_135 + 0x0000000000000001
	rdi_362 = SEQ(rdi_32_32_146, (word32) Mem141[rax_135:byte]) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411AC9:
	rdi_32_32_146 = SLICE(rdi_362, word32, 32) (alias)
	word32 edi_143 = SLICE(rdi_362, word32, 0)
	branch edi_143 == 0x00000020 l0000000000411AB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411ACE:
	branch rdi_362 <=u 0x000000000000000A l0000000000411AB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411AD6:
	branch edi_143 == 0x00000023 l0000000000411C75
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C75:
	word32 eax_160
	word64 rax_156 = Mem155[rax_122 + 0x0000000000000008:word64]
	rax_32_32_368 = SLICE(rax_156, word32, 32) (alias)
	rax_32_32_368 = SLICE(rax_156, word32, 32) (alias)
	branch rax_156 >=u Mem155[rax_122 + 0x0000000000000010:word64] l0000000000411D1D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D1D:
	rdi_32_32_146 = SLICE(rax_122, word32, 32) (alias)
	eax_160 = __uflow(rax_122)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C83:
	Mem162[rax_122 + 0x0000000000000008:word64] = rax_156 + 0x0000000000000001
	eax_160 = (word32) Mem162[rax_156:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C8E:
	branch eax_160 != 0x0000000A l0000000000411C70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C70:
	branch eax_160 == 0xFFFFFFFF l0000000000411C93
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C93:
	branch eax_160 != 0xFFFFFFFF l0000000000411AB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411ADF:
	ungetc(rdi_362, rax_122)
	rax_32_32_368 = 0x00000000 (alias)
	branch fscanf(rax_122, 0x0000000000417012, 0x00000000) <= 0x00000001 l0000000000411C9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B07:
	word64 rdx_187 = fp - 0x00000000000000B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B0A:
	word64 rcx_190 = (uint64) Mem391[rdx_187:word32]
	word32 eax_199 = SLICE((uint64) (SLICE((uint64) (rcx_190 + 0xFFFFFFFFFEFEFEFF & SLICE((uint64) (~SLICE(rcx_190, word32, 0)), word32, 0)), word32, 0) & 0x80808080), word32, 0)
	rdx_187 = rdx_187 + 0x0000000000000004
	byte al_218 = SLICE(eax_199, byte, 0)
	branch eax_199 == 0x00000000 l0000000000411B0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B21:
	word64 r10_205 = fp - 0x0000000000000078
	word32 ecx_211 = SLICE((uint64) (SLICE((uint64) eax_199, word32, 0) >>u 0x00000010), word32, 0)
	branch (eax_199 & 0x00008080) != 0x00000000 l0000000000411B33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B30_1:
	al_218 = SLICE(ecx_211, byte, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B33:
	branch (eax_199 & 0x00008080) != 0x00000000 l0000000000411B3B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B37_1:
	rdx_187 = rdx_187 + 0x0000000000000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B3B:
	word64 rdx_229 = rdx_187 - 0x03 - (al_218 * 0x02 <u 0x00) - (fp - 0x00000000000000B8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B44:
	word64 rcx_233 = (uint64) Mem391[r10_205:word32]
	word32 eax_242 = SLICE((uint64) (SLICE((uint64) (rcx_233 + 0xFFFFFFFFFEFEFEFF & SLICE((uint64) (~SLICE(rcx_233, word32, 0)), word32, 0)), word32, 0) & 0x80808080), word32, 0)
	r10_205 = r10_205 + 0x0000000000000004
	byte al_259 = SLICE(eax_242, byte, 0)
	branch eax_242 == 0x00000000 l0000000000411B44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B5C:
	word32 ecx_252 = SLICE((uint64) (SLICE((uint64) eax_242, word32, 0) >>u 0x00000010), word32, 0)
	branch (eax_242 & 0x00008080) != 0x00000000 l0000000000411B69
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B66_1:
	al_259 = SLICE(ecx_252, byte, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B69:
	branch (eax_242 & 0x00008080) != 0x00000000 l0000000000411B71
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B6D_1:
	r10_205 = r10_205 + 0x0000000000000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B71:
	word32 rax_32_32_325
	word64 r13_299
	word64 r10_273 = r10_205 - 0x03 - (al_259 * 0x02 <u 0x00) - (fp - 0x0000000000000078)
	word64 rax_280 = r10_273 + rdx_229
	branch qwLocD0_604 != 0x0000000000000000 l0000000000411CBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411CBC:
	word64 rax_282 = rax_280 + qwLocD0_604
	word64 rax_297 = realloc(r14_28, rax_282 + 0x0000000000000003)
	qwLocD0_604 = rax_282 + 0x0000000000000002
	rax_32_32_325 = SLICE(rax_297, word32, 32) (alias)
	r13_299 = rax_297
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B8F:
	word64 rax_306 = malloc(rax_280 + 0x0000000000000003)
	qwLocD0_604 = rax_280 + 0x0000000000000002
	rax_32_32_325 = SLICE(rax_306, word32, 32) (alias)
	r13_299 = rax_306
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411BB8:
	branch r13_299 == 0x0000000000000000 l0000000000411D02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D02:
	free(r14_28)
	r14_28 = 0x0000000000416919
	rax_32_32_454 = SLICE(fn0000000000411D30(rax_32_32_325, rax_122), word32, 32) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411BC1:
	word64 r14_347 = qwLocD0_604 - r10_273
	strcpy(0xFFFFFFFFFFFFFFFE - rdx_229 + r14_347 + r13_299, fp - 0x00000000000000B8)
	word64 rdi_351 = r13_299 - 0x0000000000000001 + r14_347
	strcpy(rdi_351, fp - 0x0000000000000078)
	rax_135 = Mem336[rax_122 + 0x0000000000000008:word64]
	rdi_32_32_146 = SLICE(rdi_351, word32, 32) (alias)
	r14_28 = r13_299
	rax_32_32_368 = SLICE(rax_135, word32, 32) (alias)
	branch rax_135 <u Mem336[rax_122 + 0x0000000000000010:word64] l0000000000411ABE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C01:
	word32 eax_360 = __uflow(rax_122)
	rdi_362 = (uint64) eax_360
	branch eax_360 == 0xFFFFFFFF l0000000000411C9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C9C:
	fn0000000000411D30(rax_32_32_368, rax_122)
	rax_32_32_454 = SLICE(qwLocD0_604, word32, 32) (alias)
	rax_32_32_454 = SLICE(qwLocD0_604, word32, 32) (alias)
	branch qwLocD0_604 == 0x0000000000000000 l0000000000411C28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C28:
	r14_28 = 0x0000000000416919
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411CB2:
	Mem411[r14_28 + qwLocD0_604:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C2E:
	free(rax_83)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C36:
	Mem431[0x000000000061B358:word64] = r14_28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041196A:
	word64 rbx_440 = rbx_31
	byte bpl_435 = SLICE((word32) Mem433[r14_28:byte], byte, 0)
	branch bpl_435 == 0x00 l000000000041199C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411973:
	branch strcmp(rbx_31, r14_28) == 0x00000000 l000000000041198F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411982:
	branch bpl_435 != 0x2A l0000000000411950
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411988:
	branch Mem433[r14_28 + 0x0000000000000001:byte] != 0x00 l0000000000411950
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411950:
	word64 rbp_456 = r14_28 + 0x0000000000000001 + SEQ(rax_32_32_454, strlen(r14_28))
	r14_28 = rbp_456 + 0x0000000000000001 + SEQ(rax_32_32_454, strlen(rbp_456))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041198F:
	rbx_440 = r14_28 + 0x0000000000000001 + SEQ(rax_32_32_454, strlen(r14_28))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041199C:
	branch Mem433[rbx_440:byte] != 0x00 l00000000004119A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004119A4_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004119A8:
	word64 rcx_512 = rax_24 ^ Mem433[fs:0x00000028:word64]
	branch rcx_512 != 0x0000000000000000 l0000000000411CFD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411CFD:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004119C2:
	return rcx_512
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000411900_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C14:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000411D30(word32 rax_32_32, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rax_32_32:[0..31] rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdx rsi
// Preserved: r12 rbp rbx rdi rsp
fn0000000000411D30_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D30:
	branch fileno(rdi) < 0x00000000 l0000000000411D9F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D43:
	branch __freading(rdi) != 0x00000000 l0000000000411D80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D80:
	branch SEQ(rax_32_32, lseek((uint64) fileno(rdi), 0x0000000000000000, 0x0000000000000001)) != 0xFFFFFFFFFFFFFFFF l0000000000411D4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D4C:
	word64 rax_35 = fn0000000000411DB0(rdi)
	rax_32_32 = SLICE(rax_35, word32, 32) (alias)
	branch SLICE(rax_35, word32, 0) == 0x00000000 l0000000000411D9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D9C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D9F:
	return SEQ(rax_32_32, fclose(rdi))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D58:
	word64 rax_62 = __errno_location()
	word32 r12d_67 = SLICE((uint64) Mem11[rax_62:word32], word32, 0)
	word64 rax_115 = SEQ(SLICE(rax_62, word32, 32), fclose(rdi))
	branch r12d_67 == 0x00000000 l0000000000411D79
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D70:
	Mem71[rax_62:word32] = r12d_67
	rax_115 = 0x00000000FFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D79:
	return rax_115
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000411D30_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000411DB0(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdx rsi
// Preserved: rbx rdi rsp
fn0000000000411DB0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411DB0:
	branch rdi == 0x0000000000000000 l0000000000411DC2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411DB9:
	branch __freading(rdi) != 0x00000000 l0000000000411DD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411DD0:
	branch (Mem8[rdi:word32] & 0x00000100) == 0x00000000 l0000000000411DC2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411DD8:
	return SEQ(SLICE(fn0000000000411DF0(0x0000000000000001, 0x0000000000000000, rdi), word32, 32), fflush(rdi))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411DC2:
	return SEQ(rax_32_32, fflush(rdi))
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000411DB0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000411DF0(word64 rdx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdi rdx
// Preserved: rbx rsi rsp
fn0000000000411DF0_entry:
	word32 edx = SLICE(rdx, word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411DF0:
	word64 rax_9 = Mem5[rdi + 0x0000000000000008:word64]
	word32 rax_32_32_26 = SLICE(rax_9, word32, 32)
	branch Mem5[rdi + 0x0000000000000010:word64] == rax_9 l0000000000411E10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411E10:
	word64 rax_12 = Mem5[rdi + 0x0000000000000020:word64]
	rax_32_32_26 = SLICE(rax_12, word32, 32) (alias)
	branch Mem5[rdi + 0x0000000000000028:word64] != rax_12 l0000000000411E02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411E1A:
	branch Mem5[rdi + 0x0000000000000048:word64] != 0x0000000000000000 l0000000000411E02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411E21:
	word64 rax_27 = SEQ(rax_32_32_26, lseek((uint64) fileno(rdi), rsi, (uint64) edx))
	branch rax_27 == 0xFFFFFFFFFFFFFFFF l0000000000411E4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411E43:
	Mem31[rdi:word32] = Mem20[rdi:word32] & 0xFFFFFFEF
	Mem33[rdi + 0x0000000000000090:word64] = rax_27
	rax_27 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411E4F:
	return rax_27
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411E02:
	return SEQ(rax_32_32_26, fseeko(rdi, rsi, rdx))
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000411DF0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000411EE0(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax rdx rsi
// Preserved: rsp
fn0000000000411EE0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411EE0:
	word64 rdx_12
	branch 0x000000000061A3A8 == 0x0000000000000000 l0000000000411EF6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411EF6:
	rdx_12 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411EEC:
	rdx_12 = Mem0[0x000000000061A3A8:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411EEF:
	__cxa_atexit(rdi, 0x0000000000000000, rdx_12)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000411EE0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO
// Preserved: rsp
_fini_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411EFC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_fini_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



