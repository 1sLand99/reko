word64 _init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: rax
// Trashed: SCZO rax
// Preserved: rsp
_init_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400AE8:
	word64 rax_15 = __gmon_start__
	branch __gmon_start__ == 0x0000000000000000 l0000000000400AFD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400AF8:
	call __gmon_start__ (retsize: 8;)
		uses: rax:__gmon_start__,rsp:fp - 0x0000000000000008
		defs: rax:rax_8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400AFD:
	return rax_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

_init_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _start(word64 rdx, word64 qwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdx:[0..63] Stack +0000:[0..63]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
_start_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

_start_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400CD0:
	__align(fp + 8)
	__libc_start_main(0x00000000004012F9, qwArg00, fp + 8, 0x0000000000401780, 0x00000000004017F0, rdx, fp)
	__hlt()
// DataOut:
// DataOut (flags):
// SymbolicIn:



void deregister_tm_clones(word64 rbp, word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8:[0..63] rbp:[0..63]
// LiveOut:
// Trashed: SCZO r8 rax rdi
// Preserved: rbp rsp
deregister_tm_clones_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400D00:
	branch false l0000000000400D30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400D15:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000400D30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400D30:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400D1F:
	call 0x0000000000000000 (retsize: 8;)
		uses: r8:r8 - 6299896,rax:0x0000000000000000,rdi:0x00000000006020F8,Stack +0000:rbp
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

deregister_tm_clones_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void register_tm_clones(word64 rbp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rbp:[0..63]
// LiveOut:
// Trashed: SCZO rax rdi rsi
// Preserved: rbp rsp
register_tm_clones_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400D40:
	branch 0 == 0x0000000000000000 l0000000000400D78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400D63:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000400D78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400D78:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400D6D:
	call 0x0000000000000000 (retsize: 8;)
		uses: rax:0x0000000000000000,rdi:0x00000000006020F8,rsi:0,Stack +0000:rbp
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

register_tm_clones_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __do_global_dtors_aux(word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8:[0..63]
// LiveOut:
// Trashed: SCZO r8 rax rdi
// Preserved: rbp rsp
__do_global_dtors_aux_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400D80:
	branch Mem0[0x0000000000602108:byte] != 0x00 l0000000000400D9A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400D89:
	deregister_tm_clones(fp - 8, r8)
	Mem20[0x0000000000602108:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400D9A:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

__do_global_dtors_aux_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void frame_dummy(word64 rbp, word64 rsi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rbp:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rdi rsi
// Preserved: rbp rsp
frame_dummy_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400DA0:
	branch Mem0[0x0000000000601E10:word64] != 0x0000000000000000 l0000000000400DB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400DB0:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000400DAB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400DBA:
	call fn0000000000000000 (retsize: 8;)
		uses: rax:0x0000000000000000,rbp:fp - 8,rdi:0x0000000000601E10,rsi:rsi,rsp:fp - 8,Stack +0008:rbp
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400DC1_thunk_register_tm_clones:
	register_tm_clones(rbp)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400DAB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400DAB_thunk_register_tm_clones:
	register_tm_clones(rbp)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

frame_dummy_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 component(word32 ecx, word32 edx, word32 esi, word64 rdi, word32 r8d, ptr64 & rcxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx:[0..31] esi:[0..31] r8d:[0..31] rcx:[0..31] rdi:[0..63]
// LiveOut: rax rcx
// Trashed: SCZO rax rcx rdx
// Preserved: rbp rsp
component_entry:
	word32 ecx = SLICE(rcx, word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400DC6:
	word32 eax_40 = SLICE((uint64) (SLICE((uint64) SLICE((uint64) (edx + SLICE((uint64) (SLICE((uint64) (SLICE((uint64) esi, word32, 0) & 0x0000003F), word32, 0) *s r8d), word32, 0)), word32, 0), word32, 0) *s ecx), word32, 0)
	word64 v16_51 = rdi + ((uint64) SLICE((uint64) (SLICE((uint64) (SLICE((uint64) (SLICE((uint64) esi, word32, 0) >>u 0x00000006), word32, 0) *s r8d), word32, 0) *s ecx), word32, 0) << 0x0000000000000003) + (uint64) SLICE((uint64) (SLICE((uint64) eax_40, word32, 0) >>u 0x00000003), word32, 0)
	word64 rcx_106 = rcx
	branch ecx >u 0x00000010 l0000000000400EC1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400E2D:
	word64 rax_112
	switch (ecx) { l0000000000400EC1 l0000000000400E3A l0000000000400E5A l0000000000400EC1 l0000000000400E77 l0000000000400EC1 l0000000000400EC1 l0000000000400EC1 l0000000000400E94 l0000000000400EC1 l0000000000400EC1 l0000000000400EC1 l0000000000400EC1 l0000000000400EC1 l0000000000400EC1 l0000000000400EC1 l0000000000400EA0 }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400EA0:
	rax_112 = (uint64) ((word32) SLICE((word32) Mem54[v16_51 + 0x0000000000000001:byte], byte, 0) + SLICE((uint64) SLICE((uint64) ((word32) SLICE((word32) Mem54[v16_51:byte], byte, 0) << 0x00000008), word32, 0), word32, 0))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400E94:
	rax_112 = SEQ(SLICE(v16_51, word32, 32), (word32) SLICE((word32) Mem54[v16_51:byte], byte, 0)) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400E77:
	rcx_106 = (uint64) SLICE((uint64) (0x00000004 - (eax_40 & 0x00000007)), word32, 0)
	rax_112 = (uint64) (SLICE((uint64) SLICE((uint64) ((word32) SLICE((word32) Mem54[v16_51:byte], byte, 0) >> SLICE(rcx_106, byte, 0)), word32, 0), word32, 0) & 0x0000000F)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400E5A:
	rcx_106 = (uint64) SLICE((uint64) (0x00000006 - (eax_40 & 0x00000007)), word32, 0)
	rax_112 = (uint64) (SLICE((uint64) SLICE((uint64) ((word32) SLICE((word32) Mem54[v16_51:byte], byte, 0) >> SLICE(rcx_106, byte, 0)), word32, 0), word32, 0) & 0x00000003)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400E3A:
	rcx_106 = (uint64) SLICE((uint64) (0x00000007 - (eax_40 & 0x00000007)), word32, 0)
	rax_112 = (uint64) (SLICE((uint64) SLICE((uint64) ((word32) SLICE((word32) Mem54[v16_51:byte], byte, 0) >> SLICE(rcx_106, byte, 0)), word32, 0), word32, 0) & 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400EE7:
	rcxOut = rcx_106
	return (word32) rax_112
// DataOut:
// DataOut (flags):
// SymbolicIn:

component_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400EC1:
	fprintf(Mem54[0x0000000000602100:word64], 0x0000000000401808, (uint64) ecx)
	exit(0x0000000000000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 print_pixel(word64 rcx, word64 rdx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r8, word64 r9, word64 r12, word64 r13, selector fs, ptr64 & r8Out, ptr64 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r12:[0..63] r13:[0..63] r8:[0..63] r9:[0..63] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r8 r9 rcx
// Trashed: SCZO r8 r9 rax rcx rdi rdx rsi
// Preserved: r12 r13 rbp rbx rsp
print_pixel_entry:
	word32 ecx = SLICE(rcx, word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400EE9:
	word64 r8_149
	word64 rcx_151
	word64 rax_26 = Mem24[fs:0x00000028:word64]
	word64 rcx_41
	word64 rax_42
	word64 r8_44
	word64 r9_46
	call png_get_bit_depth (retsize: 8;)
		uses: fs:fs,r12:r12,r13:r13,r8:r8,r9:r9,rax:rdi,rbp:fp - 8,rbx:rbx,rcx:rcx,rdi:rdi,rdx:rsi,rsi:rsi,rsp:fp - 0x0000000000000078,Stack +000C:ecx,Stack +0010:rdx,Stack +0018:rsi,Stack +0020:rdi,Stack +0030:dwLoc50,Stack +0034:dwLoc4C,Stack +0038:eax_49,Stack +003C:dwLoc44,Stack +0040:qwLoc40,Stack +0048:qwLoc38,Stack +0050:rax_26,Stack +0060:rbx,Stack +0068:r12,Stack +0070:r13,Stack +0078:rbp
		defs: r8:r8_44,r9:r9_46,rax:rax_42,rcx:rcx_41
	word32 eax_49 = (word32) SLICE(rax_42, byte, 0)
	word64 rdx_57
	word64 rcx_58
	word64 rax_59
	word64 r8_60
	word64 r9_237
	call png_get_color_type (retsize: 8;)
		uses: fs:fs,r12:r12,r13:r13,r8:r8_44,r9:r9_46,rax:rdi,rbp:fp - 8,rbx:rbx,rcx:rcx_41,rdi:rdi,rdx:rsi,rsi:rsi,rsp:fp - 0x0000000000000078,Stack +000C:ecx,Stack +0010:rdx,Stack +0018:rsi,Stack +0020:rdi,Stack +0030:dwLoc50,Stack +0034:dwLoc4C,Stack +0038:eax_49,Stack +003C:dwLoc44,Stack +0040:qwLoc40,Stack +0048:qwLoc38,Stack +0050:rax_26,Stack +0060:rbx,Stack +0068:r12,Stack +0070:r13,Stack +0078:rbp
		defs: r8:r8_60,r9:r9_61,rax:rax_59,rcx:rcx_58,rdx:rdx_57
	word32 eax_64 = (word32) SLICE(rax_59, byte, 0)
	branch eax_64 >u 0x00000006 l00000000004012C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400F4C:
	switch (Mem50[(uint64) eax_64 * 0x0000000000000008 + 0x00401958:word32]) { l0000000000400F58 l00000000004012C9 l0000000000401155 l0000000000400F8D l00000000004011D2 l00000000004012C9 l000000000040122A }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040122A:
	word64 rcx_623
	r8_149 = (uint64) SLICE((uint64) SLICE((uint64) (uint32) component((uint64) SLICE((uint64) eax_49, word32, 0), 0x00000003, SLICE((uint64) ecx, word32, 0), rdx, 0x00000004, out rcx_623), word32, 0), word32, 0)
	word64 rcx_624
	rcx_151 = (uint64) SLICE((uint64) SLICE((uint64) (uint32) component((uint64) SLICE((uint64) eax_49, word32, 0), 0x00000002, SLICE((uint64) ecx, word32, 0), rdx, 0x00000004, out rcx_624), word32, 0), word32, 0)
	word64 rcx_626
	word64 rcx_625
	printf(0x0000000000401926, (uint64) SLICE((uint64) (uint32) component((uint64) SLICE((uint64) eax_49, word32, 0), 0x00000000, SLICE((uint64) ecx, word32, 0), rdx, 0x00000004, out rcx_626), word32, 0), (uint64) SLICE((uint64) SLICE((uint64) (uint32) component((uint64) SLICE((uint64) eax_49, word32, 0), 0x00000001, SLICE((uint64) ecx, word32, 0), rdx, 0x00000004, out rcx_625), word32, 0), word32, 0), rcx_151, r8_149)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004011D2:
	word64 rcx_622
	printf(0x0000000000401914, (uint64) SLICE((uint64) (uint32) component((uint64) SLICE((uint64) eax_49, word32, 0), 0x00000000, SLICE((uint64) ecx, word32, 0), rdx, 0x00000002, out rcx_151), word32, 0), (uint64) SLICE((uint64) SLICE((uint64) (uint32) component((uint64) SLICE((uint64) eax_49, word32, 0), 0x00000001, SLICE((uint64) ecx, word32, 0), rdx, 0x00000002, out rcx_622), word32, 0), word32, 0))
	r8_149 = 0x0000000000000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400F8D:
	word64 rcx_621
	word32 eax_222 = SLICE((uint64) (uint32) component((uint64) SLICE((uint64) eax_49, word32, 0), 0x00000000, SLICE((uint64) ecx, word32, 0), rdx, 0x00000001, out rcx_621), word32, 0)
	word64 rax_235
	call png_get_PLTE (retsize: 8;)
		uses: fs:fs,r12:r12,r13:r13,r8:0x0000000000000001,r9:r9_61,rax:rdi,rbp:fp - 8,rbx:rbx,rcx:fp - 0x0000000000000050,rdi:rdi,rdx:fp - 0x0000000000000040,rsi:rsi,rsp:fp - 0x0000000000000078,Stack +000C:ecx,Stack +0010:rdx,Stack +0018:rsi,Stack +0020:rdi,Stack +0030:0x00000000,Stack +0034:dwLoc4C,Stack +0038:eax_49,Stack +003C:eax_222,Stack +0040:0x0000000000000000,Stack +0048:qwLoc38,Stack +0050:rax_26,Stack +0060:rbx,Stack +0068:r12,Stack +0070:r13,Stack +0078:rbp
		defs: r8:r8_236,r9:r9_237,rax:rax_235,rcx:rcx_234
	branch SLICE((uint64) (SLICE(rax_235, word32, 0) & 0x00000008), word32, 0) == 0x00000000 l0000000000401137
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400FE1:
	branch true l0000000000401137
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400FEC:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000401137
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401137:
	printf(0x00000000004018EA, (uint64) SLICE((uint64) eax_222, word32, 0))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400FF9:
	word64 rax_273
	call png_get_tRNS (retsize: 8;)
		uses: fs:fs,r12:r12,r13:r13,r8:0x0000000000000000,r9:r9_237,rax:rdi,rbp:fp - 8,rbx:rbx,rcx:fp - 0x000000000000004C,rdi:rdi,rdx:fp - 0x0000000000000038,rsi:rsi,rsp:fp - 0x0000000000000078,Stack +000C:ecx,Stack +0010:rdx,Stack +0018:rsi,Stack +0020:rdi,Stack +0030:0x00000000,Stack +0034:0x00000000,Stack +0038:eax_49,Stack +003C:eax_222,Stack +0040:0x0000000000000000,Stack +0048:0x0000000000000000,Stack +0050:rax_26,Stack +0060:rbx,Stack +0068:r12,Stack +0070:r13,Stack +0078:rbp
		defs: r9:r9_275,rax:rax_273
	branch SLICE((uint64) (SLICE(rax_273, word32, 0) & 0x00000010), word32, 0) == 0x00000000 l00000000004010D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401031:
	branch true l00000000004010D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040103C:
	branch 0x0000000000000000 == 0x0000000000000000 l00000000004010D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004010D1:
	word64 rdx_312 = (uint64) eax_222
	r8_149 = (uint64) (word32) SLICE((word32) Mem262[(uint64) eax_222 * 0x0000000000000003 + 0x0000000000000002:byte], byte, 0)
	rcx_151 = (uint64) (uint32) (word32) SLICE((word32) Mem262[(uint64) eax_222 * 0x0000000000000003 + 0x0000000000000001:byte], byte, 0) (alias)
	printf(0x00000000004018D3, (uint64) SLICE((uint64) eax_222, word32, 0), SEQ(SLICE(rdx_312, word32, 32), (word32) SLICE((word32) Mem262[rdx_312 * 0x0000000000000003:byte], byte, 0)), rcx_151, r8_149)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401049:
	word32 esi_343
	branch eax_222 >=u 0x00000000 l0000000000401063
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401063:
	esi_343 = 0x000000FF (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401051:
	esi_343 = (word32) SLICE((word32) Mem262[(uint64) eax_222:byte], byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401068:
	word64 rdx_365 = (uint64) eax_222
	r9_237 = (uint64) esi_343
	r8_149 = (uint64) (word32) SLICE((word32) Mem262[(uint64) eax_222 * 0x0000000000000003 + 0x0000000000000002:byte], byte, 0)
	rcx_151 = (uint64) (uint32) (word32) SLICE((word32) Mem262[(uint64) eax_222 * 0x0000000000000003 + 0x0000000000000001:byte], byte, 0) (alias)
	printf(0x00000000004018B9, (uint64) SLICE((uint64) eax_222, word32, 0), SEQ(SLICE(rdx_365, word32, 32), (word32) SLICE((word32) Mem262[rdx_365 * 0x0000000000000003:byte], byte, 0)), rcx_151, r8_149, r9_237)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401150:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401155:
	word64 rcx_618
	rcx_151 = (uint64) SLICE((uint64) SLICE((uint64) (uint32) component((uint64) SLICE((uint64) eax_49, word32, 0), 0x00000002, SLICE((uint64) ecx, word32, 0), rdx, 0x00000003, out rcx_618), word32, 0), word32, 0)
	word64 rcx_620
	word64 rcx_619
	printf(0x0000000000401906, (uint64) SLICE((uint64) (uint32) component((uint64) SLICE((uint64) eax_49, word32, 0), 0x00000000, SLICE((uint64) ecx, word32, 0), rdx, 0x00000003, out rcx_620), word32, 0), (uint64) SLICE((uint64) SLICE((uint64) (uint32) component((uint64) SLICE((uint64) eax_49, word32, 0), 0x00000001, SLICE((uint64) ecx, word32, 0), rdx, 0x00000003, out rcx_619), word32, 0), word32, 0), rcx_151)
	r8_149 = 0x0000000000000003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004012C9:
	call png_error (retsize: 8;)
		uses: fs:fs,r12:r12,r13:r13,r8:r8_60,r9:r9_61,rax:rdi,rbp:fp - 8,rbx:rbx,rcx:rcx_58,rdi:rdi,rdx:rdx_57,rsi:0x0000000000401938,rsp:fp - 0x0000000000000078,Stack +000C:ecx,Stack +0010:rdx,Stack +0018:rsi,Stack +0020:rdi,Stack +0030:dwLoc50,Stack +0034:dwLoc4C,Stack +0038:eax_49,Stack +003C:dwLoc44,Stack +0040:qwLoc40,Stack +0048:qwLoc38,Stack +0050:rax_26,Stack +0060:rbx,Stack +0068:r12,Stack +0070:r13,Stack +0078:rbp
		defs: r8:r8_473,r9:r9_475,rcx:rcx_469
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000400F58:
	printf(0x00000000004018B0, (uint64) SLICE((uint64) (uint32) component((uint64) SLICE((uint64) eax_49, word32, 0), 0x00000000, SLICE((uint64) ecx, word32, 0), rdx, 0x00000001, out rcx_151), word32, 0))
	r8_149 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004012DA:
	branch (rax_26 ^ Mem502[fs:0x00000028:word64]) == 0x0000000000000000 l00000000004012EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004012EE:
	r8Out = r8_149
	r9Out = r9_237
	return rcx_151
// DataOut:
// DataOut (flags):
// SymbolicIn:

print_pixel_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004012E9:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:



void main(word64 rbx, word64 rbp, word64 rsi, word32 edi, word64 r8, word64 r9, word64 r12, word64 r13, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31] fs:[0..15] r12:[0..63] r13:[0..63] r8:[0..63] r9:[0..63] rbp:[0..63] rbx:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: r8 r9 rbp rsp
main_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004012F9:
	word64 rax_13 = Mem11[fs:0x00000028:word64]
	branch edi != 0x00000004 l000000000040173F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040173F:
	fwrite(0x0000000000401A70, 0x0000000000000001, 0x0000000000000027, Mem16[0x0000000000602100:word64])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401337:
	word64 rax_27 = Mem16[rsi + 0x0000000000000008:word64]
	word64 rax_31 = SEQ(SLICE(rax_27, word32, 32), atol(rax_27))
	word64 rax_35 = Mem32[rsi + 0x0000000000000010:word64]
	word64 rax_39 = SEQ(SLICE(rax_35, word32, 32), atol(rax_35))
	word64 rax_46 = fopen(Mem40[rsi + 0x0000000000000018:word64], 0x0000000000401990)
	word64 qwLoc48_668 = 0x0000000000000000
	branch rax_46 == 0x0000000000000000 l0000000000401716
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401716:
	fprintf(Mem48[0x0000000000602100:word64], 0x0000000000401A48, Mem48[rsi + 0x0000000000000018:word64])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040139D:
	word64 rsi_65
	word64 rax_66
	word64 rcx_67
	word64 rdx_68
	word64 r9_70
	word64 r8_72
	call png_create_read_struct (retsize: 8;)
		uses: fs:fs,r12:r12,r13:r13,r8:r8,r9:r9,rax:rax_46,rbp:fp - 8,rbx:rbx,rcx:0x0000000000000000,rdi:0x0000000000401993,rdx:0x0000000000000000,rsi:0x0000000000000000,rsp:fp - 168,Stack +0008:rsi,Stack +0014:edi,Stack +0024:0x00000001,Stack +0028:dwLoc88,Stack +002C:dwLoc84,Stack +0038:dwLoc78,Stack +0044:dwLoc6C,Stack +0048:dwLoc68,Stack +004C:dwLoc64,Stack +0050:dwLoc60,Stack +0054:dwLoc5C,Stack +0058:dwLoc58,Stack +005C:dwLoc54,Stack +0060:dwLoc50,Stack +0064:dwLoc4C,Stack +0068:0x0000000000000000,Stack +0070:rax_66,Stack +0078:qwLoc38,Stack +0080:rax_31,Stack +0088:rax_39,Stack +0090:rax_46,Stack +0098:qwLoc18,Stack +00A0:rax_13,Stack +00A8:rbp,Stack +FFFFFFE8:qwLocC8,Stack +FFFFFFF0:qwLocC0,Stack +FFFFFFF8:qwLocB8
		defs: r8:r8_72,r9:r9_70,rax:rax_66,rcx:rcx_67,rdx:rdx_68,rsi:rsi_65
	branch rax_66 == 0x0000000000000000 l00000000004016F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004016F6:
	fwrite(0x0000000000401A18, 0x0000000000000001, 0x000000000000002E, Mem74[0x0000000000602100:word64])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004013C7:
	word64 rcx_195
	word64 rax_89
	word64 rcx_90
	word64 r9_190
	word64 r8_191
	call png_create_info_struct (retsize: 8;)
		uses: fs:fs,r12:r12,r13:r13,r8:r8_72,r9:r9_70,rax:rax_66,rbp:fp - 8,rbx:rbx,rcx:rcx_67,rdi:rax_66,rdx:rdx_68,rsi:rsi_65,rsp:fp - 168,Stack +0008:rsi,Stack +0014:edi,Stack +0024:0x00000001,Stack +0028:dwLoc88,Stack +002C:dwLoc84,Stack +0038:dwLoc78,Stack +0044:dwLoc6C,Stack +0048:dwLoc68,Stack +004C:dwLoc64,Stack +0050:dwLoc60,Stack +0054:dwLoc5C,Stack +0058:dwLoc58,Stack +005C:dwLoc54,Stack +0060:dwLoc50,Stack +0064:dwLoc4C,Stack +0068:0x0000000000000000,Stack +0070:rax_66,Stack +0078:rax_89,Stack +0080:rax_31,Stack +0088:rax_39,Stack +0090:rax_46,Stack +0098:qwLoc18,Stack +00A0:rax_13,Stack +00A8:rbp,Stack +FFFFFFE8:qwLocC8,Stack +FFFFFFF0:qwLocC0,Stack +FFFFFFF8:qwLocB8
		defs: r8:r8_93,r9:r9_92,rax:rax_89,rcx:rcx_90
	branch rax_89 == 0x0000000000000000 l00000000004016C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004013E4:
	word64 rcx_107
	word64 r9_109
	word64 r8_110
	call png_init_io (retsize: 8;)
		uses: fs:fs,r12:r12,r13:r13,r8:r8_93,r9:r9_92,rax:rax_66,rbp:fp - 8,rbx:rbx,rcx:rcx_90,rdi:rax_66,rdx:rax_46,rsi:rax_46,rsp:fp - 168,Stack +0008:rsi,Stack +0014:edi,Stack +0024:0x00000001,Stack +0028:dwLoc88,Stack +002C:dwLoc84,Stack +0038:dwLoc78,Stack +0044:dwLoc6C,Stack +0048:dwLoc68,Stack +004C:dwLoc64,Stack +0050:dwLoc60,Stack +0054:dwLoc5C,Stack +0058:dwLoc58,Stack +005C:dwLoc54,Stack +0060:dwLoc50,Stack +0064:dwLoc4C,Stack +0068:0x0000000000000000,Stack +0070:rax_66,Stack +0078:rax_89,Stack +0080:rax_31,Stack +0088:rax_39,Stack +0090:rax_46,Stack +0098:rax_142,Stack +00A0:rax_13,Stack +00A8:rbp,Stack +FFFFFFE8:fp - 0x0000000000000078,Stack +FFFFFFF0:fp - 0x0000000000000074,Stack +FFFFFFF8:fp - 0x0000000000000070
		defs: r8:r8_110,r9:r9_109,rcx:rcx_107
	word64 rcx_119
	word64 r9_121
	word64 r8_122
	call png_read_info (retsize: 8;)
		uses: fs:fs,r12:r12,r13:r13,r8:r8_110,r9:r9_109,rax:rax_66,rbp:fp - 8,rbx:rbx,rcx:rcx_107,rdi:rax_66,rdx:rax_89,rsi:rax_89,rsp:fp - 168,Stack +0008:rsi,Stack +0014:edi,Stack +0024:0x00000001,Stack +0028:dwLoc88,Stack +002C:dwLoc84,Stack +0038:dwLoc78,Stack +0044:dwLoc6C,Stack +0048:dwLoc68,Stack +004C:dwLoc64,Stack +0050:dwLoc60,Stack +0054:dwLoc5C,Stack +0058:dwLoc58,Stack +005C:dwLoc54,Stack +0060:dwLoc50,Stack +0064:dwLoc4C,Stack +0068:0x0000000000000000,Stack +0070:rax_66,Stack +0078:rax_89,Stack +0080:rax_31,Stack +0088:rax_39,Stack +0090:rax_46,Stack +0098:rax_142,Stack +00A0:rax_13,Stack +00A8:rbp,Stack +FFFFFFE8:fp - 0x0000000000000078,Stack +FFFFFFF0:fp - 0x0000000000000074,Stack +FFFFFFF8:fp - 0x0000000000000070
		defs: r8:r8_122,r9:r9_121,rcx:rcx_119
	word64 rax_130
	word64 rcx_131
	word64 r9_133
	word64 r8_134
	call png_get_rowbytes (retsize: 8;)
		uses: fs:fs,r12:r12,r13:r13,r8:r8_122,r9:r9_121,rax:rax_66,rbp:fp - 8,rbx:rbx,rcx:rcx_119,rdi:rax_66,rdx:rax_89,rsi:rax_89,rsp:fp - 168,Stack +0008:rsi,Stack +0014:edi,Stack +0024:0x00000001,Stack +0028:dwLoc88,Stack +002C:dwLoc84,Stack +0038:dwLoc78,Stack +0044:dwLoc6C,Stack +0048:dwLoc68,Stack +004C:dwLoc64,Stack +0050:dwLoc60,Stack +0054:dwLoc5C,Stack +0058:dwLoc58,Stack +005C:dwLoc54,Stack +0060:dwLoc50,Stack +0064:dwLoc4C,Stack +0068:0x0000000000000000,Stack +0070:rax_66,Stack +0078:rax_89,Stack +0080:rax_31,Stack +0088:rax_39,Stack +0090:rax_46,Stack +0098:rax_142,Stack +00A0:rax_13,Stack +00A8:rbp,Stack +FFFFFFE8:fp - 0x0000000000000078,Stack +FFFFFFF0:fp - 0x0000000000000074,Stack +FFFFFFF8:fp - 0x0000000000000070
		defs: r8:r8_134,r9:r9_133,rax:rax_130,rcx:rcx_131
	word64 rax_142
	call png_malloc (retsize: 8;)
		uses: fs:fs,r12:r12,r13:r13,r8:r8_134,r9:r9_133,rax:rax_66,rbp:fp - 8,rbx:rbx,rcx:rcx_131,rdi:rax_66,rdx:rax_130,rsi:rax_130,rsp:fp - 168,Stack +0008:rsi,Stack +0014:edi,Stack +0024:0x00000001,Stack +0028:dwLoc88,Stack +002C:dwLoc84,Stack +0038:dwLoc78,Stack +0044:dwLoc6C,Stack +0048:dwLoc68,Stack +004C:dwLoc64,Stack +0050:dwLoc60,Stack +0054:dwLoc5C,Stack +0058:dwLoc58,Stack +005C:dwLoc54,Stack +0060:dwLoc50,Stack +0064:dwLoc4C,Stack +0068:0x0000000000000000,Stack +0070:rax_66,Stack +0078:rax_89,Stack +0080:rax_31,Stack +0088:rax_39,Stack +0090:rax_46,Stack +0098:rax_142,Stack +00A0:rax_13,Stack +00A8:rbp,Stack +FFFFFFE8:fp - 0x0000000000000078,Stack +FFFFFFF0:fp - 0x0000000000000074,Stack +FFFFFFF8:fp - 0x0000000000000070
		defs: rax:rax_142
	word64 rax_171
	word64 rsi_170
	word64 rcx_172
	word64 rdx_173
	word64 r9_174
	word64 r8_175
	call png_get_IHDR (retsize: 8;)
		uses: fs:fs,r12:r12,r13:r13,r8:fp - 0x0000000000000080,r9:fp - 0x000000000000007C,rax:rax_66,rbp:fp - 8,rbx:rbx,rcx:fp - 0x0000000000000084,rdi:rax_66,rdx:fp - 0x0000000000000088,rsi:rax_89,rsp:fp - 0x00000000000000C8,Stack +0008:fp - 0x0000000000000078,Stack +0010:fp - 0x0000000000000074,Stack +0018:fp - 0x0000000000000070,Stack +0028:rsi,Stack +0034:edi,Stack +0044:0x00000001,Stack +0048:dwLoc88,Stack +004C:dwLoc84,Stack +0058:dwLoc78,Stack +0064:dwLoc6C,Stack +0068:dwLoc68,Stack +006C:dwLoc64,Stack +0070:dwLoc60,Stack +0074:dwLoc5C,Stack +0078:dwLoc58,Stack +007C:dwLoc54,Stack +0080:dwLoc50,Stack +0084:dwLoc4C,Stack +0088:rax_142,Stack +0090:rax_66,Stack +0098:rax_89,Stack +00A0:rax_31,Stack +00A8:rax_39,Stack +00B0:rax_46,Stack +00B8:rax_142,Stack +00C0:rax_13,Stack +00C8:rbp
		defs: r8:r8_175,r9:r9_174,rax:rax_171,rcx:rcx_172,rdx:rdx_173,rsi:rsi_170
	qwLoc48_668 = rax_142
	qwLoc18 = rax_142
	qwLocB8 = fp - 0x0000000000000070
	qwLocC0 = fp - 0x0000000000000074
	qwLocC8 = fp - 0x0000000000000078
	branch SLICE(rax_171, word32, 0) == 0x00000000 l00000000004016AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004016AF:
	call png_error (retsize: 8;)
		uses: fs:fs,r12:r12,r13:r13,r8:r8_175,r9:r9_174,rax:rax_66,rbp:fp - 8,rbx:rbx,rcx:rcx_172,rdi:rax_66,rdx:rdx_173,rsi:0x00000000004019C3,rsp:fp - 0x00000000000000A8,Stack +0008:rsi,Stack +0014:edi,Stack +0024:0x00000001,Stack +0028:dwLoc88,Stack +002C:dwLoc84,Stack +0038:dwLoc78,Stack +0044:dwLoc6C,Stack +0048:dwLoc68,Stack +004C:dwLoc64,Stack +0050:dwLoc60,Stack +0054:dwLoc5C,Stack +0058:dwLoc58,Stack +005C:dwLoc54,Stack +0060:dwLoc50,Stack +0064:dwLoc4C,Stack +0068:rax_142,Stack +0070:rax_66,Stack +0078:rax_89,Stack +0080:rax_31,Stack +0088:rax_39,Stack +0090:rax_46,Stack +0098:rax_142,Stack +00A0:rax_13,Stack +00A8:rbp,Stack +FFFFFFE8:fp - 0x0000000000000078,Stack +FFFFFFF0:fp - 0x0000000000000074,Stack +FFFFFFF8:fp - 0x0000000000000070
		defs: r8:r8_191,r9:r9_190
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004016C0:
	word64 rax_194 = Mem193[0x0000000000602100:word64]
	fwrite(0x00000000004019E8, 0x0000000000000001, 0x000000000000002C, rax_194)
	rcx_195 = rax_194
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040147A:
	word32 eax_201 = SLICE((uint64) dwLoc78, word32, 0)
	branch eax_201 == 0x00000000 l0000000000401488
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401488:
	dwLoc6C = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401481:
	branch eax_201 == 0x00000001 l0000000000401491
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401491:
	dwLoc6C = 0x00000007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401486:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040149A:
	call png_error (retsize: 8;)
		uses: fs:fs,r12:r12,r13:r13,r8:r8_175,r9:r9_174,rax:rax_66,rbp:fp - 8,rbx:rbx,rcx:rcx_172,rdi:rax_66,rdx:rdx_173,rsi:0x000000000040199A,rsp:fp - 0x00000000000000A8,Stack +0008:rsi,Stack +0014:edi,Stack +0024:0x00000001,Stack +0028:dwLoc88,Stack +002C:dwLoc84,Stack +0038:dwLoc78,Stack +0044:dwLoc6C,Stack +0048:dwLoc68,Stack +004C:dwLoc64,Stack +0050:dwLoc60,Stack +0054:dwLoc5C,Stack +0058:dwLoc58,Stack +005C:dwLoc54,Stack +0060:dwLoc50,Stack +0064:dwLoc4C,Stack +0068:rax_142,Stack +0070:rax_66,Stack +0078:rax_89,Stack +0080:rax_31,Stack +0088:rax_39,Stack +0090:rax_46,Stack +0098:rax_142,Stack +00A0:rax_13,Stack +00A8:rbp,Stack +FFFFFFE8:fp - 0x0000000000000078,Stack +FFFFFFF0:fp - 0x0000000000000074,Stack +FFFFFFF8:fp - 0x0000000000000070
		defs: r8:r8_218,r9:r9_217,rcx:rcx_215,rdx:rdx_216,rsi:rsi_213
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004014AB:
	word64 rcx_231
	word64 r9_235
	word64 r8_237
	call png_start_read_image (retsize: 8;)
		uses: fs:fs,r12:r12,r13:r13,r8:r8_236,r9:r9_234,rax:rax_66,rbp:fp - 8,rbx:rbx,rcx:rcx_230,rdi:rax_66,rdx:rdx_232,rsi:rsi_226,rsp:fp - 0x00000000000000A8,Stack +0008:rsi,Stack +0014:edi,Stack +0024:0x00000001,Stack +0028:dwLoc88,Stack +002C:dwLoc84,Stack +0038:dwLoc78,Stack +0044:dwLoc6C_696,Stack +0048:0x00000000,Stack +004C:dwLoc64,Stack +0050:dwLoc60,Stack +0054:dwLoc5C,Stack +0058:dwLoc58,Stack +005C:dwLoc54,Stack +0060:dwLoc50,Stack +0064:dwLoc4C,Stack +0068:rax_142,Stack +0070:rax_66,Stack +0078:rax_89,Stack +0080:rax_31,Stack +0088:rax_39,Stack +0090:rax_46,Stack +0098:rax_142,Stack +00A0:rax_13,Stack +00A8:rbp,Stack +FFFFFFE8:fp - 0x0000000000000078,Stack +FFFFFFF0:fp - 0x0000000000000074,Stack +FFFFFFF8:fp - 0x0000000000000070
		defs: r8:r8_237,r9:r9_235,rcx:rcx_231
	dwLoc68 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401673:
	branch SLICE((uint64) dwLoc68, word32, 0) < dwLoc6C l00000000004014C3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004014C3:
	branch SLICE((uint64) dwLoc78, word32, 0) != 0x00000001 l00000000004015CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004015CE:
	dwLoc60 = 0x00000000
	dwLoc64 = 0x00000000
	dwLoc58 = 0x00000001
	dwLoc5C = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004014CF:
	word32 eax_276
	branch dwLoc68 <= 0x00000001 l00000000004014EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004014EF:
	eax_276 = 0x00000007 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004014D5:
	eax_276 = SLICE((uint64) (SLICE((uint64) SLICE((uint64) (0x00000001 << SLICE((uint64) SLICE((uint64) (SLICE((uint64) (0x00000007 - dwLoc68), word32, 0) >> 0x00000001), word32, 0), byte, 0)), word32, 0), word32, 0) - 0x00000001), word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004014F4:
	word32 eax_323
	word32 edx_329 = SLICE((uint64) SLICE((uint64) (SLICE((uint64) (eax_276 - SLICE((uint64) (SLICE((uint64) SLICE((uint64) (SLICE((uint64) (SLICE((uint64) SLICE((uint64) dwLoc68, word32, 0), word32, 0) & 0x00000001), word32, 0) << SLICE((uint64) SLICE((uint64) SLICE((uint64) (0x00000003 - SLICE((uint64) (SLICE((uint64) (SLICE((uint64) dwLoc68, word32, 0) + 0x00000001), word32, 0) >> 0x00000001), word32, 0)), word32, 0), word32, 0), byte, 0)), word32, 0), word32, 0) & 0x00000007), word32, 0)), word32, 0) + dwLoc88), word32, 0), word32, 0)
	branch dwLoc68 <= 0x00000001 l0000000000401531
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401531:
	eax_323 = 0x00000003 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401525:
	eax_323 = SLICE((uint64) (SLICE((uint64) (0x00000007 - dwLoc68), word32, 0) >> 0x00000001), word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401536:
	rcx_231 = (uint64) eax_323
	branch SLICE((uint64) SLICE((uint64) (edx_329 >>u SLICE(rcx_231, byte, 0)), word32, 0), word32, 0) == 0x00000000 l000000000040166E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040166E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401544:
	word32 eax_426
	rcx_231 = (uint64) SLICE((uint64) (SLICE((uint64) (0x00000007 - dwLoc68), word32, 0) >> 0x00000001), word32, 0)
	dwLoc60 = SLICE((uint64) (SLICE((uint64) SLICE((uint64) (SLICE((uint64) SLICE((uint64) (SLICE((uint64) dwLoc68, word32, 0) & 0x00000001), word32, 0), word32, 0) << SLICE((uint64) SLICE((uint64) SLICE((uint64) (0x00000003 - SLICE((uint64) (SLICE((uint64) (SLICE((uint64) dwLoc68, word32, 0) + 0x00000001), word32, 0) >> 0x00000001), word32, 0)), word32, 0), word32, 0), byte, 0)), word32, 0), word32, 0) & 0x00000007), word32, 0)
	dwLoc64 = SLICE((uint64) (SLICE((uint64) SLICE((uint64) ((word32) (SLICE((uint64) (SLICE((uint64) dwLoc68, word32, 0) & 0x00000001), word32, 0) == 0x00000000) << SLICE((uint64) SLICE((uint64) SLICE((uint64) (0x00000003 - SLICE((uint64) (SLICE((uint64) dwLoc68, word32, 0) >> 0x00000001), word32, 0)), word32, 0), word32, 0), byte, 0)), word32, 0), word32, 0) & 0x00000007), word32, 0)
	dwLoc58 = SLICE((uint64) SLICE((uint64) (0x00000001 << SLICE(rcx_231, byte, 0)), word32, 0), word32, 0)
	branch dwLoc68 <= 0x00000002 l00000000004015C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004015C4:
	eax_426 = 0x00000008 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004015AF:
	rcx_231 = (uint64) SLICE((uint64) (SLICE((uint64) (SLICE((uint64) dwLoc68, word32, 0) - 0x00000001), word32, 0) >> 0x00000001), word32, 0)
	eax_426 = SLICE((uint64) SLICE((uint64) (0x00000008 >> SLICE(rcx_231, byte, 0)), word32, 0), word32, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004015C9:
	dwLoc5C = eax_426
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004015E8:
	dwLoc54 = SLICE((uint64) dwLoc64, word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401664:
	branch dwLoc54 <u SLICE((uint64) dwLoc84, word32, 0) l00000000004015F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004015F0:
	puts(0x00000000004019B6)
	call png_read_row (retsize: 8;)
		uses: fs:fs,r12:r12,r13:r13,r8:r8_458,r9:r9_456,rax:rax_66,rbp:fp - 8,rbx:rbx,rcx:rax_142,rdi:rax_66,rdx:0x0000000000000000,rsi:rax_142,rsp:fp - 0x00000000000000A8,Stack +0008:rsi,Stack +0014:edi,Stack +0024:0x00000001,Stack +0028:dwLoc88,Stack +002C:dwLoc84,Stack +0038:dwLoc78,Stack +0044:dwLoc6C_696,Stack +0048:dwLoc68_698,Stack +004C:dwLoc64_713,Stack +0050:dwLoc60_1049,Stack +0054:dwLoc5C_1056,Stack +0058:dwLoc58_1053,Stack +005C:dwLoc54_717,Stack +0060:dwLoc50_898,Stack +0064:dwLoc4C_909,Stack +0068:rax_142,Stack +0070:rax_66,Stack +0078:rax_89,Stack +0080:rax_31,Stack +0088:rax_39,Stack +0090:rax_46,Stack +0098:rax_142,Stack +00A0:rax_13,Stack +00A8:rbp,Stack +FFFFFFE8:fp - 0x0000000000000078,Stack +FFFFFFF0:fp - 0x0000000000000074,Stack +FFFFFFF8:fp - 0x0000000000000070
		defs: r8:r8_459,r9:r9_457,rcx:rcx_454
	branch (uint64) dwLoc54 != rax_39 l000000000040165E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040161B:
	dwLoc50 = SLICE((uint64) dwLoc60, word32, 0)
	dwLoc4C = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401656:
	branch dwLoc50 <u SLICE((uint64) dwLoc88, word32, 0) l000000000040162A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040162A:
	branch (uint64) dwLoc50 != rax_31 l000000000040164C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040164C:
	dwLoc50 = dwLoc50 + SLICE((uint64) dwLoc58, word32, 0)
	dwLoc4C = dwLoc4C + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401633:
	rcx_231 = print_pixel((uint64) dwLoc4C, rax_142, rbx, fp - 8, rax_89, rax_66, r8_237, r9_235, r12, r13, fs, out r8_237, out r9_235)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040165E:
	dwLoc54 = dwLoc54 + SLICE((uint64) dwLoc5C, word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040166C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040166F:
	dwLoc68 = dwLoc68 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040167F:
	word64 rcx_549
	word64 r9_556
	word64 r8_562
	call png_free (retsize: 8;)
		uses: fs:fs,r12:r12,r13:r13,r8:r8_557,r9:r9_551,rax:rax_66,rbp:fp - 8,rbx:rbx,rcx:rcx_541,rdi:rax_66,rdx:rax_142,rsi:rax_142,rsp:fp - 0x00000000000000A8,Stack +0008:rsi,Stack +0014:edi,Stack +0024:0x00000001,Stack +0028:dwLoc88,Stack +002C:dwLoc84,Stack +0038:dwLoc78,Stack +0044:dwLoc6C_696,Stack +0048:dwLoc68_698,Stack +004C:dwLoc64_855,Stack +0050:dwLoc60_847,Stack +0054:dwLoc5C_870,Stack +0058:dwLoc58_863,Stack +005C:dwLoc54_878,Stack +0060:dwLoc50_893,Stack +0064:dwLoc4C_904,Stack +0068:0x0000000000000000,Stack +0070:rax_66,Stack +0078:rax_89,Stack +0080:rax_31,Stack +0088:rax_39,Stack +0090:rax_46,Stack +0098:rax_142,Stack +00A0:rax_13,Stack +00A8:rbp,Stack +FFFFFFE8:fp - 0x0000000000000078,Stack +FFFFFFF0:fp - 0x0000000000000074,Stack +FFFFFFF8:fp - 0x0000000000000070
		defs: r8:r8_562,r9:r9_556,rcx:rcx_549
	call png_destroy_info_struct (retsize: 8;)
		uses: fs:fs,r12:r12,r13:r13,r8:r8_562,r9:r9_556,rax:rax_66,rbp:fp - 8,rbx:rbx,rcx:rcx_549,rdi:rax_66,rdx:fp - 0x0000000000000038,rsi:fp - 0x0000000000000038,rsp:fp - 0x00000000000000A8,Stack +0008:rsi,Stack +0014:edi,Stack +0024:0x00000001,Stack +0028:dwLoc88,Stack +002C:dwLoc84,Stack +0038:dwLoc78,Stack +0044:dwLoc6C_696,Stack +0048:dwLoc68_698,Stack +004C:dwLoc64_855,Stack +0050:dwLoc60_847,Stack +0054:dwLoc5C_870,Stack +0058:dwLoc58_863,Stack +005C:dwLoc54_878,Stack +0060:dwLoc50_893,Stack +0064:dwLoc4C_904,Stack +0068:0x0000000000000000,Stack +0070:rax_66,Stack +0078:rax_89,Stack +0080:rax_31,Stack +0088:rax_39,Stack +0090:rax_46,Stack +0098:rax_142,Stack +00A0:rax_13,Stack +00A8:rbp,Stack +FFFFFFE8:fp - 0x0000000000000078,Stack +FFFFFFF0:fp - 0x0000000000000074,Stack +FFFFFFF8:fp - 0x0000000000000070
		defs: r8:r8_595,r9:r9_594,rcx:rcx_592
	qwLoc48_668 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004016DE:
	call png_destroy_read_struct (retsize: 8;)
		uses: fs:fs,r12:r12,r13:r13,r8:r8_616,r9:r9_613,rax:fp - 0x0000000000000040,rbp:fp - 8,rbx:rbx,rcx:rcx_610,rdi:fp - 0x0000000000000040,rdx:0x0000000000000000,rsi:0x0000000000000000,rsp:fp - 0x00000000000000A8,Stack +0008:rsi,Stack +0014:edi,Stack +0024:0x00000001,Stack +0028:dwLoc88,Stack +002C:dwLoc84,Stack +0038:dwLoc78,Stack +0044:dwLoc6C_951,Stack +0048:dwLoc68_953,Stack +004C:dwLoc64_958,Stack +0050:dwLoc60_956,Stack +0054:dwLoc5C_962,Stack +0058:dwLoc58_960,Stack +005C:dwLoc54_967,Stack +0060:dwLoc50_971,Stack +0064:dwLoc4C_973,Stack +0068:qwLoc48_931,Stack +0070:rax_66,Stack +0078:rax_89,Stack +0080:rax_31,Stack +0088:rax_39,Stack +0090:rax_46,Stack +0098:qwLoc18_937,Stack +00A0:rax_13,Stack +00A8:rbp,Stack +FFFFFFE8:qwLocC8_946,Stack +FFFFFFF0:qwLocC0_943,Stack +FFFFFFF8:qwLocB8_940
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040175D:
	branch (rax_13 ^ Mem627[fs:0x00000028:word64]) == 0x0000000000000000 l0000000000401777
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401777:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

main_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401772:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __libc_csu_init(word64 rdx, word64 rbx, word64 rbp, word64 rsi, word32 edi, word64 r12, word64 r13, word64 r14, word64 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] rbp:[0..63] rbx:[0..63] rdi:[0..31] rdx:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
__libc_csu_init_entry:
	word32 edi = SLICE(rdi, word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000401780:
	word32 r15d_83 = SLICE((uint64) edi, word32, 0)
	word64 rbp_29 = 0x0000000000601E08 - 0x0000000000601E00
	word64 rax_33 = _init()
	branch rbp_29 >> 0x0000000000000003 == 0x0000000000000000 l00000000004017D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004017B6:
	word64 rbx_41 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004017C0:
	call Mem24[0x0000000000601E00 + rbx_41 * 0x0000000000000008:word64] (retsize: 8;)
		uses: rax:rax_61,rdi:(uint64) r15d_83,rdx:rdx,rsi:rsi,Stack +0010:rbx,Stack +0018:rbp,Stack +0020:r12,Stack +0028:r13,Stack +0030:r14,Stack +0038:r15
		defs: rax:rax_62
	rbx_41 = rbx_41 + 0x0000000000000001
	branch rbx_41 != rbp_29 >> 0x0000000000000003 l00000000004017C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004017D6:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

__libc_csu_init_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __libc_csu_fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
__libc_csu_fini_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004017F0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

__libc_csu_fini_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO
// Preserved: rsp
_fini_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004017F4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_fini_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



