void _init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: rsp
_init_entry:
// DataOut: r15d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400AE8:
	branch __gmon_start__ == 0x0000000000000000 l0000000000400AFD
// DataOut: r15d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000400AF8:
	word64 rsp_14
	byte SCZO_15
	word64 rax_16
	byte SZO_17
	bool C_18
	bool Z_19
	call __gmon_start__ (retsize: 8; depth: 16)
		uses: C_6,rax_3,rsp_2,SCZO,SZO_4,Z_5
		defs: C_18,rax_16,rsp_14,SCZO_15,SZO_17,Z_19
// DataOut: r15d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 rax:__gmon_start__

l0000000000400AFD:
	return
// DataOut: r15d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 rax:<invalid>

_init_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid>



void _start(word64 rdx, word64 qwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdx
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0000(64)
// Terminates process
_start_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

_start_entry:
// DataOut: rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Stack +0000(64)

l0000000000400CD0:
	__align(fp + 8)
	__libc_start_main(0x00000000004012F9, qwArg00, fp + 8, 0x0000000000401780, 0x00000000004017F0, rdx, fp)
	__hlt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void deregister_tm_clones(word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8
// LiveOut:
// Trashed: SCZO ah al ax di dil eax edi r8 r8b r8d r8w rax rdi
// Preserved: rbp rsp
deregister_tm_clones_entry:
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400D00:
	branch false l0000000000400D30
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000400D15:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000400D30
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 8 rax:0x00000000006020FF r8:r8 - 6299896 rbp:fp - 8 -8(fp):rbp

l0000000000400D30:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 8 rax:<invalid> r8:r8 - 6299896 rbp:fp - 8 -8(fp):rbp

l0000000000400D1F:
	word64 rsp_42
	word32 eax_43
	word64 rax_44
	word64 rbp_45
	word64 r8_46
	byte SCZO_47
	byte CZ_48
	byte SZO_49
	bool C_50
	bool Z_51
	word32 edi_52
	word64 rdi_53
	call 0x0000000000000000 (retsize: 8; depth: 8)
		uses: C_38,CZ_9,eax,edi,qwLoc08_5,r8_7,rax_35,rbp_39,rdi_41,rsp_40,SCZO_8,SZO_36,Z_37
		defs: C_50,CZ_48,eax_43,edi_52,r8_46,rax_44,rbp_45,rdi_53,rsp_42,SCZO_47,SZO_49,Z_51
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 8 rax:0x0000000000000000 r8:r8 - 6299896 rbp:fp - 8 -8(fp):rbp

deregister_tm_clones_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid> r8:<invalid> rbp:rbp rdi:<invalid> -8(fp):rbp



void register_tm_clones()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax di dil eax edi esi rax rdi rsi si sil
// Preserved: rbp rsp
register_tm_clones_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400D40:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000400D78
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000400D63:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000400D78
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 8 rsi:0x0000000000000000 rbp:fp - 8 rax:0x0000000000000000 -8(fp):rbp

l0000000000400D78:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 8 rsi:0x0000000000000000 rbp:fp - 8 rax:0x0000000000000000 -8(fp):rbp

l0000000000400D6D:
	word64 rsp_40
	word64 rsi_41
	word64 rbp_42
	byte SCZO_43
	word64 rax_44
	bool Z_45
	byte SZO_46
	bool C_47
	word64 rdi_48
	call 0x0000000000000000 (retsize: 8; depth: 8)
		uses: C_36,qwLoc08_5,rax_33,rbp_37,rdi_39,rsi_12,rsp_38,SCZO_13,SZO_34,Z_35
		defs: C_47,rax_44,rbp_42,rdi_48,rsi_41,rsp_40,SCZO_43,SZO_46,Z_45
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 8 rsi:0x0000000000000000 rbp:fp - 8 rax:0x0000000000000000 -8(fp):rbp

register_tm_clones_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rsi:<invalid> rbp:rbp rax:<invalid> rdi:<invalid> -8(fp):rbp



void __do_global_dtors_aux(word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8
// LiveOut:
// Trashed: SCZO ah al ax di dil eax edi r8 r8b r8d r8w rax rdi
// Preserved: rbp rsp
__do_global_dtors_aux_entry:
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400D80:
	branch Mem0[0x0000000000602108:byte] != 0x00 l0000000000400D9A
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400D89:
	deregister_tm_clones(r8)
	Mem16[0x0000000000602108:byte] = 0x01
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000400D9A:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rbp:rbp rax:<invalid> r8:<invalid> rdi:<invalid> -8(fp):rbp

__do_global_dtors_aux_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rbp:rbp rax:<invalid> r8:<invalid> rdi:<invalid> -8(fp):rbp



void frame_dummy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax di dil eax edi esi rax rdi rsi si sil
// Preserved: rbp rsp
frame_dummy_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400DA0:
	branch Mem0[0x0000000000601E10:word64] != 0x0000000000000000 l0000000000400DB0
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400DB0:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000400DAB
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rdi:0x0000000000601E10
// LocalsOut: fp(64)

l0000000000400DBA:
	word64 rsp_39
	word32 edi_40
	word64 rdi_41
	byte SCZO_42
	bool Z_43
	word32 eax_44
	word64 rax_45
	byte SZO_46
	bool C_47
	word64 rbp_48
	word32 esi_49
	word64 rsi_50
	call fn0000000000000000 (retsize: 8; depth: 16)
		uses: C_35,eax,edi,esi,qwLoc08_37,rax_32,rbp_38,rdi_2,rsi,rsp_36,SCZO_4,SZO_33,Z_34
		defs: C_47,eax_44,edi_40,esi_49,rax_45,rbp_48,rdi_41,rsi_50,rsp_39,SCZO_42,SZO_46,Z_43
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rdi:0x0000000000601E10 rax:0x0000000000000000

l0000000000400DC1_thunk_register_tm_clones:
	register_tm_clones()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rdi:<invalid> rax:<invalid> rbp:rbp -8(fp):rbp

l0000000000400DAB:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rdi:0x0000000000601E10 rax:0x0000000000000000

l0000000000400DAB_thunk_register_tm_clones:
	register_tm_clones()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rdi:0x0000000000601E10 rax:0x0000000000000000

frame_dummy_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rdi:<invalid> rsi:<invalid> rax:<invalid> rbp:rbp -8(fp):rbp



word32 component(word32 ecx, word32 edx, word32 esi, word64 rdi, word32 r8d)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx esi r8d rdi
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: rbp rsp
component_entry:
// DataOut: ebx ecx edx esi fs r12d r13d r8d rdi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400DC6:
	word32 eax_39 = (word32) (uint64) ((word32) (uint64) (word32) (uint64) (edx + (word32) ((uint64) ((word32) ((uint64) ((word32) ((uint64) esi) & 0x0000003F)) *s r8d))) *s ecx)
	word64 v16_50 = rdi + ((uint64) ((word32) ((uint64) ((word32) ((uint64) ((word32) ((uint64) ((word32) ((uint64) esi) >>u 0x00000006)) *s r8d)) *s ecx))) << 0x0000000000000003) + (uint64) ((word32) ((uint64) ((word32) ((uint64) eax_39) >>u 0x00000003)))
	branch ecx >u 0x00000010 l0000000000400EC1
// DataOut: ebx fs r12d r13d
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -000C(8) Local -0020(64) Local -002C(64)

l0000000000400E2D:
	word32 eax_112
	switch (ecx) { l0000000000400EC1 l0000000000400E3A l0000000000400E5A l0000000000400EC1 l0000000000400E77 l0000000000400EC1 l0000000000400EC1 l0000000000400EC1 l0000000000400E94 l0000000000400EC1 l0000000000400EC1 l0000000000400EC1 l0000000000400EC1 l0000000000400EC1 l0000000000400EC1 l0000000000400EC1 l0000000000400EA0 }
// DataOut: ebx fs r12d r13d
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rbp:fp - 8 rax:(uint64) eax rdx:(uint64) eax -48(fp):r8d -44(fp):ecx -40(fp):edx -36(fp):esi -32(fp):<invalid> -16(fp):eax -12(fp):eax & 0x00000007 -8(fp):rbp
// LocalsOut: fp(64) Local -000C(8) Local -0020(64) Local -002C(64)

l0000000000400EA0:
	eax_112 = (word32) (uint64) (word32) ((byte) (word32) Mem0[v16_50 + 0x0000000000000001:byte] + (uint64) ((word32) ((uint64) ((word32) ((byte) ((word32) Mem0[v16_50:byte])) << 0x00000008)))) (alias)
// DataOut: eax ebx fs r12d r13d
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rbp:fp - 8 rax:<invalid> rdx:(uint64) eax -48(fp):r8d -44(fp):ecx -40(fp):edx -36(fp):esi -32(fp):<invalid> -16(fp):eax -12(fp):eax & 0x00000007 -8(fp):rbp
// LocalsOut: fp(64)

l0000000000400E94:
	eax_112 = (word32) (byte) (word32) Mem0[v16_50:byte]
// DataOut: eax ebx fs r12d r13d
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rbp:fp - 8 rax:<invalid> rdx:(uint64) eax -48(fp):r8d -44(fp):ecx -40(fp):edx -36(fp):esi -32(fp):<invalid> -16(fp):eax -12(fp):eax & 0x00000007 -8(fp):rbp
// LocalsOut: fp(64)

l0000000000400E77:
	eax_112 = (word32) (uint64) ((word32) (uint64) (word32) (uint64) ((word32) (byte) (word32) Mem0[v16_50:byte] >> (byte) ((uint64) ((word32) ((uint64) (0x00000004 - (eax_39 & 0x00000007)))))) & 0x0000000F) (alias)
// DataOut: eax ebx fs r12d r13d
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rbp:fp - 8 rax:<invalid> rdx:(uint64) eax -48(fp):r8d -44(fp):ecx -40(fp):edx -36(fp):esi -32(fp):<invalid> -16(fp):eax -12(fp):eax & 0x00000007 -8(fp):rbp
// LocalsOut: fp(64)

l0000000000400E5A:
	eax_112 = (word32) (uint64) ((word32) (uint64) (word32) (uint64) ((word32) (byte) (word32) Mem0[v16_50:byte] >> (byte) ((uint64) ((word32) ((uint64) (0x00000006 - (eax_39 & 0x00000007)))))) & 0x00000003) (alias)
// DataOut: eax ebx fs r12d r13d
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rbp:fp - 8 rax:<invalid> rdx:(uint64) eax -48(fp):r8d -44(fp):ecx -40(fp):edx -36(fp):esi -32(fp):<invalid> -16(fp):eax -12(fp):eax & 0x00000007 -8(fp):rbp
// LocalsOut: fp(64)

l0000000000400E3A:
	eax_112 = (word32) (uint64) ((word32) (uint64) (word32) (uint64) ((word32) (byte) (word32) Mem0[v16_50:byte] >> (byte) ((uint64) ((word32) ((uint64) (0x00000007 - (eax_39 & 0x00000007)))))) & 0x00000001) (alias)
// DataOut: eax ebx fs r12d r13d
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rbp:fp - 8 rax:<invalid> rdx:(uint64) eax -48(fp):r8d -44(fp):ecx -40(fp):edx -36(fp):esi -32(fp):<invalid> -16(fp):eax -12(fp):eax & 0x00000007 -8(fp):rbp
// LocalsOut: fp(64)

l0000000000400EE7:
	return eax_112
// DataOut: eax ebx fs r12d r13d
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rbp:fp - 8 rax:<invalid> rdx:<invalid> eax:<invalid> edx:<invalid> rcx:<invalid> -48(fp):r8d -44(fp):ecx -40(fp):edx -36(fp):esi -32(fp):<invalid> -16(fp):eax -12(fp):eax & 0x00000007 -8(fp):rbp

component_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: rsp:fp rbp:rbp rax:<invalid> rdx:<invalid> eax:<invalid> edx:<invalid> rcx:<invalid> -48(fp):r8d -44(fp):ecx -40(fp):edx -36(fp):esi -32(fp):<invalid> -16(fp):eax -12(fp):eax & 0x00000007 -8(fp):rbp

l0000000000400EC1:
	fprintf(Mem0[0x0000000000602100:word64], 0x0000000000401808, (uint64) ecx)
	exit(0x0000000000000001)
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rbp:fp - 8 rax:<invalid> rdx:(uint64) eax -48(fp):r8d -44(fp):ecx -40(fp):edx -36(fp):esi -32(fp):<invalid> -16(fp):eax -12(fp):eax & 0x00000007 -8(fp):rbp



void print_pixel(word32 ecx, word64 rdx, word32 edi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dil ecx edi fs rdx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx esi r8 r8b r8d r8w r9 r9b r9d r9w rax rcx rdi rdx rsi si sil
// Preserved: r12 r13 rbp rbx rsp
print_pixel_entry:
// DataOut: ecx edi fs rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400EE9:
	word64 rsp_37
	word64 rbp_38
	word64 r13_39
	word64 r12_40
	word64 rbx_41
	byte SCZO_42
	word64 rdi_43
	word64 rsi_44
	word64 rdx_45
	word32 ecx_46
	word64 rax_47
	selector fs_48
	word32 eax_49
	byte SZO_50
	bool C_51
	byte al_52
	byte CZ_53
	word32 esi_54
	bool Z_55
	word32 edx_56
	word32 r8d_57
	word64 r8_58
	word64 rcx_59
	word32 r12d_60
	word32 ebx_61
	word32 edi_62
	word32 r13d_63
	word32 r9d_64
	word64 r9_65
	call png_get_bit_depth (retsize: 8; depth: 128)
		uses: al_34,C_31,dwLoc74_23,eax_29,ecx,fs,qwLoc08_4,qwLoc10_8,qwLoc18_11,qwLoc20_14,qwLoc30_27,qwLoc60_17,qwLoc68_19,qwLoc70_21,r12,r13,rax_33,rbp_5,rbx,rdi_36,rdx_32,rsi_35,rsp_15,SZO_30
		defs: al_52,C_51,CZ_53,eax_49,ebx_61,ecx_46,edi_62,edx_56,esi_54,fs_48,r12_40,r12d_60,r13_39,r13d_63,r8_58,r8d_57,r9_65,r9d_64,rax_47,rbp_38,rbx_41,rcx_59,rdi_43,rdx_45,rsi_44,rsp_37,SCZO_42,SZO_50,Z_55
	word32 eax_66 = (word32) al_52
	word64 rsp_73
	word64 rbp_74
	word64 r13_75
	word64 r12_76
	word64 rbx_77
	byte SCZO_78
	word64 rdi_79
	word64 rsi_80
	word64 rdx_81
	word32 ecx_82
	word64 rax_83
	word32 eax_85
	byte SZO_86
	bool C_87
	byte al_88
	byte CZ_89
	word32 esi_90
	bool Z_91
	word32 edx_92
	word32 r8d_93
	word64 r8_94
	word64 rcx_95
	word32 r12d_96
	word32 ebx_97
	word32 edi_98
	word32 r13d_99
	word32 r9d_100
	word64 r9_101
	selector fs_120
	call png_get_color_type (retsize: 8; depth: 128)
		uses: al_70,C_51,CZ_53,dwLoc48_67,dwLoc74_23,eax_66,ebx_61,ecx_46,edi_62,edx_56,esi_54,fs_48,qwLoc08_4,qwLoc10_8,qwLoc18_11,qwLoc20_14,qwLoc30_27,qwLoc60_17,qwLoc68_19,qwLoc70_21,r12_40,r12d_60,r13_39,r13d_63,r8_58,r8d_57,r9_65,r9d_64,rax_69,rbp_38,rbx_41,rcx_59,rdi_72,rdx_68,rsi_71,rsp_37,SCZO_42,SZO_50,Z_55
		defs: al_88,C_87,CZ_89,eax_85,ebx_97,ecx_82,edi_98,edx_92,esi_90,fs_84,r12_76,r12d_96,r13_75,r13d_99,r8_94,r8d_93,r9_101,r9d_100,rax_83,rbp_74,rbx_77,rcx_95,rdi_79,rdx_81,rsi_80,rsp_73,SCZO_78,SZO_86,Z_91
	word64 rax_26 = Mem0[fs:0x00000028:word64]
	word32 eax_102 = (word32) al_88
	branch eax_102 >u 0x00000006 l00000000004012C9
// DataOut: eax fs
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0030(64) Local -0048(32) Local -0060(32) Local -0070(64) Local -0074(64)

l0000000000400F4C:
	switch ((word32) Mem0[(uint64) eax_102 * 0x0000000000000008 + 0x00401958:word64]) { l0000000000400F58 l00000000004012C9 l0000000000401155 l0000000000400F8D l00000000004011D2 l00000000004012C9 l000000000040122A }
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:(word32) al -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -72(fp):(word32) al -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp
// LocalsOut: fp(64) Local -0030(64) Local -0048(32) Local -0060(32) Local -0070(64) Local -0074(64)

l000000000040122A:
	printf(0x0000000000401926, (uint64) component((word32) (uint64) (word32) (uint64) eax_66, 0x00000000, (word32) (uint64) ecx, rdx, 0x00000004), (uint64) (word32) (uint64) component((word32) (uint64) (word32) (uint64) eax_66, 0x00000001, (word32) (uint64) ecx, rdx, 0x00000004), (uint64) (word32) (uint64) component((word32) (uint64) (word32) (uint64) eax_66, 0x00000002, (word32) (uint64) ecx, rdx, 0x00000004), (uint64) (word32) (uint64) component((word32) (uint64) (word32) (uint64) eax_66, 0x00000003, (word32) (uint64) ecx, rdx, 0x00000004))
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -72(fp):(word32) al -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp
// LocalsOut: fp(64) Local -0030(64)

l00000000004011D2:
	printf(0x0000000000401914, (uint64) component((word32) (uint64) (word32) (uint64) eax_66, 0x00000000, (word32) (uint64) ecx, rdx, 0x00000002), (uint64) (word32) (uint64) component((word32) (uint64) (word32) (uint64) eax_66, 0x00000001, (word32) (uint64) ecx, rdx, 0x00000002))
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -72(fp):(word32) al -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp
// LocalsOut: fp(64) Local -0030(64)

l0000000000400F8D:
	word32 esi_261 = (word32) (uint64) ecx
	word32 ecx_266 = (word32) (uint64) (word32) (uint64) eax_66
	word64 rsp_280
	word64 rbp_281
	word64 r13_282
	word64 r12_283
	word64 rbx_284
	byte SCZO_285
	word64 rdi_286
	word64 rsi_287
	word64 rdx_288
	word32 ecx_289
	word64 rax_290
	word32 eax_292
	byte SZO_293
	bool C_294
	byte al_295
	byte CZ_296
	word32 esi_297
	bool Z_298
	word32 edx_299
	word32 r8d_300
	word64 r8_301
	word64 rcx_302
	word32 r12d_303
	word32 ebx_304
	word32 edi_305
	word32 r13d_306
	word32 r9d_307
	word64 r9_308
	call png_get_PLTE (retsize: 8; depth: 128)
		uses: al_104,C_87,CZ_106,dwLoc44_271,dwLoc48_67,dwLoc4C,dwLoc50_273,dwLoc74_23,eax_278,ebx_97,ecx_266,edi_98,edx_268,esi_261,fs_84,qwLoc08_4,qwLoc10_8,qwLoc18_11,qwLoc20_14,qwLoc30_27,qwLoc38,qwLoc40_272,qwLoc60_17,qwLoc68_19,qwLoc70_21,r12_76,r12d_96,r13_75,r13d_99,r8_263,r8d_264,r9_101,r9d_100,rax_277,rbp_74,rbx_77,rcx_274,rdi_279,rdx_275,rsi_276,rsp_73,SCZO_105,SZO_86,Z_91
		defs: al_295,C_294,CZ_296,eax_292,ebx_304,ecx_289,edi_305,edx_299,esi_297,fs_291,r12_283,r12d_303,r13_282,r13d_306,r8_301,r8d_300,r9_308,r9d_307,rax_290,rbp_281,rbx_284,rcx_302,rdi_286,rdx_288,rsi_287,rsp_280,SCZO_285,SZO_293,Z_298
	word32 eax_270 = component(ecx_266, 0x00000000, esi_261, rdx, 0x00000001)
	branch (word32) (uint64) (eax_292 & 0x00000008) == 0x00000000 l0000000000401137
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -72(fp):(word32) al -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp
// LocalsOut: fp(64) Local -0030(64) Local -0044(32) Local -0060(32)

l0000000000400FE1:
	branch true l0000000000401137
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r8:<invalid> rcx:<invalid> edx:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -80(fp):0x00000000 -72(fp):(word32) al -68(fp):<invalid> -64(fp):0x0000000000000000 -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp
// LocalsOut: fp(64) Local -0030(64) Local -0044(32) Local -0060(32)

l0000000000400FEC:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000401137
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r8:<invalid> rcx:<invalid> edx:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -80(fp):0x00000000 -72(fp):(word32) al -68(fp):<invalid> -64(fp):0x0000000000000000 -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp
// LocalsOut: fp(64) Local -0030(64) Local -0044(32) Local -0060(32)

l0000000000401137:
	printf(0x00000000004018EA, (uint64) (word32) (uint64) eax_270)
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r8:<invalid> rcx:<invalid> edx:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -80(fp):0x00000000 -72(fp):(word32) al -68(fp):<invalid> -64(fp):0x0000000000000000 -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp
// LocalsOut: fp(64) Local -0030(64)

l0000000000400FF9:
	word64 rsp_339
	word64 rbp_340
	word64 r13_341
	word64 r12_342
	word64 rbx_343
	byte SCZO_344
	word64 rdi_345
	word64 rsi_346
	word64 rdx_347
	word32 ecx_348
	word64 rax_349
	word32 eax_351
	byte SZO_352
	bool C_353
	byte al_354
	byte CZ_355
	word32 esi_356
	bool Z_357
	word32 edx_358
	word32 r8d_359
	word64 r8_360
	word64 rcx_361
	word32 r12d_362
	word32 ebx_363
	word32 edi_364
	word32 r13d_365
	word32 r9d_366
	word64 r9_367
	call png_get_tRNS (retsize: 8; depth: 128)
		uses: al_295,C_329,CZ_296,dwLoc44_271,dwLoc48_67,dwLoc4C_331,dwLoc50_273,dwLoc74_23,eax_336,ebx_304,ecx_289,edi_305,edx_299,esi_297,fs_291,qwLoc08_4,qwLoc10_8,qwLoc18_11,qwLoc20_14,qwLoc30_27,qwLoc38_330,qwLoc40_272,qwLoc60_17,qwLoc68_19,qwLoc70_21,r12_283,r12d_303,r13_282,r13d_306,r8_337,r8d_300,r9_308,r9d_307,rax_335,rbp_281,rbx_284,rcx_332,rdi_338,rdx_333,rsi_334,rsp_280,SCZO_285,SZO_327,Z_328
		defs: al_354,C_353,CZ_355,eax_351,ebx_363,ecx_348,edi_364,edx_358,esi_356,fs_350,r12_342,r12d_362,r13_341,r13d_365,r8_360,r8d_359,r9_367,r9d_366,rax_349,rbp_340,rbx_343,rcx_361,rdi_345,rdx_347,rsi_346,rsp_339,SCZO_344,SZO_352,Z_357
	branch (word32) (uint64) (eax_351 & 0x00000010) == 0x00000000 l00000000004010D1
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:0x0000000000000000 rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:0x00000000 r8:<invalid> rcx:<invalid> edx:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -80(fp):0x00000000 -72(fp):(word32) al -68(fp):<invalid> -64(fp):0x0000000000000000 -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp
// LocalsOut: fp(64) Local -0030(64) Local -0044(64)

l0000000000401031:
	branch true l00000000004010D1
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r8:<invalid> rcx:<invalid> edx:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -80(fp):0x00000000 -76(fp):0x00000000 -72(fp):(word32) al -68(fp):<invalid> -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp
// LocalsOut: fp(64) Local -0030(64) Local -0044(64)

l000000000040103C:
	branch 0x0000000000000000 == 0x0000000000000000 l00000000004010D1
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r8:<invalid> rcx:<invalid> edx:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -80(fp):0x00000000 -76(fp):0x00000000 -72(fp):(word32) al -68(fp):<invalid> -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp
// LocalsOut: fp(64) Local -0030(64) Local -0044(64)

l00000000004010D1:
	word64 rdx_413 = (uint64) eax_270
	printf(0x00000000004018D3, (uint64) (word32) (uint64) eax_270, DPB(rdx_413, (word32) (byte) (word32) Mem0[rdx_413 * 0x0000000000000003:byte], 0), (word64) (word32) (byte) (word32) Mem0[(uint64) eax_270 * 0x0000000000000003 + 0x0000000000000001:byte], (uint64) (word32) (byte) (word32) Mem0[(uint64) eax_270 * 0x0000000000000003 + 0x0000000000000002:byte])
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r8:<invalid> rcx:<invalid> edx:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -80(fp):0x00000000 -76(fp):0x00000000 -72(fp):(word32) al -68(fp):<invalid> -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp
// LocalsOut: fp(64) Local -0030(64)

l0000000000401049:
	word32 esi_440
	branch eax_270 >=u 0x00000000 l0000000000401063
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:0x0000000000000000 rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:0x00000000 r8:<invalid> rcx:<invalid> edx:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -80(fp):0x00000000 -76(fp):0x00000000 -72(fp):(word32) al -68(fp):<invalid> -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp
// LocalsOut: fp(64) Local -0030(64) Local -0044(64)

l0000000000401063:
	esi_440 = 0x000000FF (alias)
// DataOut: esi fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r8:<invalid> rcx:<invalid> edx:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -80(fp):0x00000000 -76(fp):0x00000000 -72(fp):(word32) al -68(fp):<invalid> -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp
// LocalsOut: fp(64) Local -0030(64) Local -0044(64)

l0000000000401051:
	esi_440 = (word32) (byte) (word32) Mem0[(uint64) eax_270:byte]
// DataOut: esi fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r8:<invalid> rcx:<invalid> edx:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -80(fp):0x00000000 -76(fp):0x00000000 -72(fp):(word32) al -68(fp):<invalid> -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp
// LocalsOut: fp(64) Local -0030(64) Local -0044(64)

l0000000000401068:
	word64 rdx_461 = (uint64) eax_270
	printf(0x00000000004018B9, (uint64) (word32) (uint64) eax_270, DPB(rdx_461, (word32) (byte) (word32) Mem0[rdx_461 * 0x0000000000000003:byte], 0), (word64) (word32) (byte) (word32) Mem0[(uint64) eax_270 * 0x0000000000000003 + 0x0000000000000001:byte], (uint64) (word32) (byte) (word32) Mem0[(uint64) eax_270 * 0x0000000000000003 + 0x0000000000000002:byte], (uint64) esi_440)
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r8:<invalid> rcx:<invalid> esi:(word32) al edx:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -80(fp):0x00000000 -76(fp):0x00000000 -72(fp):(word32) al -68(fp):<invalid> -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp
// LocalsOut: fp(64) Local -0030(64)

l0000000000401150:
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r8:<invalid> rcx:<invalid> esi:<invalid> ecx:(word32) al edx:(word32) al edi:0x004018B9 r9:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -80(fp):0x00000000 -76(fp):0x00000000 -72(fp):(word32) al -68(fp):<invalid> -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp
// LocalsOut: fp(64) Local -0030(64)

l0000000000401155:
	printf(0x0000000000401906, (uint64) component((word32) (uint64) (word32) (uint64) eax_66, 0x00000000, (word32) (uint64) ecx, rdx, 0x00000003), (uint64) (word32) (uint64) component((word32) (uint64) (word32) (uint64) eax_66, 0x00000001, (word32) (uint64) ecx, rdx, 0x00000003), (uint64) (word32) (uint64) component((word32) (uint64) (word32) (uint64) eax_66, 0x00000002, (word32) (uint64) ecx, rdx, 0x00000003))
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -72(fp):(word32) al -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp
// LocalsOut: fp(64) Local -0030(64)

l00000000004012C9:
	word64 rsp_160
	word64 rbp_161
	word64 r13_162
	word64 r12_163
	word64 rbx_164
	byte SCZO_165
	word64 rdi_166
	word64 rsi_167
	word64 rdx_168
	word32 ecx_169
	word64 rax_170
	word32 eax_172
	byte SZO_173
	bool C_174
	byte al_175
	byte CZ_176
	word32 esi_177
	bool Z_178
	word32 edx_179
	word32 r8d_180
	word64 r8_181
	word64 rcx_182
	word32 r12d_183
	word32 ebx_184
	word32 edi_185
	word32 r13d_186
	word32 r9d_187
	word64 r9_188
	call png_error (retsize: 8; depth: 128)
		uses: al_104,C_87,CZ_106,dwLoc44,dwLoc48_67,dwLoc4C,dwLoc50,dwLoc74_23,eax_102,ebx_97,ecx_82,edi_98,edx_92,esi_90,fs_84,qwLoc08_4,qwLoc10_8,qwLoc18_11,qwLoc20_14,qwLoc30_27,qwLoc38,qwLoc40,qwLoc60_17,qwLoc68_19,qwLoc70_21,r12_76,r12d_96,r13_75,r13d_99,r8_94,r8d_93,r9_101,r9d_100,rax_152,rbp_74,rbx_77,rcx_95,rdi_154,rdx_81,rsi_153,rsp_73,SCZO_105,SZO_86,Z_91
		defs: al_175,C_174,CZ_176,eax_172,ebx_184,ecx_169,edi_185,edx_179,esi_177,fs_171,r12_163,r12d_183,r13_162,r13d_186,r8_181,r8d_180,r9_188,r9d_187,rax_170,rbp_161,rbx_164,rcx_182,rdi_166,rdx_168,rsi_167,rsp_160,SCZO_165,SZO_173,Z_178
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -72(fp):(word32) al -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp
// LocalsOut: fp(64) Local -0030(64)

l0000000000400F58:
	printf(0x00000000004018B0, (uint64) component((word32) (uint64) (word32) (uint64) eax_66, 0x00000000, (word32) (uint64) ecx, rdx, 0x00000001))
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -72(fp):(word32) al -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp
// LocalsOut: fp(64) Local -0030(64)

l00000000004012DA:
	branch (rax_26 ^ Mem0[fs_120:0x00000028:word64]) == 0x0000000000000000 l00000000004012EE
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r8:<invalid> rcx:<invalid> r12:<invalid> rbx:<invalid> r13:<invalid> edx:<invalid> esi:<invalid> ecx:(word32) al edi:0x004018B9 r9:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -80(fp):0x00000000 -76(fp):0x00000000 -72(fp):(word32) al -68(fp):<invalid> -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp
// LocalsOut: fp(64)

l00000000004012EE:
	return
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r8:<invalid> rcx:<invalid> r12:<invalid> rbx:<invalid> r13:<invalid> edx:<invalid> esi:<invalid> ecx:(word32) al edi:0x004018B9 r9:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -80(fp):0x00000000 -76(fp):0x00000000 -72(fp):(word32) al -68(fp):<invalid> -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp

print_pixel_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rbp:rbp rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r8:<invalid> rcx:<invalid> r12:r12 rbx:rbx r13:r13 edx:<invalid> esi:<invalid> ecx:(word32) al edi:0x004018B9 r9:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -80(fp):0x00000000 -76(fp):0x00000000 -72(fp):(word32) al -68(fp):<invalid> -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp

l00000000004012E9:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000078 rbp:fp - 8 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r8:<invalid> rcx:<invalid> r12:<invalid> rbx:<invalid> r13:<invalid> edx:<invalid> esi:<invalid> ecx:(word32) al edi:0x004018B9 r9:<invalid> -116(fp):ecx -112(fp):rdx -104(fp):rsi -96(fp):rdi -80(fp):0x00000000 -76(fp):0x00000000 -72(fp):(word32) al -68(fp):<invalid> -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):<invalid> -32(fp):rbx -24(fp):r12 -16(fp):r13 -8(fp):rbp



void main(word64 rsi, word32 edi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi fs rsi
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx esi r8 r8b r8d r8w r9 r9b r9d r9w rax rcx rdi rdx rsi si sil
// Preserved: rbp rsp
main_entry:
// DataOut: edi fs rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l00000000004012F9:
	word64 rax_13 = Mem0[fs:0x00000028:word64]
	branch edi != 0x00000004 l000000000040173F
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0010(64) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32) Local -00A8(64)

l000000000040173F:
	fwrite(0x0000000000401A70, 0x0000000000000001, 0x0000000000000027, Mem0[0x0000000000602100:word64])
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 168 rbp:fp - 8 rax:<invalid> -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64)

l0000000000401337:
	word64 rax_66 = Mem0[rsi + 0x0000000000000008:word64]
	word64 rax_69 = DPB(rax_66, atol(rax_66), 0)
	word64 rax_73 = Mem0[rsi + 0x0000000000000010:word64]
	word64 rax_76 = DPB(rax_73, atol(rax_73), 0)
	word64 rax_83 = fopen(Mem0[rsi + 0x0000000000000018:word64], 0x0000000000401990)
	branch rax_83 == 0x0000000000000000 l0000000000401716
// DataOut: fs rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 168 rbp:fp - 8 rax:<invalid> -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0028(0) Local -0030(0) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32) Local -00A8(64)

l0000000000401716:
	fprintf(Mem0[0x0000000000602100:word64], 0x0000000000401A48, Mem0[rsi + 0x0000000000000018:word64])
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 168 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:0x0000000000401990 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -72(fp):0x0000000000000000 -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64)

l000000000040139D:
	word64 rsp_118
	word64 rbp_119
	byte SCZO_120
	word32 edi_121
	word64 rsi_122
	word64 rax_123
	word32 eax_125
	byte SZO_126
	bool C_127
	bool Z_128
	word64 rdi_129
	word32 esi_130
	word32 ecx_131
	word64 rcx_132
	word32 edx_133
	word64 rdx_134
	word64 r9_135
	word64 r8_136
	byte SO_137
	byte cl_138
	byte al_139
	call png_create_read_struct (retsize: 8; depth: 176)
		uses: al_85,C,cl,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68,dwLoc6C,dwLoc8C_16,dwLoc9C_8,eax_84,ecx,edi,edx,esi,fs,qwLoc08_4,qwLoc10_14,qwLoc18,qwLoc20_86,qwLoc28_77,qwLoc30_70,qwLoc38,qwLoc40,qwLoc48_87,qwLocA8_10,qwLocB8,qwLocC0,qwLocC8,r8,r9,rax_83,rbp_5,rcx_90,rdi_93,rdx_91,rsi_92,rsp_6,SCZO_88,SO,SZO,Z_89
		defs: al_139,C_127,cl_138,eax_125,ecx_131,edi_121,edx_133,esi_130,fs_124,r8_136,r9_135,rax_123,rbp_119,rcx_132,rdi_129,rdx_134,rsi_122,rsp_118,SCZO_120,SO_137,SZO_126,Z_128
	branch rax_123 == 0x0000000000000000 l00000000004016F6
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 168 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:0x0000000000401990 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -72(fp):0x0000000000000000 -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0028(0) Local -0030(0) Local -0040(64) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l00000000004016F6:
	fwrite(0x0000000000401A18, 0x0000000000000001, 0x000000000000002E, Mem0[0x0000000000602100:word64])
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 168 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -72(fp):0x0000000000000000 -64(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64)

l00000000004013C7:
	word64 rsp_147
	word64 rbp_148
	byte SCZO_149
	word32 edi_150
	word64 rsi_151
	word64 rax_152
	selector fs_153
	word32 eax_154
	byte SZO_155
	bool C_156
	bool Z_157
	word64 rdi_158
	word32 esi_159
	word32 ecx_160
	word64 rcx_161
	word32 edx_162
	word64 rdx_163
	word64 r9_164
	word64 r8_165
	byte SO_166
	byte cl_167
	byte al_168
	call png_create_info_struct (retsize: 8; depth: 176)
		uses: al_139,C_144,cl_138,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68,dwLoc6C,dwLoc8C_16,dwLoc9C_8,eax_125,ecx_131,edi_121,edx_133,esi_130,fs_124,qwLoc08_4,qwLoc10_14,qwLoc18,qwLoc20_86,qwLoc28_77,qwLoc30_70,qwLoc38,qwLoc40_140,qwLoc48_87,qwLocA8_10,qwLocB8,qwLocC0,qwLocC8,r8_136,r9_135,rax_145,rbp_119,rcx_132,rdi_146,rdx_134,rsi_122,rsp_118,SCZO_120,SO_137,SZO_142,Z_143
		defs: al_168,C_156,cl_167,eax_154,ecx_160,edi_150,edx_162,esi_159,fs_153,r8_165,r9_164,rax_152,rbp_148,rcx_161,rdi_158,rdx_163,rsi_151,rsp_147,SCZO_149,SO_166,SZO_155,Z_157
	branch rax_152 == 0x0000000000000000 l00000000004016C0
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 168 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -72(fp):0x0000000000000000 -64(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0028(0) Local -0030(0) Local -0040(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l00000000004013E4:
	word64 rsp_245
	word64 rbp_246
	byte SCZO_247
	word32 edi_248
	word64 rsi_249
	word64 rax_250
	selector fs_251
	word32 eax_252
	byte SZO_253
	bool C_254
	bool Z_255
	word64 rdi_256
	word32 esi_257
	word32 ecx_258
	word64 rcx_259
	word32 edx_260
	word64 rdx_261
	word64 r9_262
	word64 r8_263
	byte SO_264
	byte cl_265
	byte al_266
	call png_init_io (retsize: 8; depth: 176)
		uses: al_168,C_173,cl_167,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68,dwLoc6C,dwLoc8C_16,dwLoc9C_8,eax_154,ecx_160,edi_150,edx_162,esi_159,fs_153,qwLoc08_4,qwLoc10_14,qwLoc18,qwLoc20_86,qwLoc28_77,qwLoc30_70,qwLoc38_169,qwLoc40_140,qwLoc48_87,qwLocA8_10,qwLocB8,qwLocC0,qwLocC8,r8_165,r9_164,rax_241,rbp_148,rcx_161,rdi_244,rdx_242,rsi_243,rsp_147,SCZO_149,SO_166,SZO_171,Z_172
		defs: al_266,C_254,cl_265,eax_252,ecx_258,edi_248,edx_260,esi_257,fs_251,r8_263,r9_262,rax_250,rbp_246,rcx_259,rdi_256,rdx_261,rsi_249,rsp_245,SCZO_247,SO_264,SZO_253,Z_255
	word64 rsp_271
	word64 rbp_272
	byte SCZO_273
	word32 edi_274
	word64 rsi_275
	word64 rax_276
	selector fs_277
	word32 eax_278
	byte SZO_279
	bool C_280
	bool Z_281
	word64 rdi_282
	word32 esi_283
	word32 ecx_284
	word64 rcx_285
	word32 edx_286
	word64 rdx_287
	word64 r9_288
	word64 r8_289
	byte SO_290
	byte cl_291
	byte al_292
	call png_read_info (retsize: 8; depth: 176)
		uses: al_266,C_254,cl_265,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68,dwLoc6C,dwLoc8C_16,dwLoc9C_8,eax_252,ecx_258,edi_248,edx_260,esi_257,fs_251,qwLoc08_4,qwLoc10_14,qwLoc18,qwLoc20_86,qwLoc28_77,qwLoc30_70,qwLoc38_169,qwLoc40_140,qwLoc48_87,qwLocA8_10,qwLocB8,qwLocC0,qwLocC8,r8_263,r9_262,rax_268,rbp_246,rcx_259,rdi_270,rdx_267,rsi_269,rsp_245,SCZO_247,SO_264,SZO_253,Z_255
		defs: al_292,C_280,cl_291,eax_278,ecx_284,edi_274,edx_286,esi_283,fs_277,r8_289,r9_288,rax_276,rbp_272,rcx_285,rdi_282,rdx_287,rsi_275,rsp_271,SCZO_273,SO_290,SZO_279,Z_281
	word64 rsp_297
	word64 rbp_298
	byte SCZO_299
	word32 edi_300
	word64 rsi_301
	word64 rax_302
	selector fs_303
	word32 eax_304
	byte SZO_305
	bool C_306
	bool Z_307
	word64 rdi_308
	word32 esi_309
	word32 ecx_310
	word64 rcx_311
	word32 edx_312
	word64 rdx_313
	word64 r9_314
	word64 r8_315
	byte SO_316
	byte cl_317
	byte al_318
	call png_get_rowbytes (retsize: 8; depth: 176)
		uses: al_292,C_280,cl_291,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68,dwLoc6C,dwLoc8C_16,dwLoc9C_8,eax_278,ecx_284,edi_274,edx_286,esi_283,fs_277,qwLoc08_4,qwLoc10_14,qwLoc18,qwLoc20_86,qwLoc28_77,qwLoc30_70,qwLoc38_169,qwLoc40_140,qwLoc48_87,qwLocA8_10,qwLocB8,qwLocC0,qwLocC8,r8_289,r9_288,rax_294,rbp_272,rcx_285,rdi_296,rdx_293,rsi_295,rsp_271,SCZO_273,SO_290,SZO_279,Z_281
		defs: al_318,C_306,cl_317,eax_304,ecx_310,edi_300,edx_312,esi_309,fs_303,r8_315,r9_314,rax_302,rbp_298,rcx_311,rdi_308,rdx_313,rsi_301,rsp_297,SCZO_299,SO_316,SZO_305,Z_307
	word64 rsp_323
	word64 rbp_324
	byte SCZO_325
	word32 edi_326
	word64 rsi_327
	word64 rax_328
	selector fs_329
	word32 eax_330
	byte SZO_331
	bool C_332
	bool Z_333
	word64 rdi_334
	word32 esi_335
	word32 ecx_336
	word64 rcx_337
	word32 edx_338
	word64 rdx_339
	word64 r9_340
	word64 r8_341
	byte SO_342
	byte cl_343
	byte al_344
	call png_malloc (retsize: 8; depth: 176)
		uses: al_318,C_306,cl_317,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68,dwLoc6C,dwLoc8C_16,dwLoc9C_8,eax_304,ecx_310,edi_300,edx_312,esi_309,fs_303,qwLoc08_4,qwLoc10_14,qwLoc18,qwLoc20_86,qwLoc28_77,qwLoc30_70,qwLoc38_169,qwLoc40_140,qwLoc48_87,qwLocA8_10,qwLocB8,qwLocC0,qwLocC8,r8_315,r9_314,rax_320,rbp_298,rcx_311,rdi_322,rdx_319,rsi_321,rsp_297,SCZO_299,SO_316,SZO_305,Z_307
		defs: al_344,C_332,cl_343,eax_330,ecx_336,edi_326,edx_338,esi_335,fs_329,r8_341,r9_340,rax_328,rbp_324,rcx_337,rdi_334,rdx_339,rsi_327,rsp_323,SCZO_325,SO_342,SZO_331,Z_333
	word64 rsp_367
	word64 rbp_368
	byte SCZO_369
	word32 edi_370
	word64 rsi_371
	word64 rax_372
	selector fs_373
	word32 eax_374
	byte SZO_375
	bool C_376
	bool Z_377
	word64 rdi_378
	word32 esi_379
	word32 ecx_380
	word64 rcx_381
	word32 edx_382
	word64 rdx_383
	word64 r9_384
	word64 r8_385
	byte SO_386
	byte cl_387
	byte al_388
	call png_get_IHDR (retsize: 8; depth: 208)
		uses: al_344,C_332,cl_343,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68,dwLoc6C,dwLoc8C_16,dwLoc9C_8,eax_350,ecx_336,edi_326,edx_338,esi_335,fs_329,qwLoc08_4,qwLoc10_14,qwLoc18_347,qwLoc20_86,qwLoc28_77,qwLoc30_70,qwLoc38_169,qwLoc40_140,qwLoc48_345,qwLocA8_10,qwLocB8_359,qwLocC0_362,qwLocC8_365,r8_352,r9_351,rax_349,rbp_324,rcx_353,rdi_366,rdx_354,rsi_348,rsp_364,SCZO_356,SO_342,SZO_331,Z_333
		defs: al_388,C_376,cl_387,eax_374,ecx_380,edi_370,edx_382,esi_379,fs_373,r8_385,r9_384,rax_372,rbp_368,rcx_381,rdi_378,rdx_383,rsi_371,rsp_367,SCZO_369,SO_386,SZO_375,Z_377
	branch eax_374 == 0x00000000 l00000000004016AF
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 168 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -72(fp):0x0000000000000000 -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l00000000004016AF:
	word64 rsp_881
	word64 rbp_882
	byte SCZO_883
	word32 edi_884
	word64 rsi_885
	word64 rax_886
	selector fs_887
	word32 eax_888
	byte SZO_889
	bool C_890
	bool Z_891
	word64 rdi_892
	word32 esi_893
	word32 ecx_894
	word64 rcx_895
	word32 edx_896
	word64 rdx_897
	word64 r9_898
	word64 r8_899
	byte SO_900
	byte cl_901
	byte al_902
	call png_error (retsize: 8; depth: 176)
		uses: al_388,C_392,cl_387,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68,dwLoc6C,dwLoc78,dwLoc84,dwLoc88,dwLoc8C_16,dwLoc9C_8,eax_374,ecx_380,edi_370,edx_382,esi_379,fs_373,qwLoc08_4,qwLoc10_14,qwLoc18_347,qwLoc20_86,qwLoc28_77,qwLoc30_70,qwLoc38_169,qwLoc40_140,qwLoc48_345,qwLocA8_10,qwLocB8_359,qwLocC0_362,qwLocC8_365,r8_385,r9_384,rax_878,rbp_368,rcx_381,rdi_880,rdx_383,rsi_879,rsp_389,SCZO_369,SO_386,SZO_390,Z_391
		defs: al_902,C_890,cl_901,eax_888,ecx_894,edi_884,edx_896,esi_893,fs_887,r8_899,r9_898,rax_886,rbp_882,rcx_895,rdi_892,rdx_897,rsi_885,rsp_881,SCZO_883,SO_900,SZO_889,Z_891
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64)

l00000000004016C0:
	fwrite(0x00000000004019E8, 0x0000000000000001, 0x000000000000002C, Mem0[0x0000000000602100:word64])
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 168 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64)

l000000000040147A:
	word32 eax_395 = (word32) (uint64) dwLoc78
	branch eax_395 == 0x00000000 l0000000000401488
// DataOut: eax fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l0000000000401488:
	dwLoc6C = 0x00000001
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l0000000000401481:
	branch eax_395 == 0x00000001 l0000000000401491
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l0000000000401491:
	dwLoc6C = 0x00000007
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l0000000000401486:
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l000000000040149A:
	word64 rsp_854
	word64 rbp_855
	byte SCZO_856
	word32 edi_857
	word64 rsi_858
	word64 rax_859
	selector fs_860
	word32 eax_861
	byte SZO_862
	bool C_863
	bool Z_864
	word64 rdi_865
	word32 esi_866
	word32 ecx_867
	word64 rcx_868
	word32 edx_869
	word64 rdx_870
	word64 r9_871
	word64 r8_872
	byte SO_873
	byte cl_874
	byte al_875
	call png_error (retsize: 8; depth: 176)
		uses: al_396,C_399,cl_387,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68,dwLoc6C,dwLoc78,dwLoc84,dwLoc88,dwLoc8C_16,dwLoc9C_8,eax_395,ecx_380,edi_370,edx_382,esi_379,fs_373,qwLoc08_4,qwLoc10_14,qwLoc18_347,qwLoc20_86,qwLoc28_77,qwLoc30_70,qwLoc38_169,qwLoc40_140,qwLoc48_345,qwLocA8_10,qwLocB8_359,qwLocC0_362,qwLocC8_365,r8_385,r9_384,rax_851,rbp_368,rcx_381,rdi_853,rdx_383,rsi_852,rsp_389,SCZO_849,SO_386,SZO_397,Z_850
		defs: al_875,C_863,cl_874,eax_861,ecx_867,edi_857,edx_869,esi_866,fs_860,r8_872,r9_871,rax_859,rbp_855,rcx_868,rdi_865,rdx_870,rsi_858,rsp_854,SCZO_856,SO_873,SZO_862,Z_864
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l00000000004014AB:
	word64 rsp_403
	word64 rbp_404
	byte SCZO_405
	word32 edi_406
	word64 rsi_407
	word64 rax_408
	selector fs_409
	word32 eax_410
	byte SZO_411
	bool C_412
	bool Z_413
	word64 rdi_414
	word32 esi_415
	word32 ecx_416
	word64 rcx_417
	word32 edx_418
	word64 rdx_419
	word64 r9_420
	word64 r8_421
	byte SO_422
	byte cl_423
	byte al_424
	call png_start_read_image (retsize: 8; depth: 176)
		uses: al_396,C_399,cl_387,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68,dwLoc6C_400,dwLoc78,dwLoc8C_16,dwLoc9C_8,eax_395,ecx_380,edi_370,edx_382,esi_379,fs_373,qwLoc08_4,qwLoc10_14,qwLoc18_347,qwLoc20_86,qwLoc28_77,qwLoc30_70,qwLoc38_169,qwLoc40_140,qwLoc48_345,qwLocA8_10,qwLocB8_359,qwLocC0_362,qwLocC8_365,r8_385,r9_384,rax_401,rbp_368,rcx_381,rdi_402,rdx_383,rsi_371,rsp_389,SCZO_369,SO_386,SZO_397,Z_398
		defs: al_424,C_412,cl_423,eax_410,ecx_416,edi_406,edx_418,esi_415,fs_409,r8_421,r9_420,rax_408,rbp_404,rcx_417,rdi_414,rdx_419,rsi_407,rsp_403,SCZO_405,SO_422,SZO_411,Z_413
	word32 dwLoc68_425 = 0x00000000
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l0000000000401673:
	word32 eax_453 = (word32) (uint64) dwLoc68_425
	branch eax_453 < dwLoc6C l00000000004014C3
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0068(0) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l00000000004014C3:
	word32 dwLoc5C_554
	word32 dwLoc58_553
	word32 dwLoc64_552
	word32 dwLoc60_551
	branch (word32) (uint64) dwLoc78 != 0x00000001 l00000000004015CE
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0068(0) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l00000000004015CE:
	dwLoc60_551 = 0x00000000
	dwLoc64_552 = 0x00000000
	dwLoc58_553 = 0x00000001
	dwLoc5C_554 = 0x00000001
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0058(32) Local -005C(32) Local -0060(64) Local -0064(32) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l00000000004014CF:
	word32 eax_669
	branch dwLoc68_425 <= 0x00000001 l00000000004014EF
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0068(8) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l00000000004014EF:
	eax_669 = 0x00000007 (alias)
// DataOut: eax fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l00000000004014D5:
	eax_669 = (word32) (uint64) ((word32) (uint64) (word32) (uint64) (0x00000001 << (byte) ((uint64) ((word32) ((uint64) ((word32) ((uint64) (0x00000007 - dwLoc68_425)) >> 0x00000001))))) - 0x00000001) (alias)
// DataOut: eax fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l00000000004014F4:
	word32 eax_707
	word32 edx_703 = (word32) (uint64) (word32) (uint64) ((word32) (uint64) (eax_669 - (word32) ((uint64) ((word32) ((uint64) ((word32) ((uint64) ((word32) ((uint64) ((word32) ((uint64) ((word32) ((uint64) dwLoc68_425))) & 0x00000001)) << (byte) ((uint64) ((word32) ((uint64) ((word32) ((uint64) (0x00000003 - (word32) ((uint64) ((word32) ((uint64) ((word32) ((uint64) dwLoc68_425) + 0x00000001)) >> 0x00000001)))))))))))) & 0x00000007))) + dwLoc88)
	branch dwLoc68_425 <= 0x00000001 l0000000000401531
// DataOut: edx fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l0000000000401531:
	eax_707 = 0x00000003 (alias)
// DataOut: al edx fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l0000000000401525:
	eax_707 = (word32) (uint64) ((word32) (uint64) (0x00000007 - dwLoc68_425) >> 0x00000001) (alias)
// DataOut: al edx fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l0000000000401536:
	branch (word32) (uint64) (word32) (uint64) (edx_703 >>u (byte) ((uint64) eax_707)) == 0x00000000 l000000000040166E
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l000000000040166E:
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l0000000000401544:
	word32 eax_792
	dwLoc60_551 = (word32) (uint64) ((word32) (uint64) (word32) (uint64) ((word32) (uint64) (word32) (uint64) ((word32) (uint64) dwLoc68_425 & 0x00000001) << (byte) ((uint64) ((word32) ((uint64) ((word32) ((uint64) (0x00000003 - (word32) ((uint64) ((word32) ((uint64) ((word32) ((uint64) dwLoc68_425) + 0x00000001)) >> 0x00000001))))))))) & 0x00000007)
	dwLoc64_552 = (word32) (uint64) ((word32) (uint64) (word32) (uint64) ((word32) ((word32) (uint64) ((word32) (uint64) dwLoc68_425 & 0x00000001) == 0x00000000) << (byte) ((uint64) ((word32) ((uint64) ((word32) ((uint64) (0x00000003 - (word32) ((uint64) ((word32) ((uint64) dwLoc68_425) >> 0x00000001))))))))) & 0x00000007)
	dwLoc58_553 = (word32) (uint64) (word32) (uint64) (0x00000001 << (byte) ((uint64) ((word32) ((uint64) ((word32) ((uint64) (0x00000007 - dwLoc68_425)) >> 0x00000001)))))
	branch dwLoc68_425 <= 0x00000002 l00000000004015C4
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0058(32) Local -0060(64) Local -0064(32) Local -0068(8) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l00000000004015C4:
	eax_792 = 0x00000008 (alias)
// DataOut: eax fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0058(32) Local -0060(64) Local -0064(32) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l00000000004015AF:
	eax_792 = (word32) (uint64) (word32) (uint64) (0x00000008 >> (byte) ((uint64) ((word32) ((uint64) ((word32) ((uint64) ((word32) ((uint64) dwLoc68_425) - 0x00000001)) >> 0x00000001))))) (alias)
// DataOut: eax fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0058(32) Local -0060(64) Local -0064(32) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l00000000004015C9:
	dwLoc5C_554 = eax_792
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0058(32) Local -005C(32) Local -0060(64) Local -0064(32) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l00000000004015E8:
	word32 dwLoc54_569 = (word32) (uint64) dwLoc64_552
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0054(0) Local -0058(32) Local -005C(32) Local -0060(64) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l0000000000401664:
	branch dwLoc54_569 <u (word32) ((uint64) dwLoc84) l00000000004015F0
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0054(64) Local -0058(32) Local -005C(32) Local -0060(64) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l00000000004015F0:
	word32 eax_597 = puts(0x00000000004019B6)
	word64 rsp_603
	word64 rbp_604
	byte SCZO_605
	word32 edi_606
	word64 rsi_607
	word64 rax_608
	selector fs_609
	word32 eax_610
	byte SZO_611
	bool C_612
	bool Z_613
	word64 rdi_614
	word32 esi_615
	word32 ecx_616
	word64 rcx_617
	word32 edx_618
	word64 rdx_619
	word64 r9_620
	word64 r8_621
	byte SO_622
	byte cl_623
	byte al_624
	call png_read_row (retsize: 8; depth: 176)
		uses: al_573,C_595,cl_574,dwLoc4C_571,dwLoc50_570,dwLoc54_572,dwLoc58_553,dwLoc5C_554,dwLoc60_551,dwLoc64_552,dwLoc68_433,dwLoc6C_400,dwLoc78,dwLoc84,dwLoc8C_16,dwLoc9C_8,eax_597,ecx_581,edi_585,edx_579,esi_582,fs_583,qwLoc08_4,qwLoc10_14,qwLoc18_347,qwLoc20_86,qwLoc28_77,qwLoc30_70,qwLoc38_169,qwLoc40_140,qwLoc48_345,qwLocA8_10,qwLocB8_359,qwLocC0_362,qwLocC8_365,r8_576,r9_577,rax_598,rbp_589,rcx_599,rdi_602,rdx_600,rsi_601,rsp_590,SCZO_594,SO_575,SZO_587,Z_588
		defs: al_624,C_612,cl_623,eax_610,ecx_616,edi_606,edx_618,esi_615,fs_609,r8_621,r9_620,rax_608,rbp_604,rcx_617,rdi_614,rdx_619,rsi_607,rsp_603,SCZO_605,SO_622,SZO_611,Z_613
	branch (uint64) dwLoc54_569 != rax_76 l000000000040165E
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0054(32) Local -0058(32) Local -005C(32) Local -0060(64) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l000000000040161B:
	word32 dwLoc50_639 = (word32) (uint64) dwLoc60_551
	word32 dwLoc4C_640 = 0x00000000
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -004C(64) Local -0050(0) Local -0054(32) Local -0058(32) Local -005C(32) Local -0060(64) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l0000000000401656:
	branch dwLoc50_639 <u (word32) ((uint64) dwLoc88) l000000000040162A
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -004C(64) Local -0050(64) Local -0054(32) Local -0058(32) Local -005C(32) Local -0060(64) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l000000000040162A:
	branch (uint64) dwLoc50_639 != rax_69 l000000000040164C
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -004C(64) Local -0050(32) Local -0054(32) Local -0058(32) Local -005C(32) Local -0060(64) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l000000000040164C:
	dwLoc50_639 = dwLoc50_639 + (word32) ((uint64) dwLoc58_553)
	dwLoc4C_640 = dwLoc4C_640 + 0x00000001
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -004C(64) Local -0050(0) Local -0054(32) Local -0058(32) Local -005C(32) Local -0060(64) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l0000000000401633:
	print_pixel((word32) (uint64) dwLoc4C_640, rax_328, (word32) rax_123, fs_609)
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64)

l000000000040165E:
	dwLoc54_569 = dwLoc54_569 + (word32) ((uint64) dwLoc5C_554)
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0054(0) Local -0058(32) Local -005C(32) Local -0060(64) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l000000000040166C:
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l000000000040166F:
	dwLoc68_425 = dwLoc68_425 + 0x00000001
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0018(64) Local -0028(0) Local -0030(0) Local -0040(8) Local -0068(32) Local -006C(0) Local -0078(32) Local -0084(32) Local -0088(32)

l000000000040167F:
	word64 rsp_468
	word64 rbp_469
	byte SCZO_470
	word32 edi_471
	word64 rsi_472
	word64 rax_473
	selector fs_474
	word32 eax_475
	byte SZO_476
	bool C_477
	bool Z_478
	word64 rdi_479
	word32 esi_480
	word32 ecx_481
	word64 rcx_482
	word32 edx_483
	word64 rdx_484
	word64 r9_485
	word64 r8_486
	byte SO_487
	byte cl_488
	byte al_489
	call png_free (retsize: 8; depth: 176)
		uses: al_434,C_449,cl_435,dwLoc4C_461,dwLoc50_460,dwLoc54_462,dwLoc58_458,dwLoc5C_459,dwLoc60_456,dwLoc64_457,dwLoc68_433,dwLoc6C_400,dwLoc78,dwLoc8C_16,dwLoc9C_8,eax_453,ecx_441,edi_445,edx_439,esi_442,fs_443,qwLoc08_4,qwLoc10_14,qwLoc18_347,qwLoc20_86,qwLoc28_77,qwLoc30_70,qwLoc38_169,qwLoc40_140,qwLoc48_463,qwLocA8_10,qwLocB8_359,qwLocC0_362,qwLocC8_365,r8_436,r9_437,rax_464,rbp_450,rcx_440,rdi_467,rdx_465,rsi_466,rsp_451,SCZO_454,SO_455,SZO_447,Z_448
		defs: al_489,C_477,cl_488,eax_475,ecx_481,edi_471,edx_483,esi_480,fs_474,r8_486,r9_485,rax_473,rbp_469,rcx_482,rdi_479,rdx_484,rsi_472,rsp_468,SCZO_470,SO_487,SZO_476,Z_478
	word64 rsp_494
	word64 rbp_495
	byte SCZO_496
	word32 edi_497
	word64 rsi_498
	word64 rax_499
	selector fs_500
	word32 eax_501
	byte SZO_502
	bool C_503
	bool Z_504
	word64 rdi_505
	word32 esi_506
	word32 ecx_507
	word64 rcx_508
	word32 edx_509
	word64 rdx_510
	word64 r9_511
	word64 r8_512
	byte SO_513
	byte cl_514
	byte al_515
	call png_destroy_info_struct (retsize: 8; depth: 176)
		uses: al_489,C_477,cl_488,dwLoc4C_461,dwLoc50_460,dwLoc54_462,dwLoc58_458,dwLoc5C_459,dwLoc60_456,dwLoc64_457,dwLoc68_433,dwLoc6C_400,dwLoc78,dwLoc8C_16,dwLoc9C_8,eax_475,ecx_481,edi_471,edx_483,esi_480,fs_474,qwLoc08_4,qwLoc10_14,qwLoc18_347,qwLoc20_86,qwLoc28_77,qwLoc30_70,qwLoc38_169,qwLoc40_140,qwLoc48_463,qwLocA8_10,qwLocB8_359,qwLocC0_362,qwLocC8_365,r8_486,r9_485,rax_490,rbp_469,rcx_482,rdi_493,rdx_491,rsi_492,rsp_468,SCZO_470,SO_487,SZO_476,Z_478
		defs: al_515,C_503,cl_514,eax_501,ecx_507,edi_497,edx_509,esi_506,fs_500,r8_512,r9_511,rax_499,rbp_495,rcx_508,rdi_505,rdx_510,rsi_498,rsp_494,SCZO_496,SO_513,SZO_502,Z_504
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A8 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> edi:0x004018B9 al:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64)

l00000000004016DE:
	word64 rsp_192
	word64 rbp_193
	byte SCZO_194
	word32 edi_195
	word64 rsi_196
	word64 rax_197
	word32 eax_199
	byte SZO_200
	bool C_201
	bool Z_202
	word64 rdi_203
	word32 esi_204
	word32 ecx_205
	word64 rcx_206
	word32 edx_207
	word64 rdx_208
	word64 r9_209
	word64 r8_210
	byte SO_211
	byte cl_212
	byte al_213
	call png_destroy_read_struct (retsize: 8; depth: 176)
		uses: al_168,C_173,cl_167,dwLoc4C_184,dwLoc50_183,dwLoc54_185,dwLoc58_181,dwLoc5C_182,dwLoc60_179,dwLoc64_180,dwLoc68_186,dwLoc6C_178,dwLoc8C_16,dwLoc9C_8,eax_154,ecx_160,edi_150,edx_162,esi_159,fs_153,qwLoc08_4,qwLoc10_14,qwLoc18_174,qwLoc20_86,qwLoc28_77,qwLoc30_70,qwLoc38_169,qwLoc40_140,qwLoc48_187,qwLocA8_10,qwLocB8_175,qwLocC0_176,qwLocC8_177,r8_165,r9_164,rax_188,rbp_148,rcx_161,rdi_191,rdx_189,rsi_190,rsp_147,SCZO_149,SO_166,SZO_171,Z_172
		defs: al_213,C_201,cl_212,eax_199,ecx_205,edi_195,edx_207,esi_204,fs_198,r8_210,r9_209,rax_197,rbp_193,rcx_206,rdi_203,rdx_208,rsi_196,rsp_192,SCZO_194,SO_211,SZO_200,Z_202
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 168 rbp:fp - 8 rax:<invalid> rdi:<invalid> eax:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> edi:<invalid> al:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64)

l000000000040175D:
	branch (rax_13 ^ Mem0[fs:0x00000028:word64]) == 0x0000000000000000 l0000000000401777
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 168 rbp:fp - 8 rax:<invalid> rcx:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r9:<invalid> r8:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> edi:<invalid> al:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp
// LocalsOut: fp(64)

l0000000000401777:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 168 rbp:fp - 8 rax:<invalid> rcx:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r9:<invalid> r8:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> edi:<invalid> al:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp

main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rbp:rbp rax:<invalid> rcx:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r9:<invalid> r8:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> edi:<invalid> al:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp

l0000000000401772:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 168 rbp:fp - 8 rax:<invalid> rcx:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r9:<invalid> r8:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> edi:<invalid> al:<invalid> -200(fp):fp - 0x0000000000000078 -192(fp):fp - 0x0000000000000074 -184(fp):fp - 0x0000000000000070 -168(fp):rsi -156(fp):edi -140(fp):0x00000001 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):<invalid> -8(fp):rbp



void __libc_csu_init(word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi
// LiveOut:
// Trashed: SCZO ah al ax dh di dil dl dx eax edi edx esi rax rdi rdx rsi si sil
// Preserved: r12 r13 r14 r15 rbp rbx rsp
__libc_csu_init_entry:
// DataOut: edi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000401780:
	_init()
	branch 0x0000000000601E08 - 0x0000000000601E00 >> 0x0000000000000003 == 0x0000000000000000 l00000000004017D6
// DataOut: r15d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004017B6:
// DataOut: r15d rbp rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 r15:(uint64) edi r12:0000000000601E00 rbp:0x0000000000601E08 - 0x0000000000601E00 >> 0x0000000000000003 r14:rsi r13:rdx rax:<invalid> -48(fp):rbx -40(fp):rbp -32(fp):r12 -24(fp):r13 -16(fp):r14 -8(fp):r15
// LocalsOut: fp(64)

l00000000004017C0:
	word64 rsp_72
	word64 r15_73
	word64 r14_74
	word32 r15d_75
	word32 edi_76
	word64 r13_77
	word64 r12_78
	word64 rbp_79
	word64 rbx_80
	word64 rsi_81
	word64 rdx_82
	byte SCZO_83
	byte SZO_84
	bool C_85
	bool Z_86
	word32 ebx_87
	word64 rdi_88
	call Mem0[0x0000000000601E00:word64] (retsize: 8; depth: 64)
		uses: C_64,ebx_62,edi,qwLoc08_4,qwLoc10_7,qwLoc18_13,qwLoc20_16,qwLoc28_20,qwLoc30_24,r12_17,r13_66,r14_67,r15_9,r15d_65,rbp_31,rbx_61,rdi_70,rdx_68,rsi_69,rsp_30,SCZO_32,SZO_63,Z_34
		defs: C_85,ebx_87,edi_76,r12_78,r13_77,r14_74,r15_73,r15d_75,rbp_79,rbx_80,rdi_88,rdx_82,rsi_81,rsp_72,SCZO_83,SZO_84,Z_86
	branch rbx_80 + 0x0000000000000001 != rbp_79 l00000000004017C0
// DataOut: r15d rbp rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 r15:(uint64) edi r12:0000000000601E00 rbp:0x0000000000601E08 - 0x0000000000601E00 >> 0x0000000000000003 r14:rsi r13:rdx rbx:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> rax:<invalid> -48(fp):rbx -40(fp):rbp -32(fp):r12 -24(fp):r13 -16(fp):r14 -8(fp):r15
// LocalsOut: fp(64)

l00000000004017D6:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 r15:(uint64) edi r12:0000000000601E00 rbp:0x0000000000601E08 - 0x0000000000601E00 >> 0x0000000000000003 r14:rsi r13:rdx rbx:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> rax:<invalid> -48(fp):rbx -40(fp):rbp -32(fp):r12 -24(fp):r13 -16(fp):r14 -8(fp):r15

__libc_csu_init_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp r15:r15 r12:r12 rbp:rbp r14:r14 r13:r13 rbx:rbx rdx:<invalid> rsi:<invalid> rdi:<invalid> rax:<invalid> -48(fp):rbx -40(fp):rbp -32(fp):r12 -24(fp):r13 -16(fp):r14 -8(fp):r15



void __libc_csu_fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
__libc_csu_fini_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004017F0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

__libc_csu_fini_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void _fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO
// Preserved: rsp
_fini_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004017F4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

_fini_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



