void _init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: rsp
_init_entry:
// DataOut: r15d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400428:
	word64 rax_4 = Mem0[0x0000000000600FF8:word64]
	branch rax_4 == 0x0000000000000000 l000000000040043A
// DataOut: r15d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400438:
	word64 rsp_17
	byte SCZO_18
	word64 rax_19
	byte SZO_20
	byte C_21
	byte Z_22
	word32 eax_23
	call eax (retsize: 4; depth: 12)
		uses: C_7,eax,rax_4,rsp_2,SCZO,SZO_5,Z_6
		defs: C_21,eax_23,rax_19,rsp_17,SCZO_18,SZO_20,Z_22
// DataOut: r15d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 rax:<invalid>
// LocalsOut: fp(64)

l000000000040043A:
	return
// DataOut: r15d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 rax:<invalid>

_init_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid>



void _start(word64 rdx, word64 qwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdx
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0000(64)
// Terminates process
_start_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

_start_entry:
// DataOut: rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0004(0) Stack +0000(64)

l0000000000400480:
	__align(fp + 0x0000000000000008)
	__libc_start_main(0x0000000000400660, qwArg00, fp + 0x0000000000000008, 0x0000000000400710, 0x0000000000400780, rdx, ptrLoc04)
	__hlt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void deregister_tm_clones(word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8
// LiveOut:
// Trashed: SCZO ah al ax di dil eax edi rax rdi
// Preserved: rbp rsp
deregister_tm_clones_entry:
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004004B0:
	branch r8 == 0x0000000000601040 l00000000004004D8
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004004C1:
	branch 0x0000000000000000 == 0x0000000000000000 l00000000004004D8
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 rax:0x0000000000601040 rbp:fp - 0x0000000000000008 -8(fp):rbp

l00000000004004D8:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 rax:<invalid> rbp:fp - 0x0000000000000008 -8(fp):rbp

l00000000004004CB:
	word64 rsp_39
	word64 rbp_40
	word32 eax_41
	word64 rax_42
	word64 r8_43
	byte SCZO_44
	byte Z_45
	byte SZO_46
	byte C_47
	word32 edi_48
	word64 rdi_49
	call eax (retsize: 4; depth: 4)
		uses: C_35,eax,edi,qwLoc08_4,r8,rax_32,rbp_36,rdi_38,rsp_37,SCZO_7,SZO_33,Z_34
		defs: C_47,eax_41,edi_48,r8_43,rax_42,rbp_40,rdi_49,rsp_39,SCZO_44,SZO_46,Z_45
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 rax:0x0000000000000000 rbp:fp - 0x0000000000000008 -8(fp):rbp

deregister_tm_clones_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid> rbp:rbp rdi:<invalid> -8(fp):rbp



void register_tm_clones()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax di dil eax edi esi rax rdi rsi si sil
// Preserved: rbp rsp
register_tm_clones_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004004E0:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000400518
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000400503:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000400518
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 rsi:0x0000000000000000 rbp:fp - 0x0000000000000008 rax:0x0000000000000000 -8(fp):rbp

l0000000000400518:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 rsi:0x0000000000000000 rbp:fp - 0x0000000000000008 rax:0x0000000000000000 -8(fp):rbp

l000000000040050D:
	word64 rsp_42
	word64 rsi_43
	word64 rbp_44
	byte SCZO_45
	word64 rax_46
	byte Z_47
	byte SZO_48
	byte C_49
	word64 rdi_50
	word32 eax_51
	call eax (retsize: 4; depth: 4)
		uses: C_38,eax,qwLoc08_5,rax_35,rbp_39,rdi_41,rsi_12,rsp_40,SCZO_13,SZO_36,Z_37
		defs: C_49,eax_51,rax_46,rbp_44,rdi_50,rsi_43,rsp_42,SCZO_45,SZO_48,Z_47
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 rsi:0x0000000000000000 rbp:fp - 0x0000000000000008 rax:0x0000000000000000 -8(fp):rbp

register_tm_clones_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rsi:<invalid> rbp:rbp rax:<invalid> rdi:<invalid> -8(fp):rbp



void __do_global_dtors_aux(word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8
// LiveOut:
// Trashed: SCZO ah al ax di dil eax edi rax rdi
// Preserved: rbp rsp
__do_global_dtors_aux_entry:
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400520:
	branch Mem0[0x0000000000601040:byte] != 0x00 l0000000000400540
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400540:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000400529:
	deregister_tm_clones(r8)
	Mem13[0x0000000000601040:byte] = 0x01
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

__do_global_dtors_aux_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rbp:rbp rax:<invalid> rdi:<invalid> -8(fp):rbp



void frame_dummy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax di dil eax edi esi rax rdi rsi si sil
// Preserved: rbp rsp
frame_dummy_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400550:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000400554_thunk_register_tm_clones:
	register_tm_clones()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rbp:rbp -8(fp):rbp

frame_dummy_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rbp:rbp rsi:<invalid> rax:<invalid> rdi:<invalid> -8(fp):rbp



word64 my1(word32 esi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi esi
// LiveOut: rax
// Trashed: SCZO ah al ax di dil eax edi esi rax rdi rsi si sil
// Preserved: rbp rsp
my1_entry:
// DataOut: edi esi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400560:
	return calloc((int64) edi, (int64) esi)
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp

my1_exit:
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp rbp:rbp rdi:<invalid> rsi:<invalid> rax:<invalid> -24(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):rbp



void my2(byte sil, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi sil
// LiveOut:
// Trashed: ah al ax eax esi rax rsi si sil
// Preserved: rbp rdi rsp
my2_entry:
// DataOut: rdi sil
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400590:
	Mem15[rdi:byte] = sil
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

my2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rbp:rbp al:<invalid> rsi:0x0000000000000001 rdi:rdi rax:(uint64) esi -17(fp):sil -16(fp):rdi -8(fp):rbp



void branches(word32 esi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi esi
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx esi rax rcx rdi rdx rsi si sil
// Preserved: rbp rsp
branches_entry:
// DataOut: edi esi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004005B0:
	branch (word32) (uint64) edi >= esi l000000000040064F
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0010(32) Local -0014(32)

l00000000004005CA:
	branch (word32) (uint64) ((word32) (uint64) edi << 0x00000001) >= (word32) ((uint64) ((word32) ((uint64) esi) << 0x00000001)) l000000000040064F
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rsi:<invalid> -20(fp):esi -16(fp):edi -8(fp):rbp
// LocalsOut: fp(64) Local -0010(0) Local -0014(0)

l00000000004005DE:
	branch (word32) (uint64) (edi *s 0x00000003) >= (word32) ((uint64) (esi *s 0x00000003)) l000000000040064F
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rsi:<invalid> rax:<invalid> rcx:<invalid> -20(fp):esi -16(fp):edi -8(fp):rbp
// LocalsOut: fp(64) Local -0010(32) Local -0014(32)

l00000000004005EE:
	branch (word32) (uint64) ((word32) (uint64) edi << 0x00000002) >= (word32) ((uint64) ((word32) ((uint64) esi) << 0x00000002)) l000000000040064F
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rsi:<invalid> rax:<invalid> rcx:<invalid> -20(fp):esi -16(fp):edi -8(fp):rbp
// LocalsOut: fp(64) Local -0010(32) Local -0014(32)

l0000000000400602:
	branch (word32) (uint64) (int32) ((int64) (word32) (uint64) (word32) (uint64) edi / 0x00000002) >= (int32) ((int64) ((word32) ((uint64) ((word32) ((uint64) esi)))) / 0x00000002) l000000000040064F
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rsi:<invalid> rax:<invalid> rcx:<invalid> -20(fp):esi -16(fp):edi -8(fp):rbp
// LocalsOut: fp(64) Local -0010(64) Local -0014(64)

l000000000040064F:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rsi:<invalid> rax:<invalid> rcx:<invalid> Sequence edx:eax:<invalid> eax:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):eax -20(fp):esi -16(fp):edi -8(fp):rbp
// LocalsOut: fp(64) Local -000C(64)

l000000000040062B:
	free(my1((word32) (uint64) esi, (word32) (uint64) edi))
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rsi:<invalid> rax:<invalid> rcx:<invalid> Sequence edx:eax:<invalid> eax:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):eax -20(fp):esi -16(fp):edi -8(fp):rbp
// LocalsOut: fp(64) Local -000C(64)

l0000000000400656:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rsi:<invalid> rax:<invalid> rcx:<invalid> Sequence edx:eax:<invalid> eax:<invalid> edx:<invalid> rdi:<invalid> -40(fp):<invalid> -36(fp):eax -32(fp):<invalid> -20(fp):esi -16(fp):edi -12(fp):<invalid> -8(fp):rbp

branches_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rbp:rbp rsi:<invalid> rax:<invalid> rcx:<invalid> Sequence edx:eax:<invalid> eax:<invalid> edx:<invalid> rdi:<invalid> -40(fp):<invalid> -36(fp):eax -32(fp):<invalid> -20(fp):esi -16(fp):edi -12(fp):<invalid> -8(fp):rbp



void main(word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
main_entry:
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400660:
	__llvm_retpoline_r11()
	__llvm_retpoline_r11()
	puts(0x00000000004007A8)
	free(fp - 0x0000000000000028)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// Terminates process

main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsi:0x00000000004007A8 rdi:<invalid> eax:<invalid> rax:<invalid> rsp:rsp + 0x0000000000000088 rbp:<invalid> -48(fp):fp - 0x0000000000000028 -40(fp):<invalid> -32(fp):<invalid> -24(fp):rsi -16(fp):edi -12(fp):0x00000000 -8(fp):rbp



void __llvm_retpoline_r11()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__llvm_retpoline_r11_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__llvm_retpoline_r11_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004006F0:
	fn0000000000400700(qwLoc08)
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004006F5:
	__pause()
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400700(word64 qwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
fn0000000000400700_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000400700:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000000400700_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp 0(fp):r11



void __libc_csu_init(word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi
// LiveOut:
// Trashed: SCZO ah al ax dh di dil dl dx eax edi edx esi rax rdi rdx rsi si sil
// Preserved: r12 r13 r14 r15 rbp rbx rsp
__libc_csu_init_entry:
// DataOut: edi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400710:
	_init()
	branch 0x0000000000600E18 - 0x0000000000600E10 >> 0x0000000000000003 == 0x0000000000000000 l0000000000400766
// DataOut: r15d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400746:
// DataOut: r15d rbp rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 r15:(uint64) edi r12:0000000000600E10 rbp:0x0000000000600E18 - 0x0000000000600E10 >> 0x0000000000000003 r14:rsi r13:rdx rax:<invalid> -48(fp):rbx -40(fp):rbp -32(fp):r12 -24(fp):r13 -16(fp):r14 -8(fp):r15
// LocalsOut: fp(64)

l0000000000400750:
	word64 rsp_72
	word64 r15_73
	word64 r14_74
	word32 r15d_75
	word32 edi_76
	word64 r13_77
	word64 r12_78
	word64 rbp_79
	word64 rbx_80
	word64 rsi_81
	word64 rdx_82
	byte SCZO_83
	byte SZO_84
	byte C_85
	byte Z_86
	word32 ebx_87
	word64 rdi_88
	call Mem0[0x0000000000600E10:word32] (retsize: 4; depth: 60)
		uses: C_64,ebx_62,edi,qwLoc08_4,qwLoc10_7,qwLoc18_13,qwLoc20_16,qwLoc28_20,qwLoc30_24,r12_17,r13_66,r14_67,r15_9,r15d_65,rbp_31,rbx_61,rdi_70,rdx_68,rsi_69,rsp_30,SCZO_32,SZO_63,Z_34
		defs: C_85,ebx_87,edi_76,r12_78,r13_77,r14_74,r15_73,r15d_75,rbp_79,rbx_80,rdi_88,rdx_82,rsi_81,rsp_72,SCZO_83,SZO_84,Z_86
	branch rbp_79 != rbx_80 + 0x0000000000000001 l0000000000400750
// DataOut: r15d rbp rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 r15:(uint64) edi r12:0000000000600E10 rbp:0x0000000000600E18 - 0x0000000000600E10 >> 0x0000000000000003 r14:rsi r13:rdx rbx:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> rax:<invalid> -48(fp):rbx -40(fp):rbp -32(fp):r12 -24(fp):r13 -16(fp):r14 -8(fp):r15
// LocalsOut: fp(64)

l0000000000400766:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 r15:(uint64) edi r12:0000000000600E10 rbp:0x0000000000600E18 - 0x0000000000600E10 >> 0x0000000000000003 r14:rsi r13:rdx rbx:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> rax:<invalid> -48(fp):rbx -40(fp):rbp -32(fp):r12 -24(fp):r13 -16(fp):r14 -8(fp):r15

__libc_csu_init_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp r15:r15 r12:r12 rbp:rbp r14:r14 r13:r13 rbx:rbx rdx:<invalid> rsi:<invalid> rdi:<invalid> rax:<invalid> -48(fp):rbx -40(fp):rbp -32(fp):r12 -24(fp):r13 -16(fp):r14 -8(fp):r15



void __libc_csu_fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
__libc_csu_fini_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000400780:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

__libc_csu_fini_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void _fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO
// Preserved: rsp
_fini_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400784:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

_fini_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



