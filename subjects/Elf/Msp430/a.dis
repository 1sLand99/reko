void __write_char()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn09B2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn09B2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09B2:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00004000(word20 pc, word20 sr, word20 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] r8:[0..19] sr:[0..19]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn00004000_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00004000_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004000:
	Mem3[0x0120:ptr16] = 0x5A80
	word20 r15_12 = 0x5B78
	word20 r14_13 = 0x0200
	word20 r13_6 = 0x021C
	branch r13_6 == r14_13 l00004020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004016:
	Mem16[r14_13:byte] = Mem10[r15_12:byte]
	r15_12 = r15_12 + 1
	r14_13 = r14_13 + 0x0001
	branch r14_13 >=u r13_6 l00004016
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004020:
	word20 r15_21 = 0x021C
	word20 r13_22 = 0x09B4
	branch r13_22 == r15_21 l00004036
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000402C:
	Mem29[r15_21:byte] = 0x00
	r15_21 = r15_21 + 0x0001
	branch r15_21 >=u r13_22 l0000402C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004036:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004036_thunk_main:
	main(pc, sr, r8)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void task_idle(word20 sr, word20 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8:[0..19] sr:[0..19]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
task_idle_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

task_idle_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4048:
	word20 r15_13
	word20 sr_14 = xTaskGetTickCount(sr, out r15_13)
	word20 r10_20 = r15_13 + 0x03E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l405A:
	word20 r15_27
	sr_14 = xTaskGetTickCount(sr_14, out r15_27)
	branch r10_20 - r15_27 >= 0x0001 l4080
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4080:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l406A:
	printf(r8)
	r10_20 = r15_27 + 0x03E8
// DataOut:
// DataOut (flags):
// SymbolicIn:



void task_1(word20 pc, word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] sr:[0..19]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
task_1_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

task_1_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4096:
	word20 r15_6
	word20 sr_20 = xTaskGetTickCount(sr, out r15_6)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l40A0:
	Mem17[0x0031:ptr16] = Mem16[0x0031:ptr16] ^ 0x01
	word20 r11_50
	sr_20 = vTaskDelayUntil(pc, putchar(pc, sr_20, 0x0058, out r11_50), 0x01F4, fp - 0x0002)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void task_2(word20 pc, word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] sr:[0..19]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
task_2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

task_2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l40BC:
	word20 r15_6
	word20 sr_20 = xTaskGetTickCount(sr, out r15_6)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l40C6:
	Mem17[0x0031:ptr16] = Mem16[0x0031:ptr16] ^ 0x02
	word20 r11_50
	sr_20 = vTaskDelayUntil(pc, putchar(pc, sr_20, 0x0059, out r11_50), 0x00FA, fp - 0x0002)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void task_3(word20 pc, word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] sr:[0..19]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
task_3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

task_3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l40E2:
	word20 r15_6
	word20 sr_20 = xTaskGetTickCount(sr, out r15_6)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l40EC:
	Mem17[0x0031:ptr16] = Mem16[0x0031:ptr16] ^ 0x04
	word20 r11_50
	sr_20 = vTaskDelayUntil(pc, putchar(pc, sr_20, 0x005A, out r11_50), 0x0019, fp - 0x0002)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void main(word20 pc, word20 sr, word20 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] r8:[0..19] sr:[0..19]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
main_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

main_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l414C:
	__set_stackpointer(0x0A00)
	Mem3[0x0120:ptr16] = 0x5A80
	Mem4[0x0056:ptr16] = 0xFFE0
	Mem5[0x0057:ptr16] = 0x0007
	Mem6[0x0032:ptr16] = 0x0007
	Mem7[0x0031:ptr16] = 0x0007
	word20 sr_23 = init_uart_isr(pc, sr, 0x2580, 0x0000, 0x0010)
	uart_putchar_isr_mode(0x00)
	printf(r8)
	uart_putchar_isr_mode(0x01)
	word20 r15_154
	word20 r15_155
	word20 r15_156
	word20 r15_157
	vTaskStartScheduler(pc, xTaskCreate(pc, xTaskCreate(pc, xTaskCreate(pc, xTaskCreate(pc, sr_23, 0x0000, 0x0032, 0x414B, 0x4096, out r15_154), 0x0000, 0x0032, 0x414B, 0x40BC, out r15_155), 0x0000, 0x0032, 0x414B, 0x40E2, out r15_156), 0x0000, 0x0096, 0x414B, 0x4048, out r15_157))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5AD8:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 msp430_compute_modulator_bits(word20 r12, word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..19] r13:[0..19] r14:[0..19] r15:[0..19]
// LiveOut: r15
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r10 r11 r4 r5 r6 r7 r8 r9 sp sr
msp430_compute_modulator_bits_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000420E:
	word16 v16_39 = Mem26[fp + 0x00000002:word16]
	word20 r12_45 = fn00005B04(r14, r15, r12, r13)
	word20 r15_74
	word20 r8_80 = fn00005ADC(r14, r15, r12_45, 0x0000, out r15_74) - r12
	word20 r9_83 = r15_74 - r13 - (r8_80 <u 0x00000)
	branch v16_39 == 0x0000 l00004274
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000426C:
	Mem92[v16_39:word16] = r12_45
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004274:
	word20 r7_143 = 0x00
	word20 r10_127 = 0x0000
	word20 r11_101 = 0x0000
	word20 r6_132 = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000427C:
	r10_127 = r10_127 + r8_80
	word20 r14_111 = (r14 ^ 0xFFFF) + 0x0001
	r11_101 = r11_101 + r9_83 + (r10_127 <u 0x00000)
	branch r11_101 * 0x00002 + (r10_127 * 0x00002 <u 0x00000) - ((r15 ^ 0xFFFF) + (r14_111 <u 0x00000)) - (r10_127 * 0x00002 - r14_111 <u 0x00000) >= 0x00000 l000042AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000429A:
	r10_127 = r10_127 + r14
	r11_101 = r11_101 + r15 + (r10_127 <u 0x00000)
	word20 r15_131 = 0x0001
	word20 r14_133 = r6_132
	branch r6_132 == 0x00000 l000042AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000042A6:
	r15_131 = r15_131 * 0x00002
	r14_133 = r14_133 - 0x0001
	branch r14_133 != 0x00000 l000042A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000042AC:
	r7_143 = r7_143 | r15_131
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000042AE:
	r6_132 = r6_132 + 0x01
	branch r6_132 >=u 0x08 l0000427C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000042B4:
	return r7_143
// DataOut:
// DataOut (flags):
// SymbolicIn:

msp430_compute_modulator_bits_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 init_uart_isr(word20 pc, word20 sr, word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] r13:[0..19] r14:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: sr
// Trashed: VNZC r12 r13 r14 r15 sr
// Preserved: r10 r11 r4 r6 r7 r8 r9 sp
init_uart_isr_entry:
	byte bLoc10 = SLICE(wLoc10, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000042CC:
	word16 v15_34 = Mem23[fp + 0x00000002:word16]
	word16 v16_37 = Mem23[fp + 0x00000004:word16]
	byte v17_41 = Mem23[fp + 0x00000006:byte]
	Mem45[0x0218:ptr16] = Mem23[0x0218:ptr16] + 0x0001
	word20 r15_51
	word20 sr_52 = xQueueCreate(pc, sr & ~0x0008, v17_41, out r15_51)
	Mem57[0x021C:ptr16] = r15_51
	word20 r15_61
	word20 sr_107 = xQueueCreate(pc, sr_52, v17_41, out r15_61)
	Mem67[0x021E:ptr16] = r15_61
	Mem68[0x0078:ptr16] = 0x01
	Mem69[0x0078:ptr16] = Mem68[0x0078:ptr16] | 0x0010
	Mem73[0x0079:ptr16] = r15 & 0x0030
	word20 r15_83 = msp430_compute_modulator_bits(v15_34, v16_37, r13, r14)
	Mem90[0x007C:ptr16] = bLoc10
	Mem95[0x007D:ptr16] = __swpb(wLoc10) & 0xFF
	Mem96[0x007B:ptr16] = r15_83
	Mem97[0x0005:ptr16] = Mem96[0x0005:ptr16] | 0x0030
	Mem98[0x0078:ptr16] = 0x0010
	Mem99[0x001B:ptr16] = Mem98[0x001B:ptr16] | 0xFFC0
	Mem100[0x0001:ptr16] = Mem99[0x0001:ptr16] | 0x0030
	branch 0x0218 == 0x0000 l0000436E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004366:
	Mem104[0x0218:ptr16] = Mem100[0x0218:ptr16] + 0xFFFF
	branch Mem104[0x0218:ptr16] != 0x0000 l0000436E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000436C:
	sr_107 = sr_107 | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000436E:
	return sr_107
// DataOut:
// DataOut (flags):
// SymbolicIn:

init_uart_isr_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void getchar(word20 pc, word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] sr:[0..19]
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7 r8 sr
// Preserved: sp
getchar_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4380:
	branch x_getchar(pc, sr, 0x0064, fp - 0x0002) == 0x00000 l4396
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4396:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4390:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4398:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

getchar_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void uart_putchar_isr_mode(word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..19]
// LiveOut:
// Trashed:
// Preserved: sp
uart_putchar_isr_mode_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000439C:
	Mem4[0x0200:ptr16] = r15
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

uart_putchar_isr_mode_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 putchar(word20 pc, word20 sr, word20 r15, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: r11 sr
// Trashed: VNZC r13 r14 r15 sr
// Preserved: r11 sp
putchar_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000043A2:
	word20 r11_12 = r15
	branch r15 == 0x000A l000043D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000043D6:
	putchar(pc, sr, 0x000D, out r11_12)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000043AC:
	word20 r15_26
	branch 0x0200 != 0x0000 l000043CA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000043CA:
	sr = x_putchar(pc, sr, 0x0064, r11_12, out r15_26)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000043B2:
	branch (0x0079 & 0x01) == 0x00 l000043B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000043B8:
	Mem38[0x007F:ptr16] = r11_12
	r15_26 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000043BE:
	branch r15_26 == 0x00000 l000043C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000043C6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000043C2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000043E0:
	r11Out = <invalid>
	return sr
// DataOut:
// DataOut (flags):
// SymbolicIn:

putchar_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 x_getchar(word20 pc, word20 sr, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] r14:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: r15
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7 r8 sr
// Preserved: sp
x_getchar_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l43E4:
	word20 r15_11
	xQueueReceive(pc, sr, r14, r15, 0x021C, out r15_11)
	branch r15_11 == 0x00000 l43F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l43F8:
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l43F4:
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

x_getchar_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 x_putchar(word20 pc, word20 sr, word20 r14, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] r14:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r13 r15 sr
// Preserved: r12 r14 r4 r5 r6 r7 r8 sp
x_putchar_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000043FC:
	Mem13[0x0218:ptr16] = Mem8[0x0218:ptr16] + 0x0001
	word20 sr_108 = sr & ~0x0008
	branch 0x0221 == 0x0000 l00004440
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004410:
	word20 r15_23
	sr_108 = xQueueSend(pc, sr_108, r14, fp - 0x0002, 0x021E, out r15_23)
	branch 0x0221 == 0x0000 l00004430
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004430:
	branch r15_23 != 0x0001 l00004420
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004434:
	word20 r15_112
	sr_108 = xQueueReceive(pc, sr_108, 0x0000, fp - 0x0002, 0x021E, out r15_112)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004440:
	Mem55[0x0220:ptr16] = 0x0000
	Mem58[0x007F:ptr16] = r15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004420:
	branch 0x0218 == 0x0000 l0000444A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004426:
	Mem62[0x0218:ptr16] = Mem61[0x0218:ptr16] + 0xFFFF
	branch Mem62[0x0218:ptr16] != 0x0000 l0000444A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000442C:
	sr_108 = sr_108 | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000444A:
	r15Out = 0x0001
	return sr_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

x_putchar_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vRxISR(word20 pc, word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] sr:[0..19]
// LiveOut:
// Trashed: VNZC r10 r11 r4 r5 r6 r7 r8 r9 sr
// Preserved: r12 r13 r14 r15 sp
vRxISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4450:
	word20 r15_27
	word20 sr_28 = xQueueSendFromISR(sr, 0x0000, fp - 0x0000000A, 0x021C, out r15_27)
	branch r15_27 == 0x00000 l4474
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4470:
	word20 r11_104
	word20 r10_103
	word20 r9_102
	word20 r8_101
	vPortYield(pc, sr_28, out r8_101, out r9_102, out r10_103, out r11_104)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4474:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vRxISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vTxISR(word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  sr:[0..19]
// LiveOut:
// Trashed: VNZC sr
// Preserved: r12 r13 r14 r15 sp
vTxISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4480:
	branch xQueueReceiveFromISR(sr, fp - 0x0000000C, fp - 0x0000000A, 0x021E) == 0x0001 l44A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l44A2:
	Mem34[0x007F:ptr16] = bLoc0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l449C:
	Mem35[0x0220:ptr16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l44A8:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTxISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 xTaskCreate(word20 pc, word20 sr, word20 r12, word20 r13, word20 r14, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] r12:[0..19] r13:[0..19] r14:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r12 r13 r14 r15 r4 sr
// Preserved: r10 r11 r5 r6 r7 r8 r9 sp
xTaskCreate_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000044B4:
	word20 r10_142
	word16 v15_35 = Mem23[fp + 0x00000002:word16]
	word16 v16_37 = Mem23[fp + 0x00000004:word16]
	word20 r15_46
	word20 sr_152 = prvAllocateTCBAndStack(pc, sr, r13, out r15_46)
	branch r15_46 == 0x00000 l000045A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000045A0:
	r10_142 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000044E2:
	prvInitialiseTCBVariables(v15_35, r14, r13, r15_46)
	Mem82[r15_46:word16] = pxPortInitialiseStack(r12, r15, Mem23[r15_46 + 36:word16] * 0x00002 + Mem23[r15_46 + 2:word16] - 0x0002)
	Mem84[0x0218:ptr16] = Mem82[0x0218:ptr16] + 0x0001
	Mem86[0x0206:ptr16] = Mem84[0x0206:ptr16] + 0x0001
	sr_152 = sr_152 & ~0x0008
	branch 0x0207 == 0x0000 l00004596
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004596:
	Mem90[0x0202:ptr16] = r15_46
	prvInitialiseTaskLists()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004514:
	branch 0x020E != 0x0000 l0000452A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000451A:
	branch v15_35 >=u Mem86[0x0208:word16] l0000452A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004526:
	Mem103[0x0202:ptr16] = r15_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000452A:
	word16 v25_106 = Mem105[r15_46 + 6:word16]
	branch 0x020A <u v25_106 l00004538
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004534:
	Mem110[0x020A:ptr16] = v25_106
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004538:
	Mem115[r15_46 + 4:word16] = 0x0214
	Mem116[0x0214:ptr16] = Mem115[0x0214:ptr16] + 0x0001
	Mem120[r15_46 + 8:word16] = 0x0000
	branch 0x020C <u v25_106 l00004550
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000454C:
	Mem124[0x020C:ptr16] = v25_106
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004550:
	vListInsertEnd(r15_46 + 0x0008, v25_106 * 0x00010 + 0x0222)
	r10_142 = 0x0001
	branch 0x0218 == 0x0000 l00004574
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000456C:
	Mem146[0x0218:ptr16] = Mem145[0x0218:ptr16] + 0xFFFF
	branch Mem146[0x0218:ptr16] != 0x0000 l00004574
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004572:
	sr_152 = sr_152 | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004574:
	branch r10_142 != 0x0001 l000045A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004578:
	branch v16_37 == 0x0000 l00004580
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000457C:
	Mem166[v16_37:word16] = r15_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004580:
	branch 0x020E == 0x0000 l000045A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004586:
	branch Mem170[0x0208:word16] <u v15_35 l000045A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004590:
	word20 r9_316
	word20 r11_317
	word20 r8_315
	sr_152 = vPortYield(pc, sr_152, out r8_315, out r9_316, out r10_142, out r11_317)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000045A4:
	r15Out = r10_142
	return sr_152
// DataOut:
// DataOut (flags):
// SymbolicIn:

xTaskCreate_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vTaskDelete(word20 pc, word20 sr, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] r15:[0..19] sr:[0..19]
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7 r8 sr
// Preserved: r10 r11 r9 sp
vTaskDelete_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l45B6:
	Mem16[0x0218:ptr16] = Mem11[0x0218:ptr16] + 0x0001
	word20 sr_15 = sr & ~0x0008
	word20 r11_18 = r15
	branch r15 == 0x00000 l460C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l460C:
	r11_18 = 0x0202
// DataOut:
// DataOut (flags):
// SymbolicIn:

l45CA:
	word20 r10_24 = r11_18 + 0x0008
	vListRemove(r10_24)
	branch Mem16[r11_18 + 26:word16] != 0x0000 l4600
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4600:
	vListRemove(r11_18 + 0x0012)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l45DA:
	vListInsertEnd(r10_24, 0x0296)
	Mem59[0x0204:ptr16] = Mem16[0x0204:ptr16] + 0x0001
	branch 0x0218 == 0x0000 l45F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l45EE:
	Mem63[0x0218:ptr16] = Mem59[0x0218:ptr16] + 0xFFFF
	branch Mem63[0x0218:ptr16] != 0x0000 l45F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l45F4:
	sr_15 = sr_15 | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l45F6:
	branch r15 != 0x00000 l4612
// DataOut:
// DataOut (flags):
// SymbolicIn:

l45FA:
	word20 r9_169
	word20 r10_170
	word20 r11_171
	word20 r8_168
	vPortYield(pc, sr_15, out r8_168, out r9_169, out r10_170, out r11_171)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4612:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskDelete_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 vTaskDelayUntil(word20 pc, word20 sr, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] r14:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: sr
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7 r8 sr
// Preserved: r10 r11 r9 sp
vTaskDelayUntil_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000461A:
	word20 sr_18 = vTaskSuspendAll(sr)
	word16 v8_23 = Mem11[r15:word16]
	word20 r10_16 = 0x0000
	word20 r11_25 = r14 + v8_23
	branch 0x0208 <u v8_23 l00004690
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004690:
	branch r11_25 >=u v8_23 l0000463E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004694:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004634:
	branch r11_25 <u v8_23 l00004640
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004638:
	branch 0x0208 <u r11_25 l00004640
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000463E:
	r10_16 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004640:
	Mem46[r15:word16] = r11_25
	branch r10_16 != 0x00000 l00004656
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004656:
	word20 r14_71
	word20 r15_72
	vListRemove(0x020A)
	Mem64[0x020A:word16] = r11_25
	branch r11_25 <u 0x0208 l00004682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004682:
	r14_71 = 0x020A
	r15_72 = 0x0282
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004670:
	r14_71 = 0x020A
	r15_72 = 0x0284
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000467C:
	vListInsert(r14_71, r15_72)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004648:
	word20 r15_98
	word20 sr_119 = xTaskResumeAll(pc, sr_18, out r15_98)
	branch r15_98 != 0x00000 l00004696
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004650:
	word20 r10_226
	word20 r8_224
	word20 r11_227
	word20 r9_225
	sr_119 = vPortYield(pc, sr_119, out r8_224, out r9_225, out r10_226, out r11_227)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004696:
	return sr_119
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskDelayUntil_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vTaskDelay(word20 pc, word20 sr, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] r15:[0..19] sr:[0..19]
// LiveOut:
// Trashed: VNZC r10 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: r11 sp
vTaskDelay_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l469E:
	word20 r15_57 = 0x0000
	branch r15 != 0x00000 l46B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l46B2:
	word20 r14_38
	word20 r15_39
	word20 sr_12 = vTaskSuspendAll(sr)
	vListRemove(0x020A)
	word20 r11_17 = r15 + 0x0208
	Mem31[0x020A:word16] = r11_17
	branch r11_17 <u 0x0208 l46EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l46EA:
	r14_38 = 0x020A
	r15_39 = 0x0282
// DataOut:
// DataOut (flags):
// SymbolicIn:

l46D4:
	r14_38 = 0x020A
	r15_39 = 0x0284
// DataOut:
// DataOut (flags):
// SymbolicIn:

l46E0:
	vListInsert(r14_38, r15_39)
	sr = xTaskResumeAll(pc, sr_12, out r15_57)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l46A8:
	branch r15_57 != 0x00000 l46F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l46AC:
	word20 r10_147
	word20 r11_148
	word20 r8_145
	word20 r9_146
	vPortYield(pc, sr, out r8_145, out r9_146, out r10_147, out r11_148)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l46F8:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskDelay_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vTaskStartScheduler(word20 pc, word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] sr:[0..19]
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
vTaskStartScheduler_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004702:
	branch 0x0202 != 0x0000 l0000470A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000470A:
	word20 r15_18
	xTaskCreate(pc, sr, 0x0000, 0x0032, 0x46FC, 0x49AC, out r15_18)
	branch r15_18 != 0x0001 l00004708
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004726:
	Mem29[0x020E:ptr16] = 0x0001
	Mem30[0x0208:ptr16] = 0x0000
	xPortStartScheduler(pc)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004708:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskStartScheduler_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vTaskEndScheduler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: sr
// Preserved: sp
vTaskEndScheduler_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4736:
	Mem5[0x020E:ptr16] = 0x0000
	vPortEndScheduler()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskEndScheduler_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 vTaskSuspendAll(word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  sr:[0..19]
// LiveOut: sr
// Trashed: VNZC sr
// Preserved: sp
vTaskSuspendAll_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004742:
	Mem6[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	Mem8[0x0210:ptr16] = Mem6[0x0210:ptr16] + 0x0001
	word20 sr_15 = sr & ~0x0008
	branch 0x0218 == 0x0000 l0000475A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004752:
	Mem12[0x0218:ptr16] = Mem8[0x0218:ptr16] + 0xFFFF
	branch Mem12[0x0218:ptr16] != 0x0000 l0000475A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004758:
	sr_15 = sr_15 | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000475A:
	return sr_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskSuspendAll_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 xTaskResumeAll(word20 pc, word20 sr, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r15 sr
// Preserved: r10 r11 r12 r13 r14 r4 r5 r6 r7 r8 r9 sp
xTaskResumeAll_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000475C:
	Mem18[0x0218:ptr16] = Mem14[0x0218:ptr16] + 0x0001
	Mem20[0x0210:ptr16] = Mem18[0x0210:ptr16] + 0xFFFF
	word20 r8_101 = 0x0000
	word20 sr_17 = sr & ~0x0008
	branch Mem20[0x0210:ptr16] != 0x0000 l000047EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004772:
	branch 0x0206 == 0x0000 l000047EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004778:
	word20 r9_180 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000477A:
	word20 r11_28
	branch 0x0286 == 0x0000 l0000480E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000480E:
	r11_28 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004780:
	r11_28 = Mem30[Mem30[0x028A:word16] + 6:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000478C:
	branch r11_28 == 0x00000 l000047D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000047D8:
	branch 0x0212 == 0x0000 l000047E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000047DE:
	branch 0x0212 != 0x0000 l00004802
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004802:
	vTaskIncrementTick()
	Mem51[0x0212:ptr16] = Mem50[0x0212:ptr16] + 0xFFFF
	branch Mem51[0x0212:ptr16] != 0x0000 l00004802
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000480C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000047E4:
	r9_180 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000047E6:
	branch r9_180 == 0x0001 l000047FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000047FA:
	word20 r10_293
	word20 r9_292
	word20 r11_294
	sr_17 = vPortYield(pc, sr_17, out r8_101, out r9_292, out r10_293, out r11_294)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000047EA:
	branch 0x0218 == 0x0000 l00004812
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000047F0:
	Mem95[0x0218:ptr16] = Mem91[0x0218:ptr16] + 0xFFFF
	branch Mem95[0x0218:ptr16] != 0x0000 l00004812
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000047F6:
	sr_17 = sr_17 | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004812:
	r15Out = r8_101
	return sr_17
// DataOut:
// DataOut (flags):
// SymbolicIn:

xTaskResumeAll_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004790:
	vListRemove(r11_28 + 0x0012)
	word20 r10_139 = r11_28 + 0x0008
	vListRemove(r10_139)
	Mem151[r11_28 + 8:word16] = 0x0000
	word16 v14_152 = Mem151[r11_28 + 6:word16]
	branch 0x020C <u v14_152 l000047B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000047B2:
	Mem156[0x020C:ptr16] = v14_152
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000047B6:
	vListInsertEnd(r10_139, v14_152 * 0x00010 + 0x0222)
	branch Mem175[0x0208:word16] <u Mem175[r11_28 + 6:word16] l0000477A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000047D4:
	r9_180 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 xTaskGetTickCount(word20 sr, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r15 sr
// Preserved: sp
xTaskGetTickCount_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000481E:
	Mem6[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	word20 sr_13 = sr & ~0x0008
	word20 r15_8 = 0x0208
	branch Mem6[0x0218:ptr16] == 0x0000 l00004832
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000482A:
	Mem10[0x0218:ptr16] = Mem6[0x0218:ptr16] + 0xFFFF
	branch Mem10[0x0218:ptr16] != 0x0000 l00004832
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004830:
	sr_13 = sr_13 | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004832:
	r15Out = r15_8
	return sr_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

xTaskGetTickCount_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void uxTaskGetNumberOfTasks()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC r15 sr
// Preserved: sp
uxTaskGetNumberOfTasks_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4834:
	Mem6[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	branch Mem6[0x0218:ptr16] == 0x0000 l4848
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4840:
	Mem10[0x0218:ptr16] = Mem6[0x0218:ptr16] + 0xFFFF
	branch Mem10[0x0218:ptr16] != 0x0000 l4848
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4846:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4848:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

uxTaskGetNumberOfTasks_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vTaskIncrementTick()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r10 r11 sp
vTaskIncrementTick_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000484A:
	branch 0x0210 != 0x0000 l000048D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000048D0:
	Mem11[0x0212:ptr16] = Mem8[0x0212:ptr16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004854:
	Mem13[0x0208:ptr16] = Mem8[0x0208:ptr16] + 0x0001
	branch Mem13[0x0208:ptr16] != 0x0000 l00004868
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000485A:
	Mem17[0x0282:ptr16] = 0x0284
	Mem18[0x0284:ptr16] = 0x0282
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004868:
	word20 r11_24
	word20 r15_19 = 0x0282
	branch Mem20[r15_19:word16] == 0x0000 l000048CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000048CC:
	r11_24 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004872:
	r11_24 = Mem20[Mem20[Mem20[r15_19 + 2:word16] + 2:word16] + 6:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000487E:
	branch r11_24 == 0x00000 l000048D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004882:
	branch 0x0208 >=u Mem20[r11_24 + 8:word16] l000048D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000048D4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskIncrementTick_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000488A:
	word20 r10_49 = r11_24 + 0x0008
	vListRemove(r10_49)
	branch Mem20[r11_24 + 26:word16] != 0x0000 l000048C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000048C0:
	vListRemove(r11_24 + 0x0012)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000489A:
	Mem76[r11_24 + 8:word16] = 0x0000
	word16 v18_77 = Mem76[r11_24 + 6:word16]
	branch 0x020C <u v18_77 l000048AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000048A8:
	Mem81[0x020C:ptr16] = v18_77
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000048AC:
	vListInsertEnd(r10_49, v18_77 * 0x00010 + 0x0222)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vTaskPlaceOnEventList(word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14:[0..19] r15:[0..19]
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r11 sp
vTaskPlaceOnEventList_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000048DA:
	word20 r14_43
	word20 r15_44
	vListInsert(0x0214, r15)
	vListRemove(0x020A)
	word20 r11_22 = r14 + 0x0208
	Mem36[0x020A:word16] = r11_22
	branch r11_22 <u 0x0208 l0000491C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000491C:
	r14_43 = 0x020A
	r15_44 = 0x0282
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000490E:
	r14_43 = 0x020A
	r15_44 = 0x0284
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004928:
	vListInsert(r14_43, r15_44)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskPlaceOnEventList_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 xTaskRemoveFromEventList(word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..19]
// LiveOut: r15
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r10 r11 sp
xTaskRemoveFromEventList_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004930:
	word20 r10_13
	branch Mem8[r15:word16] == 0x0000 l000049A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000049A2:
	r10_13 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000493A:
	r10_13 = Mem8[Mem8[Mem8[r15 + 2:word16] + 2:word16] + 6:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004946:
	word20 r14_34
	word20 r15_35
	vListRemove(r10_13 + 0x0012)
	branch 0x0210 != 0x0000 l0000499A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000499A:
	r14_34 = r10_13 + 0x0012
	r15_35 = 0x0286
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004958:
	vListRemove(r10_13 + 0x0008)
	Mem49[r10_13 + 8:word16] = 0x0000
	word16 v13_50 = Mem49[r10_13 + 6:word16]
	branch 0x020C <u v13_50 l00004974
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004970:
	Mem54[0x020C:ptr16] = v13_50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004974:
	r15_35 = v13_50 * 0x00010 + 0x0222
	r14_34 = r10_13 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004982:
	word20 r15_111
	vListInsertEnd(r14_34, r15_35)
	branch Mem76[0x0208:word16] <u Mem76[r10_13 + 6:word16] l00004996
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004996:
	r15_111 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004992:
	r15_111 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000049A6:
	return r15_111
// DataOut:
// DataOut (flags):
// SymbolicIn:

xTaskRemoveFromEventList_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void prvIdleTask(word20 pc, word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] sr:[0..19]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvIdleTask_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvIdleTask_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l49AC:
	sr = prvCheckTasksWaitingTermination(pc, sr)
	branch 0x0224 >=u 0x0000 l49AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l49B6:
	word20 r8_35
	word20 r9_36
	word20 r10_37
	word20 r11_38
	sr = vPortYield(pc, sr, out r8_35, out r9_36, out r10_37, out r11_38)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void prvInitialiseTCBVariables(word20 r12, word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..19] r13:[0..19] r14:[0..19] r15:[0..19]
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r10 r11 sp
prvInitialiseTCBVariables_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000049BE:
	Mem19[r15 + 36:word16] = r14
	strncpy(0x0008, r13, r15 + 0x001C)
	Mem33[r15 + 35:byte] = 0x00
	word20 r10_16 = r12
	branch r12 >=u 0x0004 l000049E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000049E2:
	r10_16 = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000049E6:
	Mem42[r15 + 6:word16] = r10_16
	vListInitialiseItem(r15 + 0x0008)
	vListInitialiseItem(r15 + 0x0012)
	Mem51[r15 + 14:word16] = r15
	Mem57[r15 + 18:word16] = 0x0004 - r10_16
	Mem60[r15 + 24:word16] = r15
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvInitialiseTCBVariables_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void prvInitialiseTaskLists()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC r15
// Preserved: r11 sp
prvInitialiseTaskLists_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004A12:
	word20 r11_20 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004A16:
	vListInitialise(r11_20 * 0x00010 + 0x0222)
	r11_20 = r11_20 + 0x0001
	branch r11_20 >=u 0x0004 l00004A16
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004A2E:
	vListInitialise(0x0262)
	vListInitialise(0x0272)
	vListInitialise(0x0286)
	vListInitialise(0x0296)
	Mem47[0x0282:ptr16] = 0x0262
	Mem48[0x0284:ptr16] = 0x0272
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvInitialiseTaskLists_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 prvCheckTasksWaitingTermination(word20 pc, word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] sr:[0..19]
// LiveOut: sr
// Trashed: VNZC r13 r14 r15 sr
// Preserved: r11 sp
prvCheckTasksWaitingTermination_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4A5E:
	branch 0x0204 == 0x0000 l4ABE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4A66:
	word20 sr_9 = vTaskSuspendAll(sr)
	word20 r11_14 = 0x0000
	branch 0x0296 != 0x0000 l4A74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4A72:
	r11_14 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4A74:
	word20 r15_113
	sr = xTaskResumeAll(pc, sr_9, out r15_113)
	branch r11_14 != 0x00000 l4ABE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4A7C:
	word20 r11_36
	Mem32[0x0218:ptr16] = Mem5[0x0218:ptr16] + 0x0001
	sr = sr & ~0x0008
	branch 0x0296 == 0x0000 l4ABA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4ABA:
	r11_36 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4A88:
	r11_36 = Mem32[Mem32[0x029A:word16] + 6:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4A94:
	vListRemove(r11_36 + 0x0008)
	Mem54[0x0206:ptr16] = Mem32[0x0206:ptr16] + 0xFFFF
	Mem56[0x0204:ptr16] = Mem54[0x0204:ptr16] + 0xFFFF
	branch 0x0218 == 0x0000 l4AB2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4AAA:
	Mem60[0x0218:ptr16] = Mem56[0x0218:ptr16] + 0xFFFF
	branch Mem60[0x0218:ptr16] != 0x0000 l4AB2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4AB0:
	sr = sr | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4AB2:
	prvDeleteTCB()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4ABE:
	return sr
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvCheckTasksWaitingTermination_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 prvAllocateTCBAndStack(word20 pc, word20 sr, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r12 r13 r14 r15 sr
// Preserved: r10 r11 sp
prvAllocateTCBAndStack_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004AC2:
	word20 r15_15
	word20 sr_16 = pvPortMalloc(pc, sr, 0x0026, out r15_15)
	word20 r11_21 = r15_15
	branch r15_15 == 0x00000 l00004AFA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004AD6:
	word20 r15_28
	sr_16 = pvPortMalloc(pc, sr_16, r15 * 0x00002, out r15_28)
	Mem36[r15_15 + 2:word16] = r15_28
	branch r15_28 != 0x00000 l00004AF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004AF0:
	sr_16 = memset(sr_16, r15 * 0x00002, 0x00A5, r15_28)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004AE6:
	vPortFree()
	r11_21 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004AFA:
	r15Out = r11_21
	return sr_16
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvAllocateTCBAndStack_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void prvDeleteTCB()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r11 r15 sp
prvDeleteTCB_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4B02:
	vPortFree()
	vPortFree()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvDeleteTCB_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vTaskSwitchContext()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC r13 r14 r15
// Preserved: sp
vTaskSwitchContext_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004B18:
	branch 0x0210 != 0x0000 l00004BAE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004B1E:
	branch Mem0[0x020C * 0x00010 + 546:word16] != 0x0000 l00004B46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004B30:
	Mem15[0x020C:ptr16] = Mem14[0x020C:ptr16] + 0xFFFF
	branch Mem15[0x020C * 0x00010 + 546:word16] == 0x0000 l00004B30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004B46:
	word20 r13_25 = 0x0222
	Mem44[0x020C * 0x00010 + r13_25 + 4:word16] = Mem38[Mem38[0x020C * 0x00010 + r13_25 + 4:word16] + 2:word16]
	branch Mem44[0x020C * 0x00010 + r13_25 + 4:word16] == Mem44[(0x020C * 0x00010 + r13_25) + 2:word16] l00004BB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004BB0:
	Mem79[0x020C * 0x00010 + 550:word16] = Mem44[Mem44[0x020C * 0x00010 + 550:word16] + 2:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004B98:
	Mem90[0x0202:ptr16] = Mem86[Mem86[0x020C * 0x00010 + 550:word16] + 6:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004BAE:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskSwitchContext_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vListInitialise(word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..19]
// LiveOut:
// Trashed: VNZC r15
// Preserved: r11 sp
vListInitialise_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004BD4:
	Mem12[r15 + 2:word16] = r15 + 0x0006
	Mem15[r15 + 4:word16] = r15 + 0x0006
	Mem18[r15 + 6:word16] = 0xFFFF
	Mem21[r15 + 8:word16] = r15 + 0x0006
	Mem24[r15 + 10:word16] = r15 + 0x0006
	Mem27[r15 + 12:word16] = 0x0000
	vListInitialiseItem(r15 + 0x0006)
	Mem30[r15:word16] = 0x0000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vListInitialise_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vListInitialiseItem(word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..19]
// LiveOut:
// Trashed:
// Preserved: sp
vListInitialiseItem_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004C00:
	Mem7[r15 + 8:word16] = 0x0000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vListInitialiseItem_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vListInsertEnd(word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14:[0..19] r15:[0..19]
// LiveOut:
// Trashed: VNZC r12 r13 r15
// Preserved: sp
vListInsertEnd_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004C06:
	word16 v5_6 = Mem0[r15 + 4:word16]
	Mem12[r14 + 2:word16] = Mem0[v5_6 + 2:word16]
	Mem16[r14 + 4:word16] = Mem12[r15 + 4:word16]
	Mem21[Mem16[v5_6 + 2:word16] + 4:word16] = r14
	Mem24[v5_6 + 2:word16] = r14
	Mem27[r15 + 4:word16] = r14
	Mem30[r14 + 8:word16] = r15
	Mem33[r15:word16] = Mem30[r15:word16] + 0x0001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vListInsertEnd_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vListInsert(word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14:[0..19] r15:[0..19]
// LiveOut:
// Trashed: VNZC r12 r13 r15
// Preserved: r11 sp
vListInsert_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004C32:
	word20 r13_14
	word16 v6_9 = Mem5[r14:word16]
	branch v6_9 == 0xFFFF l00004C5A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004C5A:
	word16 v18_13 = Mem5[r15 + 2:word16]
	r13_14 = v18_13
	branch Mem5[Mem5[v18_13 + 2:word16]:word16] <u 0xFFFF l00004C76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004C68:
	word16 v21_22 = Mem5[r13_14 + 2:word16]
	r13_14 = v21_22
	branch Mem5[Mem5[v21_22 + 2:word16]:word16] >=u v6_9 l00004C68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004C3C:
	word16 v10_30 = Mem5[r15 + 2:word16]
	r13_14 = v10_30
	branch v6_9 >=u Mem5[Mem5[v10_30 + 2:word16]:word16] l00004C76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004C4A:
	word16 v15_40 = Mem5[r13_14 + 2:word16]
	r13_14 = v15_40
	branch v6_9 <u Mem5[Mem5[v15_40 + 2:word16]:word16] l00004C4A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004C58:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004C76:
	Mem57[r14 + 2:word16] = Mem5[r13_14 + 2:word16]
	Mem62[Mem57[r14 + 2:word16] + 4:word16] = r14
	Mem65[r14 + 4:word16] = r13_14
	Mem68[r13_14 + 2:word16] = r14
	Mem74[r14 + 8:word16] = r15
	Mem77[r15:word16] = Mem74[r15:word16] + 0x0001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vListInsert_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vListRemove(word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..19]
// LiveOut:
// Trashed: VNZC r13 r14 r15
// Preserved: sp
vListRemove_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004C98:
	word16 v5_6 = Mem0[r15 + 2:word16]
	Mem11[v5_6 + 4:word16] = Mem0[r15 + 4:word16]
	word16 v8_12 = Mem11[r15 + 4:word16]
	Mem16[v8_12 + 2:word16] = v5_6
	word16 v11_17 = Mem16[r15 + 8:word16]
	branch Mem16[v11_17 + 4:word16] != r15 l00004CBA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004CB6:
	Mem24[v11_17 + 4:word16] = v8_12
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004CBA:
	Mem29[r15 + 8:word16] = 0x0000
	Mem33[v11_17:word16] = Mem29[v11_17:word16] + 0xFFFF
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vListRemove_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 xQueueCreate(word20 pc, word20 sr, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r14 r15 sr
// Preserved: r10 r11 r9 sp
xQueueCreate_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004CC4:
	branch r15 != 0x00000 l00004CD6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004CD6:
	word20 r15_22
	sr = pvPortMalloc(pc, sr, 0x0032, out r15_22)
	branch r15_22 == 0x00000 l00004CD2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004CE4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004CD2:
	word20 r15_34 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004D76:
	r15Out = r15_34
	return sr
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueCreate_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 xQueueSend(word20 pc, word20 sr, word20 r13, word20 r14, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] r13:[0..19] r14:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7 r8 sr
// Preserved: r10 r11 r9 sp
xQueueSend_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004D7E:
	word20 sr_24 = vTaskSuspendAll(sr) & ~0x0008
	Mem25[0x0218:ptr16] = Mem11[0x0218:ptr16] + 0x0001
	Mem29[r15 + 46:word16] = Mem25[r15 + 46:word16] + 0x0001
	Mem32[r15 + 48:word16] = Mem29[r15 + 48:word16] + 0x0001
	word20 r11_115 = r15
	word20 r9_15 = r14
	branch 0x0218 == 0x0000 l00004DAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004DA2:
	Mem35[0x0218:ptr16] = Mem32[0x0218:ptr16] + 0xFFFF
	branch Mem35[0x0218:ptr16] != 0x0000 l00004DAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004DA8:
	sr_24 = sr_24 | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004DAA:
	word20 r15_43
	word20 sr_111 = prvIsQueueFull(sr_24, r15, out r15_43)
	branch r15_43 == 0x00000 l00004DB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004DB4:
	branch r13 != 0x00000 l00004E26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004E26:
	vTaskPlaceOnEventList(r13, r15 + 0x0008)
	Mem68[0x0218:ptr16] = Mem67[0x0218:ptr16] + 0x0001
	word20 r15_79
	word20 r15_376
	word20 sr_100 = xTaskResumeAll(pc, prvUnlockQueue(sr_111 & ~0x0008, r15, out r15_376), out r15_79)
	branch r15_79 == 0x00000 l00004E74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004E74:
	word20 r8_97
	word20 r10_381
	sr_100 = vPortYield(pc, sr_100, out r8_97, out r9_15, out r10_381, out r11_115)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004E44:
	sr_111 = vTaskSuspendAll(sr_100) & ~0x0008
	Mem113[0x0218:ptr16] = Mem68[0x0218:ptr16] + 0x0001
	Mem118[r11_115 + 46:word16] = Mem113[r11_115 + 46:word16] + 0x0001
	Mem121[r11_115 + 48:word16] = Mem118[r11_115 + 48:word16] + 0x0001
	branch 0x0218 == 0x0000 l00004E64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004E5C:
	Mem124[0x0218:ptr16] = Mem121[0x0218:ptr16] + 0xFFFF
	branch Mem124[0x0218:ptr16] != 0x0000 l00004E64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004E62:
	sr_111 = sr_111 | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004E64:
	branch 0x0218 == 0x0000 l00004DB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004E6A:
	Mem131[0x0218:ptr16] = Mem130[0x0218:ptr16] + 0xFFFF
	branch Mem131[0x0218:ptr16] != 0x0000 l00004DB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004E70:
	sr_111 = sr_111 | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004DB8:
	word20 r10_181
	Mem139[0x0218:ptr16] = Mem138[0x0218:ptr16] + 0x0001
	word20 sr_137 = sr_111 & ~0x0008
	branch Mem139[r11_115 + 40:word16] >=u Mem139[r11_115 + 42:word16] l00004DF6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004DF6:
	sr_137 = memcpy(sr_137, Mem139[r11_115 + 44:word16], r9_15, Mem139[r11_115 + 4:word16])
	Mem166[r11_115 + 40:word16] = Mem139[r11_115 + 40:word16] + 0x0001
	word20 r15_170 = Mem166[r11_115 + 4:word16] + Mem166[r11_115 + 44:word16]
	Mem173[r11_115 + 4:word16] = r15_170
	branch r15_170 >=u Mem173[r11_115 + 2:word16] l00004E1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004E1A:
	Mem180[r11_115 + 4:word16] = Mem173[r11_115:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004E1E:
	Mem186[r11_115 + 48:word16] = Mem183[r11_115 + 48:word16] + 0x0001
	r10_181 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004DC6:
	r10_181 = 0xFFFD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004DCA:
	branch 0x0218 == 0x0000 l00004DD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004DD0:
	Mem192[0x0218:ptr16] = Mem191[0x0218:ptr16] + 0xFFFF
	branch Mem192[0x0218:ptr16] != 0x0000 l00004DD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004DD6:
	sr_137 = sr_137 | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004DD8:
	word20 sr_217
	word20 r15_202
	word20 sr_203 = prvUnlockQueue(sr_137, r11_115, out r15_202)
	branch r15_202 == 0x00000 l00004DF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004DF0:
	word20 r15_377
	sr_217 = xTaskResumeAll(pc, sr_203, out r15_377)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004DE2:
	word20 r15_222
	sr_217 = xTaskResumeAll(pc, sr_203, out r15_222)
	branch r15_222 != 0x00000 l00004E7A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004DEA:
	word20 r11_380
	word20 r8_378
	word20 r9_379
	sr_217 = vPortYield(pc, sr_217, out r8_378, out r9_379, out r10_181, out r11_380)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004E7A:
	r15Out = r10_181
	return sr_217
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueSend_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 xQueueSendFromISR(word20 sr, word20 r13, word20 r14, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13:[0..19] r14:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r12 r13 r14 r15 sr
// Preserved: r10 r11 sp
xQueueSendFromISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4E84:
	word20 r13_73
	branch Mem8[r15 + 40:word16] >=u Mem8[r15 + 42:word16] l4E98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4E98:
	sr = memcpy(sr, Mem8[r15 + 44:word16], r14, Mem8[r15 + 4:word16])
	Mem33[r15 + 40:word16] = Mem8[r15 + 40:word16] + 0x0001
	word20 r15_37 = Mem33[r15 + 4:word16] + Mem33[r15 + 44:word16]
	Mem40[r15 + 4:word16] = r15_37
	branch r15_37 >=u Mem40[r15 + 2:word16] l4EBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4EBA:
	Mem47[r15 + 4:word16] = Mem40[r15:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4EBE:
	word16 v22_50 = Mem49[r15 + 48:word16]
	branch v22_50 == 0xFFFF l4ECE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4ECE:
	branch r13 != 0x00000 l4E94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4ED2:
	branch Mem49[r15 + 24:word16] == 0x0000 l4E94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4ED8:
	branch xTaskRemoveFromEventList(r15 + 0x0018) == 0x00000 l4E94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4EE6:
	r13_73 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4EC6:
	Mem78[r15 + 48:word16] = v22_50 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4E94:
	r13_73 = r13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l4EE8:
	r15Out = r13_73
	return sr
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueSendFromISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 xQueueReceive(word20 pc, word20 sr, word20 r13, word20 r14, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] r13:[0..19] r14:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7 r8 sr
// Preserved: r10 r11 r9 sp
xQueueReceive_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004EF0:
	word20 sr_24 = vTaskSuspendAll(sr) & ~0x0008
	Mem25[0x0218:ptr16] = Mem11[0x0218:ptr16] + 0x0001
	Mem29[r15 + 46:word16] = Mem25[r15 + 46:word16] + 0x0001
	Mem32[r15 + 48:word16] = Mem29[r15 + 48:word16] + 0x0001
	word20 r11_115 = r15
	word20 r9_15 = r14
	branch 0x0218 == 0x0000 l00004F1C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004F14:
	Mem35[0x0218:ptr16] = Mem32[0x0218:ptr16] + 0xFFFF
	branch Mem35[0x0218:ptr16] != 0x0000 l00004F1C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004F1A:
	sr_24 = sr_24 | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004F1C:
	word20 r15_43
	word20 sr_111 = prvIsQueueEmpty(sr_24, r15, out r15_43)
	branch r15_43 == 0x00000 l00004F2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004F26:
	branch r13 != 0x00000 l00004F96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004F96:
	vTaskPlaceOnEventList(r13, r15 + 0x0018)
	Mem68[0x0218:ptr16] = Mem67[0x0218:ptr16] + 0x0001
	word20 r15_79
	word20 r15_374
	word20 sr_100 = xTaskResumeAll(pc, prvUnlockQueue(sr_111 & ~0x0008, r15, out r15_374), out r15_79)
	branch r15_79 == 0x00000 l00004FE6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004FE6:
	word20 r8_97
	word20 r10_379
	sr_100 = vPortYield(pc, sr_100, out r8_97, out r9_15, out r10_379, out r11_115)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004FB6:
	sr_111 = vTaskSuspendAll(sr_100) & ~0x0008
	Mem113[0x0218:ptr16] = Mem68[0x0218:ptr16] + 0x0001
	Mem118[r11_115 + 46:word16] = Mem113[r11_115 + 46:word16] + 0x0001
	Mem121[r11_115 + 48:word16] = Mem118[r11_115 + 48:word16] + 0x0001
	branch 0x0218 == 0x0000 l00004FD6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004FCE:
	Mem124[0x0218:ptr16] = Mem121[0x0218:ptr16] + 0xFFFF
	branch Mem124[0x0218:ptr16] != 0x0000 l00004FD6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004FD4:
	sr_111 = sr_111 | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004FD6:
	branch 0x0218 == 0x0000 l00004F2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004FDC:
	Mem131[0x0218:ptr16] = Mem130[0x0218:ptr16] + 0xFFFF
	branch Mem131[0x0218:ptr16] != 0x0000 l00004F2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004FE2:
	sr_111 = sr_111 | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004F2A:
	word20 r10_147
	Mem139[0x0218:ptr16] = Mem138[0x0218:ptr16] + 0x0001
	word20 sr_137 = sr_111 & ~0x0008
	word16 v14_143 = Mem139[r11_115 + 40:word16]
	branch v14_143 == 0x0000 l00004F92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004F92:
	r10_147 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004F38:
	word16 v15_148 = Mem139[r11_115 + 44:word16]
	word20 r15_152 = Mem139[r11_115 + 6:word16] + v15_148
	Mem155[r11_115 + 6:word16] = r15_152
	branch r15_152 >=u Mem155[r11_115 + 2:word16] l00004F50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004F4C:
	Mem162[r11_115 + 6:word16] = Mem155[r11_115:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004F50:
	Mem170[r11_115 + 40:word16] = v14_143 + 0xFFFF
	sr_137 = memcpy(sr_137, v15_148, Mem170[r11_115 + 6:word16], r9_15)
	Mem191[r11_115 + 46:word16] = Mem170[r11_115 + 46:word16] + 0x0001
	r10_147 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004F66:
	branch 0x0218 == 0x0000 l00004F74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004F6C:
	Mem197[0x0218:ptr16] = Mem196[0x0218:ptr16] + 0xFFFF
	branch Mem197[0x0218:ptr16] != 0x0000 l00004F74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004F72:
	sr_137 = sr_137 | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004F74:
	word20 sr_221
	word20 r15_206
	word20 sr_207 = prvUnlockQueue(sr_137, r11_115, out r15_206)
	branch r15_206 == 0x00000 l00004F8C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004F8C:
	word20 r15_375
	sr_221 = xTaskResumeAll(pc, sr_207, out r15_375)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004F7E:
	word20 r15_226
	sr_221 = xTaskResumeAll(pc, sr_207, out r15_226)
	branch r15_226 != 0x00000 l00004FEC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004F86:
	word20 r9_377
	word20 r11_378
	word20 r8_376
	sr_221 = vPortYield(pc, sr_221, out r8_376, out r9_377, out r10_147, out r11_378)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004FEC:
	r15Out = r10_147
	return sr_221
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueReceive_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 xQueueReceiveFromISR(word20 sr, word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13:[0..19] r14:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: r15
// Trashed: VNZC r12 r13 r14 r15 sr
// Preserved: r10 r11 sp
xQueueReceiveFromISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00004FF6:
	word20 r15_130
	word16 v9_15 = Mem8[r15 + 40:word16]
	branch v9_15 == 0x0000 l00005060
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005060:
	r15_130 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005008:
	word16 v12_20 = Mem8[r15 + 44:word16]
	word20 r15_24 = Mem8[r15 + 6:word16] + v12_20
	Mem27[r15 + 6:word16] = r15_24
	branch r15_24 >=u Mem27[r15 + 2:word16] l00005020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000501C:
	Mem34[r15 + 6:word16] = Mem27[r15:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005020:
	Mem42[r15 + 40:word16] = v9_15 + 0xFFFF
	memcpy(sr, v12_20, Mem42[r15 + 6:word16], r14)
	word16 v23_58 = Mem42[r15 + 46:word16]
	branch v23_58 == 0xFFFF l00005042
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005042:
	branch Mem42[r13:word16] != 0x0000 l0000503E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005048:
	branch Mem42[r15 + 8:word16] == 0x0000 l0000503E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000504E:
	branch xTaskRemoveFromEventList(r15 + 0x0008) == 0x00000 l0000503E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000505A:
	Mem84[r13:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005038:
	Mem89[r15 + 46:word16] = v23_58 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000503E:
	r15_130 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005062:
	return r15_130
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueReceiveFromISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void uxQueueMessagesWaiting()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC r15 sr
// Preserved: sp
uxQueueMessagesWaiting_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5068:
	Mem6[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	branch Mem6[0x0218:ptr16] == 0x0000 l507C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5074:
	Mem12[0x0218:ptr16] = Mem6[0x0218:ptr16] + 0xFFFF
	branch Mem12[0x0218:ptr16] != 0x0000 l507C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l507A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l507C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

uxQueueMessagesWaiting_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vQueueDelete()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r11 r15 sp
vQueueDelete_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l507E:
	vPortFree()
	vPortFree()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vQueueDelete_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 prvUnlockQueue(word20 sr, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r15 sr
// Preserved: r10 r11 r12 r13 r14 sp
prvUnlockQueue_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005092:
	Mem14[0x0218:ptr16] = Mem8[0x0218:ptr16] + 0x0001
	word16 v8_16 = Mem14[r15 + 48:word16]
	Mem18[r15 + 48:word16] = v8_16 + 0xFFFF
	word20 r10_11 = 0x0000
	word20 sr_13 = sr & ~0x0008
	branch v8_16 < 0xFFFF l000050B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000050A6:
	Mem23[r15 + 48:word16] = 0xFFFF
	branch Mem23[r15 + 24:word16] != 0x0000 l000050F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000050F4:
	branch xTaskRemoveFromEventList(r15 + 0x0018) == 0x00000 l000050B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005100:
	r10_11 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000050B0:
	branch 0x0218 == 0x0000 l000050BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000050B6:
	Mem43[0x0218:ptr16] = Mem42[0x0218:ptr16] + 0xFFFF
	branch Mem43[0x0218:ptr16] != 0x0000 l000050BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000050BC:
	sr_13 = sr_13 | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000050BE:
	Mem51[0x0218:ptr16] = Mem50[0x0218:ptr16] + 0x0001
	word16 v13_55 = Mem51[r15 + 46:word16]
	Mem57[r15 + 46:word16] = v13_55 + 0xFFFF
	word20 sr_135 = sr_13 & ~0x0008
	branch v13_55 < 0xFFFF l000050D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000050CA:
	Mem62[r15 + 46:word16] = 0xFFFF
	branch Mem62[r15 + 8:word16] != 0x0000 l000050E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000050E4:
	branch xTaskRemoveFromEventList(r15 + 0x0008) == 0x00000 l000050D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000050F0:
	r10_11 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000050D4:
	branch 0x0218 == 0x0000 l00005104
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000050DA:
	Mem83[0x0218:ptr16] = Mem82[0x0218:ptr16] + 0xFFFF
	branch Mem83[0x0218:ptr16] != 0x0000 l00005104
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000050E0:
	sr_135 = sr_135 | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005104:
	r15Out = r10_11
	return sr_135
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvUnlockQueue_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 prvIsQueueEmpty(word20 sr, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r14 r15 sr
// Preserved: sp
prvIsQueueEmpty_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000510C:
	Mem6[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	word20 sr_21 = sr & ~0x0008
	word20 r14_13 = 0x0000
	branch Mem6[r15 + 40:word16] != 0x0000 l0000511C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000511A:
	r14_13 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000511C:
	branch 0x0218 == 0x0000 l0000512A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005122:
	Mem17[0x0218:ptr16] = Mem6[0x0218:ptr16] + 0xFFFF
	branch Mem17[0x0218:ptr16] != 0x0000 l0000512A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005128:
	sr_21 = sr_21 | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000512A:
	r15Out = r14_13
	return sr_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvIsQueueEmpty_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 prvIsQueueFull(word20 sr, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r14 r15 sr
// Preserved: sp
prvIsQueueFull_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000512E:
	Mem6[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	word20 sr_22 = sr & ~0x0008
	word20 r14_14 = 0x0000
	branch Mem6[r15 + 40:word16] == Mem6[r15 + 42:word16] l0000514E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000514E:
	r14_14 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000513E:
	branch 0x0218 == 0x0000 l00005152
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005144:
	Mem18[0x0218:ptr16] = Mem6[0x0218:ptr16] + 0xFFFF
	branch Mem18[0x0218:ptr16] != 0x0000 l00005152
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000514A:
	sr_22 = sr_22 | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005152:
	r15Out = r14_14
	return sr_22
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvIsQueueFull_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 pvPortMalloc(word20 pc, word20 sr, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r14 r15 sr
// Preserved: r10 r11 sp
pvPortMalloc_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005156:
	word20 r11_10 = r15
	word20 r10_11 = 0x0000
	branch (r15 & 0x0001) == 0x00000 l00005166
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005162:
	r11_10 = r15 - (r15 & 0x0001) + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005166:
	word20 r14_26 = 0x0216
	word20 sr_21 = vTaskSuspendAll(sr)
	word20 r15_29 = r14_26 + r11_10
	branch r15_29 <u 0x0708 l00005186
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005178:
	branch r14_26 <u r15_29 l00005186
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000517C:
	Mem37[0x0216:ptr16] = r15_29
	r10_11 = r14_26 + 0x02AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005186:
	word20 r15_69
	word20 sr_43 = xTaskResumeAll(pc, sr_21, out r15_69)
	r15Out = r10_11
	return sr_43
// DataOut:
// DataOut (flags):
// SymbolicIn:

pvPortMalloc_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vPortFree()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
vPortFree_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005192:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vPortFree_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vPortInitialiseBlocks()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
vPortInitialiseBlocks_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5194:
	Mem3[0x0216:ptr16] = 0x0000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vPortInitialiseBlocks_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 pxPortInitialiseStack(word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13:[0..19] r14:[0..19] r15:[0..19]
// LiveOut: r15
// Trashed: VNZC r15
// Preserved: sp
pxPortInitialiseStack_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000519A:
	Mem8[r15:word16] = r14
	Mem12[r15 - 0x0002:word16] = 0x0008
	Mem16[r15 - 0x0004:word16] = 0x4444
	Mem20[r15 - 0x0006:word16] = 0x5555
	Mem24[r15 - 0x0008:word16] = 0x6666
	Mem28[r15 - 0x000A:word16] = 0x7777
	Mem32[r15 - 0x000C:word16] = 0x8888
	Mem36[r15 - 0x000E:word16] = 0x9999
	Mem40[r15 - 0x0010:word16] = 0xAAAA
	Mem44[r15 - 0x0012:word16] = 0xBBBB
	Mem48[r15 - 0x0014:word16] = 0xCCCC
	Mem52[r15 - 0x0016:word16] = 0xDDDD
	Mem56[r15 - 0x0018:word16] = 0xEEEE
	Mem61[r15 - 0x001A:word16] = r13
	Mem66[r15 - 0x001C:word16] = 0x0000
	return r15 - 0x001C
// DataOut:
// DataOut (flags):
// SymbolicIn:

pxPortInitialiseStack_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xPortStartScheduler(word20 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp
// Preserved:
xPortStartScheduler_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000520A:
	prvSetupTimerInterrupt()
	Mem14[pc + -20480:word16] = Mem0[Mem0[Mem0[pc + -20494:word16]:word16]:word16]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xPortStartScheduler_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vPortEndScheduler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
vPortEndScheduler_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5238:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vPortEndScheduler_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 vPortYield(word20 pc, word20 sr, ptr16 & r8Out, ptr16 & r9Out, ptr16 & r10Out, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19] sr:[0..19]
// LiveOut: r10 r11 r8 r9 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// Preserved:
vPortYield_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000523A:
	Mem52[Mem47[pc + -20572:word16]:word16] = fp - 28
	vTaskSwitchContext()
	word16 v21_62 = Mem52[Mem52[pc + -20584:word16]:word16]
	Mem69[pc + -20570:word16] = Mem52[v21_62:word16]
	word20 r11_84 = Mem69[v21_62 + 10:word16]
	word20 r10_87 = Mem69[v21_62 + 12:word16]
	word20 r9_90 = Mem69[v21_62 + 14:word16]
	r8Out = Mem69[v21_62 + 16:word16]
	r9Out = r9_90
	r10Out = r10_87
	r11Out = r11_84
	return sr & ~0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

vPortYield_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void prvSetupTimerInterrupt()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
prvSetupTimerInterrupt_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000528E:
	Mem3[0x0160:ptr16] = 0x0000
	Mem4[0x0160:ptr16] = 0x0100
	Mem5[0x0160:ptr16] = Mem4[0x0160:ptr16] | 0x0004
	Mem6[0x0172:ptr16] = 0x0020
	Mem7[0x0162:ptr16] = 0x0010
	Mem8[0x0160:ptr16] = Mem7[0x0160:ptr16] | 0x0004
	Mem9[0x0160:ptr16] = Mem8[0x0160:ptr16] | 0x0010
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvSetupTimerInterrupt_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void prvTickISR(word20 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..19]
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp
// Preserved:
prvTickISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l52B4:
	Mem48[Mem43[pc + -20690:word16]:word16] = fp - 26
	vTaskIncrementTick()
	vTaskSwitchContext()
	Mem73[pc + -20692:word16] = Mem48[Mem48[Mem48[pc + -20706:word16]:word16]:word16]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvTickISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void printf(word20 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8:[0..19]
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15
// Preserved: sp
printf_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005308:
	vuprintf(r8, fp + 0x0004, Mem0[fp + 0x0002:word16], 0x43A2)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

printf_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 PRINT(word20 r14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14:[0..19]
// LiveOut: r15
// Trashed: VNZC r15
// Preserved: r10 r11 sp
PRINT_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000531A:
	branch r14 != 0x00000 l0000532A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000532A:
	__write_char()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005326:
	word20 r15_23 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005344:
	return r15_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

PRINT_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __write_pad(word20 r14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14:[0..19]
// LiveOut:
// Trashed: VNZC
// Preserved: r10 r11 r15 r9 sp
__write_pad_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000534A:
	branch r14 < 0x01 l00005370
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005370:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005376:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

__write_pad_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005358:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000535C:
	__write_char()
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vuprintf(word20 r8, word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13:[0..19] r14:[0..19] r15:[0..19] r8:[0..19]
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r10 r11 r4 r5 r6 r7 r8 r9 sp
vuprintf_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000537E:
	Mem37[0x021A:ptr16] = 0x0000
	Mem39[0x09B2:ptr16] = r15
	word20 r5_1033 = r13
	word16 wLoc1C_1111 = 0x0000
	word16 wLoc1A_1113 = 0x0000
	word20 r6_101 = r14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l53A6:
	word20 r6_51
	byte v17_45 = Mem44[r6_101:byte]
	word20 r7_46 = v17_45
	r6_51 = r6_101
	branch v17_45 == 0x00 l000053C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000053AE:
	r6_51 = r6_101
	r6_51 = r6_101
	branch v17_45 == 0x0025 l000053C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000053B4:
	r6_51 = r6_51 + 0x0001
	byte v19_54 = Mem44[r6_51:byte]
	r7_46 = v19_54
	branch v19_54 == 0x00 l000053C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000053BC:
	branch v19_54 != 0x0025 l000053B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000053C2:
	word20 r13_64 = r6_51 - r6_101
	branch r13_64 == 0x00000 l000053CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000053C8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5916:
	branch PRINT(r13_64) < 0x00000 l5924
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5920:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000053CC:
	branch r7_46 != 0x00000 l000053D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000053D4:
	r6_101 = r6_51 + 0x0001
	byte bLoc1E_1118 = 0x00
	byte bLoc17_1123 = 0x00
	byte bLoc1D_1128 = 0x00
	word20 r11_1070 = 0xFF
	byte bLoc24_1133 = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l53E8:
	word20 r7_1025 = Mem102[r6_101:byte]
	r6_101 = r6_101 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l53EC:
	branch r7_1025 != 0x0075 l000053F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000053F6:
	branch (r7_1025 | 0x0020) != 0x0078 l5406
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005402:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000053F2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l58F0:
	branch (bLoc1E_1118 & 0x01) == 0x00 l5906
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5906:
	r5_1033 = r5_1033 + 0x0002
	wLoc1C_1111 = Mem117[r5_1033:word16]
	wLoc1A_1113 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l58F6:
	r5_1033 = r5_1033 + 0x0004
	wLoc1C_1111 = Mem117[r5_1033:word16]
	wLoc1A_1113 = Mem143[r5_1033 + 2:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5406:
	branch r7_1025 != 0x0020 l5410
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5410:
	branch r7_1025 != 0x0023 l541A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l541A:
	branch r7_1025 != 0x002A l5424
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5424:
	branch r7_1025 != 0x002D l542E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l542E:
	branch r7_1025 != 0x002B l5438
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5438:
	branch r7_1025 != 0x002E l5442
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5442:
	branch r7_1025 != 0x0030 l544C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l544C:
	branch r7_1025 <u 0xFFC6 l548C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l548C:
	branch r7_1025 == 0x0068 l581A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l581A:
	bLoc1E_1118 = bLoc1E_1118 | 0x04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5492:
	branch r7_1025 != 0x006C l549E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l549E:
	word20 r9_361
	branch r7_1025 == 0x0063 l580C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l580C:
	r5_1033 = r5_1033 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l54A4:
	byte bLoc18_1185
	branch r7_1025 == 0x0044 l5806
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5806:
	bLoc1E_1118 = bLoc1E_1118 | 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l54AA:
	branch r7_1025 == 0x0064 l57AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l54B0:
	branch r7_1025 == 0x0069 l57AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l57AE:
	branch (bLoc1E_1118 & 0x01) == 0x00 l57E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l57E6:
	word16 v186_211 = Mem201[r5_1033:word16]
	r5_1033 = r5_1033 + 0x0002
	wLoc1C_1111 = v186_211
	wLoc1A_1113 = 0x0000 - (v186_211 * 0x0002 <u 0x0000) ^ 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l57B4:
	r5_1033 = r5_1033 + 0x0004
	wLoc1C_1111 = Mem201[r5_1033:word16]
	wLoc1A_1113 = Mem240[r5_1033 + 2:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l57C0:
	branch wLoc1A_1113 < 0x0000 l57CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l57CE:
	word16 wLoc1C_1169 = wLoc1C_1111 ^ 0xFFFF
	wLoc1C_1111 = wLoc1C_1169 + 0x0001
	wLoc1A_1113 = (wLoc1A_1113 ^ 0xFFFF) + (wLoc1C_1169 <u 0x0001)
	bLoc24_1133 = 0x002D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l57C6:
	bLoc18_1185 = 0x000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l54B6:
	branch r7_1025 == 0x004F l57A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l57A8:
	bLoc1E_1118 = bLoc1E_1118 | 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l54BC:
	branch r7_1025 == 0x006F l57A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l57A2:
	bLoc18_1185 = 0x08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l54C2:
	branch r7_1025 == 0x0070 l5784
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5784:
	r5_1033 = r5_1033 + 0x0002
	wLoc1C_1111 = Mem172[r5_1033:word16]
	wLoc1A_1113 = 0x0000
	bLoc18_1185 = 0x0010
	bLoc1E_1118 = bLoc1E_1118 | 0x0040
	r7_1025 = 0x0078
// DataOut:
// DataOut (flags):
// SymbolicIn:

l54C8:
	branch r7_1025 == 0x0073 l570C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l570C:
	word16 v149_309 = Mem172[r5_1033:word16]
	r5_1033 = r5_1033 + 0x0002
	word16 wLoc20_1193 = v149_309
	branch v149_309 == 0x0000 l5756
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5756:
	wLoc20_1193 = fp - 0x0000004C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l571A:
	byte bLoc20_1222 = SLICE(wLoc20_1193, byte, 0)
	branch r11_1070 < 0x00000 l5740
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5740:
	word20 r15_350 = wLoc20_1193 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5746:
	r15_350 = r15_350 + 0x0001
	branch Mem347[r15_350:byte] != 0x00 l5746
// DataOut:
// DataOut (flags):
// SymbolicIn:

l574E:
	r9_361 = r15_350 - bLoc20_1222
// DataOut:
// DataOut (flags):
// SymbolicIn:

l571E:
	word20 r15_373 = memchr((int16) SLICE(r11_1070, byte, 0), 0x0000, wLoc20_1193)
	branch r15_373 == 0x00000 l573C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5732:
	r9_361 = r15_373 - bLoc20_1222
	branch r11_1070 >= r9_361 l54F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l573C:
	r9_361 = r11_1070
// DataOut:
// DataOut (flags):
// SymbolicIn:

l54CE:
	branch r7_1025 == 0x0055 l5706
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5706:
	bLoc1E_1118 = bLoc1E_1118 | 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l54D4:
	branch r7_1025 == 0x0075 l56FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l56FE:
	bLoc18_1185 = 0x000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l54DA:
	branch r7_1025 == 0x0058 l55FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l54E0:
	branch r7_1025 == 0x0078 l55FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l55FE:
	bLoc18_1185 = 0x0010
	branch (bLoc1E_1118 & 0x08) == 0x00 l561C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l560A:
	branch wLoc1C_1111 != 0x0000 l5616
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5610:
	branch wLoc1A_1113 == 0x0000 l561C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5616:
	bLoc1E_1118 = bLoc1E_1118 | 0x0040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l561C:
	bLoc24_1133 = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5620:
	bLoc17_1123 = r11_1070
	branch r11_1070 < 0x00000 l562E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5628:
	bLoc1E_1118 = bLoc1E_1118 & 0xFFDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l562E:
	word16 wLoc20_1269 = fp - 0x00000024
	branch wLoc1C_1111 != 0x0000 l564A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l563E:
	wLoc20_1269 = SLICE(fp - 0x00000024, word16, 0) (alias)
	branch wLoc1A_1113 != 0x0000 l564A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5644:
	wLoc20_1269 = SLICE(fp - 0x00000024, word16, 0) (alias)
	branch r11_1070 == 0x00 l56C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l564A:
	word16 wLoc14_2350 = (uint16) (uint8) bLoc18_1185
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5658:
	byte bLoc16_1336 = 0x00
	branch wLoc1A_1113 - (wLoc1C_1111 - wLoc14_2350 <u 0x00000) >=u 0x00000 l5672
// DataOut:
// DataOut (flags):
// SymbolicIn:

l566E:
	bLoc16_1336 = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5672:
	word20 r4_526
	word20 r14_515
	word20 r8_517
	word20 r12_2467
	word20 r13_2468
	word20 r15_2469
	fn00005B4E(r8, wLoc14_2350, 0x0000, wLoc1C_1111, wLoc1A_1113, out r8_517, out r12_2467, out r13_2468, out r14_515, out r15_2469)
	branch r14_515 <u 0x000A l56EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l56EE:
	r4_526 = r14_515 + 0x0057
	branch r7_1025 != 0x0058 l5692
// DataOut:
// DataOut (flags):
// SymbolicIn:

l56F8:
	r4_526 = r14_515 + 0x0057 & 0xFFDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l568E:
	r4_526 = r14_515 + 0x0030
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5692:
	wLoc20_1269 = wLoc20_2472 + 0xFFFF
	Mem547[wLoc20_1269:byte] = r4_526
	word20 r14_2470
	word20 r12_557
	word20 r13_558
	word20 r15_2471
	fn00005B4E(r8_517, wLoc14_2350, 0x0000, wLoc1C_1111, wLoc1A_1113, out r8, out r12_557, out r13_558, out r14_2470, out r15_2471)
	wLoc1C_1111 = r12_557
	wLoc1A_1113 = r13_558
	wLoc20_2472 = wLoc20_1269
	branch bLoc16_1336 != 0x00 l5658
// DataOut:
// DataOut (flags):
// SymbolicIn:

l56C0:
	branch bLoc18_1185 == 0x08 l56D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l56D2:
	branch (bLoc1E_1118 & 0x08) == 0x00 l56C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l56D8:
	branch r4_526 == 0x0030 l56C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l56DE:
	Mem595[wLoc20_2472 + 0xFFFE:byte] = 0x0030
	wLoc20_1269 = wLoc20_2472 + 0xFFFE (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l56C6:
	r9_361 = fp - 0x0000004C - SLICE(wLoc20_1269, byte, 0) + 0x0028
// DataOut:
// DataOut (flags):
// SymbolicIn:

l54E6:
	branch r7_1025 != 0x00000 l54EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l54EE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l54F6:
	r9_361 = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l54F8:
	bLoc24_1133 = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l54FC:
	word20 r11_623 = r9_361
	word20 r10_628 = bLoc17_1123 - r9_361
	branch r10_628 < 0x00000 l55FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l55FA:
	r10_628 = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5506:
	branch bLoc24_1133 == 0x00 l55EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l55EE:
	branch (bLoc1E_1118 & 0x0040) == 0x00 l5510
// DataOut:
// DataOut (flags):
// SymbolicIn:

l55F6:
	r11_623 = r9_361 + 0x02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l550E:
	r11_623 = r9_361 + 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5510:
	word20 r11_652 = r11_623 + r10_628
	r8 = bLoc1E_1118 & 0x0030
	branch (bLoc1E_1118 & 0x0030) != 0x00 l5542
// DataOut:
// DataOut (flags):
// SymbolicIn:

l551C:
	word20 r13_668 = (int16) (bLoc1D_1128 - SLICE(r11_652, byte, 0))
	branch r13_668 < 0x0001 l5542
// DataOut:
// DataOut (flags):
// SymbolicIn:

l552C:
	__write_pad(r13_668)
	branch true l553E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l553E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5542:
	word20 r14_685
	branch bLoc24_1133 != 0x00000 l55E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l55E4:
	r14_685 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5546:
	branch (bLoc1E_1118 & 0x0040) == 0x00 l5576
// DataOut:
// DataOut (flags):
// SymbolicIn:

l554E:
	r14_685 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l556A:
	branch PRINT(r14_685) >= 0x00000 l5576
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5576:
	branch (bLoc1E_1118 & 0x0030) == 0x0020 l55C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l55C4:
	word20 r13_759 = (int16) (bLoc1D_1128 - SLICE(r11_652, byte, 0))
	branch r13_759 < 0x0001 l557C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l55D4:
	__write_pad(r13_759)
	branch true l557C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l55E2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l557C:
	__write_pad(r10_628)
	branch false l5924
// DataOut:
// DataOut (flags):
// SymbolicIn:

l558A:
	branch PRINT((int16) SLICE(r9_361, byte, 0)) < 0x00000 l5924
// DataOut:
// DataOut (flags):
// SymbolicIn:

l559C:
	branch (bLoc1E_1118 & 0x0010) == 0x00 l53A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l55A4:
	word20 r13_819 = (int16) (bLoc1D_1128 - SLICE(r11_652, byte, 0))
	branch r13_819 < 0x0001 l53A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l55B4:
	__write_pad(r13_819)
	branch true l53A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l55C2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5572:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l553A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l54EA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5498:
	bLoc1E_1118 = bLoc1E_1118 | 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5458:
	word20 r13_833 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l545A:
	word20 r14_839 = r13_833 * 0x00002
	word20 r13_848 = r13_833 * 0x00004 + r14_839 + r14_839 + r14_839 + (int16) SLICE(r7_1025, byte, 0)
	byte v65_852 = Mem172[r6_101:byte]
	r13_833 = r13_848 + 0xFFD0
	r7_1025 = v65_852
	r6_101 = r6_101 + 0x0001
	branch v65_852 >=u 0xFFC6 l545A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5486:
	bLoc1D_1128 = r13_848 + 0xFFD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5448:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5822:
	branch (bLoc1E_1118 & 0x0010) == 0x00 l582E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l582E:
	bLoc1E_1118 = bLoc1E_1118 | 0x0020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l582A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l543E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5838:
	byte v58_875 = Mem172[r6_101:byte]
	r7_1025 = v58_875
	r6_101 = r6_101 + 0x0001
	branch v58_875 == 0x002A l588A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l588A:
	word16 v61_882 = Mem172[r5_1033:word16]
	r5_1033 = r5_1033 + 0x0002
	word20 r15_884 = v61_882
	branch v61_882 >= 0xFFFF l5898
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5896:
	r15_884 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5898:
	r11_1070 = r15_884
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5842:
	word20 r13_890 = 0x0000
	branch v58_875 <u 0xFFC6 l587C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5850:
	word20 r14_900 = r13_890 * 0x00002
	byte v60_913 = Mem172[r6_101:byte]
	r13_890 = r13_890 * 0x00004 + r14_900 + r14_900 + r14_900 + (int16) SLICE(r7_1025, byte, 0) + 0xFFD0
	r7_1025 = v60_913
	r6_101 = r6_101 + 0x0001
	branch v60_913 >=u 0xFFC6 l5850
// DataOut:
// DataOut (flags):
// SymbolicIn:

l587C:
	word20 r15_921 = r13_890
	branch r13_890 >= 0xFFFF l5884
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5882:
	r15_921 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5884:
	r11_1070 = r15_921
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5434:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l589E:
	bLoc24_1133 = 0x002B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l542A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5420:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l58B8:
	byte v49_932 = Mem172[r5_1033:byte]
	r5_1033 = r5_1033 + 0x0002
	bLoc1D_1128 = v49_932
	branch v49_932 < 0x00 l58CA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l58CA:
	bLoc1D_1128 = (v49_932 ^ 0xFF) + 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l58A8:
	bLoc1E_1118 = (bLoc1E_1118 | 0x0010) & 0xFFDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l58C6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5416:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l58D4:
	bLoc1E_1118 = bLoc1E_1118 | 0x08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l540C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l58DC:
	branch bLoc24_1133 == 0x00 l58E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l58E6:
	bLoc24_1133 = 0x0020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l58E2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000053D0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l5924:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vuprintf_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 memchr(word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13:[0..19] r14:[0..19] r15:[0..19]
// LiveOut: r15
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r11 sp
memchr_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000593E:
	word20 r15_23
	branch r13 == 0x00000 l00005956
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005948:
	word20 r14_13 = r15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000594A:
	r14_13 = r14_13 + 0x0001
	branch Mem5[r14_13:byte] == r14 l0000595A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000595A:
	r15_23 = r14_13 + 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005952:
	r13 = r13 + 0xFFFF
	branch r13 != 0x00000 l0000594A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005956:
	r15_23 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000595E:
	return r15_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

memchr_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void strncpy(word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13:[0..19] r14:[0..19] r15:[0..19]
// LiveOut:
// Trashed: VNZC r12 r13 r14
// Preserved: r11 r15 sp
strncpy_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005962:
	branch r13 == 0x00000 l0000598E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000596A:
	word20 r12_11 = r15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000596C:
	Mem18[r12_11:byte] = Mem13[r14:byte]
	r14 = r14 + 0x0001
	r12_11 = r12_11 + 0x0001
	branch Mem18[r12_11:byte] == 0x00 l00005980
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005980:
	word20 r13_26 = r13 + 0xFFFF
	branch r13_26 == 0x00000 l0000598E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005984:
	Mem33[r12_11:byte] = 0x00
	r12_11 = r12_11 + 0x0001
	r13_26 = r13_26 + 0xFFFF
	branch r13_26 != 0x00000 l00005984
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000597A:
	r13 = r13 + 0xFFFF
	branch r13 != 0x00000 l0000596C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000597E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000598E:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

strncpy_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 memcpy(word20 sr, word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13:[0..19] r14:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: sr
// Trashed: VNZC r12 r13 r14 sr
// Preserved: r10 r11 r15 sp
memcpy_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005994:
	word20 r11_12 = r13
	word20 r13_13 = r15
	word20 r12_136 = r14
	branch r13 == 0x00000 l00005A60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000059A4:
	branch r15 == r14 l00005A60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000059A8:
	branch r15 <u r14 l00005A02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005A02:
	word20 r12_100 = r14 + r13
	word20 r13_245 = r15 + r13
	word20 r15_27 = r12_100 | r13_245
	bool C_72 = SLICE(cond(r15_27 & 0x0001), bool, 0)
	branch (r15_27 & 0x0001) == 0x00000 l00005A30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005A12:
	word20 r14_41
	branch ((r12_100 ^ r13_245) & 0x0001) != 0x00000 l00005A20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005A1A:
	branch r13 <u 0x0003 l00005A5A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005A5A:
	r14_41 = r12_100 & 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005A20:
	r14_41 = r13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005A22:
	r11_12 = r13 - r14_41
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005A24:
	r12_100 = r12_100 + 0xFFFF
	r13_245 = r13_245 + 0xFFFF
	Mem58[r13_245:byte] = Mem54[r12_100:byte]
	r14_41 = r14_41 + 0xFFFF
	C_72 = SLICE(cond(r14_41), bool, 0) (alias)
	branch r14_41 != 0x00000 l00005A24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005A30:
	sr = sr & ~0x0001
	word20 r14_75 = __rcr(r11_12, 0x01, C_72)
	branch r14_75 == 0x00000 l00005A46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005A3A:
	r12_100 = r12_100 - 0x0002
	r13_245 = r13_245 - 0x0002
	Mem86[r13_245:word16] = Mem82[r12_100:word16]
	r14_75 = r14_75 + 0xFFFF
	branch r14_75 != 0x00000 l00005A3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005A46:
	word20 r14_107 = r11_12 & 0x0001
	branch r14_107 == 0x00000 l00005A60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005A4C:
	r12_100 = r12_100 + 0xFFFF
	r13_245 = r13_245 + 0xFFFF
	Mem106[r13_245:byte] = Mem102[r12_100:byte]
	r14_107 = r14_107 + 0xFFFF
	branch r14_107 != 0x00000 l00005A4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005A58:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000059AC:
	word20 r15_112 = r14 | r15
	bool C_157 = SLICE(cond(r15_112 & 0x0001), bool, 0)
	branch (r15_112 & 0x0001) == 0x00000 l000059D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000059B4:
	word20 r14_128
	branch ((r14 ^ r15) & 0x0001) != 0x00000 l000059C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000059BC:
	branch r13 <u 0x0002 l000059F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000059F8:
	r14_128 = 0x0002 - (r14 & 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000059C0:
	r14_128 = r13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000059C2:
	r11_12 = r13 - r14_128
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000059C4:
	Mem142[r13_13:byte] = Mem137[r12_136:byte]
	r14_128 = r14_128 + 0xFFFF
	r12_136 = r12_136 + 0x0001
	r13_13 = r13_13 + 0x0001
	C_157 = SLICE(cond(r14_128), bool, 0) (alias)
	branch r14_128 != 0x00000 l000059C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000059D0:
	sr = sr & ~0x0001
	word20 r14_160 = __rcr(r11_12, 0x01, C_157)
	branch r14_160 == 0x00000 l000059E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000059DA:
	Mem170[r13_13:word16] = Mem164[r12_136:word16]
	r12_136 = r12_136 + 2
	r13_13 = r13_13 + 0x0002
	r14_160 = r14_160 + 0xFFFF
	branch r14_160 != 0x00000 l000059DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000059E4:
	word20 r14_179 = r11_12 & 0x0001
	branch r14_179 == 0x00000 l00005A60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000059EA:
	Mem189[r13_13:byte] = Mem184[r12_136:byte]
	r12_136 = r12_136 + 0x0001
	r13_13 = r13_13 + 0x0001
	r14_179 = r14_179 + 0xFFFF
	branch r14_179 != 0x00000 l000059EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000059F6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005A60:
	return sr
// DataOut:
// DataOut (flags):
// SymbolicIn:

memcpy_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 memset(word20 sr, word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13:[0..19] r14:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: sr
// Trashed: VNZC r12 r13 r14 sr
// Preserved: r10 r11 r15 r9 sp
memset_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005A68:
	word20 r14_131 = r15
	branch r13 <u 0x0006 l00005A8A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005A8A:
	word20 r11_134 = r14
	branch r14 == 0x00000 l00005A96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005A90:
	r11_134 = r14 | __swpb(r14)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005A96:
	bool C_57 = SLICE(cond(r15 & 0x0001), bool, 0)
	branch (r15 & 0x0001) == 0x00000 l00005AAE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005A9C:
	word20 r15_33 = 0x0002 - (r15 & 0x0001)
	word20 r12_34 = r15_33
	r13 = r13 - r15_33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005AA4:
	Mem43[r14_131:byte] = r14
	r12_34 = r12_34 + 0xFFFF
	r14_131 = r14_131 + 0x0001
	C_57 = SLICE(cond(r12_34), bool, 0) (alias)
	branch r12_34 != 0x00000 l00005AA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005AAE:
	sr = sr & ~0x0001
	word20 r12_60 = __rcr(r13, 0x01, C_57)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005AB4:
	Mem68[r14_131:word16] = r11_134
	r14_131 = r14_131 + 0x0002
	r12_60 = r12_60 + 0xFFFF
	branch r12_60 != 0x00000 l00005AB4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005ABE:
	word20 r12_76 = r13 & 0x0001
	branch r12_76 == 0x00000 l00005ACE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005AC4:
	Mem85[r14_131:byte] = r14
	r14_131 = r14_131 + 0x0001
	r12_76 = r12_76 + 0xFFFF
	branch r12_76 != 0x00000 l00005AC4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005A7A:
	branch r13 == 0x00000 l00005ACE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005A7E:
	Mem98[r14_131:byte] = r14
	r14_131 = r14_131 + 0x0001
	r13 = r13 + 0xFFFF
	branch r13 != 0x00000 l00005A7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005A88:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005ACE:
	return sr
// DataOut:
// DataOut (flags):
// SymbolicIn:

memset_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 fn00005ADC(word20 r10, word20 r11, word20 r12, word20 r13, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..19] r11:[0..19] r12:[0..19] r13:[0..19]
// LiveOut: r14 r15
// Trashed: r14 r15
// Preserved: sp
fn00005ADC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005ADC:
	Mem4[0x0130:ptr16] = r12
	Mem6[0x0138:ptr16] = r10
	Mem7[0x0134:ptr16] = r12
	Mem9[0x013A:ptr16] = 0x013C
	Mem11[0x0138:ptr16] = r11
	Mem13[0x0134:ptr16] = r13
	Mem14[0x0138:ptr16] = r10
	r15Out = 0x013A
	return 0x013A
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00005ADC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word20 fn00005B04(word20 r10, word20 r11, word20 r12, word20 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..19] r11:[0..19] r12:[0..19] r13:[0..19]
// LiveOut: r12
// Trashed: VNZC r12 r13 r14 r15 r8 r9
// Preserved: r10 r11 sp
fn00005B04_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005B04:
	word20 r8_18 = 0x0000
	branch (r13 & 0x8000) == 0x00000 l00005B16
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005B0C:
	r12 = (r12 ^ 0xFFFF) + 0x0001
	r13 = (r13 ^ 0xFFFF) + (r12 <u 0x00000)
	r8_18 = r8_18 | 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005B16:
	branch (r11 & 0x8000) == 0x00000 l00005B26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005B1C:
	r10 = (r10 ^ 0xFFFF) + 0x0001
	r11 = (r11 ^ 0xFFFF) + (r10 <u 0x00000)
	r8_18 = r8_18 | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005B26:
	word20 r13_45
	word20 r14_46
	word20 r15_47
	word20 r8_48
	word20 r12_44
	word20 r8_54 = __rcr(r8_48, 0x01, fn00005B4E(r8_18, r10, r11, r12, r13, out r8_48, out r12_44, out r13_45, out r14_46, out r15_47))
	branch (r8_54 & 0x0004) == 0x00000 l00005B40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005B30:
	r12_44 = (r12_44 ^ 0xFFFF) + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005B40:
	branch (r8_54 & 0x0008) == 0x00000 l00005B4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005B44:
	r12_44 = (r12_44 ^ 0xFFFF) + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005B4C:
	return r12_44
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00005B04_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



bool fn00005B4E(word20 r8, word20 r10, word20 r11, word20 r12, word20 r13, ptr16 & r8Out, ptr16 & r12Out, ptr16 & r13Out, ptr16 & r14Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..19] r11:[0..19] r12:[0..19] r13:[0..19] r8:[0..19]
// LiveOut: C r12 r13 r14 r15 r8
// Trashed: VNZC r12 r13 r14 r15 r8 r9
// Preserved: sp
fn00005B4E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005B4E:
	word20 r15_29 = 0x00000
	word20 r14_25 = 0x00000
	word20 r9_18 = 0x0021
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005B6C:
	r12 = r12 * 0x00002
	r13 = r13 * 0x00002 + (r12 <u 0x00000)
	r9_18 = r9_18 - 0x0001
	word20 r8_17 = r8 * 0x00002 + (r13 <u 0x00000)
	bool C_22 = SLICE(cond(r9_18), bool, 0)
	branch r9_18 != 0x00000 l00005B58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005B58:
	r8 = __rcr(r8_17, 0x01, C_22)
	r14_25 = r14_25 * 0x00002 + (r8 <u 0x00000)
	r15_29 = r15_29 * 0x00002 + (r14_25 <u 0x00000)
	branch r15_29 >=u r11 l00005B6C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005B62:
	branch r15_29 != r11 l00005B68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005B64:
	branch r14_25 >=u r10 l00005B6C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005B68:
	r14_25 = r14_25 - r10
	r15_29 = r15_29 - r11 - (r14_25 <u 0x00000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00005B76:
	r8Out = r8_17
	r12Out = r12
	r13Out = r13
	r14Out = r14_25
	r15Out = r15_29
	return C_22
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00005B4E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



