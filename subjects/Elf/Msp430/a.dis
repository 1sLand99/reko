void __write_char(word20 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn09B2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn09B2_entry:
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp

l09B2:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00004000(word20 pc, word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc sr
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00004000_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l00004000:
	Mem2[0x0120:ptr16] = 0x5A80
	word20 r15_28 = 0x5B78
	word20 r14_27 = 0x0200
	word20 r13_5 = 0x021C
	branch r13_5 == r14_27 l00004020
// DataOut: pc r13 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l00004016:
	Mem33[r14_27:byte] = Mem2[r15_28:byte]
	r15_28 = r15_28 + 1
	r14_27 = r14_27 + 0x0001
	branch r14_27 >=u r13_5 l00004016
// DataOut: pc r13 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r13:0x021C

l00004020:
	word20 r15_11 = 0x021C
	word20 r13_12 = 0x09B4
	branch r13_12 == r15_11 l00004036
// DataOut: pc r13 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r13:0x021C

l0000402C:
	Mem23[r15_11:byte] = 0x00
	r15_11 = r15_11 + 0x0001
	branch r15_11 >=u r13_12 l0000402C
// DataOut: pc r13 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r13:0x09B4

l00004036:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r13:0x09B4

l00004036_thunk_main:
	main(pc, sr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r13:0x09B4
// Terminates process

fn00004000_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void task_idle(word20 pc, word20 sr, word20 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r8 sr
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
task_idle_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

task_idle_entry:
// DataOut: pc r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4048:
	word20 r15_12
	word20 sr_13 = xTaskGetTickCount(sr, out r15_12)
	word20 r10_15 = r15_12 + 0x03E8
// DataOut: pc r10 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l405A:
	word20 r15_30
	sr_13 = xTaskGetTickCount(sr_13, out r15_30)
	branch r10_15 - r15_30 >= 0x0001 l4080
// DataOut: pc r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r10:<invalid> r9:0x0000 r11:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> sr:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r4:<invalid> r8:<invalid> r12:<invalid> -10(fp):0x4040 -8(fp):0x0001 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l4080:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r10:<invalid> r9:0x0001 r11:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> sr:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r4:<invalid> r8:<invalid> r12:<invalid> -10(fp):0x4040 -8(fp):0x0001 -6(fp):r9 -4(fp):r10 -2(fp):r11

l406A:
	word20 r11_42
	r8 = printf(pc, r8, out r11_42)
	r10_15 = r11_42 + 0x03E8
// DataOut: pc r10 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r10:<invalid> r9:0x0001 r11:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> sr:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r4:<invalid> r8:<invalid> r12:<invalid> -10(fp):0x4040 -8(fp):0x0001 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)



void task_1(word20 pc, word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc sr
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
task_1_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

task_1_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4096:
	word20 r15_5
	word20 sr_11 = xTaskGetTickCount(sr, out r15_5)
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l40A0:
	Mem13[0x0031:ptr16] = Mem0[0x0031:ptr16] ^ 0x01
	word20 r11_17
	sr_11 = vTaskDelayUntil(pc, putchar(pc, sr_11, 0x0058, out r11_17), 0x01F4, fp - 0x0002)
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r15:<invalid> r14:<invalid> sr:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r12:<invalid> r13:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):<invalid>
// LocalsOut: fp(20)



void task_2(word20 pc, word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc sr
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
task_2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

task_2_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l40BC:
	word20 r15_5
	word20 sr_11 = xTaskGetTickCount(sr, out r15_5)
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l40C6:
	Mem13[0x0031:ptr16] = Mem0[0x0031:ptr16] ^ 0x02
	word20 r11_17
	sr_11 = vTaskDelayUntil(pc, putchar(pc, sr_11, 0x0059, out r11_17), 0x00FA, fp - 0x0002)
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r15:<invalid> r14:<invalid> sr:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r12:<invalid> r13:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):<invalid>
// LocalsOut: fp(20)



void task_3(word20 pc, word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc sr
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
task_3_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

task_3_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l40E2:
	word20 r15_5
	word20 sr_11 = xTaskGetTickCount(sr, out r15_5)
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l40EC:
	Mem13[0x0031:ptr16] = Mem0[0x0031:ptr16] ^ 0x04
	word20 r11_17
	sr_11 = vTaskDelayUntil(pc, putchar(pc, sr_11, 0x005A, out r11_17), 0x0019, fp - 0x0002)
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r15:<invalid> r14:<invalid> sr:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r12:<invalid> r13:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):<invalid>
// LocalsOut: fp(20)



void main(word20 pc, word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc sr
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

main_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l414C:
	__set_stackpointer(0x0A00)
	Mem2[0x0120:ptr16] = 0x5A80
	Mem3[0x0056:ptr16] = 0xFFE0
	Mem4[0x0057:ptr16] = 0x0007
	Mem5[0x0032:ptr16] = 0x0007
	Mem6[0x0031:ptr16] = 0x0007
	word20 r8_18
	word20 sr_19 = init_uart_isr(pc, sr, out r8_18)
	uart_putchar_isr_mode(0x00)
	word20 r11_27
	printf(pc, r8_18, out r11_27)
	uart_putchar_isr_mode(0x01)
	word20 r15_38
	word20 r15_48
	word20 r15_58
	word20 r15_68
	vTaskStartScheduler(pc, xTaskCreate(pc, xTaskCreate(pc, xTaskCreate(pc, xTaskCreate(pc, sr_19, out r15_38), out r15_48), out r15_58), out r15_68))
// DataOut: r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l5AD8:
// DataOut: r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r13:<invalid> r14:<invalid> r15:0x0000 r12:<invalid> sr:<invalid> r4:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> r5:<invalid> -28(fp):0x0000 -26(fp):0x0000 -24(fp):0x0003 -22(fp):0x0000 -20(fp):0x0003 -18(fp):0x0000 -16(fp):0x0003 -14(fp):0x0000 -12(fp):0x411D -10(fp):0x4111 -8(fp):0x4108 -6(fp):0x8000 -4(fp):0x0000 -2(fp):0x0010



word20 msp430_compute_modulator_bits(word20 sr, word20 r12, word20 r13, word20 r14, word20 r15, ptr16 & r4Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12 r13 r14 r15 sr
// LiveOut: r15 r4 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
msp430_compute_modulator_bits_entry:
// DataOut: pc r12 r13 r14 r15 r4 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000420E:
	word16 v16_39 = Mem0[fp + 0x00000002:word16]
	word20 r12_46 = fn00005B04(r14, r15, r12, r13)
	word20 r15_67
	word20 r8_74 = fn00005ADC(r14, r15, r12_46, 0x0000, out r15_67) - r12
	word20 r9_77 = r15_67 - r13 - (r8_74 <u 0x00000)
	branch v16_39 == 0x0000 l00004274
// DataOut: pc r4 r5 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0010(20) Local -0014(16) Local -0016(20)

l0000426C:
	Mem177[v16_39:word16] = r12_46
// DataOut: pc r4 r5 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000016 r11:r15 r4:r14 r5:r15 r6:r12 r7:r13 r10:r14 r15:<invalid> r14:<invalid> r12:<invalid> r13:0x0000 sr:(word16) sr r8:<invalid> r9:<invalid> -24(fp):sr -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0010(20)

l00004274:
	word20 r7_118 = 0x00
	word20 r10_119 = 0x0000
	word20 r11_120 = 0x0000
	word20 r6_121 = 0x00
// DataOut: pc r10 r11 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000016 r11:r15 r4:r14 r5:r15 r6:r12 r7:r13 r10:r14 r15:<invalid> r14:<invalid> r12:<invalid> r13:0x0000 sr:(word16) sr r8:<invalid> r9:<invalid> -24(fp):sr -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0010(20)

l0000427C:
	r10_119 = r10_119 + r8_74
	word20 r14_99 = (r14 ^ 0xFFFF) + 0x0001
	r11_120 = r11_120 + r9_77 + (r10_119 <u 0x00000)
	branch r11_120 * 0x00002 + (r10_119 * 0x00002 <u 0x00000) - ((r15 ^ 0xFFFF) + (r14_99 <u 0x00000)) - (r10_119 * 0x00002 - r14_99 <u 0x00000) >= 0x00000 l000042AE
// DataOut: pc r10 r11 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000016 r11:<invalid> r4:r14 r5:r15 r6:<invalid> r7:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> sr:(word16) sr r8:<invalid> r9:<invalid> -24(fp):sr -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0010(20)

l0000429A:
	r10_119 = r10_119 + r14
	r11_120 = r11_120 + r15 + (r10_119 <u 0x00000)
	word20 r15_157 = 0x0001
	word20 r14_158 = r6_121
	branch r6_121 == 0x0000 l000042AC
// DataOut: pc r10 r11 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000016 r11:<invalid> r4:r14 r5:r15 r6:<invalid> r7:<invalid> r10:<invalid> r15:<invalid> r14:(r14 ^ 0xFFFF ^ 0xFFFF) + 0x0001 r12:<invalid> r13:<invalid> sr:(word16) sr r8:<invalid> r9:<invalid> -24(fp):sr -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0010(20)

l000042A6:
	r15_157 = r15_157 * 0x00002
	r14_158 = r14_158 - 0x0001
	branch r14_158 != 0x00000 l000042A6
// DataOut: pc r10 r11 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000016 r11:<invalid> r4:r14 r5:r15 r6:<invalid> r7:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> sr:(word16) sr r8:<invalid> r9:<invalid> -24(fp):sr -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0010(20)

l000042AC:
	r7_118 = r7_118 | r15_157
// DataOut: pc r10 r11 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000016 r11:<invalid> r4:r14 r5:r15 r6:<invalid> r7:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> sr:(word16) sr r8:<invalid> r9:<invalid> -24(fp):sr -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0010(20)

l000042AE:
	r6_121 = r6_121 + 0x01
	branch r6_121 >=u 0x08 l0000427C
// DataOut: pc r10 r11 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000016 r11:<invalid> r4:r14 r5:r15 r6:<invalid> r7:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> sr:(word16) sr r8:<invalid> r9:<invalid> -24(fp):sr -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0010(20)

l000042B4:
	word20 r15_124
	*r15Out = r7_118
	word20 r4_129
	*r4Out = r4
	return sr
// DataOut: pc r15 r4 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000016 r11:<invalid> r4:r14 r5:r15 r6:<invalid> r7:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> sr:(word16) sr r8:<invalid> r9:<invalid> -24(fp):sr -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

msp430_compute_modulator_bits_exit:
// DataOut: r15 r4 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r11:(word16) r11 r4:(word16) r14 r5:(word16) r15 r6:(word16) r6 r7:(word16) r7 r10:(word16) r10 r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> sr:(word16) sr r8:(word16) r8 r9:(word16) r9 -24(fp):sr -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11



word20 init_uart_isr(word20 pc, word20 sr, ptr16 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc sr
// LiveOut: r8 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
init_uart_isr_entry:
// DataOut: pc r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l000042CC:
	byte v17_41 = Mem0[fp + 0x00000006:byte]
	Mem45[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	word20 r6_50
	word20 r7_51
	word20 r8_52
	word20 r9_53
	word20 r10_54
	word20 r11_55
	word20 r15_56
	word20 sr_57 = xQueueCreate(pc, sr & ~0x0008, v17_41, out r6_50, out r7_51, out r8_52, out r9_53, out r10_54, out r11_55, out r15_56)
	Mem58[0x021C:ptr16] = r15_56
	word20 r6_61
	word20 r7_62
	word20 r8_63
	word20 r9_64
	word20 r10_65
	word20 r11_66
	word20 r15_67
	word20 sr_68 = xQueueCreate(pc, sr_57, r11_55, out r6_61, out r7_62, out r8_63, out r9_64, out r10_65, out r11_66, out r15_67)
	Mem69[0x021E:ptr16] = r15_67
	Mem70[0x0078:ptr16] = 0x01
	Mem71[0x0078:ptr16] = Mem70[0x0078:ptr16] | 0x0010
	Mem75[0x0079:ptr16] = r6_61 & 0x0030
	word20 r4_82
	word20 r15_83
	word20 sr_102 = msp430_compute_modulator_bits(sr_68, r9_64, r10_65, r7_62, r8_63, out r4_82, out r15_83)
	Mem87[0x007C:ptr16] = Mem75[r4_82:byte]
	Mem92[0x007D:ptr16] = __swpb(Mem87[r4_82:word16]) & 0xFF
	Mem93[0x007B:ptr16] = r15_83
	Mem94[0x0005:ptr16] = Mem93[0x0005:ptr16] | 0x0030
	Mem95[0x0078:ptr16] = 0x0010
	Mem96[0x001B:ptr16] = Mem95[0x001B:ptr16] | 0xFFC0
	Mem97[0x0001:ptr16] = Mem96[0x0001:ptr16] | 0x0030
	branch 0x0218 == 0x0000 l0000436E
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0008(20)

l00004366:
	Mem127[0x0218:ptr16] = Mem97[0x0218:ptr16] + 0xFFFF
	branch Mem127[0x0218:ptr16] != 0x0000 l0000436E
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r4:<invalid> r12:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r15:<invalid> sr:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r5:<invalid> -18(fp):<invalid> -14(fp):r4 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0008(20)

l0000436C:
	sr_102 = sr_102 | 0x0008
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r4:<invalid> r12:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r15:<invalid> sr:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r5:<invalid> -18(fp):<invalid> -14(fp):r4 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0008(20)

l0000436E:
	word20 r8_116
	*r8Out = r8
	return sr_102
// DataOut: pc r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r4:<invalid> r12:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r15:<invalid> sr:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r5:<invalid> -18(fp):<invalid> -14(fp):r4 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

init_uart_isr_exit:
// DataOut: r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid> r12:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:(word16) r9 r10:(word16) r10 r15:<invalid> sr:<invalid> r11:(word16) r11 r14:<invalid> r13:<invalid> r5:<invalid> -18(fp):<invalid> -14(fp):r4 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11



void getchar(word20 pc, word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc sr
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
getchar_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20)

l4380:
	branch x_getchar(pc, sr, 0x0064, fp - 0x0002) == 0x0000 l4396
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(20)

l4396:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r14:<invalid> r15:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid>

l4390:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r14:<invalid> r15:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid>

l4398:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r14:<invalid> r15:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid>

getchar_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r14:<invalid> r15:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid>



void uart_putchar_isr_mode(word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15
// LiveOut:
// Trashed:
// Preserved: sp
uart_putchar_isr_mode_entry:
// DataOut: pc r15 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000439C:
	Mem3[0x0200:ptr16] = r15
	return
// DataOut: pc r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

uart_putchar_isr_mode_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word20 putchar(word20 pc, word20 sr, word20 r15, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r15 sr
// LiveOut: r11 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
putchar_entry:
// DataOut: pc r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l000043A2:
	word20 r11_12 = r15
	branch r15 == 0x000A l000043D6
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(20)

l000043D6:
	sr = putchar(pc, sr, 0x000D, out r11_12)
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 -2(fp):r11
// LocalsOut: Local -0002(20)

l000043AC:
	word20 r15_20
	branch 0x0200 != 0x00 l000043CA
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> sr:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l000043CA:
	sr = x_putchar(pc, sr, 0x0064, r11_12, out r15_20)
// DataOut: pc r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> sr:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l000043B2:
	branch (0x0079 & 0x01) == 0x00 l000043B2
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> sr:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l000043B8:
	Mem35[0x007F:ptr16] = r11_12
	r15_20 = 0x0001
// DataOut: pc r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> sr:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l000043BE:
	branch r15_20 == 0x0000 l000043C6
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> r14:<invalid> r15:<invalid> r13:<invalid> sr:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l000043C6:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> r14:<invalid> r15:<invalid> r13:<invalid> sr:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l000043C2:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> r14:<invalid> r15:<invalid> r13:<invalid> sr:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l000043E0:
	word20 r11_26
	*r11Out = r11
	return sr
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> r14:<invalid> r15:<invalid> r13:<invalid> sr:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

putchar_exit:
// DataOut: r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r11:<invalid> r14:<invalid> r15:<invalid> r13:<invalid> sr:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11



word20 x_getchar(word20 pc, word20 sr, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r14 r15 sr
// LiveOut: r15
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
x_getchar_entry:
// DataOut: pc r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l43E4:
	word20 r15_9
	xQueueReceive(pc, sr, r14, r15, 0x021C, out r15_9)
	branch r15_9 == 0x0000 l43F8
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l43F8:
	return 0x0000
// DataOut: r15
// DataOut (flags): 
// SymbolicIn: sp:fp r13:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid>

l43F4:
	return 0x0001
// DataOut: r15
// DataOut (flags): 
// SymbolicIn: sp:fp r13:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid>

x_getchar_exit:
// DataOut: r15
// DataOut (flags): 
// SymbolicIn: sp:fp r13:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid>



word20 x_putchar(word20 pc, word20 sr, word20 r14, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r14 r15 sr
// LiveOut: r15 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
x_putchar_entry:
// DataOut: pc r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l000043FC:
	Mem13[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	word20 sr_11 = sr & ~0x0008
	branch 0x0220 == 0x0001 l00004440
// DataOut: pc r13 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(16)

l00004410:
	word20 r15_45
	sr_11 = xQueueSend(pc, sr_11, r14, fp - 0x0002, 0x021E, out r15_45)
	branch 0x0220 == 0x0001 l00004430
// DataOut: pc r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r13:r14 sr:sr & ~0x0008 -2(fp):r15
// LocalsOut: fp(20) Local -0002(16)

l00004430:
	branch r15_45 != 0x0001 l00004420
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r13:<invalid> sr:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r15
// LocalsOut: fp(20) Local -0002(16)

l00004434:
	word20 r15_54
	sr_11 = xQueueReceive(pc, sr_11, 0x0000, fp - 0x0002, 0x021E, out r15_54)
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r13:<invalid> sr:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r15
// LocalsOut: Local -0002(16)

l00004440:
	Mem39[0x0220:ptr16] = 0x0000
	Mem41[0x007F:ptr16] = r15
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r13:<invalid> sr:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r15

l00004420:
	branch 0x0218 == 0x0000 l0000444A
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r13:<invalid> sr:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r15

l00004426:
	Mem29[0x0218:ptr16] = Mem13[0x0218:ptr16] + 0xFFFF
	branch Mem29[0x0218:ptr16] != 0x0000 l0000444A
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r13:<invalid> sr:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r15

l0000442C:
	sr_11 = sr_11 | 0x0008
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r13:<invalid> sr:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r15

l0000444A:
	word20 r15_25
	*r15Out = 0x0001
	return sr_11
// DataOut: pc r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r13:<invalid> sr:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r15

x_putchar_exit:
// DataOut: r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r13:<invalid> sr:<invalid> r14:<invalid> r15:0x0001 r11:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r15



void vRxISR(word20 pc, word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc sr
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
vRxISR_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4450:
	word20 r15_24
	word20 sr_25 = xQueueSendFromISR(sr, fp - 0x0000000A, 0x021C, out r15_24)
	branch r15_24 == 0x0000 l4474
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4470:
	word20 r5_58
	word20 r6_59
	word20 r7_60
	word20 r8_61
	word20 r9_62
	word20 r10_63
	word20 r11_64
	vPortYield(pc, sr_25, out r5_58, out r6_59, out r7_60, out r8_61, out r9_62, out r10_63, out r11_64)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000A r13:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r12:<invalid> sr:<invalid> -10(fp):007E -8(fp):r12 -6(fp):r13 -4(fp):r14 -2(fp):r15
// LocalsOut: fp(20)

l4474:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000A r13:<invalid> r14:<invalid> r15:<invalid> sr:<invalid> r12:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -10(fp):007E -8(fp):r12 -6(fp):r13 -4(fp):r14 -2(fp):r15

vRxISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r13:(word16) r13 r14:<invalid> r15:(word16) r15 r12:(word16) r12 sr:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -10(fp):007E -8(fp):r12 -6(fp):r13 -4(fp):r14 -2(fp):r15



void vTxISR(word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  sr
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15 sr
// Preserved: sp
vTxISR_entry:
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -000A(16)

l4480:
	branch xQueueReceiveFromISR(sr, fp - 0x0000000A, 0x021E) == 0x0001 l44A2
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -000A(16)

l44A2:
	Mem41[0x007F:ptr16] = bLoc0A
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r13:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> sr:<invalid> -8(fp):r12 -6(fp):r13 -4(fp):r14 -2(fp):r15
// LocalsOut: fp(20)

l449C:
	Mem38[0x0220:ptr16] = 0x0001
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r13:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> sr:<invalid> -8(fp):r12 -6(fp):r13 -4(fp):r14 -2(fp):r15
// LocalsOut: fp(20)

l44A8:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r13:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> sr:<invalid> -8(fp):r12 -6(fp):r13 -4(fp):r14 -2(fp):r15

vTxISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r13:<invalid> r14:<invalid> r15:(word16) r15 r12:(word16) r12 r11:<invalid> r10:<invalid> sr:<invalid> -8(fp):r12 -6(fp):r13 -4(fp):r14 -2(fp):r15



word20 xTaskCreate(word20 pc, word20 sr, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc sr
// LiveOut: r15 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
xTaskCreate_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l000044B4:
	word20 r10_104
	word20 r5_42
	word20 r6_43
	word20 r7_44
	word20 r8_45
	word20 r9_46
	word20 r10_47
	word20 r15_48
	word20 sr_106 = prvAllocateTCBAndStack(pc, sr, out r5_42, out r6_43, out r7_44, out r8_45, out r9_46, out r10_47, out r15_48)
	word20 r11_113 = r15_48
	branch r15_48 == 0x0000 l000045A0
// DataOut: pc r10 r11 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l000045A0:
	r10_104 = 0xFFFF
// DataOut: pc r10 r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 14 r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r12:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l000044E2:
	r11_113 = prvInitialiseTCBVariables(r8_45, r9_46, r10_47, r15_48)
	Mem126[r11_113:word16] = pxPortInitialiseStack(r7_44, r6_43, Mem0[r11_113 + 36:word16] * 0x00002 + Mem0[r11_113 + 2:word16] - 0x0002)
	Mem128[0x0218:ptr16] = Mem126[0x0218:ptr16] + 0x0001
	Mem130[0x0206:ptr16] = Mem128[0x0206:ptr16] + 0x0001
	sr_106 = sr_106 & ~0x0008
	branch 0x0206 == 0x0001 l00004596
// DataOut: pc r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 14 r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r12:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004596:
	Mem175[0x0202:ptr16] = r11_113
	r11_113 = prvInitialiseTaskLists()
// DataOut: pc r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 14 r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004514:
	branch 0x020E != 0x0000 l0000452A
// DataOut: pc r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 14 r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l0000451A:
	branch r8_45 >=u Mem130[0x0208:word16] l0000452A
// DataOut: pc r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 14 r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004526:
	Mem174[0x0202:ptr16] = r11_113
// DataOut: pc r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 14 r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l0000452A:
	word16 v25_136 = Mem130[r11_113 + 6:word16]
	branch 0x020A <u v25_136 l00004538
// DataOut: pc r11 r15 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 14 r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004534:
	Mem166[0x020A:ptr16] = v25_136
// DataOut: pc r11 r15 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 14 r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004538:
	Mem142[r11_113 + 4:word16] = 0x0214
	Mem143[0x0214:ptr16] = Mem142[0x0214:ptr16] + 0x0001
	Mem147[r11_113 + 8:word16] = 0x0000
	branch 0x020C <u v25_136 l00004550
// DataOut: pc r11 r15 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 14 r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l0000454C:
	Mem165[0x020C:ptr16] = v25_136
// DataOut: pc r11 r15 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 14 r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004550:
	vListInsertEnd(r11_113 + 0x0008, v25_136 * 0x00010 + 0x0222)
	r10_104 = 0x0001
	branch 0x0218 == 0x0000 l00004574
// DataOut: pc r10 r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 14 r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l0000456C:
	Mem161[0x0218:ptr16] = Mem147[0x0218:ptr16] + 0xFFFF
	branch Mem161[0x0218:ptr16] != 0x0000 l00004574
// DataOut: pc r10 r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 14 r11:<invalid> r6:<invalid> r9:<invalid> r10:0x0001 r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004572:
	sr_106 = sr_106 | 0x0008
// DataOut: pc r10 r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 14 r11:<invalid> r6:<invalid> r9:<invalid> r10:0x0001 r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004574:
	branch r10_104 != 0x0001 l000045A4
// DataOut: pc r10 r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 14 r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004578:
	branch r5_42 == 0x0000 l00004580
// DataOut: pc r10 r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 14 r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l0000457C:
	Mem109[r5_42:word16] = r11_113
// DataOut: pc r10 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 14 r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004580:
	branch 0x020E == 0x0000 l000045A4
// DataOut: pc r10 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 14 r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004586:
	branch Mem0[0x0208:word16] <u r8_45 l000045A4
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 14 r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004590:
	word20 r5_99
	word20 r6_100
	word20 r7_101
	word20 r8_102
	word20 r9_103
	word20 r11_105
	sr_106 = vPortYield(pc, sr_106, out r5_99, out r6_100, out r7_101, out r8_102, out r9_103, out r10_104, out r11_105)
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 14 r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:0202 r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l000045A4:
	word20 r15_68
	*r15Out = r10_104
	return sr_106
// DataOut: pc r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 14 r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

xTaskCreate_exit:
// DataOut: r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r11:<invalid> r6:<invalid> r9:<invalid> r10:(word16) r10 r7:<invalid> r8:(word16) r8 r5:(word16) r5 r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11



void vTaskDelete(word20 pc, word20 sr, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r15 sr
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
vTaskDelete_entry:
// DataOut: pc r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l45B6:
	Mem16[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	word20 sr_14 = sr & ~0x0008
	word20 r11_18 = r15
	branch r15 == 0x0000 l460C
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l460C:
	r11_18 = 0x0202
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 sr:sr & ~0x0008 r11:r15 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l45CA:
	word20 r10_23 = r11_18 + 0x0008
	vListRemove(r10_23)
	branch Mem16[r11_18 + 26:word16] != 0x0000 l4600
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 sr:sr & ~0x0008 r11:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l4600:
	vListRemove(r11_18 + 0x0012)
// DataOut: pc r10 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 sr:sr & ~0x0008 r11:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l45DA:
	vListInsertEnd(r10_23, 0x0296)
	Mem32[0x0204:ptr16] = Mem16[0x0204:ptr16] + 0x0001
	branch 0x0218 == 0x0000 l45F6
// DataOut: pc r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 sr:sr & ~0x0008 r11:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l45EE:
	Mem66[0x0218:ptr16] = Mem32[0x0218:ptr16] + 0xFFFF
	branch Mem66[0x0218:ptr16] != 0x0000 l45F6
// DataOut: pc r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 sr:sr & ~0x0008 r11:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l45F4:
	sr_14 = sr_14 | 0x0008
// DataOut: pc r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 sr:sr & ~0x0008 r11:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l45F6:
	branch r15 != 0x0000 l4612
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 sr:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l45FA:
	word20 r5_58
	word20 r6_59
	word20 r7_60
	word20 r8_61
	word20 r9_62
	word20 r10_63
	word20 r11_64
	vPortYield(pc, sr_14, out r5_58, out r6_59, out r7_60, out r8_61, out r9_62, out r10_63, out r11_64)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 sr:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l4612:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:<invalid> sr:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

vTaskDelete_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r9:(word16) r9 sr:<invalid> r11:(word16) r11 r10:(word16) r10 r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11



word20 vTaskDelayUntil(word20 pc, word20 sr, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r14 r15 sr
// LiveOut: sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
vTaskDelayUntil_entry:
// DataOut: pc r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000461A:
	word20 sr_17 = vTaskSuspendAll(sr)
	word16 v8_19 = Mem0[r15:word16]
	word20 r10_15 = 0x0000
	word20 r11_21 = r14 + v8_19
	branch 0x0208 <u v8_19 l00004690
// DataOut: pc r10 r11 r15 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004690:
	branch r11_21 >=u v8_19 l0000463E
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:<invalid> r10:0x0000 r15:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004694:
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:<invalid> r10:0x0000 r15:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004634:
	branch r11_21 <u v8_19 l00004640
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:<invalid> r10:0x0000 r15:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004638:
	branch 0x0208 <u r11_21 l00004640
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:<invalid> r10:0x0000 r15:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l0000463E:
	r10_15 = 0x0001
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:<invalid> r10:0x0000 r15:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004640:
	Mem28[r15:word16] = r11_21
	branch r10_15 != 0x0000 l00004656
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:<invalid> r10:<invalid> r15:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004656:
	word20 r15_78
	word20 r14_77
	vListRemove(0x020A)
	Mem73[0x020A:word16] = r11_21
	branch r11_21 <u 0x0208 l00004682
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:<invalid> r10:<invalid> r15:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004682:
	r14_77 = 0x020A
	r15_78 = 0x0282
// DataOut: pc r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:<invalid> r10:<invalid> r15:0208 r14:<invalid> r13:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004670:
	r14_77 = 0x020A
	r15_78 = 0x0284
// DataOut: pc r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:<invalid> r10:<invalid> r15:0208 r14:<invalid> r13:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l0000467C:
	vListInsert(r14_77, r15_78)
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:<invalid> r10:<invalid> r15:<invalid> r14:020A r13:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004648:
	word20 r5_34
	word20 r6_35
	word20 r7_36
	word20 r8_37
	word20 r9_38
	word20 r10_39
	word20 r11_40
	word20 r15_41
	word20 sr_42 = xTaskResumeAll(pc, sr_17, out r5_34, out r6_35, out r7_36, out r8_37, out r9_38, out r10_39, out r11_40, out r15_41)
	branch r15_41 != 0x0000 l00004696
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:<invalid> r10:<invalid> r15:<invalid> r14:020A r13:<invalid> r12:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004650:
	word20 r5_59
	word20 r6_60
	word20 r7_61
	word20 r8_62
	word20 r9_63
	word20 r10_64
	word20 r11_65
	sr_42 = vPortYield(pc, sr_42, out r5_59, out r6_60, out r7_61, out r8_62, out r9_63, out r10_64, out r11_65)
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r8:<invalid> sr:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004696:
	return sr_42
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> sr:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

vTaskDelayUntil_exit:
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp r9:(word16) r9 r11:(word16) r11 r10:(word16) r10 r15:<invalid> sr:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11



void vTaskDelay(word20 pc, word20 sr, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r15 sr
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
vTaskDelay_entry:
// DataOut: pc r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l469E:
	word20 r15_21 = 0x0000
	branch r15 != 0x0000 l46B2
// DataOut: pc r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l46B2:
	word20 r15_65
	word20 r14_64
	word20 sr_51 = vTaskSuspendAll(sr)
	vListRemove(0x020A)
	word20 r11_52 = r15 + 0x0208
	Mem60[0x020A:word16] = r11_52
	branch r11_52 <u 0x0208 l46EA
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r15:0x0000 -2(fp):r11

l46EA:
	r14_64 = 0x020A
	r15_65 = 0x0282
// DataOut: pc r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 + 0x0208 r15:0208 sr:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11

l46D4:
	r14_64 = 0x020A
	r15_65 = 0x0284
// DataOut: pc r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 + 0x0208 r15:0208 sr:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11

l46E0:
	vListInsert(r14_64, r15_65)
	word20 r5_68
	word20 r6_69
	word20 r7_70
	word20 r8_71
	word20 r9_72
	word20 r10_73
	word20 r11_74
	sr = xTaskResumeAll(pc, sr_51, out r5_68, out r6_69, out r7_70, out r8_71, out r9_72, out r10_73, out r11_74, out r15_21)
// DataOut: pc r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 + 0x0208 r15:<invalid> r14:020A sr:<invalid> r13:<invalid> -2(fp):r11

l46A8:
	branch r15_21 != 0x0000 l46F8
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> r15:<invalid> r14:<invalid> sr:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

l46AC:
	word20 r5_43
	word20 r6_44
	word20 r7_45
	word20 r8_46
	word20 r9_47
	word20 r10_48
	word20 r11_49
	vPortYield(pc, sr, out r5_43, out r6_44, out r7_45, out r8_46, out r9_47, out r10_48, out r11_49)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> r15:<invalid> r14:<invalid> sr:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

l46F8:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> r15:<invalid> sr:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

vTaskDelay_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r11:(word16) r11 r15:<invalid> sr:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11



word20 vTaskStartScheduler(word20 pc, word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc sr
// LiveOut: sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
vTaskStartScheduler_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004702:
	branch 0x0202 != 0x0000 l0000470A
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000470A:
	word20 r15_30
	sr = xTaskCreate(pc, sr, out r15_30)
	branch r15_30 != 0x0001 l00004708
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l00004726:
	Mem36[0x020E:ptr16] = 0x0001
	Mem37[0x0208:ptr16] = 0x0000
	xPortStartScheduler(pc)
	sr = sr & ~0x0008
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp r12:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> sr:<invalid> r4:<invalid> -4(fp):0x0000 -2(fp):0x0000

l00004708:
	return sr
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp r12:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> sr:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -4(fp):0x0000 -2(fp):0x0000

vTaskStartScheduler_exit:
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp r12:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> sr:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -4(fp):0x0000 -2(fp):0x0000



void vTaskEndScheduler(word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  sr
// LiveOut:
// Trashed: sr
// Preserved: sp
vTaskEndScheduler_entry:
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l4736:
	Mem4[0x020E:ptr16] = 0x0000
	vPortEndScheduler()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

vTaskEndScheduler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008



word20 vTaskSuspendAll(word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  sr
// LiveOut: sr
// Trashed: VNZC sr
// Preserved: sp
vTaskSuspendAll_entry:
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l00004742:
	Mem5[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	Mem7[0x0210:ptr16] = Mem5[0x0210:ptr16] + 0x0001
	word20 sr_13 = sr & ~0x0008
	branch 0x0218 == 0x0000 l0000475A
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l00004752:
	Mem14[0x0218:ptr16] = Mem7[0x0218:ptr16] + 0xFFFF
	branch Mem14[0x0218:ptr16] != 0x0000 l0000475A
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008

l00004758:
	sr_13 = sr_13 | 0x0008
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008

l0000475A:
	return sr_13
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:<invalid>

vTaskSuspendAll_exit:
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:<invalid>



word20 xTaskResumeAll(word20 pc, word20 sr, ptr16 & r5Out, ptr16 & r6Out, ptr16 & r7Out, ptr16 & r8Out, ptr16 & r9Out, ptr16 & r10Out, ptr16 & r11Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc sr
// LiveOut: r10 r11 r15 r5 r6 r7 r8 r9 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
xTaskResumeAll_entry:
	*r5Out = r5
	*r6Out = r6
	*r7Out = r7
// DataOut: pc r10 r11 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000475C:
	Mem18[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	Mem20[0x0210:ptr16] = Mem18[0x0210:ptr16] + 0xFFFF
	word20 r8_123 = 0x0000
	word20 sr_127 = sr & ~0x0008
	branch Mem20[0x0210:ptr16] != 0x0000 l000047EA
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20) Local -0008(20)

l00004772:
	branch 0x0206 == 0x0000 l000047EA
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:0x0000 sr:sr & ~0x0008 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20) Local -0008(20)

l00004778:
	word20 r9_111 = 0x0000
// DataOut: pc r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:0x0000 sr:sr & ~0x0008 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20) Local -0008(20)

l0000477A:
	word20 r11_140
	branch 0x0286 == 0x0000 l0000480E
// DataOut: pc r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:0202 r11:<invalid> r14:<invalid> r13:<invalid> r10:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20) Local -0008(20)

l0000480E:
	r11_140 = 0x0000
// DataOut: pc r11 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:0202 r11:<invalid> r14:<invalid> r13:<invalid> r10:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20) Local -0008(20)

l00004780:
	r11_140 = Mem20[Mem20[0x028A:word16] + 6:word16]
// DataOut: pc r11 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:0202 r11:<invalid> r14:<invalid> r13:<invalid> r10:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20) Local -0008(20)

l0000478C:
	branch r11_140 == 0x0000 l000047D8
// DataOut: pc r11 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r10:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20) Local -0008(20)

l000047D8:
	branch 0x0212 == 0x0000 l000047E6
// DataOut: pc r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r10:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20) Local -0008(20)

l000047DE:
	branch 0x0212 != 0x0000 l00004802
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r10:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20) Local -0008(20)

l00004802:
	vTaskIncrementTick()
	Mem133[0x0212:ptr16] = Mem20[0x0212:ptr16] + 0xFFFF
	branch Mem133[0x0212:ptr16] != 0x0000 l00004802
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20) Local -0008(20)

l0000480C:
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20) Local -0008(20)

l000047E4:
	r9_111 = 0x0001
// DataOut: pc r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20) Local -0008(20)

l000047E6:
	branch r9_111 == 0x0001 l000047FA
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20) Local -0008(20)

l000047FA:
	word20 r5_120
	word20 r6_121
	word20 r7_122
	word20 r9_124
	word20 r10_125
	word20 r11_126
	sr_127 = vPortYield(pc, sr_127, out r5_120, out r6_121, out r7_122, out r8_123, out r9_124, out r10_125, out r11_126)
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20) Local -0008(20)

l000047EA:
	branch 0x0218 == 0x0000 l00004812
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:<invalid> sr:<invalid> r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r10:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20) Local -0008(20)

l000047F0:
	Mem66[0x0218:ptr16] = Mem20[0x0218:ptr16] + 0xFFFF
	branch Mem66[0x0218:ptr16] != 0x0000 l00004812
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:<invalid> sr:<invalid> r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r10:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20) Local -0008(20)

l000047F6:
	sr_127 = sr_127 | 0x0008
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:<invalid> sr:<invalid> r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r10:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20) Local -0008(20)

l00004812:
	word20 r15_45
	*r15Out = r8_123
	word20 r8_48
	*r8Out = r8
	word20 r9_51
	*r9Out = r9
	word20 r10_54
	*r10Out = r10
	word20 r11_57
	*r11Out = r11
	return sr_127
// DataOut: pc r10 r11 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:<invalid> sr:<invalid> r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r10:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

xTaskResumeAll_exit:
// DataOut: r10 r11 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r8:(word16) r8 sr:<invalid> r15:<invalid> r9:(word16) r9 r10:(word16) r10 r11:(word16) r11 r14:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004790:
	vListRemove(r11_140 + 0x0012)
	word20 r10_89 = r11_140 + 0x0008
	vListRemove(r10_89)
	Mem94[r11_140 + 8:word16] = 0x0000
	word16 v14_95 = Mem94[r11_140 + 6:word16]
	branch 0x020C <u v14_95 l000047B6
// DataOut: pc r10 r11 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r10:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20) Local -0008(20)

l000047B2:
	Mem112[0x020C:ptr16] = v14_95
// DataOut: pc r10 r11 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r10:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20) Local -0008(20)

l000047B6:
	vListInsertEnd(r10_89, v14_95 * 0x00010 + 0x0222)
	branch Mem94[0x0208:word16] <u Mem94[r11_140 + 6:word16] l0000477A
// DataOut: pc r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r10:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20) Local -0008(20)

l000047D4:
	r9_111 = 0x0001
// DataOut: pc r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:0202 r11:<invalid> r14:<invalid> r13:<invalid> r10:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20) Local -0008(20)



word20 xTaskGetTickCount(word20 sr, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  sr
// LiveOut: r15 sr
// Trashed: VNZC r15 sr
// Preserved: sp
xTaskGetTickCount_entry:
// DataOut: pc r10 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000481E:
	Mem5[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	word20 sr_11 = sr & ~0x0008
	word20 r15_8
	*r15Out = 0x0208
	branch Mem5[0x0218:ptr16] == 0x0000 l00004832
// DataOut: pc r10 r15 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000482A:
	Mem13[0x0218:ptr16] = Mem5[0x0218:ptr16] + 0xFFFF
	branch Mem13[0x0218:ptr16] != 0x0000 l00004832
// DataOut: pc r10 r15 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r15:0208

l00004830:
	sr_11 = sr_11 | 0x0008
// DataOut: pc r10 r15 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r15:0208

l00004832:
	return sr_11
// DataOut: pc r10 r15 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:<invalid> r15:0208

xTaskGetTickCount_exit:
// DataOut: r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:<invalid> r15:0208



void uxTaskGetNumberOfTasks(word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  sr
// LiveOut:
// Trashed: VNZC r15 sr
// Preserved: sp
uxTaskGetNumberOfTasks_entry:
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l4834:
	Mem5[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	branch Mem5[0x0218:ptr16] == 0x0000 l4848
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l4840:
	Mem12[0x0218:ptr16] = Mem5[0x0218:ptr16] + 0xFFFF
	branch Mem12[0x0218:ptr16] != 0x0000 l4848
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r15:0206

l4846:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r15:0206

l4848:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp sr:<invalid> r15:0206

uxTaskGetNumberOfTasks_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp sr:<invalid> r15:0206



void vTaskIncrementTick()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15
// Preserved: sp
vTaskIncrementTick_entry:
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000484A:
	branch 0x0210 != 0x0000 l000048D0
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l000048D0:
	Mem77[0x0212:ptr16] = Mem0[0x0212:ptr16] + 0x0001
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004854:
	Mem22[0x0208:ptr16] = Mem0[0x0208:ptr16] + 0x0001
	branch Mem22[0x0208:ptr16] != 0x0000 l00004868
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l0000485A:
	Mem75[0x0282:ptr16] = 0x0284
	Mem76[0x0284:ptr16] = 0x0282
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004868:
	word20 r11_35
	word20 r15_31 = 0x0282
	branch Mem22[r15_31:word16] == 0x0000 l000048CC
// DataOut: pc r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l000048CC:
	r11_35 = 0x0000
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:0282 r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004872:
	r11_35 = Mem22[Mem22[Mem22[r15_31 + 2:word16] + 2:word16] + 6:word16]
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:0282 r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l0000487E:
	branch r11_35 == 0x0000 l000048D4
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004882:
	branch 0x0208 >=u Mem22[r11_35 + 8:word16] l000048D4
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l000048D4:
	return
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

vTaskIncrementTick_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r10:(word16) r10 r11:(word16) r11 r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

l0000488A:
	word20 r10_43 = r11_35 + 0x0008
	vListRemove(r10_43)
	branch Mem22[r11_35 + 26:word16] != 0x0000 l000048C0
// DataOut: pc r10 r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l000048C0:
	vListRemove(r11_35 + 0x0012)
// DataOut: pc r10 r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l0000489A:
	Mem51[r11_35 + 8:word16] = 0x0000
	word16 v18_52 = Mem51[r11_35 + 6:word16]
	branch 0x020C <u v18_52 l000048AC
// DataOut: pc r10 r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l000048A8:
	Mem63[0x020C:ptr16] = v18_52
// DataOut: pc r10 r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l000048AC:
	vListInsertEnd(r10_43, v18_52 * 0x00010 + 0x0222)
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)



word20 vTaskPlaceOnEventList(word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15
// LiveOut: r11
// Trashed: VNZC r11 r12 r13 r14 r15
// Preserved: sp
vTaskPlaceOnEventList_entry:
// DataOut: pc r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l000048DA:
	word20 r15_29
	word20 r14_28
	word20 r11_15 = vListInsert(0x0214, r15) + 0x0208
	vListRemove(0x020A)
	Mem23[0x020A:word16] = r11_15
	branch r11_15 <u 0x0208 l0000491C
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(20)

l0000491C:
	r14_28 = 0x020A
	r15_29 = 0x0282
// DataOut: pc r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r13:<invalid> r11:<invalid> r15:0208 r14:<invalid> r12:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l0000490E:
	r14_28 = 0x020A
	r15_29 = 0x0284
// DataOut: pc r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r13:<invalid> r11:<invalid> r15:0208 r14:<invalid> r12:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l00004928:
	vListInsert(r14_28, r15_29)
	return r11
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r13:<invalid> r11:<invalid> r15:<invalid> r14:020A r12:<invalid> -2(fp):r11

vTaskPlaceOnEventList_exit:
// DataOut: r11
// DataOut (flags): 
// SymbolicIn: sp:fp r13:<invalid> r11:(word16) r11 r15:<invalid> r14:020A r12:<invalid> -2(fp):r11



word20 xTaskRemoveFromEventList(word20 r15, ptr16 & r11Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15
// LiveOut: r10 r11 r15
// Trashed: VNZC r10 r11 r12 r13 r14 r15
// Preserved: sp
xTaskRemoveFromEventList_entry:
// DataOut: pc r10 r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004930:
	word20 r10_13
	branch Mem0[r15:word16] == 0x0000 l000049A2
// DataOut: pc r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000049A2:
	r10_13 = 0x0000
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l0000493A:
	r10_13 = Mem0[Mem0[Mem0[r15 + 2:word16] + 2:word16] + 6:word16]
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00004946:
	word20 r15_21
	word20 r14_20
	vListRemove(r10_13 + 0x0012)
	branch 0x0210 != 0x0000 l0000499A
// DataOut: pc r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:<invalid> r10:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l0000499A:
	r14_20 = r10_13 + 0x0012
	r15_21 = 0x0286
// DataOut: pc r10 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:<invalid> r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00004958:
	vListRemove(r10_13 + 0x0008)
	Mem44[r10_13 + 8:word16] = 0x0000
	word16 v13_45 = Mem44[r10_13 + 6:word16]
	branch 0x020C <u v13_45 l00004974
// DataOut: pc r10 r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:<invalid> r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00004970:
	Mem56[0x020C:ptr16] = v13_45
// DataOut: pc r10 r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:<invalid> r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00004974:
	r15_21 = v13_45 * 0x00010 + 0x0222
	r14_20 = r10_13 + 0x0008
// DataOut: pc r10 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:<invalid> r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00004982:
	vListInsertEnd(r14_20, r15_21)
	branch Mem0[0x0208:word16] <u Mem0[r10_13 + 6:word16] l00004996
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:<invalid> r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00004996:
	word20 r15_38
	*r15Out = 0x0000
// DataOut: pc r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:0202 r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00004992:
	word20 r15_37
	*r15Out = 0x0001
// DataOut: pc r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:0202 r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000049A6:
	word20 r11_34
	*r11Out = r11
	return r10
// DataOut: pc r10 r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:<invalid> r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

xTaskRemoveFromEventList_exit:
// DataOut: r10 r11 r15
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r10:(word16) r10 r11:(word16) r11 r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11



void prvIdleTask(word20 pc, word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc sr
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvIdleTask_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

prvIdleTask_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l49AC:
	sr = prvCheckTasksWaitingTermination(pc, sr)
	branch 0x0222 >=u 0x0002 l49AC
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:<invalid> r14:<invalid> r12:<invalid> r15:<invalid> r13:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid>

l49B6:
	word20 r5_22
	word20 r6_23
	word20 r7_24
	word20 r8_25
	word20 r9_26
	word20 r10_27
	word20 r11_28
	sr = vPortYield(pc, sr, out r5_22, out r6_23, out r7_24, out r8_25, out r9_26, out r10_27, out r11_28)
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:<invalid> r14:<invalid> r12:<invalid> r15:<invalid> r13:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid>



word20 prvInitialiseTCBVariables(word20 r12, word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12 r13 r14 r15
// LiveOut: r11
// Trashed: VNZC r10 r11 r12 r13 r14 r15
// Preserved: sp
prvInitialiseTCBVariables_entry:
// DataOut: pc r11 r12 r13 r14 r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l000049BE:
	Mem19[r15 + 36:word16] = r14
	word20 r11_24 = strncpy(0x0008, r13, r15 + 0x001C)
	Mem27[r11_24 + 35:byte] = 0x00
	word20 r10_15 = r12
	branch r12 >=u 0x0004 l000049E6
// DataOut: pc r10 r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20)

l000049E2:
	r10_15 = 0x0003
// DataOut: pc r10 r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r15:r13 + 0x001C r14:<invalid> r10:r12 r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l000049E6:
	Mem33[r11_24 + 6:word16] = r10_15
	vListInitialiseItem(r11_24 + 0x0008)
	vListInitialiseItem(r11_24 + 0x0012)
	Mem42[r11_24 + 14:word16] = r11_24
	Mem48[r11_24 + 18:word16] = 0x0004 - r10_15
	Mem51[r11_24 + 24:word16] = r11_24
	return r11
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r15:r13 + 0x001C r14:<invalid> r10:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

prvInitialiseTCBVariables_exit:
// DataOut: r11
// DataOut (flags): 
// SymbolicIn: sp:fp r11:<invalid> r15:<invalid> r14:<invalid> r10:(word16) r10 r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11



word20 prvInitialiseTaskLists()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r11
// Trashed: VNZC r11 r15
// Preserved: sp
prvInitialiseTaskLists_entry:
// DataOut: pc r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004A12:
	word20 r11_15 = 0x0000
// DataOut: pc r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(20)

l00004A16:
	word20 r11_14 = vListInitialise(r11_15 * 0x00010 + 0x0222)
	r11_15 = r11_14 + 0x0001
	branch r11_14 >=u 0xFFFD l00004A16
// DataOut: pc r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> r15:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l00004A2E:
	vListInitialise(0x0262)
	vListInitialise(0x0272)
	vListInitialise(0x0286)
	vListInitialise(0x0296)
	Mem26[0x0282:ptr16] = 0x0262
	Mem27[0x0284:ptr16] = 0x0272
	return r11
// DataOut: pc r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> r15:<invalid> -2(fp):r11

prvInitialiseTaskLists_exit:
// DataOut: r11
// DataOut (flags): 
// SymbolicIn: sp:fp r11:(word16) r11 r15:<invalid> -2(fp):r11



word20 prvCheckTasksWaitingTermination(word20 pc, word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc sr
// LiveOut: sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
prvCheckTasksWaitingTermination_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4A5E:
	branch 0x0204 == 0x0000 l4ABE
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l4A66:
	word20 sr_28 = vTaskSuspendAll(sr)
	branch 0x0296 != 0x0000 l4A74
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 -2(fp):r11

l4A72:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:0x0000 sr:<invalid> -2(fp):r11

l4A74:
	word20 r5_33
	word20 r6_34
	word20 r7_35
	word20 r8_36
	word20 r9_37
	word20 r10_38
	word20 r11_39
	word20 r15_40
	sr = xTaskResumeAll(pc, sr_28, out r5_33, out r6_34, out r7_35, out r8_36, out r9_37, out r10_38, out r11_39, out r15_40)
	branch r11_39 != 0x0000 l4ABE
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> sr:<invalid> -2(fp):r11

l4A7C:
	word20 r11_50
	Mem46[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	sr = sr & ~0x0008
	branch 0x0296 == 0x0000 l4ABA
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> sr:<invalid> r8:<invalid> r15:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

l4ABA:
	r11_50 = 0x0000
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> sr:<invalid> r8:<invalid> r15:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

l4A88:
	r11_50 = Mem46[Mem46[0x029A:word16] + 6:word16]
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> sr:<invalid> r8:<invalid> r15:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

l4A94:
	vListRemove(r11_50 + 0x0008)
	Mem54[0x0206:ptr16] = Mem46[0x0206:ptr16] + 0xFFFF
	Mem56[0x0204:ptr16] = Mem54[0x0204:ptr16] + 0xFFFF
	branch 0x0218 == 0x0000 l4AB2
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> sr:<invalid> r15:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

l4AAA:
	Mem64[0x0218:ptr16] = Mem56[0x0218:ptr16] + 0xFFFF
	branch Mem64[0x0218:ptr16] != 0x0000 l4AB2
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

l4AB0:
	sr = sr | 0x0008
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

l4AB2:
	prvDeleteTCB(r11_50)
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

l4ABE:
	return sr
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:<invalid> sr:<invalid> r8:<invalid> r15:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

prvCheckTasksWaitingTermination_exit:
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp r11:(word16) r11 sr:<invalid> r8:<invalid> r15:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11



word20 prvAllocateTCBAndStack(word20 pc, word20 sr, ptr16 & r5Out, ptr16 & r6Out, ptr16 & r7Out, ptr16 & r8Out, ptr16 & r9Out, ptr16 & r10Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc sr
// LiveOut: r10 r15 r5 r6 r7 r8 r9 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
prvAllocateTCBAndStack_entry:
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004AC2:
	word20 r5_13
	word20 r6_14
	word20 r7_15
	word20 r8_16
	word20 r9_17
	word20 r10_18
	word20 r11_19
	word20 r15_20
	word20 sr_21 = pvPortMalloc(pc, sr, 0x0026, out r5_13, out r6_14, out r7_15, out r8_16, out r9_17, out r10_18, out r11_19, out r15_20)
	word20 r11_22 = r15_20
	branch r15_20 == 0x0000 l00004AFA
// DataOut: pc r10 r11 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0004(20)

l00004AD6:
	word20 r5_55
	word20 r6_56
	word20 r7_57
	word20 r8_58
	word20 r9_59
	word20 r10_60
	word20 r11_61
	word20 r15_62
	sr_21 = pvPortMalloc(pc, sr_21, r10_18 * 0x00002, out r5_55, out r6_56, out r7_57, out r8_58, out r9_59, out r10_60, out r11_61, out r15_62)
	Mem67[r11_61 + 2:word16] = r15_62
	branch r15_62 != 0x0000 l00004AF0
// DataOut: pc r10 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> sr:<invalid> r8:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0004(20)

l00004AF0:
	word20 r9_74
	sr_21 = memset(sr_21, r10_60, 0x00A5, r15_62, out r9_74, out r11_22)
// DataOut: pc r11 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> sr:<invalid> r8:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0004(20)

l00004AE6:
	vPortFree()
	r11_22 = 0x0000
// DataOut: pc r11 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> sr:<invalid> r8:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0004(20)

l00004AFA:
	word20 r15_38
	*r15Out = r11_22
	word20 r10_41
	*r10Out = r10
	return sr_21
// DataOut: pc r10 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:<invalid> r15:<invalid> r11:<invalid> r13:<invalid> r14:<invalid> r9:<invalid> sr:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -4(fp):r10 -2(fp):r11

prvAllocateTCBAndStack_exit:
// DataOut: r10 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r10:<invalid> r15:<invalid> r11:(word16) r11 r13:<invalid> r14:<invalid> r9:<invalid> sr:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -4(fp):r10 -2(fp):r11



void prvDeleteTCB(word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15
// LiveOut:
// Trashed: r11
// Preserved: r15 sp
prvDeleteTCB_entry:
// DataOut: pc r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4B02:
	vPortFree()
	vPortFree()
	return
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp

prvDeleteTCB_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r11:(word16) r15 r15:r15 -2(fp):r11



void vTaskSwitchContext()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC r13 r14 r15
// Preserved: sp
vTaskSwitchContext_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l00004B18:
	branch 0x0210 != 0x0000 l00004BAE
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l00004B1E:
	branch Mem0[0x020C * 0x00010 + 546:word16] != 0x0000 l00004B46
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l00004B30:
	Mem86[0x020C:ptr16] = Mem0[0x020C:ptr16] + 0xFFFF
	branch Mem86[0x020C * 0x00010 + 546:word16] == 0x0000 l00004B30
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp r15:0x020C + 0x020C + (0x020C + 0x020C) + ((0x020C + 0x020C) + (0x020C + 0x020C)) + (((0x020C + 0x020C) + (0x020C + 0x020C)) + ((0x020C + 0x020C) + (0x020C + 0x020C)))

l00004B46:
	word20 r13_21 = 0x0222
	Mem39[0x020C * 0x00010 + r13_21 + 4:word16] = Mem0[Mem0[0x020C * 0x00010 + r13_21 + 4:word16] + 2:word16]
	branch Mem39[0x020C * 0x00010 + r13_21 + 4:word16] == Mem39[(0x020C * 0x00010 + r13_21) + 2:word16] l00004BB0
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp r15:0x020C + 0x020C + (0x020C + 0x020C) + ((0x020C + 0x020C) + (0x020C + 0x020C)) + (((0x020C + 0x020C) + (0x020C + 0x020C)) + ((0x020C + 0x020C) + (0x020C + 0x020C)))

l00004BB0:
	Mem85[0x020C * 0x00010 + 550:word16] = Mem39[Mem39[0x020C * 0x00010 + 550:word16] + 2:word16]
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r13:0x0222 r14:<invalid>

l00004B98:
	Mem68[0x0202:ptr16] = Mem39[Mem39[0x020C * 0x00010 + 550:word16] + 6:word16]
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r13:0x0222 r14:<invalid>

l00004BAE:
	return
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r13:0x0222 r14:<invalid>

vTaskSwitchContext_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r13:0x0222 r14:<invalid>



word20 vListInitialise(word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15
// LiveOut: r11
// Trashed: VNZC r11 r15
// Preserved: sp
vListInitialise_entry:
// DataOut: pc r11 r15 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004BD4:
	Mem12[r15 + 2:word16] = r15 + 0x0006
	Mem15[r15 + 4:word16] = r15 + 0x0006
	Mem18[r15 + 6:word16] = 0xFFFF
	Mem21[r15 + 8:word16] = r15 + 0x0006
	Mem24[r15 + 10:word16] = r15 + 0x0006
	Mem27[r15 + 12:word16] = 0x0000
	vListInitialiseItem(r15 + 0x0006)
	Mem30[r15:word16] = 0x0000
	return r11
// DataOut: pc r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

vListInitialise_exit:
// DataOut: r11
// DataOut (flags): 
// SymbolicIn: sp:fp r11:(word16) r15 r15:r15 + 0x0006 -2(fp):r11



void vListInitialiseItem(word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15
// LiveOut:
// Trashed:
// Preserved: sp
vListInitialiseItem_entry:
// DataOut: pc r10 r11 r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l00004C00:
	Mem6[r15 + 8:word16] = 0x0000
	return
// DataOut: pc r10 r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

vListInitialiseItem_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vListInsertEnd(word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14 r15
// LiveOut:
// Trashed: VNZC r12 r13 r15
// Preserved: sp
vListInsertEnd_entry:
// DataOut: pc r10 r11 r14 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l00004C06:
	word16 v5_5 = Mem0[r15 + 4:word16]
	Mem11[r14 + 2:word16] = Mem0[v5_5 + 2:word16]
	Mem15[r14 + 4:word16] = Mem11[r15 + 4:word16]
	Mem20[Mem15[v5_5 + 2:word16] + 4:word16] = r14
	Mem23[v5_5 + 2:word16] = r14
	Mem26[r15 + 4:word16] = r14
	Mem29[r14 + 8:word16] = r15
	Mem32[r15:word16] = Mem29[r15:word16] + 0x0001
	return
// DataOut: pc r10 r11 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

vListInsertEnd_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r12:r15 r13:<invalid> r15:<invalid>



word20 vListInsert(word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14 r15
// LiveOut: r11
// Trashed: VNZC r11 r12 r13 r15
// Preserved: sp
vListInsert_entry:
// DataOut: pc r11 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004C32:
	word20 r13_13
	word16 v6_9 = Mem0[r14:word16]
	branch v6_9 == 0xFFFF l00004C5A
// DataOut: pc r11 r12 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(20)

l00004C5A:
	word16 v18_57 = Mem0[r15 + 2:word16]
	r13_13 = v18_57
	branch Mem0[Mem0[v18_57 + 2:word16]:word16] <u 0xFFFF l00004C76
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l00004C68:
	word16 v21_65 = Mem0[r13_13 + 2:word16]
	r13_13 = v21_65
	branch Mem0[Mem0[v21_65 + 2:word16]:word16] >=u v6_9 l00004C68
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r13:<invalid> r15:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l00004C3C:
	word16 v10_40 = Mem0[r15 + 2:word16]
	r13_13 = v10_40
	branch v6_9 >=u Mem0[Mem0[v10_40 + 2:word16]:word16] l00004C76
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l00004C4A:
	word16 v15_49 = Mem0[r13_13 + 2:word16]
	r13_13 = v15_49
	branch v6_9 <u Mem0[Mem0[v15_49 + 2:word16]:word16] l00004C4A
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r13:<invalid> r15:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l00004C58:
// DataOut: pc r11 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r13:<invalid> r15:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l00004C76:
	Mem18[r14 + 2:word16] = Mem0[r13_13 + 2:word16]
	Mem23[Mem18[r14 + 2:word16] + 4:word16] = r14
	Mem26[r14 + 4:word16] = r13_13
	Mem29[r13_13 + 2:word16] = r14
	Mem32[r14 + 8:word16] = r15
	Mem35[r15:word16] = Mem32[r15:word16] + 0x0001
	return r11
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r13:<invalid> r15:<invalid> -2(fp):r11

vListInsert_exit:
// DataOut: r11
// DataOut (flags): 
// SymbolicIn: sp:fp r11:(word16) r15 r12:<invalid> r13:<invalid> r15:<invalid> -2(fp):r11



void vListRemove(word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15
// LiveOut:
// Trashed: VNZC r13 r14 r15
// Preserved: sp
vListRemove_entry:
// DataOut: pc r10 r11 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l00004C98:
	word16 v5_5 = Mem0[r15 + 2:word16]
	Mem10[v5_5 + 4:word16] = Mem0[r15 + 4:word16]
	word16 v8_11 = Mem10[r15 + 4:word16]
	Mem15[v8_11 + 2:word16] = v5_5
	word16 v11_16 = Mem15[r15 + 8:word16]
	branch Mem15[v11_16 + 4:word16] != r15 l00004CBA
// DataOut: pc r10 r11 r13 r14 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l00004CB6:
	Mem30[v11_16 + 4:word16] = v8_11
// DataOut: pc r10 r11 r14 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r14:r15 r15:<invalid> r13:<invalid>

l00004CBA:
	Mem23[r15 + 8:word16] = 0x0000
	Mem26[v11_16:word16] = Mem23[v11_16:word16] + 0xFFFF
	return
// DataOut: pc r10 r11 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r14:r15 r15:<invalid> r13:<invalid>

vListRemove_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r14:r15 r15:<invalid> r13:<invalid>



word20 xQueueCreate(word20 pc, word20 sr, word20 r15, ptr16 & r6Out, ptr16 & r7Out, ptr16 & r8Out, ptr16 & r9Out, ptr16 & r10Out, ptr16 & r11Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r15 sr
// LiveOut: r10 r11 r15 r6 r7 r8 r9 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
xQueueCreate_entry:
	*r6Out = r6
	*r7Out = r7
	*r8Out = r8
// DataOut: pc r10 r11 r15 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004CC4:
	branch r15 != 0x0000 l00004CD6
// DataOut: pc r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20)

l00004CD6:
	word20 r5_51
	word20 r6_52
	word20 r7_53
	word20 r8_54
	word20 r9_55
	word20 r10_56
	word20 r11_57
	word20 r15_58
	sr = pvPortMalloc(pc, sr, 0x0032, out r5_51, out r6_52, out r7_53, out r8_54, out r9_55, out r10_56, out r11_57, out r15_58)
	branch r15_58 == 0x0000 l00004CD2
// DataOut: pc r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r10:r15 r9:r14 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20)

l00004CE4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r10:<invalid> r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> sr:<invalid> r8:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004CD2:
	word20 r15_32
	*r15Out = 0x0000
// DataOut: pc r15 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r10:<invalid> r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> sr:<invalid> r8:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20)

l00004D76:
	word20 r9_35
	*r9Out = r9
	word20 r10_38
	*r10Out = r10
	word20 r11_41
	*r11Out = r11
	return sr
// DataOut: pc r10 r11 r15 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r10:<invalid> r9:<invalid> r15:0x0000 r11:<invalid> r14:<invalid> sr:<invalid> r8:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

xQueueCreate_exit:
// DataOut: r10 r11 r15 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r10:<invalid> r9:<invalid> r15:0x0000 r11:(word16) r11 r14:<invalid> sr:<invalid> r8:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11



word20 xQueueSend(word20 pc, word20 sr, word20 r13, word20 r14, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r13 r14 r15 sr
// LiveOut: r15 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
xQueueSend_entry:
// DataOut: pc r13 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004D7E:
	word20 sr_19 = vTaskSuspendAll(sr) & ~0x0008
	Mem21[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	Mem25[r15 + 46:word16] = Mem21[r15 + 46:word16] + 0x0001
	Mem28[r15 + 48:word16] = Mem25[r15 + 48:word16] + 0x0001
	word20 r11_12 = r15
	word20 r9_14 = r14
	branch 0x0218 == 0x0000 l00004DAA
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004DA2:
	Mem220[0x0218:ptr16] = Mem28[0x0218:ptr16] + 0xFFFF
	branch Mem220[0x0218:ptr16] != 0x0000 l00004DAA
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:r15 r9:r14 r10:r13 sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004DA8:
	sr_19 = sr_19 | 0x0008
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:r15 r9:r14 r10:r13 sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004DAA:
	word20 r15_33
	word20 sr_190 = prvIsQueueFull(sr_19, r15, out r15_33)
	branch r15_33 == 0x0000 l00004DB8
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:r15 r9:r14 r10:r13 sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004DB4:
	branch r13 != 0x0000 l00004E26
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:r15 r9:r14 r10:r13 sr:<invalid> r15:<invalid> r14:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004E26:
	word20 r11_163 = vTaskPlaceOnEventList(r15 + 0x0008)
	Mem165[0x0218:ptr16] = Mem28[0x0218:ptr16] + 0x0001
	word20 r15_168
	word20 r5_170
	word20 r6_171
	word20 r7_172
	word20 r8_173
	word20 r10_175
	word20 r15_177
	word20 sr_178 = xTaskResumeAll(pc, prvUnlockQueue(sr_190 & ~0x0008, r11_163, out r15_168), out r5_170, out r6_171, out r7_172, out r8_173, out r9_14, out r10_175, out r11_12, out r15_177)
	branch r15_177 == 0x0000 l00004E74
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:r15 r9:r14 r10:r13 sr:<invalid> r15:<invalid> r14:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004E74:
	word20 r5_212
	word20 r6_213
	word20 r7_214
	word20 r8_215
	word20 r10_217
	sr_178 = vPortYield(pc, sr_178, out r5_212, out r6_213, out r7_214, out r8_215, out r9_14, out r10_217, out r11_12)
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004E44:
	sr_190 = vTaskSuspendAll(sr_178) & ~0x0008
	Mem191[0x0218:ptr16] = Mem165[0x0218:ptr16] + 0x0001
	Mem195[r11_12 + 46:word16] = Mem191[r11_12 + 46:word16] + 0x0001
	Mem198[r11_12 + 48:word16] = Mem195[r11_12 + 48:word16] + 0x0001
	branch 0x0218 == 0x0000 l00004E64
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004E5C:
	Mem208[0x0218:ptr16] = Mem198[0x0218:ptr16] + 0xFFFF
	branch Mem208[0x0218:ptr16] != 0x0000 l00004E64
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004E62:
	sr_190 = sr_190 | 0x0008
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004E64:
	branch 0x0218 == 0x0000 l00004DB8
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004E6A:
	Mem204[0x0218:ptr16] = Mem198[0x0218:ptr16] + 0xFFFF
	branch Mem204[0x0218:ptr16] != 0x0000 l00004DB8
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004E70:
	sr_190 = sr_190 | 0x0008
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004DB8:
	Mem53[0x0218:ptr16] = Mem28[0x0218:ptr16] + 0x0001
	word20 sr_125 = sr_190 & ~0x0008
	branch Mem53[r11_12 + 40:word16] >=u Mem53[r11_12 + 42:word16] l00004DF6
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004DF6:
	word20 r10_132
	sr_125 = memcpy(sr_125, Mem53[r11_12 + 44:word16], r9_14, Mem53[r11_12 + 4:word16], out r10_132, out r11_12)
	Mem137[r11_12 + 40:word16] = Mem53[r11_12 + 40:word16] + 0x0001
	word20 r15_141 = Mem137[r11_12 + 4:word16] + Mem137[r11_12 + 44:word16]
	Mem144[r11_12 + 4:word16] = r15_141
	branch r15_141 >=u Mem144[r11_12 + 2:word16] l00004E1E
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004E1A:
	Mem156[r11_12 + 4:word16] = Mem144[r11_12:word16]
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r13:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004E1E:
	Mem151[r11_12 + 48:word16] = Mem144[r11_12 + 48:word16] + 0x0001
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r13:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004DC6:
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004DCA:
	branch 0x0218 == 0x0000 l00004DD8
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r13:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004DD0:
	Mem122[0x0218:ptr16] = Mem53[0x0218:ptr16] + 0xFFFF
	branch Mem122[0x0218:ptr16] != 0x0000 l00004DD8
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r13:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004DD6:
	sr_125 = sr_125 | 0x0008
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r13:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004DD8:
	word20 r10_110
	word20 sr_102
	word20 r15_70
	word20 sr_71 = prvUnlockQueue(sr_125, r11_12, out r15_70)
	branch r15_70 == 0x0000 l00004DF0
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r13:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004DF0:
	word20 r5_113
	word20 r6_114
	word20 r7_115
	word20 r8_116
	word20 r9_117
	word20 r11_119
	word20 r15_120
	sr_102 = xTaskResumeAll(pc, sr_71, out r5_113, out r6_114, out r7_115, out r8_116, out r9_117, out r10_110, out r11_119, out r15_120)
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r13:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004DE2:
	word20 r5_94
	word20 r6_95
	word20 r7_96
	word20 r8_97
	word20 r9_98
	word20 r11_100
	word20 r15_101
	sr_102 = xTaskResumeAll(pc, sr_71, out r5_94, out r6_95, out r7_96, out r8_97, out r9_98, out r10_110, out r11_100, out r15_101)
	branch r15_101 != 0x0000 l00004E7A
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r13:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004DEA:
	word20 r5_105
	word20 r6_106
	word20 r7_107
	word20 r8_108
	word20 r9_109
	word20 r11_111
	sr_102 = vPortYield(pc, sr_102, out r5_105, out r6_106, out r7_107, out r8_108, out r9_109, out r10_110, out r11_111)
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r8:<invalid> r13:<invalid> r14:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004E7A:
	word20 r15_82
	*r15Out = r10_110
	return sr_102
// DataOut: pc r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r8:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

xQueueSend_exit:
// DataOut: r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r11:(word16) r11 r9:(word16) r9 r10:(word16) r10 sr:<invalid> r15:<invalid> r8:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11



word20 xQueueSendFromISR(word20 sr, word20 r14, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14 r15 sr
// LiveOut: r15 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 sr
// Preserved: r13 sp
xQueueSendFromISR_entry:
// DataOut: pc r13 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4E84:
	word20 r13_23
	word20 r10_11 = r13
	branch Mem0[r15 + 40:word16] >=u Mem0[r15 + 42:word16] l4E98
// DataOut: pc r10 r11 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4E98:
	word20 r11_46
	sr = memcpy(sr, Mem0[r15 + 44:word16], r14, Mem0[r15 + 4:word16], out r10_11, out r11_46)
	Mem50[r11_46 + 40:word16] = Mem0[r11_46 + 40:word16] + 0x0001
	word20 r15_54 = Mem50[r11_46 + 4:word16] + Mem50[r11_46 + 44:word16]
	Mem57[r11_46 + 4:word16] = r15_54
	branch r15_54 >=u Mem57[r11_46 + 2:word16] l4EBE
// DataOut: pc r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r10:r13 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l4EBA:
	Mem87[r11_46 + 4:word16] = Mem57[r11_46:word16]
// DataOut: pc r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> r14:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l4EBE:
	word16 v22_61 = Mem57[r11_46 + 48:word16]
	branch v22_61 == 0xFFFF l4ECE
// DataOut: pc r10 r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> r14:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l4ECE:
	branch r10_11 != 0x0000 l4E94
// DataOut: pc r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> r14:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l4ED2:
	branch Mem57[r11_46 + 24:word16] == 0x0000 l4E94
// DataOut: pc r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> r14:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l4ED8:
	word20 r11_78
	word20 r15_79
	r10_11 = xTaskRemoveFromEventList(r11_46 + 0x0018, out r11_78, out r15_79)
	branch r15_79 == 0x0000 l4E94
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> r14:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l4EE6:
	r13_23 = 0x0001
// DataOut: pc r13 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> r14:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l4EC6:
	Mem69[r11_46 + 48:word16] = v22_61 + 0x0001
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> r14:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l4E94:
	r13_23 = r10_11
// DataOut: pc r13 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> r14:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l4EE8:
	word20 r15_24
	*r15Out = r13_23
	return sr
// DataOut: pc r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> r13:<invalid> r15:<invalid> r12:<invalid> r14:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11

xQueueSendFromISR_exit:
// DataOut: r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r11:<invalid> r10:<invalid> r13:<invalid> r15:<invalid> r12:<invalid> r14:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11



word20 xQueueReceive(word20 pc, word20 sr, word20 r13, word20 r14, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r13 r14 r15 sr
// LiveOut: r15 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
xQueueReceive_entry:
// DataOut: pc r13 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004EF0:
	word20 sr_19 = vTaskSuspendAll(sr) & ~0x0008
	Mem21[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	Mem25[r15 + 46:word16] = Mem21[r15 + 46:word16] + 0x0001
	Mem28[r15 + 48:word16] = Mem25[r15 + 48:word16] + 0x0001
	word20 r11_12 = r15
	word20 r9_14 = r14
	branch 0x0218 == 0x0000 l00004F1C
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004F14:
	Mem220[0x0218:ptr16] = Mem28[0x0218:ptr16] + 0xFFFF
	branch Mem220[0x0218:ptr16] != 0x0000 l00004F1C
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:r15 r9:r14 r10:r13 sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004F1A:
	sr_19 = sr_19 | 0x0008
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:r15 r9:r14 r10:r13 sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004F1C:
	word20 r15_33
	word20 sr_190 = prvIsQueueEmpty(sr_19, r15, out r15_33)
	branch r15_33 == 0x0000 l00004F2A
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:r15 r9:r14 r10:r13 sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004F26:
	branch r13 != 0x0000 l00004F96
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:r15 r9:r14 r10:r13 sr:<invalid> r15:<invalid> r14:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004F96:
	word20 r11_163 = vTaskPlaceOnEventList(r15 + 0x0018)
	Mem165[0x0218:ptr16] = Mem28[0x0218:ptr16] + 0x0001
	word20 r15_168
	word20 r5_170
	word20 r6_171
	word20 r7_172
	word20 r8_173
	word20 r10_175
	word20 r15_177
	word20 sr_178 = xTaskResumeAll(pc, prvUnlockQueue(sr_190 & ~0x0008, r11_163, out r15_168), out r5_170, out r6_171, out r7_172, out r8_173, out r9_14, out r10_175, out r11_12, out r15_177)
	branch r15_177 == 0x0000 l00004FE6
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:r15 r9:r14 r10:r13 sr:<invalid> r15:<invalid> r14:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004FE6:
	word20 r5_212
	word20 r6_213
	word20 r7_214
	word20 r8_215
	word20 r10_217
	sr_178 = vPortYield(pc, sr_178, out r5_212, out r6_213, out r7_214, out r8_215, out r9_14, out r10_217, out r11_12)
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004FB6:
	sr_190 = vTaskSuspendAll(sr_178) & ~0x0008
	Mem191[0x0218:ptr16] = Mem165[0x0218:ptr16] + 0x0001
	Mem195[r11_12 + 46:word16] = Mem191[r11_12 + 46:word16] + 0x0001
	Mem198[r11_12 + 48:word16] = Mem195[r11_12 + 48:word16] + 0x0001
	branch 0x0218 == 0x0000 l00004FD6
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004FCE:
	Mem208[0x0218:ptr16] = Mem198[0x0218:ptr16] + 0xFFFF
	branch Mem208[0x0218:ptr16] != 0x0000 l00004FD6
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004FD4:
	sr_190 = sr_190 | 0x0008
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004FD6:
	branch 0x0218 == 0x0000 l00004F2A
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004FDC:
	Mem204[0x0218:ptr16] = Mem198[0x0218:ptr16] + 0xFFFF
	branch Mem204[0x0218:ptr16] != 0x0000 l00004F2A
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004FE2:
	sr_190 = sr_190 | 0x0008
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004F2A:
	Mem51[0x0218:ptr16] = Mem28[0x0218:ptr16] + 0x0001
	word20 sr_123 = sr_190 & ~0x0008
	word16 v14_53 = Mem51[r11_12 + 40:word16]
	branch v14_53 == 0x0000 l00004F92
// DataOut: pc r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004F92:
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004F38:
	word16 v15_124 = Mem51[r11_12 + 44:word16]
	word20 r15_128 = Mem51[r11_12 + 6:word16] + v15_124
	Mem131[r11_12 + 6:word16] = r15_128
	branch r15_128 >=u Mem131[r11_12 + 2:word16] l00004F50
// DataOut: pc r11 r13 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004F4C:
	Mem154[r11_12 + 6:word16] = Mem131[r11_12:word16]
// DataOut: pc r11 r13 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004F50:
	Mem139[r11_12 + 40:word16] = v14_53 + 0xFFFF
	word20 r10_143
	sr_123 = memcpy(sr_123, v15_124, Mem139[r11_12 + 6:word16], r9_14, out r10_143, out r11_12)
	Mem148[r11_12 + 46:word16] = Mem139[r11_12 + 46:word16] + 0x0001
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004F66:
	branch 0x0218 == 0x0000 l00004F74
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004F6C:
	Mem120[0x0218:ptr16] = Mem51[0x0218:ptr16] + 0xFFFF
	branch Mem120[0x0218:ptr16] != 0x0000 l00004F74
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004F72:
	sr_123 = sr_123 | 0x0008
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004F74:
	word20 r10_108
	word20 sr_100
	word20 r15_68
	word20 sr_69 = prvUnlockQueue(sr_123, r11_12, out r15_68)
	branch r15_68 == 0x0000 l00004F8C
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004F8C:
	word20 r5_111
	word20 r6_112
	word20 r7_113
	word20 r8_114
	word20 r9_115
	word20 r11_117
	word20 r15_118
	sr_100 = xTaskResumeAll(pc, sr_69, out r5_111, out r6_112, out r7_113, out r8_114, out r9_115, out r10_108, out r11_117, out r15_118)
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004F7E:
	word20 r5_92
	word20 r6_93
	word20 r7_94
	word20 r8_95
	word20 r9_96
	word20 r11_98
	word20 r15_99
	sr_100 = xTaskResumeAll(pc, sr_69, out r5_92, out r6_93, out r7_94, out r8_95, out r9_96, out r10_108, out r11_98, out r15_99)
	branch r15_99 != 0x0000 l00004FEC
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004F86:
	word20 r5_103
	word20 r6_104
	word20 r7_105
	word20 r8_106
	word20 r9_107
	word20 r11_109
	sr_100 = vPortYield(pc, sr_100, out r5_103, out r6_104, out r7_105, out r8_106, out r9_107, out r10_108, out r11_109)
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00004FEC:
	word20 r15_80
	*r15Out = r10_108
	return sr_100
// DataOut: pc r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

xQueueReceive_exit:
// DataOut: r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r11:(word16) r11 r9:(word16) r9 r10:(word16) r10 sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11



word20 xQueueReceiveFromISR(word20 sr, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14 r15 sr
// LiveOut: r15
// Trashed: VNZC r10 r11 r12 r13 r14 r15 sr
// Preserved: sp
xQueueReceiveFromISR_entry:
// DataOut: r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004FF6:
	word20 r15_25
	word16 v9_15 = Mem0[r15 + 40:word16]
	branch v9_15 == 0x0000 l00005060
// DataOut: r11 r12 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00005060:
	r15_25 = 0x0000
// DataOut: r15
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r12:r14 r10:r13 r14:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00005008:
	word16 v12_32 = Mem0[r15 + 44:word16]
	word20 r15_36 = Mem0[r15 + 6:word16] + v12_32
	Mem39[r15 + 6:word16] = r15_36
	branch r15_36 >=u Mem39[r15 + 2:word16] l00005020
// DataOut: r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r12:r14 r10:r13 r14:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l0000501C:
	Mem89[r15 + 6:word16] = Mem39[r15:word16]
// DataOut: r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r12:r14 r10:r13 r14:<invalid> r13:<invalid> r15:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00005020:
	Mem47[r15 + 40:word16] = v9_15 + 0xFFFF
	word20 r10_52
	word20 r11_53
	memcpy(sr, v12_32, Mem47[r15 + 6:word16], r14, out r10_52, out r11_53)
	word16 v23_55 = Mem47[r11_53 + 46:word16]
	branch v23_55 == 0xFFFF l00005042
// DataOut: r10 r11 r15
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r12:r14 r10:r13 r14:<invalid> r13:<invalid> r15:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00005042:
	branch Mem47[r10_52:word16] != 0x0000 l0000503E
// DataOut: r11
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r15:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00005048:
	branch Mem47[r11_53 + 8:word16] == 0x0000 l0000503E
// DataOut: r11
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r15:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l0000504E:
	word20 r11_78
	word20 r15_79
	word20 r10_80 = xTaskRemoveFromEventList(r11_53 + 0x0008, out r11_78, out r15_79)
	branch r15_79 == 0x0000 l0000503E
// DataOut: r10
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r15:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l0000505A:
	Mem85[r10_80:word16] = 0x0001
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r15:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00005038:
	Mem68[r11_53 + 46:word16] = v23_55 + 0x0001
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r15:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l0000503E:
	r15_25 = 0x0001
// DataOut: r15
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r15:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00005062:
	return r15_25
// DataOut: r15
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r15:<invalid> r13:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11

xQueueReceiveFromISR_exit:
// DataOut: r15
// DataOut (flags): 
// SymbolicIn: sp:fp r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r15:<invalid> r13:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11



void uxQueueMessagesWaiting(word20 sr, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15 sr
// LiveOut:
// Trashed: VNZC r15 sr
// Preserved: sp
uxQueueMessagesWaiting_entry:
// DataOut: r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l5068:
	Mem5[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	branch Mem5[0x0218:ptr16] == 0x0000 l507C
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l5074:
	Mem14[0x0218:ptr16] = Mem5[0x0218:ptr16] + 0xFFFF
	branch Mem14[0x0218:ptr16] != 0x0000 l507C
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r15:<invalid>

l507A:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r15:<invalid>

l507C:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp sr:<invalid> r15:<invalid>

uxQueueMessagesWaiting_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp sr:<invalid> r15:<invalid>



void vQueueDelete(word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15
// LiveOut:
// Trashed: r11
// Preserved: r15 sp
vQueueDelete_entry:
// DataOut: r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l507E:
	vPortFree()
	vPortFree()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

vQueueDelete_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r11:(word16) r15 r15:r15 -2(fp):r11



word20 prvUnlockQueue(word20 sr, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15 sr
// LiveOut: r15 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 sr
// Preserved: sp
prvUnlockQueue_entry:
// DataOut: pc r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00005092:
	Mem14[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	word16 v8_16 = Mem14[r15 + 48:word16]
	Mem18[r15 + 48:word16] = v8_16 + 0xFFFF
	word20 r11_23 = r15
	word20 r10_10 = 0x0000
	word20 sr_12 = sr & ~0x0008
	branch v8_16 < 0xFFFF l000050B0
// DataOut: pc r10 r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l000050A6:
	Mem77[r15 + 48:word16] = 0xFFFF
	branch Mem77[r15 + 24:word16] != 0x0000 l000050F4
// DataOut: pc r10 r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r10:0x0000 sr:sr & ~0x0008 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l000050F4:
	word20 r15_84
	r10_10 = xTaskRemoveFromEventList(r15 + 0x0018, out r11_23, out r15_84)
	branch r15_84 == 0x0000 l000050B0
// DataOut: pc r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r10:0x0000 sr:sr & ~0x0008 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00005100:
	r10_10 = 0x0001
// DataOut: pc r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:sr & ~0x0008 r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l000050B0:
	branch 0x0218 == 0x0000 l000050BE
// DataOut: pc r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:sr & ~0x0008 r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l000050B6:
	Mem71[0x0218:ptr16] = Mem18[0x0218:ptr16] + 0xFFFF
	branch Mem71[0x0218:ptr16] != 0x0000 l000050BE
// DataOut: pc r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:sr & ~0x0008 r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l000050BC:
	sr_12 = sr_12 | 0x0008
// DataOut: pc r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:sr & ~0x0008 r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l000050BE:
	Mem29[0x0218:ptr16] = Mem18[0x0218:ptr16] + 0x0001
	word16 v13_31 = Mem29[r11_23 + 46:word16]
	Mem33[r11_23 + 46:word16] = v13_31 + 0xFFFF
	word20 sr_28 = sr_12 & ~0x0008
	branch v13_31 < 0xFFFF l000050D4
// DataOut: pc r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l000050CA:
	Mem58[r11_23 + 46:word16] = 0xFFFF
	branch Mem58[r11_23 + 8:word16] != 0x0000 l000050E4
// DataOut: pc r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l000050E4:
	word20 r11_65
	word20 r15_66
	r10_10 = xTaskRemoveFromEventList(r11_23 + 0x0008, out r11_65, out r15_66)
	branch r15_66 == 0x0000 l000050D4
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l000050F0:
	r10_10 = 0x0001
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l000050D4:
	branch 0x0218 == 0x0000 l00005104
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l000050DA:
	Mem52[0x0218:ptr16] = Mem33[0x0218:ptr16] + 0xFFFF
	branch Mem52[0x0218:ptr16] != 0x0000 l00005104
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l000050E0:
	sr_28 = sr_28 | 0x0008
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l00005104:
	word20 r15_44
	*r15Out = r10_10
	return sr_28
// DataOut: pc r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

prvUnlockQueue_exit:
// DataOut: r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r11:<invalid> r10:(word16) r10 sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11



word20 prvIsQueueEmpty(word20 sr, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15 sr
// LiveOut: r15 sr
// Trashed: VNZC r14 r15 sr
// Preserved: sp
prvIsQueueEmpty_entry:
// DataOut: pc r10 r11 r15 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000510C:
	Mem5[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	word20 sr_17 = sr & ~0x0008
	word20 r14_12 = 0x0000
	branch Mem5[r15 + 40:word16] != 0x0000 l0000511C
// DataOut: pc r10 r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000511A:
	r14_12 = 0x0001
// DataOut: pc r10 r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r14:0x0000

l0000511C:
	branch 0x0218 == 0x0000 l0000512A
// DataOut: pc r10 r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r14:<invalid>

l00005122:
	Mem20[0x0218:ptr16] = Mem5[0x0218:ptr16] + 0xFFFF
	branch Mem20[0x0218:ptr16] != 0x0000 l0000512A
// DataOut: pc r10 r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r14:<invalid>

l00005128:
	sr_17 = sr_17 | 0x0008
// DataOut: pc r10 r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r14:<invalid>

l0000512A:
	word20 r15_18
	*r15Out = r14_12
	return sr_17
// DataOut: pc r10 r11 r15 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:<invalid> r14:<invalid>

prvIsQueueEmpty_exit:
// DataOut: r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:<invalid> r14:<invalid> r15:<invalid>



word20 prvIsQueueFull(word20 sr, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15 sr
// LiveOut: r15 sr
// Trashed: VNZC r14 r15 sr
// Preserved: sp
prvIsQueueFull_entry:
// DataOut: pc r10 r11 r15 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000512E:
	Mem5[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	word20 sr_18 = sr & ~0x0008
	word20 r14_13 = 0x0000
	branch Mem5[r15 + 40:word16] == Mem5[r15 + 42:word16] l0000514E
// DataOut: pc r10 r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000514E:
	r14_13 = 0x0001
// DataOut: pc r10 r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r14:0x0000

l0000513E:
	branch 0x0218 == 0x0000 l00005152
// DataOut: pc r10 r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r14:<invalid>

l00005144:
	Mem21[0x0218:ptr16] = Mem5[0x0218:ptr16] + 0xFFFF
	branch Mem21[0x0218:ptr16] != 0x0000 l00005152
// DataOut: pc r10 r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r14:<invalid>

l0000514A:
	sr_18 = sr_18 | 0x0008
// DataOut: pc r10 r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r14:<invalid>

l00005152:
	word20 r15_19
	*r15Out = r14_13
	return sr_18
// DataOut: pc r10 r11 r15 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:<invalid> r14:<invalid>

prvIsQueueFull_exit:
// DataOut: r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:<invalid> r14:<invalid> r15:<invalid>



word20 pvPortMalloc(word20 pc, word20 sr, word20 r15, ptr16 & r5Out, ptr16 & r6Out, ptr16 & r7Out, ptr16 & r8Out, ptr16 & r9Out, ptr16 & r10Out, ptr16 & r11Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r15 sr
// LiveOut: r10 r11 r15 r5 r6 r7 r8 r9 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
pvPortMalloc_entry:
// DataOut: pc r10 r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00005156:
	word20 r11_15 = r15
	branch (r15 & 0x0001) == 0x00000 l00005166
// DataOut: pc r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005162:
	r11_15 = r15 - (r15 & 0x0001) + 0x0002
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r10:0x0000 r15:r15 & 0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005166:
	word20 r14_18 = 0x0216
	word20 sr_17 = vTaskSuspendAll(sr)
	word20 r15_20 = r14_18 + r11_15
	branch r15_20 <u 0x0708 l00005186
// DataOut: pc r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:0x0000 r15:r15 & 0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005178:
	branch r14_18 <u r15_20 l00005186
// DataOut: pc r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:0x0000 r15:<invalid> r14:0216 sr:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l0000517C:
	Mem55[0x0216:ptr16] = r15_20
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:0x0000 r15:<invalid> r14:0216 sr:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005186:
	word20 r15_35
	*r15Out = r10_31
	word20 r10_38
	*r10Out = r10
	word20 r11_41
	*r11Out = r11
	word20 r5_26
	word20 r6_27
	word20 r7_28
	word20 r8_29
	word20 r9_30
	word20 r10_31
	word20 r11_32
	word20 r15_33
	return xTaskResumeAll(pc, sr_17, out r5_26, out r6_27, out r7_28, out r8_29, out r9_30, out r10_31, out r11_32, out r15_33)
// DataOut: pc r10 r11 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> r15:<invalid> r14:0216 sr:<invalid> -4(fp):r10 -2(fp):r11

pvPortMalloc_exit:
// DataOut: r10 r11 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r11:(word16) r11 r10:(word16) r10 r15:<invalid> r14:<invalid> sr:<invalid> r8:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -4(fp):r10 -2(fp):r11



void vPortFree()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
vPortFree_entry:
// DataOut: pc r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l00005192:
	return
// DataOut: pc r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

vPortFree_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vPortInitialiseBlocks()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
vPortInitialiseBlocks_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l5194:
	Mem2[0x0216:ptr16] = 0x0000
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

vPortInitialiseBlocks_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word20 pxPortInitialiseStack(word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13 r14 r15
// LiveOut: r15
// Trashed: VNZC r15
// Preserved: sp
pxPortInitialiseStack_entry:
// DataOut: pc r11 r13 r14 r15 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000519A:
	Mem7[r15:word16] = r14
	Mem11[r15 - 0x0002:word16] = 0x0008
	Mem15[r15 - 0x0004:word16] = 0x4444
	Mem19[r15 - 0x0006:word16] = 0x5555
	Mem23[r15 - 0x0008:word16] = 0x6666
	Mem27[r15 - 0x000A:word16] = 0x7777
	Mem31[r15 - 0x000C:word16] = 0x8888
	Mem35[r15 - 0x000E:word16] = 0x9999
	Mem39[r15 - 0x0010:word16] = 0xAAAA
	Mem43[r15 - 0x0012:word16] = 0xBBBB
	Mem47[r15 - 0x0014:word16] = 0xCCCC
	Mem51[r15 - 0x0016:word16] = 0xDDDD
	Mem55[r15 - 0x0018:word16] = 0xEEEE
	Mem60[r15 - 0x001A:word16] = r13
	Mem65[r15 - 0x001C:word16] = 0x0000
	return r15 - 0x001C
// DataOut: pc r11 r15 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

pxPortInitialiseStack_exit:
// DataOut: r15
// DataOut (flags): 
// SymbolicIn: sp:fp r15:r15 - 0x7FFE



void xPortStartScheduler(word20 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9
// Preserved: sp
xPortStartScheduler_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000520A:
	prvSetupTimerInterrupt()
	Mem13[pc + -20480:word16] = Mem0[Mem0[Mem0[pc + -20494:word16]:word16]:word16]
	return
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp

xPortStartScheduler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r12:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid>



void vPortEndScheduler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
vPortEndScheduler_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l5238:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

vPortEndScheduler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word20 vPortYield(word20 pc, word20 sr, ptr16 & r5Out, ptr16 & r6Out, ptr16 & r7Out, ptr16 & r8Out, ptr16 & r9Out, ptr16 & r10Out, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc sr
// LiveOut: r10 r11 r5 r6 r7 r8 r9 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
vPortYield_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000523A:
	Mem52[Mem0[pc + -20572:word16]:word16] = fp - 28
	vTaskSwitchContext()
	word16 v21_55 = Mem52[Mem52[pc + -20584:word16]:word16]
	Mem62[pc + -20570:word16] = Mem52[v21_55:word16]
	word20 r11_77
	*r11Out = Mem62[v21_55 + 10:word16]
	word20 r10_80
	*r10Out = Mem62[v21_55 + 12:word16]
	word20 r9_83
	*r9Out = Mem62[v21_55 + 14:word16]
	word20 r8_86
	*r8Out = Mem62[v21_55 + 16:word16]
	word20 r7_89
	*r7Out = Mem62[v21_55 + 18:word16]
	word20 r6_92
	*r6Out = Mem62[v21_55 + 20:word16]
	word20 r5_95
	*r5Out = Mem62[v21_55 + 22:word16]
	return sr & ~0x0008
// DataOut: pc r10 r11 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

vPortYield_exit:
// DataOut: r10 r11 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r14:(word16) r13 r12:(word16) r11 r15:(word16) r14 r13:(word16) r12 r11:(word16) r10 r10:(word16) r9 r9:(word16) r8 r8:(word16) r7 r7:(word16) r6 r6:(word16) r5 r5:(word16) r4 r4:(word16) sr -28(fp):<invalid> -26(fp):r15 -24(fp):r14 -22(fp):r13 -20(fp):r12 -18(fp):r11 -16(fp):r10 -14(fp):r9 -12(fp):r8 -10(fp):r7 -8(fp):r6 -6(fp):r5 -4(fp):r4 -2(fp):sr



void prvSetupTimerInterrupt()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
prvSetupTimerInterrupt_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000528E:
	Mem2[0x0160:ptr16] = 0x0000
	Mem3[0x0160:ptr16] = 0x0100
	Mem4[0x0160:ptr16] = Mem3[0x0160:ptr16] | 0x0004
	Mem5[0x0172:ptr16] = 0x0020
	Mem6[0x0162:ptr16] = 0x0010
	Mem7[0x0160:ptr16] = Mem6[0x0160:ptr16] | 0x0004
	Mem8[0x0160:ptr16] = Mem7[0x0160:ptr16] | 0x0010
	return
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp

prvSetupTimerInterrupt_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void prvTickISR(word20 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9
// Preserved: sp
prvTickISR_entry:
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l52B4:
	Mem48[Mem0[pc + -20690:word16]:word16] = fp - 26
	vTaskIncrementTick()
	vTaskSwitchContext()
	Mem58[pc + -20692:word16] = Mem48[Mem48[Mem48[pc + -20706:word16]:word16]:word16]
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

prvTickISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r14:(word16) r14 r12:(word16) r12 r15:(word16) r15 r13:(word16) r13 r11:(word16) r11 r10:(word16) r10 r9:(word16) r9 r8:(word16) r8 r7:(word16) r7 r6:(word16) r6 r5:(word16) r5 r4:(word16) r4 -26(fp):<invalid> -24(fp):r15 -22(fp):r14 -20(fp):r13 -18(fp):r12 -16(fp):r11 -14(fp):r10 -12(fp):r9 -10(fp):r8 -8(fp):r7 -6(fp):r6 -4(fp):r5 -2(fp):r4



word20 printf(word20 pc, word20 r8, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r8
// LiveOut: r11 r8
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9
// Preserved: sp
printf_entry:
// DataOut: pc r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00005308:
	word20 r11_13
	return vuprintf(pc, r8, fp + 0x0004, Mem0[fp + 0x0002:word16], 0x43A2, out r11_13)
// DataOut: pc r11 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

printf_exit:
// DataOut: r11 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r13:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r11:<invalid> r4:<invalid> r8:<invalid> r9:<invalid> r12:<invalid>



word20 PRINT(word20 pc, word20 r14, word20 r15, ptr16 & r11Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r14 r15
// LiveOut: r10 r11 r15
// Trashed: VNZC r10 r11 r15
// Preserved: sp
PRINT_entry:
// DataOut: pc r10 r11 r14 r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000531A:
	word20 r10_34 = r15
	word20 r11_11 = r14
	branch r14 != 0x0000 l0000532A
// DataOut: pc r10 r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l0000532A:
	word20 r15_40 = (int16) Mem0[r10_34:byte]
	__write_char(pc)
	r10_34 = r10_34 + 0x0001
	branch r15_40 < 0x0000 l00005342
// DataOut: pc r10 r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)
// Terminates process

l00005342:
	word20 r15_51
	*r15Out = 0xFFFF
// DataOut: pc r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005338:
	Mem46[0x021A:ptr16] = Mem0[0x021A:ptr16] + 0x0001
	r11_11 = r11_11 + 0xFFFF
	branch r11_11 != 0x00000 l0000532A
// DataOut: pc r10 r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005340:
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: r11:r11 + 0xFFFF -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005326:
	word20 r15_32
	*r15Out = 0x0001
// DataOut: pc r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005344:
	word20 r11_24
	*r11Out = r11
	return r10
// DataOut: pc r10 r11 r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r15:<invalid> -4(fp):r10 -2(fp):r11

PRINT_exit:
// DataOut: r10 r11 r15
// DataOut (flags): 
// SymbolicIn: sp:fp r10:(word16) r15 r11:<invalid> r15:<invalid> -4(fp):r10 -2(fp):r11



word20 __write_pad(word20 pc, word20 r14, word20 r15, ptr16 & r10Out, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r14 r15
// LiveOut: r10 r11 r9
// Trashed: VNZC r10 r11 r15 r9
// Preserved: r15 sp
__write_pad_entry:
// DataOut: pc r10 r11 r14 r15 r5 r6 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000534A:
	word20 r11_14 = r14
	branch r14 < 0x01 l00005370
// DataOut: pc r11 r15 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20)

l00005358:
	word20 r10_44 = (int16) SLICE(r15, byte, 0)
// DataOut: pc r10 r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:r14 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20)

l0000535C:
	__write_char(pc)
	branch r10_44 < 0x0000 l00005374
// DataOut: pc r10 r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:<invalid> r10:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20)
// Terminates process

l00005374:
// DataOut: pc r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20)

l00005366:
	Mem53[0x021A:ptr16] = Mem0[0x021A:ptr16] + 0x0001
	r11_14 = r11_14 + 0xFF
	branch r11_14 >= 0x01 l0000535C
// DataOut: pc r10 r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20)

l00005370:
// DataOut: pc r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20)

l00005376:
	word20 r10_29
	*r10Out = r10
	word20 r11_32
	*r11Out = r11
	return r9
// DataOut: pc r10 r11 r5 r6 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:<invalid> r15:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

__write_pad_exit:
// DataOut: r10 r11 r9
// DataOut (flags): 
// SymbolicIn: sp:fp r9:(word16) r15 r11:<invalid> r15:<invalid> r10:(word16) r10 -6(fp):r9 -4(fp):r10 -2(fp):r11



word20 vuprintf(word20 pc, word20 r8, word20 r13, word20 r14, word20 r15, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r13 r14 r15 r8
// LiveOut: r11 r8
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9
// Preserved: sp
vuprintf_entry:
// DataOut: pc r11 r13 r14 r15 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0022(20)

l0000537E:
	Mem38[0x021A:ptr16] = 0x0000
	Mem40[0x09B2:ptr16] = r15
	word20 r5_100 = r13
	word16 wLoc1C_1072 = 0x0000
	word16 wLoc1A_1075 = 0x0000
	word20 r6_101 = r14
	r8_102 = r8
// DataOut: pc r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -0022(20)

l53A6:
	word20 r6_111
	word20 r8_102
	byte v17_107 = Mem40[r6_101:byte]
	word20 r7_108 = v17_107
	r6_111 = r6_101
	branch v17_107 == 0x00 l000053C2
// DataOut: pc r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -0022(20)

l000053AE:
	r6_111 = r6_101
	r6_111 = r6_101
	branch v17_107 == 0x0025 l000053C2
// DataOut: pc r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -0022(20)

l000053B4:
	r6_111 = r6_111 + 0x0001
	byte v19_1147 = Mem40[r6_111:byte]
	r7_108 = v19_1147
	branch v19_1147 == 0x00 l000053C2
// DataOut: pc r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -0022(20)

l000053BC:
	branch v19_1147 != 0x0025 l000053B4
// DataOut: pc r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -0022(20)

l000053C2:
	word20 r13_114 = r6_111 - r6_101
	branch r13_114 == 0x00000 l000053CC
// DataOut: pc r13 r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -0022(20)

l000053C8:
// DataOut: pc r13 r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -0022(20)

l5916:
	word20 r11_1138
	word20 r15_1139
	PRINT(pc, r13_114, r6_101, out r11_1138, out r15_1139)
	branch r15_1139 < 0x0000 l5924
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -0022(20)

l5920:
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r14:<invalid> r10:<invalid> r11:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -0022(20)

l000053CC:
	branch r7_108 != 0x00 l000053D4
// DataOut: pc r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r14:<invalid> r10:<invalid> r11:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -0022(20)

l000053D4:
	r6_101 = r6_111 + 0x0001
	byte bLoc1E_1081 = 0x00
	byte bLoc17_190 = 0x00
	byte bLoc1D_193 = 0x00
	word20 r11_194 = 0xFF
	byte bLoc24_197 = 0x00
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r14:<invalid> r10:<invalid> r11:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l53E8:
	word20 r7_1082 = Mem40[r6_101:byte]
	r6_101 = r6_101 + 0x0001
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l53EC:
	branch r7_1082 != 0x0075 l000053F6
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l000053F6:
	branch (r7_1082 | 0x0020) != 0x0078 l5406
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l00005402:
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l000053F2:
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l58F0:
	branch (bLoc1E_1081 & 0x01) == 0x00 l5906
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l5906:
	r5_100 = r5_100 + 0x0002
	wLoc1C_1072 = Mem40[r5_100:word16]
	wLoc1A_1075 = 0x0000
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l58F6:
	r5_100 = r5_100 + 0x0004
	wLoc1C_1072 = Mem40[r5_100:word16]
	wLoc1A_1075 = Mem40[r5_100 + 2:word16]
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l5406:
	branch r7_1082 != 0x0020 l5410
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l5410:
	branch r7_1082 != 0x0023 l541A
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l541A:
	branch r7_1082 != 0x002A l5424
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l5424:
	branch r7_1082 != 0x002D l542E
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l542E:
	branch r7_1082 != 0x002B l5438
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l5438:
	branch r7_1082 != 0x002E l5442
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l5442:
	branch r7_1082 != 0x0030 l544C
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l544C:
	branch r7_1082 <u 0xFFC6 l548C
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l548C:
	branch r7_1082 == 0x0068 l581A
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l581A:
	bLoc1E_1081 = bLoc1E_1081 | 0x04
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l5492:
	branch r7_1082 != 0x006C l549E
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l549E:
	word16 wLoc20_1004
	word20 r9_1023
	branch r7_1082 == 0x0063 l580C
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(20)

l580C:
	r5_100 = r5_100 + 0x0002
// DataOut: pc r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l54A4:
	byte bLoc18_1078
	branch r7_1082 == 0x0044 l5806
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(20)

l5806:
	bLoc1E_1081 = bLoc1E_1081 | 0x01
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(20)

l54AA:
	branch r7_1082 == 0x0064 l57AE
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(20)

l54B0:
	branch r7_1082 == 0x0069 l57AE
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(20)

l57AE:
	branch (bLoc1E_1081 & 0x01) == 0x00 l57E6
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(20)

l57E6:
	word16 v186_888 = Mem40[r5_100:word16]
	r5_100 = r5_100 + 0x0002
	wLoc1C_1072 = v186_888
	wLoc1A_1075 = 0x0000 - (v186_888 * 0x0002 <u 0x0000) ^ 0xFFFF
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(20) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(20)

l57B4:
	r5_100 = r5_100 + 0x0004
	wLoc1C_1072 = Mem40[r5_100:word16]
	wLoc1A_1075 = Mem40[r5_100 + 2:word16]
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(20) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(20)

l57C0:
	branch wLoc1A_1075 < 0x0000 l57CE
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(20) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(20)

l57CE:
	word16 v181_856 = wLoc1C_1072 ^ 0xFFFF
	wLoc1C_1072 = v181_856 + 0x0001
	wLoc1A_1075 = (wLoc1A_1075 ^ 0xFFFF) + (v181_856 <u 0x0001)
	bLoc24_197 = 0x002D
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(20)

l57C6:
	bLoc18_1078 = 0x000A
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0018(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(20)

l54B6:
	branch r7_1082 == 0x004F l57A8
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20)

l57A8:
	bLoc1E_1081 = bLoc1E_1081 | 0x01
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20)

l54BC:
	branch r7_1082 == 0x006F l57A2
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20)

l57A2:
	bLoc18_1078 = 0x08
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0018(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20)

l54C2:
	branch r7_1082 == 0x0070 l5784
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20)

l5784:
	r5_100 = r5_100 + 0x0002
	wLoc1C_1072 = Mem40[r5_100:word16]
	wLoc1A_1075 = 0x0000
	bLoc18_1078 = 0x0010
	bLoc1E_1081 = bLoc1E_1081 | 0x0040
	r7_1082 = 0x0078
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0018(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20)

l54C8:
	branch r7_1082 == 0x0073 l570C
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20)

l570C:
	word16 v149_991 = Mem40[r5_100:word16]
	r5_100 = r5_100 + 0x0002
	wLoc20_1004 = v149_991
	branch v149_991 == 0x0000 l5756
// DataOut: pc r11 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l5756:
	wLoc20_1004 = fp - 0x0000004C
// DataOut: pc r11 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l571A:
	branch r11_194 < 0x00 l5740
// DataOut: pc r11 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l5740:
	word20 r15_1031 = wLoc20_1004 - 0x0001
// DataOut: pc r15 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l5746:
	r15_1031 = r15_1031 + 0x0001
	branch Mem40[r15_1031:byte] != 0x00 l5746
// DataOut: pc r15 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l574E:
	r9_1023 = r15_1031 - bLoc20
// DataOut: pc r5 r6 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l571E:
	word20 r15_1017
	word20 r11_1018 = memchr((int16) SLICE(r11_194, byte, 0), 0x0000, wLoc20_1004, out r15_1017)
	branch r15_1017 == 0x0000 l573C
// DataOut: pc r11 r15 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l5732:
	r9_1023 = r15_1017 - bLoc20
	branch r11_1018 >= r9_1023 l54F8
// DataOut: pc r11 r5 r6 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l573C:
	r9_1023 = r11_1018
// DataOut: pc r5 r6 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l54CE:
	branch r7_1082 == 0x0055 l5706
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20)

l5706:
	bLoc1E_1081 = bLoc1E_1081 | 0x01
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20)

l54D4:
	branch r7_1082 == 0x0075 l56FE
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20)

l56FE:
	bLoc18_1078 = 0x000A
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0018(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20)

l54DA:
	branch r7_1082 == 0x0058 l55FE
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20)

l54E0:
	branch r7_1082 == 0x0078 l55FE
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20)

l55FE:
	bLoc18_1078 = 0x0010
	branch (bLoc1E_1081 & 0x08) == 0x00 l561C
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0018(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(16) Local -0022(20)

l560A:
	branch wLoc1C_1072 != 0x0000 l5616
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x0010 -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0018(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(16) Local -0022(20)

l5610:
	branch wLoc1A_1075 == 0x0000 l561C
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x0010 -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0018(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(16) Local -0022(20)

l5616:
	bLoc1E_1081 = bLoc1E_1081 | 0x0040
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x0010 -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0018(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20)

l561C:
	bLoc24_197 = 0x00
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0018(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(20)

l5620:
	bLoc17_190 = r11_194
	branch r11_194 < 0x00 l562E
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(8) Local -0018(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(20)

l5628:
	bLoc1E_1081 = bLoc1E_1081 & 0xFFDF
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(8) Local -0018(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(20)

l562E:
	wLoc20_1004 = fp - 0x00000024
	branch wLoc1C_1072 != 0x0000 l564A
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(8) Local -0018(20) Local -001A(16) Local -001C(20) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20) Local -0024(20)

l563E:
	branch wLoc1A_1075 != 0x0000 l564A
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:fp - 0x00000024 r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):fp - 0x00000024 -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(8) Local -0018(20) Local -001A(20) Local -001C(20) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20) Local -0024(20)

l5644:
	branch r11_194 == 0x00 l56C6
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:fp - 0x00000024 r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):fp - 0x00000024 -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -0018(20) Local -001A(20) Local -001C(20) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20) Local -0024(20)

l564A:
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:fp - 0x00000024 r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):fp - 0x00000024 -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0014(20) Local -0017(20) Local -0018(8) Local -001A(20) Local -001C(20) Local -001D(20) Local -001E(8) Local -0020(20) Local -0022(20) Local -0024(20)

l5658:
	byte bLoc16_722 = 0x00
	branch wLoc1A_1075 - (wLoc1C_1072 - wLoc14 <u 0x00000) >=u 0x00000 l5672
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r12:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0014(20) Local -0016(8) Local -0017(20) Local -0018(8) Local -001A(20) Local -001C(20) Local -001D(20) Local -001E(8) Local -0020(20) Local -0022(20) Local -0024(20)

l566E:
	bLoc16_722 = 0x01
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r12:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):0x00 -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0014(20) Local -0016(8) Local -0017(20) Local -0018(8) Local -001A(20) Local -001C(20) Local -001D(20) Local -001E(8) Local -0020(20) Local -0022(20) Local -0024(20)

l5672:
	word20 r4_756
	word20 r8_745
	word20 r12_746
	word20 r13_747
	word20 r14_748
	word20 r15_749
	fn00005B4E(r8_102, wLoc14, 0x0000, wLoc1C_1072, wLoc1A_1075, out r8_745, out r12_746, out r13_747, out r14_748, out r15_749)
	branch r14_748 <u 0x000A l56EE
// DataOut: pc r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r12:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0014(20) Local -0016(8) Local -0017(20) Local -0018(8) Local -001A(20) Local -001C(20) Local -001D(20) Local -001E(8) Local -0020(20) Local -0022(20) Local -0024(20)

l56EE:
	r4_756 = r14_748 + 0x0057
	branch r7_1082 != 0x0058 l5692
// DataOut: pc r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:0x0000 r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0014(20) Local -0016(8) Local -0017(20) Local -0018(8) Local -001A(20) Local -001C(20) Local -001D(20) Local -001E(8) Local -0020(20) Local -0022(20) Local -0024(20)

l56F8:
	r4_756 = r14_748 + 0x0057 & 0xFFDF
// DataOut: pc r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:0x0000 r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0014(20) Local -0016(8) Local -0017(20) Local -0018(8) Local -001A(20) Local -001C(20) Local -001D(20) Local -001E(8) Local -0020(20) Local -0022(20) Local -0024(20)

l568E:
	r4_756 = r14_748 + 0x0030
// DataOut: pc r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:0x0000 r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0014(20) Local -0016(8) Local -0017(20) Local -0018(8) Local -001A(20) Local -001C(20) Local -001D(20) Local -001E(8) Local -0020(20) Local -0022(20) Local -0024(20)

l5692:
	word16 v128_758 = wLoc20_1004 + 0xFFFF
	Mem765[v128_758:byte] = r4_756
	word20 r12_775
	word20 r13_776
	word20 r14_777
	word20 r15_778
	fn00005B4E(r8_745, wLoc14, 0x0000, wLoc1C_1072, wLoc1A_1075, out r8_102, out r12_775, out r13_776, out r14_777, out r15_778)
	wLoc20_1004 = v128_758
	wLoc1C_1072 = r12_775
	wLoc1A_1075 = r13_776
	branch bLoc16_722 != 0x00 l5658
// DataOut: pc r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:0x0000 r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0014(20) Local -0017(20) Local -0018(8) Local -001A(20) Local -001C(20) Local -001D(20) Local -001E(8) Local -0020(20) Local -0022(20) Local -0024(20)

l56C0:
	branch bLoc18_1078 == 0x08 l56D2
// DataOut: pc r4 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:0x0000 r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(8) Local -0020(20) Local -0022(20) Local -0024(20)

l56D2:
	branch (bLoc1E_1081 & 0x08) == 0x00 l56C6
// DataOut: pc r4 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:0x0000 r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20) Local -0024(20)

l56D8:
	branch r4_756 == 0x0030 l56C6
// DataOut: pc r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:0x0000 r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20) Local -0024(20)

l56DE:
	Mem808[v128_758 + 0xFFFF:byte] = 0x0030
	wLoc20_1004 = v128_758 + 0xFFFF
// DataOut: pc r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:0x0000 r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20) Local -0024(20)

l56C6:
	r9_1023 = fp - 0x0000004C - bLoc20 + 0x0028
// DataOut: pc r5 r6 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r12:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20) Local -0024(20)

l54E6:
	branch r7_1082 != 0x00 l54EE
// DataOut: pc r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20)

l54EE:
// DataOut: pc r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l54F6:
	wLoc20_1004 = fp - 0x0000004C
	r9_1023 = 0x01
// DataOut: pc r5 r6 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):fp - 0x0000004C -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l54F8:
	bLoc24_197 = 0x00
// DataOut: pc r5 r6 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r14:<invalid> r10:<invalid> r12:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20) Local -0024(20)

l54FC:
	word20 r11_436 = r9_1023
	word20 r10_439 = bLoc17_190 - r9_1023
	branch r10_439 < 0x00000 l55FA
// DataOut: pc r10 r11 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r14:<invalid> r10:<invalid> r12:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20) Local -0024(20)

l55FA:
	r10_439 = 0x00
// DataOut: pc r10 r11 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20) Local -0024(20)

l5506:
	branch bLoc24_197 == 0x00 l55EE
// DataOut: pc r10 r11 r14 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20) Local -0024(20)

l55EE:
	branch (bLoc1E_1081 & 0x0040) == 0x0000 l5510
// DataOut: pc r10 r11 r14 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20) Local -0024(20)

l55F6:
	r11_436 = r9_1023 + 0x02
// DataOut: pc r10 r11 r14 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20) Local -0024(20)

l550E:
	r11_436 = r9_1023 + 0x01
// DataOut: pc r10 r11 r14 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20) Local -0024(20)

l5510:
	word20 r11_451 = r11_436 + r10_439
	r8_102 = bLoc1E_1081 & 0x0030
	branch r8_102 != 0x00000 l5542
// DataOut: pc r10 r11 r14 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20) Local -0024(20)

l551C:
	word20 r13_587 = (int16) (bLoc1D_193 - SLICE(r11_451, byte, 0))
	branch r13_587 < 0x0001 l5542
// DataOut: pc r10 r11 r13 r14 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20) Local -0024(20)

l552C:
	word20 r15_591 = 0x0020
	__write_pad(pc, r13_587, r15_591, out r10_439, out r11_451)
	branch r15_591 >= 0x0000 l553E
// DataOut: pc r10 r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20) Local -0024(20)

l553E:
// DataOut: pc r10 r11 r14 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l5542:
	word20 r15_549
	word20 r14_545
	branch bLoc24_197 != 0x00 l55E4
// DataOut: pc r10 r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l55E4:
	r14_545 = 0x0001
	r15_549 = fp - 0x00000024
// DataOut: pc r14 r15 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l5546:
	branch (bLoc1E_1081 & 0x0040) == 0x0000 l5576
// DataOut: pc r10 r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l554E:
	r14_545 = 0x0002
	r15_549 = fp - 0x00000022
// DataOut: pc r14 r15 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l556A:
	word20 r15_551
	r10_439 = PRINT(pc, r14_545, r15_549, out r11_451, out r15_551)
	branch r15_551 >= 0x0000 l5576
// DataOut: pc r10 r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l5576:
	branch (bLoc1E_1081 & 0x0030) == 0x0020 l55C4
// DataOut: pc r10 r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l55C4:
	word20 r13_532 = (int16) (bLoc1D_193 - SLICE(r11_451, byte, 0))
	branch r13_532 < 0x0001 l557C
// DataOut: pc r10 r13 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l55D4:
	word20 r15_536 = 0x0030
	word20 r11_538
	__write_pad(pc, r13_532, r15_536, out r10_439, out r11_538)
	branch r15_536 >= 0x0000 l557C
// DataOut: pc r10 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l55E2:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20)

l557C:
	word20 r15_482 = 0x0030
	word20 r10_484
	word20 r11_485
	word20 r9_486 = __write_pad(pc, r10_439, r15_482, out r10_484, out r11_485)
	branch r15_482 < 0x0000 l5924
// DataOut: pc r5 r6 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0020(20) Local -0022(20)

l558A:
	word20 r11_497
	word20 r15_498
	PRINT(pc, (int16) SLICE(r9_486, byte, 0), wLoc20_1004, out r11_497, out r15_498)
	branch r15_498 < 0x0000 l5924
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20)

l559C:
	branch (bLoc1E_1081 & 0x0010) == 0x0000 l53A6
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -0022(20)

l55A4:
	word20 r13_515 = (int16) (bLoc1D_193 - SLICE(r11_497, byte, 0))
	branch r13_515 < 0x0001 l53A6
// DataOut: pc r13 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -0022(20)

l55B4:
	word20 r15_519 = 0x0020
	word20 r10_520
	word20 r11_521
	__write_pad(pc, r13_515, r15_519, out r10_520, out r11_521)
	branch r15_519 >= 0x0000 l53A6
// DataOut: pc r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -001A(16) Local -001C(16) Local -0022(20)

l55C2:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20)

l5572:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20)

l553A:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20)

l54EA:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20)

l5498:
	bLoc1E_1081 = bLoc1E_1081 | 0x01
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l5458:
	word20 r13_366 = 0x0000
// DataOut: pc r11 r13 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001E(20) Local -0022(20) Local -0024(8)

l545A:
	word20 r14_374 = r13_366 * 0x00002
	word20 r13_382 = r13_366 * 0x00004 + r14_374 + r14_374 + r14_374 + (int16) SLICE(r7_1082, byte, 0)
	byte v65_384 = Mem40[r6_101:byte]
	r13_366 = r13_382 + 0xFFD0
	r7_1082 = v65_384
	r6_101 = r6_101 + 0x0001
	branch v65_384 >=u 0xFFC6 l545A
// DataOut: pc r11 r13 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001E(20) Local -0022(20) Local -0024(8)

l5486:
	bLoc1D_193 = r13_382 + 0xFFD0
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l5448:
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l5822:
	branch (bLoc1E_1081 & 0x0010) == 0x0000 l582E
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l582E:
	bLoc1E_1081 = bLoc1E_1081 | 0x0020
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l582A:
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l543E:
// DataOut: pc r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l5838:
	byte v58_296 = Mem40[r6_101:byte]
	r7_1082 = v58_296
	r6_101 = r6_101 + 0x0001
	branch v58_296 == 0x002A l588A
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l588A:
	word16 v61_343 = Mem40[r5_100:word16]
	r5_100 = r5_100 + 0x0002
	word20 r15_345 = v61_343
	branch v61_343 >= 0xFFFF l5898
// DataOut: pc r15 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l5896:
	r15_345 = 0xFFFF
// DataOut: pc r15 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l5898:
	r11_194 = r15_345
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l5842:
	word20 r13_301 = 0x0000
	branch v58_296 <u 0xFFC6 l587C
// DataOut: pc r13 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l5850:
	word20 r14_324 = r13_301 * 0x00002
	byte v60_334 = Mem40[r6_101:byte]
	r13_301 = r13_301 * 0x00004 + r14_324 + r14_324 + r14_324 + (int16) SLICE(r7_1082, byte, 0) + 0xFFD0
	r7_1082 = v60_334
	r6_101 = r6_101 + 0x0001
	branch v60_334 >=u 0xFFC6 l5850
// DataOut: pc r13 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l587C:
	word20 r15_311 = r13_301
	branch r13_301 >= 0xFFFF l5884
// DataOut: pc r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l5882:
	r15_311 = 0xFFFF
// DataOut: pc r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l5884:
	r11_194 = r15_311
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l5434:
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20)

l589E:
	bLoc24_197 = 0x002B
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l542A:
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l5420:
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001E(20) Local -0022(20) Local -0024(8)

l58B8:
	byte v49_273 = Mem40[r5_100:byte]
	r5_100 = r5_100 + 0x0002
	bLoc1D_193 = v49_273
	branch v49_273 < 0x00 l58CA
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l58CA:
	bLoc1D_193 = (v49_273 ^ 0xFF) + 0x01
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l58A8:
	bLoc1E_1081 = (bLoc1E_1081 | 0x0010) & 0xFFDF
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l58C6:
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l5416:
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l58D4:
	bLoc1E_1081 = bLoc1E_1081 | 0x08
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l540C:
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l58DC:
	branch bLoc24_197 == 0x00 l58E6
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l58E6:
	bLoc24_197 = 0x0020
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l58E2:
// DataOut: pc r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r11:<invalid> r14:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):0x00 -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20) Local -0017(20) Local -001A(16) Local -001C(16) Local -001D(20) Local -001E(20) Local -0022(20) Local -0024(8)

l000053D0:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r14:<invalid> r10:<invalid> r11:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0008(20)

l5924:
	word20 r11_174
	*r11Out = r11
	return r8
// DataOut: pc r11 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000004C r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> r14:<invalid> r10:<invalid> r11:<invalid> r9:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

vuprintf_exit:
// DataOut: r11 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r5:<invalid> r6:<invalid> r15:021A r7:(word16) r7 r13:<invalid> r14:<invalid> r10:(word16) r10 r11:(word16) r11 r4:(word16) r4 r8:(word16) r8 r9:(word16) r9 r12:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11



word20 memchr(word20 r13, word20 r14, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13 r14 r15
// LiveOut: r11 r15
// Trashed: VNZC r11 r12 r13 r14 r15
// Preserved: sp
memchr_entry:
// DataOut: pc r11 r13 r14 r15 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000593E:
	branch r13 == 0x0000 l00005956
// DataOut: pc r11 r12 r13 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(20)

l00005948:
	word20 r14_26 = r15
// DataOut: pc r12 r13 r14 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:r14 -2(fp):r11
// LocalsOut: Local -0002(20)

l0000594A:
	r14_26 = r14_26 + 0x0001
	branch Mem0[r14_26:byte] == r14 l0000595A
// DataOut: pc r12 r13 r14 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:r14 r14:<invalid> r15:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l0000595A:
	word20 r15_39
	*r15Out = r14_26 + 0xFFFF
// DataOut: pc r15 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:r14 r14:<invalid> r15:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l00005952:
	r13 = r13 + 0xFFFF
	branch r13 != 0x00000 l0000594A
// DataOut: pc r12 r13 r14 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:r14 r14:<invalid> r15:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l00005956:
	word20 r15_25
	*r15Out = 0x0000
// DataOut: pc r15 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:r14 r14:<invalid> r15:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l0000595E:
	return r11
// DataOut: pc r11 r15 r5 r6 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:r14 r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11

memchr_exit:
// DataOut: r11 r15
// DataOut (flags): 
// SymbolicIn: sp:fp r11:(word16) r15 r12:r14 r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11



word20 strncpy(word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13 r14 r15
// LiveOut: r11
// Trashed: VNZC r11 r12 r13 r14
// Preserved: r15 sp
strncpy_entry:
// DataOut: pc r10 r11 r13 r14 r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00005962:
	branch r13 == 0x0000 l0000598E
// DataOut: pc r10 r13 r14 r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(20)

l0000596A:
	word20 r12_21 = r15
// DataOut: pc r10 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 -2(fp):r11
// LocalsOut: Local -0002(20)

l0000596C:
	Mem29[r12_21:byte] = Mem0[r14:byte]
	r14 = r14 + 0x0001
	r12_21 = r12_21 + 0x0001
	branch Mem29[r12_21:byte] == 0x00 l00005980
// DataOut: pc r10 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l00005980:
	word20 r13_39 = r13 + 0xFFFF
	branch r13_39 == 0x00000 l0000598E
// DataOut: pc r10 r12 r13 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l00005984:
	Mem46[r12_21:byte] = 0x00
	r12_21 = r12_21 + 0x0001
	r13_39 = r13_39 + 0xFFFF
	branch r13_39 != 0x00000 l00005984
// DataOut: pc r10 r12 r13 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l0000597A:
	r13 = r13 + 0xFFFF
	branch r13 != 0x00000 l0000596C
// DataOut: pc r10 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l0000597E:
// DataOut: pc r10 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l0000598E:
	return r11
// DataOut: pc r10 r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11

strncpy_exit:
// DataOut: r11
// DataOut (flags): 
// SymbolicIn: sp:fp r11:(word16) r15 r15:r15 r12:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11



word20 memcpy(word20 sr, word20 r13, word20 r14, word20 r15, ptr16 & r10Out, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13 r14 r15 sr
// LiveOut: r10 r11 sr
// Trashed: VNZC r10 r11 r12 r13 r14 sr
// Preserved: r15 sp
memcpy_entry:
// DataOut: pc r10 r11 r13 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00005994:
	word20 r11_105 = r13
	word20 r13_108 = r15
	word20 r12_107 = r14
	branch r13 == 0x0000 l00005A60
// DataOut: pc r10 r11 r12 r13 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059A4:
	branch r15 == r14 l00005A60
// DataOut: pc r10 r11 r12 r13 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059A8:
	branch r15 <u r14 l00005A02
// DataOut: pc r10 r11 r12 r13 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A02:
	word20 r12_133 = r14 + r13
	word20 r13_135 = r15 + r13
	word20 r15_137 = r12_133 | r13_135
	bool C_141 = (bool) cond(r15_137 & 0x0001)
	branch (r15_137 & 0x0001) == 0x00000 l00005A30
// DataOut: pc r11 r12 r13 sr
// DataOut (flags): C
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A12:
	word20 r14_197
	branch ((r12_133 ^ r13_135) & 0x0001) != 0x00000 l00005A20
// DataOut: pc r11 r12 r13 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 + r15 r12:r14 + r15 r15:(r14 + r15 | r15 * 0x00002) & 0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A1A:
	branch r13 <u 0x0003 l00005A5A
// DataOut: pc r11 r12 r13 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 + r15 r12:r14 + r15 r15:(r14 + r15 ^ r15 * 0x00002) & 0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A5A:
	r14_197 = r12_133 & 0x0001
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 + r15 r12:r14 + r15 r15:(r14 + r15 ^ r15 * 0x00002) & 0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A20:
	r14_197 = r13
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 + r15 r12:r14 + r15 r15:(r14 + r15 ^ r15 * 0x00002) & 0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A22:
	r11_105 = r13 - r14_197
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 + r15 r12:r14 + r15 r15:(r14 + r15 ^ r15 * 0x00002) & 0x0001 r14:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A24:
	r12_133 = r12_133 + 0xFFFF
	r13_135 = r13_135 + 0xFFFF
	Mem208[r13_135:byte] = Mem0[r12_133:byte]
	r14_197 = r14_197 + 0xFFFF
	C_141 = (bool) cond(r14_197) (alias)
	branch r14_197 != 0x00000 l00005A24
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): C
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:(r14 + r15 ^ r15 * 0x00002) & 0x0001 r14:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A30:
	sr = sr & ~0x0001
	word20 r14_153 = __rcr(r11_105, 0x01, C_141)
	branch r14_153 == 0x0000 l00005A46
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A3A:
	r12_133 = r12_133 - 0x0002
	r13_135 = r13_135 - 0x0002
	Mem184[r13_135:word16] = Mem0[r12_133:word16]
	r14_153 = r14_153 + 0xFFFF
	branch r14_153 != 0x00000 l00005A3A
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> sr:sr & ~0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A46:
	word20 r14_160 = r11_105 & 0x0001
	branch r14_160 == 0x00000 l00005A60
// DataOut: pc r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> sr:sr & ~0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A4C:
	r12_133 = r12_133 + 0xFFFF
	r13_135 = r13_135 + 0xFFFF
	Mem172[r13_135:byte] = Mem0[r12_133:byte]
	r14_160 = r14_160 + 0xFFFF
	branch r14_160 != 0x00000 l00005A4C
// DataOut: pc r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> sr:sr & ~0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A58:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> sr:sr & ~0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059AC:
	word20 r15_44 = r14 | r15
	bool C_119 = (bool) cond(r15_44 & 0x0001)
	branch (r15_44 & 0x0001) == 0x00000 l000059D0
// DataOut: pc r10 r11 r12 r13 r14 sr
// DataOut (flags): C
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059B4:
	word20 r14_103
	branch ((r14 ^ r15) & 0x0001) != 0x00000 l000059C0
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 r15:r14 & 0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059BC:
	branch r13 <u 0x0002 l000059F8
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 r15:0x00000 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059F8:
	r14_103 = 0x0002 - (r14 & 0x0001)
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 r15:0x00000 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059C0:
	r14_103 = r13
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 r15:0x00000 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059C2:
	r11_105 = r13 - r14_103
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 r15:<invalid> r14:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059C4:
	Mem113[r13_108:byte] = Mem0[r12_107:byte]
	r14_103 = r14_103 + 0xFFFF
	r12_107 = r12_107 + 0x0001
	r13_108 = r13_108 + 0x0001
	C_119 = (bool) cond(r14_103) (alias)
	branch r14_103 != 0x00000 l000059C4
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): C
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059D0:
	sr = sr & ~0x0001
	word20 r14_60 = __rcr(r11_105, 0x01, C_119)
	branch r14_60 == 0x0000 l000059E4
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059DA:
	Mem91[r13_108:word16] = Mem0[r12_107:word16]
	r12_107 = r12_107 + 2
	r13_108 = r13_108 + 0x0002
	r14_60 = r14_60 + 0xFFFF
	branch r14_60 != 0x00000 l000059DA
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> sr:sr & ~0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059E4:
	word20 r14_67 = r11_105 & 0x0001
	branch r14_67 == 0x00000 l00005A60
// DataOut: pc r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> sr:sr & ~0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059EA:
	Mem78[r13_108:byte] = Mem0[r12_107:byte]
	r12_107 = r12_107 + 0x0001
	r13_108 = r13_108 + 0x0001
	r14_67 = r14_67 + 0xFFFF
	branch r14_67 != 0x00000 l000059EA
// DataOut: pc r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> sr:sr & ~0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059F6:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> sr:sr & ~0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A60:
	word20 r10_33
	*r10Out = r10
	word20 r11_36
	*r11Out = r11
	return sr
// DataOut: pc r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> sr:sr & ~0x0001 -4(fp):r10 -2(fp):r11

memcpy_exit:
// DataOut: r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r10:(word16) r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:r15 r14:<invalid> sr:sr & ~0x0001 -4(fp):r10 -2(fp):r11



word20 memset(word20 sr, word20 r13, word20 r14, word20 r15, ptr16 & r9Out, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13 r14 r15 sr
// LiveOut: r11 r9 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r9 sr
// Preserved: r15 sp
memset_entry:
// DataOut: pc r11 r13 r14 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00005A68:
	word20 r14_108 = r15
	branch r13 <u 0x0006 l00005A8A
// DataOut: pc r10 r13 r14 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l00005A8A:
	word20 r11_121 = r14
	branch r14 == 0x0000 l00005A96
// DataOut: pc r10 r11 r13 r14 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:r15 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l00005A90:
	r11_121 = r14 | __swpb(r14)
// DataOut: pc r10 r11 r13 r14 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:r15 r11:r15 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l00005A96:
	bool C_116 = (bool) cond(r15 & 0x0001)
	branch (r15 & 0x0001) == 0x00000 l00005AAE
// DataOut: pc r10 r11 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): C
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:r15 r11:<invalid> r15:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l00005A9C:
	word20 r15_103 = 0x0002 - (r15 & 0x0001)
	word20 r12_104 = r15_103
	r13 = r13 - r15_103
// DataOut: pc r10 r11 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:r15 r11:<invalid> r15:<invalid> r12:r15 & 0x0001 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l00005AA4:
	Mem111[r14_108:byte] = r14
	r12_104 = r12_104 + 0xFFFF
	r14_108 = r14_108 + 0x0001
	C_116 = (bool) cond(r12_104) (alias)
	branch r12_104 != 0x00000 l00005AA4
// DataOut: pc r10 r11 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): C
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:<invalid> r11:<invalid> r15:0x0002 - (r15 & 0x0001) r12:<invalid> r13:r13 - (0x0002 - (r15 & 0x0001)) -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l00005AAE:
	sr = sr & ~0x0001
	word20 r12_76 = __rcr(r13, 0x01, C_116)
// DataOut: pc r10 r11 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:<invalid> r11:<invalid> r15:<invalid> r12:<invalid> r13:r13 - (0x0002 - (r15 & 0x0001)) -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l00005AB4:
	Mem83[r14_108:word16] = r11_121
	r14_108 = r14_108 + 0x0002
	r12_76 = r12_76 + 0xFFFF
	branch r12_76 != 0x00000 l00005AB4
// DataOut: pc r10 r11 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:<invalid> r11:<invalid> r15:<invalid> r12:<invalid> sr:sr & ~0x0001 r13:r13 - (0x0002 - (r15 & 0x0001)) -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l00005ABE:
	word20 r12_89 = r13 & 0x0001
	branch r12_89 == 0x00000 l00005ACE
// DataOut: pc r10 r12 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:<invalid> r11:<invalid> r15:<invalid> r12:<invalid> sr:sr & ~0x0001 r13:r13 - (0x0002 - (r15 & 0x0001)) -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l00005AC4:
	Mem97[r14_108:byte] = r14
	r14_108 = r14_108 + 0x0001
	r12_89 = r12_89 + 0xFFFF
	branch r12_89 != 0x00000 l00005AC4
// DataOut: pc r10 r12 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:<invalid> r11:<invalid> r15:<invalid> r12:<invalid> sr:sr & ~0x0001 r13:r13 - (0x0002 - (r15 & 0x0001)) -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l00005A7A:
	branch r13 == 0x0000 l00005ACE
// DataOut: pc r10 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:r15 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l00005A7E:
	Mem51[r14_108:byte] = r14
	r14_108 = r14_108 + 0x0001
	r13 = r13 + 0xFFFF
	branch r13 != 0x00000 l00005A7E
// DataOut: pc r10 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:<invalid> r13:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l00005A88:
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:<invalid> r13:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l00005ACE:
	word20 r9_31
	*r9Out = r9
	word20 r11_37
	*r11Out = r11
	return sr
// DataOut: pc r11 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:<invalid> r13:<invalid> r11:<invalid> r15:<invalid> r12:<invalid> sr:sr & ~0x0001 -6(fp):r9 -4(fp):r10 -2(fp):r11

memset_exit:
// DataOut: r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r9:(word16) r15 r10:(word16) r14 r14:<invalid> r15:r15 r11:(word16) r11 r13:<invalid> r12:<invalid> sr:sr & ~0x0001 -6(fp):r9 -4(fp):r10 -2(fp):r11



word20 fn00005ADC(word20 r10, word20 r11, word20 r12, word20 r13, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10 r11 r12 r13
// LiveOut: r14 r15
// Trashed: r14 r15
// Preserved: sp
fn00005ADC_entry:
// DataOut: pc r10 r11 r12 r13 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00005ADC:
	Mem3[0x0130:ptr16] = r12
	Mem5[0x0138:ptr16] = r10
	Mem6[0x0134:ptr16] = r12
	Mem8[0x013A:ptr16] = 0x013C
	Mem10[0x0138:ptr16] = r11
	Mem12[0x0134:ptr16] = r13
	Mem13[0x0138:ptr16] = r10
	word20 r15_14
	*r15Out = 0x013A
	return 0x013A
// DataOut: pc r14 r15 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00005ADC_exit:
// DataOut: r14 r15
// DataOut (flags): 
// SymbolicIn: sp:fp r14:013A r15:013A



word20 fn00005B04(word20 r10, word20 r11, word20 r12, word20 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10 r11 r12 r13
// LiveOut: r12
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r8 r9
// Preserved: sp
fn00005B04_entry:
// DataOut: pc r10 r11 r12 r13 r4 r5 r6 r7 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l00005B04:
	word20 r8_11 = 0x0000
	branch (r13 & 0x8000) == 0x0000 l00005B16
// DataOut: pc r10 r11 r12 r13 r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l00005B0C:
	r12 = (r12 ^ 0xFFFF) + 0x0001
	r13 = (r13 ^ 0xFFFF) + (r12 <u 0x00000)
	r8_11 = r8_11 | 0x0004
// DataOut: pc r10 r11 r12 r13 r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r8:0x0000

l00005B16:
	branch (r11 & 0x8000) == 0x0000 l00005B26
// DataOut: pc r10 r11 r12 r13 r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r13:<invalid> r12:(r12 ^ 0xFFFF ^ 0xFFFF) + 0x0001

l00005B1C:
	r10 = (r10 ^ 0xFFFF) + 0x0001
	r11 = (r11 ^ 0xFFFF) + (r10 <u 0x00000)
	r8_11 = r8_11 | 0x0008
// DataOut: pc r10 r11 r12 r13 r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r13:<invalid> r12:(r12 ^ 0xFFFF ^ 0xFFFF) + 0x0001

l00005B26:
	word20 r8_26
	word20 r13_28
	word20 r14_29
	word20 r15_30
	word20 r12_27
	bool C_31 = fn00005B4E(r8_11, r10, r11, r12, r13, out r8_26, out r12_27, out r13_28, out r14_29, out r15_30)
	word20 r8_32 = __rcr(r8_26, 0x01, C_31)
	branch (r8_32 & 0x0004) == 0x0000 l00005B40
// DataOut: pc r12 r13 r14 r15 r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r13:<invalid> r12:(r12 ^ 0xFFFF ^ 0xFFFF) + 0x0001 r11:<invalid> r10:(r10 ^ 0xFFFF ^ 0xFFFF) + 0x0001

l00005B30:
	r12_27 = (r12_27 ^ 0xFFFF) + 0x0001
// DataOut: pc r12 r13 r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r13:<invalid> r12:<invalid> r11:<invalid> r10:(r10 ^ 0xFFFF ^ 0xFFFF) + 0x0001 r15:<invalid> r14:<invalid> r9:<invalid>

l00005B40:
	branch (r8_32 & 0x0008) == 0x0000 l00005B4C
// DataOut: pc r12 r13 r4 r5 r6 r7 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r13:<invalid> r12:<invalid> r11:<invalid> r10:(r10 ^ 0xFFFF ^ 0xFFFF) + 0x0001 r14:<invalid> r15:<invalid> r9:<invalid>

l00005B44:
	r12_27 = (r12_27 ^ 0xFFFF) + 0x0001
// DataOut: pc r12 r4 r5 r6 r7 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r13:<invalid> r12:<invalid> r11:<invalid> r10:(r10 ^ 0xFFFF ^ 0xFFFF) + 0x0001 r14:<invalid> r15:<invalid> r9:<invalid>

l00005B4C:
	return r12_27
// DataOut: pc r12 r4 r5 r6 r7 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r13:<invalid> r12:<invalid> r11:<invalid> r10:(r10 ^ 0xFFFF ^ 0xFFFF) + 0x0001 r14:<invalid> r15:<invalid> r9:<invalid>

fn00005B04_exit:
// DataOut: r12
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r13:<invalid> r12:<invalid> r11:<invalid> r10:(r10 ^ 0xFFFF ^ 0xFFFF) + 0x0001 r14:<invalid> r15:<invalid> r9:<invalid>



bool fn00005B4E(word20 r8, word20 r10, word20 r11, word20 r12, word20 r13, ptr16 & r8Out, ptr16 & r12Out, ptr16 & r13Out, ptr16 & r14Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10 r11 r12 r13 r8
// LiveOut: C r12 r13 r14 r15 r8
// Trashed: VNZC r12 r13 r14 r15 r8 r9
// Preserved: sp
fn00005B4E_entry:
// DataOut: pc r10 r11 r12 r13 r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l00005B4E:
	word20 r15_18
	*r15Out = 0x00000
	word20 r14_17
	*r14Out = 0x00000
	bool C_19 = (bool) cond(0x00000)
	word20 r9_15 = 0x0021
// DataOut: pc r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): C
// SymbolicIn: sp:fp

l00005B6C:
	r12 = r12 * 0x00002 + C_19
	*r12Out = r12
	r13 = r13 * 0x00002 + (r12 <u 0x00000)
	*r13Out = r13
	r9_15 = r9_15 - 0x0001
	word20 r8_26 = r8 * 0x00002 + (r13 <u 0x00000)
	*r8Out = r8_26
	bool C_30 = (bool) cond(r9_15)
	branch r9_15 != 0x00000 l00005B58
// DataOut: pc r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): C
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r8:<invalid>

l00005B58:
	r8 = __rcr(r8_26, 0x01, C_30)
	r14_17 = r14_17 * 0x00002 + (r8 <u 0x00000)
	*r14Out = r14_17
	r15_18 = r15_18 * 0x00002 + (r14_17 <u 0x00000)
	*r15Out = r15_18
	C_19 = (bool) cond(r15_18 - r11) (alias)
	branch r15_18 >=u r11 l00005B6C
// DataOut: pc r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): ZC
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r8:<invalid>

l00005B62:
	branch r15_18 != r11 l00005B68
// DataOut: pc r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r8:<invalid>

l00005B64:
	C_19 = (bool) cond(r14_17 - r10) (alias)
	branch r14_17 >=u r10 l00005B6C
// DataOut: pc r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): C
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r8:<invalid>

l00005B68:
	r14_17 = r14_17 - r10
	*r14Out = r14_17
	r15_18 = r15_18 - r11 - (r14_17 <u 0x00000)
	*r15Out = r15_18
	C_19 = (bool) cond(r15_18) (alias)
// DataOut: pc r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): C
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r8:<invalid>

l00005B76:
	return C_30
// DataOut: pc r12 r13 r14 r15 r4 r5 r6 r7 r8 sr
// DataOut (flags): C
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r8:<invalid>

fn00005B4E_exit:
// DataOut: r12 r13 r14 r15 r8
// DataOut (flags): C
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r8:<invalid>



