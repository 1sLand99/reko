void __write_char(word20 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn09B2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn09B2_entry:
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp

l09B2:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00004000()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC pc r13 r14 r15
// Preserved: sp
fn00004000_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00004000:
	Mem2[0x0120:ptr16] = 0x5A80
	word20 r15_27 = 0x5B78
	word20 r14_26 = 0x0200
	word20 r13_5 = 0x021C
	branch r13_5 == r14_26 l00004020
// DataOut: r13 r14 r15
// DataOut (flags): 
// SymbolicIn: sp:fp

l00004016:
	Mem32[r14_26:byte] = Mem2[r15_27:byte]
	r15_27 = r15_27 + 1
	r14_26 = r14_26 + 0x0001
	branch r14_26 >=u r13_5 l00004016
// DataOut: r13 r14 r15
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r13:0x021C

l00004020:
	word20 r15_11 = 0x021C
	word20 r13_12 = 0x09B4
	branch r13_12 == r15_11 l00004036
// DataOut: r13 r15
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r13:0x021C

l0000402C:
	Mem22[r15_11:byte] = 0x00
	r15_11 = r15_11 + 0x0001
	branch r15_11 >=u r13_12 l0000402C
// DataOut: r13 r15
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r13:0x09B4

l00004036:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r13:0x09B4

fn00004000_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r13:0x09B4 pc:0x403E



void task_idle(word20 pc, word20 sr, word20 r8, word20 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 r8 sr
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
task_idle_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

task_idle_entry:
// DataOut: pc r11 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4048:
	word20 r15_14
	word20 sr_13
	xTaskGetTickCount(sr, wLoc08, out sr_13, out r15_14)
	word20 r10_17 = r15_14 + 0x03E8
	word20 r9_19 = 0x0000
// DataOut: pc r10 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(20)

l405A:
	word20 r9_27 = r9_19 + 0x0001
	word20 r15_30
	word20 sp_31 = xTaskGetTickCount(sr_13, r11, out sr_13, out r15_30)
	branch r10_17 - r15_30 >= 0x0001 l4080
// DataOut: pc r11 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:0x0000 r11:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> sr:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> pc:<invalid> r8:<invalid> r4:<invalid> r12:<invalid> -10(fp):0x4040 -8(fp):0x0001 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l4080:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:0x0001 r11:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> sr:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> pc:<invalid> r8:<invalid> r4:<invalid> r12:<invalid> -10(fp):0x4040 -8(fp):0x0001 -6(fp):r9 -4(fp):r10 -2(fp):r11

l406A:
	Mem38[sp_31 - 2:word16] = r9_27
	Mem40[sp_31 - 4:word16] = 0x4040
	word20 sp_41
	word20 r11_43
	pc = printf(pc, r8, r15_30, r11, out sp_41, out r8, out r11_43)
	r10_17 = r11_43 + 0x03E8
	r9_19 = 0x0000
// DataOut: pc r10 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:0x0001 r11:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> sr:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> pc:<invalid> r8:<invalid> r4:<invalid> r12:<invalid> -10(fp):0x4040 -8(fp):0x0001 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)



void task_1(word20 pc, word20 sr, word20 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 sr
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
task_1_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

task_1_entry:
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4096:
	word20 r15_7
	word20 sr_15
	word20 sp_8 = xTaskGetTickCount(sr, wLoc04, out sr_15, out r15_7)
	Mem12[sp_8:word16] = r15_7
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l40A0:
	Mem16[0x0031:ptr16] = Mem12[0x0031:ptr16] ^ 0x01
	word20 sr_20
	word20 r11_21
	word20 sp_22 = putchar(pc, sr_15, r11, 0x0058, out sr_20, out r11_21)
	sr_15 = vTaskDelayUntil(pc, sr_20, r11_21, 0x01F4, sp_22, out r11)
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r14:<invalid> sr:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r12:<invalid> r13:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r15



void task_2(word20 pc, word20 sr, word20 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 sr
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
task_2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

task_2_entry:
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l40BC:
	word20 r15_7
	word20 sr_15
	word20 sp_8 = xTaskGetTickCount(sr, wLoc04, out sr_15, out r15_7)
	Mem12[sp_8:word16] = r15_7
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l40C6:
	Mem16[0x0031:ptr16] = Mem12[0x0031:ptr16] ^ 0x02
	word20 sr_20
	word20 r11_21
	word20 sp_22 = putchar(pc, sr_15, r11, 0x0059, out sr_20, out r11_21)
	sr_15 = vTaskDelayUntil(pc, sr_20, r11_21, 0x00FA, sp_22, out r11)
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r14:<invalid> sr:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r12:<invalid> r13:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r15



void task_3(word20 pc, word20 sr, word20 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 sr
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
task_3_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

task_3_entry:
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l40E2:
	word20 r15_7
	word20 sr_15
	word20 sp_8 = xTaskGetTickCount(sr, wLoc04, out sr_15, out r15_7)
	Mem12[sp_8:word16] = r15_7
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l40EC:
	Mem16[0x0031:ptr16] = Mem12[0x0031:ptr16] ^ 0x04
	word20 sr_20
	word20 r11_21
	word20 sp_22 = putchar(pc, sr_15, r11, 0x005A, out sr_20, out r11_21)
	sr_15 = vTaskDelayUntil(pc, sr_20, r11_21, 0x0019, sp_22, out r11)
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r14:<invalid> sr:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r12:<invalid> r13:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r15



void main(word20 pc, word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc sr
// LiveOut:
// Trashed: VNZC pc r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// Preserved: sp
main_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l414C:
	__set_stackpointer(0x0A00)
	Mem2[0x0120:ptr16] = 0x5A80
	Mem3[0x0056:ptr16] = 0xFFE0
	Mem4[0x0057:ptr16] = 0x0007
	Mem5[0x0032:ptr16] = 0x0007
	Mem6[0x0031:ptr16] = 0x0007
	word20 r8_18
	word20 r11_19
	word20 sr_20 = init_uart_isr(pc, sr, out r8_18, out r11_19)
	word20 sp_22 = uart_putchar_isr_mode(0x00, 0x0010)
	Mem24[sp_22 - 2:word16] = 0x4108
	Mem26[sp_22 - 4:word16] = 0x4111
	Mem28[sp_22 - 6:word16] = 0x411D
	word20 sp_29
	word20 r8_30
	word20 r11_31
	word20 pc_32 = printf(pc, r8_18, r11_19, 0x0010, out sp_29, out r8_30, out r11_31)
	word20 sp_34 = uart_putchar_isr_mode(0x01, 0x0010)
	Mem36[sp_34 - 2:word16] = 0x0000
	Mem38[sp_34 - 4:word16] = 0x0003
	word20 sr_43
	word20 r11_44
	word20 r12_45
	word20 r13_46
	word20 r14_47
	word20 r15_48
	word20 sp_49 = xTaskCreate(pc_32, sr_20, r11_31, out sr_43, out r11_44, out r12_45, out r13_46, out r14_47, out r15_48)
	Mem51[sp_49 - 2:word16] = 0x0000
	Mem53[sp_49 - 4:word16] = 0x0003
	word20 sr_58
	word20 r11_59
	word20 r12_60
	word20 r13_61
	word20 r14_62
	word20 r15_63
	word20 sp_64 = xTaskCreate(pc_32, sr_43, r11_44, out sr_58, out r11_59, out r12_60, out r13_61, out r14_62, out r15_63)
	Mem66[sp_64 - 2:word16] = 0x0000
	Mem68[sp_64 - 4:word16] = 0x0003
	word20 sr_73
	word20 r11_74
	word20 r12_75
	word20 r13_76
	word20 r14_77
	word20 r15_78
	word20 sp_79 = xTaskCreate(pc_32, sr_58, r11_59, out sr_73, out r11_74, out r12_75, out r13_76, out r14_77, out r15_78)
	Mem81[sp_79 - 2:word16] = 0x0000
	Mem83[sp_79 - 4:word16] = 0x0000
	word20 sr_88
	word20 r11_89
	word20 r12_90
	word20 r13_91
	word20 r14_92
	word20 r15_93
	xTaskCreate(pc_32, sr_73, r11_74, out sr_88, out r11_89, out r12_90, out r13_91, out r14_92, out r15_93)
	word20 sr_95
	word20 r11_96
	word20 r12_97
	word20 r13_98
	word20 r14_99
	vTaskStartScheduler(pc_32, sr_88, r11_89, out sr_95, out r11_96, out r12_97, out r13_98, out r14_99)
	word20 r15_103 = 0x0000
// DataOut: r11 r12 r13 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l420A_thunk_msp430_compute_modulator_bits:
	word20 sr_105
	word20 r4_106
	word20 r15_107
	msp430_compute_modulator_bits(sr_95, r11_96, r12_97, r13_98, r14_99, r15_103, out sr_105, out r4_106, out r15_107)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r13:<invalid> r14:<invalid> r15:0x0000 r12:<invalid> pc:0x5AD8 r4:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r11:<invalid> r5:<invalid> -28(fp):0x0000 -26(fp):0x0000 -24(fp):0x0003 -22(fp):0x0000 -20(fp):0x0003 -18(fp):0x0000 -16(fp):0x0003 -14(fp):0x0000 -12(fp):0x411D -10(fp):0x4111 -8(fp):0x4108 -6(fp):0x8000 -4(fp):0x0000 -2(fp):0x0010

main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r12:<invalid> pc:0x5AD8 r4:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r11:<invalid> r5:<invalid> -28(fp):0x0000 -26(fp):0x0000 -24(fp):0x0003 -22(fp):0x0000 -20(fp):0x0003 -18(fp):0x0000 -16(fp):0x0003 -14(fp):0x0000 -12(fp):0x411D -10(fp):0x4111 -8(fp):0x4108 -6(fp):0x8000 -4(fp):0x0000 -2(fp):0x0010



word20 msp430_compute_modulator_bits(word20 sr, word20 r11, word20 r12, word20 r13, word20 r14, word20 r15, ptr16 & srOut, ptr16 & r4Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11 r12 r13 r14 r15 sr
// LiveOut: r15 r4 sp sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// Preserved:
msp430_compute_modulator_bits_entry:
// DataOut: pc r11 r12 r13 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l420E:
	word20 r12_46
	word20 r13_47
	word20 sp_48 = fn00005B04(r14, r15, r12, r13, out r12_46, out r13_47)
	Mem51[sp_48 + 2:word16] = r12_46
	Mem54[sp_48 + 4:word16] = r13_47
	word16 v20_55 = Mem54[sp_48 + 2:word16]
	Mem65[sp_48 - 2:word16] = sr
	word20 r14_67
	word20 r15_68
	word20 sp_69 = fn00005ADC(r14, r15, v20_55, 0x0000, r11, out r14_67, out r15_68)
	word20 r8_75 = r14_67 - r12
	word20 sr_72
	*srOut = Mem65[sp_69:word16]
	word20 r9_78 = r15_68 - r13 - (r8_75 <u 0x00000)
	branch Mem65[sp_69 + 2:word16] == 0x0000 l4274
// DataOut: pc r4 r5 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l426C:
	Mem181[Mem65[sp_69 + 2:word16]:word16] = Mem65[sp_69 + 4:word16]
// DataOut: pc r4 r5 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:r15 r4:r14 r5:r15 r6:r12 r7:r13 r10:r14 r15:<invalid> r14:<invalid> r12:<invalid> r13:0x0000 sr:<invalid> r8:<invalid> r9:<invalid> -24(fp):sr -22(fp):<invalid> -20(fp):r12 -18(fp):r13 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l4274:
	word20 r7_119 = 0x00
	word20 r10_120 = 0x0000
	word20 r11_121 = 0x0000
	word20 r6_122 = 0x00
// DataOut: pc r10 r11 r4 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:r15 r4:r14 r5:r15 r6:r12 r7:r13 r10:r14 r15:<invalid> r14:<invalid> r12:<invalid> r13:0x0000 sr:<invalid> r8:<invalid> r9:<invalid> -24(fp):sr -22(fp):<invalid> -20(fp):r12 -18(fp):r13 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l427C:
	r10_120 = r10_120 + r8_75
	word20 r14_100 = (r14 ^ 0xFFFF) + 0x0001
	r11_121 = r11_121 + r9_78 + (r10_120 <u 0x00000)
	branch r11_121 * 0x00002 + (r10_120 * 0x00002 <u 0x00000) - ((r15 ^ 0xFFFF) + (r14_100 <u 0x00000)) - (r10_120 * 0x00002 - r14_100 <u 0x00000) >= 0x00000 l42AE
// DataOut: pc r10 r11 r4 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r4:r14 r5:r15 r6:<invalid> r7:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> sr:<invalid> r8:<invalid> r9:<invalid> -24(fp):sr -22(fp):<invalid> -20(fp):r12 -18(fp):r13 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l429A:
	r10_120 = r10_120 + r14
	r11_121 = r11_121 + r15 + (r10_120 <u 0x00000)
	word20 r15_161 = 0x0001
	word20 r14_162 = r6_122
	branch r6_122 == 0x0000 l42AC
// DataOut: pc r10 r11 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r4:r14 r5:r15 r6:<invalid> r7:<invalid> r10:<invalid> r15:<invalid> r14:(r14 ^ 0xFFFF ^ 0xFFFF) + 0x0001 r12:<invalid> r13:<invalid> sr:<invalid> r8:<invalid> r9:<invalid> -24(fp):sr -22(fp):<invalid> -20(fp):r12 -18(fp):r13 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l42A6:
	r15_161 = r15_161 * 0x00002
	r14_162 = r14_162 - 0x0001
	branch r14_162 != 0x00000 l42A6
// DataOut: pc r10 r11 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r4:r14 r5:r15 r6:<invalid> r7:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> sr:<invalid> r8:<invalid> r9:<invalid> -24(fp):sr -22(fp):<invalid> -20(fp):r12 -18(fp):r13 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l42AC:
	r7_119 = r7_119 | r15_161
// DataOut: pc r10 r11 r4 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r4:r14 r5:r15 r6:<invalid> r7:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> sr:<invalid> r8:<invalid> r9:<invalid> -24(fp):sr -22(fp):<invalid> -20(fp):r12 -18(fp):r13 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l42AE:
	r6_122 = r6_122 + 0x01
	branch r6_122 >=u 0x08 l427C
// DataOut: pc r10 r11 r4 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r4:r14 r5:r15 r6:<invalid> r7:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> sr:<invalid> r8:<invalid> r9:<invalid> -24(fp):sr -22(fp):<invalid> -20(fp):r12 -18(fp):r13 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l42B4:
	word20 r15_125
	*r15Out = r7_119
	word20 r4_130
	*r4Out = Mem65[sp_69 + 0x0008:word16]
	return sp_69 + 0x001A
// DataOut: pc r15 r4 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r4:r14 r5:r15 r6:<invalid> r7:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> sr:<invalid> r8:<invalid> r9:<invalid> -24(fp):sr -22(fp):<invalid> -20(fp):r12 -18(fp):r13 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

msp430_compute_modulator_bits_exit:
// DataOut: r15 r4 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> sr:<invalid> r8:<invalid> r9:<invalid> -24(fp):sr -22(fp):<invalid> -20(fp):r12 -18(fp):r13 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11



word20 init_uart_isr(word20 pc, word20 sr, ptr16 & r8Out, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc sr
// LiveOut: r11 r8 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// Preserved:
init_uart_isr_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l42CC:
	byte v17_41 = Mem0[fp + 0x00000006:byte]
	Mem45[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	word20 sr_50
	word20 r4_51
	word20 r6_52
	word20 r7_53
	word20 r8_54
	word20 r9_55
	word20 r10_56
	word20 r11_57
	word20 r15_58
	xQueueCreate(pc, sr & ~0x0008, v17_41, out sr_50, out r4_51, out r6_52, out r7_53, out r8_54, out r9_55, out r10_56, out r11_57, out r15_58)
	Mem60[0x021C:ptr16] = r15_58
	word20 sr_63
	word20 r4_64
	word20 r6_65
	word20 r7_66
	word20 r8_67
	word20 r9_68
	word20 r10_69
	word20 r11_70
	word20 r15_71
	word20 sp_72 = xQueueCreate(pc, sr_50, r11_57, out sr_63, out r4_64, out r6_65, out r7_66, out r8_67, out r9_68, out r10_69, out r11_70, out r15_71)
	Mem73[0x021E:ptr16] = r15_71
	Mem74[0x0078:ptr16] = 0x01
	Mem75[0x0078:ptr16] = Mem74[0x0078:ptr16] | 0x0010
	Mem79[0x0079:ptr16] = r6_65 & 0x0030
	Mem81[sp_72 - 2:word16] = r4_64
	word20 r4_87
	word20 r15_88
	word20 sr_107
	word20 sp_89 = msp430_compute_modulator_bits(sr_63, r11_70, r9_68, r10_69, r7_66, r8_67, out sr_107, out r4_87, out r15_88)
	Mem92[0x007C:ptr16] = Mem81[r4_87:byte]
	Mem97[0x007D:ptr16] = __swpb(Mem92[r4_87:word16]) & 0xFF
	Mem98[0x007B:ptr16] = r15_88
	Mem99[0x0005:ptr16] = Mem98[0x0005:ptr16] | 0x0030
	Mem100[0x0078:ptr16] = 0x0010
	Mem101[0x001B:ptr16] = Mem100[0x001B:ptr16] | 0xFFC0
	Mem102[0x0001:ptr16] = Mem101[0x0001:ptr16] | 0x0030
	branch 0x0218 == 0x0000 l436E
// DataOut: pc sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l4366:
	Mem135[0x0218:ptr16] = Mem102[0x0218:ptr16] + 0xFFFF
	branch Mem135[0x0218:ptr16] != 0x0000 l436E
// DataOut: pc sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r12:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r15:<invalid> sr:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r5:<invalid> -18(fp):fp - 0x00000010 -14(fp):r4 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l436C:
	sr_107 = sr_107 | 0x0008
// DataOut: pc sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r12:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r15:<invalid> sr:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r5:<invalid> -18(fp):fp - 0x00000010 -14(fp):r4 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l436E:
	word20 r8_121
	*r8Out = Mem102[sp_89 + 0x000A:word16]
	word20 r11_130
	*r11Out = Mem102[sp_89 + 0x0010:word16]
	return sr_107
// DataOut: pc r11 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r12:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r15:<invalid> sr:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r5:<invalid> -18(fp):fp - 0x00000010 -14(fp):r4 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

init_uart_isr_exit:
// DataOut: r11 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r12:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r15:<invalid> sr:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r5:<invalid> -18(fp):fp - 0x00000010 -14(fp):r4 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11



void getchar(word20 pc, word20 sr, word20 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 sr
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// Preserved:
getchar_entry:
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4380:
	word20 r15_10
	x_getchar(pc, sr, r11, 0x0064, fp - 0x0002, wLoc04, out r15_10)
	branch r15_10 == 0x0000 l4396
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l4396:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r14:<invalid> r15:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid>

l4390:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r14:<invalid> r15:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid>

l4398:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r14:<invalid> r15:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid>

getchar_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r14:<invalid> r15:<invalid> r13:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid>



word20 uart_putchar_isr_mode(word20 r15, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15
// LiveOut: sp
// Trashed: sp
// Preserved:
uart_putchar_isr_mode_entry:
// DataOut: pc r11 r15 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l439C:
	Mem3[0x0200:ptr16] = r15
	return fp + 2
// DataOut: pc r11 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp

uart_putchar_isr_mode_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2



word20 putchar(word20 pc, word20 sr, word20 r11, word20 r15, ptr16 & srOut, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 r15 sr
// LiveOut: r11 sp sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// Preserved:
putchar_entry:
	*srOut = sr
// DataOut: pc r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l000043A2:
	word20 sp_13 = fp - 2
	word20 r11_12 = r15
	branch r15 == 0x000A l000043D6
// DataOut: pc r11 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l000043D6:
	sp_13 = putchar(pc, sr, r15, 0x000D, out sr, out r11_12)
// DataOut: pc r11 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 -2(fp):r11
// LocalsOut: Local -0002(0)

l000043AC:
	word20 r15_21
	branch 0x0200 != 0x00 l000043CA
// DataOut: pc r11 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> sr:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11
// LocalsOut: Local -0002(0)

l000043CA:
	word20 sr_47
	sp_13 = x_putchar(pc, sr, r11_12, 0x0064, r11_12, r11, out sr_47, out r15_21)
// DataOut: pc r15 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> sr:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

l000043B2:
	branch (0x0079 & 0x01) == 0x00 l000043B2
// DataOut: pc r11 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> sr:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

l000043B8:
	Mem41[0x007F:ptr16] = r11_12
	r15_21 = 0x0001
// DataOut: pc r15 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> sr:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

l000043BE:
	branch r15_21 == 0x0000 l000043C6
// DataOut: pc sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r14:<invalid> r15:<invalid> r13:<invalid> sr:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

l000043C6:
// DataOut: pc sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r14:<invalid> r15:<invalid> r13:<invalid> sr:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

l000043C2:
// DataOut: pc sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r14:<invalid> r15:<invalid> r13:<invalid> sr:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

l000043E0:
	word20 r11_29
	*r11Out = Mem0[sp_13:word16]
	return sp_13 + 4
// DataOut: pc r11 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r14:<invalid> r15:<invalid> r13:<invalid> sr:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

putchar_exit:
// DataOut: r11 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r14:<invalid> r15:<invalid> r13:<invalid> sr:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11



word20 x_getchar(word20 pc, word20 sr, word20 r11, word20 r14, word20 r15, word16 wArg00, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 r14 r15 sr
// LiveOut: r15 sp
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// Preserved:
x_getchar_entry:
// DataOut: pc r11 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l43E4:
	word20 r15_10
	xQueueReceive(pc, sr, r11, r14, r15, 0x021C, out r15_10)
	branch r15_10 == 0x0000 l43F8
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l43F8:
	word20 r15_21
	*r15Out = 0x0000
	return fp + 2
// DataOut: r15 sp
// DataOut (flags): 
// SymbolicIn: sp:fp r13:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid>

l43F4:
	word20 r15_17
	*r15Out = 0x0001
	return fp + 2
// DataOut: r15 sp
// DataOut (flags): 
// SymbolicIn: sp:fp r13:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid>

x_getchar_exit:
// DataOut: r15 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r13:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid>



word20 x_putchar(word20 pc, word20 sr, word20 r11, word20 r14, word20 r15, word16 wArg00, ptr16 & srOut, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 r14 r15 sr
// LiveOut: r15 sp sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// Preserved:
x_putchar_entry:
// DataOut: pc r11 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l000043FC:
	Mem13[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	word20 sr_11 = sr & ~0x0008
	*srOut = sr_11
	branch 0x0220 == 0x0001 l00004440
// DataOut: pc r11 r13 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(16)

l00004410:
	word20 r11_52
	word20 r15_53
	sr_11 = xQueueSend(pc, sr_11, r11, r14, fp - 0x0002, 0x021E, out r11_52, out r15_53)
	*srOut = sr_11
	branch 0x0220 == 0x0001 l00004430
// DataOut: pc r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r13:r14 sr:sr & ~0x0008 -2(fp):r15
// LocalsOut: fp(20) Local -0002(16)

l00004430:
	branch r15_53 != 0x0001 l00004420
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r13:<invalid> sr:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r15
// LocalsOut: fp(20) Local -0002(16)

l00004434:
	word20 r15_62
	*srOut = xQueueReceive(pc, sr_11, r11_52, 0x0000, fp - 0x0002, 0x021E, out r15_62)
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r13:<invalid> sr:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r15
// LocalsOut: fp(20) Local -0002(16)

l00004440:
	Mem46[0x0220:ptr16] = 0x0000
	Mem48[0x007F:ptr16] = r15
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r13:<invalid> sr:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r15
// LocalsOut: fp(20)

l00004420:
	branch 0x0218 == 0x0000 l0000444A
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r13:<invalid> sr:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r15
// LocalsOut: fp(20)

l00004426:
	Mem35[0x0218:ptr16] = Mem13[0x0218:ptr16] + 0xFFFF
	branch Mem35[0x0218:ptr16] != 0x0000 l0000444A
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r13:<invalid> sr:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r15
// LocalsOut: fp(20)

l0000442C:
	word20 sr_38
	*srOut = sr_11 | 0x0008
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r13:<invalid> sr:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r15
// LocalsOut: fp(20)

l0000444A:
	word20 r15_27
	*r15Out = 0x0001
	return fp + 2
// DataOut: pc r15 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r13:<invalid> sr:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r15

x_putchar_exit:
// DataOut: r15 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r13:<invalid> sr:<invalid> r14:<invalid> r15:0x0001 r11:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r15



void vRxISR(word20 pc, word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc sr
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
vRxISR_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4450:
	word20 sr_24
	word20 r15_25
	xQueueSendFromISR(sr, fp - 0x0000000A, 0x021C, out sr_24, out r15_25)
	branch r15_25 == 0x0000 l4474
// DataOut: pc sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l4470:
	word20 r4_62
	word20 r5_63
	word20 r6_64
	word20 r7_65
	word20 r8_66
	word20 r9_67
	word20 r10_68
	word20 r11_69
	word20 r12_70
	word20 r13_71
	word20 r14_72
	vPortYield(pc, sr_24, out r4_62, out r5_63, out r6_64, out r7_65, out r8_66, out r9_67, out r10_68, out r11_69, out r12_70, out r13_71, out r14_72)
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r12:<invalid> sr:<invalid> -10(fp):007E -8(fp):r12 -6(fp):r13 -4(fp):r14 -2(fp):r15

l4474:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> sr:<invalid> r12:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -10(fp):007E -8(fp):r12 -6(fp):r13 -4(fp):r14 -2(fp):r15

vRxISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r13:(word16) r13 r14:<invalid> r15:(word16) r15 r12:(word16) r12 sr:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -10(fp):007E -8(fp):r12 -6(fp):r13 -4(fp):r14 -2(fp):r15



void vTxISR(word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  sr
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15 sr
// Preserved: sp
vTxISR_entry:
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4480:
	word20 r15_21
	word20 sp_22 = xQueueReceiveFromISR(sr, fp - 0x0000000A, 0x021E, out r15_21)
	branch r15_21 == 0x0001 l44A2
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l44A2:
	Mem42[0x007F:ptr16] = Mem0[sp_22 + 2:byte]
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> sr:<invalid> -8(fp):r12 -6(fp):r13 -4(fp):r14 -2(fp):r15

l449C:
	Mem40[0x0220:ptr16] = 0x0001
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> sr:<invalid> -8(fp):r12 -6(fp):r13 -4(fp):r14 -2(fp):r15

l44A8:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> sr:<invalid> -8(fp):r12 -6(fp):r13 -4(fp):r14 -2(fp):r15

vTxISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r13:<invalid> r14:<invalid> r15:(word16) r15 r12:(word16) r12 r11:<invalid> r10:<invalid> sr:<invalid> -8(fp):r12 -6(fp):r13 -4(fp):r14 -2(fp):r15



word20 xTaskCreate(word20 pc, word20 sr, word20 r11, ptr16 & srOut, ptr16 & r11Out, ptr16 & r12Out, ptr16 & r13Out, ptr16 & r14Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 sr
// LiveOut: r11 r12 r13 r14 r15 sp sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// Preserved:
xTaskCreate_entry:
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l000044B4:
	word20 r10_122
	word20 r5_43
	word20 r6_44
	word20 r7_45
	word20 r8_46
	word20 r9_47
	word20 r10_48
	word20 r12_49
	word20 r13_50
	word20 r14_51
	word20 r15_52
	word20 sr_148
	word20 sp_181 = prvAllocateTCBAndStack(pc, sr, fp + 0x00000002, out sr_148, out r5_43, out r6_44, out r7_45, out r8_46, out r9_47, out r10_48, out r12_49, out r13_50, out r14_51, out r15_52)
	word20 r11_134 = r15_52
	branch r15_52 == 0x0000 l000045A0
// DataOut: pc r10 r11 r12 r13 r14 r15 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l000045A0:
	r10_122 = 0xFFFF
// DataOut: pc r10 r11 r12 r13 r14 r5 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r12:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l000044E2:
	r11_134 = prvInitialiseTCBVariables(r15_52, r8_46, r9_47, r10_48, r15_52)
	Mem147[r11_134:word16] = pxPortInitialiseStack(r7_45, r6_44, Mem0[r11_134 + 36:word16] * 0x00002 + Mem0[r11_134 + 2:word16] - 0x0002, r11)
	Mem149[0x0218:ptr16] = Mem147[0x0218:ptr16] + 0x0001
	Mem151[0x0206:ptr16] = Mem149[0x0206:ptr16] + 0x0001
	sr_148 = sr_148 & ~0x0008
	*srOut = sr_148
	branch 0x0206 == 0x0001 l00004596
// DataOut: pc r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r12:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004596:
	Mem199[0x0202:ptr16] = r11_134
	r11_134 = prvInitialiseTaskLists()
// DataOut: pc r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004514:
	branch 0x020E != 0x0000 l0000452A
// DataOut: pc r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l0000451A:
	branch r8_46 >=u Mem151[0x0208:word16] l0000452A
// DataOut: pc r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004526:
	Mem198[0x0202:ptr16] = r11_134
// DataOut: pc r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l0000452A:
	word16 v25_157 = Mem151[r11_134 + 6:word16]
	branch 0x020A <u v25_157 l00004538
// DataOut: pc r11 r15 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004534:
	Mem190[0x020A:ptr16] = v25_157
// DataOut: pc r11 r15 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004538:
	Mem163[r11_134 + 4:word16] = 0x0214
	Mem164[0x0214:ptr16] = Mem163[0x0214:ptr16] + 0x0001
	Mem168[r11_134 + 8:word16] = 0x0000
	branch 0x020C <u v25_157 l00004550
// DataOut: pc r11 r15 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l0000454C:
	Mem189[0x020C:ptr16] = v25_157
// DataOut: pc r11 r15 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004550:
	word20 r14_172 = r11_134 + 0x0008
	*r14Out = r14_172
	word20 r12_179
	word20 r13_180
	sp_181 = vListInsertEnd(r14_172, v25_157 * 0x00010 + 0x0222, r11, out r12_179, out r13_180)
	r10_122 = 0x0001
	branch 0x0218 == 0x0000 l00004574
// DataOut: pc r10 r11 r12 r13 r14 r5 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l0000456C:
	Mem185[0x0218:ptr16] = Mem168[0x0218:ptr16] + 0xFFFF
	branch Mem185[0x0218:ptr16] != 0x0000 l00004574
// DataOut: pc r10 r11 r12 r13 r14 r5 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:0x0001 r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004572:
	*srOut = sr_148 | 0x0008
// DataOut: pc r10 r11 r12 r13 r14 r5 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:0x0001 r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004574:
	branch r10_122 != 0x0001 l000045A4
// DataOut: pc r10 r11 r12 r13 r14 r5 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004578:
	branch r5_43 == 0x0000 l00004580
// DataOut: pc r10 r11 r12 r13 r14 r5 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l0000457C:
	Mem130[r5_43:word16] = r11_134
// DataOut: pc r10 r12 r13 r14 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004580:
	branch 0x020E == 0x0000 l000045A4
// DataOut: pc r10 r12 r13 r14 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004586:
	branch Mem0[0x0208:word16] <u r8_46 l000045A4
// DataOut: pc r10 r12 r13 r14 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004590:
	word20 r4_116
	word20 r5_117
	word20 r6_118
	word20 r7_119
	word20 r8_120
	word20 r9_121
	word20 r11_123
	word20 r12_124
	word20 r13_125
	word20 r14_126
	word20 sr_127
	*srOut = vPortYield(pc, sr_148, out r4_116, out r5_117, out r6_118, out r7_119, out r8_120, out r9_121, out r10_122, out r11_123, out r12_124, out r13_125, out r14_126)
// DataOut: pc r10 r12 r13 r14 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:0202 r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l000045A4:
	word20 sp_80 = sp_181 + 2
	word20 r15_78
	*r15Out = r10_122
	word20 r11_99
	*r11Out = Mem0[sp_80 + 10:word16]
	return sp_80 + 14
// DataOut: pc r11 r12 r13 r14 r15 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

xTaskCreate_exit:
// DataOut: r11 r12 r13 r14 r15 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> r15:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> sr:<invalid> r4:<invalid> -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11



void vTaskDelete(word20 pc, word20 sr, word20 r11, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 r15 sr
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
vTaskDelete_entry:
// DataOut: pc r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l45B6:
	Mem16[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	word20 sr_14 = sr & ~0x0008
	word20 r11_18 = r15
	branch r15 == 0x0000 l460C
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(20)

l460C:
	r11_18 = 0x0202
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 sr:sr & ~0x0008 r11:r15 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l45CA:
	word20 r10_23 = r11_18 + 0x0008
	vListRemove(r10_23, wLoc08)
	branch Mem16[r11_18 + 26:word16] != 0x0000 l4600
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 sr:sr & ~0x0008 r11:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l4600:
	vListRemove(r11_18 + 0x0012, r11)
// DataOut: pc r10 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:r15 sr:sr & ~0x0008 r11:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l45DA:
	word20 r12_33
	word20 r13_34
	vListInsertEnd(r10_23, 0x0296, r11, out r12_33, out r13_34)
	Mem36[0x0204:ptr16] = Mem16[0x0204:ptr16] + 0x0001
	branch 0x0218 == 0x0000 l45F6
// DataOut: pc r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:r15 sr:sr & ~0x0008 r11:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

l45EE:
	Mem81[0x0218:ptr16] = Mem36[0x0218:ptr16] + 0xFFFF
	branch Mem81[0x0218:ptr16] != 0x0000 l45F6
// DataOut: pc r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:r15 sr:sr & ~0x0008 r11:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

l45F4:
	sr_14 = sr_14 | 0x0008
// DataOut: pc r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:r15 sr:sr & ~0x0008 r11:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

l45F6:
	branch r15 != 0x0000 l4612
// DataOut: pc sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:r15 sr:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

l45FA:
	word20 r4_69
	word20 r5_70
	word20 r6_71
	word20 r7_72
	word20 r8_73
	word20 r9_74
	word20 r10_75
	word20 r11_76
	word20 r12_77
	word20 r13_78
	word20 r14_79
	vPortYield(pc, sr_14, out r4_69, out r5_70, out r6_71, out r7_72, out r8_73, out r9_74, out r10_75, out r11_76, out r12_77, out r13_78, out r14_79)
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:r15 sr:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

l4612:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> sr:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

vTaskDelete_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r9:<invalid> sr:<invalid> r11:(word16) r10 r10:(word16) r9 r15:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11



word20 vTaskDelayUntil(word20 pc, word20 sr, word20 r11, word20 r14, word20 r15, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 r14 r15 sr
// LiveOut: r11 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// Preserved:
vTaskDelayUntil_entry:
// DataOut: pc r11 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000461A:
	word20 sr_18 = vTaskSuspendAll(sr, wLoc08)
	word16 v8_20 = Mem0[r15:word16]
	word20 r10_111 = 0x0000
	word20 r11_22 = r14 + v8_20
	branch 0x0208 <u v8_20 l00004690
// DataOut: pc r10 r11 r15 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(20)

l00004690:
	branch r11_22 >=u v8_20 l0000463E
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:r15 r11:<invalid> r10:0x0000 r15:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004694:
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:r15 r11:<invalid> r10:0x0000 r15:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004634:
	branch r11_22 <u v8_20 l00004640
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:r15 r11:<invalid> r10:0x0000 r15:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004638:
	branch 0x0208 <u r11_22 l00004640
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:r15 r11:<invalid> r10:0x0000 r15:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l0000463E:
	r10_111 = 0x0001
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:r15 r11:<invalid> r10:0x0000 r15:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004640:
	Mem29[r15:word16] = r11_22
	branch r10_111 != 0x0000 l00004656
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:r15 r11:<invalid> r10:<invalid> r15:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004656:
	word20 r14_102
	word20 r15_103
	vListRemove(0x020A, r11)
	Mem90[0x020A:word16] = r11_22
	branch r11_22 <u 0x0208 l00004682
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:r15 r11:<invalid> r10:<invalid> r15:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004682:
	r14_102 = 0x020A
	r15_103 = 0x0282
// DataOut: pc r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:r15 r11:<invalid> r10:<invalid> r15:0208 r14:<invalid> r13:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004670:
	r14_102 = 0x020A
	r15_103 = 0x0284
// DataOut: pc r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:r15 r11:<invalid> r10:<invalid> r15:0208 r14:<invalid> r13:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l0000467C:
	vListInsert(r14_102, r15_103, r11, out r11_22)
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:r15 r11:<invalid> r10:<invalid> r15:<invalid> r14:020A r13:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004648:
	word20 r4_36
	word20 r5_37
	word20 r6_38
	word20 r7_39
	word20 r8_40
	word20 r9_41
	word20 r10_42
	word20 r11_43
	word20 r12_44
	word20 r13_45
	word20 r14_46
	word20 r15_47
	word20 sr_35
	word20 sp_48 = xTaskResumeAll(pc, sr_18, r11_22, out sr_35, out r4_36, out r5_37, out r6_38, out r7_39, out r8_40, out r9_41, out r10_42, out r11_43, out r12_44, out r13_45, out r14_46, out r15_47)
	branch r15_47 != 0x0000 l00004696
// DataOut: pc sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:r15 r11:<invalid> r10:<invalid> r15:<invalid> r14:020A r13:<invalid> r12:<invalid> sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004650:
	word20 r4_72
	word20 r5_73
	word20 r6_74
	word20 r7_75
	word20 r8_76
	word20 r9_77
	word20 r10_78
	word20 r11_79
	word20 r12_80
	word20 r13_81
	word20 r14_82
	sr_35 = vPortYield(pc, sr_35, out r4_72, out r5_73, out r6_74, out r7_75, out r8_76, out r9_77, out r10_78, out r11_79, out r12_80, out r13_81, out r14_82)
// DataOut: pc sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r8:<invalid> sr:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004696:
	word20 r11_68
	*r11Out = Mem29[sp_48 + 4:word16]
	return sr_35
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> sr:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

vTaskDelayUntil_exit:
// DataOut: r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> sr:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11



void vTaskDelay(word20 pc, word20 sr, word20 r11, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 r15 sr
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// Preserved:
vTaskDelay_entry:
// DataOut: pc r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l469E:
	word20 r15_23 = 0x0000
	branch r15 != 0x0000 l46B2
// DataOut: pc r11 r15 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(20)

l46B2:
	word20 r14_104
	word20 r15_105
	word20 sr_70 = vTaskSuspendAll(sr, wLoc04)
	vListRemove(0x020A, r11)
	word20 r11_71 = r15 + 0x0208
	Mem78[0x020A:word16] = r11_71
	branch r11_71 <u 0x0208 l46EA
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r15:0x0000 -2(fp):r11
// LocalsOut: Local -0002(20)

l46EA:
	r14_104 = 0x020A
	r15_105 = 0x0282
// DataOut: pc r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:r15 + 0x0208 r15:0208 sr:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l46D4:
	r14_104 = 0x020A
	r15_105 = 0x0284
// DataOut: pc r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:r15 + 0x0208 r15:0208 sr:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: Local -0002(20)

l46E0:
	word20 r11_85
	vListInsert(r14_104, r15_105, r11, out r11_85)
	word20 r4_88
	word20 r5_89
	word20 r6_90
	word20 r7_91
	word20 r8_92
	word20 r9_93
	word20 r10_94
	word20 r11_95
	word20 r12_96
	word20 r13_97
	word20 r14_98
	xTaskResumeAll(pc, sr_70, r11_85, out sr, out r4_88, out r5_89, out r6_90, out r7_91, out r8_92, out r9_93, out r10_94, out r11_95, out r12_96, out r13_97, out r14_98, out r15_23)
// DataOut: pc r15 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:r15 + 0x0208 r15:<invalid> r14:020A sr:<invalid> r13:<invalid> -2(fp):r11

l46A8:
	branch r15_23 != 0x0000 l46F8
// DataOut: pc sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> r14:<invalid> sr:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

l46AC:
	word20 r4_57
	word20 r5_58
	word20 r6_59
	word20 r7_60
	word20 r8_61
	word20 r9_62
	word20 r10_63
	word20 r11_64
	word20 r12_65
	word20 r13_66
	word20 r14_67
	vPortYield(pc, sr, out r4_57, out r5_58, out r6_59, out r7_60, out r8_61, out r9_62, out r10_63, out r11_64, out r12_65, out r13_66, out r14_67)
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> r14:<invalid> sr:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

l46F8:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> sr:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

vTaskDelay_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> sr:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11



word20 vTaskStartScheduler(word20 pc, word20 sr, word20 r11, ptr16 & srOut, ptr16 & r11Out, ptr16 & r12Out, ptr16 & r13Out, ptr16 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 sr
// LiveOut: r11 r12 r13 r14 sp sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// Preserved:
vTaskStartScheduler_entry:
	*srOut = sr
	*r12Out = r12
	*r13Out = r13
	*r14Out = r14
	*r11Out = r11
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4702:
	word20 sp_1 = fp
	branch 0x0202 != 0x0000 l470A
// DataOut: pc r11 r12 r13 r14 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l470A:
	word20 sr_40
	word20 r11_41
	word20 r12_42
	word20 r13_43
	word20 r14_44
	word20 r15_45
	sp_1 = xTaskCreate(pc, sr, r11, out sr_40, out r11_41, out r12_42, out r13_43, out r14_44, out r15_45) + 0x0004
	branch r15_45 != 0x0001 l4708
// DataOut: pc r11 r12 r13 r14 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l4726:
	Mem51[0x020E:ptr16] = 0x0001
	Mem52[0x0208:ptr16] = 0x0000
	word20 sr_50
	*srOut = sr_40 & ~0x0008
	word20 r12_53
	word20 r13_54
	word20 r14_55
	word20 r11_56
	*r11Out = xPortStartScheduler(pc, out r12_53, out r13_54, out r14_55)
// DataOut: r11 r12 r13 r14 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r6:<invalid> r9:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r5:<invalid> sr:<invalid> r4:<invalid> -4(fp):0x0000 -2(fp):0x0000

l4708:
	return sp_1 + 2
// DataOut: r11 r12 r13 r14 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> sr:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -4(fp):0x0000 -2(fp):0x0000

vTaskStartScheduler_exit:
// DataOut: r11 r12 r13 r14 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r12:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> sr:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -4(fp):0x0000 -2(fp):0x0000



void vTaskEndScheduler(word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  sr
// LiveOut:
// Trashed: sp sr
// Preserved:
vTaskEndScheduler_entry:
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l4736:
	Mem4[0x020E:ptr16] = 0x0000
	vPortEndScheduler(wLoc02)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

vTaskEndScheduler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> sr:sr & ~0x0008



word20 vTaskSuspendAll(word20 sr, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  sr
// LiveOut: sr
// Trashed: VNZC sp sr
// Preserved:
vTaskSuspendAll_entry:
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004742:
	Mem5[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	Mem7[0x0210:ptr16] = Mem5[0x0210:ptr16] + 0x0001
	word20 sr_13 = sr & ~0x0008
	branch 0x0218 == 0x0000 l0000475A
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004752:
	Mem17[0x0218:ptr16] = Mem7[0x0218:ptr16] + 0xFFFF
	branch Mem17[0x0218:ptr16] != 0x0000 l0000475A
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008
// LocalsOut: fp(20)

l00004758:
	sr_13 = sr_13 | 0x0008
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008
// LocalsOut: fp(20)

l0000475A:
	return sr_13
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:<invalid>

vTaskSuspendAll_exit:
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 sr:<invalid>



word20 xTaskResumeAll(word20 pc, word20 sr, word20 r11, ptr16 & srOut, ptr16 & r4Out, ptr16 & r5Out, ptr16 & r6Out, ptr16 & r7Out, ptr16 & r8Out, ptr16 & r9Out, ptr16 & r10Out, ptr16 & r11Out, ptr16 & r12Out, ptr16 & r13Out, ptr16 & r14Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 sr
// LiveOut: r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// Preserved:
xTaskResumeAll_entry:
	*r4Out = r4
	*r5Out = r5
	*r6Out = r6
	*r7Out = r7
	*r14Out = r14
	*r12Out = r12
	*r13Out = r13
// DataOut: pc r11 r12 r13 r14 r4 r5 r6 r7 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000475C:
	Mem18[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	Mem20[0x0210:ptr16] = Mem18[0x0210:ptr16] + 0xFFFF
	word20 sp_11 = fp - 8
	word20 r8_14 = 0x0000
	word20 sr_156 = sr & ~0x0008
	*srOut = sr_156
	branch Mem20[0x0210:ptr16] != 0x0000 l000047EA
// DataOut: pc r12 r13 r14 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(20)

l00004772:
	branch 0x0206 == 0x0000 l000047EA
// DataOut: pc r12 r13 r14 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:0x0000 sr:sr & ~0x0008 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004778:
	word20 r9_131 = 0x0000
// DataOut: pc r12 r13 r14 r4 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r8:0x0000 sr:sr & ~0x0008 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l0000477A:
	word20 r11_167
	branch 0x0286 == 0x0000 l0000480E
// DataOut: pc r12 r13 r14 r4 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:0202 r11:<invalid> r14:<invalid> r13:<invalid> r10:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l0000480E:
	r11_167 = 0x0000
// DataOut: pc r11 r12 r13 r14 r4 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:0202 r11:<invalid> r14:<invalid> r13:<invalid> r10:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004780:
	r11_167 = Mem20[Mem20[0x028A:word16] + 6:word16]
// DataOut: pc r11 r12 r13 r14 r4 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:0202 r11:<invalid> r14:<invalid> r13:<invalid> r10:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l0000478C:
	branch r11_167 == 0x0000 l000047D8
// DataOut: pc r11 r12 r13 r14 r4 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r10:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l000047D8:
	branch 0x0212 == 0x0000 l000047E6
// DataOut: pc r11 r12 r13 r14 r4 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r10:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l000047DE:
	branch 0x0212 != 0x0000 l00004802
// DataOut: pc r11 r12 r13 r14 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r10:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004802:
	word20 r12_169
	word20 r13_170
	word20 r14_171
	sp_11 = vTaskIncrementTick(r11_167, out r11_167, out r12_169, out r13_170, out r14_171)
	Mem173[0x0212:ptr16] = Mem20[0x0212:ptr16] + 0xFFFF
	branch Mem173[0x0212:ptr16] != 0x0000 l00004802
// DataOut: pc r11 r12 r13 r14 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l0000480C:
// DataOut: pc r12 r13 r14 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l000047E4:
	r9_131 = 0x0001
// DataOut: pc r12 r13 r14 r4 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l000047E6:
	branch r9_131 == 0x0001 l000047FA
// DataOut: pc r12 r13 r14 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l000047FA:
	word20 r4_145
	word20 r5_146
	word20 r6_147
	word20 r7_148
	word20 r9_150
	word20 r10_151
	word20 r11_152
	word20 r12_153
	word20 r13_154
	word20 r14_155
	*srOut = vPortYield(pc, sr_156, out r4_145, out r5_146, out r6_147, out r7_148, out r8_14, out r9_150, out r10_151, out r11_152, out r12_153, out r13_154, out r14_155)
// DataOut: pc r12 r13 r14 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l000047EA:
	branch 0x0218 == 0x0000 l00004812
// DataOut: pc r12 r13 r14 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> sr:<invalid> r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r10:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l000047F0:
	Mem80[0x0218:ptr16] = Mem20[0x0218:ptr16] + 0xFFFF
	branch Mem80[0x0218:ptr16] != 0x0000 l00004812
// DataOut: pc r12 r13 r14 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> sr:<invalid> r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r10:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l000047F6:
	word20 sr_83
	*srOut = sr_156 | 0x0008
// DataOut: pc r12 r13 r14 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> sr:<invalid> r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r10:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004812:
	word20 sp_54 = sp_11 + 2
	word20 r15_52
	*r15Out = r8_14
	word20 r8_55
	*r8Out = Mem20[sp_11:word16]
	word20 r9_58
	*r9Out = Mem20[sp_54:word16]
	word20 r10_61
	*r10Out = Mem20[sp_54 + 2:word16]
	word20 r11_64
	*r11Out = Mem20[sp_54 + 4:word16]
	return sp_54 + 8
// DataOut: pc r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> sr:<invalid> r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r10:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

xTaskResumeAll_exit:
// DataOut: r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> sr:<invalid> r15:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004790:
	vListRemove(r11_167 + 0x0012, r11)
	word20 r10_106 = r11_167 + 0x0008
	vListRemove(r10_106, r11)
	Mem111[r11_167 + 8:word16] = 0x0000
	word16 v14_112 = Mem111[r11_167 + 6:word16]
	branch 0x020C <u v14_112 l000047B6
// DataOut: pc r10 r11 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r10:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l000047B2:
	Mem132[0x020C:ptr16] = v14_112
// DataOut: pc r10 r11 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r10:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l000047B6:
	word20 r12_123
	word20 r13_124
	sp_11 = vListInsertEnd(r10_106, v14_112 * 0x00010 + 0x0222, r11, out r12_123, out r13_124)
	word20 r14_122
	*r14Out = r10_106
	branch Mem111[0x0208:word16] <u Mem111[r11_167 + 6:word16] l0000477A
// DataOut: pc r12 r13 r14 r4 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r10:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l000047D4:
	r9_131 = 0x0001
// DataOut: pc r12 r13 r14 r4 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x0000 sr:sr & ~0x0008 r9:<invalid> r15:0202 r11:<invalid> r14:<invalid> r13:<invalid> r10:<invalid> r12:<invalid> -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)



word20 xTaskGetTickCount(word20 sr, word16 wArg00, ptr16 & srOut, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  sr
// LiveOut: r15 sp sr
// Trashed: VNZC r15 sp sr
// Preserved:
xTaskGetTickCount_entry:
// DataOut: pc r10 r11 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000481E:
	Mem5[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	word20 sr_3 = sr & ~0x0008
	*srOut = sr_3
	word20 r15_8
	*r15Out = 0x0208
	branch Mem5[0x0218:ptr16] == 0x0000 l00004832
// DataOut: pc r10 r11 r15 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000482A:
	Mem17[0x0218:ptr16] = Mem5[0x0218:ptr16] + 0xFFFF
	branch Mem17[0x0218:ptr16] != 0x0000 l00004832
// DataOut: pc r10 r11 r15 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r15:0208
// LocalsOut: fp(20)

l00004830:
	word20 sr_20
	*srOut = sr_3 | 0x0008
// DataOut: pc r10 r11 r15 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r15:0208
// LocalsOut: fp(20)

l00004832:
	return fp + 2
// DataOut: pc r10 r11 r15 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:<invalid> r15:0208

xTaskGetTickCount_exit:
// DataOut: r15 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 sr:<invalid> r15:0208



void uxTaskGetNumberOfTasks(word20 sr, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  sr
// LiveOut:
// Trashed: VNZC r15 sp sr
// Preserved:
uxTaskGetNumberOfTasks_entry:
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4834:
	Mem5[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	branch Mem5[0x0218:ptr16] == 0x0000 l4848
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4840:
	Mem15[0x0218:ptr16] = Mem5[0x0218:ptr16] + 0xFFFF
	branch Mem15[0x0218:ptr16] != 0x0000 l4848
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r15:0206
// LocalsOut: fp(20)

l4846:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r15:0206
// LocalsOut: fp(20)

l4848:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp sr:<invalid> r15:0206

uxTaskGetNumberOfTasks_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 sr:<invalid> r15:0206



word20 vTaskIncrementTick(word20 r11, ptr16 & r11Out, ptr16 & r12Out, ptr16 & r13Out, ptr16 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11
// LiveOut: r11 r12 r13 r14 sp
// Trashed: VNZC r10 r11 r12 r13 r14 r15 sp
// Preserved:
vTaskIncrementTick_entry:
	*r14Out = r14
	*r12Out = r12
	*r13Out = r13
// DataOut: pc r11 r12 r13 r14 r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000484A:
	word20 sp_17 = fp - 4
	branch 0x0210 != 0x0000 l000048D0
// DataOut: pc r12 r13 r14 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l000048D0:
	Mem94[0x0212:ptr16] = Mem0[0x0212:ptr16] + 0x0001
// DataOut: pc r12 r13 r14 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 -4(fp):r10 -2(fp):r11

l00004854:
	Mem31[0x0208:ptr16] = Mem0[0x0208:ptr16] + 0x0001
	branch Mem31[0x0208:ptr16] != 0x0000 l00004868
// DataOut: pc r12 r13 r14 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l0000485A:
	Mem92[0x0282:ptr16] = 0x0284
	Mem93[0x0284:ptr16] = 0x0282
// DataOut: pc r12 r13 r14 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004868:
	word20 r11_49
	word20 r15_45 = 0x0282
	branch Mem31[r15_45:word16] == 0x0000 l000048CC
// DataOut: pc r12 r13 r14 r15 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l000048CC:
	r11_49 = 0x0000
// DataOut: pc r11 r12 r13 r14 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:0282 r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004872:
	r11_49 = Mem31[Mem31[Mem31[r15_45 + 2:word16] + 2:word16] + 6:word16]
// DataOut: pc r11 r12 r13 r14 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:0282 r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l0000487E:
	branch r11_49 == 0x0000 l000048D4
// DataOut: pc r11 r12 r13 r14 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004882:
	branch 0x0208 >=u Mem31[r11_49 + 8:word16] l000048D4
// DataOut: pc r11 r12 r13 r14 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l000048D4:
	word20 sp_20 = sp_17 + 2
	word20 r11_24
	*r11Out = Mem0[sp_20:word16]
	return sp_20 + 4
// DataOut: pc r11 r12 r13 r14 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

vTaskIncrementTick_exit:
// DataOut: r11 r12 r13 r14 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r11:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

l0000488A:
	word20 r10_57 = r11_49 + 0x0008
	vListRemove(r10_57, r11)
	branch Mem31[r11_49 + 26:word16] != 0x0000 l000048C0
// DataOut: pc r10 r11 r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l000048C0:
	vListRemove(r11_49 + 0x0012, r11)
// DataOut: pc r10 r11 r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l0000489A:
	Mem65[r11_49 + 8:word16] = 0x0000
	word16 v19_66 = Mem65[r11_49 + 6:word16]
	branch 0x020C <u v19_66 l000048AC
// DataOut: pc r10 r15 r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l000048A8:
	Mem80[0x020C:ptr16] = v19_66
// DataOut: pc r10 r15 r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l000048AC:
	word20 r14_76
	*r14Out = r10_57
	word20 r12_77
	word20 r13_78
	sp_17 = vListInsertEnd(r10_57, v19_66 * 0x00010 + 0x0222, r11, out r12_77, out r13_78)
// DataOut: pc r12 r13 r14 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)



word20 vTaskPlaceOnEventList(word20 r11, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11 r15
// LiveOut: r11
// Trashed: VNZC r11 r12 r13 r14 r15 sp
// Preserved:
vTaskPlaceOnEventList_entry:
// DataOut: pc r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l000048DA:
	word20 r15_31
	word20 r14_30
	word20 r11_15
	vListInsert(0x0214, r15, wLoc04, out r11_15)
	vListRemove(0x020A, r11)
	word20 r11_17 = r11_15 + 0x0208
	Mem25[0x020A:word16] = r11_17
	branch r11_17 <u 0x0208 l0000491C
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l0000491C:
	r14_30 = 0x020A
	r15_31 = 0x0282
// DataOut: pc r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r13:<invalid> r11:<invalid> r15:0208 r14:<invalid> r12:<invalid> -2(fp):r11
// LocalsOut: Local -0002(0)

l0000490E:
	r14_30 = 0x020A
	r15_31 = 0x0284
// DataOut: pc r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r13:<invalid> r11:<invalid> r15:0208 r14:<invalid> r12:<invalid> -2(fp):r11
// LocalsOut: Local -0002(0)

l00004928:
	word20 r11_32
	return Mem25[vListInsert(r14_30, r15_31, r11, out r11_32):word16]
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r13:<invalid> r11:<invalid> r15:<invalid> r14:020A r12:<invalid> -2(fp):r11

vTaskPlaceOnEventList_exit:
// DataOut: r11
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r13:<invalid> r11:<invalid> r15:<invalid> r14:020A r12:<invalid> -2(fp):r11



word20 xTaskRemoveFromEventList(word20 r11, word20 r15, ptr16 & r11Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11 r15
// LiveOut: r10 r11 r15
// Trashed: VNZC r10 r11 r12 r13 r14 r15
// Preserved: sp
xTaskRemoveFromEventList_entry:
// DataOut: pc r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004930:
	word20 r10_13
	branch Mem0[r15:word16] == 0x0000 l000049A2
// DataOut: pc r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l000049A2:
	r10_13 = 0x0000
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l0000493A:
	r10_13 = Mem0[Mem0[Mem0[r15 + 2:word16] + 2:word16] + 6:word16]
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004946:
	word20 r15_22
	word20 r14_21
	vListRemove(r10_13 + 0x0012, wLoc06)
	branch 0x0210 != 0x0000 l0000499A
// DataOut: pc r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:<invalid> r10:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l0000499A:
	r14_21 = r10_13 + 0x0012
	r15_22 = 0x0286
// DataOut: pc r10 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004958:
	vListRemove(r10_13 + 0x0008, r11)
	Mem50[r10_13 + 8:word16] = 0x0000
	word16 v13_51 = Mem50[r10_13 + 6:word16]
	branch 0x020C <u v13_51 l00004974
// DataOut: pc r10 r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004970:
	Mem62[0x020C:ptr16] = v13_51
// DataOut: pc r10 r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004974:
	r15_22 = v13_51 * 0x00010 + 0x0222
	r14_21 = r10_13 + 0x0008
// DataOut: pc r10 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004982:
	word20 r12_24
	word20 r13_25
	word20 sp_26 = vListInsertEnd(r14_21, r15_22, r11, out r12_24, out r13_25)
	branch Mem0[0x0208:word16] <u Mem0[r10_13 + 6:word16] l00004996
// DataOut: pc sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> -4(fp):r10 -2(fp):r11

l00004996:
	word20 r15_44
	*r15Out = 0x0000
// DataOut: pc r15 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:0202 r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

l00004992:
	word20 r15_43
	*r15Out = 0x0001
// DataOut: pc r15 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:0202 r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

l000049A6:
	word20 r11_38
	*r11Out = Mem0[sp_26 + 2:word16]
	return Mem0[sp_26:word16]
// DataOut: pc r10 r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

xTaskRemoveFromEventList_exit:
// DataOut: r10 r11 r15
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r10:<invalid> r11:(word16) r10 r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11



void prvIdleTask(word20 pc, word20 sr, word20 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 sr
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvIdleTask_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

prvIdleTask_entry:
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l49AC:
	sr = prvCheckTasksWaitingTermination(pc, sr, r11, out r11)
	branch 0x0222 >=u 0x0002 l49AC
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> sr:<invalid> r14:<invalid> r12:<invalid> r15:<invalid> r13:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid>

l49B6:
	word20 r4_31
	word20 r5_32
	word20 r6_33
	word20 r7_34
	word20 r8_35
	word20 r9_36
	word20 r10_37
	word20 r12_39
	word20 r13_40
	word20 r14_41
	sr = vPortYield(pc, sr, out r4_31, out r5_32, out r6_33, out r7_34, out r8_35, out r9_36, out r10_37, out r11, out r12_39, out r13_40, out r14_41)
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> sr:<invalid> r14:<invalid> r12:<invalid> r15:<invalid> r13:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid>



word20 prvInitialiseTCBVariables(word20 r11, word20 r12, word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11 r12 r13 r14 r15
// LiveOut: r11
// Trashed: VNZC r10 r11 r12 r13 r14 r15 sp
// Preserved:
prvInitialiseTCBVariables_entry:
// DataOut: pc r11 r12 r13 r14 r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l49BE:
	Mem19[r15 + 36:word16] = r14
	word20 r11_25 = strncpy(0x0008, r13, r15 + 0x001C, wLoc06)
	Mem28[r11_25 + 35:byte] = 0x00
	word20 r10_15 = r12
	branch r12 >=u 0x0004 l49E6
// DataOut: pc r10 r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(20)

l49E2:
	r10_15 = 0x0003
// DataOut: pc r10 r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:r13 + 0x001C r14:<invalid> r10:r12 r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l49E6:
	Mem34[r11_25 + 6:word16] = r10_15
	vListInitialiseItem(r11_25 + 0x0008, r11)
	word20 sp_42 = vListInitialiseItem(r11_25 + 0x0012, r11)
	Mem45[r11_25 + 14:word16] = r11_25
	Mem51[r11_25 + 18:word16] = 0x0004 - r10_15
	Mem54[r11_25 + 24:word16] = r11_25
	return Mem54[sp_42 + 2:word16]
// DataOut: pc r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:r13 + 0x001C r14:<invalid> r10:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

prvInitialiseTCBVariables_exit:
// DataOut: r11
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> r14:<invalid> r10:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11



word20 prvInitialiseTaskLists()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r11
// Trashed: VNZC r11 r15 sp
// Preserved:
prvInitialiseTaskLists_entry:
// DataOut: pc r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4A12:
	word20 r11_16 = 0x0000
// DataOut: pc r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l4A16:
	word20 r11_14
	vListInitialise(r11_16 * 0x00010 + 0x0222, out r11_14)
	r11_16 = r11_14 + 0x0001
	branch r11_14 >=u 0xFFFD l4A16
// DataOut: pc r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> -2(fp):r11

l4A2E:
	word20 r11_20
	vListInitialise(0x0262, out r11_20)
	word20 r11_23
	vListInitialise(0x0272, out r11_23)
	word20 r11_26
	vListInitialise(0x0286, out r11_26)
	word20 r11_29
	word20 sp_30 = vListInitialise(0x0296, out r11_29)
	Mem31[0x0282:ptr16] = 0x0262
	Mem32[0x0284:ptr16] = 0x0272
	return Mem32[sp_30:word16]
// DataOut: pc r11 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> -2(fp):r11

prvInitialiseTaskLists_exit:
// DataOut: r11
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> -2(fp):r11



word20 prvCheckTasksWaitingTermination(word20 pc, word20 sr, word20 r11, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 sr
// LiveOut: r11 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// Preserved:
prvCheckTasksWaitingTermination_entry:
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4A5E:
	word20 sp_2 = fp - 2
	branch 0x0204 == 0x0000 l4ABE
// DataOut: pc sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l4A66:
	word20 sr_42 = vTaskSuspendAll(sr, wLoc04)
	word20 r11_43 = 0x0000
	branch 0x0296 != 0x0000 l4A74
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 -2(fp):r11
// LocalsOut: Local -0002(0)

l4A72:
	r11_43 = 0x0001
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:0x0000 sr:<invalid> -2(fp):r11
// LocalsOut: Local -0002(0)

l4A74:
	word20 r4_49
	word20 r5_50
	word20 r6_51
	word20 r7_52
	word20 r8_53
	word20 r9_54
	word20 r10_55
	word20 r11_56
	word20 r12_57
	word20 r13_58
	word20 r14_59
	word20 r15_60
	sp_2 = xTaskResumeAll(pc, sr_42, r11_43, out sr, out r4_49, out r5_50, out r6_51, out r7_52, out r8_53, out r9_54, out r10_55, out r11_56, out r12_57, out r13_58, out r14_59, out r15_60)
	branch r11_56 != 0x0000 l4ABE
// DataOut: pc sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> sr:<invalid> -2(fp):r11
// LocalsOut: Local -0002(0)

l4A7C:
	word20 r11_69
	Mem65[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	sr = sr & ~0x0008
	branch 0x0296 == 0x0000 l4ABA
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> sr:<invalid> r8:<invalid> r15:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11
// LocalsOut: Local -0002(0)

l4ABA:
	r11_69 = 0x0000
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> sr:<invalid> r8:<invalid> r15:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11
// LocalsOut: Local -0002(0)

l4A88:
	r11_69 = Mem65[Mem65[0x029A:word16] + 6:word16]
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> sr:<invalid> r8:<invalid> r15:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11
// LocalsOut: Local -0002(0)

l4A94:
	vListRemove(r11_69 + 0x0008, r11)
	Mem73[0x0206:ptr16] = Mem65[0x0206:ptr16] + 0xFFFF
	Mem75[0x0204:ptr16] = Mem73[0x0204:ptr16] + 0xFFFF
	branch 0x0218 == 0x0000 l4AB2
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> sr:<invalid> r15:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

l4AAA:
	Mem84[0x0218:ptr16] = Mem75[0x0218:ptr16] + 0xFFFF
	branch Mem84[0x0218:ptr16] != 0x0000 l4AB2
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

l4AB0:
	sr = sr | 0x0008
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

l4AB2:
	sp_2 = prvDeleteTCB(r11_69, r11_69)
// DataOut: pc sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

l4ABE:
	word20 r11_37
	*r11Out = Mem0[sp_2:word16]
	return sr
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> sr:<invalid> r8:<invalid> r15:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11

prvCheckTasksWaitingTermination_exit:
// DataOut: r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> sr:<invalid> r8:<invalid> r15:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -2(fp):r11



word20 prvAllocateTCBAndStack(word20 pc, word20 sr, word20 r11, ptr16 & srOut, ptr16 & r5Out, ptr16 & r6Out, ptr16 & r7Out, ptr16 & r8Out, ptr16 & r9Out, ptr16 & r10Out, ptr16 & r12Out, ptr16 & r13Out, ptr16 & r14Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 sr
// LiveOut: r10 r12 r13 r14 r15 r5 r6 r7 r8 r9 sp sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// Preserved:
prvAllocateTCBAndStack_entry:
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4AC2:
	word20 sr_13
	word20 r4_14
	word20 r5_15
	word20 r6_16
	word20 r7_17
	word20 r8_18
	word20 r9_19
	word20 r10_20
	word20 r11_21
	word20 r12_22
	word20 r13_23
	word20 r14_24
	word20 r15_25
	word20 sp_26 = pvPortMalloc(pc, sr, 0x0026, out sr_13, out r4_14, out r5_15, out r6_16, out r7_17, out r8_18, out r9_19, out r10_20, out r11_21, out r12_22, out r13_23, out r14_24, out r15_25)
	word20 r11_27 = r15_25
	branch r15_25 == 0x0000 l4AFA
// DataOut: pc r10 r11 r12 r13 r14 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(20)

l4AD6:
	word20 sr_68
	word20 r4_69
	word20 r5_70
	word20 r6_71
	word20 r7_72
	word20 r8_73
	word20 r9_74
	word20 r10_75
	word20 r11_76
	word20 r12_77
	word20 r13_78
	word20 r14_79
	word20 r15_80
	pvPortMalloc(pc, sr_13, r10_20 * 0x00002, out sr_68, out r4_69, out r5_70, out r6_71, out r7_72, out r8_73, out r9_74, out r10_75, out r11_76, out r12_77, out r13_78, out r14_79, out r15_80)
	Mem84[r11_76 + 2:word16] = r15_80
	branch r15_80 != 0x0000 l4AF0
// DataOut: pc r10 r12 r13 r14 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> sr:<invalid> r8:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l4AF0:
	word20 sr_92
	word20 r9_93
	word20 r12_95
	word20 r13_96
	word20 r14_97
	sp_26 = memset(sr_68, r10_75, 0x00A5, r15_80, r11, out sr_92, out r9_93, out r11_27, out r12_95, out r13_96, out r14_97)
// DataOut: pc r11 r12 r13 r14 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> sr:<invalid> r8:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -4(fp):r10 -2(fp):r11

l4AE6:
	sp_26 = vPortFree(r11)
	r11_27 = 0x0000
// DataOut: pc r11 r12 r13 r14 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> sr:<invalid> r8:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -4(fp):r10 -2(fp):r11

l4AFA:
	word20 r15_44
	*r15Out = r11_27
	word20 r10_48
	*r10Out = Mem0[sp_26:word16]
	return sp_26 + 6
// DataOut: pc r10 r12 r13 r14 r15 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r15:<invalid> r11:<invalid> r13:<invalid> r14:<invalid> r9:<invalid> sr:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -4(fp):r10 -2(fp):r11

prvAllocateTCBAndStack_exit:
// DataOut: r10 r12 r13 r14 r15 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r15:<invalid> r11:<invalid> r13:<invalid> r14:<invalid> r9:<invalid> sr:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -4(fp):r10 -2(fp):r11



word20 prvDeleteTCB(word20 r11, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11 r15
// LiveOut: sp
// Trashed: r11 sp
// Preserved: r15
prvDeleteTCB_entry:
// DataOut: pc r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4B02:
	vPortFree(wLoc04)
	return vPortFree(r11) + 4
// DataOut: pc sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp

prvDeleteTCB_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:r15 -2(fp):r11



void vTaskSwitchContext(word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC r13 r14 r15 sp
// Preserved:
vTaskSwitchContext_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004B18:
	branch 0x0210 != 0x0000 l00004BAE
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004B1E:
	branch Mem0[0x020C * 0x00010 + 546:word16] != 0x0000 l00004B46
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004B30:
	Mem89[0x020C:ptr16] = Mem0[0x020C:ptr16] + 0xFFFF
	branch Mem89[0x020C * 0x00010 + 546:word16] == 0x0000 l00004B30
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp r15:0x020C + 0x020C + (0x020C + 0x020C) + ((0x020C + 0x020C) + (0x020C + 0x020C)) + (((0x020C + 0x020C) + (0x020C + 0x020C)) + ((0x020C + 0x020C) + (0x020C + 0x020C)))
// LocalsOut: fp(20)

l00004B46:
	word20 r13_24 = 0x0222
	Mem42[0x020C * 0x00010 + r13_24 + 4:word16] = Mem0[Mem0[0x020C * 0x00010 + r13_24 + 4:word16] + 2:word16]
	branch Mem42[0x020C * 0x00010 + r13_24 + 4:word16] == Mem42[(0x020C * 0x00010 + r13_24) + 2:word16] l00004BB0
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp r15:0x020C + 0x020C + (0x020C + 0x020C) + ((0x020C + 0x020C) + (0x020C + 0x020C)) + (((0x020C + 0x020C) + (0x020C + 0x020C)) + ((0x020C + 0x020C) + (0x020C + 0x020C)))
// LocalsOut: fp(20)

l00004BB0:
	Mem88[0x020C * 0x00010 + 550:word16] = Mem42[Mem42[0x020C * 0x00010 + 550:word16] + 2:word16]
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r13:0x0222 r14:<invalid>
// LocalsOut: fp(20)

l00004B98:
	Mem71[0x0202:ptr16] = Mem42[Mem42[0x020C * 0x00010 + 550:word16] + 6:word16]
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r13:0x0222 r14:<invalid>
// LocalsOut: fp(20)

l00004BAE:
	return
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r13:0x0222 r14:<invalid>

vTaskSwitchContext_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r15:<invalid> r13:0x0222 r14:<invalid>



word20 vListInitialise(word20 r15, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15
// LiveOut: r11 sp
// Trashed: VNZC r11 r15 sp
// Preserved:
vListInitialise_entry:
// DataOut: pc r15 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004BD4:
	Mem12[r15 + 2:word16] = r15 + 0x0006
	Mem15[r15 + 4:word16] = r15 + 0x0006
	Mem18[r15 + 6:word16] = 0xFFFF
	Mem21[r15 + 8:word16] = r15 + 0x0006
	Mem24[r15 + 10:word16] = r15 + 0x0006
	Mem27[r15 + 12:word16] = 0x0000
	word20 sp_29 = vListInitialiseItem(r15 + 0x0006, wLoc04)
	Mem32[r15:word16] = 0x0000
	word20 r11_35
	*r11Out = Mem32[sp_29:word16]
	return sp_29 + 4
// DataOut: pc r11 r5 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp

vListInitialise_exit:
// DataOut: r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:r15 + 0x0006 -2(fp):r11



word20 vListInitialiseItem(word20 r15, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15
// LiveOut: sp
// Trashed: sp
// Preserved:
vListInitialiseItem_entry:
// DataOut: pc r10 r11 r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004C00:
	Mem6[r15 + 8:word16] = 0x0000
	return fp + 2
// DataOut: pc r10 r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp

vListInitialiseItem_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2



word20 vListInsertEnd(word20 r14, word20 r15, word16 wArg00, ptr16 & r12Out, ptr16 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14 r15
// LiveOut: r12 r13 sp
// Trashed: VNZC r12 r13 r15 sp
// Preserved:
vListInsertEnd_entry:
// DataOut: pc r10 r11 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004C06:
	word16 v5_5 = Mem0[r15 + 4:word16]
	Mem11[r14 + 2:word16] = Mem0[v5_5 + 2:word16]
	Mem15[r14 + 4:word16] = Mem11[r15 + 4:word16]
	Mem20[Mem15[v5_5 + 2:word16] + 4:word16] = r14
	Mem23[v5_5 + 2:word16] = r14
	Mem26[r15 + 4:word16] = r14
	Mem29[r14 + 8:word16] = r15
	Mem32[r15:word16] = Mem29[r15:word16] + 0x0001
	word20 r12_3
	*r12Out = r15
	word20 r13_6
	*r13Out = v5_5
	return fp + 2
// DataOut: pc r10 r11 r12 r13 r14 r4 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp

vListInsertEnd_exit:
// DataOut: r12 r13 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r12:r15 r13:<invalid> r15:<invalid>



word20 vListInsert(word20 r14, word20 r15, word16 wArg00, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14 r15
// LiveOut: r11 sp
// Trashed: VNZC r11 r12 r13 r15 sp
// Preserved:
vListInsert_entry:
// DataOut: pc r11 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004C32:
	word20 r13_13
	word16 v6_9 = Mem0[r14:word16]
	branch v6_9 == 0xFFFF l00004C5A
// DataOut: pc r11 r12 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20)

l00004C5A:
	word16 v18_61 = Mem0[r15 + 2:word16]
	r13_13 = v18_61
	branch Mem0[Mem0[v18_61 + 2:word16]:word16] <u 0xFFFF l00004C76
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l00004C68:
	word16 v21_69 = Mem0[r13_13 + 2:word16]
	r13_13 = v21_69
	branch Mem0[Mem0[v21_69 + 2:word16]:word16] >=u v6_9 l00004C68
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r13:<invalid> r15:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l00004C3C:
	word16 v10_44 = Mem0[r15 + 2:word16]
	r13_13 = v10_44
	branch v6_9 >=u Mem0[Mem0[v10_44 + 2:word16]:word16] l00004C76
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l00004C4A:
	word16 v15_53 = Mem0[r13_13 + 2:word16]
	r13_13 = v15_53
	branch v6_9 <u Mem0[Mem0[v15_53 + 2:word16]:word16] l00004C4A
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r13:<invalid> r15:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l00004C58:
// DataOut: pc r11 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r13:<invalid> r15:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l00004C76:
	Mem18[r14 + 2:word16] = Mem0[r13_13 + 2:word16]
	Mem23[Mem18[r14 + 2:word16] + 4:word16] = r14
	Mem26[r14 + 4:word16] = r13_13
	Mem29[r13_13 + 2:word16] = r14
	Mem32[r14 + 8:word16] = r15
	Mem35[r15:word16] = Mem32[r15:word16] + 0x0001
	word20 r11_39
	*r11Out = r11
	return fp + 2
// DataOut: pc r11 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r13:<invalid> r15:<invalid> -2(fp):r11

vListInsert_exit:
// DataOut: r11 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r11:(word16) r15 r12:<invalid> r13:<invalid> r15:<invalid> -2(fp):r11



void vListRemove(word20 r15, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15
// LiveOut:
// Trashed: VNZC r13 r14 r15 sp
// Preserved:
vListRemove_entry:
// DataOut: pc r10 r11 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004C98:
	word16 v5_5 = Mem0[r15 + 2:word16]
	Mem10[v5_5 + 4:word16] = Mem0[r15 + 4:word16]
	word16 v8_11 = Mem10[r15 + 4:word16]
	Mem15[v8_11 + 2:word16] = v5_5
	word16 v11_16 = Mem15[r15 + 8:word16]
	branch Mem15[v11_16 + 4:word16] != r15 l00004CBA
// DataOut: pc r10 r11 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004CB6:
	Mem33[v11_16 + 4:word16] = v8_11
// DataOut: pc r10 r11 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r14:r15 r15:<invalid> r13:<invalid>
// LocalsOut: fp(20)

l00004CBA:
	Mem23[r15 + 8:word16] = 0x0000
	Mem26[v11_16:word16] = Mem23[v11_16:word16] + 0xFFFF
	return
// DataOut: pc r10 r11 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r14:r15 r15:<invalid> r13:<invalid>

vListRemove_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r14:r15 r15:<invalid> r13:<invalid>



word20 xQueueCreate(word20 pc, word20 sr, word20 r15, ptr16 & srOut, ptr16 & r4Out, ptr16 & r6Out, ptr16 & r7Out, ptr16 & r8Out, ptr16 & r9Out, ptr16 & r10Out, ptr16 & r11Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r15 sr
// LiveOut: r10 r11 r15 r4 r6 r7 r8 r9 sp sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// Preserved:
xQueueCreate_entry:
	*r4Out = r4
	*r6Out = r6
	*r7Out = r7
	*r8Out = r8
	*srOut = sr
// DataOut: pc r15 r4 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4CC4:
	word20 sp_39 = fp - 6
	branch r15 != 0x0000 l4CD6
// DataOut: pc r4 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l4CD6:
	word20 sr_64
	word20 r4_65
	word20 r5_66
	word20 r6_67
	word20 r7_68
	word20 r8_69
	word20 r9_70
	word20 r10_71
	word20 r11_72
	word20 r12_73
	word20 r13_74
	word20 r14_75
	word20 r15_76
	sp_39 = pvPortMalloc(pc, sr, 0x0032, out sr_64, out r4_65, out r5_66, out r6_67, out r7_68, out r8_69, out r9_70, out r10_71, out r11_72, out r12_73, out r13_74, out r14_75, out r15_76)
	branch r15_76 == 0x0000 l4CD2
// DataOut: pc r4 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r10:r15 r9:r14 -6(fp):r9 -4(fp):r10 -2(fp):r11

l4CE4:
	Mem82[sp_39 - 2:word16] = sr_64
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> sr:<invalid> r8:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

l4CD2:
	word20 r15_40
	*r15Out = 0x0000
// DataOut: pc r15 r4 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r15:<invalid> r11:<invalid> r14:<invalid> sr:<invalid> r8:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

l4D76:
	word20 sp_43 = sp_39 + 2
	word20 r9_44
	*r9Out = Mem0[sp_39:word16]
	word20 r10_47
	*r10Out = Mem0[sp_43:word16]
	word20 r11_50
	*r11Out = Mem0[sp_43 + 2:word16]
	return sp_43 + 6
// DataOut: pc r10 r11 r15 r4 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r15:0x0000 r11:<invalid> r14:<invalid> sr:<invalid> r8:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

xQueueCreate_exit:
// DataOut: r10 r11 r15 r4 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r15:0x0000 r11:<invalid> r14:<invalid> sr:<invalid> r8:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11



word20 xQueueSend(word20 pc, word20 sr, word20 r11, word20 r13, word20 r14, word20 r15, ptr16 & r11Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 r13 r14 r15 sr
// LiveOut: r11 r15 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
xQueueSend_entry:
// DataOut: pc r11 r13 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004D7E:
	word20 sr_20 = vTaskSuspendAll(sr, wLoc08) & ~0x0008
	Mem22[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	Mem26[r15 + 46:word16] = Mem22[r15 + 46:word16] + 0x0001
	Mem29[r15 + 48:word16] = Mem26[r15 + 48:word16] + 0x0001
	word20 r11_12 = r15
	word20 r9_14 = r14
	branch 0x0218 == 0x0000 l00004DAA
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l00004DA2:
	Mem266[0x0218:ptr16] = Mem29[0x0218:ptr16] + 0xFFFF
	branch Mem266[0x0218:ptr16] != 0x0000 l00004DAA
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:r15 r9:r14 r10:r13 sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004DA8:
	sr_20 = sr_20 | 0x0008
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:r15 r9:r14 r10:r13 sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004DAA:
	word20 r15_34
	word20 sr_232 = prvIsQueueFull(sr_20, r15, r11, out r15_34)
	branch r15_34 == 0x0000 l00004DB8
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:r15 r9:r14 r10:r13 sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004DB4:
	branch r13 != 0x0000 l00004E26
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:r15 r9:r14 r10:r13 sr:<invalid> r15:<invalid> r14:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004E26:
	word20 r11_195 = vTaskPlaceOnEventList(r15, r15 + 0x0008)
	Mem197[0x0218:ptr16] = Mem29[0x0218:ptr16] + 0x0001
	word20 r11_200
	word20 r15_201
	word20 sr_202 = prvUnlockQueue(sr_232 & ~0x0008, r11_195, r11, out r11_200, out r15_201)
	word20 r4_204
	word20 r5_205
	word20 r6_206
	word20 r7_207
	word20 r8_208
	word20 r10_210
	word20 r12_212
	word20 r13_213
	word20 r14_214
	word20 r15_215
	word20 sr_203
	xTaskResumeAll(pc, sr_202, r11_200, out sr_203, out r4_204, out r5_205, out r6_206, out r7_207, out r8_208, out r9_14, out r10_210, out r11_12, out r12_212, out r13_213, out r14_214, out r15_215)
	branch r15_215 == 0x0000 l00004E74
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:r15 r9:r14 r10:r13 sr:<invalid> r15:<invalid> r14:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004E74:
	word20 r4_254
	word20 r5_255
	word20 r6_256
	word20 r7_257
	word20 r8_258
	word20 r10_260
	word20 r12_262
	word20 r13_263
	word20 r14_264
	sr_203 = vPortYield(pc, sr_203, out r4_254, out r5_255, out r6_256, out r7_257, out r8_258, out r9_14, out r10_260, out r11_12, out r12_262, out r13_263, out r14_264)
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004E44:
	sr_232 = vTaskSuspendAll(sr_203, r11) & ~0x0008
	Mem233[0x0218:ptr16] = Mem197[0x0218:ptr16] + 0x0001
	Mem237[r11_12 + 46:word16] = Mem233[r11_12 + 46:word16] + 0x0001
	Mem240[r11_12 + 48:word16] = Mem237[r11_12 + 48:word16] + 0x0001
	branch 0x0218 == 0x0000 l00004E64
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004E5C:
	Mem250[0x0218:ptr16] = Mem240[0x0218:ptr16] + 0xFFFF
	branch Mem250[0x0218:ptr16] != 0x0000 l00004E64
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004E62:
	sr_232 = sr_232 | 0x0008
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004E64:
	branch 0x0218 == 0x0000 l00004DB8
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004E6A:
	Mem246[0x0218:ptr16] = Mem240[0x0218:ptr16] + 0xFFFF
	branch Mem246[0x0218:ptr16] != 0x0000 l00004DB8
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004E70:
	sr_232 = sr_232 | 0x0008
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004DB8:
	Mem60[0x0218:ptr16] = Mem29[0x0218:ptr16] + 0x0001
	word20 sr_156 = sr_232 & ~0x0008
	branch Mem60[r11_12 + 40:word16] >=u Mem60[r11_12 + 42:word16] l00004DF6
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004DF6:
	word20 r10_164
	memcpy(sr_156, Mem60[r11_12 + 44:word16], r9_14, Mem60[r11_12 + 4:word16], r11, out sr_156, out r10_164, out r11_12)
	Mem169[r11_12 + 40:word16] = Mem60[r11_12 + 40:word16] + 0x0001
	word20 r15_173 = Mem169[r11_12 + 4:word16] + Mem169[r11_12 + 44:word16]
	Mem176[r11_12 + 4:word16] = r15_173
	branch r15_173 >=u Mem176[r11_12 + 2:word16] l00004E1E
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004E1A:
	Mem188[r11_12 + 4:word16] = Mem176[r11_12:word16]
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r13:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004E1E:
	Mem183[r11_12 + 48:word16] = Mem176[r11_12 + 48:word16] + 0x0001
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r13:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004DC6:
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004DCA:
	branch 0x0218 == 0x0000 l00004DD8
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r13:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004DD0:
	Mem153[0x0218:ptr16] = Mem60[0x0218:ptr16] + 0xFFFF
	branch Mem153[0x0218:ptr16] != 0x0000 l00004DD8
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r13:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004DD6:
	sr_156 = sr_156 | 0x0008
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r13:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004DD8:
	word20 sp_124
	word20 r10_118
	word20 sr_111
	word20 r11_78
	word20 r15_79
	word20 sr_80 = prvUnlockQueue(sr_156, r11_12, r11, out r11_78, out r15_79)
	branch r15_79 == 0x0000 l00004DF0
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r13:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004DF0:
	word20 r4_140
	word20 r5_141
	word20 r6_142
	word20 r7_143
	word20 r8_144
	word20 r9_145
	word20 r11_147
	word20 r12_148
	word20 r13_149
	word20 r14_150
	word20 r15_151
	sp_124 = xTaskResumeAll(pc, sr_80, r11_78, out sr_111, out r4_140, out r5_141, out r6_142, out r7_143, out r8_144, out r9_145, out r10_118, out r11_147, out r12_148, out r13_149, out r14_150, out r15_151)
// DataOut: pc r10 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r13:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004DE2:
	word20 r4_112
	word20 r5_113
	word20 r6_114
	word20 r7_115
	word20 r8_116
	word20 r9_117
	word20 r11_119
	word20 r12_120
	word20 r13_121
	word20 r14_122
	word20 r15_123
	sp_124 = xTaskResumeAll(pc, sr_80, r11_78, out sr_111, out r4_112, out r5_113, out r6_114, out r7_115, out r8_116, out r9_117, out r10_118, out r11_119, out r12_120, out r13_121, out r14_122, out r15_123)
	branch r15_123 != 0x0000 l00004E7A
// DataOut: pc r10 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r13:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004DEA:
	word20 r4_127
	word20 r5_128
	word20 r6_129
	word20 r7_130
	word20 r8_131
	word20 r9_132
	word20 r11_134
	word20 r12_135
	word20 r13_136
	word20 r14_137
	sr_111 = vPortYield(pc, sr_111, out r4_127, out r5_128, out r6_129, out r7_130, out r8_131, out r9_132, out r10_118, out r11_134, out r12_135, out r13_136, out r14_137)
// DataOut: pc r10 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r8:<invalid> r13:<invalid> r14:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004E7A:
	word20 r15_96
	*r15Out = r10_118
	word20 r11_105
	*r11Out = Mem60[sp_124 + 4:word16]
	return sr_111
// DataOut: pc r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r8:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

xQueueSend_exit:
// DataOut: r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r11:(word16) r10 r9:<invalid> r10:(word16) r9 sr:<invalid> r15:<invalid> r8:<invalid> r14:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11



word20 xQueueSendFromISR(word20 sr, word20 r14, word20 r15, ptr16 & srOut, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14 r15 sr
// LiveOut: r15 sp sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 sp sr
// Preserved: r13
xQueueSendFromISR_entry:
	*srOut = sr
// DataOut: pc r13 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4E84:
	word20 r13_23
	word20 sp_24 = fp - 4
	word20 r10_11 = r13
	branch Mem0[r15 + 40:word16] >=u Mem0[r15 + 42:word16] l4E98
// DataOut: pc r10 r11 r14 r15 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l4E98:
	word20 sr_51
	word20 r11_53
	sp_24 = memcpy(sr, Mem0[r15 + 44:word16], r14, Mem0[r15 + 4:word16], wLoc06, out sr_51, out r10_11, out r11_53)
	Mem57[r11_53 + 40:word16] = Mem0[r11_53 + 40:word16] + 0x0001
	word20 r15_61 = Mem57[r11_53 + 4:word16] + Mem57[r11_53 + 44:word16]
	Mem64[r11_53 + 4:word16] = r15_61
	branch r15_61 >=u Mem64[r11_53 + 2:word16] l4EBE
// DataOut: pc r10 r11 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r10:r13 -4(fp):r10 -2(fp):r11

l4EBA:
	Mem94[r11_53 + 4:word16] = Mem64[r11_53:word16]
// DataOut: pc r10 r11 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> r14:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11

l4EBE:
	word16 v23_68 = Mem64[r11_53 + 48:word16]
	branch v23_68 == 0xFFFF l4ECE
// DataOut: pc r10 r11 r15 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> r14:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11

l4ECE:
	branch r10_11 != 0x0000 l4E94
// DataOut: pc r10 r11 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> r14:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11

l4ED2:
	branch Mem64[r11_53 + 24:word16] == 0x0000 l4E94
// DataOut: pc r10 r11 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> r14:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11

l4ED8:
	word20 r11_85
	word20 r15_86
	r10_11 = xTaskRemoveFromEventList(r11_53 + 0x0018, r11_53 + 0x0018, out r11_85, out r15_86)
	branch r15_86 == 0x0000 l4E94
// DataOut: pc r10 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> r14:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11

l4EE6:
	r13_23 = 0x0001
// DataOut: pc r13 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> r14:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11

l4EC6:
	Mem76[r11_53 + 48:word16] = v23_68 + 0x0001
// DataOut: pc r10 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> r14:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11

l4E94:
	r13_23 = r10_11
// DataOut: pc r13 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> r14:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11

l4EE8:
	word20 r15_25
	*r15Out = r13_23
	return sp_24 + 6
// DataOut: pc r15 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r13:<invalid> r15:<invalid> r12:<invalid> r14:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11

xQueueSendFromISR_exit:
// DataOut: r15 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r13:<invalid> r15:<invalid> r12:<invalid> r14:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11



word20 xQueueReceive(word20 pc, word20 sr, word20 r11, word20 r13, word20 r14, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 r13 r14 r15 sr
// LiveOut: r15 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
xQueueReceive_entry:
// DataOut: pc r11 r13 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004EF0:
	word20 sr_20 = vTaskSuspendAll(sr, wLoc08) & ~0x0008
	Mem22[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	Mem26[r15 + 46:word16] = Mem22[r15 + 46:word16] + 0x0001
	Mem29[r15 + 48:word16] = Mem26[r15 + 48:word16] + 0x0001
	word20 r11_12 = r15
	word20 r9_14 = r14
	branch 0x0218 == 0x0000 l00004F1C
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l00004F14:
	Mem265[0x0218:ptr16] = Mem29[0x0218:ptr16] + 0xFFFF
	branch Mem265[0x0218:ptr16] != 0x0000 l00004F1C
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:r15 r9:r14 r10:r13 sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004F1A:
	sr_20 = sr_20 | 0x0008
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:r15 r9:r14 r10:r13 sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004F1C:
	word20 r15_34
	word20 sr_231 = prvIsQueueEmpty(sr_20, r15, r11, out r15_34)
	branch r15_34 == 0x0000 l00004F2A
// DataOut: pc r10 r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:r15 r9:r14 r10:r13 sr:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004F26:
	branch r13 != 0x0000 l00004F96
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:r15 r9:r14 r10:r13 sr:<invalid> r15:<invalid> r14:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004F96:
	word20 r11_194 = vTaskPlaceOnEventList(r15, r15 + 0x0018)
	Mem196[0x0218:ptr16] = Mem29[0x0218:ptr16] + 0x0001
	word20 r11_199
	word20 r15_200
	word20 sr_201 = prvUnlockQueue(sr_231 & ~0x0008, r11_194, r11, out r11_199, out r15_200)
	word20 r4_203
	word20 r5_204
	word20 r6_205
	word20 r7_206
	word20 r8_207
	word20 r10_209
	word20 r12_211
	word20 r13_212
	word20 r14_213
	word20 r15_214
	word20 sr_202
	xTaskResumeAll(pc, sr_201, r11_199, out sr_202, out r4_203, out r5_204, out r6_205, out r7_206, out r8_207, out r9_14, out r10_209, out r11_12, out r12_211, out r13_212, out r14_213, out r15_214)
	branch r15_214 == 0x0000 l00004FE6
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:r15 r9:r14 r10:r13 sr:<invalid> r15:<invalid> r14:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004FE6:
	word20 r4_253
	word20 r5_254
	word20 r6_255
	word20 r7_256
	word20 r8_257
	word20 r10_259
	word20 r12_261
	word20 r13_262
	word20 r14_263
	sr_202 = vPortYield(pc, sr_202, out r4_253, out r5_254, out r6_255, out r7_256, out r8_257, out r9_14, out r10_259, out r11_12, out r12_261, out r13_262, out r14_263)
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004FB6:
	sr_231 = vTaskSuspendAll(sr_202, r11) & ~0x0008
	Mem232[0x0218:ptr16] = Mem196[0x0218:ptr16] + 0x0001
	Mem236[r11_12 + 46:word16] = Mem232[r11_12 + 46:word16] + 0x0001
	Mem239[r11_12 + 48:word16] = Mem236[r11_12 + 48:word16] + 0x0001
	branch 0x0218 == 0x0000 l00004FD6
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004FCE:
	Mem249[0x0218:ptr16] = Mem239[0x0218:ptr16] + 0xFFFF
	branch Mem249[0x0218:ptr16] != 0x0000 l00004FD6
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004FD4:
	sr_231 = sr_231 | 0x0008
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004FD6:
	branch 0x0218 == 0x0000 l00004F2A
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004FDC:
	Mem245[0x0218:ptr16] = Mem239[0x0218:ptr16] + 0xFFFF
	branch Mem245[0x0218:ptr16] != 0x0000 l00004F2A
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004FE2:
	sr_231 = sr_231 | 0x0008
// DataOut: pc r11 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004F2A:
	Mem58[0x0218:ptr16] = Mem29[0x0218:ptr16] + 0x0001
	word20 sr_153 = sr_231 & ~0x0008
	word16 v14_60 = Mem58[r11_12 + 40:word16]
	branch v14_60 == 0x0000 l00004F92
// DataOut: pc r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004F92:
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004F38:
	word16 v15_154 = Mem58[r11_12 + 44:word16]
	word20 r15_158 = Mem58[r11_12 + 6:word16] + v15_154
	Mem161[r11_12 + 6:word16] = r15_158
	branch r15_158 >=u Mem161[r11_12 + 2:word16] l00004F50
// DataOut: pc r11 r13 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004F4C:
	Mem185[r11_12 + 6:word16] = Mem161[r11_12:word16]
// DataOut: pc r11 r13 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004F50:
	Mem169[r11_12 + 40:word16] = v14_60 + 0xFFFF
	word20 r10_174
	memcpy(sr_153, v15_154, Mem169[r11_12 + 6:word16], r9_14, r11, out sr_153, out r10_174, out r11_12)
	Mem179[r11_12 + 46:word16] = Mem169[r11_12 + 46:word16] + 0x0001
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r8:<invalid> r12:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004F66:
	branch 0x0218 == 0x0000 l00004F74
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004F6C:
	Mem150[0x0218:ptr16] = Mem58[0x0218:ptr16] + 0xFFFF
	branch Mem150[0x0218:ptr16] != 0x0000 l00004F74
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004F72:
	sr_153 = sr_153 | 0x0008
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004F74:
	word20 r10_115
	word20 sr_108
	word20 r11_76
	word20 r15_77
	word20 sr_78 = prvUnlockQueue(sr_153, r11_12, r11, out r11_76, out r15_77)
	branch r15_77 == 0x0000 l00004F8C
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004F8C:
	word20 r4_137
	word20 r5_138
	word20 r6_139
	word20 r7_140
	word20 r8_141
	word20 r9_142
	word20 r11_144
	word20 r12_145
	word20 r13_146
	word20 r14_147
	word20 r15_148
	xTaskResumeAll(pc, sr_78, r11_76, out sr_108, out r4_137, out r5_138, out r6_139, out r7_140, out r8_141, out r9_142, out r10_115, out r11_144, out r12_145, out r13_146, out r14_147, out r15_148)
// DataOut: pc r10 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004F7E:
	word20 r4_109
	word20 r5_110
	word20 r6_111
	word20 r7_112
	word20 r8_113
	word20 r9_114
	word20 r11_116
	word20 r12_117
	word20 r13_118
	word20 r14_119
	word20 r15_120
	xTaskResumeAll(pc, sr_78, r11_76, out sr_108, out r4_109, out r5_110, out r6_111, out r7_112, out r8_113, out r9_114, out r10_115, out r11_116, out r12_117, out r13_118, out r14_119, out r15_120)
	branch r15_120 != 0x0000 l00004FEC
// DataOut: pc r10 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004F86:
	word20 r4_124
	word20 r5_125
	word20 r6_126
	word20 r7_127
	word20 r8_128
	word20 r9_129
	word20 r11_131
	word20 r12_132
	word20 r13_133
	word20 r14_134
	sr_108 = vPortYield(pc, sr_108, out r4_124, out r5_125, out r6_126, out r7_127, out r8_128, out r9_129, out r10_115, out r11_131, out r12_132, out r13_133, out r14_134)
// DataOut: pc r10 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004FEC:
	word20 r15_94
	*r15Out = r10_115
	return sr_108
// DataOut: pc r15 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

xQueueReceive_exit:
// DataOut: r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r11:(word16) r10 r9:<invalid> r10:(word16) r9 sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11



word20 xQueueReceiveFromISR(word20 sr, word20 r14, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14 r15 sr
// LiveOut: r15 sp
// Trashed: VNZC r10 r11 r12 r13 r14 r15 sp sr
// Preserved:
xQueueReceiveFromISR_entry:
// DataOut: r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004FF6:
	word20 sp_26 = fp - 4
	word16 v9_15 = Mem0[r15 + 40:word16]
	branch v9_15 == 0x0000 l00005060
// DataOut: r11 r12 r14 r15 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l00005060:
	word20 r15_96
	*r15Out = 0x0000
// DataOut: r15 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r12:r14 r10:r13 r14:<invalid> -4(fp):r10 -2(fp):r11

l00005008:
	word16 v12_36 = Mem0[r15 + 44:word16]
	word20 r15_40 = Mem0[r15 + 6:word16] + v12_36
	Mem43[r15 + 6:word16] = r15_40
	branch r15_40 >=u Mem43[r15 + 2:word16] l00005020
// DataOut: r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r12:r14 r10:r13 r14:<invalid> -4(fp):r10 -2(fp):r11

l0000501C:
	Mem95[r15 + 6:word16] = Mem43[r15:word16]
// DataOut: r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r12:r14 r10:r13 r14:<invalid> r13:<invalid> r15:<invalid> -4(fp):r10 -2(fp):r11

l00005020:
	Mem51[r15 + 40:word16] = v9_15 + 0xFFFF
	word20 sr_57
	word20 r10_58
	word20 r11_59
	sp_26 = memcpy(sr, v12_36, Mem51[r15 + 6:word16], r14, wLoc06, out sr_57, out r10_58, out r11_59)
	word16 v24_61 = Mem51[r11_59 + 46:word16]
	branch v24_61 == 0xFFFF l00005042
// DataOut: r10 r11 r15 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r12:r14 r10:r13 r14:<invalid> r13:<invalid> r15:<invalid> -4(fp):r10 -2(fp):r11

l00005042:
	branch Mem51[r10_58:word16] != 0x0000 l0000503E
// DataOut: r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r15:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11

l00005048:
	branch Mem51[r11_59 + 8:word16] == 0x0000 l0000503E
// DataOut: r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r15:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11

l0000504E:
	word20 r11_84
	word20 r15_85
	word20 r10_86 = xTaskRemoveFromEventList(r11_59 + 0x0008, r11_59 + 0x0008, out r11_84, out r15_85)
	branch r15_85 == 0x0000 l0000503E
// DataOut: r10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r15:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11

l0000505A:
	Mem91[r10_86:word16] = 0x0001
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r15:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11

l00005038:
	Mem74[r11_59 + 46:word16] = v24_61 + 0x0001
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r15:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11

l0000503E:
	word20 r15_69
	*r15Out = 0x0001
// DataOut: r15 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r15:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11

l00005062:
	return sp_26 + 6
// DataOut: r15 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r15:<invalid> r13:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11

xQueueReceiveFromISR_exit:
// DataOut: r15 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r15:<invalid> r13:<invalid> sr:<invalid> -4(fp):r10 -2(fp):r11



void uxQueueMessagesWaiting(word20 sr, word20 r15, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15 sr
// LiveOut:
// Trashed: VNZC r15 sp sr
// Preserved:
uxQueueMessagesWaiting_entry:
// DataOut: r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l5068:
	Mem5[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	branch Mem5[0x0218:ptr16] == 0x0000 l507C
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l5074:
	Mem17[0x0218:ptr16] = Mem5[0x0218:ptr16] + 0xFFFF
	branch Mem17[0x0218:ptr16] != 0x0000 l507C
// DataOut: sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r15:<invalid>
// LocalsOut: fp(20)

l507A:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r15:<invalid>
// LocalsOut: fp(20)

l507C:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp sr:<invalid> r15:<invalid>

uxQueueMessagesWaiting_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 sr:<invalid> r15:<invalid>



void vQueueDelete(word20 r11, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11 r15
// LiveOut:
// Trashed: r11 sp
// Preserved: r15
vQueueDelete_entry:
// DataOut: r11 r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l507E:
	vPortFree(wLoc04)
	vPortFree(r11)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

vQueueDelete_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:r15 -2(fp):r11



word20 prvUnlockQueue(word20 sr, word20 r15, word16 wArg00, ptr16 & r11Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15 sr
// LiveOut: r11 r15 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 sp sr
// Preserved:
prvUnlockQueue_entry:
// DataOut: pc r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00005092:
	Mem14[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	word16 v8_16 = Mem14[r15 + 48:word16]
	Mem18[r15 + 48:word16] = v8_16 + 0xFFFF
	word20 r11_23 = r15
	word20 r10_10 = 0x0000
	word20 sr_12 = sr & ~0x0008
	branch v8_16 < 0xFFFF l000050B0
// DataOut: pc r10 r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20)

l000050A6:
	Mem81[r15 + 48:word16] = 0xFFFF
	branch Mem81[r15 + 24:word16] != 0x0000 l000050F4
// DataOut: pc r10 r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r10:0x0000 sr:sr & ~0x0008 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l000050F4:
	word20 r15_88
	r10_10 = xTaskRemoveFromEventList(r15, r15 + 0x0018, out r11_23, out r15_88)
	branch r15_88 == 0x0000 l000050B0
// DataOut: pc r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r10:0x0000 sr:sr & ~0x0008 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l00005100:
	r10_10 = 0x0001
// DataOut: pc r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:sr & ~0x0008 r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l000050B0:
	branch 0x0218 == 0x0000 l000050BE
// DataOut: pc r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:sr & ~0x0008 r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l000050B6:
	Mem75[0x0218:ptr16] = Mem18[0x0218:ptr16] + 0xFFFF
	branch Mem75[0x0218:ptr16] != 0x0000 l000050BE
// DataOut: pc r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:sr & ~0x0008 r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l000050BC:
	sr_12 = sr_12 | 0x0008
// DataOut: pc r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:sr & ~0x0008 r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l000050BE:
	Mem29[0x0218:ptr16] = Mem18[0x0218:ptr16] + 0x0001
	word16 v13_31 = Mem29[r11_23 + 46:word16]
	Mem33[r11_23 + 46:word16] = v13_31 + 0xFFFF
	word20 sr_28 = sr_12 & ~0x0008
	branch v13_31 < 0xFFFF l000050D4
// DataOut: pc r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l000050CA:
	Mem62[r11_23 + 46:word16] = 0xFFFF
	branch Mem62[r11_23 + 8:word16] != 0x0000 l000050E4
// DataOut: pc r10 r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l000050E4:
	word20 r11_66 = r11_23 + 0x0008
	word20 r11_69
	word20 r15_70
	r10_10 = xTaskRemoveFromEventList(r11_66, r11_66, out r11_69, out r15_70)
	branch r15_70 == 0x0000 l000050D4
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l000050F0:
	r10_10 = 0x0001
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l000050D4:
	branch 0x0218 == 0x0000 l00005104
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l000050DA:
	Mem56[0x0218:ptr16] = Mem33[0x0218:ptr16] + 0xFFFF
	branch Mem56[0x0218:ptr16] != 0x0000 l00005104
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l000050E0:
	sr_28 = sr_28 | 0x0008
// DataOut: pc r10 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l00005104:
	word20 r15_44
	*r15Out = r10_10
	word20 r11_50
	*r11Out = r11
	return sr_28
// DataOut: pc r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:<invalid> sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

prvUnlockQueue_exit:
// DataOut: r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r11:<invalid> r10:(word16) r10 sr:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11



word20 prvIsQueueEmpty(word20 sr, word20 r15, word16 wArg00, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15 sr
// LiveOut: r15 sr
// Trashed: VNZC r14 r15 sp sr
// Preserved:
prvIsQueueEmpty_entry:
// DataOut: pc r10 r11 r15 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000510C:
	Mem5[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	word20 sr_17 = sr & ~0x0008
	word20 r14_12 = 0x0000
	branch Mem5[r15 + 40:word16] != 0x0000 l0000511C
// DataOut: pc r10 r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000511A:
	r14_12 = 0x0001
// DataOut: pc r10 r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r14:0x0000
// LocalsOut: fp(20)

l0000511C:
	branch 0x0218 == 0x0000 l0000512A
// DataOut: pc r10 r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r14:<invalid>
// LocalsOut: fp(20)

l00005122:
	Mem23[0x0218:ptr16] = Mem5[0x0218:ptr16] + 0xFFFF
	branch Mem23[0x0218:ptr16] != 0x0000 l0000512A
// DataOut: pc r10 r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r14:<invalid>
// LocalsOut: fp(20)

l00005128:
	sr_17 = sr_17 | 0x0008
// DataOut: pc r10 r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r14:<invalid>
// LocalsOut: fp(20)

l0000512A:
	word20 r15_18
	*r15Out = r14_12
	return sr_17
// DataOut: pc r10 r11 r15 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:<invalid> r14:<invalid>

prvIsQueueEmpty_exit:
// DataOut: r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 sr:<invalid> r14:<invalid> r15:<invalid>



word20 prvIsQueueFull(word20 sr, word20 r15, word16 wArg00, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15 sr
// LiveOut: r15 sr
// Trashed: VNZC r14 r15 sp sr
// Preserved:
prvIsQueueFull_entry:
// DataOut: pc r10 r11 r15 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000512E:
	Mem5[0x0218:ptr16] = Mem0[0x0218:ptr16] + 0x0001
	word20 sr_18 = sr & ~0x0008
	word20 r14_13 = 0x0000
	branch Mem5[r15 + 40:word16] == Mem5[r15 + 42:word16] l0000514E
// DataOut: pc r10 r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000514E:
	r14_13 = 0x0001
// DataOut: pc r10 r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r14:0x0000
// LocalsOut: fp(20)

l0000513E:
	branch 0x0218 == 0x0000 l00005152
// DataOut: pc r10 r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r14:<invalid>
// LocalsOut: fp(20)

l00005144:
	Mem24[0x0218:ptr16] = Mem5[0x0218:ptr16] + 0xFFFF
	branch Mem24[0x0218:ptr16] != 0x0000 l00005152
// DataOut: pc r10 r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r14:<invalid>
// LocalsOut: fp(20)

l0000514A:
	sr_18 = sr_18 | 0x0008
// DataOut: pc r10 r11 r14 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r14:<invalid>
// LocalsOut: fp(20)

l00005152:
	word20 r15_19
	*r15Out = r14_13
	return sr_18
// DataOut: pc r10 r11 r15 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:<invalid> r14:<invalid>

prvIsQueueFull_exit:
// DataOut: r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 sr:<invalid> r14:<invalid> r15:<invalid>



word20 pvPortMalloc(word20 pc, word20 sr, word20 r15, ptr16 & srOut, ptr16 & r4Out, ptr16 & r5Out, ptr16 & r6Out, ptr16 & r7Out, ptr16 & r8Out, ptr16 & r9Out, ptr16 & r10Out, ptr16 & r11Out, ptr16 & r12Out, ptr16 & r13Out, ptr16 & r14Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r15 sr
// LiveOut: r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// Preserved:
pvPortMalloc_entry:
// DataOut: pc r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l5156:
	word20 r11_15 = r15
	branch (r15 & 0x0001) == 0x00000 l5166
// DataOut: pc r11 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l5162:
	r11_15 = r15 - (r15 & 0x0001) + 0x0002
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r10:0x0000 r15:r15 & 0x0001 -4(fp):r10 -2(fp):r11

l5166:
	word20 r14_19 = 0x0216
	word20 sr_18 = vTaskSuspendAll(sr, wLoc06)
	word20 r15_21 = r14_19 + r11_15
	branch r15_21 <u 0x0708 l5186
// DataOut: pc r11 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:0x0000 r15:r15 & 0x0001 -4(fp):r10 -2(fp):r11

l5178:
	branch r14_19 <u r15_21 l5186
// DataOut: pc r11 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:0x0000 r15:<invalid> r14:0216 sr:<invalid> -4(fp):r10 -2(fp):r11

l517C:
	Mem69[0x0216:ptr16] = r15_21
// DataOut: pc r11 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:0x0000 r15:<invalid> r14:0216 sr:<invalid> -4(fp):r10 -2(fp):r11

l5186:
	word20 sr_27
	word20 r4_28
	word20 r5_29
	word20 r6_30
	word20 r7_31
	word20 r8_32
	word20 r9_33
	word20 r10_34
	word20 r11_35
	word20 r12_36
	word20 r13_37
	word20 r14_38
	word20 r15_39
	word20 sp_40 = xTaskResumeAll(pc, sr_18, r11_15, out sr_27, out r4_28, out r5_29, out r6_30, out r7_31, out r8_32, out r9_33, out r10_34, out r11_35, out r12_36, out r13_37, out r14_38, out r15_39)
	word20 r15_41
	*r15Out = r10_34
	word20 r10_45
	*r10Out = Mem0[sp_40:word16]
	word20 r11_48
	*r11Out = Mem0[sp_40 + 2:word16]
	return sp_40 + 6
// DataOut: pc r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r14:0216 sr:<invalid> -4(fp):r10 -2(fp):r11

pvPortMalloc_exit:
// DataOut: r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r14:<invalid> sr:<invalid> r8:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> -4(fp):r10 -2(fp):r11



word20 vPortFree(word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: sp
// Trashed: sp
// Preserved:
vPortFree_entry:
// DataOut: pc r12 r13 r14 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l5192:
	return fp + 2
// DataOut: pc r12 r13 r14 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp

vPortFree_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2



void vPortInitialiseBlocks(word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: sp
// Preserved:
vPortInitialiseBlocks_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l5194:
	Mem2[0x0216:ptr16] = 0x0000
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

vPortInitialiseBlocks_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 2



word20 pxPortInitialiseStack(word20 r13, word20 r14, word20 r15, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13 r14 r15
// LiveOut: r15
// Trashed: VNZC r15 sp
// Preserved:
pxPortInitialiseStack_entry:
// DataOut: pc r11 r13 r14 r15 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l519A:
	Mem7[r15:word16] = r14
	Mem11[r15 - 0x0002:word16] = 0x0008
	Mem15[r15 - 0x0004:word16] = 0x4444
	Mem19[r15 - 0x0006:word16] = 0x5555
	Mem23[r15 - 0x0008:word16] = 0x6666
	Mem27[r15 - 0x000A:word16] = 0x7777
	Mem31[r15 - 0x000C:word16] = 0x8888
	Mem35[r15 - 0x000E:word16] = 0x9999
	Mem39[r15 - 0x0010:word16] = 0xAAAA
	Mem43[r15 - 0x0012:word16] = 0xBBBB
	Mem47[r15 - 0x0014:word16] = 0xCCCC
	Mem51[r15 - 0x0016:word16] = 0xDDDD
	Mem55[r15 - 0x0018:word16] = 0xEEEE
	Mem60[r15 - 0x001A:word16] = r13
	Mem65[r15 - 0x001C:word16] = 0x0000
	return r15 - 0x001C
// DataOut: pc r11 r15 r5 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

pxPortInitialiseStack_exit:
// DataOut: r15
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r15:r15 - 0x7FFE



word20 xPortStartScheduler(word20 pc, ptr16 & r12Out, ptr16 & r13Out, ptr16 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc
// LiveOut: r11 r12 r13 r14
// Trashed: r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9
// Preserved: sp
xPortStartScheduler_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l520A:
	prvSetupTimerInterrupt(wLoc02)
	word16 v6_7 = Mem0[Mem0[pc + -20494:word16]:word16]
	Mem14[pc + -20480:word16] = Mem0[v6_7:word16]
	word20 r14_20
	*r14Out = Mem14[v6_7 + 4:word16]
	word20 r13_23
	*r13Out = Mem14[v6_7 + 6:word16]
	word20 r12_26
	*r12Out = Mem14[v6_7 + 8:word16]
	return Mem14[v6_7 + 10:word16]
// DataOut: r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

xPortStartScheduler_exit:
// DataOut: r11 r12 r13 r14
// DataOut (flags): 
// SymbolicIn: sp:fp r12:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid>



word20 vPortEndScheduler(word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: sp
// Trashed: sp
// Preserved:
vPortEndScheduler_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l5238:
	return fp + 2
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp

vPortEndScheduler_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2



word20 vPortYield(word20 pc, word20 sr, ptr16 & r4Out, ptr16 & r5Out, ptr16 & r6Out, ptr16 & r7Out, ptr16 & r8Out, ptr16 & r9Out, ptr16 & r10Out, ptr16 & r11Out, ptr16 & r12Out, ptr16 & r13Out, ptr16 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc sr
// LiveOut: r10 r11 r12 r13 r14 r4 r5 r6 r7 r8 r9 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
vPortYield_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000523A:
	Mem52[Mem0[pc + -20572:word16]:word16] = fp - 28
	vTaskSwitchContext(wLoc1E)
	word16 v21_56 = Mem52[Mem52[pc + -20584:word16]:word16]
	Mem63[pc + -20570:word16] = Mem52[v21_56:word16]
	word20 r14_69
	*r14Out = Mem63[v21_56 + 4:word16]
	word20 r13_72
	*r13Out = Mem63[v21_56 + 6:word16]
	word20 r12_75
	*r12Out = Mem63[v21_56 + 8:word16]
	word20 r11_78
	*r11Out = Mem63[v21_56 + 10:word16]
	word20 r10_81
	*r10Out = Mem63[v21_56 + 12:word16]
	word20 r9_84
	*r9Out = Mem63[v21_56 + 14:word16]
	word20 r8_87
	*r8Out = Mem63[v21_56 + 16:word16]
	word20 r7_90
	*r7Out = Mem63[v21_56 + 18:word16]
	word20 r6_93
	*r6Out = Mem63[v21_56 + 20:word16]
	word20 r5_96
	*r5Out = Mem63[v21_56 + 22:word16]
	word20 r4_99
	*r4Out = Mem63[v21_56 + 24:word16]
	return sr & ~0x0008
// DataOut: pc r10 r11 r12 r13 r14 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

vPortYield_exit:
// DataOut: r10 r11 r12 r13 r14 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp sr:sr & ~0x0008 r14:(word16) r13 r12:(word16) r11 r15:(word16) r14 r13:(word16) r12 r11:(word16) r10 r10:(word16) r9 r9:(word16) r8 r8:(word16) r7 r7:(word16) r6 r6:(word16) r5 r5:(word16) r4 r4:(word16) sr -28(fp):<invalid> -26(fp):r15 -24(fp):r14 -22(fp):r13 -20(fp):r12 -18(fp):r11 -16(fp):r10 -14(fp):r9 -12(fp):r8 -10(fp):r7 -8(fp):r6 -6(fp):r5 -4(fp):r4 -2(fp):sr



void prvSetupTimerInterrupt(word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: sp
// Preserved:
prvSetupTimerInterrupt_entry:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l528E:
	Mem2[0x0160:ptr16] = 0x0000
	Mem3[0x0160:ptr16] = 0x0100
	Mem4[0x0160:ptr16] = Mem3[0x0160:ptr16] | 0x0004
	Mem5[0x0172:ptr16] = 0x0020
	Mem6[0x0162:ptr16] = 0x0010
	Mem7[0x0160:ptr16] = Mem6[0x0160:ptr16] | 0x0004
	Mem8[0x0160:ptr16] = Mem7[0x0160:ptr16] | 0x0010
	return
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp

prvSetupTimerInterrupt_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 2



void prvTickISR(word20 pc, word20 r4, word20 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 r4
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9
// Preserved: sp
prvTickISR_entry:
// DataOut: pc r11 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l52B4:
	Mem48[Mem0[pc + -20690:word16]:word16] = fp - 26
	word20 r11_49
	word20 r12_50
	word20 r13_51
	word20 r14_52
	vTaskIncrementTick(r11, out r11_49, out r12_50, out r13_51, out r14_52)
	vTaskSwitchContext(r4)
	Mem63[pc + -20692:word16] = Mem48[Mem48[Mem48[pc + -20706:word16]:word16]:word16]
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

prvTickISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r14:(word16) r14 r12:(word16) r12 r15:(word16) r15 r13:(word16) r13 r11:(word16) r11 r10:(word16) r10 r9:(word16) r9 r8:(word16) r8 r7:(word16) r7 r6:(word16) r6 r5:(word16) r5 r4:(word16) r4 -26(fp):<invalid> -24(fp):r15 -22(fp):r14 -20(fp):r13 -18(fp):r12 -16(fp):r11 -14(fp):r10 -12(fp):r9 -10(fp):r8 -8(fp):r7 -6(fp):r6 -4(fp):r5 -2(fp):r4



word20 printf(word20 pc, word20 r8, word20 r11, word16 wArg00, ptr16 & spOut, ptr16 & r8Out, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 r8
// LiveOut: pc r11 r8 sp
// Trashed: VNZC pc r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp
// Preserved:
printf_entry:
// DataOut: pc r11 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l5308:
	word20 sp_19
	*spOut = fp + 2
	word20 r8_14
	word20 r11_15
	return vuprintf(pc, r8, r11, fp + 0x0004, Mem0[fp + 0x0002:word16], 0x43A2, out r8_14, out r11_15)
// DataOut: pc r11 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp

printf_exit:
// DataOut: pc r11 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r15:<invalid> r14:<invalid> r13:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r4:<invalid> r12:<invalid>



word20 PRINT(word20 pc, word20 r14, word20 r15, word16 wArg00, ptr16 & r10Out, ptr16 & r11Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r14 r15
// LiveOut: r10 r11 r15 sp
// Trashed: VNZC r10 r11 r15 sp
// Preserved:
PRINT_entry:
// DataOut: pc r10 r11 r14 r15 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000531A:
	word20 r10_38 = r15
	word20 r11_11 = r14
	branch r14 != 0x0000 l0000532A
// DataOut: pc r10 r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l0000532A:
	word20 r15_44 = (int16) Mem0[r10_38:byte]
	__write_char(pc)
	r10_38 = r10_38 + 0x0001
	branch r15_44 < 0x0000 l00005342
// DataOut: pc r10 r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)
// Terminates process

l00005342:
	word20 r15_55
	*r15Out = 0xFFFF
// DataOut: pc r15 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005338:
	Mem50[0x021A:ptr16] = Mem0[0x021A:ptr16] + 0x0001
	r11_11 = r11_11 + 0xFFFF
	branch r11_11 != 0x00000 l0000532A
// DataOut: pc r10 r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005340:
// DataOut: pc r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: r11:r11 + 0xFFFF -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005326:
	word20 r15_36
	*r15Out = 0x0001
// DataOut: pc r15 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005344:
	word20 r10_21
	*r10Out = r10
	word20 r11_24
	*r11Out = r11
	return fp + 2
// DataOut: pc r10 r11 r15 r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r15:<invalid> -4(fp):r10 -2(fp):r11

PRINT_exit:
// DataOut: r10 r11 r15 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r10:(word16) r15 r11:<invalid> r15:<invalid> -4(fp):r10 -2(fp):r11



word20 __write_pad(word20 pc, word20 r14, word20 r15, word16 wArg00, ptr16 & r9Out, ptr16 & r10Out, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r14 r15
// LiveOut: r10 r11 r9 sp
// Trashed: VNZC r10 r11 r15 r9 sp
// Preserved: r15
__write_pad_entry:
// DataOut: pc r10 r11 r14 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000534A:
	word20 r11_14 = r14
	branch r14 < 0x01 l00005370
// DataOut: pc r11 r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20)

l00005358:
	word20 r10_48 = (int16) SLICE(r15, byte, 0)
// DataOut: pc r10 r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:r14 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20)

l0000535C:
	__write_char(pc)
	branch r10_48 < 0x0000 l00005374
// DataOut: pc r10 r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:<invalid> r10:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20)
// Terminates process

l00005374:
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20)

l00005366:
	Mem57[0x021A:ptr16] = Mem0[0x021A:ptr16] + 0x0001
	r11_14 = r11_14 + 0xFF
	branch r11_14 >= 0x01 l0000535C
// DataOut: pc r10 r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20)

l00005370:
// DataOut: pc r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20)

l00005376:
	word20 r9_26
	*r9Out = r9
	word20 r10_29
	*r10Out = r10
	word20 r11_32
	*r11Out = r11
	return fp + 2
// DataOut: pc r10 r11 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:<invalid> r15:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

__write_pad_exit:
// DataOut: r10 r11 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r9:(word16) r15 r11:<invalid> r15:<invalid> r10:(word16) r10 -6(fp):r9 -4(fp):r10 -2(fp):r11



word20 vuprintf(word20 pc, word20 r8, word20 r11, word20 r13, word20 r14, word20 r15, ptr16 & r8Out, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 r13 r14 r15 r8
// LiveOut: pc r11 r8
// Trashed: VNZC pc r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9
// Preserved: sp
vuprintf_entry:
// DataOut: pc r11 r13 r14 r15 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l537E:
	Mem38[0x021A:ptr16] = 0x0000
	Mem40[0x09B2:ptr16] = r15
	word20 sp_198 = fp - 0x0000004C
	word20 r5_195 = r13
	word20 r6_103 = r14
// DataOut: pc r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l53A6:
	word20 r6_75
	byte v17_70 = Mem40[r6_103:byte]
	word20 r7_71 = v17_70
	r6_75 = r6_103
	branch v17_70 == 0x00 l53C2
// DataOut: pc r15 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53AE:
	r6_75 = r6_103
	r6_75 = r6_103
	branch v17_70 == 0x0025 l53C2
// DataOut: pc r15 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53B4:
	r6_75 = r6_75 + 0x0001
	byte v19_996 = Mem40[r6_75:byte]
	r7_71 = v19_996
	branch v19_996 == 0x00 l53C2
// DataOut: pc r15 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53BC:
	branch v19_996 != 0x0025 l53B4
// DataOut: pc r15 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53C2:
	branch r6_75 - r6_103 == 0x00000 l53CC
// DataOut: pc r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53C8:
	pc = 0x5916
// DataOut: pc r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53CC:
	branch r7_71 != 0x00 l53D4
// DataOut: pc r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53D0:
	pc = 0x5924
// DataOut: pc r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53D4:
	Mem88[sp_198 + 46:byte] = 0x00
	Mem91[sp_198 + 53:byte] = 0x00
	Mem94[sp_198 + 47:byte] = 0x00
	Mem98[sp_198 + 40:byte] = 0x00
	r6_103 = r6_75 + 0x0001
	word20 r11_95 = 0xFF
// DataOut: pc r11 r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53E8:
	word20 r7_107 = Mem98[r6_103:byte]
	r6_103 = r6_103 + 0x0001
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53EC:
	branch r7_107 != 0x0075 l53F6
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53F2:
	pc = 0x58F0
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53F6:
	branch (r7_107 | 0x0020) != 0x0078 l5406
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5402:
	pc = 0x58F0
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5406:
	branch r7_107 != 0x0020 l5410
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l540C:
	pc = 0x58DC
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5410:
	branch r7_107 != 0x0023 l541A
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5416:
	pc = 0x58D4
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l541A:
	branch r7_107 != 0x002A l5424
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5420:
	pc = 0x58B8
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5424:
	branch r7_107 != 0x002D l542E
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l542A:
	pc = 0x58A8
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l542E:
	branch r7_107 != 0x002B l5438
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5434:
	pc = 0x589E
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5438:
	branch r7_107 != 0x002E l5442
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l543E:
	pc = 0x5838
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5442:
	branch r7_107 != 0x0030 l544C
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5448:
	pc = 0x5822
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l544C:
	branch r7_107 <u 0xFFC6 l548C
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l548C:
	branch r7_107 == 0x0068 l581A
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l581A:
	Mem876[sp_198 + 46:byte] = Mem98[sp_198 + 46:byte] | 0x04
	branch (Mem876[sp_198 + 46:byte] & 0x0010) == 0x0000 l582E
// DataOut: r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l582A:
// DataOut: r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:0x53E8 r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l582E:
	Mem886[sp_198 + 46:byte] = Mem876[sp_198 + 46:byte] | 0x0020
	byte v139_888 = Mem886[r6_103:byte]
	word20 r7_889 = v139_888
	word20 r6_890 = r6_103 + 0x0001
	branch v139_888 == 0x002A l588A
// DataOut: r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:0x53E8 r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l5842:
	word20 r13_939 = 0x0000
	branch v139_888 <u 0xFFC6 l587C
// DataOut: r13 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:0x53E8 r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l5850:
	word20 r14_963 = r13_939 * 0x00002
	byte v141_973 = Mem886[r6_890:byte]
	r13_939 = r13_939 * 0x00004 + r14_963 + r14_963 + r14_963 + (int16) SLICE(r7_889, byte, 0) + 0xFFD0
	r7_889 = v141_973
	r6_890 = r6_890 + 0x0001
	branch v141_973 >=u 0xFFC6 l5850
// DataOut: r13 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:0x53E8 r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l587C:
	branch r13_939 >= 0xFFFF l5884
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:0x53E8 r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l5882:
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:0x53E8 r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l5884:
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:0x53E8 r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l588A:
	word20 r5_900 = r5_195 + 0x0002
	branch Mem886[r5_195:word16] >= 0xFFFF l5898
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l5896:
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l5898:
	Mem910[sp_198 + 40:byte] = 0x002B
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l58A8:
	Mem915[sp_198 + 46:byte] = Mem910[sp_198 + 46:byte] | 0x0010
	Mem918[sp_198 + 46:byte] = Mem915[sp_198 + 46:byte] & 0xFFDF
	Mem925[sp_198 + 47:byte] = Mem918[r5_900:byte]
	r5_900 = r5_900 + 0x0002
	branch Mem925[sp_198 + 47:byte] < 0x00 l58CA
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:0x53E8 r11:<invalid> r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l58C6:
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:0x53E8 r11:<invalid> r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l58CA:
	Mem932[sp_198 + 47:byte] = Mem925[sp_198 + 47:byte] ^ 0xFF
	Mem935[sp_198 + 47:byte] = Mem932[sp_198 + 47:byte] + 0x01
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:0x53E8 r11:<invalid> r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l5492:
	branch r7_107 != 0x006C l549E
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l549E:
	word20 r9_197
	branch r7_107 == 0x0063 l580C
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l580C:
	Mem866[sp_198 + 44:word16] = sp_198
	Mem873[sp_198:byte] = Mem866[r5_195:byte]
	r5_195 = r5_195 + 0x0002
// DataOut: pc r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54A4:
	branch r7_107 == 0x0044 l5806
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5806:
	Mem863[sp_198 + 46:byte] = Mem98[sp_198 + 46:byte] | 0x01
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54AA:
	branch r7_107 == 0x0064 l57AE
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54B0:
	branch r7_107 == 0x0069 l57AE
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l57AE:
	branch (Mem98[sp_198 + 46:byte] & 0x01) == 0x00 l57E6
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l57E6:
	Mem677[sp_198 + 48:word16] = Mem98[r5_195:word16]
	Mem681[sp_198 + 50:word16] = Mem677[sp_198 + 48:word16]
	word16 v71_684 = Mem681[sp_198 + 50:word16] + Mem681[sp_198 + 50:word16]
	Mem685[sp_198 + 50:word16] = v71_684
	Mem691[sp_198 + 50:word16] = Mem685[sp_198 + 50:word16] - Mem685[sp_198 + 50:word16] - (v71_684 <u 0x0000)
	Mem694[sp_198 + 50:word16] = Mem691[sp_198 + 50:word16] ^ 0xFFFF
	r5_195 = r5_195 + 0x0002
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l57B4:
	Mem666[sp_198 + 48:word16] = Mem98[r5_195:word16]
	Mem671[sp_198 + 50:word16] = Mem666[r5_195 + 2:word16]
	r5_195 = r5_195 + 0x0004
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l57C0:
	branch Mem98[sp_198 + 50:word16] < 0x0000 l57CE
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l57CE:
	Mem643[sp_198 + 48:word16] = Mem98[sp_198 + 48:word16] ^ 0xFFFF
	Mem646[sp_198 + 50:word16] = Mem643[sp_198 + 50:word16] ^ 0xFFFF
	word16 v63_647 = Mem646[sp_198 + 48:word16]
	Mem649[sp_198 + 48:word16] = v63_647 + 0x0001
	Mem654[sp_198 + 50:word16] = Mem649[sp_198 + 50:word16] + (v63_647 <u 0x0001)
	Mem658[sp_198 + 40:byte] = 0x002D
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l57C6:
	Mem640[sp_198 + 52:byte] = 0x000A
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54B6:
	branch r7_107 == 0x004F l57A8
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l57A8:
	Mem860[sp_198 + 46:byte] = Mem98[sp_198 + 46:byte] | 0x01
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54BC:
	branch r7_107 == 0x006F l57A2
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l57A2:
	Mem717[sp_198 + 52:byte] = 0x08
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54C2:
	branch r7_107 == 0x0070 l5784
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5784:
	Mem847[sp_198 + 48:word16] = Mem98[r5_195:word16]
	Mem850[sp_198 + 50:word16] = 0x0000
	Mem853[sp_198 + 52:byte] = 0x0010
	Mem856[sp_198 + 46:byte] = Mem853[sp_198 + 46:byte] | 0x0040
	r5_195 = r5_195 + 0x0002
	r7_107 = 0x0078
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54C8:
	branch r7_107 == 0x0073 l570C
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l570C:
	Mem776[sp_198 + 44:word16] = Mem98[r5_195:word16]
	r5_195 = r5_195 + 0x0002
	branch Mem776[sp_198 + 44:word16] == 0x0000 l5756
// DataOut: pc r11 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5756:
	Mem819[sp_198 + 44:word16] = sp_198
	Mem822[sp_198:byte] = 0x0028
	Mem825[sp_198 + 1:byte] = 0x006E
	Mem828[sp_198 + 2:byte] = 0x0075
	Mem831[sp_198 + 3:byte] = 0x006C
	Mem834[sp_198 + 4:byte] = 0x006C
	Mem837[sp_198 + 5:byte] = 0x0029
	Mem840[sp_198 + 6:byte] = 0x00
// DataOut: pc r11 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l571A:
	branch r11_95 < 0x00 l5740
// DataOut: pc r11 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5740:
	word20 r15_806 = Mem776[sp_198 + 44:word16] - 0x0001
// DataOut: pc r15 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5746:
	r15_806 = r15_806 + 0x0001
	branch Mem776[r15_806:byte] != 0x00 l5746
// DataOut: pc r15 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l574E:
	r9_197 = r15_806 - Mem776[sp_198 + 44:byte]
// DataOut: pc r5 r6 r7 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l571E:
	word20 r11_791
	word20 r15_792
	sp_198 = memchr((int16) SLICE(r11_95, byte, 0), 0x0000, Mem776[sp_198 + 44:word16], r11, out r11_791, out r15_792)
	branch r15_792 == 0x0000 l573C
// DataOut: pc r11 r15 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5732:
	r9_197 = r15_792 - Mem776[sp_198 + 44:byte]
	branch r11_791 >= r9_197 l54F8
// DataOut: pc r11 r5 r6 r7 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l573C:
	r9_197 = r11_791
// DataOut: pc r5 r6 r7 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54CE:
	branch r7_107 == 0x0055 l5706
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5706:
	Mem770[sp_198 + 46:byte] = Mem98[sp_198 + 46:byte] | 0x01
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54D4:
	branch r7_107 == 0x0075 l56FE
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l56FE:
	Mem730[sp_198 + 52:byte] = 0x000A
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54DA:
	branch r7_107 == 0x0058 l55FE
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54E0:
	branch r7_107 == 0x0078 l55FE
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55FE:
	Mem738[sp_198 + 52:byte] = 0x0010
	branch (Mem738[sp_198 + 46:byte] & 0x08) == 0x00 l561C
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l560A:
	branch Mem738[sp_198 + 48:word16] != 0x0000 l5616
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5610:
	branch Mem738[sp_198 + 50:word16] == 0x0000 l561C
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5616:
	Mem752[sp_198 + 46:byte] = Mem738[sp_198 + 46:byte] | 0x0040
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l561C:
	Mem712[sp_198 + 40:byte] = 0x00
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5620:
	Mem458[sp_198 + 53:byte] = 0xFF
	branch r11_95 < 0x00 l562E
// DataOut: pc r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5628:
	Mem620[sp_198 + 46:byte] = Mem458[sp_198 + 46:byte] & 0xFFDF
// DataOut: pc r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l562E:
	Mem467[sp_198 + 44:word16] = sp_198 + 0x0028
	branch Mem467[sp_198 + 48:word16] != 0x0000 l564A
// DataOut: pc r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l563E:
	branch Mem467[sp_198 + 50:word16] != 0x0000 l564A
// DataOut: pc r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5644:
	branch Mem467[sp_198 + 53:byte] == 0x00 l56C6
// DataOut: pc r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l564A:
	Mem495[sp_198 + 56:byte] = Mem467[sp_198 + 52:byte]
	Mem498[sp_198 + 57:byte] = 0x00
	Mem501[sp_198 + 58:word16] = 0x0000
// DataOut: pc r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5658:
	Mem514[sp_198 + 54:byte] = 0x00
	branch Mem514[sp_198 + 50:word16] - Mem514[sp_198 + 58:word16] - (Mem514[sp_198 + 48:word16] - Mem514[sp_198 + 56:word16] <u 0x00000) >=u 0x00000 l5672
// DataOut: pc r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l566E:
	Mem611[sp_198 + 54:byte] = 0x01
// DataOut: pc r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5672:
	word20 r4_547
	word20 sp_535
	word20 r8_536
	word20 r12_537
	word20 r13_538
	word20 r14_539
	word20 r15_540
	fn00005B4E(r8, Mem514[sp_198 + 56:word16], Mem514[sp_198 + 58:word16], Mem514[sp_198 + 48:word16], Mem514[sp_198 + 50:word16], r11, out sp_535, out r8_536, out r12_537, out r13_538, out r14_539, out r15_540)
	branch r14_539 <u 0x000A l56EE
// DataOut: pc r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l56EE:
	r4_547 = r14_539 + 0x0057
	branch r7_107 != 0x0058 l5692
// DataOut: pc r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l56F8:
	r4_547 = r14_539 + 0x0057 & 0xFFDF
// DataOut: pc r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l568E:
	r4_547 = r14_539 + 0x0030
// DataOut: pc r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5692:
	Mem550[sp_535 + 44:word16] = Mem514[sp_535 + 44:word16] + 0xFFFF
	Mem556[Mem550[sp_535 + 44:word16]:byte] = r4_547
	word20 r12_567
	word20 r13_568
	word20 r14_569
	word20 r15_570
	fn00005B4E(r8_536, Mem556[sp_535 + 56:word16], Mem556[sp_535 + 58:word16], Mem556[sp_535 + 48:word16], Mem556[sp_535 + 50:word16], r11, out sp_198, out r8, out r12_567, out r13_568, out r14_569, out r15_570)
	Mem574[sp_198 + 48:word16] = r12_567
	Mem577[sp_198 + 50:word16] = r13_568
	branch Mem577[sp_198 + 54:byte] != 0x00 l5658
// DataOut: pc r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l56C0:
	branch Mem577[sp_198 + 52:byte] == 0x08 l56D2
// DataOut: pc r4 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l56D2:
	branch (Mem577[sp_198 + 46:byte] & 0x08) == 0x00 l56C6
// DataOut: pc r4 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l56D8:
	branch r4_547 == 0x0030 l56C6
// DataOut: pc r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l56DE:
	Mem594[sp_198 + 44:word16] = Mem577[sp_198 + 44:word16] + 0xFFFF
	Mem600[Mem594[sp_198 + 44:word16]:byte] = 0x0030
// DataOut: pc r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l56C6:
	r9_197 = sp_198 - Mem467[sp_198 + 44:byte] + 0x0028
// DataOut: pc r5 r6 r7 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54E6:
	branch r7_107 != 0x00 l54EE
// DataOut: pc r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54EA:
	pc = 0x5924
// DataOut: pc r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54EE:
	Mem763[sp_198 + 44:word16] = sp_198
	Mem766[sp_198:byte] = r7_107
// DataOut: pc r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54F6:
	r9_197 = 0x01
// DataOut: pc r5 r6 r7 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54F8:
	Mem440[sp_198 + 40:byte] = 0x00
// DataOut: pc r5 r6 r7 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54FC:
	word20 r11_204 = r9_197
	word20 r10_207 = Mem98[sp_198 + 53:byte] - r9_197
	branch r10_207 < 0x00000 l55FA
// DataOut: pc r10 r11 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55FA:
	r10_207 = 0x00
// DataOut: pc r10 r11 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5506:
	byte v54_211 = Mem98[sp_198 + 40:byte]
	word20 r14_212 = v54_211
	branch v54_211 == 0x00 l55EE
// DataOut: pc r10 r11 r14 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55EE:
	branch (Mem98[sp_198 + 46:byte] & 0x0040) == 0x0000 l5510
// DataOut: pc r10 r11 r14 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55F6:
	r11_204 = r9_197 + 0x02
// DataOut: pc r10 r11 r14 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l550E:
	r11_204 = r9_197 + 0x01
// DataOut: pc r10 r11 r14 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5510:
	byte v55_220 = Mem98[sp_198 + 46:byte]
	word20 r11_219 = r11_204 + r10_207
	r8 = v55_220 & 0x0030
	branch (v55_220 & 0x0030) != 0x00000 l5542
// DataOut: pc r10 r11 r14 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l551C:
	word20 r13_399 = (int16) (Mem98[sp_198 + 0x0002F:byte] - SLICE(r11_219, byte, 0))
	branch r13_399 < 0x0001 l5542
// DataOut: pc r10 r11 r13 r14 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l552C:
	word20 r15_403 = 0x0020
	word20 r9_404
	sp_198 = __write_pad(pc, r13_399, r15_403, r11, out r9_404, out r10_207, out r11_219)
	branch r15_403 >= 0x0000 l553E
// DataOut: pc r10 r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l553A:
	pc = 0x5924
// DataOut: pc r10 r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l553E:
	r14_212 = Mem98[sp_198 + 40:byte]
// DataOut: pc r10 r11 r14 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5542:
	word20 r15_359
	word20 r14_358
	branch r14_212 != 0x00 l55E4
// DataOut: pc r10 r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55E4:
	r14_358 = 0x0001
	r15_359 = sp_198 + 0x0028
// DataOut: pc r14 r15 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5546:
	branch (Mem98[sp_198 + 46:byte] & 0x0040) == 0x0000 l5576
// DataOut: pc r10 r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l554E:
	Mem380[sp_198 + 42:word16] = Mem98[sp_198 + 42:word16] & 0xFF00 | 0x0030
	Mem383[sp_198 + 43:byte] = r7_107
	r14_358 = 0x0002
	r15_359 = sp_198 + 0x002A
// DataOut: pc r14 r15 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l556A:
	word20 r15_363
	sp_198 = PRINT(pc, r14_358, r15_359, r11, out r10_207, out r11_219, out r15_363)
	branch r15_363 >= 0x0000 l5576
// DataOut: pc r10 r11 r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5572:
	pc = 0x5924
// DataOut: pc r10 r11 r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5576:
	branch (v55_220 & 0x0030) == 0x0020 l55C4
// DataOut: pc r10 r11 r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55C4:
	word20 r13_344 = (int16) (Mem98[sp_198 + 0x0002F:byte] - SLICE(r11_219, byte, 0))
	branch r13_344 < 0x0001 l557C
// DataOut: pc r10 r13 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55D4:
	word20 r15_348 = 0x0030
	word20 r9_349
	word20 r11_351
	sp_198 = __write_pad(pc, r13_344, r15_348, r11, out r9_349, out r10_207, out r11_351)
	branch r15_348 >= 0x0000 l557C
// DataOut: pc r10 r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55E2:
// DataOut: pc sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l557C:
	word20 r15_292 = 0x0030
	word20 r9_293
	word20 r10_294
	word20 r11_295
	sp_198 = __write_pad(pc, r10_207, r15_292, r11, out r9_293, out r10_294, out r11_295)
	branch r15_292 < 0x0000 l5924
// DataOut: pc r5 r6 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l558A:
	word20 r10_307
	word20 r11_308
	word20 r15_309
	sp_198 = PRINT(pc, (int16) SLICE(r9_293, byte, 0), Mem98[sp_198 + 44:word16], r11, out r10_307, out r11_308, out r15_309)
	branch r15_309 < 0x0000 l5924
// DataOut: pc r11 r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l559C:
	branch (Mem98[sp_198 + 46:byte] & 0x0010) == 0x0000 l53A6
// DataOut: pc r11 r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55A4:
	word20 r13_326 = (int16) (Mem98[sp_198 + 0x0002F:byte] - SLICE(r11_308, byte, 0))
	branch r13_326 < 0x0001 l53A6
// DataOut: pc r13 r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55B4:
	word20 r15_330 = 0x0020
	word20 r9_331
	word20 r10_332
	word20 r11_333
	sp_198 = __write_pad(pc, r13_326, r15_330, r11, out r9_331, out r10_332, out r11_333)
	branch r15_330 >= 0x0000 l53A6
// DataOut: pc r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55C2:
// DataOut: pc sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l5924:
	word20 sp_259 = sp_198 + 0x003C
	word20 r8_275
	*r8Out = Mem98[sp_259 + 8:word16]
	word20 r11_284
	*r11Out = Mem98[sp_259 + 14:word16]
	return pc
// DataOut: pc r11 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

vuprintf_exit:
// DataOut: pc r11 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r5:(word16) r4 r6:(word16) r5 r15:021A r7:(word16) r6 r13:<invalid> pc:<invalid> r11:(word16) r10 r9:(word16) r8 r10:(word16) r9 r14:<invalid> r8:(word16) r7 r4:<invalid> r12:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l5498:
	Mem184[sp_198 + 46:byte] = Mem98[sp_198 + 46:byte] | 0x01
// DataOut: pc r11 r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5458:
	word20 r13_150 = 0x0000
// DataOut: pc r11 r13 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l545A:
	word20 r14_158 = r13_150 * 0x00002
	word20 r13_166 = r13_150 * 0x00004 + r14_158 + r14_158 + r14_158 + (int16) SLICE(r7_107, byte, 0)
	byte v30_168 = Mem98[r6_103:byte]
	r13_150 = r13_166 + 0xFFD0
	r7_107 = v30_168
	r6_103 = r6_103 + 0x0001
	branch v30_168 >=u 0xFFC6 l545A
// DataOut: pc r11 r13 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5486:
	Mem177[sp_198 + 47:byte] = r13_166 + 0xFFD0
// DataOut: pc r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)



word20 memchr(word20 r13, word20 r14, word20 r15, word16 wArg00, ptr16 & r11Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13 r14 r15
// LiveOut: r11 r15 sp
// Trashed: VNZC r11 r12 r13 r14 r15 sp
// Preserved:
memchr_entry:
// DataOut: pc r11 r13 r14 r15 r5 r6 r7 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000593E:
	branch r13 == 0x0000 l00005956
// DataOut: pc r11 r12 r13 r5 r6 r7 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20)

l00005948:
	word20 r14_30 = r15
// DataOut: pc r12 r13 r14 r5 r6 r7 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:r14 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l0000594A:
	r14_30 = r14_30 + 0x0001
	branch Mem0[r14_30:byte] == r14 l0000595A
// DataOut: pc r12 r13 r14 r5 r6 r7 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:r14 r14:<invalid> r15:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l0000595A:
	word20 r15_43
	*r15Out = r14_30 + 0xFFFF
// DataOut: pc r15 r5 r6 r7 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:r14 r14:<invalid> r15:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l00005952:
	r13 = r13 + 0xFFFF
	branch r13 != 0x00000 l0000594A
// DataOut: pc r12 r13 r14 r5 r6 r7 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:r14 r14:<invalid> r15:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l00005956:
	word20 r15_29
	*r15Out = 0x0000
// DataOut: pc r15 r5 r6 r7 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:r14 r14:<invalid> r15:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l0000595E:
	word20 r11_19
	*r11Out = r11
	return fp + 2
// DataOut: pc r11 r15 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:r14 r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11

memchr_exit:
// DataOut: r11 r15 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r11:(word16) r15 r12:r14 r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11



word20 strncpy(word20 r13, word20 r14, word20 r15, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13 r14 r15
// LiveOut: r11
// Trashed: VNZC r11 r12 r13 r14 sp
// Preserved: r15
strncpy_entry:
// DataOut: pc r10 r11 r13 r14 r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l5962:
	branch r13 == 0x0000 l598E
// DataOut: pc r10 r13 r14 r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20)

l596A:
	word20 r12_24 = r15
// DataOut: pc r10 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l596C:
	Mem32[r12_24:byte] = Mem0[r14:byte]
	r14 = r14 + 0x0001
	r12_24 = r12_24 + 0x0001
	branch Mem32[r12_24:byte] == 0x00 l5980
// DataOut: pc r10 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l5980:
	word20 r13_42 = r13 + 0xFFFF
	branch r13_42 == 0x00000 l598E
// DataOut: pc r10 r12 r13 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l5984:
	Mem49[r12_24:byte] = 0x00
	r12_24 = r12_24 + 0x0001
	r13_42 = r13_42 + 0xFFFF
	branch r13_42 != 0x00000 l5984
// DataOut: pc r10 r12 r13 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l597A:
	r13 = r13 + 0xFFFF
	branch r13 != 0x00000 l596C
// DataOut: pc r10 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l597E:
// DataOut: pc r10 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l598E:
	return r11
// DataOut: pc r10 r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11

strncpy_exit:
// DataOut: r11
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r11:(word16) r15 r15:r15 r12:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11



word20 memcpy(word20 sr, word20 r13, word20 r14, word20 r15, word16 wArg00, ptr16 & srOut, ptr16 & r10Out, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13 r14 r15 sr
// LiveOut: r10 r11 sp sr
// Trashed: VNZC r10 r11 r12 r13 r14 sp sr
// Preserved: r15
memcpy_entry:
	*srOut = sr
// DataOut: pc r10 r11 r13 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00005994:
	word20 r11_109 = r13
	word20 r13_112 = r15
	word20 r12_111 = r14
	branch r13 == 0x0000 l00005A60
// DataOut: pc r10 r11 r12 r13 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059A4:
	branch r15 == r14 l00005A60
// DataOut: pc r10 r11 r12 r13 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059A8:
	branch r15 <u r14 l00005A02
// DataOut: pc r10 r11 r12 r13 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A02:
	word20 r12_137 = r14 + r13
	word20 r13_139 = r15 + r13
	word20 r15_141 = r12_137 | r13_139
	bool C_145 = (bool) cond(r15_141 & 0x0001)
	branch (r15_141 & 0x0001) == 0x00000 l00005A30
// DataOut: pc r11 r12 r13 sr
// DataOut (flags): C
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A12:
	word20 r14_201
	branch ((r12_137 ^ r13_139) & 0x0001) != 0x00000 l00005A20
// DataOut: pc r11 r12 r13 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 + r15 r12:r14 + r15 r15:(r14 + r15 | r15 * 0x00002) & 0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A1A:
	branch r13 <u 0x0003 l00005A5A
// DataOut: pc r11 r12 r13 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 + r15 r12:r14 + r15 r15:(r14 + r15 ^ r15 * 0x00002) & 0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A5A:
	r14_201 = r12_137 & 0x0001
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 + r15 r12:r14 + r15 r15:(r14 + r15 ^ r15 * 0x00002) & 0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A20:
	r14_201 = r13
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 + r15 r12:r14 + r15 r15:(r14 + r15 ^ r15 * 0x00002) & 0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A22:
	r11_109 = r13 - r14_201
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 + r15 r12:r14 + r15 r15:(r14 + r15 ^ r15 * 0x00002) & 0x0001 r14:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A24:
	r12_137 = r12_137 + 0xFFFF
	r13_139 = r13_139 + 0xFFFF
	Mem212[r13_139:byte] = Mem0[r12_137:byte]
	r14_201 = r14_201 + 0xFFFF
	C_145 = (bool) cond(r14_201) (alias)
	branch r14_201 != 0x00000 l00005A24
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): C
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:(r14 + r15 ^ r15 * 0x00002) & 0x0001 r14:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A30:
	word20 sr_156
	*srOut = sr & ~0x0001
	word20 r14_157 = __rcr(r11_109, 0x01, C_145)
	branch r14_157 == 0x0000 l00005A46
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A3A:
	r12_137 = r12_137 - 0x0002
	r13_139 = r13_139 - 0x0002
	Mem188[r13_139:word16] = Mem0[r12_137:word16]
	r14_157 = r14_157 + 0xFFFF
	branch r14_157 != 0x00000 l00005A3A
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> sr:sr & ~0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A46:
	word20 r14_164 = r11_109 & 0x0001
	branch r14_164 == 0x00000 l00005A60
// DataOut: pc r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> sr:sr & ~0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A4C:
	r12_137 = r12_137 + 0xFFFF
	r13_139 = r13_139 + 0xFFFF
	Mem176[r13_139:byte] = Mem0[r12_137:byte]
	r14_164 = r14_164 + 0xFFFF
	branch r14_164 != 0x00000 l00005A4C
// DataOut: pc r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> sr:sr & ~0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A58:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> sr:sr & ~0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059AC:
	word20 r15_48 = r14 | r15
	bool C_123 = (bool) cond(r15_48 & 0x0001)
	branch (r15_48 & 0x0001) == 0x00000 l000059D0
// DataOut: pc r10 r11 r12 r13 r14 sr
// DataOut (flags): C
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059B4:
	word20 r14_107
	branch ((r14 ^ r15) & 0x0001) != 0x00000 l000059C0
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 r15:r14 & 0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059BC:
	branch r13 <u 0x0002 l000059F8
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 r15:0x00000 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059F8:
	r14_107 = 0x0002 - (r14 & 0x0001)
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 r15:0x00000 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059C0:
	r14_107 = r13
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 r15:0x00000 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059C2:
	r11_109 = r13 - r14_107
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 r15:<invalid> r14:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059C4:
	Mem117[r13_112:byte] = Mem0[r12_111:byte]
	r14_107 = r14_107 + 0xFFFF
	r12_111 = r12_111 + 0x0001
	r13_112 = r13_112 + 0x0001
	C_123 = (bool) cond(r14_107) (alias)
	branch r14_107 != 0x00000 l000059C4
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): C
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059D0:
	word20 sr_63
	*srOut = sr & ~0x0001
	word20 r14_64 = __rcr(r11_109, 0x01, C_123)
	branch r14_64 == 0x0000 l000059E4
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059DA:
	Mem95[r13_112:word16] = Mem0[r12_111:word16]
	r12_111 = r12_111 + 2
	r13_112 = r13_112 + 0x0002
	r14_64 = r14_64 + 0xFFFF
	branch r14_64 != 0x00000 l000059DA
// DataOut: pc r11 r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> sr:sr & ~0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059E4:
	word20 r14_71 = r11_109 & 0x0001
	branch r14_71 == 0x00000 l00005A60
// DataOut: pc r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> sr:sr & ~0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059EA:
	Mem82[r13_112:byte] = Mem0[r12_111:byte]
	r12_111 = r12_111 + 0x0001
	r13_112 = r13_112 + 0x0001
	r14_71 = r14_71 + 0xFFFF
	branch r14_71 != 0x00000 l000059EA
// DataOut: pc r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> sr:sr & ~0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059F6:
// DataOut: pc sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> sr:sr & ~0x0001 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A60:
	word20 r10_33
	*r10Out = r10
	word20 r11_36
	*r11Out = r11
	return fp + 2
// DataOut: pc r10 r11 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> sr:sr & ~0x0001 -4(fp):r10 -2(fp):r11

memcpy_exit:
// DataOut: r10 r11 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r10:(word16) r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:r15 r14:<invalid> sr:sr & ~0x0001 -4(fp):r10 -2(fp):r11



word20 memset(word20 sr, word20 r13, word20 r14, word20 r15, word16 wArg00, ptr16 & srOut, ptr16 & r9Out, ptr16 & r11Out, ptr16 & r12Out, ptr16 & r13Out, ptr16 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13 r14 r15 sr
// LiveOut: r11 r12 r13 r14 r9 sp sr
// Trashed: VNZC r10 r11 r12 r13 r14 r9 sp sr
// Preserved: r15
memset_entry:
	*r13Out = r13
	*srOut = sr
	*r12Out = r12
// DataOut: pc r11 r12 r13 r14 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l5A68:
	word20 r14_101 = r15
	*r14Out = r14_101
	branch r13 <u 0x0006 l5A8A
// DataOut: pc r10 r12 r13 r14 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l5A8A:
	word20 r11_128 = r14
	branch r14 == 0x0000 l5A96
// DataOut: pc r10 r11 r13 r14 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:r15 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l5A90:
	r11_128 = r14 | __swpb(r14)
// DataOut: pc r10 r11 r13 r14 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:r15 r11:r15 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l5A96:
	bool C_123 = (bool) cond(r15 & 0x0001)
	branch (r15 & 0x0001) == 0x00000 l5AAE
// DataOut: pc r10 r11 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): C
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:r15 r11:<invalid> r15:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l5A9C:
	word20 r15_110 = 0x0002 - (r15 & 0x0001)
	word20 r12_111 = r15_110
	*r13Out = r13 - r15_110
// DataOut: pc r10 r11 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:r15 r11:<invalid> r15:<invalid> r12:r15 & 0x0001 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l5AA4:
	Mem118[r14_101:byte] = r14
	r12_111 = r12_111 + 0xFFFF
	r14_101 = r14_101 + 0x0001
	C_123 = (bool) cond(r12_111) (alias)
	branch r12_111 != 0x00000 l5AA4
// DataOut: pc r10 r11 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): C
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:<invalid> r11:<invalid> r15:0x0002 - (r15 & 0x0001) r12:<invalid> r13:r13 - (0x0002 - (r15 & 0x0001)) -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l5AAE:
	word20 sr_82
	*srOut = sr & ~0x0001
	word20 r12_83 = __rcr(r13, 0x01, C_123)
// DataOut: pc r10 r11 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:<invalid> r11:<invalid> r15:<invalid> r12:<invalid> r13:r13 - (0x0002 - (r15 & 0x0001)) -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l5AB4:
	Mem90[r14_101:word16] = r11_128
	r14_101 = r14_101 + 0x0002
	*r14Out = r14_101
	r12_83 = r12_83 + 0xFFFF
	branch r12_83 != 0x00000 l5AB4
// DataOut: pc r10 r11 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:<invalid> r11:<invalid> r15:<invalid> r12:<invalid> sr:sr & ~0x0001 r13:r13 - (0x0002 - (r15 & 0x0001)) -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l5ABE:
	word20 r12_100 = r13 & 0x0001
	*r12Out = r12_100
	branch r12_100 == 0x00000 l5ACE
// DataOut: pc r10 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:<invalid> r11:<invalid> r15:<invalid> r12:<invalid> sr:sr & ~0x0001 r13:r13 - (0x0002 - (r15 & 0x0001)) -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l5AC4:
	Mem104[r14_101:byte] = r14
	r14_101 = r14_101 + 0x0001
	*r14Out = r14_101
	r12_100 = r12_100 + 0xFFFF
	*r12Out = r12_100
	branch r12_100 != 0x00000 l5AC4
// DataOut: pc r10 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:<invalid> r11:<invalid> r15:<invalid> r12:<invalid> sr:sr & ~0x0001 r13:r13 - (0x0002 - (r15 & 0x0001)) -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l5A7A:
	branch r13 == 0x0000 l5ACE
// DataOut: pc r10 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:r15 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l5A7E:
	Mem58[r14_101:byte] = r14
	r14_101 = r14_101 + 0x0001
	*r14Out = r14_101
	r13 = r13 + 0xFFFF
	*r13Out = r13
	branch r13 != 0x00000 l5A7E
// DataOut: pc r10 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:<invalid> r13:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l5A88:
// DataOut: pc r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:<invalid> r13:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l5ACE:
	word20 r9_31
	*r9Out = r9
	word20 r11_37
	*r11Out = r11
	return fp + 2
// DataOut: pc r11 r12 r13 r14 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:<invalid> r13:<invalid> r11:<invalid> r15:<invalid> r12:<invalid> sr:sr & ~0x0001 -6(fp):r9 -4(fp):r10 -2(fp):r11

memset_exit:
// DataOut: r11 r12 r13 r14 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r9:(word16) r15 r10:(word16) r14 r14:<invalid> r15:r15 r11:(word16) r11 r13:<invalid> r12:<invalid> sr:sr & ~0x0001 -6(fp):r9 -4(fp):r10 -2(fp):r11



word20 fn00005ADC(word20 r10, word20 r11, word20 r12, word20 r13, word16 wArg00, ptr16 & r14Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10 r11 r12 r13
// LiveOut: r14 r15 sp
// Trashed: r14 r15 sp
// Preserved:
fn00005ADC_entry:
// DataOut: pc r10 r11 r12 r13 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00005ADC:
	Mem3[0x0130:ptr16] = r12
	Mem5[0x0138:ptr16] = r10
	Mem6[0x0134:ptr16] = r12
	Mem8[0x013A:ptr16] = 0x013C
	Mem10[0x0138:ptr16] = r11
	Mem12[0x0134:ptr16] = r13
	Mem13[0x0138:ptr16] = r10
	word20 r14_7
	*r14Out = 0x013A
	word20 r15_14
	*r15Out = 0x013A
	return fp + 2
// DataOut: pc r14 r15 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00005ADC_exit:
// DataOut: r14 r15 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r14:013A r15:013A



word20 fn00005B04(word20 r10, word20 r11, word20 r12, word20 r13, ptr16 & r12Out, ptr16 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10 r11 r12 r13
// LiveOut: r12 r13 sp
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r8 r9 sp
// Preserved:
fn00005B04_entry:
// DataOut: pc r10 r11 r12 r13 r4 r5 r6 r7 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l00005B04:
	word20 r8_11 = 0x0000
	branch (r13 & 0x8000) == 0x0000 l00005B16
// DataOut: pc r10 r11 r12 r13 r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l00005B0C:
	r12 = (r12 ^ 0xFFFF) + 0x0001
	r13 = (r13 ^ 0xFFFF) + (r12 <u 0x00000)
	r8_11 = r8_11 | 0x0004
// DataOut: pc r10 r11 r12 r13 r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r8:0x0000

l00005B16:
	branch (r11 & 0x8000) == 0x0000 l00005B26
// DataOut: pc r10 r11 r12 r13 r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r13:<invalid> r12:(r12 ^ 0xFFFF ^ 0xFFFF) + 0x0001

l00005B1C:
	r10 = (r10 ^ 0xFFFF) + 0x0001
	r11 = (r11 ^ 0xFFFF) + (r10 <u 0x00000)
	r8_11 = r8_11 | 0x0008
// DataOut: pc r10 r11 r12 r13 r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r13:<invalid> r12:(r12 ^ 0xFFFF ^ 0xFFFF) + 0x0001

l00005B26:
	word20 sp_27
	word20 r8_28
	word20 r14_31
	word20 r15_32
	word20 r12_29
	word20 r13_30
	bool C_33 = fn00005B4E(r8_11, r10, r11, r12, r13, wLoc02, out sp_27, out r8_28, out r12_29, out r13_30, out r14_31, out r15_32)
	word20 r8_34 = __rcr(r8_28, 0x01, C_33)
	branch (r8_34 & 0x0004) == 0x0000 l00005B40
// DataOut: pc r12 r13 r14 r15 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r13:<invalid> r12:(r12 ^ 0xFFFF ^ 0xFFFF) + 0x0001 r11:<invalid> r10:(r10 ^ 0xFFFF ^ 0xFFFF) + 0x0001

l00005B30:
	r12_29 = (r12_29 ^ 0xFFFF) + 0x0001
	*r12Out = r12_29
	*r13Out = (r13_30 ^ 0xFFFF) + (r12_29 <u 0x00000)
// DataOut: pc r12 r13 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r13:<invalid> r12:<invalid> r11:<invalid> r10:(r10 ^ 0xFFFF ^ 0xFFFF) + 0x0001 r15:<invalid> r14:<invalid> r9:<invalid>

l00005B40:
	branch (r8_34 & 0x0008) == 0x0000 l00005B4C
// DataOut: pc r12 r13 r4 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r13:<invalid> r12:<invalid> r11:<invalid> r10:(r10 ^ 0xFFFF ^ 0xFFFF) + 0x0001 r14:<invalid> r15:<invalid> r9:<invalid>

l00005B44:
	word20 r12_59 = r12_29 ^ 0xFFFF
	word20 r12_61
	*r12Out = r12_59 + 0x0001
	word20 r13_64
	*r13Out = (r13_30 ^ 0xFFFF) + (r12_59 <u 0x00001)
// DataOut: pc r12 r13 r4 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r13:<invalid> r12:<invalid> r11:<invalid> r10:(r10 ^ 0xFFFF ^ 0xFFFF) + 0x0001 r14:<invalid> r15:<invalid> r9:<invalid>

l00005B4C:
	return sp_27 + 2
// DataOut: pc r12 r13 r4 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r13:<invalid> r12:<invalid> r11:<invalid> r10:(r10 ^ 0xFFFF ^ 0xFFFF) + 0x0001 r14:<invalid> r15:<invalid> r9:<invalid>

fn00005B04_exit:
// DataOut: r12 r13 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r13:<invalid> r12:<invalid> r11:<invalid> r10:(r10 ^ 0xFFFF ^ 0xFFFF) + 0x0001 r14:<invalid> r15:<invalid> r9:<invalid>



bool fn00005B4E(word20 r8, word20 r10, word20 r11, word20 r12, word20 r13, word16 wArg00, ptr16 & spOut, ptr16 & r8Out, ptr16 & r12Out, ptr16 & r13Out, ptr16 & r14Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10 r11 r12 r13 r8
// LiveOut: C r12 r13 r14 r15 r8 sp
// Trashed: VNZC r12 r13 r14 r15 r8 r9 sp
// Preserved:
fn00005B4E_entry:
// DataOut: pc r10 r11 r12 r13 r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00005B4E:
	word20 r15_18
	*r15Out = 0x00000
	word20 r14_17
	*r14Out = 0x00000
	bool C_19 = (bool) cond(0x00000)
	word20 r9_15 = 0x0021
// DataOut: pc r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00005B6C:
	r12 = r12 * 0x00002 + C_19
	*r12Out = r12
	r13 = r13 * 0x00002 + (r12 <u 0x00000)
	*r13Out = r13
	r9_15 = r9_15 - 0x0001
	word20 r8_26 = r8 * 0x00002 + (r13 <u 0x00000)
	*r8Out = r8_26
	bool C_30 = (bool) cond(r9_15)
	branch r9_15 != 0x00000 l00005B58
// DataOut: pc r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): C
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r8:<invalid>
// LocalsOut: fp(20)

l00005B58:
	r8 = __rcr(r8_26, 0x01, C_30)
	r14_17 = r14_17 * 0x00002 + (r8 <u 0x00000)
	*r14Out = r14_17
	r15_18 = r15_18 * 0x00002 + (r14_17 <u 0x00000)
	*r15Out = r15_18
	C_19 = (bool) cond(r15_18 - r11) (alias)
	branch r15_18 >=u r11 l00005B6C
// DataOut: pc r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): ZC
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r8:<invalid>
// LocalsOut: fp(20)

l00005B62:
	branch r15_18 != r11 l00005B68
// DataOut: pc r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r8:<invalid>
// LocalsOut: fp(20)

l00005B64:
	C_19 = (bool) cond(r14_17 - r10) (alias)
	branch r14_17 >=u r10 l00005B6C
// DataOut: pc r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): C
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r8:<invalid>
// LocalsOut: fp(20)

l00005B68:
	r14_17 = r14_17 - r10
	*r14Out = r14_17
	r15_18 = r15_18 - r11 - (r14_17 <u 0x00000)
	*r15Out = r15_18
	C_19 = (bool) cond(r15_18) (alias)
// DataOut: pc r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): C
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r8:<invalid>
// LocalsOut: fp(20)

l00005B76:
	word20 sp_35
	*spOut = fp + 2
	return C_30
// DataOut: pc r12 r13 r14 r15 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): C
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r8:<invalid>

fn00005B4E_exit:
// DataOut: r12 r13 r14 r15 r8 sp
// DataOut (flags): C
// SymbolicIn: sp:fp + 2 r15:<invalid> r14:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r8:<invalid>



