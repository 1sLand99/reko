void __write_char()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn09B2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn09B2_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l09B2:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00004000()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC pc r13 r14 r15
// Preserved: sp
fn00004000_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00004000:
	Mem2[0x0120:ptr16] = 0x5A80
	word20 r15_27 = 0x5B78
	word20 r14_26 = 0x0200
	word20 r13_5 = 0x021C
	branch r13_5 == r14_26 l00004020
// DataOut: r13 r14 r15
// DataOut (flags): 
// SymbolicIn: sp:fp

l00004016:
	Mem32[r14_26:byte] = Mem2[r15_27:byte]
	r15_27 = r15_27 + 1
	r14_26 = r14_26 + 0x0001
	branch r14_26 >=u r13_5 l00004016
// DataOut: r13 r14 r15
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r13:0x021C

l00004020:
	word20 r15_11 = 0x021C
	word20 r13_12 = 0x09B4
	branch r13_12 == r15_11 l00004036
// DataOut: r13 r15
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r13:0x021C

l0000402C:
	Mem22[r15_11:byte] = 0x00
	r15_11 = r15_11 + 0x0001
	branch r15_11 >=u r13_12 l0000402C
// DataOut: r13 r15
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r13:0x09B4

l00004036:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r13:0x09B4

fn00004000_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r13:0x09B4 pc:0x403E



void task_idle(word20 r8, word20 r11, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11 r15 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
task_idle_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

task_idle_entry:
// DataOut: r11 r15 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4048:
	xTaskGetTickCount()
	word20 sp_21 = fp - 6
	word20 r10_13 = r15 + 0x03E8
	word20 r9_15 = 0x0000
// DataOut: r10 r15 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(20)

l405A:
	xTaskGetTickCount()
	word20 r9_22 = r9_15 + 0x0001
	branch r10_13 - r15 >= 0x0001 l4080
// DataOut: r11 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r10:<invalid> r9:0x0000 r11:<invalid> r15:<invalid> sp:<invalid> r14:<invalid> r13:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> pc:<invalid> r8:<invalid> r4:<invalid> r12:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l4080:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r11:r15 r15:r10 - r10 -6(fp):r9 -4(fp):r10 -2(fp):r11

l406A:
	word20 sp_29 = sp_21 - 2
	Mem30[sp_29:word16] = r9_22
	Mem32[sp_29 - 2:word16] = 0x4040
	r10_13 = r11_34 + 0x03E8
	r9_15 = 0x0000
	word20 r11_34
	sp_21 = printf(r8, r15, r11, out r8, out r11_34, out r15) + 0x0004
// DataOut: r10 r15 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:r15 r15:r10 - r10 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)



void task_1()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
task_1_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

task_1_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4096:
	xTaskGetTickCount()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l40A0:
	Mem10[0x0031:ptr16] = Mem0[0x0031:ptr16] ^ 0x01
	word20 r11_13
	word20 sp_14 = putchar(0x0058, out r11_13)
	vTaskDelayUntil(r11_13, 0x01F4, sp_14)
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void task_2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
task_2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

task_2_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l40BC:
	xTaskGetTickCount()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l40C6:
	Mem10[0x0031:ptr16] = Mem0[0x0031:ptr16] ^ 0x02
	word20 r11_13
	word20 sp_14 = putchar(0x0059, out r11_13)
	vTaskDelayUntil(r11_13, 0x00FA, sp_14)
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void task_3()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
task_3_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

task_3_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l40E2:
	xTaskGetTickCount()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l40EC:
	Mem10[0x0031:ptr16] = Mem0[0x0031:ptr16] ^ 0x04
	word20 r11_13
	word20 sp_14 = putchar(0x005A, out r11_13)
	vTaskDelayUntil(r11_13, 0x0019, sp_14)
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void main(word20 sr, word20 r8, word20 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11 r8 sr
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
main_entry:
// DataOut: r11 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l414C:
	Mem1[0x0120:ptr16] = 0x5A80
	Mem2[0x0056:ptr16] = 0xFFE0
	Mem3[0x0057:ptr16] = 0x0007
	Mem4[0x0032:ptr16] = 0x0007
	Mem5[0x0031:ptr16] = 0x0007
	word20 sp_0 = 0x0A00
	Mem7[sp_0 - 2:word16] = 0x0010
	Mem9[sp_0 - 4:word16] = 0x0000
	Mem11[sp_0 - 6:word16] = 0x8000
	init_uart_isr()
	word20 sp_17 = uart_putchar_isr_mode(0x00, wLoc02)
	Mem19[sp_17 - 2:word16] = 0x4108
	Mem21[sp_17 - 4:word16] = 0x4111
	Mem23[sp_17 - 6:word16] = 0x411D
	word20 r8_26
	word20 r11_27
	word20 r15_28
	printf(r8, r11, wLoc02, out r8_26, out r11_27, out r15_28)
	word20 sp_31 = uart_putchar_isr_mode(0x01, wLoc02)
	Mem33[sp_31 - 2:word16] = 0x0000
	Mem35[sp_31 - 4:word16] = 0x0003
	xTaskCreate(0x0000, 0x0032, 0x414B, 0x4096)
	Mem41[sp_31 - 6:word16] = 0x0000
	Mem43[sp_31 - 8:word16] = 0x0003
	xTaskCreate(0x0000, 0x0032, 0x414B, 0x40BC)
	Mem49[sp_31 - 10:word16] = 0x0000
	Mem51[sp_31 - 12:word16] = 0x0003
	xTaskCreate(0x0000, 0x0032, 0x414B, 0x40E2)
	Mem57[sp_31 - 14:word16] = 0x0000
	Mem59[sp_31 - 16:word16] = 0x0000
	word20 r12_60 = 0x0000
	word20 r13_61 = 0x0096
	word20 r14_62 = 0x414B
	xTaskCreate(r12_60, r13_61, r14_62, 0x4048)
	vTaskStartScheduler()
	word20 r15_67 = 0x0000
// DataOut: r12 r13 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l420A_thunk_msp430_compute_modulator_bits:
	msp430_compute_modulator_bits(sr, r12_60, r13_61, r14_62, r15_67)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:0x0000 pc:0x5AD8
// Terminates process

main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void msp430_compute_modulator_bits(word20 sr, word20 r12, word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12 r13 r14 r15 sr
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
msp430_compute_modulator_bits_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

msp430_compute_modulator_bits_entry:
// DataOut: r12 r13 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l420E:
	word20 r12_46
	word20 r13_47
	word20 sp_48 = fn00005B04(r14, r15, r12, r13, out r12_46, out r13_47)
	Mem51[sp_48 + 2:word16] = r12_46
	Mem54[sp_48 + 4:word16] = r13_47
	Mem65[sp_48 - 2:word16] = sr
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void init_uart_isr()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
init_uart_isr_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

init_uart_isr_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l42CC:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void getchar()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
getchar_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4380:
	x_getchar()
	branch fp == 0x0002 l4396
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l4396:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn:

l4390:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn:

l4398:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r15:<invalid>

getchar_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r15:<invalid> sp:fp



word20 uart_putchar_isr_mode(word20 r15, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15
// LiveOut: sp
// Trashed: sp
// Preserved:
uart_putchar_isr_mode_entry:
// DataOut: r11 r15 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l439C:
	Mem3[0x0200:ptr16] = r15
	return fp + 2
// DataOut: r11 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp

uart_putchar_isr_mode_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2



word20 putchar(word20 r15, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15
// LiveOut: r11 sp
// Trashed: VNZC r11 r15 sp
// Preserved:
putchar_entry:
// DataOut: r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l000043A2:
	word20 sp_11 = fp - 2
	word20 r11_10 = r15
	branch r15 == 0x000A l000043D6
// DataOut: r11 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000043D6:
	sp_11 = putchar(0x000D, out r11_10)
// DataOut: r11 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 -2(fp):r11

l000043AC:
	word20 r15_18
	branch 0x0200 != 0x00 l000043CA
// DataOut: r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> -2(fp):r11

l000043CA:
	x_putchar()
	r15_18 = r11_10
// DataOut: r15 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> -2(fp):r11
// Terminates process

l000043B2:
	branch (0x0079 & 0x01) == 0x00 l000043B2
// DataOut: r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> -2(fp):r11

l000043B8:
	Mem36[0x007F:ptr16] = r11_10
	r15_18 = 0x0001
// DataOut: r15 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> -2(fp):r11

l000043BE:
	branch r15_18 == 0x0000 l000043C6
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:0x0001 -2(fp):r11

l000043C6:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:0x0001 -2(fp):r11

l000043C2:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:0x0001 -2(fp):r11

l000043E0:
	word20 r11_25
	*r11Out = Mem0[sp_11:word16]
	return sp_11 + 4
// DataOut: r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> -2(fp):r11

putchar_exit:
// DataOut: r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> -2(fp):r11



void x_getchar()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
x_getchar_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l43E4:
	xQueueReceive()
	branch 0x021C == 0x0000 l43F8
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l43F8:
	return
// DataOut: sp
// DataOut (flags): 
// SymbolicIn:

l43F4:
	return
// DataOut: sp
// DataOut (flags): 
// SymbolicIn:

x_getchar_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid>



void x_putchar()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
x_putchar_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

x_putchar_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l000043FC:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vRxISR()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15
// Preserved: sp
vRxISR_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4450:
	word20 r15_23
	xQueueSendFromISR(fp - 0x0000000A, 0x021C, out r15_23)
	branch r15_23 == 0x0000 l4474
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l4470:
	vPortYield()
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r12:<invalid> -10(fp):007E -8(fp):r12 -6(fp):r13 -4(fp):r14 -2(fp):r15
// Terminates process

l4474:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r12:<invalid> -10(fp):007E -8(fp):r12 -6(fp):r13 -4(fp):r14 -2(fp):r15

vRxISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r13:(word16) r13 r14:<invalid> r15:(word16) r15 r12:(word16) r12 r11:<invalid> r10:<invalid> -10(fp):007E -8(fp):r12 -6(fp):r13 -4(fp):r14 -2(fp):r15



void vTxISR()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15
// Preserved: sp
vTxISR_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4480:
	word20 r15_20
	word20 sp_21 = xQueueReceiveFromISR(fp - 0x0000000A, 0x021E, out r15_20)
	branch r15_20 == 0x0001 l44A2
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l44A2:
	Mem41[0x007F:ptr16] = Mem0[sp_21 + 2:byte]
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> -8(fp):r12 -6(fp):r13 -4(fp):r14 -2(fp):r15

l449C:
	Mem39[0x0220:ptr16] = 0x0001
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> -8(fp):r12 -6(fp):r13 -4(fp):r14 -2(fp):r15

l44A8:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> -8(fp):r12 -6(fp):r13 -4(fp):r14 -2(fp):r15

vTxISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r13:<invalid> r14:<invalid> r15:(word16) r15 r12:(word16) r12 r11:<invalid> r10:<invalid> -8(fp):r12 -6(fp):r13 -4(fp):r14 -2(fp):r15



void xTaskCreate(word20 r12, word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12 r13 r14 r15
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xTaskCreate_entry:
// DataOut: r12 r13 r14 r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l000044B4:
	word16 v15_35 = Mem0[fp + 0x00000002:word16]
	word16 v16_37 = Mem0[fp + 0x00000004:word16]
	prvAllocateTCBAndStack(r13)
	branch r13 == 0x0000 l000045A0
// DataOut: r10 r11 r12 r13 r14 r15 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l000045A0:
	word20 r10_61 = 0xFFFF
// DataOut: r10 r11 r12 r13 r14 r5 r8 sp sr
// DataOut (flags): 
// SymbolicIn: r11:r15 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004574:
	branch r10_61 != 0x0001 l000045A4
// DataOut: r10 r11 r12 r13 r14 r5 r8 sp sr
// DataOut (flags): 
// SymbolicIn: r11:r15 r10:0xFFFF -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004578:
	branch v16_37 == 0x0000 l00004580
// DataOut: r10 r11 r12 r13 r14 r5 r8 sp sr
// DataOut (flags): 
// SymbolicIn: r11:r15 r10:0xFFFF -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l0000457C:
	Mem102[v16_37:word16] = r13
// DataOut: r10 r12 r13 r14 r8 sp sr
// DataOut (flags): 
// SymbolicIn: r11:r15 r10:0xFFFF -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004580:
	branch 0x020E == 0x0000 l000045A4
// DataOut: r10 r12 r13 r14 r8 sp sr
// DataOut (flags): 
// SymbolicIn: r11:r15 r10:0xFFFF -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004586:
	branch Mem0[0x0208:word16] <u v15_35 l000045A4
// DataOut: r10 r12 r13 r14 sp sr
// DataOut (flags): 
// SymbolicIn: r11:r15 r10:0xFFFF -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004590:
	vPortYield()
// DataOut: r10 r12 r13 r14 sp sr
// DataOut (flags): 
// SymbolicIn: r11:r15 r10:0xFFFF r15:0202 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// Terminates process

l000045A4:
	return
// DataOut: r12 r13 r14 r15 sp sr
// DataOut (flags): 
// SymbolicIn: r11:r15 r10:0xFFFF r15:0202 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

xTaskCreate_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r11:(word16) r10 r10:(word16) r9 sp:fp r15:0xFFFF r5:<invalid> r6:(word16) r5 r7:(word16) r6 r8:(word16) r7 r9:(word16) r8 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l000044E2:
	word20 r11_46 = prvInitialiseTCBVariables(r13, v15_35, r14, r13, r13)
	Mem60[r11_46:word16] = pxPortInitialiseStack(r12, r15, Mem0[r11_46 + 36:word16] * 0x00002 + Mem0[r11_46 + 2:word16] - 0x0002, wArg00)
// DataOut:
// DataOut (flags): 
// SymbolicIn: r11:r15 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11



void vTaskDelete()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vTaskDelete_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vTaskDelete_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l45B6:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vTaskDelayUntil(word20 r11, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11 r14 r15
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vTaskDelayUntil_entry:
// DataOut: r11 r14 r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000461A:
	vTaskSuspendAll()
	word16 v8_17 = Mem0[r15:word16]
	word20 r10_15 = 0x0000
	word20 r15_18 = v8_17
	word20 r11_19 = r14 + v8_17
	branch 0x0208 <u v8_17 l00004690
// DataOut: r10 r11 r15 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(20)

l00004690:
	branch r11_19 >=u v8_17 l0000463E
// DataOut: r10 r11 r15 r9 sp
// DataOut (flags): 
// SymbolicIn: r15:<invalid> r11:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004694:
// DataOut: r10 r11 r15 r9 sp
// DataOut (flags): 
// SymbolicIn: r15:<invalid> r11:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004634:
	branch r11_19 <u v8_17 l00004640
// DataOut: r10 r11 r15 r9 sp
// DataOut (flags): 
// SymbolicIn: r15:<invalid> r11:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004638:
	branch 0x0208 <u r11_19 l00004640
// DataOut: r10 r11 r15 r9 sp
// DataOut (flags): 
// SymbolicIn: r15:<invalid> r11:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l0000463E:
	r10_15 = 0x0001
// DataOut: r10 r11 r15 r9 sp
// DataOut (flags): 
// SymbolicIn: r15:<invalid> r11:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004640:
	Mem26[r15:word16] = r11_19
	branch r10_15 != 0x0000 l00004656
// DataOut: r11 r15 sp
// DataOut (flags): 
// SymbolicIn: r15:<invalid> r11:<invalid> r10:0x0001 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004656:
	word20 r15_59
	word20 r14_58
	vListRemove(0x020A, wArg00)
	Mem54[0x020A:word16] = r11_19
	branch r11_19 <u 0x0208 l00004682
// DataOut:
// DataOut (flags): 
// SymbolicIn: r15:<invalid> r11:<invalid> r10:0x0001 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004682:
	r14_58 = 0x020A
	r15_59 = 0x0282
// DataOut: r14 r15
// DataOut (flags): 
// SymbolicIn: r15:0208 r11:<invalid> sp:<invalid> r14:<invalid> r13:<invalid> r10:0x0001 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004670:
	r14_58 = 0x020A
	r15_59 = 0x0284
// DataOut: r14 r15
// DataOut (flags): 
// SymbolicIn: r15:0208 r11:<invalid> sp:<invalid> r14:<invalid> r13:<invalid> r10:0x0001 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l0000467C:
	word20 r11_61
	vListInsert(r14_58, r15_59, r11, out r11_61, out r15_18)
// DataOut: r15 sp
// DataOut (flags): 
// SymbolicIn: r15:<invalid> r11:<invalid> sp:<invalid> r14:020A r13:<invalid> r10:0x0001 -6(fp):r9 -4(fp):r10 -2(fp):r11

l00004648:
	xTaskResumeAll()
	branch r15_18 != 0x0000 l00004696
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: r15:<invalid> r11:<invalid> r10:0x0001 sp:<invalid> r14:020A r13:<invalid> r12:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// Terminates process

l00004650:
	vPortYield()
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: -6(fp):r9 -4(fp):r10 -2(fp):r11
// Terminates process

l00004696:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: -6(fp):r9 -4(fp):r10 -2(fp):r11

vTaskDelayUntil_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r9:<invalid> r10:(word16) r9 r11:(word16) r10 -6(fp):r9 -4(fp):r10 -2(fp):r11



void vTaskDelay(word20 r11, word20 r15, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11 r15
// LiveOut:
// Trashed: VNZC r11 r15 sp
// Preserved:
vTaskDelay_entry:
// DataOut: r11 r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l469E:
	word20 r15_14 = 0x0000
	branch r15 != 0x0000 l46B2
// DataOut: r11 r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20)

l46B2:
	word20 r15_39
	word20 r14_38
	vTaskSuspendAll()
	vListRemove(0x020A, wLoc04)
	word20 r11_25 = r15 + 0x0208
	Mem34[0x020A:word16] = r11_25
	branch r11_25 <u 0x0208 l46EA
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r15:0x0000 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l46EA:
	r14_38 = 0x020A
	r15_39 = 0x0282
// DataOut: r14 r15
// DataOut (flags): 
// SymbolicIn: r11:r11 + 0x0208 r15:0208 sp:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l46D4:
	r14_38 = 0x020A
	r15_39 = 0x0284
// DataOut: r14 r15
// DataOut (flags): 
// SymbolicIn: r11:r11 + 0x0208 r15:0208 sp:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l46E0:
	word20 r11_41
	vListInsert(r14_38, r15_39, r11, out r11_41, out r15_14)
	xTaskResumeAll()
// DataOut: r15
// DataOut (flags): 
// SymbolicIn: r11:r11 + 0x0208 r15:<invalid> r14:020A sp:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: fp(20)
// Terminates process

l46A8:
	branch r15_14 != 0x0000 l46F8
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r15:0x0000 -2(fp):r11
// LocalsOut: fp(20)

l46AC:
	vPortYield()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r15:0x0000 -2(fp):r11
// LocalsOut: fp(20)
// Terminates process

l46F8:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r15:0x0000 -2(fp):r11

vTaskDelay_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r11:(word16) r15 r15:0x0000 -2(fp):r11



word20 vTaskStartScheduler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: sp
// Trashed: VNZC sp
// Preserved:
vTaskStartScheduler_entry:
// DataOut: r12 r13 r14 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4702:
	branch 0x0202 != 0x0000 l470A
// DataOut: r12 r13 r14 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l470A:
	word20 r15_29 = 0x49AC
	xTaskCreate(0x0000, 0x0032, 0x46FC, r15_29)
	branch r15_29 != 0x0001 l4708
// DataOut: r12 r13 r14 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l4726:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0004 -4(fp):0x0000 -2(fp):0x0000

l4708:
	return fp + 2
// DataOut: r12 r13 r14 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> -4(fp):0x0000 -2(fp):0x0000

vTaskStartScheduler_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> -4(fp):0x0000 -2(fp):0x0000



void vTaskEndScheduler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vTaskEndScheduler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vTaskEndScheduler_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l4736:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vTaskSuspendAll()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vTaskSuspendAll_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vTaskSuspendAll_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00004742:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xTaskResumeAll()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xTaskResumeAll_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xTaskResumeAll_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000475C:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xTaskGetTickCount()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xTaskGetTickCount_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xTaskGetTickCount_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000481E:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void uxTaskGetNumberOfTasks()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
uxTaskGetNumberOfTasks_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

uxTaskGetNumberOfTasks_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l4834:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vTaskIncrementTick(word20 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15 sp
// Preserved:
vTaskIncrementTick_entry:
// DataOut: pc r11
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000484A:
	branch 0x0210 != 0x0000 l000048D0
// DataOut: pc sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l000048D0:
	Mem82[0x0212:ptr16] = Mem0[0x0212:ptr16] + 0x0001
// DataOut: pc sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 -4(fp):r10 -2(fp):r11

l00004854:
	Mem25[0x0208:ptr16] = Mem0[0x0208:ptr16] + 0x0001
	branch Mem25[0x0208:ptr16] != 0x0000 l00004868
// DataOut: pc sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l0000485A:
	Mem80[0x0282:ptr16] = 0x0284
	Mem81[0x0284:ptr16] = 0x0282
// DataOut: pc sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004868:
	word20 r11_39
	word20 r15_35 = 0x0282
	branch Mem25[r15_35:word16] == 0x0000 l000048CC
// DataOut: pc r15 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l000048CC:
	r11_39 = 0x0000
// DataOut: pc r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:0282 r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004872:
	r11_39 = Mem25[Mem25[Mem25[r15_35 + 2:word16] + 2:word16] + 6:word16]
// DataOut: pc r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:0282 r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l0000487E:
	branch r11_39 == 0x0000 l000048D4
// DataOut: pc r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004882:
	branch 0x0208 >=u Mem25[r11_39 + 8:word16] l000048D4
// DataOut: pc r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l000048D4:
	return
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

vTaskIncrementTick_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r11:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

l0000488A:
	word20 r10_47 = r11_39 + 0x0008
	vListRemove(r10_47, r11)
	branch Mem25[r11_39 + 26:word16] != 0x0000 l000048C0
// DataOut: pc r10 r11
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l000048C0:
	vListRemove(r11_39 + 0x0012, r11)
// DataOut: pc r10 r11
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l0000489A:
	Mem55[r11_39 + 8:word16] = 0x0000
	word16 v19_56 = Mem55[r11_39 + 6:word16]
	branch 0x020C <u v19_56 l000048AC
// DataOut: pc r10 r15
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l000048A8:
	Mem68[0x020C:ptr16] = v19_56
// DataOut: pc r10 r15
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l000048AC:
	vListInsertEnd(r10_47, v19_56 * 0x00010 + 0x0222, r11)
// DataOut: pc sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r11:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)



void vTaskPlaceOnEventList(word20 r11, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11 r15
// LiveOut:
// Trashed: VNZC r11 r12 r13 r14 r15 sp
// Preserved:
vTaskPlaceOnEventList_entry:
// DataOut: r11 r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l48DA:
	word20 r15_32
	word20 r14_31
	word20 r11_15
	word20 r15_16
	vListInsert(0x0214, r15, wLoc04, out r11_15, out r15_16)
	vListRemove(0x020A, r11)
	word20 r11_18 = r11_15 + 0x0208
	Mem26[0x020A:word16] = r11_18
	branch r11_18 <u 0x0208 l491C
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l491C:
	r14_31 = 0x020A
	r15_32 = 0x0282
// DataOut: r14 r15
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r13:<invalid> r11:<invalid> r15:0208 r14:<invalid> r12:<invalid> -2(fp):r11
// LocalsOut: Local -0002(0)

l490E:
	r14_31 = 0x020A
	r15_32 = 0x0284
// DataOut: r14 r15
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r13:<invalid> r11:<invalid> r15:0208 r14:<invalid> r12:<invalid> -2(fp):r11
// LocalsOut: Local -0002(0)

l4928:
	word20 r11_33
	word20 r15_34
	vListInsert(r14_31, r15_32, r11, out r11_33, out r15_34)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r13:<invalid> r11:<invalid> r15:<invalid> r14:020A r12:<invalid> -2(fp):r11

vTaskPlaceOnEventList_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r13:<invalid> r11:<invalid> r15:<invalid> r14:020A r12:<invalid> -2(fp):r11



word20 xTaskRemoveFromEventList(word20 r11, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11 r15
// LiveOut: r10 r15
// Trashed: VNZC r10 r11 r12 r13 r14 r15
// Preserved: sp
xTaskRemoveFromEventList_entry:
// DataOut: r11 r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004930:
	word20 r10_13
	branch Mem0[r15:word16] == 0x0000 l000049A2
// DataOut: r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l000049A2:
	r10_13 = 0x0000
// DataOut: r10
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l0000493A:
	r10_13 = Mem0[Mem0[Mem0[r15 + 2:word16] + 2:word16] + 6:word16]
// DataOut: r10
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l00004946:
	word20 r15_22
	word20 r14_21
	vListRemove(r10_13 + 0x0012, wLoc06)
	branch 0x0210 != 0x0000 l0000499A
// DataOut: r10 r11
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r15:<invalid> r10:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l0000499A:
	r14_21 = r10_13 + 0x0012
	r15_22 = 0x0286
// DataOut: r10 r14 r15
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004958:
	vListRemove(r10_13 + 0x0008, r11)
	Mem47[r10_13 + 8:word16] = 0x0000
	word16 v13_48 = Mem47[r10_13 + 6:word16]
	branch 0x020C <u v13_48 l00004974
// DataOut: r10 r11 r15
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004970:
	Mem59[0x020C:ptr16] = v13_48
// DataOut: r10 r11 r15
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004974:
	r15_22 = v13_48 * 0x00010 + 0x0222
	r14_21 = r10_13 + 0x0008
// DataOut: r10 r14 r15
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l00004982:
	word20 sp_24 = vListInsertEnd(r14_21, r15_22, r11)
	branch Mem0[0x0208:word16] <u Mem0[r10_13 + 6:word16] l00004996
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> -4(fp):r10 -2(fp):r11

l00004996:
	word20 r15_41
	*r15Out = 0x0000
// DataOut: r15 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:0202 r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

l00004992:
	word20 r15_40
	*r15Out = 0x0001
// DataOut: r15 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:0202 r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

l000049A6:
	return Mem0[sp_24:word16]
// DataOut: r10 r15
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r15:<invalid> r10:<invalid> r11:<invalid> r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

xTaskRemoveFromEventList_exit:
// DataOut: r10 r15
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r10:<invalid> r11:(word16) r10 r14:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11



void prvIdleTask()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvIdleTask_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

prvIdleTask_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l49AC:
	prvCheckTasksWaitingTermination(wLoc02)
	branch 0x0222 >=u 0x0002 l49AC
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid>

l49B6:
	vPortYield()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid>



word20 prvInitialiseTCBVariables(word20 r11, word20 r12, word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11 r12 r13 r14 r15
// LiveOut: r11
// Trashed: VNZC r10 r11 r12 r13 r14 r15 sp
// Preserved:
prvInitialiseTCBVariables_entry:
// DataOut: r11 r12 r13 r14 r15 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l49BE:
	Mem19[r15 + 36:word16] = r14
	word20 r11_25 = strncpy(0x0008, r13, r15 + 0x001C, wLoc06)
	Mem28[r11_25 + 35:byte] = 0x00
	word20 r10_15 = r12
	branch r12 >=u 0x0004 l49E6
// DataOut: r10 r11 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(20)

l49E2:
	r10_15 = 0x0003
// DataOut: r10 r11 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:r13 + 0x001C r14:<invalid> r10:r12 r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(20)

l49E6:
	Mem34[r11_25 + 6:word16] = r10_15
	vListInitialiseItem(r11_25 + 0x0008, r11)
	word20 sp_42 = vListInitialiseItem(r11_25 + 0x0012, r11)
	Mem45[r11_25 + 14:word16] = r11_25
	Mem51[r11_25 + 18:word16] = 0x0004 - r10_15
	Mem54[r11_25 + 24:word16] = r11_25
	return Mem54[sp_42 + 2:word16]
// DataOut: r11 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:r13 + 0x001C r14:<invalid> r10:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

prvInitialiseTCBVariables_exit:
// DataOut: r11
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> r14:<invalid> r10:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11



void prvInitialiseTaskLists()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC r11 r15 sp
// Preserved:
prvInitialiseTaskLists_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4A12:
	word20 r11_16 = 0x0000
// DataOut: r11
// DataOut (flags): 
// SymbolicIn: sp:fp

l4A16:
	word20 r11_14
	vListInitialise(r11_16 * 0x00010 + 0x0222, out r11_14)
	r11_16 = r11_14 + 0x0001
	branch r11_14 >=u 0xFFFD l4A16
// DataOut: r11
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> -2(fp):r11

l4A2E:
	word20 r11_20
	vListInitialise(0x0262, out r11_20)
	word20 r11_23
	vListInitialise(0x0272, out r11_23)
	word20 r11_26
	vListInitialise(0x0286, out r11_26)
	word20 r11_29
	vListInitialise(0x0296, out r11_29)
	Mem31[0x0282:ptr16] = 0x0262
	Mem32[0x0284:ptr16] = 0x0272
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> -2(fp):r11

prvInitialiseTaskLists_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:<invalid> -2(fp):r11



void prvCheckTasksWaitingTermination(word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC r11 sp
// Preserved:
prvCheckTasksWaitingTermination_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4A5E:
	branch 0x0204 == 0x0000 l4ABE
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4A66:
	vTaskSuspendAll()
	word20 r11_15 = 0x0000
	branch 0x0296 != 0x0000 l4A74
// DataOut: r11
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 -2(fp):r11
// LocalsOut: fp(20)

l4A72:
	r11_15 = 0x0001
// DataOut: r11
// DataOut (flags): 
// SymbolicIn: r11:0x0000 -2(fp):r11
// LocalsOut: fp(20)

l4A74:
	xTaskResumeAll()
	branch r11_15 != 0x0000 l4ABE
// DataOut:
// DataOut (flags): 
// SymbolicIn: r11:<invalid> -2(fp):r11
// LocalsOut: fp(20)
// Terminates process

l4ABE:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 -2(fp):r11

prvCheckTasksWaitingTermination_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r11:(word16) r11 -2(fp):r11

l4A7C:
// DataOut:
// DataOut (flags): 
// SymbolicIn: -2(fp):r11



void prvAllocateTCBAndStack(word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvAllocateTCBAndStack_entry:
// DataOut: r12 r13 r14 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4AC2:
	word20 r15_10 = 0x0026
	pvPortMalloc(r15_10)
	branch r15_10 == 0x0000 l4AFA
// DataOut: r10 r11 r12 r13 r14 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l4AD6:
	pvPortMalloc(r15 * 0x00002)
	Mem39[r15_10 + 2:word16] = r15 * 0x00002
	branch r15 * 0x00002 != 0x0000 l4AF0
// DataOut: r10 r12 r13 r14 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: r11:r15 -4(fp):r10 -2(fp):r11
// Terminates process

l4AF0:
	word20 r9_48
	word20 r11_49
	word20 r13_50
	word20 r14_51
	memset(r15 * 0x00002, 0x00A5, r15 * 0x00002, wArg00, out r9_48, out r11_49, out r13_50, out r14_51)
// DataOut: r11 r12 r13 r14 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: -4(fp):r10 -2(fp):r11

l4AE6:
	vPortFree(wArg00)
// DataOut: r11 r12 r13 r14 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: -4(fp):r10 -2(fp):r11

l4AFA:
	return
// DataOut: r10 r12 r13 r14 r15 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: r11:<invalid> r15:r11 sp:<invalid> r13:<invalid> r14:<invalid> r9:<invalid> r10:<invalid> -4(fp):r10 -2(fp):r11

prvAllocateTCBAndStack_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r11:(word16) r10 sp:fp r15:<invalid> r10:<invalid> r13:<invalid> r14:<invalid> r9:<invalid> -4(fp):r10 -2(fp):r11



void prvDeleteTCB(word20 r11, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11 r15
// LiveOut:
// Trashed: r11 sp
// Preserved: r15
prvDeleteTCB_entry:
// DataOut: r11 r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4B02:
	vPortFree(wLoc04)
	vPortFree(r11)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

prvDeleteTCB_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:r15 -2(fp):r11



void vTaskSwitchContext(word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC r13 r14 r15 sp
// Preserved:
vTaskSwitchContext_entry:
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004B18:
	branch 0x0210 != 0x0000 l00004BAE
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004B1E:
	branch Mem0[0x020C * 0x00010 + 546:word16] != 0x0000 l00004B46
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004B30:
	Mem89[0x020C:ptr16] = Mem0[0x020C:ptr16] + 0xFFFF
	branch Mem89[0x020C * 0x00010 + 546:word16] == 0x0000 l00004B30
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp r15:0x020C + 0x020C + (0x020C + 0x020C) + ((0x020C + 0x020C) + (0x020C + 0x020C)) + (((0x020C + 0x020C) + (0x020C + 0x020C)) + ((0x020C + 0x020C) + (0x020C + 0x020C)))
// LocalsOut: fp(20)

l00004B46:
	word20 r13_24 = 0x0222
	Mem42[0x020C * 0x00010 + r13_24 + 4:word16] = Mem0[Mem0[0x020C * 0x00010 + r13_24 + 4:word16] + 2:word16]
	branch Mem42[0x020C * 0x00010 + r13_24 + 4:word16] == Mem42[(0x020C * 0x00010 + r13_24) + 2:word16] l00004BB0
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp r15:0x020C + 0x020C + (0x020C + 0x020C) + ((0x020C + 0x020C) + (0x020C + 0x020C)) + (((0x020C + 0x020C) + (0x020C + 0x020C)) + ((0x020C + 0x020C) + (0x020C + 0x020C)))
// LocalsOut: fp(20)

l00004BB0:
	Mem88[0x020C * 0x00010 + 550:word16] = Mem42[Mem42[0x020C * 0x00010 + 550:word16] + 2:word16]
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r13:0x0222 r14:<invalid>
// LocalsOut: fp(20)

l00004B98:
	Mem71[0x0202:ptr16] = Mem42[Mem42[0x020C * 0x00010 + 550:word16] + 6:word16]
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r13:0x0222 r14:<invalid>
// LocalsOut: fp(20)

l00004BAE:
	return
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r13:0x0222 r14:<invalid>

vTaskSwitchContext_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r15:<invalid> r13:0x0222 r14:<invalid>



word20 vListInitialise(word20 r15, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15
// LiveOut: r11 sp
// Trashed: VNZC r11 r15 sp
// Preserved:
vListInitialise_entry:
// DataOut: r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004BD4:
	Mem12[r15 + 2:word16] = r15 + 0x0006
	Mem15[r15 + 4:word16] = r15 + 0x0006
	Mem18[r15 + 6:word16] = 0xFFFF
	Mem21[r15 + 8:word16] = r15 + 0x0006
	Mem24[r15 + 10:word16] = r15 + 0x0006
	Mem27[r15 + 12:word16] = 0x0000
	word20 sp_29 = vListInitialiseItem(r15 + 0x0006, wLoc04)
	Mem32[r15:word16] = 0x0000
	word20 r11_35
	*r11Out = Mem32[sp_29:word16]
	return sp_29 + 4
// DataOut: r11 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

vListInitialise_exit:
// DataOut: r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:r15 + 0x0006 -2(fp):r11



word20 vListInitialiseItem(word20 r15, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15
// LiveOut: sp
// Trashed: sp
// Preserved:
vListInitialiseItem_entry:
// DataOut: r10 r11 r15 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004C00:
	Mem6[r15 + 8:word16] = 0x0000
	return fp + 2
// DataOut: r10 r11 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

vListInitialiseItem_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2



word20 vListInsertEnd(word20 r14, word20 r15, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14 r15
// LiveOut: sp
// Trashed: VNZC r12 r13 r15 sp
// Preserved:
vListInsertEnd_entry:
// DataOut: pc r10 r14 r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004C06:
	word16 v5_5 = Mem0[r15 + 4:word16]
	Mem11[r14 + 2:word16] = Mem0[v5_5 + 2:word16]
	Mem15[r14 + 4:word16] = Mem11[r15 + 4:word16]
	Mem20[Mem15[v5_5 + 2:word16] + 4:word16] = r14
	Mem23[v5_5 + 2:word16] = r14
	Mem26[r15 + 4:word16] = r14
	Mem29[r14 + 8:word16] = r15
	Mem32[r15:word16] = Mem29[r15:word16] + 0x0001
	return fp + 2
// DataOut: pc r10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

vListInsertEnd_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r12:r15 r13:<invalid> r15:<invalid>



word20 vListInsert(word20 r14, word20 r15, word16 wArg00, ptr16 & r11Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14 r15
// LiveOut: r11 r15 sp
// Trashed: VNZC r11 r12 r13 r15 sp
// Preserved:
vListInsert_entry:
// DataOut: r11 r14 r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004C32:
	word20 r13_13
	word16 v6_9 = Mem0[r14:word16]
	branch v6_9 == 0xFFFF l00004C5A
// DataOut: r11 r12 r14 r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20)

l00004C5A:
	word16 v18_62 = Mem0[r15 + 2:word16]
	r13_13 = v18_62
	branch Mem0[Mem0[v18_62 + 2:word16]:word16] <u 0xFFFF l00004C76
// DataOut: r11 r12 r13 r14
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l00004C68:
	word16 v21_70 = Mem0[r13_13 + 2:word16]
	r13_13 = v21_70
	branch Mem0[Mem0[v21_70 + 2:word16]:word16] >=u v6_9 l00004C68
// DataOut: r11 r12 r13 r14
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r13:<invalid> r15:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l00004C3C:
	word16 v10_45 = Mem0[r15 + 2:word16]
	r13_13 = v10_45
	branch v6_9 >=u Mem0[Mem0[v10_45 + 2:word16]:word16] l00004C76
// DataOut: r11 r12 r13 r14
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l00004C4A:
	word16 v15_54 = Mem0[r13_13 + 2:word16]
	r13_13 = v15_54
	branch v6_9 <u Mem0[Mem0[v15_54 + 2:word16]:word16] l00004C4A
// DataOut: r11 r12 r13 r14
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r13:<invalid> r15:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l00004C58:
// DataOut: r11 r13 r14
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r13:<invalid> r15:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l00004C76:
	Mem18[r14 + 2:word16] = Mem0[r13_13 + 2:word16]
	word16 v26_19 = Mem18[r14 + 2:word16]
	Mem23[v26_19 + 4:word16] = r14
	Mem26[r14 + 4:word16] = r13_13
	Mem29[r13_13 + 2:word16] = r14
	Mem32[r14 + 8:word16] = r15
	Mem35[r15:word16] = Mem32[r15:word16] + 0x0001
	word20 r15_20
	*r15Out = v26_19
	word20 r11_39
	*r11Out = r11
	return fp + 2
// DataOut: r11 r15 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r13:<invalid> r15:<invalid> -2(fp):r11

vListInsert_exit:
// DataOut: r11 r15 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r11:(word16) r15 r12:<invalid> r13:<invalid> r15:<invalid> -2(fp):r11



void vListRemove(word20 r15, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15
// LiveOut:
// Trashed: VNZC r13 r14 r15 sp
// Preserved:
vListRemove_entry:
// DataOut: pc r10 r11 r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004C98:
	word16 v5_5 = Mem0[r15 + 2:word16]
	Mem10[v5_5 + 4:word16] = Mem0[r15 + 4:word16]
	word16 v8_11 = Mem10[r15 + 4:word16]
	Mem15[v8_11 + 2:word16] = v5_5
	word16 v11_16 = Mem15[r15 + 8:word16]
	branch Mem15[v11_16 + 4:word16] != r15 l00004CBA
// DataOut: pc r10 r11 r13 r14 r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004CB6:
	Mem33[v11_16 + 4:word16] = v8_11
// DataOut: pc r10 r11 r14 r15
// DataOut (flags): 
// SymbolicIn: sp:fp r14:r15 r15:<invalid> r13:<invalid>
// LocalsOut: fp(20)

l00004CBA:
	Mem23[r15 + 8:word16] = 0x0000
	Mem26[v11_16:word16] = Mem23[v11_16:word16] + 0xFFFF
	return
// DataOut: pc r10 r11
// DataOut (flags): 
// SymbolicIn: sp:fp r14:r15 r15:<invalid> r13:<invalid>

vListRemove_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r14:r15 r15:<invalid> r13:<invalid>



void xQueueCreate(word20 sr, word20 r15, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15 sr
// LiveOut:
// Trashed: VNZC r10 r11 r15 r9 sp
// Preserved:
xQueueCreate_entry:
// DataOut: r15 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4CC4:
	branch r15 != 0x0000 l4CD6
// DataOut: sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4CD6:
	word20 r15_33 = 0x0032
	pvPortMalloc(r15_33)
	branch r15_33 == 0x0000 l4CD2
// DataOut: sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r10:r15 r9:r14 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)
// Terminates process

l4CE4:
	Mem39[fp - 8:word16] = sr
// DataOut:
// DataOut (flags): 
// SymbolicIn: r11:r15 -6(fp):r9 -4(fp):r10 -2(fp):r11

l4CD2:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r10:r15 r9:r14 r11:r15 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20)

l4D76:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r10:r15 r9:r14 r15:0x0000 r11:r15 -6(fp):r9 -4(fp):r10 -2(fp):r11

xQueueCreate_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r10:(word16) r15 r9:(word16) r14 r15:0x0000 r11:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11



void xQueueSend()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueueSend_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xQueueSend_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4D7E:
	vTaskSuspendAll()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word20 xQueueSendFromISR(word20 r14, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14 r15
// LiveOut: r15 sp
// Trashed: VNZC r10 r11 r12 r13 r14 r15 sp
// Preserved: r13
xQueueSendFromISR_entry:
// DataOut: r13 r14 r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4E84:
	word20 r13_21
	word20 sp_22 = fp - 4
	word20 r10_11 = r13
	branch Mem0[r15 + 40:word16] >=u Mem0[r15 + 42:word16] l4E98
// DataOut: r10 r11 r14 r15 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l4E98:
	word20 r11_48
	sp_22 = memcpy(Mem0[r15 + 44:word16], r14, Mem0[r15 + 4:word16], wLoc06, out r10_11, out r11_48)
	Mem52[r11_48 + 40:word16] = Mem0[r11_48 + 40:word16] + 0x0001
	word20 r15_56 = Mem52[r11_48 + 4:word16] + Mem52[r11_48 + 44:word16]
	Mem59[r11_48 + 4:word16] = r15_56
	branch r15_56 >=u Mem59[r11_48 + 2:word16] l4EBE
// DataOut: r10 r11 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r10:r13 -4(fp):r10 -2(fp):r11

l4EBA:
	Mem88[r11_48 + 4:word16] = Mem59[r11_48:word16]
// DataOut: r10 r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

l4EBE:
	word16 v23_63 = Mem59[r11_48 + 48:word16]
	branch v23_63 == 0xFFFF l4ECE
// DataOut: r10 r11 r15 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

l4ECE:
	branch r10_11 != 0x0000 l4E94
// DataOut: r10 r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

l4ED2:
	branch Mem59[r11_48 + 24:word16] == 0x0000 l4E94
// DataOut: r10 r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

l4ED8:
	word20 r15_80
	r10_11 = xTaskRemoveFromEventList(r11_48 + 0x0018, r11_48 + 0x0018, out r15_80)
	branch r15_80 == 0x0000 l4E94
// DataOut: r10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

l4EE6:
	r13_21 = 0x0001
// DataOut: r13 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> r14:<invalid> -4(fp):r10 -2(fp):r11

l4EC6:
	Mem71[r11_48 + 48:word16] = v23_63 + 0x0001
// DataOut: r10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> -4(fp):r10 -2(fp):r11

l4E94:
	r13_21 = r10_11
// DataOut: r13 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r15:<invalid> r13:<invalid> r12:<invalid> r14:<invalid> -4(fp):r10 -2(fp):r11

l4EE8:
	word20 r15_23
	*r15Out = r13_21
	return sp_22 + 6
// DataOut: r15 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r13:<invalid> r15:<invalid> r12:<invalid> r14:<invalid> -4(fp):r10 -2(fp):r11

xQueueSendFromISR_exit:
// DataOut: r15 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r10:<invalid> r13:<invalid> r15:<invalid> r12:<invalid> r14:<invalid> -4(fp):r10 -2(fp):r11



void xQueueReceive()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueueReceive_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xQueueReceive_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l4EF0:
	vTaskSuspendAll()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word20 xQueueReceiveFromISR(word20 r14, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14 r15
// LiveOut: r15 sp
// Trashed: VNZC r10 r11 r12 r13 r14 r15 sp
// Preserved:
xQueueReceiveFromISR_entry:
// DataOut: r14 r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00004FF6:
	word20 sp_25 = fp - 4
	word16 v9_15 = Mem0[r15 + 40:word16]
	branch v9_15 == 0x0000 l00005060
// DataOut: r11 r12 r14 r15 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00005060:
	word20 r15_92
	*r15Out = 0x0000
// DataOut: r15 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r12:r14 r10:r13 r14:<invalid> -4(fp):r10 -2(fp):r11

l00005008:
	word16 v12_35 = Mem0[r15 + 44:word16]
	word20 r15_39 = Mem0[r15 + 6:word16] + v12_35
	Mem42[r15 + 6:word16] = r15_39
	branch r15_39 >=u Mem42[r15 + 2:word16] l00005020
// DataOut: r11 r12 r13 r14
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r12:r14 r10:r13 r14:<invalid> -4(fp):r10 -2(fp):r11

l0000501C:
	Mem91[r15 + 6:word16] = Mem42[r15:word16]
// DataOut: r11 r12 r13 r14
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r12:r14 r10:r13 r14:<invalid> r13:<invalid> r15:<invalid> -4(fp):r10 -2(fp):r11

l00005020:
	Mem50[r15 + 40:word16] = v9_15 + 0xFFFF
	word20 r10_55
	word20 r11_56
	sp_25 = memcpy(v12_35, Mem50[r15 + 6:word16], r14, wLoc06, out r10_55, out r11_56)
	word16 v24_58 = Mem50[r11_56 + 46:word16]
	branch v24_58 == 0xFFFF l00005042
// DataOut: r10 r11 r15 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r12:r14 r10:r13 r14:<invalid> r13:<invalid> r15:<invalid> -4(fp):r10 -2(fp):r11

l00005042:
	branch Mem50[r10_55:word16] != 0x0000 l0000503E
// DataOut: r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r15:<invalid> -4(fp):r10 -2(fp):r11

l00005048:
	branch Mem50[r11_56 + 8:word16] == 0x0000 l0000503E
// DataOut: r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r15:<invalid> -4(fp):r10 -2(fp):r11

l0000504E:
	word20 r15_81
	word20 r10_82 = xTaskRemoveFromEventList(r11_56 + 0x0008, r11_56 + 0x0008, out r15_81)
	branch r15_81 == 0x0000 l0000503E
// DataOut: r10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r15:<invalid> -4(fp):r10 -2(fp):r11

l0000505A:
	Mem87[r10_82:word16] = 0x0001
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r15:<invalid> -4(fp):r10 -2(fp):r11

l00005038:
	Mem71[r11_56 + 46:word16] = v24_58 + 0x0001
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r15:<invalid> -4(fp):r10 -2(fp):r11

l0000503E:
	word20 r15_66
	*r15Out = 0x0001
// DataOut: r15 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r13:<invalid> r15:<invalid> -4(fp):r10 -2(fp):r11

l00005062:
	return sp_25 + 6
// DataOut: r15 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r15:<invalid> r13:<invalid> -4(fp):r10 -2(fp):r11

xQueueReceiveFromISR_exit:
// DataOut: r15 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r12:<invalid> r10:<invalid> r14:<invalid> r15:<invalid> r13:<invalid> -4(fp):r10 -2(fp):r11



void uxQueueMessagesWaiting()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
uxQueueMessagesWaiting_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

uxQueueMessagesWaiting_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l5068:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vQueueDelete(word20 r11, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11 r15
// LiveOut:
// Trashed: r11 sp
// Preserved: r15
vQueueDelete_entry:
// DataOut: r11 r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l507E:
	vPortFree(wLoc04)
	vPortFree(r11)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

vQueueDelete_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r15:r15 -2(fp):r11



void prvUnlockQueue()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvUnlockQueue_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

prvUnlockQueue_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l5092:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void prvIsQueueEmpty()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvIsQueueEmpty_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

prvIsQueueEmpty_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l510C:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void prvIsQueueFull()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvIsQueueFull_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

prvIsQueueFull_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l512E:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void pvPortMalloc(word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
pvPortMalloc_entry:
// DataOut: r12 r13 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l5156:
	word20 r11_15 = r15
	branch (r15 & 0x0001) == 0x00000 l5166
// DataOut: r10 r11 r12 r13 r15 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l5162:
	r11_15 = r15 - (r15 & 0x0001) + 0x0002
// DataOut: r10 r11 r12 r13 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:r15 r10:0x0000 r15:r15 & 0x0001 -4(fp):r10 -2(fp):r11

l5166:
	vTaskSuspendAll()
	word20 r14_16 = 0x0216
	word20 r15_18 = r14_16 + r11_15
	branch r15_18 <u 0x0708 l5186
// DataOut: r10 r12 r13 r14 r15 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r11:<invalid> r10:0x0000 r15:r15 & 0x0001 -4(fp):r10 -2(fp):r11

l5178:
	branch r14_16 <u r15_18 l5186
// DataOut: r10 r12 r13 r14 r15 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: r14:0216 r15:0x0216 + r11 -4(fp):r10 -2(fp):r11

l517C:
	Mem39[0x0216:ptr16] = r15_18
// DataOut: r10 r12 r13 r14 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: r14:0216 r15:0x0216 + r11 -4(fp):r10 -2(fp):r11

l5186:
	xTaskResumeAll()
	return
// DataOut: r10 r11 r12 r13 r14 r15 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: r14:0216 r15:0x0216 + r11 r10:04C0 -4(fp):r10 -2(fp):r11
// Terminates process

pvPortMalloc_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r15:r10 r10:<invalid> r11:(word16) r10 -4(fp):r10 -2(fp):r11



word20 vPortFree(word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: sp
// Trashed: sp
// Preserved:
vPortFree_entry:
// DataOut: r12 r13 r14 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l5192:
	return fp + 2
// DataOut: r12 r13 r14 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp

vPortFree_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2



void vPortInitialiseBlocks(word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: sp
// Preserved:
vPortInitialiseBlocks_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l5194:
	Mem2[0x0216:ptr16] = 0x0000
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

vPortInitialiseBlocks_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 2



word20 pxPortInitialiseStack(word20 r13, word20 r14, word20 r15, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13 r14 r15
// LiveOut: r15
// Trashed: VNZC r15 sp
// Preserved:
pxPortInitialiseStack_entry:
// DataOut: r11 r13 r14 r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l519A:
	Mem7[r15:word16] = r14
	Mem11[r15 - 0x0002:word16] = 0x0008
	Mem15[r15 - 0x0004:word16] = 0x4444
	Mem19[r15 - 0x0006:word16] = 0x5555
	Mem23[r15 - 0x0008:word16] = 0x6666
	Mem27[r15 - 0x000A:word16] = 0x7777
	Mem31[r15 - 0x000C:word16] = 0x8888
	Mem35[r15 - 0x000E:word16] = 0x9999
	Mem39[r15 - 0x0010:word16] = 0xAAAA
	Mem43[r15 - 0x0012:word16] = 0xBBBB
	Mem47[r15 - 0x0014:word16] = 0xCCCC
	Mem51[r15 - 0x0016:word16] = 0xDDDD
	Mem55[r15 - 0x0018:word16] = 0xEEEE
	Mem60[r15 - 0x001A:word16] = r13
	Mem65[r15 - 0x001C:word16] = 0x0000
	return r15 - 0x001C
// DataOut: r11 r15
// DataOut (flags): 
// SymbolicIn: sp:fp

pxPortInitialiseStack_exit:
// DataOut: r15
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r15:r15 - 0x7FFE



void xPortStartScheduler(word20 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9
// Preserved: sp
xPortStartScheduler_entry:
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp

l520A:
	prvSetupTimerInterrupt(wLoc02)
	Mem14[pc + -20480:word16] = Mem0[Mem0[Mem0[pc + -20494:word16]:word16]:word16]
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

xPortStartScheduler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r12:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r4:<invalid>



void vPortEndScheduler(word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: sp
// Preserved:
vPortEndScheduler_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l5238:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

vPortEndScheduler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 2



void vPortYield()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vPortYield_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vPortYield_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000523A:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void prvSetupTimerInterrupt(word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: sp
// Preserved:
prvSetupTimerInterrupt_entry:
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l528E:
	Mem2[0x0160:ptr16] = 0x0000
	Mem3[0x0160:ptr16] = 0x0100
	Mem4[0x0160:ptr16] = Mem3[0x0160:ptr16] | 0x0004
	Mem5[0x0172:ptr16] = 0x0020
	Mem6[0x0162:ptr16] = 0x0010
	Mem7[0x0160:ptr16] = Mem6[0x0160:ptr16] | 0x0004
	Mem8[0x0160:ptr16] = Mem7[0x0160:ptr16] | 0x0010
	return
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp

prvSetupTimerInterrupt_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 2



void prvTickISR(word20 pc, word20 r4, word20 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 r4
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9
// Preserved: sp
prvTickISR_entry:
// DataOut: pc r11 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l52B4:
	Mem48[Mem0[pc + -20690:word16]:word16] = fp - 26
	vTaskIncrementTick(r11)
	vTaskSwitchContext(r4)
	Mem58[pc + -20692:word16] = Mem48[Mem48[Mem48[pc + -20706:word16]:word16]:word16]
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

prvTickISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r14:(word16) r14 r12:(word16) r12 r15:(word16) r15 r13:(word16) r13 r11:(word16) r11 r10:(word16) r10 r9:(word16) r9 r8:(word16) r8 r7:(word16) r7 r6:(word16) r6 r5:(word16) r5 r4:(word16) r4 -26(fp):<invalid> -24(fp):r15 -22(fp):r14 -20(fp):r13 -18(fp):r12 -16(fp):r11 -14(fp):r10 -12(fp):r9 -10(fp):r8 -8(fp):r7 -6(fp):r6 -4(fp):r5 -2(fp):r4



word20 printf(word20 r8, word20 r11, word16 wArg00, ptr16 & r8Out, ptr16 & r11Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11 r8
// LiveOut: r11 r15 r8 sp
// Trashed: VNZC pc r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp
// Preserved:
printf_entry:
// DataOut: r11 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l5308:
	word20 r11_13
	word20 r15_14
	word20 r8_15
	*r8Out = vuprintf(r8, r11, fp + 0x0004, Mem0[fp + 0x0002:word16], 0x43A2, out r11_13, out r15_14)
	return fp + 2
// DataOut: r11 r15 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp

printf_exit:
// DataOut: r11 r15 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r15:<invalid> r14:<invalid> r13:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r4:<invalid> r12:<invalid>



word20 PRINT(word20 r14, word20 r15, word16 wArg00, ptr16 & r10Out, ptr16 & r11Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14 r15
// LiveOut: r10 r11 r15 sp
// Trashed: VNZC r10 r11 r15 sp
// Preserved:
PRINT_entry:
// DataOut: r10 r11 r14 r15 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000531A:
	word20 r10_38 = r15
	word20 r11_11 = r14
	branch r14 != 0x0000 l0000532A
// DataOut: r10 r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l0000532A:
	word20 r15_44 = (int16) Mem0[r10_38:byte]
	__write_char()
	r10_38 = r10_38 + 0x0001
	branch r15_44 < 0x0000 l00005342
// DataOut: r10 r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)
// Terminates process

l00005342:
	word20 r15_54
	*r15Out = 0xFFFF
// DataOut: r15 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005338:
	Mem49[0x021A:ptr16] = Mem0[0x021A:ptr16] + 0x0001
	r11_11 = r11_11 + 0xFFFF
	branch r11_11 != 0x00000 l0000532A
// DataOut: r10 r11 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005340:
// DataOut: r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: r11:r11 + 0xFFFF -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005326:
	word20 r15_36
	*r15Out = 0x0001
// DataOut: r15 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005344:
	word20 r10_21
	*r10Out = r10
	word20 r11_24
	*r11Out = r11
	return fp + 2
// DataOut: r10 r11 r15 r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r15:<invalid> -4(fp):r10 -2(fp):r11

PRINT_exit:
// DataOut: r10 r11 r15 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r10:(word16) r15 r11:<invalid> r15:<invalid> -4(fp):r10 -2(fp):r11



word20 __write_pad(word20 r14, word20 r15, word16 wArg00, ptr16 & r9Out, ptr16 & r10Out, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14 r15
// LiveOut: r10 r11 r9 sp
// Trashed: VNZC r10 r11 r15 r9 sp
// Preserved: r15
__write_pad_entry:
// DataOut: r10 r11 r14 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000534A:
	word20 r11_14 = r14
	branch r14 < 0x01 l00005370
// DataOut: r11 r15 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20)

l00005358:
	word20 r10_48 = (int16) SLICE(r15, byte, 0)
// DataOut: r10 r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:r14 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20)

l0000535C:
	__write_char()
	branch r10_48 < 0x0000 l00005374
// DataOut: r10 r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:<invalid> r10:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20)
// Terminates process

l00005374:
// DataOut: r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20)

l00005366:
	Mem56[0x021A:ptr16] = Mem0[0x021A:ptr16] + 0x0001
	r11_14 = r11_14 + 0xFF
	branch r11_14 >= 0x01 l0000535C
// DataOut: r10 r11 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20)

l00005370:
// DataOut: r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20) Local -0006(20)

l00005376:
	word20 r9_26
	*r9Out = r9
	word20 r10_29
	*r10Out = r10
	word20 r11_32
	*r11Out = r11
	return fp + 2
// DataOut: r10 r11 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r11:<invalid> r15:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

__write_pad_exit:
// DataOut: r10 r11 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r9:(word16) r15 r11:<invalid> r15:<invalid> r10:(word16) r10 -6(fp):r9 -4(fp):r10 -2(fp):r11



word20 vuprintf(word20 r8, word20 r11, word20 r13, word20 r14, word20 r15, ptr16 & r11Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11 r13 r14 r15 r8
// LiveOut: r11 r15 r8
// Trashed: VNZC pc r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9
// Preserved: sp
vuprintf_entry:
// DataOut: r11 r13 r14 r15 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l537E:
	Mem38[0x021A:ptr16] = 0x0000
	Mem40[0x09B2:ptr16] = r15
	word20 sp_198 = fp - 0x0000004C
	word20 r5_195 = r13
	word20 r6_103 = r14
// DataOut: r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l53A6:
	word20 r6_75
	byte v17_70 = Mem40[r6_103:byte]
	word20 r7_71 = v17_70
	r6_75 = r6_103
	branch v17_70 == 0x00 l53C2
// DataOut: r15 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53AE:
	r6_75 = r6_103
	r6_75 = r6_103
	branch v17_70 == 0x0025 l53C2
// DataOut: r15 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53B4:
	r6_75 = r6_75 + 0x0001
	byte v19_996 = Mem40[r6_75:byte]
	r7_71 = v19_996
	branch v19_996 == 0x00 l53C2
// DataOut: r15 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53BC:
	branch v19_996 != 0x0025 l53B4
// DataOut: r15 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53C2:
	branch r6_75 - r6_103 == 0x00000 l53CC
// DataOut: r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53C8:
// DataOut: r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53CC:
	branch r7_71 != 0x00 l53D4
// DataOut: r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53D0:
// DataOut: r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53D4:
	Mem88[sp_198 + 46:byte] = 0x00
	Mem91[sp_198 + 53:byte] = 0x00
	Mem94[sp_198 + 47:byte] = 0x00
	Mem98[sp_198 + 40:byte] = 0x00
	r6_103 = r6_75 + 0x0001
	word20 r11_95 = 0xFF
// DataOut: r11 r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53E8:
	word20 r7_107 = Mem98[r6_103:byte]
	r6_103 = r6_103 + 0x0001
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53EC:
	branch r7_107 != 0x0075 l53F6
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53F2:
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l53F6:
	branch (r7_107 | 0x0020) != 0x0078 l5406
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5402:
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5406:
	branch r7_107 != 0x0020 l5410
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l540C:
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5410:
	branch r7_107 != 0x0023 l541A
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5416:
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l541A:
	branch r7_107 != 0x002A l5424
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5420:
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5424:
	branch r7_107 != 0x002D l542E
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l542A:
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l542E:
	branch r7_107 != 0x002B l5438
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5434:
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5438:
	branch r7_107 != 0x002E l5442
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l543E:
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5442:
	branch r7_107 != 0x0030 l544C
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5448:
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l544C:
	branch r7_107 <u 0xFFC6 l548C
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l548C:
	branch r7_107 == 0x0068 l581A
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l581A:
	Mem876[sp_198 + 46:byte] = Mem98[sp_198 + 46:byte] | 0x04
	branch (Mem876[sp_198 + 46:byte] & 0x0010) == 0x0000 l582E
// DataOut: r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l582A:
// DataOut: r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:0x53E8 r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l582E:
	Mem886[sp_198 + 46:byte] = Mem876[sp_198 + 46:byte] | 0x0020
	byte v139_888 = Mem886[r6_103:byte]
	word20 r7_889 = v139_888
	word20 r6_890 = r6_103 + 0x0001
	branch v139_888 == 0x002A l588A
// DataOut: r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:0x53E8 r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l5842:
	word20 r13_939 = 0x0000
	branch v139_888 <u 0xFFC6 l587C
// DataOut: r13 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:0x53E8 r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l5850:
	word20 r14_963 = r13_939 * 0x00002
	byte v141_973 = Mem886[r6_890:byte]
	r13_939 = r13_939 * 0x00004 + r14_963 + r14_963 + r14_963 + (int16) SLICE(r7_889, byte, 0) + 0xFFD0
	r7_889 = v141_973
	r6_890 = r6_890 + 0x0001
	branch v141_973 >=u 0xFFC6 l5850
// DataOut: r13 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:0x53E8 r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l587C:
	branch r13_939 >= 0xFFFF l5884
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:0x53E8 r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l5882:
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:0x53E8 r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l5884:
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:0x53E8 r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l588A:
	word20 r5_900 = r5_195 + 0x0002
	branch Mem886[r5_195:word16] >= 0xFFFF l5898
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l5896:
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l5898:
	Mem910[sp_198 + 40:byte] = 0x002B
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l58A8:
	Mem915[sp_198 + 46:byte] = Mem910[sp_198 + 46:byte] | 0x0010
	Mem918[sp_198 + 46:byte] = Mem915[sp_198 + 46:byte] & 0xFFDF
	Mem925[sp_198 + 47:byte] = Mem918[r5_900:byte]
	r5_900 = r5_900 + 0x0002
	branch Mem925[sp_198 + 47:byte] < 0x00 l58CA
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:0x53E8 r11:<invalid> r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l58C6:
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:0x53E8 r11:<invalid> r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l58CA:
	Mem932[sp_198 + 47:byte] = Mem925[sp_198 + 47:byte] ^ 0xFF
	Mem935[sp_198 + 47:byte] = Mem932[sp_198 + 47:byte] + 0x01
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:0x53E8 r11:<invalid> r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l5492:
	branch r7_107 != 0x006C l549E
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l549E:
	word20 r9_197
	branch r7_107 == 0x0063 l580C
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l580C:
	Mem866[sp_198 + 44:word16] = sp_198
	Mem873[sp_198:byte] = Mem866[r5_195:byte]
	r5_195 = r5_195 + 0x0002
// DataOut: r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54A4:
	branch r7_107 == 0x0044 l5806
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5806:
	Mem863[sp_198 + 46:byte] = Mem98[sp_198 + 46:byte] | 0x01
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54AA:
	branch r7_107 == 0x0064 l57AE
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54B0:
	branch r7_107 == 0x0069 l57AE
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l57AE:
	branch (Mem98[sp_198 + 46:byte] & 0x01) == 0x00 l57E6
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l57E6:
	Mem677[sp_198 + 48:word16] = Mem98[r5_195:word16]
	Mem681[sp_198 + 50:word16] = Mem677[sp_198 + 48:word16]
	word16 v71_684 = Mem681[sp_198 + 50:word16] + Mem681[sp_198 + 50:word16]
	Mem685[sp_198 + 50:word16] = v71_684
	Mem691[sp_198 + 50:word16] = Mem685[sp_198 + 50:word16] - Mem685[sp_198 + 50:word16] - (v71_684 <u 0x0000)
	Mem694[sp_198 + 50:word16] = Mem691[sp_198 + 50:word16] ^ 0xFFFF
	r5_195 = r5_195 + 0x0002
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l57B4:
	Mem666[sp_198 + 48:word16] = Mem98[r5_195:word16]
	Mem671[sp_198 + 50:word16] = Mem666[r5_195 + 2:word16]
	r5_195 = r5_195 + 0x0004
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l57C0:
	branch Mem98[sp_198 + 50:word16] < 0x0000 l57CE
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l57CE:
	Mem643[sp_198 + 48:word16] = Mem98[sp_198 + 48:word16] ^ 0xFFFF
	Mem646[sp_198 + 50:word16] = Mem643[sp_198 + 50:word16] ^ 0xFFFF
	word16 v63_647 = Mem646[sp_198 + 48:word16]
	Mem649[sp_198 + 48:word16] = v63_647 + 0x0001
	Mem654[sp_198 + 50:word16] = Mem649[sp_198 + 50:word16] + (v63_647 <u 0x0001)
	Mem658[sp_198 + 40:byte] = 0x002D
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l57C6:
	Mem640[sp_198 + 52:byte] = 0x000A
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54B6:
	branch r7_107 == 0x004F l57A8
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l57A8:
	Mem860[sp_198 + 46:byte] = Mem98[sp_198 + 46:byte] | 0x01
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54BC:
	branch r7_107 == 0x006F l57A2
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l57A2:
	Mem717[sp_198 + 52:byte] = 0x08
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54C2:
	branch r7_107 == 0x0070 l5784
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5784:
	Mem847[sp_198 + 48:word16] = Mem98[r5_195:word16]
	Mem850[sp_198 + 50:word16] = 0x0000
	Mem853[sp_198 + 52:byte] = 0x0010
	Mem856[sp_198 + 46:byte] = Mem853[sp_198 + 46:byte] | 0x0040
	r5_195 = r5_195 + 0x0002
	r7_107 = 0x0078
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54C8:
	branch r7_107 == 0x0073 l570C
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l570C:
	Mem776[sp_198 + 44:word16] = Mem98[r5_195:word16]
	r5_195 = r5_195 + 0x0002
	branch Mem776[sp_198 + 44:word16] == 0x0000 l5756
// DataOut: r11 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5756:
	Mem819[sp_198 + 44:word16] = sp_198
	Mem822[sp_198:byte] = 0x0028
	Mem825[sp_198 + 1:byte] = 0x006E
	Mem828[sp_198 + 2:byte] = 0x0075
	Mem831[sp_198 + 3:byte] = 0x006C
	Mem834[sp_198 + 4:byte] = 0x006C
	Mem837[sp_198 + 5:byte] = 0x0029
	Mem840[sp_198 + 6:byte] = 0x00
// DataOut: r11 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l571A:
	branch r11_95 < 0x00 l5740
// DataOut: r11 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5740:
	word20 r15_806 = Mem776[sp_198 + 44:word16] - 0x0001
// DataOut: r15 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5746:
	r15_806 = r15_806 + 0x0001
	branch Mem776[r15_806:byte] != 0x00 l5746
// DataOut: r15 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l574E:
	r9_197 = r15_806 - Mem776[sp_198 + 44:byte]
// DataOut: r5 r6 r7 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l571E:
	word20 r11_791
	word20 r15_792
	sp_198 = memchr((int16) SLICE(r11_95, byte, 0), 0x0000, Mem776[sp_198 + 44:word16], r11, out r11_791, out r15_792)
	branch r15_792 == 0x0000 l573C
// DataOut: r11 r15 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5732:
	r9_197 = r15_792 - Mem776[sp_198 + 44:byte]
	branch r11_791 >= r9_197 l54F8
// DataOut: r11 r5 r6 r7 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l573C:
	r9_197 = r11_791
// DataOut: r5 r6 r7 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54CE:
	branch r7_107 == 0x0055 l5706
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5706:
	Mem770[sp_198 + 46:byte] = Mem98[sp_198 + 46:byte] | 0x01
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54D4:
	branch r7_107 == 0x0075 l56FE
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l56FE:
	Mem730[sp_198 + 52:byte] = 0x000A
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54DA:
	branch r7_107 == 0x0058 l55FE
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54E0:
	branch r7_107 == 0x0078 l55FE
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55FE:
	Mem738[sp_198 + 52:byte] = 0x0010
	branch (Mem738[sp_198 + 46:byte] & 0x08) == 0x00 l561C
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l560A:
	branch Mem738[sp_198 + 48:word16] != 0x0000 l5616
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5610:
	branch Mem738[sp_198 + 50:word16] == 0x0000 l561C
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5616:
	Mem752[sp_198 + 46:byte] = Mem738[sp_198 + 46:byte] | 0x0040
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l561C:
	Mem712[sp_198 + 40:byte] = 0x00
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5620:
	Mem458[sp_198 + 53:byte] = 0xFF
	branch r11_95 < 0x00 l562E
// DataOut: r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5628:
	Mem620[sp_198 + 46:byte] = Mem458[sp_198 + 46:byte] & 0xFFDF
// DataOut: r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l562E:
	Mem467[sp_198 + 44:word16] = sp_198 + 0x0028
	branch Mem467[sp_198 + 48:word16] != 0x0000 l564A
// DataOut: r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l563E:
	branch Mem467[sp_198 + 50:word16] != 0x0000 l564A
// DataOut: r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5644:
	branch Mem467[sp_198 + 53:byte] == 0x00 l56C6
// DataOut: r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l564A:
	Mem495[sp_198 + 56:byte] = Mem467[sp_198 + 52:byte]
	Mem498[sp_198 + 57:byte] = 0x00
	Mem501[sp_198 + 58:word16] = 0x0000
// DataOut: r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5658:
	Mem514[sp_198 + 54:byte] = 0x00
	branch Mem514[sp_198 + 50:word16] - Mem514[sp_198 + 58:word16] - (Mem514[sp_198 + 48:word16] - Mem514[sp_198 + 56:word16] <u 0x00000) >=u 0x00000 l5672
// DataOut: r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l566E:
	Mem611[sp_198 + 54:byte] = 0x01
// DataOut: r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5672:
	word20 r4_547
	word20 sp_535
	word20 r8_536
	word20 r12_537
	word20 r13_538
	word20 r14_539
	word20 r15_540
	fn00005B4E(r8, Mem514[sp_198 + 56:word16], Mem514[sp_198 + 58:word16], Mem514[sp_198 + 48:word16], Mem514[sp_198 + 50:word16], r11, out sp_535, out r8_536, out r12_537, out r13_538, out r14_539, out r15_540)
	branch r14_539 <u 0x000A l56EE
// DataOut: r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l56EE:
	r4_547 = r14_539 + 0x0057
	branch r7_107 != 0x0058 l5692
// DataOut: r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l56F8:
	r4_547 = r14_539 + 0x0057 & 0xFFDF
// DataOut: r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l568E:
	r4_547 = r14_539 + 0x0030
// DataOut: r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5692:
	Mem550[sp_535 + 44:word16] = Mem514[sp_535 + 44:word16] + 0xFFFF
	Mem556[Mem550[sp_535 + 44:word16]:byte] = r4_547
	word20 r12_567
	word20 r13_568
	word20 r14_569
	word20 r15_570
	fn00005B4E(r8_536, Mem556[sp_535 + 56:word16], Mem556[sp_535 + 58:word16], Mem556[sp_535 + 48:word16], Mem556[sp_535 + 50:word16], r11, out sp_198, out r8, out r12_567, out r13_568, out r14_569, out r15_570)
	Mem574[sp_198 + 48:word16] = r12_567
	Mem577[sp_198 + 50:word16] = r13_568
	branch Mem577[sp_198 + 54:byte] != 0x00 l5658
// DataOut: r4 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l56C0:
	branch Mem577[sp_198 + 52:byte] == 0x08 l56D2
// DataOut: r4 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l56D2:
	branch (Mem577[sp_198 + 46:byte] & 0x08) == 0x00 l56C6
// DataOut: r4 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l56D8:
	branch r4_547 == 0x0030 l56C6
// DataOut: r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l56DE:
	Mem594[sp_198 + 44:word16] = Mem577[sp_198 + 44:word16] + 0xFFFF
	Mem600[Mem594[sp_198 + 44:word16]:byte] = 0x0030
// DataOut: r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l56C6:
	r9_197 = sp_198 - Mem467[sp_198 + 44:byte] + 0x0028
// DataOut: r5 r6 r7 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54E6:
	branch r7_107 != 0x00 l54EE
// DataOut: r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54EA:
// DataOut: r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54EE:
	Mem763[sp_198 + 44:word16] = sp_198
	Mem766[sp_198:byte] = r7_107
// DataOut: r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54F6:
	r9_197 = 0x01
// DataOut: r5 r6 r7 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54F8:
	Mem440[sp_198 + 40:byte] = 0x00
// DataOut: r5 r6 r7 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l54FC:
	word20 r11_204 = r9_197
	word20 r10_207 = Mem98[sp_198 + 53:byte] - r9_197
	branch r10_207 < 0x00000 l55FA
// DataOut: r10 r11 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r14:<invalid> r12:<invalid> r10:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55FA:
	r10_207 = 0x00
// DataOut: r10 r11 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5506:
	byte v54_211 = Mem98[sp_198 + 40:byte]
	word20 r14_212 = v54_211
	branch v54_211 == 0x00 l55EE
// DataOut: r10 r11 r14 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55EE:
	branch (Mem98[sp_198 + 46:byte] & 0x0040) == 0x0000 l5510
// DataOut: r10 r11 r14 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55F6:
	r11_204 = r9_197 + 0x02
// DataOut: r10 r11 r14 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l550E:
	r11_204 = r9_197 + 0x01
// DataOut: r10 r11 r14 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5510:
	byte v55_220 = Mem98[sp_198 + 46:byte]
	word20 r11_219 = r11_204 + r10_207
	r8 = v55_220 & 0x0030
	branch (v55_220 & 0x0030) != 0x00000 l5542
// DataOut: r10 r11 r14 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r12:<invalid> r8:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l551C:
	word20 r13_399 = (int16) (Mem98[sp_198 + 0x0002F:byte] - SLICE(r11_219, byte, 0))
	branch r13_399 < 0x0001 l5542
// DataOut: r10 r11 r13 r14 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l552C:
	word20 r15_403 = 0x0020
	word20 r9_404
	sp_198 = __write_pad(r13_399, r15_403, r11, out r9_404, out r10_207, out r11_219)
	branch r15_403 >= 0x0000 l553E
// DataOut: r10 r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l553A:
// DataOut: r10 r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l553E:
	r14_212 = Mem98[sp_198 + 40:byte]
// DataOut: r10 r11 r14 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5542:
	word20 r15_359
	word20 r14_358
	branch r14_212 != 0x00 l55E4
// DataOut: r10 r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55E4:
	r14_358 = 0x0001
	r15_359 = sp_198 + 0x0028
// DataOut: r14 r15 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5546:
	branch (Mem98[sp_198 + 46:byte] & 0x0040) == 0x0000 l5576
// DataOut: r10 r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l554E:
	Mem380[sp_198 + 42:word16] = Mem98[sp_198 + 42:word16] & 0xFF00 | 0x0030
	Mem383[sp_198 + 43:byte] = r7_107
	r14_358 = 0x0002
	r15_359 = sp_198 + 0x002A
// DataOut: r14 r15 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l556A:
	word20 r15_363
	sp_198 = PRINT(r14_358, r15_359, r11, out r10_207, out r11_219, out r15_363)
	branch r15_363 >= 0x0000 l5576
// DataOut: r10 r11 r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5572:
// DataOut: r10 r11 r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5576:
	branch (v55_220 & 0x0030) == 0x0020 l55C4
// DataOut: r10 r11 r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55C4:
	word20 r13_344 = (int16) (Mem98[sp_198 + 0x0002F:byte] - SLICE(r11_219, byte, 0))
	branch r13_344 < 0x0001 l557C
// DataOut: r10 r13 r5 r6 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55D4:
	word20 r15_348 = 0x0030
	word20 r9_349
	word20 r11_351
	sp_198 = __write_pad(r13_344, r15_348, r11, out r9_349, out r10_207, out r11_351)
	branch r15_348 >= 0x0000 l557C
// DataOut: r10 r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55E2:
// DataOut: sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l557C:
	word20 r15_292 = 0x0030
	word20 r9_293
	word20 r10_294
	word20 r11_295
	sp_198 = __write_pad(r10_207, r15_292, r11, out r9_293, out r10_294, out r11_295)
	branch r15_292 < 0x0000 l5924
// DataOut: r5 r6 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l558A:
	word20 r10_307
	word20 r11_308
	word20 r15_309
	sp_198 = PRINT((int16) SLICE(r9_293, byte, 0), Mem98[sp_198 + 44:word16], r11, out r10_307, out r11_308, out r15_309)
	branch r15_309 < 0x0000 l5924
// DataOut: r11 r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l559C:
	branch (Mem98[sp_198 + 46:byte] & 0x0010) == 0x0000 l53A6
// DataOut: r11 r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55A4:
	word20 r13_326 = (int16) (Mem98[sp_198 + 0x0002F:byte] - SLICE(r11_308, byte, 0))
	branch r13_326 < 0x0001 l53A6
// DataOut: r13 r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55B4:
	word20 r15_330 = 0x0020
	word20 r9_331
	word20 r10_332
	word20 r11_333
	sp_198 = __write_pad(r13_326, r15_330, r11, out r9_331, out r10_332, out r11_333)
	branch r15_330 >= 0x0000 l53A6
// DataOut: r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l55C2:
// DataOut: sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l5924:
	word20 sp_259 = sp_198 + 0x003C
	word20 r15_258
	*r15Out = 0x021A
	word20 r11_284
	*r11Out = Mem98[sp_259 + 14:word16]
	return Mem98[sp_259 + 8:word16]
// DataOut: r11 r15 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r14:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

vuprintf_exit:
// DataOut: r11 r15 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r5:(word16) r4 r6:(word16) r5 r15:021A r7:(word16) r6 r13:<invalid> pc:<invalid> r11:(word16) r10 r9:(word16) r8 r10:(word16) r9 r14:<invalid> r8:(word16) r7 r4:<invalid> r12:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11

l5498:
	Mem184[sp_198 + 46:byte] = Mem98[sp_198 + 46:byte] | 0x01
// DataOut: r11 r5 r6 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5458:
	word20 r13_150 = 0x0000
// DataOut: r11 r13 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l545A:
	word20 r14_158 = r13_150 * 0x00002
	word20 r13_166 = r13_150 * 0x00004 + r14_158 + r14_158 + r14_158 + (int16) SLICE(r7_107, byte, 0)
	byte v30_168 = Mem98[r6_103:byte]
	r13_150 = r13_166 + 0xFFD0
	r7_107 = v30_168
	r6_103 = r6_103 + 0x0001
	branch v30_168 >=u 0xFFC6 l545A
// DataOut: r11 r13 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)

l5486:
	Mem177[sp_198 + 47:byte] = r13_166 + 0xFFD0
// DataOut: r11 r5 r6 r7 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r15:<invalid> r7:<invalid> r13:<invalid> pc:<invalid> r11:0xFF r14:<invalid> r9:<invalid> r10:<invalid> r8:<invalid> r12:<invalid> r4:<invalid> -76(fp):<invalid> -75(fp):0x006E -74(fp):0x0075 -73(fp):0x006C -72(fp):0x006C -71(fp):0x0029 -70(fp):0x00 -36(fp):<invalid> -34(fp):<invalid> -33(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -29(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -23(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -19(fp):0x00 -18(fp):0x0000 -16(fp):r4 -14(fp):r5 -12(fp):r6 -10(fp):r7 -8(fp):r8 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: Local -0002(0)



word20 memchr(word20 r13, word20 r14, word20 r15, word16 wArg00, ptr16 & r11Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13 r14 r15
// LiveOut: r11 r15 sp
// Trashed: VNZC r11 r12 r13 r14 r15 sp
// Preserved:
memchr_entry:
// DataOut: r11 r13 r14 r15 r5 r6 r7 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l0000593E:
	branch r13 == 0x0000 l00005956
// DataOut: r11 r12 r13 r5 r6 r7 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20)

l00005948:
	word20 r14_30 = r15
// DataOut: r12 r13 r14 r5 r6 r7 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:r14 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l0000594A:
	r14_30 = r14_30 + 0x0001
	branch Mem0[r14_30:byte] == r14 l0000595A
// DataOut: r12 r13 r14 r5 r6 r7 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:r14 r14:<invalid> r15:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l0000595A:
	word20 r15_43
	*r15Out = r14_30 + 0xFFFF
// DataOut: r15 r5 r6 r7 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:r14 r14:<invalid> r15:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l00005952:
	r13 = r13 + 0xFFFF
	branch r13 != 0x00000 l0000594A
// DataOut: r12 r13 r14 r5 r6 r7 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:r14 r14:<invalid> r15:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l00005956:
	word20 r15_29
	*r15Out = 0x0000
// DataOut: r15 r5 r6 r7 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:r14 r14:<invalid> r15:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l0000595E:
	word20 r11_19
	*r11Out = r11
	return fp + 2
// DataOut: r11 r15 r5 r6 r7 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:r14 r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11

memchr_exit:
// DataOut: r11 r15 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r11:(word16) r15 r12:r14 r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11



word20 strncpy(word20 r13, word20 r14, word20 r15, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13 r14 r15
// LiveOut: r11
// Trashed: VNZC r11 r12 r13 r14 sp
// Preserved: r15
strncpy_entry:
// DataOut: r10 r11 r13 r14 r15 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l5962:
	branch r13 == 0x0000 l598E
// DataOut: r10 r13 r14 r15 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20)

l596A:
	word20 r12_24 = r15
// DataOut: r10 r12 r13 r14 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l596C:
	Mem32[r12_24:byte] = Mem0[r14:byte]
	r14 = r14 + 0x0001
	r12_24 = r12_24 + 0x0001
	branch Mem32[r12_24:byte] == 0x00 l5980
// DataOut: r10 r12 r13 r14 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l5980:
	word20 r13_42 = r13 + 0xFFFF
	branch r13_42 == 0x00000 l598E
// DataOut: r10 r12 r13 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l5984:
	Mem49[r12_24:byte] = 0x00
	r12_24 = r12_24 + 0x0001
	r13_42 = r13_42 + 0xFFFF
	branch r13_42 != 0x00000 l5984
// DataOut: r10 r12 r13 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l597A:
	r13 = r13 + 0xFFFF
	branch r13 != 0x00000 l596C
// DataOut: r10 r12 r13 r14 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l597E:
// DataOut: r10 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11
// LocalsOut: fp(20) Local -0002(20)

l598E:
	return r11
// DataOut: r10 r11 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r11:r15 r12:<invalid> r15:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11

strncpy_exit:
// DataOut: r11
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r11:(word16) r15 r15:r15 r12:<invalid> r14:<invalid> r13:<invalid> -2(fp):r11



word20 memcpy(word20 r13, word20 r14, word20 r15, word16 wArg00, ptr16 & r10Out, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13 r14 r15
// LiveOut: r10 r11 sp
// Trashed: VNZC r10 r11 r12 r13 sp
// Preserved: r15
memcpy_entry:
// DataOut: r10 r11 r13 r14 r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00005994:
	word20 r13_12 = r15
	word20 r12_14 = r14
	branch r13 == 0x0000 l00005A60
// DataOut: r10 r11 r12 r13 r14 r15
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l000059A4:
	branch r15 == r14 l00005A60
// DataOut: r10 r11 r12 r13 r14 r15
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0004(20)

l00005A60:
	word20 r10_22
	*r10Out = r10
	word20 r11_25
	*r11Out = r11
	return fp + 2
// DataOut: r10 r11 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 -4(fp):r10 -2(fp):r11

memcpy_exit:
// DataOut: r10 r11 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r10:(word16) r15 r11:(word16) r13 r13:r15 r12:r14 r15:r15 -4(fp):r10 -2(fp):r11

l000059A8:
	branch r15 <u r14 l00005A02
// DataOut: r10 r11 r12 r13 r14 r15
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 -4(fp):r10 -2(fp):r11

l00005A02:
	word20 r12_117 = r14 + r13
	word20 r13_118 = r15 + r13
	branch ((r12_117 | r13_118) & 0x0001) == 0x00000 l00005A30
// DataOut: r11 r12 r13
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 -4(fp):r10 -2(fp):r11

l00005A12:
	word20 r14_114
	branch ((r12_117 ^ r13_118) & 0x0001) != 0x00000 l00005A20
// DataOut: r11 r12 r13
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 + r15 r12:r14 + r15 r15:(r14 + r15 | r15 * 0x00002) & 0x0001 -4(fp):r10 -2(fp):r11

l00005A1A:
	branch r13 <u 0x0003 l00005A5A
// DataOut: r11 r12 r13
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 + r15 r12:r14 + r15 r15:(r14 + r15 ^ r15 * 0x00002) & 0x0001 -4(fp):r10 -2(fp):r11

l00005A5A:
	r14_114 = r12_117 & 0x0001
// DataOut: r11 r12 r13 r14
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 + r15 r12:r14 + r15 r15:(r14 + r15 ^ r15 * 0x00002) & 0x0001 -4(fp):r10 -2(fp):r11

l00005A20:
	r14_114 = r13
// DataOut: r11 r12 r13 r14
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 + r15 r12:r14 + r15 r15:(r14 + r15 ^ r15 * 0x00002) & 0x0001 -4(fp):r10 -2(fp):r11

l00005A22:
// DataOut: r12 r13 r14
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 + r15 r12:r14 + r15 r15:(r14 + r15 ^ r15 * 0x00002) & 0x0001 r14:<invalid> -4(fp):r10 -2(fp):r11

l00005A24:
	r12_117 = r12_117 + 0xFFFF
	r13_118 = r13_118 + 0xFFFF
	Mem125[r13_118:byte] = Mem0[r12_117:byte]
	r14_114 = r14_114 + 0xFFFF
	branch r14_114 != 0x00000 l00005A24
// DataOut: r12 r13 r14
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:(r14 + r15 ^ r15 * 0x00002) & 0x0001 r14:<invalid> -4(fp):r10 -2(fp):r11

l00005A30:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> -4(fp):r10 -2(fp):r11

l000059AC:
	branch ((r14 | r15) & 0x0001) == 0x00000 l000059D0
// DataOut: r10 r11 r12 r13 r14
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 -4(fp):r10 -2(fp):r11

l000059B4:
	word20 r14_59
	branch ((r14 ^ r15) & 0x0001) != 0x00000 l000059C0
// DataOut: r11 r12 r13 r14
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 r15:r14 & 0x0001 -4(fp):r10 -2(fp):r11

l000059BC:
	branch r13 <u 0x0002 l000059F8
// DataOut: r11 r12 r13 r14
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 r15:0x00000 -4(fp):r10 -2(fp):r11

l000059F8:
	r14_59 = 0x0002 - (r14 & 0x0001)
// DataOut: r11 r12 r13 r14
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 r15:0x00000 -4(fp):r10 -2(fp):r11

l000059C0:
	r14_59 = r13
// DataOut: r11 r12 r13 r14
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 r15:0x00000 -4(fp):r10 -2(fp):r11

l000059C2:
// DataOut: r12 r13 r14
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:r13 r13:r15 r12:r14 r15:<invalid> r14:<invalid> -4(fp):r10 -2(fp):r11

l000059C4:
	Mem69[r13_12:byte] = Mem0[r12_14:byte]
	r12_14 = r12_14 + 0x0001
	r13_12 = r13_12 + 0x0001
	r14_59 = r14_59 + 0xFFFF
	branch r14_59 != 0x00000 l000059C4
// DataOut: r12 r13 r14
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> -4(fp):r10 -2(fp):r11

l000059D0:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r10:r15 r11:<invalid> r13:<invalid> r12:<invalid> r15:<invalid> r14:<invalid> -4(fp):r10 -2(fp):r11



word20 memset(word20 r13, word20 r14, word20 r15, word16 wArg00, ptr16 & r9Out, ptr16 & r11Out, ptr16 & r13Out, ptr16 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13 r14 r15
// LiveOut: r11 r13 r14 r9 sp
// Trashed: VNZC r10 r11 r13 r14 r9 sp
// Preserved: r15
memset_entry:
	*r13Out = r13
// DataOut: r11 r12 r13 r14 r15 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l5A68:
	word20 r14_15 = r15
	*r14Out = r14_15
	branch r13 <u 0x0006 l5A8A
// DataOut: r10 r12 r13 r14 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l5A8A:
	branch r14 == 0x0000 l5A96
// DataOut: r10 r11 r13 r14 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:r15 -6(fp):r9 -4(fp):r10 -2(fp):r11

l5A90:
	__swpb(r14)
// DataOut: r10 r13 r14 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:r15 r11:r15 -6(fp):r9 -4(fp):r10 -2(fp):r11

l5A96:
	branch (r15 & 0x0001) == 0x00000 l5AAE
// DataOut: r10 r12 r13 r14
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:r15 r11:<invalid> r15:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

l5A9C:
	word20 r12_70 = 0x0002 - (r15 & 0x0001)
// DataOut: r10 r12 r14
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:r15 r11:<invalid> r15:<invalid> r12:r15 & 0x0001 -6(fp):r9 -4(fp):r10 -2(fp):r11

l5AA4:
	Mem77[r14_15:byte] = r14
	r14_15 = r14_15 + 0x0001
	r12_70 = r12_70 + 0xFFFF
	branch r12_70 != 0x00000 l5AA4
// DataOut: r10 r12 r14
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:<invalid> r11:<invalid> r15:0x0002 - (r15 & 0x0001) r12:<invalid> r13:r13 - (0x0002 - (r15 & 0x0001)) -6(fp):r9 -4(fp):r10 -2(fp):r11

l5AAE:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:<invalid> r11:<invalid> r15:<invalid> r12:<invalid> r13:r13 - (0x0002 - (r15 & 0x0001)) -6(fp):r9 -4(fp):r10 -2(fp):r11

l5A7A:
	branch r13 == 0x0000 l5ACE
// DataOut: r10 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:r15 -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l5A7E:
	Mem47[r14_15:byte] = r14
	r14_15 = r14_15 + 0x0001
	*r14Out = r14_15
	r13 = r13 + 0xFFFF
	*r13Out = r13
	branch r13 != 0x00000 l5A7E
// DataOut: r10 r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:<invalid> r13:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l5A88:
// DataOut: r12 r13 r14 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:<invalid> r13:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11
// LocalsOut: fp(20) Local -0002(20) Local -0006(20)

l5ACE:
	word20 r9_28
	*r9Out = r9
	word20 r11_34
	*r11Out = r11
	return fp + 2
// DataOut: r11 r12 r13 r14 r5 r6 r7 r8 r9 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp - 6 r9:r15 r10:r14 r14:<invalid> r13:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11

memset_exit:
// DataOut: r11 r13 r14 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 2 r9:(word16) r15 r10:(word16) r14 r14:<invalid> r15:r15 r11:(word16) r11 r13:<invalid> -6(fp):r9 -4(fp):r10 -2(fp):r11



word20 fn00005B04(word20 r10, word20 r11, word20 r12, word20 r13, ptr16 & r12Out, ptr16 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10 r11 r12 r13
// LiveOut: r12 r13 sp
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r8 r9 sp
// Preserved:
fn00005B04_entry:
// DataOut: r10 r11 r12 r13 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l00005B04:
	word20 r8_11 = 0x0000
	branch (r13 & 0x8000) == 0x0000 l00005B16
// DataOut: r10 r11 r12 r13 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp

l00005B0C:
	r12 = (r12 ^ 0xFFFF) + 0x0001
	r13 = (r13 ^ 0xFFFF) + (r12 <u 0x00000)
	r8_11 = r8_11 | 0x0004
// DataOut: r10 r11 r12 r13 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r8:0x0000

l00005B16:
	branch (r11 & 0x8000) == 0x0000 l00005B26
// DataOut: r10 r11 r12 r13 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r13:<invalid> r12:(r12 ^ 0xFFFF ^ 0xFFFF) + 0x0001

l00005B1C:
	r10 = (r10 ^ 0xFFFF) + 0x0001
	r11 = (r11 ^ 0xFFFF) + (r10 <u 0x00000)
	r8_11 = r8_11 | 0x0008
// DataOut: r10 r11 r12 r13 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r13:<invalid> r12:(r12 ^ 0xFFFF ^ 0xFFFF) + 0x0001

l00005B26:
	word20 sp_27
	word20 r8_28
	word20 r14_31
	word20 r15_32
	word20 r12_29
	word20 r13_30
	bool C_33 = fn00005B4E(r8_11, r10, r11, r12, r13, wLoc02, out sp_27, out r8_28, out r12_29, out r13_30, out r14_31, out r15_32)
	word20 r8_34 = __rcr(r8_28, 0x01, C_33)
	branch (r8_34 & 0x0004) == 0x0000 l00005B40
// DataOut: r12 r13 r14 r15 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r13:<invalid> r12:(r12 ^ 0xFFFF ^ 0xFFFF) + 0x0001 r11:<invalid> r10:(r10 ^ 0xFFFF ^ 0xFFFF) + 0x0001

l00005B30:
	r12_29 = (r12_29 ^ 0xFFFF) + 0x0001
	*r12Out = r12_29
	*r13Out = (r13_30 ^ 0xFFFF) + (r12_29 <u 0x00000)
// DataOut: r12 r13 r8 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r13:<invalid> r12:<invalid> r11:<invalid> r10:(r10 ^ 0xFFFF ^ 0xFFFF) + 0x0001 r15:<invalid> r14:<invalid> r9:<invalid>

l00005B40:
	branch (r8_34 & 0x0008) == 0x0000 l00005B4C
// DataOut: r12 r13 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r13:<invalid> r12:<invalid> r11:<invalid> r10:(r10 ^ 0xFFFF ^ 0xFFFF) + 0x0001 r14:<invalid> r15:<invalid> r9:<invalid>

l00005B44:
	word20 r12_59 = r12_29 ^ 0xFFFF
	word20 r12_61
	*r12Out = r12_59 + 0x0001
	word20 r13_64
	*r13Out = (r13_30 ^ 0xFFFF) + (r12_59 <u 0x00001)
// DataOut: r12 r13 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r13:<invalid> r12:<invalid> r11:<invalid> r10:(r10 ^ 0xFFFF ^ 0xFFFF) + 0x0001 r14:<invalid> r15:<invalid> r9:<invalid>

l00005B4C:
	return sp_27 + 2
// DataOut: r12 r13 sp sr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r13:<invalid> r12:<invalid> r11:<invalid> r10:(r10 ^ 0xFFFF ^ 0xFFFF) + 0x0001 r14:<invalid> r15:<invalid> r9:<invalid>

fn00005B04_exit:
// DataOut: r12 r13 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r13:<invalid> r12:<invalid> r11:<invalid> r10:(r10 ^ 0xFFFF ^ 0xFFFF) + 0x0001 r14:<invalid> r15:<invalid> r9:<invalid>



bool fn00005B4E(word20 r8, word20 r10, word20 r11, word20 r12, word20 r13, word16 wArg00, ptr16 & spOut, ptr16 & r8Out, ptr16 & r12Out, ptr16 & r13Out, ptr16 & r14Out, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10 r11 r12 r13 r8
// LiveOut: C r12 r13 r14 r15 r8 sp
// Trashed: VNZC r12 r13 r14 r15 r8 r9 sp
// Preserved:
fn00005B4E_entry:
// DataOut: r10 r11 r12 r13 r4 r5 r6 r7 r8 sr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00005B4E:
	word20 r15_18
	*r15Out = 0x00000
	word20 r14_17
	*r14Out = 0x00000
	bool C_19 = (bool) cond(0x00000)
	word20 r9_15 = 0x0021
// DataOut: r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(20)

l00005B6C:
	r12 = r12 * 0x00002 + C_19
	*r12Out = r12
	r13 = r13 * 0x00002 + (r12 <u 0x00000)
	*r13Out = r13
	r9_15 = r9_15 - 0x0001
	word20 r8_26 = r8 * 0x00002 + (r13 <u 0x00000)
	*r8Out = r8_26
	bool C_30 = (bool) cond(r9_15)
	branch r9_15 != 0x00000 l00005B58
// DataOut: r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): C
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r8:<invalid>
// LocalsOut: fp(20)

l00005B58:
	r8 = __rcr(r8_26, 0x01, C_30)
	r14_17 = r14_17 * 0x00002 + (r8 <u 0x00000)
	*r14Out = r14_17
	r15_18 = r15_18 * 0x00002 + (r14_17 <u 0x00000)
	*r15Out = r15_18
	C_19 = (bool) cond(r15_18 - r11) (alias)
	branch r15_18 >=u r11 l00005B6C
// DataOut: r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): ZC
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r8:<invalid>
// LocalsOut: fp(20)

l00005B62:
	branch r15_18 != r11 l00005B68
// DataOut: r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): 
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r8:<invalid>
// LocalsOut: fp(20)

l00005B64:
	C_19 = (bool) cond(r14_17 - r10) (alias)
	branch r14_17 >=u r10 l00005B6C
// DataOut: r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): C
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r8:<invalid>
// LocalsOut: fp(20)

l00005B68:
	r14_17 = r14_17 - r10
	*r14Out = r14_17
	r15_18 = r15_18 - r11 - (r14_17 <u 0x00000)
	*r15Out = r15_18
	C_19 = (bool) cond(r15_18) (alias)
// DataOut: r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// DataOut (flags): C
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r8:<invalid>
// LocalsOut: fp(20)

l00005B76:
	word20 sp_35
	*spOut = fp + 2
	return C_30
// DataOut: r12 r13 r14 r15 r4 r5 r6 r7 r8 sp sr
// DataOut (flags): C
// SymbolicIn: sp:fp r15:<invalid> r14:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r8:<invalid>

fn00005B4E_exit:
// DataOut: r12 r13 r14 r15 r8 sp
// DataOut (flags): C
// SymbolicIn: sp:fp + 2 r15:<invalid> r14:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> r8:<invalid>



