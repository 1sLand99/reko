byte _init(word64 r4, word64 r6, word64 r7, word64 r8, word64 r9, word64 r10, word64 r11, word64 r12, word64 r13, word64 r14, ptr32 & r1Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..63] r11:[0..63] r12:[0..63] r13:[0..63] r14:[0..63] r4:[0..63] r6:[0..63] r7:[0..63] r8:[0..63] r9:[0..63]
// LiveOut: CC r1 r10 r11 r12 r13 r6 r8 r9
// Trashed: CC r1 r10 r11 r12 r13 r14 r4 r6 r7 r8 r9
// Preserved: r15
_init_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000560:
	word64 r1_37 = Mem34[DPB(fp - 160, 0x00002038, 0):word64]
	word64 r15_33 = fp - 320
	word64 r12_35 = DPB(r12, 0x00002000, 0)
	word64 r1_38 = r1_37
	branch r1_37 == 0x0000000000000000 l00000590
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000058E:
	call r1_37 (retsize: 0;)
		uses: r1:r1_37,r10:r10,r11:r11,r12:r12_35,r13:r13,r14:0x00000590,r15:fp - 320,r4:r4,r6:r6,r7:r7,r8:r8,r9:r9,Stack +0000:fp - 160,Stack +00D0:r6,Stack +00D8:r7,Stack +00E0:r8,Stack +00E8:r9,Stack +00F0:r10,Stack +00F8:r11,Stack +0100:r12,Stack +0108:r13,Stack +0110:r14,Stack +0118:fp - 160
		defs: r1:r1_51,r15:r15_41
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000590:
	word64 v16_58 = r15_33 + 208
	word64 r4_57 = Mem34[r15_33 + 272:word64]
	word64 r6_79
	word64 r8_81
	word64 r9_82
	word64 r10_83
	word64 r11_84
	word64 r12_85
	word64 r13_86
	word64 r1_89
	byte CC_91
	call r4_57 (retsize: 0;)
		uses: r1:r1_88,r10:Mem34[v16_58 + 32:word64],r11:Mem34[v16_58 + 40:word64],r12:Mem34[v16_58 + 48:word64],r13:Mem34[v16_58 + 56:word64],r14:Mem34[v16_58 + 64:word64],r15:Mem34[v16_58 + 72:word64],r4:r4_57,r6:Mem34[v16_58:word64],r7:Mem34[v16_58 + 8:word64],r8:Mem34[v16_58 + 16:word64],r9:Mem34[v16_58 + 24:word64],Stack +FFFFFEC0:fp - 160,Stack +FFFFFF90:r6,Stack +FFFFFF98:r7,Stack +FFFFFFA0:r8,Stack +FFFFFFA8:r9,Stack +FFFFFFB0:r10,Stack +FFFFFFB8:r11,Stack +FFFFFFC0:r12,Stack +FFFFFFC8:r13,Stack +FFFFFFD0:r14,Stack +FFFFFFD8:fp - 160
		defs: CC:CC_91,r1:r1_89,r10:r10_83,r11:r11_84,r12:r12_85,r13:r13_86,r6:r6_79,r8:r8_81,r9:r9_82
	r1Out = r1_89
	r6Out = r6_79
	r8Out = r8_81
	r9Out = r9_82
	r10Out = r10_83
	r11Out = r11_84
	r12Out = r12_85
	r13Out = r13_86
	return CC_91
// DataOut:
// DataOut (flags):
// SymbolicIn:

_init_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __cxa_finalize()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r15
// Terminates process
__cxa_finalize_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

__cxa_finalize_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __libc_start_main()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r15
// Terminates process
__libc_start_main_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

__libc_start_main_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _start(word64 r2, word64 r5, word64 r6, word64 r14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14:[0..63] r2:[32..63] r5:[32..63] r6:[32..63]
// LiveOut:
// Trashed:
// Preserved: r15
// Terminates process
_start_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

_start_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000600:
	word64 r15_7 = fp - 160 & 0xFFFFFFFFFFFFFFF0
	Mem10[r15_7 - 176:byte] = 0x00
	Mem14[r15_7 - 16:word64] = r14
	Mem16[r15_7 - 8:word64] = r15_7 - 176
	__libc_start_main(Mem16[DPB(r2, 0x00002040, 0):word64], qwLocA0, fp - 152, DPB(r5, 0x00000820, 0), DPB(r6, 0x00000888, 0), Mem16[r15_7 - 16:(ptr32 (fn void ()))], Mem16[r15_7 - 8:(ptr32 void)])
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 deregister_tm_clones(word64 r1, word64 r2, word64 r5, word64 r14, ptr32 & r2Out, ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r1:[32..63] r14:[0..63] r2:[32..63] r5:[32..63]
// LiveOut: r1 r2 r5
// Trashed: CC r1 r14 r2 r5
// Preserved: r15
deregister_tm_clones_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000648:
	word64 r2_8 = DPB(r2, 0x00002068, 0)
	word64 r5_4 = DPB(r5, 0x000008C8, 0)
	word64 r1_10 = DPB(r1, 0x00002068, 0) + 7 - r2_8
	branch r1_10 > Mem0[r5_4:byte] l0000066A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000066A:
	word64 r1_14 = Mem0[DPB(r1_10, 0x00002030, 0):word64]
	branch r1_14 != 0x0000000000000000 l0000067C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000067C:
	word64 r5_18
	word64 r1_19
	word64 r2_20
	call r1_14 (retsize: 0;)
		uses: r1:r1_14,r14:r14,r15:fp - 160,r2:r2_8,r5:r5_4
		defs: r1:r1_19,r2:r2_20,r5:r5_18
	r2Out = r2_20
	r5Out = r5_18
	return r1_19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000067A_1:
	word64 r5_25
	word64 r1_26
	word64 r2_27
	call r14 (retsize: 0;)
		uses: r1:r1_14,r14:r14,r15:fp - 160,r2:r2_8,r5:r5_4
		defs: r1:r1_26,r2:r2_27,r5:r5_25
	r2Out = r2_27
	r5Out = r5_25
	return r1_26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000668_1:
	word64 r5_31
	word64 r1_32
	word64 r2_33
	call r14 (retsize: 0;)
		uses: r1:r1_10,r14:r14,r15:fp - 160,r2:r2_8,r5:r5_4
		defs: r1:r1_32,r2:r2_33,r5:r5_31
	r2Out = r2_33
	r5Out = r5_31
	return r1_32
// DataOut:
// DataOut (flags):
// SymbolicIn:

deregister_tm_clones_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void register_tm_clones(word64 r1, word64 r2, word64 r3, word64 r14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r1:[32..63] r14:[0..63] r2:[0..63] r3:[32..63]
// LiveOut:
// Trashed: CC r1 r14 r2 r3
// Preserved: r15
register_tm_clones_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000680:
	word64 r3_7 = DPB(r3, 0x00002068, 0) - DPB(r1, 0x00002068, 0)
	word64 r1_9 = r3_7 >> 3 >>u 63
	word64 r3_10 = (r3_7 >> 3) + r1_9
	branch r3_10 != 0x0000000000000000 l000006A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000006A8:
	word64 r1_15 = Mem0[DPB(r1_9, 0x00002050, 0):word64]
	branch r1_15 != 0x0000000000000000 l000006BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000006BA:
	call r1_15 (retsize: 0;)
		uses: r1:r1_15,r14:r14,r15:fp - 160,r2:DPB(r2, 0x00002068, 0),r3:r3_10 >> 1
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000006B8_1:
	call r14 (retsize: 0;)
		uses: r1:r1_15,r14:r14,r15:fp - 160,r2:r2,r3:r3_10 >> 1
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000006A6_1:
	call r14 (retsize: 0;)
		uses: r1:r1_9,r14:r14,r15:fp - 160,r2:r2,r3:r3_10 >> 1
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

register_tm_clones_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __do_global_dtors_aux(word64 r1, word64 r2, word64 r4, word64 r5, word64 r11, word64 r12, word64 r13, word64 r14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r1:[0..63] r11:[0..63] r12:[0..63] r13:[0..63] r14:[0..63] r2:[0..63] r4:[0..63] r5:[0..63]
// LiveOut:
// Trashed: CC r1 r11 r12 r13 r14 r2 r4 r5
// Preserved: r15
__do_global_dtors_aux_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000006C8:
	word64 r13_17 = DPB(r13, 0x000008D0, 0)
	word64 r15_18 = fp - 320
	word64 r11_19 = DPB(r11, 0x00002068, 0)
	branch Mem16[r11_19:byte] != 0x00 l00000712
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000006E6:
	word64 r1_22 = DPB(r1, 0x00002028, 0)
	branch Mem16[r13_17:byte] == Mem16[r1_22:byte] l00000708
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000006F6:
	word64 r1_24 = DPB(r1, 0x00002060, 0)
	call __cxa_finalize (retsize: 0;)
		uses: r1:r1_24,r11:r11_19,r12:r12,r13:r13_17,r14:0x00000708,r15:fp - 320,r2:Mem16[r1_24:word64],r4:r4,r5:r5,Stack +00F8:r11,Stack +0100:r12,Stack +0108:r13,Stack +0110:r14,Stack +0118:fp - 160
		defs: r1:r1_32,r11:r11_28,r15:r15_27,r2:r2_33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000708:
	r1 = deregister_tm_clones(r1_22, r2, r5, 0x0000070E, out r2, out r5)
	Mem49[r11_19:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000712:
	word64 v12_54 = r15_18 + 248
	word64 r4_53 = Mem52[r15_18 + 272:word64]
	call r4_53 (retsize: 0;)
		uses: r1:r1_69,r11:Mem52[v12_54:word64],r12:Mem52[v12_54 + 8:word64],r13:Mem52[v12_54 + 16:word64],r14:Mem52[v12_54 + 24:word64],r15:Mem52[v12_54 + 32:word64],r2:r2_71,r4:r4_53,r5:r5_74,Stack +FFFFFFB8:r11,Stack +FFFFFFC0:r12,Stack +FFFFFFC8:r13,Stack +FFFFFFD0:r14,Stack +FFFFFFD8:fp - 160
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

__do_global_dtors_aux_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void frame_dummy(word64 r1, word64 r2, word64 r3, word64 r13, word64 r14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r1:[0..63] r13:[0..63] r14:[0..63] r2:[32..63] r3:[0..63]
// LiveOut:
// Trashed: CC r1 r13 r14 r15 r2 r3
// Preserved:
frame_dummy_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000720:
	word64 r13_11 = DPB(r13, 0x000008D8, 0)
	word64 r2_14 = DPB(r2, 0x00001E18, 0)
	word64 r15_12 = fp - 320
	byte CC_15 = cond(Mem10[r13_11:byte] - Mem10[r2_14:byte])
	branch Mem10[r13_11:byte] != Mem10[r2_14:byte] l0000074C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000740:
	Mem18 = Mem10 (alias)
	word64 v8_17 = r15_12 + 264
	r13_11 = Mem18[v8_17:word64]
	word64 r14_21 = Mem18[v8_17 + 8:word64]
	r15_12 = Mem18[v8_17 + 16:word64]
	branch CC_15 l00000680
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000746_thunk_register_tm_clones:
	register_tm_clones(r1, r2_14, r3, r14_21)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

frame_dummy_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000074C:
	word64 r1_37 = Mem10[DPB(r1, 0x00002048, 0):word64]
	r1 = r1_37
	CC_15 = cond(r1_37)
	branch r1_37 == 0x0000000000000000 l00000740
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000760:
	call r1_37 (retsize: 0;)
		uses: r1:r1_37,r13:r13_43,r14:0x00000762,r15:r15_41,r2:r2_46,r3:r3_49,Stack +FFFFFFC8:r13,Stack +FFFFFFD0:r14,Stack +FFFFFFD8:fp - 160
		defs: CC:CC_52,r1:r1_48,r15:r15_42,r2:r2_47,r3:r3_51
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fib(word64 r2, word64 r10, word64 r11, word64 r12, word64 r13, word64 r14, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..63] r11:[0..63] r12:[0..63] r13:[0..63] r14:[0..63] r2:[0..63]
// LiveOut: r10 r11 r12 r13 r2
// Trashed: CC r1 r10 r11 r12 r13 r14 r2 r4
// Preserved: r15
fib_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000768:
	word64 r1_74
	word64 r11_21 = fp - 328
	word32 dwLocA4_113 = (word32) r2
	word32 v12_25 = SLICE(r2, word32, 32)
	branch r2 >u 0x0000000000000001 l00000792
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000792:
	word64 r11_40
	word64 r12_41
	word64 r13_42
	word64 r2_44 = fib((int64) (word32) SEQ(v12_25, (word32) r2 - 1), r10, fp - 328, r12, r13, 0x000007A8, out r10_128, out r11_40, out r12_41, out r13_42)
	word32 v18_51 = SLICE(r2_44, word32, 32)
	word64 r10_62
	word64 r2_67 = fib((int64) (word32) SEQ(v18_51, (word32) SEQ(v18_51, Mem24[r11_40 + 164:word32]) - 2), r2_44, r11_40, r12_41, r13_42, 0x000007C4, out r10_62, out r11_21, out r12_129, out r13_130)
	r1_74 = SEQ(SLICE(r2_67, word32, 32), (word32) (r2_67 + r10_62))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000078A:
	r1_74 = r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000007CA:
	word64 v26_85 = r11_21 + 248
	word64 r1_80 = (int64) (word32) r1_74
	word64 r4_84 = Mem24[r11_21 + 280:word64]
	word64 r10_98
	word64 r11_99
	word64 r12_100
	word64 r13_101
	word64 r2_103
	call r4_84 (retsize: 0;)
		uses: r1:r1_80,r10:Mem24[v26_85:word64],r11:Mem24[v26_85 + 8:word64],r12:Mem24[v26_85 + 16:word64],r13:Mem24[v26_85 + 24:word64],r14:Mem24[v26_85 + 32:word64],r15:Mem24[v26_85 + 40:word64],r2:r1_80,r4:r4_84,Stack +FFFFFF5C:dwLocA4_113,Stack +FFFFFFB0:r10,Stack +FFFFFFB8:r11,Stack +FFFFFFC0:r12,Stack +FFFFFFC8:r13,Stack +FFFFFFD0:r14,Stack +FFFFFFD8:fp - 160
		defs: r10:r10_98,r11:r11_99,r12:r12_100,r13:r13_101,r2:r2_103
	r10Out = r10_98
	r11Out = r11_99
	r12Out = r12_100
	r13Out = r13_101
	return r2_103
// DataOut:
// DataOut (flags):
// SymbolicIn:

fib_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void main(word64 r2, word64 r3, word64 r10, word64 r11, word64 r12, word64 r13, word64 r14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..63] r11:[0..63] r12:[0..63] r13:[0..63] r14:[0..63] r2:[0..31] r3:[0..63]
// LiveOut:
// Trashed: CC r1 r10 r11 r12 r13 r14 r2 r3 r4
// Preserved: r15
main_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000007E0:
	word64 r10_29
	word64 r11_30
	word64 r1_39 = (int64) (word32) fib(0x000000000000000A, r10, fp - 336, r12, r13, 0x00000806, out r10_29, out r11_30, out r12_71, out r13_72)
	word64 r4_41 = Mem24[r11_30 + 288:word64]
	call r4_41 (retsize: 0;)
		uses: r1:r1_39,r10:r10_29,r11:Mem24[r11_30 + 264:word64],r12:Mem24[r11_30 + 272:word64],r13:Mem24[r11_30 + 280:word64],r14:Mem24[r11_30 + 288:word64],r15:Mem24[r11_30 + 296:word64],r2:r1_39,r3:r3,r4:r4_41,Stack +FFFFFF50:r3,Stack +FFFFFF5C:(word32) r2,Stack +FFFFFFB8:r11,Stack +FFFFFFC0:r12,Stack +FFFFFFC8:r13,Stack +FFFFFFD0:r14,Stack +FFFFFFD8:fp - 160
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

main_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __libc_csu_init(word64 r2, word64 r3, word64 r4, word64 r6, word64 r7, word64 r8, word64 r9, word64 r10, word64 r11, word64 r12, word64 r13, word64 r14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..63] r11:[0..63] r12:[0..63] r13:[0..63] r14:[0..63] r2:[0..63] r3:[0..63] r4:[0..63] r6:[0..63] r7:[0..63] r8:[0..63] r9:[0..63]
// LiveOut:
// Trashed: CC r1 r10 r11 r12 r13 r14 r2 r3 r4 r6 r7 r8 r9
// Preserved: r15
__libc_csu_init_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000820:
	word64 r1_124 = DPB(r1_39, 0x00001E08, 0)
	word64 r15_29 = fp - 320
	word64 r11_54 = DPB(r11_41, 0x00001E10, 0) - r1_124 >> 3
	word64 r1_39
	word64 r11_41
	word64 r8_48
	word64 r9_49
	word64 r10_40
	word64 r12_42
	word64 r13_43
	word64 r6_126
	branch _init(r4, r6, r7, r4, r3, r2, r11, r12, r13, 0x0000083C, out r1_39, out r6_126, out r8_48, out r9_49, out r10_40, out r11_41, out r12_42, out r13_43) l00000876
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000856:
	word64 r7_55 = r1_124
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000085A:
	word64 r1_58 = Mem28[r7_55:word64]
	word64 r11_75
	call r1_58 (retsize: 0;)
		uses: r1:r1_58,r10:r10_63,r11:r11_74,r12:r12_76,r13:r13_78,r14:0x00000872,r15:r15_68,r2:r10_63,r3:r9_61,r4:r8_59,r6:r6_85,r7:r7_56 + 8,r8:r8_59,r9:r9_61,Stack +FFFFFF98:r7,Stack +FFFFFFA0:r8,Stack +FFFFFFA8:r9,Stack +FFFFFFB0:r10,Stack +FFFFFFB8:r11,Stack +FFFFFFC0:r12,Stack +FFFFFFC8:r13,Stack +FFFFFFD0:r14,Stack +FFFFFFD8:fp - 160
		defs: r1:r1_84,r10:r10_73,r11:r11_75,r12:r12_77,r13:r13_79,r15:r15_69,r2:r2_81,r3:r3_82,r6:r6_86,r7:r7_70,r8:r8_71,r9:r9_72
	r11_54 = r11_75 - 1
	branch r11_75 != 0x0000000000000001 l0000085A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000876:
	word64 v17_92 = r15_29 + 216
	word64 r4_91 = Mem28[r15_29 + 272:word64]
	call r4_91 (retsize: 0;)
		uses: r1:r1_124,r10:Mem28[v17_92 + 24:word64],r11:Mem28[v17_92 + 32:word64],r12:Mem28[v17_92 + 40:word64],r13:Mem28[v17_92 + 48:word64],r14:Mem28[v17_92 + 56:word64],r15:Mem28[v17_92 + 64:word64],r2:r2_119,r3:r3_121,r4:r4_91,r6:r6_126,r7:Mem28[v17_92:word64],r8:Mem28[v17_92 + 8:word64],r9:Mem28[v17_92 + 16:word64],Stack +FFFFFF98:r7,Stack +FFFFFFA0:r8,Stack +FFFFFFA8:r9,Stack +FFFFFFB0:r10,Stack +FFFFFFB8:r11,Stack +FFFFFFC0:r12,Stack +FFFFFFC8:r13,Stack +FFFFFFD0:r14,Stack +FFFFFFD8:fp - 160
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

__libc_csu_init_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __libc_csu_fini(word64 r14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14:[0..63]
// LiveOut:
// Trashed: r14
// Preserved: r15
__libc_csu_fini_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000888:
	call r14 (retsize: 0;)
		uses: r14:r14,r15:fp - 160
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

__libc_csu_fini_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _fini(word64 r6, word64 r7, word64 r8, word64 r9, word64 r10, word64 r11, word64 r12, word64 r13, word64 r14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..63] r11:[0..63] r12:[0..63] r13:[0..63] r14:[0..63] r6:[0..63] r7:[0..63] r8:[0..63] r9:[0..63]
// LiveOut:
// Trashed: CC r1 r10 r11 r12 r13 r14 r4 r6 r7 r8 r9
// Preserved: r15
_fini_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000890:
	call r14 (retsize: 0;)
		uses: r1:fp - 160,r10:r10,r11:r11,r12:r12,r13:r13,r14:r14,r15:fp - 160,r4:r14,r6:r6,r7:r7,r8:r8,r9:r9,Stack +0030:r6,Stack +0038:r7,Stack +0040:r8,Stack +0048:r9,Stack +0050:r10,Stack +0058:r11,Stack +0060:r12,Stack +0068:r13,Stack +0070:r14,Stack +0078:fp - 160,Stack +FFFFFEC0:fp - 160,Stack +FFFFFF60:fp - 160,Stack +FFFFFF90:r6,Stack +FFFFFF98:r7,Stack +FFFFFFA0:r8,Stack +FFFFFFA8:r9,Stack +FFFFFFB0:r10,Stack +FFFFFFB8:r11,Stack +FFFFFFC0:r12,Stack +FFFFFFC8:r13,Stack +FFFFFFD0:r14,Stack +FFFFFFD8:fp - 160
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_fini_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



