void prvUnlockQueue(word32 r0, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV r0 r10 r2 r4 r5 r6 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvUnlockQueue_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

prvUnlockQueue_entry:
// DataOut: r0 r10 r2 r4 r5 r6 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000059:
	branch Z l0000005D
// DataOut: r0 r10 r2 r4 r5 r6 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000059_1:
	Mem17[r6:word32] = r0
	Mem20[r6 - 4:word32] = r2
	Mem21[r6 - 8:word32] = r4
	Mem23[r6 - 12:word32] = r5
	Mem25[r6 - 16:word32] = r7
	Mem26[r6 - 20:word32] = r8
	Mem27[r6 - 24:word32] = r10
// DataOut: r0 r10 r4
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000005D:
	branch ZC l00000061
// DataOut: r0 r10 r4
// DataOut (flags): V
// SymbolicIn: sp:fp

l0000005D_1:
// DataOut: r0 r4
// DataOut (flags): V
// SymbolicIn: sp:fp

l00000061:
	branch V l00000065
// DataOut: r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r10:r10 + 3312 r8:<invalid>

l00000061_1:
	Mem12[r0:byte] = (byte) r4
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r10:r10 + 3312 r8:<invalid>

l00000065:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r10:r10 + 3312 r8:<invalid> r0:r0 - 0x000005F8



void prvCopyDataToQueue(word32 lr, word32 pc, word32 r0, word32 r2, word32 r3, word32 r5, word32 r6, word32 r8, word32 r9, word32 r10, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV fp lr pc r0 r10 r2 r3 r5 r6 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvCopyDataToQueue_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

prvCopyDataToQueue_entry:
// DataOut: fp lr pc r0 r10 r2 r3 r5 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000000ED:
	branch Z l000000F1
// DataOut: fp lr pc r0 r10 r2 r3 r5 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000000ED_1:
	Mem218[r6:word16] = (uint16) r0
	r6 = r6 + 0xFFFFFFBB
// DataOut: fp lr pc r0 r10 r2 r3 r5 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000000F1:
	branch C l000000F5
// DataOut: fp lr pc r0 r10 r2 r3 r5 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB
// LocalsOut: fp(32)

l000000F1_1:
	Mem208[fp:word32] = r2
	Mem209[fp - 4:word32] = r3
	Mem210[fp - 8:word32] = r5
	Mem211[fp - 12:word32] = r6
	Mem212[fp - 16:word32] = r8
	Mem213[fp - 20:word32] = r10
	Mem214[fp - 24:word32] = fp
	Mem215[fp - 28:word32] = pc
	fp = fp - 32
	fp_r10 = SEQ(fp - 32, r10) (alias)
// DataOut: fp lr r0 r10 r2 r3 r5 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB
// LocalsOut: fp(32)

l000000F5:
	branch Z l000000F9
// DataOut: fp lr r0 r10 r2 r3 r5 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32
// LocalsOut: fp(32)

l000000F5_1:
	Mem206[r8:word16] = (uint16) r2
	r8 = r8 + 0x00000069
// DataOut: fp lr r0 r10 r3 r5 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32
// LocalsOut: fp(32)

l000000F9:
	branch Z l000000FD
// DataOut: fp lr r0 r10 r3 r5 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:r8 + 0x00000069
// LocalsOut: fp(32)

l000000F9_1:
	r3 = r0 & ~(lr >>u 2)
// DataOut: fp r0 r10 r3 r5 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:r8 + 0x00000069
// LocalsOut: fp(32)

l000000FD:
	branch V l00000101
// DataOut: fp r0 r10 r3 r5 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:r8 + 0x00000069 r3:r0 & ~(lr >>u 2)
// LocalsOut: fp(32)

l000000FD_1:
	r10 = r3 - (r5 >>u r5)
	fp_r10 = SEQ(fp, r10) (alias)
// DataOut: fp r0 r10 r3 r5 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:r8 + 0x00000069 r3:r0 & ~(lr >>u 2)
// LocalsOut: fp(32)

l00000101:
	branch Z l00000105
// DataOut: fp r0 r10 r3 r5 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:r8 + 0x00000069 r3:r0 & ~(lr >>u 2) r10:(r0 & ~(lr >>u 2)) - (r5 >>u r5)
// LocalsOut: fp(32)

l00000101_1:
// DataOut: fp r0 r10 r3 r5 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:r8 + 0x00000069 r3:r0 & ~(lr >>u 2) r10:(r0 & ~(lr >>u 2)) - (r5 >>u r5)
// LocalsOut: fp(32)

l00000105:
	branch NV l00000109
// DataOut: fp r0 r10 r3 r5 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:r8 + 0x00000069 r3:r0 & ~(lr >>u 2) r10:(r0 & ~(lr >>u 2)) - (r5 >>u r5) r1:r6 - 0x0BD0008A
// LocalsOut: fp(32)

l00000105_1:
	byte NZCV_195 = cond(r9 + (r6 >> 28) + C)
	C = NZCV_195 (alias)
	NV = NZCV_195 (alias)
	Z = NZCV_195 (alias)
	N = NZCV_195 (alias)
// DataOut: fp r0 r10 r3 r5 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:r8 + 0x00000069 r3:r0 & ~(lr >>u 2) r10:(r0 & ~(lr >>u 2)) - (r5 >>u r5) r1:r6 - 0x0BD0008A
// LocalsOut: fp(32)

l00000109:
	branch N l0000010D
// DataOut: fp r0 r10 r3 r5 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:r8 + 0x00000069 r3:r0 & ~(lr >>u 2) r10:(r0 & ~(lr >>u 2)) - (r5 >>u r5) r1:r6 - 0x0BD0008A r7:<invalid>
// LocalsOut: fp(32)

l00000109_1:
	word32 sp_173
	word32 r6_176
	word32 fp_178
	word32 r2_179
	word32 pc_184
	word32 lr_185
	byte V_186
	word32 r1_187
	word32 r7_189
	word32 r9_190
	byte NZCV_191
	byte N_192
	byte NZ_193
	call fnFFC02AB1 (retsize: 0;)
		uses: C_31,fp_9,lr,N_26,NV_29,NZ_25,NZCV_27,pc,r0,r1_19,r10_17,r2,r3_13,r5,r6_4,r7_28,r8_11,r9,sp_1,V_30,Z_32
		defs: C_177,fp_178,lr_185,N_192,NV_188,NZ_193,NZCV_191,pc_184,r0_175,r1_187,r10_183,r2_179,r3_180,r5_181,r6_176,r7_189,r8_182,r9_190,sp_173,V_186,Z_174
// DataOut: fp r0 r10 r3 r5 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:r8 + 0x00000069 r3:r0 & ~(lr >>u 2) r10:(r0 & ~(lr >>u 2)) - (r5 >>u r5) r1:r6 - 0x0BD0008A r7:<invalid>
// LocalsOut: fp(32)

l0000010D:
	branch C l00000111
// DataOut: fp r0 r10 r3 r5 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:r8 + 0x00000069 r3:r0 & ~(lr >>u 2) r10:(r0 & ~(lr >>u 2)) - (r5 >>u r5) r1:r6 - 0x0BD0008A r7:<invalid>
// LocalsOut: fp(32)

l0000010D_1:
	r8 = r8 + -58
	Mem172[r8:word64] = fp_r10
// DataOut: r0 r10 r3 r5 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:r8 + 0x00000069 r3:r0 & ~(lr >>u 2) r10:(r0 & ~(lr >>u 2)) - (r5 >>u r5) r1:r6 - 0x0BD0008A r7:<invalid>
// LocalsOut: fp(32)

l00000111:
	branch Z l00000115
// DataOut: r0 r10 r3 r5 r8 r9
// DataOut (flags): NCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:<invalid> r3:r0 & ~(lr >>u 2) r10:(r0 & ~(lr >>u 2)) - (r5 >>u r5) r1:r6 - 0x0BD0008A r7:<invalid>
// LocalsOut: fp(32)

l00000111_1:
	word32 sp_150
	byte Z_151
	word32 r6_153
	word32 fp_155
	word32 r2_156
	word32 pc_161
	word32 lr_162
	byte V_163
	word32 r1_164
	word32 r7_166
	word32 r9_167
	byte NZCV_168
	byte N_169
	byte NZ_170
	call fn01A18AC9 (retsize: 0;)
		uses: C_55,fp_54,lr_47,N_40,NV_44,NZ_39,NZCV_41,pc_48,r0_57,r1_45,r10_49,r2_53,r3_52,r5_51,r6_56,r7_43,r8_60,r9_42,sp_59,V_46,Z_58
		defs: C_154,fp_155,lr_162,N_169,NV_165,NZ_170,NZCV_168,pc_161,r0_152,r1_164,r10_160,r2_156,r3_157,r5_158,r6_153,r7_166,r8_159,r9_167,sp_150,V_163,Z_151
// DataOut: r0 r10 r3 r5 r8 r9
// DataOut (flags): NCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:<invalid> r3:r0 & ~(lr >>u 2) r10:(r0 & ~(lr >>u 2)) - (r5 >>u r5) r1:r6 - 0x0BD0008A r7:<invalid>
// LocalsOut: fp(32)

l00000115:
	branch NV l00000119
// DataOut: r0 r10 r3 r5 r8 r9
// DataOut (flags): NCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:<invalid> r3:r0 & ~(lr >>u 2) r10:(r0 & ~(lr >>u 2)) - (r5 >>u r5) r1:r6 - 0x0BD0008A r7:<invalid>
// LocalsOut: fp(32)

l00000115_1:
// DataOut: r0 r10 r3 r5 r8
// DataOut (flags): NCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:<invalid> r3:r0 & ~(lr >>u 2) r10:(r0 & ~(lr >>u 2)) - (r5 >>u r5) r1:r6 - 0x0BD0008A r7:<invalid>
// LocalsOut: fp(32)

l00000119:
	branch C l0000011D
// DataOut: r0 r10 r3 r5 r8
// DataOut (flags): NCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:<invalid> r3:r0 & ~(lr >>u 2) r10:(r0 & ~(lr >>u 2)) - (r5 >>u r5) r1:r6 - 0x0BD0008A r7:<invalid> r9:DPB(r9, 0x2344, 16)
// LocalsOut: fp(32)

l00000119_1:
// DataOut: r0 r10 r3 r5 r8
// DataOut (flags): NCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:<invalid> r3:r0 & ~(lr >>u 2) r10:(r0 & ~(lr >>u 2)) - (r5 >>u r5) r1:r6 - 0x0BD0008A r7:<invalid> r9:DPB(r9, 0x2344, 16)
// LocalsOut: fp(32)

l0000011D:
	branch C l00000121
// DataOut: r0 r10 r3 r5 r8
// DataOut (flags): NCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:<invalid> r3:r0 & ~(lr >>u 2) r10:(r0 & ~(lr >>u 2)) - (r5 >>u r5) r1:<invalid> r7:<invalid> r9:DPB(r9, 0x2344, 16)
// LocalsOut: fp(32)

l0000011D_1:
	r0 = r5 ^ __ror(r8, 2)
	byte NZCV_141 = cond(r0)
	C = NZCV_141 (alias)
	NV = NZCV_141 (alias)
// DataOut: r0 r10 r3
// DataOut (flags): NCV
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:<invalid> r3:r0 & ~(lr >>u 2) r10:(r0 & ~(lr >>u 2)) - (r5 >>u r5) r1:<invalid> r7:<invalid> r9:DPB(r9, 0x2344, 16)
// LocalsOut: fp(32)

l00000121:
	branch NV l00000125
// DataOut: r0 r10 r3
// DataOut (flags): C
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:<invalid> r3:r0 & ~(lr >>u 2) r10:(r0 & ~(lr >>u 2)) - (r5 >>u r5) r1:<invalid> r7:<invalid> r9:DPB(r9, 0x2344, 16) r0:<invalid>
// LocalsOut: fp(32)

l00000121_1:
	Mem139[r0 + -838:byte] = (byte) r10
// DataOut: r3
// DataOut (flags): C
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:<invalid> r3:r0 & ~(lr >>u 2) r10:(r0 & ~(lr >>u 2)) - (r5 >>u r5) r1:<invalid> r7:<invalid> r9:DPB(r9, 0x2344, 16) r0:<invalid>
// LocalsOut: fp(32)

l00000125:
	word32 r7_93 = fp + __ror(r3, 0) + C
	branch r7_93 > 0x00000000 l0000012D
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:<invalid> r3:r0 & ~(lr >>u 2) r10:(r0 & ~(lr >>u 2)) - (r5 >>u r5) r1:<invalid> r7:<invalid> r9:DPB(r9, 0x2344, 16) r0:<invalid>

l00000129_1:
	word32 sp_117
	byte Z_118
	word32 r0_119
	word32 r6_120
	byte C_121
	word32 fp_122
	word32 r2_123
	word32 r3_124
	word32 r5_125
	word32 r8_126
	word32 r10_127
	word32 pc_128
	word32 lr_129
	byte V_130
	word32 r1_131
	byte NV_132
	word32 r7_133
	word32 r9_134
	byte NZCV_135
	byte N_136
	byte NZ_137
	call fnFFC02AD1 (retsize: 0;)
		uses: C_89,fp_76,lr_69,N_85,NV_87,NZ_95,NZCV_94,pc_70,r0_92,r1_83,r10_71,r2_75,r3_74,r5_73,r6_78,r7_93,r8_72,r9_82,sp_81,V_88,Z_91
		defs: C_121,fp_122,lr_129,N_136,NV_132,NZ_137,NZCV_135,pc_128,r0_119,r1_131,r10_127,r2_123,r3_124,r5_125,r6_120,r7_133,r8_126,r9_134,sp_117,V_130,Z_118
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:<invalid> r3:r0 & ~(lr >>u 2) r10:(r0 & ~(lr >>u 2)) - (r5 >>u r5) r1:<invalid> r7:<invalid> r9:DPB(r9, 0x2344, 16) r0:<invalid>

l0000012D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB fp:fp - 32 r8:<invalid> r3:r0 & ~(lr >>u 2) r10:(r0 & ~(lr >>u 2)) - (r5 >>u r5) r1:<invalid> r7:<invalid> r9:DPB(r9, 0x2344, 16) r0:<invalid>



void prvCopyDataFromQueue()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvCopyDataFromQueue_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

prvCopyDataFromQueue_entry:
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp

l0000016D:
	branch Z l00000171
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000016D_1:
	word32 sp_5
	byte Z_6
	call fnFEC5AB25 (retsize: 0;)
		uses: sp_1,Z
		defs: sp_5,Z_6
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000171:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xQueueGenericSend(word32 r0, word32 r7, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0 r7 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueueGenericSend_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xQueueGenericSend_entry:
// DataOut: r0 r7 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00000191:
	branch Z l00000195
// DataOut: r0 r7 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00000191_1:
	word32 pc_14 = r7 - __ror(r9, 1)
// DataOut: r0
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00000195:
	branch Z l00000199
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp pc:<invalid>

l00000195_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:<invalid>

l00000199:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:<invalid> r8:<invalid> r0:r0 + 0x00000425



void xQueuePeekFromISR(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZV r3
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueuePeekFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xQueuePeekFromISR_entry:
// DataOut: r3
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000002A5:
	branch Z l000002A9
// DataOut: r3
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000002A5_1:
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000002A9:
	branch NZV l000002AD
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 + 245 lr:<invalid>

l000002A9_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 + 245 lr:<invalid>

l000002AD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 + 245 lr:<invalid>



void xQueueGenericReceive(word32 r0, word32 r7, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0 r7 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueueGenericReceive_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xQueueGenericReceive_entry:
// DataOut: r0 r7 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000002D9:
	branch Z l000002DD
// DataOut: r0 r7 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000002D9_1:
	word32 pc_14 = r7 - __ror(r9, 1)
// DataOut: r0
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000002DD:
	branch Z l000002E1
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp pc:<invalid>

l000002DD_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:<invalid>

l000002E1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:<invalid> r8:<invalid> r0:r0 + 0x00000425



void uxQueueMessagesWaiting(word32 lr, word32 pc, word32 r0, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r10, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV fp lr pc r0 r10 r2 r3 r4 r5 r6 r7 r8
// LiveOut:
// Trashed: fp ip pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
uxQueueMessagesWaiting_entry:
// DataOut: fp lr pc r0 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000429:
	branch Z l0000042D
// DataOut: fp lr pc r0 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000429_1:
	Mem43[r6:word32] = r0
	Mem44[r6 - 4:word32] = r2
	Mem45[r6 - 8:word32] = r4
	Mem46[r6 - 12:word32] = r5
	Mem47[r6 - 16:word32] = r7
	Mem48[r6 - 20:word32] = r10
// DataOut: fp lr pc r0 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000042D:
	branch NV l00000431
// DataOut: fp lr pc r0 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000042D_1:
	r10 = Mem0[r8:byte]
	r8 = r8 + 0x000004F0
// DataOut: fp lr pc r0 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000431:
	branch NZV l00000435
// DataOut: fp lr pc r0 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r10:<invalid> r8:r8 + 0x000004F0

l00000435:
	branch Z l00000439
// DataOut: fp lr pc r0 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r10:<invalid> r8:r8 + 0x000004F0

l00000435_1:
	Mem39[r6:word64] = r3_r2
	r6 = r6 + 0xFFFFFFF8
// DataOut: fp lr pc r0 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r10:<invalid> r8:r8 + 0x000004F0

l00000439:
	branch C l0000043D
// DataOut: fp lr pc r0 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r10:<invalid> r8:r8 + 0x000004F0 r6:r6 + 0xFFFFFFF8

l00000439_thunk_uxQueueSpacesAvailable:
	uxQueueSpacesAvailable(lr, r0, r2, r3, r4, r5, r6, r7, r8, r10, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r10:<invalid> r8:r8 + 0x000004F0 r6:r6 + 0xFFFFFFF8

l00000439_1:
	word32 r0_22 = Mem0[pc:word32]
	word32 r2_23 = Mem0[pc + 4:word32]
	word32 r3_24 = Mem0[pc + 8:word32]
	word32 r4_26 = Mem0[pc + 12:word32]
	word32 r5_27 = Mem0[pc + 16:word32]
	word32 r7_28 = Mem0[pc + 20:word32]
// DataOut: fp lr r0 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r10:<invalid> r8:r8 + 0x000004F0 r6:r6 + 0xFFFFFFF8

l00000439_thunk_uxQueueSpacesAvailable:
	uxQueueSpacesAvailable(lr, r0_22, r2_23, r3_24, r4_26, r5_27, r6, r7_28, r8, r10, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r10:<invalid> r8:r8 + 0x000004F0 r6:r6 + 0xFFFFFFF8 r0:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r7:<invalid> pc:pc + 24

uxQueueMessagesWaiting_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r10:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r5:<invalid> r7:<invalid> r9:<invalid> fp:<invalid> ip:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> pc:pc + 24

l00000431_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r10:<invalid> r8:r8 + 0x000004F0



void uxQueueSpacesAvailable(word32 lr, word32 r0, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r10, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV fp lr r0 r10 r2 r3 r4 r5 r6 r7 r8
// LiveOut:
// Trashed: fp ip r4 r5 r6 r7 r8 r9
// Preserved: sp
uxQueueSpacesAvailable_entry:
// DataOut: fp lr r0 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000043D:
	branch Z l00000441
// DataOut: fp lr r0 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000043D_1:
	Mem64[r6:word32] = r0
	Mem66[r6 - 4:word32] = r2
	Mem67[r6 - 8:word32] = r4
	Mem68[r6 - 12:word32] = r5
	Mem69[r6 - 16:word32] = r7
	Mem70[r6 - 20:word32] = r8
	Mem71[r6 - 24:word32] = r10
// DataOut: fp lr r10 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000441:
	branch NV l00000445
// DataOut: fp lr r10 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000445:
	branch C l00000449
// DataOut: fp lr r10 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000445_1:
	Mem62[fp:byte] = (byte) lr
// DataOut: r10 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000449:
	branch NZV l0000044D
// DataOut: r10 r3 r4 r5 r6 r7 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp fp:fp - 0x00000C6B
// LocalsOut: fp(32)

l00000449_1:
	byte NZCV_56 = cond(!(r10 << r8))
	C = NZCV_56 (alias)
	Z = NZCV_56 (alias)
// DataOut: r3 r4 r5 r6 r7
// DataOut (flags): ZC
// SymbolicIn: sp:fp fp:fp - 0x00000C6B
// LocalsOut: fp(32)

l0000044D:
	branch C l00000451
// DataOut: r3 r4 r5 r6 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:fp - 0x00000C6B r0:!(r10 << r8)
// LocalsOut: fp(32)

l0000044D_1:
	Mem48[r6:word32] = r3
	Mem49[r6 - 4:word32] = r4
	Mem50[r6 - 8:word32] = r5
	Mem51[r6 - 12:word32] = r6
	Mem52[r6 - 16:word32] = r7
	Mem53[r6 - 20:word32] = fp
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:fp - 0x00000C6B r0:!(r10 << r8)

l00000451:
	branch Z l00000455
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:fp - 0x00000C6B r0:!(r10 << r8)

l00000451_thunk_vQueueDelete:
	vQueueDelete()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:fp - 0x00000C6B r0:!(r10 << r8)

l00000451_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:fp - 0x00000C6B r0:!(r10 << r8)

l00000451_thunk_vQueueDelete:
	vQueueDelete()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:fp - 0x00000C6B r0:<invalid>

l00000441_1:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

uxQueueSpacesAvailable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r9:<invalid> fp:<invalid> ip:<invalid> r8:r8 + 32



void vQueueDelete()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vQueueDelete_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vQueueDelete_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000455:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xQueueGenericSendFromISR(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZV r3
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueueGenericSendFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xQueueGenericSendFromISR_entry:
// DataOut: r3
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l00000459:
	branch Z l0000045D
// DataOut: r3
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l00000459_1:
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l0000045D:
	branch NZV l00000461
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 + 245 lr:<invalid>

l0000045D_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 + 245 lr:<invalid>

l00000461:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 + 245 lr:<invalid>



void xQueueGiveFromISR(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZV r3
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueueGiveFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xQueueGiveFromISR_entry:
// DataOut: r3
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000004C5:
	branch Z l000004C9
// DataOut: r3
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000004C5_1:
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000004C9:
	branch NZV l000004CD
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 + 245 lr:<invalid>

l000004C9_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 + 245 lr:<invalid>

l000004CD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 + 245 lr:<invalid>



void xQueueReceiveFromISR(word32 pc, word32 r4, word32 r9, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV fp pc r4 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueueReceiveFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xQueueReceiveFromISR_entry:
// DataOut: fp pc r4 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000525:
	branch NZ l0000052D
// DataOut: fp pc r4 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000529_1:
// DataOut: fp pc r4 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000052D:
	branch ZC l00000531
// DataOut: fp pc r4 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000052D_1:
	Mem20[r4:word32] = fp
	r4 = r4 - 0x00000FF0
// DataOut: fp pc r4 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000531:
	branch NZV l00000535
// DataOut: fp pc r4 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0

l00000531_1:
// DataOut: fp pc r4 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0

l00000535:
	branch NZV l00000539
// DataOut: fp pc r4 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0

l00000535_1:
// DataOut: fp pc r4 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0

l00000539:
	branch ZC l0000053D
// DataOut: fp pc r4 r9
// DataOut (flags): C
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0

l00000539_1:
	Mem18[0x00000541:word32] = r4
// DataOut: fp r9
// DataOut (flags): C
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0

l0000053D:
	branch C l00000541
// DataOut: fp r9
// DataOut (flags): C
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0 pc:pc + 0x00000FF3

l0000053D_1:
	word32 r2_16 = r9 + __ror(fp, 8) + C
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0 pc:pc + 0x00000FF3

l00000541:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0 pc:pc + 0x00000FF3 r2:<invalid>



void xQueueIsQueueEmptyFromISR(word32 r0, word32 r4, word32 r5, word32 r9, word32 r10, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV fp r0 r10 r4 r5 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueueIsQueueEmptyFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xQueueIsQueueEmptyFromISR_entry:
// DataOut: fp r0 r10 r4 r5 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000595:
	branch ZC l00000599
// DataOut: fp r0 r10 r4 r5 r9
// DataOut (flags): CV
// SymbolicIn: sp:fp

l00000595_1:
	V = cond(__ror(fp, 0) - r10 - C) (alias)
// DataOut: r0 r4 r5 r9
// DataOut (flags): V
// SymbolicIn: sp:fp

l00000599:
	branch V l0000059D
// DataOut: r0 r4 r5 r9
// DataOut (flags): 
// SymbolicIn: sp:fp fp:<invalid>

l00000599_1:
	Mem15[r9:word64] = r5_r4
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:<invalid>

l0000059D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:<invalid> r9:r9 - r0



void xQueueIsQueueFullFromISR(word32 pc, word32 r0, word32 r4, word32 r5, word32 r7, word32 r9, word32 r10, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV fp pc r0 r10 r4 r5 r7 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueueIsQueueFullFromISR_entry:
// DataOut: fp pc r0 r10 r4 r5 r7 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l000005A1:
	branch NZV l000005A5
// DataOut: fp pc r0 r10 r4 r5 r7 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l000005A1_1:
	word32 ip_43 = fp - __ror(fp, 0)
// DataOut: fp pc r0 r10 r4 r5 r7 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l000005A5:
	branch ZC l000005A9
// DataOut: fp pc r0 r10 r4 r5 r7 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp ip:<invalid>

l000005A5_1:
	fp = (r10 << r0) - r10 - C
	byte NZCV_38 = cond(fp)
	ZC = NZCV_38 (alias)
	V = NZCV_38 (alias)
// DataOut: fp pc r0 r4 r5 r7 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp ip:<invalid>

l000005A9:
	branch V l000005AD
// DataOut: fp pc r0 r4 r5 r7 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp ip:<invalid> fp:<invalid>

l000005A9_1:
	Mem34[r9:word64] = r5_r4
// DataOut: fp pc r7
// DataOut (flags): ZC
// SymbolicIn: sp:fp ip:<invalid> fp:<invalid>

l000005AD:
	branch ZC l000005AD_thunk_uxQueueMessagesWaitingFromISR
// DataOut: fp pc r7
// DataOut (flags): ZC
// SymbolicIn: sp:fp ip:<invalid> fp:<invalid> r9:r9 - r0

l000005AD_thunk_uxQueueMessagesWaitingFromISR:
	uxQueueMessagesWaitingFromISR(r7, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ip:<invalid> fp:<invalid> r9:r9 - r0
// Terminates process

l000005AD_1:
// DataOut: fp r7
// DataOut (flags): Z
// SymbolicIn: sp:fp ip:<invalid> fp:<invalid> r9:r9 - r0

l000005AD_thunk_uxQueueMessagesWaitingFromISR:
	uxQueueMessagesWaitingFromISR(r7, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ip:<invalid> fp:<invalid> r9:r9 - r0 r0:<invalid>
// Terminates process

xQueueIsQueueFullFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void uxQueueMessagesWaitingFromISR(word32 r7, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z fp r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
uxQueueMessagesWaitingFromISR_entry:
// DataOut: fp r7
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000005B1:
	branch Z l000005B5
// DataOut: fp r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l000005B1_thunk_xQueueGetMutexHolder:
	xQueueGetMutexHolder()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l000005B1_1:
	word32 r7_6 = r7 - __ror(fp, 0)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000005B1_thunk_xQueueGetMutexHolder:
	xQueueGetMutexHolder()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:<invalid>
// Terminates process

uxQueueMessagesWaitingFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void xQueueGetMutexHolder()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueueGetMutexHolder_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xQueueGetMutexHolder_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000005B5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xQueueTakeMutexRecursive(word32 r0, word32 r1, word32 r2, word32 r4, word32 r5, word32 r6, word32 r8, word32 r9, word32 ip, byte bArg0CF0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC ip r0 r1 r2 r4 r5 r6 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueueTakeMutexRecursive_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xQueueTakeMutexRecursive_entry:
// DataOut: ip r0 r1 r2 r4 r5 r6 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000005D5:
	word32 sp_1 = fp
	branch Z l000005D9
// DataOut: ip r0 r1 r2 r4 r5 r6 r8 r9 sp
// DataOut (flags): ZC
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000005D5_1:
	Mem40[r8:byte] = (byte) r4
// DataOut: ip r0 r1 r2 r5 r6 r9 sp
// DataOut (flags): ZC
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000005D9:
	branch Z l000005DD
// DataOut: ip r0 r1 r2 r5 r6 r9 sp
// DataOut (flags): ZC
// SymbolicIn: sp:fp r8:r8 - 0x000005B5
// LocalsOut: fp(32)

l000005D9_1:
	r0 = r6 - (r6 >> 28)
// DataOut: ip r0 r1 r2 r5 r6 r9 sp
// DataOut (flags): ZC
// SymbolicIn: sp:fp r8:r8 - 0x000005B5
// LocalsOut: fp(32)

l000005DD:
	branch ZC l000005E1
// DataOut: ip r0 r1 r2 r5 r6 r9 sp
// DataOut (flags): ZC
// SymbolicIn: sp:fp r8:r8 - 0x000005B5 r0:r6 - (r6 >> 28)
// LocalsOut: fp(32)

l000005DD_1:
	sp_1 = fp + 3312
// DataOut: ip r0 r1 r2 r5 r6 r9 sp
// DataOut (flags): ZC
// SymbolicIn: sp:fp r8:r8 - 0x000005B5 r0:r6 - (r6 >> 28)

l000005E1:
	branch Z l000005E5
// DataOut: ip r0 r1 r2 r5 r6 r9 sp
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r8:r8 - 0x000005B5 r0:r6 - (r6 >> 28) r10:<invalid>

l000005E1_1:
	r0 = r0 - (r2 >> 20) - C
	Z = cond(r0) (alias)
// DataOut: ip r0 r1 r5 r6 r9 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r8:r8 - 0x000005B5 r0:r6 - (r6 >> 28) r10:<invalid>

l000005E5:
	branch Z l000005E9
// DataOut: ip r0 r1 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:r8 - 0x000005B5 r0:<invalid> r10:<invalid>

l000005E5_1:
	Mem18[r6 - 4:word32] = r0
	Mem21[r6 - 8:word32] = r1
	Mem23[r6 - 12:word32] = r5
	Mem25[r6 - 16:word32] = r9
	Mem27[r6 - 20:word32] = ip
	Mem28[r6 - 24:word32] = sp_1
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:r8 - 0x000005B5 r0:<invalid> r10:<invalid>

l000005E9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:r8 - 0x000005B5 r0:<invalid> r10:<invalid>



void xQueueGiveMutexRecursive(word32 lr, word32 r0, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC lr r0 r2 r4 r5 r6 r7 r8 r9
// LiveOut:
// Trashed: r0 r8
// Preserved: sp
xQueueGiveMutexRecursive_entry:
// DataOut: lr r0 r2 r4 r5 r6 r7 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00000605:
	branch Z l00000609
// DataOut: lr r0 r2 r4 r5 r6 r7 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00000605_1:
	Mem77[r8:byte] = (byte) r4
	r8 = r8 - 0x000005B5
	r9_r8 = SEQ(r9, r8 - 0x000005B5) (alias)
// DataOut: lr r0 r2 r4 r5 r6 r7 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00000609:
	branch ZC l0000060D
// DataOut: lr r0 r2 r4 r5 r6 r7 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r8:r8 - 0x000005B5

l00000609_1:
	r0 = Mem0[r0 + 70:byte]
// DataOut: lr r0 r2 r4 r5 r6 r7 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r8:r8 - 0x000005B5

l0000060D:
	branch Z l00000611
// DataOut: lr r0 r2 r4 r5 r6 r7 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r8:r8 - 0x000005B5 r0:<invalid>

l0000060D_1:
	Mem73[r2 + -93:word64] = r9_r8
// DataOut: lr r0 r4 r5 r6 r7 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r8:r8 - 0x000005B5 r0:<invalid>

l00000611:
	branch C l00000615
// DataOut: lr r0 r4 r5 r6 r7 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r8:r8 - 0x000005B5 r0:<invalid>

l00000611_1:
	Mem69[r0:word32] = r4
	Mem70[r0 - 4:word32] = r6
	Mem71[r0 - 8:word32] = r7
	r0 = r0 - 12
// DataOut: lr r0 r4 r5 r7 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r8:r8 - 0x000005B5 r0:<invalid>

l00000615:
	branch Z l00000619
// DataOut: lr r0 r4 r5 r7 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r8:r8 - 0x000005B5 r0:<invalid>

l00000615_1:
	r8 = r8 + -61
	Mem68[r8:word16] = (uint16) lr
// DataOut: r0 r4 r5 r7 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r8:r8 - 0x000005B5 r0:<invalid>

l00000619:
	branch Z l0000061D
// DataOut: r0 r4 r5 r7 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r8:<invalid> r0:<invalid>

l00000619_1:
	word32 sp_53
	byte ZC_57
	word32 r2_59
	word32 r6_61
	word32 lr_63
	word32 r9_65
	call fn0183930D (retsize: 0;)
		uses: C,lr,r0_11,r2,r4,r5,r6,r7,r8_13,r9,sp_1,Z,ZC
		defs: C_60,lr_63,r0_58,r2_59,r4_55,r5_64,r6_61,r7_62,r8_56,r9_65,sp_53,Z_54,ZC_57
// DataOut: r0 r4 r5 r7 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r8:<invalid> r0:<invalid>

l0000061D:
	branch C l00000621
// DataOut: r0 r4 r5 r7 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r8:<invalid> r0:<invalid>

l0000061D_1:
	Mem47[r0:word32] = r0
	Mem48[r0 - 4:word32] = r4
	Mem49[r0 - 8:word32] = r5
	Mem50[r0 - 12:word32] = r7
	Mem51[r0 - 16:word32] = r8
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp r8:<invalid> r0:<invalid>

l00000621:
	branch Z l00000621_then
	word32 sp_34
	byte Z_35
	word32 r4_36
	word32 r8_37
	byte ZC_38
	word32 r0_39
	word32 r2_40
	byte C_41
	word32 r6_42
	word32 r7_43
	word32 lr_44
	word32 r5_45
	word32 r9_46
	call fn0118891D (retsize: 0;)
		uses: C_26,lr_23,r0_28,r2_27,r4_31,r5_22,r6_25,r7_24,r8_30,r9_21,sp_33,Z_32,ZC_29
		defs: C_41,lr_44,r0_39,r2_40,r4_36,r5_45,r6_42,r7_43,r8_37,r9_46,sp_34,Z_35,ZC_38
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r0:<invalid>

l00000621_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r0:<invalid>

l00000625:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r0:<invalid>

xQueueGiveMutexRecursive_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r0:<invalid>



void xQueueGenericReset(word32 pc, word32 r0, word32 r5, word32 r8, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z ip pc r0 r5 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueueGenericReset_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xQueueGenericReset_entry:
// DataOut: ip pc r0 r5 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00000631:
	branch Z l00000635
// DataOut: ip pc r0 r5 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00000631_1:
	__mcr(0x04, 0x00000002, r0, 0x06, 0x05, 0x00000005)
// DataOut: ip pc r5 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00000635:
	branch Z l00000639
// DataOut: ip pc r5 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00000635_1:
	Mem18[r5:word32] = pc
// DataOut: ip pc r8
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00000639:
	branch Z l0000063D
// DataOut: ip pc r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r5:r5

l00000639_1:
// DataOut: ip r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r5:r5

l0000063D:
	branch Z l00000645
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r9:<invalid> pc:pc + 0x000000E0

l00000641_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r9:<invalid> pc:pc + 0x000000E0 r2:ip - 0x84000000

l00000645:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r9:<invalid> pc:pc + 0x000000E0 r2:<invalid>



void xQueueGenericCreate(word32 r0, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZ r0 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueueGenericCreate_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xQueueGenericCreate_entry:
// DataOut: r0 r6
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l000006AD:
	branch Z l000006B1
// DataOut: r0 r6
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l000006AD_1:
	Mem31[r6:word16] = (uint16) r0
// DataOut: r0
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l000006B1:
	branch NZ l000006B5
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFF9B

l000006B1_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFF9B

l000006B5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r7:<invalid> r8:<invalid>



void xQueueCreateMutex(word32 r0, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueueCreateMutex_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xQueueCreateMutex_entry:
// DataOut: r0 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000006DD:
	branch Z l000006E1
// DataOut: r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l000006DD_1:
	Mem6[r6:word16] = (uint16) r0
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000006E1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFDB



void prvInitialiseNewTask(word32 r0, word32 r1, word32 r2, word32 r5, word32 r6, word32 r8, word32 r9, word32 r10, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZC fp r0 r1 r10 r2 r5 r6 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvInitialiseNewTask_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

prvInitialiseNewTask_entry:
// DataOut: fp r0 r1 r10 r2 r5 r6 r8 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000701:
	branch Z l00000705
// DataOut: fp r0 r1 r10 r2 r5 r6 r8 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000705:
	branch C l00000709
// DataOut: fp r0 r1 r10 r2 r5 r6 r8 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000705_1:
	Mem75[r6 + -2460:byte] = (byte) r9
// DataOut: fp r0 r1 r10 r2 r5 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000709:
	branch ZC l0000070D
// DataOut: fp r0 r1 r10 r2 r5 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000709_1:
	r0 = __ror(fp, 4) - r1 - C
	byte NZCV_68 = cond(r0)
	C = NZCV_68 (alias)
	Z = NZCV_68 (alias)
	ZC = NZCV_68 (alias)
	NZ = NZCV_68 (alias)
	N = NZCV_68 (alias)
// DataOut: fp r0 r1 r10 r2 r5 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l0000070D:
	branch ZC l00000711
// DataOut: fp r0 r1 r10 r2 r5 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid>

l0000070D_1:
	byte NZCV_61 = cond(fp ^ 0xC0000010)
	C = NZCV_61 (alias)
	Z = NZCV_61 (alias)
	ZC = NZCV_61 (alias)
	NZ = NZCV_61 (alias)
	N = NZCV_61 (alias)
// DataOut: fp r0 r1 r10 r2 r5 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid>

l00000711:
	branch Z l00000715
// DataOut: fp r0 r1 r10 r2 r5 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid>

l00000711_1:
	r0 = Mem0[r10 + 2630:word32]
// DataOut: fp r0 r1 r10 r2 r5 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid>

l00000715:
	branch ZC l00000719
// DataOut: fp r0 r1 r10 r2 r5 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid>

l00000715_1:
	word32 r8_59 = r5 & __ror(fp, 7)
// DataOut: r0 r1 r10 r2 r5 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid>

l00000719:
	branch NZ l0000071D
// DataOut: r0 r1 r10 r2 r5 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid> r8:<invalid>

l00000719_1:
// DataOut: r0 r1 r10 r2 r5 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid> r8:<invalid>

l0000071D:
	branch C l00000721
// DataOut: r0 r1 r10 r2 r5 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid> r8:<invalid>

l0000071D_1:
// DataOut: r0 r1 r2 r5 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid> r8:<invalid>

l00000721:
	branch Z l00000725
// DataOut: r0 r1 r2 r5 r8
// DataOut (flags): NZC
// SymbolicIn: sp:<invalid> r0:<invalid> r8:<invalid> r10:r10 + -746

l00000721_1:
	r0 = r5 & 0x03C00000
// DataOut: r0 r1 r2 r8
// DataOut (flags): NZC
// SymbolicIn: sp:<invalid> r0:<invalid> r8:<invalid> r10:r10 + -746

l00000725:
	branch N l00000729
// DataOut: r0 r1 r2 r8
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r0:<invalid> r8:<invalid> r10:r10 + -746

l00000725_1:
	r0 = Mem0[r1:byte]
// DataOut: r0 r2 r8
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r0:<invalid> r8:<invalid> r10:r10 + -746

l00000729:
	branch Z l0000072D
// DataOut: r0 r2 r8
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r0:<invalid> r8:<invalid> r10:r10 + -746 r1:r1 + 0x00000431

l00000729_1:
	Z = cond((r0 << 4) - r0 - C) (alias)
// DataOut: r2 r8
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r0:<invalid> r8:<invalid> r10:r10 + -746 r1:r1 + 0x00000431

l0000072D:
	branch Z l00000731
// DataOut: r2 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r8:<invalid> r10:r10 + -746 r1:r1 + 0x00000431 r2:<invalid>

l0000072D_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r8:<invalid> r10:r10 + -746 r1:r1 + 0x00000431 r2:<invalid>

l00000731:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r8:<invalid> r10:r10 + -746 r1:r1 + 0x00000431 r2:<invalid> r5:<invalid>

l00000701_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void prvAddNewTaskToReadyList(word64 d1, word32 r0, word32 r1, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC d1 r0 r1 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvAddNewTaskToReadyList_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

prvAddNewTaskToReadyList_entry:
// DataOut: d1 r0 r1 r6
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00000799:
	branch C l0000079D
// DataOut: d1 r0 r1 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00000799_1:
	__stcl(0x00, 0x0F, Mem0[r1 + -932:void])
	Mem10[0x00:word32] = d1
	Mem11[4:word32] = r1
// DataOut: r0 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l0000079D:
	branch Z l000007A1
// DataOut: r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000079D_1:
	Mem5[r6:byte] = (byte) r0
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000007A1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void prvAddCurrentTaskToDelayedList.isra.0(word32 r0, word32 r1, word32 r6, word32 r8, word32 r9, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV ip r0 r1 r6 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvAddCurrentTaskToDelayedList.isra.0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

prvAddCurrentTaskToDelayedList.isra.0_entry:
// DataOut: ip r0 r1 r6 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000085D:
	branch Z l00000861
// DataOut: ip r0 r1 r6 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000085D_1:
	Mem48[ip + -1205:byte] = (byte) r1
// DataOut: r0 r6 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000861:
	branch ZC l00000865
// DataOut: r0 r6 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000861_1:
	byte NZCV_42 = cond((r6 >> 8) - r8 - C)
	C = NZCV_42 (alias)
	Z = NZCV_42 (alias)
	V = NZCV_42 (alias)
// DataOut: r0 r6 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000865:
	branch C l00000869
// DataOut: r0 r6 r8 r9
// DataOut (flags): ZV
// SymbolicIn: sp:<invalid>

l00000865_1:
	Mem39[r8:byte] = (byte) r6
// DataOut: r0 r9
// DataOut (flags): ZV
// SymbolicIn: sp:<invalid>

l00000869:
	branch V l0000086D
// DataOut: r0 r9
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r8:r8 - 0x00000060

l00000869_1:
// DataOut: r9
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r8:r8 - 0x00000060

l0000086D:
	branch Z l00000871
// DataOut: r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r4:<invalid> r5:<invalid> r9:<invalid> r10:<invalid> r0:r0 + 24

l0000086D_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r4:<invalid> r5:<invalid> r9:<invalid> r10:<invalid> r0:r0 + 24

l00000871:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r4:<invalid> r5:<invalid> r9:<invalid> r10:<invalid> r0:r0 + 24 r3:<invalid>



void xTaskCreate(word32 pc, word32 r0, word32 r1, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 ip, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV ip pc r0 r1 r10 r2 r4 r5 r6 r7 r8 r9
// LiveOut:
// Trashed: NZCV pc r0 r3 r4 r6 r7 r8 r9 sp
// Preserved:
// Stack args: Stack +0000(32)
xTaskCreate_entry:
// DataOut: ip pc r0 r1 r10 r2 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l000008B5:
	word32 sp_1 = fp
	branch ZC l000008B9
// DataOut: ip pc r0 r1 r10 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l000008B5_1:
	word32 pc_134 = r7 - __ror(r9, 1)
// DataOut: ip pc r0 r1 r10 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l000008B9:
	branch ZC l000008BD
// DataOut: ip pc r0 r1 r10 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:<invalid>
// LocalsOut: fp(32) Stack +0000(32)

l000008B9_1:
	r8 = r0 + (r6 >> 8) + C
	byte NZCV_126 = cond(r8)
	C = NZCV_126 (alias)
	ZC = NZCV_126 (alias)
	Z = NZCV_126 (alias)
	V = NZCV_126 (alias)
	NZV = NZCV_126 (alias)
	N = NZCV_126 (alias)
	NZ = NZCV_126 (alias)
// DataOut: ip pc r0 r1 r10 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:<invalid>
// LocalsOut: fp(32) Stack +0000(32)

l000008BD:
	branch ZC l000008C1
// DataOut: ip pc r0 r1 r10 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:<invalid> r8:<invalid>
// LocalsOut: fp(32) Stack +0000(32)

l000008BD_1:
	Mem122[r6 - 4:word32] = r9
	Mem123[r6 - 8:word32] = r10
	Mem124[r6 - 12:word32] = ip
// DataOut: ip pc r0 r1 r10 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:<invalid> r8:<invalid>
// LocalsOut: fp(32) Stack +0000(32)

l000008C1:
	branch Z l000008C5
// DataOut: ip pc r0 r1 r10 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:<invalid> r8:<invalid>
// LocalsOut: fp(32) Stack +0000(32)

l000008C1_1:
	r9 = r6 - (r6 >> 20)
// DataOut: ip pc r0 r1 r10 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:<invalid> r8:<invalid>
// LocalsOut: fp(32) Stack +0000(32)

l000008C5:
	word32 r3_25 = Mem0[0x000008CD:int16]
	branch V l000008CD
// DataOut: ip r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20)
// LocalsOut: fp(32) Stack +0000(32)

l000008C9_1:
	Mem115[r6:word32] = r0
	Mem116[r6 - 4:word32] = r4
	Mem117[r6 - 8:word32] = r5
	Mem118[r6 - 12:word32] = r7
	Mem119[r6 - 16:word32] = r8
	Mem120[r6 - 20:word32] = r10
// DataOut: ip r0 r1 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid>
// LocalsOut: fp(32) Stack +0000(32)

l000008CD:
	branch C l000008D1
// DataOut: ip r0 r1 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid>
// LocalsOut: fp(32) Stack +0000(32)

l000008D1:
	branch NZV l000008D5
// DataOut: ip r0 r1 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): NZC
// SymbolicIn: sp:fp pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid>
// LocalsOut: fp(32) Stack +0000(32)

l000008D1_1:
	Mem104[r6:word32] = r0
	Mem105[r6 - 4:word32] = r1
	Mem106[r6 - 8:word32] = r2
	Mem107[r6 - 12:word32] = r3_25
	Mem108[r6 - 16:word32] = r4
	Mem110[r6 - 20:word32] = r5
	Mem111[r6 - 24:word32] = r6
	Mem112[r6 - 28:word32] = r7
	Mem114[r6 - 32:word32] = r10
// DataOut: ip r0 r1 r2 r4 r6 r7 r9 sp
// DataOut (flags): NZC
// SymbolicIn: sp:fp pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid>
// LocalsOut: fp(32) Stack +0000(32)

l000008D5:
	branch Z l000008D9
// DataOut: ip r0 r1 r2 r4 r6 r7 r9 sp
// DataOut (flags): NZC
// SymbolicIn: sp:fp pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid>
// LocalsOut: fp(32) Stack +0000(32)

l000008D5_1:
	Mem103[r7 + -177:word32] = r0
	r7 = r7 + -177
// DataOut: ip r0 r1 r2 r4 r6 r7 r9 sp
// DataOut (flags): NZC
// SymbolicIn: sp:fp pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid>
// LocalsOut: fp(32) Stack +0000(32)

l000008D9:
	branch ZC l000008DD
// DataOut: ip r0 r1 r2 r4 r6 r7 r9 sp
// DataOut (flags): NZ
// SymbolicIn: sp:fp pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid> r7:r7 + -177
// LocalsOut: fp(32) Stack +0000(32)

l000008D9_1:
	r0 = dwArg00
	sp_1 = fp + 0x00000D65
// DataOut: ip r0 r1 r2 r4 r6 r7 r9 sp
// DataOut (flags): NZ
// SymbolicIn: sp:fp pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid> r7:r7 + -177

l000008DD:
	branch Z l000008E1
// DataOut: ip r0 r1 r2 r4 r6 r7 r9 sp
// DataOut (flags): NZ
// SymbolicIn: sp:<invalid> pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid> r7:r7 + -177 r0:<invalid>

l000008DD_1:
	r6 = Mem0[r0 + -88:int16]
// DataOut: ip r1 r2 r4 r6 r7 r9 sp
// DataOut (flags): NZ
// SymbolicIn: sp:<invalid> pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid> r7:r7 + -177 r0:<invalid>

l000008E1:
	branch N l000008E5
// DataOut: ip r1 r2 r4 r6 r7 r9 sp
// DataOut (flags): NZ
// SymbolicIn: sp:<invalid> pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid> r7:r7 + -177 r0:<invalid> r6:<invalid>

l000008E1_1:
// DataOut: ip r1 r2 r4 r6 r7 r9 sp
// DataOut (flags): NZ
// SymbolicIn: sp:<invalid> pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid> r7:r7 + -177 r0:<invalid> r6:<invalid>

l000008E5:
	branch NZ l000008E9
// DataOut: ip r1 r2 r4 r6 r7 r9 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid> r7:r7 + -177 r0:<invalid> r6:<invalid>

l000008E5_1:
	Mem86[r6 - 4:word32] = r1
	Mem87[r6 - 8:word32] = r2
	Mem88[r6 - 12:word32] = r6
	Mem89[r6 - 16:word32] = r9
	Mem91[r6 - 20:word32] = ip
	Mem92[r6 - 24:word32] = sp_1
// DataOut: r2 r4 r7
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid> r7:r7 + -177 r0:<invalid> r6:<invalid>

l000008E9:
	branch Z l000008ED
// DataOut: r2 r4 r7
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid> r7:r7 + -177 r0:<invalid> r6:<invalid>

l000008E9_1:
// DataOut: r2 r7
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid> r7:r7 + -177 r0:<invalid> r6:<invalid>

l000008ED:
	branch Z l000008F1
// DataOut: r2 r7
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid> r7:r7 + -177 r0:<invalid> r6:<invalid> r4:DPB(r4, 0x6046, 16)

l000008ED_1:
	Z = cond(r2 *u r7) (alias)
// DataOut: r7
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid> r7:r7 + -177 r0:<invalid> r6:<invalid> r4:DPB(r4, 0x6046, 16)

l000008F1:
	branch Z l000008F5
// DataOut: r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid> r7:r7 + -177 r0:<invalid> r6:<invalid> r4:DPB(r4, 0x6046, 16) Sequence r4:r0:r2 *u (r7 + -354)

l000008F5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid> r7:r7 + -177 r0:<invalid> r6:<invalid> r4:DPB(r4, 0x6046, 16) Sequence r4:r0:r2 *u (r7 + -354)

l000008F1_1:
	word32 r7_51 = r7 + 3989
	word32 sp_52
	byte ZC_53
	word32 pc_54
	word32 r7_55
	word32 r9_56
	word32 r8_57
	word32 r0_58
	word32 r6_59
	bool C_60
	byte NZCV_61
	word32 r10_62
	word32 ip_63
	byte Z_64
	word32 r3_65
	byte V_66
	word32 r4_67
	word32 r5_68
	byte NZV_69
	word32 r1_70
	word32 r2_71
	byte N_72
	byte NZ_73
	call Mem0[r7_51:byte] (retsize: 0;)
		uses: C_49,N_44,NZ_43,NZCV_48,NZV_45,pc_26,r0_39,r3_25,r4_41,r6_36,r7_51,r8_20,r9_23,sp_33,V_46,Z_47,ZC_50
		defs: C_60,ip_63,N_72,NZ_73,NZCV_61,NZV_69,pc_54,r0_58,r1_70,r10_62,r2_71,r3_65,r4_67,r5_68,r6_59,r7_55,r8_57,r9_56,sp_52,V_66,Z_64,ZC_53
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid> r7:r7 + -177 r0:<invalid> r6:<invalid> r4:DPB(r4, 0x6046, 16) Sequence r4:r0:r2 *u (r7 + -354)

xTaskCreate_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid> r7:r7 + 3635 r0:<invalid> r6:<invalid> r4:DPB(r4, 0x6046, 16) Sequence r4:r0:r2 *u (r7 + -354)

l000008CD_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:<invalid> r8:<invalid> r9:r6 - (r6 >> 20) r3:<invalid>



void xTaskCreateRestricted()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xTaskCreateRestricted_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xTaskCreateRestricted_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000091D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vTaskAllocateMPURegions(word32 r0, word32 r3, word32 r6, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0 r10 r3 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vTaskAllocateMPURegions_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vTaskAllocateMPURegions_entry:
// DataOut: r0 r10 r3 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00000971:
	branch Z l00000975
// DataOut: r0 r10 r3 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00000971_1:
	Mem11[r3:word32] = r0
// DataOut: r0 r10 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00000975:
	branch Z l00000979
// DataOut: r0 r10 r6
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 - 0x000000B1

l00000975_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 - 0x000000B1

l00000979:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 - 0x000000B1 r1:r6 - (r0 >>u r10)



void vTaskStartScheduler(word32 r0, word32 r1, word32 r3, word32 r8, word32 r9, word32 fp, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC fp ip r0 r1 r3 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vTaskStartScheduler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vTaskStartScheduler_entry:
// DataOut: fp ip r0 r1 r3 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00000991:
	branch Z l00000995
// DataOut: fp ip r0 r1 r3 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00000991_1:
	Mem23[r3:word64] = r1_r0
// DataOut: fp ip r3 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00000995:
	word32 r3_10 = r3
	branch ZC l00000999
// DataOut: fp ip r3 r8 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp r3:r3

l00000995_1:
// DataOut: fp r3 r8 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp r3:r3

l00000999:
	branch Z l0000099D
// DataOut: fp r3 r8 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp r3:r3 r1:ip - 0x5000000B

l00000999_1:
	r3_10 = r3 + 0x000000B0
// DataOut: fp r3 r8 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp r3:r3 r1:ip - 0x5000000B

l0000099D:
	branch Z l000009A1
// DataOut: fp r3 r8 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp r3:<invalid> r1:ip - 0x5000000B r0:<invalid>

l0000099D_1:
	Mem16[r3_10:word64] = r9_r8
// DataOut: fp r3
// DataOut (flags): Z
// SymbolicIn: sp:fp r3:<invalid> r1:ip - 0x5000000B r0:<invalid>

l000009A1:
	branch Z l000009A5
// DataOut: fp r3
// DataOut (flags): Z
// SymbolicIn: sp:fp r3:<invalid> r1:ip - 0x5000000B r0:<invalid>

l000009A1_1:
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp r3:<invalid> r1:ip - 0x5000000B r0:<invalid>

l000009A5:
	branch Z l000009A9
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r1:ip - 0x5000000B r0:<invalid> r2:<invalid>

l000009A5_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r1:ip - 0x5000000B r0:<invalid> r2:<invalid>

l000009A9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r1:ip - 0x5000000B r0:<invalid> r2:<invalid>



void vTaskEndScheduler(word32 pc, word32 r0, word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV pc r0 r3 r4 r5
// LiveOut:
// Trashed: fp pc r0
// Preserved: sp
vTaskEndScheduler_entry:
// DataOut: pc r0 r3 r4 r5
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000009ED:
	branch ZC l000009F1
// DataOut: pc r0 r3 r4 r5
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000009ED_1:
// DataOut: pc r0 r3 r4 r5
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000009F1:
	branch NZV l000009F5
// DataOut: pc r0 r3 r4 r5
// DataOut (flags): NZCV
// SymbolicIn: sp:fp fp:0x00003FF0

l000009F1_1:
// DataOut: pc r0 r3 r4 r5
// DataOut (flags): NZCV
// SymbolicIn: sp:fp fp:0x00003FF0

l000009F5:
	branch NZV l000009F9
// DataOut: pc r0 r3 r4 r5
// DataOut (flags): NZCV
// SymbolicIn: sp:fp fp:0x00003FF0

l000009F5_1:
// DataOut: pc r0 r3 r4 r5
// DataOut (flags): NZCV
// SymbolicIn: sp:fp fp:0x00003FF0

l000009F9:
	branch Z l000009FD
// DataOut: pc r0 r3 r4 r5
// DataOut (flags): NZCV
// SymbolicIn: sp:fp fp:0x00003FF0

l000009F9_1:
	Mem30[0x00000A01:word64] = r5_r4
// DataOut: pc r0
// DataOut (flags): NZCV
// SymbolicIn: sp:fp fp:0x00003FF0

l000009FD:
	branch NZ l000009FD_then
	word32 sp_8
	byte ZC_9
	word32 fp_10
	byte NZV_11
	byte Z_12
	word32 pc_13
	word32 r3_14
	byte NZ_15
	byte NV_16
	word32 r0_17
	byte NZV_18
	word32 r4_19
	word32 r5_20
	call fn012C128D (retsize: 0;)
		uses: fp_4,NZ,NZV,sp_1,Z,ZC
		defs: fp_10,NV_16,NZ_15,NZV_11,NZV_18,pc_13,r0_17,r3_14,r4_19,r5_20,sp_8,Z_12,ZC_9
	return
// DataOut: pc r0
// DataOut (flags): NZCV
// SymbolicIn: sp:fp fp:0x00003FF0 pc:pc + r3

l000009FD_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:0x00003FF0 pc:pc + r3

l00000A01:
	branch NV_16 l00000A05
// DataOut: pc r0
// DataOut (flags): ZCV
// SymbolicIn: sp:fp fp:0x00003FF0 pc:pc + r3

l00000A01_1:
// DataOut: pc
// DataOut (flags): ZCV
// SymbolicIn: sp:fp fp:0x00003FF0 pc:pc + r3

l00000A05:
	branch NZV_18 l00000A09
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp fp:0x00003FF0 pc:pc + r3 r0:<invalid>

l00000A05_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:0x00003FF0 pc:pc + r3 r0:<invalid>

l00000A09:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:0x00003FF0 pc:<invalid> r0:<invalid>

vTaskEndScheduler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:0x00003FF0 pc:<invalid> r0:<invalid>



void vTaskSuspendAll(word32 pc, word32 r0, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV pc r0 r3
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vTaskSuspendAll_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vTaskSuspendAll_entry:
// DataOut: pc r0 r3
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000A0D:
	branch ZC l00000A11
// DataOut: pc r0 r3
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000A11:
	branch NZV l00000A15
// DataOut: pc r0 r3
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000A11_1:
	byte NZCV_25 = cond(r3 ^ 0x0000000C)
	NZV = NZCV_25 (alias)
	V = NZCV_25 (alias)
// DataOut: pc r0
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000A15:
	branch V l00000A19
// DataOut: pc r0
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r0:r3 ^ 0x0000000C

l00000A15_1:
// DataOut: pc
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r0:r3 ^ 0x0000000C

l00000A19:
	branch NZV l00000A1D
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r8:<invalid>

l00000A19_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r8:<invalid>

l00000A1D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r8:<invalid> pc:pc + 0x00000047

l00000A0D_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xTaskGetTickCount(word32 r7, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV fp r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xTaskGetTickCount_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xTaskGetTickCount_entry:
// DataOut: fp r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000A21:
	branch ZC l00000A25
// DataOut: fp r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000A21_1:
	NZV = cond((fp >> 6) - r8 - C) (alias)
// DataOut: r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000A25:
	branch NZV l00000A29
// DataOut: r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid>

l00000A25_1:
	Mem13[r7:byte] = (byte) r7
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid>

l00000A29:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:r7



void xTaskGetTickCountFromISR(word32 r7, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV fp r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xTaskGetTickCountFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xTaskGetTickCountFromISR_entry:
// DataOut: fp r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000A2D:
	branch ZC l00000A31
// DataOut: fp r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000A2D_1:
	NZV = cond((fp >> 6) - r8 - C) (alias)
// DataOut: r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000A31:
	branch NZV l00000A35
// DataOut: r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid>

l00000A31_1:
	Mem13[r7:byte] = (byte) r7
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid>

l00000A35:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:r7



void uxTaskGetNumberOfTasks(word32 pc, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV fp pc r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
uxTaskGetNumberOfTasks_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

uxTaskGetNumberOfTasks_entry:
// DataOut: fp pc r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000A39:
	branch V l00000A3D
// DataOut: fp pc r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000A39_1:
// DataOut: pc
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000A3D:
	branch NZV l00000A41
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r8 - (fp >> 16)

l00000A3D_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r8 - (fp >> 16)

l00000A41:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r8 - (fp >> 16) r0:<invalid> pc:pc + 0x00000047



void pcTaskGetName(word32 pc, word32 r0, word32 r1, word32 r2, word32 r6, word32 r8, word32 r9, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV fp pc r0 r1 r2 r6 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
pcTaskGetName_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

pcTaskGetName_entry:
// DataOut: fp pc r0 r1 r2 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000A45:
	branch V l00000A49
// DataOut: fp pc r0 r1 r2 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000A45_1:
	r0 = r0 + r1
// DataOut: fp pc r0 r1 r2 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000A49:
	branch N l00000A4D
// DataOut: fp pc r0 r1 r2 r6 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r5:<invalid> r0:r0 + r1

l00000A49_1:
	Mem27[fp:word32] = r0
	Mem30[fp - 4:word32] = r1
	Mem32[fp - 8:word32] = r2
	Mem34[fp - 12:word32] = r6
	Mem36[fp - 16:word32] = r9
// DataOut: pc r0 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r5:<invalid> r0:r0 + r1

l00000A4D:
	branch V l00000A51
// DataOut: pc r0 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r5:<invalid> r0:r0 + r1

l00000A4D_1:
	NZV = cond(r0 ^ __ror(r8, 8)) (alias)
// DataOut: pc
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r5:<invalid> r0:r0 + r1

l00000A51:
	branch NZV l00000A55
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp r5:<invalid> r0:r0 + r1

l00000A51_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:<invalid> r0:r0 + r1

l00000A55:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:<invalid> r0:<invalid> pc:pc + 0x00000047



void xTaskGenericNotify()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xTaskGenericNotify_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xTaskGenericNotify_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000A59:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xTaskGenericNotifyFromISR(word32 lr, word32 r0, word32 r3, word32 r4, word32 r6, word32 r7, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV fp lr r0 r3 r4 r6 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xTaskGenericNotifyFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xTaskGenericNotifyFromISR_entry:
// DataOut: fp lr r0 r3 r4 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000B0D:
	sp = fp
	branch Test(GT,NZ) l00000B15
// DataOut: fp lr r0 r3 r4 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000B11_1:
// DataOut: fp lr r0 r3 r4 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000B15:
	branch Test(ULE,ZC) l00000B19
// DataOut: fp lr r0 r3 r4 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000B15_1:
	Mem0[r4:word32] = fp
	r4 = r4 - 0x00000FF0
// DataOut: lr r0 r3 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000B19:
	branch Test(GE,NZV) l00000B1D
// DataOut: lr r0 r3 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0

l00000B19_1:
// DataOut: lr r0 r3 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0

l00000B1D:
	branch Test(GE,NZV) l00000B21
// DataOut: lr r0 r3 r6 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0

l00000B1D_1:
// DataOut: lr r0 r3 r6 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0

l00000B21:
	branch Test(NE,Z) l00000B25
// DataOut: lr r0 r3 r6 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0

l00000B21_1:
	call fnFE3D4AF5 (retsize: 0;)
// DataOut: lr r0 r3 r6 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0

l00000B25:
	branch Test(EQ,Z) l00000B29
// DataOut: lr r0 r3 r6 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0

l00000B25_1:
	lr = lr
	__stcl(0x04, 0x00, Mem0[lr:void])
	Mem0[0x00000008:word32] = lr
	0x04 = 0x0000000C
// DataOut: r0 r3 r6 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0

l00000B29:
	branch Test(UGT,ZC) l00000B2D
// DataOut: r0 r3 r6 r7 r8
// DataOut (flags): ZV
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0 lr:lr

l00000B29_1:
	r0 = r3 ^ __ror(r0, 4)
// DataOut: r0 r6 r7 r8
// DataOut (flags): ZV
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0 lr:lr

l00000B2D:
	branch Test(NE,Z) l00000B31
// DataOut: r0 r6 r7 r8
// DataOut (flags): V
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0 lr:lr r0:<invalid>

l00000B2D_1:
	Mem0[r0 + -72:word64] = r7_r6
// DataOut: r8
// DataOut (flags): V
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0 lr:lr r0:<invalid>

l00000B31:
	branch Test(NO,V) l00000B35
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0 lr:lr r0:<invalid>

l00000B31_1:
	r8 = Mem0[r8:byte]
	r8 = r8 + 0x0000003A
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0 lr:lr r0:<invalid>

l00000B35:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 - 0x00000FF0 lr:lr r0:<invalid> r8:<invalid>



void xTaskNotifyWait(word32 r0, word32 r1, word32 r2, word32 r3, word32 r5, word32 r6, word32 r8, word32 r9, word32 r10, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV ip r0 r1 r10 r2 r3 r5 r6 r8 r9
// LiveOut:
// Trashed: r0 r1 r10 r2 r6 r8 r9
// Preserved: sp
xTaskNotifyWait_entry:
// DataOut: ip r0 r1 r10 r2 r3 r5 r6 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000BD5:
	branch Z l00000BD9
// DataOut: ip r0 r1 r10 r2 r3 r5 r6 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000BD5_1:
// DataOut: ip r0 r1 r10 r2 r3 r5 r6 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000BD9:
	branch ZC l00000BDD
// DataOut: ip r0 r1 r10 r2 r3 r5 r6 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000BD9_1:
// DataOut: r0 r1 r10 r2 r3 r5 r6 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000BDD:
	branch Z l00000BE1
// DataOut: r0 r1 r10 r2 r3 r5 r6 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:r6 - (ip >> 10)
// LocalsOut: fp(32)

l00000BDD_1:
// DataOut: r0 r1 r10 r2 r3 r5 r6 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:r6 - (ip >> 10)
// LocalsOut: fp(32)

l00000BE1:
	branch NZV l00000BE5
// DataOut: r0 r1 r10 r2 r3 r5 r6 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r1:r6 - (ip >> 10)
// LocalsOut: fp(32)

l00000BE1_1:
// DataOut: r0 r1 r10 r2 r3 r5 r6 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r1:r6 - (ip >> 10)
// LocalsOut: fp(32)

l00000BE5:
	branch ZC l00000BE9
// DataOut: r0 r1 r10 r2 r3 r5 r6 r8 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid> r2:<invalid> r6:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r0:r0 + 28
// LocalsOut: fp(32)

l00000BE5_1:
// DataOut: r0 r1 r10 r2 r3 r5 r6 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid> r2:<invalid> r6:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r0:r0 + 28
// LocalsOut: fp(32)

l00000BE9:
	branch Z l00000BED
// DataOut: r0 r1 r10 r2 r3 r5 r6 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid> r2:<invalid> r6:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r0:r0 + 28
// LocalsOut: fp(32)

l00000BE9_1:
// DataOut: r0 r1 r10 r2 r3 r5 r6 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid> r2:<invalid> r6:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r0:r0 + 28
// LocalsOut: fp(32)

l00000BED:
	branch Z l00000BF1
// DataOut: r0 r1 r10 r2 r3 r5 r6 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid> r2:<invalid> r6:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r0:r0 + 28
// LocalsOut: fp(32)

l00000BED_1:
// DataOut: r1 r10 r2 r3 r5 r6 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid> r2:<invalid> r6:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r0:r0 + 28
// LocalsOut: fp(32)

l00000BF1:
	branch Z l00000BF1_then
	word32 sp_22
	byte Z_23
	byte ZC_24
	word32 r1_25
	word32 r6_26
	word32 ip_27
	byte NZV_28
	word32 r0_29
	word32 r2_30
	word32 r8_31
	word32 r9_32
	word32 r10_33
	word32 r3_34
	word32 r5_35
	call fn01A19079 (retsize: 0;)
		uses: NZV,r0_16,r1_18,r10_19,r2_15,r6_21,r8_14,r9_13,sp_1,Z,ZC
		defs: ip_27,NZV_28,r0_29,r1_25,r10_33,r2_30,r3_34,r5_35,r6_26,r8_31,r9_32,sp_22,Z_23,ZC_24
	return
// DataOut: r1 r10 r2 r3 r5 r6 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid> r2:<invalid> r6:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r0:<invalid>
// LocalsOut: fp(32)

l00000BF1_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r2:<invalid> r6:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r0:<invalid>

l00000BF5:
	branch Z_23 l00000BF9
// DataOut: r1 r10 r2 r3 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r2:<invalid> r6:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r0:<invalid>
// LocalsOut: fp(32)

l00000BF5_1:
	Mem37[r10_33:word32] = r1_25
	Mem38[r10_33 + 4:word32] = r2_30
	Mem39[r10_33 + 8:word32] = r3_34
	Mem40[r10_33 + 12:word32] = r5_35
	Mem41[r10_33 + 16:word32] = r6_26
	Mem42[r10_33 + 20:word32] = r9_32
	Mem43[r10_33 + 24:word32] = fp
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r2:<invalid> r6:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r0:<invalid>

l00000BF9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r2:<invalid> r6:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r0:<invalid>

xTaskNotifyWait_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r2:<invalid> r6:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r0:<invalid>



void vTaskNotifyGiveFromISR(word32 lr, word32 pc, word32 r3, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV lr pc r3 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vTaskNotifyGiveFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vTaskNotifyGiveFromISR_entry:
// DataOut: lr pc r3 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000C61:
	sp = fp
	branch Test(GT,NZ) l00000C69
// DataOut: lr pc r3 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000C65_1:
// DataOut: lr pc r3 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000C69:
	branch Test(ULE,ZC) l00000C6D
// DataOut: lr pc r3 r8
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l00000C69_1:
	fp = 0x00003FF0
// DataOut: lr pc r3 r8
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l00000C6D:
	branch Test(GE,NZV) l00000C71
// DataOut: lr pc r3 r8
// DataOut (flags): NZV
// SymbolicIn: sp:fp fp:0x00003FF0

l00000C6D_1:
// DataOut: lr pc r3 r8
// DataOut (flags): NZV
// SymbolicIn: sp:fp fp:0x00003FF0

l00000C71:
	branch Test(GE,NZV) l00000C75
// DataOut: lr pc r3 r8
// DataOut (flags): ZV
// SymbolicIn: sp:fp fp:0x00003FF0

l00000C71_1:
// DataOut: lr pc r3 r8
// DataOut (flags): ZV
// SymbolicIn: sp:fp fp:0x00003FF0

l00000C75:
	branch Test(NE,Z) l00000C79
// DataOut: lr pc r3 r8
// DataOut (flags): ZV
// SymbolicIn: sp:fp fp:0x00003FF0

l00000C75_1:
	r4 = pc + 0x000003CC
// DataOut: lr r3 r8
// DataOut (flags): ZV
// SymbolicIn: sp:fp fp:0x00003FF0

l00000C79:
	branch Test(NO,V) l00000C7D
// DataOut: lr r3 r8
// DataOut (flags): ZV
// SymbolicIn: sp:fp fp:0x00003FF0 r4:pc + 0x000003CC

l00000C79_1:
	r9 = Mem0[r8:byte]
	r8 = r8 + 0x00000023
// DataOut: lr r3 r8
// DataOut (flags): ZV
// SymbolicIn: sp:fp fp:0x00003FF0 r4:pc + 0x000003CC

l00000C7D:
	branch Test(NO,V) l00000C81
// DataOut: lr r3 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:0x00003FF0 r4:pc + 0x000003CC r9:<invalid> r8:r8 + 0x00000023

l00000C7D_1:
	r8 = Mem0[r8:byte]
	r8 = r8 + 0x00000050
// DataOut: lr r3
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:0x00003FF0 r4:pc + 0x000003CC r9:<invalid> r8:r8 + 0x00000023

l00000C81:
	lr = lr + -192
	__stcl(0x03, 0x00, Mem0[lr:void])
	Mem0[0x00000007:word32] = lr
	0x03 = 0x0000000B
	branch Test(NE,Z) l00000C89
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp fp:0x00003FF0 r4:pc + 0x000003CC r9:<invalid> r8:<invalid>

l00000C85_1:
	r3 = r3
	r0 = Mem0[r3:word16]
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:0x00003FF0 r4:pc + 0x000003CC r9:<invalid> r8:<invalid> lr:lr + -192

l00000C89:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:0x00003FF0 r4:pc + 0x000003CC r9:<invalid> r8:<invalid> lr:lr + -192 r3:r3 r0:<invalid>



void ulTaskNotifyTake()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
ulTaskNotifyTake_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

ulTaskNotifyTake_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000D01:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xTaskIncrementTick(word32 r0, word32 r7, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV r0 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xTaskIncrementTick_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xTaskIncrementTick_entry:
// DataOut: r0 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000D6D:
	branch C l00000D71
// DataOut: r0 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000D71:
	branch ZC l00000D75
// DataOut: r0 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000D75:
	branch N l00000D79
// DataOut: r0 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000D75_1:
	__mcr(0x00, 0x00000001, r0, 0x0B, 0x00, 0x00000001)
// DataOut: r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000D79:
	branch ZC l00000D7D
// DataOut: r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000D79_1:
// DataOut: r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00000D7D:
	branch NZV l00000D81
// DataOut: r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:r8 + 0x00000041

l00000D7D_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:r8 + 0x00000041

l00000D81:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:r8 + 0x00000041 r0:<invalid> r7:r7 - 0x00000170

l00000D71_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000D6D_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xTaskResumeAll(word32 fpscr, word32 lr, word32 pc, word32 r0, word32 r1, word32 r6, word32 fp, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV fp fpscr ip lr pc r0 r1 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xTaskResumeAll_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xTaskResumeAll_entry:
// DataOut: fp fpscr ip lr pc r0 r1 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000E6D:
	sp = fp
	branch Test(UGE,C) l00000E71
// DataOut: fp fpscr ip lr pc r0 r1 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000E6D_1:
	pc = DPB(pc, 0x10E9, 16)
// DataOut: fp fpscr ip lr r0 r1 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000E71:
	branch Test(ULE,ZC) l00000E75
// DataOut: fp fpscr ip lr r0 r1 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16)

l00000E71_1:
	r0 = !(ip >> 14)
	NZCV = cond(r0)
	C = NZCV (alias)
	ZC = NZCV (alias)
	NZV = NZCV (alias)
	NZV = NZCV (alias)
	Z = NZCV (alias)
	NZ = NZCV (alias)
// DataOut: fp fpscr lr r0 r1 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16)

l00000E75:
	branch Test(ULE,ZC) l00000E79
// DataOut: fp fpscr lr r0 r1 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:!(ip >> 14)

l00000E79:
	branch Test(LE,NZV) l00000E7D
// DataOut: fp fpscr lr r0 r1 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:!(ip >> 14)

l00000E79_1:
	r0 = Mem0[fp:word32]
	fp = fp - 0x00000130
// DataOut: fpscr lr r0 r1 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:!(ip >> 14)

l00000E7D:
	branch Test(GT,NZV) l00000E81
// DataOut: fpscr lr r0 r1 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:<invalid> fp:fp - 0x00000130

l00000E7D_1:
	r8 = Mem0[r0:word32]
	r0 = r0 - 0x00000CF8
// DataOut: fpscr lr r0 r1 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:<invalid> fp:fp - 0x00000130

l00000E81:
	branch Test(NE,Z) l00000E85
// DataOut: fpscr lr r0 r1 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:<invalid> fp:fp - 0x00000130 r8:<invalid>

l00000E81_1:
	r8 = Mem0[r0:int16]
	r0 = r0 + 0xFFFFFF38
// DataOut: fpscr lr r0 r1 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:<invalid> fp:fp - 0x00000130 r8:<invalid>

l00000E85:
	branch Test(ULT,C) l00000E89
// DataOut: fpscr lr r0 r1 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:<invalid> fp:fp - 0x00000130 r8:<invalid>

l00000E85_1:
	r4 = r1 & ~0x000002D0
// DataOut: fpscr lr r0 r1 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:<invalid> fp:fp - 0x00000130 r8:<invalid>

l00000E89:
	branch Test(GT,NZ) l00000E8D
// DataOut: fpscr lr r0 r1 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:<invalid> fp:fp - 0x00000130 r8:<invalid> r4:r1 & ~0x000002D0

l00000E89_1:
	call fn00AC1031 (retsize: 0;)
// DataOut: fpscr lr r0 r1 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:<invalid> fp:fp - 0x00000130 r8:<invalid> r4:r1 & ~0x000002D0

l00000E8D:
	branch Test(NE,Z) l00000E91
// DataOut: fpscr lr r0 r1 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:<invalid> fp:fp - 0x00000130 r8:<invalid> r4:r1 & ~0x000002D0

l00000E8D_1:
	Mem0[r6:word32] = r0
	r6 = r6 - 0x000001D0
// DataOut: fpscr lr r0 r1
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:<invalid> fp:fp - 0x00000130 r8:<invalid> r4:r1 & ~0x000002D0

l00000E91:
	branch Test(EQ,Z) l00000E95
// DataOut: fpscr lr r0 r1
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:<invalid> fp:fp - 0x00000130 r8:<invalid> r4:r1 & ~0x000002D0 r6:r6 - 0x000001D0

l00000E91_1:
	__mcr(0x08, 0x00000000, r0, 0x07, 0x01, 0x00000007)
// DataOut: fpscr lr r1
// DataOut (flags): NZCV
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:<invalid> fp:fp - 0x00000130 r8:<invalid> r4:r1 & ~0x000002D0 r6:r6 - 0x000001D0

l00000E95:
	branch Test(GT,NZV) l00000E99
// DataOut: fpscr lr r1
// DataOut (flags): NZC
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:<invalid> fp:fp - 0x00000130 r8:<invalid> r4:r1 & ~0x000002D0 r6:r6 - 0x000001D0

l00000E95_1:
	lr = lr + -896
	__stcl(0x03, 0x06, Mem0[lr:void])
	Mem0[0x03:word32] = fpscr
	Mem0[0x00000007:word32] = lr
	0x03 = 0x0000000B
// DataOut: r1
// DataOut (flags): NZC
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:<invalid> fp:fp - 0x00000130 r8:<invalid> r4:r1 & ~0x000002D0 r6:r6 - 0x000001D0

l00000E99:
	branch Test(ULT,C) l00000E9D
// DataOut: r1
// DataOut (flags): NZC
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:<invalid> fp:fp - 0x00000130 r8:<invalid> r4:r1 & ~0x000002D0 r6:r6 - 0x000001D0 lr:lr + -896

l00000E99_1:
	r0 = Mem0[r1:byte]
	r1 = r1 + 0x00000568
// DataOut: r1
// DataOut (flags): NZC
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:<invalid> fp:fp - 0x00000130 r8:<invalid> r4:r1 & ~0x000002D0 r6:r6 - 0x000001D0 lr:lr + -896

l00000E9D:
	branch Test(UGE,C) l00000EA1
// DataOut: r1
// DataOut (flags): NZ
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:<invalid> fp:fp - 0x00000130 r8:<invalid> r4:r1 & ~0x000002D0 r6:r6 - 0x000001D0 lr:lr + -896 r1:r1 + 0x00000568

l00000E9D_1:
	r3 = Mem0[r1:word32]
	r8 = Mem0[r1 + 4:word32]
	r10 = Mem0[r1 + 8:word32]
	r1 = r1 + 12
// DataOut:
// DataOut (flags): NZ
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:<invalid> fp:fp - 0x00000130 r8:<invalid> r4:r1 & ~0x000002D0 r6:r6 - 0x000001D0 lr:lr + -896 r1:r1 + 0x00000568

l00000EA1:
	branch Test(GT,NZ) l00000EA5
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:<invalid> fp:fp - 0x00000130 r8:<invalid> r4:r1 & ~0x000002D0 r6:r6 - 0x000001D0 lr:lr + -896 r1:<invalid> r3:<invalid> r10:<invalid>

l00000EA5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:<invalid> fp:fp - 0x00000130 r8:<invalid> r4:r1 & ~0x000002D0 r6:r6 - 0x000001D0 lr:lr + -896 r1:<invalid> r3:<invalid> r10:<invalid>

l00000EA1_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:<invalid> fp:fp - 0x00000130 r8:<invalid> r4:r1 & ~0x000002D0 r6:r6 - 0x000001D0 lr:lr + -896 r1:<invalid> r3:<invalid> r10:<invalid>

l00000E75_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:DPB(pc, 0x10E9, 16) r0:!(ip >> 14)



void vTaskDelay(word32 lr, word32 pc, word32 r0, word32 r1, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV fp lr pc r0 r1 r10 r2 r4 r5 r6 r7 r8 r9
// LiveOut:
// Trashed: r4 r5 r6 r7
// Preserved: sp
vTaskDelay_entry:
// DataOut: fp lr pc r0 r1 r10 r2 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000F49:
	branch NZ l00000F4D
// DataOut: fp lr pc r0 r1 r10 r2 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000F49_1:
// DataOut: fp lr pc r0 r1 r10 r2 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000F4D:
	branch Z l00000F51
// DataOut: fp lr pc r0 r1 r10 r2 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000F51:
	branch NZV l00000F55
// DataOut: fp lr pc r0 r1 r10 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000F51_1:
// DataOut: fp lr pc r0 r1 r10 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000F55:
	branch NZV l00000F59
// DataOut: fp lr pc r0 r1 r10 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000F55_1:
// DataOut: fp lr pc r0 r1 r10 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000F59:
	branch Z l00000F5D
// DataOut: fp lr pc r0 r1 r10 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000F59_1:
	Mem21[pc:word32] = r0
	Mem24[pc + 4:word32] = r1
	Mem26[pc + 8:word32] = r4
	Mem28[pc + 12:word32] = r5
	Mem30[pc + 16:word32] = r6
	Mem32[pc + 20:word32] = r7
	Mem33[pc + 24:word32] = r8
	Mem35[pc + 28:word32] = r9
	Mem36[pc + 32:word32] = r10
	Mem38[pc + 36:word32] = fp
	Mem39[pc + 40:word32] = fp
	Mem41[pc + 44:word32] = lr
// DataOut: r0 r10
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000F5D:
	branch NZV l00000F61
// DataOut: r0 r10
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00000F5D_1:
// DataOut: r0
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00000F61:
	branch Z l00000F65
// DataOut: r0
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:r10 - 0x02F40000

l00000F61_1:
// DataOut:
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:r10 - 0x02F40000

l00000F65:
	branch ZC l00000F69
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r10 - 0x02F40000 r8:<invalid>

l00000F69:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r10 - 0x02F40000 r8:<invalid>

l00000F65_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r10 - 0x02F40000 r8:<invalid>

l00000F4D_1:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

vTaskDelay_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid>



void vTaskDelayUntil(word32 pc, word32 r0, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 s4, word32 s8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV pc r0 r3 r4 r5 r6 r7 r8 s4 s8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vTaskDelayUntil_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vTaskDelayUntil_entry:
// DataOut: pc r0 r3 r4 r5 r6 r7 r8 s4 s8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000F81:
	branch NZV l00000F85
// DataOut: pc r0 r3 r4 r5 r6 r7 r8 s4 s8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000F81_1:
	byte NZCV_52 = cond(r5 + 0x0000004A + C)
	NZV = NZCV_52 (alias)
	Z = NZCV_52 (alias)
	NZV = NZCV_52 (alias)
// DataOut: pc r0 r3 r4 r5 r6 r7 r8 s4 s8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000F85:
	branch Z l00000F89
// DataOut: pc r0 r3 r4 r5 r6 r7 r8 s4 s8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r1:<invalid>

l00000F85_1:
// DataOut: pc r0 r3 r4 r5 r6 r7 s4 s8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r1:<invalid>

l00000F89:
	branch NZV l00000F8D
// DataOut: pc r0 r3 r4 r5 r6 r7 s4 s8
// DataOut (flags): NZV
// SymbolicIn: sp:fp r1:<invalid> r8:DPB(r8, 0x0CF8, 16)

l00000F89_1:
	byte NZCV_45 = cond(r4 ^ 0x0000001A)
	r0 = r4 ^ 0x0000001A
	NZV = NZCV_45 (alias)
	Z = NZCV_45 (alias)
// DataOut: pc r0 r3 r4 r5 r6 r7 s4 s8
// DataOut (flags): NZV
// SymbolicIn: sp:fp r1:<invalid> r8:DPB(r8, 0x0CF8, 16)

l00000F8D:
	branch NZV l00000F91
// DataOut: pc r0 r3 r4 r5 r6 r7 s4 s8
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid> r8:DPB(r8, 0x0CF8, 16) r0:r4 ^ 0x0000001A

l00000F8D_1:
// DataOut: pc r0 r3 r4 r5 r6 r7 s4 s8
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid> r8:DPB(r8, 0x0CF8, 16) r0:r4 ^ 0x0000001A

l00000F91:
	branch Z l00000F95
// DataOut: pc r0 r3 r4 r5 r6 r7 s4 s8
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid> r8:<invalid> r0:r4 ^ 0x0000001A

l00000F91_1:
	Mem31[r0 - 4:word32] = r3
	Mem33[r0 - 8:word32] = r4
	Mem35[r0 - 12:word32] = r5
	Mem37[r0 - 16:word32] = r6
	Mem39[r0 - 20:word32] = r7
	Mem41[r0 - 24:word32] = pc
// DataOut: s4 s8
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid> r8:<invalid> r0:r4 ^ 0x0000001A

l00000F95:
	branch Z l00000F99
// DataOut: s4 s8
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r8:<invalid> r0:<invalid>

l00000F95_1:
	__vmls_f32(s4, s8)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r8:<invalid> r0:<invalid>

l00000F99:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r8:<invalid> r0:<invalid> s19:<invalid>



void vTaskPlaceOnEventList(word32 apsr_nzcv, word32 lr, word32 pc, word32 r0, word32 r1, word32 r3, word32 r6, word32 r7, word32 r8, word32 fp, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV apsr_nzcv fp ip lr pc r0 r1 r3 r6 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vTaskPlaceOnEventList_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vTaskPlaceOnEventList_entry:
// DataOut: apsr_nzcv fp ip lr pc r0 r1 r3 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000FDD:
	branch Z l00000FE1
// DataOut: apsr_nzcv fp ip lr pc r0 r1 r3 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000FDD_1:
	Mem54[r6:byte] = (byte) r0
	r6 = r6 - 0x00000CB5
// DataOut: apsr_nzcv fp ip lr pc r0 r1 r3 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00000FE1:
	branch C l00000FE5
// DataOut: apsr_nzcv fp ip lr pc r0 r1 r3 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r6:r6 - 0x00000CB5

l00000FE1_1:
	Mem41[r8:word32] = r0
	Mem42[r8 - 4:word32] = r1
	Mem44[r8 - 8:word32] = r3
	Mem45[r8 - 12:word32] = r6
	Mem46[r8 - 16:word32] = r8
	Mem48[r8 - 20:word32] = fp
	Mem50[r8 - 24:word32] = ip
	Mem52[r8 - 28:word32] = lr
// DataOut: apsr_nzcv pc r0 r1 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r6:r6 - 0x00000CB5

l00000FE5:
	branch ZC l00000FE9
// DataOut: apsr_nzcv pc r0 r1 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r6:r6 - 0x00000CB5 r8:r8 - 32

l00000FE5_1:
	r0 = !(r1 >>u r7)
	byte NZCV_35 = cond(r0)
	C = NZCV_35 (alias)
	NZV = NZCV_35 (alias)
	NZV = NZCV_35 (alias)
// DataOut: apsr_nzcv pc r0 r1 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r6:r6 - 0x00000CB5 r8:r8 - 32

l00000FE9:
	branch NZV l00000FED
// DataOut: apsr_nzcv pc r0 r1 r6
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r6:r6 - 0x00000CB5 r8:r8 - 32 r0:!(r1 >>u r7)

l00000FE9_1:
	__stcl(0x00, 0x02, Mem0[r6 + -996:void])
	Mem31[0x00:word32] = apsr_nzcv
	Mem32[4:word32] = r6
// DataOut: pc r0 r1
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r6:r6 - 0x00000CB5 r8:r8 - 32 r0:!(r1 >>u r7)

l00000FED:
	branch C l00000FF1
// DataOut: pc r0 r1
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r6:r6 - 0x00000CB5 r8:r8 - 32 r0:!(r1 >>u r7)

l00000FED_1:
	Mem28[r0:byte] = (byte) r1
// DataOut: pc
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r6:r6 - 0x00000CB5 r8:r8 - 32 r0:!(r1 >>u r7)

l00000FF1:
	branch NZV l00000FF5
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 - 0x00000CB5 r8:r8 - 32 r0:<invalid>

l00000FF1_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 - 0x00000CB5 r8:r8 - 32 r0:<invalid>

l00000FF5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 - 0x00000CB5 r8:r8 - 32 r0:<invalid> pc:pc + 0x000000E4



void vTaskPlaceOnUnorderedEventList()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vTaskPlaceOnUnorderedEventList_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vTaskPlaceOnUnorderedEventList_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000FF9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xTaskRemoveFromEventList()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xTaskRemoveFromEventList_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xTaskRemoveFromEventList_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000101D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xTaskRemoveFromUnorderedEventList()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xTaskRemoveFromUnorderedEventList_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xTaskRemoveFromUnorderedEventList_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001081:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vTaskSwitchContext(word32 r0, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV r0 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vTaskSwitchContext_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vTaskSwitchContext_entry:
// DataOut: r0 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000010D9:
	branch ZC l000010DD
// DataOut: r0 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000010DD:
	branch NZV l000010E1
// DataOut: r0 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000010DD_1:
	NZV = cond(r9 + 0xC0000000 + C) (alias)
// DataOut: r0
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000010E1:
	branch NZV l000010E5
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp ip:<invalid>

l000010E1_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ip:<invalid>

l000010E5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ip:<invalid>

l000010D9_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void uxTaskResetEventItemValue(word32 lr, word32 r3, word32 r5, word32 r6, word32 r8, word32 r9, word32 fp, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZC fp ip lr r3 r5 r6 r8 r9
// LiveOut:
// Trashed: r8
// Preserved: sp
uxTaskResetEventItemValue_entry:
// DataOut: fp ip lr r3 r5 r6 r8 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l00001121:
	branch NZ l00001121_then
	word32 sp_3
	byte NZ_4
	byte ZC_5
	word32 r8_6
	word32 r3_7
	word32 r5_8
	word32 r6_9
	word32 r9_10
	word32 fp_11
	word32 ip_12
	word32 lr_13
	call fn01A17655 (retsize: 0;)
		uses: NZ,sp_1
		defs: fp_11,ip_12,lr_13,NZ_4,r3_7,r5_8,r6_9,r8_6,r9_10,sp_3,ZC_5
	return
// DataOut: fp ip lr r3 r5 r6 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00001121_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001125:
	branch ZC_5 l00001129
// DataOut: fp ip lr r3 r5 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001125_1:
	Mem15[r8_6:word32] = r3_7
	Mem16[r8_6 - 4:word32] = r5_8
	Mem17[r8_6 - 8:word32] = r6_9
	Mem18[r8_6 - 12:word32] = r8_6
	Mem19[r8_6 - 16:word32] = r9_10
	Mem20[r8_6 - 20:word32] = fp_11
	Mem21[r8_6 - 24:word32] = ip_12
	Mem22[r8_6 - 28:word32] = lr_13
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001129:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 - 32

uxTaskResetEventItemValue_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 - 32



void xTaskGetCurrentTaskHandle(word32 pc, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV fp pc r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xTaskGetCurrentTaskHandle_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xTaskGetCurrentTaskHandle_entry:
// DataOut: fp pc r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00001139:
	branch V l0000113D
// DataOut: fp pc r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00001139_1:
// DataOut: pc
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000113D:
	branch NZV l00001141
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r8 - (fp >> 16)

l0000113D_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r8 - (fp >> 16)

l00001141:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r8 - (fp >> 16) r0:<invalid> pc:pc + 0x00000047



void vTaskSetTimeOutState(word32 fpsid, word32 r0, word32 r1, word32 r2, word32 r7, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV fp fpsid r0 r1 r2 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vTaskSetTimeOutState_entry:
// DataOut: fp fpsid r0 r1 r2 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00001145:
	sp = fp
	branch Test(UGT,ZC) l00001149
// DataOut: fp fpsid r0 r1 r2 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00001145_1:
	sp = Mem0[r8:byte]
	r8 = r8 + 0x0000034B
// DataOut: fp fpsid r0 r1 r2 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00001149:
	branch Test(ULE,ZC) l0000114D
// DataOut: fp fpsid r0 r1 r2 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r8:r8 + 0x0000034B

l00001149_1:
	sp = (r0 >>u 6) - r8 - C
	NZCV = cond(sp)
	C = NZCV (alias)
	ZC = NZCV (alias)
	Z = NZCV (alias)
	NZV = NZCV (alias)
	V = NZCV (alias)
// DataOut: fp fpsid r0 r1 r2 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r8:r8 + 0x0000034B

l0000114D:
	branch Test(NE,Z) l00001151
// DataOut: fp fpsid r0 r1 r2 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r8:r8 + 0x0000034B

l0000114D_1:
	r8 = r8
	__stcl(0x00, 0x08, Mem0[r8:void])
	Mem0[0x00:word32] = fpsid
	Mem0[4:word32] = r8
	0x00 = 8
// DataOut: fp r0 r1 r2 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r8:r8 + 0x0000034B

l00001151:
	branch Test(LE,NZV) l00001155
// DataOut: fp r0 r1 r2 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r8:<invalid>

l00001151_1:
	Mem0[r7:byte] = (byte) r7
	r7 = r7 - 0x00000000
// DataOut: fp r0 r1 r2 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r8:<invalid>

l00001155:
	branch Test(OV,V) l00001155_thunk_xTaskCheckForTimeOut
// DataOut: fp r0 r1 r2 r8
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r8:<invalid> r7:r7

l00001155_thunk_xTaskCheckForTimeOut:
	xTaskCheckForTimeOut(r0, r1, r2, r8, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r7:r7
// Terminates process

l00001155_1:
	r0 = 0x00000000
// DataOut: fp r0 r1 r2 r8
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r8:<invalid> r7:r7

l00001155_thunk_xTaskCheckForTimeOut:
	xTaskCheckForTimeOut(r0, r1, r2, r8, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r7:r7 r0:0x00000000
// Terminates process

vTaskSetTimeOutState_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void xTaskCheckForTimeOut(word32 r0, word32 r1, word32 r2, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC fp r0 r1 r2 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xTaskCheckForTimeOut_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xTaskCheckForTimeOut_entry:
// DataOut: fp r0 r1 r2 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00001159:
	branch Z l0000115D
// DataOut: fp r0 r1 r2 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00001159_1:
	__mcr(0x04, 0x00000002, r0, 0x06, 0x05, 0x00000005)
// DataOut: fp r1 r2 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l0000115D:
	branch Z l00001161
// DataOut: fp r1 r2 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l0000115D_1:
	word32 sp_38
	byte Z_39
	word32 r0_40
	byte NZCV_45
	word32 r1_46
	word32 r2_47
	call fnFFC02E7D (retsize: 0;)
		uses: C,fp,NZCV,r0,r1,r2,r8,sp_1,Z,ZC
		defs: C_41,fp_42,NZCV_45,r0_40,r1_46,r2_47,r8_44,sp_38,Z_39,ZC_43
// DataOut: fp r1 r2 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00001161:
	branch C l00001165
// DataOut: fp r1 r2 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00001161_1:
	Mem37[fp + -26:word64] = r2_r1
// DataOut: r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00001165:
	branch ZC l00001169
// DataOut: r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00001165_1:
	ZC = cond(__ror(r8, 6) - r8 - C) (alias)
// DataOut: r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00001169:
	branch ZC l0000116D
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid>

l00001169_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid>

l0000116D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:r8 + 0x00000350



void vTaskMissedYield(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vTaskMissedYield_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vTaskMissedYield_entry:
// DataOut: r0
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l000011AD:
	branch NZV l000011B1
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l000011AD_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000011B1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:DPB(r0, 0xB222, 16)



void vTaskPriorityInherit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vTaskPriorityInherit_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vTaskPriorityInherit_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000011BD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xTaskPriorityDisinherit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xTaskPriorityDisinherit_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xTaskPriorityDisinherit_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001251:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void pvTaskIncrementMutexHeldCount(word32 pc, word32 r0, word32 r1, word32 r3, word32 r4, word32 r5, word32 r6, word32 r8, word32 fp, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV fp ip pc r0 r1 r3 r4 r5 r6 r8
// LiveOut:
// Trashed: pc r0 r5
// Preserved: sp
pvTaskIncrementMutexHeldCount_entry:
// DataOut: fp ip pc r0 r1 r3 r4 r5 r6 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000012D5:
	branch Z l000012D5_then
	word32 sp_3
	byte Z_4
	byte NZV_5
	byte V_6
	word32 r5_7
	word32 r8_8
	byte NZV_9
	word32 pc_10
	word32 r0_11
	word32 r1_12
	word32 r3_13
	word32 r4_14
	word32 r6_15
	word32 fp_16
	word32 ip_17
	call fn01A17C09 (retsize: 0;)
		uses: sp_1,Z
		defs: fp_16,ip_17,NZV_5,NZV_9,pc_10,r0_11,r1_12,r3_13,r4_14,r5_7,r6_15,r8_8,sp_3,V_6,Z_4
	return
// DataOut: fp ip pc r0 r1 r3 r4 r5 r6 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000012D5_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000012D9:
	branch NZV_5 l000012D9_then
	word32 sp_18
	byte Z_19
	byte NZV_20
	byte V_21
	word32 r5_22
	word32 r8_23
	byte NZV_24
	word32 pc_25
	word32 r0_26
	word32 r1_27
	word32 r3_28
	word32 r4_29
	word32 r6_30
	word32 fp_31
	word32 ip_32
	call fn01A179A5 (retsize: 0;)
		uses: fp_16,ip_17,NZV_5,NZV_9,pc_10,r0_11,r1_12,r3_13,r4_14,r5_7,r6_15,r8_8,sp_3,V_6,Z_4
		defs: fp_31,ip_32,NZV_20,NZV_24,pc_25,r0_26,r1_27,r3_28,r4_29,r5_22,r6_30,r8_23,sp_18,V_21,Z_19
	return
// DataOut: fp ip pc r0 r1 r3 r4 r5 r6 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000012D9_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000012DD:
	branch NZV_20 l000012DD_then
	word32 sp_33
	byte Z_34
	byte NZV_35
	byte V_36
	word32 r5_37
	word32 r8_38
	byte NZV_39
	word32 pc_40
	word32 r1_42
	word32 r3_43
	word32 r4_44
	word32 r6_45
	word32 fp_46
	word32 ip_47
	word32 r0_41
	call fn00C81899 (retsize: 0;)
		uses: fp_31,ip_32,NZV_20,NZV_24,pc_25,r0_26,r1_27,r3_28,r4_29,r5_22,r6_30,r8_23,sp_18,V_21,Z_19
		defs: fp_46,ip_47,NZV_35,NZV_39,pc_40,r0_41,r1_42,r3_43,r4_44,r5_37,r6_45,r8_38,sp_33,V_36,Z_34
	return
// DataOut: fp ip pc r0 r1 r3 r4 r5 r6 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000012DD_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000012E1:
	branch V_36 l000012E5
// DataOut: fp ip pc r0 r1 r3 r4 r5 r6 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000012E1_1:
	word32 r5_56 = r8_38 - __ror(r5_37, 16)
// DataOut: fp ip pc r0 r1 r3 r4 r6 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000012E5:
	branch NZV_39 l000012E9
// DataOut: fp ip pc r0 r1 r3 r4 r6 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r5:<invalid>

l000012E5_1:
	r0_41 = Mem0[0x000012ED:word32]
// DataOut: fp ip r0 r1 r3 r4 r6 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r5:<invalid>

l000012E9:
	branch Z_34 l000012ED
// DataOut: fp ip r0 r1 r3 r4 r6 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r5:<invalid> r0:<invalid> pc:pc + 0x00000047

l000012E9_1:
	r0_41 = 0x00000000
// DataOut: fp ip r0 r1 r3 r4 r6 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r5:<invalid> r0:<invalid> pc:pc + 0x00000047

l000012ED:
	branch NZV_35 l000012ED_thunk_prvRestoreContextOfFirstTask
// DataOut: fp ip r0 r1 r3 r4 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r5:<invalid> r0:<invalid> pc:pc + 0x00000047

l000012ED_thunk_prvRestoreContextOfFirstTask:
	prvRestoreContextOfFirstTask(r0_41, r1_42, r3_43, r4_44, r6_45, r8_38, fp_46, ip_47)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:<invalid> r0:<invalid> pc:pc + 0x00000047
// Terminates process

l000012ED_1:
// DataOut: fp ip r0 r1 r3 r4 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r5:<invalid> r0:<invalid> pc:pc + 0x00000047

l000012ED_thunk_prvRestoreContextOfFirstTask:
	prvRestoreContextOfFirstTask(r0_41, r1_42, r3_43, r4_44, r6_45, r8_38, fp_46, ip_47)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:<invalid> r0:<invalid> pc:pc + 0x00000047
// Terminates process

pvTaskIncrementMutexHeldCount_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:<invalid> r0:<invalid> pc:pc + 0x00000047



void prvRestoreContextOfFirstTask(word32 r0, word32 r1, word32 r3, word32 r4, word32 r6, word32 r8, word32 fp, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC fp ip r0 r1 r3 r4 r6 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvRestoreContextOfFirstTask_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

prvRestoreContextOfFirstTask_entry:
// DataOut: fp ip r0 r1 r3 r4 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l000012F1:
	branch Z l000012F5
// DataOut: fp ip r0 r1 r3 r4 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l000012F1_1:
	Mem37[r4:word64] = r4_r3
// DataOut: fp ip r0 r1 r3 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l000012F5:
	branch ZC l000012F9
// DataOut: fp ip r0 r1 r3 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r4:r4 - r8

l000012F5_1:
	r0 = r8 - __ror(r8, 0)
// DataOut: fp ip r0 r1 r3 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r4:r4 - r8

l000012F9:
	branch Z l000012FD
// DataOut: fp ip r0 r1 r3 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r4:r4 - r8 r0:<invalid>

l000012FD:
	branch Z l00001301
// DataOut: fp ip r0 r1 r3 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r4:r4 - r8 r0:<invalid>

l000012FD_1:
	Mem24[r8:word32] = r0
	Mem25[r8 - 4:word32] = r1
	Mem27[r8 - 8:word32] = r3
	Mem29[r8 - 12:word32] = r6
	Mem30[r8 - 16:word32] = r8
	Mem32[r8 - 20:word32] = fp
	Mem34[r8 - 24:word32] = ip
// DataOut: r1 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r4:r4 - r8 r0:<invalid>

l00001301:
	branch Z l00001305
// DataOut: r1 r8
// DataOut (flags): C
// SymbolicIn: sp:fp r4:r4 - r8 r0:<invalid> r8:r8 - 28

l00001301_1:
// DataOut: r1 r8
// DataOut (flags): C
// SymbolicIn: sp:fp r4:r4 - r8 r0:<invalid> r8:r8 - 28

l00001305:
	branch C l00001309
// DataOut: r1 r8
// DataOut (flags): C
// SymbolicIn: sp:fp r4:r4 - r8 r0:<invalid> r8:r8 - 28 r1:r1 + 0x00000168

l00001305_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 - r8 r0:<invalid> r8:r8 - 28 r1:r1 + 0x00000168

l00001309:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:r4 - r8 r0:<invalid> r8:r8 - 28 r1:r1 + 0x00000168

l000012F9_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 - r8 r0:<invalid>



void prvSVCHandler(word32 r0, word32 r1, word32 r2, word32 r3, word32 r7, word32 r8, word32 fp, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV fp ip r0 r1 r2 r3 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvSVCHandler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

prvSVCHandler_entry:
// DataOut: fp ip r0 r1 r2 r3 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00001335:
	branch Z l00001339
// DataOut: fp ip r0 r1 r2 r3 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00001335_1:
	r1 = 0xA4000001 - r8 - C
	byte NZCV_52 = cond(r1)
	r2_r1 = SEQ(r2, r1) (alias)
	r1_r0 = SEQ(r1, r0) (alias)
	C = NZCV_52 (alias)
	Z = NZCV_52 (alias)
	ZC = NZCV_52 (alias)
	V = NZCV_52 (alias)
// DataOut: fp ip r0 r1 r2 r3 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00001339:
	branch Z l0000133D
// DataOut: fp ip r0 r1 r2 r3 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:<invalid>

l00001339_1:
	r1_r0 = SEQ(r1, fp ^ ip >>u r1) (alias)
// DataOut: r0 r1 r2 r3 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:<invalid>

l0000133D:
	branch Z l00001341
// DataOut: r0 r1 r2 r3 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid>

l0000133D_1:
	word32 r0_37 = r3 - 0x00340000 - C
	byte NZCV_39 = cond(r0_37)
	r1_r0 = SEQ(r1, r0_37) (alias)
	C = NZCV_39 (alias)
	Z = NZCV_39 (alias)
	ZC = NZCV_39 (alias)
	V = NZCV_39 (alias)
// DataOut: r0 r1 r2 r3 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid>

l00001341:
	branch C l00001349
// DataOut: r0 r1 r2 r3 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid>

l00001345_1:
	Mem36[r1:word64] = r2_r1
// DataOut: r0 r1 r2 r3 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid>

l00001349:
	branch ZC l0000134D
// DataOut: r0 r1 r2 r3 r7 r8
// DataOut (flags): ZV
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid>

l00001349_1:
	Mem35[r1:word64] = r1_r0
// DataOut: r1 r2 r3 r7 r8
// DataOut (flags): ZV
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid>

l0000134D:
	branch V l00001351
// DataOut: r1 r2 r3 r7 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid>

l0000134D_1:
	Mem32[r8:word64] = r2_r1
// DataOut: r7
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid>

l00001351:
	branch Z l00001355
// DataOut: r7
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r8:r8 + r3

l00001351_1:
	Mem31[r7:byte] = (byte) r7
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r8:r8 + r3

l00001355:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r8:r8 + r3



void pxPortInitialiseStack(word32 r4, word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZ r4 r5 r6 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
pxPortInitialiseStack_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

pxPortInitialiseStack_entry:
// DataOut: r4 r5 r6 r7
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l0000137D:
	branch Z l00001381
// DataOut: r4 r5 r6 r7
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l0000137D_1:
	r5 = Mem0[r4 + 12:word32]
	r4 = r4 + 24
// DataOut: r4 r5 r6 r7
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l00001381:
	branch NZ l00001385
// DataOut: r4 r5 r6 r7
// DataOut (flags): NZ
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r5:<invalid> ip:<invalid> r4:r4 + 24

l00001381_1:
// DataOut: r4 r5 r6 r7
// DataOut (flags): NZ
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r5:<invalid> ip:<invalid> r4:r4 + 24

l00001385:
	branch NZ l00001389
// DataOut: r4 r5 r6 r7
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r5:<invalid> ip:<invalid> r4:r4 + 24

l00001385_1:
// DataOut: r4 r5 r6 r7
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r5:<invalid> ip:<invalid> r4:r4 + 24

l00001389:
	branch Z l0000138D
// DataOut: r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r5:<invalid> ip:<invalid> r4:r4 + 24

l00001389_1:
	Mem17[r4:word32] = r4
	Mem18[r4 - 4:word32] = r5
	Mem20[r4 - 8:word32] = r6
	Mem22[r4 - 12:word32] = r7
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r5:<invalid> ip:<invalid> r4:r4 + 24

l0000138D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r5:<invalid> ip:<invalid> r4:r4 + 24



void xPortStartScheduler(word32 r8, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZ r8 r9
// LiveOut:
// Trashed: r1 r4
// Preserved: sp
xPortStartScheduler_entry:
// DataOut: r8 r9
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l000013B1:
	branch Z l000013B1_then
	word32 sp_3
	byte Z_4
	byte NZ_5
	word32 r4_6
	word32 r9_7
	word32 r1_8
	word32 r8_9
	call fnFED1D4E5 (retsize: 0;)
		uses: sp_1,Z
		defs: NZ_5,r1_8,r4_6,r8_9,r9_7,sp_3,Z_4
	return
// DataOut: r8 r9
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l000013B1_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000013B5:
	branch NZ_5 l000013B9
// DataOut: r8 r9
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l000013B5_1:
// DataOut: r8
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l000013B9:
	branch Z_4 l000013B9_then
	word32 sp_10
	byte Z_11
	byte NZ_12
	word32 r4_13
	word32 r9_14
	word32 r1_15
	word32 r8_16
	call fn000A1391 (retsize: 0;)
		uses: NZ_5,r1_8,r4_6,r8_9,r9_7,sp_3,Z_4
		defs: NZ_12,r1_15,r4_13,r8_16,r9_14,sp_10,Z_11
	return
// DataOut: r8
// DataOut (flags): NZ
// SymbolicIn: sp:fp r4:r9 - 0x00001A00

l000013B9_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r9 - 0x00001A00

l000013BD:
	branch NZ_12 l000013C1
// DataOut: r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r4:r9 - 0x00001A00

l000013BD_1:
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp r4:r9 - 0x00001A00

l000013C1:
	branch Z_11 l000013C1_then
	word32 sp_17
	byte Z_18
	byte NZ_19
	word32 r4_20
	word32 r9_21
	word32 r1_22
	word32 r8_23
	call fn010A1389 (retsize: 0;)
		uses: NZ_12,r1_15,r4_13,r8_16,r9_14,sp_10,Z_11
		defs: NZ_19,r1_22,r4_20,r8_23,r9_21,sp_17,Z_18
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r9 - 0x00001A00 r1:r8 - 0x00060000

l000013C1_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r9 - 0x00001A00 r1:r8 - 0x00060000

l000013C5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r9 - 0x00001A00 r1:r8 - 0x00060000

xPortStartScheduler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r9 - 0x00001A00 r1:r8 - 0x00060000



void vPortEndScheduler(word32 pc, word32 r0, word32 r7, word32 r9, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C fp pc r0 r7 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vPortEndScheduler_entry:
// DataOut: fp pc r0 r7 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l00001551:
	branch C l00001551_thunk_vPortStoreTaskMPUSettings
// DataOut: fp pc r0 r7 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l00001551_thunk_vPortStoreTaskMPUSettings:
	vPortStoreTaskMPUSettings(r0, r9, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00001551_1:
	word32 r0_8 = pc + (r7 >> 32) + C
// DataOut: fp r0 r9
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l00001551_thunk_vPortStoreTaskMPUSettings:
	vPortStoreTaskMPUSettings(r0_8, r9, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>
// Terminates process

vPortEndScheduler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void vPortStoreTaskMPUSettings(word32 r0, word32 r9, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZ fp r0 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vPortStoreTaskMPUSettings_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vPortStoreTaskMPUSettings_entry:
// DataOut: fp r0 r9
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l00001555:
	branch NZ l00001559
// DataOut: fp r0 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00001555_1:
	Mem15[r9:word16] = (uint16) r0
// DataOut: fp
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00001559:
	branch Z l0000155D
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp r9:r9

l00001559_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r9:r9

l0000155D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r9:r9 fp:fp + 3024 r4:<invalid>



void xPortPendSVHandler(word32 pc, word32 r0, word32 r1, word32 r2, word32 r3, word32 r5, word32 r6, word32 r8, word32 r9, word32 r10, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV fp pc r0 r1 r10 r2 r3 r5 r6 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xPortPendSVHandler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xPortPendSVHandler_entry:
// DataOut: fp pc r0 r1 r10 r2 r3 r5 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00001689:
	branch Z l0000168D
// DataOut: fp pc r0 r1 r10 r2 r3 r5 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00001689_1:
	Mem30[r0:word32] = r0
// DataOut: fp pc r1 r10 r2 r3 r5 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000168D:
	branch C l00001695
// DataOut: fp pc r1 r10 r2 r3 r5 r6 r8 r9
// DataOut (flags): NZV
// SymbolicIn: sp:fp r0:r0 + 0x000009F3
// LocalsOut: fp(32)

l00001691_1:
	Mem27[r1:word64] = r2_r1
// DataOut: fp pc r10 r5 r6 r8 r9
// DataOut (flags): NZV
// SymbolicIn: sp:fp r0:r0 + 0x000009F3
// LocalsOut: fp(32)

l00001695:
	branch Z l00001699
// DataOut: fp pc r10 r5 r6 r8 r9
// DataOut (flags): NZV
// SymbolicIn: sp:fp r0:r0 + 0x000009F3 r1:r1 + r3
// LocalsOut: fp(32)

l00001695_1:
	word32 pc_25 = pc & __ror(r9, 5)
// DataOut: fp r10 r5 r6 r8 r9
// DataOut (flags): NZV
// SymbolicIn: sp:fp r0:r0 + 0x000009F3 r1:r1 + r3
// LocalsOut: fp(32)

l00001699:
	branch Z l0000169D
// DataOut: fp r10 r5 r6 r8 r9
// DataOut (flags): NZV
// SymbolicIn: sp:fp r0:r0 + 0x000009F3 r1:r1 + r3 pc:<invalid>
// LocalsOut: fp(32)

l00001699_1:
	Mem14[r9:word32] = r5
	Mem16[r9 + 4:word32] = r6
	Mem18[r9 + 8:word32] = r8
	Mem20[r9 + 12:word32] = r10
	Mem22[r9 + 16:word32] = fp
	Mem23[r9 + 20:word32] = fp
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp r0:r0 + 0x000009F3 r1:r1 + r3 pc:<invalid>

l0000169D:
	branch NZV l000016A1
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 + 0x000009F3 r1:r1 + r3 pc:<invalid> r9:r9 + 24

l0000169D_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 + 0x000009F3 r1:r1 + r3 pc:<invalid> r9:r9 + 24

l000016A1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 + 0x000009F3 r1:r1 + r3 pc:<invalid> r9:r9 + 24



void xPortSysTickHandler(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZV r3
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xPortSysTickHandler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xPortSysTickHandler_entry:
// DataOut: r3
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000016E5:
	branch Z l000016E9
// DataOut: r3
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000016E5_1:
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000016E9:
	branch NZV l000016ED
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 + 245 lr:<invalid>

l000016E9_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 + 245 lr:<invalid>

l000016ED:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 + 245 lr:<invalid>



void vPortSVCHandler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vPortSVCHandler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vPortSVCHandler_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001715:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void pvPortMalloc(word32 pc, word32 r0, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZC pc r0 r10 r4 r5 r6 r7 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
pvPortMalloc_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

pvPortMalloc_entry:
// DataOut: pc r0 r10 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l0000172D:
	branch NZ l00001731
// DataOut: pc r0 r10 r4 r5 r6 r7 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l0000172D_1:
// DataOut: pc r10 r4 r5 r6 r7 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00001731:
	branch C l00001735
// DataOut: pc r10 r4 r5 r6 r7 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:DPB(r0, 0x64B5, 16)

l00001731_1:
	Z = cond(pc + (r7 << 24) + C) (alias)
// DataOut: r10 r4 r5 r6 r7 r8 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp r0:DPB(r0, 0x64B5, 16)

l00001735:
	branch Z l00001739
// DataOut: r10 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp r0:DPB(r0, 0x64B5, 16) r1:<invalid>

l00001735_1:
	Mem15[r4:word32] = r4
	Mem17[r4 - 4:word32] = r5
	Mem19[r4 - 8:word32] = r6
	Mem21[r4 - 12:word32] = r7
	Mem23[r4 - 16:word32] = r8
	Mem25[r4 - 20:word32] = r9
	Mem27[r4 - 24:word32] = r10
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:DPB(r0, 0x64B5, 16) r1:<invalid>

l00001739:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:DPB(r0, 0x64B5, 16) r1:<invalid>



void vPortFree(word32 pc, word32 r0, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC pc r0 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vPortFree_entry:
// DataOut: pc r0 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00001781:
	branch Z l00001781_thunk_vPortInitialiseBlocks
// DataOut: pc r0 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00001781_thunk_vPortInitialiseBlocks:
	vPortInitialiseBlocks(r0)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00001781_1:
	word32 r0_10 = pc + (r7 >> 32) + C
// DataOut: r0
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00001781_thunk_vPortInitialiseBlocks:
	vPortInitialiseBlocks(r0_10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>
// Terminates process

vPortFree_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void vPortInitialiseBlocks(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vPortInitialiseBlocks_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vPortInitialiseBlocks_entry:
// DataOut: r0
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00001785:
	branch NZV l00001789
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001785_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001789:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:DPB(r0, 0xB222, 16)



void xPortGetFreeHeapSize(word32 pc, word32 r0, word32 r2, word32 r5, word32 r7, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV fp pc r0 r2 r5 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xPortGetFreeHeapSize_entry:
// DataOut: fp pc r0 r2 r5 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00001795:
	branch NZV l00001799
// DataOut: fp pc r0 r2 r5 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00001795_1:
	byte NZCV_59 = cond((fp >> 6) - r8 - C)
	C = NZCV_59 (alias)
	NZV = NZCV_59 (alias)
	V = NZCV_59 (alias)
	Z = NZCV_59 (alias)
// DataOut: pc r0 r2 r5 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00001799:
	branch NZV l0000179D
// DataOut: pc r0 r2 r5 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid>

l00001799_1:
// DataOut: pc r0 r2 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid>

l0000179D:
	branch V l000017A1
// DataOut: pc r0 r2 r7
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> ip:<invalid> r5:r5 * 0x00000002

l0000179D_1:
	byte NZCV_47 = cond(r0 ^ __ror(r0, 8))
	C = NZCV_47 (alias)
	Z = NZCV_47 (alias)
// DataOut: pc r0 r2 r7
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> ip:<invalid> r5:r5 * 0x00000002

l000017A1:
	branch C l000017A5
// DataOut: pc r0 r2 r7
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> ip:<invalid> r5:r5 * 0x00000002 r0:<invalid>

l000017A1_1:
	Z = cond(pc + (r7 >> 32) + C) (alias)
// DataOut: r0 r2
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ip:<invalid> r5:r5 * 0x00000002 r0:<invalid>

l000017A5:
	branch Z l000017A5_thunk_xEventGroupCreate
// DataOut: r0 r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ip:<invalid> r5:r5 * 0x00000002 r0:<invalid>

l000017A5_thunk_xEventGroupCreate:
	xEventGroupCreate()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ip:<invalid> r5:r5 * 0x00000002 r0:<invalid>
// Terminates process

l000017A5_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ip:<invalid> r5:r5 * 0x00000002 r0:<invalid>

l000017A5_thunk_xEventGroupCreate:
	xEventGroupCreate()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ip:<invalid> r5:r5 * 0x00000002 r0:<invalid>
// Terminates process

xPortGetFreeHeapSize_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void xEventGroupCreate()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xEventGroupCreate_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xEventGroupCreate_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000017A9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xEventGroupWaitBits(word32 apsr, word32 pc, word32 r1, word32 r6, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z apsr pc r1 r6 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xEventGroupWaitBits_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xEventGroupWaitBits_entry:
// DataOut: apsr pc r1 r6 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000017C5:
	branch Z l000017C9
// DataOut: apsr pc r1 r6 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000017C5_1:
	Mem11[r1:byte] = (byte) pc
	word32 r1_13 = r1 - __ror(r9, 1)
// DataOut: apsr r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000017C9:
	branch Z l000017CD
// DataOut: apsr r6
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid>

l000017C9_1:
	__stcl(0x0F, 0x01, Mem0[r6 + -280:void])
	Mem8[0x0F:word32] = apsr
	Mem9[0x00000013:word32] = r6
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid>

l000017CD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid>



void xEventGroupClearBits(word32 r0, word32 r2, word32 r3, word32 r4, word32 r6, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV r0 r2 r3 r4 r6 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xEventGroupClearBits_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xEventGroupClearBits_entry:
// DataOut: r0 r2 r3 r4 r6 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00001875:
	branch Z l00001879
// DataOut: r0 r2 r3 r4 r6 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00001879:
	branch V l0000187D
// DataOut: r0 r2 r3 r4 r6 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000187D:
	branch C l00001881
// DataOut: r0 r2 r3 r4 r6 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000187D_1:
	Mem33[r8 + -1534:byte] = (byte) r3
// DataOut: r0 r2 r3 r4 r6
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00001881:
	branch C l00001885
// DataOut: r0 r2 r3 r4 r6
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 + -1534

l00001881_1:
	Mem29[r4:word32] = r0
// DataOut: r2 r3 r6
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 + -1534

l00001885:
	branch ZC l00001889
// DataOut: r2 r3 r6
// DataOut (flags): V
// SymbolicIn: sp:fp r8:r8 + -1534 r4:r4 - 0x000004EA

l00001885_1:
	V = cond(!0x06000000) (alias)
// DataOut: r2 r3 r6
// DataOut (flags): V
// SymbolicIn: sp:fp r8:r8 + -1534 r4:r4 - 0x000004EA

l00001889:
	branch V l0000188D
// DataOut: r2 r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 + -1534 r4:r4 - 0x000004EA r0:!0x06000000

l00001889_1:
	Mem21[r6:word64] = r3_r2
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 + -1534 r4:r4 - 0x000004EA r0:!0x06000000

l0000188D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 + -1534 r4:r4 - 0x000004EA r0:!0x06000000 r6:r6 + 0xFFFFFF72

l00001879_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001875_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xEventGroupSetBits(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV fp r0 r1 r2 r3 r4 r5 r6 r7 r8
// LiveOut:
// Trashed: fp ip lr r1 r10 r2 r6 r7 r8 r9 sp
// Preserved:
xEventGroupSetBits_entry:
// DataOut: fp r0 r1 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00001891:
	branch Z l00001895
// DataOut: fp r0 r1 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00001895:
	branch NZV l00001899
// DataOut: fp r0 r1 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00001899:
	branch C l0000189D
// DataOut: fp r0 r1 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00001899_1:
	Mem43[r8:word32] = r3
	Mem45[r8 - 4:word32] = r4
	Mem47[r8 - 8:word32] = r5
	Mem48[r8 - 12:word32] = r6
	Mem49[r8 - 16:word32] = r7
	Mem50[r8 - 20:word32] = r8
	Mem52[r8 - 24:word32] = fp
	Mem53[r8 - 28:word32] = fp
// DataOut: r0 r1 r2 r3 r6
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l0000189D:
	branch Z l000018A1
// DataOut: r0 r1 r2 r3 r6
// DataOut (flags): NZC
// SymbolicIn: sp:fp r8:r8 - 32

l000018A1:
	branch ZC l000018A5
// DataOut: r0 r1 r2 r3 r6
// DataOut (flags): NZC
// SymbolicIn: sp:fp r8:r8 - 32

l000018A1_1:
	Mem40[r3:byte] = (byte) r2
// DataOut: r0 r1 r2 r3
// DataOut (flags): NZC
// SymbolicIn: sp:fp r8:r8 - 32

l000018A5:
	branch C l000018A9
// DataOut: r0 r1 r2 r3
// DataOut (flags): NZ
// SymbolicIn: sp:fp r8:r8 - 32 r3:r3 - (r6 << 2)

l000018A5_1:
	r2 = r0 - 0x00108000
// DataOut: r0 r1 r2 r3
// DataOut (flags): NZ
// SymbolicIn: sp:fp r8:r8 - 32 r3:r3 - (r6 << 2)

l000018A9:
	branch Z l000018AD
// DataOut: r0 r1 r2 r3
// DataOut (flags): NZ
// SymbolicIn: sp:fp r8:r8 - 32 r3:r3 - (r6 << 2) r2:r0 - 0x00108000

l000018AD:
	branch Z l000018B1
// DataOut: r0 r1 r2 r3
// DataOut (flags): NZ
// SymbolicIn: sp:fp r8:r8 - 32 r3:r3 - (r6 << 2) r2:r0 - 0x00108000

l000018AD_1:
	Mem37[r2:byte] = (byte) r0
// DataOut: r0 r1 r3
// DataOut (flags): NZ
// SymbolicIn: sp:fp r8:r8 - 32 r3:r3 - (r6 << 2) r2:r0 - 0x00108000

l000018B1:
	branch Z l000018B5
// DataOut: r0 r1 r3
// DataOut (flags): NZ
// SymbolicIn: sp:fp r8:r8 - 32 r3:r3 - (r6 << 2) r2:r0 - 0x00108000

l000018B1_1:
// DataOut: r3
// DataOut (flags): NZ
// SymbolicIn: sp:fp r8:r8 - 32 r3:r3 - (r6 << 2) r2:r0 - 0x00108000

l000018B5:
	branch NZ l000018B9
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 - 32 r3:r3 - (r6 << 2) r2:r0 - 0x00108000 Sequence lr:sp:<invalid> r1:r1 - r0

l000018B5_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 - 32 r3:r3 - (r6 << 2) r2:r0 - 0x00108000 Sequence lr:sp:<invalid> r1:r1 - r0

l000018B9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 - 32 r3:r3 - (r6 << 2) r2:r0 - 0x00108000 Sequence lr:sp:<invalid> r1:r1 - r0 Sequence r2:r1:<invalid>

l000018A9_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 - 32 r3:r3 - (r6 << 2) r2:r0 - 0x00108000

l0000189D_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 - 32

l00001895_1:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

xEventGroupSetBits_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> fp:<invalid> ip:<invalid> lr:<invalid> r7:r7 + 48

l00001891_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xEventGroupSync(word32 lr, word32 pc, word32 r0, word32 r1, word32 r3, word32 r5, word32 r6, word32 r7, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC ip lr pc r0 r1 r3 r5 r6 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xEventGroupSync_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xEventGroupSync_entry:
// DataOut: ip lr pc r0 r1 r3 r5 r6 r7
// DataOut (flags): ZC
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000018F9:
	branch ZC l000018FD
// DataOut: ip lr pc r0 r1 r3 r5 r6 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000018F9_1:
	Mem9[r1:word32] = r0
	Mem12[r1 - 4:word32] = r3
	Mem14[r1 - 8:word32] = r5
	Mem15[r1 - 12:word32] = r6
	Mem17[r1 - 16:word32] = r7
	Mem19[r1 - 20:word32] = ip
	Mem20[r1 - 24:word32] = fp
	Mem22[r1 - 28:word32] = lr
	Mem24[r1 - 32:word32] = pc
// DataOut: r0 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000018FD:
	branch Z l00001901
// DataOut: r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l000018FD_1:
	Mem7[r6:byte] = (byte) r0
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001901:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 - (r6 >> 10)



void xEventGroupGetBitsFromISR(word32 pc, word32 r1, word32 r2, word32 r3, word32 r7, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV pc r1 r2 r3 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xEventGroupGetBitsFromISR_entry:
// DataOut: pc r1 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00001989:
	branch NZ l0000198D
// DataOut: pc r1 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00001989_1:
// DataOut: pc r1 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000198D:
	branch ZC l00001991
// DataOut: pc r1 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000198D_1:
// DataOut: pc r1 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00001991:
	branch NZV l00001995
// DataOut: pc r1 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp fp:r2 & 0x000003C0

l00001991_1:
// DataOut: pc r1 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp fp:r2 & 0x000003C0

l00001995:
	branch NZV l00001999
// DataOut: pc r1 r2 r3 r7 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp fp:r2 & 0x000003C0

l00001995_1:
// DataOut: pc r1 r2 r3 r7 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp fp:r2 & 0x000003C0

l00001999:
	branch ZC l0000199D
// DataOut: pc r1 r2 r3 r7 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:r2 & 0x000003C0

l00001999_1:
// DataOut: r1 r2 r3 r7 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:r2 & 0x000003C0

l0000199D:
	branch Z l000019A1
// DataOut: r1 r2 r3 r7 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:r2 & 0x000003C0 r4:pc | 0x000003CC

l0000199D_1:
	Mem16[r8:word64] = r2_r1
	r8 = r8 + r3
// DataOut: r7 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:r2 & 0x000003C0 r4:pc | 0x000003CC

l000019A1:
	branch Z l000019A1_thunk_vEventGroupDelete
// DataOut: r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp fp:r2 & 0x000003C0 r4:pc | 0x000003CC r8:r8 + r3

l000019A1_thunk_vEventGroupDelete:
	vEventGroupDelete()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:r2 & 0x000003C0 r4:pc | 0x000003CC r8:r8 + r3
// Terminates process

l000019A1_1:
	word32 r7_14 = r7 - __ror(r8, 0)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:r2 & 0x000003C0 r4:pc | 0x000003CC r8:r8 + r3

l000019A1_thunk_vEventGroupDelete:
	vEventGroupDelete()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:r2 & 0x000003C0 r4:pc | 0x000003CC r8:r8 + r3 r7:<invalid>
// Terminates process

xEventGroupGetBitsFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void vEventGroupDelete()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vEventGroupDelete_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vEventGroupDelete_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000019A5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vEventGroupSetBitsCallback(word32 pc, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C pc r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vEventGroupSetBitsCallback_entry:
// DataOut: pc r6
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l000019D1:
	branch C l000019D1_thunk_vEventGroupClearBitsCallback
// DataOut: pc r6
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l000019D1_thunk_vEventGroupClearBitsCallback:
	vEventGroupClearBitsCallback(r6)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l000019D1_1:
	word32 r6_23 = Mem0[pc + 20:word32]
// DataOut: r6
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l000019D1_thunk_vEventGroupClearBitsCallback:
	vEventGroupClearBitsCallback(r6_23)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r9:<invalid> r10:<invalid> fp:<invalid> ip:<invalid> lr:<invalid> pc:pc + 48
// Terminates process

vEventGroupSetBitsCallback_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void vEventGroupClearBitsCallback(word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vEventGroupClearBitsCallback_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vEventGroupClearBitsCallback_entry:
// DataOut: r6
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l000019D5:
	branch Z l000019D9
// DataOut: r6
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l000019D5_1:
	__stcl(0x04, 0x00, Mem0[r6 + -724:void])
	Mem6[0x00000008:word32] = r6
// DataOut:
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l000019D9:
	branch NZV l000019DD
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000019DD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000019D9_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void NmiSR()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
NmiSR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

NmiSR_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008001:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void FaultISR(word32 pc, word32 r0, word32 r1, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z pc r0 r1 r8
// LiveOut:
// Trashed: NZCV pc r0 r1 r2 r4 r5 r6 r7 r8
// Preserved: sp
FaultISR_entry:
// DataOut: pc r0 r1 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00008005:
	branch Z l00008005_thunk_ResetISR
// DataOut: pc r0 r1 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00008005_thunk_ResetISR:
	ResetISR(pc, r0, r1, r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008005_1:
	word32 r0_12 = Mem0[pc:word32]
	word32 r1_13 = Mem0[pc + 4:word32]
// DataOut: pc r0 r1 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00008005_thunk_ResetISR:
	ResetISR(pc + 24, r0_12, r1_13, r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r2:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> pc:pc + 24

FaultISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r2:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> pc:<invalid> r4:<invalid> r8:<invalid>



void ResetISR(word32 pc, word32 r0, word32 r1, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV pc r0 r1 r8
// LiveOut:
// Trashed: NZCV pc r0 r2 r4 r8
// Preserved: sp
ResetISR_entry:
// DataOut: pc r0 r1 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00008009:
	branch ZC l0000800D
// DataOut: pc r0 r1 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00008009_1:
// DataOut: pc r0 r1 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000800D:
	branch NZV l0000800D_then
	word32 sp_4
	byte ZC_5
	word32 r0_6
	byte NZV_7
	word32 r1_9
	word32 r2_10
	byte NZCV_11
	word32 r8_12
	word32 r4_13
	byte C_14
	byte V_15
	word32 pc_16
	byte Z_18
	call fnFF48A91D (retsize: 0;)
		uses: NZV,sp_1,ZC
		defs: C_14,NZCV_11,NZV_7,pc_16,r0_6,r1_9,r2_10,r4_13,r8_12,sp_4,V_15,Z_8,ZC_5
	return
// DataOut: pc r0 r1 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r0:DPB(r0, 0x894B, 16)

l0000800D_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:DPB(r0, 0x894B, 16)

l00008011:
	branch Z_18 l00008015
// DataOut: pc r0 r1 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r0:DPB(r0, 0x894B, 16)

l00008011_1:
// DataOut: pc r0 r1 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r0:DPB(r0, 0x894B, 16)

l00008015:
	branch Z_18 l00008019
// DataOut: pc r0 r1 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r0:<invalid>

l00008015_1:
	Z_18 = cond(!0x40000004) (alias)
// DataOut: pc r0 r1 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r0:<invalid>

l00008019:
	branch Z_18 l00008019_then
	word32 sp_19
	byte ZC_20
	word32 r0_21
	byte NZV_22
	byte Z_23
	word32 r1_24
	word32 r2_25
	byte NZCV_26
	word32 r8_27
	word32 r4_28
	byte C_29
	byte V_30
	word32 pc_31
	call fn00C89029 (retsize: 0;)
		uses: C_14,NZCV_11,NZV_7,pc_16,r0_17,r1_9,r2_10,r4_13,r8_12,sp_4,V_15,Z_18,ZC_5
		defs: C_29,NZCV_26,NZV_22,pc_31,r0_21,r1_24,r2_25,r4_28,r8_27,sp_19,V_30,Z_23,ZC_20
	return
// DataOut: pc r0 r1 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r0:<invalid> r2:!0x40000004

l00008019_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r2:!0x40000004

l0000801D:
	branch Z_23 l00008021
// DataOut: pc r0 r1 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r0:<invalid> r2:!0x40000004

l0000801D_1:
// DataOut: pc r0 r1 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r0:<invalid> r2:!0x40000004

l00008021:
	word32 sp_32
	word32 r0_34
	byte NZV_35
	byte Z_36
	word32 r1_37
	word32 r2_38
	byte NZCV_39
	word32 r8_40
	word32 r4_41
	byte C_42
	word32 pc_44
	byte V_43
	byte ZC_33
	call fn010ACC97 (retsize: 0;)
		uses: C_29,NZCV_26,NZV_22,pc_31,r0_21,r1_24,r2_25,r4_28,r8_27,sp_19,V_30,Z_23,ZC_20
		defs: C_42,NZCV_39,NZV_35,pc_44,r0_34,r1_37,r2_38,r4_41,r8_40,sp_32,V_43,Z_36,ZC_33
	branch C_42 l00008029
// DataOut: pc r0 r1 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r0:<invalid> r2:!0x40000004 r4:<invalid> r8:r8 + 0x00000344

l00008025_1:
	word32 sp_65
	word32 r0_67
	byte NZV_68
	byte Z_69
	word32 r1_70
	word32 r2_71
	byte NZCV_72
	word32 r8_73
	word32 r4_74
	byte C_75
	word32 pc_77
	call fnFFC08371 (retsize: 0;)
		uses: C_42,NZCV_39,NZV_35,pc_44,r0_34,r1_37,r2_38,r4_41,r8_40,sp_32,V_43,Z_36,ZC_33
		defs: C_75,NZCV_72,NZV_68,pc_77,r0_67,r1_70,r2_71,r4_74,r8_73,sp_65,V_76,Z_69,ZC_66
// DataOut: pc r0 r1 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r0:<invalid> r2:!0x40000004 r4:<invalid> r8:r8 + 0x00000344

l00008029:
	branch V_43 l0000802D
// DataOut: pc r0 r1 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r2:!0x40000004 r4:<invalid> r8:r8 + 0x00000344

l00008029_1:
// DataOut: r0 r1
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r2:!0x40000004 r4:<invalid> r8:r8 + 0x00000344

l0000802D:
	branch ZC_33 l00008031
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r2:!0x40000004 r4:<invalid> r8:r8 + 0x00000344 pc:pc + (r8 + 0x00000688)

l0000802D_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r2:!0x40000004 r4:<invalid> r8:r8 + 0x00000344 pc:pc + (r8 + 0x00000688)

l00008031:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r2:!0x40000004 r4:<invalid> r8:r8 + 0x00000344 pc:pc + (r8 + 0x00000688)

ResetISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r2:!0x40000004 r4:<invalid> r8:r8 + 0x00000344 pc:pc + (r8 + 0x00000688)



void raise(word32 pc, word32 r0, word32 r2, word32 r4, word32 r5, word32 r7, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C pc r0 r2 r4 r5 r7 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
raise_entry:
// DataOut: pc r0 r2 r4 r5 r7 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00008035:
	branch C l00008035_thunk_vPrintTask
// DataOut: pc r0 r2 r4 r5 r7 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00008035_thunk_vPrintTask:
	vPrintTask(r0, r2, r4, r5, r7, r9)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00008035_1:
	word32 r0_8 = pc + __ror(r7, 1) + C
// DataOut: r0 r2 r4 r5 r7 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008035_thunk_vPrintTask:
	vPrintTask(r0_8, r2, r4, r5, r7, r9)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>
// Terminates process

raise_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void vPrintTask(word32 r0, word32 r2, word32 r4, word32 r5, word32 r7, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0 r2 r4 r5 r7 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vPrintTask_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vPrintTask_entry:
// DataOut: r0 r2 r4 r5 r7 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008039:
	branch Z l0000803D
// DataOut: r0 r2 r4 r5 r7 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008039_1:
	Mem15[r4 - 4:word32] = r0
	Mem17[r4 - 8:word32] = r2
	Mem18[r4 - 12:word32] = r4
	Mem20[r4 - 16:word32] = r5
	Mem22[r4 - 20:word32] = r7
// DataOut: r4 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000803D:
	branch Z l00008041
// DataOut: r4 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp r4:r4 - 24
// LocalsOut: fp(32)

l0000803D_1:
// DataOut: r4 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp r4:r4 - 24

l00008041:
	branch Z l00008045
// DataOut: r4 r9
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 - 24 r8:fp >> 6

l00008041_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 - 24 r8:fp >> 6

l00008045:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 - 24 r8:fp >> 6 r0:r4 - 48 ^ r9 >>u 3



void vCheckTask(word32 r0, word32 r1, word32 r2, word32 r3, word32 r8, word32 ip, byte bArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZC ip r0 r1 r2 r3 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vCheckTask_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vCheckTask_entry:
// DataOut: ip r0 r1 r2 r3 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008069:
	word32 sp_1 = fp
	branch ZC l0000806D
// DataOut: ip r0 r1 r2 r3 r8 sp
// DataOut (flags): NZC
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008069_1:
	r1_r0 = SEQ(r1, DPB(r0, 0xBBB5, 16)) (alias)
// DataOut: ip r0 r1 r2 r3 r8 sp
// DataOut (flags): NZC
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000806D:
	branch Z l00008071
// DataOut: ip r0 r1 r2 r3 r8 sp
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:DPB(r0, 0xBBB5, 16)
// LocalsOut: fp(32)

l0000806D_1:
	r1_r0 = SEQ(r1, Mem0[r3:word16]) (alias)
// DataOut: ip r0 r1 r2 r8 sp
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:DPB(r0, 0xBBB5, 16)
// LocalsOut: fp(32)

l00008071:
	branch Z l00008075
// DataOut: ip r0 r1 r2 r8 sp
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid> r3:<invalid>
// LocalsOut: fp(32)

l00008071_1:
	byte NZCV_49 = cond(0x00F00000 - ip - C)
	C = NZCV_49 (alias)
	ZC = NZCV_49 (alias)
	NZ = NZCV_49 (alias)
// DataOut: r0 r1 r2 r8 sp
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid> r3:<invalid>
// LocalsOut: fp(32)

l00008075:
	branch NZ l00008079
// DataOut: r0 r1 r2 r8 sp
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r3:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00008075_1:
	sp_1 = fp - 0x000009AC
// DataOut: r0 r1 r2 r8 sp
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r3:<invalid> r4:<invalid>

l00008079:
	branch C l0000807D
// DataOut: r0 r1 r2 r8 sp
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> 0(fp):<invalid>

l00008079_1:
	Mem43[sp_1:word64] = r1_r0
// DataOut: r2
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> 0(fp):<invalid>

l0000807D:
	branch ZC l00008081
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> 0(fp):<invalid>

l0000807D_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> 0(fp):<invalid>

l00008081:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r8:<invalid> lr:<invalid> 0(fp):<invalid>



void Main()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
Main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

Main_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000080A1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vUART_ISR(word32 r0, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0 r2 r4 r5 r6 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vUART_ISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vUART_ISR_entry:
// DataOut: r0 r2 r4 r5 r6 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008109:
	branch Z l0000810D
// DataOut: r0 r2 r4 r5 r6 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008109_1:
	Mem9[r6 - 4:word32] = r0
	Mem11[r6 - 8:word32] = r2
	Mem13[r6 - 12:word32] = r4
	Mem15[r6 - 16:word32] = r5
	Mem17[r6 - 20:word32] = r7
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000810D:
	branch Z l00008111
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 - 24
// LocalsOut: fp(32)

l0000810D_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 - 24

l00008111:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 - 24 r8:fp >> 4



void vSetErrorLED(word32 pc, word32 r0, word32 r1, word32 r3, word32 r6, word32 r7, word32 fp, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZ fp ip pc r0 r1 r3 r6 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vSetErrorLED_entry:
// DataOut: fp ip pc r0 r1 r3 r6 r7
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l00008185:
	branch Z l00008189
// DataOut: fp ip pc r0 r1 r3 r6 r7
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l00008185_1:
	r0 = r0 ^ r1 >>u 14
// DataOut: fp ip pc r0 r3 r6 r7
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l00008189:
	branch NZ l00008189_thunk_prvSetAndCheckRegisters
// DataOut: fp ip pc r0 r3 r6 r7
// DataOut (flags): NZV
// SymbolicIn: sp:fp r0:r0 ^ r1 >>u 14

l00008189_thunk_prvSetAndCheckRegisters:
	prvSetAndCheckRegisters(pc, r0, r3, r6, r7, fp, ip)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 ^ r1 >>u 14
// Terminates process

l00008189_1:
// DataOut: fp ip pc r0 r3 r6 r7
// DataOut (flags): NZV
// SymbolicIn: sp:fp r0:r0 ^ r1 >>u 14

l00008189_thunk_prvSetAndCheckRegisters:
	prvSetAndCheckRegisters(pc, r0, r3, r6, r7, fp, ip)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 ^ r1 >>u 14
// Terminates process

vSetErrorLED_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void prvSetAndCheckRegisters(word32 pc, word32 r0, word32 r3, word32 r6, word32 r7, word32 fp, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZV fp ip pc r0 r3 r6 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvSetAndCheckRegisters_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

prvSetAndCheckRegisters_entry:
// DataOut: fp ip pc r0 r3 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000818D:
	branch Z l00008191
// DataOut: fp ip pc r0 r3 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000818D_1:
	word32 sp_241
	call fn002CAD55 (retsize: 0;)
		uses: fp,ip,NZV,pc,r0,r3,r6,r7,sp_1,Z
		defs: fp_249,ip_250,NZV_243,pc_244,r0_245,r3_246,r6_247,r7_248,sp_241,Z_242
// DataOut: fp ip pc r0 r3 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00008191:
	branch Z l00008195
// DataOut: fp ip pc r0 r3 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00008191_1:
	fn0000895D(pc, r0, r3, r6, r7, fp, ip)
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l00008195:
	branch Z l00008199
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l00008195_1:
	word32 sp_231
	word32 pc_234
	word32 r0_235
	word32 r3_236
	word32 r6_237
	word32 r7_238
	word32 fp_239
	word32 ip_240
	call fn00048D61 (retsize: 0;)
		uses: fp_12,ip_11,NZV_18,pc_17,r0_16,r3_15,r6_14,r7_13,sp_20,Z_19
		defs: fp_239,ip_240,NZV_233,pc_234,r0_235,r3_236,r6_237,r7_238,sp_231,Z_232
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l00008199:
	branch Z l0000819D
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l00008199_1:
	word32 sp_221
	word32 pc_224
	word32 r0_225
	word32 r3_226
	word32 r6_227
	word32 r7_228
	word32 fp_229
	word32 ip_230
	call fn00089165 (retsize: 0;)
		uses: fp_22,ip_21,NZV_28,pc_27,r0_26,r3_25,r6_24,r7_23,sp_30,Z_29
		defs: fp_229,ip_230,NZV_223,pc_224,r0_225,r3_226,r6_227,r7_228,sp_221,Z_222
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l0000819D:
	branch Z l000081A1
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l0000819D_1:
	word32 sp_211
	word32 pc_214
	word32 r0_215
	word32 r3_216
	word32 r6_217
	word32 r7_218
	word32 fp_219
	word32 ip_220
	call fn000C9569 (retsize: 0;)
		uses: fp_32,ip_31,NZV_38,pc_37,r0_36,r3_35,r6_34,r7_33,sp_40,Z_39
		defs: fp_219,ip_220,NZV_213,pc_214,r0_215,r3_216,r6_217,r7_218,sp_211,Z_212
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000081A1:
	branch Z l000081A5
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000081A1_1:
	word32 sp_201
	word32 pc_204
	word32 r0_205
	word32 r3_206
	word32 r6_207
	word32 r7_208
	word32 fp_209
	word32 ip_210
	call fn0010996D (retsize: 0;)
		uses: fp_42,ip_41,NZV_48,pc_47,r0_46,r3_45,r6_44,r7_43,sp_50,Z_49
		defs: fp_209,ip_210,NZV_203,pc_204,r0_205,r3_206,r6_207,r7_208,sp_201,Z_202
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000081A5:
	branch Z l000081A9
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000081A5_1:
	word32 sp_191
	word32 pc_194
	word32 r0_195
	word32 r3_196
	word32 r6_197
	word32 r7_198
	word32 fp_199
	word32 ip_200
	call fn00149D71 (retsize: 0;)
		uses: fp_52,ip_51,NZV_58,pc_57,r0_56,r3_55,r6_54,r7_53,sp_60,Z_59
		defs: fp_199,ip_200,NZV_193,pc_194,r0_195,r3_196,r6_197,r7_198,sp_191,Z_192
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000081A9:
	branch Z l000081AD
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000081A9_1:
	word32 sp_181
	word32 pc_184
	word32 r0_185
	word32 r3_186
	word32 r6_187
	word32 r7_188
	word32 fp_189
	word32 ip_190
	call fn0018A175 (retsize: 0;)
		uses: fp_62,ip_61,NZV_68,pc_67,r0_66,r3_65,r6_64,r7_63,sp_70,Z_69
		defs: fp_189,ip_190,NZV_183,pc_184,r0_185,r3_186,r6_187,r7_188,sp_181,Z_182
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000081AD:
	branch Z l000081B1
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000081AD_1:
	word32 sp_171
	word32 pc_174
	word32 r0_175
	word32 r3_176
	word32 r6_177
	word32 r7_178
	word32 fp_179
	word32 ip_180
	call fn001CA579 (retsize: 0;)
		uses: fp_72,ip_71,NZV_78,pc_77,r0_76,r3_75,r6_74,r7_73,sp_80,Z_79
		defs: fp_179,ip_180,NZV_173,pc_174,r0_175,r3_176,r6_177,r7_178,sp_171,Z_172
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000081B1:
	branch Z l000081B5
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000081B1_1:
	word32 sp_161
	word32 pc_164
	word32 r0_165
	word32 r3_166
	word32 r6_167
	word32 r7_168
	word32 fp_169
	word32 ip_170
	call fn0020A97D (retsize: 0;)
		uses: fp_82,ip_81,NZV_88,pc_87,r0_86,r3_85,r6_84,r7_83,sp_90,Z_89
		defs: fp_169,ip_170,NZV_163,pc_164,r0_165,r3_166,r6_167,r7_168,sp_161,Z_162
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000081B5:
	branch Z l000081B9
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000081B5_1:
	word32 sp_151
	word32 pc_154
	word32 r0_155
	word32 r3_156
	word32 r6_157
	word32 r7_158
	word32 fp_159
	word32 ip_160
	call fn0024AD81 (retsize: 0;)
		uses: fp_92,ip_91,NZV_98,pc_97,r0_96,r3_95,r6_94,r7_93,sp_100,Z_99
		defs: fp_159,ip_160,NZV_153,pc_154,r0_155,r3_156,r6_157,r7_158,sp_151,Z_152
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000081B9:
	branch Z l000081BD
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000081B9_1:
	word32 sp_141
	byte Z_142
	word32 pc_144
	word32 r0_145
	word32 r3_146
	word32 r6_147
	word32 r7_148
	word32 fp_149
	word32 ip_150
	call fn0028B185 (retsize: 0;)
		uses: fp_102,ip_101,NZV_108,pc_107,r0_106,r3_105,r6_104,r7_103,sp_110,Z_109
		defs: fp_149,ip_150,NZV_143,pc_144,r0_145,r3_146,r6_147,r7_148,sp_141,Z_142
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000081BD:
	branch NZV l000081C1
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000081BD_1:
	word32 sp_131
	byte Z_132
	byte NZV_133
	word32 pc_134
	word32 r0_135
	word32 r3_136
	word32 r6_137
	word32 r7_138
	word32 fp_139
	word32 ip_140
	call fn0030B589 (retsize: 0;)
		uses: fp_112,ip_111,NZV_118,pc_117,r0_116,r3_115,r6_114,r7_113,sp_120,Z_119
		defs: fp_139,ip_140,NZV_133,pc_134,r0_135,r3_136,r6_137,r7_138,sp_131,Z_132
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000081C1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vApplicationIdleHook(word32 pc, word32 r0, word32 r1, word32 r2, word32 r7, word32 r8, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV ip pc r0 r1 r2 r7 r8
// LiveOut:
// Trashed: fp ip lr r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
vApplicationIdleHook_entry:
// DataOut: ip pc r0 r1 r2 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00008211:
	branch ZC l00008215
// DataOut: ip pc r0 r1 r2 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00008211_1:
	word32 sp_74
	word32 r3_80
	word32 r4_81
	word32 r5_82
	word32 r6_83
	word32 r9_85
	word32 r10_86
	word32 fp_87
	word32 lr_89
	call fnFFC084ED (retsize: 0;)
		uses: C,fp,ip,lr,NZV,pc,r0,r1,r10,r2,r3,r4,r5,r6,r7,r8,r9,sp_1,ZC
		defs: C_91,fp_87,ip_88,lr_89,NZV_76,pc_90,r0_92,r1_78,r10_86,r2_79,r3_80,r4_81,r5_82,r6_83,r7_77,r8_84,r9_85,sp_74,ZC_75
// DataOut: ip pc r0 r1 r2 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00008215:
	branch NZV l00008219
// DataOut: ip pc r0 r1 r2 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00008219:
	branch ZC l0000821D
// DataOut: ip pc r0 r1 r2 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00008219_1:
	Mem73[r7 + 2815:byte] = (byte) pc
// DataOut: ip r0 r1 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000821D:
	branch C l0000821D_thunk_PDCInit
// DataOut: ip r0 r1 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r7:r7 + 2815

l0000821D_thunk_PDCInit:
	PDCInit(r0, r1, r2, r8, ip)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7 + 2815
// Terminates process

l0000821D_1:
	word32 r0_71 = r0 & r1 << 1
// DataOut: ip r0 r1 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r7:r7 + 2815

l0000821D_thunk_PDCInit:
	PDCInit(r0_71, r1, r2, r8, ip)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7 + 2815 r0:r0 & r1 << 1
// Terminates process

l00008215_1:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

vApplicationIdleHook_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> fp:<invalid> ip:<invalid> lr:<invalid>



void PDCInit(word32 r0, word32 r1, word32 r2, word32 r8, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV ip r0 r1 r2 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
PDCInit_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

PDCInit_entry:
// DataOut: ip r0 r1 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00008221:
	branch ZC l00008225
// DataOut: ip r0 r1 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00008221_1:
	r2_r1 = SEQ(r2, DPB(r1, 0x8AB5, 16)) (alias)
// DataOut: ip r0 r1 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00008225:
	branch NV l00008229
// DataOut: ip r0 r1 r2 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp r1:DPB(r1, 0x8AB5, 16)

l00008225_1:
	r8 = Mem0[r0 + 16:word32]
// DataOut: ip r1 r2 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp r1:DPB(r1, 0x8AB5, 16)

l00008229:
	branch Z l0000822D
// DataOut: ip r1 r2 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp r1:DPB(r1, 0x8AB5, 16) r4:<invalid> r5:<invalid> r7:<invalid> r8:<invalid> r0:r0 + 20

l00008229_1:
	Mem38[r8 + -156:word64] = r2_r1
// DataOut: ip
// DataOut (flags): NZC
// SymbolicIn: sp:fp r1:DPB(r1, 0x8AB5, 16) r4:<invalid> r5:<invalid> r7:<invalid> r8:<invalid> r0:r0 + 20

l0000822D:
	branch Z l00008231
// DataOut: ip
// DataOut (flags): NZC
// SymbolicIn: sp:fp r1:DPB(r1, 0x8AB5, 16) r4:<invalid> r5:<invalid> r7:<invalid> r8:<invalid> r0:r0 + 20

l0000822D_1:
	NZ = cond(0x0F000000 - ip - C) (alias)
// DataOut:
// DataOut (flags): NZ
// SymbolicIn: sp:fp r1:DPB(r1, 0x8AB5, 16) r4:<invalid> r5:<invalid> r7:<invalid> r8:<invalid> r0:r0 + 20

l00008231:
	branch NZ l00008235
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:DPB(r1, 0x8AB5, 16) r4:<invalid> r5:<invalid> r7:<invalid> r8:<invalid> r0:r0 + 20 r10:<invalid>

l00008231_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:DPB(r1, 0x8AB5, 16) r4:<invalid> r5:<invalid> r7:<invalid> r8:<invalid> r0:r0 + 20 r10:<invalid>

l00008235:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:DPB(r1, 0x8AB5, 16) r4:<invalid> r5:<invalid> r7:<invalid> r8:<invalid> r0:r0 + 20 r10:<invalid>



void PDCWrite(word32 r0, word32 r1, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC ip r0 r1
// LiveOut:
// Trashed: NZCV r1 r8
// Preserved: sp
PDCWrite_entry:
// DataOut: ip r0 r1
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l0000829D:
	branch Z l0000829D_then
	word32 sp_3
	byte Z_4
	word32 r8_5
	word32 r0_6
	word32 ip_7
	byte NZCV_9
	word32 r1_10
	bool C_13
	call fn0118B979 (retsize: 0;)
		uses: sp_1,Z
		defs: C_8,ip_7,NZCV_9,r0_6,r1_10,r8_5,sp_3,Z_4
	return
// DataOut: ip r0 r1
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l0000829D_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000082A1:
	branch Z_4 l000082A5
// DataOut: ip r0 r1
// DataOut (flags): C
// SymbolicIn: sp:fp

l000082A1_1:
	C_13 = cond(r0_6 + (ip_7 >> 6) + C_13) (alias)
// DataOut: r0 r1
// DataOut (flags): C
// SymbolicIn: sp:fp

l000082A5:
	branch C_13 l000082A9
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid>

l000082A5_1:
	Mem17[r1_10:word64] = r1_r0
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid>

l000082A9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r1:r1 - r0

PDCWrite_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r1:r1 - r0



void vListInitialise(word32 fpsid, word32 pc, word32 r0, word32 r1, word32 r3, word32 r7, word32 r8, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV fpsid pc r0 r1 r3 r7 r8 r9
// LiveOut:
// Trashed:
// Preserved: sp
vListInitialise_entry:
// DataOut: fpsid pc r0 r1 r3 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l000082D1:
	branch Z l000082D5
// DataOut: fpsid pc r0 r1 r3 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l000082D5:
	branch Z l000082D9
// DataOut: fpsid pc r0 r1 r3 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l000082D5_1:
	r1 = Mem0[r1:word32] + 8
// DataOut: fpsid pc r0 r1 r3 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l000082D9:
	branch ZC l000082DD
// DataOut: fpsid pc r0 r1 r3 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:<invalid> r5:<invalid>

l000082D9_1:
	r8 = r0 - (r3 << 2)
// DataOut: fpsid pc r0 r1 r3 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:<invalid> r5:<invalid>

l000082DD:
	branch NZV l000082E1
// DataOut: fpsid pc r0 r1 r3 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:<invalid> r5:<invalid> r8:r0 - (r3 << 2)

l000082DD_1:
	r0 = 0x00000CE8
// DataOut: fpsid pc r0 r1 r3 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:<invalid> r5:<invalid> r8:r0 - (r3 << 2)

l000082E1:
	branch V l000082E5
// DataOut: fpsid pc r0 r1 r3 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:<invalid> r5:<invalid> r8:r0 - (r3 << 2) r0:0x00000CE8

l000082E1_1:
	r0 = r1 - __ror(0x00000CE8, 6)
// DataOut: fpsid pc r0 r1 r3 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:<invalid> r5:<invalid> r8:r0 - (r3 << 2) r0:0x00000CE8

l000082E5:
	branch Z l000082E5_thunk_vListInitialiseItem
// DataOut: fpsid pc r0 r1 r3 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:<invalid> r5:<invalid> r8:r0 - (r3 << 2) r0:<invalid>

l000082E5_thunk_vListInitialiseItem:
	vListInitialiseItem(fpsid, pc, r0, r1, r3, r7, r8, r9)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r5:<invalid> r8:r0 - (r3 << 2) r0:<invalid>
// Terminates process

l000082E5_1:
	word32 r0_55 = pc + (r7 >> 32) + C
// DataOut: fpsid pc r0 r1 r3 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:<invalid> r5:<invalid> r8:r0 - (r3 << 2) r0:<invalid>

l000082E5_thunk_vListInitialiseItem:
	vListInitialiseItem(fpsid, pc, r0_55, r1, r3, r7, r8, r9)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r5:<invalid> r8:r0 - (r3 << 2) r0:<invalid>
// Terminates process

l000082D1_1:
	word32 sp_34
	byte Z_35
	word32 r1_36
	word32 pc_37
	word32 r5_38
	byte ZC_39
	word32 r8_40
	word32 r0_41
	word32 r3_42
	byte NZV_43
	byte V_44
	word32 r7_45
	bool C_46
	byte NZCV_47
	word32 fpsid_48
	word32 r9_49
	call Mem0[r1:int16] (retsize: 0;)
		uses: C,fpsid,NZCV,NZV,pc,r0,r1,r3,r5,r7,r8,r9,sp_1,V,Z,ZC
		defs: C_46,fpsid_48,NZCV_47,NZV_43,pc_37,r0_41,r1_36,r3_42,r5_38,r7_45,r8_40,r9_49,sp_34,V_44,Z_35,ZC_39
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

vListInitialise_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vListInitialiseItem(word32 fpsid, word32 pc, word32 r0, word32 r1, word32 r3, word32 r7, word32 r8, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV fpsid pc r0 r1 r3 r7 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vListInitialiseItem_entry:
// DataOut: fpsid pc r0 r1 r3 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l000082E9:
	branch V l000082ED
// DataOut: fpsid pc r0 r1 r3 r7 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l000082E9_1:
	r0 = r1 - (r3 >>u 6)
// DataOut: fpsid pc r0 r7 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l000082ED:
	branch ZC l000082ED_thunk_vListInsertEnd
// DataOut: fpsid pc r0 r7 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:r1 - (r3 >>u 6)

l000082ED_thunk_vListInsertEnd:
	vListInsertEnd(fpsid, r0, r8, r9)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r1 - (r3 >>u 6)
// Terminates process

l000082ED_1:
	word32 r0_14 = pc + (r7 >> 32) + C
// DataOut: fpsid r0 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:r1 - (r3 >>u 6)

l000082ED_thunk_vListInsertEnd:
	vListInsertEnd(fpsid, r0_14, r8, r9)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>
// Terminates process

vListInitialiseItem_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void vListInsertEnd(word32 fpsid, word32 r0, word32 r8, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC fpsid r0 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vListInsertEnd_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vListInsertEnd_entry:
// DataOut: fpsid r0 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l000082F1:
	sp = fp
	branch Test(EQ,Z) l000082F5
// DataOut: fpsid r0 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l000082F1_1:
	r0 = r0 & __ror(r8, 25)
// DataOut: fpsid r0 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l000082F5:
	branch Test(NE,Z) l000082F9
// DataOut: fpsid r0 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid>

l000082F5_1:
	r8 = r8 + -196
	Mem0[r8:word16] = (uint16) r9
// DataOut: fpsid r0
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid>

l000082F9:
	branch Test(UGT,ZC) l000082FD
// DataOut: fpsid r0
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r8:r8 + -196

l000082F9_1:
	r0 = r0
	__stcl(0x0C, 0x08, Mem0[r0:void])
	Mem0[0x0C:word32] = fpsid
	Mem0[0x00000010:word32] = r0
	0x0C = 0x00000014
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r8:r8 + -196

l000082FD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r8:r8 + -196



void vListInsert(word32 r0, word32 r1, word32 r2, word32 r8, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV ip r0 r1 r2 r8
// LiveOut:
// Trashed: NZCV r1 r2 r8
// Preserved: sp
vListInsert_entry:
// DataOut: ip r0 r1 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000830D:
	branch V l00008311
// DataOut: ip r0 r1 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000830D_1:
	word32 sp_68
	byte V_69
	byte NZCV_75
	word32 pc_80
	call fn01A0B9E5 (retsize: 0;)
		uses: C,ip,N,NV,NZCV,pc,r0,r1,r2,r8,sp_1,V,Z
		defs: C_74,ip_73,N_77,NV_78,NZCV_75,pc_80,r0_72,r1_71,r2_76,r8_79,sp_68,V_69,Z_70
// DataOut: ip r0 r1 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00008311:
	branch Z l00008315
// DataOut: ip r0 r1 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00008311_1:
	r1 = r0 - (ip << r1) - C
	byte NZCV_62 = cond(r1)
	r1_r0 = SEQ(r1, r0) (alias)
	Z = NZCV_62 (alias)
	N = NZCV_62 (alias)
	NV = NZCV_62 (alias)
// DataOut: r0 r1 r2 r8
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l00008315:
	branch Z l00008319
// DataOut: r0 r1 r2 r8
// DataOut (flags): NZV
// SymbolicIn: sp:fp r1:<invalid>

l00008315_1:
	Mem58[r2:word64] = r1_r0
	r2 = r2 - r1
// DataOut: r1 r8
// DataOut (flags): NZV
// SymbolicIn: sp:fp r1:<invalid>

l00008319:
	branch N l0000831D
// DataOut: r1 r8
// DataOut (flags): NZV
// SymbolicIn: sp:fp r1:<invalid> r2:<invalid>

l00008319_1:
	r1 = DPB(r1, 0x6AE0, 16)
// DataOut: r1 r8
// DataOut (flags): NZV
// SymbolicIn: sp:fp r1:<invalid> r2:<invalid>

l0000831D:
	branch NV l00008321
// DataOut: r1 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid> r2:<invalid>

l0000831D_1:
	Mem55[r8 + -3176:byte] = (byte) r1
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid> r2:<invalid>

l00008321:
	branch Z l00008325
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r2:<invalid> r8:r8 + -3176

l00008325:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r2:<invalid> r8:r8 + -3176

l00008321_1:
	word32 sp_41
	byte V_42
	byte Z_43
	word32 r1_44
	word32 r0_45
	word32 ip_46
	bool C_47
	byte NZCV_48
	word32 r2_49
	byte N_50
	byte NV_51
	word32 r8_52
	word32 pc_53
	call Mem0[r2:byte] (retsize: 0;)
		uses: C_32,ip_21,N_30,NV_29,NZCV_31,pc_14,r0_22,r1_38,r2_36,r8_39,sp_26,V_35,Z_34
		defs: C_47,ip_46,N_50,NV_51,NZCV_48,pc_53,r0_45,r1_44,r2_49,r8_52,sp_41,V_42,Z_43
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r2:<invalid> r8:r8 + -3176

vListInsert_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r2:<invalid> r8:r8 + -3176



void uxListRemove()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
uxListRemove_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

uxListRemove_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008341:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xQueueCRSend(word32 pc, word32 r0, word32 r2, word32 r3, word32 r4, word32 r5, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV pc r0 r2 r3 r4 r5 r9
// LiveOut:
// Trashed: NZCV fp pc r1 r9
// Preserved: sp
xQueueCRSend_entry:
// DataOut: pc r0 r2 r3 r4 r5 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00008365:
	branch Z l00008369
// DataOut: pc r0 r2 r3 r4 r5 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00008365_1:
	__mcr(0x05, 0x00000002, r0, 0x06, 0x05, 0x00000005)
// DataOut: pc r0 r2 r3 r4 r5 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00008369:
	branch NZ l0000836D
// DataOut: pc r0 r2 r3 r4 r5 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00008369_1:
// DataOut: pc r0 r2 r3 r4 r5 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000836D:
	branch ZC l00008371
// DataOut: pc r0 r2 r3 r4 r5 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000836D_1:
// DataOut: pc r0 r2 r3 r4 r5 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00008371:
	branch NZV l00008375
// DataOut: pc r0 r2 r3 r4 r5 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp fp:0x00003FF0

l00008371_1:
// DataOut: pc r0 r2 r3 r4 r5 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp fp:0x00003FF0

l00008375:
	branch NZV l00008379
// DataOut: pc r0 r2 r3 r4 r5 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp fp:0x00003FF0

l00008375_1:
// DataOut: pc r0 r2 r3 r4 r5 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp fp:0x00003FF0

l00008379:
	branch Z l0000837D
// DataOut: pc r0 r2 r3 r4 r5 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp fp:0x00003FF0

l00008379_1:
	Mem60[0x00008381:word64] = r5_r4
// DataOut: r0 r2 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp fp:0x00003FF0

l0000837D:
	branch NZV l0000837D_then
	word32 sp_8
	byte Z_9
	word32 r0_10
	byte NZ_11
	byte ZC_12
	word32 fp_13
	byte NZV_14
	word32 pc_15
	word32 r3_16
	word32 r1_17
	word32 r2_18
	bool C_19
	byte NZCV_20
	word32 r9_21
	word32 r4_22
	word32 r5_23
	call fnFFE47745 (retsize: 0;)
		uses: fp_6,NZ,NZV,sp_1,Z,ZC
		defs: C_19,fp_13,NZ_11,NZCV_20,NZV_14,pc_15,r0_10,r1_17,r2_18,r3_16,r4_22,r5_23,r9_21,sp_8,Z_9,ZC_12
	return
// DataOut: r0 r2 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp fp:0x00003FF0 pc:pc + r3

l0000837D_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:0x00003FF0 pc:pc + r3

l00008381:
	branch ZC_12 l00008381_then
	word32 sp_24
	word32 r0_26
	byte NZ_27
	byte ZC_28
	word32 fp_29
	byte NZV_30
	word32 pc_31
	word32 r3_32
	word32 r1_33
	word32 r2_34
	bool C_35
	byte NZCV_36
	word32 r9_37
	word32 r4_38
	word32 r5_39
	byte Z_25
	call fn01B03135 (retsize: 0;)
		uses: C_19,fp_13,NZ_11,NZCV_20,NZV_14,pc_15,r0_10,r1_17,r2_18,r3_16,r4_22,r5_23,r9_21,sp_8,Z_9,ZC_12
		defs: C_35,fp_29,NZ_27,NZCV_36,NZV_30,pc_31,r0_26,r1_33,r2_34,r3_32,r4_38,r5_39,r9_37,sp_24,Z_25,ZC_28
	return
// DataOut: r0 r2 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp fp:0x00003FF0 pc:pc + r3

l00008381_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:0x00003FF0 pc:pc + r3

l00008385:
	branch Z_25 l00008389
// DataOut: r0 r2 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp fp:0x00003FF0 pc:pc + r3

l00008385_1:
	Z_25 = cond(r0_26 - (r2_34 >> 8) - C_35) (alias)
// DataOut: r9
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:0x00003FF0 pc:pc + r3

l00008389:
	branch Z_25 l0000838D
// DataOut: r9
// DataOut (flags): 
// SymbolicIn: sp:fp fp:0x00003FF0 pc:pc + r3 r1:<invalid>

l00008389_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:0x00003FF0 pc:pc + r3 r1:<invalid>

l0000838D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:0x00003FF0 pc:pc + r3 r1:<invalid> r9:r9 + 0x00000020

xQueueCRSend_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:0x00003FF0 pc:pc + r3 r1:<invalid> r9:r9 + 0x00000020



void xQueueCRReceive(word32 r1, word32 r2, word32 r3, word32 r4, word32 r6, word32 r8, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV r1 r2 r3 r4 r6 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueueCRReceive_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xQueueCRReceive_entry:
// DataOut: r1 r2 r3 r4 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008401:
	branch NZ l00008405
// DataOut: r1 r2 r3 r4 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008401_1:
// DataOut: r1 r2 r3 r4 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008405:
	branch ZC l00008409
// DataOut: r1 r2 r3 r4 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008405_1:
// DataOut: r1 r2 r3 r4 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008409:
	branch NZV l0000840D
// DataOut: r1 r2 r3 r4 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp fp:0x00003FF0
// LocalsOut: fp(32)

l00008409_1:
// DataOut: r1 r2 r3 r4 r6 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp fp:0x00003FF0
// LocalsOut: fp(32)

l0000840D:
	branch NZV l00008411
// DataOut: r1 r2 r3 r4 r6 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp fp:0x00003FF0
// LocalsOut: fp(32)

l0000840D_1:
// DataOut: r1 r2 r3 r4 r6 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp fp:0x00003FF0
// LocalsOut: fp(32)

l00008411:
	branch ZC l00008415
// DataOut: r1 r2 r3 r4 r6 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp fp:0x00003FF0
// LocalsOut: fp(32)

l00008411_1:
	Mem55[0x0000940C:word32] = r4
// DataOut: r1 r2 r3 r6 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp fp:0x00003FF0
// LocalsOut: fp(32)

l00008415:
	branch Z l00008419
// DataOut: r1 r2 r3 r6 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp fp:0x00003FF0
// LocalsOut: fp(32)

l00008415_1:
	word32 r2_46 = r9 + __ror(0x00003FF0, 26) + C
	byte NZCV_48 = cond(r2_46)
	r2_r1 = SEQ(r2_46, r1) (alias)
	C = NZCV_48 (alias)
	ZC = NZCV_48 (alias)
	Z = NZCV_48 (alias)
// DataOut: r1 r2 r3 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp fp:0x00003FF0
// LocalsOut: fp(32)

l00008419:
	branch ZC l0000841D
// DataOut: r1 r2 r3 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp fp:0x00003FF0 r2:<invalid>
// LocalsOut: fp(32)

l00008419_1:
	Z = cond(r1 - 0x02A00000 - C) (alias)
// DataOut: r1 r2 r3 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp fp:0x00003FF0 r2:<invalid>
// LocalsOut: fp(32)

l0000841D:
	branch Z l00008421
// DataOut: r1 r2 r3 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp fp:0x00003FF0 r2:<invalid> r3:<invalid>
// LocalsOut: fp(32)

l0000841D_1:
	Mem35[r8:word64] = r2_r1
// DataOut: r6
// DataOut (flags): ZC
// SymbolicIn: sp:fp fp:0x00003FF0 r2:<invalid> r3:<invalid>
// LocalsOut: fp(32)

l00008421:
	branch Z l00008425
// DataOut: r6
// DataOut (flags): C
// SymbolicIn: sp:fp fp:0x00003FF0 r2:<invalid> r3:<invalid> r8:<invalid>
// LocalsOut: fp(32)

l00008421_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:0x00003FF0 r2:<invalid> r3:<invalid> r8:<invalid>

l00008425:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:0x00003FF0 r2:<invalid> r3:<invalid> r8:<invalid>



void xQueueCRSendFromISR()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueueCRSendFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xQueueCRSendFromISR_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000084A1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xQueueCRReceiveFromISR()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueueCRReceiveFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xQueueCRReceiveFromISR_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000084D5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void prvIdleTask(word32 lr, word32 pc, word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r10, word32 fp, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  CV fp ip lr pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvIdleTask_entry:
// DataOut: fp ip lr pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000852D:
	branch V l00008531
// DataOut: fp ip lr pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000852D_1:
// DataOut: fp ip lr pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008531:
	branch C l00008531_thunk_xTaskNotifyStateClear
// DataOut: fp ip lr pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008531_thunk_xTaskNotifyStateClear:
	xTaskNotifyStateClear(r0, r1, r3, r5, r8, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00008531_1:
	Mem6[r7:word32] = r1
	Mem9[r7 + 4:word32] = r2
	Mem11[r7 + 8:word32] = r3
	Mem13[r7 + 12:word32] = r4
	Mem15[r7 + 16:word32] = r5
	Mem17[r7 + 20:word32] = r6
	Mem18[r7 + 24:word32] = r7
	Mem20[r7 + 28:word32] = r10
	Mem22[r7 + 32:word32] = fp
	Mem24[r7 + 36:word32] = ip
	Mem25[r7 + 40:word32] = fp
	Mem27[r7 + 44:word32] = lr
	Mem29[r7 + 48:word32] = pc
// DataOut: fp r0 r1 r3 r5 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00008531_thunk_xTaskNotifyStateClear:
	xTaskNotifyStateClear(r0, r1, r3, r5, r8, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7 + 52
// Terminates process

prvIdleTask_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void xTaskNotifyStateClear(word32 r0, word32 r1, word32 r3, word32 r5, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV fp r0 r1 r3 r5 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xTaskNotifyStateClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xTaskNotifyStateClear_entry:
// DataOut: fp r0 r1 r3 r5 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00008535:
	branch Z l00008539
// DataOut: fp r0 r1 r3 r5 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00008535_1:
// DataOut: fp r0 r3 r5 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00008539:
	branch Z l0000853D
// DataOut: fp r0 r3 r5 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r7:<invalid> r1:r1 + 0x000008B5

l0000853D:
	branch V l00008541
// DataOut: fp r0 r3 r5 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r7:<invalid> r1:r1 + 0x000008B5

l0000853D_1:
// DataOut: fp r0 r3 r5 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r7:<invalid> r1:r1 + 0x000008B5

l00008541:
	branch Z l00008545
// DataOut: fp r0 r3 r5 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r7:<invalid> r1:r1 + 0x000008B5 r9:<invalid> r8:r8 + 0x000004F8

l00008541_1:
	Mem52[fp + -560:word32] = r0
// DataOut: r0 r3 r5 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r7:<invalid> r1:r1 + 0x000008B5 r9:<invalid> r8:r8 + 0x000004F8

l00008545:
	branch Z l00008549
// DataOut: r0 r3 r5 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r7:<invalid> r1:r1 + 0x000008B5 r9:<invalid> r8:r8 + 0x000004F8 fp:fp + -560

l00008545_1:
	Mem50[r3:word16] = (uint16) r0
// DataOut: r0 r5 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r7:<invalid> r1:r1 + 0x000008B5 r9:<invalid> r8:r8 + 0x000004F8 fp:fp + -560

l00008549:
	branch ZC l0000854D
// DataOut: r0 r5 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r7:<invalid> r1:r1 + 0x000008B5 r9:<invalid> r8:r8 + 0x000004F8 fp:fp + -560 r3:r3

l00008549_1:
	Mem47[r5:word32] = r0
// DataOut: r0 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r7:<invalid> r1:r1 + 0x000008B5 r9:<invalid> r8:r8 + 0x000004F8 fp:fp + -560 r3:r3

l0000854D:
	branch Z l00008551
// DataOut: r0 r8
// DataOut (flags): C
// SymbolicIn: sp:fp r7:<invalid> r1:r1 + 0x000008B5 r9:<invalid> r8:r8 + 0x000004F8 fp:fp + -560 r3:r3 r5:r5 - 0x00000025

l0000854D_1:
// DataOut: r8
// DataOut (flags): C
// SymbolicIn: sp:fp r7:<invalid> r1:r1 + 0x000008B5 r9:<invalid> r8:r8 + 0x000004F8 fp:fp + -560 r3:r3 r5:r5 - 0x00000025

l00008551:
	branch C l00008555
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: sp:fp r7:<invalid> r1:r1 + 0x000008B5 r9:<invalid> r8:r8 + 0x000004F8 fp:fp + -560 r3:r3 r5:r5 - 0x00000025 r6:<invalid> r0:r0 + (r8 + 0x000009F0)

l00008551_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:<invalid> r1:r1 + 0x000008B5 r9:<invalid> r8:r8 + 0x000004F8 fp:fp + -560 r3:r3 r5:r5 - 0x00000025 r6:<invalid> r0:r0 + (r8 + 0x000009F0)

l00008555:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r1:r1 + 0x000008B5 r9:<invalid> r8:<invalid> fp:<invalid> r3:r3 r5:<invalid> r6:<invalid> r0:r0 + (r8 + 0x000009F0) r4:<invalid> r10:<invalid>

l00008539_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:<invalid> r1:r1 + 0x000008B5



void xPortRaisePrivilege(word32 r0, word32 r1, word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0 r1 r2 r3
// LiveOut:
// Trashed: r0
// Preserved: sp
xPortRaisePrivilege_entry:
// DataOut: r0 r1 r2 r3
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008565:
	branch Z l00008569
// DataOut: r0 r1 r2 r3
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008565_1:
	Mem12[r0:word64] = r2_r1
// DataOut: r0
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008569:
	branch Z l00008569_then
	word32 sp_3
	byte Z_4
	word32 r0_5
	word32 r3_6
	word32 r1_7
	word32 r2_8
	call fn003C8D31 (retsize: 0;)
		uses: sp_1,Z
		defs: r0_5,r1_7,r2_8,r3_6,sp_3,Z_4
	return
// DataOut: r0
// DataOut (flags): Z
// SymbolicIn: sp:fp r0:r0 + r3

l00008569_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 + r3

l0000856D:
	branch Z_4 l00008571
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 + r3

l0000856D_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 + r3

l00008571:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>

xPortRaisePrivilege_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



void vPortEnterCritical()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vPortEnterCritical_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vPortEnterCritical_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008579:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vPortExitCritical()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vPortExitCritical_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vPortExitCritical_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000085B1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vParTestInitialise(word32 r0, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZV fp r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vParTestInitialise_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vParTestInitialise_entry:
// DataOut: fp r0
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000085DD:
	branch Z l000085E1
// DataOut: fp r0
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000085DD_1:
// DataOut: fp r0
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000085E1:
	branch Z l000085E5
// DataOut: fp r0
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000085E1_1:
	Mem5[fp + -1022:byte] = (byte) r0
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000085E5:
	branch NZV l000085E9
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000085E9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000085E5_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vParTestSetLED(word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZV r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vParTestSetLED_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vParTestSetLED_entry:
// DataOut: r6
// DataOut (flags): ZV
// SymbolicIn: sp:fp

l000085F5:
	branch Z l000085F9
// DataOut: r6
// DataOut (flags): ZV
// SymbolicIn: sp:fp

l000085F5_1:
	__stcl(0x04, 0x00, Mem0[r6 + -724:void])
	Mem16[0x00000008:word32] = r6
// DataOut: r6
// DataOut (flags): ZV
// SymbolicIn: sp:fp

l000085F9:
	branch V l000085FD
// DataOut: r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000085F9_1:
	Z = cond(!(r6 >> 32)) (alias)
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000085FD:
	branch Z l00008601
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:!(r6 >> 32)

l00008601:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:!(r6 >> 32)

l000085FD_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:!(r6 >> 32)



void vParTestToggleLED(word32 r0, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vParTestToggleLED_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vParTestToggleLED_entry:
// DataOut: r0 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008631:
	branch Z l00008635
// DataOut: r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008631_1:
	Mem6[r6:word16] = (uint16) r0
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008635:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB



void prvFlashCoRoutine(word32 lr, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC lr r5
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvFlashCoRoutine_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

prvFlashCoRoutine_entry:
// DataOut: lr r5
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00008671:
	branch ZC l00008675
// DataOut: lr r5
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008671_1:
// DataOut: r5
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008675:
	branch Z l0000867D
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:lr + 0xD4000002

l00008679_1:
	word32 sp_18
	byte ZC_19
	word32 r8_20
	word32 lr_21
	word32 r5_22
	word32 fp_23
	byte Z_24
	call fn0118987D (retsize: 0;)
		uses: fp_8,lr,r5_6,r8_4,sp_1,Z,ZC
		defs: fp_23,lr_21,r5_22,r8_20,sp_18,Z_24,ZC_19
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:lr + 0xD4000002 r5:r5 + 48 fp:<invalid>

l0000867D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:lr + 0xD4000002 r5:r5 + 48 fp:<invalid>



void prvFixedDelayCoRoutine(word32 lr, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV lr r5
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvFixedDelayCoRoutine_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

prvFixedDelayCoRoutine_entry:
// DataOut: lr r5
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l000086E9:
	branch ZC l000086ED
// DataOut: lr r5
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l000086E9_1:
// DataOut: r5
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l000086ED:
	branch NZV l000086F1
// DataOut: r5
// DataOut (flags): 
// SymbolicIn: sp:fp r8:lr + 0xD4000002

l000086ED_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:lr + 0xD4000002

l000086F1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:lr + 0xD4000002 r5:r5 + 48 fp:<invalid>



void vStartFlashCoRoutines(word32 lr, word32 pc, word32 r0, word32 r1, word32 r3, word32 r5, word32 r6, word32 fp, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC fp ip lr pc r0 r1 r3 r5 r6
// LiveOut:
// Trashed: NZCV fp pc r0 r1 r3 r4 r5 r6 r7 sp
// Preserved:
vStartFlashCoRoutines_entry:
// DataOut: fp ip lr pc r0 r1 r3 r5 r6
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00008785:
	branch Z l00008789
// DataOut: fp ip lr pc r0 r1 r3 r5 r6
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00008785_1:
	r5 = Mem0[pc + 4:word32]
// DataOut: fp ip lr r0 r1 r3 r5 r6
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00008789:
	branch Z l0000878D
// DataOut: fp ip lr r0 r1 r3 r5 r6
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> pc:pc + 16

l00008789_1:
	Z = cond(r5 + (r0 >>u 32) + C) (alias)
// DataOut: fp ip lr r0 r1 r3 r6
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> pc:pc + 16

l0000878D:
	branch Z l00008791
// DataOut: fp ip lr r0 r1 r3 r6
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> pc:pc + 16 r7:<invalid>

l0000878D_1:
	Mem57[r6:byte] = (byte) r0
// DataOut: fp ip lr r0 r1 r3 r6
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> pc:pc + 16 r7:<invalid>

l00008791:
	branch Z l00008795
// DataOut: fp ip lr r0 r1 r3 r6
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> pc:pc + 16 r7:<invalid> r6:r6 - 0x00000522

l00008791_1:
// DataOut: fp ip lr r0 r1 r3 r6
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> pc:pc + 16 r7:<invalid> r6:r6 - 0x00000522

l00008795:
	branch Z l00008795_then
	word32 sp_23
	byte Z_24
	word32 pc_25
	word32 r3_26
	word32 r5_27
	word32 fp_28
	word32 r7_29
	word32 r0_30
	bool C_31
	byte NZCV_32
	word32 r6_33
	word32 r1_34
	byte ZC_35
	word32 ip_36
	word32 r4_37
	word32 lr_38
	call fnFFE66B5D (retsize: 0;)
		uses: C_18,fp_7,NZCV_17,pc_10,r3_9,r5_8,r6_22,r7_19,sp_11,Z_20,ZC_16
		defs: C_31,fp_28,ip_36,lr_38,NZCV_32,pc_25,r0_30,r1_34,r3_26,r4_37,r5_27,r6_33,r7_29,sp_23,Z_24,ZC_35
	return
// DataOut: fp ip lr r0 r1 r3 r6
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> pc:pc + 16 r7:<invalid> r6:r6 - 0x00000522 r0:r0 ^ r1 >>u 2

l00008795_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> pc:pc + 16 r7:<invalid> r6:r6 - 0x00000522 r0:r0 ^ r1 >>u 2

l00008799:
	branch ZC_35 l0000879D
// DataOut: fp ip lr r0 r1 r3 r6
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> pc:pc + 16 r7:<invalid> r6:r6 - 0x00000522 r0:r0 ^ r1 >>u 2

l00008799_1:
	Mem47[r0_30:word32] = r0_30
	Mem48[r0_30 - 4:word32] = r1_34
	Mem49[r0_30 - 8:word32] = r3_26
	Mem50[r0_30 - 12:word32] = r6_33
	Mem51[r0_30 - 16:word32] = fp_28
	Mem52[r0_30 - 20:word32] = ip_36
// DataOut: lr r1
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> pc:pc + 16 r7:<invalid> r6:r6 - 0x00000522 r0:r0 ^ r1 >>u 2

l0000879D:
	branch Z_24 l000087A1
// DataOut: lr r1
// DataOut (flags): C
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> pc:pc + 16 r7:<invalid> r6:r6 - 0x00000522 r0:<invalid>

l0000879D_1:
// DataOut: lr
// DataOut (flags): C
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> pc:pc + 16 r7:<invalid> r6:r6 - 0x00000522 r0:<invalid>

l000087A1:
	branch C_31 l000087A5
// DataOut: lr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> pc:pc + 16 r7:<invalid> r6:r6 - 0x00000522 r0:<invalid> r4:<invalid> r1:r1 * 0x00000002

l000087A1_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> pc:pc + 16 r7:<invalid> r6:r6 - 0x00000522 r0:<invalid> r4:<invalid> r1:r1 * 0x00000002

l000087A5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> pc:pc + 16 r7:<invalid> r6:r6 - 0x00000522 r0:<invalid> r4:<invalid> r1:r1 * 0x00000002

vStartFlashCoRoutines_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> pc:pc + 16 r7:<invalid> r6:r6 - 0x00000522 r0:<invalid> r4:<invalid> r1:r1 * 0x00000002



void xAreFlashCoRoutinesStillRunning(word32 pc, word32 r0, word32 r3, word32 r6, word32 r7, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV fp pc r0 r3 r6 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xAreFlashCoRoutinesStillRunning_entry:
// DataOut: fp pc r0 r3 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000087D1:
	branch V l000087D5
// DataOut: fp pc r0 r3 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000087D1_1:
// DataOut: pc r0 r3 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000087D5:
	branch NZV l000087D9
// DataOut: pc r0 r3 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r1:r8 - (fp >> 16)

l000087D5_1:
	r0 = pc + (r7 >> 32) + C
	V = cond(r0) (alias)
// DataOut: r0 r3 r6
// DataOut (flags): NZV
// SymbolicIn: sp:fp r1:r8 - (fp >> 16)

l000087D9:
	branch V l000087D9_thunk_MPU_xTaskCreateRestricted
// DataOut: r0 r3 r6
// DataOut (flags): NZV
// SymbolicIn: sp:fp r1:r8 - (fp >> 16) r0:<invalid>

l000087D9_thunk_MPU_xTaskCreateRestricted:
	MPU_xTaskCreateRestricted(r0, r3, r6)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r8 - (fp >> 16) r0:<invalid>
// Terminates process

l000087D9_1:
// DataOut: r0 r3 r6
// DataOut (flags): NZV
// SymbolicIn: sp:fp r1:r8 - (fp >> 16) r0:<invalid>

l000087D9_thunk_MPU_xTaskCreateRestricted:
	MPU_xTaskCreateRestricted(0x00000000, r3, r6)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r8 - (fp >> 16) r0:<invalid>
// Terminates process

xAreFlashCoRoutinesStillRunning_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void MPU_xTaskCreateRestricted(word32 r0, word32 r3, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZV r0 r3 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xTaskCreateRestricted_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_xTaskCreateRestricted_entry:
// DataOut: r0 r3 r6
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000087DD:
	branch Z l000087E1
// DataOut: r0 r3 r6
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000087DD_1:
	__mcr(0x05, 0x00000002, r0, 0x06, 0x05, 0x00000005)
// DataOut: r3 r6
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000087E1:
	branch NZV l000087E5
// DataOut: r3 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000087E1_1:
// DataOut: r3 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000087E5:
	branch Z l000087E9
// DataOut: r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l000087E5_1:
	Mem7[r6:byte] = (byte) r3
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000087E9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 - 0x000001FE



void MPU_xTaskCreate(word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC r10 r4 r5 r6 r7 r8
// LiveOut:
// Trashed: pc
// Preserved: sp
MPU_xTaskCreate_entry:
// DataOut: r10 r4 r5 r6 r7 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00008809:
	branch ZC l0000880D
// DataOut: r10 r4 r5 r6 r7 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00008809_1:
// DataOut: r10 r4 r5 r6 r7 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l0000880D:
	branch ZC l00008811
// DataOut: r10 r4 r5 r6 r7 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp pc:r7 - 0x000000E9

l0000880D_1:
	Mem36[r6:word32] = r4
	Mem39[r6 - 4:word32] = r5
	Mem41[r6 - 8:word32] = r7
	Mem43[r6 - 12:word32] = r8
	Mem45[r6 - 16:word32] = r10
// DataOut:
// DataOut (flags): ZC
// SymbolicIn: sp:fp pc:r7 - 0x000000E9

l00008811:
	branch ZC l00008811_then
	word32 sp_5
	byte ZC_6
	word32 pc_7
	word32 r7_8
	word32 r6_9
	word32 r4_10
	word32 r5_11
	word32 r8_12
	word32 r10_13
	byte Z_14
	call fn011ACD31 (retsize: 0;)
		uses: pc_4,sp_1,ZC
		defs: pc_7,r10_13,r4_10,r5_11,r6_9,r7_8,r8_12,sp_5,Z_14,ZC_6
	return
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp pc:r7 - 0x000000E9

l00008811_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:r7 - 0x000000E9

l00008815:
	branch Z_14 l00008819
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:r7 - 0x000000E9

l00008815_1:
	word32 sp_25
	byte ZC_26
	word32 pc_27
	word32 r7_28
	word32 r6_29
	word32 r4_30
	word32 r5_31
	word32 r8_32
	word32 r10_33
	byte Z_34
	call fnFE7CB135 (retsize: 0;)
		uses: pc_7,r10_13,r4_10,r5_11,r6_9,r7_8,r8_12,sp_5,Z_14,ZC_6
		defs: pc_27,r10_33,r4_30,r5_31,r6_29,r7_28,r8_32,sp_25,Z_34,ZC_26
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:r7 - 0x000000E9

l00008819:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:r7 - 0x000000E9

MPU_xTaskCreate_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:r7 - 0x000000E9



void MPU_vTaskAllocateMPURegions(word32 r0, word32 r1, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC r0 r1 r6
// LiveOut:
// Trashed:
// Preserved: r7 sp
MPU_vTaskAllocateMPURegions_entry:
// DataOut: r0 r1 r6
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l0000884D:
	branch Z l00008851
// DataOut: r0 r1 r6
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l0000884D_1:
	__mcr(0x05, 0x00000002, r0, 0x06, 0x05, 0x00000005)
// DataOut: r0 r1 r6
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00008851:
	branch ZC l00008855
// DataOut: r0 r1 r6
// DataOut (flags): C
// SymbolicIn: sp:fp

l00008855:
	branch C l00008859
// DataOut: r0 r1 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008855_1:
	Mem18[r6 + -78:word64] = r1_r0
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008859:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008851_1:
	word32 sp_7
	byte Z_8
	word32 r0_9
	byte ZC_10
	word32 r7_11
	word32 pc_12
	byte C_13
	word32 r6_14
	word32 r1_15
	call Mem0[r7:byte] (retsize: 0;)
		uses: r7_5,sp_1,Z,ZC
		defs: C_13,pc_12,r0_9,r1_15,r6_14,r7_11,sp_7,Z_8,ZC_10
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

MPU_vTaskAllocateMPURegions_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7



void MPU_vTaskDelayUntil(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_vTaskDelayUntil_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_vTaskDelayUntil_entry:
// DataOut: r0
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008875:
	branch Z l00008879
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008875_1:
	__mcr(0x05, 0x00000002, r0, 0x06, 0x05, 0x00000005)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008879:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_vTaskDelay()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_vTaskDelay_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_vTaskDelay_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000889D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_vTaskSuspendAll()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZ
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_vTaskSuspendAll_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_vTaskSuspendAll_entry:
// DataOut:
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l000088C1:
	branch NZ l000088C5
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000088C1_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000088C5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_xTaskResumeAll()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xTaskResumeAll_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_xTaskResumeAll_entry:
// DataOut:
// DataOut (flags): C
// SymbolicIn: sp:fp

l000088E1:
	branch C l000088E5
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000088E1_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000088E5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_xTaskGetTickCount()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xTaskGetTickCount_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_xTaskGetTickCount_entry:
// DataOut:
// DataOut (flags): C
// SymbolicIn: sp:fp

l00008905:
	branch C l00008909
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008909:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008905_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_uxTaskGetNumberOfTasks()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_uxTaskGetNumberOfTasks_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_uxTaskGetNumberOfTasks_entry:
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008929:
	branch Z l0000892D
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008929_1:
	word32 sp_5
	byte Z_6
	call fnFFE08805 (retsize: 0;)
		uses: sp_1,Z
		defs: sp_5,Z_6
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000892D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_pcTaskGetName()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_pcTaskGetName_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_pcTaskGetName_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000894D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0000895D(word32 pc, word32 r0, word32 r3, word32 r6, word32 r7, word32 fp, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC fp ip pc r0 r3 r6 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000895D_entry:
// DataOut: fp ip pc r0 r3 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000895D:
	branch Z l00008961
// DataOut: fp ip pc r0 r3 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000895D_1:
	Mem52[r6 + -812:byte] = (byte) r0
// DataOut: fp ip pc r0 r3 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00008961:
	branch Z l00008965
// DataOut: fp ip pc r0 r3 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00008961_1:
	r3 = r3 + 0x00000FD0
// DataOut: fp ip pc r0 r3 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00008965:
	branch Z l00008969
// DataOut: fp ip pc r0 r3 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp lr:<invalid> r3:r3 + 0x00000FD0

l00008965_1:
	byte NZCV_47 = cond(!(r0 << 1))
	Z = NZCV_47 (alias)
	C = NZCV_47 (alias)
// DataOut: fp ip pc r3 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp lr:<invalid> r3:r3 + 0x00000FD0

l00008969:
	branch Z l0000896D
// DataOut: fp ip pc r3 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp lr:<invalid> r3:r3 + 0x00000FD0 r4:!(r0 << 1)

l00008969_1:
// DataOut: fp ip pc r3 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp lr:<invalid> r3:r3 + 0x00000FD0 r4:!(r0 << 1)

l0000896D:
	branch C l00008971
// DataOut: fp ip pc r3 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp lr:<invalid> r3:<invalid> r4:!(r0 << 1) r8:<invalid>

l0000896D_1:
	Mem37[r6:word32] = r3
	Mem39[r6 - 4:word32] = r7
	Mem41[r6 - 8:word32] = fp
	Mem43[r6 - 12:word32] = ip
// DataOut: pc
// DataOut (flags): NZCV
// SymbolicIn: sp:fp lr:<invalid> r3:<invalid> r4:!(r0 << 1) r8:<invalid>

l00008971:
	branch C l00008971_thunk_MPU_vTaskSetTimeOutState
// DataOut: pc
// DataOut (flags): NZV
// SymbolicIn: sp:fp lr:<invalid> r3:<invalid> r4:!(r0 << 1) r8:<invalid>

l00008971_thunk_MPU_vTaskSetTimeOutState:
	MPU_vTaskSetTimeOutState()
	return
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp lr:<invalid> r3:<invalid> r4:!(r0 << 1) r8:<invalid>
// Terminates process

l00008971_1:
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp lr:<invalid> r3:<invalid> r4:!(r0 << 1) r8:<invalid>

l00008971_thunk_MPU_vTaskSetTimeOutState:
	MPU_vTaskSetTimeOutState()
	return
// DataOut:
// DataOut (flags): NZV
// SymbolicIn: sp:fp lr:<invalid> r3:<invalid> r4:<invalid> r8:<invalid> r0:<invalid> r2:<invalid> r5:<invalid> r7:<invalid> pc:pc + 24
// Terminates process

fn0000895D_exit:
// DataOut:
// DataOut (flags): NZV
// SymbolicIn:



void MPU_vTaskSetTimeOutState()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_vTaskSetTimeOutState_exit:
// DataOut:
// DataOut (flags): NZV
// SymbolicIn:

MPU_vTaskSetTimeOutState_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008975:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_xTaskCheckForTimeOut(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xTaskCheckForTimeOut_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_xTaskCheckForTimeOut_entry:
// DataOut: r0
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008999:
	branch Z l0000899D
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008999_1:
	__mcr(0x05, 0x00000002, r0, 0x06, 0x05, 0x00000005)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000899D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_xTaskGenericNotify(word32 pc, word32 r0, word32 r1, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z pc r0 r1 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xTaskGenericNotify_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_xTaskGenericNotify_entry:
// DataOut: pc r0 r1 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000089C5:
	branch Z l000089C9
// DataOut: pc r0 r1 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000089C5_1:
	Mem7[r1 + -233:byte] = (byte) pc
// DataOut: r0 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000089C9:
	branch Z l000089CD
// DataOut: r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l000089C9_1:
	Mem4[r6:byte] = (byte) r0
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000089CD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_xTaskNotifyWait(word32 pc, word32 r0, word32 r1, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z pc r0 r1 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xTaskNotifyWait_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_xTaskNotifyWait_entry:
// DataOut: pc r0 r1 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000089FD:
	branch Z l00008A01
// DataOut: pc r0 r1 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000089FD_1:
	Mem7[r1 + -233:byte] = (byte) pc
// DataOut: r0 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008A01:
	branch Z l00008A05
// DataOut: r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008A01_1:
	Mem4[r6:byte] = (byte) r0
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008A05:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_ulTaskNotifyTake(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_ulTaskNotifyTake_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_ulTaskNotifyTake_entry:
// DataOut: r0
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008A35:
	branch Z l00008A39
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008A35_1:
	__mcr(0x05, 0x00000002, r0, 0x06, 0x05, 0x00000005)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008A39:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_xTaskNotifyStateClear()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xTaskNotifyStateClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_xTaskNotifyStateClear_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008A61:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_xQueueGenericCreate(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xQueueGenericCreate_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_xQueueGenericCreate_entry:
// DataOut: r0
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008A89:
	branch Z l00008A8D
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008A89_1:
	__mcr(0x05, 0x00000002, r0, 0x06, 0x05, 0x00000005)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008A8D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_xQueueGenericReset(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xQueueGenericReset_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_xQueueGenericReset_entry:
// DataOut: r0
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008AB9:
	branch Z l00008ABD
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008AB9_1:
	__mcr(0x05, 0x00000002, r0, 0x06, 0x05, 0x00000005)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008ABD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_xQueueGenericSend(word32 pc, word32 r0, word32 r1, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z pc r0 r1 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xQueueGenericSend_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_xQueueGenericSend_entry:
// DataOut: pc r0 r1 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008AE5:
	branch Z l00008AE9
// DataOut: pc r0 r1 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008AE5_1:
	Mem7[r1 + -233:byte] = (byte) pc
// DataOut: r0 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008AE9:
	branch Z l00008AED
// DataOut: r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008AE9_1:
	Mem4[r6:byte] = (byte) r0
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008AED:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_uxQueueMessagesWaiting()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_uxQueueMessagesWaiting_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_uxQueueMessagesWaiting_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008B1D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_uxQueueSpacesAvailable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_uxQueueSpacesAvailable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_uxQueueSpacesAvailable_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008B45:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_xQueueGenericReceive(word32 pc, word32 r0, word32 r1, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z pc r0 r1 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xQueueGenericReceive_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_xQueueGenericReceive_entry:
// DataOut: pc r0 r1 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008B6D:
	branch Z l00008B71
// DataOut: pc r0 r1 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008B6D_1:
	Mem7[r1 + -233:byte] = (byte) pc
// DataOut: r0 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008B71:
	branch Z l00008B75
// DataOut: r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008B71_1:
	Mem4[r6:byte] = (byte) r0
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008B75:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_xQueuePeekFromISR(word32 r0, word32 r3, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZV r0 r3 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xQueuePeekFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_xQueuePeekFromISR_entry:
// DataOut: r0 r3 r6
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l00008BA5:
	branch Z l00008BA9
// DataOut: r0 r3 r6
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l00008BA5_1:
	__mcr(0x05, 0x00000002, r0, 0x06, 0x05, 0x00000005)
// DataOut: r3 r6
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l00008BA9:
	branch NZV l00008BAD
// DataOut: r3 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008BA9_1:
	word32 sp_16
	word32 r0_18
	byte NZV_19
	call fnFFE088C9 (retsize: 0;)
		uses: NZV,r0,r3,r6,sp_1,Z
		defs: NZV_19,r0_18,r3_20,r6_21,sp_16,Z_17
// DataOut: r3 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008BAD:
	branch Z l00008BB1
// DataOut: r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008BAD_1:
	Mem14[r6:byte] = (byte) r3
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008BB1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 - 0x000001FC



void MPU_xQueueGetMutexHolder()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xQueueGetMutexHolder_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_xQueueGetMutexHolder_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008BD1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_xQueueCreateMutex()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xQueueCreateMutex_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_xQueueCreateMutex_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008BF9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_xQueueTakeMutexRecursive(word32 r0, word32 r3, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC r0 r3 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xQueueTakeMutexRecursive_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_xQueueTakeMutexRecursive_entry:
// DataOut: r0 r3 r6
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00008C21:
	branch Z l00008C25
// DataOut: r0 r3 r6
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00008C21_1:
	__mcr(0x05, 0x00000002, r0, 0x06, 0x05, 0x00000005)
// DataOut: r3 r6
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00008C25:
	branch ZC l00008C29
// DataOut: r3 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008C29:
	branch Z l00008C2D
// DataOut: r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008C29_1:
	Mem7[r6:byte] = (byte) r3
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008C2D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 - 0x000001FC

l00008C25_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_xQueueGiveMutexRecursive()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xQueueGiveMutexRecursive_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_xQueueGiveMutexRecursive_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008C4D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_vQueueDelete()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_vQueueDelete_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_vQueueDelete_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008C75:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_pvPortMalloc()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_pvPortMalloc_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_pvPortMalloc_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008C99:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_vPortFree()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_vPortFree_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_vPortFree_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008CC1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_vPortInitialiseBlocks()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_vPortInitialiseBlocks_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_vPortInitialiseBlocks_entry:
// DataOut:
// DataOut (flags): C
// SymbolicIn: sp:fp

l00008CE5:
	branch C l00008CE9
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008CE9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008CE5_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_xPortGetFreeHeapSize()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xPortGetFreeHeapSize_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_xPortGetFreeHeapSize_entry:
// DataOut:
// DataOut (flags): C
// SymbolicIn: sp:fp

l00008D05:
	branch C l00008D09
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008D09:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008D05_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_xEventGroupCreate()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xEventGroupCreate_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_xEventGroupCreate_entry:
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008D29:
	branch Z l00008D2D
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008D29_1:
	word32 sp_5
	byte Z_6
	call fnFFE08C05 (retsize: 0;)
		uses: sp_1,Z
		defs: sp_5,Z_6
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008D2D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_xEventGroupWaitBits(word32 pc, word32 r0, word32 r1, word32 r2, word32 r6, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC ip pc r0 r1 r2 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xEventGroupWaitBits_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_xEventGroupWaitBits_entry:
// DataOut: ip pc r0 r1 r2 r6
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00008D4D:
	branch ZC l00008D51
// DataOut: ip pc r0 r1 r2 r6
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00008D4D_1:
	pc = DPB(pc, 0x30E9, 16)
// DataOut: ip pc r0 r1 r2 r6
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00008D51:
	branch Z l00008D55
// DataOut: ip pc r0 r1 r2 r6
// DataOut (flags): ZC
// SymbolicIn: sp:fp pc:DPB(pc, 0x30E9, 16)

l00008D51_1:
	__mcr(0x05, 0x00000002, r0, 0x06, 0x00, 0x00000005)
// DataOut: ip pc r1 r2 r6
// DataOut (flags): ZC
// SymbolicIn: sp:fp pc:DPB(pc, 0x30E9, 16)

l00008D55:
	branch ZC l00008D59
// DataOut: ip pc r1 r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp pc:DPB(pc, 0x30E9, 16)

l00008D55_1:
	Mem7[r6 - 4:word32] = r1
	Mem10[r6 - 8:word32] = r2
	Mem11[r6 - 12:word32] = r6
	Mem13[r6 - 16:word32] = ip
	Mem14[r6 - 20:word32] = pc
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:DPB(pc, 0x30E9, 16)

l00008D59:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:DPB(pc, 0x30E9, 16)



void MPU_xEventGroupClearBits(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0
// LiveOut:
// Trashed:
// Preserved: r7 sp
MPU_xEventGroupClearBits_entry:
// DataOut: r0
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008D8D:
	branch Z l00008D91
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008D8D_1:
	__mcr(0x05, 0x00000002, r0, 0x06, 0x05, 0x00000005)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008D91:
	word32 sp_6
	byte Z_7
	word32 r0_8
	word32 r7_9
	word32 pc_10
	call Mem0[r7:byte] (retsize: 0;)
		uses: r7_4,sp_1,Z
		defs: pc_10,r0_8,r7_9,sp_6,Z_7
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

MPU_xEventGroupClearBits_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7



void MPU_xEventGroupSetBits(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xEventGroupSetBits_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_xEventGroupSetBits_entry:
// DataOut: r0
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008DB9:
	branch Z l00008DBD
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008DB9_1:
	__mcr(0x05, 0x00000002, r0, 0x06, 0x05, 0x00000005)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008DBD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_xEventGroupSync(word32 pc, word32 r0, word32 r1, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z pc r0 r1 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xEventGroupSync_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_xEventGroupSync_entry:
// DataOut: pc r0 r1 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008DE5:
	branch Z l00008DE9
// DataOut: pc r0 r1 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008DE5_1:
	Mem7[r1 + -233:byte] = (byte) pc
// DataOut: r0 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008DE9:
	branch Z l00008DED
// DataOut: r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008DE9_1:
	Mem4[r6:byte] = (byte) r0
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008DED:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_vEventGroupDelete()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_vEventGroupDelete_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

MPU_vEventGroupDelete_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008E1D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xCoRoutineCreate(word32 pc, word32 r8, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC pc r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xCoRoutineCreate_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xCoRoutineCreate_entry:
// DataOut: pc r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00008E41:
	branch ZC l00008E45
// DataOut: pc r8 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008E41_1:
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00008E45:
	branch Z l00008E49
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence pc:pc:<invalid>

l00008E49:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence pc:pc:<invalid>

l00008E45_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence pc:pc:<invalid>



void vCoRoutineAddToDelayedList(word32 cpsr, word32 itstate, word32 lr, word32 pc, word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r10, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV cpsr ip itstate lr pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vCoRoutineAddToDelayedList_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vCoRoutineAddToDelayedList_entry:
// DataOut: cpsr ip itstate lr pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008EF1:
	branch Z l00008EF5
// DataOut: cpsr ip itstate lr pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008EF5:
	branch V l00008EF9
// DataOut: cpsr ip itstate lr pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008EF5_1:
	Mem79[r8 + -844:byte] = (byte) r2
	r8 = r8 + -844
// DataOut: cpsr ip itstate lr pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008EF9:
	branch Z l00008EFD
// DataOut: cpsr ip itstate lr pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp r8:r8 + -844
// LocalsOut: fp(32)

l00008EF9_1:
	Mem65[r4:word32] = r0
	Mem68[r4 - 4:word32] = r1
	Mem69[r4 - 8:word32] = r2
	Mem71[r4 - 12:word32] = r3
	Mem73[r4 - 16:word32] = r5
	Mem75[r4 - 20:word32] = r6
	Mem76[r4 - 24:word32] = r8
	Mem77[r4 - 28:word32] = r10
// DataOut: cpsr ip itstate lr pc r0 r1 r10 r2 r5 r6 r7
// DataOut (flags): NZC
// SymbolicIn: sp:fp r8:r8 + -844
// LocalsOut: fp(32)

l00008EFD:
	branch Z l00008F01
// DataOut: cpsr ip itstate lr pc r0 r1 r10 r2 r5 r6 r7
// DataOut (flags): NZC
// SymbolicIn: sp:fp r8:r8 + -844
// LocalsOut: fp(32)

l00008EFD_1:
// DataOut: cpsr ip itstate lr pc r0 r1 r10 r2 r5 r6 r7
// DataOut (flags): NZC
// SymbolicIn: sp:fp r8:r8 + -844
// LocalsOut: fp(32)

l00008F01:
	branch C l00008F05
// DataOut: cpsr ip itstate lr pc r0 r1 r10 r2 r5 r6 r7
// DataOut (flags): NZC
// SymbolicIn: sp:fp r8:r8 + -844
// LocalsOut: fp(32)

l00008F01_1:
	Mem64[0x00008ECF:word64] = r7_r6
// DataOut: cpsr ip itstate lr pc r0 r1 r10 r2 r5 r6 r7
// DataOut (flags): NZC
// SymbolicIn: sp:fp r8:r8 + -844
// LocalsOut: fp(32)

l00008F05:
	branch NZ l00008F09
// DataOut: cpsr ip itstate lr pc r0 r1 r10 r2 r5 r6 r7
// DataOut (flags): C
// SymbolicIn: sp:fp r8:r8 + -844
// LocalsOut: fp(32)

l00008F05_1:
	__stcl(0x0D, 0x09, Mem0[r2 + -416:void])
	Mem61[0x0D:word32] = itstate
	Mem62[0x00000011:word32] = r2
// DataOut: cpsr ip lr pc r0 r1 r10 r5 r6 r7
// DataOut (flags): C
// SymbolicIn: sp:fp r8:r8 + -844
// LocalsOut: fp(32)

l00008F09:
	word32 r3_10 = pc + __ror(r0, 8) + C
	branch r3_10 != 0x00000000 l00008F11
// DataOut: cpsr ip lr r0 r1 r10 r3 r5 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r8:r8 + -844
// LocalsOut: fp(32)

l00008F0D_1:
	Mem56[lr:byte] = (byte) r10
// DataOut: cpsr ip lr r0 r1 r3 r5 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r8:r8 + -844 r3:<invalid>
// LocalsOut: fp(32)

l00008F11:
	word32 sp_17
	byte Z_18
	byte V_19
	word32 r2_20
	word32 r8_21
	word32 r4_22
	word32 r0_23
	word32 r1_24
	word32 r5_26
	word32 r6_27
	word32 r10_28
	byte C_29
	word32 pc_30
	byte NZ_31
	word32 itstate_32
	byte NZCV_33
	word32 lr_34
	byte NZV_35
	word32 cpsr_36
	word32 r7_37
	word32 ip_38
	word64 d17_39
	word64 d31_40
	word32 r3_25
	call fnFFE08BDF (retsize: 0;)
		uses: C_12,NZ_13,NZCV_11,NZV_16,pc,r0,r3_10,r8_5,sp_1,V_15,Z_14
		defs: C_29,cpsr_36,d17_39,d31_40,ip_38,itstate_32,lr_34,NZ_31,NZCV_33,NZV_35,pc_30,r0_23,r1_24,r10_28,r2_20,r3_25,r4_22,r5_26,r6_27,r7_37,r8_21,sp_17,V_19,Z_18
	branch C_29 l00008F19
// DataOut: cpsr ip lr r0 r1 r3 r5 r6 r7
// DataOut (flags): NZV
// SymbolicIn: sp:fp r8:r8 + -844 r3:<invalid> lr:lr - 0x0000006E
// LocalsOut: fp(32)

l00008F15_1:
	r3_25 = Mem0[r1_24:int16]
// DataOut: cpsr ip lr r0 r3 r5 r6 r7
// DataOut (flags): NZV
// SymbolicIn: sp:fp r8:r8 + -844 r3:<invalid> lr:lr - 0x0000006E
// LocalsOut: fp(32)

l00008F19:
	branch NZV_35 l00008F1D
// DataOut: cpsr ip lr r0 r3 r5 r6 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp r8:r8 + -844 r3:<invalid> lr:lr - 0x0000006E r1:r1
// LocalsOut: fp(32)

l00008F19_1:
	__stcl(0x00, 0x03, Mem0[r6_27 + -416:void])
	Mem51[0x00:word32] = cpsr_36
	Mem52[4:word32] = r6_27
// DataOut: ip lr r0 r3 r5 r6 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp r8:r8 + -844 r3:<invalid> lr:lr - 0x0000006E r1:r1
// LocalsOut: fp(32)

l00008F1D:
	branch Z_18 l00008F21
// DataOut: ip lr r0 r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 + -844 r3:<invalid> lr:lr - 0x0000006E r1:r1
// LocalsOut: fp(32)

l00008F1D_1:
	Mem43[r0_23:word32] = r3_25
	Mem44[r0_23 - 4:word32] = r5_26
	Mem45[r0_23 - 8:word32] = r6_27
	Mem46[r0_23 - 12:word32] = r7_37
	Mem47[r0_23 - 16:word32] = ip_38
	Mem48[r0_23 - 20:word32] = fp
	Mem49[r0_23 - 24:word32] = lr_34
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 + -844 r3:<invalid> lr:lr - 0x0000006E r1:r1

l00008F21:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 + -844 r3:<invalid> lr:lr - 0x0000006E r1:r1

l00008EF1_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vCoRoutineSchedule(word32 pc, word32 r0, word32 r1, word32 r7, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV pc r0 r1 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vCoRoutineSchedule_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vCoRoutineSchedule_entry:
// DataOut: pc r0 r1 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(8)

l00008F2D:
	branch N l00008F31
// DataOut: pc r0 r1 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(8)

l00008F2D_1:
	Mem74[r1 + -233:byte] = (byte) pc
// DataOut: r0 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(8)

l00008F31:
	branch C l00008F35
// DataOut: r0 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(8)

l00008F31_1:
	word32 sp_61
	byte N_62
	word32 pc_63
	word32 r1_64
	word32 fp_71
	call fn01B63C6D (retsize: 0;)
		uses: C,fp,N,NZ,NZV,pc,r0,r1,r7,r8,sp_1,Z,ZC
		defs: C_65,fp_71,N_62,NZ_69,NZV_72,pc_63,r0_67,r1_64,r7_68,r8_73,sp_61,Z_66,ZC_70
// DataOut: r0 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(8)

l00008F35:
	branch Z l00008F39
// DataOut: r0 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(8)

l00008F35_1:
	Mem60[r7 + -179:word32] = r0
// DataOut: r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(8)

l00008F39:
	branch NZ l00008F3D
// DataOut: r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r7:r7 + -179
// LocalsOut: fp(8)

l00008F39_1:
// DataOut: r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r7:r7 + -179
// LocalsOut: fp(8)

l00008F3D:
	branch ZC l00008F41
// DataOut: r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r7:r7 + -179
// LocalsOut: fp(8)

l00008F3D_1:
// DataOut: r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r7:r7 + -179
// LocalsOut: fp(8)

l00008F41:
	branch NZV l00008F45
// DataOut: r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r7:r7 + -179 fp:0x00003FF0
// LocalsOut: fp(8)

l00008F41_1:
// DataOut: r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r7:r7 + -179 fp:0x00003FF0
// LocalsOut: fp(8)

l00008F45:
	branch NZV l00008F49
// DataOut: r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r7:r7 + -179 fp:0x00003FF0
// LocalsOut: fp(8)

l00008F45_1:
// DataOut: r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r7:r7 + -179 fp:0x00003FF0
// LocalsOut: fp(8)

l00008F49:
	branch C l00008F4D
// DataOut: r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r7:r7 + -179 fp:0x00003FF0
// LocalsOut: fp(8)

l00008F49_1:
	word32 sp_45
	byte N_46
	word32 pc_47
	word32 r1_48
	byte C_49
	word32 r0_51
	word32 r7_52
	byte NZ_53
	byte ZC_54
	word32 fp_55
	byte NZV_56
	call fnFE3DCF1D (retsize: 0;)
		uses: C_21,fp_28,N_24,NZ_17,NZV_14,pc_23,r0_19,r1_22,r7_27,r8_26,sp_25,Z_20,ZC_16
		defs: C_49,fp_55,N_46,NZ_53,NZV_56,pc_47,r0_51,r1_48,r7_52,r8_57,sp_45,Z_50,ZC_54
// DataOut: r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r7:r7 + -179 fp:0x00003FF0
// LocalsOut: fp(8)

l00008F4D:
	branch Z l00008F51
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7 + -179 fp:0x00003FF0
// LocalsOut: fp(8)

l00008F4D_1:
	Mem43[r8:byte] = (byte) fp
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7 + -179 fp:0x00003FF0

l00008F51:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7 + -179 fp:0x00003FF0 r8:r8 - 0x00000C6E



void xCoRoutineRemoveFromEventList(word32 r0, word32 r1, word32 r2, word32 r6, byte bArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV r0 r1 r2 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xCoRoutineRemoveFromEventList_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xCoRoutineRemoveFromEventList_entry:
// DataOut: r0 r1 r2 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009095:
	branch NZV l00009099
// DataOut: r0 r1 r2 r6
// DataOut (flags): NZC
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009099:
	branch Z l0000909D
// DataOut: r0 r1 r2 r6
// DataOut (flags): NZC
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009099_1:
// DataOut: r1 r2 r6
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l0000909D:
	branch C l000090A1
// DataOut: r1 r2 r6
// DataOut (flags): NZ
// SymbolicIn: sp:<invalid> 0(fp):(byte) r0

l0000909D_1:
	Mem20[r6:word64] = r2_r1
// DataOut: r1
// DataOut (flags): NZ
// SymbolicIn: sp:<invalid> 0(fp):(byte) r0

l000090A1:
	branch NZ l000090A5
// DataOut: r1
// DataOut (flags): N
// SymbolicIn: sp:<invalid> r6:r6 - r1 0(fp):(byte) r0

l000090A5:
	branch N l000090A9
// DataOut: r1
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:r6 - r1 0(fp):(byte) r0

l000090A5_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:r6 - r1 0(fp):(byte) r0

l000090A9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:r6 - r1 r0:<invalid> r1:r1 + 0x000005F9 0(fp):(byte) r0

l000090A1_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:r6 - r1 0(fp):(byte) r0

l00009095_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void GPIOGetIntNumber(word32 pc, word32 r0, word32 r1, word32 r2, word32 r3, word32 r6, word32 r8, word32 fp, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZV fp ip pc r0 r1 r2 r3 r6 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
GPIOGetIntNumber_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

GPIOGetIntNumber_entry:
// DataOut: fp ip pc r0 r1 r2 r3 r6 r8
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000090C5:
	branch Z l000090C9
// DataOut: fp ip pc r0 r1 r2 r3 r6 r8
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000090C5_1:
	Mem11[r2 - 4:word32] = r0
	Mem14[r2 - 8:word32] = r1
	Mem16[r2 - 12:word32] = r3
	Mem18[r2 - 16:word32] = r6
	Mem20[r2 - 20:word32] = fp
	Mem22[r2 - 24:word32] = ip
	Mem24[r2 - 28:word32] = pc
// DataOut: r8
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000090C9:
	branch NZV l000090CD
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l000090C9_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000090CD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r8:r8 - 0x00000080



void GPIODirModeSet(word32 pc, word32 r0, word32 r3, word32 r4, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC pc r0 r3 r4 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
GPIODirModeSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

GPIODirModeSet_entry:
// DataOut: pc r0 r3 r4 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l0000910D:
	branch Z l00009111
// DataOut: pc r0 r3 r4 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l0000910D_1:
	byte NZCV_57 = cond(r4 ^ 0x000000F8)
	r0 = r4 ^ 0x000000F8
	Z = NZCV_57 (alias)
	ZC = NZCV_57 (alias)
	C = NZCV_57 (alias)
// DataOut: pc r0 r3 r4 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00009111:
	branch Z l00009115
// DataOut: pc r0 r3 r4 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:r4 ^ 0x000000F8

l00009111_1:
	Mem54[0x00009119:word32] = r0
// DataOut: r0 r3 r4 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:r4 ^ 0x000000F8

l00009115:
	branch ZC l00009119
// DataOut: r0 r3 r4 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:r4 ^ 0x000000F8 pc:pc - 0x000001F0

l00009115_1:
	word32 sp_43
	word32 r0_45
	word32 r4_46
	byte NZCV_47
	word32 pc_48
	byte ZC_49
	word32 ip_50
	call fn010CC019 (retsize: 0;)
		uses: C_10,ip,NZCV_11,pc_13,r0_7,r3,r4,r8,sp_1,Z_8,ZC_9
		defs: C_53,ip_50,NZCV_47,pc_48,r0_45,r3_52,r4_46,r8_51,sp_43,Z_44,ZC_49
// DataOut: r0 r3 r4 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:r4 ^ 0x000000F8 pc:pc - 0x000001F0

l00009119:
	branch Z l0000911D
// DataOut: r0 r3 r4 r8
// DataOut (flags): C
// SymbolicIn: sp:fp r0:r4 ^ 0x000000F8 pc:pc - 0x000001F0

l00009119_1:
	C = cond((r3 >> 32) - r8 - C) (alias)
// DataOut: r0 r4 r8
// DataOut (flags): C
// SymbolicIn: sp:fp r0:r4 ^ 0x000000F8 pc:pc - 0x000001F0

l0000911D:
	branch C l00009121
// DataOut: r0 r4 r8
// DataOut (flags): C
// SymbolicIn: sp:fp r0:r4 ^ 0x000000F8 pc:pc - 0x000001F0 ip:<invalid>

l0000911D_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r4 ^ 0x000000F8 pc:pc - 0x000001F0 ip:<invalid>

l00009121:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:r4 ^ 0x000000F8 pc:pc - 0x000001F0 ip:<invalid>



void GPIODirModeGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
GPIODirModeGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

GPIODirModeGet_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009135:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void GPIOIntTypeSet(word32 pc, word32 r0, word32 r3, word32 r4, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV pc r0 r3 r4 r8
// LiveOut:
// Trashed: NZCV lr pc r0 r1 r6 r8
// Preserved: sp
GPIOIntTypeSet_entry:
// DataOut: pc r0 r3 r4 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000915D:
	branch Z l00009161
// DataOut: pc r0 r3 r4 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000915D_1:
	byte NZCV_170 = cond(r4 ^ 0x00F80000)
	r0 = r4 ^ 0x00F80000
	Z = NZCV_170 (alias)
	ZC = NZCV_170 (alias)
	NZV = NZCV_170 (alias)
	NZV = NZCV_170 (alias)
	C = NZCV_170 (alias)
	N = NZCV_170 (alias)
// DataOut: pc r0 r3 r4 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009161:
	branch Z l00009165
// DataOut: pc r0 r3 r4 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:r4 ^ 0x00F80000

l00009161_1:
	Mem167[0x00009169:word32] = r0
// DataOut: pc r0 r3 r4 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:r4 ^ 0x00F80000

l00009165:
	branch ZC l00009169
// DataOut: pc r0 r3 r4 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:r4 ^ 0x00F80000 pc:pc - 0x000001F0

l00009165_1:
	word32 sp_148
	byte NZCV_152
	word32 pc_153
	byte ZC_154
	word32 r1_156
	word32 r6_157
	word32 lr_158
	word32 r2_164
	word32 r10_165
	word32 fp_166
	call fn010CC069 (retsize: 0;)
		uses: C_15,fp,lr,N_16,NZCV_10,NZV_13,NZV_14,pc_19,r0_17,r1,r10,r2,r3,r4,r6,r8,sp_1,Z_11,ZC_12
		defs: C_159,fp_166,lr_158,N_163,NZCV_152,NZV_160,NZV_162,pc_153,r0_150,r1_156,r10_165,r2_164,r3_161,r4_151,r6_157,r8_155,sp_148,Z_149,ZC_154
// DataOut: pc r0 r3 r4 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:r4 ^ 0x00F80000 pc:pc - 0x000001F0

l00009169:
	branch Z l0000916D
// DataOut: pc r0 r3 r4 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:r4 ^ 0x00F80000 pc:pc - 0x000001F0

l0000916D:
	branch Z l00009171
// DataOut: pc r0 r3 r4 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:r4 ^ 0x00F80000 pc:pc - 0x000001F0

l0000916D_1:
	r8 = r8 + 0x00000034
// DataOut: pc r0 r3 r4 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:r4 ^ 0x00F80000 pc:pc - 0x000001F0

l00009171:
	branch Z l00009175
// DataOut: pc r0 r3 r4 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r0:r4 ^ 0x00F80000 pc:pc - 0x000001F0 r8:r8 + 0x00000034

l00009171_1:
	byte NZCV_139 = cond(0x40000003 - r0 - C)
	Z = NZCV_139 (alias)
	NZV = NZCV_139 (alias)
	NZV = NZCV_139 (alias)
	N = NZCV_139 (alias)
// DataOut: pc r3 r4 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r0:r4 ^ 0x00F80000 pc:pc - 0x000001F0 r8:r8 + 0x00000034

l00009175:
	branch Z l00009179
// DataOut: pc r3 r4 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r0:r4 ^ 0x00F80000 pc:pc - 0x000001F0 r8:r8 + 0x00000034 r1:<invalid>

l00009175_1:
	word32 sp_119
	word32 r0_121
	byte NZCV_123
	word32 pc_124
	byte ZC_125
	word32 r1_127
	word32 r6_128
	word32 lr_129
	bool C_130
	word32 r2_135
	word32 r10_136
	word32 fp_137
	call fnFEFCE1B9 (retsize: 0;)
		uses: C_61,fp_41,lr_46,N_62,NZCV_56,NZV_59,NZV_60,pc_42,r0_43,r1_63,r10_40,r2_39,r3_29,r4_31,r6_45,r8_55,sp_54,Z_57,ZC_58
		defs: C_130,fp_137,lr_129,N_134,NZCV_123,NZV_131,NZV_133,pc_124,r0_121,r1_127,r10_136,r2_135,r3_132,r4_122,r6_128,r8_126,sp_119,Z_120,ZC_125
// DataOut: pc r3 r4 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r0:r4 ^ 0x00F80000 pc:pc - 0x000001F0 r8:r8 + 0x00000034 r1:<invalid>

l00009179:
	branch NZV l0000917D
// DataOut: pc r3 r4 r8
// DataOut (flags): NZV
// SymbolicIn: sp:<invalid> r0:r4 ^ 0x00F80000 pc:pc - 0x000001F0 r8:r8 + 0x00000034 r1:<invalid>

l00009179_1:
	r8 = r3 - (r3 >> 22)
// DataOut: pc r4 r8
// DataOut (flags): NZV
// SymbolicIn: sp:<invalid> r0:r4 ^ 0x00F80000 pc:pc - 0x000001F0 r8:r8 + 0x00000034 r1:<invalid>

l0000917D:
	branch NZV l00009181
// DataOut: pc r4 r8
// DataOut (flags): NZ
// SymbolicIn: sp:<invalid> r0:r4 ^ 0x00F80000 pc:pc - 0x000001F0 r8:<invalid> r1:<invalid>

l0000917D_1:
	r4 = r4 + r8
// DataOut: pc r4
// DataOut (flags): NZ
// SymbolicIn: sp:<invalid> r0:r4 ^ 0x00F80000 pc:pc - 0x000001F0 r8:<invalid> r1:<invalid>

l00009181:
	branch N l00009185
// DataOut: pc r4
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r0:<invalid> pc:pc - 0x000001F0 r8:<invalid> r1:<invalid> r4:<invalid>

l00009181_1:
	Z = cond(r4 ^ 0x0000F800) (alias)
// DataOut: pc
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r0:<invalid> pc:pc - 0x000001F0 r8:<invalid> r1:<invalid> r4:<invalid>

l00009185:
	branch Z l00009189
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> pc:pc - 0x000001F0 r8:<invalid> r1:<invalid> r4:<invalid>

l00009185_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> pc:pc - 0x000001F0 r8:<invalid> r1:<invalid> r4:<invalid>

l00009189:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> pc:<invalid> r8:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> r10:<invalid> fp:<invalid> lr:<invalid>

l00009169_1:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r4 ^ 0x00F80000 pc:pc - 0x000001F0

GPIOIntTypeSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> pc:pc - 0x000001F0 r1:<invalid> r6:<invalid> lr:<invalid> r8:r8 + 20



void GPIOIntTypeGet(word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r8
// LiveOut:
// Trashed: ip lr r0 r1 r5 r8
// Preserved: sp
GPIOIntTypeGet_entry:
// DataOut: r8
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009195:
	branch Z l00009199
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009199:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009195_1:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

GPIOIntTypeGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r5:<invalid> ip:<invalid> lr:<invalid> r8:r8 + 24



void GPIOPadConfigSet(word32 pc, word32 r0, word32 r1, word32 r3, word32 r5, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV pc r0 r1 r3 r5 r8
// LiveOut:
// Trashed: NZCV ip lr pc r0 r1 r2 r5 r6 r8 sp
// Preserved:
GPIOPadConfigSet_entry:
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000091C9:
	branch Z l000091CD
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000091C9_1:
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000091CD:
	branch Z l000091D1
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:r8 + 0x00000004

l000091CD_1:
	r1 = !(r5 >> 4)
	byte NZCV_107 = cond(r1)
	r1_r0 = SEQ(r1, r0) (alias)
	Z = NZCV_107 (alias)
	NZV = NZCV_107 (alias)
	NZV = NZCV_107 (alias)
	ZC = NZCV_107 (alias)
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:r8 + 0x00000004

l000091D1:
	branch Z l000091D5
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:r8 + 0x00000004 r1:!(r5 >> 4)

l000091D5:
	branch NZV l000091D9
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:r8 + 0x00000004 r1:!(r5 >> 4)

l000091D5_1:
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:r8 + 0x00000004 r1:!(r5 >> 4)

l000091D9:
	branch NZV l000091DD
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r1:!(r5 >> 4)

l000091D9_1:
	Mem102[r5:word64] = r1_r0
	r5 = r5 + 0xFFFFFFF8
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r1:!(r5 >> 4)

l000091DD:
	branch Z l000091E1
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r1:!(r5 >> 4) r5:r5 + 0xFFFFFFF8

l000091DD_1:
	r0 = r5 - 0xF8000000
	r1_r0 = SEQ(r1, r0) (alias)
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r1:!(r5 >> 4) r5:r5 + 0xFFFFFFF8

l000091E1:
	branch Z l000091E5
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r1:!(r5 >> 4) r5:r5 + 0xFFFFFFF8 r0:r5 - 0xF8000010

l000091E1_1:
	Mem98[0x000091E9:word32] = r0
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r1:!(r5 >> 4) r5:r5 + 0xFFFFFFF8 r0:r5 - 0xF8000010

l000091E5:
	branch ZC l000091E9
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r1:!(r5 >> 4) r5:r5 + 0xFFFFFFF8 r0:r5 - 0xF8000010 pc:pc - 0x000002F0

l000091E9:
	branch Z l000091ED
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r1:!(r5 >> 4) r5:r5 + 0xFFFFFFF8 r0:r5 - 0xF8000010 pc:pc - 0x000002F0

l000091E9_1:
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r1:!(r5 >> 4) r5:r5 + 0xFFFFFFF8 r0:r5 - 0xF8000010 pc:pc - 0x000002F0

l000091ED:
	branch Z l000091F1
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r1:!(r5 >> 4) r5:r5 + 0xFFFFFFF8 r0:r5 - 0xF8000010 pc:pc - 0x000002F0 ip:<invalid>

l000091F1:
	branch Z l000091F5
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r1:!(r5 >> 4) r5:r5 + 0xFFFFFFF8 r0:r5 - 0xF8000010 pc:pc - 0x000002F0 ip:<invalid>

l000091F1_1:
	r1 = Mem0[r0:byte]
	r1_r0 = SEQ(r1, r0 + 0x00000245) (alias)
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r1:!(r5 >> 4) r5:r5 + 0xFFFFFFF8 r0:r5 - 0xF8000010 pc:pc - 0x000002F0 ip:<invalid>

l000091F5:
	branch Z l000091F9
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r1:<invalid> r5:r5 + 0xFFFFFFF8 r0:<invalid> pc:pc - 0x000002F0 ip:<invalid>

l000091F9:
	branch NZV l000091FD
// DataOut: pc r0 r1 r3 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r1:<invalid> r5:r5 + 0xFFFFFFF8 r0:<invalid> pc:pc - 0x000002F0 ip:<invalid>

l000091F9_1:
// DataOut: pc r0 r1 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r1:<invalid> r5:r5 + 0xFFFFFFF8 r0:<invalid> pc:pc - 0x000002F0 ip:<invalid>

l000091FD:
	branch Z l00009201
// DataOut: pc r0 r1 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r1:<invalid> r5:r5 + 0xFFFFFFF8 r0:<invalid> pc:pc - 0x000002F0 ip:<invalid>

l000091FD_1:
	r1_r0 = SEQ(r1, r5 - 0x00F80000) (alias)
// DataOut: pc r0 r1 r5 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r1:<invalid> r5:r5 + 0xFFFFFFF8 r0:<invalid> pc:pc - 0x000002F0 ip:<invalid>

l00009201:
	branch NZV l00009205
// DataOut: pc r0 r1 r5 r8
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r8:<invalid> r1:<invalid> r5:r5 + 0xFFFFFFF8 r0:<invalid> pc:pc - 0x000002F0 ip:<invalid>

l00009201_1:
	Mem88[0x00009209:word64] = r1_r0
// DataOut: r1 r5 r8
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r8:<invalid> r1:<invalid> r5:r5 + 0xFFFFFFF8 r0:<invalid> pc:pc - 0x000002F0 ip:<invalid>

l00009205:
	branch Z l00009209
// DataOut: r1 r5 r8
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r8:<invalid> r1:<invalid> r5:r5 + 0xFFFFFFF8 r0:<invalid> pc:<invalid> ip:<invalid>

l00009205_1:
	Mem86[r5:word32] = r1
// DataOut: r8
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r8:<invalid> r1:<invalid> r5:r5 + 0xFFFFFFF8 r0:<invalid> pc:<invalid> ip:<invalid>

l00009209:
	branch ZC l00009209_then
	word32 sp_65
	byte Z_66
	word32 r8_67
	word32 r1_68
	word32 r5_69
	byte NZCV_70
	byte NZV_71
	word32 r3_72
	byte NZV_73
	word32 r0_74
	word32 pc_75
	byte ZC_76
	word32 ip_77
	word32 r2_78
	word32 r6_79
	word32 lr_80
	call fn010CBD0D (retsize: 0;)
		uses: ip_28,lr,NZCV_16,NZV_14,NZV_15,pc_61,r0_60,r1_56,r2,r3,r5_21,r6,r8_58,sp_4,Z_17,ZC_13
		defs: ip_77,lr_80,NZCV_70,NZV_71,NZV_73,pc_75,r0_74,r1_68,r2_78,r3_72,r5_69,r6_79,r8_67,sp_65,Z_66,ZC_76
	return
// DataOut: r8
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r8:<invalid> r1:<invalid> r5:<invalid> r0:<invalid> pc:<invalid> ip:<invalid>

l00009209_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r1:<invalid> r5:<invalid> r0:<invalid> pc:<invalid> ip:<invalid>

l0000920D:
	branch Z_66 l00009211
// DataOut: r8
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r8:<invalid> r1:<invalid> r5:<invalid> r0:<invalid> pc:<invalid> ip:<invalid>

l00009211:
	branch Z_66 l00009215
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r1:<invalid> r5:<invalid> r0:<invalid> pc:<invalid> ip:<invalid>

l00009215:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r1:<invalid> r5:<invalid> r0:<invalid> pc:<invalid> ip:<invalid>

l00009211_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r1:<invalid> r5:<invalid> r0:<invalid> pc:<invalid> ip:<invalid>

l0000920D_1:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r1:<invalid> r5:<invalid> r0:<invalid> pc:<invalid> ip:<invalid>

l000091F5_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r1:<invalid> r5:r5 + 0xFFFFFFF8 r0:<invalid> pc:pc - 0x000002F0 ip:<invalid>

l000091ED_1:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r1:!(r5 >> 4) r5:r5 + 0xFFFFFFF8 r0:r5 - 0xF8000010 pc:pc - 0x000002F0 ip:<invalid>

GPIOPadConfigSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r1:<invalid> r5:<invalid> r0:<invalid> pc:<invalid> ip:<invalid> r2:<invalid> r6:<invalid> lr:<invalid>

l000091E5_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r1:!(r5 >> 4) r5:r5 + 0xFFFFFFF8 r0:r5 - 0xF8000010 pc:pc - 0x000002F0

l000091D1_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:r8 + 0x00000004 r1:!(r5 >> 4)



void GPIOPadConfigGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
GPIOPadConfigGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

GPIOPadConfigGet_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000925D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void GPIOPinIntEnable(word32 r0, word32 r1, word32 r3, word32 r4, word32 r7, word32 r8, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV r0 r1 r10 r3 r4 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
GPIOPinIntEnable_entry:
// DataOut: r0 r1 r10 r3 r4 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000092E1:
	branch Z l000092E5
// DataOut: r0 r1 r10 r3 r4 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000092E1_1:
	r3 = Mem0[r4 - -4:word32]
	r4 = Mem0[r4:word32] + 20
// DataOut: r0 r1 r10 r3 r4 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000092E5:
	branch Z l000092E9
// DataOut: r0 r1 r10 r3 r4 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> ip:<invalid>

l000092E5_1:
	NZV = cond((r3 >> 32) - r8 - C) (alias)
// DataOut: r0 r1 r10 r4 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> ip:<invalid>

l000092E9:
	branch NZV l000092E9_thunk_GPIOPinIntDisable
// DataOut: r0 r1 r10 r4 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> ip:<invalid>

l000092E9_thunk_GPIOPinIntDisable:
	GPIOPinIntDisable(r1, r4, r8, r10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> ip:<invalid>
// Terminates process

l000092E9_1:
// DataOut: r1 r10 r4 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> ip:<invalid>

l000092E9_thunk_GPIOPinIntDisable:
	GPIOPinIntDisable(r1, r4, r8, r10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> ip:<invalid>
// Terminates process

GPIOPinIntEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void GPIOPinIntDisable(word32 r1, word32 r4, word32 r8, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV r1 r10 r4 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
GPIOPinIntDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

GPIOPinIntDisable_entry:
// DataOut: r1 r10 r4 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l000092ED:
	branch C l000092F1
// DataOut: r1 r10 r4 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l000092ED_1:
	byte NZCV_22 = cond(r4 ^ 0x000000F8)
	NZV = NZCV_22 (alias)
	V = NZCV_22 (alias)
// DataOut: r1 r10 r4 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l000092F1:
	branch NZV l000092F5
// DataOut: r1 r10 r4 r8
// DataOut (flags): V
// SymbolicIn: sp:fp

l000092F1_1:
	word32 r0_21 = r1 & __ror(r10, 3)
// DataOut: r4 r8
// DataOut (flags): V
// SymbolicIn: sp:fp

l000092F5:
	branch V l000092F9
// DataOut: r4 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>

l000092F5_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>

l000092F9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r4:r4 - r8



void GPIOPinIntStatus(word32 pc, word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 fp, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV fp ip pc r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// LiveOut:
// Trashed: NZCV fp ip lr pc r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
GPIOPinIntStatus_entry:
// DataOut: fp ip pc r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000092FD:
	branch Z l00009301
// DataOut: fp ip pc r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000092FD_1:
	r8 = r8 + 0x000000B9
// DataOut: fp ip pc r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009301:
	branch NZV l00009305
// DataOut: fp ip pc r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r8:r8 + 0x000000B9

l00009301_1:
	r7 = r7 - r4
// DataOut: fp ip pc r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r8:r8 + 0x000000B9

l00009305:
	branch V l00009309
// DataOut: fp ip pc r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r8:r8 + 0x000000B9 r7:r7 - r4

l00009305_1:
	Mem40[r4:word64] = r2_r1
	r4 = r4 - r8
// DataOut: fp ip pc r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r8:r8 + 0x000000B9 r7:r7 - r4

l00009309:
	branch NZV l00009309_thunk_GPIOPinIntClear
// DataOut: fp ip pc r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): CV
// SymbolicIn: sp:<invalid> r8:r8 + 0x000000B9 r7:r7 - r4 r4:r4 - (r8 + 0x00000172)

l00009309_thunk_GPIOPinIntClear:
	GPIOPinIntClear(pc, r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, fp, ip)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:r8 + 0x000000B9 r7:r7 - r4 r4:r4 - (r8 + 0x00000172)

l00009309_1:
	word32 r0_22 = pc + (r7 >> 32) + C
// DataOut: fp ip pc r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): CV
// SymbolicIn: sp:<invalid> r8:r8 + 0x000000B9 r7:r7 - r4 r4:r4 - (r8 + 0x00000172)

l00009309_thunk_GPIOPinIntClear:
	GPIOPinIntClear(pc, r0_22, r1, r2, r3, r4, r5, r6, r7, r8, r9, fp, ip)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:r8 + 0x000000B9 r7:r7 - r4 r4:r4 - (r8 + 0x00000172) r0:<invalid>

GPIOPinIntStatus_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r7:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> pc:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:<invalid> fp:<invalid> r2:<invalid> lr:<invalid>



void GPIOPinIntClear(word32 pc, word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 fp, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  CV fp ip pc r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// LiveOut:
// Trashed: NZCV fp ip lr pc r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved: sp
GPIOPinIntClear_entry:
// DataOut: fp ip pc r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000930D:
	branch V l00009311
// DataOut: fp ip pc r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000930D_1:
	r1 = Mem0[r4:int16]
	r4 = r4 - r8
// DataOut: fp ip pc r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009311:
	branch C l00009311_thunk_GPIOPortIntRegister
// DataOut: fp ip pc r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r1:<invalid> r4:r4 - r8

l00009311_thunk_GPIOPortIntRegister:
	GPIOPortIntRegister(r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, fp, ip)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r4:r4 - r8

l00009311_1:
	word32 r0_11 = Mem0[0x00009319:word32]
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r1:<invalid> r4:r4 - r8

l00009311_thunk_GPIOPortIntRegister:
	GPIOPortIntRegister(r0_11, r1, r2, r3, r4, r5, r6, r7, r8, r9, fp, ip)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r4:r4 - r8 r0:<invalid> pc:pc + 0x00000047

GPIOPinIntClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r4:<invalid> r0:<invalid> pc:pc + 0x00000047 r3:<invalid> r6:<invalid> ip:<invalid> r5:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> lr:<invalid> r8:<invalid>



void GPIOPortIntRegister(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 fp, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// LiveOut:
// Trashed: NZCV fp ip lr r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved: sp
GPIOPortIntRegister_entry:
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009315:
	branch ZC l00009319
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009315_1:
	r0 = Mem0[r5:word32]
	r1 = Mem0[r5 + 4:word32]
	r3 = Mem0[r5 + 8:word32]
	r6 = Mem0[r5 + 12:word32]
	ip = Mem0[r5 + 16:word32]
	r5 = r5 + 20
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009319:
	branch Z l0000931D
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20

l00009319_1:
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20

l0000931D:
	branch NZ l00009321
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20

l0000931D_1:
	fp = Mem0[r1:int8]
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20

l00009321:
	branch NV l00009325
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid>

l00009321_1:
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid>

l00009325:
	branch ZC l00009329
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid>

l00009329:
	branch Z l0000932D
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid>

l00009329_1:
// DataOut: fp ip r0 r1 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid>

l0000932D:
	branch Z l00009331
// DataOut: fp ip r0 r1 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid>

l0000932D_1:
// DataOut: fp ip r0 r1 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid>

l00009331:
	branch C l00009335
// DataOut: fp ip r0 r1 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid>

l00009331_1:
	r8 = r8 + 0x00000080
// DataOut: fp ip r0 r1 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid>

l00009335:
	branch Z l00009339
// DataOut: fp ip r0 r1 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> lr:<invalid> r8:r8 + 0x00000080

l00009335_1:
	fp = (r6 >> 26) - r8 - C
	byte NZCV_112 = cond(fp)
	NZ = NZCV_112 (alias)
	C = NZCV_112 (alias)
	ZC = NZCV_112 (alias)
	Z = NZCV_112 (alias)
// DataOut: fp ip r0 r1 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> lr:<invalid> r8:r8 + 0x00000080

l00009339:
	branch NZ l0000933D
// DataOut: fp ip r0 r1 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> lr:<invalid> r8:r8 + 0x00000080

l00009339_1:
// DataOut: fp ip r0 r1 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> lr:<invalid> r8:r8 + 0x00000080

l0000933D:
	branch ZC l00009341
// DataOut: fp ip r0 r1 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> lr:<invalid> r8:r8 + 0x00000080

l0000933D_1:
	Mem100[fp:word32] = r0
	Mem101[fp - 4:word32] = r3
	Mem102[fp - 8:word32] = r4
	Mem103[fp - 12:word32] = r5
	Mem105[fp - 16:word32] = r7
	Mem106[fp - 20:word32] = r8
	Mem108[fp - 24:word32] = r9
	Mem109[fp - 28:word32] = fp
	Mem110[fp - 32:word32] = ip
// DataOut: r0 r1 r3 r4 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> lr:<invalid> r8:r8 + 0x00000080

l00009341:
	branch Z l00009345
// DataOut: r0 r1 r3 r4 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> lr:<invalid> r8:r8 + 0x00000080

l00009341_1:
// DataOut: r1 r3 r4 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> lr:<invalid> r8:r8 + 0x00000080

l00009345:
	branch ZC l00009349
// DataOut: r1 r3 r4 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> lr:<invalid> r8:r8 + 0x00000080

l00009349:
	branch Z l0000934D
// DataOut: r1 r4 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> lr:<invalid> r8:r8 + 0x00000080

l00009349_1:
// DataOut: r4 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> lr:<invalid> r8:r8 + 0x00000080

l0000934D:
	branch Z l00009351
// DataOut: r4 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> lr:<invalid> r8:r8 + 0x00000080

l0000934D_1:
// DataOut: r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> lr:<invalid> r8:r8 + 0x00000080

l00009351:
	branch C l00009355
// DataOut: r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> lr:<invalid> r8:r8 + 0x00000080

l00009351_1:
	r8 = r8 + 0x00000080
// DataOut: r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> lr:<invalid> r8:r8 + 0x00000080

l00009355:
	branch Z l00009359
// DataOut: r6 r8
// DataOut (flags): C
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> lr:<invalid> r8:<invalid>

l00009355_1:
	C = cond((r6 >> 26) - r8 - C) (alias)
// DataOut:
// DataOut (flags): C
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> lr:<invalid> r8:<invalid>

l00009359:
	branch C l0000935D
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> lr:<invalid> r8:<invalid>

l00009359_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> lr:<invalid> r8:<invalid>

l0000935D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> lr:<invalid> r8:<invalid>

l00009345_1:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> lr:<invalid> r8:r8 + 0x00000080

l00009325_1:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid>

GPIOPortIntRegister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:<invalid> fp:<invalid> r2:<invalid> r4:<invalid> r7:<invalid> lr:<invalid> r8:r8 + 0x00000080



void GPIOPortIntUnregister(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 fp, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// LiveOut:
// Trashed: NZCV fp ip lr r0 r1 r2 r3 r4 r5 r6 r7 r9 sp
// Preserved: sp
GPIOPortIntUnregister_entry:
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000093B1:
	branch ZC l000093B5
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000093B1_1:
	r1 = Mem0[r5 + 4:word32]
	r3 = Mem0[r5 + 8:word32]
	r6 = Mem0[r5 + 12:word32]
	ip = Mem0[r5 + 16:word32]
	r5 = r5 + 20
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000093B5:
	branch Z l000093B9
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20

l000093B5_1:
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20

l000093B9:
	branch NZ l000093BD
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20

l000093B9_1:
	fp = Mem0[r1:int8]
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20

l000093BD:
	branch NV l000093C1
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid>

l000093BD_1:
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid>

l000093C1:
	branch ZC l000093C5
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid>

l000093C5:
	branch Z l000093C9
// DataOut: fp ip r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid>

l000093C5_1:
// DataOut: fp ip r0 r1 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid>

l000093C9:
	branch Z l000093CD
// DataOut: fp ip r0 r1 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid>

l000093C9_1:
// DataOut: fp ip r0 r1 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid>

l000093CD:
	branch C l000093D1
// DataOut: fp ip r0 r1 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid>

l000093CD_1:
	r3 = Mem0[r9:int16]
	r9 = r9 + 0x00000040
// DataOut: fp ip r0 r1 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid>

l000093D1:
	branch Z l000093D5
// DataOut: fp ip r0 r1 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> r9:r9 + 0x00000040

l000093D1_1:
	fp = (r6 >> 26) - r8 - C
	byte NZCV_111 = cond(fp)
	NV = NZCV_111 (alias)
	C = NZCV_111 (alias)
	ZC = NZCV_111 (alias)
	Z = NZCV_111 (alias)
// DataOut: fp ip r0 r1 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> r9:r9 + 0x00000040

l000093D5:
	branch NV l000093D9
// DataOut: fp ip r0 r1 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> r9:r9 + 0x00000040

l000093D5_1:
// DataOut: fp ip r0 r1 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> r9:r9 + 0x00000040

l000093D9:
	branch ZC l000093DD
// DataOut: fp ip r0 r1 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> r9:r9 + 0x00000040

l000093D9_1:
	Mem101[fp:word32] = r3
	Mem102[fp - 4:word32] = r4
	Mem103[fp - 8:word32] = r5
	Mem105[fp - 12:word32] = r7
	Mem106[fp - 16:word32] = r8
	Mem107[fp - 20:word32] = r9
	Mem108[fp - 24:word32] = fp
	Mem109[fp - 28:word32] = ip
// DataOut: r0 r1 r3 r4 r6 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> r9:r9 + 0x00000040

l000093DD:
	branch Z l000093E1
// DataOut: r0 r1 r3 r4 r6 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> r9:r9 + 0x00000040

l000093DD_1:
// DataOut: r1 r3 r4 r6 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> r9:r9 + 0x00000040

l000093E1:
	branch ZC l000093E5
// DataOut: r1 r3 r4 r6 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> r9:r9 + 0x00000040

l000093E5:
	branch Z l000093E9
// DataOut: r1 r4 r6 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> r9:r9 + 0x00000040

l000093E5_1:
// DataOut: r4 r6 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> r9:r9 + 0x00000040

l000093E9:
	branch Z l000093ED
// DataOut: r4 r6 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> r9:r9 + 0x00000040

l000093E9_1:
// DataOut: r6 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> r9:r9 + 0x00000040

l000093ED:
	branch C l000093F1
// DataOut: r6 r8 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> r9:r9 + 0x00000040

l000093ED_1:
// DataOut: r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> r9:r9 + 0x00000040

l000093F1:
	branch Z l000093F5
// DataOut: r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> r9:<invalid>

l000093F1_1:
	ZC = cond((r6 >> 26) - r8 - C) (alias)
// DataOut:
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> r9:<invalid>

l000093F5:
	branch ZC l000093F9
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> r9:<invalid>

l000093F5_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> r9:<invalid>

l000093F9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> r9:<invalid>

l000093E1_1:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid> r9:r9 + 0x00000040

l000093C1_1:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:r5 + 20 fp:<invalid> r2:<invalid>

GPIOPortIntUnregister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> ip:<invalid> r5:<invalid> fp:<invalid> r2:<invalid> r4:<invalid> r7:<invalid> r9:r9 + 0x00000040 lr:<invalid>



void GPIOPinRead(word32 pc, word32 r0, word32 r2, word32 r3, word32 r7, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV pc r0 r2 r3 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
GPIOPinRead_entry:
// DataOut: pc r0 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000944D:
	branch V l00009451
// DataOut: pc r0 r2 r3 r7 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l0000944D_1:
	Mem15[r0:word64] = r3_r2
// DataOut: pc r7
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l00009451:
	branch NZ l00009451_thunk_GPIOPinWrite
// DataOut: pc r7
// DataOut (flags): C
// SymbolicIn: sp:fp r0:r0 - r8

l00009451_thunk_GPIOPinWrite:
	GPIOPinWrite()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 - r8
// Terminates process

l00009451_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 - r8

l00009451_thunk_GPIOPinWrite:
	GPIOPinWrite()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>
// Terminates process

GPIOPinRead_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void GPIOPinWrite()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
GPIOPinWrite_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

GPIOPinWrite_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009455:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void GPIOPinTypeComparator(word32 r3, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZV ip r3
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
GPIOPinTypeComparator_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

GPIOPinTypeComparator_entry:
// DataOut: ip r3
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l0000945D:
	branch NZV l00009461
// DataOut: ip r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000945D_1:
	Mem6[r3:word16] = (uint16) ip
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009461:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 + 0xFFFFFF2C



void GPIOPinTypeI2C(word32 r0, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZV r0 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
GPIOPinTypeI2C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

GPIOPinTypeI2C_entry:
// DataOut: r0 r6
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l00009481:
	branch NZV l00009485
// DataOut: r0 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009481_1:
	Mem17[r6:word16] = (uint16) r0
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009485:
	branch Z l00009489
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFF2C

l00009485_1:
	word32 sp_12
	byte NZV_13
	word32 r0_14
	word32 r6_15
	byte Z_16
	call fn0090986D (retsize: 0;)
		uses: NZV,r0,r6_4,sp_1,Z
		defs: NZV_13,r0_14,r6_15,sp_12,Z_16
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFF2C

l00009489:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFF2C



void GPIOPinTypeQEI(word32 r0, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZV r0 r6
// LiveOut:
// Trashed: r6
// Preserved: sp
GPIOPinTypeQEI_entry:
// DataOut: r0 r6
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000094A5:
	branch NZV l000094A9
// DataOut: r0 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000094A5_1:
	Mem10[r6:word16] = (uint16) r0
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000094A9:
	branch Z l000094A9_then
	word32 sp_4
	byte NZV_5
	word32 r0_6
	word32 r6_7
	byte Z_8
	call fn00909891 (retsize: 0;)
		uses: NZV,sp_1,Z
		defs: NZV_5,r0_6,r6_7,sp_4,Z_8
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFF2C

l000094A9_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFF2C

l000094AD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFF2C

GPIOPinTypeQEI_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFF2C



void GPIOPinTypeUART(word32 r0, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZV r0 r3 r4 r5 r6 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
GPIOPinTypeUART_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

GPIOPinTypeUART_entry:
// DataOut: r0 r3 r4 r5 r6 r7
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l000094C9:
	branch NZV l000094CD
// DataOut: r0 r3 r4 r5 r6 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000094C9_1:
	Mem18[r6:word16] = (uint16) r0
	r6 = r6 + 0xFFFFFF2C
// DataOut: r3 r4 r5 r6 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000094CD:
	branch Z l000094D1
// DataOut: r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFF2C

l000094CD_1:
	Mem9[r4:word32] = r3
	Mem10[r4 - 4:word32] = r4
	Mem12[r4 - 8:word32] = r5
	Mem13[r4 - 12:word32] = r6
	Mem15[r4 - 16:word32] = r7
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFF2C

l000094D1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFF2C r4:r4 - 20



void GPIOPinTypeTimer()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
GPIOPinTypeTimer_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

GPIOPinTypeTimer_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000094ED:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void GPIOPinTypeSSI()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
GPIOPinTypeSSI_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

GPIOPinTypeSSI_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000094F1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void GPIOPinTypePWM()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
GPIOPinTypePWM_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

GPIOPinTypePWM_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000094F5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void IntDefaultHandler(word32 pc, word32 r0, word32 r1, word32 r7, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC fp pc r0 r1 r7 r8
// LiveOut:
// Trashed: NZCV lr r0 sp
// Preserved: sp
IntDefaultHandler_entry:
// DataOut: fp pc r0 r1 r7 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l000094F9:
	branch Z l000094F9_thunk_IntMasterEnable
// DataOut: fp pc r0 r1 r7 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l000094F9_thunk_IntMasterEnable:
	IntMasterEnable(r0, r1, r8, fp, wArg00)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000094F9_1:
	word32 r0_10 = pc + __ror(r7, 1) + C
// DataOut: fp r0 r1 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000094F9_thunk_IntMasterEnable:
	IntMasterEnable(r0_10, r1, r8, fp, wArg00)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>

IntDefaultHandler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> lr:<invalid>



void IntMasterEnable(word32 r0, word32 r1, word32 r8, word32 fp, int16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z fp r0 r1 r8
// LiveOut:
// Trashed: lr sp
// Preserved:
IntMasterEnable_entry:
// DataOut: fp r0 r1 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000094FD:
	branch Z l000094FD_thunk_IntMasterDisable
// DataOut: fp r0 r1 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000094FD_thunk_IntMasterDisable:
	IntMasterDisable(r0, r1, r8, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000094FD_1:
// DataOut: fp r0 r1 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000094FD_thunk_IntMasterDisable:
	IntMasterDisable(r0, r1, r8, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + r0 lr:<invalid>

IntMasterEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> lr:<invalid>



void IntMasterDisable(word32 r0, word32 r1, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z fp r0 r1 r8
// LiveOut:
// Trashed:
// Preserved: sp
IntMasterDisable_entry:
// DataOut: fp r0 r1 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009501:
	branch Z l00009501_then
	word32 sp_3
	byte Z_4
	word32 r0_5
	word32 r1_6
	word32 r8_7
	word32 fp_8
	call fnFEF858C9 (retsize: 0;)
		uses: sp_1,Z
		defs: fp_8,r0_5,r1_6,r8_7,sp_3,Z_4
	return
// DataOut: fp r0 r1 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009501_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009501_thunk_IntRegister:
	IntRegister(r0_5, r1_6, r8_7, fp_8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

IntMasterDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void IntRegister(word32 r0, word32 r1, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV fp r0 r1 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
IntRegister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

IntRegister_entry:
// DataOut: fp r0 r1 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009505:
	branch Z l00009509
// DataOut: fp r0 r1 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009505_1:
	word32 sp_59
	word32 r0_62
	word32 r1_65
	word32 r2_66
	word32 r6_67
	word32 r10_68
	byte NZCV_70
	word32 r8_71
	word32 r4_72
	call fnFED15639 (retsize: 0;)
		uses: C,fp,NV,NZCV,NZV,r0,r1,r10,r2,r4,r6,r8,sp_1,Z
		defs: C_63,fp_69,NV_61,NZCV_70,NZV_64,r0_62,r1_65,r10_68,r2_66,r4_72,r6_67,r8_71,sp_59,Z_60
// DataOut: fp r0 r1 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009509:
	branch NV l0000950D
// DataOut: fp r0 r1 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009509_1:
// DataOut: fp r0 r1 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000950D:
	branch C l00009511
// DataOut: fp r0 r1 r8
// DataOut (flags): NZV
// SymbolicIn: sp:fp r0:DPB(r0, 0xCA68, 16)

l0000950D_1:
// DataOut: fp r1 r8
// DataOut (flags): NZV
// SymbolicIn: sp:fp r0:DPB(r0, 0xCA68, 16)

l00009511:
	branch NZV l00009515
// DataOut: fp r1 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r0:<invalid>

l00009511_1:
// DataOut: fp r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r0:<invalid>

l00009515:
	branch Z l00009519
// DataOut: fp r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r10:<invalid>

l00009515_1:
	Z = cond(fp & 0x00005000) (alias)
// DataOut: r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r10:<invalid>

l00009519:
	branch Z l0000951D
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r10:<invalid>

l00009519_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r10:<invalid>

l0000951D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r10:<invalid> r4:<invalid> r8:r8 + 0x00000368



void IntUnregister(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZ r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
IntUnregister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

IntUnregister_entry:
// DataOut: r0
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l00009539:
	branch NZ l0000953D
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009539_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000953D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:DPB(r0, 0xA34B, 16)



void IntPriorityGroupingSet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZ r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
IntPriorityGroupingSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

IntPriorityGroupingSet_entry:
// DataOut: r0
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l0000954D:
	branch N l00009551
// DataOut: r0
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l0000954D_1:
// DataOut: r0
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l00009551:
	branch NZ l00009555
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r0:DPB(r0, 0xA54B, 16)

l00009551_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:DPB(r0, 0xA54B, 16)

l00009555:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:DPB(r0, 0xA54B, 16)



void IntPriorityGroupingGet(word32 r0, word32 r2, word32 r3, word32 r5, word32 r6, word32 r9, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZC r0 r10 r2 r3 r5 r6 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
IntPriorityGroupingGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

IntPriorityGroupingGet_entry:
// DataOut: r0 r10 r2 r3 r5 r6 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l00009569:
	branch Z l0000956D
// DataOut: r0 r10 r2 r3 r5 r6 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l0000956D:
	branch Z l00009571
// DataOut: r0 r10 r2 r3 r5 r6 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l0000956D_1:
	Mem60[r0 - 4:word32] = r0
	Mem61[r0 - 8:word32] = r3
	Mem62[r0 - 12:word32] = r6
	r0 = r0 - 16
// DataOut: r0 r10 r2 r3 r5 r6 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l00009571:
	branch Z l00009575
// DataOut: r0 r10 r2 r3 r5 r6 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:r0 - 16

l00009571_1:
	Mem55[r10 - 4:word32] = r3
	Mem56[r10 - 8:word32] = r5
	Mem57[r10 - 12:word32] = r6
	Mem58[r10 - 16:word32] = r9
	Mem59[r10 - 20:word32] = r10
// DataOut: r0 r2
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:r0 - 16

l00009575:
	branch N l00009579
// DataOut: r0 r2
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:r0 - 16

l00009575_1:
	byte NZCV_50 = cond(0x00000010 - r0 - C)
	Z = NZCV_50 (alias)
	ZC = NZCV_50 (alias)
// DataOut: r0 r2
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:r0 - 16

l00009579:
	branch ZC l0000957D
// DataOut: r0 r2
// DataOut (flags): Z
// SymbolicIn: sp:fp r0:<invalid>

l00009579_1:
	word32 sp_36
	word32 r0_38
	word32 r3_39
	word32 r6_40
	word32 r10_41
	word32 r5_42
	word32 r9_43
	byte N_44
	bool C_45
	byte NZCV_46
	byte ZC_47
	word32 r2_48
	call fn00ECA961 (retsize: 0;)
		uses: C_11,N_12,NZCV_10,r0_14,r10,r2,r3,r5,r6,r9,sp_1,Z_13,ZC_9
		defs: C_45,N_44,NZCV_46,r0_38,r10_41,r2_48,r3_39,r5_42,r6_40,r9_43,sp_36,Z_37,ZC_47
// DataOut: r0 r2
// DataOut (flags): Z
// SymbolicIn: sp:fp r0:<invalid>

l0000957D:
	branch Z l00009581
// DataOut: r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>

l0000957D_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>

l00009581:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>

l00009569_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void IntPrioritySet(word32 pc, word32 r0, word32 r2, word32 r3, word32 r7, word32 r8, word32 r10, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV fp pc r0 r10 r2 r3 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
IntPrioritySet_entry:
// DataOut: fp pc r0 r10 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009591:
	branch Z l00009595
// DataOut: fp pc r0 r10 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009591_1:
	r0 = fp - (r2 >>u 18)
// DataOut: pc r0 r10 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009595:
	branch Z l00009599
// DataOut: pc r0 r10 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:fp - (r2 >>u 18)

l00009595_1:
	r2 = !0x000000B4
	byte NZCV_70 = cond(r2)
	Z = NZCV_70 (alias)
	NZV = NZCV_70 (alias)
	C = NZCV_70 (alias)
	NV = NZCV_70 (alias)
// DataOut: pc r0 r10 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:fp - (r2 >>u 18)

l00009599:
	branch Z l0000959D
// DataOut: pc r0 r10 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:fp - (r2 >>u 18) r2:!0x000000B4

l0000959D:
	branch Z l000095A1
// DataOut: pc r0 r10 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:fp - (r2 >>u 18) r2:!0x000000B4

l0000959D_1:
	r0 = !0x0000006A
	byte NZCV_64 = cond(r0)
	Z = NZCV_64 (alias)
	NZV = NZCV_64 (alias)
	C = NZCV_64 (alias)
	NV = NZCV_64 (alias)
// DataOut: pc r0 r10 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:fp - (r2 >>u 18) r2:!0x000000B4

l000095A1:
	branch NZV l000095A5
// DataOut: pc r0 r10 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r2:!0x000000B4

l000095A1_1:
	r2 = r8 - (r0 << 6)
// DataOut: pc r0 r10 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r2:!0x000000B4

l000095A5:
	branch C l000095A9
// DataOut: pc r0 r10 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid>

l000095A5_1:
	r8 = DPB(r8, 0x0200, 16)
// DataOut: pc r0 r10 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid>

l000095A9:
	branch Z l000095AD
// DataOut: pc r0 r10 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r8:DPB(r8, 0x0200, 16)

l000095A9_1:
	r3 = (int16) (r10 >> 16) *s (int16) (r2 >> 16) + r0
// DataOut: pc r0 r10 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r8:DPB(r8, 0x0200, 16)

l000095AD:
	branch Z l000095B1
// DataOut: pc r0 r10 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r8:DPB(r8, 0x0200, 16) r3:<invalid>

l000095AD_1:
	r3 = Mem0[r0 + 4:word32]
	r7 = Mem0[r0 + 20:word32]
	r0 = r0 + 24
// DataOut: pc r0 r10 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r8:DPB(r8, 0x0200, 16) r3:<invalid>

l000095B1:
	branch Z l000095B5
// DataOut: pc r0 r10 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r8:DPB(r8, 0x0200, 16) r3:<invalid> r1:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid>

l000095B1_1:
	r2 = r0 - (r3 >> 32)
// DataOut: pc r0 r10 r2 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r8:DPB(r8, 0x0200, 16) r3:<invalid> r1:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid>

l000095B5:
	branch NV l000095B9
// DataOut: pc r0 r10 r2 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r8:DPB(r8, 0x0200, 16) r3:<invalid> r1:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid>

l000095B5_1:
	Mem48[r7:byte] = (byte) r7
// DataOut: pc r0 r10 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r8:DPB(r8, 0x0200, 16) r3:<invalid> r1:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid>

l000095B9:
	branch Z l000095B9_thunk_IntPriorityGet
// DataOut: pc r0 r10 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r8:DPB(r8, 0x0200, 16) r3:<invalid> r1:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid>

l000095B9_thunk_IntPriorityGet:
	IntPriorityGet(pc, r0, r2, r8, r10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r8:DPB(r8, 0x0200, 16) r3:<invalid> r1:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid>
// Terminates process

l000095B9_1:
	Mem44[r0:word32] = r0
	word32 r0_45 = r0 - (r2 >>u 1)
// DataOut: pc r0 r10 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r8:DPB(r8, 0x0200, 16) r3:<invalid> r1:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid>

l000095B9_thunk_IntPriorityGet:
	IntPriorityGet(pc, r0_45, r2, r8, r10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r8:DPB(r8, 0x0200, 16) r3:<invalid> r1:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid>
// Terminates process

IntPrioritySet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

l00009599_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:fp - (r2 >>u 18) r2:!0x000000B4



void IntPriorityGet(word32 pc, word32 r0, word32 r2, word32 r8, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV pc r0 r10 r2 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
IntPriorityGet_entry:
// DataOut: pc r0 r10 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000095BD:
	branch Z l000095C1
// DataOut: pc r0 r10 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000095BD_1:
	byte NZCV_93 = cond(!0x0000004B)
	Z = NZCV_93 (alias)
	NZV = NZCV_93 (alias)
	V = NZCV_93 (alias)
	C = NZCV_93 (alias)
	NV = NZCV_93 (alias)
// DataOut: pc r0 r10 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l000095C1:
	branch Z l000095C5
// DataOut: pc r0 r10 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r2:!0x0000004B

l000095C1_1:
	word32 sp_78
	word32 r2_80
	byte NZCV_81
	word32 r1_84
	word32 ip_89
	word32 pc_91
	call fn0110E1D1 (retsize: 0;)
		uses: C_13,ip,NV_14,NZCV_9,NZV_11,pc,r0,r1,r10,r2_15,r8,sp_1,V_12,Z_10
		defs: C_87,ip_89,NV_90,NZCV_81,NZV_83,pc_91,r0_82,r1_84,r10_86,r2_80,r8_85,sp_78,V_88,Z_79
// DataOut: pc r0 r10 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r2:!0x0000004B

l000095C5:
	branch Z l000095C9
// DataOut: pc r0 r10 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r2:!0x0000004B

l000095C5_1:
	r0 = !0x0000006A
	byte NZCV_72 = cond(r0)
	Z = NZCV_72 (alias)
	NZV = NZCV_72 (alias)
	V = NZCV_72 (alias)
	C = NZCV_72 (alias)
	NV = NZCV_72 (alias)
// DataOut: pc r0 r10 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r2:!0x0000004B

l000095C9:
	branch NZV l000095CD
// DataOut: pc r0 r10 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r2:!0x0000004B r0:!0x0000006A

l000095C9_1:
// DataOut: pc r0 r10 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r2:!0x0000004B r0:!0x0000006A

l000095CD:
	branch Z l000095D1
// DataOut: pc r0 r10 r2 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r2:!0x0000004B r0:!0x0000006A r1:r8 - (!0x0000006A << 22)

l000095CD_1:
	byte NZCV_64 = cond((r0 << 6) - r10 - C)
	Z = NZCV_64 (alias)
	V = NZCV_64 (alias)
	NV = NZCV_64 (alias)
// DataOut: pc r0 r2 r8
// DataOut (flags): NZV
// SymbolicIn: sp:fp r2:!0x0000004B r0:!0x0000006A r1:r8 - (!0x0000006A << 22)

l000095D1:
	branch V l000095D5
// DataOut: pc r0 r2 r8
// DataOut (flags): NZV
// SymbolicIn: sp:fp r2:<invalid> r0:!0x0000006A r1:r8 - (!0x0000006A << 22)

l000095D1_1:
// DataOut: pc r0 r8
// DataOut (flags): NZV
// SymbolicIn: sp:fp r2:<invalid> r0:!0x0000006A r1:r8 - (!0x0000006A << 22)

l000095D5:
	branch NV l000095D9
// DataOut: pc r0 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r2:<invalid> r0:!0x0000006A r1:r8 - (!0x0000006A << 22) ip:<invalid>

l000095D5_1:
	r0 = Mem0[0x000095DD:word32]
// DataOut: r0 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r2:<invalid> r0:!0x0000006A r1:r8 - (!0x0000006A << 22) ip:<invalid>

l000095D9:
	branch Z l000095D9_thunk_IntEnable
// DataOut: r0 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r2:<invalid> r0:<invalid> r1:r8 - (!0x0000006A << 22) ip:<invalid> pc:pc + 0x00000047

l000095D9_thunk_IntEnable:
	IntEnable(r0, r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r0:<invalid> r1:r8 - (!0x0000006A << 22) ip:<invalid> pc:pc + 0x00000047
// Terminates process

l000095D9_1:
	Mem56[r0:word32] = r0
	word32 r0_57 = r0 - 0x000000A2
// DataOut: r0 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r2:<invalid> r0:<invalid> r1:r8 - (!0x0000006A << 22) ip:<invalid> pc:pc + 0x00000047

l000095D9_thunk_IntEnable:
	IntEnable(r0_57, r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r0:<invalid> r1:r8 - (!0x0000006A << 22) ip:<invalid> pc:pc + 0x00000047
// Terminates process

IntPriorityGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void IntEnable(word32 r0, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
IntEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

IntEnable_entry:
// DataOut: r0 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000095DD:
	branch Z l000095E1
// DataOut: r0 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000095DD_1:
// DataOut: r0 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000095E1:
	branch Z l000095E5
// DataOut: r0 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid>

l000095E1_1:
// DataOut: r0
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid>

l000095E5:
	branch Z l000095E9
// DataOut: r0
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid> r0:r0 + (r8 >>u 14)

l000095E5_1:
// DataOut: r0
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid> r0:r0 + (r8 >>u 14)

l000095E9:
	branch Z l000095ED
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:r0 + (r8 >>u 14)

l000095E9_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:r0 + (r8 >>u 14)

l000095ED:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid>



void IntDisable(word32 r0, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
IntDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

IntDisable_entry:
// DataOut: r0 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009639:
	branch Z l0000963D
// DataOut: r0 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009639_1:
// DataOut: r0 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp

l0000963D:
	branch Z l00009641
// DataOut: r0 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid>

l0000963D_1:
// DataOut: r0
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid>

l00009641:
	branch Z l00009645
// DataOut: r0
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid> r0:r0 + (r8 >>u 14)

l00009641_1:
// DataOut: r0
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid> r0:r0 + (r8 >>u 14)

l00009645:
	branch Z l00009649
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:r0 + (r8 >>u 14)

l00009645_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:r0 + (r8 >>u 14)

l00009649:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid>



void OSRAMDelay(word32 pc, word32 r1, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  CV pc r1 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
OSRAMDelay_entry:
// DataOut: pc r1 r8
// DataOut (flags): CV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009695:
	branch V l00009699
// DataOut: pc r1 r8
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009695_1:
	C = cond(r1 - (r8 >>u fp) - C) (alias)
// DataOut: pc
// DataOut (flags): C
// SymbolicIn: sp:fp

l00009699:
	branch C l00009699_thunk_OSRAMWriteFirst
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp pc:<invalid>

l00009699_thunk_OSRAMWriteFirst:
	OSRAMWriteFirst()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:<invalid>
// Terminates process

l00009699_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:<invalid>

l00009699_thunk_OSRAMWriteFirst:
	OSRAMWriteFirst()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid>
// Terminates process

OSRAMDelay_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void OSRAMWriteFirst()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
OSRAMWriteFirst_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

OSRAMWriteFirst_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000969D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void OSRAMWriteArray(word32 r0, word32 r1, word32 r5, word32 r6, word32 r7, word32 r8, word32 fp, word32 ip, int16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV fp ip r0 r1 r5 r6 r7 r8
// LiveOut:
// Trashed: NZCV fp ip lr r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved: sp
// Stack args: Stack +0000(32)
OSRAMWriteArray_entry:
// DataOut: fp ip r0 r1 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l000096C5:
	branch Z l000096C9
// DataOut: fp ip r0 r1 r5 r6 r7 r8 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l000096C9:
	branch Z l000096CD
// DataOut: fp ip r0 r1 r6 r7 r8 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l000096CD:
	branch Z l000096D1
// DataOut: fp ip r0 r1 r6 r7 r8 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l000096CD_1:
	byte NZCV_112 = cond(r8 & ip >> 12)
	Z = NZCV_112 (alias)
	NZV = NZCV_112 (alias)
	C = NZCV_112 (alias)
	NV = NZCV_112 (alias)
// DataOut: fp r0 r1 r6 r7 r8 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l000096D1:
	branch Z l000096D5
// DataOut: fp r0 r1 r6 r7 r8 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r4:r8 & ip >> 12
// LocalsOut: fp(32) Stack +0000(32)

l000096D1_1:
// DataOut: fp r0 r1 r6 r7 r8 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r4:r8 & ip >> 12
// LocalsOut: fp(32) Stack +0000(32)

l000096D5:
	branch Z l000096D9
// DataOut: fp r0 r1 r6 r7 r8 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r4:r8 & ip >> 12 r2:r6 - (r1 >>u 32)
// LocalsOut: fp(32) Stack +0000(32)

l000096D5_1:
// DataOut: fp r0 r1 r6 r7 r8 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r4:r8 & ip >> 12 r2:r6 - (r1 >>u 32)

l000096D9:
	branch C l000096DD
// DataOut: fp r0 r1 r6 r7 r8 sp
// DataOut (flags): NZV
// SymbolicIn: sp:<invalid> r4:r8 & ip >> 12 r2:r6 - (r1 >>u 32) r7:<invalid>

l000096DD:
	branch NZV l000096E1
// DataOut: fp r0 r1 r6 r7 r8 sp
// DataOut (flags): NZV
// SymbolicIn: sp:<invalid> r4:r8 & ip >> 12 r2:r6 - (r1 >>u 32) r7:<invalid>

l000096E1:
	branch Z l000096E5
// DataOut: fp r0 r1 r6 r8 sp
// DataOut (flags): NZV
// SymbolicIn: sp:<invalid> r4:r8 & ip >> 12 r2:r6 - (r1 >>u 32) r7:<invalid>

l000096E1_1:
// DataOut: fp r0 r1 r6 sp
// DataOut (flags): NZV
// SymbolicIn: sp:<invalid> r4:r8 & ip >> 12 r2:r6 - (r1 >>u 32) r7:<invalid>

l000096E5:
	branch Z l000096E9
// DataOut: fp r0 r1 r6 sp
// DataOut (flags): NZV
// SymbolicIn: sp:<invalid> r4:r8 & ip >> 12 r2:r6 - (r1 >>u 32) r7:<invalid> r8:r8 + 95 r1:<invalid>

l000096E5_1:
// DataOut: r1 r6 sp
// DataOut (flags): NZV
// SymbolicIn: sp:<invalid> r4:r8 & ip >> 12 r2:r6 - (r1 >>u 32) r7:<invalid> r8:r8 + 95 r1:<invalid>

l000096E9:
	branch Z l000096ED
// DataOut: r1 r6 sp
// DataOut (flags): NZV
// SymbolicIn: sp:<invalid> r4:r8 & ip >> 12 r2:<invalid> r7:<invalid> r8:r8 + 95 r1:<invalid>

l000096E9_1:
// DataOut: r1 r6
// DataOut (flags): NZV
// SymbolicIn: sp:<invalid> r4:r8 & ip >> 12 r2:<invalid> r7:<invalid> r8:r8 + 95 r1:<invalid>

l000096ED:
	branch Z l000096F1
// DataOut: r1 r6
// DataOut (flags): NV
// SymbolicIn: sp:<invalid> r4:r8 & ip >> 12 r2:<invalid> r7:<invalid> r8:r8 + 95 r1:<invalid> r10:<invalid>

l000096ED_1:
// DataOut:
// DataOut (flags): NV
// SymbolicIn: sp:<invalid> r4:r8 & ip >> 12 r2:<invalid> r7:<invalid> r8:r8 + 95 r1:<invalid> r10:<invalid>

l000096F1:
	branch NV l000096F5
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:r8 & ip >> 12 r2:<invalid> r7:<invalid> r8:r8 + 95 r1:<invalid> r10:<invalid>

l000096F1_1:
	__mrc(0x06, 0x00000007, 0x0D, 0x00, 0x00000007)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:r8 & ip >> 12 r2:<invalid> r7:<invalid> r8:r8 + 95 r1:<invalid> r10:<invalid>

l000096F5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:r8 & ip >> 12 r2:<invalid> r7:<invalid> r8:r8 + 95 r1:<invalid> r10:<invalid> r9:<invalid>

l000096DD_1:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:r8 & ip >> 12 r2:r6 - (r1 >>u 32) r7:<invalid>

l000096D9_1:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:r8 & ip >> 12 r2:r6 - (r1 >>u 32) r7:<invalid>

l000096C9_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000096C5_1:
	word32 sp_45
	byte Z_46
	word32 r5_47
	word32 pc_48
	word32 r4_49
	word32 r8_50
	word32 ip_51
	byte NZCV_52
	word32 r2_53
	word32 r6_54
	word32 r1_55
	word32 r7_56
	byte C_57
	word32 r0_58
	word32 r3_59
	word32 fp_60
	word32 lr_61
	byte NZV_62
	word32 r9_63
	word32 r10_64
	byte NV_65
	call Mem0[r5 + 2225:word32] (retsize: 0;)
		uses: C,fp,ip,lr,NV,NZCV,NZV,pc,r0,r1,r10,r2,r3,r4,r5_25,r6,r7,r8,r9,sp_1,Z
		defs: C_57,fp_60,ip_51,lr_61,NV_65,NZCV_52,NZV_62,pc_48,r0_58,r1_55,r10_64,r2_53,r3_59,r4_49,r5_47,r6_54,r7_56,r8_50,r9_63,sp_45,Z_46
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

OSRAMWriteArray_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:r8 & ip >> 12 r2:r6 - (r1 >>u 32) r7:<invalid> r3:<invalid> r8:<invalid> fp:<invalid> ip:<invalid> lr:<invalid> r6:<invalid> r9:<invalid> r10:<invalid>



void OSRAMWriteByte(word32 r0, word32 r1, word32 r6, word32 r8, int16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0 r1 r6 r8
// LiveOut:
// Trashed: r0 r5 r6 sp
// Preserved:
OSRAMWriteByte_entry:
// DataOut: r0 r1 r6 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009705:
	branch Z l00009709
// DataOut: r0 r1 r6 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009705_1:
	Mem25[r6:word16] = (uint16) r0
// DataOut: r1 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009709:
	branch Z l0000970D
// DataOut: r1 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB
// LocalsOut: fp(32)

l00009709_1:
	r0 = r8 - (r1 >>u 18)
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB
// LocalsOut: fp(32)

l0000970D:
	branch Z l00009711
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB r0:r8 - (r1 >>u 18)
// LocalsOut: fp(32)

l0000970D_1:
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp r6:r6 + 0xFFFFFFBB r0:r8 - (r1 >>u 18)

l00009711:
	branch Z l00009715
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:r6 + 0xFFFFFFBB r0:r8 - (r1 >>u 18) r5:<invalid>

l00009715:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:r6 + 0xFFFFFFBB r0:r8 - (r1 >>u 18) r5:<invalid>

l00009711_1:
	word32 sp_11
	byte Z_12
	word32 r0_13
	word32 r6_14
	word32 r8_15
	word32 r1_16
	word32 r5_17
	word32 pc_18
	call Mem0[r0:byte] (retsize: 0;)
		uses: r0_6,r5_8,r6_4,sp_9,Z
		defs: pc_18,r0_13,r1_16,r5_17,r6_14,r8_15,sp_11,Z_12
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:r6 + 0xFFFFFFBB r0:r8 - (r1 >>u 18) r5:<invalid>

OSRAMWriteByte_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:r6 + 0xFFFFFFBB r0:r8 - (r1 >>u 18) r5:<invalid>



void OSRAMWriteFinal(word32 r0, word32 r1, word32 r6, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZC ip r0 r1 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
OSRAMWriteFinal_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

OSRAMWriteFinal_entry:
// DataOut: ip r0 r1 r6
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l00009739:
	branch Z l0000973D
// DataOut: ip r0 r1 r6
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l00009739_1:
	__mcr(0x06, 0x00000002, r0, 0x06, 0x05, 0x00000005)
// DataOut: ip r1 r6
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l0000973D:
	branch C l00009741
// DataOut: ip r1 r6
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l0000973D_1:
// DataOut: r6
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l00009741:
	branch NZ l00009745
// DataOut: r6
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r1 ^ ip >> 32

l00009741_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r1 ^ ip >> 32

l00009745:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



void OSRAMClear()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
OSRAMClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

OSRAMClear_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009781:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void OSRAMStringDraw(word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
OSRAMStringDraw_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

OSRAMStringDraw_entry:
// DataOut: r6
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l000097CD:
	branch Z l000097D1
// DataOut: r6
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l000097D1:
	branch ZC l000097D5
// DataOut: r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l000097D1_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000097D5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r6 - (r6 >> 10)

l000097CD_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void OSRAMImageDraw(word32 lr, word32 pc, word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r10, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV ip lr pc r0 r1 r10 r2 r3 r4 r5 r6 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
OSRAMImageDraw_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

OSRAMImageDraw_entry:
// DataOut: ip lr pc r0 r1 r10 r2 r3 r4 r5 r6 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009881:
	branch Z l00009885
// DataOut: ip lr pc r0 r1 r10 r2 r3 r4 r5 r6 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009881_1:
	Mem48[r7:word32] = r0
	Mem50[r7 - 4:word32] = r3
	Mem52[r7 - 8:word32] = r5
	Mem53[r7 - 12:word32] = r6
	Mem54[r7 - 16:word32] = r7
	Mem55[r7 - 20:word32] = ip
	Mem56[r7 - 24:word32] = fp
	Mem58[r7 - 28:word32] = lr
	Mem60[r7 - 32:word32] = pc
// DataOut: ip r0 r1 r10 r2 r3 r4 r6
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009885:
	branch Z l00009889
// DataOut: ip r0 r1 r10 r2 r3 r4 r6
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009885_1:
// DataOut: ip r0 r1 r10 r2 r4 r6
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009889:
	branch ZC l0000988D
// DataOut: ip r0 r1 r10 r2 r4 r6
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r3:r3 + 1694 r8:<invalid>

l00009889_1:
	Mem37[r6 - 4:word32] = r1
	Mem39[r6 - 8:word32] = r2
	Mem40[r6 - 12:word32] = r6
	Mem42[r6 - 16:word32] = r10
	Mem44[r6 - 20:word32] = ip
// DataOut: r0 r1 r4 r6
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r3:r3 + 1694 r8:<invalid>

l0000988D:
	branch NZV l00009891
// DataOut: r0 r1 r4 r6
// DataOut (flags): ZC
// SymbolicIn: sp:fp r3:r3 + 1694 r8:<invalid>

l0000988D_1:
	byte NZCV_32 = cond(r1 ^ r6 >> 8)
	Z = NZCV_32 (alias)
	C = NZCV_32 (alias)
// DataOut: r0 r4
// DataOut (flags): ZC
// SymbolicIn: sp:fp r3:r3 + 1694 r8:<invalid>

l00009891:
	branch Z l00009895
// DataOut: r0 r4
// DataOut (flags): ZC
// SymbolicIn: sp:fp r3:r3 + 1694 r8:<invalid>

l00009895:
	branch Z l00009899
// DataOut: r0 r4
// DataOut (flags): ZC
// SymbolicIn: sp:fp r3:r3 + 1694 r8:<invalid>

l00009895_1:
	Z = cond((r4 >> 16) - r0 - C) (alias)
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp r3:r3 + 1694 r8:<invalid>

l00009899:
	branch Z l0000989D
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 + 1694 r8:<invalid> r4:<invalid>

l00009899_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 + 1694 r8:<invalid> r4:<invalid>

l0000989D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 + 1694 r8:<invalid> r4:<invalid>

l00009891_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 + 1694 r8:<invalid>



void OSRAMInit(word32 pc, word32 r0, word32 r1, word32 r2, word32 r6, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC pc r0 r1 r2 r6 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
OSRAMInit_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

OSRAMInit_entry:
// DataOut: pc r0 r1 r2 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l000098F1:
	branch Z l000098F5
// DataOut: pc r0 r1 r2 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l000098F1_1:
	Mem25[r1:byte] = (byte) pc
	r2_r1 = SEQ(r2, r1 - 0x000000E9) (alias)
// DataOut: r0 r1 r2 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l000098F5:
	branch Z l000098F9
// DataOut: r0 r1 r2 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r1:r1 - 0x000000E9

l000098F5_1:
	byte NZCV_21 = cond((r6 >> 30) - r0 - C)
	C = NZCV_21 (alias)
	Z = NZCV_21 (alias)
// DataOut: r1 r2 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r1:r1 - 0x000000E9

l000098F9:
	branch C l000098FD
// DataOut: r1 r2 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:r1 - 0x000000E9 r4:<invalid>

l000098F9_1:
// DataOut: r1 r2 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:r1 - 0x000000E9 r4:<invalid>

l000098FD:
	branch Z l00009901
// DataOut: r1 r2 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:r1 - 0x000000E9 r4:<invalid>

l000098FD_1:
	Mem16[r8:word64] = r2_r1
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:r1 - 0x000000E9 r4:<invalid>

l00009901:
	branch Z l00009905
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r1 - 0x000000E9 r4:<invalid> r8:r8 + 0xFFFFFF77

l00009905:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r1 - 0x000000E9 r4:<invalid> r8:r8 + 0xFFFFFF77

l00009901_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r1 - 0x000000E9 r4:<invalid> r8:r8 + 0xFFFFFF77



void OSRAMDisplayOn(word32 lr, word32 r0, word32 r1, word32 r4, word32 r6, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z lr r0 r1 r4 r6 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
OSRAMDisplayOn_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

OSRAMDisplayOn_entry:
// DataOut: lr r0 r1 r4 r6 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009975:
	branch Z l00009979
// DataOut: lr r0 r1 r4 r6 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009975_1:
	word32 pc_17 = r1 - __ror(r9, 1)
// DataOut: lr r0 r4 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009979:
	branch Z l0000997D
// DataOut: lr r0 r4 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp pc:<invalid>

l00009979_1:
	Mem13[r6:word32] = lr
// DataOut: r0 r4
// DataOut (flags): Z
// SymbolicIn: sp:fp pc:<invalid>

l0000997D:
	branch Z l00009981
// DataOut: r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp pc:<invalid> r6:r6 - 0x0000034F

l0000997D_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:<invalid> r6:r6 - 0x0000034F

l00009981:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:<invalid> r6:r6 - 0x0000034F r8:r0 ^ r4 >>u 32



void OSRAMDisplayOff()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
OSRAMDisplayOff_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

OSRAMDisplayOff_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000099C1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void SSIConfig(word32 pc, word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r9, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SSIConfig_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SSIConfig_entry:
// DataOut: pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l000099E9:
	branch Z l000099ED
// DataOut: pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l000099E9_1:
	Mem45[r1:byte] = (byte) pc
// DataOut: pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r9
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l000099ED:
	branch ZC l000099F1
// DataOut: pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000099ED_1:
	Mem36[r6:word32] = r1
	Mem38[r6 - 4:word32] = r2
	Mem39[r6 - 8:word32] = r6
	Mem41[r6 - 12:word32] = r9
	Mem43[r6 - 16:word32] = r10
// DataOut: pc r0 r1 r3 r4 r5 r6 r7 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000099F1:
	branch Z l000099F5
// DataOut: pc r0 r1 r3 r4 r5 r6 r7 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000099F1_1:
	Mem33[r6:byte] = (byte) r1
// DataOut: pc r0 r3 r4 r5 r6 r7 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000099F5:
	word32 sp_4
	byte Z_5
	word32 r1_7
	byte ZC_8
	word32 r6_9
	word32 r2_10
	word32 r9_11
	word32 r10_12
	word32 r0_13
	word32 r3_14
	word32 r4_15
	word32 r5_16
	word32 r7_17
	word32 pc_18
	call fnFFC09C73 (retsize: 0;)
		uses: sp_1,Z,ZC
		defs: pc_6,r0_13,r1_7,r10_12,r2_10,r3_14,r4_15,r5_16,r6_9,r7_17,r9_11,sp_4,Z_5,ZC_8
	branch Z_5 l000099FD
// DataOut: pc r0 r3 r4 r5 r6 r7 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp r6:r6 - (r6 >> 24)

l000099F9_1:
	Mem24[pc_18:word32] = r0_13
	Mem25[pc_18 - 4:word32] = r3_14
	Mem26[pc_18 - 8:word32] = r4_15
	Mem27[pc_18 - 12:word32] = r5_16
	Mem28[pc_18 - 16:word32] = r6_9
	Mem29[pc_18 - 20:word32] = r7_17
	Mem30[pc_18 - 24:word32] = r9_11
	pc_18 = pc_18 - 28
// DataOut: pc r4 r6 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp r6:r6 - (r6 >> 24)

l000099FD:
	branch Z_5 l00009A01
// DataOut: pc r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 - (r6 >> 24) pc:pc - 28

l000099FD_1:
	Mem20[pc_18:word32] = r4_15
	Mem21[pc_18 - 4:word32] = r6_9
	Mem22[pc_18 - 8:word32] = r7_17
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 - (r6 >> 24) pc:pc - 28

l00009A01:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 - (r6 >> 24) pc:<invalid>



void SSIEnable(word32 r0, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV r0 r3
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SSIEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SSIEnable_entry:
// DataOut: r0 r3
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009A35:
	branch Z l00009A39
// DataOut: r0 r3
// DataOut (flags): CV
// SymbolicIn: sp:fp

l00009A35_1:
	V = cond(0xA0000001 - r0 - C) (alias)
// DataOut: r0 r3
// DataOut (flags): V
// SymbolicIn: sp:fp

l00009A39:
	branch V l00009A3D
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid>

l00009A39_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid>

l00009A3D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid>



void SSIDisable(word32 pc, word32 r0, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV pc r0 r3
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SSIDisable_entry:
// DataOut: pc r0 r3
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009A41:
	branch Z l00009A45
// DataOut: pc r0 r3
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009A41_1:
	byte NZCV_32 = cond(0xA0000001 - r0 - C)
	Z = NZCV_32 (alias)
	V = NZCV_32 (alias)
// DataOut: pc r0 r3
// DataOut (flags): ZV
// SymbolicIn: sp:fp

l00009A45:
	branch V l00009A49
// DataOut: pc r0 r3
// DataOut (flags): Z
// SymbolicIn: sp:fp r2:<invalid>

l00009A45_1:
// DataOut: pc
// DataOut (flags): Z
// SymbolicIn: sp:fp r2:<invalid>

l00009A49:
	branch Z l00009A49_thunk_SSIIntRegister
// DataOut: pc
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r4:r0 - (r3 << 6)

l00009A49_thunk_SSIIntRegister:
	SSIIntRegister()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r4:r0 - (r3 << 6)
// Terminates process

l00009A49_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r4:r0 - (r3 << 6)

l00009A49_thunk_SSIIntRegister:
	SSIIntRegister()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r4:r0 - (r3 << 6) r0:<invalid> r1:<invalid> r6:<invalid> pc:pc + 16
// Terminates process

SSIDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void SSIIntRegister()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SSIIntRegister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SSIIntRegister_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A4D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void SSIIntUnregister()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SSIIntUnregister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SSIIntUnregister_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A61:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void SSIIntEnable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SSIIntEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SSIIntEnable_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A75:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void SSIIntDisable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SSIIntDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SSIIntDisable_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A7D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void SSIIntStatus(word32 r7, word32 r8, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  V r7 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SSIIntStatus_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SSIIntStatus_entry:
// DataOut: r7 r8 r9
// DataOut (flags): V
// SymbolicIn: sp:fp

l00009A89:
	branch V l00009A8D
// DataOut: r7 r8 r9
// DataOut (flags): V
// SymbolicIn: sp:fp

l00009A89_1:
	Mem10[r9:word16] = (uint16) r8
// DataOut: r7 r9
// DataOut (flags): V
// SymbolicIn: sp:fp

l00009A8D:
	branch V l00009A91
// DataOut: r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp r9:r9 + 0x00000009

l00009A8D_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r9:r9 + 0x00000009

l00009A91:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r9:r9 + 0x00000009 ip:r9 + 0x00000012 - (r7 >> 32)



void SSIIntClear(word32 r2, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r2 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SSIIntClear_entry:
// DataOut: r2 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009A95:
	branch Z l00009A95_thunk_SSIDataPut
// DataOut: r2 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009A95_thunk_SSIDataPut:
	SSIDataPut()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00009A95_1:
	word32 r7_6 = r7 - __ror(r2, 0)
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009A95_thunk_SSIDataPut:
	SSIDataPut()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:<invalid>
// Terminates process

SSIIntClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void SSIDataPut()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SSIDataPut_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SSIDataPut_entry:
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009A99:
	branch Z l00009A9D
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A99_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A9D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00002CF1



void SSIDataNonBlockingPut(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SSIDataNonBlockingPut_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SSIDataNonBlockingPut_entry:
// DataOut: r0
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00009AA9:
	branch Z l00009AAD
// DataOut: r0
// DataOut (flags): C
// SymbolicIn: sp:fp

l00009AA9_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009AAD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid>



void SSIDataGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SSIDataGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SSIDataGet_entry:
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009AB9:
	branch Z l00009ABD
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009AB9_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009ABD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00002CF1



void SSIDataNonBlockingGet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SSIDataNonBlockingGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SSIDataNonBlockingGet_entry:
// DataOut: r0
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009AC9:
	branch Z l00009ACD
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009AC9_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009ACD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:r0 + 0x00000368



void SysCtlSRAMSizeGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlSRAMSizeGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SysCtlSRAMSizeGet_entry:
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009ADD:
	branch Z l00009AE1
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009ADD_1:
	word32 sp_5
	byte Z_6
	call fn0120AC11 (retsize: 0;)
		uses: sp_1,Z
		defs: sp_5,Z_6
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009AE1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void SysCtlFlashSizeGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlFlashSizeGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SysCtlFlashSizeGet_entry:
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009AF5:
	branch Z l00009AF9
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009AF5_1:
	word32 sp_5
	byte Z_6
	call fn0120AC29 (retsize: 0;)
		uses: sp_1,Z
		defs: sp_5,Z_6
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009AF9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void SysCtlPinPresent()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlPinPresent_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SysCtlPinPresent_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009B0D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void SysCtlPeripheralPresent(word32 r1, word32 r2, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZC r1 r2 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlPeripheralPresent_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SysCtlPeripheralPresent_entry:
// DataOut: r1 r2 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l00009B21:
	branch N l00009B25
// DataOut: r1 r2 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00009B21_1:
// DataOut: r1 r2 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00009B25:
	branch C l00009B29
// DataOut: r1 r2 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp r0:0x0000F24B

l00009B25_1:
	r2 = Mem0[0x0000F24B:int16]
// DataOut: r1 r2
// DataOut (flags): Z
// SymbolicIn: sp:fp r0:0x0000F24B

l00009B29:
	branch Z l00009B2D
// DataOut: r1 r2
// DataOut (flags): Z
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid>

l00009B29_1:
	word32 sp_23
	byte N_24
	word32 r0_25
	byte C_26
	word32 r8_28
	call fn01025EF1 (retsize: 0;)
		uses: C,N,r0_7,r1,r2_8,r8,sp_1,Z
		defs: C_26,N_24,r0_25,r1_30,r2_27,r8_28,sp_23,Z_29
// DataOut: r1 r2
// DataOut (flags): Z
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid>

l00009B2D:
	branch Z l00009B31
// DataOut: r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid>

l00009B2D_1:
	Mem21[r2:byte] = (byte) r1
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid>

l00009B31:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid>



void SysCtlPeripheralReset(word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z fp
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlPeripheralReset_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SysCtlPeripheralReset_entry:
// DataOut: fp
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009B3D:
	branch Z l00009B41
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009B3D_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009B41:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:fp - 0x00000210



void SysCtlPeripheralEnable(word32 pc, word32 r0, word32 r3, word32 r8, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV pc r0 r3 r8 r9
// LiveOut:
// Trashed: NZCV pc r0 r1 r2
// Preserved: sp
SysCtlPeripheralEnable_entry:
// DataOut: pc r0 r3 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009B7D:
	branch Z l00009B81
// DataOut: pc r0 r3 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009B7D_1:
	r0 = 0x0000F24B
// DataOut: pc r0 r3 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009B81:
	branch NZV l00009B85
// DataOut: pc r0 r3 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B

l00009B81_1:
	word32 sp_54
	byte NZV_57
	word32 r2_59
	byte NZCV_62
	word32 r1_63
	word32 r8_64
	word32 r3_65
	word32 pc_67
	call fn000EA735 (retsize: 0;)
		uses: C,N,NZCV,NZV,pc,r0_4,r1,r2,r3,r8,r9,sp_1,V,Z
		defs: C_61,N_66,NZCV_62,NZV_57,pc_67,r0_56,r1_63,r2_59,r3_65,r8_64,r9_60,sp_54,V_58,Z_55
// DataOut: pc r0 r3 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B

l00009B85:
	branch V l00009B89
// DataOut: pc r0 r3 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B

l00009B85_1:
	byte NZCV_48 = cond(__ror(r9, 0) - 0x0000F24B - C)
	Z = NZCV_48 (alias)
	V = NZCV_48 (alias)
	N = NZCV_48 (alias)
// DataOut: pc r0 r3 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B

l00009B89:
	branch Z l00009B8D
// DataOut: pc r0 r3 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid>

l00009B89_1:
// DataOut: pc r0 r3 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid>

l00009B8D:
	branch V l00009B91
// DataOut: pc r0 r3 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid> r1:r8

l00009B8D_1:
// DataOut: pc r0 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid> r1:r8

l00009B91:
	branch N l00009B95
// DataOut: pc r0 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid> r1:<invalid>

l00009B91_1:
	r0 = Mem0[0x00009B99:word32]
// DataOut: r0 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid> r1:<invalid>

l00009B95:
	branch Z l00009B95_thunk_SysCtlPeripheralDisable
// DataOut: r0 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r1:<invalid> pc:pc + 0x00000047

l00009B95_thunk_SysCtlPeripheralDisable:
	SysCtlPeripheralDisable(r9)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r1:<invalid> pc:pc + 0x00000047

l00009B95_1:
	Mem41[r0 + -165:word32] = r0
// DataOut: r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r1:<invalid> pc:pc + 0x00000047

l00009B95_thunk_SysCtlPeripheralDisable:
	SysCtlPeripheralDisable(r9)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r1:<invalid> pc:pc + 0x00000047

SysCtlPeripheralEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid> r1:<invalid> pc:pc + 0x00000047



void SysCtlPeripheralDisable(word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV r9
// LiveOut:
// Trashed: NZCV r0 r2
// Preserved: sp
SysCtlPeripheralDisable_entry:
// DataOut: r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009B99:
	branch Z l00009B9D
// DataOut: r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009B99_1:
// DataOut: r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009B9D:
	branch NZV l00009B9D_then
	word32 sp_4
	byte Z_5
	word32 r0_6
	byte NZV_7
	byte V_8
	word32 r2_9
	word32 r9_10
	bool C_11
	byte NZCV_12
	call fn000EA751 (retsize: 0;)
		uses: NZV,sp_1,Z
		defs: C_11,NZCV_12,NZV_7,r0_6,r2_9,r9_10,sp_4,V_8,Z_5
	return
// DataOut: r9
// DataOut (flags): CV
// SymbolicIn: sp:fp r0:0x0000F24B

l00009B9D_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x0000F24B

l00009BA1:
	branch V_8 l00009BA5
// DataOut: r9
// DataOut (flags): C
// SymbolicIn: sp:fp r0:0x0000F24B

l00009BA1_1:
	word32 r2_15 = __ror(r9_10, 0) - 0x0000F24B - C_11
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x0000F24B

l00009BA5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid>

SysCtlPeripheralDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid>



void SysCtlPeripheralSleepEnable(word32 pc, word32 r0, word32 r3, word32 r8, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV pc r0 r10 r3 r8
// LiveOut:
// Trashed: NZCV pc r0 r1 r2
// Preserved: sp
SysCtlPeripheralSleepEnable_entry:
// DataOut: pc r0 r10 r3 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009BB5:
	branch Z l00009BB9
// DataOut: pc r0 r10 r3 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009BB5_1:
	r0 = 0x0000F24B
// DataOut: pc r0 r10 r3 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009BB9:
	branch ZC l00009BBD
// DataOut: pc r0 r10 r3 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B

l00009BB9_1:
	word32 sp_54
	byte ZC_57
	word32 r2_59
	byte NZCV_62
	word32 r1_63
	word32 r8_64
	word32 r3_65
	word32 pc_67
	call fn000EA76D (retsize: 0;)
		uses: C,N,NZCV,pc,r0_4,r1,r10,r2,r3,r8,sp_1,V,Z,ZC
		defs: C_61,N_66,NZCV_62,pc_67,r0_56,r1_63,r10_60,r2_59,r3_65,r8_64,sp_54,V_58,Z_55,ZC_57
// DataOut: pc r0 r10 r3 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B

l00009BBD:
	branch V l00009BC1
// DataOut: pc r0 r10 r3 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B

l00009BBD_1:
	byte NZCV_48 = cond(__ror(r10, 0) - 0x0000F24B - C)
	Z = NZCV_48 (alias)
	V = NZCV_48 (alias)
	N = NZCV_48 (alias)
// DataOut: pc r0 r10 r3 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B

l00009BC1:
	branch Z l00009BC5
// DataOut: pc r0 r10 r3 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid>

l00009BC1_1:
// DataOut: pc r0 r10 r3
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid>

l00009BC5:
	branch V l00009BC9
// DataOut: pc r0 r10 r3
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid> r1:r8

l00009BC5_1:
// DataOut: pc r0 r10
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid> r1:r8

l00009BC9:
	branch N l00009BCD
// DataOut: pc r0 r10
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid> r1:<invalid>

l00009BC9_1:
	r0 = Mem0[0x00009BD1:word32]
// DataOut: r0 r10
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid> r1:<invalid>

l00009BCD:
	branch Z l00009BCD_thunk_SysCtlPeripheralSleepDisable
// DataOut: r0 r10
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r1:<invalid> pc:pc + 0x00000047

l00009BCD_thunk_SysCtlPeripheralSleepDisable:
	SysCtlPeripheralSleepDisable(r10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r1:<invalid> pc:pc + 0x00000047

l00009BCD_1:
	Mem41[r0 + -165:word32] = r0
// DataOut: r10
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r1:<invalid> pc:pc + 0x00000047

l00009BCD_thunk_SysCtlPeripheralSleepDisable:
	SysCtlPeripheralSleepDisable(r10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r1:<invalid> pc:pc + 0x00000047

SysCtlPeripheralSleepEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid> r1:<invalid> pc:pc + 0x00000047



void SysCtlPeripheralSleepDisable(word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV r10
// LiveOut:
// Trashed: NZCV r0 r2
// Preserved: sp
SysCtlPeripheralSleepDisable_entry:
// DataOut: r10
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009BD1:
	branch Z l00009BD5
// DataOut: r10
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009BD1_1:
// DataOut: r10
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009BD5:
	branch ZC l00009BD5_then
	word32 sp_4
	byte Z_5
	word32 r0_6
	byte ZC_7
	byte V_8
	word32 r2_9
	word32 r10_10
	bool C_11
	byte NZCV_12
	call fn000EA789 (retsize: 0;)
		uses: sp_1,Z,ZC
		defs: C_11,NZCV_12,r0_6,r10_10,r2_9,sp_4,V_8,Z_5,ZC_7
	return
// DataOut: r10
// DataOut (flags): CV
// SymbolicIn: sp:fp r0:0x0000F24B

l00009BD5_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x0000F24B

l00009BD9:
	branch V_8 l00009BDD
// DataOut: r10
// DataOut (flags): C
// SymbolicIn: sp:fp r0:0x0000F24B

l00009BD9_1:
	word32 r2_15 = __ror(r10_10, 0) - 0x0000F24B - C_11
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x0000F24B

l00009BDD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid>

SysCtlPeripheralSleepDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid>



void SysCtlPeripheralDeepSleepEnable(word32 pc, word32 r0, word32 r3, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV fp pc r0 r3 r8
// LiveOut:
// Trashed: NZCV pc r0 r1 r2
// Preserved: sp
SysCtlPeripheralDeepSleepEnable_entry:
// DataOut: fp pc r0 r3 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009BED:
	branch Z l00009BF1
// DataOut: fp pc r0 r3 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009BED_1:
	r0 = 0x0000F24B
// DataOut: fp pc r0 r3 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009BF1:
	branch N l00009BF5
// DataOut: fp pc r0 r3 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B

l00009BF1_1:
	word32 sp_50
	word32 r2_55
	byte NZCV_58
	word32 r1_59
	word32 r8_60
	word32 r3_61
	word32 pc_62
	call fn000EA7A5 (retsize: 0;)
		uses: C,fp,N,NZCV,pc,r0_4,r1,r2,r3,r8,sp_1,V,Z
		defs: C_57,fp_56,N_53,NZCV_58,pc_62,r0_52,r1_59,r2_55,r3_61,r8_60,sp_50,V_54,Z_51
// DataOut: fp pc r0 r3 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B

l00009BF5:
	branch V l00009BF9
// DataOut: fp pc r0 r3 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B

l00009BF5_1:
	byte NZCV_45 = cond(__ror(fp, 0) - 0x0000F24B - C)
	N = NZCV_45 (alias)
	Z = NZCV_45 (alias)
	V = NZCV_45 (alias)
// DataOut: fp pc r0 r3 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B

l00009BF9:
	branch Z l00009BFD
// DataOut: fp pc r0 r3 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid>

l00009BF9_1:
// DataOut: fp pc r0 r3
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid>

l00009BFD:
	branch V l00009C01
// DataOut: fp pc r0 r3
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid> r1:r8

l00009BFD_1:
// DataOut: fp pc r0
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid> r1:r8

l00009C01:
	branch N l00009C05
// DataOut: fp pc r0
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid> r1:<invalid>

l00009C01_1:
	r0 = Mem0[0x00009C09:word32]
// DataOut: fp r0
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid> r1:<invalid>

l00009C05:
	branch Z l00009C05_thunk_SysCtlPeripheralDeepSleepDisable
// DataOut: fp r0
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r1:<invalid> pc:pc + 0x00000047

l00009C05_thunk_SysCtlPeripheralDeepSleepDisable:
	SysCtlPeripheralDeepSleepDisable(fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r1:<invalid> pc:pc + 0x00000047

l00009C05_1:
	Mem38[r0 + -165:word32] = r0
// DataOut: fp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r1:<invalid> pc:pc + 0x00000047

l00009C05_thunk_SysCtlPeripheralDeepSleepDisable:
	SysCtlPeripheralDeepSleepDisable(fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r2:<invalid> r1:<invalid> pc:pc + 0x00000047

SysCtlPeripheralDeepSleepEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid> r1:<invalid> pc:pc + 0x00000047



void SysCtlPeripheralDeepSleepDisable(word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV fp
// LiveOut:
// Trashed: NZCV r0 r2
// Preserved: sp
SysCtlPeripheralDeepSleepDisable_entry:
// DataOut: fp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009C09:
	branch Z l00009C0D
// DataOut: fp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009C09_1:
// DataOut: fp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009C0D:
	branch NZ l00009C0D_then
	word32 sp_4
	byte Z_5
	word32 r0_6
	byte NZ_7
	byte V_8
	word32 r2_9
	word32 fp_10
	bool C_11
	byte NZCV_12
	call fn000EA7C1 (retsize: 0;)
		uses: NZ,sp_1,Z
		defs: C_11,fp_10,NZ_7,NZCV_12,r0_6,r2_9,sp_4,V_8,Z_5
	return
// DataOut: fp
// DataOut (flags): CV
// SymbolicIn: sp:fp r0:0x0000F24B

l00009C0D_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x0000F24B

l00009C11:
	branch V_8 l00009C15
// DataOut: fp
// DataOut (flags): C
// SymbolicIn: sp:fp r0:0x0000F24B

l00009C11_1:
	word32 r2_15 = __ror(fp_10, 0) - 0x0000F24B - C_11
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x0000F24B

l00009C15:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid>

SysCtlPeripheralDeepSleepDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x0000F24B r2:<invalid>



void SysCtlPeripheralClockGating(word32 pc, word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 fp, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV fp ip pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlPeripheralClockGating_entry:
// DataOut: fp ip pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009C25:
	branch Z l00009C29
// DataOut: fp ip pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009C25_1:
	Mem57[r8:word32] = r1
	Mem58[r8 - 4:word32] = r3
	Mem59[r8 - 8:word32] = r6
	Mem60[r8 - 12:word32] = r8
	Mem61[r8 - 16:word32] = r9
	Mem62[r8 - 20:word32] = ip
	r8 = r8 - 24
// DataOut: fp ip pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009C29:
	branch Z l00009C2D
// DataOut: fp ip pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r8:r8 - 24

l00009C29_1:
	r2 = Mem0[r0:word16]
	r0 = r0 + 0x00000039
// DataOut: fp ip pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r8:r8 - 24

l00009C2D:
	branch V l00009C31
// DataOut: fp ip pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:r0 + 0x00000039

l00009C2D_1:
	word32 r1_53 = r0 - __ror(r3, 6)
// DataOut: fp ip pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:r0 + 0x00000039

l00009C31:
	branch Z l00009C35
// DataOut: fp ip pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:r0 + 0x00000039 r1:<invalid>

l00009C31_1:
	r4 = (r7 >> 6) - r0 - C
	byte NZCV_49 = cond(r4)
	C = NZCV_49 (alias)
	Z = NZCV_49 (alias)
	V = NZCV_49 (alias)
// DataOut: fp ip pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:r0 + 0x00000039 r1:<invalid>

l00009C35:
	branch V l00009C39
// DataOut: fp ip pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:r0 + 0x00000039 r1:<invalid> r4:<invalid>

l00009C35_1:
	word32 r1_47 = r0 - __ror(r3, 6)
// DataOut: fp ip pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:r0 + 0x00000039 r1:<invalid> r4:<invalid>

l00009C39:
	branch V l00009C3D
// DataOut: fp ip pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:r0 + 0x00000039 r1:<invalid> r4:<invalid>

l00009C39_1:
	r0 = pc + (r7 >> 32) + C
	Z = cond(r0) (alias)
// DataOut: fp ip pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:r0 + 0x00000039 r1:<invalid> r4:<invalid>

l00009C3D:
	branch Z l00009C3D_thunk_SysCtlIntRegister
// DataOut: fp ip pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:<invalid> r1:<invalid> r4:<invalid>

l00009C3D_thunk_SysCtlIntRegister:
	SysCtlIntRegister(pc, r2, r3, r4, r5, r6, r7, r8, r10, fp, ip)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:<invalid> r1:<invalid> r4:<invalid>
// Terminates process

l00009C3D_1:
	Mem27[r0:word32] = r5
	Mem29[r0 - 4:word32] = r6
	Mem31[r0 - 8:word32] = r7
	Mem32[r0 - 12:word32] = r8
	Mem34[r0 - 16:word32] = r9
	Mem36[r0 - 20:word32] = r10
	Mem38[r0 - 24:word32] = fp
// DataOut: fp ip pc r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:<invalid> r1:<invalid> r4:<invalid>

l00009C3D_thunk_SysCtlIntRegister:
	SysCtlIntRegister(pc, r2, r3, r4, r5, r6, r7, r8, r10, fp, ip)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:<invalid> r1:<invalid> r4:<invalid>
// Terminates process

SysCtlPeripheralClockGating_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void SysCtlIntRegister(word32 pc, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r10, word32 fp, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZC fp ip pc r10 r2 r3 r4 r5 r6 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlIntRegister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SysCtlIntRegister_entry:
// DataOut: fp ip pc r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009C41:
	branch C l00009C45
// DataOut: fp ip pc r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZ
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009C45:
	branch N l00009C49
// DataOut: fp ip pc r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009C49:
	branch Z l00009C4D
// DataOut: fp ip pc r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009C49_1:
	Mem8[r8:word32] = r2
	Mem10[r8 + 4:word32] = r3
	Mem12[r8 + 8:word32] = r4
	Mem14[r8 + 12:word32] = r5
	Mem16[r8 + 16:word32] = r6
	Mem18[r8 + 20:word32] = r7
	Mem19[r8 + 24:word32] = r8
	Mem21[r8 + 28:word32] = r10
	Mem23[r8 + 32:word32] = fp
	Mem25[r8 + 36:word32] = ip
	Mem26[r8 + 40:word32] = fp
	Mem28[r8 + 44:word32] = pc
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009C4D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 + 48

l00009C45_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009C41_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void SysCtlIntUnregister()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlIntUnregister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SysCtlIntUnregister_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009C55:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void SysCtlIntEnable(word32 pc, word32 r0, word32 r1, word32 r3, word32 r6, word32 r8, word32 r9, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZV ip pc r0 r1 r3 r6 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlIntEnable_entry:
// DataOut: ip pc r0 r1 r3 r6 r8 r9
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l00009C69:
	branch Z l00009C6D
// DataOut: ip pc r0 r1 r3 r6 r8 r9
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l00009C69_1:
	Mem20[r8:word32] = r1
	Mem21[r8 - 4:word32] = r3
	Mem23[r8 - 8:word32] = r6
	Mem24[r8 - 12:word32] = r8
	Mem26[r8 - 16:word32] = r9
	Mem28[r8 - 20:word32] = ip
// DataOut: pc r0 r3
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l00009C6D:
	branch V l00009C71
// DataOut: pc r0 r3
// DataOut (flags): NZ
// SymbolicIn: sp:fp r8:r8 - 24

l00009C6D_1:
// DataOut: pc r0
// DataOut (flags): NZ
// SymbolicIn: sp:fp r8:r8 - 24

l00009C71:
	branch N l00009C75
// DataOut: pc r0
// DataOut (flags): Z
// SymbolicIn: sp:fp r8:r8 - 24 r1:r0 - (r3 >> 32)

l00009C71_1:
// DataOut: r0
// DataOut (flags): Z
// SymbolicIn: sp:fp r8:r8 - 24 r1:r0 - (r3 >> 32)

l00009C75:
	branch Z l00009C75_thunk_SysCtlIntDisable
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 - 24 r1:r0 - (r3 >> 32) r0:<invalid> pc:pc + 0x00000047

l00009C75_thunk_SysCtlIntDisable:
	SysCtlIntDisable()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 - 24 r1:r0 - (r3 >> 32) r0:<invalid> pc:pc + 0x00000047
// Terminates process

l00009C75_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 - 24 r1:r0 - (r3 >> 32) r0:<invalid> pc:pc + 0x00000047

l00009C75_thunk_SysCtlIntDisable:
	SysCtlIntDisable()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 - 24 r1:r0 - (r3 >> 32) r0:<invalid> pc:pc + 0x00000047
// Terminates process

SysCtlIntEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void SysCtlIntDisable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlIntDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SysCtlIntDisable_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009C79:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void SysCtlIntClear(word32 pc, word64 d1, word32 r0, word32 r1, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZV d1 fp pc r0 r1 r10 r3 r4 r5 r6 r7 r8 r9
// LiveOut:
// Trashed: NZCV pc r0 r1 r2 r6 r7
// Preserved: sp
SysCtlIntClear_entry:
// DataOut: d1 fp pc r0 r1 r10 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009C89:
	branch V l00009C8D
// DataOut: d1 fp pc r0 r1 r10 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009C89_1:
	r1 = r0 - (fp >> 16)
// DataOut: d1 fp pc r0 r1 r10 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009C8D:
	branch N l00009C91
// DataOut: d1 fp pc r0 r1 r10 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r1:r0 - (fp >> 16)

l00009C8D_1:
	r0 = Mem0[pc:word32]
	r1 = Mem0[pc + 4:word32]
	r6 = Mem0[pc + 12:word32]
	pc = pc + 16
// DataOut: d1 fp pc r0 r1 r10 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r1:r0 - (fp >> 16)

l00009C91:
	branch Z l00009C91_thunk_SysCtlIntStatus
// DataOut: d1 fp pc r0 r1 r10 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r2:<invalid> r6:<invalid> pc:pc + 16

l00009C91_thunk_SysCtlIntStatus:
	SysCtlIntStatus(pc, d1, r0, r1, r3, r4, r5, r6, r7, r8, r9, r10, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r2:<invalid> r6:<invalid> pc:pc + 16

l00009C91_1:
	word32 r0_17 = r0 - __ror(r0, 31)
// DataOut: d1 fp pc r0 r1 r10 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r2:<invalid> r6:<invalid> pc:pc + 16

l00009C91_thunk_SysCtlIntStatus:
	SysCtlIntStatus(pc, d1, r0_17, r1, r3, r4, r5, r6, r7, r8, r9, r10, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r2:<invalid> r6:<invalid> pc:pc + 16

SysCtlIntClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r2:<invalid> r6:<invalid> pc:<invalid> r7:<invalid>



void SysCtlIntStatus(word32 pc, word64 d1, word32 r0, word32 r1, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV d1 fp pc r0 r1 r10 r3 r4 r5 r6 r7 r8 r9
// LiveOut:
// Trashed: NZCV pc r0 r1 r7
// Preserved: sp
SysCtlIntStatus_entry:
// DataOut: d1 fp pc r0 r1 r10 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009C95:
	branch Z l00009C99
// DataOut: d1 fp pc r0 r1 r10 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009C95_1:
	Mem49[fp:word32] = r0
	Mem50[fp - 4:word32] = r3
	Mem52[fp - 8:word32] = r4
	Mem53[fp - 12:word32] = r5
	Mem54[fp - 16:word32] = r7
	Mem55[fp - 20:word32] = r8
	Mem56[fp - 24:word32] = r9
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009C99:
	branch Z l00009C9D
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009C99_1:
	r7 = r7 - 0x00000068
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l00009C9D:
	branch V l00009CA1
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r7:r7 - 0x00000068

l00009C9D_1:
	r1 = r8 - (fp >> 16)
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r7:r7 - 0x00000068

l00009CA1:
	branch N l00009CA5
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r7:r7 - 0x00000068 r1:r8 - (fp >> 16)

l00009CA1_1:
	r0 = pc + (r7 >> 32) + C
	byte NZCV_42 = cond(r0)
	r0_r0 = SEQ(r0, r0) (alias)
	N = NZCV_42 (alias)
	Z = NZCV_42 (alias)
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r6 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r7:r7 - 0x00000068 r1:r8 - (fp >> 16)

l00009CA5:
	branch N l00009CA9
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r7:r7 - 0x00000068 r1:r8 - (fp >> 16) r0:<invalid>

l00009CA5_1:
	Mem31[r0:word32] = r5
	Mem33[r0 - 4:word32] = r6
	Mem34[r0 - 8:word32] = r7
	Mem35[r0 - 12:word32] = r8
	Mem37[r0 - 16:word32] = r9
	Mem38[r0 - 20:word32] = r10
	Mem39[r0 - 24:word32] = fp
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r7:r7 - 0x00000068 r1:r8 - (fp >> 16) r0:<invalid>

l00009CA9:
	branch Z l00009CA9_thunk_SysCtlLDOSet
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r7:r7 - 0x00000068 r1:r8 - (fp >> 16) r0:<invalid>

l00009CA9_thunk_SysCtlLDOSet:
	SysCtlLDOSet(pc, d1, r0, r1, r3, r5, r7, r8, r10, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7 - 0x00000068 r1:r8 - (fp >> 16) r0:<invalid>

l00009CA9_1:
	word32 r0_24 = (word32) ((int16) (r0 >> 16) *s (int16) (pc >> 16) + r0_r0)
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r7:r7 - 0x00000068 r1:r8 - (fp >> 16) r0:<invalid>

l00009CA9_thunk_SysCtlLDOSet:
	SysCtlLDOSet(pc, d1, r0_24, r1, r3, r5, r7, r8, r10, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7 - 0x00000068 r1:r8 - (fp >> 16) r0:<invalid> Sequence r0:r0:<invalid>

SysCtlIntStatus_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7 - 0x00000068 r1:<invalid> r0:<invalid> pc:<invalid> Sequence r0:r0:<invalid>



void SysCtlLDOSet(word32 pc, word64 d1, word32 r0, word32 r1, word32 r3, word32 r5, word32 r7, word32 r8, word32 r10, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV d1 fp pc r0 r1 r10 r3 r5 r7 r8
// LiveOut:
// Trashed: NZCV pc r0 r1
// Preserved: sp
SysCtlLDOSet_entry:
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009CAD:
	branch V l00009CB1
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009CAD_1:
	r1 = r0 - (fp >> 16)
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009CB1:
	branch C l00009CB5
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:r0 - (fp >> 16)

l00009CB1_1:
	r0 = Mem0[0x00009CB9:word32]
	r0_r0 = SEQ(r0, r0) (alias)
	pc = pc + 0x00000047
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:r0 - (fp >> 16)

l00009CB5:
	branch Z l00009CB5_thunk_SysCtlLDOGet
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:r0 - (fp >> 16) r0:<invalid> pc:pc + 0x00000047

l00009CB5_thunk_SysCtlLDOGet:
	SysCtlLDOGet(pc, d1, r0, r1, r3, r5, r7, r8, r10, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r0 - (fp >> 16) r0:<invalid> pc:pc + 0x00000047

l00009CB5_1:
	word32 r0_16 = (word32) ((int16) (r0 >> 16) *s (int16) (pc >> 16) + r0_r0)
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:r0 - (fp >> 16) r0:<invalid> pc:pc + 0x00000047

l00009CB5_thunk_SysCtlLDOGet:
	SysCtlLDOGet(pc, d1, r0_16, r1, r3, r5, r7, r8, r10, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r0 - (fp >> 16) r0:<invalid> pc:pc + 0x00000047 Sequence r0:r0:<invalid>

SysCtlLDOSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> pc:<invalid> Sequence r0:r0:<invalid>



void SysCtlLDOGet(word32 pc, word64 d1, word32 r0, word32 r1, word32 r3, word32 r5, word32 r7, word32 r8, word32 r10, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV d1 fp pc r0 r1 r10 r3 r5 r7 r8
// LiveOut:
// Trashed: NZCV pc r0 r1
// Preserved: sp
SysCtlLDOGet_entry:
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009CB9:
	branch V l00009CBD
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009CB9_1:
	r1 = r8 - (fp >> 16)
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009CBD:
	branch C l00009CC1
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:r8 - (fp >> 16)

l00009CBD_1:
	r0 = Mem0[0x00009CC5:word32]
	r0_r0 = SEQ(r0, r0) (alias)
	pc = pc + 0x00000047
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:r8 - (fp >> 16)

l00009CC1:
	branch Z l00009CC1_thunk_SysCtlLDOConfigSet
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:r8 - (fp >> 16) r0:<invalid> pc:pc + 0x00000047

l00009CC1_thunk_SysCtlLDOConfigSet:
	SysCtlLDOConfigSet(pc, d1, r0, r1, r3, r5, r7, r10, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r8 - (fp >> 16) r0:<invalid> pc:pc + 0x00000047

l00009CC1_1:
	word32 r0_16 = (word32) ((int16) (r0 >> 16) *s (int16) (pc >> 16) + r0_r0)
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:r8 - (fp >> 16) r0:<invalid> pc:pc + 0x00000047

l00009CC1_thunk_SysCtlLDOConfigSet:
	SysCtlLDOConfigSet(pc, d1, r0_16, r1, r3, r5, r7, r10, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r8 - (fp >> 16) r0:<invalid> pc:pc + 0x00000047 Sequence r0:r0:<invalid>

SysCtlLDOGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> pc:pc + 0x00000047 Sequence r0:r0:<invalid>



void SysCtlLDOConfigSet(word32 pc, word64 d1, word32 r0, word32 r1, word32 r3, word32 r5, word32 r7, word32 r10, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV d1 fp pc r0 r1 r10 r3 r5 r7
// LiveOut:
// Trashed: NZCV r0 r1
// Preserved: sp
SysCtlLDOConfigSet_entry:
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009CC5:
	branch V l00009CC9
// DataOut: d1 fp pc r0 r1 r10 r3 r5 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009CC5_1:
	r1 = r0 - (fp >> 16)
// DataOut: d1 pc r0 r1 r10 r3 r5 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009CC9:
	branch V l00009CCD
// DataOut: d1 pc r0 r1 r10 r3 r5 r7
// DataOut (flags): ZC
// SymbolicIn: sp:fp r1:r0 - (fp >> 16)

l00009CC9_1:
	r0 = pc + (r7 >> 32) + C
	r0_r0 = SEQ(r0, r0) (alias)
	Z = cond(r0) (alias)
// DataOut: d1 pc r0 r1 r10 r3 r5 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:r0 - (fp >> 16)

l00009CCD:
	branch Z l00009CCD_thunk_SysCtlReset
// DataOut: d1 pc r0 r1 r10 r3 r5 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:r0 - (fp >> 16) r0:<invalid>

l00009CCD_thunk_SysCtlReset:
	SysCtlReset(d1, r0, r3, r5, r7, r10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r0 - (fp >> 16) r0:<invalid>

l00009CCD_1:
	word32 r0_20 = (word32) ((int16) (r1 >> 16) *s (int16) (pc >> 16) + r0_r0)
// DataOut: d1 r0 r10 r3 r5 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:r0 - (fp >> 16) r0:<invalid>

l00009CCD_thunk_SysCtlReset:
	SysCtlReset(d1, r0_20, r3, r5, r7, r10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r0 - (fp >> 16) r0:<invalid> Sequence r0:r0:<invalid>

SysCtlLDOConfigSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r0 - (fp >> 16) r0:<invalid> Sequence r0:r0:<invalid>



void SysCtlReset(word64 d1, word32 r0, word32 r3, word32 r5, word32 r7, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z d1 r0 r10 r3 r5 r7
// LiveOut:
// Trashed: r0
// Preserved: r7 sp
SysCtlReset_entry:
// DataOut: d1 r0 r10 r3 r5 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009CD1:
	sp = fp
	branch Test(NE,Z) l00009CD1_then
	call fn0128A605 (retsize: 0;)
	return
// DataOut: d1 r0 r10 r3 r5 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009CD1_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009CD5:
	branch Test(NE,Z) l00009CD9
// DataOut: d1 r0 r10 r3 r5 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009CD5_1:
	r7 = r7
	__stcl(0x0E, 0x0F, Mem0[r7:void])
	Mem0[0x0E:word32] = d1
	Mem0[0x00000012:word32] = r7
	0x0E = 0x00000016
// DataOut: r0 r10 r3 r5
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009CD9:
	branch Test(NE,Z) l00009CDD
// DataOut: r0 r10 r3 r5
// DataOut (flags): Z
// SymbolicIn: sp:fp r7:r7

l00009CD9_1:
	Mem0[r0:byte] = (byte) r0
	r0 = r0 + 0x000000ED
// DataOut: r0 r10 r3 r5
// DataOut (flags): Z
// SymbolicIn: sp:fp r7:r7

l00009CDD:
	branch Test(NE,Z) l00009CDD_thunk_SysCtlSleep
// DataOut: r0 r10 r3 r5
// DataOut (flags): Z
// SymbolicIn: sp:fp r7:r7 r0:r0 + 0x000000ED

l00009CDD_thunk_SysCtlSleep:
	SysCtlSleep(r0, r3, r10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7 r0:r0 + 0x000000ED
// Terminates process

l00009CDD_1:
	pc = r5 & r0 << 20
// DataOut: r0 r10 r3
// DataOut (flags): Z
// SymbolicIn: sp:fp r7:r7 r0:r0 + 0x000000ED

l00009CDD_thunk_SysCtlSleep:
	SysCtlSleep(r0, r3, r10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7 r0:r0 + 0x000000ED pc:r5 & r0 + 0x000001DA << 20
// Terminates process

SysCtlReset_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7 r0:r0 + 0x000000ED



void SysCtlSleep(word32 r0, word32 r3, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0 r10 r3
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlSleep_entry:
// DataOut: r0 r10 r3
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00009CE1:
	branch Z l00009CE1_thunk_SysCtlDeepSleep
// DataOut: r0 r10 r3
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00009CE1_thunk_SysCtlDeepSleep:
	SysCtlDeepSleep(r0, r3)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00009CE1_1:
	word32 r0_7 = Mem0[r10:int16]
// DataOut: r0 r3
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00009CE1_thunk_SysCtlDeepSleep:
	SysCtlDeepSleep(r0_7, r3)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r10:<invalid>
// Terminates process

SysCtlSleep_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void SysCtlDeepSleep(word32 r0, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC r0 r3
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlDeepSleep_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SysCtlDeepSleep_entry:
// DataOut: r0 r3
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00009CE5:
	branch C l00009CE9
// DataOut: r0 r3
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009CE5_1:
// DataOut: r0 r3
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009CE9:
	branch Z l00009CED
// DataOut: r0 r3
// DataOut (flags): Z
// SymbolicIn: sp:fp r0:DPB(r0, 0xC6B5, 16)

l00009CE9_1:
// DataOut: r0 r3
// DataOut (flags): Z
// SymbolicIn: sp:fp r0:DPB(r0, 0xC6B5, 16)

l00009CED:
	branch Z l00009CF1
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r4:<invalid>

l00009CED_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r4:<invalid>

l00009CF1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r4:<invalid> r2:<invalid>



void SysCtlResetCauseGet(word32 r0, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZV fp r0 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlResetCauseGet_entry:
// DataOut: fp r0 r8
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l00009D05:
	branch V l00009D09
// DataOut: fp r0 r8
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l00009D05_1:
// DataOut: r0
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l00009D09:
	branch N l00009D0D
// DataOut: r0
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:r8 - (fp >> 16)

l00009D0D:
	branch Z l00009D0D_thunk_SysCtlResetCauseClear
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r8 - (fp >> 16)

l00009D0D_thunk_SysCtlResetCauseClear:
	SysCtlResetCauseClear()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r8 - (fp >> 16)
// Terminates process

l00009D0D_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r8 - (fp >> 16)

l00009D0D_thunk_SysCtlResetCauseClear:
	SysCtlResetCauseClear()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r8 - (fp >> 16) r0:r0 - 0x00000380
// Terminates process

SysCtlResetCauseGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

l00009D09_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r8 - (fp >> 16)



void SysCtlResetCauseClear()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlResetCauseClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SysCtlResetCauseClear_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009D11:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void SysCtlBrownOutConfigSet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlBrownOutConfigSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SysCtlBrownOutConfigSet_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009D21:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void SysCtlClockSet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlClockSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SysCtlClockSet_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009D31:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void SysCtlClockGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlClockGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SysCtlClockGet_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009DF1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void SysCtlPWMClockSet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlPWMClockSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SysCtlPWMClockSet_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009E69:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void SysCtlPWMClockGet(word32 pc, word32 r0, word32 r4, word32 r7, word32 r8, word32 r10, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV fp pc r0 r10 r4 r7 r8
// LiveOut:
// Trashed: NZCV r0 r1 r2 r4
// Preserved: sp
SysCtlPWMClockGet_entry:
// DataOut: fp pc r0 r10 r4 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009E7D:
	branch Z l00009E81
// DataOut: fp pc r0 r10 r4 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009E7D_1:
// DataOut: pc r0 r10 r4 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009E81:
	branch V l00009E85
// DataOut: pc r0 r10 r4 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:r8 - (fp >> 16)

l00009E85:
	branch V l00009E89
// DataOut: pc r0 r10 r4 r7 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:r8 - (fp >> 16)

l00009E85_1:
	r0 = pc + (r7 >> 32) + C
	Z = cond(r0) (alias)
// DataOut: r0 r10 r4 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:r8 - (fp >> 16)

l00009E89:
	branch Z l00009E89_thunk_SysCtlADCSpeedSet
// DataOut: r0 r10 r4 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:r8 - (fp >> 16) r0:<invalid>

l00009E89_thunk_SysCtlADCSpeedSet:
	SysCtlADCSpeedSet(r0, r4, r8, r10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r8 - (fp >> 16) r0:<invalid>

l00009E89_1:
	word32 r0_47 = r0 - __ror(r0, 31)
// DataOut: r0 r10 r4 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r1:r8 - (fp >> 16) r0:<invalid>

l00009E89_thunk_SysCtlADCSpeedSet:
	SysCtlADCSpeedSet(r0_47, r4, r8, r10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r8 - (fp >> 16) r0:<invalid>

l00009E81_1:
	word32 sp_29
	byte Z_30
	word32 r1_31
	word32 r8_32
	word32 fp_33
	byte V_34
	word32 r0_35
	word32 pc_36
	word32 r7_37
	bool C_38
	byte NZCV_39
	word32 r4_40
	word32 r10_41
	call Mem0[r0:int16] (retsize: 0;)
		uses: C,fp,NZCV,pc,r0,r1_4,r10,r4,r7,r8,sp_1,V,Z
		defs: C_38,fp_33,NZCV_39,pc_36,r0_35,r1_31,r10_41,r4_40,r7_37,r8_32,sp_29,V_34,Z_30
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r8 - (fp >> 16)

SysCtlPWMClockGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r8 - (fp >> 16) r0:<invalid> r2:<invalid> r4:<invalid>



void SysCtlADCSpeedSet(word32 r0, word32 r4, word32 r8, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV r0 r10 r4 r8
// LiveOut:
// Trashed: NZCV r0 r2 r4
// Preserved: sp
SysCtlADCSpeedSet_entry:
// DataOut: r0 r10 r4 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009E8D:
	branch Z l00009E8D_then
	word32 sp_3
	byte Z_4
	byte V_5
	word32 r2_6
	word32 r4_7
	word32 r10_8
	bool C_9
	byte NZCV_10
	word32 r0_11
	word32 r8_12
	call fn0130C965 (retsize: 0;)
		uses: sp_1,Z
		defs: C_9,NZCV_10,r0_11,r10_8,r2_6,r4_7,r8_12,sp_3,V_5,Z_4
	return
// DataOut: r0 r10 r4 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009E8D_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009E91:
	branch Z_4 l00009E91_then
	word32 sp_13
	word32 r2_16
	word32 r4_17
	word32 r10_18
	byte NZCV_20
	word32 r8_22
	bool C_19
	byte V_15
	byte Z_14
	word32 r0_21
	call fn01A12BBD (retsize: 0;)
		uses: C_9,NZCV_10,r0_11,r10_8,r2_6,r4_7,r8_12,sp_3,V_5,Z_4
		defs: C_19,NZCV_20,r0_21,r10_18,r2_16,r4_17,r8_22,sp_13,V_15,Z_14
	return
// DataOut: r0 r10 r4 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009E91_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009E95:
	branch V_15 l00009E99
// DataOut: r0 r10 r4 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009E95_1:
	byte NZCV_58 = cond((r10_18 >> 6) - r4_17 - C_19)
	C_19 = NZCV_58 (alias)
	Z_14 = NZCV_58 (alias)
	V_15 = NZCV_58 (alias)
// DataOut: r0 r4 r8
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009E99:
	branch C_19 l00009E9D
// DataOut: r0 r4 r8
// DataOut (flags): ZV
// SymbolicIn: sp:fp r2:<invalid>

l00009E99_1:
	r0_21 = DPB(r0_21, 0x3363, 16)
// DataOut: r0 r4 r8
// DataOut (flags): ZV
// SymbolicIn: sp:fp r2:<invalid>

l00009E9D:
	branch Z_14 l00009EA1
// DataOut: r0 r4 r8
// DataOut (flags): ZV
// SymbolicIn: sp:fp r2:<invalid> r0:DPB(r0, 0x3363, 16)

l00009E9D_1:
	word32 r0_55 = r8_22 - __ror(r0_21, 22)
// DataOut: r4
// DataOut (flags): ZV
// SymbolicIn: sp:fp r2:<invalid> r0:DPB(r0, 0x3363, 16)

l00009EA1:
	branch V_15 l00009EA5
// DataOut: r4
// DataOut (flags): Z
// SymbolicIn: sp:fp r2:<invalid> r0:<invalid>

l00009EA1_1:
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp r2:<invalid> r0:<invalid>

l00009EA5:
	branch Z_14 l00009EA9
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r0:<invalid> r4:r4 + 0x0000003C

l00009EA5_1:
	word32 sp_42
	byte Z_43
	byte V_44
	word32 r2_45
	word32 r4_46
	word32 r10_47
	bool C_48
	byte NZCV_49
	word32 r0_50
	word32 r8_51
	call fn010CAC39 (retsize: 0;)
		uses: C_24,NZCV_23,r0_29,r10_18,r2_31,r4_30,r8_22,sp_13,V_26,Z_27
		defs: C_48,NZCV_49,r0_50,r10_47,r2_45,r4_46,r8_51,sp_42,V_44,Z_43
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r0:<invalid> r4:r4 + 0x0000003C

l00009EA9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r0:<invalid> r4:r4 + 0x0000003C

SysCtlADCSpeedSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r0:<invalid> r4:r4 + 0x0000003C



void SysCtlADCSpeedGet(word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z fp r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlADCSpeedGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SysCtlADCSpeedGet_entry:
// DataOut: fp r8
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009EC5:
	branch Z l00009EC9
// DataOut: fp r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009EC5_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009EC9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r8 - (fp >> 16)



void SysCtlIOSCVerificationSet(word32 pc, word32 r0, word32 r1, word32 r3, word32 r4, word32 r6, word32 r7, word32 r8, word32 r9, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV ip pc r0 r1 r3 r4 r6 r7 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlIOSCVerificationSet_entry:
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009ED5:
	branch Z l00009ED9
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009ED5_1:
	Mem68[r8:word32] = r1
	Mem69[r8 - 4:word32] = r3
	Mem70[r8 - 8:word32] = r6
	Mem71[r8 - 12:word32] = r8
	Mem72[r8 - 16:word32] = r9
	Mem73[r8 - 20:word32] = ip
	r8 = r8 - 24
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009ED9:
	branch Z l00009EDD
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24

l00009ED9_1:
	word32 r0_59 = Mem0[r0:word32]
	r3 = Mem0[r0_59 + 4:word32]
	r4 = Mem0[r0_59 + 8:word32]
	r7 = Mem0[r0_59 + 16:word32]
	r8 = Mem0[r0_59 + 20:word32]
	r9 = Mem0[r0_59 + 24:word32]
	r0 = r0_59 + 32
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24

l00009EDD:
	branch V l00009EE1
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r7:<invalid> r9:<invalid>

l00009EDD_1:
	r1 = r0 - (r3 << 6)
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r7:<invalid> r9:<invalid>

l00009EE1:
	branch Z l00009EE5
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r7:<invalid> r9:<invalid> r1:<invalid>

l00009EE1_1:
	word32 r0_50 = Mem0[r0:word32]
	r1 = Mem0[r0_50 + 4:word32]
	r6 = Mem0[r0_50 + 12:word32]
	r8 = Mem0[r0_50 + 16:word32]
	r9 = Mem0[r0_50 + 20:word32]
	r0 = r0_50 + 28
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r7:<invalid> r9:<invalid> r1:<invalid>

l00009EE5:
	branch V l00009EE9
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r7:<invalid> r9:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> lr:<invalid>

l00009EE5_1:
	r1 = r0 - (r3 << 6)
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r7:<invalid> r9:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> lr:<invalid>

l00009EE9:
	branch V l00009EED
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r7:<invalid> r9:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> lr:<invalid>

l00009EE9_1:
	r0 = pc + (r7 >> 32) + C
	Z = cond(r0) (alias)
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r7:<invalid> r9:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> lr:<invalid>

l00009EED:
	branch Z l00009EED_thunk_SysCtlMOSCVerificationSet
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r7:<invalid> r9:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> lr:<invalid>

l00009EED_thunk_SysCtlMOSCVerificationSet:
	SysCtlMOSCVerificationSet(pc, r0, r1, r3, r4, r6, r7, r8, r9, ip)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r7:<invalid> r9:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> lr:<invalid>
// Terminates process

l00009EED_1:
	Mem40[r0 + -4064:byte] = (byte) r0
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r8:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r7:<invalid> r9:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> lr:<invalid>

l00009EED_thunk_SysCtlMOSCVerificationSet:
	SysCtlMOSCVerificationSet(pc, r0, r1, r3, r4, r6, r7, r8, r9, ip)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r7:<invalid> r9:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> lr:<invalid>
// Terminates process

SysCtlIOSCVerificationSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void SysCtlMOSCVerificationSet(word32 pc, word32 r0, word32 r1, word32 r3, word32 r4, word32 r6, word32 r7, word32 r8, word32 r9, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV ip pc r0 r1 r3 r4 r6 r7 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlMOSCVerificationSet_entry:
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009EF1:
	branch Z l00009EF5
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009EF1_1:
	Mem42[r8:word32] = r1
	Mem43[r8 - 4:word32] = r3
	Mem44[r8 - 8:word32] = r6
	Mem45[r8 - 12:word32] = r8
	Mem46[r8 - 16:word32] = r9
	Mem47[r8 - 20:word32] = ip
	r8 = r8 - 24
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009EF5:
	branch Z l00009EF9
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24

l00009EF5_1:
	r0 = r0 + 0x000003B9
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24

l00009EF9:
	branch V l00009EFD
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:r0 + 0x000003B9

l00009EF9_1:
	r1 = r0 - (r3 << 6)
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:r0 + 0x000003B9

l00009EFD:
	branch Z l00009F01
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:r0 + 0x000003B9 r1:r0 + 0x00000772 - (r3 << 6)

l00009EFD_1:
	r4 = Mem0[r0:byte]
	r0 = r0 + 0x00000347
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:r0 + 0x000003B9 r1:r0 + 0x00000772 - (r3 << 6)

l00009F01:
	branch V l00009F05
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:<invalid> r1:r0 + 0x00000772 - (r3 << 6) r4:<invalid>

l00009F01_1:
	r1 = r0 - (r3 << 6)
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:<invalid> r1:r0 + 0x00000772 - (r3 << 6) r4:<invalid>

l00009F05:
	branch V l00009F09
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:<invalid> r1:<invalid> r4:<invalid>

l00009F05_1:
	r0 = pc + (r7 >> 32) + C
	Z = cond(r0) (alias)
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:<invalid> r1:<invalid> r4:<invalid>

l00009F09:
	branch Z l00009F09_thunk_SysCtlPLLVerificationSet
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:<invalid> r1:<invalid> r4:<invalid>

l00009F09_thunk_SysCtlPLLVerificationSet:
	SysCtlPLLVerificationSet(pc, r0, r1, r3, r4, r6, r7, r8, r9, ip)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:<invalid> r1:<invalid> r4:<invalid>
// Terminates process

l00009F09_1:
	Mem23[r0 + -4064:byte] = (byte) r0
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:<invalid> r1:<invalid> r4:<invalid>

l00009F09_thunk_SysCtlPLLVerificationSet:
	SysCtlPLLVerificationSet(pc, r0, r1, r3, r4, r6, r7, r8, r9, ip)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r0:<invalid> r1:<invalid> r4:<invalid>
// Terminates process

SysCtlMOSCVerificationSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void SysCtlPLLVerificationSet(word32 pc, word32 r0, word32 r1, word32 r3, word32 r4, word32 r6, word32 r7, word32 r8, word32 r9, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV ip pc r0 r1 r3 r4 r6 r7 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlPLLVerificationSet_entry:
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009F0D:
	branch Z l00009F11
// DataOut: ip pc r0 r1 r3 r4 r6 r7 r8 r9
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009F0D_1:
	Mem54[r8:word32] = r1
	Mem55[r8 - 4:word32] = r3
	Mem57[r8 - 8:word32] = r6
	Mem58[r8 - 12:word32] = r8
	Mem60[r8 - 16:word32] = r9
	Mem62[r8 - 20:word32] = ip
// DataOut: pc r0 r3 r4 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009F11:
	branch ZC l00009F15
// DataOut: pc r0 r3 r4 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24

l00009F11_1:
	r4 = r4 + 0x00000039
// DataOut: pc r0 r3 r4 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24

l00009F15:
	branch V l00009F19
// DataOut: pc r0 r3 r4 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r4:r4 + 0x00000039

l00009F15_1:
	word32 r1_50 = r0 - __ror(r3, 6)
// DataOut: pc r0 r3 r4 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r4:r4 + 0x00000039

l00009F19:
	branch ZC l00009F1D
// DataOut: pc r0 r3 r4 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r4:r4 + 0x00000039 r1:<invalid>

l00009F19_1:
	byte NZCV_45 = cond((r7 >> 6) - r4 - C)
	C = NZCV_45 (alias)
	Z = NZCV_45 (alias)
	V = NZCV_45 (alias)
// DataOut: pc r0 r3 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r4:r4 + 0x00000039 r1:<invalid>

l00009F1D:
	branch V l00009F21
// DataOut: pc r0 r3 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r4:<invalid> r1:<invalid>

l00009F1D_1:
	word32 r1_43 = r0 - __ror(r3, 6)
// DataOut: pc r0 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r4:<invalid> r1:<invalid>

l00009F21:
	branch V l00009F25
// DataOut: pc r0 r7
// DataOut (flags): ZC
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r4:<invalid> r1:<invalid>

l00009F21_1:
	Z = cond(pc + (r7 >> 32) + C) (alias)
// DataOut: pc r0
// DataOut (flags): Z
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r4:<invalid> r1:<invalid>

l00009F25:
	branch Z l00009F25_thunk_SysCtlClkVerificationClear
// DataOut: pc r0
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r4:<invalid> r1:<invalid> r0:<invalid>

l00009F25_thunk_SysCtlClkVerificationClear:
	SysCtlClkVerificationClear()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r4:<invalid> r1:<invalid> r0:<invalid>
// Terminates process

l00009F25_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r4:<invalid> r1:<invalid> r0:<invalid>

l00009F25_thunk_SysCtlClkVerificationClear:
	SysCtlClkVerificationClear()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 - 24 r2:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> Sequence r0:r0:<invalid>
// Terminates process

SysCtlPLLVerificationSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void SysCtlClkVerificationClear()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlClkVerificationClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SysCtlClkVerificationClear_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009F29:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void UARTParityModeSet(word32 spsr, word32 r0, word32 r2, word32 r7, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV r0 r10 r2 r7 spsr
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
UARTParityModeSet_entry:
// DataOut: r0 r10 r2 r7 spsr
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009F39:
	branch ZC l00009F3D
// DataOut: r0 r10 r2 r7 spsr
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009F39_1:
	r2 = Mem0[r0:byte]
	r0 = r0 + __ror(r10, 6)
// DataOut: r0 r10 r2 r7 spsr
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l00009F3D:
	branch NZV l00009F41
// DataOut: r0 r10 r2 r7 spsr
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r2:<invalid> r0:<invalid>

l00009F3D_1:
	__mrs(spsr)
// DataOut: r0 r10 r2 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r2:<invalid> r0:<invalid>

l00009F41:
	branch NZV l00009F41_thunk_UARTParityModeGet
// DataOut: r0 r10 r2 r7
// DataOut (flags): ZC
// SymbolicIn: sp:fp r2:<invalid> r0:<invalid> r1:<invalid>

l00009F41_thunk_UARTParityModeGet:
	UARTParityModeGet(r0, r10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r0:<invalid> r1:<invalid>
// Terminates process

l00009F41_1:
	word32 r7_12 = r7 - __ror(r2, 0)
// DataOut: r0 r10
// DataOut (flags): ZC
// SymbolicIn: sp:fp r2:<invalid> r0:<invalid> r1:<invalid>

l00009F41_thunk_UARTParityModeGet:
	UARTParityModeGet(r0, r10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r0:<invalid> r1:<invalid> r7:<invalid>
// Terminates process

UARTParityModeSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void UARTParityModeGet(word32 r0, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC r0 r10
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
UARTParityModeGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

UARTParityModeGet_entry:
// DataOut: r0 r10
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00009F45:
	branch ZC l00009F49
// DataOut: r0 r10
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009F45_1:
	word32 r0_8 = Mem0[r0:byte] + __ror(r10, 0)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009F49:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



void UARTConfigSet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
UARTConfigSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

UARTConfigSet_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009F4D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void UARTConfigGet(word32 r0, word32 r1, word32 r2, word32 r6, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZV r0 r1 r2 r6 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
UARTConfigGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

UARTConfigGet_entry:
// DataOut: r0 r1 r2 r6 r9
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l00009FA9:
	branch NZV l00009FAD
// DataOut: r0 r1 r2 r6 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009FA9_1:
	word32 pc_17 = r1 - __ror(r9, 1)
// DataOut: r0 r2 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009FAD:
	branch Z l00009FB1
// DataOut: r0 r2 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp pc:<invalid>

l00009FAD_1:
	Mem13[r0:word32] = r2
	r0 = r0 + 0x000004F8
// DataOut: r0 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp pc:<invalid>

l00009FB1:
	branch Z l00009FB5
// DataOut: r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp pc:<invalid> r0:r0 + 0x000004F8

l00009FB1_1:
	Mem10[r6:byte] = (byte) r0
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:<invalid> r0:r0 + 0x000004F8

l00009FB5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp pc:<invalid> r0:r0 + 0x000004F8 r6:r6 - (r6 >> 30)



void UARTEnable(word32 r0, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC r0 r10
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
UARTEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

UARTEnable_entry:
// DataOut: r0 r10
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00009FD5:
	branch Z l00009FD9
// DataOut: r0 r10
// DataOut (flags): C
// SymbolicIn: sp:fp

l00009FD5_1:
	word32 r4_10 = __ror(r10, 6) - r0 - C
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009FD9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid>



void UARTDisable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
UARTDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

UARTDisable_entry:
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009FED:
	branch Z l00009FF1
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009FED_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009FF1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:0x000028F1



void UARTCharsAvail(word32 pc, word32 r0, word32 r3, word32 r6, word32 r7, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC pc r0 r3 r6 r7 r9
// LiveOut:
// Trashed: NZCV ip r6 r7 r8
// Preserved: sp
UARTCharsAvail_entry:
// DataOut: pc r0 r3 r6 r7 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l0000A00D:
	branch Z l0000A011
// DataOut: pc r0 r3 r6 r7 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l0000A00D_1:
	byte NZCV_44 = cond(__ror(r9, 0) - r0 - C)
	C = NZCV_44 (alias)
	Z = NZCV_44 (alias)
	ZC = NZCV_44 (alias)
// DataOut: pc r0 r3 r6 r7 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l0000A011:
	branch Z l0000A015
// DataOut: pc r0 r3 r6 r7 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp r8:<invalid>

l0000A011_1:
	ZC = cond(r0 - r3 - C) (alias)
// DataOut: pc r0 r3 r6 r7 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp r8:<invalid>

l0000A015:
	branch ZC l0000A019
// DataOut: pc r0 r3 r6 r7 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp r8:<invalid> ip:<invalid>

l0000A015_thunk_UARTSpaceAvail:
	UARTSpaceAvail(pc, r0, r3, r6, r7, r9)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> ip:<invalid>

l0000A015_1:
	word32 r7_30 = r7 - (r0 << r0)
// DataOut: pc r0 r3 r6 r7 r9
// DataOut (flags): NZC
// SymbolicIn: sp:fp r8:<invalid> ip:<invalid>

l0000A015_thunk_UARTSpaceAvail:
	UARTSpaceAvail(pc, r0, r3, r6, r7_30, r9)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> ip:<invalid> r7:r7 - (r0 << r0)

UARTCharsAvail_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> ip:<invalid> r7:<invalid> r6:<invalid>



void UARTSpaceAvail(word32 pc, word32 r0, word32 r3, word32 r6, word32 r7, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZC pc r0 r3 r6 r7 r9
// LiveOut:
// Trashed: NZCV ip r6 r7 r8
// Preserved: sp
UARTSpaceAvail_entry:
// DataOut: pc r0 r3 r6 r7 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A019:
	branch C l0000A01D
// DataOut: pc r0 r3 r6 r7 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A019_1:
	byte NZCV_32 = cond(__ror(r9, 0) - r0 - C)
	C = NZCV_32 (alias)
	ZC = NZCV_32 (alias)
	NZ = NZCV_32 (alias)
// DataOut: pc r0 r3 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A01D:
	branch NZ l0000A021
// DataOut: pc r0 r3 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r8:<invalid>

l0000A01D_1:
	ZC = cond(r0 - r3 - C) (alias)
// DataOut: pc r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r8:<invalid>

l0000A021:
	branch ZC l0000A025
// DataOut: pc r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r8:<invalid> ip:<invalid>

l0000A021_thunk_UARTCharNonBlockingGet:
	UARTCharNonBlockingGet(pc, r6, r7)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> ip:<invalid>

l0000A021_1:
	word32 r7_20 = DPB(r7, 0x7010, 16)
// DataOut: pc r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r8:<invalid> ip:<invalid>

l0000A021_thunk_UARTCharNonBlockingGet:
	UARTCharNonBlockingGet(pc, r6, r7_20)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> ip:<invalid> r7:DPB(r7, 0x7010, 16)

UARTSpaceAvail_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> ip:<invalid> r7:DPB(r7, 0x7010, 16) r6:<invalid>



void UARTCharNonBlockingGet(word32 pc, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV pc r6 r7
// LiveOut:
// Trashed: r6
// Preserved: sp
UARTCharNonBlockingGet_entry:
// DataOut: pc r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A025:
	branch N l0000A029
// DataOut: pc r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A025_1:
	Mem43[r6:word32] = fp
// DataOut: pc r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A029:
	branch NZ l0000A02D
// DataOut: pc r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r6:r6 - 0x00000B69

l0000A029_1:
// DataOut: pc r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp r6:r6 - 0x00000B69

l0000A02D:
	branch V l0000A031
// DataOut: pc r7
// DataOut (flags): ZC
// SymbolicIn: sp:fp r6:r6 - 0x00000B69

l0000A031:
	branch Z l0000A035
// DataOut: pc r7
// DataOut (flags): ZC
// SymbolicIn: sp:fp r6:r6 - 0x00000B69

l0000A031_thunk_UARTCharGet:
	UARTCharGet()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 - 0x00000B69

l0000A031_1:
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp r6:r6 - 0x00000B69

l0000A031_thunk_UARTCharGet:
	UARTCharGet()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 - 0x00000B69 r0:<invalid>

l0000A02D_1:
	word32 sp_25
	byte N_26
	word32 r6_27
	byte NZ_28
	byte V_29
	word32 r0_30
	byte Z_31
	word32 pc_32
	word32 r7_33
	bool C_34
	byte NZCV_35
	call Mem0[r0:int16] (retsize: 0;)
		uses: C,N,NZ,NZCV,pc,r0,r6_4,r7,sp_1,V,Z
		defs: C_34,N_26,NZ_28,NZCV_35,pc_32,r0_30,r6_27,r7_33,sp_25,V_29,Z_31
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 - 0x00000B69

UARTCharNonBlockingGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 - 0x00000B69



void UARTCharGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
UARTCharGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

UARTCharGet_entry:
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp

l0000A035:
	branch Z l0000A039
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A035_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A039:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:0x000028F1



void UARTCharNonBlockingPut(word32 pc, word32 r0, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV pc r0 r7
// LiveOut:
// Trashed: r0
// Preserved: sp
UARTCharNonBlockingPut_entry:
// DataOut: pc r0 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A045:
	branch NZ l0000A045_then
	word32 sp_3
	byte NZ_4
	byte Z_5
	word32 r0_6
	byte V_7
	word32 pc_8
	word32 r7_9
	bool C_10
	byte NZCV_11
	call fn001B0DF1 (retsize: 0;)
		uses: NZ,sp_1
		defs: C_10,NZ_4,NZCV_11,pc_8,r0_6,r7_9,sp_3,V_7,Z_5
	return
// DataOut: pc r0 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000A045_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A049:
	branch Z_5 l0000A04D
// DataOut: pc r0 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000A049_1:
	Mem28[r0_6 + -31:word16] = (uint16) (r0_6 + -31)
// DataOut: pc r0 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000A04D:
	branch V_7 l0000A051
// DataOut: pc r0 r7
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:r0 + -31

l0000A04D_1:
// DataOut: pc r7
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:r0 + -31

l0000A051:
	branch Z_5 l0000A051_thunk_UARTCharPut
// DataOut: pc r7
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:<invalid>

l0000A051_thunk_UARTCharPut:
	UARTCharPut()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>
// Terminates process

l0000A051_1:
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp r0:<invalid>

l0000A051_thunk_UARTCharPut:
	UARTCharPut()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>
// Terminates process

UARTCharNonBlockingPut_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



void UARTCharPut()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
UARTCharPut_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

UARTCharPut_entry:
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp

l0000A055:
	branch Z l0000A059
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A055_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A059:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:0x000028F1



void UARTBreakCtl()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
UARTBreakCtl_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

UARTBreakCtl_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A065:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void UARTIntRegister(word32 apsr_nzcv, word32 r0, word32 r4, word32 r6, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV apsr_nzcv ip r0 r4 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
UARTIntRegister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

UARTIntRegister_entry:
// DataOut: apsr_nzcv ip r0 r4 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A079:
	branch NV l0000A07D
// DataOut: apsr_nzcv ip r0 r4 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A079_1:
	Mem20[ip:word16] = (uint16) r0
// DataOut: apsr_nzcv r4 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A07D:
	branch Z l0000A081
// DataOut: apsr_nzcv r4 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp ip:ip + 0xFFFFFF9B

l0000A07D_1:
// DataOut: apsr_nzcv r4 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp ip:ip + 0xFFFFFF9B

l0000A081:
	branch C l0000A085
// DataOut: apsr_nzcv r4 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp ip:ip + 0xFFFFFF9B r0:<invalid>

l0000A081_1:
// DataOut: apsr_nzcv r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp ip:ip + 0xFFFFFF9B r0:<invalid>

l0000A085:
	branch C l0000A089
// DataOut: apsr_nzcv r6
// DataOut (flags): NZV
// SymbolicIn: sp:fp ip:ip + 0xFFFFFF9B r0:<invalid> r1:r4 ^ r4 >>u 12

l0000A089:
	branch NZV l0000A08D
// DataOut: apsr_nzcv r6
// DataOut (flags): 
// SymbolicIn: sp:fp ip:ip + 0xFFFFFF9B r0:<invalid> r1:r4 ^ r4 >>u 12

l0000A089_1:
	__stcl(0x00, 0x02, Mem0[r6 + -1000:void])
	Mem15[0x00:word32] = apsr_nzcv
	Mem16[4:word32] = r6
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ip:ip + 0xFFFFFF9B r0:<invalid> r1:r4 ^ r4 >>u 12

l0000A08D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ip:ip + 0xFFFFFF9B r0:<invalid> r1:r4 ^ r4 >>u 12

l0000A085_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ip:ip + 0xFFFFFF9B r0:<invalid> r1:r4 ^ r4 >>u 12



void UARTIntUnregister(word32 apsr_nzcv, word32 r0, word32 r4, word32 r6, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV apsr_nzcv ip r0 r4 r6
// LiveOut:
// Trashed: ip r0 r1
// Preserved: r7 sp
UARTIntUnregister_entry:
// DataOut: apsr_nzcv ip r0 r4 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A099:
	branch NV l0000A09D
// DataOut: apsr_nzcv ip r0 r4 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A099_1:
	Mem37[ip:word16] = (uint16) r0
// DataOut: apsr_nzcv r4 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A09D:
	branch Z l0000A0A1
// DataOut: apsr_nzcv r4 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp ip:ip + 0xFFFFFF9B

l0000A09D_1:
// DataOut: apsr_nzcv r4 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp ip:ip + 0xFFFFFF9B

l0000A0A1:
	branch C l0000A0A5
// DataOut: apsr_nzcv r4 r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp ip:ip + 0xFFFFFF9B r0:<invalid>

l0000A0A1_1:
// DataOut: apsr_nzcv r6
// DataOut (flags): NZCV
// SymbolicIn: sp:fp ip:ip + 0xFFFFFF9B r0:<invalid>

l0000A0A5:
	branch NZV l0000A0A9
// DataOut: apsr_nzcv r6
// DataOut (flags): NZV
// SymbolicIn: sp:fp ip:ip + 0xFFFFFF9B r0:<invalid> r1:r4 ^ r4 >>u 12

l0000A0A9:
	branch NZV l0000A0AD
// DataOut: apsr_nzcv r6
// DataOut (flags): 
// SymbolicIn: sp:fp ip:ip + 0xFFFFFF9B r0:<invalid> r1:r4 ^ r4 >>u 12

l0000A0A9_1:
	__stcl(0x00, 0x02, Mem0[r6 + -1000:void])
	Mem32[0x00:word32] = apsr_nzcv
	Mem33[4:word32] = r6
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ip:ip + 0xFFFFFF9B r0:<invalid> r1:r4 ^ r4 >>u 12

l0000A0AD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ip:ip + 0xFFFFFF9B r0:<invalid> r1:r4 ^ r4 >>u 12

l0000A0A5_1:
	word32 sp_15
	byte NV_16
	word32 r0_17
	word32 ip_18
	byte Z_19
	word32 pc_20
	byte C_21
	word32 r1_22
	word32 r4_23
	byte NZV_24
	word32 r7_25
	byte NZV_26
	word32 r6_27
	word32 apsr_nzcv_28
	call Mem0[r7:byte] (retsize: 0;)
		uses: C,ip_4,NV,NZV,r0_7,r1_10,r7_13,sp_1,Z
		defs: apsr_nzcv_28,C_21,ip_18,NV_16,NZV_24,NZV_26,pc_20,r0_17,r1_22,r4_23,r6_27,r7_25,sp_15,Z_19
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ip:ip + 0xFFFFFF9B r0:<invalid> r1:r4 ^ r4 >>u 12

UARTIntUnregister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ip:ip + 0xFFFFFF9B r0:<invalid> r1:r4 ^ r4 >>u 12 r7:r7



void UARTIntEnable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
UARTIntEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

UARTIntEnable_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A0B9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void UARTIntDisable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
UARTIntDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

UARTIntDisable_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A0C1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void UARTIntStatus(word32 r7, word32 fp, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  V fp ip r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
UARTIntStatus_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

UARTIntStatus_entry:
// DataOut: fp ip r7
// DataOut (flags): V
// SymbolicIn: sp:fp

l0000A0CD:
	branch V l0000A0D1
// DataOut: fp ip r7
// DataOut (flags): V
// SymbolicIn: sp:fp

l0000A0CD_1:
	Mem10[fp:word16] = (uint16) ip
// DataOut: ip r7
// DataOut (flags): V
// SymbolicIn: sp:fp

l0000A0D1:
	branch V l0000A0D5
// DataOut: ip r7
// DataOut (flags): 
// SymbolicIn: sp:fp fp:fp + 0x00000009

l0000A0D1_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:fp + 0x00000009

l0000A0D5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:fp + 0x00000009 r0:ip - (r7 >> 32)



void UARTIntClear(word32 pc, word32 r2, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  V pc r2 r6 r7
// LiveOut:
// Trashed: NZCV pc r0 r1 r2 r6 r7
// Preserved: sp
UARTIntClear_entry:
// DataOut: pc r2 r6 r7
// DataOut (flags): CV
// SymbolicIn: sp:fp

l0000A0D9:
	branch V l0000A0D9_thunk_CPUcpsie
// DataOut: pc r2 r6 r7
// DataOut (flags): CV
// SymbolicIn: sp:fp

l0000A0D9_thunk_CPUcpsie:
	CPUcpsie(pc, r2, r6, r7)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A0D9_1:
// DataOut: pc r2 r6 r7
// DataOut (flags): CV
// SymbolicIn: sp:fp

l0000A0D9_thunk_CPUcpsie:
	CPUcpsie(pc, r2, r6, r7 - 0x00000064)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7 - 0x00000064

UARTIntClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> pc:<invalid>



void CPUcpsie(word32 pc, word32 r2, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  CV pc r2 r6 r7
// LiveOut:
// Trashed: NZCV pc r0 r1 r2 r6 r7
// Preserved: sp
CPUcpsie_entry:
// DataOut: pc r2 r6 r7
// DataOut (flags): CV
// SymbolicIn: sp:fp

l0000A0DD:
	branch V l0000A0E1
// DataOut: pc r2 r6 r7
// DataOut (flags): CV
// SymbolicIn: sp:fp

l0000A0DD_1:
	Mem19[r7:word16] = (uint16) r7
	r7 = r7 + 0xFFFFFFFA
// DataOut: pc r2 r6 r7
// DataOut (flags): CV
// SymbolicIn: sp:fp

l0000A0E1:
	branch V l0000A0E1_thunk_CPUcpsid
// DataOut: pc r2 r6 r7
// DataOut (flags): CV
// SymbolicIn: sp:fp r7:r7 + 0xFFFFFFFA

l0000A0E1_thunk_CPUcpsid:
	CPUcpsid(pc, r2, r6, r7)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7 + 0xFFFFFFFA

l0000A0E1_1:
// DataOut: pc r2 r6 r7
// DataOut (flags): CV
// SymbolicIn: sp:fp r7:r7 + 0xFFFFFFFA

l0000A0E1_thunk_CPUcpsid:
	CPUcpsid(pc, r2, r6, r7)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7 + 0xFFFFFFFA r0:<invalid>

CPUcpsie_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> pc:<invalid>



void CPUcpsid(word32 pc, word32 r2, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  CV pc r2 r6 r7
// LiveOut:
// Trashed: NZCV pc r0 r1 r2 r6 r7
// Preserved: sp
CPUcpsid_entry:
// DataOut: pc r2 r6 r7
// DataOut (flags): CV
// SymbolicIn: sp:fp

l0000A0E5:
	branch V l0000A0E9
// DataOut: pc r2 r6 r7
// DataOut (flags): CV
// SymbolicIn: sp:fp

l0000A0E5_1:
	Mem19[r7:word16] = (uint16) r7
	r7 = r7 + 0xFFFFFFFA
// DataOut: pc r2 r6 r7
// DataOut (flags): CV
// SymbolicIn: sp:fp

l0000A0E9:
	branch C l0000A0E9_thunk_CPUwfi
// DataOut: pc r2 r6 r7
// DataOut (flags): CV
// SymbolicIn: sp:fp r7:r7 + 0xFFFFFFFA

l0000A0E9_thunk_CPUwfi:
	CPUwfi(pc, r2, r6, r7)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7 + 0xFFFFFFFA

l0000A0E9_1:
// DataOut: pc r2 r6 r7
// DataOut (flags): CV
// SymbolicIn: sp:fp r7:r7 + 0xFFFFFFFA

l0000A0E9_thunk_CPUwfi:
	CPUwfi(pc, r2, r6, r7)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7 + 0xFFFFFFFA r0:<invalid>

CPUcpsid_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> pc:<invalid>



void CPUwfi(word32 pc, word32 r2, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  CV pc r2 r6 r7
// LiveOut:
// Trashed: pc r0 r1 r2 r6 r7
// Preserved: sp
CPUwfi_entry:
// DataOut: pc r2 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A0ED:
	branch V l0000A0F1
// DataOut: pc r2 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A0ED_1:
	Mem22[r7:word16] = (uint16) r7
	r7 = r7 + 0xFFFFFFF1
// DataOut: pc r2 r6 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A0F1:
	branch C l0000A0F1_thunk_I2CMasterInit
// DataOut: pc r2 r6 r7
// DataOut (flags): NZV
// SymbolicIn: sp:fp r7:r7 + 0xFFFFFFF1

l0000A0F1_thunk_I2CMasterInit:
	I2CMasterInit(r2, r6, r7)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7 + 0xFFFFFFF1

l0000A0F1_1:
	word32 r2_15 = Mem0[pc + 8:word32]
	word32 r6_16 = Mem0[pc + 12:word32]
// DataOut: r2 r6 r7
// DataOut (flags): NZV
// SymbolicIn: sp:fp r7:r7 + 0xFFFFFFF1

l0000A0F1_thunk_I2CMasterInit:
	I2CMasterInit(r2_15, r6_16, r7)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7 + 0xFFFFFFF1 r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> pc:pc + 16

CPUwfi_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> pc:pc + 16



void I2CMasterInit(word32 r2, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZV r2 r6 r7
// LiveOut:
// Trashed: r0 r1 r7
// Preserved: sp
I2CMasterInit_entry:
// DataOut: r2 r6 r7
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l0000A0F5:
	branch Z l0000A0F9
// DataOut: r2 r6 r7
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l0000A0F5_1:
// DataOut: r2 r6 r7
// DataOut (flags): NZV
// SymbolicIn: sp:fp

l0000A0F9:
	branch NZ l0000A0FD
// DataOut: r2 r6 r7
// DataOut (flags): ZV
// SymbolicIn: sp:fp r0:r6 - 0x00002D40

l0000A0F9_1:
// DataOut: r2 r7
// DataOut (flags): ZV
// SymbolicIn: sp:fp r0:r6 - 0x00002D40

l0000A0FD:
	branch Z l0000A101
// DataOut: r2 r7
// DataOut (flags): V
// SymbolicIn: sp:fp r0:<invalid>

l0000A0FD_1:
// DataOut: r7
// DataOut (flags): V
// SymbolicIn: sp:fp r0:<invalid>

l0000A101:
	branch V l0000A105
// DataOut: r7
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r1:r2 & 0x000000F0

l0000A105:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r1:r2 & 0x000000F0

l0000A101_1:
	word32 sp_13
	byte Z_14
	word32 r0_15
	word32 r6_16
	byte NZ_17
	word32 r1_18
	word32 r2_19
	byte V_20
	word32 r7_21
	word32 pc_22
	call Mem0[r7 + 3938:byte] (retsize: 0;)
		uses: NZ,r0_6,r1_8,r7_11,sp_1,V,Z
		defs: NZ_17,pc_22,r0_15,r1_18,r2_19,r6_16,r7_21,sp_13,V_20,Z_14
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r1:r2 & 0x000000F0

I2CMasterInit_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r1:r2 & 0x000000F0 r7:r7 + 3938



void I2CSlaveInit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CSlaveInit_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

I2CSlaveInit_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A129:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void I2CMasterEnable(word32 r0, word32 r2, word32 r3, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV r0 r10 r2 r3
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CMasterEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

I2CMasterEnable_entry:
// DataOut: r0 r10 r2 r3
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000A141:
	branch Z l0000A145
// DataOut: r0 r10 r2 r3
// DataOut (flags): CV
// SymbolicIn: sp:fp

l0000A141_1:
	V = cond(__ror(r10, 6) - r0 - C) (alias)
// DataOut: r2 r3
// DataOut (flags): V
// SymbolicIn: sp:fp

l0000A145:
	branch V l0000A149
// DataOut: r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid>

l0000A145_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid>

l0000A149:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid> r0:r2 - (r3 << 6)



void I2CSlaveEnable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CSlaveEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

I2CSlaveEnable_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A14D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void I2CMasterDisable(word32 pc, word32 r0, word32 r2, word32 r3, word32 r7, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV pc r0 r10 r2 r3 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CMasterDisable_entry:
// DataOut: pc r0 r10 r2 r3 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000A161:
	branch Z l0000A165
// DataOut: pc r0 r10 r2 r3 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000A161_1:
	byte NZCV_24 = cond(__ror(r10, 6) - r0 - C)
	Z = NZCV_24 (alias)
	V = NZCV_24 (alias)
// DataOut: pc r2 r3 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000A165:
	branch V l0000A169
// DataOut: pc r2 r3 r7
// DataOut (flags): ZC
// SymbolicIn: sp:fp r2:<invalid>

l0000A165_1:
// DataOut: pc r7
// DataOut (flags): ZC
// SymbolicIn: sp:fp r2:<invalid>

l0000A169:
	branch Z l0000A169_thunk_I2CSlaveDisable
// DataOut: pc r7
// DataOut (flags): C
// SymbolicIn: sp:fp r2:<invalid> r0:<invalid>

l0000A169_thunk_I2CSlaveDisable:
	I2CSlaveDisable()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r0:<invalid>
// Terminates process

l0000A169_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r0:<invalid>

l0000A169_thunk_I2CSlaveDisable:
	I2CSlaveDisable()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r0:<invalid>
// Terminates process

I2CMasterDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void I2CSlaveDisable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CSlaveDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

I2CSlaveDisable_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A16D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void I2CIntRegister()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CIntRegister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

I2CIntRegister_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A181:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void I2CIntUnregister()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CIntUnregister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

I2CIntUnregister_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A195:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void I2CMasterIntEnable(word32 r1, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  V r1 r3
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CMasterIntEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

I2CMasterIntEnable_entry:
// DataOut: r1 r3
// DataOut (flags): V
// SymbolicIn: sp:fp

l0000A1A9:
	branch V l0000A1AD
// DataOut: r1 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1A9_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1AD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r1 - (r3 >>u 6)



void I2CSlaveIntEnable(word32 pc, word32 r0, word32 r1, word32 r3, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV pc r0 r1 r3 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CSlaveIntEnable_entry:
// DataOut: pc r0 r1 r3 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000A1B1:
	branch V l0000A1B5
// DataOut: pc r0 r1 r3 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000A1B1_1:
// DataOut: pc r0 r1 r3 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000A1B5:
	branch Z l0000A1B5_thunk_I2CMasterIntDisable
// DataOut: pc r0 r1 r3 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp ip:r0 - (r3 >>u 6)

l0000A1B5_thunk_I2CMasterIntDisable:
	I2CMasterIntDisable(pc, r0, r1, r3, r7)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ip:r0 - (r3 >>u 6)
// Terminates process

l0000A1B5_1:
	word32 r0_14 = pc + (r7 >> 32) + C
// DataOut: pc r0 r1 r3 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp ip:r0 - (r3 >>u 6)

l0000A1B5_thunk_I2CMasterIntDisable:
	I2CMasterIntDisable(pc, r0_14, r1, r3, r7)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ip:r0 - (r3 >>u 6) r0:<invalid>
// Terminates process

I2CSlaveIntEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void I2CMasterIntDisable(word32 pc, word32 r0, word32 r1, word32 r3, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV pc r0 r1 r3 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CMasterIntDisable_entry:
// DataOut: pc r0 r1 r3 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000A1B9:
	branch V l0000A1BD
// DataOut: pc r0 r1 r3 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000A1B9_1:
	r0 = r1 - (r3 >>u 6)
// DataOut: pc r0 r3 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000A1BD:
	branch Z l0000A1BD_thunk_I2CSlaveIntDisable
// DataOut: pc r0 r3 r7
// DataOut (flags): CV
// SymbolicIn: sp:fp r0:r1 - (r3 >>u 6)

l0000A1BD_thunk_I2CSlaveIntDisable:
	I2CSlaveIntDisable(r0, r3)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r1 - (r3 >>u 6)
// Terminates process

l0000A1BD_1:
	word32 r0_14 = pc + (r7 >> 32) + C
// DataOut: r0 r3
// DataOut (flags): V
// SymbolicIn: sp:fp r0:r1 - (r3 >>u 6)

l0000A1BD_thunk_I2CSlaveIntDisable:
	I2CSlaveIntDisable(r0_14, r3)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>
// Terminates process

I2CMasterIntDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void I2CSlaveIntDisable(word32 r0, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  V r0 r3
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CSlaveIntDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

I2CSlaveIntDisable_entry:
// DataOut: r0 r3
// DataOut (flags): V
// SymbolicIn: sp:fp

l0000A1C1:
	branch V l0000A1C5
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1C1_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1C5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ip:r0 - (r3 >>u 6)



void I2CMasterIntStatus(word32 r4, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r4 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CMasterIntStatus_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

I2CMasterIntStatus_entry:
// DataOut: r4 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp

l0000A1C9:
	branch Z l0000A1CD
// DataOut: r4 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1C9_1:
	Mem6[r9:word16] = (uint16) r4
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1CD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r9:r9 + 0x00000009



void I2CSlaveIntStatus(word32 r0, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CSlaveIntStatus_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

I2CSlaveIntStatus_entry:
// DataOut: r0 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp

l0000A1E1:
	branch Z l0000A1E5
// DataOut: r0 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1E1_1:
	Mem6[r9:word16] = (uint16) r0
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1E5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r9:r9 + 0x00000009



void I2CMasterIntClear()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CMasterIntClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

I2CMasterIntClear_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1F9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void I2CSlaveIntClear(word32 pc, word32 r0, word32 r1, word32 r2, word32 r3, word32 r7, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV pc r0 r1 r2 r3 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CSlaveIntClear_entry:
// DataOut: pc r0 r1 r2 r3 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A201:
	branch V l0000A205
// DataOut: pc r0 r1 r2 r3 r7 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l0000A201_1:
	r8 = r1 - (r3 >>u 6)
// DataOut: pc r0 r2 r3 r7 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l0000A205:
	branch NZ l0000A205_thunk_I2CMasterSlaveAddrSet
// DataOut: pc r0 r2 r3 r7 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp r8:r1 - (r3 >>u 6)

l0000A205_thunk_I2CMasterSlaveAddrSet:
	I2CMasterSlaveAddrSet(r0, r2, r3, r7, r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r1 - (r3 >>u 6)
// Terminates process

l0000A205_1:
	word32 r0_13 = pc + 0x00000047 + C
// DataOut: r0 r2 r3 r7 r8
// DataOut (flags): NZ
// SymbolicIn: sp:fp r8:r1 - (r3 >>u 6)

l0000A205_thunk_I2CMasterSlaveAddrSet:
	I2CMasterSlaveAddrSet(r0_13, r2, r3, r7, r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r1 - (r3 >>u 6) r0:<invalid>
// Terminates process

I2CSlaveIntClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void I2CMasterSlaveAddrSet(word32 r0, word32 r2, word32 r3, word32 r7, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZ r0 r2 r3 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CMasterSlaveAddrSet_entry:
// DataOut: r0 r2 r3 r7 r8
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l0000A209:
	branch Z l0000A20D
// DataOut: r0 r2 r3 r7 r8
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l0000A209_1:
// DataOut: r0 r3 r7 r8
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l0000A20D:
	branch NZ l0000A20D_thunk_I2CMasterBusy
// DataOut: r0 r3 r7 r8
// DataOut (flags): NZ
// SymbolicIn: sp:fp r4:r2 & 0x8000003A

l0000A20D_thunk_I2CMasterBusy:
	I2CMasterBusy(r0, r3, r7, r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r2 & 0x8000003A
// Terminates process

l0000A20D_1:
	word32 r7_9 = r7 - __ror(r0, 0)
// DataOut: r0 r3 r7 r8
// DataOut (flags): NZ
// SymbolicIn: sp:fp r4:r2 & 0x8000003A

l0000A20D_thunk_I2CMasterBusy:
	I2CMasterBusy(r0, r3, r7_9, r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r2 & 0x8000003A r7:<invalid>
// Terminates process

I2CMasterSlaveAddrSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void I2CMasterBusy(word32 r0, word32 r3, word32 r7, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZ r0 r3 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CMasterBusy_entry:
// DataOut: r0 r3 r7 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l0000A211:
	branch Z l0000A215
// DataOut: r0 r3 r7 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l0000A211_1:
	NZ = cond(!__ror(r8, 0)) (alias)
// DataOut: r0 r3 r7 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l0000A215:
	branch NZ l0000A215_thunk_I2CMasterBusBusy
// DataOut: r0 r3 r7 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:!<invalid>

l0000A215_thunk_I2CMasterBusBusy:
	I2CMasterBusBusy(r3, r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:!<invalid>
// Terminates process

l0000A215_1:
// DataOut: r3 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:!<invalid>

l0000A215_thunk_I2CMasterBusBusy:
	I2CMasterBusBusy(r3, r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:!<invalid> r7:r7 - !<invalid>
// Terminates process

I2CMasterBusy_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void I2CMasterBusBusy(word32 r3, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC r3 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CMasterBusBusy_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

I2CMasterBusBusy_entry:
// DataOut: r3 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l0000A219:
	branch ZC l0000A21D
// DataOut: r3 r8
// DataOut (flags): C
// SymbolicIn: sp:fp

l0000A219_1:
	word32 ip_10 = __ror(r8, 0) - r3 - C
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A21D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ip:<invalid>



void I2CMasterControl(word32 r0, word32 r1, word32 r2, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZ r0 r1 r2 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CMasterControl_entry:
// DataOut: r0 r1 r2 r7
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A221:
	branch NZ l0000A221_thunk_I2CMasterErr
// DataOut: r0 r1 r2 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000A221_thunk_I2CMasterErr:
	I2CMasterErr(r0, r1, r2, r7)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l0000A221_1:
	word32 r7_5 = DPB(r7, 0x7060, 16)
// DataOut: r0 r1 r2 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000A221_thunk_I2CMasterErr:
	I2CMasterErr(r0, r1, r2, r7_5)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:DPB(r7, 0x7060, 16)
// Terminates process

I2CMasterControl_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void I2CMasterErr(word32 r0, word32 r1, word32 r2, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZCV r0 r1 r2 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CMasterErr_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

I2CMasterErr_entry:
// DataOut: r0 r1 r2 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A225:
	branch Z l0000A229
// DataOut: r0 r1 r2 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A225_1:
	Mem30[r7 + -2664:word32] = fp
// DataOut: r0 r1 r2 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000A229:
	branch Z l0000A22D
// DataOut: r0 r1 r2 r7
// DataOut (flags): ZCV
// SymbolicIn: sp:fp

l0000A229_1:
	word32 r1_23 = 0x50000003 - r0 - C
	byte NZCV_26 = cond(r1_23)
	r2_r1 = SEQ(r2, r1_23) (alias)
	Z = NZCV_26 (alias)
	V = NZCV_26 (alias)
// DataOut: r0 r1 r2 r7
// DataOut (flags): ZV
// SymbolicIn: sp:fp

l0000A22D:
	branch Z l0000A231
// DataOut: r0 r1 r2 r7
// DataOut (flags): V
// SymbolicIn: sp:fp r1:<invalid>

l0000A22D_1:
	r0 = r0 & ~0x00000000
// DataOut: r0 r1 r2 r7
// DataOut (flags): V
// SymbolicIn: sp:fp r1:<invalid>

l0000A231:
	branch V l0000A235
// DataOut: r0 r1 r2 r7
// DataOut (flags): V
// SymbolicIn: sp:fp r1:<invalid> r0:r0 & ~0x00000000

l0000A231_1:
	Mem20[r0:word64] = r2_r1
// DataOut: r0 r7
// DataOut (flags): V
// SymbolicIn: sp:fp r1:<invalid> r0:r0 & ~0x00000000

l0000A235:
	branch V l0000A239
// DataOut: r0 r7
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid>

l0000A235_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid>

l0000A239:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid>



void I2CMasterDataPut(word32 r0, word32 r7, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC r0 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CMasterDataPut_entry:
// DataOut: r0 r7 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp

l0000A23D:
	branch ZC l0000A23D_thunk_I2CMasterDataGet
// DataOut: r0 r7 r8
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l0000A23D_thunk_I2CMasterDataGet:
	I2CMasterDataGet(r7, r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l0000A23D_1:
	word32 r7_6 = r7 - __ror(r0, 0)
// DataOut: r7 r8
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l0000A23D_thunk_I2CMasterDataGet:
	I2CMasterDataGet(r7_6, r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:<invalid>
// Terminates process

I2CMasterDataPut_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void I2CMasterDataGet(word32 r7, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZ r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CMasterDataGet_entry:
// DataOut: r7 r8
// DataOut (flags): NZ
// SymbolicIn: sp:fp

l0000A241:
	branch NZ l0000A241_thunk_I2CSlaveStatus
// DataOut: r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A241_thunk_I2CSlaveStatus:
	I2CSlaveStatus()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l0000A241_1:
	word32 r7_6 = r7 - __ror(r8, 0)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A241_thunk_I2CSlaveStatus:
	I2CSlaveStatus()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:<invalid>
// Terminates process

I2CMasterDataGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void I2CSlaveStatus()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CSlaveStatus_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

I2CSlaveStatus_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A245:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void I2CSlaveDataPut(word32 lr, word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r10, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ZC ip lr r0 r1 r10 r2 r3 r4 r5 r6 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CSlaveDataPut_entry:
// DataOut: ip lr r0 r1 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A249:
	branch ZC l0000A249_thunk_I2CSlaveDataGet
// DataOut: ip lr r0 r1 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A249_thunk_I2CSlaveDataGet:
	I2CSlaveDataGet(lr, r1, r2, r3, r4, r5, r6, r7, r8, r10, ip)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l0000A249_1:
	word32 r7_6 = r7 - __ror(r0, 0)
// DataOut: ip lr r1 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A249_thunk_I2CSlaveDataGet:
	I2CSlaveDataGet(lr, r1, r2, r3, r4, r5, r6, r7_6, r8, r10, ip)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:<invalid>
// Terminates process

I2CSlaveDataPut_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void I2CSlaveDataGet(word32 lr, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r10, word32 ip)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV ip lr r1 r10 r2 r3 r4 r5 r6 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CSlaveDataGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

I2CSlaveDataGet_entry:
// DataOut: ip lr r1 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A24D:
	branch NZ l0000A251
// DataOut: ip lr r1 r10 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A24D_1:
	Mem83[r7:word32] = r3
	Mem84[r7 - 4:word32] = r5
	Mem85[r7 - 8:word32] = r6
	Mem86[r7 - 12:word32] = ip
	Mem87[r7 - 16:word32] = fp
	Mem88[r7 - 20:word32] = lr
// DataOut: lr r1 r10 r2 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A251:
	branch V l0000A255
// DataOut: lr r1 r10 r2 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A251_1:
// DataOut: lr r1 r10 r2 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A255:
	branch NZ l0000A259
// DataOut: lr r1 r10 r2 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A255_1:
// DataOut: lr r1 r10 r2 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A259:
	branch V l0000A25D
// DataOut: lr r1 r10 r2 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x00000000
// LocalsOut: fp(32)

l0000A259_1:
	word32 sp_64
	word32 r3_67
	word32 ip_70
	word32 r0_73
	call fn018E3801 (retsize: 0;)
		uses: ip,lr,N,NZ,r0_5,r1,r10,r2,r3,r4,r5,r6,r7,r8,sp_1,V,Z,ZC
		defs: ip_70,lr_71,N_74,NZ_65,r0_73,r1_77,r10_79,r2_75,r3_67,r4_78,r5_68,r6_69,r7_66,r8_76,sp_64,V_72,Z_80,ZC_81
// DataOut: lr r1 r10 r2 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x00000000
// LocalsOut: fp(32)

l0000A25D:
	branch N l0000A261
// DataOut: lr r1 r10 r2 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x00000000
// LocalsOut: fp(32)

l0000A25D_1:
// DataOut: lr r1 r10 r2 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x00000000
// LocalsOut: fp(32)

l0000A261:
	branch V l0000A265
// DataOut: lr r1 r10 r2 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x00000000
// LocalsOut: fp(32)

l0000A261_1:
	Mem61[lr:byte] = (byte) r6
	lr = lr - 0x00000972
// DataOut: lr r1 r10 r2 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x00000000
// LocalsOut: fp(32)

l0000A265:
	branch N l0000A269
// DataOut: lr r1 r10 r2 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x00000000 lr:lr - 0x00000972
// LocalsOut: fp(32)

l0000A265_1:
// DataOut: lr r1 r10 r2 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x00000000 lr:lr - 0x00000972
// LocalsOut: fp(32)

l0000A269:
	branch V l0000A26D
// DataOut: lr r1 r10 r2 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x00000000 lr:lr - 0x00000972
// LocalsOut: fp(32)

l0000A26D:
	branch V l0000A271
// DataOut: lr r1 r10 r2 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x00000000 lr:lr - 0x00000972
// LocalsOut: fp(32)

l0000A26D_1:
// DataOut: lr r1 r10 r2 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x00000000 lr:lr - 0x00000972
// LocalsOut: fp(32)

l0000A271:
	branch V l0000A275
// DataOut: lr r1 r10 r2 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x00000000 lr:lr - 0x00000972
// LocalsOut: fp(32)

l0000A271_1:
	word32 r2_58 = r2 + -116
	Mem59[r2_58:byte] = (byte) r2_58
// DataOut: lr r1 r10 r4 r5 r6 r7 r8
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r0:0x00000000 lr:lr - 0x00000972
// LocalsOut: fp(32)

l0000A275:
	branch V l0000A279
// DataOut: lr r1 r10 r4 r5 r6 r7 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:0x00000000 lr:lr - 0x00000972 r2:r2 + -116
// LocalsOut: fp(32)

l0000A275_1:
	r8 = r8 + -1056
	Mem57[r8:byte] = (byte) r7
// DataOut: lr r1 r10 r4 r5 r6 r8
// DataOut (flags): NZC
// SymbolicIn: sp:fp r0:0x00000000 lr:lr - 0x00000972 r2:r2 + -116
// LocalsOut: fp(32)

l0000A279:
	branch NZ l0000A27D
// DataOut: lr r1 r10 r4 r5 r6 r8
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:0x00000000 lr:lr - 0x00000972 r2:r2 + -116 r8:r8 + -1056
// LocalsOut: fp(32)

l0000A279_1:
	Mem48[0xFFFFFFFC:word32] = r1
	Mem49[0xFFFFFFF8:word32] = r4
	Mem50[0xFFFFFFF4:word32] = r5
	Mem51[0xFFFFFFF0:word32] = r6
	Mem52[0xFFFFFFEC:word32] = r8
	Mem53[0xFFFFFFE8:word32] = r10
	Mem54[0xFFFFFFE4:word32] = fp
	Mem55[0xFFFFFFE0:word32] = lr
// DataOut: r4 r5
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:0x00000000 lr:lr - 0x00000972 r2:r2 + -116 r8:r8 + -1056

l0000A27D:
	branch Z l0000A281
// DataOut: r4 r5
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:0x00000000 lr:lr - 0x00000972 r2:r2 + -116 r8:r8 + -1056

l0000A27D_1:
// DataOut:
// DataOut (flags): ZC
// SymbolicIn: sp:fp r0:0x00000000 lr:lr - 0x00000972 r2:r2 + -116 r8:r8 + -1056

l0000A281:
	branch ZC l0000A285
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00000000 lr:lr - 0x00000972 r2:r2 + -116 r8:r8 + -1056 r4:r5 - (r4 >> 24)

l0000A281_1:
	Mem45[0x00000000:word32] = 0x00000000
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00000000 lr:lr - 0x00000972 r2:r2 + -116 r8:r8 + -1056 r4:r5 - (r4 >> 24)

l0000A285:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00000000 lr:lr - 0x00000972 r2:r2 + -116 r8:r8 + -1056 r4:r5 - (r4 >> 24)

l0000A269_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00000000 lr:lr - 0x00000972



void memcpy(word32 lr, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r7, word32 r8, word32 r9, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  NZCV lr r1 r10 r2 r3 r4 r5 r7 r8 r9
// LiveOut:
// Trashed: r0 r1 r10 r2 r3 r4 r5 r8 r9 sp
// Preserved: lr
memcpy_entry:
// DataOut: lr r1 r10 r2 r3 r4 r5 r7 r8 r9
// DataOut (flags): NZCV
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A5C5:
	word32 sp_1 = fp
	branch Z l0000A5C9
// DataOut: lr r1 r10 r2 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A5C5_1:
// DataOut: lr r1 r10 r2 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A5C9:
	branch Z l0000A5CD
// DataOut: lr r1 r10 r2 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A5C9_1:
	word32 r0_178
	word32 r10_188
	byte NZCV_190
	word32 pc_191
	call fnFF656279 (retsize: 0;)
		uses: C,lr,NV,NZCV,NZV,NZV,pc,r0,r1,r10,r2,r3,r4,r5,r7,r8,r9,sp_1,V,Z,ZC
		defs: C_179,lr_180,NV_184,NZCV_190,NZV_189,NZV_192,pc_191,r0_178,r1_175,r10_188,r2_187,r3_176,r4_182,r5_185,r7_177,r8_186,r9_181,sp_172,V_183,Z_173,ZC_174
// DataOut: lr r1 r10 r2 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A5CD:
	branch ZC l0000A5D1
// DataOut: lr r1 r10 r2 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A5CD_1:
	word32 r0_157
	word32 r10_167
	byte NZCV_169
	word32 pc_170
	call fn010CB1D5 (retsize: 0;)
		uses: C_28,lr_27,NV_29,NZCV_36,NZV_33,NZV_34,pc_26,r0_35,r1_37,r10_42,r2_38,r3_25,r4_39,r5_40,r7_22,r8_41,r9_24,sp_23,V_32,Z_30,ZC_31
		defs: C_158,lr_159,NV_163,NZCV_169,NZV_168,NZV_171,pc_170,r0_157,r1_154,r10_167,r2_166,r3_155,r4_161,r5_164,r7_156,r8_165,r9_160,sp_151,V_162,Z_152,ZC_153
// DataOut: lr r1 r10 r2 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A5D1:
	branch Z l0000A5D5
// DataOut: lr r1 r10 r2 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A5D1_1:
	r3 = Mem0[r1:byte]
	r1 = r1 + (r7 << 12)
// DataOut: lr r1 r10 r2 r3 r4 r5 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp

l0000A5D5:
	branch Z l0000A5D9
// DataOut: lr r1 r10 r2 r3 r4 r5 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r3:<invalid> r1:r1 + (r7 << 12)

l0000A5D5_1:
// DataOut: lr r1 r10 r2 r3 r4 r5 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r3:<invalid> r1:r1 + (r7 << 12)

l0000A5D9:
	branch C l0000A5DD
// DataOut: lr r1 r10 r2 r3 r4 r5 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r3:<invalid> r1:r1 + (r7 << 12) r0:0x00000C00

l0000A5D9_1:
	r1 = Mem0[lr:word32]
// DataOut: r1 r10 r2 r3 r4 r5 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r3:<invalid> r1:r1 + (r7 << 12) r0:0x00000C00

l0000A5DD:
	branch C l0000A5E1
// DataOut: r1 r10 r2 r3 r4 r5 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr

l0000A5E1:
	branch C l0000A5E5
// DataOut: r1 r10 r2 r3 r4 r5 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr

l0000A5E1_1:
	r4 = Mem0[r9:word32]
// DataOut: r1 r10 r2 r3 r4 r5 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr

l0000A5E5:
	branch V l0000A5E9
// DataOut: r1 r10 r2 r3 r4 r5 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid>

l0000A5E5_1:
	Mem143[0x00000C00:byte] = (byte) r1
// DataOut: r1 r10 r2 r3 r4 r5 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid>

l0000A5E9:
	branch NV l0000A5ED
// DataOut: r1 r10 r2 r3 r4 r5 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid>

l0000A5E9_1:
	Mem141[0x00000C00:byte] = (byte) r5
// DataOut: r1 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid>

l0000A5ED:
	Mem72[0x00000C00:byte] = (byte) r9
	word32 r0_133 = 0x00000C00
	branch Z l0000A5F5
// DataOut: r0 r1 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid>

l0000A5F1_1:
	sp_1 = 0x00000C00 - __ror(r8, 30)
// DataOut: r0 r1 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid>

l0000A5F5:
	branch ZC l0000A5F9
// DataOut: r0 r1 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid>

l0000A5F9:
	branch Z l0000A5FD
// DataOut: r0 r1 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid>

l0000A5F9_1:
// DataOut: r0 r1 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid>

l0000A5FD:
	branch Z l0000A601
// DataOut: r0 r1 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid>

l0000A5FD_1:
	r9 = r3 - (r3 >>u 28)
// DataOut: r0 r1 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid>

l0000A601:
	branch ZC l0000A605
// DataOut: r0 r1 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid> r9:<invalid>

l0000A605:
	branch Z l0000A609
// DataOut: r0 r1 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid> r9:<invalid>

l0000A605_1:
// DataOut: r0 r1 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid> r9:<invalid>

l0000A609:
	branch Z l0000A60D
// DataOut: r0 r1 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid> r9:<invalid>

l0000A609_1:
	__cdp(0x0C, 0x0000000D, 0x01, 0x09, 0x0B, 0x00000001)
// DataOut: r0 r1 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid> r9:<invalid>

l0000A60D:
	branch NZV l0000A611
// DataOut: r0 r1 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid> r9:<invalid>

l0000A60D_1:
	Mem135[r3:word32] = 0x00000C00
	r3 = r3 - 0x0000001F
// DataOut: r0 r1 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid> r9:<invalid>

l0000A611:
	branch NV l0000A615
// DataOut: r0 r1 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid> r9:<invalid>

l0000A611_1:
	r0_133 = Mem72[r4:word32]
	r4 = r4 - 0x00000108
// DataOut: r0 r1 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): NZCV
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid> r9:<invalid>

l0000A615:
	branch NV l0000A61D
// DataOut: r0 r1 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> lr:lr r4:<invalid> r9:<invalid>

l0000A619_1:
	byte NZCV_125 = cond(r3 ^ 0x50000000)
	C = NZCV_125 (alias)
	Z = NZCV_125 (alias)
	NZV = NZCV_125 (alias)
// DataOut: r0 r1 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> lr:lr r4:<invalid> r9:<invalid>

l0000A61D:
	branch Z l0000A621
// DataOut: r0 r1 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> lr:lr r4:<invalid> r9:<invalid>

l0000A61D_1:
// DataOut: r0 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> lr:lr r4:<invalid> r9:<invalid>

l0000A621:
	branch C l0000A625
// DataOut: r0 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> lr:lr r4:<invalid> r9:<invalid> pc:<invalid>

l0000A621_1:
// DataOut: r0 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): ZCV
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> lr:lr r4:<invalid> r9:<invalid> pc:<invalid>

l0000A625:
	branch NZV l0000A629
// DataOut: r0 r10 r2 r3 r4 r8 r9 sp
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> lr:lr r4:<invalid> r9:<invalid> pc:<invalid> r10:DPB(r10, 0x3624, 16)

l0000A625_1:
	Mem117[r0_133 - 4:word32] = r0_133
	Mem118[r0_133 - 8:word32] = r2
	Mem119[r0_133 - 12:word32] = r3
	Mem120[r0_133 - 16:word32] = r4
	Mem121[r0_133 - 20:word32] = r9
	Mem122[r0_133 - 24:word32] = sp_1
// DataOut: r0 r10 r8 sp
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> lr:lr r4:<invalid> r9:<invalid> pc:<invalid> r10:DPB(r10, 0x3624, 16)

l0000A629:
	branch Z l0000A62D
// DataOut: r0 r10 r8 sp
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> lr:lr r4:<invalid> r9:<invalid> pc:<invalid> r10:DPB(r10, 0x3624, 16)

l0000A629_1:
	Z = cond(r8 & r8 << sp_1) (alias)
// DataOut: r0 r10
// DataOut (flags): ZC
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> lr:lr r4:<invalid> r9:<invalid> pc:<invalid> r10:DPB(r10, 0x3624, 16)

l0000A62D:
	branch Z l0000A631
// DataOut: r0 r10
// DataOut (flags): C
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> lr:<invalid> r4:<invalid> r9:<invalid> pc:<invalid> r10:DPB(r10, 0x3624, 16)

l0000A62D_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> lr:<invalid> r4:<invalid> r9:<invalid> pc:<invalid> r10:DPB(r10, 0x3624, 16)

l0000A631:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> lr:<invalid> r4:<invalid> r9:<invalid> pc:<invalid> r10:DPB(r10, 0x3624, 16)

l0000A601_1:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid> r9:<invalid>

memcpy_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid> r9:<invalid> r2:<invalid> r5:<invalid> r8:<invalid> r10:<invalid>

l0000A5F5_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr r4:<invalid>

l0000A5DD_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid> r0:0x00000C00 lr:lr



