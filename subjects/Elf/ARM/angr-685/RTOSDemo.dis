// prvUnlockQueue
// Return size: 0
void prvUnlockQueue()
prvUnlockQueue_entry:
	// succ:  l00000058
l00000058:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r5 = r0
	call fn00008574 (retsize: 0;)
	r4 = (word32) Mem0[r5 + 69:byte]
	r4 = (int32) (int8) r4
	NZCV = cond(r4 - 0x00000000)
	branch Test(LE,NZV) l0000007E
	// succ:  l0000006A l0000007E
l0000006A:
	r3 = Mem0[r5 + 36:word32]
	branch r3 == 0x00000000 l00000098
	// succ:  l0000006E l00000098
l0000006E:
	r6 = r5 + 0x00000024
	// succ:  l0000007C
l0000007C:
	r3 = Mem0[r5 + 36:word32]
	// succ:  l0000007E
l0000007E:
	branch r3 == 0x00000000 l00000098
	// succ:  l00000080 l00000098
l00000080:
	r0 = r6
	call fn00001018 (retsize: 0;)
	NZCV = cond(r0 - 0x00000000)
	branch Test(EQ,Z) l00000270
	// succ:  l0000008A l00000270
l0000008A:
	r4 = r4 - 0x00000001
	NZCV = cond(r4)
	call fn000011A8 (retsize: 0;)
	r3 = (uint32) (byte) r4
	r4 = (int32) (int8) r3
	NZCV = cond(r3 - 0x00000000)
	branch Test(NE,Z) l00000278
	// succ:  l00000098 l00000278
l00000098:
	r3 = 0x000000FF
	Mem0[r5 + 69:byte] = (byte) r3
	call fn000085AC (retsize: 0;)
	call fn00008574 (retsize: 0;)
	r4 = (word32) Mem0[r5 + 68:byte]
	r4 = (int32) (int8) r4
	NZCV = cond(r4 - 0x00000000)
	branch Test(LE,NZV) l000000C4
	// succ:  l000000B0 l000000C4
l000000B0:
	r3 = Mem0[r5 + 16:word32]
	branch r3 == 0x00000000 l000000DE
	// succ:  l000000B4 l000000DE
l000000B4:
	r6 = r5 + 0x00000010
	// succ:  l000000C2
l000000C2:
	r3 = Mem0[r5 + 16:word32]
	// succ:  l000000C4
l000000C4:
	branch r3 == 0x00000000 l000000DE
	// succ:  l000000C6 l000000DE
l000000C6:
	r0 = r6
	call fn00001018 (retsize: 0;)
	NZCV = cond(r0 - 0x00000000)
	branch Test(EQ,Z) l000002B6
	// succ:  l000000D0 l000002B6
l000000D0:
	r4 = r4 - 0x00000001
	NZCV = cond(r4)
	call fn000011A8 (retsize: 0;)
	r3 = (uint32) (byte) r4
	r4 = (int32) (int8) r3
	NZCV = cond(r3 - 0x00000000)
	branch Test(NE,Z) l000002BE
	// succ:  l000000DE l000002BE
l000000DE:
	r3 = 0x000000FF
	Mem0[r5 + 68:byte] = (byte) r3
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	lr = Mem0[sp + 12:word32]
	sp = sp + 16
	call fn00C085AC (retsize: 0;)
	return
	// succ:  prvUnlockQueue_exit
l00000270:
	Mem0[r6 + 124:word16] = (uint16) r0
	call fn000085AC (retsize: 0;)
	r0 = r6
	// succ:  l00000278
l00000278:
	sp = sp + 16
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	r9 = Mem0[sp + 20:word32]
	r10 = Mem0[sp + 24:word32]
	sp = sp + 32
	return
	// succ:  prvUnlockQueue_exit
l000002B6:
l000002BE:
	r0 = r3
	__msr(cpsr, r5)
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  prvUnlockQueue_exit
prvUnlockQueue_exit:


// prvCopyDataToQueue
// Return size: 0
void prvCopyDataToQueue()
prvCopyDataToQueue_entry:
	// succ:  l000000EC
l000000EC:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r4 = r0
	r0 = Mem0[r0 + 64:word32]
	r5 = Mem0[r4 + 56:word32]
	branch r0 != 0x00000000 l00000102
	// succ:  l000000F6 l00000102
l000000F6:
	r6 = Mem0[r4:word32]
	NZCV = cond(r6 - 0x00000000)
	// succ:  l000000FA
l000000FA:
	branch Test(EQ,Z) l0000015C
	// succ:  l000000FC l0000015C
l000000FC:
	r5 = r5 + 0x00000001
	NZCV = cond(r5)
	Mem0[r4 + 56:word32] = r5
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  prvCopyDataToQueue_exit
l00000102:
	r6 = r2
	r2 = r0
	branch r6 != 0x00000000 l00000128
	// succ:  l00000108 l00000128
l00000108:
	r0 = Mem0[r4 + 8:word32]
	call fn0000A5C0 (retsize: 0;)
	r3 = Mem0[r4 + 8:word32]
	r1 = Mem0[r4 + 64:word32]
	r2 = Mem0[r4 + 4:word32]
	r3 = r3 + r1
	NZCV = cond(r3)
	NZCV = cond(r3 - r2)
	Mem0[r4 + 8:word32] = r3
	branch Test(ULT,C) l0000014C
	// succ:  l0000011C l0000014C
l0000011C:
	r3 = Mem0[r4:word32]
	r5 = r5 + 0x00000001
	NZCV = cond(r5)
	r0 = r6
	Mem0[r4 + 8:word32] = r3
	Mem0[r4 + 56:word32] = r5
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  prvCopyDataToQueue_exit
l00000128:
	r0 = Mem0[r4 + 12:word32]
	call fn0000A5C0 (retsize: 0;)
	r2 = Mem0[r4 + 64:word32]
	r3 = Mem0[r4 + 12:word32]
	r2 = r2 - r2
	NZCV = cond(r2)
	r1 = Mem0[r4:word32]
	r3 = r3 + r2
	NZCV = cond(r3)
	NZCV = cond(r3 - r1)
	Mem0[r4 + 12:word32] = r3
	branch Test(UGE,C) l00000140
	// succ:  l0000013E l00000140
l0000013E:
	r3 = Mem0[r4 + 4:word32]
	// succ:  l00000140
l00000140:
	r2 = r2 + r3
	NZCV = cond(r2)
	Mem0[r4 + 12:word32] = r2
	NZCV = cond(r6 - 0x00000002)
	branch Test(EQ,Z) l00000154
	// succ:  l00000148 l00000154
l00000148:
	r5 = r5 + 0x00000001
	NZCV = cond(r5)
	r0 = 0x00000000
	// succ:  l0000014C
l0000014C:
	Mem0[r4 + 56:word32] = r5
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  prvCopyDataToQueue_exit
l00000154:
	Mem0[r4 + 56:word32] = r5
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  prvCopyDataToQueue_exit
l0000015C:
	r0 = 0x00000000
	goto l000000FA
	// succ:  l000000FA
prvCopyDataToQueue_exit:


// prvCopyDataFromQueue
// Return size: 0
void prvCopyDataFromQueue()
prvCopyDataFromQueue_entry:
	// succ:  l0000016C
l0000016C:
	sp = fp
	r2 = Mem0[r0 + 64:word32]
	branch r2 == 0x00000000 l0000018C
	goto l00000170
	// succ:  l00000170 l0000016E_thunk_fn0000018C
l0000016E_thunk_fn0000018C:
	call fn0000018C (retsize: 0;)
	return
	// succ:  prvCopyDataFromQueue_exit
l00000170:
	r3 = r1
	sp = sp - 4
	Mem0[sp:word32] = r4
	r1 = Mem0[r0 + 12:word32]
	r4 = Mem0[r0 + 4:word32]
	r1 = r1 + r2
	NZCV = cond(r1)
	NZCV = cond(r1 - r4)
	Mem0[r0 + 12:word32] = r1
	branch Test(ULT,C) l00000182
	// succ:  l00000180_1 l00000182
l00000180_1:
	r1 = Mem0[r0:word32]
	// succ:  l00000182
l00000182:
	Mem0[r0 + 12:word32] = r1
	r4 = Mem0[sp:word32]
	sp = sp + 4
	r0 = r3
	call fn00C0A5C0 (retsize: 0;)
	return
	// succ:  prvCopyDataFromQueue_exit
prvCopyDataFromQueue_exit:


// fn0000018C
// Return size: 0
void fn0000018C()
fn0000018C_entry:
	// succ:  l0000018C
l0000018C:
	sp = fp
	call lr (retsize: 0;)
	return
	// succ:  fn0000018C_exit
fn0000018C_exit:


// xQueueGenericSend
// Return size: 0
void xQueueGenericSend()
xQueueGenericSend_entry:
	// succ:  l00000190
l00000190:
	sp = fp
	sp = sp - 32
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = r9
	Mem0[sp + 24:word32] = r10
	Mem0[sp + 28:word32] = lr
	r5 = 0x00000000
	sp = sp - 16
	r4 = r0
	r10 = r1
	Mem0[sp + 4:word32] = r2
	r7 = r3
	r8 = r5
	r9 = Mem0[0x000002A6:word32]
	// succ:  l000001F4
l000001F4:
xQueueGenericSend_exit:


// fn000002A0
// Return size: 0
void fn000002A0()
fn000002A0_entry:
	// succ:  l000002A0
l000002A0:
	sp = fp
fn000002A0_exit:


// xQueuePeekFromISR
// Return size: 0
void xQueuePeekFromISR()
xQueuePeekFromISR_entry:
	// succ:  l000002A4
l000002A4:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r5 = __mrs(cpsr)
	r3 = 0x000000BF
	__msr(cpsr, r3)
xQueuePeekFromISR_exit:


// fn000002D4
// Return size: 0
void fn000002D4()
fn000002D4_entry:
	// succ:  l000002D4
l000002D4:
	sp = fp
	r1 = (word32) Mem0[r2:word16]
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn000002D4_exit
fn000002D4_exit:


// xQueueGenericReceive
// Return size: 0
void xQueueGenericReceive()
xQueueGenericReceive_entry:
	// succ:  l000002D8
l000002D8:
	sp = fp
	sp = sp - 32
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = r9
	Mem0[sp + 24:word32] = r10
	Mem0[sp + 28:word32] = lr
	r5 = 0x00000000
	sp = sp - 16
	r4 = r0
	r10 = r1
	Mem0[sp + 4:word32] = r2
	r9 = r3
	r7 = r5
	r8 = Mem0[0x0000042A:word32]
	// succ:  l00000306
l00000306:
xQueueGenericReceive_exit:


// fn00000424
// Return size: 0
void fn00000424()
fn00000424_entry:
	// succ:  l00000424
l00000424:
	sp = fp
fn00000424_exit:


// uxQueueMessagesWaiting
// Return size: 0
void uxQueueMessagesWaiting()
uxQueueMessagesWaiting_entry:
	// succ:  l00000428
l00000428:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	r4 = r0
	call fn00008574 (retsize: 0;)
	r4 = Mem0[r4 + 56:word32]
	call fn000085AC (retsize: 0;)
	r0 = r4
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  uxQueueMessagesWaiting_exit
uxQueueMessagesWaiting_exit:


// fn00000438
// Return size: 0
void fn00000438()
fn00000438_entry:
	// succ:  l00000438
l00000438:
	sp = fp
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  fn00000438_exit
fn00000438_exit:


// uxQueueSpacesAvailable
// Return size: 0
void uxQueueSpacesAvailable()
uxQueueSpacesAvailable_entry:
	// succ:  l0000043C
l0000043C:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r5 = r0
	call fn00008574 (retsize: 0;)
	r0 = Mem0[r5 + 56:word32]
	r4 = Mem0[r5 + 60:word32]
	r4 = r4 - r0
	call fn000085AC (retsize: 0;)
	r0 = r4
	// succ:  l0000044E_thunk_fn00000450
l0000044E_thunk_fn00000450:
	call fn00000450 (retsize: 0;)
	return
	// succ:  uxQueueSpacesAvailable_exit
uxQueueSpacesAvailable_exit:


// fn00000450
// Return size: 0
void fn00000450()
fn00000450_entry:
	// succ:  l00000450
l00000450:
	sp = fp
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn00000450_exit
fn00000450_exit:


// vQueueDelete
// Return size: 0
void vQueueDelete()
vQueueDelete_entry:
	// succ:  l00000454
l00000454:
	sp = fp
	call fn00C0177C (retsize: 0;)
	return
	// succ:  vQueueDelete_exit
vQueueDelete_exit:


// xQueueGenericSendFromISR
// Return size: 0
void xQueueGenericSendFromISR()
xQueueGenericSendFromISR_entry:
	// succ:  l00000458
l00000458:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = r6
	Mem0[sp + 16:word32] = r7
	Mem0[sp + 20:word32] = lr
	r6 = __mrs(cpsr)
	r4 = 0x000000BF
	__msr(cpsr, r4)
xQueueGenericSendFromISR_exit:


// xQueueGiveFromISR
// Return size: 0
void xQueueGiveFromISR()
xQueueGiveFromISR_entry:
	// succ:  l000004C4
l000004C4:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r4 = __mrs(cpsr)
	r3 = 0x000000BF
	__msr(cpsr, r3)
xQueueGiveFromISR_exit:


// xQueueReceiveFromISR
// Return size: 0
void xQueueReceiveFromISR()
xQueueReceiveFromISR_entry:
	// succ:  l00000524
l00000524:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = lr
	r6 = __mrs(cpsr)
	r4 = 0x000000BF
	__msr(cpsr, r4)
xQueueReceiveFromISR_exit:


// xQueueIsQueueEmptyFromISR
// Return size: 0
void xQueueIsQueueEmptyFromISR()
xQueueIsQueueEmptyFromISR_entry:
	// succ:  l00000594
l00000594:
	sp = fp
	r0 = Mem0[r0 + 56:word32]
	r0 = __clz(r0)
	r0 = r0 >>u 5
	NZC = cond(r0)
	call lr (retsize: 0;)
	return
	// succ:  xQueueIsQueueEmptyFromISR_exit
xQueueIsQueueEmptyFromISR_exit:


// xQueueIsQueueFullFromISR
// Return size: 0
void xQueueIsQueueFullFromISR()
xQueueIsQueueFullFromISR_entry:
	// succ:  l000005A0
l000005A0:
	sp = fp
	r3 = Mem0[r0 + 56:word32]
	r0 = Mem0[r0 + 60:word32]
	r0 = r0 - r3
	r0 = __clz(r0)
	r0 = r0 >>u 5
	NZC = cond(r0)
	call lr (retsize: 0;)
	return
	// succ:  xQueueIsQueueFullFromISR_exit
xQueueIsQueueFullFromISR_exit:


// uxQueueMessagesWaitingFromISR
// Return size: 0
void uxQueueMessagesWaitingFromISR()
uxQueueMessagesWaitingFromISR_entry:
	// succ:  l000005B0
l000005B0:
	sp = fp
	r0 = Mem0[r0 + 56:word32]
	call lr (retsize: 0;)
	return
	// succ:  uxQueueMessagesWaitingFromISR_exit
uxQueueMessagesWaitingFromISR_exit:


// xQueueGetMutexHolder
// Return size: 0
void xQueueGetMutexHolder()
xQueueGetMutexHolder_entry:
	// succ:  l000005B4
l000005B4:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	r4 = r0
	call fn00008574 (retsize: 0;)
	r3 = Mem0[r4:word32]
	branch r3 != 0x00000000 l000005CA
	// succ:  l000005C0 l000005CA
l000005C0:
	r4 = Mem0[r4 + 4:word32]
	call fn000085AC (retsize: 0;)
	r0 = r4
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  xQueueGetMutexHolder_exit
l000005CA:
	r4 = 0x00000000
	call fn000085AC (retsize: 0;)
	// succ:  l000005CC_thunk_fn000005D0
l000005CC_thunk_fn000005D0:
	call fn000005D0 (retsize: 0;)
	return
	// succ:  xQueueGetMutexHolder_exit
xQueueGetMutexHolder_exit:


// fn000005D0
// Return size: 0
void fn000005D0()
fn000005D0_entry:
	// succ:  l000005D0
l000005D0:
	sp = fp
	r0 = r4
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  fn000005D0_exit
fn000005D0_exit:


// xQueueTakeMutexRecursive
// Return size: 0
void xQueueTakeMutexRecursive()
xQueueTakeMutexRecursive_entry:
	// succ:  l000005D4
l000005D4:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r5 = Mem0[r0 + 4:word32]
	r4 = r0
	r6 = r1
	call fn00001134 (retsize: 0;)
	NZCV = cond(r5 - r0)
	branch Test(EQ,Z) l000005F6
	// succ:  l000005E4 l000005F6
l000005E4:
	r3 = 0x00000000
	r2 = r6
	r1 = r3
	r0 = r4
	call fn000002D4 (retsize: 0;)
	branch r0 == 0x00000000 l000005F8
	// succ:  l000005F2 l000005F8
l000005F2:
	r3 = Mem0[r4 + 12:word32]
	r3 = r3 + 0x00000001
	NZCV = cond(r3)
	// succ:  l000005F6
l000005F6:
	Mem0[r4 + 12:word32] = r3
	// succ:  l000005F8
l000005F8:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  xQueueTakeMutexRecursive_exit
xQueueTakeMutexRecursive_exit:


// fn00000600
// Return size: 0
void fn00000600()
fn00000600_entry:
	// succ:  l00000600
l00000600:
	sp = fp
	Mem0[r4 + 12:word32] = r3
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn00000600_exit
fn00000600_exit:


// xQueueGiveMutexRecursive
// Return size: 0
void xQueueGiveMutexRecursive()
xQueueGiveMutexRecursive_entry:
	// succ:  l00000604
l00000604:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r5 = Mem0[r0 + 4:word32]
	r4 = r0
	call fn00001134 (retsize: 0;)
	NZCV = cond(r5 - r0)
	branch Test(EQ,Z) l00000612
	// succ:  l00000612 l00000612
l00000612:
	r0 = 0x00000000
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  xQueueGiveMutexRecursive_exit
xQueueGiveMutexRecursive_exit:


// fn0000062C
// Return size: 0
void fn0000062C()
fn0000062C_entry:
	// succ:  l0000062C
l0000062C:
	sp = fp
	r0 = 0x00000001
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn0000062C_exit
fn0000062C_exit:


// xQueueGenericReset
// Return size: 0
void xQueueGenericReset()
xQueueGenericReset_entry:
	// succ:  l00000630
l00000630:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r4 = r0
	r6 = r1
	r5 = 0x000000FF
	call fn00008574 (retsize: 0;)
	r1 = 0x00000000
	r3 = Mem0[r4 + 64:word32]
	r2 = Mem0[r4 + 60:word32]
	r0 = Mem0[r4:word32]
	r2 = r2 * r3
	r3 = r2 - r3
	r3 = r3 + r0
	NZCV = cond(r3)
	r2 = r2 + r0
	NZCV = cond(r2)
	Mem0[r4 + 56:word32] = r1
	Mem0[r4 + 4:word32] = r2
	Mem0[r4 + 68:byte] = (byte) r5
	Mem0[r4 + 12:word32] = r3
	Mem0[r4 + 8:word32] = r0
	Mem0[r4 + 69:byte] = (byte) r5
	branch r6 != 0x00000000 l00000690
	// succ:  l00000660 l00000690
l00000660:
	r3 = Mem0[r4 + 16:word32]
	branch r3 != 0x00000000 l0000066C
	// succ:  l00000664 l0000066C
l00000664:
	call fn000085AC (retsize: 0;)
	r0 = 0x00000001
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  xQueueGenericReset_exit
l0000066C:
	r0 = r4 + 0x00000010
	call fn00001018 (retsize: 0;)
	NZCV = cond(r0 - 0x00000000)
	branch Test(EQ,Z) l00000676_thunk_fn00000860
	goto l00000678
	// succ:  l00000678 l00000676_thunk_fn00000860
l00000676_thunk_fn00000860:
	call fn00000860 (retsize: 0;)
	return
	// succ:  xQueueGenericReset_exit
l00000678:
	r2 = 0x10000000
	r3 = Mem0[0x000006AC:word32]
	Mem0[r3:word32] = r2
l00000690:
	r0 = r4 + 0x00000010
	call fn000082CC (retsize: 0;)
	r0 = r4 + 0x00000024
	call fn000082CC (retsize: 0;)
	call fn000085AC (retsize: 0;)
	r0 = 0x00000001
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  xQueueGenericReset_exit
xQueueGenericReset_exit:


// fn000006A8
// Return size: 0
void fn000006A8()
fn000006A8_entry:
	// succ:  l000006A8
l000006A8:
	sp = fp
fn000006A8_exit:


// xQueueGenericCreate
// Return size: 0
void xQueueGenericCreate()
xQueueGenericCreate_entry:
	// succ:  l000006AC
l000006AC:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r6 = r0
	r0 = r0 * r1
	r0 = r0 + 0x00000048
	NZCV = cond(r0)
	r5 = r1
	call fn00001728 (retsize: 0;)
	r4 = r0
	branch r0 == 0x00000000 l000006D4_in_xQueueGenericCreate
	// succ:  l000006C0 l000006D4_in_xQueueGenericCreate
l000006C0:
	branch r5 == 0x00000000 l000006C0_thunk_fn000006D8
	goto l000006C2
	// succ:  l000006C2 l000006C0_thunk_fn000006D8
l000006C0_thunk_fn000006D8:
	call fn000006D8 (retsize: 0;)
	return
	// succ:  xQueueGenericCreate_exit
l000006C2:
	r3 = r0 + 0x00000048
	// succ:  l000006C2_thunk_fn000006C6
l000006C2_thunk_fn000006C6:
	call fn000006C6 (retsize: 0;)
	return
	// succ:  xQueueGenericCreate_exit
l000006D4_in_xQueueGenericCreate:
	r0 = r4
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  xQueueGenericCreate_exit
xQueueGenericCreate_exit:


// fn000006C6
// Return size: 0
void fn000006C6()
fn000006C6_entry:
	// succ:  l000006C6
l000006C6:
	sp = fp
	Mem0[r0:word32] = r3
	Mem0[r4 + 60:word32] = r6
	Mem0[r4 + 64:word32] = r5
	r1 = 0x00000001
	r0 = r4
	call fn0000062C (retsize: 0;)
	goto l000006D4_in_fn000006C6
	// succ:  l000006D4_in_fn000006C6
l000006C6:
	Mem0[r0:word32] = r3
	Mem0[r4 + 60:word32] = r6
	Mem0[r4 + 64:word32] = r5
	r1 = 0x00000001
	r0 = r4
	call fn0000062C (retsize: 0;)
	// succ:  l000006D4
l000006D4:
	r0 = r4
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn000006C6_exit
l000006D4_in_fn000006C6:
	r0 = r4
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn000006C6_exit
fn000006C6_exit:


// fn000006D8
// Return size: 0
void fn000006D8()
fn000006D8_entry:
	goto l000006D8
	// succ:  l000006D8
l000006C4:
	r0 = r1 << 13
	NZC = cond(r0)
	// succ:  l000006C4_thunk_fn000006C6
l000006C4_thunk_fn000006C6:
	call fn000006C6 (retsize: 0;)
	return
	// succ:  fn000006D8_exit
l000006D8:
	sp = fp
	Mem0[r4:word32] = r0
	goto l000006C4
	// succ:  l000006C4
fn000006D8_exit:


// xQueueCreateMutex
// Return size: 0
void xQueueCreateMutex()
xQueueCreateMutex_entry:
	// succ:  l000006DC
l000006DC:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	r2 = r0
	r1 = 0x00000000
	r0 = 0x00000001
	call fn000006A8 (retsize: 0;)
	r4 = r0
	branch r0 == 0x00000000 l000006EA_thunk_fn000006FC
	goto l000006EC
	// succ:  l000006EC l000006EA_thunk_fn000006FC
l000006EA_thunk_fn000006FC:
	call fn000006FC (retsize: 0;)
	return
	// succ:  xQueueCreateMutex_exit
l000006EC:
	r3 = 0x00000000
	Mem0[r0 + 4:word32] = r3
	Mem0[r0:word32] = r3
	Mem0[r0 + 12:word32] = r3
	r2 = r3
	r1 = r3
	call fn0000018C (retsize: 0;)
	// succ:  l000006F8_thunk_fn000006FC
l000006F8_thunk_fn000006FC:
	call fn000006FC (retsize: 0;)
	return
	// succ:  xQueueCreateMutex_exit
xQueueCreateMutex_exit:


// fn000006FC
// Return size: 0
void fn000006FC()
fn000006FC_entry:
	// succ:  l000006FC
l000006FC:
	sp = fp
	r0 = r4
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  fn000006FC_exit
fn000006FC_exit:


// prvInitialiseNewTask
// Return size: 0
void prvInitialiseNewTask()
prvInitialiseNewTask_entry:
	// succ:  l00000700
l00000700:
	sp = fp
	sp = sp - 40
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = r6
	Mem0[sp + 16:word32] = r7
	Mem0[sp + 20:word32] = r8
	Mem0[sp + 24:word32] = r9
	Mem0[sp + 28:word32] = r10
	Mem0[sp + 32:word32] = fp
	Mem0[sp + 36:word32] = lr
	r4 = Mem0[sp + 48:word32]
	r9 = r3
	r5 = Mem0[r4 + 80:word32]
	r3 = r2 + 0x40000000
	r3 = r3 - 0x00000001
	NZCV = cond(r3)
	fp = r2
	r2 = Mem0[sp + 40:word32]
	r5 = r5 + (r3 << 0x00000002)
	r8 = r0
	r3 = r1 - 0x00000001
	r10 = r2 >> 0x0000001F
	r5 = r5 & ~0x00000007
	r1 = r1 + 0x00000002
	NZCV = cond(r1)
	r0 = r4 + 0x00000054
	r2 = r2 & ~0x80000000
	r6 = (word32) Mem0[r3 + 1:byte]
	Mem0[r0:byte] = (byte) r6
	r0 = r0 + 1
	r3 = r3 + 1
	r6 = (word32) Mem0[r3:byte]
	branch r6 == 0x00000000 l0000073E
	// succ:  l0000073A l0000073E
l0000073A:
	NZCV = cond(r3 - r1)
	branch Test(NE,Z) l0000073C_thunk_fn0000092A
	goto l0000073E
	// succ:  l0000073E l0000073C_thunk_fn0000092A
l0000073C_thunk_fn0000092A:
	call fn0000092A (retsize: 0;)
	return
	// succ:  prvInitialiseNewTask_exit
l0000073E:
	NZCV = cond(r2 - 0x00000001)
	branch Test(ULT,C) l00000744
	// succ:  l00000742_1 l00000744
l00000742_1:
	r2 = 0x00000001
	// succ:  l00000744
l00000744:
	r6 = 0x00000000
	r7 = r2
	Mem0[r4 + 76:word32] = r2
	Mem0[r4 + 88:word32] = r2
	r0 = r4 + 0x00000024
	Mem0[r4 + 86:byte] = (byte) r6
	Mem0[r4 + 92:word32] = r6
	call fn000082E4 (retsize: 0;)
	r0 = r4 + 0x00000038
	call fn000082E4 (retsize: 0;)
	r3 = 0x00000002 - r7
	Mem0[r4 + 56:word32] = r3
	r2 = Mem0[r4 + 80:word32]
	r3 = fp
	r1 = Mem0[sp + 52:word32]
	r0 = r4 + 0x00000004
	Mem0[r4 + 48:word32] = r4
	Mem0[r4 + 68:word32] = r4
	call vPortEndScheduler (retsize: 0;)
	Mem0[r4 + 96:word32] = r6
	r3 = r10
	Mem0[r4 + 100:byte] = (byte) r6
	r2 = r9
	r1 = r8
	r0 = r5
	call fn00001378 (retsize: 0;)
	r3 = Mem0[sp + 44:word32]
	Mem0[r4:word32] = r0
	branch r3 == 0x00000000 l00000792
	// succ:  l00000790 l00000792
l00000790:
	Mem0[r3:word32] = r4
	// succ:  l00000792
l00000792:
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	r6 = Mem0[sp + 12:word32]
	r7 = Mem0[sp + 16:word32]
	r8 = Mem0[sp + 20:word32]
	r9 = Mem0[sp + 24:word32]
	r10 = Mem0[sp + 28:word32]
	fp = Mem0[sp + 32:word32]
	sp = sp + 40
	return
	// succ:  prvInitialiseNewTask_exit
prvInitialiseNewTask_exit:


// fn00000794
// Return size: 0
void fn00000794()
fn00000794_entry:
	// succ:  l00000794
l00000794:
	sp = fp
	r0 = (word32) Mem0[r7 + 124:word16]
	// succ:  l00000796_thunk_prvAddNewTaskToReadyList
l00000796_thunk_prvAddNewTaskToReadyList:
	call prvAddNewTaskToReadyList (retsize: 0;)
	return
	// succ:  fn00000794_exit
fn00000794_exit:


// prvAddNewTaskToReadyList
// Return size: 0
void prvAddNewTaskToReadyList()
prvAddNewTaskToReadyList_entry:
	// succ:  l00000798
l00000798:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = lr
	r4 = Mem0[0x00000858:word32]
	r5 = r0
	call fn00008574 (retsize: 0;)
	r3 = Mem0[r4:word32]
	r3 = r3 + 0x00000001
	NZCV = cond(r3)
	Mem0[r4:word32] = r3
	r3 = Mem0[r4 + 4:word32]
	NZCV = cond(r3 - 0x00000000)
	branch Test(EQ,Z) l0000080E
	// succ:  l000007B0 l0000080E
l000007B0:
	r3 = Mem0[r4 + 116:word32]
	branch r3 == 0x00000000 l00000800
	// succ:  l000007B4 l00000800
l000007B4:
	r0 = Mem0[r5 + 76:word32]
	// succ:  l000007B6
l000007B6:
	r6 = r4 + 0x00000008
	r3 = 0x00000001
	r1 = Mem0[r4 + 124:word32]
	r2 = Mem0[r4 + 120:word32]
	r3 = r3 << r0
	NZC = cond(r3)
	r0 = r0 + (r0 << 0x00000002)
	r3 = r3 | r1
	NZC = cond(r3)
	r2 = r2 + 0x00000001
	NZCV = cond(r2)
	r0 = r6 + (r0 << 0x00000002)
	r1 = r5 + 0x00000024
	Mem0[r4 + 124:word32] = r3
	Mem0[r4 + 120:word32] = r2
	call fn000082EC (retsize: 0;)
	call fn000085AC (retsize: 0;)
	r3 = Mem0[r4 + 116:word32]
	branch r3 == 0x00000000 l000007FC
	// succ:  l000007E2 l000007FC
l000007E2:
	r2 = Mem0[r4 + 4:word32]
	r3 = Mem0[r5 + 76:word32]
	r2 = Mem0[r2 + 76:word32]
	NZCV = cond(r2 - r3)
	branch Test(UGE,C) l000007F8
	// succ:  l000007EC l000007F8
l000007EC:
	r2 = 0x10000000
	r3 = Mem0[0x0000085C:word32]
	Mem0[r3:word32] = r2
l000007F8:
l000007FC:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  prvAddNewTaskToReadyList_exit
l00000800:
	r3 = Mem0[r4 + 4:word32]
	r0 = Mem0[r5 + 76:word32]
	r3 = Mem0[r3 + 76:word32]
	r6 = r4 + 0x00000008
	NZCV = cond(r3 - r0)
	// succ:  l0000080E
l0000080E:
	Mem0[r4 + 4:word32] = r5
	goto l000007B6
	// succ:  l000007B6
prvAddNewTaskToReadyList_exit:


// fn00000858
// Return size: 0
void fn00000858()
fn00000858_entry:
	// succ:  l00000858 l00000858
l00000858:
	sp = fp
	sp = v3
fn00000858_exit:


// prvAddCurrentTaskToDelayedList.isra.0
// Return size: 0
void prvAddCurrentTaskToDelayedList.isra.0()
prvAddCurrentTaskToDelayedList.isra.0_entry:
	// succ:  l0000085C
l0000085C:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r4 = Mem0[0x000008B6:word32]
	// succ:  l0000085E_thunk_fn00000860
l0000085E_thunk_fn00000860:
	call fn00000860 (retsize: 0;)
	return
	// succ:  prvAddCurrentTaskToDelayedList.isra.0_exit
prvAddCurrentTaskToDelayedList.isra.0_exit:


// fn00000860
// Return size: 0
void fn00000860()
fn00000860_entry:
	// succ:  l00000860
l00000860:
	sp = fp
	r5 = r0
	r6 = Mem0[r4 + 128:word32]
	r0 = Mem0[r4 + 4:word32]
	r0 = r0 + 0x00000024
	NZCV = cond(r0)
	call fn0000833C (retsize: 0;)
	branch r0 != 0x00000000 l0000086E_thunk_fn00000880
	goto l0000086E_thunk_fn00000870
	// succ:  l0000086E_thunk_fn00000870 l0000086E_thunk_fn00000880
l00000860:
	r5 = r0
	r6 = Mem0[r4 + 128:word32]
	r0 = Mem0[r4 + 4:word32]
	r0 = r0 + 0x00000024
	NZCV = cond(r0)
	call fn0000833C (retsize: 0;)
	branch r0 != 0x00000000 l00000880
	goto l0000086E_thunk_fn00000870
	// succ:  l0000086E_thunk_fn00000870 l0000086E_thunk_fn00000880
l0000086E_thunk_fn00000870:
	call fn00000870 (retsize: 0;)
	return
	// succ:  fn00000860_exit
l0000086E_thunk_fn00000870:
	call fn00000870 (retsize: 0;)
	return
	// succ:  fn00000860_exit
l0000086E_thunk_fn00000880:
	call fn00000880 (retsize: 0;)
	return
	// succ:  fn00000860_exit
l0000086E_thunk_fn00000880:
	call fn00000880 (retsize: 0;)
	return
	// succ:  fn00000860_exit
fn00000860_exit:


// fn00000870
// Return size: 0
void fn00000870()
fn00000870_entry:
	// succ:  l00000870
l00000870:
	sp = v3
	r2 = 0x00000001
	r1 = Mem0[r4 + 4:word32]
	r3 = Mem0[r4 + 124:word32]
	r1 = Mem0[r1 + 76:word32]
	r2 = r2 << r1
	NZC = cond(r2)
	r3 = r3 & ~(r2 << 0x00000000)
	Mem0[r4 + 124:word32] = r3
	// succ:  l0000087E_thunk_fn00000880
l0000087E_thunk_fn00000880:
	call fn00000880 (retsize: 0;)
	return
	// succ:  fn00000870_exit
fn00000870_exit:


// fn00000880
// Return size: 0
void fn00000880()
fn00000880_entry:
	// succ:  l00000880
l00000880:
	sp = v3
	r5 = r5 + r6
	NZCV = cond(r5)
	r3 = Mem0[r4 + 4:word32]
	NZCV = cond(r6 - r5)
	Mem0[r3 + 36:word32] = r5
	branch Test(UGT,ZC) l0000089E
	// succ:  l0000088A l0000089E
l0000088A:
	r0 = Mem0[r4 + 108:word32]
	r1 = Mem0[r4 + 4:word32]
	r1 = r1 + 0x00000024
	NZCV = cond(r1)
	call fn00008308 (retsize: 0;)
	r3 = Mem0[r4 + 132:word32]
	NZCV = cond(r5 - r3)
	branch Test(UGE,C) l000008A0
	// succ:  l0000089C_1 l000008A0
l0000089C_1:
	Mem0[r4 + 132:word32] = r5
	goto l000008A0
	// succ:  l000008A0
l0000089E:
	Mem0[r0 + r2:word32] = r4
	// succ:  l000008A0
l000008A0:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn00000880_exit
fn00000880_exit:


// fn000008B0
// Return size: 0
void fn000008B0()
fn000008B0_entry:
	// succ:  l000008B0
l000008B0:
	sp = fp
	r4 = r0 << 3
	NZC = cond(r4)
	r0 = 0x00000000
fn000008B0_exit:


// xTaskCreate
// Return size: 0
void xTaskCreate()
xTaskCreate_entry:
	// succ:  l000008B4
l000008B4:
	sp = fp
	sp = sp - 32
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = r9
	Mem0[sp + 24:word32] = r10
	Mem0[sp + 28:word32] = lr
	r8 = r0
	sp = sp - 16
	r0 = r2 << 2
	NZC = cond(r0)
	r6 = r2
	r9 = r1
	r10 = r3
	call fn00001728 (retsize: 0;)
	branch r0 == 0x00000000 l00000904
	// succ:  l000008CA l00000904
l000008CA:
	r5 = r0
	r0 = 0x00000068
	call fn00001728 (retsize: 0;)
	r4 = r0
	branch r0 == 0x00000000 l0000090E
	// succ:  l000008D6 l0000090E
l000008D6:
	r7 = 0x00000000
	Mem0[r0 + 80:word32] = r5
	r5 = Mem0[sp + 52:word32]
	Mem0[r4 + 101:byte] = (byte) r7
	Mem0[sp + 4:word32] = r5
	r5 = Mem0[sp + 48:word32]
	r3 = r10
	r2 = r6
	r1 = r9
	r0 = r8
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 8:word32] = r4
	Mem0[sp:word32] = r5
	call fn000006FC (retsize: 0;)
	r0 = r4
	call fn00000794 (retsize: 0;)
	// succ:  l000008FC_in_xTaskCreate
l000008FC_in_xTaskCreate:
	sp = sp + 16
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	r9 = Mem0[sp + 20:word32]
	r10 = Mem0[sp + 24:word32]
	sp = sp + 32
	return
	// succ:  xTaskCreate_exit
l00000904:
	r0 = 0xFFFFFFFF
	sp = sp + 16
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	r9 = Mem0[sp + 20:word32]
	r10 = Mem0[sp + 24:word32]
	sp = sp + 32
	return
	// succ:  xTaskCreate_exit
l0000090E:
	r0 = r5
	call fn0000177C (retsize: 0;)
	r0 = 0xFFFFFFFF
	// succ:  l00000914_thunk_fn00000918
l00000914_thunk_fn00000918:
	call fn00000918 (retsize: 0;)
	return
	// succ:  xTaskCreate_exit
xTaskCreate_exit:


// fn000008FA
// Return size: 0
void fn000008FA()
fn000008FA_entry:
	goto l000008FA
	// succ:  l000008FA
l000008B2_thunk_xTaskCreate:
	call xTaskCreate (retsize: 0;)
	return
	// succ:  fn000008FA_exit
l000008FA:
	sp = fp
	d18 = __vhadd_u8(d14, d1)
	goto l000008FC
	// succ:  l000008FC
l000008FA:
	goto l000008B2_thunk_xTaskCreate
	// succ:  l000008B2_thunk_xTaskCreate
l000008FC:
	sp = sp + 16
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	r9 = Mem0[sp + 20:word32]
	r10 = Mem0[sp + 24:word32]
	sp = sp + 32
	return
	// succ:  fn000008FA_exit
fn000008FA_exit:


// fn00000918
// Return size: 0
void fn00000918()
fn00000918_entry:
	// succ:  l00000918
l00000918:
	sp = fp
	// succ:  l00000918_thunk_fn000008FA
l00000918_thunk_fn000008FA:
	call fn000008FA (retsize: 0;)
	return
	// succ:  fn00000918_exit
fn00000918_exit:


// xTaskCreateRestricted
// Return size: 0
void xTaskCreateRestricted()
xTaskCreateRestricted_entry:
	// succ:  l0000091C
l0000091C:
	sp = fp
	r3 = Mem0[r0 + 20:word32]
	branch r3 == 0x00000000 l0000096A
	// succ:  l00000920 l0000096A
l00000920:
	sp = sp - 20
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = lr
	r4 = r0
	sp = sp - 20
	r0 = 0x00000068
	r7 = r1
	// succ:  l00000928_thunk_fn0000092A
l00000928_thunk_fn0000092A:
	call fn0000092A (retsize: 0;)
	return
	// succ:  xTaskCreateRestricted_exit
l0000096A:
	r0 = 0xFFFFFFFF
	// succ:  l0000096E_in_xTaskCreateRestricted
l0000096E_in_xTaskCreateRestricted:
	call lr (retsize: 0;)
	return
	// succ:  xTaskCreateRestricted_exit
xTaskCreateRestricted_exit:


// fn0000092A
// Return size: 0
void fn0000092A()
fn0000092A_entry:
	// succ:  l0000092A
l0000092A:
	sp = fp
	call fn00001728 (retsize: 0;)
	r5 = r0
	branch r0 == 0x00000000 l00000930_thunk_fn00000964
	goto l00000930_thunk_fn00000932
	// succ:  l00000930_thunk_fn00000932 l00000930_thunk_fn00000964
l0000092A:
	call fn00001728 (retsize: 0;)
	r5 = r0
	branch r0 == 0x00000000 l00000964
	goto l00000930_thunk_fn00000932
	// succ:  l00000930_thunk_fn00000932 l00000930_thunk_fn00000964
l00000930_thunk_fn00000932:
	call fn00000932 (retsize: 0;)
	return
	// succ:  fn0000092A_exit
l00000930_thunk_fn00000932:
	call fn00000932 (retsize: 0;)
	return
	// succ:  fn0000092A_exit
l00000930_thunk_fn00000964:
	call fn00000964 (retsize: 0;)
	return
	// succ:  fn0000092A_exit
l00000930_thunk_fn00000964:
	call fn00000964 (retsize: 0;)
	return
	// succ:  fn0000092A_exit
fn0000092A_exit:


// fn00000932
// Return size: 0
void fn00000932()
fn00000932_entry:
	// succ:  l00000932
l00000932:
	sp = v3
	r6 = 0x00000001
	r1 = Mem0[r4 + 20:word32]
	Mem0[r0 + 101:byte] = (byte) r6
	r3 = Mem0[r4 + 12:word32]
	r2 = (word32) Mem0[r4 + 16:word16]
	lr = Mem0[r4 + 16:word32]
	Mem0[r0 + 80:word32] = r1
	r1 = Mem0[r4 + 4:word32]
	Mem0[sp + 8:word32] = r0
	Mem0[sp + 4:word32] = r7
	v12 = Mem0[r4:word32]
	r4 = r4 + 24
	r0 = v12
	Mem0[sp:word32] = lr
	Mem0[sp + 12:word32] = r4
	call fn000006FC (retsize: 0;)
	r0 = r5
	call fn00000794 (retsize: 0;)
	// succ:  l0000095A_thunk_fn00000964
l0000095A_thunk_fn00000964:
	call fn00000964 (retsize: 0;)
	return
	// succ:  fn00000932_exit
fn00000932_exit:


// fn00000964
// Return size: 0
void fn00000964()
fn00000964_entry:
	goto l00000964
	// succ:  l00000964
l0000095C:
	r0 = r6
	sp = sp + 20
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	sp = sp + 20
	return
	// succ:  fn00000964_exit
l00000964:
	sp = v3
	r0 = 0xFFFFFFFF
	goto l0000095C
	// succ:  l0000095C
fn00000964_exit:


// fn0000096C
// Return size: 0
void fn0000096C()
fn0000096C_entry:
	// succ:  l0000096C
l0000096C:
	sp = fp
	r0 = r0 + 0x000000FF
	NZCV = cond(r0)
	// succ:  l0000096E
l0000096E:
	call lr (retsize: 0;)
	return
	// succ:  fn0000096C_exit
fn0000096C_exit:


// vTaskAllocateMPURegions
// Return size: 0
void vTaskAllocateMPURegions()
vTaskAllocateMPURegions_entry:
	// succ:  l00000970
l00000970:
	sp = fp
	branch r0 == 0x00000000 l0000097C
	// succ:  l00000972 l0000097C
l00000972:
	r3 = 0x00000000
	r0 = r0 + 0x00000004
	NZCV = cond(r0)
	r2 = r3
	call fn00C01550 (retsize: 0;)
	return
	// succ:  vTaskAllocateMPURegions_exit
l0000097C:
	r3 = Mem0[0x00000990:word32]
	r0 = Mem0[r3 + 4:word32]
	r3 = 0x00000000
	r0 = r0 + 0x00000004
	NZCV = cond(r0)
	r2 = r3
	call fn00C01550 (retsize: 0;)
	return
	// succ:  vTaskAllocateMPURegions_exit
vTaskAllocateMPURegions_exit:


// fn0000098C
// Return size: 0
void fn0000098C()
fn0000098C_entry:
	// succ:  l0000098C
l0000098C:
	sp = fp
	r4 = r0 << 3
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l0000098E_thunk_vTaskStartScheduler
l0000098E_thunk_vTaskStartScheduler:
	call vTaskStartScheduler (retsize: 0;)
	return
	// succ:  fn0000098C_exit
fn0000098C_exit:


// vTaskStartScheduler
// Return size: 0
void vTaskStartScheduler()
vTaskStartScheduler_entry:
	// succ:  l00000990
l00000990:
	sp = fp
	r3 = 0x80000000
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	r4 = Mem0[0x000009E6:word32]
	sp = sp - 8
	Mem0[sp:word32] = r3
	r3 = r4 + 0x00000088
	Mem0[sp + 4:word32] = r3
	r2 = 0x0000003B
	r3 = 0x00000000
	r1 = Mem0[0x000009EA:word32]
	r0 = Mem0[0x000009EC:word32]
	call fn000008B0 (retsize: 0;)
	NZCV = cond(r0 - 0x00000001)
	branch Test(EQ,Z) l000009B2
	// succ:  l000009B2 l000009B2
l000009B2:
	sp = sp + 8
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  vTaskStartScheduler_exit
vTaskStartScheduler_exit:


// vTaskEndScheduler
// Return size: 0
void vTaskEndScheduler()
vTaskEndScheduler_entry:
	// succ:  l000009EC
l000009EC:
	sp = fp
	r3 = 0x000000BF
	__msr(cpsr, r3)
vTaskEndScheduler_exit:


// fn00000A08
// Return size: 0
void fn00000A08()
fn00000A08_entry:
	// succ:  l00000A08
l00000A08:
	sp = fp
	r4 = r0 << 3
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l00000A0A_thunk_vTaskSuspendAll
l00000A0A_thunk_vTaskSuspendAll:
	call vTaskSuspendAll (retsize: 0;)
	return
	// succ:  fn00000A08_exit
fn00000A08_exit:


// vTaskSuspendAll
// Return size: 0
void vTaskSuspendAll()
vTaskSuspendAll_entry:
	// succ:  l00000A0C
l00000A0C:
	sp = fp
	r2 = Mem0[0x00000A20:word32]
	r3 = Mem0[r2 + 140:word32]
	r3 = r3 + 0x00000001
	NZCV = cond(r3)
	Mem0[r2 + 140:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  vTaskSuspendAll_exit
vTaskSuspendAll_exit:


// fn00000A1C
// Return size: 0
void fn00000A1C()
fn00000A1C_entry:
	// succ:  l00000A1C
l00000A1C:
	sp = fp
	r4 = r0 << 3
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l00000A1E_thunk_xTaskGetTickCount
l00000A1E_thunk_xTaskGetTickCount:
	call xTaskGetTickCount (retsize: 0;)
	return
	// succ:  fn00000A1C_exit
fn00000A1C_exit:


// xTaskGetTickCount
// Return size: 0
void xTaskGetTickCount()
xTaskGetTickCount_entry:
	// succ:  l00000A20
l00000A20:
	sp = fp
	r3 = Mem0[0x00000A2C:word32]
	r0 = Mem0[r3 + 128:word32]
	call lr (retsize: 0;)
	return
	// succ:  xTaskGetTickCount_exit
xTaskGetTickCount_exit:


// xTaskGetTickCountFromISR
// Return size: 0
void xTaskGetTickCountFromISR()
xTaskGetTickCountFromISR_entry:
	// succ:  l00000A2C
l00000A2C:
	sp = fp
	r3 = Mem0[0x00000A38:word32]
	r0 = Mem0[r3 + 128:word32]
	call lr (retsize: 0;)
	return
	// succ:  xTaskGetTickCountFromISR_exit
xTaskGetTickCountFromISR_exit:


// fn00000A34
// Return size: 0
void fn00000A34()
fn00000A34_entry:
	// succ:  l00000A34
l00000A34:
	sp = fp
	r4 = r0 << 3
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l00000A36_thunk_uxTaskGetNumberOfTasks
l00000A36_thunk_uxTaskGetNumberOfTasks:
	call uxTaskGetNumberOfTasks (retsize: 0;)
	return
	// succ:  fn00000A34_exit
fn00000A34_exit:


// uxTaskGetNumberOfTasks
// Return size: 0
void uxTaskGetNumberOfTasks()
uxTaskGetNumberOfTasks_entry:
	// succ:  l00000A38
l00000A38:
	sp = fp
	r3 = Mem0[0x00000A44:word32]
	r0 = Mem0[r3:word32]
	call lr (retsize: 0;)
	return
	// succ:  uxTaskGetNumberOfTasks_exit
uxTaskGetNumberOfTasks_exit:


// fn00000A40
// Return size: 0
void fn00000A40()
fn00000A40_entry:
	// succ:  l00000A40
l00000A40:
	sp = fp
	r4 = r0 << 3
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l00000A42_thunk_pcTaskGetName
l00000A42_thunk_pcTaskGetName:
	call pcTaskGetName (retsize: 0;)
	return
	// succ:  fn00000A40_exit
fn00000A40_exit:


// pcTaskGetName
// Return size: 0
void pcTaskGetName()
pcTaskGetName_entry:
	// succ:  l00000A44
l00000A44:
	sp = fp
	branch r0 == 0x00000000 l00000A4A
	// succ:  l00000A46 l00000A4A
l00000A46:
	r0 = r0 + 0x00000054
	NZCV = cond(r0)
	call lr (retsize: 0;)
	return
	// succ:  pcTaskGetName_exit
l00000A4A:
	r3 = Mem0[0x00000A5A:word32]
	r0 = Mem0[r3 + 4:word32]
	r0 = r0 + 0x00000054
	NZCV = cond(r0)
	call lr (retsize: 0;)
	return
	// succ:  pcTaskGetName_exit
pcTaskGetName_exit:


// fn00000A54
// Return size: 0
void fn00000A54()
fn00000A54_entry:
	// succ:  l00000A54
l00000A54:
	sp = fp
	r4 = r0 << 3
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l00000A56_thunk_xTaskGenericNotify
l00000A56_thunk_xTaskGenericNotify:
	call xTaskGenericNotify (retsize: 0;)
	return
	// succ:  fn00000A54_exit
fn00000A54_exit:


// xTaskGenericNotify
// Return size: 0
void xTaskGenericNotify()
xTaskGenericNotify_entry:
	// succ:  l00000A58
l00000A58:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = r6
	Mem0[sp + 16:word32] = r7
	Mem0[sp + 20:word32] = lr
	r4 = r3
	r6 = r0
	r7 = r1
	r5 = r2
	call fn00008574 (retsize: 0;)
	branch r4 == 0x00000000 l00000A6C
	// succ:  l00000A68 l00000A6C
l00000A68:
	r3 = Mem0[r6 + 96:word32]
	Mem0[r4:word32] = r3
	// succ:  l00000A6C
l00000A6C:
	r3 = 0x00000002
	r4 = (word32) Mem0[r6 + 100:byte]
	r2 = r5 - 0x00000001
	Mem0[r6 + 100:byte] = (byte) r3
	r4 = (uint32) (byte) r4
	NZCV = cond(r2 - 0x00000003)
	branch Test(UGT,ZC) l00000A88
	// succ:  l00000A7E l00000A88
l00000A7E:
	switch (r2) { l00000AF2 l00000A96 l00000A86 l00000A82 }
	// succ:  l00000AF2 l00000A96 l00000A86 l00000A82
l00000A82:
	r2 = r7 >>u 16
	NZC = cond(r2)
	r4 = r0 << 8
	NZC = cond(r4)
	// succ:  l00000A86
l00000A86:
	NZCV = cond(r4 - 0x00000002)
	// succ:  l00000A88
l00000A88:
	branch Test(EQ,Z) l00000AFA
	// succ:  l00000A8A l00000AFA
l00000A8A:
	Mem0[r6 + 96:word32] = r7
	NZCV = cond(r4 - 0x00000001)
	branch Test(EQ,Z) l00000AA2
	// succ:  l00000A90 l00000AA2
l00000A90:
	r4 = 0x00000001
	call fn000085AC (retsize: 0;)
	// succ:  l00000A96
l00000A96:
	r0 = r4
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	r6 = Mem0[sp + 12:word32]
	r7 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  xTaskGenericNotify_exit
l00000AA2:
	Mem0[r6 + 96:word32] = r3
	branch Test(NE,Z) l00000AA4_thunk_fn00000C8C
	goto l00000AA6
	// succ:  l00000AA6 l00000AA4_thunk_fn00000C8C
l00000AA4_thunk_fn00000C8C:
	call fn00000C8C (retsize: 0;)
	return
	// succ:  xTaskGenericNotify_exit
l00000AA6:
	r7 = r6 + 0x00000024
	r5 = Mem0[0x00000B0A:word32]
	r0 = r7
	call fn0000833C (retsize: 0;)
	r0 = Mem0[r6 + 76:word32]
	lr = Mem0[r5 + 124:word32]
	r2 = r5 + 0x00000008
	r3 = r4 << r0
	r0 = r0 + (r0 << 0x00000002)
	r3 = r3 | lr << 0x00000000
	r0 = r2 + (r0 << 0x00000002)
	r1 = r7
	Mem0[r5 + 124:word32] = r3
	call fn000082EC (retsize: 0;)
	r3 = Mem0[r5 + 4:word32]
	r2 = Mem0[r6 + 76:word32]
	r3 = Mem0[r3 + 76:word32]
	NZCV = cond(r2 - r3)
	branch Test(ULE,ZC) l00000ADC_thunk_fn00000C8C
	goto l00000ADE
	// succ:  l00000ADE l00000ADC_thunk_fn00000C8C
l00000ADC_thunk_fn00000C8C:
	call fn00000C8C (retsize: 0;)
	return
	// succ:  xTaskGenericNotify_exit
l00000ADE:
	r2 = 0x10000000
	r3 = Mem0[0x00000B0E:word32]
	Mem0[r3:word32] = r2
l00000AF2:
	r0 = r4
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	r6 = Mem0[sp + 12:word32]
	r7 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  xTaskGenericNotify_exit
l00000AFA:
	Mem0[r6 + 96:word32] = r7
	goto l00000A88
	// succ:  l00000A88
xTaskGenericNotify_exit:


// xTaskGenericNotifyFromISR
// Return size: 0
void xTaskGenericNotifyFromISR()
xTaskGenericNotifyFromISR_entry:
	// succ:  l00000B0C
l00000B0C:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = lr
	r5 = __mrs(cpsr)
	r4 = 0x000000BF
	__msr(cpsr, r4)
xTaskGenericNotifyFromISR_exit:


// fn00000BD0
// Return size: 0
void fn00000BD0()
fn00000BD0_entry:
	// succ:  l00000BD0
l00000BD0:
	sp = fp
	r4 = r0 << 3
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l00000BD2_thunk_xTaskNotifyWait
l00000BD2_thunk_xTaskNotifyWait:
	call xTaskNotifyWait (retsize: 0;)
	return
	// succ:  fn00000BD0_exit
fn00000BD0_exit:


// xTaskNotifyWait
// Return size: 0
void xTaskNotifyWait()
xTaskNotifyWait_entry:
	// succ:  l00000BD4
l00000BD4:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = lr
	r4 = Mem0[0x00000C5C:word32]
	r5 = r2
	r8 = r0
	r6 = r1
	r7 = r3
	call fn00008574 (retsize: 0;)
	r2 = Mem0[r4 + 4:word32]
	r2 = (word32) Mem0[r2 + 100:byte]
	NZCV = cond(r2 - 0x00000002)
	branch Test(EQ,Z) l00000C00
	// succ:  l00000BF0 l00000C00
l00000BF0:
	r0 = 0x00000001
	r1 = Mem0[r4 + 4:word32]
	r2 = Mem0[r1 + 96:word32]
	r2 = r2 & ~(r8 << 0x00000000)
	Mem0[r1 + 96:word32] = r2
	r3 = Mem0[r4 + 4:word32]
	Mem0[r3 + 100:byte] = (byte) r0
	goto l00000C02
	// succ:  l00000C02
l00000C00:
	r4 = r4 << 1
	NZC = cond(r4)
	// succ:  l00000C02
l00000C02:
	branch r7 != 0x00000000 l00000C3C
	// succ:  l00000C04 l00000C3C
l00000C04:
	call fn000085AC (retsize: 0;)
	call fn00008574 (retsize: 0;)
	branch r5 == 0x00000000 l00000C14
	// succ:  l00000C0E l00000C14
l00000C0E:
	r3 = Mem0[r4 + 4:word32]
	r3 = Mem0[r3 + 96:word32]
	Mem0[r5:word32] = r3
	// succ:  l00000C14
l00000C14:
	r3 = Mem0[r4 + 4:word32]
	r3 = (word32) Mem0[r3 + 100:byte]
	NZCV = cond(r3 - 0x00000001)
	branch Test(EQ,Z) l00000C50
	// succ:  l00000C1E l00000C50
l00000C1E:
	r5 = 0x00000001
	r3 = Mem0[r4 + 4:word32]
	r1 = Mem0[r3 + 96:word32]
	r1 = r1 & ~(r6 << 0x00000000)
	Mem0[r3 + 96:word32] = r1
	r2 = 0x00000000
	r3 = Mem0[r4 + 4:word32]
	Mem0[r3 + 100:byte] = (byte) r2
	call fn000085AC (retsize: 0;)
	r0 = r5
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  xTaskNotifyWait_exit
l00000C3C:
	r0 = r7
	call fn00000858 (retsize: 0;)
	r2 = 0x10000000
	r3 = Mem0[0x00000C62:word32]
	Mem0[r3:word32] = r2
l00000C50:
	r7 = (word32) Mem0[r5 + 116:word16]
	goto l00000C00
	// succ:  l00000C00
xTaskNotifyWait_exit:


// vTaskNotifyGiveFromISR
// Return size: 0
void vTaskNotifyGiveFromISR()
vTaskNotifyGiveFromISR_entry:
	// succ:  l00000C60
l00000C60:
	sp = fp
	sp = sp - 32
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = r6
	Mem0[sp + 16:word32] = r7
	Mem0[sp + 20:word32] = r8
	Mem0[sp + 24:word32] = r9
	Mem0[sp + 28:word32] = lr
	r6 = __mrs(cpsr)
	r3 = 0x000000BF
	__msr(cpsr, r3)
vTaskNotifyGiveFromISR_exit:


// fn00000C8C
// Return size: 0
void fn00000C8C()
fn00000C8C_entry:
	// succ:  l00000C8C
l00000C8C:
	sp = fp
	branch Test(EQ,Z) l00000C92
	goto l00000C8E
	// succ:  l00000C8E l00000C92
l00000C8C:
l00000C8E:
	__msr(cpsr, r6)
	// succ:  l00000C92
l00000C92:
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	r6 = Mem0[sp + 12:word32]
	r7 = Mem0[sp + 16:word32]
	r8 = Mem0[sp + 20:word32]
	r9 = Mem0[sp + 24:word32]
	sp = sp + 32
	return
	// succ:  fn00000C8C_exit
fn00000C8C_exit:


// fn00000CFC
// Return size: 0
void fn00000CFC()
fn00000CFC_entry:
	// succ:  l00000CFC
l00000CFC:
	sp = fp
	r4 = r0 << 3
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l00000CFE_thunk_ulTaskNotifyTake
l00000CFE_thunk_ulTaskNotifyTake:
	call ulTaskNotifyTake (retsize: 0;)
	return
	// succ:  fn00000CFC_exit
fn00000CFC_exit:


// ulTaskNotifyTake
// Return size: 0
void ulTaskNotifyTake()
ulTaskNotifyTake_entry:
	// succ:  l00000D00
l00000D00:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r4 = Mem0[0x00000D6A:word32]
	r6 = r0
	r5 = r1
	call fn00008574 (retsize: 0;)
	r3 = Mem0[r4 + 4:word32]
	r3 = Mem0[r3 + 96:word32]
	branch r3 != 0x00000000 l00000D1C
	// succ:  l00000D12 l00000D1C
l00000D12:
	r2 = 0x00000001
	r3 = Mem0[r4 + 4:word32]
	Mem0[r3 + 100:byte] = (byte) r2
	branch r5 != 0x00000000 l00000D4A
	// succ:  l00000D1C l00000D4A
l00000D1C:
	call fn000085AC (retsize: 0;)
	call fn00008574 (retsize: 0;)
	r3 = Mem0[r4 + 4:word32]
	r5 = Mem0[r3 + 96:word32]
	branch r5 == 0x00000000 l00000D32
	// succ:  l00000D2A l00000D32
l00000D2A:
	branch r6 != 0x00000000 l00000D42
	// succ:  l00000D2C l00000D42
l00000D2C:
	r3 = Mem0[r4 + 4:word32]
	// succ:  l00000D2E
l00000D2E:
	r2 = r5 - 0x00000001
	Mem0[r3 + 96:word32] = r2
	// succ:  l00000D32
l00000D32:
	r2 = 0x00000000
	r3 = Mem0[r4 + 4:word32]
	Mem0[r3 + 100:byte] = (byte) r2
	call fn000085AC (retsize: 0;)
	r0 = r5
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  ulTaskNotifyTake_exit
l00000D42:
	r2 = 0x00000000
	r3 = Mem0[r4 + 4:word32]
	Mem0[r3 + 96:word32] = r2
	goto l00000D2E
	// succ:  l00000D2E
l00000D4A:
	r0 = r5
	call fn00000858 (retsize: 0;)
	r2 = 0x10000000
	r3 = Mem0[0x00000D6C:word32]
	Mem0[r3:word32] = r2
ulTaskNotifyTake_exit:


// fn00000D68
// Return size: 0
void fn00000D68()
fn00000D68_entry:
	// succ:  l00000D68
l00000D68:
	sp = fp
fn00000D68_exit:


// xTaskIncrementTick
// Return size: 0
void xTaskIncrementTick()
xTaskIncrementTick_entry:
	// succ:  l00000D6C
l00000D6C:
	sp = fp
	sp = sp - 32
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = r9
	Mem0[sp + 24:word32] = r10
	Mem0[sp + 28:word32] = lr
	r4 = Mem0[0x00000E68:word32]
	r3 = Mem0[r4 + 140:word32]
	NZCV = cond(r3 - 0x00000000)
	branch Test(NE,Z) l00000E34
	// succ:  l00000D7A l00000E34
l00000D7A:
	r7 = Mem0[r4 + 128:word32]
	r7 = r7 + 0x00000001
	NZCV = cond(r7)
	Mem0[r4 + 128:word32] = r7
	branch r7 != 0x00000000 l00000DA8
	// succ:  l00000D86 l00000DA8
l00000D86:
	r3 = Mem0[r4 + 108:word32]
	r2 = Mem0[r4 + 112:word32]
	Mem0[r4 + 108:word32] = r2
	Mem0[r4 + 112:word32] = r3
	r3 = Mem0[r4 + 148:word32]
	r3 = r3 + 0x00000001
	NZCV = cond(r3)
	Mem0[r4 + 148:word32] = r3
	r3 = Mem0[r4 + 108:word32]
	r3 = Mem0[r3:word32]
	NZCV = cond(r3 - 0x00000000)
	branch Test(NE,Z) l00000E42
	// succ:  l00000DA0 l00000E42
l00000DA0:
	r3 = 0xFFFFFFFF
	Mem0[r4 + 132:word32] = r3
	// succ:  l00000DA8
l00000DA8:
	r3 = Mem0[r4 + 132:word32]
	r6 = 0x00000000
	NZCV = cond(r7 - r3)
	branch Test(ULT,C) l00000E10
	// succ:  l00000DB2 l00000E10
l00000DB2:
	r9 = 0x00000001
	r8 = Mem0[0x00000E6E:word32]
	// succ:  l00000E00
l00000E00:
	branch Test(ULT,C) l00000E04
	// succ:  l00000E02_1 l00000E04
l00000E02_1:
	r6 = 0x00000001
	// succ:  l00000E04
l00000E04:
	r3 = Mem0[r4 + 108:word32]
	r3 = Mem0[r3:word32]
	NZCV = cond(r3 - 0x00000000)
	branch Test(NE,Z) l00000E0A_thunk_fn00000FB8
	goto l00000E0C
	// succ:  l00000E0C l00000E0A_thunk_fn00000FB8
l00000E0A_thunk_fn00000FB8:
	call fn00000FB8 (retsize: 0;)
	return
	// succ:  xTaskIncrementTick_exit
l00000E0C:
	r3 = 0xFFFFFFFF
	// succ:  l00000E10
l00000E10:
	Mem0[r4 + 132:word32] = r3
	r3 = Mem0[r4 + 4:word32]
	r3 = Mem0[r3 + 76:word32]
	r3 = r3 + (r3 << 0x00000002)
	r3 = r4 + (r3 << 0x00000002)
	r3 = Mem0[r3 + 8:word32]
	NZCV = cond(r3 - 0x00000002)
	// succ:  l00000E24
l00000E24:
	branch Test(ULT,C) l00000E28
	// succ:  l00000E26_1 l00000E28
l00000E26_1:
	r6 = 0x00000001
	// succ:  l00000E28
l00000E28:
	r3 = Mem0[r4 + 144:word32]
	NZCV = cond(r3 - 0x00000000)
	branch Test(EQ,Z) l00000E32
	// succ:  l00000E30_1 l00000E32
l00000E30_1:
	r6 = 0x00000001
	// succ:  l00000E32
l00000E32:
	r0 = r6
	// succ:  l00000E34
l00000E34:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	r9 = Mem0[sp + 20:word32]
	r10 = Mem0[sp + 24:word32]
	sp = sp + 32
	return
	// succ:  xTaskIncrementTick_exit
l00000E42:
	r0 = r0 + 0x00000098
	NZCV = cond(r0)
	goto l00000E24
	// succ:  l00000E24
xTaskIncrementTick_exit:


// fn00000E68
// Return size: 0
void fn00000E68()
fn00000E68_entry:
	// succ:  l00000E68
l00000E68:
	sp = fp
	r4 = r1 << 3
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l00000E6A_thunk_xTaskResumeAll
l00000E6A_thunk_xTaskResumeAll:
	call xTaskResumeAll (retsize: 0;)
	return
	// succ:  fn00000E68_exit
fn00000E68_exit:


// xTaskResumeAll
// Return size: 0
void xTaskResumeAll()
xTaskResumeAll_entry:
	// succ:  l00000E6C
l00000E6C:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = lr
	r4 = Mem0[0x00000F44:word32]
	call fn00008574 (retsize: 0;)
	r3 = Mem0[r4 + 140:word32]
	r3 = r3 - 0x00000001
	NZCV = cond(r3)
	Mem0[r4 + 140:word32] = r3
	r5 = Mem0[r4 + 140:word32]
	NZCV = cond(r5 - 0x00000000)
	branch Test(NE,Z) l00000F22
	// succ:  l00000E88 l00000F22
l00000E88:
	r3 = Mem0[r4:word32]
	NZCV = cond(r3 - 0x00000000)
	branch Test(EQ,Z) l00000F22
	// succ:  l00000E8E l00000F22
l00000E8E:
	r6 = 0x00000001
	r7 = r4 + 0x00000008
	// succ:  l00000ED0
l00000ED0:
	Mem0[r4 + 144:word32] = r6
	r3 = Mem0[r4 + 88:word32]
	NZCV = cond(r3 - 0x00000000)
	branch Test(NE,Z) l00000ED8_thunk_fn00001092
	goto l00000EDA
	// succ:  l00000EDA l00000ED8_thunk_fn00001092
l00000ED8_thunk_fn00001092:
	call fn00001092 (retsize: 0;)
	return
	// succ:  xTaskResumeAll_exit
l00000EDA:
	branch r5 == 0x00000000 l00000EEA
	// succ:  l00000EDC l00000EEA
l00000EDC:
	r3 = Mem0[r4 + 108:word32]
	r3 = Mem0[r3:word32]
	branch r3 != 0x00000000 l00000F32
	// succ:  l00000EE2 l00000F32
l00000EE2:
	r3 = 0xFFFFFFFF
	// succ:  l00000EE6
l00000EE6:
	Mem0[r4 + 132:word32] = r3
	// succ:  l00000EEA
l00000EEA:
	r5 = Mem0[r4 + 152:word32]
	branch r5 == 0x00000000 l00000F04
	// succ:  l00000EF0 l00000F04
l00000EF0:
	r6 = 0x00000001
	call fn00000D68 (retsize: 0;)
	branch r0 == 0x00000000 l00000EFC
	// succ:  l00000EF8 l00000EFC
l00000EF8:
	Mem0[r4 + 144:word32] = r6
	// succ:  l00000EFC
l00000EFC:
	r5 = r5 - 0x00000001
	NZCV = cond(r5)
	branch Test(NE,Z) l00000EFE_thunk_fn000010EE
	goto l00000F00
	// succ:  l00000F00 l00000EFE_thunk_fn000010EE
l00000EFE_thunk_fn000010EE:
	call fn000010EE (retsize: 0;)
	return
	// succ:  xTaskResumeAll_exit
l00000F00:
	Mem0[r4 + 152:word32] = r5
	// succ:  l00000F04
l00000F04:
	r3 = Mem0[r4 + 144:word32]
	branch r3 == 0x00000000 l00000F26
	// succ:  l00000F0A l00000F26
l00000F0A:
	r2 = 0x10000000
	r3 = Mem0[0x00000F4A:word32]
	Mem0[r3:word32] = r2
l00000F22:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  xTaskResumeAll_exit
l00000F26:
	r4 = 0x00000000
	call fn000085AC (retsize: 0;)
	r0 = r4
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  xTaskResumeAll_exit
l00000F32:
	r3 = Mem0[r4 + 108:word32]
	r3 = Mem0[r3 + 12:word32]
	r3 = Mem0[r3 + 12:word32]
	r3 = Mem0[r3 + 36:word32]
	Mem0[r4 + 132:word32] = r3
	goto l00000EE6
	// succ:  l00000EE6
xTaskResumeAll_exit:


// fn00000F44
// Return size: 0
void fn00000F44()
fn00000F44_entry:
	// succ:  l00000F44
l00000F44:
	sp = fp
fn00000F44_exit:


// vTaskDelay
// Return size: 0
void vTaskDelay()
vTaskDelay_entry:
	// succ:  l00000F48
l00000F48:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = lr
	branch r0 != 0x00000000 l00000F5E
	// succ:  l00000F4C l00000F5E
l00000F4C:
	r2 = 0x10000000
	r3 = Mem0[0x00000F7C:word32]
	Mem0[r3:word32] = r2
l00000F5E:
	r2 = Mem0[0x00000F82:word32]
	r3 = Mem0[r2 + 140:word32]
	r3 = r3 + 0x00000001
	NZCV = cond(r3)
	Mem0[r2 + 140:word32] = r3
	call fn00000858 (retsize: 0;)
	call fn00000E68 (retsize: 0;)
	NZCV = cond(r0 - 0x00000000)
	branch Test(EQ,Z) l00001148_in_vTaskDelay
	// succ:  l00000F76 l00001148_in_vTaskDelay
l00000F76:
	r3 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  vTaskDelay_exit
l00001148_in_vTaskDelay:
	r3 = Mem0[r3 + 128:word32]
	Mem0[r0:word32] = r2
	Mem0[r0 + 4:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  vTaskDelay_exit
vTaskDelay_exit:


// fn00000F7C
// Return size: 0
void fn00000F7C()
fn00000F7C_entry:
	// succ:  l00000F7C
l00000F7C:
	sp = fp
	r4 = r0 << 3
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l00000F7E_thunk_vTaskDelayUntil
l00000F7E_thunk_vTaskDelayUntil:
	call vTaskDelayUntil (retsize: 0;)
	return
	// succ:  fn00000F7C_exit
fn00000F7C_exit:


// vTaskDelayUntil
// Return size: 0
void vTaskDelayUntil()
vTaskDelayUntil_entry:
	// succ:  l00000F80
l00000F80:
	sp = fp
	r2 = Mem0[0x00000FD8:word32]
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	r4 = Mem0[r2 + 140:word32]
	r3 = Mem0[r0:word32]
	r4 = r4 + 0x00000001
	NZCV = cond(r4)
	Mem0[r2 + 140:word32] = r4
	r2 = Mem0[r2 + 128:word32]
	r1 = r1 + r3
	NZCV = cond(r1)
	NZCV = cond(r2 - r3)
	branch Test(UGE,C) l00000FB4
	// succ:  l00000F9A l00000FB4
l00000F9A:
	NZCV = cond(r3 - r1)
	branch Test(UGT,ZC) l00000FB8
	goto l00000F9E
	// succ:  l00000F9E l00000F9C_thunk_fn00000FB8
l00000F9C_thunk_fn00000FB8:
	call fn00000FB8 (retsize: 0;)
	return
	// succ:  vTaskDelayUntil_exit
l00000F9E:
	Mem0[r0:word32] = r1
	call fn00000E68 (retsize: 0;)
	branch r0 != 0x00000000 l00000FD0
	goto l00000FA6
	// succ:  l00000FA6 l00000FA4_thunk_fn00000FB8
l00000FA4_thunk_fn00000FB8:
	call fn00000FB8 (retsize: 0;)
	return
	// succ:  vTaskDelayUntil_exit
l00000FA6:
	r2 = 0x10000000
	r3 = Mem0[0x00000FDE:word32]
	Mem0[r3:word32] = r2
l00000FB4:
	r7 = (word32) Mem0[r5 + 116:word16]
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  vTaskDelayUntil_exit
vTaskDelayUntil_exit:


// fn00000FB8
// Return size: 0
void fn00000FB8()
fn00000FB8_entry:
	// succ:  l00000FB8
l00000FB8:
	sp = v3
	NZCV = cond(r3 - r1)
	branch Test(UGT,ZC) l00000FBC
	// succ:  l00000FBC l00000FBC
l00000FBC:
	NZCV = cond(r2 - r1)
	branch Test(UGE,C) l0000119A_in_vTaskDelayUntil
	// succ:  l00000FC0 l0000119A_in_vTaskDelayUntil
l00000FC0:
	Mem0[r0:word32] = r1
	r0 = r1 - r2
	call fn00000858 (retsize: 0;)
	call fn00000E68 (retsize: 0;)
	NZCV = cond(r0 - 0x00000000)
	branch Test(EQ,Z) l000011A2
	// succ:  l00000FD0 l000011A2
l00000FD0:
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  fn00000FB8_exit
l0000119A_in_vTaskDelayUntil:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn00000FB8_exit
l000011A2:
	r0 = r5
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn00000FB8_exit
fn00000FB8_exit:


// vTaskPlaceOnEventList
// Return size: 0
void vTaskPlaceOnEventList()
vTaskPlaceOnEventList_entry:
	// succ:  l00000FDC
l00000FDC:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	r4 = r1
	r3 = Mem0[0x00000FF8:word32]
	r1 = Mem0[r3 + 4:word32]
	r1 = r1 + 0x00000038
	NZCV = cond(r1)
	call fn00008308 (retsize: 0;)
	r0 = r4
	r4 = Mem0[sp:word32]
	lr = Mem0[sp + 4:word32]
	sp = sp + 8
	// succ:  l00000FF0_thunk_fn00000858
l00000FF0_thunk_fn00000858:
	call fn00000858 (retsize: 0;)
	return
	// succ:  vTaskPlaceOnEventList_exit
vTaskPlaceOnEventList_exit:


// fn00000FF4
// Return size: 0
void fn00000FF4()
fn00000FF4_entry:
	// succ:  l00000FF4
l00000FF4:
	sp = fp
	r4 = r0 << 3
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l00000FF6_thunk_vTaskPlaceOnUnorderedEventList
l00000FF6_thunk_vTaskPlaceOnUnorderedEventList:
	call vTaskPlaceOnUnorderedEventList (retsize: 0;)
	return
	// succ:  fn00000FF4_exit
fn00000FF4_exit:


// vTaskPlaceOnUnorderedEventList
// Return size: 0
void vTaskPlaceOnUnorderedEventList()
vTaskPlaceOnUnorderedEventList_entry:
	// succ:  l00000FF8
l00000FF8:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r4 = r2
	r3 = Mem0[0x0000101C:word32]
	r1 = r1 | 0x80000000
	r5 = Mem0[r3 + 4:word32]
	r3 = Mem0[r3 + 4:word32]
	Mem0[r5 + 56:word32] = r1
	r1 = r3 + 0x00000038
	call fn000082EC (retsize: 0;)
	r0 = r4
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	lr = Mem0[sp + 12:word32]
	sp = sp + 16
	// succ:  l00001016_thunk_fn00000858
l00001016_thunk_fn00000858:
	call fn00000858 (retsize: 0;)
	return
	// succ:  vTaskPlaceOnUnorderedEventList_exit
vTaskPlaceOnUnorderedEventList_exit:


// fn00001018
// Return size: 0
void fn00001018()
fn00001018_entry:
	// succ:  l00001018
l00001018:
	sp = fp
	r4 = r0 << 3
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l0000101A_thunk_xTaskRemoveFromEventList
l0000101A_thunk_xTaskRemoveFromEventList:
	call xTaskRemoveFromEventList (retsize: 0;)
	return
	// succ:  fn00001018_exit
fn00001018_exit:


// xTaskRemoveFromEventList
// Return size: 0
void xTaskRemoveFromEventList()
xTaskRemoveFromEventList_entry:
	// succ:  l0000101C
l0000101C:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = r6
	Mem0[sp + 16:word32] = r7
	Mem0[sp + 20:word32] = lr
	r3 = Mem0[r0 + 12:word32]
	r4 = Mem0[0x00001080:word32]
	r5 = Mem0[r3 + 12:word32]
	r6 = r5 + 0x00000038
	r0 = r6
	call fn0000833C (retsize: 0;)
	r3 = Mem0[r4 + 140:word32]
	branch r3 != 0x00000000 l00001070
	// succ:  l00001034 l00001070
l00001034:
	r6 = r5 + 0x00000024
	r0 = r6
	call fn0000833C (retsize: 0;)
	r3 = 0x00000001
	r0 = Mem0[r5 + 76:word32]
	r7 = Mem0[r4 + 124:word32]
	r3 = r3 << r0
	NZC = cond(r3)
	r2 = r4 + 0x00000008
	r0 = r0 + (r0 << 0x00000002)
	r3 = r3 | r7
	NZC = cond(r3)
	r1 = r6
	r0 = r2 + (r0 << 0x00000002)
	Mem0[r4 + 124:word32] = r3
	// succ:  l00001058
l00001058:
	call fn000082EC (retsize: 0;)
	r3 = Mem0[r4 + 4:word32]
	r2 = Mem0[r5 + 76:word32]
	r3 = Mem0[r3 + 76:word32]
	NZCV = cond(r2 - r3)
	branch Test(ULE,ZC) l00001068
	// succ:  l00001066_1 l00001068
l00001066_1:
	r0 = 0x00000001
	// succ:  l00001068
l00001068:
	Mem0[r4 + 144:word32] = r0
	r0 = 0x00000000
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	r6 = Mem0[sp + 12:word32]
	r7 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  xTaskRemoveFromEventList_exit
l00001070:
	r1 = r6
	r0 = r4 + 0x00000058
	call fn000082EC (retsize: 0;)
	goto l00001058
	// succ:  l00001058
xTaskRemoveFromEventList_exit:


// fn0000107C
// Return size: 0
void fn0000107C()
fn0000107C_entry:
	// succ:  l0000107C
l0000107C:
	sp = fp
	r4 = r0 << 3
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l0000107E_thunk_xTaskRemoveFromUnorderedEventList
l0000107E_thunk_xTaskRemoveFromUnorderedEventList:
	call xTaskRemoveFromUnorderedEventList (retsize: 0;)
	return
	// succ:  fn0000107C_exit
fn0000107C_exit:


// xTaskRemoveFromUnorderedEventList
// Return size: 0
void xTaskRemoveFromUnorderedEventList()
xTaskRemoveFromUnorderedEventList_entry:
	// succ:  l00001080
l00001080:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = r6
	Mem0[sp + 16:word32] = r7
	Mem0[sp + 20:word32] = lr
	r5 = 0x00000001
	r6 = Mem0[r0 + 12:word32]
	r1 = r1 | 0x80000000
	Mem0[r0:word32] = r1
	r7 = r6 + 0x00000024
	call fn0000833C (retsize: 0;)
	// succ:  l00001090_thunk_fn00001092
l00001090_thunk_fn00001092:
	call fn00001092 (retsize: 0;)
	return
	// succ:  xTaskRemoveFromUnorderedEventList_exit
xTaskRemoveFromUnorderedEventList_exit:


// fn00001092
// Return size: 0
void fn00001092()
fn00001092_entry:
	// succ:  l00001092
l00001092:
	sp = fp
l00001092:
	r4 = Mem0[0x000010D8:word32]
	r0 = r7
	call fn0000833C (retsize: 0;)
	r3 = Mem0[r6 + 76:word32]
	lr = Mem0[r4 + 124:word32]
	r2 = r5 << r3
	r0 = r4 + 0x00000008
	r3 = r3 + (r3 << 0x00000002)
	r0 = r0 + (r3 << 0x00000002)
	r2 = r2 | lr << 0x00000000
	r1 = r7
	Mem0[r4 + 124:word32] = r2
	call fn000082EC (retsize: 0;)
	r3 = Mem0[r4 + 4:word32]
	r2 = Mem0[r6 + 76:word32]
	r3 = Mem0[r3 + 76:word32]
	NZCV = cond(r2 - r3)
	branch Test(ULE,ZC) l000010CA
	// succ:  l000010C8_1 l000010CA
l000010C8_1:
	r0 = r5
	// succ:  l000010CA
l000010CA:
	Mem0[r4 + 144:word32] = r5
	r0 = 0x00000000
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	r6 = Mem0[sp + 12:word32]
	r7 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  fn00001092_exit
fn00001092_exit:


// fn000010D4
// Return size: 0
void fn000010D4()
fn000010D4_entry:
	// succ:  l000010D4
l000010D4:
	sp = fp
	r4 = r0 << 3
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l000010D6_thunk_vTaskSwitchContext
l000010D6_thunk_vTaskSwitchContext:
	call vTaskSwitchContext (retsize: 0;)
	return
	// succ:  fn000010D4_exit
fn000010D4_exit:


// vTaskSwitchContext
// Return size: 0
void vTaskSwitchContext()
vTaskSwitchContext_entry:
	// succ:  l000010D8
l000010D8:
	sp = fp
	r2 = Mem0[0x00001120:word32]
	r3 = Mem0[r2 + 140:word32]
	branch r3 != 0x00000000 l00001112
	// succ:  l000010E0 l00001112
l000010E0:
	Mem0[r2 + 144:word32] = r3
	r3 = Mem0[r2 + 124:word32]
	r3 = __clz(r3)
	r3 = (uint32) (byte) r3
	r3 = 0x0000001F - r3
	// succ:  l000010EC_thunk_fn000010EE
l000010EC_thunk_fn000010EE:
	call fn000010EE (retsize: 0;)
	return
	// succ:  vTaskSwitchContext_exit
l00001112:
	r3 = 0x00000001
	Mem0[r2 + 144:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  vTaskSwitchContext_exit
vTaskSwitchContext_exit:


// fn000010EE
// Return size: 0
void fn000010EE()
fn000010EE_entry:
	// succ:  l000010EE
l000010EE:
	sp = fp
	r7 = r3 << 12
	NZC = cond(r7)
	r3 = r3 + (r3 << 0x00000002)
	r3 = r3 << 2
	NZC = cond(r3)
	r0 = r2 + r3
	r3 = r0
	r1 = Mem0[r0 + 12:word32]
	r3 = r3 + 0x00000010
	NZCV = cond(r3)
	r1 = Mem0[r1 + 4:word32]
	NZCV = cond(r1 - r3)
	Mem0[r0 + 12:word32] = r1
	branch Test(NE,Z) l00001106_thunk_fn00001108
	goto l00001106_1
	// succ:  l00001106_1 l00001106_thunk_fn00001108
l000010EE:
	r3 = r3 + (r3 << 0x00000002)
	r3 = r3 << 2
	NZC = cond(r3)
	r0 = r2 + r3
	r3 = r0
	r1 = Mem0[r0 + 12:word32]
	r3 = r3 + 0x00000010
	NZCV = cond(r3)
	r1 = Mem0[r1 + 4:word32]
	NZCV = cond(r1 - r3)
	Mem0[r0 + 12:word32] = r1
	branch Test(NE,Z) l00001108
	goto l00001106_1
	// succ:  l00001106_1 l00001104_thunk_fn00001108
l00001104_thunk_fn00001108:
	call fn00001108 (retsize: 0;)
	return
	// succ:  fn000010EE_exit
l00001106_1:
	r1 = Mem0[r1 + 4:word32]
	goto l00001106_thunk_fn00001108
	// succ:  l00001106_thunk_fn00001108
l00001106_1:
	r1 = Mem0[r1 + 4:word32]
	goto l00001106_thunk_fn00001108
	// succ:  l00001106_thunk_fn00001108
l00001106_thunk_fn00001108:
	call fn00001108 (retsize: 0;)
	return
	// succ:  fn000010EE_exit
l00001106_thunk_fn00001108:
	call fn00001108 (retsize: 0;)
	return
	// succ:  fn000010EE_exit
l00001106_thunk_fn00001108:
	call fn00001108 (retsize: 0;)
	return
	// succ:  fn000010EE_exit
fn000010EE_exit:


// fn00001108
// Return size: 0
void fn00001108()
fn00001108_entry:
	// succ:  l00001108
l00001108:
	sp = v3
	r3 = Mem0[r1 + 12:word32]
	branch Test(NE,Z) l0000110E
	// succ:  l0000110C_1 l0000110E
l0000110C_1:
	Mem0[r0 + 12:word32] = r1
	// succ:  l0000110E
l0000110E:
	Mem0[r2 + 4:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  fn00001108_exit
fn00001108_exit:


// fn0000111C
// Return size: 0
void fn0000111C()
fn0000111C_entry:
	// succ:  l0000111C
l0000111C:
	sp = fp
	r4 = r0 << 3
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l0000111E_thunk_uxTaskResetEventItemValue
l0000111E_thunk_uxTaskResetEventItemValue:
	call uxTaskResetEventItemValue (retsize: 0;)
	return
	// succ:  fn0000111C_exit
fn0000111C_exit:


// uxTaskResetEventItemValue
// Return size: 0
void uxTaskResetEventItemValue()
uxTaskResetEventItemValue_entry:
	// succ:  l00001120
l00001120:
	sp = fp
	r3 = Mem0[0x00001138:word32]
	r1 = Mem0[r3 + 4:word32]
	r2 = Mem0[r3 + 4:word32]
	r3 = Mem0[r3 + 4:word32]
	r0 = Mem0[r1 + 56:word32]
	r3 = Mem0[r3 + 76:word32]
	r3 = 0x00000002 - r3
	Mem0[r2 + 56:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  uxTaskResetEventItemValue_exit
uxTaskResetEventItemValue_exit:


// fn00001134
// Return size: 0
void fn00001134()
fn00001134_entry:
	// succ:  l00001134
l00001134:
	sp = fp
	r4 = r0 << 3
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l00001136_thunk_xTaskGetCurrentTaskHandle
l00001136_thunk_xTaskGetCurrentTaskHandle:
	call xTaskGetCurrentTaskHandle (retsize: 0;)
	return
	// succ:  fn00001134_exit
fn00001134_exit:


// xTaskGetCurrentTaskHandle
// Return size: 0
void xTaskGetCurrentTaskHandle()
xTaskGetCurrentTaskHandle_entry:
	// succ:  l00001138
l00001138:
	sp = fp
	r3 = Mem0[0x00001144:word32]
	r0 = Mem0[r3 + 4:word32]
	call lr (retsize: 0;)
	return
	// succ:  xTaskGetCurrentTaskHandle_exit
xTaskGetCurrentTaskHandle_exit:


// fn00001140
// Return size: 0
void fn00001140()
fn00001140_entry:
	// succ:  l00001140
l00001140:
	sp = fp
	r4 = r0 << 3
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l00001142_thunk_vTaskSetTimeOutState
l00001142_thunk_vTaskSetTimeOutState:
	call vTaskSetTimeOutState (retsize: 0;)
	return
	// succ:  fn00001140_exit
fn00001140_exit:


// vTaskSetTimeOutState
// Return size: 0
void vTaskSetTimeOutState()
vTaskSetTimeOutState_entry:
	// succ:  l00001144
l00001144:
	sp = fp
	r3 = Mem0[0x00001158:word32]
	r2 = Mem0[r3 + 148:word32]
	// succ:  l00001148
l00001148:
	r3 = Mem0[r3 + 128:word32]
	Mem0[r0:word32] = r2
	Mem0[r0 + 4:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  vTaskSetTimeOutState_exit
vTaskSetTimeOutState_exit:


// fn00001154
// Return size: 0
void fn00001154()
fn00001154_entry:
	// succ:  l00001154
l00001154:
	sp = fp
	r4 = r0 << 3
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l00001156_thunk_xTaskCheckForTimeOut
l00001156_thunk_xTaskCheckForTimeOut:
	call xTaskCheckForTimeOut (retsize: 0;)
	return
	// succ:  fn00001154_exit
fn00001154_exit:


// xTaskCheckForTimeOut
// Return size: 0
void xTaskCheckForTimeOut()
xTaskCheckForTimeOut_entry:
	// succ:  l00001158
l00001158:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r4 = r0
	r6 = r1
	call fn00008574 (retsize: 0;)
	r3 = Mem0[0x000011AE:word32]
	r1 = Mem0[r4:word32]
	r5 = Mem0[r3 + 128:word32]
	r2 = Mem0[r3 + 148:word32]
	r0 = Mem0[r4 + 4:word32]
	NZCV = cond(r1 - r2)
	branch Test(EQ,Z) l00001174
	// succ:  l00001174 l00001174
l00001174:
	NZCV = cond(r5 - r0)
	branch Test(UGE,C) l00001198
	// succ:  l00001178 l00001198
l00001178:
	r2 = Mem0[r6:word32]
	r1 = r5 - r0
	NZCV = cond(r1 - r2)
	branch Test(UGE,C) l00001198
	// succ:  l00001180 l00001198
l00001180:
	r2 = r2 - r5
	r5 = 0x00000000
	r1 = Mem0[r3 + 148:word32]
	r3 = Mem0[r3 + 128:word32]
	r2 = r2 + r0
	NZCV = cond(r2)
	Mem0[r6:word32] = r2
	Mem0[r4:word32] = r1
	Mem0[r4 + 4:word32] = r3
	call fn000085AC (retsize: 0;)
	// succ:  l00001198
l00001198:
	r0 = r5
	// succ:  l0000119A
l0000119A:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  xTaskCheckForTimeOut_exit
xTaskCheckForTimeOut_exit:


// fn000011A8
// Return size: 0
void fn000011A8()
fn000011A8_entry:
	// succ:  l000011A8
l000011A8:
	sp = fp
	r4 = r0 << 3
	NZC = cond(r4)
	r0 = 0x00000000
fn000011A8_exit:


// vTaskMissedYield
// Return size: 0
void vTaskMissedYield()
vTaskMissedYield_entry:
	// succ:  l000011AC
l000011AC:
	sp = fp
	r2 = 0x00000001
	r3 = Mem0[0x000011BE:word32]
	Mem0[r3 + 144:word32] = r2
	call lr (retsize: 0;)
	return
	// succ:  vTaskMissedYield_exit
vTaskMissedYield_exit:


// vTaskPriorityInherit
// Return size: 0
void vTaskPriorityInherit()
vTaskPriorityInherit_entry:
	// succ:  l000011BC
l000011BC:
	sp = fp
	NZCV = cond(r0 - 0x00000000)
	branch Test(EQ,Z) l00001242
	// succ:  l000011C0 l00001242
l000011C0:
	sp = sp - 24
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = r6
	Mem0[sp + 16:word32] = r7
	Mem0[sp + 20:word32] = lr
	r4 = Mem0[0x0000124E:word32]
	r3 = Mem0[r0 + 76:word32]
	r2 = Mem0[r4 + 4:word32]
	r2 = Mem0[r2 + 76:word32]
	NZCV = cond(r3 - r2)
	branch Test(UGE,C) l000011F0
	// succ:  l000011CE l000011F0
l000011CE:
	r2 = Mem0[r0 + 56:word32]
	NZCV = cond(r2 - 0x00000000)
	branch Test(LT,NV) l000011DA
	// succ:  l000011D4 l000011DA
l000011D4:
	r2 = Mem0[r4 + 4:word32]
	r2 = Mem0[r2 + 76:word32]
	r2 = 0x00000002 - r2
	goto l000011DC
	// succ:  l000011DC
l000011DA:
	r2 = r0 << 8
	NZC = cond(r2)
	// succ:  l000011DC
l000011DC:
	Mem0[r0 + 56:word32] = r2
	r5 = Mem0[0x00001252:word32]
	r3 = r3 + (r3 << 0x00000002)
	r2 = Mem0[r0 + 52:word32]
	r3 = r5 + (r3 << 0x00000002)
	NZCV = cond(r2 - r3)
	branch Test(EQ,Z) l000011F2
	// succ:  l000011EE l000011F2
l000011EE:
	r3 = Mem0[r4 + 4:word32]
	// succ:  l000011F0
l000011F0:
	r3 = Mem0[r3 + 76:word32]
	// succ:  l000011F2
l000011F2:
	Mem0[r0 + 76:word32] = r3
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	r6 = Mem0[sp + 12:word32]
	r7 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  vTaskPriorityInherit_exit
l00001242:
	call fn00C082EC (retsize: 0;)
	return
	// succ:  vTaskPriorityInherit_exit
vTaskPriorityInherit_exit:


// xTaskPriorityDisinherit
// Return size: 0
void xTaskPriorityDisinherit()
xTaskPriorityDisinherit_entry:
	// succ:  l00001250
l00001250:
	sp = fp
	NZCV = cond(r0 - 0x00000000)
	branch Test(EQ,Z) l000012C4
	// succ:  l00001254 l000012C4
l00001254:
	sp = sp - 24
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = r6
	Mem0[sp + 16:word32] = r7
	Mem0[sp + 20:word32] = lr
	r1 = Mem0[r0 + 76:word32]
	r3 = Mem0[r0 + 92:word32]
	r2 = Mem0[r0 + 88:word32]
	r3 = r3 - 0x00000001
	NZCV = cond(r3)
	NZCV = cond(r1 - r2)
	Mem0[r0 + 92:word32] = r3
	// succ:  l00001262
l00001262:
	branch Test(EQ,Z) l00001262
	// succ:  l00001264 l00001262
l00001264:
	branch r3 == 0x00000000 l0000126A
	// succ:  l00001266 l0000126A
l00001266:
	r0 = 0x00000000
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	r6 = Mem0[sp + 12:word32]
	r7 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  xTaskPriorityDisinherit_exit
l0000126A:
	r7 = r0 + 0x00000024
	r4 = r0
	r0 = r7
	call fn0000833C (retsize: 0;)
	branch r0 != 0x00000000 l00001298
	// succ:  l00001278 l00001298
l00001278:
	r1 = Mem0[r4 + 76:word32]
	r2 = Mem0[0x000012D2:word32]
	r3 = r1 + (r1 << 0x00000002)
	r3 = r2 + (r3 << 0x00000002)
	r3 = Mem0[r3 + 8:word32]
	branch r3 != 0x00000000 l0000129A
	// succ:  l00001288 l0000129A
l00001288:
	r0 = 0x00000001
	r3 = Mem0[r2 + 124:word32]
	r1 = r0 << r1
	r1 = r3 & ~(r1 << 0x00000000)
	Mem0[r2 + 124:word32] = r1
	// succ:  l00001296
l00001296:
	goto l00001296
	// succ:  l00001296
l00001298:
	r2 = Mem0[0x000012D0:word32]
	// succ:  l0000129A
l0000129A:
	r5 = 0x00000001
	r3 = Mem0[r4 + 88:word32]
	lr = Mem0[r2 + 124:word32]
	r0 = Mem0[0x000012D6:word32]
	r6 = r5 << r3
	r1 = r7
	Mem0[r4 + 76:word32] = r3
	r7 = 0x00000002 - r3
	r3 = r3 + (r3 << 0x00000002)
	r6 = r6 | lr << 0x00000000
	r0 = r0 + (r3 << 0x00000002)
	Mem0[r4 + 56:word32] = r7
	Mem0[r2 + 124:word32] = r6
	call fn000082EC (retsize: 0;)
	// succ:  l000012C4
l000012C4:
	r0 = r5
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	r6 = Mem0[sp + 12:word32]
	r7 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  xTaskPriorityDisinherit_exit
xTaskPriorityDisinherit_exit:


// pvTaskIncrementMutexHeldCount
// Return size: 0
void pvTaskIncrementMutexHeldCount()
pvTaskIncrementMutexHeldCount_entry:
	// succ:  l000012D4
l000012D4:
	sp = fp
	r3 = Mem0[0x000012EC:word32]
	r2 = Mem0[r3 + 4:word32]
	branch r2 == 0x00000000 l000012E2
	// succ:  l000012DA l000012E2
l000012DA:
	r1 = Mem0[r3 + 4:word32]
	r2 = Mem0[r1 + 92:word32]
	r2 = r2 + 0x00000001
	NZCV = cond(r2)
	Mem0[r1 + 92:word32] = r2
	// succ:  l000012E2
l000012E2:
	r0 = Mem0[r3 + 4:word32]
	call lr (retsize: 0;)
	return
	// succ:  pvTaskIncrementMutexHeldCount_exit
pvTaskIncrementMutexHeldCount_exit:


// fn000012EC
// Return size: 0
void fn000012EC()
fn000012EC_entry:
	// succ:  l000012EC
l000012EC:
	sp = fp
	r0 = r0
	r0 = r0
	goto l000012EE_thunk_prvRestoreContextOfFirstTask
	// succ:  l000012EE_thunk_prvRestoreContextOfFirstTask
l000012EC:
l000012EE_thunk_prvRestoreContextOfFirstTask:
	call prvRestoreContextOfFirstTask (retsize: 0;)
	return
	// succ:  fn000012EC_exit
fn000012EC_exit:


// prvRestoreContextOfFirstTask
// Return size: 0
void prvRestoreContextOfFirstTask()
prvRestoreContextOfFirstTask_entry:
	// succ:  l000012F0
l000012F0:
	sp = fp
	r0 = Mem0[0x00001728:word32]
	r0 = Mem0[r0:word32]
	r0 = Mem0[r0:word32]
	__msr(cpsr, r0)
	r3 = Mem0[0x00001334:word32]
	r1 = Mem0[r3:word32]
	r0 = Mem0[r1:word32]
	r1 = r1 + 0x00000004
	r2 = Mem0[0x0000172E:word32]
	r4 = Mem0[r1:word32]
	r5 = Mem0[r1 + 4:word32]
	r6 = Mem0[r1 + 8:word32]
	r7 = Mem0[r1 + 12:word32]
	r8 = Mem0[r1 + 16:word32]
	r9 = Mem0[r1 + 20:word32]
	r10 = Mem0[r1 + 24:word32]
	fp = Mem0[r1 + 28:word32]
	r1 = r1 + 32
	Mem0[r2:word32] = r4
	Mem0[r2 + 4:word32] = r5
	Mem0[r2 + 8:word32] = r6
	Mem0[r2 + 12:word32] = r7
	Mem0[r2 + 16:word32] = r8
	Mem0[r2 + 20:word32] = r9
	Mem0[r2 + 24:word32] = r10
	Mem0[r2 + 28:word32] = fp
	r2 = r2 + 32
	r3 = Mem0[r0:word32]
	r4 = Mem0[r0 + 4:word32]
	r5 = Mem0[r0 + 8:word32]
	r6 = Mem0[r0 + 12:word32]
	r7 = Mem0[r0 + 16:word32]
	r8 = Mem0[r0 + 20:word32]
	r9 = Mem0[r0 + 24:word32]
	r10 = Mem0[r0 + 28:word32]
	fp = Mem0[r0 + 32:word32]
	r0 = r0 + 36
	__msr(cpsr, r3)
	__msr(cpsr, r0)
	r0 = 0x00000000
	__msr(cpsr, r0)
	lr = ~0x00000002
	call lr (retsize: 0;)
	return
	// succ:  prvRestoreContextOfFirstTask_exit
prvRestoreContextOfFirstTask_exit:


// fn00001330
// Return size: 0
void fn00001330()
fn00001330_entry:
	goto l00001330
	// succ:  l00001330
l000011AA_thunk_vTaskMissedYield:
	call vTaskMissedYield (retsize: 0;)
	return
	// succ:  fn00001330_exit
l00001330:
	sp = fp
	r0 = r1 << 3
	NZC = cond(r0)
	r0 = 0x00000000
	goto l00001332_thunk_prvSVCHandler
	// succ:  l00001332_thunk_prvSVCHandler
l00001330:
	goto l000011AA_thunk_vTaskMissedYield
	// succ:  l000011AA_thunk_vTaskMissedYield
l00001332_thunk_prvSVCHandler:
	call prvSVCHandler (retsize: 0;)
	return
	// succ:  fn00001330_exit
fn00001330_exit:


// prvSVCHandler
// Return size: 0
void prvSVCHandler()
prvSVCHandler_entry:
	// succ:  l00001334
l00001334:
	sp = fp
	r3 = Mem0[r0 + 24:word32]
	r3 = (word32) Mem0[r3 - 2:byte]
	NZCV = cond(r3 - 0x00000001)
	branch Test(EQ,Z) l0000135C
	// succ:  l0000133E l0000135C
l0000133E:
	branch Test(ULT,C) l00001350
	// succ:  l00001340 l00001350
l00001340:
	NZCV = cond(r3 - 0x00000002)
	branch Test(NE,Z) l0000134E
	// succ:  l00001344 l0000134E
l00001344:
	r1 = __mrs(cpsr)
	r1 = r1 & ~0x00000001
	__msr(cpsr, r1)
	goto l00001350
	// succ:  l00001350
l0000134E:
	r4 = (word32) Mem0[r2:word16]
	// succ:  l00001350
l00001350:
	call lr (retsize: 0;)
	return
	// succ:  prvSVCHandler_exit
l0000135C:
	Mem0[r2:word32] = r3
	// succ:  l0000135E_thunk_fn000012EC
l0000135E_thunk_fn000012EC:
	call fn000012EC (retsize: 0;)
	return
	// succ:  prvSVCHandler_exit
prvSVCHandler_exit:


// fn00001378
// Return size: 0
void fn00001378()
fn00001378_entry:
	// succ:  l00001378
l00001378:
	sp = fp
fn00001378_exit:


// pxPortInitialiseStack
// Return size: 0
void pxPortInitialiseStack()
pxPortInitialiseStack_entry:
	// succ:  l0000137C
l0000137C:
	sp = fp
	NZCV = cond(r3 - 0x00000001)
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	branch Test(NE,Z) l00001384
	// succ:  l00001382_1 l00001384
l00001382_1:
	r3 = 0x00000002
	// succ:  l00001384
l00001384:
	r5 = 0x01000000
	r4 = 0x00000000
	branch Test(EQ,Z) l00001390
	// succ:  l0000138E_1 l00001390
l0000138E_1:
	r3 = 0x00000003
	// succ:  l00001390
l00001390:
	Mem0[r0 - 32:word32] = r2
	r1 = r1 & ~0x00000001
	r2 = r0 - 0x00000044
	Mem0[r0 + -8:word32] = r1
	Mem0[r0 + -4:word32] = r5
	Mem0[r0 - 12:word32] = r4
	Mem0[r0 - 68:word32] = r3
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	sp = sp + 8
	r0 = r2
	call lr (retsize: 0;)
	return
	// succ:  pxPortInitialiseStack_exit
pxPortInitialiseStack_exit:


// xPortStartScheduler
// Return size: 0
void xPortStartScheduler()
xPortStartScheduler_entry:
	// succ:  l000013B0
l000013B0:
	sp = fp
	r3 = Mem0[0x000014EC:word32]
	sp = sp - 12
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	r2 = Mem0[r3:word32]
	r1 = Mem0[0x000014F2:word32]
	r2 = r2 | 0x00FF0000
	Mem0[r3:word32] = r2
	r2 = Mem0[r3:word32]
	r2 = r2 | 0xFF000000
	Mem0[r3:word32] = r2
	r3 = Mem0[r1:word32]
	NZCV = cond(r3 - 0x00000800)
	branch Test(EQ,Z) l000013FC
	// succ:  l000013CE l000013FC
l000013CE:
	r5 = 0x00004E1F
	r1 = 0x00000007
	r0 = 0x00000000
	r4 = Mem0[0x000014F6:word32]
	r2 = Mem0[0x000014F8:word32]
	r3 = Mem0[0x000014FE:word32]
	Mem0[r4:word32] = r5
	Mem0[r2:word32] = r1
	Mem0[r3:word32] = r0
	r0 = Mem0[0x0000172A:word32]
	r0 = Mem0[r0:word32]
	r0 = Mem0[r0:word32]
	__msr(cpsr, r0)
l000013FC:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 12
	call lr (retsize: 0;)
	return
	// succ:  xPortStartScheduler_exit
xPortStartScheduler_exit:


// vPortEndScheduler
// Return size: 0
void vPortEndScheduler()
vPortEndScheduler_entry:
	// succ:  l00001550
l00001550:
	sp = fp
	call lr (retsize: 0;)
	return
	// succ:  vPortEndScheduler_exit
vPortEndScheduler_exit:


// vPortStoreTaskMPUSettings
// Return size: 0
void vPortStoreTaskMPUSettings()
vPortStoreTaskMPUSettings_entry:
	// succ:  l00001554
l00001554:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	NZCV = cond(r1 - 0x00000000)
	// succ:  l00001558
l00001558:
	branch Test(EQ,Z) l000015DA
	// succ:  l0000155A l000015DA
l0000155A:
	branch r3 != 0x00000000 l000015B0
	// succ:  l0000155C l000015B0
l0000155C:
	r5 = 0x00000005
	r4 = Mem0[r1 + 4:word32]
	branch r4 == 0x00000000 l000015A2
	// succ:  l00001562 l000015A2
l00001562:
	r3 = Mem0[r1:word32]
	r2 = r5 | 0x00000010
	r3 = r3 | r2
	NZC = cond(r3)
	NZCV = cond(r4 - 0x00000020)
	Mem0[r0 + 8:word32] = r3
	branch Test(ULE,ZC) l0000164C
	// succ:  l00001570 l0000164C
l00001570:
	r2 = 0x00000040
	r3 = 0x00000005
	// succ:  l00001578
l00001578:
	NZCV = cond(r3 - 0x0000001F)
	branch Test(EQ,Z) l000015A8
	// succ:  l0000157C l000015A8
l0000157C:
	NZCV = cond(r4 - r2)
	r2 = r2 << 0x00000001
	// succ:  l00001582
l00001582:
	branch Test(UGT,ZC) l00001582_thunk_fn00001772
	goto l00001584
	// succ:  l00001584 l00001582_thunk_fn00001772
l00001582_thunk_fn00001772:
	call fn00001772 (retsize: 0;)
	return
	// succ:  vPortStoreTaskMPUSettings_exit
l00001584:
	r3 = r3 << 1
	NZC = cond(r3)
	r2 = Mem0[r1 + 8:word32]
	r2 = r2 | 0x00000001
	// succ:  l0000158C
l0000158C:
	r3 = r3 | r2
	NZC = cond(r3)
	Mem0[r0 + 12:word32] = r3
	r5 = r5 + 0x00000001
	NZCV = cond(r5)
	NZCV = cond(r5 - 0x00000008)
	r1 = r1 + 0x0000000C
	r0 = r0 + 0x00000008
	branch Test(NE,Z) l0000159C_thunk_fn0000175A
	goto l0000159E
	// succ:  l0000159E l0000159C_thunk_fn0000175A
l0000159C_thunk_fn0000175A:
	call fn0000175A (retsize: 0;)
	return
	// succ:  vPortStoreTaskMPUSettings_exit
l0000159E:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	sp = sp + 8
	call lr (retsize: 0;)
	return
	// succ:  vPortStoreTaskMPUSettings_exit
l000015A2:
	r3 = r5 | 0x00000010
	Mem0[r0 + 12:word32] = r4
	// succ:  l000015A8
l000015A8:
	Mem0[r0 + 8:word32] = r3
	goto l0000158C
	// succ:  l0000158C
l000015B0:
	r3 = r3 << 2
	NZC = cond(r3)
	r2 = r2 | 0x00000014
	NZCV = cond(r3 - 0x00000020)
	Mem0[r0:word32] = r2
	branch Test(ULE,ZC) l00001650
	// succ:  l000015BC l00001650
l000015BC:
	r2 = 0x00000040
	r4 = 0x00000005
	// succ:  l000015C4
l000015C4:
	NZCV = cond(r4 - 0x0000001F)
	branch Test(EQ,Z) l000015D6
	// succ:  l000015C8 l000015D6
l000015C8:
	NZCV = cond(r3 - r2)
	r2 = r2 << 0x00000001
	branch Test(UGT,ZC) l000015CE_thunk_fn000017BE
	goto l000015D0
	// succ:  l000015D0 l000015CE_thunk_fn000017BE
l000015CE_thunk_fn000017BE:
	call fn000017BE (retsize: 0;)
	return
	// succ:  vPortStoreTaskMPUSettings_exit
l000015D0:
	r3 = Mem0[0x00001664:word32]
	// succ:  l000015D2
l000015D2:
	r4 = r3 | r4 << 0x00000001
	// succ:  l000015D6
l000015D6:
	Mem0[r0 + 4:word32] = r4
	goto l00001558
	// succ:  l00001558
l000015DA:
	r4 = Mem0[0x0000166A:word32]
	goto l000015D2
	// succ:  l000015D2
l00001630:
	r2 = r3 | r2 << 0x00000001
	r4 = 0x00000016
	r3 = 0x00000000
	r1 = 0x00000017
	Mem0[r0 + 16:word32] = r4
	Mem0[r0 + 12:word32] = r2
	Mem0[r0 + 20:word32] = r3
	Mem0[r0 + 28:word32] = r3
	Mem0[r0 + 24:word32] = r1
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	sp = sp + 8
	call lr (retsize: 0;)
	return
	// succ:  vPortStoreTaskMPUSettings_exit
l0000164C:
	r2 = Mem0[0x00001680:word32]
	goto l00001630
	// succ:  l00001630
l00001650:
	r3 = 0x00000008
	goto l00001582
	// succ:  l00001582
vPortStoreTaskMPUSettings_exit:


// xPortPendSVHandler
// Return size: 0
void xPortPendSVHandler()
xPortPendSVHandler_entry:
	// succ:  l00001688
l00001688:
	sp = fp
	r0 = __mrs(cpsr)
	r3 = Mem0[0x000016E4:word32]
	r2 = Mem0[r3:word32]
	r1 = __mrs(cpsr)
	Mem0[r0 + -36:word32] = r1
	Mem0[r0 + -32:word32] = r4
	Mem0[r0 + -28:word32] = r5
	Mem0[r0 + -24:word32] = r6
	Mem0[r0 + -20:word32] = r7
	Mem0[r0 + -16:word32] = r8
	Mem0[r0 + -12:word32] = r9
	Mem0[r0 + -8:word32] = r10
	Mem0[r0 + -4:word32] = fp
	r0 = r0 - 36
	Mem0[r2:word32] = r0
	sp = sp - 8
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = lr
	r0 = 0x000000BF
	__msr(cpsr, r0)
	call fn000010D4 (retsize: 0;)
	r0 = 0x00000000
	__msr(cpsr, r0)
	r3 = Mem0[sp:word32]
	lr = Mem0[sp + 4:word32]
	sp = sp + 8
	r1 = Mem0[r3:word32]
	r0 = Mem0[r1:word32]
	r1 = r1 + 0x00000004
	r2 = Mem0[0x0000172E:word32]
	r4 = Mem0[r1:word32]
	r5 = Mem0[r1 + 4:word32]
	r6 = Mem0[r1 + 8:word32]
	r7 = Mem0[r1 + 12:word32]
	r8 = Mem0[r1 + 16:word32]
	r9 = Mem0[r1 + 20:word32]
	r10 = Mem0[r1 + 24:word32]
	fp = Mem0[r1 + 28:word32]
	r1 = r1 + 32
	Mem0[r2:word32] = r4
	Mem0[r2 + 4:word32] = r5
	Mem0[r2 + 8:word32] = r6
	Mem0[r2 + 12:word32] = r7
	Mem0[r2 + 16:word32] = r8
	Mem0[r2 + 20:word32] = r9
	Mem0[r2 + 24:word32] = r10
	Mem0[r2 + 28:word32] = fp
	r2 = r2 + 32
	r3 = Mem0[r0:word32]
	r4 = Mem0[r0 + 4:word32]
	r5 = Mem0[r0 + 8:word32]
	r6 = Mem0[r0 + 12:word32]
	r7 = Mem0[r0 + 16:word32]
	r8 = Mem0[r0 + 20:word32]
	r9 = Mem0[r0 + 24:word32]
	r10 = Mem0[r0 + 28:word32]
	fp = Mem0[r0 + 32:word32]
	r0 = r0 + 36
	__msr(cpsr, r3)
	__msr(cpsr, r0)
	call lr (retsize: 0;)
	return
	// succ:  xPortPendSVHandler_exit
xPortPendSVHandler_exit:


// xPortSysTickHandler
// Return size: 0
void xPortSysTickHandler()
xPortSysTickHandler_entry:
	// succ:  l000016E4
l000016E4:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	r4 = __mrs(cpsr)
	r3 = 0x000000BF
	__msr(cpsr, r3)
xPortSysTickHandler_exit:


// vPortSVCHandler
// Return size: 0
void vPortSVCHandler()
vPortSVCHandler_entry:
	// succ:  l00001714
l00001714:
	sp = fp
	NZC = cond(lr & 0x00000004)
	branch Test(NE,Z) l0000171E
	// succ:  l0000171A_1 l0000171E
l0000171A_1:
	r0 = __mrs(cpsr)
	// succ:  l0000171E
l0000171E:
	r0 = __mrs(cpsr)
	// succ:  l00001722_thunk_fn00001330
l00001722_thunk_fn00001330:
	call fn00001330 (retsize: 0;)
	return
	// succ:  vPortSVCHandler_exit
vPortSVCHandler_exit:


// fn00001728
// Return size: 0
void fn00001728()
fn00001728_entry:
	// succ:  l00001728
l00001728:
	sp = fp
fn00001728_exit:


// pvPortMalloc
// Return size: 0
void pvPortMalloc()
pvPortMalloc_entry:
	// succ:  l0000172C
l0000172C:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	r4 = r0
	r3 = r0 << 29
	NZC = cond(r3)
	branch Test(EQ,Z) l00001738
	// succ:  l00001734_1 l00001738
l00001734_1:
	r4 = r0 & ~0x00000007
	// succ:  l00001738
l00001738:
	r4 = r4 + 0x00000008
	NZCV = cond(r4)
	call fn00000A08 (retsize: 0;)
	r3 = Mem0[0x00001782:word32]
	// succ:  l0000173E_thunk_fn00001740
l0000173E_thunk_fn00001740:
	call fn00001740 (retsize: 0;)
	return
	// succ:  pvPortMalloc_exit
pvPortMalloc_exit:


// fn00001740
// Return size: 0
void fn00001740()
fn00001740_entry:
	// succ:  l00001740
l00001740:
	sp = v3
	r2 = Mem0[r3:word32]
	branch r2 == 0x00000000 l00001770
	// succ:  l00001744 l00001770
l00001744:
	r1 = 0x000005B3
	r2 = Mem0[r3 + 1472:word32]
	r4 = r4 + r2
	NZCV = cond(r4)
	NZCV = cond(r4 - r1)
	branch Test(UGT,ZC) l00001762
	goto l00001752
	// succ:  l00001752 l00001750_thunk_fn0000175A
l00001750_thunk_fn0000175A:
	call fn0000175A (retsize: 0;)
	return
	// succ:  fn00001740_exit
l00001752:
	NZCV = cond(r2 - r4)
	branch Test(UGE,C) l00001762
	goto l00001756
	// succ:  l00001756 l00001754_thunk_fn0000175A
l00001754_thunk_fn0000175A:
	call fn0000175A (retsize: 0;)
	return
	// succ:  fn00001740_exit
l00001756:
	r1 = Mem0[r3:word32]
	Mem0[r3 + 1472:word32] = r4
	// succ:  l00001758_thunk_fn0000175A
l00001758_thunk_fn0000175A:
	call fn0000175A (retsize: 0;)
	return
	// succ:  fn00001740_exit
l00001770:
	r2 = r3 + 0x0000000C
	// succ:  l00001770_thunk_fn00001772
l00001770_thunk_fn00001772:
	call fn00001772 (retsize: 0;)
	return
	// succ:  fn00001740_exit
fn00001740_exit:


// fn0000175A
// Return size: 0
void fn0000175A()
fn0000175A_entry:
	// succ:  l0000175A
l0000175A:
	sp = fp
	NZCV = cond(r8 - r8)
	r4 = r1 + r2
	call fn00000E68 (retsize: 0;)
	goto l00001762_in_fn0000175A
	// succ:  l00001762_in_fn0000175A
l0000175A:
	r4 = r1 + r2
	call fn00000E68 (retsize: 0;)
	// succ:  l00001762
l00001762:
	r0 = r4
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  fn0000175A_exit
l00001762_in_fn0000175A:
	r0 = r4
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  fn0000175A_exit
fn0000175A_exit:


// fn00001772
// Return size: 0
void fn00001772()
fn00001772_entry:
	// succ:  l00001772
l00001772:
	sp = fp
	r4 = r1 << 8
	NZC = cond(r4)
	r2 = r2 & ~0x00000007
	Mem0[r3:word32] = r2
	goto l0000177A_thunk_fn00001740
	// succ:  l0000177A_thunk_fn00001740
l00001772:
	r2 = r2 & ~0x00000007
	Mem0[r3:word32] = r2
	// succ:  l00001778_thunk_fn00001740
l00001778_thunk_fn00001740:
	call fn00001740 (retsize: 0;)
	return
	// succ:  fn00001772_exit
l0000177A_thunk_fn00001740:
	call fn00001740 (retsize: 0;)
	return
	// succ:  fn00001772_exit
fn00001772_exit:


// fn0000177C
// Return size: 0
void fn0000177C()
fn0000177C_entry:
	// succ:  l0000177C
l0000177C:
	sp = fp
	r0 = r6 << 8
	NZC = cond(r0)
	r0 = 0x00000000
	// succ:  l0000177E_thunk_vPortFree
l0000177E_thunk_vPortFree:
	call vPortFree (retsize: 0;)
	return
	// succ:  fn0000177C_exit
fn0000177C_exit:


// vPortFree
// Return size: 0
void vPortFree()
vPortFree_entry:
	// succ:  l00001780
l00001780:
	sp = fp
	call lr (retsize: 0;)
	return
	// succ:  vPortFree_exit
vPortFree_exit:


// vPortInitialiseBlocks
// Return size: 0
void vPortInitialiseBlocks()
vPortInitialiseBlocks_entry:
	// succ:  l00001784
l00001784:
	sp = fp
	r2 = 0x00000000
	r3 = Mem0[0x00001796:word32]
	Mem0[r3 + 1472:word32] = r2
	call lr (retsize: 0;)
	return
	// succ:  vPortInitialiseBlocks_exit
vPortInitialiseBlocks_exit:


// fn00001790
// Return size: 0
void fn00001790()
fn00001790_entry:
	// succ:  l00001790
l00001790:
	sp = fp
	r0 = r6 << 8
	NZC = cond(r0)
	r0 = 0x00000000
	// succ:  l00001792_thunk_xPortGetFreeHeapSize
l00001792_thunk_xPortGetFreeHeapSize:
	call xPortGetFreeHeapSize (retsize: 0;)
	return
	// succ:  fn00001790_exit
fn00001790_exit:


// xPortGetFreeHeapSize
// Return size: 0
void xPortGetFreeHeapSize()
xPortGetFreeHeapSize_entry:
	// succ:  l00001794
l00001794:
	sp = fp
	r3 = Mem0[0x000017A8:word32]
	r0 = Mem0[r3 + 1472:word32]
	r0 = 0x000005B0 - r0
	r0 = r0 + 0x00000004
	NZCV = cond(r0)
	call lr (retsize: 0;)
	return
	// succ:  xPortGetFreeHeapSize_exit
xPortGetFreeHeapSize_exit:


// fn000017A4
// Return size: 0
void fn000017A4()
fn000017A4_entry:
	// succ:  l000017A4
l000017A4:
	sp = fp
	r0 = r6 << 8
	NZC = cond(r0)
	r0 = 0x00000000
	// succ:  l000017A6_thunk_xEventGroupCreate
l000017A6_thunk_xEventGroupCreate:
	call xEventGroupCreate (retsize: 0;)
	return
	// succ:  fn000017A4_exit
fn000017A4_exit:


// xEventGroupCreate
// Return size: 0
void xEventGroupCreate()
xEventGroupCreate_entry:
	// succ:  l000017A8
l000017A8:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	r0 = 0x00000018
	call fn00001728 (retsize: 0;)
	r4 = r0
	branch r0 == 0x00000000 l000017BE
	goto l000017B4
	// succ:  l000017B4 l000017B2_thunk_fn000017BE
l000017B2_thunk_fn000017BE:
	call fn000017BE (retsize: 0;)
	return
	// succ:  xEventGroupCreate_exit
l000017B4:
	r3 = 0x00000000
	Mem0[r0:word32] = r3
	r0 = r0 + 4
	call fn000082CC (retsize: 0;)
	// succ:  l000017BA_thunk_fn000017BE
l000017BA_thunk_fn000017BE:
	call fn000017BE (retsize: 0;)
	return
	// succ:  xEventGroupCreate_exit
xEventGroupCreate_exit:


// fn000017BE
// Return size: 0
void fn000017BE()
fn000017BE_entry:
	// succ:  l000017BE
l000017BE:
	sp = v3
	r0 = r4
	// succ:  l000017BE_thunk_fn000017C0
l000017BE_thunk_fn000017C0:
	call fn000017C0 (retsize: 0;)
	return
	// succ:  fn000017BE_exit
fn000017BE_exit:


// fn000017C0
// Return size: 0
void fn000017C0()
fn000017C0_entry:
	// succ:  l000017C0
l000017C0:
	sp = fp
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  fn000017C0_exit
fn000017C0_exit:


// xEventGroupWaitBits
// Return size: 0
void xEventGroupWaitBits()
xEventGroupWaitBits_entry:
	// succ:  l000017C4
l000017C4:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = lr
	r6 = r0
	r7 = r3
	r5 = r1
	r8 = r2
	call fn00000A08 (retsize: 0;)
	r4 = Mem0[r6:word32]
	branch r7 != 0x00000000 l000017F2
	// succ:  l000017D8 l000017F2
l000017D8:
	r4 = r4 + r5 + C
	NZCV = cond(r4)
	branch Test(EQ,Z) l000017F4
	// succ:  l000017DC l000017F4
l000017DC:
	NZCV = cond(r8 - 0x00000000)
	branch Test(EQ,Z) l000017E4
	// succ:  l000017E2 l000017E4
l000017E2:
	r5 = r4 & ~(r5 << 0x00000000)
	goto l000017E6
	// succ:  l000017E6
l000017E4:
	r5 = r0 << 20
	NZC = cond(r5)
	// succ:  l000017E6
l000017E6:
	Mem0[r6:word32] = r5
	call fn00000E68 (retsize: 0;)
	r0 = r4
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  xEventGroupWaitBits_exit
l000017F2:
	r3 = r5 & ~(r4 << 0x00000000)
	goto l000017F6
	// succ:  l000017F6
l000017F4:
	r4 = r0 << 12
	NZC = cond(r4)
	// succ:  l000017F6
l000017F6:
	branch Test(EQ,Z) l000019D8_in_xEventGroupWaitBits
	// succ:  l000017F8 l000019D8_in_xEventGroupWaitBits
l000017F8:
	r3 = Mem0[sp + 24:word32]
	NZCV = cond(r3 - 0x00000000)
	branch Test(EQ,Z) l000019E4_in_xEventGroupWaitBits
	// succ:  l000017FE l000019E4_in_xEventGroupWaitBits
l000017FE:
	NZCV = cond(r8 - 0x00000000)
	branch Test(NE,Z) l00001806
	// succ:  l00001804_1 l00001806
l00001804_1:
	r1 = 0x00000000
	// succ:  l00001806
l00001806:
	r1 = 0x01000000
	// succ:  l00001808
l00001808:
	branch r7 != 0x00000000 l0000183E
	// succ:  l0000180C l0000183E
l0000180C:
	r1 = r1 | r5
	NZC = cond(r1)
	r2 = Mem0[sp + 24:word32]
	r0 = r6 + 0x00000004
	call fn00000FF4 (retsize: 0;)
	call fn00000E68 (retsize: 0;)
	branch r0 != 0x00000000 l0000182C
	// succ:  l0000181C l0000182C
l0000181C:
	r2 = 0x10000000
	r3 = Mem0[0x00001874:word32]
	Mem0[r3:word32] = r2
l0000182C:
	call fn0000111C (retsize: 0;)
	r3 = r0 << 6
	NZC = cond(r3)
	r4 = r0
	branch Test(GE,N) l00001840
	// succ:  l00001836 l00001840
l00001836:
	r0 = r4 & ~0xFF000000
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  xEventGroupWaitBits_exit
l0000183E:
	r1 = r1 | 0x04000000
	goto l00001842
	// succ:  l00001842
l00001840:
	Mem0[r0 + 24:word32] = r0
	// succ:  l00001842
l00001842:
	goto l00001808
	// succ:  l00001808
l000019D8_in_xEventGroupWaitBits:
	r5 = r1
	call fn00008574 (retsize: 0;)
	r3 = Mem0[r4:word32]
	r3 = r3 & ~(r5 << 0x00000000)
	Mem0[r4:word32] = r3
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	lr = Mem0[sp + 12:word32]
	sp = sp + 16
	call fn00C085AC (retsize: 0;)
	return
	// succ:  xEventGroupWaitBits_exit
l000019E4_in_xEventGroupWaitBits:
	Mem0[r4:word32] = r3
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	lr = Mem0[sp + 12:word32]
	sp = sp + 16
	call fn00C085AC (retsize: 0;)
	return
	// succ:  xEventGroupWaitBits_exit
xEventGroupWaitBits_exit:


// fn00001870
// Return size: 0
void fn00001870()
fn00001870_entry:
	// succ:  l00001870
l00001870:
	sp = fp
fn00001870_exit:


// xEventGroupClearBits
// Return size: 0
void xEventGroupClearBits()
xEventGroupClearBits_entry:
	// succ:  l00001874
l00001874:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r6 = r0
	r4 = r1
	call fn00008574 (retsize: 0;)
	r5 = Mem0[r6:word32]
	r4 = r5 & ~(r4 << 0x00000000)
	Mem0[r6:word32] = r4
	call fn000085AC (retsize: 0;)
	r0 = r5
	// succ:  l0000188A_thunk_fn0000188C
l0000188A_thunk_fn0000188C:
	call fn0000188C (retsize: 0;)
	return
	// succ:  xEventGroupClearBits_exit
xEventGroupClearBits_exit:


// fn0000188C
// Return size: 0
void fn0000188C()
fn0000188C_entry:
	// succ:  l0000188C
l0000188C:
	sp = fp
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn0000188C_exit
fn0000188C_exit:


// xEventGroupSetBits
// Return size: 0
void xEventGroupSetBits()
xEventGroupSetBits_entry:
	// succ:  l00001890
l00001890:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = r6
	Mem0[sp + 16:word32] = r7
	Mem0[sp + 20:word32] = lr
	r5 = r0
	r4 = r1
	call fn00000A08 (retsize: 0;)
	r1 = Mem0[r5:word32]
	r0 = Mem0[r5 + 16:word32]
	r6 = r5 + 0x0000000C
	r1 = r1 | r4
	NZC = cond(r1)
	NZCV = cond(r6 - r0)
	Mem0[r5:word32] = r1
	branch Test(EQ,Z) l000018A8_thunk_fn000018EC
	goto l000018AA
	// succ:  l000018AA l000018A8_thunk_fn000018EC
l000018A8_thunk_fn000018EC:
	call fn000018EC (retsize: 0;)
	return
	// succ:  xEventGroupSetBits_exit
l000018AA:
	r7 = 0x00000000
	// succ:  l000018C4
l000018C4:
	r0 = r4
	branch Test(EQ,Z) l000018DE
	// succ:  l000018C8 l000018DE
l000018C8:
	r3 = Mem0[r0:word32]
	r4 = Mem0[r0 + 4:word32]
	NZC = cond(r3 & 0x04000000)
	r2 = r3 & ~0xFF000000
	branch Test(EQ,Z) l00001AAA
	// succ:  l000018D6 l00001AAA
l000018D6:
	lr = r2 & ~(r1 << 0x00000000)
	branch Test(EQ,Z) l00001AAE
	// succ:  l000018DC l00001AAE
l000018DC:
	NZCV = cond(r6 - r4)
	// succ:  l000018DE
l000018DE:
	r0 = r4
	// succ:  l000018DE_thunk_fn000018E0
l000018DE_thunk_fn000018E0:
	call fn000018E0 (retsize: 0;)
	return
	// succ:  xEventGroupSetBits_exit
l00001AAA:
	r0 = r0
	r0 = r0
	// succ:  l00001AAE
l00001AAE:
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	// succ:  l00001AC2_thunk_fn00001AC4
l00001AC2_thunk_fn00001AC4:
	call fn00001AC4 (retsize: 0;)
	return
	// succ:  xEventGroupSetBits_exit
xEventGroupSetBits_exit:


// fn000018E0
// Return size: 0
void fn000018E0()
fn000018E0_entry:
	// succ:  l000018E0
l000018E0:
	sp = fp
	branch Test(NE,Z) l00001AC4
	goto l000018E2
	// succ:  l000018E2 l000018E0_thunk_fn00001AC4
l000018E0:
l000018E0_thunk_fn00001AC4:
	call fn00001AC4 (retsize: 0;)
	return
	// succ:  fn000018E0_exit
l000018E2:
fn000018E0_exit:


// fn000018EC
// Return size: 0
void fn000018EC()
fn000018EC_entry:
	// succ:  l000018EC
l000018EC:
	sp = fp
	r0 = Mem0[r5:word32]
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	r6 = Mem0[sp + 12:word32]
	r7 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  fn000018EC_exit
l000018EC:
fn000018EC_exit:


// fn000018F4
// Return size: 0
void fn000018F4()
fn000018F4_entry:
	// succ:  l000018F4
l000018F4:
	sp = fp
	// succ:  l000018F4_thunk_fn000018E0
l000018F4_thunk_fn000018E0:
	call fn000018E0 (retsize: 0;)
	return
	// succ:  fn000018F4_exit
fn000018F4_exit:


// xEventGroupSync
// Return size: 0
void xEventGroupSync()
xEventGroupSync_entry:
	// succ:  l000018F8
l000018F8:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = lr
	r8 = r1
	r5 = r0
	r6 = r2
	r7 = r3
	call fn00000A08 (retsize: 0;)
	r1 = r8
	r4 = Mem0[r5:word32]
	r0 = r5
	r4 = r4 | r1
	NZC = cond(r4)
	call fn0000188C (retsize: 0;)
	r3 = r6 & ~(r4 << 0x00000000)
	branch Test(EQ,Z) l0000195A
	// succ:  l0000191A l0000195A
l0000191A:
	branch r7 != 0x00000000 l00001928
	// succ:  l0000191C l00001928
l0000191C:
	r4 = Mem0[r5:word32]
	call fn00000E68 (retsize: 0;)
	r0 = r4
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  xEventGroupSync_exit
l00001928:
	r2 = r7
	r1 = r6 | 0x05000000
	r0 = r5 + 0x00000004
	call fn00000FF4 (retsize: 0;)
	call fn00000E68 (retsize: 0;)
	branch r0 != 0x00000000 l0000194A
	// succ:  l0000193A l0000194A
l0000193A:
	r2 = 0x10000000
	r3 = Mem0[0x0000198A:word32]
	Mem0[r3:word32] = r2
l0000194A:
	call fn0000111C (retsize: 0;)
	r3 = r0 << 6
	NZC = cond(r3)
	r4 = r0
	branch Test(GE,N) l00001964
	// succ:  l00001954 l00001964
l00001954:
	r4 = r4 & ~0xFF000000
	r0 = r4
	// succ:  l0000195A
l0000195A:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  xEventGroupSync_exit
l00001964:
	Mem0[r5:word32] = r6
	goto l0000191A
	// succ:  l0000191A
xEventGroupSync_exit:


// xEventGroupGetBitsFromISR
// Return size: 0
void xEventGroupGetBitsFromISR()
xEventGroupGetBitsFromISR_entry:
	// succ:  l00001988
l00001988:
	sp = fp
	r3 = __mrs(cpsr)
	r2 = 0x000000BF
	__msr(cpsr, r2)
xEventGroupGetBitsFromISR_exit:


// fn000019A0
// Return size: 0
void fn000019A0()
fn000019A0_entry:
	// succ:  l000019A0
l000019A0:
	sp = fp
	r0 = Mem0[r0:word32]
	call lr (retsize: 0;)
	return
	// succ:  fn000019A0_exit
fn000019A0_exit:


// vEventGroupDelete
// Return size: 0
void vEventGroupDelete()
vEventGroupDelete_entry:
	// succ:  l000019A4
l000019A4:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	r4 = r0
	call fn00000A08 (retsize: 0;)
	r3 = Mem0[r4 + 4:word32]
	branch r3 == 0x00000000 l000019C0
	// succ:  l000019B0 l000019C0
l000019B0:
	r1 = 0x02000000
	r0 = Mem0[r4 + 16:word32]
	call fn0000107C (retsize: 0;)
	r3 = Mem0[r4 + 4:word32]
	NZCV = cond(r3 - 0x00000000)
	branch Test(NE,Z) l000019BE_thunk_fn00001BAC
	goto l000019C0
	// succ:  l000019C0 l000019BE_thunk_fn00001BAC
l000019BE_thunk_fn00001BAC:
	call fn00001BAC (retsize: 0;)
	return
	// succ:  vEventGroupDelete_exit
l000019C0:
	r0 = r4
	call fn0000177C (retsize: 0;)
	r4 = Mem0[sp:word32]
	lr = Mem0[sp + 4:word32]
	sp = sp + 8
	// succ:  l000019CA_thunk_fn00000E68
l000019CA_thunk_fn00000E68:
	call fn00000E68 (retsize: 0;)
	return
	// succ:  vEventGroupDelete_exit
vEventGroupDelete_exit:


// vEventGroupSetBitsCallback
// Return size: 0
void vEventGroupSetBitsCallback()
vEventGroupSetBitsCallback_entry:
	// succ:  l000019D0
l000019D0:
	sp = fp
	// succ:  l000019D0_thunk_fn0000188C
l000019D0_thunk_fn0000188C:
	call fn0000188C (retsize: 0;)
	return
	// succ:  vEventGroupSetBitsCallback_exit
vEventGroupSetBitsCallback_exit:


// vEventGroupClearBitsCallback
// Return size: 0
void vEventGroupClearBitsCallback()
vEventGroupClearBitsCallback_entry:
	// succ:  l000019D4
l000019D4:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r4 = r0
	// succ:  l000019D8
l000019D8:
	r5 = r1
	call fn00008574 (retsize: 0;)
	r3 = Mem0[r4:word32]
	r3 = r3 & ~(r5 << 0x00000000)
	// succ:  l000019E4
l000019E4:
	Mem0[r4:word32] = r3
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	lr = Mem0[sp + 12:word32]
	sp = sp + 16
	call fn00C085AC (retsize: 0;)
	return
	// succ:  vEventGroupClearBitsCallback_exit
vEventGroupClearBitsCallback_exit:


// fn00001AC4
// Return size: 0
void fn00001AC4()
fn00001AC4_entry:
	// succ:  l00001AC4
l00001AC4:
	sp = v3
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	// succ:  l00001BAA_thunk_fn00001BAC
l00001BAA_thunk_fn00001BAC:
	call fn00001BAC (retsize: 0;)
	return
	// succ:  fn00001AC4_exit
fn00001AC4_exit:


// fn00001BAC
// Return size: 0
void fn00001BAC()
fn00001BAC_entry:
	// succ:  l00001BAC
l00001BAC:
	sp = fp
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	goto l00007FFA_thunk_fn00007FFC
	// succ:  l00007FFA_thunk_fn00007FFC
l00001BAC:
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	goto l00007FFA_thunk_fn00007FFC
	// succ:  l00007FFA_thunk_fn00007FFC
l00007FFA_thunk_fn00007FFC:
	call fn00007FFC (retsize: 0;)
	return
	// succ:  fn00001BAC_exit
l00007FFA_thunk_fn00007FFC:
	call fn00007FFC (retsize: 0;)
	return
	// succ:  fn00001BAC_exit
fn00001BAC_exit:


// fn00007FFC
// Return size: 0
void fn00007FFC()
fn00007FFC_entry:
	// succ:  l00007FFC
l00007FFC:
	sp = fp
	r0 = r0
	r0 = r0
	goto l00007FFE_thunk_NmiSR
	// succ:  l00007FFE_thunk_NmiSR
l00007FFC:
	r0 = r0
	r0 = r0
l00007FFE_thunk_NmiSR:
	call NmiSR (retsize: 0;)
	return
	// succ:  fn00007FFC_exit
fn00007FFC_exit:


// NmiSR
// Return size: 0
void NmiSR()
NmiSR_entry:
	goto l00008000
	// succ:  l00008000
l00007FFE_thunk_NmiSR:
	call NmiSR (retsize: 0;)
	return
	// succ:  NmiSR_exit
l00008000:
	sp = fp
	goto l00008000_thunk_fn00007FFC
	// succ:  l00008000_thunk_fn00007FFC
l00008000:
	goto l00007FFE_thunk_NmiSR
	// succ:  l00007FFE_thunk_NmiSR
l00008000_thunk_fn00007FFC:
	call fn00007FFC (retsize: 0;)
	return
	// succ:  NmiSR_exit
NmiSR_exit:


// FaultISR
// Return size: 0
void FaultISR()
FaultISR_entry:
	// succ:  l00008004
l00008004:
	sp = fp
	// succ:  l00008004_thunk_NmiSR
l00008004_thunk_NmiSR:
	call NmiSR (retsize: 0;)
	return
	// succ:  FaultISR_exit
FaultISR_exit:


// ResetISR
// Return size: 0
void ResetISR()
ResetISR_entry:
	// succ:  l00008008
l00008008:
	sp = fp
	r3 = Mem0[0x00008030:word32]
	r0 = Mem0[0x00008036:word32]
	NZCV = cond(r3 - r0)
	branch Test(UGE,C) l00008022
	// succ:  l00008010 l00008022
l00008010:
l00008022:
	NZCV = cond(r3 - r2)
	branch Test(NE,Z) l0000821A
	goto l00008026
	// succ:  l00008026 l00008024_thunk_fn0000821A
l00008024_thunk_fn0000821A:
	call fn0000821A (retsize: 0;)
	return
	// succ:  ResetISR_exit
l00008026:
	call fn00C0809C (retsize: 0;)
	return
	// succ:  ResetISR_exit
ResetISR_exit:


// raise
// Return size: 0
void raise()
raise_entry:
	goto l00008034
	// succ:  l00008034
l00008030:
	r0 = r0 >>u 2
	NZC = cond(r0)
	r0 = 0x00000000
	// succ:  l00008034
l00008034:
	sp = fp
	goto l00008030
	// succ:  l00008030
raise_exit:


// vPrintTask
// Return size: 0
void vPrintTask()
vPrintTask_entry:
	// succ:  l00008038
l00008038:
	sp = fp
	sp = sp - 12
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = lr
	r4 = 0x00000000
	// succ:  l0000803C
l0000803C:
	r5 = Mem0[0x00008068:word32]
	sp = sp - 12
	r1 = sp + 4
	r4 = r4 + 0x00000001
	NZCV = cond(r4)
	r3 = 0x00000000
	r2 = 0xFFFFFFFF
	r0 = Mem0[r5:word32]
	call fn00008B68 (retsize: 0;)
	call fn0000977C (retsize: 0;)
	r2 = r4 & 0x00000001
	r1 = r4 & 0x0000003F
	r0 = Mem0[sp + 4:word32]
	call fn000097C8 (retsize: 0;)
	goto l0000803C
	// succ:  l0000803C
vPrintTask_exit:


// vCheckTask
// Return size: 0
void vCheckTask()
vCheckTask_entry:
	// succ:  l00008068
l00008068:
	sp = fp
	sp = sp - 12
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = lr
	r3 = Mem0[0x0000809E:word32]
	sp = sp - 12
	Mem0[sp + 4:word32] = r3
	call fn00008900 (retsize: 0;)
	r4 = sp + 8
	r5 = Mem0[0x000080A2:word32]
	// succ:  l00008078
l00008078:
	r4 = r4 - 8
	Mem0[r4:word32] = r0
	r0 = r4
	r1 = 0x00001388
	call fn00008870 (retsize: 0;)
	r3 = 0x00000000
	r2 = 0xFFFFFFFF
	r1 = sp + 4
	r0 = Mem0[r5:word32]
	call fn00008AE0 (retsize: 0;)
	goto l00008078
	// succ:  l00008078
vCheckTask_exit:


// Main
// Return size: 0
void Main()
Main_entry:
	// succ:  l000080A0
l000080A0:
	sp = fp
	sp = sp - 4
	Mem0[sp:word32] = lr
	r2 = 0x00000000
	sp = sp - 12
	r1 = 0x00000004
	r0 = 0x00000003
	r4 = 0x00000000
	call fn00008A84 (retsize: 0;)
	r3 = Mem0[0x000080F4:word32]
	Mem0[r3:word32] = r0
	r0 = r4
	call fn000098EC (retsize: 0;)
	r2 = 0x00000003
	r3 = r4
	Mem0[sp:word32] = r2
	r1 = Mem0[0x000080F8:word32]
	r2 = 0x0000003B
	Mem0[sp + 4:word32] = r4
	r0 = Mem0[0x000080FE:word32]
	call fn00008804 (retsize: 0;)
	r2 = 0x00000002
	r1 = Mem0[0x00008102:word32]
	r3 = r4
	Mem0[sp:word32] = r2
	Mem0[sp + 4:word32] = r4
	r2 = 0x0000003B
	r0 = Mem0[0x00008104:word32]
	call fn00008804 (retsize: 0;)
	call fn0000098C (retsize: 0;)
	r2 = r4
	r1 = r4
	r0 = Mem0[0x0000810A:word32]
	// succ:  l000080E8
l000080E8:
	call fn000097C8 (retsize: 0;)
	goto l000080E8
	// succ:  l000080E8
Main_exit:


// vUART_ISR
// Return size: 0
void vUART_ISR()
vUART_ISR_entry:
	// succ:  l00008108
l00008108:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r6 = 0x00000000
	r5 = Mem0[0x00008178:word32]
	sp = sp - 8
	r1 = 0x00000001
	r0 = r5
	Mem0[sp + 4:word32] = r6
	call fn0000A0C8 (retsize: 0;)
	r4 = r0
	r1 = r0
	r0 = r5
	call fn0000A0D4 (retsize: 0;)
	r2 = r4 << 27
	NZC = cond(r2)
	branch Test(GE,N) l0000812C
	// succ:  l00008128 l0000812C
l00008128:
	r3 = Mem0[0x0000817C:word32]
	r3 = Mem0[r3:word32]
	// succ:  l0000812C
l0000812C:
	r3 = r3 << 25
	NZC = cond(r3)
	branch Test(LT,N) l0000815A
	// succ:  l00008130 l0000815A
l00008130:
	r0 = r4 << 26
	NZC = cond(r0)
	branch Test(GE,N) l00008138
	// succ:  l00008134 l00008138
l00008134:
	r2 = Mem0[0x00008180:word32]
	r3 = (word32) Mem0[r2:byte]
	// succ:  l00008138
l00008138:
	NZCV = cond(r3 - 0x0000007A)
	branch Test(ULE,ZC) l00008148
	// succ:  l0000813C l00008148
l0000813C:
	r3 = Mem0[sp + 4:word32]
	branch r3 == 0x00000000 l00008148
	// succ:  l00008140 l00008148
l00008140:
	r2 = 0x10000000
	r3 = Mem0[0x00008184:word32]
	Mem0[r3:word32] = r2
	// succ:  l00008148
l00008148:
	sp = sp + 8
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  vUART_ISR_exit
l0000815A:
	Mem0[r2:byte] = (byte) r3
	goto l00008138
	// succ:  l00008138
vUART_ISR_exit:


// vSetErrorLED
// Return size: 0
void vSetErrorLED()
vSetErrorLED_entry:
	// succ:  l00008184
l00008184:
	sp = fp
	r1 = 0x00000001
	r0 = 0x00000007
	// succ:  l00008186_thunk_fn00008188
l00008186_thunk_fn00008188:
	call fn00008188 (retsize: 0;)
	return
	// succ:  vSetErrorLED_exit
vSetErrorLED_exit:


// fn00008188
// Return size: 0
void fn00008188()
fn00008188_entry:
	// succ:  l00008188
l00008188:
	sp = fp
	call fn00C085F0 (retsize: 0;)
	return
	// succ:  fn00008188_exit
fn00008188_exit:


// prvSetAndCheckRegisters
// Return size: 0
void prvSetAndCheckRegisters()
prvSetAndCheckRegisters_entry:
	// succ:  l0000818C
l0000818C:
	sp = fp
	fp = 0x0000000A
	r0 = fp + 0x00000001
	r1 = fp + 0x00000002
	r2 = fp + 0x00000003
	r3 = fp + 0x00000004
	r4 = fp + 0x00000005
	r5 = fp + 0x00000006
	r6 = fp + 0x00000007
	r7 = fp + 0x00000008
	r8 = fp + 0x00000009
	r9 = fp + 0x0000000A
	r10 = fp + 0x0000000B
	ip = fp + 0x0000000C
	NZCV = cond(fp - 0x0000000A)
	branch Test(NE,Z) l000081FC
	// succ:  l000081C6 l000081FC
l000081C6:
	NZCV = cond(r0 - 0x0000000B)
	branch Test(NE,Z) l000081FC
	// succ:  l000081CA l000081FC
l000081CA:
	NZCV = cond(r1 - 0x0000000C)
	branch Test(NE,Z) l000081FC
	// succ:  l000081CE l000081FC
l000081CE:
	NZCV = cond(r2 - 0x0000000D)
	branch Test(NE,Z) l000081FC
	// succ:  l000081D2 l000081FC
l000081D2:
	NZCV = cond(r3 - 0x0000000E)
	branch Test(NE,Z) l000081FC
	// succ:  l000081D6 l000081FC
l000081D6:
	NZCV = cond(r4 - 0x0000000F)
	branch Test(NE,Z) l000081FC
	// succ:  l000081DA l000081FC
l000081DA:
	NZCV = cond(r5 - 0x00000010)
	branch Test(NE,Z) l000081FC
	// succ:  l000081DE l000081FC
l000081DE:
	NZCV = cond(r6 - 0x00000011)
	branch Test(NE,Z) l000081FC
	// succ:  l000081E2 l000081FC
l000081E2:
	NZCV = cond(r7 - 0x00000012)
	branch Test(NE,Z) l000081FC
	// succ:  l000081E6 l000081FC
l000081E6:
	NZCV = cond(r8 - 0x00000013)
	branch Test(NE,Z) l000081FC
	// succ:  l000081EC l000081FC
l000081EC:
	NZCV = cond(r9 - 0x00000014)
	branch Test(NE,Z) l000081FC
	// succ:  l000081F2 l000081FC
l000081F2:
	NZCV = cond(r10 - 0x00000015)
	branch Test(NE,Z) l000081FC
	// succ:  l000081F8 l000081FC
l000081F8:
	NZCV = cond(ip - 0x00000016)
	// succ:  l000081FC
l000081FC:
	branch Test(NE,Z) l000081FC
	// succ:  l000081FE l000081FC
l000081FE:
	call lr (retsize: 0;)
	return
	// succ:  prvSetAndCheckRegisters_exit
prvSetAndCheckRegisters_exit:


// fn0000820C
// Return size: 0
void fn0000820C()
fn0000820C_entry:
	// succ:  l0000820C
l0000820C:
	sp = fp
	call lr (retsize: 0;)
	return
	// succ:  fn0000820C_exit
fn0000820C_exit:


// vApplicationIdleHook
// Return size: 0
void vApplicationIdleHook()
vApplicationIdleHook_entry:
	// succ:  l00008210
l00008210:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = lr
	call fn00008F28 (retsize: 0;)
	call fn00008188 (retsize: 0;)
	// succ:  l00008216_thunk_fn0000821A
l00008216_thunk_fn0000821A:
	call fn0000821A (retsize: 0;)
	return
	// succ:  vApplicationIdleHook_exit
vApplicationIdleHook_exit:


// fn0000821A
// Return size: 0
void fn0000821A()
fn0000821A_entry:
	goto l0000821A
	// succ:  l0000821A
l0000820E:
	// succ:  l0000820E_thunk_vApplicationIdleHook
l0000820E_thunk_vApplicationIdleHook:
	call vApplicationIdleHook (retsize: 0;)
	return
	// succ:  fn0000821A_exit
l0000821A:
	sp = v3
	goto l0000820E
	// succ:  l0000820E
fn0000821A_exit:


// fn0000821C
// Return size: 0
void fn0000821C()
fn0000821C_entry:
	// succ:  l0000821C
l0000821C:
	sp = fp
	Mem0[r0 + 24:word16] = (uint16) r5
	r0 = r0
	// succ:  l0000821E_thunk_PDCInit
l0000821E_thunk_PDCInit:
	call PDCInit (retsize: 0;)
	return
	// succ:  fn0000821C_exit
fn0000821C_exit:


// PDCInit
// Return size: 0
void PDCInit()
PDCInit_entry:
	// succ:  l00008220
l00008220:
	sp = fp
	sp = sp - 12
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = lr
	r0 = Mem0[0x00008292:word32]
	sp = sp - 12
	call fn00009B78 (retsize: 0;)
	r0 = Mem0[0x00008296:word32]
	call fn00009B78 (retsize: 0;)
	r2 = 0x00000002
	r1 = 0x00000034
	r0 = 0x40004000
	call fn00009108 (retsize: 0;)
	r2 = 0x00000001
	r1 = 0x00000008
	r0 = 0x40004000
	call fn00009108 (retsize: 0;)
	r3 = 0x0000000A
	r2 = 0x00000002
	r1 = 0x00000004
	r0 = 0x40004000
	call fn000091C4 (retsize: 0;)
	r4 = 0x00000008
	r2 = 0x00000000
	r5 = Mem0[0x0000829A:word32]
	r1 = r2
	r3 = Mem0[0x0000829E:word32]
	r0 = r5
	Mem0[sp:word32] = r4
	call fn000099E4 (retsize: 0;)
	r0 = r5
	call fn00009A30 (retsize: 0;)
	r1 = r4
	r2 = 0x00000000
	r0 = 0x40004000
	call fn00009450 (retsize: 0;)
	r2 = r4
	r1 = r4
	r0 = 0x40004000
	sp = sp + 12
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	lr = Mem0[sp + 8:word32]
	sp = sp + 12
	call fn00C09450 (retsize: 0;)
	return
	// succ:  PDCInit_exit
PDCInit_exit:


// fn00008298
// Return size: 0
void fn00008298()
fn00008298_entry:
	// succ:  l00008298
l00008298:
	sp = fp
	r0 = r0 - r0
	NZCV = cond(r0)
	r7 = r1
	// succ:  l0000829A_thunk_PDCWrite
l0000829A_thunk_PDCWrite:
	call PDCWrite (retsize: 0;)
	return
	// succ:  fn00008298_exit
fn00008298_exit:


// PDCWrite
// Return size: 0
void PDCWrite()
PDCWrite_entry:
	// succ:  l0000829C
l0000829C:
	sp = fp
	sp = sp - 12
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = lr
	r5 = r1
	r4 = Mem0[0x000082D0:word32]
	sp = sp - 12
	r1 = r0 & 0x0000000F
	r0 = r4
	call SSIIntClear (retsize: 0;)
	r1 = r5
	r0 = r4
	call SSIIntClear (retsize: 0;)
	r0 = r4
	r1 = sp + 4
	call fn00009AB4 (retsize: 0;)
	r1 = sp + 4
	r0 = r4
	call fn00009AB4 (retsize: 0;)
	sp = sp + 12
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	sp = sp + 12
	return
	// succ:  PDCWrite_exit
PDCWrite_exit:


// fn000082CC
// Return size: 0
void fn000082CC()
fn000082CC_entry:
	// succ:  l000082CC
l000082CC:
	sp = fp
	Mem0[r0:word16] = (uint16) r0
	r0 = r0 & r0
	NZC = cond(r0)
	// succ:  l000082CE_thunk_vListInitialise
l000082CE_thunk_vListInitialise:
	call vListInitialise (retsize: 0;)
	return
	// succ:  fn000082CC_exit
fn000082CC_exit:


// vListInitialise
// Return size: 0
void vListInitialise()
vListInitialise_entry:
	// succ:  l000082D0
l000082D0:
	sp = fp
	r1 = 0xFFFFFFFF
	r2 = 0x00000000
	r3 = r0 + 0x00000008
	Mem0[r0 + 8:word32] = r1
	Mem0[r0:word32] = r2
	Mem0[r0 + 4:word32] = r3
	Mem0[r0 + 12:word32] = r3
	Mem0[r0 + 16:word32] = r3
	// succ:  l000082E2_thunk_fn000082E4
l000082E2_thunk_fn000082E4:
	call fn000082E4 (retsize: 0;)
	return
	// succ:  vListInitialise_exit
vListInitialise_exit:


// fn000082E4
// Return size: 0
void fn000082E4()
fn000082E4_entry:
	// succ:  l000082E4
l000082E4:
	sp = fp
	call lr (retsize: 0;)
	return
	// succ:  fn000082E4_exit
fn000082E4_exit:


// vListInitialiseItem
// Return size: 0
void vListInitialiseItem()
vListInitialiseItem_entry:
	// succ:  l000082E8
l000082E8:
	sp = fp
	r3 = 0x00000000
	Mem0[r0 + 16:word32] = r3
	// succ:  l000082EA_thunk_fn000082EC
l000082EA_thunk_fn000082EC:
	call fn000082EC (retsize: 0;)
	return
	// succ:  vListInitialiseItem_exit
vListInitialiseItem_exit:


// fn000082EC
// Return size: 0
void fn000082EC()
fn000082EC_entry:
	// succ:  l000082EC
l000082EC:
	sp = fp
	call lr (retsize: 0;)
	return
	// succ:  fn000082EC_exit
fn000082EC_exit:


// vListInsertEnd
// Return size: 0
void vListInsertEnd()
vListInsertEnd_entry:
	// succ:  l000082F0
l000082F0:
	sp = fp
	r2 = Mem0[r0:word32]
	r3 = Mem0[r0 + 4:word32]
	sp = sp - 4
	Mem0[sp:word32] = r4
	r4 = Mem0[r3 + 8:word32]
	r2 = r2 + 0x00000001
	NZCV = cond(r2)
	Mem0[r1 + 8:word32] = r4
	r4 = Mem0[r3 + 8:word32]
	Mem0[r1 + 4:word32] = r3
	Mem0[r4 + 4:word32] = r1
	Mem0[r3 + 8:word32] = r1
	r4 = Mem0[sp:word32]
	sp = sp + 4
	Mem0[r1 + 16:word32] = r0
	// succ:  l00008306_thunk_fn00008308
l00008306_thunk_fn00008308:
	call fn00008308 (retsize: 0;)
	return
	// succ:  vListInsertEnd_exit
vListInsertEnd_exit:


// fn00008308
// Return size: 0
void fn00008308()
fn00008308_entry:
	// succ:  l00008308
l00008308:
	sp = fp
	Mem0[r0:word32] = r2
	call lr (retsize: 0;)
	return
	// succ:  fn00008308_exit
fn00008308_exit:


// vListInsert
// Return size: 0
void vListInsert()
vListInsert_entry:
	// succ:  l0000830C
l0000830C:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	r5 = Mem0[r1:word32]
	r3 = r5 + 0x00000001
	branch Test(EQ,Z) l00008334_in_vListInsert
	// succ:  l00008314 l00008334_in_vListInsert
l00008314:
	r2 = r0 + 0x00000008
	// succ:  l00008318
l00008318:
	goto l00008318
	// succ:  l00008318
l00008334_in_vListInsert:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	sp = sp + 8
	call lr (retsize: 0;)
	return
	// succ:  vListInsert_exit
vListInsert_exit:


// fn0000833C
// Return size: 0
void fn0000833C()
fn0000833C_entry:
	goto l0000833C
	// succ:  l0000833C
l00008320:
	NZCV = cond(r5 - r4)
	branch Test(UGE,C) l00008516
	// succ:  l00008324 l00008516
l00008324:
	r4 = Mem0[r0:word32]
	Mem0[r1 + 4:word32] = r3
	r4 = r4 + 0x00000001
	NZCV = cond(r4)
	Mem0[r3 + 8:word32] = r1
	Mem0[r1 + 8:word32] = r2
	Mem0[r2 + 4:word32] = r1
	Mem0[r1 + 16:word32] = r0
	Mem0[r0:word32] = r4
	// succ:  l00008334
l00008334:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	sp = sp + 8
	call lr (retsize: 0;)
	return
	// succ:  fn0000833C_exit
l0000833C:
	sp = fp
	goto l00008320
	// succ:  l00008320
l00008516:
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	r6 = Mem0[sp + 12:word32]
	r7 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  fn0000833C_exit
fn0000833C_exit:


// uxListRemove
// Return size: 0
void uxListRemove()
uxListRemove_entry:
	// succ:  l00008340
l00008340:
	sp = fp
	r2 = Mem0[r0 + 16:word32]
	r3 = Mem0[r0 + 4:word32]
	r1 = Mem0[r0 + 8:word32]
	sp = sp - 4
	Mem0[sp:word32] = r4
	Mem0[r3 + 8:word32] = r1
	r4 = Mem0[r2 + 4:word32]
	r1 = Mem0[r0 + 8:word32]
	NZCV = cond(r0 - r4)
	Mem0[r1 + 4:word32] = r3
	branch Test(NE,Z) l00008356
	// succ:  l00008354_1 l00008356
l00008354_1:
	Mem0[r2 + 4:word32] = r1
	// succ:  l00008356
l00008356:
	r1 = 0x00000000
	r3 = Mem0[r2:word32]
	Mem0[r0 + 16:word32] = r1
	r0 = r3 - 0x00000001
	Mem0[r2:word32] = r0
	r4 = Mem0[sp:word32]
	sp = sp + 4
	call lr (retsize: 0;)
	return
	// succ:  uxListRemove_exit
uxListRemove_exit:


// xQueueCRSend
// Return size: 0
void xQueueCRSend()
xQueueCRSend_entry:
	// succ:  l00008364
l00008364:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r5 = r0
	r6 = r1
	r4 = r2
	r3 = 0x000000BF
	__msr(cpsr, r3)
xQueueCRSend_exit:


// fn000083FC
// Return size: 0
void fn000083FC()
fn000083FC_entry:
	goto l000083FC
	// succ:  l000083FC
l000083A6:
	NZCV = cond(r2 - r3)
	branch Test(ULT,C) l000083BC
	// succ:  l000083AA l000083BC
l000083AA:
	r3 = 0x00000000
	__msr(cpsr, r3)
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn000083FC_exit
l000083BC:
	r0 = r4
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn000083FC_exit
l000083FC:
	sp = fp
	r4 = r0
	goto l000083A6
	// succ:  l000083A6
fn000083FC_exit:


// xQueueCRReceive
// Return size: 0
void xQueueCRReceive()
xQueueCRReceive_entry:
	// succ:  l00008400
l00008400:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r4 = r0
	r3 = 0x000000BF
	__msr(cpsr, r3)
xQueueCRReceive_exit:


// xQueueCRSendFromISR
// Return size: 0
void xQueueCRSendFromISR()
xQueueCRSendFromISR_entry:
	// succ:  l000084A0
l000084A0:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r3 = Mem0[r0 + 60:word32]
	r6 = Mem0[r0 + 56:word32]
	r5 = r2
	NZCV = cond(r6 - r3)
	branch Test(ULT,C) l000084AC
	// succ:  l000084AC l000084AC
l000084AC:
	r0 = r5
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  xQueueCRSendFromISR_exit
xQueueCRSendFromISR_exit:


// xQueueCRReceiveFromISR
// Return size: 0
void xQueueCRReceiveFromISR()
xQueueCRReceiveFromISR_entry:
	// succ:  l000084D4
l000084D4:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = r6
	Mem0[sp + 16:word32] = r7
	Mem0[sp + 20:word32] = lr
	r3 = Mem0[r0 + 56:word32]
	branch r3 == 0x00000000 l00008514
	// succ:  l000084DA l00008514
l000084DA:
	r3 = Mem0[r0 + 12:word32]
	lr = Mem0[r0 + 64:word32]
	r4 = Mem0[r0 + 4:word32]
	r3 = r3 + lr
	NZCV = cond(r3)
	NZCV = cond(r3 - r4)
	r6 = r1
	r4 = r0
	r5 = r2
	r7 = Mem0[r0 + 56:word32]
	Mem0[r0 + 12:word32] = r3
	branch Test(ULT,C) l000084F4
	// succ:  l000084F2_1 l000084F4
l000084F2_1:
	r3 = Mem0[r0:word32]
	// succ:  l000084F4
l000084F4:
	r7 = r7 + 0xFFFFFFFF
	branch Test(ULT,C) l000084FC
	// succ:  l000084FA_1 l000084FC
l000084FA_1:
	Mem0[r0 + 12:word32] = r3
	// succ:  l000084FC
l000084FC:
	r1 = r3
	r2 = lr
	r0 = r6
	Mem0[r4 + 56:word32] = r7
	call fn0000A5C0 (retsize: 0;)
	r3 = Mem0[r5:word32]
	branch r3 != 0x00000000 l00008510
	// succ:  l0000850C l00008510
l0000850C:
	r3 = Mem0[r4 + 16:word32]
	branch r3 != 0x00000000 l00008518
	// succ:  l00008510 l00008518
l00008510:
	r0 = 0x00000001
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	r6 = Mem0[sp + 12:word32]
	r7 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  xQueueCRReceiveFromISR_exit
l00008514:
	r0 = r3
	// succ:  l00008516_in_xQueueCRReceiveFromISR
l00008516_in_xQueueCRReceiveFromISR:
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	r6 = Mem0[sp + 12:word32]
	r7 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  xQueueCRReceiveFromISR_exit
l00008518:
	r0 = r4 + 0x00000010
	call fn00009090 (retsize: 0;)
	NZCV = cond(r0 - 0x00000000)
	branch Test(EQ,Z) l00008522_thunk_fn0000870C
	goto l00008524
	// succ:  l00008524 l00008522_thunk_fn0000870C
l00008522_thunk_fn0000870C:
	call fn0000870C (retsize: 0;)
	return
	// succ:  xQueueCRReceiveFromISR_exit
l00008524:
	r0 = 0x00000001
	Mem0[r5:word32] = r0
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	r6 = Mem0[sp + 12:word32]
	r7 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  xQueueCRReceiveFromISR_exit
xQueueCRReceiveFromISR_exit:


// prvIdleTask
// Return size: 0
void prvIdleTask()
prvIdleTask_entry:
	// succ:  l0000852C
l0000852C:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = lr
	call fn0000820C (retsize: 0;)
	// succ:  l0000852E_thunk_fn00008532
l0000852E_thunk_fn00008532:
	call fn00008532 (retsize: 0;)
	return
	// succ:  prvIdleTask_exit
prvIdleTask_exit:


// fn00008530
// Return size: 0
void fn00008530()
fn00008530_entry:
	// succ:  l00008530
l00008530:
	sp = fp
fn00008530_exit:


// fn00008532
// Return size: 0
void fn00008532()
fn00008532_entry:
	goto l00008532
	// succ:  l00008532
l0000852A:
	// succ:  l0000852A_thunk_prvIdleTask
l0000852A_thunk_prvIdleTask:
	call prvIdleTask (retsize: 0;)
	return
	// succ:  fn00008532_exit
l00008532:
	sp = fp
	goto l0000852A
	// succ:  l0000852A
l00008532:
fn00008532_exit:


// xTaskNotifyStateClear
// Return size: 0
void xTaskNotifyStateClear()
xTaskNotifyStateClear_entry:
	// succ:  l00008534
l00008534:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	// succ:  l00008536
l00008536:
	branch r0 == 0x00000000 l00008558
	// succ:  l00008538 l00008558
l00008538:
	r4 = r0
	call fn00008574 (retsize: 0;)
	r3 = (word32) Mem0[r4 + 100:byte]
	NZCV = cond(r3 - 0x00000002)
	branch Test(NE,Z) l00008548
	// succ:  l00008546_1 l00008548
l00008546_1:
	r3 = 0x00000000
	// succ:  l00008548
l00008548:
	r5 = 0x00000001
	r5 = 0x00000000
	Mem0[r4 + 100:byte] = (byte) r3
	call fn000085AC (retsize: 0;)
	r0 = r5
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  xTaskNotifyStateClear_exit
l00008558:
	r3 = Mem0[0x00008564:word32]
	r4 = Mem0[r3 + 4:word32]
	goto l00008536
	// succ:  l00008536
xTaskNotifyStateClear_exit:


// fn00008560
// Return size: 0
void fn00008560()
fn00008560_entry:
	// succ:  l00008560
l00008560:
	sp = fp
	r4 = r0 << 3
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l00008562_thunk_xPortRaisePrivilege
l00008562_thunk_xPortRaisePrivilege:
	call xPortRaisePrivilege (retsize: 0;)
	return
	// succ:  fn00008560_exit
fn00008560_exit:


// xPortRaisePrivilege
// Return size: 0
void xPortRaisePrivilege()
xPortRaisePrivilege_entry:
	// succ:  l00008564
l00008564:
	sp = fp
	r0 = __mrs(cpsr)
	NZC = cond(r0 & 0x00000001)
	branch Test(EQ,Z) l00008570
	// succ:  l0000856E_1 l00008570
l0000856E_1:
	r0 = 0x00000000
	// succ:  l00008570
l00008570:
	__syscall(0x00000002)
	r0 = 0x00000001
	// succ:  l00008572_thunk_fn00008574
l00008572_thunk_fn00008574:
	call fn00008574 (retsize: 0;)
	return
	// succ:  xPortRaisePrivilege_exit
xPortRaisePrivilege_exit:


// fn00008574
// Return size: 0
void fn00008574()
fn00008574_entry:
	// succ:  l00008574
l00008574:
	sp = fp
	call lr (retsize: 0;)
	return
	// succ:  fn00008574_exit
fn00008574_exit:


// vPortEnterCritical
// Return size: 0
void vPortEnterCritical()
vPortEnterCritical_entry:
	// succ:  l00008578
l00008578:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = lr
	call fn00008560 (retsize: 0;)
	r3 = 0x000000BF
	__msr(cpsr, r3)
vPortEnterCritical_exit:


// fn000085AC
// Return size: 0
void fn000085AC()
fn000085AC_entry:
	// succ:  l000085AC
l000085AC:
	sp = fp
	r4 = r7 << 2
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l000085AE_thunk_vPortExitCritical
l000085AE_thunk_vPortExitCritical:
	call vPortExitCritical (retsize: 0;)
	return
	// succ:  fn000085AC_exit
fn000085AC_exit:


// vPortExitCritical
// Return size: 0
void vPortExitCritical()
vPortExitCritical_entry:
	// succ:  l000085B0
l000085B0:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = lr
	call fn00008560 (retsize: 0;)
	r2 = Mem0[0x000085DE:word32]
	r3 = Mem0[r2:word32]
	r3 = r3 - 0x00000001
	NZCV = cond(r3)
	Mem0[r2:word32] = r3
	branch r3 != 0x00000000 l000085C4
	// succ:  l000085C0 l000085C4
l000085C0:
	__msr(cpsr, r3)
	// succ:  l000085C4
l000085C4:
	NZCV = cond(r0 - 0x00000001)
	branch Test(EQ,Z) l000085D0
	// succ:  l000085C8 l000085D0
l000085C8:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l000085D0
l000085D0:
	__msr(cpsr, r0)
	r3 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  vPortExitCritical_exit
vPortExitCritical_exit:


// vParTestInitialise
// Return size: 0
void vParTestInitialise()
vParTestInitialise_entry:
	// succ:  l000085DC
l000085DC:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = lr
	call fn0000821C (retsize: 0;)
	r3 = Mem0[0x000085F6:word32]
	r0 = 0x00000005
	r1 = (word32) Mem0[r3:byte]
	r3 = Mem0[sp:word32]
	lr = Mem0[sp + 4:word32]
	sp = sp + 8
	// succ:  l000085EC_thunk_fn00008298
l000085EC_thunk_fn00008298:
	call fn00008298 (retsize: 0;)
	return
	// succ:  vParTestInitialise_exit
vParTestInitialise_exit:


// vParTestSetLED
// Return size: 0
void vParTestSetLED()
vParTestSetLED_entry:
	// succ:  l000085F4
l000085F4:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r4 = r0
	r5 = r1
	call fn000088BC (retsize: 0;)
	NZCV = cond(r4 - 0x00000007)
	branch Test(UGT,ZC) l00008618
	// succ:  l00008602 l00008618
l00008602:
	r3 = 0x00000001
	r0 = r3 << r4
	r3 = Mem0[0x00008630:word32]
	r0 = (uint32) (byte) r0
	r2 = (word32) Mem0[r3:byte]
	branch r5 == 0x00000000 l00008624
	// succ:  l00008610 l00008624
l00008610:
	r0 = r0 | r2
	NZC = cond(r0)
	Mem0[r3:byte] = (byte) r0
	r1 = (word32) Mem0[r3:byte]
	r0 = 0x00000005
	// succ:  l00008618
l00008618:
	call fn00008298 (retsize: 0;)
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	lr = Mem0[sp + 12:word32]
	sp = sp + 16
	call fn00C088DC (retsize: 0;)
	return
	// succ:  vParTestSetLED_exit
l00008624:
	r0 = r2 & ~(r0 << 0x00000000)
	Mem0[r3:byte] = (byte) r0
	goto l00008610
	// succ:  l00008610
vParTestSetLED_exit:


// fn0000862C
// Return size: 0
void fn0000862C()
fn0000862C_entry:
	// succ:  l0000862C
l0000862C:
	sp = fp
	r4 = r6 << 31
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l0000862E_thunk_vParTestToggleLED
l0000862E_thunk_vParTestToggleLED:
	call vParTestToggleLED (retsize: 0;)
	return
	// succ:  fn0000862C_exit
fn0000862C_exit:


// vParTestToggleLED
// Return size: 0
void vParTestToggleLED()
vParTestToggleLED_entry:
	// succ:  l00008630
l00008630:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	r4 = r0
	call fn000088BC (retsize: 0;)
	NZCV = cond(r4 - 0x00000007)
	branch Test(UGT,ZC) l00008656
	// succ:  l0000863C l00008656
l0000863C:
	r2 = 0x00000001
	r3 = Mem0[0x00008672:word32]
	r0 = r2 << r4
	r1 = (word32) Mem0[r3:byte]
	r2 = (uint32) (byte) r0
	r2 = r2 + r1 + C
	NZCV = cond(r2)
	branch Test(NE,Z) l0000865E
	// succ:  l0000864C l0000865E
l0000864C:
	r1 = (word32) Mem0[r3:byte]
	r2 = r2 | r1
	NZC = cond(r2)
	Mem0[r3:byte] = (byte) r2
	r1 = (word32) Mem0[r3:byte]
	r0 = 0x00000005
	// succ:  l00008656
l00008656:
	call fn00008298 (retsize: 0;)
	r4 = Mem0[sp:word32]
	lr = Mem0[sp + 4:word32]
	sp = sp + 8
	// succ:  l0000865E
l0000865E:
	call fn00C088DC (retsize: 0;)
	return
	// succ:  vParTestToggleLED_exit
vParTestToggleLED_exit:


// prvFlashCoRoutine
// Return size: 0
void prvFlashCoRoutine()
prvFlashCoRoutine_entry:
	// succ:  l00008670
l00008670:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r3 = (word32) Mem0[r0 + 104:word16]
	sp = sp - 8
	NZCV = cond(r3 - 0x000001C2)
	r4 = r0
	branch Test(EQ,Z) l000086B2
	// succ:  l0000867E l000086B2
l0000867E:
	r2 = 0x000001C3
	NZCV = cond(r3 - r2)
	branch Test(EQ,Z) l00008688
	// succ:  l00008686 l00008688
l00008686:
	branch r3 == 0x00000000 l000086D2
	// succ:  l00008688 l000086D2
l00008688:
	sp = sp + 8
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  prvFlashCoRoutine_exit
l00008692:
	call fn0000862C (retsize: 0;)
	r2 = 0xFFFFFFFF
	r1 = r6
	r0 = Mem0[r5:word32]
	call fn000083FC (retsize: 0;)
	r2 = r0 + 0x00000004
	branch Test(EQ,Z) l000086D4
	// succ:  l000086A6 l000086D4
l000086A6:
	r3 = r0 + 0x00000005
	branch Test(EQ,Z) l000086C4
	// succ:  l000086AA l000086C4
l000086AA:
	NZCV = cond(r0 - 0x00000001)
	branch Test(EQ,Z) l000086AC_thunk_fn0000888C
	goto l000086AE
	// succ:  l000086AE l000086AC_thunk_fn0000888C
l000086AC_thunk_fn0000888C:
	call fn0000888C (retsize: 0;)
	return
	// succ:  prvFlashCoRoutine_exit
l000086AE:
	r2 = 0x00000000
	r3 = Mem0[0x000086E8:word32]
	// succ:  l000086B2
l000086B2:
	Mem0[r3:word32] = r2
	goto l00008692
	// succ:  l00008692
l000086C4:
	r3 = r0 + 0x00000005
	branch Test(NE,Z) l000086C6_thunk_fn000088A6
	goto l000086C8
	// succ:  l000086C8 l000086C6_thunk_fn000088A6
l000086C6_thunk_fn000088A6:
	call fn000088A6 (retsize: 0;)
	return
	// succ:  prvFlashCoRoutine_exit
l000086C8:
	r3 = 0x000001C3
	Mem0[r4 + 104:word16] = (uint16) r3
	sp = sp + 8
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  prvFlashCoRoutine_exit
l000086D2:
	r5 = Mem0[0x000086E6:word32]
	// succ:  l000086D4
l000086D4:
	r6 = sp + 4
	goto l00008692
	// succ:  l00008692
prvFlashCoRoutine_exit:


// prvFixedDelayCoRoutine
// Return size: 0
void prvFixedDelayCoRoutine()
prvFixedDelayCoRoutine_entry:
	// succ:  l000086E8
l000086E8:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	r3 = (word32) Mem0[r0 + 104:word16]
	sp = sp - 8
	NZCV = cond(r3 - 0x00000182)
	r4 = r0
	Mem0[sp + 4:word32] = r1
	branch Test(EQ,Z) l0000874C
	// succ:  l000086F8 l0000874C
l000086F8:
	branch Test(ULE,ZC) l00008744
	// succ:  l000086FA l00008744
l000086FA:
	r2 = 0x00000183
	NZCV = cond(r3 - r2)
	branch Test(NE,Z) l00008712
	goto l00008702
	// succ:  l00008702 l00008700_thunk_fn0000870C
l00008700_thunk_fn0000870C:
	call fn0000870C (retsize: 0;)
	return
	// succ:  prvFixedDelayCoRoutine_exit
l00008702:
	r3 = Mem0[0x0000877E:word32]
	r2 = Mem0[sp + 4:word32]
	r0 = Mem0[r3 + (r2 << 2):word32]
	// succ:  l00008708
l00008708:
	branch r0 != 0x00000000 l0000875E
	// succ:  l00008708_thunk_fn0000870C l0000875E
l00008708_thunk_fn0000870C:
	call fn0000870C (retsize: 0;)
	return
	// succ:  prvFixedDelayCoRoutine_exit
l00008744:
	branch Test(EQ,Z) l00008744_thunk_fn00008908
	goto l00008746
	// succ:  l00008746 l00008744_thunk_fn00008908
l00008744_thunk_fn00008908:
	call fn00008908 (retsize: 0;)
	return
	// succ:  prvFixedDelayCoRoutine_exit
l00008746:
	goto l0000875A
	// succ:  l0000875A
l0000874C:
	sp = sp + 8
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  prvFixedDelayCoRoutine_exit
l0000875A:
l0000875E:
	r1 = 0x00000000
	call fn00008EEC (retsize: 0;)
	goto l00008708
	// succ:  l00008708
prvFixedDelayCoRoutine_exit:


// fn0000870C
// Return size: 0
void fn0000870C()
fn0000870C_entry:
	// succ:  l0000870C
l0000870C:
	sp = v3
	r3 = 0x00000196
	Mem0[r4 + 104:word16] = (uint16) r3
	// succ:  l00008712
l00008712:
	sp = sp + 8
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  fn0000870C_exit
fn0000870C_exit:


// vStartFlashCoRoutines
// Return size: 0
void vStartFlashCoRoutines()
vStartFlashCoRoutines_entry:
	// succ:  l00008784
l00008784:
	sp = fp
	NZCV = cond(r0 - 0x00000008)
	branch Test(ULT,C) l0000878A
	// succ:  l00008788_1 l0000878A
l00008788_1:
	r0 = 0x00000008
	// succ:  l0000878A
l0000878A:
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r2 = 0x00000000
	r5 = r0
	r1 = 0x00000004
	r0 = 0x00000001
	call fn00008A84 (retsize: 0;)
	r3 = Mem0[0x000087C8:word32]
	Mem0[r3:word32] = r0
	branch r0 == 0x00000000 l000087C2
	// succ:  l0000879E l000087C2
l0000879E:
	branch r5 == 0x00000000 l000087B4
	// succ:  l000087A0 l000087B4
l000087A0:
	r4 = 0x00000000
	r6 = Mem0[0x000087CE:word32]
	r2 = r4
	r1 = 0x00000000
	r4 = r4 + 0x00000001
	NZCV = cond(r4)
	r0 = r6
	call fn00008E3C (retsize: 0;)
	NZCV = cond(r4 - r5)
	branch Test(NE,Z) l000087B2_thunk_fn000089A0
	goto l000087B4
	// succ:  l000087B4 l000087B2_thunk_fn000089A0
l000087B2_thunk_fn000089A0:
	call fn000089A0 (retsize: 0;)
	return
	// succ:  vStartFlashCoRoutines_exit
l000087B4:
	r2 = 0x00000000
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	lr = Mem0[sp + 12:word32]
	sp = sp + 16
	r1 = 0x00000001
	r0 = Mem0[0x000087D0:word32]
	call fn00C08E3C (retsize: 0;)
	return
	// succ:  vStartFlashCoRoutines_exit
l000087C2:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  vStartFlashCoRoutines_exit
vStartFlashCoRoutines_exit:


// xAreFlashCoRoutinesStillRunning
// Return size: 0
void xAreFlashCoRoutinesStillRunning()
xAreFlashCoRoutinesStillRunning_entry:
	// succ:  l000087D0
l000087D0:
	sp = fp
	r3 = Mem0[0x000087DC:word32]
	r0 = Mem0[r3:word32]
	call lr (retsize: 0;)
	return
	// succ:  xAreFlashCoRoutinesStillRunning_exit
xAreFlashCoRoutinesStillRunning_exit:


// MPU_xTaskCreateRestricted
// Return size: 0
void MPU_xTaskCreateRestricted()
MPU_xTaskCreateRestricted_entry:
	// succ:  l000087DC
l000087DC:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r5 = r0
	r6 = r1
	call fn00008560 (retsize: 0;)
	r1 = r6
	r4 = r0
	r0 = r5
	call fn00000918 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l000087FE
	// succ:  l000087F6 l000087FE
l000087F6:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l000087FE
l000087FE:
	__msr(cpsr, r0)
	r0 = r3
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  MPU_xTaskCreateRestricted_exit
MPU_xTaskCreateRestricted_exit:


// fn00008804
// Return size: 0
void fn00008804()
fn00008804_entry:
	// succ:  l00008804
l00008804:
	sp = fp
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn00008804_exit
fn00008804_exit:


// MPU_xTaskCreate
// Return size: 0
void MPU_xTaskCreate()
MPU_xTaskCreate_entry:
	// succ:  l00008808
l00008808:
	sp = fp
	sp = sp - 32
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = r9
	Mem0[sp + 24:word32] = r10
	Mem0[sp + 28:word32] = lr
	sp = sp - 8
	r5 = r0
	r8 = r1
	r9 = r2
	r10 = r3
	r7 = Mem0[sp + 40:word32]
	r6 = Mem0[sp + 44:word32]
	call fn00008560 (retsize: 0;)
	r3 = r10
	r4 = r0
	Mem0[sp:word32] = r7
	Mem0[sp + 4:word32] = r6
	r2 = r9
	r1 = r8
	r0 = r5
	call fn000008B0 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l0000883E
	// succ:  l00008836 l0000883E
l00008836:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l0000883E
l0000883E:
	__msr(cpsr, r0)
	r0 = r3
	sp = sp + 8
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	r9 = Mem0[sp + 20:word32]
	r10 = Mem0[sp + 24:word32]
	sp = sp + 32
	return
	// succ:  MPU_xTaskCreate_exit
MPU_xTaskCreate_exit:


// MPU_vTaskAllocateMPURegions
// Return size: 0
void MPU_vTaskAllocateMPURegions()
MPU_vTaskAllocateMPURegions_entry:
	// succ:  l0000884C
l0000884C:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r5 = r0
	r6 = r1
	call fn00008560 (retsize: 0;)
	r4 = r0
	r1 = r6
	r0 = r5
	call fn0000096C (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	branch Test(EQ,Z) l0000886C
	// succ:  l00008864 l0000886C
l00008864:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l0000886C
l0000886C:
	__msr(cpsr, r0)
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  MPU_vTaskAllocateMPURegions_exit
MPU_vTaskAllocateMPURegions_exit:


// fn00008870
// Return size: 0
void fn00008870()
fn00008870_entry:
	// succ:  l00008870
l00008870:
	sp = fp
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn00008870_exit
fn00008870_exit:


// MPU_vTaskDelayUntil
// Return size: 0
void MPU_vTaskDelayUntil()
MPU_vTaskDelayUntil_entry:
	// succ:  l00008874
l00008874:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r5 = r0
	r6 = r1
	call fn00008560 (retsize: 0;)
	r4 = r0
	r1 = r6
	r0 = r5
	call fn00000F7C (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	branch Test(EQ,Z) l00008894
	// succ:  l0000888A_thunk_fn0000888C l0000888A_thunk_fn0000888C
l0000888A_thunk_fn0000888C:
	call fn0000888C (retsize: 0;)
	return
	// succ:  MPU_vTaskDelayUntil_exit
l0000888A_thunk_fn0000888C:
	call fn0000888C (retsize: 0;)
	return
	// succ:  MPU_vTaskDelayUntil_exit
MPU_vTaskDelayUntil_exit:


// fn0000888C
// Return size: 0
void fn0000888C()
fn0000888C_entry:
	// succ:  l0000888C
l0000888C:
	sp = v3
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008894
l00008894:
	__msr(cpsr, r0)
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn0000888C_exit
fn0000888C_exit:


// MPU_vTaskDelay
// Return size: 0
void MPU_vTaskDelay()
MPU_vTaskDelay_entry:
	// succ:  l0000889C
l0000889C:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r5 = r0
	call fn00008560 (retsize: 0;)
	r4 = r0
	// succ:  l000088A4_thunk_fn000088A6
l000088A4_thunk_fn000088A6:
	call fn000088A6 (retsize: 0;)
	return
	// succ:  MPU_vTaskDelay_exit
MPU_vTaskDelay_exit:


// fn000088A6
// Return size: 0
void fn000088A6()
fn000088A6_entry:
	// succ:  l000088A6
l000088A6:
	sp = fp
	r0 = r5
	call fn00000F44 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	branch Test(EQ,Z) l000088B8_in_fn000088A6
	goto l000088AE_thunk_fn000088B0
	// succ:  l000088AE_thunk_fn000088B0 l000088B8_in_fn000088A6
l000088A6:
	r0 = r5
	call fn00000F44 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	branch Test(EQ,Z) l000088B8
	goto l000088AE_thunk_fn000088B0
	// succ:  l000088AE_thunk_fn000088B0 l000088AE_thunk_fn000088B0
l000088AE_thunk_fn000088B0:
	call fn000088B0 (retsize: 0;)
	return
	// succ:  fn000088A6_exit
l000088AE_thunk_fn000088B0:
	call fn000088B0 (retsize: 0;)
	return
	// succ:  fn000088A6_exit
l000088AE_thunk_fn000088B0:
	call fn000088B0 (retsize: 0;)
	return
	// succ:  fn000088A6_exit
l000088B8_in_fn000088A6:
	__msr(cpsr, r0)
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn000088A6_exit
fn000088A6_exit:


// fn000088B0
// Return size: 0
void fn000088B0()
fn000088B0_entry:
	// succ:  l000088B0
l000088B0:
	sp = v3
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l000088B8
l000088B8:
	__msr(cpsr, r0)
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn000088B0_exit
fn000088B0_exit:


// fn000088BC
// Return size: 0
void fn000088BC()
fn000088BC_entry:
	// succ:  l000088BC
l000088BC:
	sp = fp
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn000088BC_exit
fn000088BC_exit:


// MPU_vTaskSuspendAll
// Return size: 0
void MPU_vTaskSuspendAll()
MPU_vTaskSuspendAll_entry:
	// succ:  l000088C0
l000088C0:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	call fn00008560 (retsize: 0;)
	r4 = r0
	call fn00000A08 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	branch Test(EQ,Z) l000088D8
	// succ:  l000088D0 l000088D8
l000088D0:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l000088D8
l000088D8:
	__msr(cpsr, r0)
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  MPU_vTaskSuspendAll_exit
MPU_vTaskSuspendAll_exit:


// MPU_xTaskResumeAll
// Return size: 0
void MPU_xTaskResumeAll()
MPU_xTaskResumeAll_entry:
	// succ:  l000088E0
l000088E0:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	call fn00008560 (retsize: 0;)
	r4 = r0
	call fn00000E68 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l000088FA
	// succ:  l000088F2 l000088FA
l000088F2:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l000088FA
l000088FA:
	__msr(cpsr, r0)
	r0 = r3
	// succ:  l000088FE_thunk_fn00008900
l000088FE_thunk_fn00008900:
	call fn00008900 (retsize: 0;)
	return
	// succ:  MPU_xTaskResumeAll_exit
MPU_xTaskResumeAll_exit:


// fn00008900
// Return size: 0
void fn00008900()
fn00008900_entry:
	// succ:  l00008900
l00008900:
	sp = fp
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  fn00008900_exit
fn00008900_exit:


// MPU_xTaskGetTickCount
// Return size: 0
void MPU_xTaskGetTickCount()
MPU_xTaskGetTickCount_entry:
	// succ:  l00008904
l00008904:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	call fn00008560 (retsize: 0;)
	// succ:  l00008906_thunk_fn00008908
l00008906_thunk_fn00008908:
	call fn00008908 (retsize: 0;)
	return
	// succ:  MPU_xTaskGetTickCount_exit
MPU_xTaskGetTickCount_exit:


// fn00008908
// Return size: 0
void fn00008908()
fn00008908_entry:
	// succ:  l00008908
l00008908:
	sp = fp
l00008908:
	r4 = r0
	call fn00000A1C (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l0000891E
	// succ:  l00008916 l0000891E
l00008916:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l0000891E
l0000891E:
	__msr(cpsr, r0)
	r0 = r3
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  fn00008908_exit
fn00008908_exit:


// MPU_uxTaskGetNumberOfTasks
// Return size: 0
void MPU_uxTaskGetNumberOfTasks()
MPU_uxTaskGetNumberOfTasks_entry:
	// succ:  l00008928
l00008928:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	call fn00008560 (retsize: 0;)
	r4 = r0
	call fn00000A34 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008942
	// succ:  l0000893A l00008942
l0000893A:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008942
l00008942:
	__msr(cpsr, r0)
	r0 = r3
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  MPU_uxTaskGetNumberOfTasks_exit
MPU_uxTaskGetNumberOfTasks_exit:


// MPU_pcTaskGetName
// Return size: 0
void MPU_pcTaskGetName()
MPU_pcTaskGetName_entry:
	// succ:  l0000894C
l0000894C:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r5 = r0
	call fn00008560 (retsize: 0;)
	r4 = r0
	r0 = r5
	call fn00000A40 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l0000896A
	// succ:  l00008962 l0000896A
l00008962:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l0000896A
l0000896A:
	__msr(cpsr, r0)
	r0 = r3
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  MPU_pcTaskGetName_exit
MPU_pcTaskGetName_exit:


// MPU_vTaskSetTimeOutState
// Return size: 0
void MPU_vTaskSetTimeOutState()
MPU_vTaskSetTimeOutState_entry:
	// succ:  l00008974
l00008974:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r5 = r0
	call fn00008560 (retsize: 0;)
	r4 = r0
	r0 = r5
	call fn00001140 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	branch Test(EQ,Z) l00008990
	// succ:  l00008988 l00008990
l00008988:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008990
l00008990:
	__msr(cpsr, r0)
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  MPU_vTaskSetTimeOutState_exit
MPU_vTaskSetTimeOutState_exit:


// MPU_xTaskCheckForTimeOut
// Return size: 0
void MPU_xTaskCheckForTimeOut()
MPU_xTaskCheckForTimeOut_entry:
	// succ:  l00008998
l00008998:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r5 = r0
	r6 = r1
	call fn00008560 (retsize: 0;)
	// succ:  l0000899E_thunk_fn000089A0
l0000899E_thunk_fn000089A0:
	call fn000089A0 (retsize: 0;)
	return
	// succ:  MPU_xTaskCheckForTimeOut_exit
MPU_xTaskCheckForTimeOut_exit:


// fn000089A0
// Return size: 0
void fn000089A0()
fn000089A0_entry:
	// succ:  l000089A0
l000089A0:
	sp = fp
l000089A0:
	r1 = r6
	r4 = r0
	r0 = r5
	call fn00001154 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l000089BA
	// succ:  l000089B2 l000089BA
l000089B2:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l000089BA
l000089BA:
	__msr(cpsr, r0)
	r0 = r3
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn000089A0_exit
fn000089A0_exit:


// MPU_xTaskGenericNotify
// Return size: 0
void MPU_xTaskGenericNotify()
MPU_xTaskGenericNotify_entry:
	// succ:  l000089C4
l000089C4:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = lr
	r5 = r0
	r6 = r1
	r7 = r2
	r8 = r3
	call fn00008560 (retsize: 0;)
	r3 = r8
	r4 = r0
	r2 = r7
	r1 = r6
	r0 = r5
	call fn00000A54 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l000089F0
	// succ:  l000089E8 l000089F0
l000089E8:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l000089F0
l000089F0:
	__msr(cpsr, r0)
	r0 = r3
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  MPU_xTaskGenericNotify_exit
MPU_xTaskGenericNotify_exit:


// MPU_xTaskNotifyWait
// Return size: 0
void MPU_xTaskNotifyWait()
MPU_xTaskNotifyWait_entry:
	// succ:  l000089FC
l000089FC:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = lr
	r5 = r0
	r6 = r1
	r7 = r2
	r8 = r3
	call fn00008560 (retsize: 0;)
	r3 = r8
	r4 = r0
	r2 = r7
	r1 = r6
	r0 = r5
	call fn00000BD0 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008A28
	// succ:  l00008A20 l00008A28
l00008A20:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008A28
l00008A28:
	__msr(cpsr, r0)
	r0 = r3
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  MPU_xTaskNotifyWait_exit
MPU_xTaskNotifyWait_exit:


// MPU_ulTaskNotifyTake
// Return size: 0
void MPU_ulTaskNotifyTake()
MPU_ulTaskNotifyTake_entry:
	// succ:  l00008A34
l00008A34:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r5 = r0
	r6 = r1
	call fn00008560 (retsize: 0;)
	r1 = r6
	r4 = r0
	r0 = r5
	call fn00000CFC (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008A56
	// succ:  l00008A4E l00008A56
l00008A4E:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008A56
l00008A56:
	__msr(cpsr, r0)
	r0 = r3
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  MPU_ulTaskNotifyTake_exit
MPU_ulTaskNotifyTake_exit:


// MPU_xTaskNotifyStateClear
// Return size: 0
void MPU_xTaskNotifyStateClear()
MPU_xTaskNotifyStateClear_entry:
	// succ:  l00008A60
l00008A60:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r5 = r0
	call fn00008560 (retsize: 0;)
	r4 = r0
	r0 = r5
	call fn00008530 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008A7E
	// succ:  l00008A76 l00008A7E
l00008A76:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008A7E
l00008A7E:
	__msr(cpsr, r0)
	r0 = r3
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  MPU_xTaskNotifyStateClear_exit
MPU_xTaskNotifyStateClear_exit:


// fn00008A84
// Return size: 0
void fn00008A84()
fn00008A84_entry:
	// succ:  l00008A84
l00008A84:
	sp = fp
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn00008A84_exit
fn00008A84_exit:


// MPU_xQueueGenericCreate
// Return size: 0
void MPU_xQueueGenericCreate()
MPU_xQueueGenericCreate_entry:
	// succ:  l00008A88
l00008A88:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = r6
	Mem0[sp + 16:word32] = r7
	Mem0[sp + 20:word32] = lr
	r5 = r0
	r6 = r1
	r7 = r2
	call fn00008560 (retsize: 0;)
	r2 = r7
	r4 = r0
	r1 = r6
	r0 = r5
	call fn000006A8 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008AAE
	// succ:  l00008AA6 l00008AAE
l00008AA6:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008AAE
l00008AAE:
	__msr(cpsr, r0)
	r0 = r3
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	r6 = Mem0[sp + 12:word32]
	r7 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  MPU_xQueueGenericCreate_exit
MPU_xQueueGenericCreate_exit:


// MPU_xQueueGenericReset
// Return size: 0
void MPU_xQueueGenericReset()
MPU_xQueueGenericReset_entry:
	// succ:  l00008AB8
l00008AB8:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r5 = r0
	r6 = r1
	call fn00008560 (retsize: 0;)
	r1 = r6
	r4 = r0
	r0 = r5
	call fn0000062C (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008ADA
	// succ:  l00008AD2 l00008ADA
l00008AD2:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008ADA
l00008ADA:
	__msr(cpsr, r0)
	r0 = r3
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  MPU_xQueueGenericReset_exit
MPU_xQueueGenericReset_exit:


// fn00008AE0
// Return size: 0
void fn00008AE0()
fn00008AE0_entry:
	// succ:  l00008AE0
l00008AE0:
	sp = fp
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn00008AE0_exit
fn00008AE0_exit:


// MPU_xQueueGenericSend
// Return size: 0
void MPU_xQueueGenericSend()
MPU_xQueueGenericSend_entry:
	// succ:  l00008AE4
l00008AE4:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = lr
	r5 = r0
	r6 = r1
	r7 = r2
	r8 = r3
	call fn00008560 (retsize: 0;)
	r3 = r8
	r4 = r0
	r2 = r7
	r1 = r6
	r0 = r5
	call fn0000018C (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008B10
	// succ:  l00008B08 l00008B10
l00008B08:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008B10
l00008B10:
	__msr(cpsr, r0)
	r0 = r3
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  MPU_xQueueGenericSend_exit
MPU_xQueueGenericSend_exit:


// MPU_uxQueueMessagesWaiting
// Return size: 0
void MPU_uxQueueMessagesWaiting()
MPU_uxQueueMessagesWaiting_entry:
	// succ:  l00008B1C
l00008B1C:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r5 = r0
	call fn00008560 (retsize: 0;)
	r4 = r0
	r0 = r5
	call fn00000424 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008B3A
	// succ:  l00008B32 l00008B3A
l00008B32:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008B3A
l00008B3A:
	__msr(cpsr, r0)
	r0 = r3
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  MPU_uxQueueMessagesWaiting_exit
MPU_uxQueueMessagesWaiting_exit:


// MPU_uxQueueSpacesAvailable
// Return size: 0
void MPU_uxQueueSpacesAvailable()
MPU_uxQueueSpacesAvailable_entry:
	// succ:  l00008B44
l00008B44:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r5 = r0
	call fn00008560 (retsize: 0;)
	r4 = r0
	r0 = r5
	call fn00000438 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008B62
	// succ:  l00008B5A l00008B62
l00008B5A:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008B62
l00008B62:
	__msr(cpsr, r0)
	r0 = r3
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  MPU_uxQueueSpacesAvailable_exit
MPU_uxQueueSpacesAvailable_exit:


// fn00008B68
// Return size: 0
void fn00008B68()
fn00008B68_entry:
	// succ:  l00008B68
l00008B68:
	sp = fp
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn00008B68_exit
fn00008B68_exit:


// MPU_xQueueGenericReceive
// Return size: 0
void MPU_xQueueGenericReceive()
MPU_xQueueGenericReceive_entry:
	// succ:  l00008B6C
l00008B6C:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = lr
	r5 = r0
	r6 = r1
	r7 = r2
	r8 = r3
	call fn00008560 (retsize: 0;)
	r3 = r8
	r4 = r0
	r2 = r7
	r1 = r6
	r0 = r5
	call fn000002D4 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008B98
	// succ:  l00008B90 l00008B98
l00008B90:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008B98
l00008B98:
	__msr(cpsr, r0)
	r0 = r3
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  MPU_xQueueGenericReceive_exit
MPU_xQueueGenericReceive_exit:


// MPU_xQueuePeekFromISR
// Return size: 0
void MPU_xQueuePeekFromISR()
MPU_xQueuePeekFromISR_entry:
	// succ:  l00008BA4
l00008BA4:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r5 = r0
	r6 = r1
	call fn00008560 (retsize: 0;)
	r1 = r6
	r4 = r0
	r0 = r5
	call fn000002A0 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008BC6
	// succ:  l00008BBE l00008BC6
l00008BBE:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008BC6
l00008BC6:
	__msr(cpsr, r0)
	r0 = r3
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  MPU_xQueuePeekFromISR_exit
MPU_xQueuePeekFromISR_exit:


// MPU_xQueueGetMutexHolder
// Return size: 0
void MPU_xQueueGetMutexHolder()
MPU_xQueueGetMutexHolder_entry:
	// succ:  l00008BD0
l00008BD0:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r5 = r0
	call fn00008560 (retsize: 0;)
	r4 = r0
	r0 = r5
	call uxQueueMessagesWaitingFromISR (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008BEE
	// succ:  l00008BE6 l00008BEE
l00008BE6:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008BEE
l00008BEE:
	__msr(cpsr, r0)
	r0 = r3
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  MPU_xQueueGetMutexHolder_exit
MPU_xQueueGetMutexHolder_exit:


// MPU_xQueueCreateMutex
// Return size: 0
void MPU_xQueueCreateMutex()
MPU_xQueueCreateMutex_entry:
	// succ:  l00008BF8
l00008BF8:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r5 = r0
	call fn00008560 (retsize: 0;)
	r4 = r0
	r0 = r5
	call fn000006D8 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008C16
	// succ:  l00008C0E l00008C16
l00008C0E:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008C16
l00008C16:
	__msr(cpsr, r0)
	r0 = r3
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  MPU_xQueueCreateMutex_exit
MPU_xQueueCreateMutex_exit:


// MPU_xQueueTakeMutexRecursive
// Return size: 0
void MPU_xQueueTakeMutexRecursive()
MPU_xQueueTakeMutexRecursive_entry:
	// succ:  l00008C20
l00008C20:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r5 = r0
	r6 = r1
	call fn00008560 (retsize: 0;)
	r1 = r6
	r4 = r0
	r0 = r5
	call fn000005D0 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008C42
	// succ:  l00008C3A l00008C42
l00008C3A:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008C42
l00008C42:
	__msr(cpsr, r0)
	r0 = r3
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  MPU_xQueueTakeMutexRecursive_exit
MPU_xQueueTakeMutexRecursive_exit:


// MPU_xQueueGiveMutexRecursive
// Return size: 0
void MPU_xQueueGiveMutexRecursive()
MPU_xQueueGiveMutexRecursive_entry:
	// succ:  l00008C4C
l00008C4C:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r5 = r0
	call fn00008560 (retsize: 0;)
	r4 = r0
	r0 = r5
	call fn00000600 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008C6A
	// succ:  l00008C62 l00008C6A
l00008C62:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008C6A
l00008C6A:
	__msr(cpsr, r0)
	r0 = r3
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  MPU_xQueueGiveMutexRecursive_exit
MPU_xQueueGiveMutexRecursive_exit:


// MPU_vQueueDelete
// Return size: 0
void MPU_vQueueDelete()
MPU_vQueueDelete_entry:
	// succ:  l00008C74
l00008C74:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r5 = r0
	call fn00008560 (retsize: 0;)
	r4 = r0
	r0 = r5
	call fn00000450 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	branch Test(EQ,Z) l00008C90
	// succ:  l00008C88 l00008C90
l00008C88:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008C90
l00008C90:
	__msr(cpsr, r0)
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  MPU_vQueueDelete_exit
MPU_vQueueDelete_exit:


// MPU_pvPortMalloc
// Return size: 0
void MPU_pvPortMalloc()
MPU_pvPortMalloc_entry:
	// succ:  l00008C98
l00008C98:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r5 = r0
	call fn00008560 (retsize: 0;)
	r4 = r0
	r0 = r5
	call fn00001728 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008CB6
	// succ:  l00008CAE l00008CB6
l00008CAE:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008CB6
l00008CB6:
	__msr(cpsr, r0)
	r0 = r3
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  MPU_pvPortMalloc_exit
MPU_pvPortMalloc_exit:


// MPU_vPortFree
// Return size: 0
void MPU_vPortFree()
MPU_vPortFree_entry:
	// succ:  l00008CC0
l00008CC0:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r5 = r0
	call fn00008560 (retsize: 0;)
	r4 = r0
	r0 = r5
	call fn0000177C (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	branch Test(EQ,Z) l00008CDC
	// succ:  l00008CD4 l00008CDC
l00008CD4:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008CDC
l00008CDC:
	__msr(cpsr, r0)
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  MPU_vPortFree_exit
MPU_vPortFree_exit:


// MPU_vPortInitialiseBlocks
// Return size: 0
void MPU_vPortInitialiseBlocks()
MPU_vPortInitialiseBlocks_entry:
	// succ:  l00008CE4
l00008CE4:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	call fn00008560 (retsize: 0;)
	r4 = r0
	call vPortFree (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	branch Test(EQ,Z) l00008CFC
	// succ:  l00008CF4 l00008CFC
l00008CF4:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008CFC
l00008CFC:
	__msr(cpsr, r0)
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  MPU_vPortInitialiseBlocks_exit
MPU_vPortInitialiseBlocks_exit:


// MPU_xPortGetFreeHeapSize
// Return size: 0
void MPU_xPortGetFreeHeapSize()
MPU_xPortGetFreeHeapSize_entry:
	// succ:  l00008D04
l00008D04:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	call fn00008560 (retsize: 0;)
	r4 = r0
	call fn00001790 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008D1E
	// succ:  l00008D16 l00008D1E
l00008D16:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008D1E
l00008D1E:
	__msr(cpsr, r0)
	r0 = r3
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  MPU_xPortGetFreeHeapSize_exit
MPU_xPortGetFreeHeapSize_exit:


// MPU_xEventGroupCreate
// Return size: 0
void MPU_xEventGroupCreate()
MPU_xEventGroupCreate_entry:
	// succ:  l00008D28
l00008D28:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	call fn00008560 (retsize: 0;)
	r4 = r0
	call fn000017A4 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008D42
	// succ:  l00008D3A l00008D42
l00008D3A:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008D42
l00008D42:
	__msr(cpsr, r0)
	r0 = r3
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  MPU_xEventGroupCreate_exit
MPU_xEventGroupCreate_exit:


// MPU_xEventGroupWaitBits
// Return size: 0
void MPU_xEventGroupWaitBits()
MPU_xEventGroupWaitBits_entry:
	// succ:  l00008D4C
l00008D4C:
	sp = fp
	sp = sp - 28
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = r9
	Mem0[sp + 24:word32] = lr
	sp = sp - 12
	r5 = r0
	r6 = r1
	r8 = r2
	r9 = r3
	r7 = Mem0[sp + 40:word32]
	call fn00008560 (retsize: 0;)
	r3 = r9
	r4 = r0
	Mem0[sp:word32] = r7
	r2 = r8
	r1 = r6
	r0 = r5
	call fn000017C0 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008D7E
	// succ:  l00008D76 l00008D7E
l00008D76:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008D7E
l00008D7E:
	__msr(cpsr, r0)
	r0 = r3
	sp = sp + 12
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	r9 = Mem0[sp + 20:word32]
	sp = sp + 28
	return
	// succ:  MPU_xEventGroupWaitBits_exit
MPU_xEventGroupWaitBits_exit:


// MPU_xEventGroupClearBits
// Return size: 0
void MPU_xEventGroupClearBits()
MPU_xEventGroupClearBits_entry:
	// succ:  l00008D8C
l00008D8C:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r5 = r0
	r6 = r1
	call fn00008560 (retsize: 0;)
	r1 = r6
	r4 = r0
	r0 = r5
	call fn00001870 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008DAE
	// succ:  l00008DA6 l00008DAE
l00008DA6:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008DAE
l00008DAE:
	__msr(cpsr, r0)
	r0 = r3
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  MPU_xEventGroupClearBits_exit
MPU_xEventGroupClearBits_exit:


// MPU_xEventGroupSetBits
// Return size: 0
void MPU_xEventGroupSetBits()
MPU_xEventGroupSetBits_entry:
	// succ:  l00008DB8
l00008DB8:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r5 = r0
	r6 = r1
	call fn00008560 (retsize: 0;)
	r1 = r6
	r4 = r0
	r0 = r5
	call fn0000188C (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008DDA
	// succ:  l00008DD2 l00008DDA
l00008DD2:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008DDA
l00008DDA:
	__msr(cpsr, r0)
	r0 = r3
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  MPU_xEventGroupSetBits_exit
MPU_xEventGroupSetBits_exit:


// MPU_xEventGroupSync
// Return size: 0
void MPU_xEventGroupSync()
MPU_xEventGroupSync_entry:
	// succ:  l00008DE4
l00008DE4:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = lr
	r5 = r0
	r6 = r1
	r7 = r2
	r8 = r3
	call fn00008560 (retsize: 0;)
	r3 = r8
	r4 = r0
	r2 = r7
	r1 = r6
	r0 = r5
	call fn000018F4 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	r3 = r0
	branch Test(EQ,Z) l00008E10
	// succ:  l00008E08 l00008E10
l00008E08:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008E10
l00008E10:
	__msr(cpsr, r0)
	r0 = r3
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  MPU_xEventGroupSync_exit
MPU_xEventGroupSync_exit:


// MPU_vEventGroupDelete
// Return size: 0
void MPU_vEventGroupDelete()
MPU_vEventGroupDelete_entry:
	// succ:  l00008E1C
l00008E1C:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r5 = r0
	call fn00008560 (retsize: 0;)
	r4 = r0
	r0 = r5
	call fn000019A0 (retsize: 0;)
	NZCV = cond(r4 - 0x00000001)
	branch Test(EQ,Z) l00008E38
	// succ:  l00008E30 l00008E38
l00008E30:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
	// succ:  l00008E38
l00008E38:
	__msr(cpsr, r0)
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  MPU_vEventGroupDelete_exit
MPU_vEventGroupDelete_exit:


// fn00008E3C
// Return size: 0
void fn00008E3C()
fn00008E3C_entry:
	// succ:  l00008E3C
l00008E3C:
	sp = fp
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  fn00008E3C_exit
fn00008E3C_exit:


// xCoRoutineCreate
// Return size: 0
void xCoRoutineCreate()
xCoRoutineCreate_entry:
	// succ:  l00008E40
l00008E40:
	sp = fp
	sp = sp - 40
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = r6
	Mem0[sp + 16:word32] = r7
	Mem0[sp + 20:word32] = r8
	Mem0[sp + 24:word32] = r9
	Mem0[sp + 28:word32] = r10
	Mem0[sp + 32:word32] = fp
	Mem0[sp + 36:word32] = lr
	r9 = r0
	r0 = 0x00000038
	r5 = r1
	r10 = r2
	call fn00001728 (retsize: 0;)
	NZCV = cond(r0 - 0x00000000)
	branch Test(EQ,Z) l00008EE0
	// succ:  l00008E54 l00008EE0
l00008E54:
	r7 = Mem0[0x00008EF0:word32]
	r4 = r0
	r3 = Mem0[r7:word32]
	branch r3 == 0x00000000 l00008EAC
	// succ:  l00008E5C l00008EAC
l00008E5C:
	r8 = r7 + 0x00000004
	NZCV = cond(r5 - 0x00000001)
	branch Test(ULT,C) l00008E66
	// succ:  l00008E64_1 l00008E66
l00008E64_1:
	r5 = 0x00000001
	// succ:  l00008E66
l00008E66:
	r3 = 0x00000000
	r6 = r4
	Mem0[r4 + 104:word16] = (uint16) r3
	Mem0[r4 + 44:word32] = r5
	Mem0[r4 + 48:word32] = r10
	Mem0[r6:word32] = r9
	r6 = r6 + 4
	r0 = r6
	call fn000082E4 (retsize: 0;)
	r0 = r4 + 0x00000018
	call fn000082E4 (retsize: 0;)
	r0 = Mem0[r4 + 44:word32]
	r3 = Mem0[r7 + 112:word32]
	r5 = 0x00000002 - r5
	NZCV = cond(r0 - r3)
	branch Test(ULE,ZC) l00008E92
	// succ:  l00008E90_1 l00008E92
l00008E90_1:
	Mem0[r7 + 112:word32] = r0
	// succ:  l00008E92
l00008E92:
	r0 = r0 + (r0 << 0x00000002)
	r0 = r8 + (r0 << 0x00000002)
	Mem0[r4 + 24:word32] = r5
	Mem0[r4 + 16:word32] = r4
	Mem0[r4 + 36:word32] = r4
	r1 = r6
	call fn000082EC (retsize: 0;)
	r0 = 0x00000001
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	r6 = Mem0[sp + 12:word32]
	r7 = Mem0[sp + 16:word32]
	r8 = Mem0[sp + 20:word32]
	r9 = Mem0[sp + 24:word32]
	r10 = Mem0[sp + 28:word32]
	fp = Mem0[sp + 32:word32]
	sp = sp + 40
	return
	// succ:  xCoRoutineCreate_exit
l00008EAC:
	r8 = r7
	Mem0[r8:word32] = r0
	r8 = r8 + 4
	r0 = r8
	call fn000082CC (retsize: 0;)
	fp = r7 + 0x0000002C
	r0 = r7 + 0x00000018
	call fn000082CC (retsize: 0;)
	r6 = r7 + 0x00000040
	r0 = fp
	call fn000082CC (retsize: 0;)
	r0 = r6
	call fn000082CC (retsize: 0;)
	r0 = r7 + 0x00000054
	call fn000082CC (retsize: 0;)
	Mem0[r7 + 104:word32] = fp
	// succ:  l00008EE0
l00008EE0:
	Mem0[r7 + 108:word32] = r6
	goto l00008E5C
	// succ:  l00008E5C
xCoRoutineCreate_exit:


// fn00008EEC
// Return size: 0
void fn00008EEC()
fn00008EEC_entry:
	// succ:  l00008EEC
l00008EEC:
	sp = fp
	r4 = r7 << 31
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l00008EEE_thunk_vCoRoutineAddToDelayedList
l00008EEE_thunk_vCoRoutineAddToDelayedList:
	call vCoRoutineAddToDelayedList (retsize: 0;)
	return
	// succ:  fn00008EEC_exit
fn00008EEC_exit:


// vCoRoutineAddToDelayedList
// Return size: 0
void vCoRoutineAddToDelayedList()
vCoRoutineAddToDelayedList_entry:
	// succ:  l00008EF0
l00008EF0:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r6 = r1
	r4 = Mem0[0x00008F2C:word32]
	r3 = Mem0[r4:word32]
	r5 = Mem0[r4 + 116:word32]
	r5 = r5 + r0
	NZCV = cond(r5)
	r0 = r3 + 0x00000004
	call fn0000833C (retsize: 0;)
	r3 = Mem0[r4 + 116:word32]
	r1 = Mem0[r4:word32]
	NZCV = cond(r5 - r3)
	Mem0[r1 + 4:word32] = r5
	branch Test(UGE,C) l00008F0E
	// succ:  l00008F0C_1 l00008F0E
l00008F0C_1:
	r0 = Mem0[r4 + 108:word32]
	// succ:  l00008F0E
l00008F0E:
	r0 = Mem0[r4 + 104:word32]
	r1 = r1 + 0x00000004
	NZCV = cond(r1)
	call fn00008308 (retsize: 0;)
	branch r6 == 0x00000000 l00008F26
	// succ:  l00008F18 l00008F26
l00008F18:
	r1 = Mem0[r4:word32]
	r0 = r6
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	lr = Mem0[sp + 12:word32]
	sp = sp + 16
	r1 = r1 + 0x00000018
	NZCV = cond(r1)
	// succ:  l00008F22_thunk_fn00008308
l00008F22_thunk_fn00008308:
	call fn00008308 (retsize: 0;)
	return
	// succ:  vCoRoutineAddToDelayedList_exit
l00008F26:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  vCoRoutineAddToDelayedList_exit
vCoRoutineAddToDelayedList_exit:


// fn00008F28
// Return size: 0
void fn00008F28()
fn00008F28_entry:
	// succ:  l00008F28
l00008F28:
	sp = fp
	r4 = r7 << 31
	NZC = cond(r4)
	r0 = 0x00000000
	// succ:  l00008F2A_thunk_vCoRoutineSchedule
l00008F2A_thunk_vCoRoutineSchedule:
	call vCoRoutineSchedule (retsize: 0;)
	return
	// succ:  fn00008F28_exit
fn00008F28_exit:


// vCoRoutineSchedule
// Return size: 0
void vCoRoutineSchedule()
vCoRoutineSchedule_entry:
	// succ:  l00008F2C
l00008F2C:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = lr
	r5 = Mem0[0x0000908C:word32]
	r3 = Mem0[r5 + 84:word32]
	branch r3 == 0x00000000 l00008F82
	// succ:  l00008F36 l00008F82
l00008F36:
	r7 = 0x00000000
	r8 = r5 + 0x00000004
	r3 = 0x000000BF
	__msr(cpsr, r3)
l00008F82:
	call fn00008900 (retsize: 0;)
	r7 = 0x00000000
	r2 = Mem0[r5 + 120:word32]
	r3 = Mem0[r5 + 116:word32]
	r0 = r0 - r2
	r8 = Mem0[0x00009096:word32]
	// succ:  l00008F90
l00008F90:
	Mem0[r5 + 124:word32] = r0
	NZCV = cond(r0 - 0x00000000)
	branch Test(EQ,Z) l00009010
	// succ:  l00008F98 l00009010
l00008F98:
	r3 = r3 + 0x00000001
	NZCV = cond(r3)
	r0 = r0 - 0x00000001
	NZCV = cond(r0)
	Mem0[r5 + 116:word32] = r3
	Mem0[r5 + 124:word32] = r0
	NZCV = cond(r3 - 0x00000000)
	branch Test(EQ,Z) l00009048
	// succ:  l00008FA4 l00009048
l00008FA4:
	r2 = Mem0[r5 + 104:word32]
	r1 = Mem0[r2:word32]
	NZCV = cond(r1 - 0x00000000)
	branch Test(EQ,Z) l00008FAA_thunk_fn00009190
	goto l00008FAC
	// succ:  l00008FAC l00008FAA_thunk_fn00009190
l00008FAA_thunk_fn00009190:
	call fn00009190 (retsize: 0;)
	return
	// succ:  vCoRoutineSchedule_exit
l00008FAC:
	r2 = Mem0[r2 + 12:word32]
	r4 = Mem0[r2 + 12:word32]
	r2 = Mem0[r4 + 4:word32]
	NZCV = cond(r3 - r2)
	branch Test(UGE,C) l00008FC0
	// succ:  l00008FB6 l00008FC0
l00008FB6:
	goto l00008F90
	// succ:  l00008F90
l00008FC0:
	NZCV = cond(r2 - r3)
	branch Test(UGT,ZC) l0000900A
	// succ:  l00008FC4 l0000900A
l00008FC4:
	r3 = 0x000000BF
	__msr(cpsr, r3)
l0000900A:
	branch Test(NE,Z) l0000900A_thunk_fn000091B4
	goto l0000900C
	// succ:  l0000900C l0000900A_thunk_fn000091B4
l0000900A_thunk_fn000091B4:
	call fn000091B4 (retsize: 0;)
	return
	// succ:  vCoRoutineSchedule_exit
l0000900C:
	r3 = Mem0[r5 + 116:word32]
	r0 = Mem0[r5 + 124:word32]
	// succ:  l00009010
l00009010:
	NZCV = cond(r0 - 0x00000000)
	branch Test(NE,Z) l00009012_thunk_GPIOIntTypeGet
	goto l00009014
	// succ:  l00009014 l00009012_thunk_GPIOIntTypeGet
l00009012_thunk_GPIOIntTypeGet:
	call GPIOIntTypeGet (retsize: 0;)
	return
	// succ:  vCoRoutineSchedule_exit
l00009014:
	r1 = Mem0[r5 + 112:word32]
	Mem0[r5 + 120:word32] = r3
	r3 = r1 << 2
	NZC = cond(r3)
	r2 = r3 + r1
	r2 = r5 + (r2 << 0x00000002)
	r2 = Mem0[r2 + 4:word32]
	NZCV = cond(r2 - 0x00000000)
	branch Test(NE,Z) l00009080
	// succ:  l00009026 l00009080
l00009026:
	branch r1 == 0x00000000 l00009080
	// succ:  l00009028 l00009080
l00009028:
	r2 = r1 - 0x00000001
	r3 = r2 << 2
	NZC = cond(r3)
	r0 = r3 + r2
	r0 = r5 + (r0 << 0x00000002)
	r0 = Mem0[r0 + 4:word32]
	branch r0 != 0x00000000 l00009056
	// succ:  l00009036 l00009056
l00009036:
	branch r2 == 0x00000000 l00009046
	// succ:  l00009038 l00009046
l00009038:
	r2 = r1 - 0x00000002
	r3 = r2 << 2
	NZC = cond(r3)
	r1 = r3 + r2
	r1 = r5 + (r1 << 0x00000002)
	r1 = Mem0[r1 + 4:word32]
	branch r1 != 0x00000000 l00009056
	// succ:  l00009046 l00009056
l00009046:
	Mem0[r5 + 112:word32] = r2
	// succ:  l00009048
l00009048:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  vCoRoutineSchedule_exit
l00009056:
	Mem0[r5 + 112:word32] = r2
	r3 = r3 + r2
	NZCV = cond(r3)
	r3 = r3 << 2
	NZC = cond(r3)
	r1 = r5 + r3
	r2 = Mem0[r1 + 8:word32]
	r0 = Mem0[0x00009090:word32]
	r2 = Mem0[r2 + 4:word32]
	r3 = r3 + r0
	NZCV = cond(r3)
	NZCV = cond(r2 - r3)
	Mem0[r1 + 8:word32] = r2
	branch Test(NE,Z) l0000906E
	// succ:  l0000906C_1 l0000906E
l0000906C_1:
	r2 = Mem0[r2 + 4:word32]
	// succ:  l0000906E
l0000906E:
	r0 = Mem0[r2 + 12:word32]
	branch Test(NE,Z) l00009074
	// succ:  l00009072_1 l00009074
l00009072_1:
	Mem0[r1 + 8:word32] = r2
	// succ:  l00009074
l00009074:
	Mem0[r5:word32] = r0
	r3 = Mem0[r0:word32]
	r1 = Mem0[r0 + 48:word32]
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	lr = Mem0[sp + 20:word32]
	sp = sp + 24
	call r3 (retsize: 0;)
	return
	// succ:  vCoRoutineSchedule_exit
l00009080:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  vCoRoutineSchedule_exit
vCoRoutineSchedule_exit:


// fn00009090
// Return size: 0
void fn00009090()
fn00009090_entry:
	// succ:  l00009090
l00009090:
	sp = fp
	r0 = r0
	r0 = 0x00000000
	// succ:  l00009092_thunk_xCoRoutineRemoveFromEventList
l00009092_thunk_xCoRoutineRemoveFromEventList:
	call xCoRoutineRemoveFromEventList (retsize: 0;)
	return
	// succ:  fn00009090_exit
fn00009090_exit:


// xCoRoutineRemoveFromEventList
// Return size: 0
void xCoRoutineRemoveFromEventList()
xCoRoutineRemoveFromEventList_entry:
	// succ:  l00009094
l00009094:
	sp = fp
	r3 = Mem0[r0 + 12:word32]
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r4 = Mem0[r3 + 12:word32]
	r5 = Mem0[0x000090C6:word32]
	r6 = r4 + 0x00000018
	r0 = r6
	call fn0000833C (retsize: 0;)
	r0 = r5 + 0x00000054
	r1 = r6
	call fn000082EC (retsize: 0;)
	r3 = Mem0[r5:word32]
	r0 = Mem0[r4 + 44:word32]
	r3 = Mem0[r3 + 44:word32]
	NZCV = cond(r0 - r3)
	branch Test(UGE,C) l000090BC
	// succ:  l000090BA_1 l000090BC
l000090BA_1:
	r0 = 0x00000000
	// succ:  l000090BC
l000090BC:
	r0 = 0x00000001
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  xCoRoutineRemoveFromEventList_exit
xCoRoutineRemoveFromEventList_exit:


// GPIOGetIntNumber
// Return size: 0
void GPIOGetIntNumber()
GPIOGetIntNumber_entry:
	// succ:  l000090C4
l000090C4:
	sp = fp
	r3 = Mem0[0x00009108:word32]
	NZCV = cond(r0 - r3)
	branch Test(EQ,Z) l000090FA
	// succ:  l000090CA l000090FA
l000090CA:
	branch Test(UGT,ZC) l000090DA
	// succ:  l000090CC l000090DA
l000090CC:
	NZCV = cond(r0 - 0x40004000)
	branch Test(EQ,Z) l000090F6
	// succ:  l000090D2 l000090F6
l000090D2:
	r3 = r3 - 0x00001000
	NZCV = cond(r0 - r3)
	branch Test(NE,Z) l000090EC
	// succ:  l000090DA l000090EC
l000090DA:
	r0 = 0x00000011
	call lr (retsize: 0;)
	return
	// succ:  GPIOGetIntNumber_exit
l000090EC:
	r0 = 0x00000014
	call lr (retsize: 0;)
	return
	// succ:  GPIOGetIntNumber_exit
l000090F6:
	r0 = 0x00000013
	call lr (retsize: 0;)
	return
	// succ:  GPIOGetIntNumber_exit
l000090FA:
	r0 = 0x00000010
	call lr (retsize: 0;)
	return
	// succ:  GPIOGetIntNumber_exit
GPIOGetIntNumber_exit:


// fn00009108
// Return size: 0
void fn00009108()
fn00009108_entry:
	// succ:  l00009108
l00009108:
	sp = fp
	Mem0[r0:byte] = (byte) r0
	r0 = r0 & r0
	NZC = cond(r0)
	// succ:  l0000910A_thunk_GPIODirModeSet
l0000910A_thunk_GPIODirModeSet:
	call GPIODirModeSet (retsize: 0;)
	return
	// succ:  fn00009108_exit
fn00009108_exit:


// GPIODirModeSet
// Return size: 0
void GPIODirModeSet()
GPIODirModeSet_entry:
	// succ:  l0000910C
l0000910C:
	sp = fp
	r3 = Mem0[r0 + 1024:word32]
	NZC = cond(r2 & 0x00000001)
	branch Test(EQ,Z) l00009118
	// succ:  l00009116_1 l00009118
l00009116_1:
	r3 = r3 | r1
	// succ:  l00009118
l00009118:
GPIODirModeSet_exit:


// GPIODirModeGet
// Return size: 0
void GPIODirModeGet()
GPIODirModeGet_entry:
	// succ:  l00009134
l00009134:
	sp = fp
	r3 = 0x00000001
	sp = sp - 4
	Mem0[sp:word32] = r4
	r1 = r3 << r1
	r4 = Mem0[r0 + 1024:word32]
	r1 = (uint32) (byte) r1
	r2 = Mem0[r0 + 1056:word32]
	r4 = r4 + r1 + C
	NZCV = cond(r4)
	branch Test(NE,Z) l0000914C
	// succ:  l0000914A_1 l0000914C
l0000914A_1:
	r3 = 0x00000000
	// succ:  l0000914C
l0000914C:
	r2 = r2 + r1 + C
	NZCV = cond(r2)
	branch Test(EQ,Z) l00009152
	// succ:  l00009150_1 l00009152
l00009150_1:
	r0 = 0x00000002
	// succ:  l00009152
l00009152:
	r0 = 0x00000000
	r4 = Mem0[sp:word32]
	sp = sp + 4
	r0 = r0 | r3
	NZC = cond(r0)
	call lr (retsize: 0;)
	return
	// succ:  GPIODirModeGet_exit
GPIODirModeGet_exit:


// GPIOIntTypeSet
// Return size: 0
void GPIOIntTypeSet()
GPIOIntTypeSet_entry:
	// succ:  l0000915C
l0000915C:
	sp = fp
	r3 = Mem0[r0 + 1032:word32]
	NZC = cond(r2 & 0x00000001)
	branch Test(EQ,Z) l00009168
	// succ:  l00009166_1 l00009168
l00009166_1:
	r3 = r3 | r1
	// succ:  l00009168
l00009168:
GPIOIntTypeSet_exit:


// fn00009190
// Return size: 0
void fn00009190()
fn00009190_entry:
	// succ:  l00009190
l00009190:
	sp = fp
	r4 = r1 >> 16
	NZC = cond(r4)
	call lr (retsize: 0;)
	return
	// succ:  fn00009190_exit
l00009190:
fn00009190_exit:


// GPIOIntTypeGet
// Return size: 0
void GPIOIntTypeGet()
GPIOIntTypeGet_entry:
	// succ:  l00009194
l00009194:
	sp = fp
	r3 = 0x00000001
	r2 = Mem0[r0 + 1032:word32]
	r1 = r3 << r1
	r1 = (uint32) (byte) r1
	r3 = Mem0[r0 + 1028:word32]
	r2 = r2 + r1 + C
	NZCV = cond(r2)
	r0 = Mem0[r0 + 1036:word32]
	branch Test(EQ,Z) l000091AE
	// succ:  l000091AC_1 l000091AE
l000091AC_1:
	r2 = 0x00000001
	// succ:  l000091AE
l000091AE:
	r2 = 0x00000000
	r3 = r3 + r1 + C
	NZCV = cond(r3)
	// succ:  l000091B0_thunk_fn000091B4
l000091B0_thunk_fn000091B4:
	call fn000091B4 (retsize: 0;)
	return
	// succ:  GPIOIntTypeGet_exit
GPIOIntTypeGet_exit:


// fn000091B4
// Return size: 0
void fn000091B4()
fn000091B4_entry:
	// succ:  l000091B4
l000091B4:
	sp = fp
	r3 = 0x00000002
	goto l000091B4_thunk_fn000091B6
	// succ:  l000091B4_thunk_fn000091B6
l000091B4:
	branch Test(EQ,Z) l000091B6
	// succ:  l000091B4_1 l000091B4_thunk_fn000091B6
l000091B4_1:
	r3 = 0x00000002
	goto l000091B4_thunk_fn000091B6
	// succ:  l000091B4_thunk_fn000091B6
l000091B4_thunk_fn000091B6:
	call fn000091B6 (retsize: 0;)
	return
	// succ:  fn000091B4_exit
l000091B4_thunk_fn000091B6:
	call fn000091B6 (retsize: 0;)
	return
	// succ:  fn000091B4_exit
l000091B4_thunk_fn000091B6:
	call fn000091B6 (retsize: 0;)
	return
	// succ:  fn000091B4_exit
fn000091B4_exit:


// fn000091B6
// Return size: 0
void fn000091B6()
fn000091B6_entry:
	// succ:  l000091B6
l000091B6:
	sp = v3
	r3 = 0x00000000
	r0 = r0 + r1 + C
	NZCV = cond(r0)
	branch Test(EQ,Z) l000091BE
	// succ:  l000091BC_1 l000091BE
l000091BC_1:
	r0 = 0x00000004
	// succ:  l000091BE
l000091BE:
	r0 = 0x00000000
	r3 = r3 | r2
	NZC = cond(r3)
	r0 = r0 | r3
	NZC = cond(r0)
	// succ:  l000091C4_in_GPIOIntTypeGet
l000091C4_in_GPIOIntTypeGet:
	call lr (retsize: 0;)
	return
	// succ:  fn000091B6_exit
fn000091B6_exit:


// fn000091C4
// Return size: 0
void fn000091C4()
fn000091C4_entry:
	// succ:  l000091C4
l000091C4:
	sp = fp
	call lr (retsize: 0;)
	return
	// succ:  fn000091C4_exit
fn000091C4_exit:


// GPIOPadConfigSet
// Return size: 0
void GPIOPadConfigSet()
GPIOPadConfigSet_entry:
	// succ:  l000091C8
l000091C8:
	sp = fp
	sp = sp - 4
	Mem0[sp:word32] = r4
	r4 = Mem0[r0 + 1280:word32]
	NZC = cond(r2 & 0x00000001)
	branch Test(EQ,Z) l000091D6
	// succ:  l000091D4_1 l000091D6
l000091D4_1:
	r4 = r4 | r1
	// succ:  l000091D6
l000091D6:
GPIOPadConfigSet_exit:


// GPIOPadConfigGet
// Return size: 0
void GPIOPadConfigGet()
GPIOPadConfigGet_entry:
	// succ:  l0000925C
l0000925C:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	r4 = 0x00000001
	r5 = Mem0[r0 + 1280:word32]
	r1 = r4 << r1
	r1 = (uint32) (byte) r1
	r4 = Mem0[r0 + 1284:word32]
	r5 = r5 + r1 + C
	NZCV = cond(r5)
	r5 = Mem0[r0 + 1288:word32]
	branch Test(EQ,Z) l00009278
	// succ:  l00009276_1 l00009278
l00009276_1:
	r7 = 0x00000001
	// succ:  l00009278
l00009278:
	r7 = 0x00000000
	r4 = r4 + r1 + C
	NZCV = cond(r4)
	r4 = Mem0[r0 + 1304:word32]
	branch Test(EQ,Z) l00009284
	// succ:  l00009282_1 l00009284
l00009282_1:
	r6 = 0x00000002
	// succ:  l00009284
l00009284:
	r6 = 0x00000000
	r5 = r5 + r1 + C
	NZCV = cond(r5)
	branch Test(EQ,Z) l0000928C
	// succ:  l0000928A_1 l0000928C
l0000928A_1:
	r5 = 0x00000004
	// succ:  l0000928C
l0000928C:
	r5 = 0x00000000
	r4 = r4 + r1 + C
	NZCV = cond(r4)
	branch Test(EQ,Z) l00009294
	// succ:  l00009292_1 l00009294
l00009292_1:
	r4 = 0x00000008
	// succ:  l00009294
l00009294:
	r4 = 0x00000000
	r6 = r6 | r7
	NZC = cond(r6)
	r5 = r5 | r6
	NZC = cond(r5)
	r4 = r4 | r5
	NZC = cond(r4)
	Mem0[r2:word32] = r4
	r2 = Mem0[r0 + 1292:word32]
	r4 = Mem0[r0 + 1296:word32]
	r1 = r1 + r2 + C
	NZCV = cond(r1)
	r6 = Mem0[r0 + 1300:word32]
	branch Test(EQ,Z) l000092B0
	// succ:  l000092AE_1 l000092B0
l000092AE_1:
	r5 = 0x00000001
	// succ:  l000092B0
l000092B0:
	r2 = Mem0[r0 + 1308:word32]
	branch Test(NE,Z) l000092B8
	// succ:  l000092B6_1 l000092B8
l000092B6_1:
	r5 = 0x00000000
	// succ:  l000092B8
l000092B8:
	r1 = r1 + r4 + C
	NZCV = cond(r1)
	branch Test(EQ,Z) l000092BE
	// succ:  l000092BC_1 l000092BE
l000092BC_1:
	r4 = 0x00000002
	// succ:  l000092BE
l000092BE:
	r4 = 0x00000000
	r1 = r1 + r6 + C
	NZCV = cond(r1)
	branch Test(EQ,Z) l000092C6
	// succ:  l000092C4_1 l000092C6
l000092C4_1:
	r0 = 0x00000004
	// succ:  l000092C6
l000092C6:
	r0 = 0x00000000
	r1 = r1 + r2 + C
	NZCV = cond(r1)
	branch Test(EQ,Z) l000092CE
	// succ:  l000092CC_1 l000092CE
l000092CC_1:
	r2 = 0x00000008
	// succ:  l000092CE
l000092CE:
	r2 = 0x00000000
	r1 = r4 | r5 << 0x00000000
	r1 = r1 | r0
	NZC = cond(r1)
	r2 = r2 | r1
	NZC = cond(r2)
	Mem0[r3:word32] = r2
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	sp = sp + 16
	call lr (retsize: 0;)
	return
	// succ:  GPIOPadConfigGet_exit
GPIOPadConfigGet_exit:


// GPIOPinIntEnable
// Return size: 0
void GPIOPinIntEnable()
GPIOPinIntEnable_entry:
	// succ:  l000092E0
l000092E0:
	sp = fp
	r3 = Mem0[r0 + 1040:word32]
	r1 = r1 | r3
	NZC = cond(r1)
	Mem0[r0 + 1040:word32] = r1
	call lr (retsize: 0;)
	return
	// succ:  GPIOPinIntEnable_exit
GPIOPinIntEnable_exit:


// GPIOPinIntDisable
// Return size: 0
void GPIOPinIntDisable()
GPIOPinIntDisable_entry:
	// succ:  l000092EC
l000092EC:
	sp = fp
	r3 = Mem0[r0 + 1040:word32]
	r1 = r3 & ~(r1 << 0x00000000)
	Mem0[r0 + 1040:word32] = r1
	call lr (retsize: 0;)
	return
	// succ:  GPIOPinIntDisable_exit
GPIOPinIntDisable_exit:


// GPIOPinIntStatus
// Return size: 0
void GPIOPinIntStatus()
GPIOPinIntStatus_entry:
	// succ:  l000092FC
l000092FC:
	sp = fp
	branch r1 != 0x00000000 l00009304
	// succ:  l000092FE l00009304
l000092FE:
	r0 = Mem0[r0 + 1044:word32]
	call lr (retsize: 0;)
	return
	// succ:  GPIOPinIntStatus_exit
l00009304:
	r0 = Mem0[r0 + 1048:word32]
	call lr (retsize: 0;)
	return
	// succ:  GPIOPinIntStatus_exit
GPIOPinIntStatus_exit:


// GPIOPinIntClear
// Return size: 0
void GPIOPinIntClear()
GPIOPinIntClear_entry:
	// succ:  l0000930C
l0000930C:
	sp = fp
	Mem0[r0 + 1052:word32] = r1
	call lr (retsize: 0;)
	return
	// succ:  GPIOPinIntClear_exit
GPIOPinIntClear_exit:


// GPIOPortIntRegister
// Return size: 0
void GPIOPortIntRegister()
GPIOPortIntRegister_entry:
	// succ:  l00009314
l00009314:
	sp = fp
	r3 = Mem0[0x000093AC:word32]
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	NZCV = cond(r0 - r3)
	branch Test(EQ,Z) l00009392
	// succ:  l0000931C l00009392
l0000931C:
	branch Test(UGT,ZC) l0000933A
	// succ:  l0000931E l0000933A
l0000931E:
	NZCV = cond(r0 - 0x40004000)
	branch Test(EQ,Z) l00009380
	// succ:  l00009324 l00009380
l00009324:
	r3 = r3 - 0x00001000
	NZCV = cond(r0 - r3)
	branch Test(NE,Z) l0000935A
	// succ:  l0000932C l0000935A
l0000932C:
	r4 = 0x00000011
	r0 = r4
	call IntMasterDisable (retsize: 0;)
	r0 = r4
	r4 = Mem0[sp:word32]
	lr = Mem0[sp + 4:word32]
	sp = sp + 8
	// succ:  l0000933A
l0000933A:
	call fn00C095D8 (retsize: 0;)
	return
	// succ:  GPIOPortIntRegister_exit
l0000935A:
	call fn00C095D8 (retsize: 0;)
	return
	// succ:  GPIOPortIntRegister_exit
l00009380:
	call fn00C095D8 (retsize: 0;)
	return
	// succ:  GPIOPortIntRegister_exit
l00009392:
	call fn00C095D8 (retsize: 0;)
	return
	// succ:  GPIOPortIntRegister_exit
GPIOPortIntRegister_exit:


// GPIOPortIntUnregister
// Return size: 0
void GPIOPortIntUnregister()
GPIOPortIntUnregister_entry:
	// succ:  l000093B0
l000093B0:
	sp = fp
	r3 = Mem0[0x00009448:word32]
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	NZCV = cond(r0 - r3)
	branch Test(EQ,Z) l0000942E
	// succ:  l000093B8 l0000942E
l000093B8:
	branch Test(UGT,ZC) l000093D6
	// succ:  l000093BA l000093D6
l000093BA:
	NZCV = cond(r0 - 0x40004000)
	branch Test(EQ,Z) l0000941C
	// succ:  l000093C0 l0000941C
l000093C0:
	r3 = r3 - 0x00001000
	NZCV = cond(r0 - r3)
	branch Test(NE,Z) l000093F6
	// succ:  l000093C8 l000093F6
l000093C8:
	r4 = 0x00000011
	r0 = r4
	call fn00009634 (retsize: 0;)
	r0 = r4
	r4 = Mem0[sp:word32]
	lr = Mem0[sp + 4:word32]
	sp = sp + 8
	// succ:  l000093D6
l000093D6:
	call fn00C09534 (retsize: 0;)
	return
	// succ:  GPIOPortIntUnregister_exit
l000093F6:
	call fn00C09534 (retsize: 0;)
	return
	// succ:  GPIOPortIntUnregister_exit
l0000941C:
	call fn00C09534 (retsize: 0;)
	return
	// succ:  GPIOPortIntUnregister_exit
l0000942E:
	call fn00C09534 (retsize: 0;)
	return
	// succ:  GPIOPortIntUnregister_exit
GPIOPortIntUnregister_exit:


// GPIOPinRead
// Return size: 0
void GPIOPinRead()
GPIOPinRead_entry:
	// succ:  l0000944C
l0000944C:
	sp = fp
	r0 = Mem0[r0 + (r1 << 2):word32]
	call lr (retsize: 0;)
	return
	// succ:  GPIOPinRead_exit
GPIOPinRead_exit:


// fn00009450
// Return size: 0
void fn00009450()
fn00009450_entry:
	// succ:  l00009450
l00009450:
	sp = fp
	call lr (retsize: 0;)
	return
	// succ:  fn00009450_exit
fn00009450_exit:


// GPIOPinWrite
// Return size: 0
void GPIOPinWrite()
GPIOPinWrite_entry:
	// succ:  l00009454
l00009454:
	sp = fp
	Mem0[r0 + (r1 << 2):word32] = r2
	call lr (retsize: 0;)
	return
	// succ:  GPIOPinWrite_exit
GPIOPinWrite_exit:


// GPIOPinTypeComparator
// Return size: 0
void GPIOPinTypeComparator()
GPIOPinTypeComparator_entry:
	// succ:  l0000945C
l0000945C:
	sp = fp
	sp = sp - 12
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
GPIOPinTypeComparator_exit:


// fn0000947C
// Return size: 0
void fn0000947C()
fn0000947C_entry:
	// succ:  l0000947C
l0000947C:
	sp = fp
	__breakpoint()
fn0000947C_exit:


// GPIOPinTypeI2C
// Return size: 0
void GPIOPinTypeI2C()
GPIOPinTypeI2C_entry:
	goto l00009480
	// succ:  l00009480
l000091C4_in_GPIOPinTypeI2C:
	call lr (retsize: 0;)
	return
	// succ:  GPIOPinTypeI2C_exit
l00009480:
	sp = fp
	sp = sp - 12
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	r5 = r1
	r2 = Mem0[r0 + 1024:word32]
	r3 = 0x0000000B
	r2 = r2 & ~(r1 << 0x00000000)
	Mem0[r0 + 1024:word32] = r2
	r6 = Mem0[r0 + 1056:word32]
	r2 = 0x00000001
	r5 = r5 | r6
	NZC = cond(r5)
	Mem0[r0 + 1056:word32] = r5
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 12
	goto l000091C4_in_GPIOPinTypeI2C
	// succ:  l000091C4_in_GPIOPinTypeI2C
GPIOPinTypeI2C_exit:


// GPIOPinTypeQEI
// Return size: 0
void GPIOPinTypeQEI()
GPIOPinTypeQEI_entry:
	// succ:  l000094A4
l000094A4:
	sp = fp
	sp = sp - 12
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	r5 = r1
	r2 = Mem0[r0 + 1024:word32]
	r3 = 0x0000000A
	r2 = r2 & ~(r1 << 0x00000000)
	Mem0[r0 + 1024:word32] = r2
	r6 = Mem0[r0 + 1056:word32]
	r2 = 0x00000001
	r5 = r5 | r6
	NZC = cond(r5)
	Mem0[r0 + 1056:word32] = r5
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 12
	// succ:  l000094C2_thunk_fn000094C4
l000094C2_thunk_fn000094C4:
	call fn000094C4 (retsize: 0;)
	return
	// succ:  GPIOPinTypeQEI_exit
GPIOPinTypeQEI_exit:


// fn000094C4
// Return size: 0
void fn000094C4()
fn000094C4_entry:
	// succ:  l000094C4
l000094C4:
	sp = fp
	goto l000094C4_thunk_fn000091C4
	// succ:  l000094C4_thunk_fn000091C4
l000094C4:
l000094C4_thunk_fn000091C4:
	call fn000091C4 (retsize: 0;)
	return
	// succ:  fn000094C4_exit
fn000094C4_exit:


// GPIOPinTypeUART
// Return size: 0
void GPIOPinTypeUART()
GPIOPinTypeUART_entry:
	goto l000094C8
	// succ:  l000094C8
l000091C4_in_GPIOPinTypeUART:
	call lr (retsize: 0;)
	return
	// succ:  GPIOPinTypeUART_exit
l000094C8:
	sp = fp
	sp = sp - 12
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	r5 = r1
	r2 = Mem0[r0 + 1024:word32]
	r3 = 0x00000008
	r2 = r2 & ~(r1 << 0x00000000)
	Mem0[r0 + 1024:word32] = r2
	r6 = Mem0[r0 + 1056:word32]
	r2 = 0x00000001
	r5 = r5 | r6
	NZC = cond(r5)
	Mem0[r0 + 1056:word32] = r5
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 12
	goto l000091C4_in_GPIOPinTypeUART
	// succ:  l000091C4_in_GPIOPinTypeUART
GPIOPinTypeUART_exit:


// GPIOPinTypeTimer
// Return size: 0
void GPIOPinTypeTimer()
GPIOPinTypeTimer_entry:
	// succ:  l000094EC
l000094EC:
	sp = fp
	// succ:  l000094EC_thunk_fn000094C4
l000094EC_thunk_fn000094C4:
	call fn000094C4 (retsize: 0;)
	return
	// succ:  GPIOPinTypeTimer_exit
GPIOPinTypeTimer_exit:


// GPIOPinTypeSSI
// Return size: 0
void GPIOPinTypeSSI()
GPIOPinTypeSSI_entry:
	// succ:  l000094F0
l000094F0:
	sp = fp
	// succ:  l000094F0_thunk_fn000094C4
l000094F0_thunk_fn000094C4:
	call fn000094C4 (retsize: 0;)
	return
	// succ:  GPIOPinTypeSSI_exit
GPIOPinTypeSSI_exit:


// GPIOPinTypePWM
// Return size: 0
void GPIOPinTypePWM()
GPIOPinTypePWM_entry:
	goto l000094F4
	// succ:  l000094F4
l0000947E_thunk_GPIOPinTypeI2C:
	call GPIOPinTypeI2C (retsize: 0;)
	return
	// succ:  GPIOPinTypePWM_exit
l000094F4:
	sp = fp
	goto l000094F4_thunk_fn000094C4
	// succ:  l000094F4_thunk_fn000094C4
l000094F4:
	goto l0000947E_thunk_GPIOPinTypeI2C
	// succ:  l0000947E_thunk_GPIOPinTypeI2C
l000094F4_thunk_fn000094C4:
	call fn000094C4 (retsize: 0;)
	return
	// succ:  GPIOPinTypePWM_exit
GPIOPinTypePWM_exit:


// IntDefaultHandler
// Return size: 0
void IntDefaultHandler()
IntDefaultHandler_entry:
	// succ:  l000094F8
l000094F8:
	sp = fp
	// succ:  l000094F8_thunk_GPIOPinTypePWM
l000094F8_thunk_GPIOPinTypePWM:
	call GPIOPinTypePWM (retsize: 0;)
	return
	// succ:  IntDefaultHandler_exit
IntDefaultHandler_exit:


// IntMasterEnable
// Return size: 0
void IntMasterEnable()
IntMasterEnable_entry:
	// succ:  l000094FC
l000094FC:
	sp = fp
	call fn00C0A0D8 (retsize: 0;)
	return
	// succ:  IntMasterEnable_exit
IntMasterEnable_exit:


// IntMasterDisable
// Return size: 0
void IntMasterDisable()
IntMasterDisable_entry:
	// succ:  l00009500
l00009500:
	sp = fp
	call fn00C0A0E0 (retsize: 0;)
	return
	// succ:  IntMasterDisable_exit
IntMasterDisable_exit:


// IntRegister
// Return size: 0
void IntRegister()
IntRegister_entry:
	// succ:  l00009504
l00009504:
	sp = fp
	r3 = Mem0[0x00009534:word32]
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	r3 = Mem0[r3:word32]
	r4 = Mem0[0x0000953A:word32]
	NZCV = cond(r3 - r4)
	branch Test(EQ,Z) l00009522
	// succ:  l00009510 l00009522
l00009510:
	r3 = r4
	r5 = r4 + 0x000000B8
	r2 = r3 - r4
	r2 = Mem0[r2:word32]
	Mem0[r3:word32] = r2
	r3 = r3 + 4
	NZCV = cond(r3 - r5)
	branch Test(NE,Z) l00009520_thunk_fn00009712
	goto l00009522
	// succ:  l00009522 l00009520_thunk_fn00009712
l00009520_thunk_fn00009712:
	call fn00009712 (retsize: 0;)
	return
	// succ:  IntRegister_exit
l00009522:
	r3 = Mem0[0x00009536:word32]
	Mem0[r3:word32] = r4
	Mem0[r4 + (r0 << 2):word32] = r1
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	sp = sp + 8
	call lr (retsize: 0;)
	return
	// succ:  IntRegister_exit
IntRegister_exit:


// fn00009534
// Return size: 0
void fn00009534()
fn00009534_entry:
	// succ:  l00009534
l00009534:
	sp = v3
	r0 = r0
	r0 = 0x00000000
fn00009534_exit:


// IntUnregister
// Return size: 0
void IntUnregister()
IntUnregister_entry:
	// succ:  l00009538
l00009538:
	sp = fp
	r3 = Mem0[0x00009548:word32]
	r2 = Mem0[0x0000954E:word32]
	Mem0[r3 + (r0 << 2):word32] = r2
	call lr (retsize: 0;)
	return
	// succ:  IntUnregister_exit
IntUnregister_exit:


// IntPriorityGroupingSet
// Return size: 0
void IntPriorityGroupingSet()
IntPriorityGroupingSet_entry:
	// succ:  l0000954C
l0000954C:
	sp = fp
	r3 = Mem0[0x00009564:word32]
	r2 = Mem0[0x0000956A:word32]
	r3 = Mem0[r3 + (r0 << 2):word32]
	r3 = r3 | 0x05F80000
	r3 = r3 | 0x00020000
	Mem0[r2:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  IntPriorityGroupingSet_exit
IntPriorityGroupingSet_exit:


// IntPriorityGroupingGet
// Return size: 0
void IntPriorityGroupingGet()
IntPriorityGroupingGet_entry:
	// succ:  l00009568
l00009568:
	sp = fp
	r3 = 0x00000700
	r1 = Mem0[0x0000958C:word32]
	r0 = 0x00000000
	r1 = Mem0[r1:word32]
	r2 = Mem0[0x00009592:word32]
	r1 = r1 & r3
	NZC = cond(r1)
	// succ:  l00009578
l00009578:
	v9 = Mem0[r2:word32]
	r2 = r2 + 4
	r3 = v9
	NZCV = cond(r3 - r1)
	branch Test(EQ,Z) l00009582
	// succ:  l00009580 l00009582
l00009580:
	r0 = r0 + 0x00000001
	NZCV = cond(r0)
	// succ:  l00009582
l00009582:
	NZCV = cond(r0 - 0x00000008)
	branch Test(NE,Z) l00009584_thunk_fn00009774
	goto l00009586
	// succ:  l00009586 l00009584_thunk_fn00009774
l00009584_thunk_fn00009774:
	call fn00009774 (retsize: 0;)
	return
	// succ:  IntPriorityGroupingGet_exit
l00009586:
	call lr (retsize: 0;)
	return
	// succ:  IntPriorityGroupingGet_exit
IntPriorityGroupingGet_exit:


// IntPrioritySet
// Return size: 0
void IntPrioritySet()
IntPrioritySet_entry:
	// succ:  l00009590
l00009590:
	sp = fp
	r2 = 0x000000FF
	r3 = Mem0[0x000095BE:word32]
	sp = sp - 4
	Mem0[sp:word32] = r4
	r4 = r0 & ~0x00000003
	r3 = r3 + r4
	NZCV = cond(r3)
	r4 = Mem0[r3 + 32:word32]
	r0 = r0 & 0x00000003
	r3 = Mem0[r4:word32]
	r0 = r0 << 3
	NZC = cond(r0)
	r2 = r2 << r0
	NZC = cond(r2)
	r3 = r3 & ~(r2 << 0x00000000)
	r0 = r1 << r0
	r0 = r0 | r3
	NZC = cond(r0)
	Mem0[r4:word32] = r0
	r4 = Mem0[sp:word32]
	sp = sp + 4
	call lr (retsize: 0;)
	return
	// succ:  IntPrioritySet_exit
IntPrioritySet_exit:


// IntPriorityGet
// Return size: 0
void IntPriorityGet()
IntPriorityGet_entry:
	// succ:  l000095BC
l000095BC:
	sp = fp
	r3 = Mem0[0x000095DC:word32]
	r2 = r0 & ~0x00000003
	r3 = r3 + r2
	NZCV = cond(r3)
	r3 = Mem0[r3 + 32:word32]
	r0 = r0 & 0x00000003
	r3 = Mem0[r3:word32]
	r0 = r0 << 3
	NZC = cond(r0)
	r0 = r3 >>u r0
	r0 = (uint32) (byte) r0
	call lr (retsize: 0;)
	return
	// succ:  IntPriorityGet_exit
IntPriorityGet_exit:


// fn000095D8
// Return size: 0
void fn000095D8()
fn000095D8_entry:
	goto l000095D8
	// succ:  l000095D8
l00009536_thunk_IntUnregister:
	call IntUnregister (retsize: 0;)
	return
	// succ:  fn000095D8_exit
l000095D8:
	sp = fp
	r2 = 0x00009868
	r0 = r0
	goto l000095DA_thunk_IntEnable
	// succ:  l000095DA_thunk_IntEnable
l000095D8:
	goto l00009536_thunk_IntUnregister
	// succ:  l00009536_thunk_IntUnregister
l000095DA_thunk_IntEnable:
	call IntEnable (retsize: 0;)
	return
	// succ:  fn000095D8_exit
fn000095D8_exit:


// IntEnable
// Return size: 0
void IntEnable()
IntEnable_entry:
	// succ:  l000095DC
l000095DC:
	sp = fp
	NZCV = cond(r0 - 0x00000004)
	branch Test(EQ,Z) l00009604
	// succ:  l000095E0 l00009604
l000095E0:
	NZCV = cond(r0 - 0x00000005)
	branch Test(EQ,Z) l00009610
	// succ:  l000095E4 l00009610
l000095E4:
	NZCV = cond(r0 - 0x00000006)
	branch Test(EQ,Z) l0000961C
	// succ:  l000095E8 l0000961C
l000095E8:
	NZCV = cond(r0 - 0x0000000F)
	branch Test(EQ,Z) l000095F8
	// succ:  l000095EC l000095F8
l000095EC:
	branch Test(ULE,ZC) l000095F6
	// succ:  l000095EE l000095F6
l000095EE:
	r3 = 0x00000001
	r0 = r0 - 0x00000010
	NZCV = cond(r0)
	r2 = Mem0[0x00009632:word32]
	r0 = r3 << r0
	goto l000095F8
	// succ:  l000095F8
l000095F6:
	r0 = r0 & 0x09000000
	goto l000095FA
	// succ:  l000095FA
l000095F8:
	Mem0[r2:word32] = r0
	// succ:  l000095FA
l000095FA:
	call lr (retsize: 0;)
	return
	// succ:  IntEnable_exit
l00009604:
	Mem0[r2:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  IntEnable_exit
l00009610:
	Mem0[r2:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  IntEnable_exit
l0000961C:
	Mem0[r2:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  IntEnable_exit
IntEnable_exit:


// fn00009634
// Return size: 0
void fn00009634()
fn00009634_entry:
	// succ:  l00009634
l00009634:
	sp = fp
fn00009634_exit:


// IntDisable
// Return size: 0
void IntDisable()
IntDisable_entry:
	// succ:  l00009638
l00009638:
	sp = fp
	NZCV = cond(r0 - 0x00000004)
	branch Test(EQ,Z) l00009660
	// succ:  l0000963C l00009660
l0000963C:
	NZCV = cond(r0 - 0x00000005)
	branch Test(EQ,Z) l0000966C
	// succ:  l00009640 l0000966C
l00009640:
	NZCV = cond(r0 - 0x00000006)
	branch Test(EQ,Z) l00009678
	// succ:  l00009644 l00009678
l00009644:
	NZCV = cond(r0 - 0x0000000F)
	branch Test(EQ,Z) l00009654
	// succ:  l00009648 l00009654
l00009648:
	branch Test(ULE,ZC) l00009652
	// succ:  l0000964A l00009652
l0000964A:
	r3 = 0x00000001
	r0 = r0 - 0x00000010
	NZCV = cond(r0)
	r2 = Mem0[0x0000968E:word32]
	r0 = r3 << r0
	goto l00009654
	// succ:  l00009654
l00009652:
	r0 = r0 & 0x09000000
	goto l00009656
	// succ:  l00009656
l00009654:
	Mem0[r2:word32] = r0
	// succ:  l00009656
l00009656:
	call lr (retsize: 0;)
	return
	// succ:  IntDisable_exit
l00009660:
	Mem0[r2:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  IntDisable_exit
l0000966C:
	Mem0[r2:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  IntDisable_exit
l00009678:
	Mem0[r2:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  IntDisable_exit
IntDisable_exit:


// fn00009690
// Return size: 0
void fn00009690()
fn00009690_entry:
	// succ:  l00009690
l00009690:
	sp = fp
fn00009690_exit:


// OSRAMDelay
// Return size: 0
void OSRAMDelay()
OSRAMDelay_entry:
	// succ:  l00009694
l00009694:
	sp = fp
	r0 = r0 - 0x00000001
	NZCV = cond(r0)
	branch Test(NE,Z) l00009696_thunk_fn00009890
	// succ:  l00009696_thunk_fn00009698 l00009696_thunk_fn00009890
l00009696_thunk_fn00009698:
	call fn00009698 (retsize: 0;)
	return
	// succ:  OSRAMDelay_exit
l00009696_thunk_fn00009890:
	call fn00009890 (retsize: 0;)
	return
	// succ:  OSRAMDelay_exit
OSRAMDelay_exit:


// fn00009698
// Return size: 0
void fn00009698()
fn00009698_entry:
	// succ:  l00009698
l00009698:
	sp = fp
	call lr (retsize: 0;)
	return
	// succ:  fn00009698_exit
fn00009698_exit:


// OSRAMWriteFirst
// Return size: 0
void OSRAMWriteFirst()
OSRAMWriteFirst_entry:
	// succ:  l0000969C
l0000969C:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r5 = r0
	r4 = Mem0[0x000096C4:word32]
	r2 = 0x00000000
	r0 = r4
	r1 = 0x0000003D
	call fn0000A204 (retsize: 0;)
	r1 = r5
	r0 = r4
	call fn0000A238 (retsize: 0;)
	r0 = r4
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	lr = Mem0[sp + 12:word32]
	sp = sp + 16
	r1 = 0x00000003
	call fn00C0A21C (retsize: 0;)
	return
	// succ:  OSRAMWriteFirst_exit
OSRAMWriteFirst_exit:


// fn000096C0
// Return size: 0
void fn000096C0()
fn000096C0_entry:
	// succ:  l000096C0
l000096C0:
	sp = fp
	r0 = r0
	r2 = r2 & r0
	NZC = cond(r2)
	// succ:  l000096C2_thunk_OSRAMWriteArray
l000096C2_thunk_OSRAMWriteArray:
	call OSRAMWriteArray (retsize: 0;)
	return
	// succ:  fn000096C0_exit
fn000096C0_exit:


// OSRAMWriteArray
// Return size: 0
void OSRAMWriteArray()
OSRAMWriteArray_entry:
	// succ:  l000096C4
l000096C4:
	sp = fp
	branch r1 == 0x00000000 l000096FA
	// succ:  l000096C6 l000096FA
l000096C6:
	sp = sp - 24
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = r6
	Mem0[sp + 16:word32] = r7
	Mem0[sp + 20:word32] = lr
	r5 = r0
	r7 = Mem0[0x00009702:word32]
	r4 = Mem0[0x00009704:word32]
	r6 = r0 + r1
	r1 = 0x00000000
	r0 = r4
	call fn0000A1C4 (retsize: 0;)
	NZCV = cond(r0 - 0x00000000)
	branch Test(EQ,Z) l000096DA_thunk_fn000098CC
	goto l000096DC
	// succ:  l000096DC l000096DA_thunk_fn000098CC
l000096DA_thunk_fn000098CC:
	call fn000098CC (retsize: 0;)
	return
	// succ:  OSRAMWriteArray_exit
l000096DC:
	r0 = Mem0[r7:word32]
	call fn00009690 (retsize: 0;)
	v14 = (word32) Mem0[r5:byte]
	r5 = r5 + 1
	r1 = v14
	r0 = r4
	call fn0000A238 (retsize: 0;)
	r1 = 0x00000001
	r0 = r4
	call fn0000A21C (retsize: 0;)
	NZCV = cond(r6 - r5)
	branch Test(NE,Z) l000096F6_thunk_fn000098CC
	goto l000096F8
	// succ:  l000096F8 l000096F6_thunk_fn000098CC
l000096F6_thunk_fn000098CC:
	call fn000098CC (retsize: 0;)
	return
	// succ:  OSRAMWriteArray_exit
l000096F8:
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	r6 = Mem0[sp + 12:word32]
	r7 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  OSRAMWriteArray_exit
l000096FA:
	call lr (retsize: 0;)
	return
	// succ:  OSRAMWriteArray_exit
OSRAMWriteArray_exit:


// fn00009700
// Return size: 0
void fn00009700()
fn00009700_entry:
	// succ:  l00009700
l00009700:
	sp = fp
	r0 = r0
	r2 = r2 & r0
	NZC = cond(r2)
fn00009700_exit:


// OSRAMWriteByte
// Return size: 0
void OSRAMWriteByte()
OSRAMWriteByte_entry:
	// succ:  l00009704
l00009704:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	r4 = r0
	r1 = 0x00000000
	r0 = Mem0[0x00009736:word32]
	call fn0000A1C4 (retsize: 0;)
	NZCV = cond(r0 - 0x00000000)
	// succ:  l00009710_thunk_fn00009712
l00009710_thunk_fn00009712:
	call fn00009712 (retsize: 0;)
	return
	// succ:  OSRAMWriteByte_exit
OSRAMWriteByte_exit:


// fn00009712
// Return size: 0
void fn00009712()
fn00009712_entry:
	// succ:  l00009712
l00009712:
	sp = fp
	branch Test(EQ,Z) l00009712_thunk_fn00009904
	goto l00009714_in_fn00009712
	// succ:  l00009714_in_fn00009712 l00009712_thunk_fn00009904
l00009712:
	branch Test(EQ,Z) l00009712_thunk_fn00009904
	goto l00009714
	// succ:  l00009714 l00009712_thunk_fn00009904
l00009712_thunk_fn00009904:
	call fn00009904 (retsize: 0;)
	return
	// succ:  fn00009712_exit
l00009712_thunk_fn00009904:
	call fn00009904 (retsize: 0;)
	return
	// succ:  fn00009712_exit
l00009714:
	r3 = Mem0[0x00009738:word32]
	r0 = Mem0[r3:word32]
	call fn00009690 (retsize: 0;)
	r1 = r4
	r0 = Mem0[0x00009736:word32]
	call fn0000A238 (retsize: 0;)
	r4 = Mem0[sp:word32]
	lr = Mem0[sp + 4:word32]
	sp = sp + 8
	r1 = 0x00000001
	r0 = Mem0[0x00009736:word32]
	call fn00C0A21C (retsize: 0;)
	return
	// succ:  fn00009712_exit
l00009714_in_fn00009712:
	r3 = Mem0[0x00009738:word32]
	r0 = Mem0[r3:word32]
	call fn00009690 (retsize: 0;)
	r1 = r4
	r0 = Mem0[0x00009736:word32]
	call fn0000A238 (retsize: 0;)
	r4 = Mem0[sp:word32]
	lr = Mem0[sp + 4:word32]
	sp = sp + 8
	r1 = 0x00000001
	r0 = Mem0[0x00009736:word32]
	call fn00C0A21C (retsize: 0;)
	return
	// succ:  fn00009712_exit
fn00009712_exit:


// fn00009734
// Return size: 0
void fn00009734()
fn00009734_entry:
	goto l00009734
	// succ:  l00009734
l00009702_thunk_OSRAMWriteByte:
	call OSRAMWriteByte (retsize: 0;)
	return
	// succ:  fn00009734_exit
l00009734:
	sp = fp
	r4 = r7 >>u 1
	NZC = cond(r4)
	r0 = 0x00000000
l00009734:
	goto l00009702_thunk_OSRAMWriteByte
	// succ:  l00009702_thunk_OSRAMWriteByte
fn00009734_exit:


// OSRAMWriteFinal
// Return size: 0
void OSRAMWriteFinal()
OSRAMWriteFinal_entry:
	// succ:  l00009738
l00009738:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r6 = r0
	r4 = Mem0[0x0000977C:word32]
	r1 = 0x00000000
	r0 = r4
	call fn0000A1C4 (retsize: 0;)
	NZCV = cond(r0 - 0x00000000)
	branch Test(EQ,Z) l00009748_thunk_fn0000993A
	goto l0000974A
	// succ:  l0000974A l00009748_thunk_fn0000993A
l00009748_thunk_fn0000993A:
	call fn0000993A (retsize: 0;)
	return
	// succ:  OSRAMWriteFinal_exit
l0000974A:
	r5 = Mem0[0x00009782:word32]
	r4 = Mem0[0x0000977C:word32]
	r0 = Mem0[r5:word32]
	call fn00009690 (retsize: 0;)
	r1 = r6
	r0 = r4
	call fn0000A238 (retsize: 0;)
	r1 = 0x00000005
	r0 = r4
	call fn0000A21C (retsize: 0;)
	r1 = 0x00000000
	r0 = r4
	call fn0000A1C4 (retsize: 0;)
	NZCV = cond(r0 - 0x00000000)
	branch Test(EQ,Z) l00009960
	// succ:  l00009770 l00009960
l00009770:
	r0 = Mem0[r5:word32]
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	lr = Mem0[sp + 12:word32]
	sp = sp + 16
	// succ:  l00009772_thunk_fn00009774
l00009772_thunk_fn00009774:
	call fn00009774 (retsize: 0;)
	return
	// succ:  OSRAMWriteFinal_exit
l00009960:
	r2 = r0
	r0 = 0x00000000
	Mem0[r0 + r0:word32] = r0
	r0 = r0 & r0
	NZC = cond(r0)
	r0 = r0
	r2 = r2 & r0
	NZC = cond(r2)
	r4 = r7 >>u 1
	NZC = cond(r4)
	r0 = 0x00000000
	r2 = 0x00009D40
	r0 = r0
	// succ:  l00009972_thunk_OSRAMDisplayOn
l00009972_thunk_OSRAMDisplayOn:
	call OSRAMDisplayOn (retsize: 0;)
	return
	// succ:  OSRAMWriteFinal_exit
OSRAMWriteFinal_exit:


// fn00009774
// Return size: 0
void fn00009774()
fn00009774_entry:
	// succ:  l00009774
l00009774:
	sp = fp
	r0 = r0 ^ r6
	NZC = cond(r0)
	goto l00009776_thunk_fn00009690
	// succ:  l00009776_thunk_fn00009690
l00009774:
	goto l00009776_thunk_fn00009690
	// succ:  l00009776_thunk_fn00009690
l00009776_thunk_fn00009690:
	call fn00009690 (retsize: 0;)
	return
	// succ:  fn00009774_exit
l00009776_thunk_fn00009690:
	call fn00009690 (retsize: 0;)
	return
	// succ:  fn00009774_exit
fn00009774_exit:


// fn0000977C
// Return size: 0
void fn0000977C()
fn0000977C_entry:
	goto l0000977C
	// succ:  l0000977C
l00009736_thunk_OSRAMWriteFinal:
	call OSRAMWriteFinal (retsize: 0;)
	return
	// succ:  fn0000977C_exit
l0000977C:
	sp = fp
	r4 = r7 >>u 1
	NZC = cond(r4)
	r0 = 0x00000000
	goto l0000977E_thunk_OSRAMClear
	// succ:  l0000977E_thunk_OSRAMClear
l0000977C:
	goto l00009736_thunk_OSRAMWriteFinal
	// succ:  l00009736_thunk_OSRAMWriteFinal
l0000977E_thunk_OSRAMClear:
	call OSRAMClear (retsize: 0;)
	return
	// succ:  fn0000977C_exit
fn0000977C_exit:


// OSRAMClear
// Return size: 0
void OSRAMClear()
OSRAMClear_entry:
	// succ:  l00009780
l00009780:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	r0 = 0x00000080
	call fn00009698 (retsize: 0;)
	r1 = 0x00000006
	r0 = Mem0[0x000097CA:word32]
	call fn000096C0 (retsize: 0;)
	r4 = 0x0000005F
	r0 = 0x00000000
	call fn00009700 (retsize: 0;)
	r4 = r4 - 0x00000001
	NZCV = cond(r4)
	branch Test(NE,Z) l0000998E
	// succ:  l0000979C l0000998E
l0000979C:
	r0 = r4
	call fn00009734 (retsize: 0;)
	r0 = 0x00000080
	call fn00009698 (retsize: 0;)
	r1 = 0x00000006
	r0 = Mem0[0x000097CE:word32]
	call fn000096C0 (retsize: 0;)
	r4 = 0x0000005F
	r0 = 0x00000000
	call fn00009700 (retsize: 0;)
	r4 = r4 - 0x00000001
	NZCV = cond(r4)
	branch Test(NE,Z) l000097BA_thunk_fn000099AE
	goto l000097BC
	// succ:  l000097BC l000097BA_thunk_fn000099AE
l000097BA_thunk_fn000099AE:
	call fn000099AE (retsize: 0;)
	return
	// succ:  OSRAMClear_exit
l000097BC:
	r0 = r4
	r4 = Mem0[sp:word32]
	lr = Mem0[sp + 4:word32]
	sp = sp + 8
	// succ:  l000097C2_thunk_fn00009734
l000097C2_thunk_fn00009734:
	call fn00009734 (retsize: 0;)
	return
	// succ:  OSRAMClear_exit
l0000998E:
	r5 = r5 << 7
	NZC = cond(r5)
	r3 = r3 + r4
	NZCV = cond(r3)
	// succ:  l00009990_thunk_fn00009992
l00009990_thunk_fn00009992:
	call fn00009992 (retsize: 0;)
	return
	// succ:  OSRAMClear_exit
OSRAMClear_exit:


// fn000097C8
// Return size: 0
void fn000097C8()
fn000097C8_entry:
	// succ:  l000097C8
l000097C8:
	sp = fp
	r2 = 0x00009BB8
	r0 = r0
	// succ:  l000097CA_thunk_OSRAMStringDraw
l000097CA_thunk_OSRAMStringDraw:
	call OSRAMStringDraw (retsize: 0;)
	return
	// succ:  fn000097C8_exit
fn000097C8_exit:


// OSRAMStringDraw
// Return size: 0
void OSRAMStringDraw()
OSRAMStringDraw_entry:
	// succ:  l000097CC
l000097CC:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = lr
	r6 = r2
	r4 = r1
	r5 = r0
	r0 = 0x00000080
	call fn00009698 (retsize: 0;)
	NZCV = cond(r6 - 0x00000000)
	branch Test(NE,Z) l000097E0
	// succ:  l000097DE_1 l000097E0
l000097DE_1:
	r0 = 0x000000B0
	// succ:  l000097E0
l000097E0:
	r0 = 0x000000B1
	call fn00009700 (retsize: 0;)
	r6 = r4 + 0x00000024
	r0 = 0x00000080
	call fn00009700 (retsize: 0;)
	r0 = r6 & 0x0000000F
	call fn00009700 (retsize: 0;)
	r0 = 0x00000080
	call fn00009700 (retsize: 0;)
	r0 = (uint32) SLICE(r4 + 0x00000024, ui4, 4)
	r0 = r0 | 0x00000010
	call fn00009700 (retsize: 0;)
	r0 = 0x00000040
	call fn00009700 (retsize: 0;)
	r3 = (word32) Mem0[r5:byte]
	branch r3 == 0x00000000 l00009876
	// succ:  l00009814 l00009876
l00009814:
	NZCV = cond(r4 - 0x0000005A)
	r6 = Mem0[0x0000987E:word32]
	branch Test(ULE,ZC) l0000982C
	// succ:  l0000981A l0000982C
l0000981A:
	goto l00009848
	// succ:  l00009848
l0000982C:
	NZCV = cond(r4 - 0x0000005A)
	branch Test(UGT,ZC) l00009848
	// succ:  l00009830 l00009848
l00009830:
	r3 = r3 - 0x00000020
	NZCV = cond(r3)
	r3 = r3 + (r3 << 0x00000002)
	r0 = r6 + r3
	r1 = 0x00000005
	call fn000096C0 (retsize: 0;)
	NZCV = cond(r4 - 0x0000005A)
	r0 = 0x00000000
	branch Test(NE,Z) l00009844_thunk_fn00009A18
	goto l00009846
	// succ:  l00009846 l00009844_thunk_fn00009A18
l00009844_thunk_fn00009A18:
	call fn00009A18 (retsize: 0;)
	return
	// succ:  OSRAMStringDraw_exit
l00009846:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	lr = Mem0[sp + 12:word32]
	sp = sp + 16
	goto l0000984A
	// succ:  l0000984A
l00009848:
	r0 = r0 ^ r6
	NZC = cond(r0)
	// succ:  l0000984A
l0000984A:
	// succ:  l0000984A_thunk_fn00009734
l0000984A_thunk_fn00009734:
	call fn00009734 (retsize: 0;)
	return
	// succ:  OSRAMStringDraw_exit
l00009876:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  OSRAMStringDraw_exit
OSRAMStringDraw_exit:


// OSRAMImageDraw
// Return size: 0
void OSRAMImageDraw()
OSRAMImageDraw_entry:
	// succ:  l00009880
l00009880:
	sp = fp
	sp = sp - 32
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = r9
	Mem0[sp + 24:word32] = r10
	Mem0[sp + 28:word32] = lr
	r6 = Mem0[sp + 32:word32]
	branch r6 == 0x00000000 l000098EA
	goto l00009888
	// succ:  l00009888 l00009886_thunk_fn000098CC
l00009886_thunk_fn000098CC:
	call fn000098CC (retsize: 0;)
	return
	// succ:  OSRAMImageDraw_exit
l00009888:
	r5 = r0
	r4 = r2
	r9 = r3
	r1 = r1 + 0x00000024
	NZCV = cond(r1)
	// succ:  l0000988E_thunk_fn00009890
l0000988E_thunk_fn00009890:
	call fn00009890 (retsize: 0;)
	return
	// succ:  OSRAMImageDraw_exit
OSRAMImageDraw_exit:


// fn00009890
// Return size: 0
void fn00009890()
fn00009890_entry:
	// succ:  l00009890
l00009890:
	sp = fp
	r8 = (uint32) SLICE(r1, ui4, 4)
	r6 = r6 + r2
	NZCV = cond(r6)
	r8 = r8 | 0x00000010
	r7 = r1 & 0x0000000F
	r10 = r3 + 0xFFFFFFFF
	r0 = 0x00000080
	call fn00009698 (retsize: 0;)
	NZCV = cond(r4 - 0x00000000)
	branch Test(EQ,Z) l000098AC_thunk_fn000098AE
	goto l000098AC_1
	// succ:  l000098AC_1 l000098AC_thunk_fn000098AE
l00009890:
	r8 = (uint32) SLICE(r1 + 0x00000024, ui4, 4)
	r6 = r6 + r2
	NZCV = cond(r6)
	r8 = r8 | 0x00000010
	r7 = r1 & 0x0000000F
	r10 = r3 + 0xFFFFFFFF
	r0 = 0x00000080
	call fn00009698 (retsize: 0;)
	NZCV = cond(r4 - 0x00000000)
	branch Test(EQ,Z) l000098AE
	goto l000098AC_1
	// succ:  l000098AC_1 l000098AC_thunk_fn000098AE
l000098AC_1:
	r0 = 0x000000B1
	goto l000098AC_thunk_fn000098AE
	// succ:  l000098AC_thunk_fn000098AE
l000098AC_1:
	r0 = 0x000000B1
	goto l000098AC_thunk_fn000098AE
	// succ:  l000098AC_thunk_fn000098AE
l000098AC_thunk_fn000098AE:
	call fn000098AE (retsize: 0;)
	return
	// succ:  fn00009890_exit
l000098AC_thunk_fn000098AE:
	call fn000098AE (retsize: 0;)
	return
	// succ:  fn00009890_exit
l000098AC_thunk_fn000098AE:
	call fn000098AE (retsize: 0;)
	return
	// succ:  fn00009890_exit
l000098AC_thunk_fn000098AE:
	call fn000098AE (retsize: 0;)
	return
	// succ:  fn00009890_exit
fn00009890_exit:


// fn000098AE
// Return size: 0
void fn000098AE()
fn000098AE_entry:
	// succ:  l000098AE
l000098AE:
	sp = v3
	r0 = 0x000000B0
	call fn00009700 (retsize: 0;)
	r0 = 0x00000080
	call fn00009700 (retsize: 0;)
	r0 = r7
	call fn00009700 (retsize: 0;)
	r0 = 0x00000080
	call fn00009700 (retsize: 0;)
	r0 = r8
	call fn00009700 (retsize: 0;)
	// succ:  l000098C8_thunk_fn000098CC
l000098C8_thunk_fn000098CC:
	call fn000098CC (retsize: 0;)
	return
	// succ:  fn000098AE_exit
fn000098AE_exit:


// fn000098CC
// Return size: 0
void fn000098CC()
fn000098CC_entry:
	// succ:  l000098CC
l000098CC:
	sp = fp
	r0 = 0x00000040
	call fn00009700 (retsize: 0;)
	r0 = r5
	r1 = r10
	r5 = r5 + r9
	NZCV = cond(r5)
	call fn000096C0 (retsize: 0;)
	r4 = r4 + 0x00000001
	NZCV = cond(r4)
	r0 = (word32) Mem0[r5 - 1:byte]
	call fn00009734 (retsize: 0;)
	NZCV = cond(r6 - r4)
	branch Test(NE,Z) l000098E8_thunk_fn00009A9E
	goto l000098EA_in_fn000098CC
	// succ:  l000098EA_in_fn000098CC l000098E8_thunk_fn00009A9E
l000098CC:
	r0 = 0x00000040
	call fn00009700 (retsize: 0;)
	r0 = r5
	r1 = r10
	r5 = r5 + r9
	NZCV = cond(r5)
	call fn000096C0 (retsize: 0;)
	r4 = r4 + 0x00000001
	NZCV = cond(r4)
	r0 = (word32) Mem0[r5 - 1:byte]
	call fn00009734 (retsize: 0;)
	NZCV = cond(r6 - r4)
	branch Test(NE,Z) l000098E8_thunk_fn00009A9E
	goto l000098EA
	// succ:  l000098EA l000098E8_thunk_fn00009A9E
l000098E8_thunk_fn00009A9E:
	call fn00009A9E (retsize: 0;)
	return
	// succ:  fn000098CC_exit
l000098E8_thunk_fn00009A9E:
	call fn00009A9E (retsize: 0;)
	return
	// succ:  fn000098CC_exit
l000098EA:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	r9 = Mem0[sp + 20:word32]
	r10 = Mem0[sp + 24:word32]
	sp = sp + 32
	return
	// succ:  fn000098CC_exit
l000098EA_in_fn000098CC:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	r9 = Mem0[sp + 20:word32]
	r10 = Mem0[sp + 24:word32]
	sp = sp + 32
	return
	// succ:  fn000098CC_exit
fn000098CC_exit:


// fn000098EC
// Return size: 0
void fn000098EC()
fn000098EC_entry:
	// succ:  l000098EC
l000098EC:
	sp = fp
	Mem0[r6 + 124:word16] = (uint16) r0
	// succ:  l000098EE_thunk_OSRAMInit
l000098EE_thunk_OSRAMInit:
	call OSRAMInit (retsize: 0;)
	return
	// succ:  fn000098EC_exit
fn000098EC_exit:


// OSRAMInit
// Return size: 0
void OSRAMInit()
OSRAMInit_entry:
	// succ:  l000098F0
l000098F0:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = lr
	r4 = r0
	r0 = 0x10001000
	call fn00009B78 (retsize: 0;)
	r0 = Mem0[0x00009966:word32]
	call fn00009B78 (retsize: 0;)
	// succ:  l00009900_thunk_fn00009904
l00009900_thunk_fn00009904:
	call fn00009904 (retsize: 0;)
	return
	// succ:  OSRAMInit_exit
OSRAMInit_exit:


// fn00009904
// Return size: 0
void fn00009904()
fn00009904_entry:
	// succ:  l00009904
l00009904:
	sp = fp
	r1 = 0x0000000C
	r0 = Mem0[0x0000996A:word32]
	call fn0000947C (retsize: 0;)
	r1 = r4
	r0 = Mem0[0x0000996E:word32]
	call fn0000A0F0 (retsize: 0;)
	r2 = 0x00000001
	r3 = Mem0[0x00009972:word32]
	r7 = Mem0[0x00009974:word32]
	r6 = 0x000000E3
	r4 = 0x00000004
	r0 = 0x00000080
	r5 = 0x00000000
	Mem0[r3:word32] = r2
	r8 = r7 + 0x000001EC
	goto l00009928_thunk_fn00009934
	// succ:  l00009928_thunk_fn00009934
l00009904:
	r1 = 0x0000000C
	r0 = Mem0[0x0000996A:word32]
	call fn0000947C (retsize: 0;)
	r1 = r4
	r0 = Mem0[0x0000996E:word32]
	call fn0000A0F0 (retsize: 0;)
	r2 = 0x00000001
	r3 = Mem0[0x00009972:word32]
	r7 = Mem0[0x00009974:word32]
	r6 = 0x000000E3
	r4 = 0x00000004
	r0 = 0x00000080
	r5 = 0x00000000
	Mem0[r3:word32] = r2
	r8 = r7 + 0x000001EC
	goto l00009928_thunk_fn00009934
	// succ:  l00009928_thunk_fn00009934
l00009928_thunk_fn00009934:
	call fn00009934 (retsize: 0;)
	return
	// succ:  fn00009904_exit
l00009928_thunk_fn00009934:
	call fn00009934 (retsize: 0;)
	return
	// succ:  fn00009904_exit
fn00009904_exit:


// fn00009934
// Return size: 0
void fn00009934()
fn00009934_entry:
	// succ:  l00009934
l00009934:
	sp = v3
	r6 = (word32) Mem0[r3 + 236:byte]
	call fn00009698 (retsize: 0;)
	// succ:  l00009938_thunk_fn0000993A
l00009938_thunk_fn0000993A:
	call fn0000993A (retsize: 0;)
	return
	// succ:  fn00009934_exit
fn00009934_exit:


// fn0000993A
// Return size: 0
void fn0000993A()
fn0000993A_entry:
	// succ:  l0000993A
l0000993A:
	sp = fp
l0000993A:
	r0 = r5 + 0x00000002
	r1 = r4 - 0x00000002
	r0 = r0 + r8
	NZCV = cond(r0)
	r4 = r4 + 0x00000001
	NZCV = cond(r4)
	call fn000096C0 (retsize: 0;)
	r5 = r5 + r4
	NZCV = cond(r5)
	r0 = r6
	call fn00009734 (retsize: 0;)
	NZCV = cond(r5 - 0x00000070)
	r3 = r7 + (r5 << 0x00000000)
	branch Test(ULE,ZC) l00009956_thunk_fn00009B26
	goto l00009958
	// succ:  l00009958 l00009956_thunk_fn00009B26
l00009956_thunk_fn00009B26:
	call fn00009B26 (retsize: 0;)
	return
	// succ:  fn0000993A_exit
l00009958:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	lr = Mem0[sp + 20:word32]
	sp = sp + 24
	// succ:  l0000995C_thunk_fn0000977C
l0000995C_thunk_fn0000977C:
	call fn0000977C (retsize: 0;)
	return
	// succ:  fn0000993A_exit
fn0000993A_exit:


// OSRAMDisplayOn
// Return size: 0
void OSRAMDisplayOn()
OSRAMDisplayOn_entry:
	// succ:  l00009974
l00009974:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = lr
	r7 = Mem0[0x000099C0:word32]
	r6 = 0x000000E3
	r4 = 0x00000004
	r0 = 0x00000080
	r5 = 0x00000000
	r8 = r7 + 0x000001EC
	// succ:  l00009986_thunk_fn00009992
l00009986_thunk_fn00009992:
	call fn00009992 (retsize: 0;)
	return
	// succ:  OSRAMDisplayOn_exit
OSRAMDisplayOn_exit:


// fn00009992
// Return size: 0
void fn00009992()
fn00009992_entry:
	// succ:  l00009992
l00009992:
	sp = v3
	r6 = (word32) Mem0[r3 + 236:byte]
	call fn00009698 (retsize: 0;)
	r0 = r5 + 0x00000002
	r1 = r4 - 0x00000002
	r0 = r0 + r8
	NZCV = cond(r0)
	r4 = r4 + 0x00000001
	NZCV = cond(r4)
	call fn000096C0 (retsize: 0;)
	r5 = r5 + r4
	NZCV = cond(r5)
	r0 = r6
	call fn00009734 (retsize: 0;)
	// succ:  l000099AA_thunk_fn000099AE
l000099AA_thunk_fn000099AE:
	call fn000099AE (retsize: 0;)
	return
	// succ:  fn00009992_exit
fn00009992_exit:


// fn000099AE
// Return size: 0
void fn000099AE()
fn000099AE_entry:
	// succ:  l000099AE
l000099AE:
	sp = fp
	NZCV = cond(r5 - 0x00000070)
	r3 = r7 + (r5 << 0x00000000)
	branch Test(ULE,ZC) l00009B84_in_fn000099AE
	goto l000099B6_in_fn000099AE
	// succ:  l000099B6_in_fn000099AE l00009B84_in_fn000099AE
l000099AE:
	NZCV = cond(r5 - 0x00000070)
	r3 = r7 + (r5 << 0x00000000)
	branch Test(ULE,ZC) l00009B84_in_OSRAMDisplayOn
	// succ:  l000099B6 l00009B84_in_OSRAMDisplayOn
l000099B6:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  fn000099AE_exit
l000099B6_in_fn000099AE:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  fn000099AE_exit
l00009B84_in_fn000099AE:
	r3 = Mem0[r3 + 28:word32]
	r0 = r0 & ~0xF0000000
	r2 = Mem0[r3:word32]
	r0 = r0 | r2
	NZC = cond(r0)
	Mem0[r3:word32] = r0
	call lr (retsize: 0;)
	return
	// succ:  fn000099AE_exit
l00009B84_in_OSRAMDisplayOn:
	r3 = Mem0[r3 + 28:word32]
	r0 = r0 & ~0xF0000000
	r2 = Mem0[r3:word32]
	r0 = r0 | r2
	NZC = cond(r0)
	Mem0[r3:word32] = r0
	call lr (retsize: 0;)
	return
	// succ:  fn000099AE_exit
fn000099AE_exit:


// OSRAMDisplayOff
// Return size: 0
void OSRAMDisplayOff()
OSRAMDisplayOff_entry:
	// succ:  l000099C0
l000099C0:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = lr
	r0 = 0x00000080
	call fn00009698 (retsize: 0;)
	r0 = 0x000000AE
	call fn00009700 (retsize: 0;)
	r0 = 0x00000080
	call fn00009700 (retsize: 0;)
	r0 = 0x000000AD
	call fn00009700 (retsize: 0;)
	r0 = 0x00000080
	call fn00009700 (retsize: 0;)
	r3 = Mem0[sp:word32]
	lr = Mem0[sp + 4:word32]
	sp = sp + 8
	r0 = 0x0000008A
	// succ:  l000099E6_thunk_fn00009734
l000099E6_thunk_fn00009734:
	call fn00009734 (retsize: 0;)
	return
	// succ:  OSRAMDisplayOff_exit
OSRAMDisplayOff_exit:


// fn000099E4
// Return size: 0
void fn000099E4()
fn000099E4_entry:
	// succ:  l000099E4
l000099E4:
	sp = fp
	r0 = 0x0000008A
	// succ:  l000099E6_thunk_fn00009734
l000099E6_thunk_fn00009734:
	call fn00009734 (retsize: 0;)
	return
	// succ:  fn000099E4_exit
fn000099E4_exit:


// SSIConfig
// Return size: 0
void SSIConfig()
SSIConfig_entry:
	// succ:  l000099E8
l000099E8:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = lr
	r7 = r2
	r6 = r0
	r8 = r1
	r4 = r3
	r5 = Mem0[sp + 24:word32]
	call fn00009DEC (retsize: 0;)
	NZCV = cond(r7 - 0x00000002)
	branch Test(EQ,Z) l00009A2C
	goto l000099FE
	// succ:  l000099FE l000099FC_thunk_fn00009A18
l000099FC_thunk_fn00009A18:
	call fn00009A18 (retsize: 0;)
	return
	// succ:  SSIConfig_exit
l000099FE:
	NZCV = cond(r7 - 0x00000000)
	// succ:  l000099FE_thunk_fn00009A00
l000099FE_thunk_fn00009A00:
	call fn00009A00 (retsize: 0;)
	return
	// succ:  SSIConfig_exit
SSIConfig_exit:


// fn00009A00
// Return size: 0
void fn00009A00()
fn00009A00_entry:
	// succ:  l00009A00
l00009A00:
	sp = fp
	branch Test(EQ,Z) l00009A02_thunk_fn00009A04
	goto l00009A02_1
	// succ:  l00009A02_1 l00009A02_thunk_fn00009A04
l00009A00:
	branch Test(EQ,Z) l00009A04
	goto l00009A02_1
	// succ:  l00009A02_1 l00009A00_thunk_fn00009A04
l00009A00_thunk_fn00009A04:
	call fn00009A04 (retsize: 0;)
	return
	// succ:  fn00009A00_exit
l00009A02_1:
	r7 = 0x00000004
	goto l00009A02_thunk_fn00009A04
	// succ:  l00009A02_thunk_fn00009A04
l00009A02_1:
	r7 = 0x00000004
	goto l00009A02_thunk_fn00009A04
	// succ:  l00009A02_thunk_fn00009A04
l00009A02_thunk_fn00009A04:
	call fn00009A04 (retsize: 0;)
	return
	// succ:  fn00009A00_exit
l00009A02_thunk_fn00009A04:
	call fn00009A04 (retsize: 0;)
	return
	// succ:  fn00009A00_exit
l00009A02_thunk_fn00009A04:
	call fn00009A04 (retsize: 0;)
	return
	// succ:  fn00009A00_exit
fn00009A00_exit:


// fn00009A04
// Return size: 0
void fn00009A04()
fn00009A04_entry:
	// succ:  l00009A04
l00009A04:
	sp = v3
	r3 = r0 /u r4
	r4 = 0x00000000
	Mem0[r6 + 4:word32] = r7
	r4 = r4 + 0x00000002
	NZCV = cond(r4)
	r2 = r3 /u r4
	r2 = r2 - 0x00000001
	NZCV = cond(r2)
	NZCV = cond(r2 - 0x000000FF)
	branch Test(UGT,ZC) l00009A16_thunk_SysCtlPeripheralDeepSleepDisable
	// succ:  l00009A16_thunk_fn00009A18 l00009A16_thunk_SysCtlPeripheralDeepSleepDisable
l00009A16_thunk_fn00009A18:
	call fn00009A18 (retsize: 0;)
	return
	// succ:  fn00009A04_exit
l00009A16_thunk_SysCtlPeripheralDeepSleepDisable:
	call SysCtlPeripheralDeepSleepDisable (retsize: 0;)
	return
	// succ:  fn00009A04_exit
fn00009A04_exit:


// fn00009A18
// Return size: 0
void fn00009A18()
fn00009A18_entry:
	// succ:  l00009A18
l00009A18:
	sp = v3
	r3 = r8 & 0x00000030
	r5 = r5 - 0x00000001
	NZCV = cond(r5)
	r1 = r3 | r8 << 0x00000006
	r5 = r5 | r1
	NZC = cond(r5)
	r2 = r5 | r2 << 0x00000008
	Mem0[r6 + 16:word32] = r4
	Mem0[r6:word32] = r2
	// succ:  l00009A2C
l00009A2C:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  fn00009A18_exit
fn00009A18_exit:


// fn00009A30
// Return size: 0
void fn00009A30()
fn00009A30_entry:
	// succ:  l00009A30
l00009A30:
	sp = fp
	r7 = 0x0000000C
	// succ:  l00009A32_thunk_fn00009A00
l00009A32_thunk_fn00009A00:
	call fn00009A00 (retsize: 0;)
	return
	// succ:  fn00009A30_exit
fn00009A30_exit:


// SSIEnable
// Return size: 0
void SSIEnable()
SSIEnable_entry:
	// succ:  l00009A34
l00009A34:
	sp = fp
	r3 = Mem0[r0 + 4:word32]
	r3 = r3 | 0x00000002
	Mem0[r0 + 4:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  SSIEnable_exit
SSIEnable_exit:


// SSIDisable
// Return size: 0
void SSIDisable()
SSIDisable_entry:
	// succ:  l00009A40
l00009A40:
	sp = fp
	r3 = Mem0[r0 + 4:word32]
	r3 = r3 & ~0x00000002
	Mem0[r0 + 4:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  SSIDisable_exit
SSIDisable_exit:


// SSIIntRegister
// Return size: 0
void SSIIntRegister()
SSIIntRegister_entry:
	// succ:  l00009A4C
l00009A4C:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = lr
	r0 = 0x00000017
	call IntMasterDisable (retsize: 0;)
	r3 = Mem0[sp:word32]
	lr = Mem0[sp + 4:word32]
	sp = sp + 8
	r0 = 0x00000017
	// succ:  l00009A5A_thunk_fn000095D8
l00009A5A_thunk_fn000095D8:
	call fn000095D8 (retsize: 0;)
	return
	// succ:  SSIIntRegister_exit
SSIIntRegister_exit:


// SSIIntUnregister
// Return size: 0
void SSIIntUnregister()
SSIIntUnregister_entry:
	// succ:  l00009A60
l00009A60:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = lr
	r0 = 0x00000017
	call fn00009634 (retsize: 0;)
	r3 = Mem0[sp:word32]
	lr = Mem0[sp + 4:word32]
	sp = sp + 8
	r0 = 0x00000017
	// succ:  l00009A6E_thunk_fn00009534
l00009A6E_thunk_fn00009534:
	call fn00009534 (retsize: 0;)
	return
	// succ:  SSIIntUnregister_exit
SSIIntUnregister_exit:


// SSIIntEnable
// Return size: 0
void SSIIntEnable()
SSIIntEnable_entry:
	// succ:  l00009A74
l00009A74:
	sp = fp
	r3 = Mem0[r0 + 20:word32]
	r1 = r1 | r3
	NZC = cond(r1)
	Mem0[r0 + 20:word32] = r1
	call lr (retsize: 0;)
	return
	// succ:  SSIIntEnable_exit
SSIIntEnable_exit:


// SSIIntDisable
// Return size: 0
void SSIIntDisable()
SSIIntDisable_entry:
	// succ:  l00009A7C
l00009A7C:
	sp = fp
	r3 = Mem0[r0 + 20:word32]
	r1 = r3 & ~(r1 << 0x00000000)
	Mem0[r0 + 20:word32] = r1
	call lr (retsize: 0;)
	return
	// succ:  SSIIntDisable_exit
SSIIntDisable_exit:


// SSIIntStatus
// Return size: 0
void SSIIntStatus()
SSIIntStatus_entry:
	// succ:  l00009A88
l00009A88:
	sp = fp
	branch r1 != 0x00000000 l00009A8E
	// succ:  l00009A8A l00009A8E
l00009A8A:
	r0 = Mem0[r0 + 24:word32]
	call lr (retsize: 0;)
	return
	// succ:  SSIIntStatus_exit
l00009A8E:
	r0 = Mem0[r0 + 28:word32]
	call lr (retsize: 0;)
	return
	// succ:  SSIIntStatus_exit
SSIIntStatus_exit:


// SSIIntClear
// Return size: 0
void SSIIntClear()
SSIIntClear_entry:
	// succ:  l00009A94
l00009A94:
	sp = fp
	Mem0[r0 + 32:word32] = r1
	call lr (retsize: 0;)
	return
	// succ:  SSIIntClear_exit
SSIIntClear_exit:


// SSIDataPut
// Return size: 0
void SSIDataPut()
SSIDataPut_entry:
	// succ:  l00009A98
l00009A98:
	sp = fp
	r2 = r0 + 0x0000000C
	r3 = Mem0[r2:word32]
	// succ:  l00009A9C_thunk_fn00009A9E
l00009A9C_thunk_fn00009A9E:
	call fn00009A9E (retsize: 0;)
	return
	// succ:  SSIDataPut_exit
SSIDataPut_exit:


// fn00009A9E
// Return size: 0
void fn00009A9E()
fn00009A9E_entry:
	// succ:  l00009A9E
l00009A9E:
	sp = fp
	r3 = r3 << 30
	NZC = cond(r3)
	branch Test(GE,N) l00009C98_in_fn00009A9E
	goto l00009AA2_in_fn00009A9E
	// succ:  l00009AA2_in_fn00009A9E l00009C98_in_fn00009A9E
l00009A9E:
	r3 = r3 << 30
	NZC = cond(r3)
	branch Test(GE,N) l00009C98_in_SSIDataPut
	// succ:  l00009AA2 l00009C98_in_SSIDataPut
l00009AA2:
	Mem0[r0 + 8:word32] = r1
	call lr (retsize: 0;)
	return
	// succ:  fn00009A9E_exit
l00009AA2_in_fn00009A9E:
	Mem0[r0 + 8:word32] = r1
	call lr (retsize: 0;)
	return
	// succ:  fn00009A9E_exit
l00009C98_in_fn00009A9E:
	r0 = Mem0[r3:word32]
	call lr (retsize: 0;)
	return
	// succ:  fn00009A9E_exit
l00009C98_in_SSIDataPut:
	r0 = Mem0[r3:word32]
	call lr (retsize: 0;)
	return
	// succ:  fn00009A9E_exit
fn00009A9E_exit:


// SSIDataNonBlockingPut
// Return size: 0
void SSIDataNonBlockingPut()
SSIDataNonBlockingPut_entry:
	// succ:  l00009AA8
l00009AA8:
	sp = fp
	r3 = Mem0[r0 + 12:word32]
	r3 = r3 & 0x00000002
	NZC = cond(r3)
	branch Test(EQ,Z) l00009AB2
	// succ:  l00009AB0_1 l00009AB2
l00009AB0_1:
	Mem0[r0 + 8:word32] = r1
	// succ:  l00009AB2
l00009AB2:
	r0 = 0x00000001
	r0 = r3
	call lr (retsize: 0;)
	return
	// succ:  SSIDataNonBlockingPut_exit
SSIDataNonBlockingPut_exit:


// fn00009AB4
// Return size: 0
void fn00009AB4()
fn00009AB4_entry:
	// succ:  l00009AB4
l00009AB4:
	sp = fp
	r0 = r3
	call lr (retsize: 0;)
	return
	// succ:  fn00009AB4_exit
fn00009AB4_exit:


// SSIDataGet
// Return size: 0
void SSIDataGet()
SSIDataGet_entry:
	// succ:  l00009AB8
l00009AB8:
	sp = fp
	r2 = r0 + 0x0000000C
	r3 = Mem0[r2:word32]
	r3 = r3 << 29
	NZC = cond(r3)
	branch Test(GE,N) l00009AC0_thunk_SysCtlLDOGet
	goto l00009AC2
	// succ:  l00009AC2 l00009AC0_thunk_SysCtlLDOGet
l00009AC0_thunk_SysCtlLDOGet:
	call SysCtlLDOGet (retsize: 0;)
	return
	// succ:  SSIDataGet_exit
l00009AC2:
	r3 = Mem0[r0 + 8:word32]
	Mem0[r1:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  SSIDataGet_exit
SSIDataGet_exit:


// SSIDataNonBlockingGet
// Return size: 0
void SSIDataNonBlockingGet()
SSIDataNonBlockingGet_entry:
	// succ:  l00009AC8
l00009AC8:
	sp = fp
	r3 = Mem0[r0 + 12:word32]
	r3 = r3 & 0x00000004
	NZC = cond(r3)
	branch Test(EQ,Z) l00009AD2
	// succ:  l00009AD0_1 l00009AD2
l00009AD0_1:
	r3 = Mem0[r0 + 8:word32]
	// succ:  l00009AD2
l00009AD2:
	r0 = 0x00000001
	Mem0[r1:word32] = r3
	r0 = r3
	call lr (retsize: 0;)
	return
	// succ:  SSIDataNonBlockingGet_exit
SSIDataNonBlockingGet_exit:


// SysCtlSRAMSizeGet
// Return size: 0
void SysCtlSRAMSizeGet()
SysCtlSRAMSizeGet_entry:
	// succ:  l00009ADC
l00009ADC:
	sp = fp
	r3 = Mem0[0x00009AF0:word32]
	r0 = Mem0[0x00009AF6:word32]
	r3 = Mem0[r3:word32]
	r0 = r0 & r3 >> 0x00000008
	r0 = r0 + 0x00000100
	call lr (retsize: 0;)
	return
	// succ:  SysCtlSRAMSizeGet_exit
SysCtlSRAMSizeGet_exit:


// SysCtlFlashSizeGet
// Return size: 0
void SysCtlFlashSizeGet()
SysCtlFlashSizeGet_entry:
	// succ:  l00009AF4
l00009AF4:
	sp = fp
	r3 = Mem0[0x00009B08:word32]
	r0 = Mem0[0x00009B0E:word32]
	r3 = Mem0[r3:word32]
	r0 = r0 & r3 << 0x0000000B
	r0 = r0 + 0x00000800
	call lr (retsize: 0;)
	return
	// succ:  SysCtlFlashSizeGet_exit
SysCtlFlashSizeGet_exit:


// SysCtlPinPresent
// Return size: 0
void SysCtlPinPresent()
SysCtlPinPresent_entry:
	// succ:  l00009B0C
l00009B0C:
	sp = fp
	r3 = Mem0[0x00009B20:word32]
	r3 = Mem0[r3:word32]
	r3 = r3 + r0 + C
	NZCV = cond(r3)
	branch Test(EQ,Z) l00009B16
	// succ:  l00009B14_1 l00009B16
l00009B14_1:
	r0 = 0x00000001
	// succ:  l00009B16
l00009B16:
	r0 = 0x00000000
	call lr (retsize: 0;)
	return
	// succ:  SysCtlPinPresent_exit
SysCtlPinPresent_exit:


// SysCtlPeripheralPresent
// Return size: 0
void SysCtlPeripheralPresent()
SysCtlPeripheralPresent_entry:
	// succ:  l00009B20
l00009B20:
	sp = fp
	r3 = Mem0[0x00009B3C:word32]
	r2 = r0 >>u 28
	NZC = cond(r2)
	r3 = Mem0[r3 + (r2 << 2):word32]
	// succ:  l00009B24_thunk_fn00009B26
l00009B24_thunk_fn00009B26:
	call fn00009B26 (retsize: 0;)
	return
	// succ:  SysCtlPeripheralPresent_exit
SysCtlPeripheralPresent_exit:


// fn00009B26
// Return size: 0
void fn00009B26()
fn00009B26_entry:
	// succ:  l00009B26
l00009B26:
	sp = fp
	r0 = r0 + 0x00000022
	NZCV = cond(r0)
	r0 = r0 & ~0xF0000000
	r3 = Mem0[r3:word32]
	r0 = r0 + r3 + C
	NZCV = cond(r0)
	branch Test(EQ,Z) l00009B34_in_fn00009B26
	goto l00009B32_1
	// succ:  l00009B32_1 l00009B34_in_fn00009B26
l00009B26:
	r0 = r0 & ~0xF0000000
	r3 = Mem0[r3:word32]
	r0 = r0 + r3 + C
	NZCV = cond(r0)
	branch Test(EQ,Z) l00009B34
	goto l00009B32_1
	// succ:  l00009B32_1 l00009B34
l00009B32_1:
	r0 = 0x00000001
	goto l00009B34_in_fn00009B26
	// succ:  l00009B34_in_fn00009B26
l00009B32_1:
	r0 = 0x00000001
	// succ:  l00009B34
l00009B34:
	r0 = 0x00000000
	call lr (retsize: 0;)
	return
	// succ:  fn00009B26_exit
l00009B34_in_fn00009B26:
	r0 = 0x00000000
	call lr (retsize: 0;)
	return
	// succ:  fn00009B26_exit
l00009B34_in_fn00009B26:
	r0 = 0x00000000
	call lr (retsize: 0;)
	return
	// succ:  fn00009B26_exit
fn00009B26_exit:


// SysCtlPeripheralReset
// Return size: 0
void SysCtlPeripheralReset()
SysCtlPeripheralReset_entry:
	// succ:  l00009B3C
l00009B3C:
	sp = fp
	r1 = 0x00000000
	r3 = Mem0[0x00009B7E:word32]
	r2 = r0 >>u 28
	NZC = cond(r2)
	sp = sp - 4
	Mem0[sp:word32] = r4
	r3 = r3 + (r2 << 0x00000002)
	r2 = Mem0[r3 + 16:word32]
	r3 = r0 & ~0xF0000000
	r4 = Mem0[r2:word32]
	sp = sp - 12
	r3 = r3 | r4
	NZC = cond(r3)
	Mem0[r2:word32] = r3
	Mem0[sp + 4:word32] = r1
	r3 = Mem0[sp + 4:word32]
	NZCV = cond(r3 - 0x0000000F)
	branch Test(UGT,ZC) l00009B66
	// succ:  l00009B5E l00009B66
l00009B5E:
	r3 = Mem0[sp + 4:word32]
	r3 = r3 + 0x00000001
	NZCV = cond(r3)
	Mem0[sp + 4:word32] = r3
	r3 = Mem0[sp + 4:word32]
	// succ:  l00009B66
l00009B66:
	NZCV = cond(r3 - 0x0000000F)
	branch Test(ULE,ZC) l00009B68_thunk_fn00009D5A
	goto l00009B6A
	// succ:  l00009B6A l00009B68_thunk_fn00009D5A
l00009B68_thunk_fn00009D5A:
	call fn00009D5A (retsize: 0;)
	return
	// succ:  SysCtlPeripheralReset_exit
l00009B6A:
	r3 = Mem0[r2:word32]
	r0 = r3 & ~(r0 << 0x00000000)
	Mem0[r2:word32] = r0
	sp = sp + 12
	r4 = Mem0[sp:word32]
	sp = sp + 4
	call lr (retsize: 0;)
	return
	// succ:  SysCtlPeripheralReset_exit
SysCtlPeripheralReset_exit:


// fn00009B78
// Return size: 0
void fn00009B78()
fn00009B78_entry:
	// succ:  l00009B78
l00009B78:
	sp = fp
	r5 = 0x00009CC8
	r0 = r0
	// succ:  l00009B7A_thunk_SysCtlPeripheralEnable
l00009B7A_thunk_SysCtlPeripheralEnable:
	call SysCtlPeripheralEnable (retsize: 0;)
	return
	// succ:  fn00009B78_exit
fn00009B78_exit:


// SysCtlPeripheralEnable
// Return size: 0
void SysCtlPeripheralEnable()
SysCtlPeripheralEnable_entry:
	// succ:  l00009B7C
l00009B7C:
	sp = fp
	r3 = Mem0[0x00009B98:word32]
	r2 = r0 >>u 28
	NZC = cond(r2)
	r3 = r3 + (r2 << 0x00000002)
	// succ:  l00009B84
l00009B84:
	r3 = Mem0[r3 + 28:word32]
	r0 = r0 & ~0xF0000000
	r2 = Mem0[r3:word32]
	r0 = r0 | r2
	NZC = cond(r0)
	Mem0[r3:word32] = r0
	call lr (retsize: 0;)
	return
	// succ:  SysCtlPeripheralEnable_exit
SysCtlPeripheralEnable_exit:


// SysCtlPeripheralDisable
// Return size: 0
void SysCtlPeripheralDisable()
SysCtlPeripheralDisable_entry:
	// succ:  l00009B98
l00009B98:
	sp = fp
	r3 = Mem0[0x00009BB4:word32]
	r2 = r0 >>u 28
	NZC = cond(r2)
	r3 = r3 + (r2 << 0x00000002)
	r2 = Mem0[r3 + 28:word32]
	r0 = r0 & ~0xF0000000
	r3 = Mem0[r2:word32]
	r0 = r3 & ~(r0 << 0x00000000)
	Mem0[r2:word32] = r0
	call lr (retsize: 0;)
	return
	// succ:  SysCtlPeripheralDisable_exit
SysCtlPeripheralDisable_exit:


// SysCtlPeripheralSleepEnable
// Return size: 0
void SysCtlPeripheralSleepEnable()
SysCtlPeripheralSleepEnable_entry:
	// succ:  l00009BB4
l00009BB4:
	sp = fp
	r3 = Mem0[0x00009BD0:word32]
	r2 = r0 >>u 28
	NZC = cond(r2)
	r3 = r3 + (r2 << 0x00000002)
	r3 = Mem0[r3 + 40:word32]
	r0 = r0 & ~0xF0000000
	r2 = Mem0[r3:word32]
	r0 = r0 | r2
	NZC = cond(r0)
	Mem0[r3:word32] = r0
	call lr (retsize: 0;)
	return
	// succ:  SysCtlPeripheralSleepEnable_exit
SysCtlPeripheralSleepEnable_exit:


// SysCtlPeripheralSleepDisable
// Return size: 0
void SysCtlPeripheralSleepDisable()
SysCtlPeripheralSleepDisable_entry:
	// succ:  l00009BD0
l00009BD0:
	sp = fp
	r3 = Mem0[0x00009BEC:word32]
	r2 = r0 >>u 28
	NZC = cond(r2)
	r3 = r3 + (r2 << 0x00000002)
	r2 = Mem0[r3 + 40:word32]
	r0 = r0 & ~0xF0000000
	r3 = Mem0[r2:word32]
	r0 = r3 & ~(r0 << 0x00000000)
	Mem0[r2:word32] = r0
	call lr (retsize: 0;)
	return
	// succ:  SysCtlPeripheralSleepDisable_exit
SysCtlPeripheralSleepDisable_exit:


// SysCtlPeripheralDeepSleepEnable
// Return size: 0
void SysCtlPeripheralDeepSleepEnable()
SysCtlPeripheralDeepSleepEnable_entry:
	// succ:  l00009BEC
l00009BEC:
	sp = fp
	r3 = Mem0[0x00009C08:word32]
	r2 = r0 >>u 28
	NZC = cond(r2)
	r3 = r3 + (r2 << 0x00000002)
	r3 = Mem0[r3 + 52:word32]
	r0 = r0 & ~0xF0000000
	r2 = Mem0[r3:word32]
	r0 = r0 | r2
	NZC = cond(r0)
	Mem0[r3:word32] = r0
	call lr (retsize: 0;)
	return
	// succ:  SysCtlPeripheralDeepSleepEnable_exit
SysCtlPeripheralDeepSleepEnable_exit:


// SysCtlPeripheralDeepSleepDisable
// Return size: 0
void SysCtlPeripheralDeepSleepDisable()
SysCtlPeripheralDeepSleepDisable_entry:
	// succ:  l00009C08
l00009C08:
	sp = fp
	r3 = Mem0[0x00009C24:word32]
	r2 = r0 >>u 28
	NZC = cond(r2)
	r3 = r3 + (r2 << 0x00000002)
	r2 = Mem0[r3 + 52:word32]
	r0 = r0 & ~0xF0000000
	r3 = Mem0[r2:word32]
	r0 = r3 & ~(r0 << 0x00000000)
	Mem0[r2:word32] = r0
	call lr (retsize: 0;)
	return
	// succ:  SysCtlPeripheralDeepSleepDisable_exit
SysCtlPeripheralDeepSleepDisable_exit:


// SysCtlPeripheralClockGating
// Return size: 0
void SysCtlPeripheralClockGating()
SysCtlPeripheralClockGating_entry:
	// succ:  l00009C24
l00009C24:
	sp = fp
	r2 = Mem0[0x00009C40:word32]
	r3 = Mem0[r2:word32]
	branch r0 != 0x00000000 l00009C32
	// succ:  l00009C2A l00009C32
l00009C2A:
	r3 = r3 & ~0x08000000
	Mem0[r2:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  SysCtlPeripheralClockGating_exit
l00009C32:
	r3 = r3 | 0x08000000
	Mem0[r2:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  SysCtlPeripheralClockGating_exit
SysCtlPeripheralClockGating_exit:


// SysCtlIntRegister
// Return size: 0
void SysCtlIntRegister()
SysCtlIntRegister_entry:
	// succ:  l00009C40
l00009C40:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = lr
	r1 = r0
	r0 = 0x0000002C
	call IntMasterDisable (retsize: 0;)
	r3 = Mem0[sp:word32]
	lr = Mem0[sp + 4:word32]
	sp = sp + 8
	r0 = 0x0000002C
	// succ:  l00009C50_thunk_fn000095D8
l00009C50_thunk_fn000095D8:
	call fn000095D8 (retsize: 0;)
	return
	// succ:  SysCtlIntRegister_exit
SysCtlIntRegister_exit:


// SysCtlIntUnregister
// Return size: 0
void SysCtlIntUnregister()
SysCtlIntUnregister_entry:
	// succ:  l00009C54
l00009C54:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = lr
	r0 = 0x0000002C
	call fn00009634 (retsize: 0;)
	r3 = Mem0[sp:word32]
	lr = Mem0[sp + 4:word32]
	sp = sp + 8
	r0 = 0x0000002C
	// succ:  l00009C62_thunk_fn00009534
l00009C62_thunk_fn00009534:
	call fn00009534 (retsize: 0;)
	return
	// succ:  SysCtlIntUnregister_exit
SysCtlIntUnregister_exit:


// SysCtlIntEnable
// Return size: 0
void SysCtlIntEnable()
SysCtlIntEnable_entry:
	// succ:  l00009C68
l00009C68:
	sp = fp
	r2 = Mem0[0x00009C78:word32]
	r3 = Mem0[r2:word32]
	r0 = r0 | r3
	NZC = cond(r0)
	Mem0[r2:word32] = r0
	call lr (retsize: 0;)
	return
	// succ:  SysCtlIntEnable_exit
SysCtlIntEnable_exit:


// SysCtlIntDisable
// Return size: 0
void SysCtlIntDisable()
SysCtlIntDisable_entry:
	// succ:  l00009C78
l00009C78:
	sp = fp
	r2 = Mem0[0x00009C88:word32]
	r3 = Mem0[r2:word32]
	r0 = r3 & ~(r0 << 0x00000000)
	Mem0[r2:word32] = r0
	call lr (retsize: 0;)
	return
	// succ:  SysCtlIntDisable_exit
SysCtlIntDisable_exit:


// SysCtlIntClear
// Return size: 0
void SysCtlIntClear()
SysCtlIntClear_entry:
	// succ:  l00009C88
l00009C88:
	sp = fp
	r3 = Mem0[0x00009C94:word32]
	Mem0[r3:word32] = r0
	call lr (retsize: 0;)
	return
	// succ:  SysCtlIntClear_exit
SysCtlIntClear_exit:


// SysCtlIntStatus
// Return size: 0
void SysCtlIntStatus()
SysCtlIntStatus_entry:
	// succ:  l00009C94
l00009C94:
	sp = fp
	branch r0 != 0x00000000 l00009C9C
	// succ:  l00009C96 l00009C9C
l00009C96:
	r3 = Mem0[0x00009CAA:word32]
	// succ:  l00009C98
l00009C98:
	r0 = Mem0[r3:word32]
	call lr (retsize: 0;)
	return
	// succ:  SysCtlIntStatus_exit
l00009C9C:
	r3 = Mem0[0x00009CAC:word32]
	r0 = Mem0[r3:word32]
	call lr (retsize: 0;)
	return
	// succ:  SysCtlIntStatus_exit
SysCtlIntStatus_exit:


// SysCtlLDOSet
// Return size: 0
void SysCtlLDOSet()
SysCtlLDOSet_entry:
	// succ:  l00009CAC
l00009CAC:
	sp = fp
	r3 = Mem0[0x00009CB8:word32]
	Mem0[r3:word32] = r0
	call lr (retsize: 0;)
	return
	// succ:  SysCtlLDOSet_exit
SysCtlLDOSet_exit:


// SysCtlLDOGet
// Return size: 0
void SysCtlLDOGet()
SysCtlLDOGet_entry:
	// succ:  l00009CB8
l00009CB8:
	sp = fp
	r3 = Mem0[0x00009CC4:word32]
	r0 = Mem0[r3:word32]
	call lr (retsize: 0;)
	return
	// succ:  SysCtlLDOGet_exit
SysCtlLDOGet_exit:


// SysCtlLDOConfigSet
// Return size: 0
void SysCtlLDOConfigSet()
SysCtlLDOConfigSet_entry:
	// succ:  l00009CC4
l00009CC4:
	sp = fp
	r3 = Mem0[0x00009CD0:word32]
	Mem0[r3:word32] = r0
	call lr (retsize: 0;)
	return
	// succ:  SysCtlLDOConfigSet_exit
SysCtlLDOConfigSet_exit:


// SysCtlReset
// Return size: 0
void SysCtlReset()
SysCtlReset_entry:
	// succ:  l00009CD0
l00009CD0:
	sp = fp
	r3 = Mem0[0x00009CDC:word32]
	// succ:  l00009CD2
l00009CD2:
	r2 = Mem0[0x00009CE2:word32]
	Mem0[r3:word32] = r2
	goto l00009CD2
	// succ:  l00009CD2
SysCtlReset_exit:


// SysCtlSleep
// Return size: 0
void SysCtlSleep()
SysCtlSleep_entry:
	// succ:  l00009CE0
l00009CE0:
	sp = fp
	call fn00C0A0E8 (retsize: 0;)
	return
	// succ:  SysCtlSleep_exit
SysCtlSleep_exit:


// SysCtlDeepSleep
// Return size: 0
void SysCtlDeepSleep()
SysCtlDeepSleep_entry:
	// succ:  l00009CE4
l00009CE4:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	r4 = Mem0[0x00009D06:word32]
	r3 = Mem0[r4:word32]
	r3 = r3 | 0x00000004
	Mem0[r4:word32] = r3
	call fn0000A0E8 (retsize: 0;)
	r3 = Mem0[r4:word32]
	r3 = r3 & ~0x00000004
	Mem0[r4:word32] = r3
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
	// succ:  SysCtlDeepSleep_exit
SysCtlDeepSleep_exit:


// SysCtlResetCauseGet
// Return size: 0
void SysCtlResetCauseGet()
SysCtlResetCauseGet_entry:
	// succ:  l00009D04
l00009D04:
	sp = fp
	r3 = Mem0[0x00009D10:word32]
	r0 = Mem0[r3:word32]
	call lr (retsize: 0;)
	return
	// succ:  SysCtlResetCauseGet_exit
SysCtlResetCauseGet_exit:


// SysCtlResetCauseClear
// Return size: 0
void SysCtlResetCauseClear()
SysCtlResetCauseClear_entry:
	// succ:  l00009D10
l00009D10:
	sp = fp
	r2 = Mem0[0x00009D20:word32]
	r3 = Mem0[r2:word32]
	r0 = r3 & ~(r0 << 0x00000000)
	Mem0[r2:word32] = r0
	call lr (retsize: 0;)
	return
	// succ:  SysCtlResetCauseClear_exit
SysCtlResetCauseClear_exit:


// SysCtlBrownOutConfigSet
// Return size: 0
void SysCtlBrownOutConfigSet()
SysCtlBrownOutConfigSet_entry:
	// succ:  l00009D20
l00009D20:
	sp = fp
	r3 = Mem0[0x00009D30:word32]
	r1 = r0 | r1 << 0x00000002
	Mem0[r3:word32] = r1
	call lr (retsize: 0;)
	return
	// succ:  SysCtlBrownOutConfigSet_exit
SysCtlBrownOutConfigSet_exit:


// SysCtlClockSet
// Return size: 0
void SysCtlClockSet()
SysCtlClockSet_entry:
	// succ:  l00009D30
l00009D30:
	sp = fp
	r2 = 0x000033F0
	sp = sp - 16
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	r7 = 0x00000040
	r6 = 0x00000000
	r4 = Mem0[0x00009DE6:word32]
	r1 = Mem0[0x00009DE8:word32]
	r3 = Mem0[r4:word32]
	r5 = r0 | ~0x00000003
	r1 = r1 & r3
	NZC = cond(r1)
	r1 = r1 | 0x00000800
	r1 = r1 & r5
	NZC = cond(r1)
	r2 = r2 & r0
	NZC = cond(r2)
	r3 = r3 & ~0x00400000
	r5 = Mem0[0x00009DEE:word32]
	sp = sp - 8
	r3 = r3 | 0x00000800
	// succ:  l00009D56_thunk_fn00009D5A
l00009D56_thunk_fn00009D5A:
	call fn00009D5A (retsize: 0;)
	return
	// succ:  SysCtlClockSet_exit
SysCtlClockSet_exit:


// fn00009D5A
// Return size: 0
void fn00009D5A()
fn00009D5A_entry:
	// succ:  l00009D5A
l00009D5A:
	sp = fp
	r2 = r2 | r1
	NZC = cond(r2)
	Mem0[r4:word32] = r3
	Mem0[r5:word32] = r7
	Mem0[r4:word32] = r2
	Mem0[sp + 4:word32] = r6
	r3 = Mem0[sp + 4:word32]
	NZCV = cond(r3 - 0x0000000F)
	branch Test(UGT,ZC) l00009D68_thunk_fn00009D72
	goto l00009D68_thunk_fn00009D6A
	// succ:  l00009D68_thunk_fn00009D6A l00009D68_thunk_fn00009D72
l00009D5A:
	r2 = r2 | r1
	NZC = cond(r2)
	Mem0[r4:word32] = r3
	Mem0[r5:word32] = r7
	Mem0[r4:word32] = r2
	Mem0[sp + 4:word32] = r6
	r3 = Mem0[sp + 4:word32]
	NZCV = cond(r3 - 0x0000000F)
	branch Test(UGT,ZC) l00009D72
	goto l00009D68_thunk_fn00009D6A
	// succ:  l00009D68_thunk_fn00009D6A l00009D68_thunk_fn00009D72
l00009D68_thunk_fn00009D6A:
	call fn00009D6A (retsize: 0;)
	return
	// succ:  fn00009D5A_exit
l00009D68_thunk_fn00009D6A:
	call fn00009D6A (retsize: 0;)
	return
	// succ:  fn00009D5A_exit
l00009D68_thunk_fn00009D72:
	call fn00009D72 (retsize: 0;)
	return
	// succ:  fn00009D5A_exit
l00009D68_thunk_fn00009D72:
	call fn00009D72 (retsize: 0;)
	return
	// succ:  fn00009D5A_exit
fn00009D5A_exit:


// fn00009D6A
// Return size: 0
void fn00009D6A()
fn00009D6A_entry:
	// succ:  l00009D6A
l00009D6A:
	sp = v3
	r3 = Mem0[sp + 4:word32]
	r3 = r3 + 0x00000001
	NZCV = cond(r3)
	Mem0[sp + 4:word32] = r3
	r3 = Mem0[sp + 4:word32]
	// succ:  l00009D70_thunk_fn00009D72
l00009D70_thunk_fn00009D72:
	call fn00009D72 (retsize: 0;)
	return
	// succ:  fn00009D6A_exit
fn00009D6A_exit:


// fn00009D72
// Return size: 0
void fn00009D72()
fn00009D72_entry:
	// succ:  l00009D72
l00009D72:
	sp = v3
	NZCV = cond(r3 - 0x0000000F)
	branch Test(ULE,ZC) l00009F66_in_SysCtlClockSet
	// succ:  l00009D76 l00009F66_in_SysCtlClockSet
l00009D76:
	r3 = r0 & 0x00000003
	r4 = Mem0[0x00009DE6:word32]
	r2 = r2 & ~0x00000003
	r2 = r2 | r3
	NZC = cond(r2)
	r3 = r2 & ~0x07C00000
	r1 = r0 & 0x07C00000
	Mem0[r4:word32] = r2
	r4 = r0 << 20
	NZC = cond(r4)
	r1 = r1 | r3 << 0x00000000
	branch Test(LT,N) l00009DBA
	// succ:  l00009D94 l00009DBA
l00009D94:
	r3 = 0x00008000
	Mem0[sp + 4:word32] = r3
	r3 = Mem0[sp + 4:word32]
	branch r3 == 0x00000000 l00009DBA
	// succ:  l00009D9E l00009DBA
l00009D9E:
	r2 = Mem0[0x00009DF2:word32]
	r3 = Mem0[r2:word32]
	r0 = r3 << 25
	NZC = cond(r0)
	branch Test(GE,N) l00009DAA
	// succ:  l00009DA6 l00009DAA
l00009DA6:
	goto l00009DB6
	// succ:  l00009DB6
l00009DAA:
	r3 = r3 << 25
	NZC = cond(r3)
	branch Test(LT,N) l00009DB6
	// succ:  l00009DAE l00009DB6
l00009DAE:
	r3 = Mem0[sp + 4:word32]
	r3 = r3 - 0x00000001
	NZCV = cond(r3)
	Mem0[sp + 4:word32] = r3
	r3 = Mem0[sp + 4:word32]
	// succ:  l00009DB6
l00009DB6:
	NZCV = cond(r3 - 0x00000000)
	branch Test(NE,Z) l00009FA4_in_SysCtlClockSet
	// succ:  l00009DBA l00009FA4_in_SysCtlClockSet
l00009DBA:
	r1 = r1 & ~0x00000800
	r3 = 0x00000000
	r2 = Mem0[0x00009DE4:word32]
	Mem0[r2:word32] = r1
	Mem0[sp + 4:word32] = r3
	r3 = Mem0[sp + 4:word32]
	NZCV = cond(r3 - 0x0000000F)
	branch Test(UGT,ZC) l00009DD4
	// succ:  l00009DCC l00009DD4
l00009DCC:
	r3 = Mem0[sp + 4:word32]
	r3 = r3 + 0x00000001
	NZCV = cond(r3)
	Mem0[sp + 4:word32] = r3
	r3 = Mem0[sp + 4:word32]
	// succ:  l00009DD4
l00009DD4:
	NZCV = cond(r3 - 0x0000000F)
	branch Test(ULE,ZC) l00009FC8_in_SysCtlClockSet
	// succ:  l00009DD8 l00009FC8_in_SysCtlClockSet
l00009DD8:
	sp = sp + 8
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	sp = sp + 16
	call lr (retsize: 0;)
	return
	// succ:  fn00009D72_exit
l00009F66_in_SysCtlClockSet:
	r2 = Mem0[r5 + 48:word32]
	r2 = r2 & ~0x00000300
	r2 = r2 & ~0x00000001
	Mem0[r5 + 48:word32] = r2
	call fn00009DEC (retsize: 0;)
	r3 = r7 << 4
	NZC = cond(r3)
	r2 = r0 /u r3
	r3 = r0 - r3 * r2
	r3 = r3 << 3
	NZC = cond(r3)
	r3 = r3 /u r7
	r3 = r3 + 0x00000001
	NZCV = cond(r3)
	r3 = r3 >>u 1
	NZC = cond(r3)
	Mem0[r5 + 36:word32] = r2
	Mem0[r5 + 40:word32] = r3
	Mem0[r5 + 44:word32] = r6
	Mem0[r5 + 24:word32] = r4
	r3 = Mem0[r5 + 44:word32]
	r3 = r3 | 0x00000010
	Mem0[r5 + 44:word32] = r3
	r3 = Mem0[r5 + 48:word32]
	r3 = r3 | 0x00000300
	r3 = r3 | 0x00000001
	Mem0[r5 + 48:word32] = r3
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	r6 = Mem0[sp + 12:word32]
	r7 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  fn00009D72_exit
l00009FA4_in_SysCtlClockSet:
	Mem0[r5 + 48:word32] = r3
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	r6 = Mem0[sp + 12:word32]
	r7 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  fn00009D72_exit
l00009FC8_in_SysCtlClockSet:
	r3 = Mem0[r4 + 44:word32]
	r3 = r3 & 0x000000EE
	Mem0[r6:word32] = r3
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  fn00009D72_exit
fn00009D72_exit:


// fn00009DEC
// Return size: 0
void fn00009DEC()
fn00009DEC_entry:
	// succ:  l00009DEC
l00009DEC:
	sp = fp
	// succ:  l00009DEC_thunk_SysCtlADCSpeedSet
l00009DEC_thunk_SysCtlADCSpeedSet:
	call SysCtlADCSpeedSet (retsize: 0;)
	return
	// succ:  fn00009DEC_exit
fn00009DEC_exit:


// SysCtlClockGet
// Return size: 0
void SysCtlClockGet()
SysCtlClockGet_entry:
	// succ:  l00009DF0
l00009DF0:
	sp = fp
	r3 = Mem0[0x00009E58:word32]
	r3 = Mem0[r3:word32]
	r2 = r3 & 0x00000030
	NZCV = cond(r2 - 0x00000010)
	branch Test(EQ,Z) l00009E4A
	// succ:  l00009DFC l00009E4A
l00009DFC:
	NZCV = cond(r2 - 0x00000020)
	branch Test(EQ,Z) l00009E46
	// succ:  l00009E00 l00009E46
l00009E00:
	branch r2 == 0x00000000 l00009E06
	// succ:  l00009E02 l00009E06
l00009E02:
	r0 = 0x00000000
	call lr (retsize: 0;)
	return
	// succ:  SysCtlClockGet_exit
l00009E06:
	r2 = Mem0[0x00009E5E:word32]
	r1 = (uint32) SLICE(0x400FE010, ui4, 6)
	r2 = r2 + (r1 << 0x00000002)
	goto l00009E10
	// succ:  l00009E10
l00009E0E:
	r1 = r0 << 10
	NZC = cond(r1)
	// succ:  l00009E10
l00009E10:
	r0 = Mem0[r2 + 48:word32]
	r2 = r3 << 20
	NZC = cond(r2)
	branch Test(LT,N) l00009E36
	// succ:  l00009E16 l00009E36
l00009E16:
	r2 = Mem0[0x00009E62:word32]
	r2 = Mem0[r2:word32]
	r1 = (uint32) SLICE(r2, ui9, 5)
	r1 = r1 + 0x00000002
	NZCV = cond(r1)
	r0 = r0 * r1
	r1 = r2 & 0x0000001F
	r1 = r1 + 0x00000002
	NZCV = cond(r1)
	r0 = r0 /u r1
	r1 = r2 << 17
	NZC = cond(r1)
	branch Test(GE,N) l00009E34
	// succ:  l00009E32_1 l00009E34
l00009E32_1:
	r0 = r0 >>u 1
	NZC = cond(r0)
	// succ:  l00009E34
l00009E34:
	r1 = r2 << 16
	NZC = cond(r1)
	// succ:  l00009E36
l00009E36:
	branch Test(GE,N) l00009E3A
	// succ:  l00009E38_1 l00009E3A
l00009E38_1:
	r0 = r0 >>u 2
	NZC = cond(r0)
	// succ:  l00009E3A
l00009E3A:
	r2 = r3 << 9
	NZC = cond(r2)
	branch Test(GE,N) l0000A000_in_SysCtlClockGet
	// succ:  l00009E3E l0000A000_in_SysCtlClockGet
l00009E3E:
	r3 = (uint32) SLICE(0x400FE010, ui4, 23)
	r3 = r3 + 0x00000001
	NZCV = cond(r3)
	r0 = r0 /u r3
	goto l00009E48
	// succ:  l00009E48
l00009E46:
l00009E48:
	call lr (retsize: 0;)
	return
	// succ:  SysCtlClockGet_exit
l00009E4A:
	r0 = Mem0[0x00009E66:word32]
	goto l00009E0E
	// succ:  l00009E0E
l0000A000_in_SysCtlClockGet:
	r3 = r3 & ~0x00000300
	r3 = r3 & ~0x00000001
	Mem0[r0 + 48:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  SysCtlClockGet_exit
SysCtlClockGet_exit:


// SysCtlPWMClockSet
// Return size: 0
void SysCtlPWMClockSet()
SysCtlPWMClockSet_entry:
	// succ:  l00009E68
l00009E68:
	sp = fp
	r2 = Mem0[0x00009E7C:word32]
	r3 = Mem0[r2:word32]
	r3 = r3 & ~0x001E0000
	r0 = r0 | r3
	NZC = cond(r0)
	Mem0[r2:word32] = r0
	call lr (retsize: 0;)
	return
	// succ:  SysCtlPWMClockSet_exit
SysCtlPWMClockSet_exit:


// SysCtlPWMClockGet
// Return size: 0
void SysCtlPWMClockGet()
SysCtlPWMClockGet_entry:
	// succ:  l00009E7C
l00009E7C:
	sp = fp
	r3 = Mem0[0x00009E8C:word32]
	r0 = Mem0[r3:word32]
	r0 = r0 & 0x001E0000
	call lr (retsize: 0;)
	return
	// succ:  SysCtlPWMClockGet_exit
SysCtlPWMClockGet_exit:


// SysCtlADCSpeedSet
// Return size: 0
void SysCtlADCSpeedSet()
SysCtlADCSpeedSet_entry:
	// succ:  l00009E8C
l00009E8C:
	sp = fp
	sp = sp - 4
	Mem0[sp:word32] = r4
	r4 = Mem0[0x00009EBE:word32]
	r1 = Mem0[0x00009EC0:word32]
	r3 = Mem0[r4:word32]
	r2 = Mem0[0x00009EC4:word32]
	r3 = r3 & ~0x00000F00
	r3 = r3 | r0
	NZC = cond(r3)
	Mem0[r4:word32] = r3
	r3 = Mem0[r1:word32]
	r4 = Mem0[sp:word32]
	sp = sp + 4
	r3 = r3 & ~0x00000F00
	r3 = r3 | r0
	NZC = cond(r3)
	Mem0[r1:word32] = r3
	r3 = Mem0[r2:word32]
	r3 = r3 & ~0x00000F00
	r0 = r0 | r3
	NZC = cond(r0)
	Mem0[r2:word32] = r0
	call lr (retsize: 0;)
	return
	// succ:  SysCtlADCSpeedSet_exit
SysCtlADCSpeedSet_exit:


// SysCtlADCSpeedGet
// Return size: 0
void SysCtlADCSpeedGet()
SysCtlADCSpeedGet_entry:
	// succ:  l00009EC4
l00009EC4:
	sp = fp
	r3 = Mem0[0x00009ED4:word32]
	r0 = Mem0[r3:word32]
	r0 = r0 & 0x00000F00
	call lr (retsize: 0;)
	return
	// succ:  SysCtlADCSpeedGet_exit
SysCtlADCSpeedGet_exit:


// SysCtlIOSCVerificationSet
// Return size: 0
void SysCtlIOSCVerificationSet()
SysCtlIOSCVerificationSet_entry:
	// succ:  l00009ED4
l00009ED4:
	sp = fp
	r2 = Mem0[0x00009EF0:word32]
	r3 = Mem0[r2:word32]
	branch r0 != 0x00000000 l00009EE2
	// succ:  l00009EDA l00009EE2
l00009EDA:
	r3 = r3 & ~0x00000008
	Mem0[r2:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  SysCtlIOSCVerificationSet_exit
l00009EE2:
	r3 = r3 | 0x00000008
	Mem0[r2:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  SysCtlIOSCVerificationSet_exit
SysCtlIOSCVerificationSet_exit:


// SysCtlMOSCVerificationSet
// Return size: 0
void SysCtlMOSCVerificationSet()
SysCtlMOSCVerificationSet_entry:
	// succ:  l00009EF0
l00009EF0:
	sp = fp
	r2 = Mem0[0x00009F0C:word32]
	r3 = Mem0[r2:word32]
	branch r0 != 0x00000000 l00009EFE
	// succ:  l00009EF6 l00009EFE
l00009EF6:
	r3 = r3 & ~0x00000004
	Mem0[r2:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  SysCtlMOSCVerificationSet_exit
l00009EFE:
	r3 = r3 | 0x00000004
	Mem0[r2:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  SysCtlMOSCVerificationSet_exit
SysCtlMOSCVerificationSet_exit:


// SysCtlPLLVerificationSet
// Return size: 0
void SysCtlPLLVerificationSet()
SysCtlPLLVerificationSet_entry:
	// succ:  l00009F0C
l00009F0C:
	sp = fp
	r2 = Mem0[0x00009F28:word32]
	r3 = Mem0[r2:word32]
	branch r0 != 0x00000000 l00009F1A
	// succ:  l00009F12 l00009F1A
l00009F12:
	r3 = r3 & ~0x00000400
	Mem0[r2:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  SysCtlPLLVerificationSet_exit
l00009F1A:
	r3 = r3 | 0x00000400
	Mem0[r2:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  SysCtlPLLVerificationSet_exit
SysCtlPLLVerificationSet_exit:


// SysCtlClkVerificationClear
// Return size: 0
void SysCtlClkVerificationClear()
SysCtlClkVerificationClear_entry:
	// succ:  l00009F28
l00009F28:
	sp = fp
	r1 = 0x00000001
	r2 = 0x00000000
	r3 = Mem0[0x00009F38:word32]
	Mem0[r3:word32] = r1
	Mem0[r3:word32] = r2
	call lr (retsize: 0;)
	return
	// succ:  SysCtlClkVerificationClear_exit
SysCtlClkVerificationClear_exit:


// UARTParityModeSet
// Return size: 0
void UARTParityModeSet()
UARTParityModeSet_entry:
	// succ:  l00009F38
l00009F38:
	sp = fp
	r3 = Mem0[r0 + 44:word32]
	r3 = r3 & ~0x00000086
	r1 = r1 | r3
	NZC = cond(r1)
	Mem0[r0 + 44:word32] = r1
	call lr (retsize: 0;)
	return
	// succ:  UARTParityModeSet_exit
UARTParityModeSet_exit:


// UARTParityModeGet
// Return size: 0
void UARTParityModeGet()
UARTParityModeGet_entry:
	// succ:  l00009F44
l00009F44:
	sp = fp
	r0 = Mem0[r0 + 44:word32]
	r0 = r0 & 0x00000086
	call lr (retsize: 0;)
	return
	// succ:  UARTParityModeGet_exit
UARTParityModeGet_exit:


// UARTConfigSet
// Return size: 0
void UARTConfigSet()
UARTConfigSet_entry:
	// succ:  l00009F4C
l00009F4C:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = r6
	Mem0[sp + 16:word32] = r7
	Mem0[sp + 20:word32] = lr
	r7 = r1
	r6 = r2
	r5 = r0
	r0 = r0 + 0x00000018
	NZCV = cond(r0)
	r4 = Mem0[r0:word32]
	r4 = r4 & 0x00000008
	NZC = cond(r4)
	branch Test(NE,Z) l0000A152_in_UARTConfigSet
	// succ:  l00009F5E l0000A152_in_UARTConfigSet
l00009F5E:
	r3 = Mem0[r5 + 44:word32]
	r3 = r3 & ~0x00000010
	Mem0[r5 + 44:word32] = r3
	// succ:  l00009F66
l00009F66:
	r2 = Mem0[r5 + 48:word32]
	r2 = r2 & ~0x00000300
	r2 = r2 & ~0x00000001
	Mem0[r5 + 48:word32] = r2
	call fn00009DEC (retsize: 0;)
	r3 = r7 << 4
	NZC = cond(r3)
	r2 = r0 /u r3
	r3 = r0 - r3 * r2
	r3 = r3 << 3
	NZC = cond(r3)
	r3 = r3 /u r7
	r3 = r3 + 0x00000001
	NZCV = cond(r3)
	r3 = r3 >>u 1
	NZC = cond(r3)
	Mem0[r5 + 36:word32] = r2
	Mem0[r5 + 40:word32] = r3
	Mem0[r5 + 44:word32] = r6
	Mem0[r5 + 24:word32] = r4
	r3 = Mem0[r5 + 44:word32]
	r3 = r3 | 0x00000010
	Mem0[r5 + 44:word32] = r3
	r3 = Mem0[r5 + 48:word32]
	r3 = r3 | 0x00000300
	r3 = r3 | 0x00000001
	// succ:  l00009FA4
l00009FA4:
	Mem0[r5 + 48:word32] = r3
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	r6 = Mem0[sp + 12:word32]
	r7 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  UARTConfigSet_exit
l0000A152_in_UARTConfigSet:
	r3 = Mem0[r2:word32]
	r3 = r3 | 0x00000020
	Mem0[r2:word32] = r3
	Mem0[r0 + 4:word32] = r1
	call lr (retsize: 0;)
	return
	// succ:  UARTConfigSet_exit
UARTConfigSet_exit:


// UARTConfigGet
// Return size: 0
void UARTConfigGet()
UARTConfigGet_entry:
	// succ:  l00009FA8
l00009FA8:
	sp = fp
	sp = sp - 24
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = r8
	Mem0[sp + 20:word32] = lr
	r8 = Mem0[r0 + 36:word32]
	r4 = r0
	r7 = r1
	r6 = r2
	r5 = Mem0[r0 + 40:word32]
	call fn00009DEC (retsize: 0;)
	r5 = r5 + (r8 << 0x00000006)
	r0 = r0 << 2
	NZC = cond(r0)
	r0 = r0 /u r5
	Mem0[r7:word32] = r0
	// succ:  l00009FC8
l00009FC8:
	r3 = Mem0[r4 + 44:word32]
	r3 = r3 & 0x000000EE
	Mem0[r6:word32] = r3
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
	// succ:  UARTConfigGet_exit
UARTConfigGet_exit:


// UARTEnable
// Return size: 0
void UARTEnable()
UARTEnable_entry:
	// succ:  l00009FD4
l00009FD4:
	sp = fp
	r3 = Mem0[r0 + 44:word32]
	r3 = r3 | 0x00000010
	Mem0[r0 + 44:word32] = r3
	r3 = Mem0[r0 + 48:word32]
	r3 = r3 | 0x00000300
	r3 = r3 | 0x00000001
	Mem0[r0 + 48:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  UARTEnable_exit
UARTEnable_exit:


// UARTDisable
// Return size: 0
void UARTDisable()
UARTDisable_entry:
	// succ:  l00009FEC
l00009FEC:
	sp = fp
	r2 = r0 + 0x00000018
	r3 = Mem0[r2:word32]
	r3 = r3 << 28
	NZC = cond(r3)
	branch Test(LT,N) l00009FF4_thunk_fn0000A1EC
	goto l00009FF6
	// succ:  l00009FF6 l00009FF4_thunk_fn0000A1EC
l00009FF4_thunk_fn0000A1EC:
	call fn0000A1EC (retsize: 0;)
	return
	// succ:  UARTDisable_exit
l00009FF6:
	r3 = Mem0[r0 + 44:word32]
	r3 = r3 & ~0x00000010
	Mem0[r0 + 44:word32] = r3
	r3 = Mem0[r0 + 48:word32]
	// succ:  l0000A000
l0000A000:
	r3 = r3 & ~0x00000300
	r3 = r3 & ~0x00000001
	Mem0[r0 + 48:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  UARTDisable_exit
UARTDisable_exit:


// UARTCharsAvail
// Return size: 0
void UARTCharsAvail()
UARTCharsAvail_entry:
	// succ:  l0000A00C
l0000A00C:
	sp = fp
	r0 = Mem0[r0 + 24:word32]
	r0 = r0 ^ 0x00000010
	r0 = (uint32) SLICE(r0, ui1, 4)
	call lr (retsize: 0;)
	return
	// succ:  UARTCharsAvail_exit
UARTCharsAvail_exit:


// UARTSpaceAvail
// Return size: 0
void UARTSpaceAvail()
UARTSpaceAvail_entry:
	// succ:  l0000A018
l0000A018:
	sp = fp
	r0 = Mem0[r0 + 24:word32]
	r0 = r0 ^ 0x00000020
	r0 = (uint32) SLICE(r0, ui1, 5)
	call lr (retsize: 0;)
	return
	// succ:  UARTSpaceAvail_exit
UARTSpaceAvail_exit:


// UARTCharNonBlockingGet
// Return size: 0
void UARTCharNonBlockingGet()
UARTCharNonBlockingGet_entry:
	// succ:  l0000A024
l0000A024:
	sp = fp
	r3 = Mem0[r0 + 24:word32]
	r3 = r3 << 27
	NZC = cond(r3)
	branch Test(LT,N) l0000A02C
	// succ:  l0000A02A_1 l0000A02C
l0000A02A_1:
	r0 = Mem0[r0:word32]
	// succ:  l0000A02C
l0000A02C:
	r0 = 0xFFFFFFFF
	call lr (retsize: 0;)
	return
	// succ:  UARTCharNonBlockingGet_exit
UARTCharNonBlockingGet_exit:


// UARTCharGet
// Return size: 0
void UARTCharGet()
UARTCharGet_entry:
	// succ:  l0000A034
l0000A034:
	sp = fp
	r2 = r0 + 0x00000018
	r3 = Mem0[r2:word32]
	r3 = r3 << 27
	NZC = cond(r3)
	branch Test(LT,N) l0000A234_in_UARTCharGet
	// succ:  l0000A03E l0000A234_in_UARTCharGet
l0000A03E:
	r0 = Mem0[r0:word32]
	call lr (retsize: 0;)
	return
	// succ:  UARTCharGet_exit
l0000A234_in_UARTCharGet:
	call lr (retsize: 0;)
	return
	// succ:  UARTCharGet_exit
UARTCharGet_exit:


// UARTCharNonBlockingPut
// Return size: 0
void UARTCharNonBlockingPut()
UARTCharNonBlockingPut_entry:
	// succ:  l0000A044
l0000A044:
	sp = fp
	r3 = Mem0[r0 + 24:word32]
	r3 = r3 << 26
	NZC = cond(r3)
	branch Test(LT,N) l0000A04C
	// succ:  l0000A04A_1 l0000A04C
l0000A04A_1:
	Mem0[r0:word32] = r1
	// succ:  l0000A04C
l0000A04C:
	r0 = 0x00000001
	r0 = 0x00000000
	call lr (retsize: 0;)
	return
	// succ:  UARTCharNonBlockingPut_exit
UARTCharNonBlockingPut_exit:


// UARTCharPut
// Return size: 0
void UARTCharPut()
UARTCharPut_entry:
	// succ:  l0000A054
l0000A054:
	sp = fp
	r2 = r0 + 0x00000018
	r3 = Mem0[r2:word32]
	r3 = r3 << 26
	NZC = cond(r3)
	branch Test(LT,N) l0000A254
	// succ:  l0000A05E l0000A254
l0000A05E:
	Mem0[r0:word32] = r1
	call lr (retsize: 0;)
	return
	// succ:  UARTCharPut_exit
l0000A254:
	r7 = r5 << 1
	NZC = cond(r7)
	r0 = r0
	r3 = Mem0[r0 + 4:word32]
	Mem0[r4 + 52:word32] = r5
	r3 = r5 << 1
	NZC = cond(r3)
	r0 = r0
	Mem0[r2 + 9:byte] = (byte) r0
	r1 = Mem0[r5 + 100:word32]
	r4 = r6 << 1
	NZC = cond(r4)
	r0 = r0
	r3 = Mem0[r2 + 4:word32]
	Mem0[r5 + 21:byte] = (byte) r7
	Mem0[r5 + 68:word32] = r4
	r0 = Mem0[r4 + 96:word32]
	Mem0[r5 + 17:byte] = (byte) r7
	Mem0[r4 + 32:word32] = r0
	r0 = 0x00000065
	r4 = Mem0[r6 + 4:word32]
	Mem0[r4 + 9:byte] = (byte) r5
	r5 = r4 << 1
	NZC = cond(r5)
	r1 = r1 + r9
	NZCV = cond(r1)
	NZCV = cond(r4 - r9)
	r0 = r0
	r0 = r0
	r6 = r2 << 2
	NZC = cond(r6)
	r0 = r0
	r0 = r1 << 3
	NZC = cond(r0)
	r0 = r0
	r2 = r7 << 3
	NZC = cond(r2)
	r0 = r0
	r4 = r5 << 4
	NZC = cond(r4)
	r0 = r0
	r6 = r3 << 5
	NZC = cond(r6)
	r0 = r0
	r0 = r2 << 6
	NZC = cond(r0)
	r0 = r0
	r2 = r0 << 7
	NZC = cond(r2)
	r0 = r0
	r4 = r6 << 7
	NZC = cond(r4)
	r0 = r0
	r0 = r0 << 28
	NZC = cond(r0)
	r0 = r0
	r0 = r0 << 24
	NZC = cond(r0)
	r0 = r0
	r0 = r0 << 20
	NZC = cond(r0)
	r0 = r0
	r0 = r0 << 16
	NZC = cond(r0)
	r0 = r0
	r0 = r0 << 12
	NZC = cond(r0)
	r0 = r0
	r0 = r0 << 8
	NZC = cond(r0)
	r0 = r0
	r0 = r0 << 4
	NZC = cond(r0)
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
	r0 = r0
UARTCharPut_exit:


// UARTBreakCtl
// Return size: 0
void UARTBreakCtl()
UARTBreakCtl_entry:
	// succ:  l0000A064
l0000A064:
	sp = fp
	r3 = Mem0[r0 + 44:word32]
	branch r1 != 0x00000000 l0000A070
	// succ:  l0000A068 l0000A070
l0000A068:
	r3 = r3 & ~0x00000001
	Mem0[r0 + 44:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  UARTBreakCtl_exit
l0000A070:
	r3 = r3 | 0x00000001
	Mem0[r0 + 44:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  UARTBreakCtl_exit
UARTBreakCtl_exit:


// UARTIntRegister
// Return size: 0
void UARTIntRegister()
UARTIntRegister_entry:
	// succ:  l0000A078
l0000A078:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	r4 = Mem0[0x0000A09A:word32]
	NZCV = cond(r0 - r4)
	branch Test(NE,Z) l0000A082
	// succ:  l0000A080_1 l0000A082
l0000A080_1:
	r4 = 0x00000015
	// succ:  l0000A082
l0000A082:
	r4 = 0x00000016
	r0 = r4
	call IntMasterDisable (retsize: 0;)
	r0 = r4
	r4 = Mem0[sp:word32]
	lr = Mem0[sp + 4:word32]
	sp = sp + 8
	// succ:  l0000A090_thunk_fn000095D8
l0000A090_thunk_fn000095D8:
	call fn000095D8 (retsize: 0;)
	return
	// succ:  UARTIntRegister_exit
UARTIntRegister_exit:


// UARTIntUnregister
// Return size: 0
void UARTIntUnregister()
UARTIntUnregister_entry:
	// succ:  l0000A098
l0000A098:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = lr
	r4 = Mem0[0x0000A0BA:word32]
	NZCV = cond(r0 - r4)
	branch Test(NE,Z) l0000A0A2
	// succ:  l0000A0A0_1 l0000A0A2
l0000A0A0_1:
	r4 = 0x00000015
	// succ:  l0000A0A2
l0000A0A2:
	r4 = 0x00000016
	r0 = r4
	call fn00009634 (retsize: 0;)
	r0 = r4
	r4 = Mem0[sp:word32]
	lr = Mem0[sp + 4:word32]
	sp = sp + 8
	// succ:  l0000A0B0_thunk_fn00009534
l0000A0B0_thunk_fn00009534:
	call fn00009534 (retsize: 0;)
	return
	// succ:  UARTIntUnregister_exit
UARTIntUnregister_exit:


// UARTIntEnable
// Return size: 0
void UARTIntEnable()
UARTIntEnable_entry:
	// succ:  l0000A0B8
l0000A0B8:
	sp = fp
	r3 = Mem0[r0 + 56:word32]
	r1 = r1 | r3
	NZC = cond(r1)
	Mem0[r0 + 56:word32] = r1
	call lr (retsize: 0;)
	return
	// succ:  UARTIntEnable_exit
UARTIntEnable_exit:


// UARTIntDisable
// Return size: 0
void UARTIntDisable()
UARTIntDisable_entry:
	// succ:  l0000A0C0
l0000A0C0:
	sp = fp
	r3 = Mem0[r0 + 56:word32]
	r1 = r3 & ~(r1 << 0x00000000)
	Mem0[r0 + 56:word32] = r1
	call lr (retsize: 0;)
	return
	// succ:  UARTIntDisable_exit
UARTIntDisable_exit:


// fn0000A0C8
// Return size: 0
void fn0000A0C8()
fn0000A0C8_entry:
	// succ:  l0000A0C8
l0000A0C8:
	sp = fp
	call lr (retsize: 0;)
	return
	// succ:  fn0000A0C8_exit
fn0000A0C8_exit:


// UARTIntStatus
// Return size: 0
void UARTIntStatus()
UARTIntStatus_entry:
	// succ:  l0000A0CC
l0000A0CC:
	sp = fp
	branch r1 != 0x00000000 l0000A0D2
	// succ:  l0000A0CE l0000A0D2
l0000A0CE:
	r0 = Mem0[r0 + 60:word32]
	call lr (retsize: 0;)
	return
	// succ:  UARTIntStatus_exit
l0000A0D2:
	r0 = Mem0[r0 + 64:word32]
	call lr (retsize: 0;)
	return
	// succ:  UARTIntStatus_exit
UARTIntStatus_exit:


// fn0000A0D4
// Return size: 0
void fn0000A0D4()
fn0000A0D4_entry:
	// succ:  l0000A0D4
l0000A0D4:
	sp = fp
	call lr (retsize: 0;)
	return
	// succ:  fn0000A0D4_exit
fn0000A0D4_exit:


// UARTIntClear
// Return size: 0
void UARTIntClear()
UARTIntClear_entry:
	// succ:  l0000A0D8
l0000A0D8:
	sp = fp
	Mem0[r0 + 68:word32] = r1
	call lr (retsize: 0;)
	return
	// succ:  UARTIntClear_exit
UARTIntClear_exit:


// CPUcpsie
// Return size: 0
void CPUcpsie()
CPUcpsie_entry:
	// succ:  l0000A0DC
l0000A0DC:
	sp = fp
CPUcpsie_exit:


// CPUcpsid
// Return size: 0
void CPUcpsid()
CPUcpsid_entry:
	// succ:  l0000A0E4
l0000A0E4:
	sp = fp
CPUcpsid_exit:


// fn0000A0E8
// Return size: 0
void fn0000A0E8()
fn0000A0E8_entry:
	// succ:  l0000A0E8
l0000A0E8:
	sp = fp
	call lr (retsize: 0;)
	return
	// succ:  fn0000A0E8_exit
fn0000A0E8_exit:


// CPUwfi
// Return size: 0
void CPUwfi()
CPUwfi_entry:
	// succ:  l0000A0EC
l0000A0EC:
	sp = fp
CPUwfi_exit:


// fn0000A0F0
// Return size: 0
void fn0000A0F0()
fn0000A0F0_entry:
	// succ:  l0000A0F0
l0000A0F0:
	sp = fp
	call lr (retsize: 0;)
	return
	// succ:  fn0000A0F0_exit
fn0000A0F0_exit:


// I2CMasterInit
// Return size: 0
void I2CMasterInit()
I2CMasterInit_entry:
	// succ:  l0000A0F4
l0000A0F4:
	sp = fp
	sp = sp - 16
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = r4
	Mem0[sp + 8:word32] = r5
	Mem0[sp + 12:word32] = lr
	r5 = r1
	r2 = Mem0[r0 + 32:word32]
	r4 = r0
	r2 = r2 | 0x00000010
	Mem0[r0 + 32:word32] = r2
	call fn00009DEC (retsize: 0;)
	r3 = Mem0[0x0000A126:word32]
	r2 = Mem0[0x0000A128:word32]
	r0 = r0 - 0x00000001
	NZCV = cond(r0)
	NZCV = cond(r5 - 0x00000001)
	branch Test(NE,Z) l0000A112
	// succ:  l0000A110_1 l0000A112
l0000A110_1:
	r3 = r2
	// succ:  l0000A112
l0000A112:
	r1 = r0 + r3
	r1 = r1 /u r3
	r1 = r1 - 0x00000001
	NZCV = cond(r1)
	Mem0[r4 + 12:word32] = r1
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
	// succ:  I2CMasterInit_exit
I2CMasterInit_exit:


// I2CSlaveInit
// Return size: 0
void I2CSlaveInit()
I2CSlaveInit_entry:
	// succ:  l0000A128
l0000A128:
	sp = fp
	sp = sp - 4
	Mem0[sp:word32] = r4
	r4 = 0x00000001
	r2 = r0 - 0x000007E0
	r3 = Mem0[r2:word32]
	r3 = r3 | 0x00000020
	Mem0[r2:word32] = r3
	Mem0[r0 + 4:word32] = r4
	Mem0[r0:word32] = r1
	r4 = Mem0[sp:word32]
	sp = sp + 4
	call lr (retsize: 0;)
	return
	// succ:  I2CSlaveInit_exit
I2CSlaveInit_exit:


// I2CMasterEnable
// Return size: 0
void I2CMasterEnable()
I2CMasterEnable_entry:
	// succ:  l0000A140
l0000A140:
	sp = fp
	r3 = Mem0[r0 + 32:word32]
	r3 = r3 | 0x00000010
	Mem0[r0 + 32:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  I2CMasterEnable_exit
I2CMasterEnable_exit:


// I2CSlaveEnable
// Return size: 0
void I2CSlaveEnable()
I2CSlaveEnable_entry:
	// succ:  l0000A14C
l0000A14C:
	sp = fp
	r1 = 0x00000001
	r2 = r0 - 0x000007E0
	// succ:  l0000A152
l0000A152:
	r3 = Mem0[r2:word32]
	r3 = r3 | 0x00000020
	Mem0[r2:word32] = r3
	Mem0[r0 + 4:word32] = r1
	call lr (retsize: 0;)
	return
	// succ:  I2CSlaveEnable_exit
I2CSlaveEnable_exit:


// I2CMasterDisable
// Return size: 0
void I2CMasterDisable()
I2CMasterDisable_entry:
	// succ:  l0000A160
l0000A160:
	sp = fp
	r3 = Mem0[r0 + 32:word32]
	r3 = r3 & ~0x00000010
	Mem0[r0 + 32:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  I2CMasterDisable_exit
I2CMasterDisable_exit:


// I2CSlaveDisable
// Return size: 0
void I2CSlaveDisable()
I2CSlaveDisable_entry:
	// succ:  l0000A16C
l0000A16C:
	sp = fp
	r3 = 0x00000000
	r2 = r0 - 0x000007E0
	Mem0[r0 + 4:word32] = r3
	r3 = Mem0[r2:word32]
	r3 = r3 & ~0x00000020
	Mem0[r2:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  I2CSlaveDisable_exit
I2CSlaveDisable_exit:


// I2CIntRegister
// Return size: 0
void I2CIntRegister()
I2CIntRegister_entry:
	// succ:  l0000A180
l0000A180:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = lr
	r0 = 0x00000018
	call IntMasterDisable (retsize: 0;)
	r3 = Mem0[sp:word32]
	lr = Mem0[sp + 4:word32]
	sp = sp + 8
	r0 = 0x00000018
	// succ:  l0000A18E_thunk_fn000095D8
l0000A18E_thunk_fn000095D8:
	call fn000095D8 (retsize: 0;)
	return
	// succ:  I2CIntRegister_exit
I2CIntRegister_exit:


// I2CIntUnregister
// Return size: 0
void I2CIntUnregister()
I2CIntUnregister_entry:
	// succ:  l0000A194
l0000A194:
	sp = fp
	sp = sp - 8
	Mem0[sp:word32] = r3
	Mem0[sp + 4:word32] = lr
	r0 = 0x00000018
	call fn00009634 (retsize: 0;)
	r3 = Mem0[sp:word32]
	lr = Mem0[sp + 4:word32]
	sp = sp + 8
	r0 = 0x00000018
	// succ:  l0000A1A2_thunk_fn00009534
l0000A1A2_thunk_fn00009534:
	call fn00009534 (retsize: 0;)
	return
	// succ:  I2CIntUnregister_exit
I2CIntUnregister_exit:


// I2CMasterIntEnable
// Return size: 0
void I2CMasterIntEnable()
I2CMasterIntEnable_entry:
	// succ:  l0000A1A8
l0000A1A8:
	sp = fp
	r3 = 0x00000001
	Mem0[r0 + 16:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  I2CMasterIntEnable_exit
I2CMasterIntEnable_exit:


// I2CSlaveIntEnable
// Return size: 0
void I2CSlaveIntEnable()
I2CSlaveIntEnable_entry:
	// succ:  l0000A1B0
l0000A1B0:
	sp = fp
	r3 = 0x00000001
	Mem0[r0 + 12:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  I2CSlaveIntEnable_exit
I2CSlaveIntEnable_exit:


// I2CMasterIntDisable
// Return size: 0
void I2CMasterIntDisable()
I2CMasterIntDisable_entry:
	// succ:  l0000A1B8
l0000A1B8:
	sp = fp
	r3 = 0x00000000
	Mem0[r0 + 16:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  I2CMasterIntDisable_exit
I2CMasterIntDisable_exit:


// I2CSlaveIntDisable
// Return size: 0
void I2CSlaveIntDisable()
I2CSlaveIntDisable_entry:
	// succ:  l0000A1C0
l0000A1C0:
	sp = fp
	r3 = 0x00000000
	Mem0[r0 + 12:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  I2CSlaveIntDisable_exit
I2CSlaveIntDisable_exit:


// fn0000A1C4
// Return size: 0
void fn0000A1C4()
fn0000A1C4_entry:
	// succ:  l0000A1C4
l0000A1C4:
	sp = fp
	call lr (retsize: 0;)
	return
	// succ:  fn0000A1C4_exit
fn0000A1C4_exit:


// I2CMasterIntStatus
// Return size: 0
void I2CMasterIntStatus()
I2CMasterIntStatus_entry:
	// succ:  l0000A1C8
l0000A1C8:
	sp = fp
	branch r1 != 0x00000000 l0000A1D4
	// succ:  l0000A1CA l0000A1D4
l0000A1CA:
	r0 = Mem0[r0 + 20:word32]
	r0 = r0 + 0x00000000
	NZCV = cond(r0)
	branch Test(EQ,Z) l0000A1D2
	// succ:  l0000A1D0_1 l0000A1D2
l0000A1D0_1:
	r0 = 0x00000001
	// succ:  l0000A1D2
l0000A1D2:
	call lr (retsize: 0;)
	return
	// succ:  I2CMasterIntStatus_exit
l0000A1D4:
	r0 = Mem0[r0 + 24:word32]
	r0 = r0 + 0x00000000
	NZCV = cond(r0)
	branch Test(EQ,Z) l0000A1DC
	// succ:  l0000A1DA_1 l0000A1DC
l0000A1DA_1:
	r0 = 0x00000001
	// succ:  l0000A1DC
l0000A1DC:
	call lr (retsize: 0;)
	return
	// succ:  I2CMasterIntStatus_exit
I2CMasterIntStatus_exit:


// I2CSlaveIntStatus
// Return size: 0
void I2CSlaveIntStatus()
I2CSlaveIntStatus_entry:
	// succ:  l0000A1E0
l0000A1E0:
	sp = fp
	branch r1 != 0x00000000 l0000A1EC
	goto l0000A1E2
	// succ:  l0000A1E2 l0000A1E0_thunk_fn0000A1EC
l0000A1E0_thunk_fn0000A1EC:
	call fn0000A1EC (retsize: 0;)
	return
	// succ:  I2CSlaveIntStatus_exit
l0000A1E2:
	r0 = Mem0[r0 + 16:word32]
	r0 = r0 + 0x00000000
	NZCV = cond(r0)
	branch Test(EQ,Z) l0000A1EA
	// succ:  l0000A1E8_1 l0000A1EA
l0000A1E8_1:
	r0 = 0x00000001
	// succ:  l0000A1EA
l0000A1EA:
	call lr (retsize: 0;)
	return
	// succ:  I2CSlaveIntStatus_exit
I2CSlaveIntStatus_exit:


// fn0000A1EC
// Return size: 0
void fn0000A1EC()
fn0000A1EC_entry:
	// succ:  l0000A1EC
l0000A1EC:
	sp = v3
	r0 = Mem0[r0 + 20:word32]
	r0 = r0 + 0x00000000
	NZCV = cond(r0)
	branch Test(EQ,Z) l0000A1F4
	// succ:  l0000A1F2_1 l0000A1F4
l0000A1F2_1:
	r0 = 0x00000001
	// succ:  l0000A1F4
l0000A1F4:
	call lr (retsize: 0;)
	return
	// succ:  fn0000A1EC_exit
fn0000A1EC_exit:


// I2CMasterIntClear
// Return size: 0
void I2CMasterIntClear()
I2CMasterIntClear_entry:
	// succ:  l0000A1F8
l0000A1F8:
	sp = fp
	r3 = 0x00000001
	Mem0[r0 + 28:word32] = r3
	Mem0[r0 + 24:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  I2CMasterIntClear_exit
I2CMasterIntClear_exit:


// I2CSlaveIntClear
// Return size: 0
void I2CSlaveIntClear()
I2CSlaveIntClear_entry:
	// succ:  l0000A200
l0000A200:
	sp = fp
	r3 = 0x00000001
	Mem0[r0 + 24:word32] = r3
	call lr (retsize: 0;)
	return
	// succ:  I2CSlaveIntClear_exit
I2CSlaveIntClear_exit:


// fn0000A204
// Return size: 0
void fn0000A204()
fn0000A204_entry:
	// succ:  l0000A204
l0000A204:
	sp = fp
	call lr (retsize: 0;)
	return
	// succ:  fn0000A204_exit
fn0000A204_exit:


// I2CMasterSlaveAddrSet
// Return size: 0
void I2CMasterSlaveAddrSet()
I2CMasterSlaveAddrSet_entry:
	// succ:  l0000A208
l0000A208:
	sp = fp
	r2 = r2 | r1 << 0x00000001
	Mem0[r0:word32] = r2
	call lr (retsize: 0;)
	return
	// succ:  I2CMasterSlaveAddrSet_exit
I2CMasterSlaveAddrSet_exit:


// I2CMasterBusy
// Return size: 0
void I2CMasterBusy()
I2CMasterBusy_entry:
	// succ:  l0000A210
l0000A210:
	sp = fp
	r0 = Mem0[r0 + 4:word32]
	r0 = r0 & 0x00000001
	call lr (retsize: 0;)
	return
	// succ:  I2CMasterBusy_exit
I2CMasterBusy_exit:


// I2CMasterBusBusy
// Return size: 0
void I2CMasterBusBusy()
I2CMasterBusBusy_entry:
	// succ:  l0000A218
l0000A218:
	sp = fp
	r0 = Mem0[r0 + 4:word32]
	r0 = (uint32) SLICE(r0, ui1, 6)
	call lr (retsize: 0;)
	return
	// succ:  I2CMasterBusBusy_exit
I2CMasterBusBusy_exit:


// fn0000A21C
// Return size: 0
void fn0000A21C()
fn0000A21C_entry:
	// succ:  l0000A21C
l0000A21C:
	sp = fp
	r0 = r0 >> 2
	NZC = cond(r0)
	call lr (retsize: 0;)
	return
	// succ:  fn0000A21C_exit
fn0000A21C_exit:


// I2CMasterControl
// Return size: 0
void I2CMasterControl()
I2CMasterControl_entry:
	// succ:  l0000A220
l0000A220:
	sp = fp
	Mem0[r0 + 4:word32] = r1
	call lr (retsize: 0;)
	return
	// succ:  I2CMasterControl_exit
I2CMasterControl_exit:


// I2CMasterErr
// Return size: 0
void I2CMasterErr()
I2CMasterErr_entry:
	// succ:  l0000A224
l0000A224:
	sp = fp
	r3 = Mem0[r0 + 4:word32]
	r2 = r3 << 31
	NZC = cond(r2)
	branch Test(LT,N) l0000A232
	// succ:  l0000A22A l0000A232
l0000A22A:
	r0 = r3 & 0x00000002
	NZC = cond(r0)
	branch Test(EQ,Z) l0000A234
	// succ:  l0000A230 l0000A234
l0000A230:
	r0 = r3 & 0x0000001C
	goto l0000A234
	// succ:  l0000A234
l0000A232:
	r4 = r3
	// succ:  l0000A234
l0000A234:
	call lr (retsize: 0;)
	return
	// succ:  I2CMasterErr_exit
I2CMasterErr_exit:


// fn0000A238
// Return size: 0
void fn0000A238()
fn0000A238_entry:
	// succ:  l0000A238
l0000A238:
	sp = fp
	call lr (retsize: 0;)
	return
	// succ:  fn0000A238_exit
fn0000A238_exit:


// I2CMasterDataPut
// Return size: 0
void I2CMasterDataPut()
I2CMasterDataPut_entry:
	// succ:  l0000A23C
l0000A23C:
	sp = fp
	Mem0[r0 + 8:word32] = r1
	call lr (retsize: 0;)
	return
	// succ:  I2CMasterDataPut_exit
I2CMasterDataPut_exit:


// I2CMasterDataGet
// Return size: 0
void I2CMasterDataGet()
I2CMasterDataGet_entry:
	// succ:  l0000A240
l0000A240:
	sp = fp
	r0 = Mem0[r0 + 8:word32]
	call lr (retsize: 0;)
	return
	// succ:  I2CMasterDataGet_exit
I2CMasterDataGet_exit:


// I2CSlaveStatus
// Return size: 0
void I2CSlaveStatus()
I2CSlaveStatus_entry:
	// succ:  l0000A244
l0000A244:
	sp = fp
	r0 = Mem0[r0 + 4:word32]
	call lr (retsize: 0;)
	return
	// succ:  I2CSlaveStatus_exit
I2CSlaveStatus_exit:


// I2CSlaveDataPut
// Return size: 0
void I2CSlaveDataPut()
I2CSlaveDataPut_entry:
	// succ:  l0000A248
l0000A248:
	sp = fp
	Mem0[r0 + 8:word32] = r1
	call lr (retsize: 0;)
	return
	// succ:  I2CSlaveDataPut_exit
I2CSlaveDataPut_exit:


// I2CSlaveDataGet
// Return size: 0
void I2CSlaveDataGet()
I2CSlaveDataGet_entry:
	// succ:  l0000A24C
l0000A24C:
	sp = fp
	r0 = Mem0[r0 + 8:word32]
	call lr (retsize: 0;)
	return
	// succ:  I2CSlaveDataGet_exit
I2CSlaveDataGet_exit:


// fn0000A5C0
// Return size: 0
void fn0000A5C0()
fn0000A5C0_entry:
	// succ:  l0000A5C0
l0000A5C0:
	sp = fp
	r0 = r0
	r5 = r7 << 1
	NZC = cond(r5)
	// succ:  l0000A5C2_thunk_memcpy
l0000A5C2_thunk_memcpy:
	call memcpy (retsize: 0;)
	return
	// succ:  fn0000A5C0_exit
fn0000A5C0_exit:


// memcpy
// Return size: 0
void memcpy()
memcpy_entry:
	// succ:  l0000A5C4
l0000A5C4:
	sp = fp
	sp = sp - 20
	Mem0[sp:word32] = r4
	Mem0[sp + 4:word32] = r5
	Mem0[sp + 8:word32] = r6
	Mem0[sp + 12:word32] = r7
	Mem0[sp + 16:word32] = lr
	r5 = r0
	NZCV = cond(r2 - 0x0000000F)
	branch Test(ULE,ZC) l0000A628
	// succ:  l0000A5CC l0000A628
l0000A5CC:
	r3 = r1
	r3 = r3 | r0
	NZC = cond(r3)
	r3 = r3 << 30
	NZC = cond(r3)
	branch Test(NE,Z) l0000A63E
	// succ:  l0000A5D4 l0000A63E
l0000A5D4:
	r6 = r2
	r4 = r1
	r3 = r0
	r6 = r6 - 0x00000010
	NZCV = cond(r6)
	r5 = r6 >>u 4
	NZC = cond(r5)
	r5 = r5 + 0x00000001
	NZCV = cond(r5)
	r5 = r5 << 4
	NZC = cond(r5)
	r5 = r0 + r5
	r7 = Mem0[r4:word32]
	Mem0[r3:word32] = r7
	r7 = Mem0[r4 + 4:word32]
	Mem0[r3 + 4:word32] = r7
	r7 = Mem0[r4 + 8:word32]
	Mem0[r3 + 8:word32] = r7
	r7 = Mem0[r4 + 12:word32]
	Mem0[r3 + 12:word32] = r7
	r3 = r3 + 0x00000010
	NZCV = cond(r3)
	r4 = r4 + 0x00000010
	NZCV = cond(r4)
	NZCV = cond(r5 - r3)
	branch Test(NE,Z) l0000A5FA_then
	call fn0000A7E0 (retsize: 0;)
	return
	// succ:  l0000A5FC l0000A5FA_then
l0000A5FA_then:
l0000A5FC:
	r3 = 0x0000000F
	goto memcpy_exit
	// succ:  memcpy_exit
l0000A628:
	r1 = r1 + r3
	r5 = r5 + r3
	NZCV = cond(r2 - 0x00000000)
	branch Test(EQ,Z) l0000A638
	// succ:  l0000A630 l0000A638
l0000A630:
	r3 = 0x00000000
	r4 = (word32) Mem0[r1 + r3:byte]
	Mem0[r5 + r3:byte] = (byte) r4
	r3 = r3 + 0x00000001
	NZCV = cond(r3)
	// succ:  l0000A638
l0000A638:
	NZCV = cond(r3 - r2)
	branch Test(NE,Z) l0000A63A_then
	call fn0000A82E (retsize: 0;)
	return
	// succ:  l0000A63C l0000A63A_then
l0000A63A_then:
l0000A63C:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	sp = sp + 16
	// succ:  memcpy_exit l0000A63E
l0000A63E:
	r1 = Mem0[sp:word32]
	sp = sp + 4
	call r1 (retsize: 0;)
	return
	// succ:  memcpy_exit
memcpy_exit:


