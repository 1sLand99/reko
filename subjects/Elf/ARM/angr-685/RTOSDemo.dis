void prvUnlockQueue(word32 r0, word32 r6, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r6:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: cpsr lr r4 r5 r6 sp
prvUnlockQueue_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000058:
	word32 r0_15
	vPortEnterCritical(cpsr, out r0_15)
	word32 r5_112 = r0
	word32 r4_146 = (int32) (int8) (word32) Mem11[r0 + 69:byte]
	branch r4_146 <= 0x00000000 l00000082
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000006A:
	branch Mem11[r0 + 36:word32] == 0x00000000 l00000098
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000006E:
	r6 = r0 + 0x00000024
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000080:
	r0_15 = r6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000082:
	branch xTaskRemoveFromEventList(r0_15) == 0x00000000 l00000074
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000074:
	word32 r3_43 = (uint32) (byte) (r4_146 - 0x00000001)
	r4_146 = (int32) (int8) r3_43
	branch r3_43 == 0x00000000 l00000098
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000008A:
	vTaskMissedYield()
	word32 r3_49 = (uint32) (byte) (r4_146 - 0x00000001)
	r4_146 = (int32) (int8) r3_49
	branch r3_49 != 0x00000000 l0000007C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000007C:
	branch Mem57[r5_112 + 36:word32] == 0x00000000 l00000098
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000098:
	Mem62[r5_112 + 69:byte] = 0xFF
	vPortExitCritical(cpsr)
	word32 r0_73
	vPortEnterCritical(cpsr, out r0_73)
	word32 r4_102 = (int32) (int8) (word32) Mem62[r5_112 + 68:byte]
	branch r4_102 <= 0x00000000 l000000C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000B0:
	branch Mem62[r5_112 + 16:word32] == 0x00000000 l000000DE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000B4:
	r6 = r5_112 + 0x00000010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000C6:
	r0_73 = r6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000C8:
	branch xTaskRemoveFromEventList(r0_73) == 0x00000000 l000000BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000BA:
	word32 r3_101 = (uint32) (byte) (r4_102 - 0x00000001)
	r4_102 = (int32) (int8) r3_101
	branch r3_101 == 0x00000000 l000000DE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000D0:
	vTaskMissedYield()
	word32 r3_107 = (uint32) (byte) (r4_102 - 0x00000001)
	r4_102 = (int32) (int8) r3_107
	branch r3_107 != 0x00000000 l000000C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000C2:
	branch Mem115[r5_112 + 16:word32] == 0x00000000 l000000DE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000DE:
	Mem120[r5_112 + 68:byte] = 0xFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000E8_thunk_vPortExitCritical:
	vPortExitCritical(cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvUnlockQueue_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte prvCopyDataToQueue(word32 r0, word32 r1, word32 r2, word32 r3, word32 r7, word32 lr, ptr32 & r0Out, ptr32 & r7Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r7:[0..31]
// LiveOut: Z lr r0 r7
// Trashed: NZCV lr r0 r1 r2 r3 r7
// Preserved: r4 r5 r6 sp
prvCopyDataToQueue_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000EC:
	byte Z_194
	word32 r5_117
	word32 r4_124 = r0
	word32 r0_109 = Mem11[r0 + 64:word32]
	word32 r5_15 = Mem11[r0 + 56:word32]
	branch r0_109 != 0x00000000 l00000102
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000102:
	branch r2 != 0x00000000 l00000128
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000128:
	word32 r6_30
	memcpy(Mem11[r0 + 12:word32], r1, r0_109, r3, r0, r5_15, r2, r7, lr, out r4_124, out r5_117, out r6_30, out r7, out lr)
	word32 r3_38 = Mem11[r4_124 + 12:word32]
	word32 r1_40 = Mem11[r4_124:word32]
	Mem43[r4_124 + 12:word32] = r3_38
	branch r3_38 >=u r1_40 l00000144
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000013E:
	Mem48[r4_124 + 12:word32] = Mem43[r4_124 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000144:
	Z_194 = SLICE(cond(r6_30 - 0x00000002), bool, 2) (alias)
	branch r6_30 == 0x00000002 l00000158
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000158:
	branch r5_117 != 0x00000000 l0000015C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000015A:
	r5_117 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000015C:
	r0_109 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000148:
	Mem59[r4_124 + 56:word32] = r5_117 + 0x00000001
	r0Out = 0x00000000
	r7Out = r7
	lrOut = lr
	return SLICE(cond(r5_117 + 0x00000001), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000108:
	word32 lr_66
	word32 r4_71
	word32 r5_72
	word32 r6_73
	word32 r7_74
	memcpy(Mem11[r0 + 8:word32], r1, r0_109, r3, r0, r5_15, r2, r7, lr, out r4_71, out r5_72, out r6_73, out r7_74, out lr_66)
	word32 r2_82 = Mem11[r4_71 + 4:word32]
	word32 r3_83 = Mem11[r4_71 + 8:word32] + Mem11[r4_71 + 64:word32]
	Mem85[r4_71 + 8:word32] = r3_83
	branch r3_83 <u r2_82 l00000150
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000150:
	Mem90[r4_71 + 56:word32] = r5_72 + 0x00000001
	r0Out = r6_73
	r7Out = r7_74
	lrOut = lr_66
	return SLICE(cond(r5_72 + 0x00000001), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000011C:
	Mem99[r4_71 + 8:word32] = Mem85[r4_71:word32]
	Mem100[r4_71 + 56:word32] = r5_72 + 0x00000001
	r0Out = r6_73
	r7Out = r7_74
	lrOut = lr_66
	return SLICE(cond(r5_72 + 0x00000001), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000F6:
	word32 r6_105 = Mem11[r0:word32]
	branch r6_105 == 0x00000000 l00000160
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000160:
	r0_109 = xTaskPriorityDisinherit(Mem11[r0 + 4:word32], out lr)
	Mem119[r0 + 4:word32] = r6_105
	r5_117 = r5_15 + 0x00000001
	Z_194 = SLICE(cond(r5_15 + 0x00000001), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000FC:
	r5_117 = r5_15 + 0x00000001
	Z_194 = SLICE(cond(r5_15 + 0x00000001), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000FE:
	Mem126[r4_124 + 56:word32] = r5_117
	r0Out = r0_109
	r7Out = r7
	lrOut = lr
	return Z_194
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvCopyDataToQueue_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 prvCopyDataFromQueue(word32 r0, word32 r1, word32 r4, word32 r5, word32 r6, word32 r7, word32 lr, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r4 r5 r6 r7
// Trashed: lr r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved: NZCV
prvCopyDataFromQueue_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000016C:
	word32 r2_5 = Mem0[r0 + 64:word32]
	branch r2_5 == 0x00000000 l0000018C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000018C:
	r5Out = r5
	r6Out = r6
	r7Out = r7
	lrOut = lr
	return r4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000170:
	word32 r4_12 = Mem10[r0 + 4:word32]
	word32 r1_13 = Mem10[r0 + 12:word32] + r2_5
	Mem15[r0 + 12:word32] = r1_13
	branch r1_13 <u r4_12 l00000182
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000180_1:
	r1_13 = Mem15[r0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000182:
	Mem20[r0 + 12:word32] = r1_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000188_thunk_memcpy:
	word32 lr_35
	word32 r4_40
	word32 r5_41
	word32 r6_42
	word32 r7_43
	memcpy(r1, r1_13, r2_5, r1, r4, r5, r6, r7, lr, out r4_40, out r5_41, out r6_42, out r7_43, out lr_35)
	r5Out = r5_41
	r6Out = r6_42
	r7Out = r7_43
	lrOut = lr_35
	return r4_40
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvCopyDataFromQueue_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 xQueueGenericSend(word32 r0, word32 r1, word32 r2, word32 r3, word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31]
// LiveOut: lr
// Trashed: NZCV lr r0 r1 r2 r3
// Preserved: r10 r4 r5 r6 r7 r8 r9 sp
xQueueGenericSend_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000190:
	word32 r5_125 = 0x00000000
	word32 r9_31 = Mem27[0x000002A0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000001F8:
	vPortEnterCritical(cpsr, out r0_409)
	word32 r3_42 = Mem40[r0 + 60:word32]
	branch Mem40[r0 + 56:word32] <u r3_42 l00000246
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000204:
	branch r3 == 0x00000002 l00000246
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000246:
	word32 lr_58
	word32 r0_59
	prvCopyDataToQueue(r0, r1, r3, r3_42, r3, lr, out r0_59, out r7_410, out lr_58)
	branch Mem40[r0 + 36:word32] != 0x00000000 l00000290
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000290:
	branch xTaskRemoveFromEventList(r0 + 0x00000024) != 0x00000000 l00000256
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000029C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000254:
	branch r0_59 == 0x00000000 l00000266
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000256:
	Mem83[Mem40[0x000002A0:word32]:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000266:
	vPortExitCritical(cpsr)
	return lr_58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000208:
	branch r2 == 0x00000000 l00000272
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000272:
	vPortExitCritical(cpsr)
	return lr
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000020C:
	branch r5_125 != 0x00000000 l000001A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000210:
	vTaskSetTimeOutState(fp - 40)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000001A8:
	vPortExitCritical(cpsr)
	vTaskSuspendAll()
	vPortEnterCritical(cpsr, out r0_411)
	branch (word32) Mem40[r0 + 68:byte] != 0x000000FF l000001C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000001BC_1:
	Mem157[r0 + 68:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000001C0:
	branch (word32) Mem159[r0 + 69:byte] != 0x000000FF l000001CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000001C8_1:
	Mem164[r0 + 69:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000001CC:
	vPortExitCritical(cpsr)
	branch xTaskCheckForTimeOut(fp - 40, fp - 44, cpsr) != 0x00000000 l0000027E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000027E:
	prvUnlockQueue(r0, r2, cpsr)
	xTaskResumeAll(cpsr)
	return lr
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueGenericSend_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000001DC:
	vPortEnterCritical(cpsr, out r0_412)
	branch Mem211[r0 + 56:word32] == Mem211[r0 + 60:word32] l00000218
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000218:
	vPortExitCritical(cpsr)
	vTaskPlaceOnEventList(r0 + 0x00000010, r2)
	prvUnlockQueue(r0, r2, cpsr)
	branch xTaskResumeAll(cpsr) != 0x00000000 l000001F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000234:
	Mem270[r9_31:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000001E8:
	vPortExitCritical(cpsr)
	prvUnlockQueue(r0, r2, cpsr)
	xTaskResumeAll(cpsr)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000001F6:
	r5_125 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xQueuePeekFromISR(word32 r0, word32 r1, word32 r7, word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31] r0:[0..31] r1:[0..31] r7:[0..31]
// LiveOut:
// Trashed: lr r0 r1 r2 r3 r7
// Preserved: r4 r5 r6 sp
xQueuePeekFromISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000002A4:
	word32 r5_13 = __mrs(cpsr)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	branch Mem11[r0 + 56:word32] != 0x00000000 l000002C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000002C6:
	word32 r5_27
	word32 r6_28
	Mem31[prvCopyDataFromQueue(r0, r1, r0, r5_13, Mem11[r0 + 12:word32], r7, lr, out r5_27, out r6_28, out r7_57, out lr_58) + 12:word32] = r6_28
	__msr(cpsr, r5_27)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000002BE:
	__msr(cpsr, r5_13)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueuePeekFromISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 xQueueGenericReceive(word32 r0, word32 r1, word32 r2, word32 r3, word32 lr, word32 cpsr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31]
// LiveOut: lr r0
// Trashed: NZCV lr r0 r1 r2 r3
// Preserved: r10 r4 r5 r6 r7 r8 r9 sp
xQueueGenericReceive_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000002D8:
	word32 r5_134 = 0x00000000
	word32 r8_31 = Mem27[0x00000424:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000030A:
	vPortEnterCritical(cpsr, out r0_490)
	word32 r6_41 = Mem40[r0 + 56:word32]
	branch r6_41 != 0x00000000 l000003B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000003B0:
	word32 lr_51
	word32 r5_56
	word32 r6_57
	word32 r4_55 = prvCopyDataFromQueue(r0, r1, r0, Mem40[r0 + 12:word32], r6_41, 0x00000000, lr, out r5_56, out r6_57, out r7_491, out lr_51)
	branch r3 != 0x00000000 l000003E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000003E8:
	word32 r3_63 = Mem40[r4_55 + 36:word32]
	Mem64[r4_55 + 12:word32] = r5_56
	branch r3_63 == 0x00000000 l000003CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000003F0:
	branch xTaskRemoveFromEventList(r4_55 + 0x00000024) == 0x00000000 l000003CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000003C0:
	word32 r3_77 = Mem40[r4_55:word32]
	Mem80[r4_55 + 56:word32] = r6_57 - 0x00000001
	branch r3_77 == 0x00000000 l0000041C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000041C:
	Mem89[r4_55 + 4:word32] = pvTaskIncrementMutexHeldCount()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000003C8:
	branch Mem91[r4_55 + 16:word32] != 0x00000000 l0000040E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000040E:
	branch xTaskRemoveFromEventList(r4_55 + 0x00000010) != 0x00000000 l000003FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000003FC:
	Mem106[Mem104[0x00000424:word32]:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000041A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000003CC:
	vPortExitCritical(cpsr)
	lrOut = lr_51
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000314:
	branch r2 == 0x00000000 l000003A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000031A:
	branch r5_134 == 0x00000000 l0000039C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000039C:
	vTaskSetTimeOutState(fp - 40)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000031E:
	vPortExitCritical(cpsr)
	vTaskSuspendAll()
	vPortEnterCritical(cpsr, out r0_492)
	branch (word32) Mem40[r0 + 68:byte] != 0x000000FF l00000336
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000332_1:
	Mem165[r0 + 68:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000336:
	branch (word32) Mem167[r0 + 69:byte] != 0x000000FF l00000342
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000033E_1:
	Mem172[r0 + 69:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000342:
	vPortExitCritical(cpsr)
	branch xTaskCheckForTimeOut(fp - 40, fp - 44, cpsr) == 0x00000000 l000002F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000002F0:
	vPortEnterCritical(cpsr, out r0_493)
	branch Mem203[r0 + 56:word32] == 0x00000000 l0000036A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000036A:
	vPortExitCritical(cpsr)
	branch Mem203[r0:word32] == 0x00000000 l000003D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000003D8:
	vPortEnterCritical(cpsr, out r0_495)
	vTaskPriorityInherit(Mem203[r0 + 4:word32])
	vPortExitCritical(cpsr)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000372:
	vTaskPlaceOnEventList(r0 + 0x00000024, r2)
	prvUnlockQueue(r0, r6_41, cpsr)
	branch xTaskResumeAll(cpsr) != 0x00000000 l00000308
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000038A:
	Mem278[r8_31:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000002FA:
	vPortExitCritical(cpsr)
	prvUnlockQueue(r0, r6_41, cpsr)
	xTaskResumeAll(cpsr)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000352:
	prvUnlockQueue(r0, r6_41, cpsr)
	xTaskResumeAll(cpsr)
	vPortEnterCritical(cpsr, out r0_494)
	branch Mem203[r0 + 56:word32] == 0x00000000 l000003A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000003A4:
	vPortExitCritical(cpsr)
	lrOut = lr
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueGenericReceive_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000364:
	vPortExitCritical(cpsr)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000308:
	r5_134 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void uxQueueMessagesWaiting(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r2
// Preserved: r4 sp
uxQueueMessagesWaiting_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000428:
	vPortEnterCritical(cpsr, out r0_29)
	vPortExitCritical(cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

uxQueueMessagesWaiting_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void uxQueueSpacesAvailable(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r2
// Preserved: r3 r4 r5 sp
uxQueueSpacesAvailable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000043C:
	vPortEnterCritical(cpsr, out r0_39)
	vPortExitCritical(cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

uxQueueSpacesAvailable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vQueueDelete()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
vQueueDelete_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000454:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000454_thunk_vPortFree:
	vPortFree()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vQueueDelete_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xQueueGenericSendFromISR(word32 r0, word32 r1, word32 r2, word32 r3, word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31]
// LiveOut:
// Trashed: NZCV lr r0 r1 r2
// Preserved: r3 r4 r5 r6 r7 sp
xQueueGenericSendFromISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000458:
	word32 r6_17 = __mrs(cpsr)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	branch Mem15[r0 + 56:word32] <u Mem15[r0 + 60:word32] l00000482
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000476:
	branch r3 == 0x00000002 l00000482
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000482:
	word32 r4_32 = (int32) (int8) (word32) Mem15[r0 + 69:byte]
	word32 r7_44
	branch prvCopyDataToQueue(r0, r1, r3, r3, r2, lr, out r0_162, out r7_44, out lr_39) l000004A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000004A6:
	branch Mem15[r0 + 36:word32] == 0x00000000 l0000049E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000004AC:
	branch xTaskRemoveFromEventList(r0 + 0x00000024) == 0x00000000 l0000049E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000004B8:
	branch r7_44 == 0x00000000 l0000049E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000004BC:
	Mem66[r7_44:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000496:
	Mem70[r0 + 69:byte] = (byte) (int32) (int8) (r4_32 + 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000049E:
	__msr(cpsr, r6_17)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000047A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000047C:
	__msr(cpsr, r6_17)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueGenericSendFromISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xQueueGiveFromISR(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2
// Preserved: r3 r4 r5 sp
xQueueGiveFromISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000004C4:
	word32 r4_13 = __mrs(cpsr)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	word32 r2_16 = Mem11[r0 + 56:word32]
	branch r2_16 >=u Mem11[r0 + 60:word32] l00000500
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000500:
	__msr(cpsr, r4_13)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000004E2:
	word32 r3_28 = (int32) (int8) (word32) Mem11[r0 + 69:byte]
	Mem29[r0 + 56:word32] = r2_16 + 0x00000001
	branch r2_16 == 0x00000001 l00000508
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000508:
	branch Mem29[r0 + 36:word32] == 0x00000000 l000004F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000050E:
	branch xTaskRemoveFromEventList(r0 + 0x00000024) == 0x00000000 l000004F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000051A:
	branch r1 == 0x00000000 l000004F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000051E:
	Mem51[r1:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000004F0:
	Mem55[r0 + 69:byte] = (byte) (int32) (int8) (r3_28 + 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000004F8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000004FA:
	__msr(cpsr, r4_13)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueGiveFromISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xQueueReceiveFromISR(word32 r0, word32 r1, word32 r2, word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31]
// LiveOut:
// Trashed: NZCV lr r0 r1 r2 r3
// Preserved: r4 r5 r6 r7 r8 sp
xQueueReceiveFromISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000524:
	word32 r6_17 = __mrs(cpsr)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	word32 r4_20 = Mem15[r0 + 56:word32]
	branch r4_20 != 0x00000000 l0000054A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000054A:
	word32 r5_33
	word32 r7_35
	word32 r4_32 = prvCopyDataFromQueue(r0, r1, r4_20, (int32) (int8) (word32) Mem15[r0 + 68:byte], r6_17, r0, lr, out r5_33, out r6_17, out r7_35, out lr_28)
	Mem40[r7_35 + 56:word32] = r4_32 - 0x00000001
	branch r4_32 == 0x00000001 l00000572
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000572:
	branch Mem40[r7_35 + 16:word32] == 0x00000000 l00000568
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000578:
	branch xTaskRemoveFromEventList(r7_35 + 0x00000010) == 0x00000000 l00000568
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000584:
	branch r2 == 0x00000000 l00000568
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000058A:
	Mem58[r2:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000560:
	Mem62[r7_35 + 68:byte] = (byte) (int32) (int8) (r5_33 + 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000568:
	__msr(cpsr, r6_17)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000540:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000542:
	__msr(cpsr, r6_17)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueReceiveFromISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xQueueIsQueueEmptyFromISR(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZC r0
// Preserved: sp
xQueueIsQueueEmptyFromISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000594:
	__clz(Mem0[r0 + 56:word32])
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueIsQueueEmptyFromISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xQueueIsQueueFullFromISR(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZC r0 r3
// Preserved: sp
xQueueIsQueueFullFromISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000005A0:
	__clz(Mem0[r0 + 60:word32] - Mem0[r0 + 56:word32])
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueIsQueueFullFromISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void uxQueueMessagesWaitingFromISR(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r0
// Preserved: sp
uxQueueMessagesWaitingFromISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000005B0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

uxQueueMessagesWaitingFromISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xQueueGetMutexHolder(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: r4 sp
xQueueGetMutexHolder_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000005B4:
	vPortEnterCritical(cpsr, out r0_49)
	branch Mem7[r0:word32] != 0x00000000 l000005CA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000005CA:
	vPortExitCritical(cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000005C0:
	vPortExitCritical(cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueGetMutexHolder_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xQueueTakeMutexRecursive(word32 r0, word32 r1, word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV lr r0 r1 r2 r3
// Preserved: r4 r5 r6 sp
xQueueTakeMutexRecursive_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000005D4:
	branch Mem11[r0 + 4:word32] == xTaskGetCurrentTaskHandle() l000005FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000005FA:
	Mem25[r0 + 12:word32] = Mem11[r0 + 12:word32] + 0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000005E4:
	branch xQueueGenericReceive(r0, 0x00000000, r1, 0x00000000, lr, cpsr, out lr_92) == 0x00000000 l000005F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000005F2:
	Mem47[r0 + 12:word32] = Mem11[r0 + 12:word32] + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000005F8:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueTakeMutexRecursive_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xQueueGiveMutexRecursive(word32 r0, word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: NZCV lr r0 r1 r2
// Preserved: r3 r4 r5 sp
xQueueGiveMutexRecursive_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000604:
	branch Mem11[r0 + 4:word32] == xTaskGetCurrentTaskHandle() l00000616
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000616:
	word32 r3_19 = Mem11[r0 + 12:word32]
	Mem22[r0 + 12:word32] = r3_19 - 0x00000001
	branch r3_19 == 0x00000001 l00000622
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000622:
	xQueueGenericSend(r0, r3_19 - 0x00000001, r3_19 - 0x00000001, r3_19 - 0x00000001, lr, cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000061E:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000612:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueGiveMutexRecursive_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xQueueGenericReset(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 r6 sp
xQueueGenericReset_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000630:
	vPortEnterCritical(cpsr, out r0_118)
	word32 r3_25 = Mem11[r0 + 64:word32]
	word32 r2_28 = Mem11[r0 + 60:word32] * r3_25
	word32 r0_27 = Mem11[r0:word32]
	Mem33[r0 + 56:word32] = 0x00000000
	Mem34[r0 + 4:word32] = r2_28 + r0_27
	Mem35[r0 + 68:byte] = 0xFF
	Mem36[r0 + 12:word32] = r2_28 - r3_25 + r0_27
	Mem37[r0 + 8:word32] = r0_27
	Mem38[r0 + 69:byte] = 0xFF
	branch r1 != 0x00000000 l00000690
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000690:
	vListInitialise(r0 + 0x00000010)
	vListInitialise(r0 + 0x00000024)
	vPortExitCritical(cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000660:
	branch Mem38[r0 + 16:word32] != 0x00000000 l0000066C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000066C:
	branch xTaskRemoveFromEventList(r0 + 0x00000010) == 0x00000000 l00000664
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000678:
	Mem71[Mem38[0x000006A8:word32]:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
	vPortExitCritical(cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000664:
	vPortExitCritical(cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueGenericReset_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xQueueGenericCreate(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r1 r2 r3
// Preserved: r4 r5 r6 sp
xQueueGenericCreate_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000006AC:
	word32 r0_20 = pvPortMalloc(r0 * r1 + 0x00000048, cpsr)
	branch r0_20 == 0x00000000 l000006D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000006C0:
	branch r1 == 0x00000000 l000006D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000006D8:
	Mem29[r0_20:word32] = r0_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000006C2:
	Mem31[r0_20:word32] = r0_20 + 0x00000048
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000006C8:
	Mem34[r0_20 + 60:word32] = r0
	Mem36[r0_20 + 64:word32] = r1
	xQueueGenericReset(r0_20, 0x00000001, cpsr)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000006D4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueGenericCreate_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xQueueCreateMutex(word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31]
// LiveOut:
// Trashed: NZCV lr r0 r1 r2 r3
// Preserved: r4 sp
xQueueCreateMutex_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000006DC:
	xQueueGenericCreate(0x00000001, 0x00000000, cpsr)
	branch 0x00000001 == 0x00000000 l000006FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000006EC:
	Mem22[0x00000005:word32] = 0x00000000
	Mem23[0x00000001:word32] = 0x00000000
	Mem24[0x0000000D:word32] = 0x00000000
	xQueueGenericSend(0x00000001, 0x00000000, 0x00000000, 0x00000000, lr, cpsr)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000006FC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueCreateMutex_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void prvInitialiseNewTask(word32 r0, word32 r1, word32 r2, word32 r3, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2
// Preserved: fp r10 r3 r4 r5 r6 r7 r8 r9 sp
prvInitialiseNewTask_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000700:
	word32 r3_36 = r1 - 0x00000001 + 1
	word32 r5_38 = Mem23[dwArg08 + 80:word32] + (r2 + 0x3FFFFFFF << 0x00000002) & ~0x00000007
	word32 r0_41 = dwArg08 + 0x00000054
	word32 r2_42 = dwArg00 & ~0x80000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000072E:
	Mem47[r0_41:byte] = (byte) (word32) Mem44[r3_36 + 0:byte]
	r3_36 = r3_36 + 1
	r0_41 = r0_41 + 1
	branch (word32) Mem47[r3_36:byte] == 0x00000000 l0000073E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000073A:
	branch r3_36 != r1 + 0x00000002 l0000072E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000073E:
	branch r2_42 <u 0x00000001 l00000744
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000742_1:
	r2_42 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000744:
	Mem65[dwArg08 + 76:word32] = r2_42
	Mem66[dwArg08 + 88:word32] = r2_42
	Mem68[dwArg08 + 86:byte] = 0x00
	Mem69[dwArg08 + 92:word32] = 0x00000000
	vListInitialiseItem(dwArg08 + 0x00000024)
	vListInitialiseItem(dwArg08 + 0x00000038)
	Mem74[dwArg08 + 56:word32] = 0x00000002 - r2_42
	word32 r2_75 = Mem74[dwArg08 + 80:word32]
	Mem85[dwArg08 + 48:word32] = dwArg08
	Mem86[dwArg08 + 68:word32] = dwArg08
	vPortStoreTaskMPUSettings(dwArg08 + 0x00000004, dwArg0C, r2_75, r2)
	Mem95[dwArg08 + 96:word32] = 0x00000000
	Mem100[dwArg08 + 100:byte] = 0x00
	Mem122[dwArg08:word32] = pxPortInitialiseStack(r5_38, r0, r3, dwArg00 >> 0x0000001F)
	branch dwArg04 == 0x00000000 l00000792
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000790:
	Mem123[dwArg04:word32] = dwArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000792:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvInitialiseNewTask_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void prvAddNewTaskToReadyList(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 r6 r7 r8 sp
prvAddNewTaskToReadyList_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000798:
	word32 r0_60
	word32 r4_16 = Mem15[0x00000854:word32]
	vPortEnterCritical(cpsr, out r0_169)
	Mem28[r4_16:word32] = Mem15[r4_16:word32] + 0x00000001
	branch Mem28[r4_16 + 4:word32] == 0x00000000 l00000812
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000812:
	Mem32[r4_16 + 4:word32] = r0
	branch Mem32[r4_16:word32] != 0x00000001 l000007B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000081A:
	vListInitialise(r4_16 + 0x00000008)
	vListInitialise(r4_16 + 0x0000001C)
	vListInitialise(r4_16 + 0x00000030)
	vListInitialise(r4_16 + 0x00000044)
	vListInitialise(r4_16 + 0x00000058)
	Mem59[r4_16 + 108:word32] = r4_16 + 0x00000030
	r0_60 = Mem59[r0 + 76:word32]
	Mem61[r4_16 + 112:word32] = r4_16 + 0x00000044
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000007B0:
	branch Mem28[r4_16 + 116:word32] == 0x00000000 l00000800
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000800:
	r0_60 = Mem28[r0 + 76:word32]
	branch Mem28[Mem28[r4_16 + 4:word32] + 76:word32] >u r0_60 l00000810
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000080E_1:
	Mem69[r4_16 + 4:word32] = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000810:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000007B4:
	r0_60 = Mem71[r0 + 76:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000007BA:
	word32 r2_81 = Mem78[r4_16 + 120:word32]
	Mem95[r4_16 + 124:word32] = 0x00000001 << r0_60 | Mem78[r4_16 + 124:word32]
	Mem96[r4_16 + 120:word32] = r2_81 + 0x00000001
	vListInsertEnd(r4_16 + 0x00000008 + r0_60 * 0x00000014, r0 + 0x00000024)
	vPortExitCritical(cpsr)
	branch Mem96[r4_16 + 116:word32] == 0x00000000 l000007FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000007E2:
	branch Mem96[Mem96[r4_16 + 4:word32] + 76:word32] >=u Mem96[r0 + 76:word32] l000007FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000007EC:
	Mem120[Mem96[0x00000858:word32]:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000007FC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvAddNewTaskToReadyList_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void prvAddCurrentTaskToDelayedList.isra.0(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: lr r4 r5 r6 sp
prvAddCurrentTaskToDelayedList.isra.0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000085C:
	word32 r4_12 = Mem11[0x000008B0:word32]
	word32 r6_15 = Mem11[r4_12 + 128:word32]
	branch uxListRemove(Mem11[r4_12 + 4:word32] + 0x00000024) != 0x00000000 l00000880
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000870:
	Mem34[r4_12 + 124:word32] = Mem11[r4_12 + 124:word32] & ~((0x00000001 << Mem11[Mem11[r4_12 + 4:word32] + 76:word32]) << 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000880:
	word32 r5_37 = r0 + r6_15
	Mem42[Mem39[r4_12 + 4:word32] + 36:word32] = r5_37
	branch r6_15 >u r5_37 l000008A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000008A2:
	word32 r0_44 = Mem42[r4_12 + 112:word32]
	word32 r1_45 = Mem42[r4_12 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000008AC_thunk_vListInsert:
	vListInsert(r0_44, r1_45 + 0x00000024)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000088A:
	vListInsert(Mem42[r4_12 + 108:word32], Mem42[r4_12 + 4:word32] + 0x00000024)
	branch r5_37 >=u Mem42[r4_12 + 132:word32] l000008A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000089C_1:
	Mem73[r4_12 + 132:word32] = r5_37
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000008A0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvAddCurrentTaskToDelayedList.isra.0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 xTaskCreate(word32 r0, word32 r1, word32 r2, word32 r3, word32 cpsr, word32 dwArg00, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut: r0
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r10 r4 r5 r6 r7 r8 r9 sp
xTaskCreate_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000008B4:
	word32 r0_32 = pvPortMalloc(r2 << 2, cpsr)
	branch r0_32 == 0x00000000 l00000904
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000904:
	return 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000008CA:
	word32 r0_130
	word32 r0_52 = pvPortMalloc(0x00000068, cpsr)
	branch r0_52 == 0x00000000 l0000090E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000090E:
	vPortFree()
	r0_130 = 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000008D6:
	Mem64[r0_52 + 80:word32] = r0_32
	Mem66[r0_52 + 101:byte] = 0x00
	prvInitialiseNewTask(r0, r1, r2, r3, dwArg00, dwArg04, r0_52, 0x00000000)
	prvAddNewTaskToReadyList(r0_52, cpsr)
	r0_130 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000008FE:
	return r0_130
// DataOut:
// DataOut (flags):
// SymbolicIn:

xTaskCreate_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xTaskCreateRestricted(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: lr r0 r1 r2 r3
// Preserved: NZCV r4 r5 r6 r7 sp
xTaskCreateRestricted_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000091C:
	branch Mem0[r0 + 20:word32] == 0x00000000 l0000096A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000096A:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000920:
	word32 r0_24 = pvPortMalloc(0x00000068, cpsr)
	branch r0_24 == 0x00000000 l00000964
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000964:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000932:
	word32 r1_35 = Mem17[r0 + 20:word32]
	Mem36[r0_24 + 101:byte] = 0x01
	word32 r3_37 = Mem36[r0 + 12:word32]
	word32 r2_38 = (word32) Mem36[r0 + 16:word16]
	word32 lr_39 = Mem36[r0 + 16:word32]
	Mem40[r0_24 + 80:word32] = r1_35
	prvInitialiseNewTask(Mem43[r0:word32], Mem40[r0 + 4:word32], r2_38, r3_37, lr_39, r1, r0_24, r0 + 24)
	prvAddNewTaskToReadyList(r0_24, cpsr)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000960:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xTaskCreateRestricted_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vTaskAllocateMPURegions(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: sp
vTaskAllocateMPURegions_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000970:
	branch r0 == 0x00000000 l0000097C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000097C:
	word32 r0_6 = Mem0[Mem0[0x0000098C:word32] + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000986_thunk_vPortStoreTaskMPUSettings:
	vPortStoreTaskMPUSettings(r0_6 + 0x00000004, r1, 0x00000000, 0x00000000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000972:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000978_thunk_vPortStoreTaskMPUSettings:
	vPortStoreTaskMPUSettings(r0 + 0x00000004, r1, 0x00000000, 0x00000000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskAllocateMPURegions_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vTaskStartScheduler(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: lr r4 sp
vTaskStartScheduler_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000990:
	word32 r4_9 = Mem8[0x000009E0:word32]
	word32 r0_19 = xTaskCreate(Mem13[0x000009E8:word32], Mem13[0x000009E4:word32], 0x0000003B, 0x00000000, cpsr, 0x80000000, r4_9 + 0x00000088)
	branch r0_19 == 0x00000001 l000009B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000009B6:
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	Mem32[r4_9 + 132:word32] = 0xFFFFFFFF
	Mem33[r4_9 + 116:word32] = r0_19
	Mem34[r4_9 + 128:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000009DC_thunk_xPortStartScheduler:
	xPortStartScheduler(cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000009B2:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskStartScheduler_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vTaskEndScheduler(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
vTaskEndScheduler_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000009EC:
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	Mem8[Mem0[0x00000A08:word32] + 116:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000A02_thunk_vPortEndScheduler:
	vPortEndScheduler()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskEndScheduler_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



bool vTaskSuspendAll()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: C
// Trashed: NZCV r2 r3
// Preserved: sp
vTaskSuspendAll_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000A0C:
	word32 r2_4 = Mem0[0x00000A1C:word32]
	word32 r3_5 = Mem0[r2_4 + 140:word32]
	Mem8[r2_4 + 140:word32] = r3_5 + 0x00000001
	return SLICE(cond(r3_5 + 0x00000001), bool, 1)
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskSuspendAll_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xTaskGetTickCount()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0 r3
// Preserved: sp
xTaskGetTickCount_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000A20:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xTaskGetTickCount_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xTaskGetTickCountFromISR()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0 r3
// Preserved: sp
xTaskGetTickCountFromISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000A2C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xTaskGetTickCountFromISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void uxTaskGetNumberOfTasks()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0 r3
// Preserved: sp
uxTaskGetNumberOfTasks_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000A38:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

uxTaskGetNumberOfTasks_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void pcTaskGetName(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r3
// Preserved: sp
pcTaskGetName_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000A44:
	branch r0 == 0x00000000 l00000A4A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000A4A:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000A46:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

pcTaskGetName_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xTaskGenericNotify(word32 r0, word32 r1, word32 r2, word32 r3, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31]
// LiveOut:
// Trashed: NZCV lr r0 r1 r2
// Preserved: r3 r4 r5 r6 r7 sp
xTaskGenericNotify_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000A58:
	word32 r0_24
	vPortEnterCritical(cpsr, out r0_24)
	branch r3 == 0x00000000 l00000A6C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000A68:
	Mem31[r3:word32] = Mem15[r0 + 96:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000A6C:
	word32 r4_35 = (word32) Mem34[r0 + 100:byte]
	Mem38[r0 + 100:byte] = 0x02
	word32 r4_39 = (uint32) (byte) r4_35
	branch r2 >u 0x00000004 l00000A8C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000A7E:
	switch (r2 - 0x00000001) { l00000AF2 l00000A96 l00000A86 l00000A82 }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000A82:
	r4_39 = r0_24 << 8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000A86:
	branch r4_39 == 0x00000002 l00000AFE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000AFE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000A8A:
	Mem53[r0 + 96:word32] = r1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000A8C:
	branch r4_39 == 0x00000001 l00000AA6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000AA6:
	word32 r5_60 = Mem59[0x00000B04:word32]
	uxListRemove(r0 + 0x00000024)
	word32 r0_70 = Mem59[r0 + 76:word32]
	Mem78[r5_60 + 124:word32] = r4_39 << r0_70 | Mem59[r5_60 + 124:word32] << 0x00000000
	vListInsertEnd(r5_60 + 0x00000008 + r0_70 * 0x00000014, r0 + 0x00000024)
	branch Mem78[r0 + 76:word32] <=u Mem78[Mem78[r5_60 + 4:word32] + 76:word32] l00000A90
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000ADE:
	Mem92[Mem78[0x00000B08:word32]:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
	vPortExitCritical(cpsr)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000A90:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000A92:
	vPortExitCritical(cpsr)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000A96:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000AF2:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xTaskGenericNotify_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xTaskGenericNotifyFromISR(word32 r0, word32 r1, word32 r2, word32 r3, word32 cpsr, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] Stack +0000:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 r6 r7 r8 sp
xTaskGenericNotifyFromISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000B0C:
	word32 r5_17 = __mrs(cpsr)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	branch r3 == 0x00000000 l00000B2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000B26:
	Mem22[r3:word32] = Mem15[r0 + 96:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000B2A:
	word32 r4_26 = (word32) Mem25[r0 + 100:byte]
	Mem30[r0 + 100:byte] = 0x02
	word32 r4_31 = (uint32) (byte) r4_26
	branch r2 >u 0x00000004 l00000B4A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000B3C:
	switch (r2 - 0x00000001) { l00000B90 l00000B54 l00000B44 l00000B40 }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000B40:
	r4_31 = r0 << 8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000B44:
	branch r4_31 == 0x00000002 l00000BC4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000BC4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000B48:
	Mem46[r0 + 96:word32] = r1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000B4A:
	branch r4_31 == 0x00000001 l00000B64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000B64:
	word32 r6_51 = Mem50[0x00000BD0:word32]
	branch Mem50[r6_51 + 140:word32] == 0x00000000 l00000B9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000B9C:
	uxListRemove(r0 + 0x00000024)
	word32 r0_65 = Mem50[r0 + 76:word32]
	Mem74[r6_51 + 124:word32] = r4_31 << r0_65 | Mem50[r6_51 + 124:word32]
	vListInsertEnd(r6_51 + 0x00000008 + r0_65 * 0x00000014, r0 + 0x00000024)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000B6E:
	vListInsertEnd(r6_51 + 0x00000058, r0 + 0x00000038)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000B7A:
	branch Mem90[r0 + 76:word32] <=u Mem90[Mem90[r6_51 + 4:word32] + 76:word32] l00000B4E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000B84:
	branch dwArg00 == 0x00000000 l00000BC8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000BC8:
	Mem103[r6_51 + 144:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000B8A:
	Mem104[dwArg00:word32] = 0x00000001
	__msr(cpsr, r5_17)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000B4E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000B50:
	__msr(cpsr, r5_17)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000B54:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000B90:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xTaskGenericNotifyFromISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xTaskNotifyWait(word32 r0, word32 r1, word32 r2, word32 r3, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 r6 r7 r8 sp
xTaskNotifyWait_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000BD4:
	word32 r4_16 = Mem15[0x00000C58:word32]
	vPortEnterCritical(cpsr, out r0_136)
	branch (word32) Mem15[Mem15[r4_16 + 4:word32] + 100:byte] == 0x00000002 l00000C04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000BF0:
	word32 r1_37 = Mem15[r4_16 + 4:word32]
	Mem40[r1_37 + 96:word32] = Mem15[r1_37 + 96:word32] & ~(r0 << 0x00000000)
	Mem42[Mem40[r4_16 + 4:word32] + 100:byte] = 0x01
	branch r3 != 0x00000000 l00000C3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000C3C:
	prvAddCurrentTaskToDelayedList.isra.0(r3)
	Mem54[Mem42[0x00000C5C:word32]:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000C04:
	vPortExitCritical(cpsr)
	vPortEnterCritical(cpsr, out r0_137)
	branch r2 == 0x00000000 l00000C14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000C0E:
	Mem73[r2:word32] = Mem70[Mem70[r4_16 + 4:word32] + 96:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000C14:
	branch (word32) Mem75[Mem75[r4_16 + 4:word32] + 100:byte] == 0x00000001 l00000C54
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000C54:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000C1E:
	word32 r3_82 = Mem75[r4_16 + 4:word32]
	Mem87[r3_82 + 96:word32] = Mem75[r3_82 + 96:word32] & ~(r1 << 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000C2A:
	Mem92[Mem90[r4_16 + 4:word32] + 100:byte] = 0x00
	vPortExitCritical(cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xTaskNotifyWait_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vTaskNotifyGiveFromISR(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2
// Preserved: r3 r4 r5 r6 r7 r8 r9 sp
vTaskNotifyGiveFromISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000C60:
	word32 r6_21 = __mrs(cpsr)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	word32 r5_25 = (word32) Mem19[r0 + 100:byte]
	Mem26[r0 + 100:byte] = 0x02
	Mem31[r0 + 96:word32] = Mem26[r0 + 96:word32] + 0x00000001
	word32 r5_28 = (uint32) (byte) r5_25
	branch r5_28 == 0x00000001 l00000C96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000C96:
	word32 r7_33 = Mem31[0x00000CFC:word32]
	branch Mem31[r7_33 + 140:word32] == 0x00000000 l00000CCC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000CCC:
	uxListRemove(r0 + 0x00000024)
	word32 r0_48 = Mem31[r0 + 76:word32]
	Mem57[r7_33 + 124:word32] = r5_28 << r0_48 | Mem31[r7_33 + 124:word32]
	vListInsertEnd(r7_33 + 0x00000008 + r0_48 * 0x00000014, r0 + 0x00000024)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000CA2:
	vListInsertEnd(r7_33 + 0x00000058, r0 + 0x00000038)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000CAE:
	branch Mem73[r0 + 76:word32] <=u Mem73[Mem73[r7_33 + 4:word32] + 76:word32] l00000C8E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000CB8:
	branch r1 == 0x00000000 l00000CF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000CF4:
	Mem84[r7_33 + 144:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000CC0:
	Mem85[r1:word32] = 0x00000001
	__msr(cpsr, r6_21)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000C8E:
	__msr(cpsr, r6_21)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskNotifyGiveFromISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void ulTaskNotifyTake(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: r1 r4 r5 r6 sp
ulTaskNotifyTake_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000D00:
	word32 r4_12 = Mem11[0x00000D64:word32]
	vPortEnterCritical(cpsr, out r0_97)
	branch Mem11[Mem11[r4_12 + 4:word32] + 96:word32] != 0x00000000 l00000D1C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000D12:
	Mem28[Mem11[r4_12 + 4:word32] + 100:byte] = 0x01
	branch r1 != 0x00000000 l00000D4A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000D4A:
	prvAddCurrentTaskToDelayedList.isra.0(r1)
	Mem40[Mem28[0x00000D68:word32]:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000D1C:
	vPortExitCritical(cpsr)
	vPortEnterCritical(cpsr, out r0_98)
	word32 r5_57 = Mem55[Mem55[r4_12 + 4:word32] + 96:word32]
	branch r5_57 == 0x00000000 l00000D32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000D2A:
	branch r0 != 0x00000000 l00000D42
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000D42:
	Mem61[Mem55[r4_12 + 4:word32] + 96:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000D2C:
	Mem64[Mem55[r4_12 + 4:word32] + 96:word32] = r5_57 - 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000D32:
	Mem69[Mem67[r4_12 + 4:word32] + 100:byte] = 0x00
	vPortExitCritical(cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

ulTaskNotifyTake_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 xTaskIncrementTick()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r0
// Trashed: NZCV r0 r3
// Preserved: r1 r10 r2 r4 r5 r6 r7 r8 r9 sp
xTaskIncrementTick_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000D6C:
	word32 r6_127
	word32 r4_20 = Mem19[0x00000E64:word32]
	branch Mem19[r4_20 + 140:word32] != 0x00000000 l00000E38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000E38:
	Mem28[r4_20 + 152:word32] = Mem19[r4_20 + 152:word32] + 0x00000001
	r6_127 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000D7A:
	word32 r7_29 = Mem19[r4_20 + 128:word32]
	Mem32[r4_20 + 128:word32] = r7_29 + 0x00000001
	branch r7_29 != 0x00000001 l00000DA8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000D86:
	word32 r3_33 = Mem32[r4_20 + 108:word32]
	Mem35[r4_20 + 108:word32] = Mem32[r4_20 + 112:word32]
	Mem36[r4_20 + 112:word32] = r3_33
	Mem39[r4_20 + 148:word32] = Mem36[r4_20 + 148:word32] + 0x00000001
	branch Mem39[Mem39[r4_20 + 108:word32]:word32] != 0x00000000 l00000E46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000E46:
	Mem49[r4_20 + 132:word32] = Mem39[Mem39[Mem39[Mem39[r4_20 + 108:word32] + 12:word32] + 12:word32] + 36:word32]
	r6_127 = 0x00000000
	branch r7_29 + 0x00000001 <u Mem49[r4_20 + 132:word32] l00000E14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000E5C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000DA0:
	Mem54[r4_20 + 132:word32] = 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000DA8:
	r6_127 = 0x00000000
	branch r7_29 + 0x00000001 <u Mem56[r4_20 + 132:word32] l00000E14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000DB2:
	r6_127 = 0x00000000
	word32 r8_64 = Mem63[0x00000E68:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000E04:
	branch Mem66[Mem66[r4_20 + 108:word32]:word32] != 0x00000000 l00000DBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000DBC:
	word32 r5_73 = Mem66[Mem66[Mem66[r4_20 + 108:word32] + 12:word32] + 12:word32]
	word32 r3_74 = Mem66[r5_73 + 36:word32]
	branch r7_29 + 0x00000001 <u r3_74 l00000E5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000E5E:
	Mem79[r4_20 + 132:word32] = r3_74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000DCC:
	uxListRemove(r5_73 + 0x00000024)
	branch Mem66[r5_73 + 72:word32] == 0x00000000 l00000DDE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000DDA:
	uxListRemove(r5_73 + 0x00000038)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000DDE:
	word32 r0_101 = Mem66[r5_73 + 76:word32]
	Mem115[r4_20 + 124:word32] = 0x00000001 << r0_101 | Mem66[r4_20 + 124:word32]
	vListInsertEnd(r8_64 + r0_101 * 0x00000014, r5_73 + 0x00000024)
	branch Mem115[r5_73 + 76:word32] <u Mem115[Mem115[r4_20 + 4:word32] + 76:word32] l00000E04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000E02_1:
	r6_127 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000E0C:
	Mem129[r4_20 + 132:word32] = 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000E14:
	branch Mem131[r4_20 + Mem131[Mem131[r4_20 + 4:word32] + 76:word32] * 0x00000014 + 8:word32] <u 0x00000002 l00000E28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000E26_1:
	r6_127 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000E28:
	branch Mem141[r4_20 + 144:word32] == 0x00000000 l00000E32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000E30_1:
	r6_127 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000E32:
	return r6_127
// DataOut:
// DataOut (flags):
// SymbolicIn:

xTaskIncrementTick_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 xTaskResumeAll(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut: r0
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 r6 r7 r8 sp
xTaskResumeAll_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000E6C:
	word32 r4_16 = Mem15[0x00000F40:word32]
	vPortEnterCritical(cpsr, out r0_220)
	Mem26[r4_16 + 140:word32] = Mem15[r4_16 + 140:word32] - 0x00000001
	word32 r5_27 = Mem26[r4_16 + 140:word32]
	branch r5_27 != 0x00000000 l00000F26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000E88:
	branch Mem26[r4_16:word32] == 0x00000000 l00000F26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000E8E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000ED4:
	branch Mem36[r4_16 + 88:word32] != 0x00000000 l00000E96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000E96:
	r5_27 = Mem36[Mem36[r4_16 + 100:word32] + 12:word32]
	uxListRemove(r5_27 + 0x00000038)
	uxListRemove(r5_27 + 0x00000024)
	word32 r0_61 = Mem36[r5_27 + 76:word32]
	Mem71[r4_16 + 124:word32] = 0x00000001 << r0_61 | Mem36[r4_16 + 124:word32]
	vListInsertEnd(r4_16 + 0x00000008 + r0_61 * 0x00000014, r5_27 + 0x00000024)
	branch Mem71[r5_27 + 76:word32] <u Mem71[Mem71[r4_16 + 4:word32] + 76:word32] l00000ED4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000ED0_1:
	Mem83[r4_16 + 144:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000EDA:
	branch r5_27 == 0x00000000 l00000EEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000EDC:
	branch Mem36[Mem36[r4_16 + 108:word32]:word32] != 0x00000000 l00000F32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000F32:
	Mem91[r4_16 + 132:word32] = Mem36[Mem36[Mem36[Mem36[r4_16 + 108:word32] + 12:word32] + 12:word32] + 36:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000EE2:
	Mem93[r4_16 + 132:word32] = 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000EEA:
	word32 r5_108 = Mem95[r4_16 + 152:word32]
	branch r5_108 == 0x00000000 l00000F04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000EF0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000EF2:
	branch xTaskIncrementTick() == 0x00000000 l00000EFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000EF8:
	Mem106[r4_16 + 144:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000EFC:
	r5_108 = r5_108 - 0x00000001
	branch r5_108 != 0x00000000 l00000EF2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000F00:
	Mem113[r4_16 + 152:word32] = r5_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000F04:
	branch Mem115[r4_16 + 144:word32] == 0x00000000 l00000F26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000F26:
	vPortExitCritical(cpsr)
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000F0A:
	Mem146[Mem115[0x00000F44:word32]:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
	vPortExitCritical(cpsr)
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

xTaskResumeAll_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vTaskDelay(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2
// Preserved: r3 sp
vTaskDelay_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000F48:
	branch r0 != 0x00000000 l00000F5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000F5E:
	word32 r2_9 = Mem7[0x00000F7C:word32]
	Mem13[r2_9 + 140:word32] = Mem7[r2_9 + 140:word32] + 0x00000001
	prvAddCurrentTaskToDelayedList.isra.0(r0)
	branch xTaskResumeAll(cpsr) == 0x00000000 l00000F4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000F76:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000F4C:
	Mem38[Mem36[0x00000F78:word32]:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskDelay_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vTaskDelayUntil(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 sp
vTaskDelayUntil_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000F80:
	word32 r2_4 = Mem0[0x00000FD4:word32]
	word32 r3_12 = Mem9[r0:word32]
	Mem14[r2_4 + 140:word32] = Mem9[r2_4 + 140:word32] + 0x00000001
	word32 r2_15 = Mem14[r2_4 + 128:word32]
	word32 r1_17 = r1 + r3_12
	branch r2_15 >=u r3_12 l00000FB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000FB8:
	branch r3_12 >u r1_17 l00000FC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000F9A:
	branch r3_12 >u r1_17 l00000FBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000FBC:
	branch r2_15 >=u r1_17 l00000F9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000FC0:
	Mem31[r0:word32] = r1_17
	prvAddCurrentTaskToDelayedList.isra.0(r1_17 - r2_15)
	branch xTaskResumeAll(cpsr) == 0x00000000 l00000FA6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000F9E:
	Mem57[r0:word32] = r1_17
	branch xTaskResumeAll(cpsr) != 0x00000000 l00000FD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000FD0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000FA6:
	Mem77[Mem75[0x00000FD8:word32]:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskDelayUntil_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vTaskPlaceOnEventList(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: lr r4 sp
vTaskPlaceOnEventList_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000FDC:
	vListInsert(r0, Mem7[Mem7[0x00000FF4:word32] + 4:word32] + 0x00000038)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000FF0_thunk_prvAddCurrentTaskToDelayedList.isra.0:
	prvAddCurrentTaskToDelayedList.isra.0(r1)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskPlaceOnEventList_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vTaskPlaceOnUnorderedEventList(word32 r0, word32 r1, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r2:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: lr r4 r5 sp
vTaskPlaceOnUnorderedEventList_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000FF8:
	word32 r3_14 = Mem11[0x00001018:word32]
	word32 r3_18 = Mem11[r3_14 + 4:word32]
	Mem19[Mem11[r3_14 + 4:word32] + 56:word32] = r1 | 0x80000000
	vListInsertEnd(r0, r3_18 + 0x00000038)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001016_thunk_prvAddCurrentTaskToDelayedList.isra.0:
	prvAddCurrentTaskToDelayedList.isra.0(r2)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskPlaceOnUnorderedEventList_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 xTaskRemoveFromEventList(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut: r0
// Trashed: NZCV r0 r1 r2
// Preserved: r3 r4 r5 r6 r7 sp
xTaskRemoveFromEventList_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000101C:
	word32 r0_32
	word32 r4_18 = Mem15[0x0000107C:word32]
	word32 r5_19 = Mem15[Mem15[r0 + 12:word32] + 12:word32]
	uxListRemove(r5_19 + 0x00000038)
	branch Mem15[r4_18 + 140:word32] != 0x00000000 l00001070
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001070:
	vListInsertEnd(r4_18 + 0x00000058, r5_19 + 0x00000038)
	r0_32 = r4_18 + 0x00000058
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001034:
	uxListRemove(r5_19 + 0x00000024)
	word32 r0_50 = Mem15[r5_19 + 76:word32]
	Mem59[r4_18 + 124:word32] = 0x00000001 << r0_50 | Mem15[r4_18 + 124:word32]
	r0_32 = r4_18 + 0x00000008 + r0_50 * 0x00000014
	vListInsertEnd(r0_32, r5_19 + 0x00000024)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000105C:
	branch Mem67[r5_19 + 76:word32] <=u Mem67[Mem67[r4_18 + 4:word32] + 76:word32] l00001068
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001066_1:
	r0_32 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001068:
	Mem78[r4_18 + 144:word32] = r0_32
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

xTaskRemoveFromEventList_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xTaskRemoveFromUnorderedEventList(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV lr r0 r1 r2
// Preserved: r3 r4 r5 r6 r7 sp
xTaskRemoveFromUnorderedEventList_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001080:
	word32 r6_18 = Mem15[r0 + 12:word32]
	Mem21[r0:word32] = r1 | 0x80000000
	uxListRemove(r0)
	word32 r4_31 = Mem21[0x000010D4:word32]
	uxListRemove(r6_18 + 0x00000024)
	word32 r3_41 = Mem21[r6_18 + 76:word32]
	Mem49[r4_31 + 124:word32] = 0x00000001 << r3_41 | Mem21[r4_31 + 124:word32] << 0x00000000
	vListInsertEnd(r4_31 + 0x00000008 + r3_41 * 0x00000014, r6_18 + 0x00000024)
	branch Mem49[r6_18 + 76:word32] <=u Mem49[Mem49[r4_31 + 4:word32] + 76:word32] l000010CA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000010C8_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000010CA:
	Mem64[r4_31 + 144:word32] = 0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xTaskRemoveFromUnorderedEventList_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vTaskSwitchContext()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r2 r3
// Preserved: NZCV r0 r1 sp
vTaskSwitchContext_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000010D8:
	word32 r2_4 = Mem0[0x0000111C:word32]
	word32 r3_5 = Mem0[r2_4 + 140:word32]
	branch r3_5 != 0x00000000 l00001112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001112:
	Mem7[r2_4 + 144:word32] = 0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000010E0:
	word32 r1_23
	Mem8[r2_4 + 144:word32] = r3_5
	word32 r0_15 = r2_4 + (0x0000001F - (uint32) ((byte) __clz(Mem8[r2_4 + 124:word32]))) * 0x00000014
	word32 r1_19 = Mem8[Mem8[r0_15 + 12:word32] + 4:word32]
	Mem21[r0_15 + 12:word32] = r1_19
	r1_23 = r1_19
	branch r1_19 != r0_15 + 0x00000010 l00001108
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001106_1:
	r1_23 = Mem21[r1_19 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001108:
	word32 r3_26 = Mem21[r1_23 + 12:word32]
	branch r1_19 != r0_15 + 0x00000010 l0000110E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000110C_1:
	Mem29[r0_15 + 12:word32] = r1_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000110E:
	Mem33[r2_4 + 4:word32] = r3_26
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskSwitchContext_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 uxTaskResetEventItemValue()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r0
// Trashed: r0 r1 r2 r3
// Preserved: sp
uxTaskResetEventItemValue_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001120:
	word32 r3_4 = Mem0[0x00001134:word32]
	word32 r0_8 = Mem0[Mem0[r3_4 + 4:word32] + 56:word32]
	Mem11[Mem0[r3_4 + 4:word32] + 56:word32] = 0x00000002 - Mem0[Mem0[r3_4 + 4:word32] + 76:word32]
	return r0_8
// DataOut:
// DataOut (flags):
// SymbolicIn:

uxTaskResetEventItemValue_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 xTaskGetCurrentTaskHandle()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r0
// Trashed: r0 r3
// Preserved: sp
xTaskGetCurrentTaskHandle_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001138:
	return Mem0[Mem0[0x00001140:word32] + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

xTaskGetCurrentTaskHandle_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vTaskSetTimeOutState(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
vTaskSetTimeOutState_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001144:
	word32 r3_4 = Mem0[0x00001154:word32]
	word32 r3_6 = Mem0[r3_4 + 128:word32]
	Mem8[r0:word32] = Mem0[r3_4 + 148:word32]
	Mem9[r0 + 4:word32] = r3_6
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskSetTimeOutState_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 xTaskCheckForTimeOut(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut: r0
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 r6 sp
xTaskCheckForTimeOut_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001158:
	vPortEnterCritical(cpsr, out r0_103)
	word32 r3_23 = Mem11[0x000011A8:word32]
	word32 r5_25 = Mem11[r3_23 + 128:word32]
	word32 r0_27 = Mem11[r0 + 4:word32]
	branch Mem11[r0:word32] == Mem11[r3_23 + 148:word32] l00001178
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001174:
	branch r5_25 >=u r0_27 l0000119C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001178:
	word32 r2_34 = Mem11[r1:word32]
	branch r5_25 - r0_27 >=u r2_34 l0000119C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000119C:
	vPortExitCritical(cpsr)
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001180:
	word32 r1_60 = Mem11[r3_23 + 148:word32]
	word32 r3_61 = Mem11[r3_23 + 128:word32]
	Mem64[r1:word32] = r2_34 - r5_25 + r0_27
	Mem66[r0:word32] = r1_60
	Mem67[r0 + 4:word32] = r3_61
	vPortExitCritical(cpsr)
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

xTaskCheckForTimeOut_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vTaskMissedYield()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
vTaskMissedYield_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000011AC:
	Mem6[Mem0[0x000011B8:word32] + 144:word32] = 0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskMissedYield_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vTaskPriorityInherit(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: lr r4 r5 r6 r7 sp
vTaskPriorityInherit_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000011BC:
	branch r0 == 0x00000000 l00001246
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001246:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000011C0:
	word32 r4_19 = Mem18[0x00001248:word32]
	word32 r3_20 = Mem18[r0 + 76:word32]
	branch r3_20 >=u Mem18[Mem18[r4_19 + 4:word32] + 76:word32] l000011F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000011CE:
	branch Mem18[r0 + 56:word32] < 0x00000000 l000011DE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000011D4:
	Mem31[r0 + 56:word32] = 0x00000002 - Mem18[Mem18[r4_19 + 4:word32] + 76:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000011DE:
	word32 r5_33 = Mem32[0x0000124C:word32]
	branch Mem32[r0 + 52:word32] == r5_33 + r3_20 * 0x00000014 l000011F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000011F6:
	branch uxListRemove(r0 + 0x00000024) != 0x00000000 l00001220
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001204:
	word32 r2_52 = Mem32[r0 + 76:word32]
	branch Mem32[r4_19 + r2_52 * 0x00000014 + 8:word32] != 0x00000000 l00001220
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001212:
	Mem61[r4_19 + 124:word32] = Mem32[r4_19 + 124:word32] & ~((0x00000001 << r2_52) << 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001220:
	word32 r2_67 = Mem64[Mem64[r4_19 + 4:word32] + 76:word32]
	word32 r3_72 = 0x00000001 << r2_67 | Mem64[r4_19 + 124:word32] << 0x00000000
	Mem75[r0 + 76:word32] = r2_67
	Mem78[r4_19 + 124:word32] = r3_72
	word32 r0_77 = r5_33 + r2_67 * 0x00000014
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001242_thunk_vListInsertEnd:
	vListInsertEnd(r0_77, r0 + 0x00000024)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000011EE:
	Mem96[r0 + 76:word32] = Mem32[Mem32[r4_19 + 4:word32] + 76:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000011F4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vTaskPriorityInherit_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 xTaskPriorityDisinherit(word32 r0, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut: lr r0
// Trashed: NZCV lr r0 r1 r2
// Preserved: r3 r4 r5 r6 r7 sp
xTaskPriorityDisinherit_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001250:
	branch r0 == 0x00000000 l000012C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000012C8:
	lrOut = lr
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001254:
	word32 r1_20 = Mem19[r0 + 76:word32]
	word32 r3_21 = Mem19[r0 + 92:word32]
	word32 r2_22 = Mem19[r0 + 88:word32]
	Mem25[r0 + 92:word32] = r3_21 - 0x00000001
	branch r1_20 == r2_22 l00001266
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001264:
	branch r3_21 == 0x00000001 l0000126A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000126A:
	word32 r2_38
	branch uxListRemove(r0 + 0x00000024) != 0x00000000 l00001298
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001298:
	r2_38 = Mem25[0x000012CC:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001278:
	word32 r1_39 = Mem25[r0 + 76:word32]
	r2_38 = Mem25[0x000012CC:word32]
	branch Mem25[r2_38 + r1_39 * 0x00000014 + 8:word32] != 0x00000000 l0000129A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001288:
	Mem48[r2_38 + 124:word32] = Mem25[r2_38 + 124:word32] & ~((0x00000001 << r1_39) << 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000129A:
	word32 r3_52 = Mem51[r0 + 88:word32]
	word32 lr_54 = Mem51[r2_38 + 124:word32]
	word32 r0_55 = Mem51[0x000012D0:word32]
	Mem59[r0 + 76:word32] = r3_52
	Mem64[r0 + 56:word32] = 0x00000002 - r3_52
	Mem65[r2_38 + 124:word32] = 0x00000001 << r3_52 | lr_54 << 0x00000000
	vListInsertEnd(r0_55 + r3_52 * 0x00000014, r0 + 0x00000024)
	lrOut = lr_54
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001266:
	lrOut = lr
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

xTaskPriorityDisinherit_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 pvTaskIncrementMutexHeldCount()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r0
// Trashed: NZCV r0 r1 r2 r3
// Preserved: sp
pvTaskIncrementMutexHeldCount_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000012D4:
	word32 r3_4 = Mem0[0x000012E8:word32]
	branch Mem0[r3_4 + 4:word32] == 0x00000000 l000012E2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000012DA:
	word32 r1_6 = Mem0[r3_4 + 4:word32]
	Mem10[r1_6 + 92:word32] = Mem0[r1_6 + 92:word32] + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000012E2:
	return Mem12[r3_4 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

pvTaskIncrementMutexHeldCount_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void prvRestoreContextOfFirstTask(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut:
// Trashed: fp lr r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
prvRestoreContextOfFirstTask_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000012F0:
	__msr(cpsr, Mem0[Mem0[Mem0[0x00001724:word32]:word32]:word32])
	word32 r1_9 = Mem0[Mem0[0x00001330:word32]:word32]
	word32 r0_10 = Mem0[r1_9:word32]
	word32 r2_12 = Mem0[0x00001728:word32]
	word32 r5_14 = Mem0[r1_9 + 0x00000008:word32]
	word32 r6_15 = Mem0[r1_9 + 0x0000000C:word32]
	word32 r7_16 = Mem0[r1_9 + 0x00000010:word32]
	word32 r8_17 = Mem0[r1_9 + 0x00000014:word32]
	word32 r9_18 = Mem0[r1_9 + 0x00000018:word32]
	word32 r10_19 = Mem0[r1_9 + 0x0000001C:word32]
	word32 fp_20 = Mem0[r1_9 + 0x00000020:word32]
	Mem22[r2_12:word32] = Mem0[r1_9 + 0x00000004:word32]
	Mem23[r2_12 + 4:word32] = r5_14
	Mem24[r2_12 + 8:word32] = r6_15
	Mem25[r2_12 + 12:word32] = r7_16
	Mem26[r2_12 + 16:word32] = r8_17
	Mem27[r2_12 + 20:word32] = r9_18
	Mem28[r2_12 + 24:word32] = r10_19
	Mem29[r2_12 + 28:word32] = fp_20
	__msr(cpsr, Mem29[r0_10:word32])
	__msr(cpsr, r0_10 + 36)
	__msr(cpsr, 0x00000000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvRestoreContextOfFirstTask_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void prvSVCHandler(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: NZCV fp lr r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
prvSVCHandler_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001334:
	word32 r3_6 = (word32) Mem0[Mem0[r0 + 24:word32] - 2:byte]
	branch r3_6 == 0x00000001 l00001360
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001360:
	Mem11[Mem0[0x00001378:word32]:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000133E:
	branch r3_6 <u 0x00000001 l00001354
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001354:
	word32 r2_13 = Mem0[0x00001374:word32]
	Mem16[r2_13:word32] = Mem0[r2_13:word32] | 0xBE000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000135E_thunk_prvRestoreContextOfFirstTask:
	prvRestoreContextOfFirstTask(cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001340:
	branch r3_6 != 0x00000002 l00001352
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001352:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001344:
	__msr(cpsr, __mrs(cpsr) & ~0x00000001)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvSVCHandler_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 pxPortInitialiseStack(word32 r0, word32 r1, word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31]
// LiveOut: r0
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 sp
pxPortInitialiseStack_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000137C:
	word32 r3_11
	r3_11 = r3
	branch r3 != 0x00000001 l00001384
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001382_1:
	r3_11 = 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001384:
	branch r3 == 0x00000001 l00001390
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000138E_1:
	r3_11 = 0x00000003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001390:
	Mem22[r0 - 32:word32] = r2
	Mem28[r0 + -8:word32] = r1 & ~0x00000001
	Mem30[r0 + -4:word32] = 0x01000000
	Mem32[r0 - 12:word32] = 0x00000000
	Mem35[r0 - 68:word32] = r3_11
	return r0 - 0x00000044
// DataOut:
// DataOut (flags):
// SymbolicIn:

pxPortInitialiseStack_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xPortStartScheduler(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 r6 sp
xPortStartScheduler_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000013B0:
	word32 r3_4 = Mem0[0x000014E8:word32]
	word32 r1_13 = Mem11[0x000014EC:word32]
	Mem15[r3_4:word32] = Mem11[r3_4:word32] | 0x00FF0000
	Mem18[r3_4:word32] = Mem15[r3_4:word32] | 0xFF000000
	branch Mem18[r1_13:word32] == 0x00000800 l00001400
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001400:
	word32 r2_30
	word32 r0_22 = Mem18[0x000014FC:word32]
	word32 r1_25 = Mem18[0x00001500:word32] - r0_22
	Mem28[Mem18[0x00001504:word32]:word32] = r0_22 | 0x00000010
	branch r1_25 <=u 0x00000020 l000014DE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000014DE:
	r2_30 = Mem28[0x00001548:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001412:
	word32 r3_31 = 0x00000040
	word32 r2_32 = 0x00000005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000141E:
	r3_31 = r3_31 << 0x00000001
	branch r1_25 >u r3_31 l00001418
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001418:
	r2_32 = r2_32 + 0x00000001
	branch r2_32 == 0x0000001F l000014CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000014CE:
	r2_30 = Mem28[0x00001538:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001426:
	r2_30 = Mem28[0x00001508:word32] | r2_32 << 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000142C:
	word32 r2_59
	word32 r1_51 = Mem28[0x0000150C:word32] - r0_22
	word32 r3_52 = Mem28[0x00001504:word32]
	Mem56[Mem28[0x00001510:word32]:word32] = r2_30
	Mem57[r3_52:word32] = r0_22 | 0x00000011
	branch r1_51 <=u 0x00000020 l000014DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000014DA:
	r2_59 = Mem57[0x00001544:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001440:
	word32 r3_60 = 0x00000040
	word32 r2_61 = 0x00000005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000144C:
	r3_60 = r3_60 << 0x00000001
	branch r1_51 >u r3_60 l00001446
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001446:
	r2_61 = r2_61 + 0x00000001
	branch r2_61 == 0x0000001F l000014D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000014D2:
	r2_59 = Mem57[0x0000153C:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001454:
	r2_59 = Mem57[0x00001514:word32] | r2_61 << 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000145A:
	word32 r0_100
	word32 r3_76 = Mem57[0x00001518:word32]
	word32 r0_79 = Mem57[0x00001504:word32]
	word32 r1_80 = Mem57[0x0000151C:word32] - r3_76
	Mem84[Mem57[0x00001510:word32]:word32] = r2_59
	Mem85[r0_79:word32] = r3_76 | 0x00000012
	branch r1_80 <=u 0x00000020 l000014E2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000014E2:
	r0_100 = Mem85[0x0000154C:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001470:
	word32 r3_88 = 0x00000040
	word32 r2_89 = 0x00000005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000147C:
	r3_88 = r3_88 << 0x00000001
	branch r1_80 >u r3_88 l00001476
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001476:
	r2_89 = r2_89 + 0x00000001
	branch r2_89 == 0x0000001F l000014D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000014D6:
	r0_100 = Mem85[0x00001540:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001484:
	r0_100 = Mem85[0x00001520:word32] | r2_89 << 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000148A:
	word32 r4_107 = Mem85[0x00001504:word32]
	word32 r5_108 = Mem85[0x00001524:word32]
	word32 r1_109 = Mem85[0x00001528:word32]
	Mem111[Mem85[0x00001510:word32]:word32] = r0_100
	Mem112[r4_107:word32] = r5_108
	word32 r3_103 = 0x00000005
	word32 r2_104 = 0x00000040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000149A:
	word32 r3_120
	r3_103 = r3_103 + 0x00000001
	r2_104 = r2_104 << 0x00000001
	branch r3_103 == 0x0000001F l000014CA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000014CA:
	r3_120 = Mem112[0x00001534:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000014A4:
	branch r2_104 <=u r1_109 l0000149A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000014A8:
	r3_120 = Mem112[0x0000152C:word32] | r3_103 << 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000014AE:
	word32 r2_127 = Mem112[0x00001510:word32]
	word32 r1_128 = Mem112[0x00001530:word32]
	Mem130[r2_127:word32] = r3_120
	Mem133[r1_128:word32] = Mem130[r1_128:word32] | 0x00010000
	Mem136[r2_127 - 12:word32] = Mem133[r2_127 - 12:word32] | 0x00000005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000013CE:
	word32 r2_142 = Mem140[0x000014F4:word32]
	word32 r3_143 = Mem140[0x000014F8:word32]
	Mem144[Mem140[0x000014F0:word32]:word32] = 0x00004E1F
	Mem145[r2_142:word32] = 0x00000007
	Mem146[r3_143:word32] = 0x00000000
	__msr(cpsr, Mem146[Mem146[Mem146[0x00001724:word32]:word32]:word32])
	__cps_id()
	__cps_id()
	__dsb_sy()
	__isb_sy()
	__syscall(0x00000000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xPortStartScheduler_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vPortEndScheduler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
vPortEndScheduler_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001550:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vPortEndScheduler_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vPortStoreTaskMPUSettings(word32 r0, word32 r1, word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 sp
vPortStoreTaskMPUSettings_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001554:
	branch r1 == 0x00000000 l000015DE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000015DE:
	word32 r2_19
	word32 r3_11 = Mem7[0x00001668:word32]
	word32 r1_14 = Mem7[0x0000166C:word32] - r3_11
	Mem17[r0:word32] = r3_11 | 0x00000014
	branch r1_14 <=u 0x00000020 l0000165C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000165C:
	r2_19 = Mem17[0x00001680:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000015EE:
	word32 r3_20 = 0x00000040
	word32 r2_21 = 0x00000005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000015FA:
	r3_20 = r3_20 << 0x00000001
	branch r3_20 <u r1_14 l000015F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000015F4:
	r2_21 = r2_21 + 0x00000001
	branch r2_21 == 0x0000001F l00001648
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001648:
	r2_19 = Mem17[0x00001664:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001602:
	r2_19 = Mem17[0x00001660:word32] | r2_21 << 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001608:
	word32 r2_47
	word32 r3_36 = Mem17[0x00001670:word32]
	word32 r1_39 = Mem17[0x00001674:word32] - r3_36
	Mem44[r0 + 4:word32] = r2_19
	Mem45[r0 + 8:word32] = r3_36 | 0x00000015
	branch r1_39 <=u 0x00000020 l00001658
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001658:
	r2_47 = Mem45[0x00001684:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000161A:
	word32 r2_48 = 0x00000005
	word32 r3_49 = 0x00000040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001626:
	r3_49 = r3_49 << 0x00000001
	branch r1_39 >u r3_49 l00001620
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001620:
	r2_48 = r2_48 + 0x00000001
	branch r2_48 == 0x0000001F l0000164C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000164C:
	r2_47 = Mem45[0x0000167C:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000162E:
	r2_47 = Mem45[0x00001678:word32] | r2_48 << 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001634:
	Mem68[r0 + 16:word32] = 0x00000016
	Mem70[r0 + 12:word32] = r2_47
	Mem71[r0 + 20:word32] = 0x00000000
	Mem72[r0 + 28:word32] = 0x00000000
	Mem73[r0 + 24:word32] = 0x00000017
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000155A:
	branch r3 != 0x00000000 l000015B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000015B0:
	word32 r4_101
	Mem86[r0:word32] = r2 | 0x00000014
	branch r3 << 2 <=u 0x00000020 l00001654
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001654:
	r4_101 = Mem86[0x00001680:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000015BC:
	word32 r2_89 = 0x00000040
	word32 r4_90 = 0x00000005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000015C8:
	r2_89 = r2_89 << 0x00000001
	branch r3 << 2 >u r2_89 l000015C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000015C2:
	r4_90 = r4_90 + 0x00000001
	branch r4_90 == 0x0000001F l000015DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000015DA:
	r4_101 = Mem86[0x00001664:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000015D0:
	r4_101 = Mem86[0x00001660:word32] | r4_90 << 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000015D6:
	Mem107[r0 + 4:word32] = r4_101
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000155C:
	word32 r5_108 = 0x00000005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000155E:
	word32 r4_111 = Mem110[r1 + 4:word32]
	branch r4_111 == 0x00000000 l000015A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000015A2:
	Mem115[r0 + 12:word32] = r4_111
	Mem116[r0 + 8:word32] = r5_108 | 0x00000010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001562:
	word32 r3_123
	Mem121[r0 + 8:word32] = Mem110[r1:word32] | (r5_108 | 0x00000010)
	branch r4_111 <=u 0x00000020 l00001650
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001650:
	r3_123 = 0x00000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001570:
	word32 r2_124 = 0x00000040
	word32 r3_125 = 0x00000005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000157C:
	r2_124 = r2_124 << 0x00000001
	branch r4_111 >u r2_124 l00001576
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001576:
	r3_125 = r3_125 + 0x00000001
	branch r3_125 == 0x0000001F l000015AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000015AC:
	r3_123 = 0x0000003E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001584:
	r3_123 = r3_125 << 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001586:
	Mem149[r0 + 12:word32] = r3_123 | (Mem121[r1 + 8:word32] | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001590:
	r5_108 = r5_108 + 0x00000001
	r1 = r1 + 0x0000000C
	r0 = r0 + 0x00000008
	branch r5_108 != 0x00000008 l0000155E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000159E:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vPortStoreTaskMPUSettings_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xPortPendSVHandler(word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 fp, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] fp:[0..31] r10:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: fp r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: lr sp
xPortPendSVHandler_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001688:
	word32 r0_4 = __mrs(cpsr)
	word32 r3_6 = Mem0[0x000016E0:word32]
	word32 r2_7 = Mem0[r3_6:word32]
	Mem9[r0_4 + -36:word32] = __mrs(cpsr)
	Mem11[r0_4 + -32:word32] = r4
	Mem13[r0_4 + -28:word32] = r5
	Mem15[r0_4 + -24:word32] = r6
	Mem17[r0_4 + -20:word32] = r7
	Mem19[r0_4 + -16:word32] = r8
	Mem21[r0_4 + -12:word32] = r9
	Mem23[r0_4 + -8:word32] = r10
	Mem25[r0_4 + -4:word32] = fp
	Mem27[r2_7:word32] = r0_4 - 36
	__msr(cpsr, 0x000000BF)
	vTaskSwitchContext()
	__msr(cpsr, 0x00000000)
	word32 r1_39 = Mem31[r3_6:word32]
	word32 r0_40 = Mem31[r1_39:word32]
	word32 r2_42 = Mem31[0x00001728:word32]
	word32 r5_44 = Mem31[r1_39 + 0x00000008:word32]
	word32 r6_45 = Mem31[r1_39 + 0x0000000C:word32]
	word32 r7_46 = Mem31[r1_39 + 0x00000010:word32]
	word32 r8_47 = Mem31[r1_39 + 0x00000014:word32]
	word32 r9_48 = Mem31[r1_39 + 0x00000018:word32]
	word32 r10_49 = Mem31[r1_39 + 0x0000001C:word32]
	word32 fp_50 = Mem31[r1_39 + 0x00000020:word32]
	Mem52[r2_42:word32] = Mem31[r1_39 + 0x00000004:word32]
	Mem53[r2_42 + 4:word32] = r5_44
	Mem54[r2_42 + 8:word32] = r6_45
	Mem55[r2_42 + 12:word32] = r7_46
	Mem56[r2_42 + 16:word32] = r8_47
	Mem57[r2_42 + 20:word32] = r9_48
	Mem58[r2_42 + 24:word32] = r10_49
	Mem59[r2_42 + 28:word32] = fp_50
	__msr(cpsr, Mem59[r0_40:word32])
	__msr(cpsr, r0_40 + 36)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xPortPendSVHandler_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xPortSysTickHandler(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: r4 sp
xPortSysTickHandler_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000016E4:
	word32 r4_9 = __mrs(cpsr)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	branch xTaskIncrementTick() == 0x00000000 l00001708
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001700:
	Mem19[Mem7[0x00001710:word32]:word32] = 0x10000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001708:
	__msr(cpsr, r4_9)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xPortSysTickHandler_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vPortSVCHandler(word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31]
// LiveOut:
// Trashed: NZCV fp lr r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
vPortSVCHandler_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001714:
	branch (lr & 0x00000004) != 0x00000000 l0000171E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000171A_1:
	__mrs(cpsr)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000171E:
	word32 r0_9 = __mrs(cpsr)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001722_thunk_prvSVCHandler:
	prvSVCHandler(r0_9, cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vPortSVCHandler_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 pvPortMalloc(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31]
// LiveOut: r0
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 sp
pvPortMalloc_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000172C:
	word32 r4_13 = r0
	branch r0 << 29 == 0x00000000 l00001738
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001734_1:
	r4_13 = r0 & ~0x00000007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001738:
	vTaskSuspendAll()
	word32 r3_24 = Mem7[0x0000177C:word32]
	word32 r4_15 = r4_13 + 0x00000008
	branch Mem7[r3_24:word32] == 0x00000000 l00001770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001770:
	Mem28[r3_24:word32] = r3_24 + 0x0000000C & ~0x00000007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001744:
	word32 r2_32 = Mem31[r3_24 + 1472:word32]
	word32 r4_34 = r4_15 + r2_32
	branch r4_34 >u 0x000005B3 l00001766
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001752:
	branch r2_32 >=u r4_34 l00001766
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001766:
	xTaskResumeAll(cpsr)
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001756:
	word32 r1_59 = Mem31[r3_24:word32]
	Mem60[r3_24 + 1472:word32] = r4_34
	xTaskResumeAll(cpsr)
	return r1_59 + r2_32
// DataOut:
// DataOut (flags):
// SymbolicIn:

pvPortMalloc_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vPortFree()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
vPortFree_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001780:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vPortFree_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vPortInitialiseBlocks()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
vPortInitialiseBlocks_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001784:
	Mem6[Mem0[0x00001790:word32] + 1472:word32] = 0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vPortInitialiseBlocks_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xPortGetFreeHeapSize()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZCV r0 r3
// Preserved: sp
xPortGetFreeHeapSize_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001794:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xPortGetFreeHeapSize_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xEventGroupCreate(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut:
// Trashed: NZCV r1 r2 r3
// Preserved: r4 sp
xEventGroupCreate_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000017A8:
	word32 r0_10 = pvPortMalloc(0x00000018, cpsr)
	branch r0_10 == 0x00000000 l000017BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000017B4:
	Mem20[r0_10:word32] = 0x00000000
	vListInitialise(r0_10 + 4)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000017BE:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xEventGroupCreate_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xEventGroupWaitBits(word32 r0, word32 r1, word32 r2, word32 r3, word32 cpsr, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] Stack +0000:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 r6 r7 r8 sp
xEventGroupWaitBits_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000017C4:
	bool C_28 = vTaskSuspendAll()
	word32 r5_112 = r1
	word32 r4_157 = Mem15[r0:word32]
	branch r3 != 0x00000000 l000017F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000017F2:
	branch (r1 & ~(r4_157 << 0x00000000)) == 0x00000000 l000017DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000017D8:
	r4_157 = r4_157 + r1 + C_28
	branch r4_157 == 0x00000000 l000017F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000017F8:
	branch dwArg00 == 0x00000000 l000017E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000017FE:
	branch r2 != 0x00000000 l00001806
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001804_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001806:
	word32 r1_46 = 0x01000000
	branch r3 != 0x00000000 l0000183E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000183E:
	r1_46 = 0x05000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000180C:
	vTaskPlaceOnUnorderedEventList(r0 + 0x00000004, r1_46 | r1, dwArg00)
	branch xTaskResumeAll(cpsr) != 0x00000000 l0000182C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000181C:
	Mem87[Mem15[0x00001870:word32]:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000182C:
	branch uxTaskResetEventItemValue() << 6 >= 0x00000000 l00001844
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001844:
	bool C_101 = vPortEnterCritical(cpsr, out r0_256)
	word32 r4_105 = Mem104[r0:word32]
	branch r3 != 0x00000000 l00001868
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001868:
	branch (r1 & ~(r4_105 << 0x00000000)) != 0x00000000 l0000185C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000186E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000184C:
	r5_112 = r1 + r4_105 + C_101
	branch r5_112 == 0x00000000 l0000185C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001850:
	branch r2 == 0x00000000 l0000185C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001856:
	Mem125[r0:word32] = r4_105 & ~(r5_112 << 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000185C:
	vPortExitCritical(cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001836:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000017DC:
	branch r2 == 0x00000000 l000017E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000017E2:
	Mem161[r0:word32] = r4_157 & ~(r1 << 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000017E8:
	xTaskResumeAll(cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xEventGroupWaitBits_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xEventGroupClearBits(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r0 r2
// Preserved: r4 r5 r6 sp
xEventGroupClearBits_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001874:
	vPortEnterCritical(cpsr, out r0_41)
	Mem25[r0:word32] = Mem11[r0:word32] & ~(r1 << 0x00000000)
	vPortExitCritical(cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xEventGroupClearBits_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xEventGroupSetBits(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV lr r0 r1 r2
// Preserved: r3 r4 r5 r6 r7 sp
xEventGroupSetBits_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001890:
	word32 r7_33
	vTaskSuspendAll()
	word32 r0_27 = Mem15[r0 + 16:word32]
	word32 r1_29 = Mem15[r0:word32] | r1
	Mem31[r0:word32] = r1_29
	branch r0 + 0x0000000C == r0_27 l000018F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000018F0:
	r7_33 = 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000018AA:
	word32 r7_34 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000018C8:
	word32 r3_37 = Mem31[r0_27:word32]
	word32 r4_38 = Mem31[r0_27 + 4:word32]
	word32 r2_40 = r3_37 & ~0xFF000000
	branch (r3_37 & 0x04000000) == 0x00000000 l000018AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000018AE:
	r2_40 = r2_40 + r1_29 + ((r3_37 & 0x04000000) <u 0x00000000)
	branch r2_40 == 0x00000000 l000018C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000018D6:
	branch (r2_40 & ~(r1_29 << 0x00000000)) == 0x00000000 l000018B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000018B2:
	branch r3_37 << 7 >= 0x00000000 l000018B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000018B6:
	r7_34 = r7_34 | r2_40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000018B8:
	xTaskRemoveFromUnorderedEventList(r0_27, r1_29 | 0x02000000)
	r1_29 = Mem31[r0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000018C2:
	r0_27 = r4_38
	branch r0 + 0x0000000C == r4_38 l000018E2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000018DC:
	r0_27 = r4_38
	branch r0 + 0x0000000C != r4_38 l000018C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000018E2:
	r7_33 = ~r7_34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000018E4:
	Mem105[r0:word32] = r1_29 & r7_33
	xTaskResumeAll(cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xEventGroupSetBits_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xEventGroupSync(word32 r0, word32 r1, word32 r2, word32 r3, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31]
// LiveOut:
// Trashed: NZCV lr r0 r1 r2 r3
// Preserved: r4 r5 r6 r7 r8 sp
xEventGroupSync_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000018F8:
	vTaskSuspendAll()
	word32 r4_33 = Mem15[r0:word32] | r1
	xEventGroupSetBits(r0, r1, cpsr)
	word32 r6_21 = r2
	branch (r2 & ~(r4_33 << 0x00000000)) == 0x00000000 l0000195E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000195E:
	Mem49[r0:word32] = Mem15[r0:word32] & ~(r2 << 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000191A:
	branch r3 != 0x00000000 l00001928
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001928:
	vTaskPlaceOnUnorderedEventList(r0 + 0x00000004, r2 | 0x05000000, r3)
	branch xTaskResumeAll(cpsr) != 0x00000000 l0000194A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000193A:
	Mem71[Mem15[0x00001984:word32]:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000194A:
	branch uxTaskResetEventItemValue() << 6 >= 0x00000000 l00001968
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001968:
	vPortEnterCritical(cpsr, out r0_197)
	word32 r4_89 = Mem88[r0:word32]
	branch (r2 & ~(r4_89 << 0x00000000)) != 0x00000000 l00001978
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001974_1:
	r6_21 = r4_89 & ~(r2 << 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001978:
	Mem97[r0:word32] = r6_21
	vPortExitCritical(cpsr)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001954:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001958:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000191C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000191E:
	xTaskResumeAll(cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xEventGroupSync_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xEventGroupGetBitsFromISR(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: r0 r2 r3
// Preserved: sp
xEventGroupGetBitsFromISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001988:
	word32 r3_4 = __mrs(cpsr)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	__msr(cpsr, r3_4)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xEventGroupGetBitsFromISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vEventGroupDelete(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: lr r4 sp
vEventGroupDelete_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000019A4:
	vTaskSuspendAll()
	branch Mem7[r0 + 4:word32] == 0x00000000 l000019C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000019B0:
	xTaskRemoveFromUnorderedEventList(Mem7[r0 + 16:word32], 0x02000000)
	branch Mem7[r0 + 4:word32] != 0x00000000 l000019B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000019C0:
	vPortFree()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000019CA_thunk_xTaskResumeAll:
	xTaskResumeAll(cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vEventGroupDelete_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vEventGroupSetBitsCallback(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV lr r0 r1 r2
// Preserved: sp
vEventGroupSetBitsCallback_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000019D0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000019D0_thunk_xEventGroupSetBits:
	xEventGroupSetBits(r0, r1, cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vEventGroupSetBitsCallback_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vEventGroupClearBitsCallback(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r0 r2
// Preserved: lr r3 r4 r5 sp
vEventGroupClearBitsCallback_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000019D4:
	vPortEnterCritical(cpsr, out r0_41)
	Mem25[r0:word32] = Mem11[r0:word32] & ~(r1 << 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000019EA_thunk_vPortExitCritical:
	vPortExitCritical(cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vEventGroupClearBitsCallback_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void NmiSR()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
NmiSR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

NmiSR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008000:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void FaultISR()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
FaultISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

FaultISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008004:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void ResetISR(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
ResetISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

ResetISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008008:
	word32 r3_16 = Mem0[0x0000802C:word32]
	word32 r0_5 = Mem0[0x00008030:word32]
	branch r3_16 >=u r0_5 l00008026
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008010:
	word32 r2_13 = (~r3_16 + r0_5 & ~0x00000003) + 0x00000004 + r3_16
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000801E:
	Mem17[r3_16:word32] = 0x00000000
	r3_16 = r3_16 + 4
	branch r3_16 != r2_13 l0000801E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008026:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008026_thunk_Main:
	Main(cpsr)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void raise()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
raise_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

raise_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008034:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vPrintTask(word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vPrintTask_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

vPrintTask_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008038:
	word32 r4_10 = 0x00000000
	word32 r5_11 = Mem9[0x00008064:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008040:
	lr = MPU_xQueueGenericReceive(Mem9[r5_11:word32], fp - 20, 0xFFFFFFFF, 0x00000000, lr, cpsr)
	OSRAMClear()
	r4_10 = r4_10 + 0x00000001
	OSRAMStringDraw(dwLoc14, r4_10 & 0x0000003F, r4_10 & 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vCheckTask(word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vCheckTask_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

vCheckTask_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008068:
	MPU_xTaskGetTickCount(cpsr)
	word32 r5_20 = Mem12[0x0000809C:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000807C:
	MPU_vTaskDelayUntil(fp - 24, 0x00001388, cpsr)
	lr = MPU_xQueueGenericSend(Mem23[r5_20:word32], fp - 20, 0xFFFFFFFF, 0x00000000, lr, cpsr)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void Main(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
Main_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

Main_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000080A0:
	MPU_xQueueGenericCreate(0x00000003, 0x00000004, cpsr)
	Mem19[Mem5[0x000080F0:word32]:word32] = 0x00000003
	OSRAMInit(0x00000000)
	MPU_xTaskCreate(Mem34[0x000080F8:word32], Mem31[0x000080F4:word32], 0x0000003B, 0x00000000, cpsr, 0x00000003, 0x00000000)
	MPU_xTaskCreate(Mem47[0x00008100:word32], Mem34[0x000080FC:word32], 0x0000003B, 0x00000000, cpsr, 0x00000002, 0x00000000)
	vTaskStartScheduler(cpsr)
	OSRAMStringDraw(Mem47[0x00008104:word32], 0x00000000, 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000080EC:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vUART_ISR(word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31]
// LiveOut:
// Trashed: NZC r0 r1 r2 r3
// Preserved: V lr r4 r5 r6 sp
vUART_ISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008108:
	word32 r5_13 = Mem11[0x00008174:word32]
	word32 r0_18 = UARTIntStatus(r5_13, 0x00000001)
	UARTIntClear(r5_13, r0_18)
	branch r0_18 << 27 >= 0x00000000 l00008130
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008128:
	branch Mem17[Mem17[0x00008178:word32]:word32] << 25 < 0x00000000 l0000815E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000815E:
	xQueueGenericSendFromISR(fp - 0x00000015, r0_18, fp - 20, 0x00000000, lr, cpsr)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008130:
	branch r0_18 << 26 >= 0x00000000 l0000813C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008134:
	word32 r2_49 = Mem48[0x0000817C:word32]
	word32 r3_50 = (word32) Mem48[r2_49:byte]
	branch r3_50 <=u 0x0000007A l0000814C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000814C:
	word32 r1_54 = Mem48[Mem48[0x00008178:word32]:word32]
	word32 r1_55 = r1_54 << 26
	branch r1_54 << 26 < 0x00000000 l00008156
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008154_1:
	r1_55 = Mem48[0x00008174:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008156:
	Mem61[r1_55:word32] = r3_50
	Mem65[r2_49:byte] = (byte) (r3_50 + 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000813C:
	branch 0x00000000 == 0x00000000 l00008148
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008140:
	Mem73[Mem69[0x00008180:word32]:word32] = 0x10000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008148:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vUART_ISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 vSetErrorLED(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut: r0
// Trashed: NZCV r0 r1 r2 r3
// Preserved: sp
vSetErrorLED_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008184:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008188_thunk_vParTestSetLED:
	return vParTestSetLED(0x00000007, 0x00000001, cpsr)
// DataOut:
// DataOut (flags):
// SymbolicIn:

vSetErrorLED_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 prvSetAndCheckRegisters(word32 cpsr, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut: r0 r4 r5 r6 r7 r8
// Trashed: NZCV fp ip r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: lr sp
prvSetAndCheckRegisters_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000818C:
	branch false l00008200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000081C6:
	branch false l00008200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000081CA:
	branch false l00008200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000081CE:
	branch false l00008200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000081D2:
	branch false l00008200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000081D6:
	branch false l00008200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000081DA:
	branch false l00008200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000081DE:
	branch false l00008200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000081E2:
	branch false l00008200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000081E6:
	branch false l00008200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000081EC:
	branch false l00008200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000081F2:
	branch false l00008200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000081F8:
	branch false l00008200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008200:
	word32 r0_50 = vSetErrorLED(cpsr)
	r4Out = <invalid>
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = <invalid>
	r8Out = <invalid>
	return r0_50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000081FE:
	r4Out = <invalid>
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = <invalid>
	r8Out = <invalid>
	return 0x0000000B
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvSetAndCheckRegisters_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vApplicationIdleHook(word32 r0, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 lr, word32 pc, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31] pc:[0..31] r0:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vApplicationIdleHook_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

vApplicationIdleHook_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008210:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008212:
	lr = vCoRoutineSchedule(r0, r4, r5, r6, r7, r8, lr, pc, cpsr, out pc, out cpsr)
	r0 = prvSetAndCheckRegisters(cpsr, out r4, out r5, out r6, out r7, out r8)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void PDCInit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: lr r4 r5 sp
PDCInit_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008220:
	SysCtlPeripheralEnable(Mem9[0x0000828C:word32])
	SysCtlPeripheralEnable(Mem9[0x00008290:word32])
	GPIODirModeSet(0x40004000, 0x00000034, 0x00000002)
	GPIODirModeSet(0x40004000, 0x00000008, 0x00000001)
	GPIOPadConfigSet(0x40004000, 0x00000004, 0x00000002, 0x0000000A)
	word32 r5_55 = Mem9[0x00008294:word32]
	SSIConfig(r5_55, 0x00000000, 0x00000000, Mem9[0x00008298:word32], 0x00000008)
	SSIEnable(r5_55)
	GPIOPinWrite(0x40004000, 0x00000008, 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008288_thunk_GPIOPinWrite:
	GPIOPinWrite(0x40004000, 0x00000008, 0x00000008)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

PDCInit_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 PDCWrite(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut: r0
// Trashed: NZC r0 r1 r2 r3
// Preserved: r4 r5 sp
PDCWrite_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000829C:
	word32 r4_12 = Mem9[0x000082CC:word32]
	SSIDataPut(r4_12, r0 & 0x0000000F)
	SSIDataPut(r4_12, r1)
	SSIDataGet(r4_12, fp - 20)
	SSIDataGet(r4_12, fp - 20)
	return r4_12
// DataOut:
// DataOut (flags):
// SymbolicIn:

PDCWrite_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vListInitialise(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r1 r2 r3
// Preserved: sp
vListInitialise_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000082D0:
	Mem7[r0 + 8:word32] = 0xFFFFFFFF
	Mem8[r0:word32] = 0x00000000
	Mem9[r0 + 4:word32] = r0 + 0x00000008
	Mem10[r0 + 12:word32] = r0 + 0x00000008
	Mem11[r0 + 16:word32] = r0 + 0x00000008
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vListInitialise_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vListInitialiseItem(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r3
// Preserved: sp
vListInitialiseItem_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000082E8:
	Mem5[r0 + 16:word32] = 0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vListInitialiseItem_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vListInsertEnd(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r2 r3
// Preserved: r4 sp
vListInsertEnd_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000082F0:
	word32 r3_6 = Mem0[r0 + 4:word32]
	word32 r2_5 = Mem0[r0:word32]
	Mem14[r1 + 8:word32] = Mem9[r3_6 + 8:word32]
	word32 r4_15 = Mem14[r3_6 + 8:word32]
	Mem16[r1 + 4:word32] = r3_6
	Mem17[r4_15 + 4:word32] = r1
	Mem18[r3_6 + 8:word32] = r1
	Mem21[r1 + 16:word32] = r0
	Mem22[r0:word32] = r2_5 + 0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vListInsertEnd_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte vListInsert(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut: Z
// Trashed: NZCV r2 r3
// Preserved: r4 r5 sp
vListInsert_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000830C:
	word32 r2_13
	word32 r3_14
	word32 r5_9 = Mem7[r1:word32]
	branch Z l00008338
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008338:
	r2_13 = Mem7[r0 + 16:word32]
	r3_14 = Mem7[r2_13 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008314:
	r2_13 = r0 + 0x00000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000831C:
	r3_14 = Mem7[r2_13 + 4:word32]
	branch r5_9 >=u Mem7[r3_14:word32] l0000831A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000831A:
	r2_13 = r3_14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008324:
	word32 r4_27 = Mem7[r0:word32]
	Mem31[r1 + 4:word32] = r3_14
	Mem34[r3_14 + 8:word32] = r1
	Mem36[r1 + 8:word32] = r2_13
	Mem37[r2_13 + 4:word32] = r1
	Mem38[r1 + 16:word32] = r0
	Mem39[r0:word32] = r4_27 + 0x00000001
	return SLICE(cond(r4_27 + 0x00000001), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

vListInsert_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 uxListRemove(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut: r0
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 sp
uxListRemove_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008340:
	word32 r2_5 = Mem0[r0 + 16:word32]
	word32 r3_6 = Mem0[r0 + 4:word32]
	Mem11[r3_6 + 8:word32] = Mem0[r0 + 8:word32]
	word32 r4_12 = Mem11[r2_5 + 4:word32]
	word32 r1_13 = Mem11[r0 + 8:word32]
	Mem15[r1_13 + 4:word32] = r3_6
	branch r0 != r4_12 l00008356
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008354_1:
	Mem17[r2_5 + 4:word32] = r1_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008356:
	word32 r3_21 = Mem20[r2_5:word32]
	Mem23[r0 + 16:word32] = 0x00000000
	Mem25[r2_5:word32] = r3_21 - 0x00000001
	return r3_21 - 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

uxListRemove_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte xQueueCRSend(word32 r0, word32 r1, word32 r2, word32 r7, word32 lr, word32 cpsr, ptr32 & r0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r7:[0..31]
// LiveOut: Z r0
// Trashed: NZCV lr r0 r1 r2 r3 r7
// Preserved: r4 r5 r6 sp
xQueueCRSend_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008364:
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	vPortEnterCritical(cpsr, out r0_160)
	branch Mem11[r0 + 56:word32] == Mem11[r0 + 60:word32] l000083B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000083B2:
	byte Z_33 = vPortExitCritical(cpsr)
	branch r2 != 0x00000000 l000083D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000083D8:
	byte Z_43 = vCoRoutineAddToDelayedList(r2, r0 + 0x00000010)
	__msr(cpsr, 0x00000000)
	r0Out = ~0x00000003
	return Z_43
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000083B8:
	__msr(cpsr, r2)
	r0Out = r2
	return Z_33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008388:
	vPortExitCritical(cpsr)
	__msr(cpsr, 0x00000000)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	word32 r2_65 = Mem11[r0 + 56:word32]
	word32 r3_66 = Mem11[r0 + 60:word32]
	word32 r0_136 = 0x00000000
	byte Z_157 = SLICE(cond(r2_65 - r3_66), bool, 2)
	branch r2_65 <u r3_66 l000083C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000083C0:
	Z_157 = prvCopyDataToQueue(r0, r1, 0x00000000, r3_66, r7, lr, out r0_161, out r7_78, out lr_73)
	branch Mem11[r0 + 36:word32] != 0x00000000 l000083EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000083EE:
	word32 r0_85
	xCoRoutineRemoveFromEventList(r0 + 0x00000024, out r0_85)
	Z_157 = SLICE(cond(r0_85), bool, 2) (alias)
	branch r0_85 == 0x00000000 l000083CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000083FA:
	r0_136 = ~0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000083CE:
	__msr(cpsr, 0x00000000)
	r0Out = 0x00000001
	return Z_157
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000083AA:
	__msr(cpsr, 0x00000000)
	r0Out = r0_136
	return Z_157
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueCRSend_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte xQueueCRReceive(word32 r0, word32 r1, word32 r2, word32 r6, word32 r7, word32 lr, word32 cpsr, ptr32 & r0Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: Z lr r0 r6 r7
// Trashed: NZCV lr r0 r1 r2 r6 r7
// Preserved: r3 r4 r5 sp
xQueueCRReceive_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008400:
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	word32 r5_16 = Mem11[r0 + 56:word32]
	branch r5_16 != 0x00000000 l00008424
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008424:
	word32 r0_146
	__msr(cpsr, 0x00000000)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	word32 r2_19 = Mem11[r0 + 56:word32]
	branch r2_19 != 0x00000000 l00008448
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008448:
	word32 r1_30
	word32 r2_22 = Mem11[r0 + 64:word32]
	word32 r3_24 = Mem11[r0 + 4:word32]
	word32 r1_25 = Mem11[r0 + 12:word32] + r2_22
	word32 r3_27 = Mem11[r0 + 56:word32]
	Mem28[r0 + 12:word32] = r1_25
	r1_30 = r1_25
	branch r1_25 <u r3_24 l0000845C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000845A_1:
	r1_30 = Mem28[r0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000845C:
	Mem34[r0 + 56:word32] = r3_27 + 0xFFFFFFFF
	branch r1_25 <u r3_24 l00008466
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008464_1:
	Mem37[r0 + 12:word32] = r1_30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008466:
	word32 r4_60
	Z = memcpy(r1, r1_30, r2_22, r3_27 + 0xFFFFFFFF, r0, r5_16, r6, r7, lr, out r4_60, out r5_185, out r6, out r7, out lr)
	branch Mem69[r4_60 + 16:word32] != 0x00000000 l00008478
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008478:
	word32 r0_72
	xCoRoutineRemoveFromEventList(r4_60 + 0x00000010, out r0_72)
	Z = SLICE(cond(r0_72), bool, 2) (alias)
	branch r0_72 == 0x00000000 l0000846E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008484:
	r0_146 = ~0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000846E:
	__msr(cpsr, 0x00000000)
	r0Out = 0x00000001
	r6Out = r6
	r7Out = r7
	lrOut = lr
	return Z
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000843E:
	r0_146 = r2_19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008440:
	__msr(cpsr, 0x00000000)
	r0Out = r0_146
	r6Out = r6
	r7Out = r7
	lrOut = lr
	return Z
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008418:
	byte Z_105 = SLICE(cond(r2), bool, 2)
	branch r2 != 0x00000000 l0000848A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000848A:
	byte Z_113 = vCoRoutineAddToDelayedList(r2, r0 + 0x00000024)
	__msr(cpsr, r5_16)
	r0Out = ~0x00000003
	r6Out = r6
	r7Out = r7
	lrOut = lr
	return Z_113
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000841C:
	__msr(cpsr, r2)
	r0Out = r2
	r6Out = r6
	r7Out = r7
	lrOut = lr
	return Z_105
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueCRReceive_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xQueueCRSendFromISR(word32 r0, word32 r1, word32 r2, word32 r7, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r7:[0..31]
// LiveOut:
// Trashed: NZCV lr r0 r1 r2 r3 r7
// Preserved: r4 r5 r6 sp
xQueueCRSendFromISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000084A0:
	word32 r3_13 = Mem11[r0 + 60:word32]
	branch Mem11[r0 + 56:word32] <u r3_13 l000084B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000084B0:
	prvCopyDataToQueue(r0, r1, 0x00000000, r3_13, r7, lr, out r0_97, out r7_28, out lr_23)
	branch r2 != 0x00000000 l000084AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000084BC:
	branch Mem11[r0 + 36:word32] == 0x00000000 l000084AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000084C2:
	branch xCoRoutineRemoveFromEventList(r0 + 0x00000024, out r0_39) l000084D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000084CE_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000084D0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000084AC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueCRSendFromISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xQueueCRReceiveFromISR(word32 r0, word32 r1, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r2:[0..31]
// LiveOut:
// Trashed: NZCV lr r0 r1 r2
// Preserved: r3 r4 r5 r6 r7 sp
xQueueCRReceiveFromISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000084D4:
	branch Mem15[r0 + 56:word32] == 0x00000000 l00008514
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008514:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000084DA:
	word32 r3_38
	word32 lr_26 = Mem15[r0 + 64:word32]
	word32 r4_27 = Mem15[r0 + 4:word32]
	word32 r3_28 = Mem15[r0 + 12:word32] + lr_26
	word32 r7_35 = Mem15[r0 + 56:word32]
	Mem36[r0 + 12:word32] = r3_28
	r3_38 = r3_28
	branch r3_28 <u r4_27 l000084F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000084F2_1:
	r3_38 = Mem36[r0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000084F4:
	branch r3_28 <u r4_27 l000084FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000084FA_1:
	Mem44[r0 + 12:word32] = r3_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000084FC:
	Mem56[r0 + 56:word32] = r7_35 + 0xFFFFFFFF
	word32 r4_64
	word32 r5_65
	memcpy(r1, r3_38, lr_26, r3_38, r0, r2, r1, r7_35 + 0xFFFFFFFF, lr_26, out r4_64, out r5_65, out r6_152, out r7_153, out lr_154)
	branch Mem56[r5_65:word32] != 0x00000000 l00008510
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000850C:
	branch Mem56[r4_64 + 16:word32] != 0x00000000 l00008518
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008518:
	word32 r0_76
	xCoRoutineRemoveFromEventList(r4_64 + 0x00000010, out r0_76)
	branch r0_76 == 0x00000000 l00008510
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008524:
	Mem87[r5_65:word32] = 0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008510:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xQueueCRReceiveFromISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void prvIdleTask(word32 r0, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 lr, word32 pc, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31] pc:[0..31] r0:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvIdleTask_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvIdleTask_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000852C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000852E:
	vApplicationIdleHook(r0, r4, r5, r6, r7, r8, lr, pc, cpsr)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xTaskNotifyStateClear(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r2
// Preserved: r3 r4 r5 sp
xTaskNotifyStateClear_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008534:
	word32 r4_14
	branch r0 == 0x00000000 l00008558
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008558:
	r4_14 = Mem11[Mem11[0x00008560:word32] + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008538:
	r4_14 = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000853A:
	vPortEnterCritical(cpsr, out r0_58)
	word32 r3_26 = (word32) Mem11[r4_14 + 100:byte]
	branch r3_26 != 0x00000002 l00008548
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008546_1:
	r3_26 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008548:
	Mem33[r4_14 + 100:byte] = (byte) r3_26
	vPortExitCritical(cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xTaskNotifyStateClear_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 xPortRaisePrivilege(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut: r0
// Trashed: NZC r0
// Preserved: sp
xPortRaisePrivilege_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008564:
	branch (__mrs(cpsr) & 0x00000001) == 0x00000000 l00008570
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000856E_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008570:
	__syscall(0x00000002)
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

xPortRaisePrivilege_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



bool vPortEnterCritical(word32 cpsr, ptr32 & r0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut: C r0
// Trashed: NZCV r0 r2
// Preserved: r3 sp
vPortEnterCritical_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008578:
	word32 r0_21 = xPortRaisePrivilege(cpsr)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	word32 r2_14 = Mem7[0x000085AC:word32]
	Mem18[r2_14:word32] = Mem7[r2_14:word32] + 0x00000001
	bool C_30 = SLICE(cond(r0_21 - 0x00000001), bool, 1)
	branch r0_21 == 0x00000001 l000085A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000859C:
	word32 r0_20 = __mrs(cpsr)
	__msr(cpsr, r0_20 | 0x00000001)
	r0_21 = r0_20 | 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000085A8:
	r0Out = r0_21
	return C_30
// DataOut:
// DataOut (flags):
// SymbolicIn:

vPortEnterCritical_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte vPortExitCritical(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut: Z
// Trashed: NZCV r0 r2
// Preserved: r3 sp
vPortExitCritical_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000085B0:
	word32 r0_9 = xPortRaisePrivilege(cpsr)
	word32 r2_13 = Mem7[0x000085D8:word32]
	word32 r3_14 = Mem7[r2_13:word32]
	Mem17[r2_13:word32] = r3_14 - 0x00000001
	branch r3_14 != 0x00000001 l000085C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000085C0:
	__msr(cpsr, r3_14 - 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000085C4:
	byte Z_20 = SLICE(cond(r0_9 - 0x00000001), bool, 2)
	branch r0_9 == 0x00000001 l000085D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000085C8:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000085D4:
	return Z_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

vPortExitCritical_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vParTestInitialise()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: lr sp
vParTestInitialise_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000085DC:
	PDCInit()
	word32 r1_18 = (word32) Mem7[Mem7[0x000085F0:word32]:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000085EC_thunk_PDCWrite:
	PDCWrite(0x00000005, r1_18)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vParTestInitialise_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 vParTestSetLED(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut: r0
// Trashed: NZCV r0 r1 r2 r3
// Preserved: lr r4 r5 sp
vParTestSetLED_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000085F4:
	word32 r0_17 = MPU_vTaskSuspendAll(cpsr)
	branch r0 >u 0x00000007 l0000861C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008602:
	word32 r3_28 = Mem11[0x0000862C:word32]
	word32 r0_29 = (uint32) (byte) (0x00000001 << r0)
	word32 r2_30 = (word32) Mem11[r3_28:byte]
	branch r1 == 0x00000000 l00008624
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008624:
	Mem32[r3_28:byte] = (byte) (r2_30 & ~(r0_29 << 0x00000000))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008610:
	Mem35[r3_28:byte] = (byte) (r0_29 | r2_30)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008614:
	r0_17 = PDCWrite(0x00000005, (word32) Mem37[r3_28:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000861C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008620_thunk_MPU_xTaskResumeAll:
	MPU_xTaskResumeAll(cpsr)
	return r0_17
// DataOut:
// DataOut (flags):
// SymbolicIn:

vParTestSetLED_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vParTestToggleLED(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: lr r4 sp
vParTestToggleLED_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008630:
	MPU_vTaskSuspendAll(cpsr)
	branch r0 >u 0x00000007 l0000865A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000863C:
	word32 r3_21 = Mem7[0x0000866C:word32]
	word32 r0_22 = 0x00000001 << r0
	word32 r2_26 = (uint32) (byte) r0_22 + (word32) Mem7[r3_21:byte] + (r0 <u 0x00000007)
	branch r2_26 != 0x00000000 l00008662
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008662:
	Mem31[r3_21:byte] = (byte) ((word32) Mem7[r3_21:byte] & ~(r0_22 << 0x00000000))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000864C:
	Mem35[r3_21:byte] = (byte) (r2_26 | (word32) Mem7[r3_21:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008652:
	PDCWrite(0x00000005, (word32) Mem37[r3_21:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000865A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000865E_thunk_MPU_xTaskResumeAll:
	MPU_xTaskResumeAll(cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vParTestToggleLED_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void prvFlashCoRoutine(word32 r0, word32 r7, word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31] r0:[0..31] r7:[0..31]
// LiveOut:
// Trashed: NZCV lr r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved: cpsr
prvFlashCoRoutine_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008670:
	word32 r5_107
	word32 r6_105
	word32 r0_26
	word32 r3_13 = (word32) Mem11[r0 + 104:word16]
	word32 sp_14 = fp - 24
	word32 r4_113 = r0
	branch r3_13 == 0x000001C2 l000086B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000086B6:
	r5_107 = Mem11[0x000086E0:word32]
	branch xQueueCRReceive(Mem11[r5_107:word32], fp - 20, 0x00000000, fp - 20, r7, lr, cpsr, out r0_26, out r6_105, out r7, out lr) l000086AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000867E:
	branch r3_13 == 0x000001C3 l0000868C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000868C:
	r5_107 = Mem11[0x000086E0:word32]
	r6_105 = fp - 20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008686:
	branch r3_13 == 0x00000000 l000086D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000086D2:
	r5_107 = Mem11[0x000086E0:word32]
	r6_105 = fp - 20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008696:
	byte Z_59 = xQueueCRReceive(Mem47[r5_107:word32], r6_105, 0xFFFFFFFF, r6_105, r7, lr, cpsr, out r0_26, out r6_105, out r7, out lr)
	branch Z_59 l000086D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000086D8:
	Mem65[r4_113 + 104:word16] = 0x01C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000086A6:
	branch Z_59 l000086C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000086C8:
	Mem69[r4_113 + 104:word16] = 0x01C3
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000086AA:
	branch r0_26 == 0x00000001 l00008690
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008690:
	vParTestToggleLED(Mem82[sp_14 + 4:word32], cpsr)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000086AE:
	Mem97[Mem83[0x000086E4:word32]:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008688:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvFlashCoRoutine_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void prvFixedDelayCoRoutine(word32 r0, word32 r1, word32 r7, word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31] r0:[0..31] r1:[0..31] r7:[0..31]
// LiveOut:
// Trashed: NZCV lr r0 r1 r2 r3 r7
// Preserved: r4 sp
prvFixedDelayCoRoutine_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000086E8:
	word32 r0_81
	byte Z_29
	word32 r0_22
	word32 r3_9 = (word32) Mem7[r0 + 104:word16]
	branch r3_9 == 0x00000182 l00008750
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008750:
	Z_29 = xQueueCRSend(Mem14[Mem14[0x0000877C:word32]:word32], fp - 12, 0x00000000, r7, lr, cpsr, out r0_22)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000086F8:
	branch r3_9 <=u 0x00000182 l00008748
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008748:
	branch r3_9 == 0x00000000 l0000871C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000874C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000086FA:
	branch r3_9 != 0x00000183 l00008716
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008716:
	branch r3_9 != 0x00000196 l00008712
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000871C:
	Z_29 = xQueueCRSend(Mem14[Mem14[0x0000877C:word32]:word32], fp - 12, 0x00000000, r7, lr, cpsr, out r0_22)
	branch Z_29 l0000876E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000876E:
	Mem65[r0 + 104:word16] = 0x0182
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000872C:
	branch Z_29 l00008766
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008766:
	Mem71[r0 + 104:word16] = 0x0183
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008730:
	branch r0_22 == 0x00000001 l00008702
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008734:
	Mem77[Mem14[0x00008780:word32]:word32] = 0x00000000
	r0_81 = Mem77[Mem77[0x00008778:word32] + (r1 << 2):word32]
	branch r0_81 == 0x00000000 l0000870C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008746:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008702:
	r0_81 = Mem14[Mem14[0x00008778:word32] + (r1 << 2):word32]
	branch r0_81 != 0x00000000 l0000875E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000875E:
	vCoRoutineAddToDelayedList(r0_81, 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000870C:
	Mem103[r0 + 104:word16] = 0x0196
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008712:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

prvFixedDelayCoRoutine_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vStartFlashCoRoutines(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: lr r4 r5 r6 sp
vStartFlashCoRoutines_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008784:
	branch r0 <u 0x00000008 l0000878A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008788_1:
	r0 = 0x00000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000878A:
	MPU_xQueueGenericCreate(0x00000001, 0x00000004, cpsr)
	Mem35[Mem20[0x000087C4:word32]:word32] = 0x00000001
	branch 0x00000001 == 0x00000000 l000087C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000087C2:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000879E:
	branch r0 == 0x00000000 l000087B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000087A0:
	word32 r4_40 = 0x00000000
	word32 r6_41 = Mem35[0x000087C8:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000087A4:
	xCoRoutineCreate(r6_41, 0x00000000, r4_40, cpsr)
	r4_40 = r4_40 + 0x00000001
	branch r4_40 != r0 l000087A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000087B4:
	word32 r0_71 = Mem35[0x000087CC:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000087BE_thunk_xCoRoutineCreate:
	xCoRoutineCreate(r0_71, 0x00000001, 0x00000000, cpsr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vStartFlashCoRoutines_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xAreFlashCoRoutinesStillRunning()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0 r3
// Preserved: sp
xAreFlashCoRoutinesStillRunning_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000087D0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xAreFlashCoRoutinesStillRunning_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_xTaskCreateRestricted(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV lr r1 r2 r3
// Preserved: r4 r5 r6 sp
MPU_xTaskCreateRestricted_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000087DC:
	word32 r0_17 = xPortRaisePrivilege(cpsr)
	xTaskCreateRestricted(r0, r1, cpsr)
	branch r0_17 == 0x00000001 l00008802
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000087F6:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008802:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xTaskCreateRestricted_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_xTaskCreate(word32 r0, word32 r1, word32 r2, word32 r3, word32 cpsr, word32 dwArg00, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: NZCV r1 r2 r3
// Preserved: r10 r4 r5 r6 r7 r8 r9 sp
MPU_xTaskCreate_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008808:
	word32 r0_32 = xPortRaisePrivilege(cpsr)
	xTaskCreate(r0, r1, r2, r3, cpsr, dwArg00, dwArg04)
	branch r0_32 == 0x00000001 l00008842
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008836:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008842:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xTaskCreate_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_vTaskAllocateMPURegions(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 r6 sp
MPU_vTaskAllocateMPURegions_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000884C:
	word32 r0_17 = xPortRaisePrivilege(cpsr)
	vTaskAllocateMPURegions(r0, r1)
	branch r0_17 == 0x00000001 l00008870
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008864:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008870:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_vTaskAllocateMPURegions_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_vTaskDelayUntil(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 r6 sp
MPU_vTaskDelayUntil_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008874:
	word32 r0_17 = xPortRaisePrivilege(cpsr)
	vTaskDelayUntil(r0, r1, cpsr)
	branch r0_17 == 0x00000001 l00008898
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000888C:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008898:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_vTaskDelayUntil_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_vTaskDelay(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2
// Preserved: r3 r4 r5 sp
MPU_vTaskDelay_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000889C:
	word32 r0_15 = xPortRaisePrivilege(cpsr)
	vTaskDelay(r0, cpsr)
	branch r0_15 == 0x00000001 l000088BC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000088B0:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000088BC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_vTaskDelay_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 MPU_vTaskSuspendAll(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut: r0
// Trashed: NZCV r0 r2 r3
// Preserved: r4 sp
MPU_vTaskSuspendAll_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000088C0:
	word32 r0_23 = xPortRaisePrivilege(cpsr)
	vTaskSuspendAll()
	branch r0_23 == 0x00000001 l000088DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000088D0:
	word32 r0_22 = __mrs(cpsr)
	__msr(cpsr, r0_22 | 0x00000001)
	r0_23 = r0_22 | 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000088DC:
	return r0_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_vTaskSuspendAll_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_xTaskResumeAll(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut:
// Trashed: NZCV r1 r2 r3
// Preserved: r4 sp
MPU_xTaskResumeAll_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000088E0:
	word32 r0_9 = xPortRaisePrivilege(cpsr)
	xTaskResumeAll(cpsr)
	branch r0_9 == 0x00000001 l000088FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000088F2:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000088FE:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xTaskResumeAll_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_xTaskGetTickCount(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut:
// Trashed: NZCV r3
// Preserved: r4 sp
MPU_xTaskGetTickCount_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008904:
	word32 r0_9 = xPortRaisePrivilege(cpsr)
	xTaskGetTickCount()
	branch r0_9 == 0x00000001 l00008922
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008916:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008922:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xTaskGetTickCount_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_uxTaskGetNumberOfTasks(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut:
// Trashed: NZCV r3
// Preserved: r4 sp
MPU_uxTaskGetNumberOfTasks_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008928:
	word32 r0_9 = xPortRaisePrivilege(cpsr)
	uxTaskGetNumberOfTasks()
	branch r0_9 == 0x00000001 l00008946
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000893A:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008946:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_uxTaskGetNumberOfTasks_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_pcTaskGetName(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: NZCV
// Preserved: r3 r4 r5 sp
MPU_pcTaskGetName_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000894C:
	word32 r0_15 = xPortRaisePrivilege(cpsr)
	pcTaskGetName(r0)
	branch r0_15 == 0x00000001 l0000896E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008962:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000896E:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_pcTaskGetName_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_vTaskSetTimeOutState(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r2
// Preserved: r3 r4 r5 sp
MPU_vTaskSetTimeOutState_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008974:
	word32 r0_15 = xPortRaisePrivilege(cpsr)
	vTaskSetTimeOutState(r0)
	branch r0_15 == 0x00000001 l00008994
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008988:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008994:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_vTaskSetTimeOutState_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_xTaskCheckForTimeOut(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r1 r2 r3
// Preserved: r4 r5 r6 sp
MPU_xTaskCheckForTimeOut_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008998:
	word32 r0_17 = xPortRaisePrivilege(cpsr)
	xTaskCheckForTimeOut(r0, r1, cpsr)
	branch r0_17 == 0x00000001 l000089BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000089B2:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000089BE:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xTaskCheckForTimeOut_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_xTaskGenericNotify(word32 r0, word32 r1, word32 r2, word32 r3, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31]
// LiveOut:
// Trashed: NZCV lr r1 r2 r3
// Preserved: r4 r5 r6 r7 r8 sp
MPU_xTaskGenericNotify_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000089C4:
	word32 r0_25 = xPortRaisePrivilege(cpsr)
	xTaskGenericNotify(r0, r1, r2, r3, cpsr)
	branch r0_25 == 0x00000001 l000089F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000089E8:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000089F4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xTaskGenericNotify_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_xTaskNotifyWait(word32 r0, word32 r1, word32 r2, word32 r3, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31]
// LiveOut:
// Trashed: NZCV r1 r2 r3
// Preserved: r4 r5 r6 r7 r8 sp
MPU_xTaskNotifyWait_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000089FC:
	word32 r0_25 = xPortRaisePrivilege(cpsr)
	xTaskNotifyWait(r0, r1, r2, r3, cpsr)
	branch r0_25 == 0x00000001 l00008A2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008A20:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008A2C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xTaskNotifyWait_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_ulTaskNotifyTake(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r2 r3
// Preserved: r1 r4 r5 r6 sp
MPU_ulTaskNotifyTake_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008A34:
	word32 r0_17 = xPortRaisePrivilege(cpsr)
	ulTaskNotifyTake(r0, r1, cpsr)
	branch r0_17 == 0x00000001 l00008A5A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008A4E:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008A5A:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_ulTaskNotifyTake_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_xTaskNotifyStateClear(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: NZCV r2
// Preserved: r3 r4 r5 sp
MPU_xTaskNotifyStateClear_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008A60:
	word32 r0_15 = xPortRaisePrivilege(cpsr)
	xTaskNotifyStateClear(r0, cpsr)
	branch r0_15 == 0x00000001 l00008A82
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008A76:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008A82:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xTaskNotifyStateClear_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_xQueueGenericCreate(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r1 r2
// Preserved: r0 r3 r4 r5 r6 r7 sp
MPU_xQueueGenericCreate_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008A88:
	word32 r0_23 = xPortRaisePrivilege(cpsr)
	xQueueGenericCreate(r0, r1, cpsr)
	branch r0_23 == 0x00000001 l00008AB2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008AA6:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008AB2:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xQueueGenericCreate_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_xQueueGenericReset(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r1 r2 r3
// Preserved: r4 r5 r6 sp
MPU_xQueueGenericReset_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008AB8:
	word32 r0_17 = xPortRaisePrivilege(cpsr)
	xQueueGenericReset(r0, r1, cpsr)
	branch r0_17 == 0x00000001 l00008ADE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008AD2:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008ADE:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xQueueGenericReset_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 MPU_xQueueGenericSend(word32 r0, word32 r1, word32 r2, word32 r3, word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31]
// LiveOut: lr
// Trashed: NZCV lr r1 r2 r3
// Preserved: r4 r5 r6 r7 r8 sp
MPU_xQueueGenericSend_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008AE4:
	word32 r0_25 = xPortRaisePrivilege(cpsr)
	word32 lr_34 = xQueueGenericSend(r0, r1, r2, r3, lr, cpsr)
	branch r0_25 == 0x00000001 l00008B14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008B08:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008B14:
	return lr_34
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xQueueGenericSend_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_uxQueueMessagesWaiting(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: NZCV r2
// Preserved: r3 r4 r5 sp
MPU_uxQueueMessagesWaiting_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008B1C:
	word32 r0_15 = xPortRaisePrivilege(cpsr)
	uxQueueMessagesWaiting(r0, cpsr)
	branch r0_15 == 0x00000001 l00008B3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008B32:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008B3E:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_uxQueueMessagesWaiting_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_uxQueueSpacesAvailable(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: NZCV r2
// Preserved: r3 r4 r5 sp
MPU_uxQueueSpacesAvailable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008B44:
	word32 r0_15 = xPortRaisePrivilege(cpsr)
	uxQueueSpacesAvailable(r0, cpsr)
	branch r0_15 == 0x00000001 l00008B66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008B5A:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008B66:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_uxQueueSpacesAvailable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 MPU_xQueueGenericReceive(word32 r0, word32 r1, word32 r2, word32 r3, word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31]
// LiveOut: lr
// Trashed: NZCV lr r1 r2 r3
// Preserved: r4 r5 r6 r7 r8 sp
MPU_xQueueGenericReceive_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008B6C:
	word32 r0_25 = xPortRaisePrivilege(cpsr)
	word32 lr_34
	xQueueGenericReceive(r0, r1, r2, r3, lr, cpsr, out lr_34)
	branch r0_25 == 0x00000001 l00008B9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008B90:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008B9C:
	return lr_34
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xQueueGenericReceive_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_xQueuePeekFromISR(word32 r0, word32 r1, word32 r7, word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31] r0:[0..31] r1:[0..31] r7:[0..31]
// LiveOut:
// Trashed: NZCV lr r1 r2 r3 r7
// Preserved: r4 r5 r6 sp
MPU_xQueuePeekFromISR_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008BA4:
	word32 r0_17 = xPortRaisePrivilege(cpsr)
	xQueuePeekFromISR(r0, r1, r7, lr, cpsr)
	branch r0_17 == 0x00000001 l00008BCA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008BBE:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008BCA:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xQueuePeekFromISR_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_xQueueGetMutexHolder(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: NZCV r2
// Preserved: r3 r4 r5 sp
MPU_xQueueGetMutexHolder_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008BD0:
	word32 r0_15 = xPortRaisePrivilege(cpsr)
	xQueueGetMutexHolder(r0, cpsr)
	branch r0_15 == 0x00000001 l00008BF2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008BE6:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008BF2:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xQueueGetMutexHolder_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_xQueueCreateMutex(word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31]
// LiveOut:
// Trashed: NZCV lr r1 r2
// Preserved: r3 r4 r5 sp
MPU_xQueueCreateMutex_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008BF8:
	word32 r0_15 = xPortRaisePrivilege(cpsr)
	xQueueCreateMutex(lr, cpsr)
	branch r0_15 == 0x00000001 l00008C1A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008C0E:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008C1A:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xQueueCreateMutex_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_xQueueTakeMutexRecursive(word32 r0, word32 r1, word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV lr r1 r2 r3
// Preserved: r4 r5 r6 sp
MPU_xQueueTakeMutexRecursive_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008C20:
	word32 r0_17 = xPortRaisePrivilege(cpsr)
	xQueueTakeMutexRecursive(r0, r1, lr, cpsr)
	branch r0_17 == 0x00000001 l00008C46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008C3A:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008C46:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xQueueTakeMutexRecursive_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_xQueueGiveMutexRecursive(word32 r0, word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: NZCV lr r1 r2
// Preserved: r3 r4 r5 sp
MPU_xQueueGiveMutexRecursive_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008C4C:
	word32 r0_15 = xPortRaisePrivilege(cpsr)
	xQueueGiveMutexRecursive(r0, lr, cpsr)
	branch r0_15 == 0x00000001 l00008C6E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008C62:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008C6E:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xQueueGiveMutexRecursive_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_vQueueDelete(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut:
// Trashed: NZCV r0
// Preserved: r3 r4 r5 sp
MPU_vQueueDelete_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008C74:
	word32 r0_15 = xPortRaisePrivilege(cpsr)
	vQueueDelete()
	branch r0_15 == 0x00000001 l00008C94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008C88:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008C94:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_vQueueDelete_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_pvPortMalloc(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: NZCV r1 r2
// Preserved: r3 r4 r5 sp
MPU_pvPortMalloc_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008C98:
	word32 r0_15 = xPortRaisePrivilege(cpsr)
	pvPortMalloc(r0, cpsr)
	branch r0_15 == 0x00000001 l00008CBA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008CAE:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008CBA:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_pvPortMalloc_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_vPortFree(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut:
// Trashed: NZCV r0
// Preserved: r3 r4 r5 sp
MPU_vPortFree_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008CC0:
	word32 r0_15 = xPortRaisePrivilege(cpsr)
	vPortFree()
	branch r0_15 == 0x00000001 l00008CE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008CD4:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008CE0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_vPortFree_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_vPortInitialiseBlocks(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: r4 sp
MPU_vPortInitialiseBlocks_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008CE4:
	word32 r0_9 = xPortRaisePrivilege(cpsr)
	vPortInitialiseBlocks()
	branch r0_9 == 0x00000001 l00008D00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008CF4:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008D00:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_vPortInitialiseBlocks_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_xPortGetFreeHeapSize(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut:
// Trashed: NZCV r3
// Preserved: r4 sp
MPU_xPortGetFreeHeapSize_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008D04:
	word32 r0_9 = xPortRaisePrivilege(cpsr)
	xPortGetFreeHeapSize()
	branch r0_9 == 0x00000001 l00008D22
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008D16:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008D22:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xPortGetFreeHeapSize_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_xEventGroupCreate(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31]
// LiveOut:
// Trashed: NZCV r1 r2 r3
// Preserved: r4 sp
MPU_xEventGroupCreate_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008D28:
	word32 r0_9 = xPortRaisePrivilege(cpsr)
	xEventGroupCreate(cpsr)
	branch r0_9 == 0x00000001 l00008D46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008D3A:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008D46:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xEventGroupCreate_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_xEventGroupWaitBits(word32 r0, word32 r1, word32 r2, word32 r3, word32 cpsr, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] Stack +0000:[0..31]
// LiveOut:
// Trashed: NZCV r1 r2 r3
// Preserved: r4 r5 r6 r7 r8 r9 sp
MPU_xEventGroupWaitBits_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008D4C:
	word32 r0_29 = xPortRaisePrivilege(cpsr)
	xEventGroupWaitBits(r0, r1, r2, r3, cpsr, dwArg00)
	branch r0_29 == 0x00000001 l00008D82
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008D76:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008D82:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xEventGroupWaitBits_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_xEventGroupClearBits(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r2 r3
// Preserved: r1 r4 r5 r6 sp
MPU_xEventGroupClearBits_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008D8C:
	word32 r0_17 = xPortRaisePrivilege(cpsr)
	xEventGroupClearBits(r0, r1, cpsr)
	branch r0_17 == 0x00000001 l00008DB2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008DA6:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008DB2:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xEventGroupClearBits_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_xEventGroupSetBits(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV lr r1 r2 r3
// Preserved: r4 r5 r6 sp
MPU_xEventGroupSetBits_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008DB8:
	word32 r0_17 = xPortRaisePrivilege(cpsr)
	xEventGroupSetBits(r0, r1, cpsr)
	branch r0_17 == 0x00000001 l00008DDE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008DD2:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008DDE:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xEventGroupSetBits_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_xEventGroupSync(word32 r0, word32 r1, word32 r2, word32 r3, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31]
// LiveOut:
// Trashed: NZCV lr r1 r2 r3
// Preserved: r4 r5 r6 r7 r8 sp
MPU_xEventGroupSync_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008DE4:
	word32 r0_25 = xPortRaisePrivilege(cpsr)
	xEventGroupSync(r0, r1, r2, r3, cpsr)
	branch r0_25 == 0x00000001 l00008E14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008E08:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008E14:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_xEventGroupSync_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void MPU_vEventGroupDelete(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2
// Preserved: r3 r4 r5 sp
MPU_vEventGroupDelete_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008E1C:
	word32 r0_15 = xPortRaisePrivilege(cpsr)
	vEventGroupDelete(r0, cpsr)
	branch r0_15 == 0x00000001 l00008E3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008E30:
	__msr(cpsr, __mrs(cpsr) | 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008E3C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

MPU_vEventGroupDelete_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void xCoRoutineCreate(word32 r0, word32 r1, word32 r2, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2
// Preserved: fp r10 r3 r4 r5 r6 r7 r8 r9 sp
xCoRoutineCreate_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008E40:
	word32 r5_28 = r1
	word32 r0_32 = pvPortMalloc(0x00000038, cpsr)
	branch r0_32 == 0x00000000 l00008EE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008EE4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008E54:
	word32 r7_53 = Mem23[0x00008EEC:word32]
	branch Mem23[r7_53:word32] == 0x00000000 l00008EAC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008EAC:
	Mem57[r7_53:word32] = r0_32
	vListInitialise(r7_53 + 4)
	vListInitialise(r7_53 + 0x00000018)
	vListInitialise(r7_53 + 0x0000002C)
	vListInitialise(r7_53 + 0x00000040)
	vListInitialise(r7_53 + 0x00000054)
	Mem81[r7_53 + 104:word32] = r7_53 + 0x0000002C
	Mem82[r7_53 + 108:word32] = r7_53 + 0x00000040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008E5C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008E60:
	branch r1 <u 0x00000001 l00008E66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008E64_1:
	r5_28 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008E66:
	Mem92[r0_32 + 104:word16] = 0x0000
	Mem94[r0_32 + 44:word32] = r5_28
	Mem97[r0_32 + 48:word32] = r2
	Mem100[r0_32:word32] = r0
	vListInitialiseItem(r0_32 + 4)
	vListInitialiseItem(r0_32 + 0x00000018)
	word32 r0_106 = Mem100[r0_32 + 44:word32]
	word32 r5_110 = 0x00000002 - r5_28
	branch r0_106 <=u Mem100[r7_53 + 112:word32] l00008E92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008E90_1:
	Mem113[r7_53 + 112:word32] = r0_106
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008E92:
	Mem122[r0_32 + 24:word32] = r5_110
	Mem123[r0_32 + 16:word32] = r0_32
	Mem124[r0_32 + 36:word32] = r0_32
	vListInsertEnd(r7_53 + 0x00000004 + r0_106 * 0x00000014, r0_32 + 4)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

xCoRoutineCreate_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



bool vCoRoutineAddToDelayedList(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut: Z
// Trashed: NZCV r0 r1 r2 r3
// Preserved: lr r4 r5 r6 sp
vCoRoutineAddToDelayedList_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008EF0:
	word32 r4_14 = Mem11[0x00008F28:word32]
	word32 r5_18 = Mem11[r4_14 + 116:word32] + r0
	uxListRemove(Mem11[r4_14:word32] + 0x00000004)
	word32 r3_29 = Mem11[r4_14 + 116:word32]
	word32 r1_30 = Mem11[r4_14:word32]
	Mem32[r1_30 + 4:word32] = r5_18
	branch r5_18 >=u r3_29 l00008F0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008F0C_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008F0E:
	bool Z_44 = vListInsert(Mem32[r4_14 + 104:word32], r1_30 + 0x00000004)
	branch r1 == 0x00000000 l00008F26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008F26:
	return Z_44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008F18:
	word32 r1_53 = Mem32[r4_14:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008F22_thunk_vListInsert:
	return vListInsert(r1, r1_53 + 0x00000018)
// DataOut:
// DataOut (flags):
// SymbolicIn:

vCoRoutineAddToDelayedList_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 vCoRoutineSchedule(word32 r0, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 lr, word32 pc, word32 cpsr, ptr32 & pcOut, ptr32 & cpsrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr:[0..31] lr:[0..31] pc:[0..31] r0:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: cpsr lr pc
// Trashed: NZCV cpsr lr pc r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
vCoRoutineSchedule_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008F2C:
	word32 r5_16 = Mem15[0x00009088:word32]
	cpsr_487 = cpsr
	branch Mem15[r5_16 + 84:word32] == 0x00000000 l00008F82
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008F36:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008F3C:
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	word32 r4_25 = Mem23[Mem23[r5_16 + 96:word32] + 12:word32]
	uxListRemove(r4_25 + 0x00000018)
	__msr(cpsr, 0x00000000)
	uxListRemove(r4_25 + 0x00000004)
	word32 r3_46 = Mem23[r4_25 + 44:word32]
	r0 = r5_16 + 0x00000004 + r3_46 * 0x00000014
	branch r3_46 <=u Mem23[r5_16 + 112:word32] l00008F78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008F76_1:
	Mem54[r5_16 + 112:word32] = r3_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008F78:
	vListInsertEnd(r0, r4_25 + 0x00000004)
	cpsr_488 = cpsr
	branch Mem64[r5_16 + 84:word32] != 0x00000000 l00008F3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008F82:
	MPU_xTaskGetTickCount(cpsr)
	word32 r3_171 = Mem78[r5_16 + 116:word32]
	word32 r0_179 = r0 - Mem78[r5_16 + 120:word32]
	word32 r8_84 = Mem78[0x00009090:word32]
	Mem85[r5_16 + 124:word32] = r0_179
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008F94:
	branch r0_179 == 0x00000000 l00009014
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008F98:
	word32 r2_102
	r3_171 = r3_171 + 0x00000001
	Mem94[r5_16 + 116:word32] = r3_171
	r0_179 = r0_179 - 0x00000001
	Mem95[r5_16 + 124:word32] = r0_179
	branch r3_171 == 0x00000000 l0000904C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000904C:
	r2_102 = Mem95[r5_16 + 108:word32]
	Mem100[r5_16 + 108:word32] = Mem95[r5_16 + 104:word32]
	Mem101[r5_16 + 104:word32] = r2_102
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008FA4:
	r2_102 = Mem95[r5_16 + 104:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008FA6:
	branch Mem104[r2_102:word32] == 0x00000000 l00008F94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008FAC:
	word32 r4_109 = Mem104[Mem104[r2_102 + 12:word32] + 12:word32]
	branch r3_171 >=u Mem104[r4_109 + 4:word32] l00008FC4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008FC4:
	__msr(cpsr_487, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	word32 r6_117 = r4_109 + 0x00000004
	uxListRemove(r6_117)
	word32 r0_129 = r4_109 + 0x00000018
	branch Mem127[r4_109 + 40:word32] == 0x00000000 l00008FE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008FE4:
	uxListRemove(r0_129)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008FE8:
	__msr(cpsr_487, 0x00000000)
	word32 r3_143 = Mem127[r4_109 + 44:word32]
	word32 r0_153 = r8_84 + r3_143 * 0x00000014
	branch r3_143 <=u Mem127[r5_16 + 112:word32] l00009000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008FFE_1:
	Mem155[r5_16 + 112:word32] = r3_143
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009000:
	vListInsertEnd(r0_153, r6_117)
	word32 r3_166 = Mem165[r5_16 + 104:word32]
	branch Mem165[r3_166:word32] != 0x00000000 l00008FB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008FB8:
	r4_109 = Mem165[Mem165[r3_166 + 12:word32] + 12:word32]
	r3_171 = Mem165[r5_16 + 116:word32]
	branch Mem165[r4_109 + 4:word32] >u r3_171 l0000900E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000900C:
	r3_171 = Mem165[r5_16 + 116:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000900E:
	r0_179 = Mem165[r5_16 + 124:word32]
	branch r0_179 != 0x00000000 l00008F98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009014:
	word32 r2_197
	word32 r1_186 = Mem184[r5_16 + 112:word32]
	Mem190[r5_16 + 120:word32] = r3_171
	word32 r3_191 = r1_186 << 2
	branch Mem190[r5_16 + r1_186 * 0x00000014 + 4:word32] != 0x00000000 l00009084
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009084:
	r2_197 = r1_186
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009026:
	branch r1_186 == 0x00000000 l00009080
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009080:
	pcOut = pc
	cpsrOut = cpsr_487
	return lr
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009028:
	r3_191 = r1_186 - 0x00000001 << 2
	r2_197 = r1_186 - 0x00000001
	branch Mem190[r5_16 + (r3_191 + (r1_186 - 0x00000001) << 0x00000002) + 4:word32] != 0x00000000 l00009056
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009036:
	branch r1_186 == 0x00000001 l00009046
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009038:
	r3_191 = r1_186 - 0x00000002 << 2
	r2_197 = r1_186 - 0x00000002
	branch Mem190[r5_16 + (r3_191 + (r1_186 - 0x00000002) << 0x00000002) + 4:word32] != 0x00000000 l00009056
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009056:
	Mem226[r5_16 + 112:word32] = r2_197
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009058:
	word32 r2_242
	word32 r3_230 = r3_191 + r2_197
	word32 r1_233 = r5_16 + (r3_230 << 2)
	word32 r2_237 = Mem234[Mem234[r1_233 + 8:word32] + 4:word32]
	word32 r3_238 = (r3_230 << 2) + Mem234[0x0000908C:word32]
	Mem240[r1_233 + 8:word32] = r2_237
	r2_242 = r2_237
	branch r2_237 != r3_238 l0000906E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000906C_1:
	r2_242 = Mem240[r2_237 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000906E:
	word32 r0_245 = Mem240[r2_242 + 12:word32]
	branch r2_237 != r3_238 l00009074
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009072_1:
	Mem248[r1_233 + 8:word32] = r2_242
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009074:
	Mem252[r5_16:word32] = r0_245
	word32 r3_253 = Mem252[r0_245:word32]
	word32 lr_272
	word32 pc_285
	word32 cpsr_295
	call r3_253 (retsize: 0;)
		uses: cpsr:cpsr_68,lr:lr,pc:pc,r0:r0_245,r1:Mem252[r0_245 + 48:word32],r2:r2_243,r3:r3_253,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,sp:fp,Stack +FFFFFFE8:r4,Stack +FFFFFFEC:r5,Stack +FFFFFFF0:r6,Stack +FFFFFFF4:r7,Stack +FFFFFFF8:r8,Stack +FFFFFFFC:lr
		defs: cpsr:cpsr_295,lr:lr_272,pc:pc_285
	pcOut = pc_285
	cpsrOut = cpsr_295
	return lr_272
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009046:
	Mem303[r5_16 + 112:word32] = r2_197
	pcOut = pc
	cpsrOut = cpsr_487
	return lr
// DataOut:
// DataOut (flags):
// SymbolicIn:

vCoRoutineSchedule_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008FB6:
// DataOut:
// DataOut (flags):
// SymbolicIn:



bool xCoRoutineRemoveFromEventList(word32 r0, ptr32 & r0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut: Z r0
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 r6 sp
xCoRoutineRemoveFromEventList_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009094:
	word32 r4_15 = Mem14[Mem0[r0 + 12:word32] + 12:word32]
	word32 r5_16 = Mem14[0x000090C0:word32]
	uxListRemove(r4_15 + 0x00000018)
	vListInsertEnd(r5_16 + 0x00000054, r4_15 + 0x00000018)
	word32 r0_36 = Mem14[r4_15 + 44:word32]
	word32 r3_37 = Mem14[Mem14[r5_16:word32] + 44:word32]
	bool Z_64 = SLICE(cond(r0_36 - r3_37), bool, 2)
	branch r0_36 >=u r3_37 l000090BC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000090BA_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000090BC:
	r0Out = 0x00000001
	return Z_64
// DataOut:
// DataOut (flags):
// SymbolicIn:

xCoRoutineRemoveFromEventList_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIOGetIntNumber(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r3
// Preserved: sp
GPIOGetIntNumber_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000090C4:
	word32 r3_4 = Mem0[0x00009104:word32]
	branch r0 == r3_4 l000090FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000090FE:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000090CA:
	branch r0 >u r3_4 l000090DE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000090DE:
	word32 r3_10 = Mem0[0x00009108:word32]
	branch r0 == r3_10 l000090F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000090F6:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000090E4:
	branch r0 != r3_10 + 0x0001D000 l000090F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000090EC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000090CC:
	branch r0 == 0x40004000 l000090FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000090FA:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000090D2:
	branch r0 != r3_4 - 0x00001000 l000090F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000090F0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000090DA:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIOGetIntNumber_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIODirModeSet(word32 r0, word32 r1, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r2:[0..31]
// LiveOut:
// Trashed: NZC r1 r2 r3
// Preserved: sp
GPIODirModeSet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000910C:
	word32 r3_10 = Mem0[r0 + 1024:word32]
	branch (r2 & 0x00000001) == 0x00000000 l00009118
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009116_1:
	r3_10 = r3_10 | r1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009118:
	Mem15[r0 + 1024:word32] = r3_10 & ~r1
	word32 r3_16 = Mem15[r0 + 1056:word32]
	branch r2 << 30 >= 0x00000000 l00009128
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009126_1:
	r1 = r1 | r3_16
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009128:
	Mem26[r0 + 1056:word32] = r3_16 & ~(r1 << 0x00000000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIODirModeSet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIODirModeGet(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 sp
GPIODirModeGet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009134:
	word32 r1_11 = (uint32) (byte) (0x00000001 << r1)
	word32 r2_12 = Mem6[r0 + 1056:word32]
	word32 r4_14 = Mem6[r0 + 1024:word32] + r1_11 + C
	branch r4_14 != 0x00000000 l0000914C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000914A_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000914C:
	branch r2_12 + r1_11 + (r4_14 <u 0x00000000) == 0x00000000 l00009152
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009150_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009152:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIODirModeGet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIOIntTypeSet(word32 r0, word32 r1, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r2:[0..31]
// LiveOut:
// Trashed: NZC r1 r2 r3
// Preserved: sp
GPIOIntTypeSet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000915C:
	word32 r3_10 = Mem0[r0 + 1032:word32]
	branch (r2 & 0x00000001) == 0x00000000 l00009168
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009166_1:
	r3_10 = r3_10 | r1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009168:
	Mem15[r0 + 1032:word32] = r3_10 & ~r1
	word32 r3_16 = Mem15[r0 + 1028:word32]
	branch (r2 & 0x00000002) == 0x00000000 l0000917A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009178_1:
	r3_16 = r3_16 | r1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000917A:
	Mem25[r0 + 1028:word32] = r3_16 & ~r1
	word32 r3_26 = Mem25[r0 + 1036:word32]
	branch r2 << 29 >= 0x00000000 l0000918A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009188_1:
	r1 = r1 | r3_26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000918A:
	Mem36[r0 + 1036:word32] = r3_26 & ~(r1 << 0x00000000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIOIntTypeSet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIOIntTypeGet(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: sp
GPIOIntTypeGet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009194:
	word32 r1_9 = (uint32) (byte) (0x00000001 << r1)
	word32 r3_10 = Mem0[r0 + 1028:word32]
	word32 r2_12 = Mem0[r0 + 1032:word32] + r1_9 + C
	word32 r0_14 = Mem0[r0 + 1036:word32]
	branch r2_12 == 0x00000000 l000091AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000091AC_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000091AE:
	word32 r3_22 = r3_10 + r1_9 + (r2_12 <u 0x00000000)
	branch r3_22 == 0x00000000 l000091B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000091B4_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000091B6:
	branch r0_14 + r1_9 + (r3_22 <u 0x00000000) == 0x00000000 l000091BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000091BC_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000091BE:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIOIntTypeGet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIOPadConfigSet(word32 r0, word32 r1, word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31]
// LiveOut:
// Trashed: NZC r1 r2 r3
// Preserved: r4 sp
GPIOPadConfigSet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000091C8:
	word32 r4_12 = Mem5[r0 + 1280:word32]
	branch (r2 & 0x00000001) == 0x00000000 l000091D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000091D4_1:
	r4_12 = r4_12 | r1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000091D6:
	Mem17[r0 + 1280:word32] = r4_12 & ~r1
	word32 r4_18 = Mem17[r0 + 1284:word32]
	branch (r2 & 0x00000002) == 0x00000000 l000091E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000091E6_1:
	r4_18 = r4_18 | r1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000091E8:
	Mem27[r0 + 1284:word32] = r4_18 & ~r1
	word32 r4_28 = Mem27[r0 + 1288:word32]
	branch (r2 & 0x00000004) == 0x00000000 l000091FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000091F8_1:
	r4_28 = r4_28 | r1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000091FA:
	Mem37[r0 + 1288:word32] = r4_28 & ~r1
	word32 r2_40 = Mem37[r0 + 1304:word32]
	branch (r2 & 0x00000008) == 0x00000000 l0000920C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000920A_1:
	r2_40 = r2_40 | r1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000920C:
	Mem47[r0 + 1304:word32] = r2_40 & ~r1
	word32 r2_48 = Mem47[r0 + 1292:word32]
	branch r3 << 31 >= 0x00000000 l0000921C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000921A_1:
	r2_48 = r2_48 | r1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000921C:
	Mem62[r0 + 1292:word32] = r2_48 & ~r1
	word32 r2_63 = Mem62[r0 + 1296:word32]
	branch r3 << 30 >= 0x00000000 l0000922C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000922A_1:
	r2_63 = r2_63 | r1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000922C:
	Mem73[r0 + 1296:word32] = r2_63 & ~r1
	word32 r2_74 = Mem73[r0 + 1300:word32]
	branch r3 << 29 >= 0x00000000 l0000923C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000923A_1:
	r2_74 = r2_74 | r1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000923C:
	Mem84[r0 + 1300:word32] = r2_74 & ~r1
	word32 r3_87 = Mem84[r0 + 1308:word32]
	branch (r3 & 0x00000008) == 0x00000000 l00009250
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000924E_1:
	r1 = r1 | r3_87
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009250:
	Mem103[r0 + 1308:word32] = r3_87 & ~(r1 << 0x00000000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIOPadConfigSet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIOPadConfigGet(word32 r0, word32 r1, word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2
// Preserved: r4 r5 r6 r7 sp
GPIOPadConfigGet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000925C:
	word32 r1_17 = (uint32) (byte) (0x00000001 << r1)
	word32 r4_18 = Mem11[r0 + 1284:word32]
	word32 r5_20 = Mem11[r0 + 1280:word32] + r1_17 + C
	word32 r5_22 = Mem11[r0 + 1288:word32]
	branch r5_20 == 0x00000000 l00009278
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009276_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009278:
	word32 r4_30 = r4_18 + r1_17 + (r5_20 <u 0x00000000)
	word32 r4_34 = Mem11[r0 + 1304:word32]
	branch r4_30 == 0x00000000 l00009284
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009282_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009284:
	word32 r5_43 = r5_22 + r1_17 + (r4_30 <u 0x00000000)
	branch r5_43 == 0x00000000 l0000928C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000928A_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000928C:
	branch r4_34 + r1_17 + (r5_43 <u 0x00000000) == 0x00000000 l00009294
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009292_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009294:
	Mem73[r2:word32] = 0x00000000
	word32 r5_130 = 0x00000000
	word32 r4_78 = Mem73[r0 + 1296:word32]
	word32 r1_81 = r1_17 + Mem73[r0 + 1292:word32]
	word32 r6_83 = Mem73[r0 + 1300:word32]
	branch r1_81 == 0x00000000 l000092B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000092AE_1:
	r5_130 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000092B0:
	word32 r2_88 = Mem73[r0 + 1308:word32]
	branch r1_81 != 0x00000000 l000092B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000092B6_1:
	r5_130 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000092B8:
	word32 r1_98 = r1_81 + r4_78 + (r1_81 <u 0x00000000)
	branch r1_98 == 0x00000000 l000092BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000092BC_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000092BE:
	word32 r1_109 = r1_98 + r6_83 + (r1_98 <u 0x00000000)
	branch r1_109 == 0x00000000 l000092C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000092C4_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000092C6:
	branch r1_109 + r2_88 + (r1_109 <u 0x00000000) == 0x00000000 l000092CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000092CC_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000092CE:
	Mem147[r3:word32] = r5_130 << 0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIOPadConfigGet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIOPinIntEnable(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZC r1 r3
// Preserved: sp
GPIOPinIntEnable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000092E0:
	Mem9[r0 + 1040:word32] = r1 | Mem0[r0 + 1040:word32]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIOPinIntEnable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIOPinIntDisable(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: r1 r3
// Preserved: sp
GPIOPinIntDisable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000092EC:
	Mem8[r0 + 1040:word32] = Mem0[r0 + 1040:word32] & ~(r1 << 0x00000000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIOPinIntDisable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIOPinIntStatus(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: r0
// Preserved: sp
GPIOPinIntStatus_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000092FC:
	branch r1 != 0x00000000 l00009304
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009304:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000092FE:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIOPinIntStatus_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIOPinIntClear(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
GPIOPinIntClear_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000930C:
	Mem5[r0 + 1052:word32] = r1
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIOPinIntClear_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIOPortIntRegister(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: lr r4 sp
GPIOPortIntRegister_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009314:
	word32 r3_4 = Mem0[0x000093A8:word32]
	branch r0 == r3_4 l00009396
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009396:
	IntRegister(0x00000012, r1)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000093A4_thunk_IntEnable:
	IntEnable(0x00000012)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000931C:
	branch r0 >u r3_4 l0000933E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000933E:
	word32 r3_34 = Mem9[0x000093AC:word32]
	branch r0 == r3_34 l00009372
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009372:
	IntRegister(0x00000013, r1)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009380_thunk_IntEnable:
	IntEnable(0x00000013)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009344:
	branch r0 != r3_34 + 0x0001D000 l0000935E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000934C:
	IntRegister(0x00000014, r1)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000935A_thunk_IntEnable:
	IntEnable(0x00000014)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000931E:
	branch r0 == 0x40004000 l00009384
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009384:
	IntRegister(0x00000010, r1)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009392_thunk_IntEnable:
	IntEnable(0x00000010)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009324:
	branch r0 != r3_4 - 0x00001000 l0000935E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000935E:
	IntRegister(0xFFFFFFFF, r1)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000936E_thunk_IntEnable:
	IntEnable(0xFFFFFFFF)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000932C:
	IntRegister(0x00000011, r1)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000933A_thunk_IntEnable:
	IntEnable(0x00000011)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIOPortIntRegister_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIOPortIntUnregister(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: lr r4 sp
GPIOPortIntUnregister_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000093B0:
	word32 r3_4 = Mem0[0x00009444:word32]
	branch r0 == r3_4 l00009432
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009432:
	IntDisable(0x00000012)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009440_thunk_IntUnregister:
	IntUnregister(0x00000012)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000093B8:
	branch r0 >u r3_4 l000093DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000093DA:
	word32 r3_29 = Mem9[0x00009448:word32]
	branch r0 == r3_29 l0000940E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000940E:
	IntDisable(0x00000013)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000941C_thunk_IntUnregister:
	IntUnregister(0x00000013)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000093E0:
	branch r0 != r3_29 + 0x0001D000 l000093FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000093E8:
	IntDisable(0x00000014)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000093F6_thunk_IntUnregister:
	IntUnregister(0x00000014)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000093BA:
	branch r0 == 0x40004000 l00009420
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009420:
	IntDisable(0x00000010)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000942E_thunk_IntUnregister:
	IntUnregister(0x00000010)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000093C0:
	branch r0 != r3_4 - 0x00001000 l000093FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000093FA:
	IntDisable(0xFFFFFFFF)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000940A_thunk_IntUnregister:
	IntUnregister(0xFFFFFFFF)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000093C8:
	IntDisable(0x00000011)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000093D6_thunk_IntUnregister:
	IntUnregister(0x00000011)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIOPortIntUnregister_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIOPinRead(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: r0
// Preserved: sp
GPIOPinRead_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000944C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIOPinRead_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIOPinWrite(word32 r0, word32 r1, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r2:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
GPIOPinWrite_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009454:
	Mem6[r0 + (r1 << 2):word32] = r2
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIOPinWrite_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIOPinTypeComparator(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r1 r2 r3
// Preserved: r4 r5 r6 sp
GPIOPinTypeComparator_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000945C:
	word32 r5_11 = ~r1
	Mem17[r0 + 1024:word32] = Mem9[r0 + 1024:word32] & r5_11
	Mem22[r0 + 1056:word32] = r5_11 & Mem17[r0 + 1056:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000947A_thunk_GPIOPadConfigSet:
	GPIOPadConfigSet(r0, r1, 0x00000001, 0x00000000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIOPinTypeComparator_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIOPinTypeI2C(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZC r1 r2 r3
// Preserved: r4 r5 r6 sp
GPIOPinTypeI2C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009480:
	Mem16[r0 + 1024:word32] = Mem9[r0 + 1024:word32] & ~(r1 << 0x00000000)
	Mem21[r0 + 1056:word32] = r1 | Mem16[r0 + 1056:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000094A0_thunk_GPIOPadConfigSet:
	GPIOPadConfigSet(r0, r1, 0x00000001, 0x0000000B)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIOPinTypeI2C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIOPinTypeQEI(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZC r1 r2 r3
// Preserved: r4 r5 r6 sp
GPIOPinTypeQEI_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000094A4:
	Mem16[r0 + 1024:word32] = Mem9[r0 + 1024:word32] & ~(r1 << 0x00000000)
	Mem21[r0 + 1056:word32] = r1 | Mem16[r0 + 1056:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000094C4_thunk_GPIOPadConfigSet:
	GPIOPadConfigSet(r0, r1, 0x00000001, 0x0000000A)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIOPinTypeQEI_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIOPinTypeUART(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZC r1 r2 r3
// Preserved: r4 r5 r6 sp
GPIOPinTypeUART_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000094C8:
	Mem16[r0 + 1024:word32] = Mem9[r0 + 1024:word32] & ~(r1 << 0x00000000)
	Mem21[r0 + 1056:word32] = r1 | Mem16[r0 + 1056:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000094E8_thunk_GPIOPadConfigSet:
	GPIOPadConfigSet(r0, r1, 0x00000001, 0x00000008)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIOPinTypeUART_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIOPinTypeTimer(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZC r1 r2 r3
// Preserved: sp
GPIOPinTypeTimer_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000094EC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000094EC_thunk_GPIOPinTypeUART:
	GPIOPinTypeUART(r0, r1)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIOPinTypeTimer_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIOPinTypeSSI(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZC r1 r2 r3
// Preserved: sp
GPIOPinTypeSSI_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000094F0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000094F0_thunk_GPIOPinTypeUART:
	GPIOPinTypeUART(r0, r1)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIOPinTypeSSI_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void GPIOPinTypePWM(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZC r1 r2 r3
// Preserved: sp
GPIOPinTypePWM_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000094F4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000094F4_thunk_GPIOPinTypeUART:
	GPIOPinTypeUART(r0, r1)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

GPIOPinTypePWM_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void IntDefaultHandler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
IntDefaultHandler_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

IntDefaultHandler_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000094F8:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void IntMasterEnable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
IntMasterEnable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000094FC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000094FC_thunk_CPUcpsie:
	CPUcpsie()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

IntMasterEnable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void IntMasterDisable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
IntMasterDisable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009500:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009500_thunk_CPUcpsid:
	CPUcpsid()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

IntMasterDisable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void IntRegister(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r2 r3
// Preserved: r4 r5 sp
IntRegister_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009504:
	word32 r4_11 = Mem9[0x00009534:word32]
	branch Mem9[Mem0[0x00009530:word32]:word32] == r4_11 l00009526
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009510:
	word32 r3_14 = r4_11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009516:
	Mem21[r3_14:word32] = Mem19[r3_14 - r4_11:word32]
	r3_14 = r3_14 + 4
	branch r3_14 != r4_11 + 0x000000B8 l00009516
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009522:
	Mem27[Mem21[0x00009530:word32]:word32] = r4_11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009526:
	Mem35[r4_11 + (r0 << 2):word32] = r1
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

IntRegister_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void IntUnregister(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
IntUnregister_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009538:
	Mem7[Mem0[0x00009544:word32] + (r0 << 2):word32] = Mem0[0x00009548:word32]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

IntUnregister_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void IntPriorityGroupingSet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
IntPriorityGroupingSet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000954C:
	Mem10[Mem0[0x00009564:word32]:word32] = Mem0[Mem0[0x00009560:word32] + (r0 << 2):word32] | 0x05F80000 | 0x00020000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

IntPriorityGroupingSet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void IntPriorityGroupingGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: sp
IntPriorityGroupingGet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009568:
	word32 r3_11 = 0x00000700
	word32 r0_15 = 0x00000000
	word32 r1_7 = Mem0[Mem0[0x00009588:word32]:word32]
	word32 r2_19 = Mem0[0x0000958C:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000957C:
	branch r3_11 == (r1_7 & 0x00000700) l00009586
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009580:
	r0_15 = r0_15 + 0x00000001
	branch r0_15 != 0x00000008 l00009578
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009578:
	r2_19 = r2_19 + 4
	r3_11 = Mem0[r2_19:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009586:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

IntPriorityGroupingGet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void IntPrioritySet(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: r4 sp
IntPrioritySet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009590:
	word32 r4_13 = Mem8[Mem0[0x000095B8:word32] + (r0 & ~0x00000003) + 32:word32]
	word32 r0_16 = (r0 & 0x00000003) << 3
	Mem23[r4_13:word32] = r1 << r0_16 | Mem8[r4_13:word32] & ~((0x000000FF << r0_16) << 0x00000000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

IntPrioritySet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void IntPriorityGet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: sp
IntPriorityGet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000095BC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

IntPriorityGet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void IntEnable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: sp
IntEnable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000095DC:
	branch r0 == 0x00000004 l00009608
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009608:
	word32 r2_7 = Mem0[0x00009634:word32]
	Mem10[r2_7:word32] = Mem0[r2_7:word32] | 0x00010000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000095E0:
	branch r0 == 0x00000005 l00009614
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009614:
	word32 r2_13 = Mem0[0x00009634:word32]
	Mem16[r2_13:word32] = Mem0[r2_13:word32] | 0x00020000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000095E4:
	branch r0 == 0x00000006 l00009620
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009620:
	word32 r2_19 = Mem0[0x00009634:word32]
	Mem22[r2_19:word32] = Mem0[r2_19:word32] | 0x00040000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000095E8:
	branch r0 == 0x0000000F l000095FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000095FC:
	word32 r2_25 = Mem0[0x00009630:word32]
	Mem28[r2_25:word32] = Mem0[r2_25:word32] | 0x00000002
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000095EC:
	branch r0 <=u 0x0000000F l000095FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000095EE:
	Mem35[Mem0[0x0000962C:word32]:word32] = 0x00000001 << r0 - 0x00000010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000095FA:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

IntEnable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void IntDisable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: sp
IntDisable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009638:
	branch r0 == 0x00000004 l00009664
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009664:
	word32 r2_7 = Mem0[0x00009690:word32]
	Mem10[r2_7:word32] = Mem0[r2_7:word32] & ~0x00010000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000963C:
	branch r0 == 0x00000005 l00009670
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009670:
	word32 r2_13 = Mem0[0x00009690:word32]
	Mem16[r2_13:word32] = Mem0[r2_13:word32] & ~0x00020000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009640:
	branch r0 == 0x00000006 l0000967C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000967C:
	word32 r2_19 = Mem0[0x00009690:word32]
	Mem22[r2_19:word32] = Mem0[r2_19:word32] & ~0x00040000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009644:
	branch r0 == 0x0000000F l00009658
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009658:
	word32 r2_25 = Mem0[0x0000968C:word32]
	Mem28[r2_25:word32] = Mem0[r2_25:word32] & ~0x00000002
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009648:
	branch r0 <=u 0x0000000F l00009656
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000964A:
	Mem35[Mem0[0x00009688:word32]:word32] = 0x00000001 << r0 - 0x00000010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009656:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

IntDisable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void OSRAMDelay(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZCV r0
// Preserved: sp
OSRAMDelay_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009694:
	r0 = r0 - 0x00000001
	branch r0 != 0x00000000 l00009694
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009698:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

OSRAMDelay_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void OSRAMWriteFirst(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r0 r1 r2
// Preserved: lr r3 r4 r5 sp
OSRAMWriteFirst_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000969C:
	word32 r4_14 = Mem11[0x000096C0:word32]
	I2CMasterSlaveAddrSet(r4_14, 0x0000003D, 0x00000000)
	I2CMasterDataPut(r4_14, r0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000096BC_thunk_I2CMasterControl:
	I2CMasterControl(r4_14, 0x00000003)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

OSRAMWriteFirst_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void OSRAMWriteArray(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1
// Preserved: r3 r4 r5 r6 r7 sp
OSRAMWriteArray_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000096C4:
	branch r1 == 0x00000000 l000096FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000096FA:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000096C6:
	word32 r5_18 = r0
	word32 r7_19 = Mem16[0x000096FC:word32]
	word32 r4_20 = Mem16[0x00009700:word32]
	word32 r6_21 = r0 + r1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000096D0:
	branch I2CMasterIntStatus(r4_20, 0x00000000) == 0x00000000 l000096D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000096DC:
	OSRAMDelay(Mem16[r7_19:word32])
	I2CMasterDataPut(r4_20, (word32) Mem16[r5_18:byte])
	I2CMasterControl(r4_20, 0x00000001)
	r5_18 = r5_18 + 1
	branch r6_21 != r5_18 l000096D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000096F8:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

OSRAMWriteArray_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void OSRAMWriteByte(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r3
// Preserved: lr r4 sp
OSRAMWriteByte_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009704:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009708:
	branch I2CMasterIntStatus(Mem7[0x00009730:word32], 0x00000000) == 0x00000000 l00009708
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009714:
	OSRAMDelay(Mem7[Mem7[0x00009734:word32]:word32])
	I2CMasterDataPut(Mem7[0x00009730:word32], r0)
	word32 r0_35 = Mem7[0x00009730:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000972C_thunk_I2CMasterControl:
	I2CMasterControl(r0_35, 0x00000001)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

OSRAMWriteByte_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void OSRAMWriteFinal(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1
// Preserved: lr r4 r5 r6 sp
OSRAMWriteFinal_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009738:
	word32 r4_14 = Mem11[0x00009778:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000973E:
	branch I2CMasterIntStatus(r4_14, 0x00000000) == 0x00000000 l0000973E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000974A:
	word32 r5_26 = Mem11[0x0000977C:word32]
	word32 r4_27 = Mem11[0x00009778:word32]
	OSRAMDelay(Mem11[r5_26:word32])
	I2CMasterDataPut(r4_27, r0)
	I2CMasterControl(r4_27, 0x00000005)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009764:
	branch I2CMasterIntStatus(r4_27, 0x00000000) == 0x00000000 l00009764
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009770:
	word32 r0_51 = Mem11[r5_26:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009776_thunk_OSRAMDelay:
	OSRAMDelay(r0_51)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

OSRAMWriteFinal_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void OSRAMClear()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: lr r4 sp
OSRAMClear_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009780:
	OSRAMWriteFirst(0x00000080)
	OSRAMWriteArray(Mem7[0x000097C4:word32], 0x00000006)
	word32 r4_20 = 0x0000005F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009792:
	OSRAMWriteByte(0x00000000)
	r4_20 = r4_20 - 0x00000001
	branch r4_20 != 0x00000000 l00009792
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000979C:
	OSRAMWriteFinal(r4_20)
	OSRAMWriteFirst(0x00000080)
	OSRAMWriteArray(Mem7[0x000097C8:word32], 0x00000006)
	word32 r4_53 = 0x0000005F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000097B2:
	OSRAMWriteByte(0x00000000)
	r4_53 = r4_53 - 0x00000001
	branch r4_53 != 0x00000000 l000097B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000097BC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000097C2_thunk_OSRAMWriteFinal:
	OSRAMWriteFinal(r4_53)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

OSRAMClear_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void OSRAMStringDraw(word32 r0, word32 r1, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r2:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: lr r4 r5 r6 sp
OSRAMStringDraw_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000097CC:
	OSRAMWriteFirst(0x00000080)
	word32 r4_100 = r1
	word32 r5_104 = r0
	branch r2 != 0x00000000 l000097E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000097DE_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000097E0:
	OSRAMWriteByte(0x000000B1)
	OSRAMWriteByte(0x00000080)
	OSRAMWriteByte(r1 + 0x00000024 & 0x0000000F)
	OSRAMWriteByte(0x00000080)
	OSRAMWriteByte(0x00000012)
	OSRAMWriteByte(0x00000040)
	word32 r3_117 = (word32) Mem11[r0:byte]
	branch r3_117 == 0x00000000 l00009876
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009876:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009814:
	word32 r6_85 = Mem11[0x00009878:word32]
	branch r1 <=u 0x0000005A l00009830
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009830:
	OSRAMWriteArray(r6_85 + (r3_117 - 0x00000020) * 0x00000005, 0x00000005)
	branch r4_100 != 0x0000005A l0000981C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000981C:
	r5_104 = r5_104 + 1
	r4_100 = r4_100 + 0x00000006
	branch (word32) Mem11[r5_104:byte] == 0x00000000 l00009846
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009824:
	OSRAMWriteByte(0x00000000)
	r3_117 = (word32) Mem11[r5_104:byte]
	branch r3_117 == 0x00000000 l00009874
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009874:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000982C:
	branch r4_100 >u 0x0000005A l0000984C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009846:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000984A_thunk_OSRAMWriteFinal:
	OSRAMWriteFinal(0x00000000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000981A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000984C:
	word32 r4_144 = 0x0000005F - r4_100
	OSRAMWriteArray(r6_85 + (r3_117 - 0x00000020) * 0x00000005, r4_144)
	word32 r3_156 = (word32) Mem11[r5_104:byte]
	word32 r0_163 = (word32) Mem11[r3_156 - 0x00000020 + (r3_156 - 0x00000020 << 0x00000002) + Mem11[0x0000987C:word32] + r4_144 + 16:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009872_thunk_OSRAMWriteFinal:
	OSRAMWriteFinal(r0_163)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

OSRAMStringDraw_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void OSRAMImageDraw(word32 r0, word32 r1, word32 r2, word32 r3, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] Stack +0000:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r10 r4 r5 r6 r7 r8 r9 sp
OSRAMImageDraw_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009880:
	branch dwArg00 == 0x00000000 l000098EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009888:
	word32 r5_103 = r0
	word32 r4_112 = r2
	word32 r8_29 = (uint32) SLICE(r1 + 0x00000048, ui4, 4)
	word32 r6_30 = dwArg00 + r2
	word32 r7_33 = r1 + 0x00000024 & 0x0000000F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000098A2:
	OSRAMWriteFirst(0x00000080)
	branch r4_112 == 0x00000000 l000098AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000098AC_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000098AE:
	OSRAMWriteByte(0x000000B0)
	OSRAMWriteByte(0x00000080)
	OSRAMWriteByte(r7_33)
	OSRAMWriteByte(0x00000080)
	OSRAMWriteByte(r8_29 | 0x00000010)
	OSRAMWriteByte(0x00000040)
	OSRAMWriteArray(r5_103, r3 + 0xFFFFFFFF)
	r5_103 = r5_103 + r3
	OSRAMWriteFinal((word32) Mem19[r5_103 - 1:byte])
	r4_112 = r4_112 + 0x00000001
	branch r6_30 != r4_112 l000098A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000098EA:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

OSRAMImageDraw_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void OSRAMInit(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: lr r4 r5 r6 r7 r8 sp
OSRAMInit_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000098F0:
	SysCtlPeripheralEnable(0x10001000)
	SysCtlPeripheralEnable(Mem15[0x00009960:word32])
	GPIOPinTypeI2C(Mem15[0x00009964:word32], 0x0000000C)
	I2CMasterInit(Mem15[0x00009968:word32], r0)
	word32 r7_51 = Mem15[0x00009970:word32]
	Mem56[Mem15[0x0000996C:word32]:word32] = 0x00000001
	word32 r6_52 = 0x000000E3
	word32 r4_53 = 0x00000004
	word32 r0_54 = 0x00000080
	word32 r5_55 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009938:
	OSRAMWriteFirst(r0_54)
	OSRAMWriteArray(r5_55 + 0x00000002 + (r7_51 + 0x000001EC), r4_53 - 0x00000002)
	OSRAMWriteFinal(r6_52)
	r5_55 = r5_55 + (r4_53 + 0x00000001)
	word32 r3_88 = r7_51 + (r5_55 << 0x00000000)
	branch r5_55 <=u 0x00000070 l0000992A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000992A:
	r4_53 = (word32) Mem56[r3_88 + 236:byte]
	r0_54 = (word32) Mem56[r3_88 + 237:byte]
	r6_52 = (word32) Mem56[r3_88 + r4_53 + 236:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009958:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000995C_thunk_OSRAMClear:
	OSRAMClear()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

OSRAMInit_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void OSRAMDisplayOn()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 r6 r7 r8 sp
OSRAMDisplayOn_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009974:
	word32 r7_16 = Mem15[0x000099BC:word32]
	word32 r6_17 = 0x000000E3
	word32 r4_18 = 0x00000004
	word32 r0_19 = 0x00000080
	word32 r5_20 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009996:
	OSRAMWriteFirst(r0_19)
	OSRAMWriteArray(r5_20 + 0x00000002 + (r7_16 + 0x000001EC), r4_18 - 0x00000002)
	OSRAMWriteFinal(r6_17)
	r5_20 = r5_20 + (r4_18 + 0x00000001)
	word32 r3_52 = r7_16 + (r5_20 << 0x00000000)
	branch r5_20 <=u 0x00000070 l00009988
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009988:
	r4_18 = (word32) Mem15[r3_52 + 236:byte]
	r0_19 = (word32) Mem15[r3_52 + 237:byte]
	r6_17 = (word32) Mem15[r3_52 + r4_18 + 236:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000099B6:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

OSRAMDisplayOn_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void OSRAMDisplayOff()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZCV r0 r1 r2
// Preserved: lr r3 sp
OSRAMDisplayOff_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000099C0:
	OSRAMWriteFirst(0x00000080)
	OSRAMWriteByte(0x000000AE)
	OSRAMWriteByte(0x00000080)
	OSRAMWriteByte(0x000000AD)
	OSRAMWriteByte(0x00000080)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000099E6_thunk_OSRAMWriteFinal:
	OSRAMWriteFinal(0x0000008A)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

OSRAMDisplayOff_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SSIConfig(word32 r0, word32 r1, word32 r2, word32 r3, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] Stack +0000:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 r6 r7 r8 sp
SSIConfig_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000099E8:
	word32 r7_17 = r2
	word32 r0_25 = SysCtlClockGet()
	branch r2 == 0x00000002 l00009A30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009A30:
	r7_17 = 0x0000000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000099FE:
	branch r2 == 0x00000000 l00009A04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009A02_1:
	r7_17 = 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009A04:
	Mem45[r0 + 4:word32] = r7_17
	word32 r3_41 = r0_25 /u r3
	word32 r4_42 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009A0C:
	r4_42 = r4_42 + 0x00000002
	word32 r2_49 = r3_41 /u r4_42
	branch r2_49 >u 0x00000100 l00009A0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009A18:
	Mem65[r0 + 16:word32] = r4_42
	Mem66[r0:word32] = dwArg00 - 0x00000001 | (r1 & 0x00000030 | r1 << 0x00000006) | r2_49 - 0x00000001 << 0x00000008
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SSIConfig_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SSIEnable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r3
// Preserved: sp
SSIEnable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009A34:
	Mem7[r0 + 4:word32] = Mem0[r0 + 4:word32] | 0x00000002
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SSIEnable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SSIDisable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r3
// Preserved: sp
SSIDisable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009A40:
	Mem7[r0 + 4:word32] = Mem0[r0 + 4:word32] & ~0x00000002
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SSIDisable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SSIIntRegister(word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r1:[0..31]
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: lr sp
SSIIntRegister_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009A4C:
	IntRegister(0x00000017, r1)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009A5A_thunk_IntEnable:
	IntEnable(0x00000017)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SSIIntRegister_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SSIIntUnregister()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: lr sp
SSIIntUnregister_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009A60:
	IntDisable(0x00000017)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009A6E_thunk_IntUnregister:
	IntUnregister(0x00000017)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SSIIntUnregister_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SSIIntEnable(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZC r1 r3
// Preserved: sp
SSIIntEnable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009A74:
	Mem9[r0 + 20:word32] = r1 | Mem0[r0 + 20:word32]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SSIIntEnable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SSIIntDisable(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: r1 r3
// Preserved: sp
SSIIntDisable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009A7C:
	Mem8[r0 + 20:word32] = Mem0[r0 + 20:word32] & ~(r1 << 0x00000000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SSIIntDisable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SSIIntStatus(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: r0
// Preserved: sp
SSIIntStatus_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009A88:
	branch r1 != 0x00000000 l00009A8E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009A8E:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009A8A:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SSIIntStatus_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SSIIntClear(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
SSIIntClear_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009A94:
	Mem5[r0 + 32:word32] = r1
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SSIIntClear_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SSIDataPut(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZC r2 r3
// Preserved: sp
SSIDataPut_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009A98:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009A9C:
	branch Mem0[r0 + 0x0000000C:word32] << 30 >= 0x00000000 l00009A9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009AA2:
	Mem14[r0 + 8:word32] = r1
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SSIDataPut_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SSIDataNonBlockingPut(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZC r0 r3
// Preserved: sp
SSIDataNonBlockingPut_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009AA8:
	branch (Mem0[r0 + 12:word32] & 0x00000002) == 0x00000000 l00009AB2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009AB0_1:
	Mem10[r0 + 8:word32] = r1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009AB2:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SSIDataNonBlockingPut_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SSIDataGet(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZC r2 r3
// Preserved: sp
SSIDataGet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009AB8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009ABC:
	branch Mem0[r0 + 0x0000000C:word32] << 29 >= 0x00000000 l00009ABC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009AC2:
	Mem15[r1:word32] = Mem0[r0 + 8:word32]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SSIDataGet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SSIDataNonBlockingGet(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZC r0 r3
// Preserved: sp
SSIDataNonBlockingGet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009AC8:
	word32 r3_5 = Mem0[r0 + 12:word32]
	word32 r3_10 = r3_5 & 0x00000004
	branch (r3_5 & 0x00000004) == 0x00000000 l00009AD2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009AD0_1:
	r3_10 = Mem0[r0 + 8:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009AD2:
	Mem13[r1:word32] = r3_10
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SSIDataNonBlockingGet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlSRAMSizeGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0 r3
// Preserved: sp
SysCtlSRAMSizeGet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009ADC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlSRAMSizeGet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlFlashSizeGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0 r3
// Preserved: sp
SysCtlFlashSizeGet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009AF4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlFlashSizeGet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlPinPresent(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r3
// Preserved: sp
SysCtlPinPresent_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009B0C:
	branch Mem0[Mem0[0x00009B1C:word32]:word32] + r0 + C == 0x00000000 l00009B16
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009B14_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009B16:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlPinPresent_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlPeripheralPresent(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: sp
SysCtlPeripheralPresent_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009B20:
	branch (r0 & ~0xF0000000) + Mem0[Mem0[Mem0[0x00009B38:word32] + ((r0 >>u 28) << 2):word32]:word32] + (r0 >>u 28 <u 0x00000000) == 0x00000000 l00009B34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009B32_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009B34:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlPeripheralPresent_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlPeripheralReset(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 sp
SysCtlPeripheralReset_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009B3C:
	word32 r2_12 = Mem10[Mem0[0x00009B78:word32] + ((r0 >>u 28) << 0x00000002) + 16:word32]
	Mem17[r2_12:word32] = r0 & ~0xF0000000 | Mem10[r2_12:word32]
	word32 dwLoc0C_43 = 0x00000000
	branch true l00009B6A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009B5E:
	dwLoc0C_43 = dwLoc0C_43 + 0x00000001
	branch dwLoc0C_43 <=u 0x0000000F l00009B5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009B6A:
	Mem37[r2_12:word32] = Mem32[r2_12:word32] & ~(r0 << 0x00000000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlPeripheralReset_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlPeripheralEnable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZC r0 r2 r3
// Preserved: sp
SysCtlPeripheralEnable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009B7C:
	word32 r3_8 = Mem0[Mem0[0x00009B94:word32] + ((r0 >>u 28) << 0x00000002) + 28:word32]
	Mem13[r3_8:word32] = r0 & ~0xF0000000 | Mem0[r3_8:word32]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlPeripheralEnable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlPeripheralDisable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZC r0 r2 r3
// Preserved: sp
SysCtlPeripheralDisable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009B98:
	word32 r2_9 = Mem0[Mem0[0x00009BB0:word32] + ((r0 >>u 28) << 0x00000002) + 28:word32]
	Mem13[r2_9:word32] = Mem0[r2_9:word32] & ~((r0 & ~0xF0000000) << 0x00000000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlPeripheralDisable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlPeripheralSleepEnable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZC r0 r2 r3
// Preserved: sp
SysCtlPeripheralSleepEnable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009BB4:
	word32 r3_8 = Mem0[Mem0[0x00009BCC:word32] + ((r0 >>u 28) << 0x00000002) + 40:word32]
	Mem13[r3_8:word32] = r0 & ~0xF0000000 | Mem0[r3_8:word32]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlPeripheralSleepEnable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlPeripheralSleepDisable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZC r0 r2 r3
// Preserved: sp
SysCtlPeripheralSleepDisable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009BD0:
	word32 r2_9 = Mem0[Mem0[0x00009BE8:word32] + ((r0 >>u 28) << 0x00000002) + 40:word32]
	Mem13[r2_9:word32] = Mem0[r2_9:word32] & ~((r0 & ~0xF0000000) << 0x00000000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlPeripheralSleepDisable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlPeripheralDeepSleepEnable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZC r0 r2 r3
// Preserved: sp
SysCtlPeripheralDeepSleepEnable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009BEC:
	word32 r3_8 = Mem0[Mem0[0x00009C04:word32] + ((r0 >>u 28) << 0x00000002) + 52:word32]
	Mem13[r3_8:word32] = r0 & ~0xF0000000 | Mem0[r3_8:word32]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlPeripheralDeepSleepEnable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlPeripheralDeepSleepDisable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZC r0 r2 r3
// Preserved: sp
SysCtlPeripheralDeepSleepDisable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009C08:
	word32 r2_9 = Mem0[Mem0[0x00009C20:word32] + ((r0 >>u 28) << 0x00000002) + 52:word32]
	Mem13[r2_9:word32] = Mem0[r2_9:word32] & ~((r0 & ~0xF0000000) << 0x00000000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlPeripheralDeepSleepDisable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlPeripheralClockGating(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
SysCtlPeripheralClockGating_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009C24:
	word32 r2_4 = Mem0[0x00009C3C:word32]
	word32 r3_5 = Mem0[r2_4:word32]
	branch r0 != 0x00000000 l00009C32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009C32:
	Mem8[r2_4:word32] = r3_5 | 0x08000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009C2A:
	Mem10[r2_4:word32] = r3_5 & ~0x08000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlPeripheralClockGating_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlIntRegister(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: lr sp
SysCtlIntRegister_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009C40:
	IntRegister(0x0000002C, r0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009C50_thunk_IntEnable:
	IntEnable(0x0000002C)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlIntRegister_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlIntUnregister()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: lr sp
SysCtlIntUnregister_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009C54:
	IntDisable(0x0000002C)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009C62_thunk_IntUnregister:
	IntUnregister(0x0000002C)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlIntUnregister_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlIntEnable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZC r0 r2 r3
// Preserved: sp
SysCtlIntEnable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009C68:
	word32 r2_4 = Mem0[0x00009C74:word32]
	Mem9[r2_4:word32] = r0 | Mem0[r2_4:word32]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlIntEnable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlIntDisable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r0 r2 r3
// Preserved: sp
SysCtlIntDisable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009C78:
	word32 r2_4 = Mem0[0x00009C84:word32]
	Mem8[r2_4:word32] = Mem0[r2_4:word32] & ~(r0 << 0x00000000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlIntDisable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlIntClear(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r3
// Preserved: sp
SysCtlIntClear_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009C88:
	Mem6[Mem0[0x00009C90:word32]:word32] = r0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlIntClear_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlIntStatus(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r0 r3
// Preserved: sp
SysCtlIntStatus_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009C94:
	branch r0 != 0x00000000 l00009C9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009C9C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009C96:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlIntStatus_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlLDOSet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r3
// Preserved: sp
SysCtlLDOSet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CAC:
	Mem6[Mem0[0x00009CB4:word32]:word32] = r0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlLDOSet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlLDOGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0 r3
// Preserved: sp
SysCtlLDOGet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CB8:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlLDOGet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlLDOConfigSet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r3
// Preserved: sp
SysCtlLDOConfigSet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CC4:
	Mem6[Mem0[0x00009CCC:word32]:word32] = r0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlLDOConfigSet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlReset()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlReset_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlReset_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CD0:
	Mem6[Mem0[0x00009CD8:word32]:word32] = Mem0[0x00009CDC:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CD6:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlSleep()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
SysCtlSleep_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CE0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CE0_thunk_CPUwfi:
	CPUwfi()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlSleep_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlDeepSleep()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r3
// Preserved: r4 sp
SysCtlDeepSleep_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CE4:
	word32 r4_8 = Mem7[0x00009D00:word32]
	Mem11[r4_8:word32] = Mem7[r4_8:word32] | 0x00000004
	CPUwfi()
	Mem14[r4_8:word32] = Mem11[r4_8:word32] & ~0x00000004
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlDeepSleep_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlResetCauseGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0 r3
// Preserved: sp
SysCtlResetCauseGet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009D04:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlResetCauseGet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlResetCauseClear(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r0 r2 r3
// Preserved: sp
SysCtlResetCauseClear_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009D10:
	word32 r2_4 = Mem0[0x00009D1C:word32]
	Mem8[r2_4:word32] = Mem0[r2_4:word32] & ~(r0 << 0x00000000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlResetCauseClear_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlBrownOutConfigSet(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: r1 r3
// Preserved: sp
SysCtlBrownOutConfigSet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009D20:
	Mem8[Mem0[0x00009D2C:word32]:word32] = r0 | r1 << 0x00000002
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlBrownOutConfigSet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlClockSet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZCV r1 r2 r3
// Preserved: r0 r4 r5 r6 r7 sp
SysCtlClockSet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009D30:
	word32 r4_15 = Mem12[0x00009DE0:word32]
	word32 r3_17 = Mem12[r4_15:word32]
	word32 r5_25 = Mem12[0x00009DE8:word32]
	word32 r2_28 = r0 & 0x000033F0 | (Mem12[0x00009DE4:word32] & r3_17 | 0x00000800) & (r0 | ~0x00000003)
	Mem29[r4_15:word32] = r3_17 & ~0x00400000 | 0x00000800
	Mem30[r5_25:word32] = 0x00000040
	Mem31[r4_15:word32] = r2_28
	word32 dwLoc14_117 = 0x00000000
	branch true l00009D76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009D6A:
	dwLoc14_117 = dwLoc14_117 + 0x00000001
	branch dwLoc14_117 <=u 0x0000000F l00009D6A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009D76:
	word32 r2_52 = r2_28 & ~0x00000003 | r0 & 0x00000003
	Mem55[Mem47[0x00009DE0:word32]:word32] = r2_52
	word32 r1_58 = r0 & 0x07C00000 | (r2_52 & ~0x07C00000) << 0x00000000
	branch r0 << 20 < 0x00000000 l00009DBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009D94:
	word32 dwLoc14_120 = 0x00008000
	branch 0x00008000 == 0x00000000 l00009DBA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009D9E:
	word32 r2_64 = Mem62[0x00009DEC:word32]
	branch Mem62[r2_64:word32] << 25 >= 0x00000000 l00009DAE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009DAE:
	dwLoc14_120 = dwLoc14_120 - 0x00000001
	branch dwLoc14_120 != 0x00000000 l00009DA8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009DA8:
	branch Mem73[r2_64:word32] << 25 < 0x00000000 l00009DBA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009DA6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009DBA:
	r1_58 = r1_58 & ~0x00000800
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009DBE:
	Mem90[Mem86[0x00009DE0:word32]:word32] = r1_58
	word32 dwLoc14_123 = 0x00000000
	branch true l00009DD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009DCC:
	dwLoc14_123 = dwLoc14_123 + 0x00000001
	branch dwLoc14_123 <=u 0x0000000F l00009DCC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009DD8:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlClockSet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 SysCtlClockGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r0
// Trashed: NZCV r0 r1 r2 r3
// Preserved: sp
SysCtlClockGet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009DF0:
	word32 r0_12
	word32 r3_5 = Mem0[Mem0[0x00009E54:word32]:word32]
	branch (r3_5 & 0x00000030) == 0x00000010 l00009E4E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009E4E:
	r0_12 = Mem0[0x00009E64:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009DFC:
	branch (r3_5 & 0x00000030) == 0x00000020 l00009E4A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009E4A:
	r0_12 = Mem0[0x00009E60:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009E00:
	branch (r3_5 & 0x00000030) == 0x00000000 l00009E06
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009E06:
	r0_12 = Mem0[Mem0[0x00009E58:word32] + ((uint32) SLICE(r3_5, ui4, 6) << 0x00000002) + 48:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009E12:
	branch r3_5 << 20 < 0x00000000 l00009E3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009E16:
	word32 r2_23 = Mem0[Mem0[0x00009E5C:word32]:word32]
	r0_12 = r0_12 * ((uint32) SLICE(r2_23, ui9, 5) + 0x00000002) /u ((r2_23 & 0x0000001F) + 0x00000002)
	branch r2_23 << 17 >= 0x00000000 l00009E34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009E32_1:
	r0_12 = r0_12 >>u 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009E34:
	branch r2_23 << 16 >= 0x00000000 l00009E3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009E38_1:
	r0_12 = r0_12 >>u 2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009E3A:
	branch r3_5 << 9 >= 0x00000000 l00009E04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009E3E:
	return r0_12 /u ((uint32) SLICE(r3_5, ui4, 23) + 0x00000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009E02:
	r0_12 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009E04:
	return r0_12
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlClockGet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlPWMClockSet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZC r0 r2 r3
// Preserved: sp
SysCtlPWMClockSet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009E68:
	word32 r2_4 = Mem0[0x00009E78:word32]
	Mem10[r2_4:word32] = r0 | Mem0[r2_4:word32] & ~0x001E0000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlPWMClockSet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlPWMClockGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0 r3
// Preserved: sp
SysCtlPWMClockGet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009E7C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlPWMClockGet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlADCSpeedSet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZC r0 r1 r2 r3
// Preserved: r4 sp
SysCtlADCSpeedSet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009E8C:
	word32 r4_6 = Mem5[0x00009EB8:word32]
	word32 r1_7 = Mem5[0x00009EBC:word32]
	word32 r2_9 = Mem5[0x00009EC0:word32]
	Mem13[r4_6:word32] = Mem5[r4_6:word32] & ~0x00000F00 | r0
	Mem19[r1_7:word32] = Mem13[r1_7:word32] & ~0x00000F00 | r0
	Mem24[r2_9:word32] = r0 | Mem19[r2_9:word32] & ~0x00000F00
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlADCSpeedSet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlADCSpeedGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0 r3
// Preserved: sp
SysCtlADCSpeedGet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009EC4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlADCSpeedGet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlIOSCVerificationSet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
SysCtlIOSCVerificationSet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009ED4:
	word32 r2_4 = Mem0[0x00009EEC:word32]
	word32 r3_5 = Mem0[r2_4:word32]
	branch r0 != 0x00000000 l00009EE2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009EE2:
	Mem8[r2_4:word32] = r3_5 | 0x00000008
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009EDA:
	Mem10[r2_4:word32] = r3_5 & ~0x00000008
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlIOSCVerificationSet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlMOSCVerificationSet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
SysCtlMOSCVerificationSet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009EF0:
	word32 r2_4 = Mem0[0x00009F08:word32]
	word32 r3_5 = Mem0[r2_4:word32]
	branch r0 != 0x00000000 l00009EFE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009EFE:
	Mem8[r2_4:word32] = r3_5 | 0x00000004
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009EF6:
	Mem10[r2_4:word32] = r3_5 & ~0x00000004
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlMOSCVerificationSet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlPLLVerificationSet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
SysCtlPLLVerificationSet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009F0C:
	word32 r2_4 = Mem0[0x00009F24:word32]
	word32 r3_5 = Mem0[r2_4:word32]
	branch r0 != 0x00000000 l00009F1A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009F1A:
	Mem8[r2_4:word32] = r3_5 | 0x00000400
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009F12:
	Mem10[r2_4:word32] = r3_5 & ~0x00000400
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlPLLVerificationSet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void SysCtlClkVerificationClear()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r1 r2 r3
// Preserved: sp
SysCtlClkVerificationClear_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009F28:
	word32 r3_6 = Mem0[0x00009F34:word32]
	Mem7[r3_6:word32] = 0x00000001
	Mem8[r3_6:word32] = 0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

SysCtlClkVerificationClear_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void UARTParityModeSet(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZC r1 r3
// Preserved: sp
UARTParityModeSet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009F38:
	Mem10[r0 + 44:word32] = r1 | Mem0[r0 + 44:word32] & ~0x00000086
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

UARTParityModeSet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void UARTParityModeGet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r0
// Preserved: sp
UARTParityModeGet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009F44:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

UARTParityModeGet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void UARTConfigSet(word32 r0, word32 r1, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r2:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2
// Preserved: r3 r4 r5 r6 r7 sp
UARTConfigSet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009F4C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009F56:
	word32 r4_26 = Mem15[r0 + 0x00000018:word32]
	branch (r4_26 & 0x00000008) != 0x00000000 l00009F56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009F5E:
	Mem33[r0 + 44:word32] = Mem15[r0 + 44:word32] & ~0x00000010
	Mem37[r0 + 48:word32] = Mem33[r0 + 48:word32] & ~0x00000300 & ~0x00000001
	word32 r0_38 = SysCtlClockGet()
	word32 r2_48 = r0_38 /u (r1 << 4)
	Mem56[r0 + 36:word32] = r2_48
	Mem57[r0 + 40:word32] = (r0_38 - (r1 << 4) * r2_48 << 3) /u r1 + 0x00000001 >>u 1
	Mem59[r0 + 44:word32] = r2
	Mem60[r0 + 24:word32] = r4_26 & 0x00000008
	Mem63[r0 + 44:word32] = Mem60[r0 + 44:word32] | 0x00000010
	Mem67[r0 + 48:word32] = Mem63[r0 + 48:word32] | 0x00000300 | 0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

UARTConfigSet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void UARTConfigGet(word32 r0, word32 r1, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r2:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 r6 r7 r8 sp
UARTConfigGet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009FA8:
	Mem36[r1:word32] = (SysCtlClockGet() << 2) /u (Mem15[r0 + 40:word32] + (Mem15[r0 + 36:word32] << 0x00000006))
	Mem39[r2:word32] = Mem36[r0 + 44:word32] & 0x000000EE
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

UARTConfigGet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void UARTEnable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r3
// Preserved: sp
UARTEnable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009FD4:
	Mem7[r0 + 44:word32] = Mem0[r0 + 44:word32] | 0x00000010
	Mem11[r0 + 48:word32] = Mem7[r0 + 48:word32] | 0x00000300 | 0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

UARTEnable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void UARTDisable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZC r2 r3
// Preserved: sp
UARTDisable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009FEC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009FF0:
	branch Mem0[r0 + 0x00000018:word32] << 28 < 0x00000000 l00009FF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009FF6:
	Mem14[r0 + 44:word32] = Mem0[r0 + 44:word32] & ~0x00000010
	Mem18[r0 + 48:word32] = Mem14[r0 + 48:word32] & ~0x00000300 & ~0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

UARTDisable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void UARTCharsAvail(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r0
// Preserved: sp
UARTCharsAvail_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A00C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

UARTCharsAvail_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void UARTSpaceAvail(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r0
// Preserved: sp
UARTSpaceAvail_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A018:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

UARTSpaceAvail_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void UARTCharNonBlockingGet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZC r0 r3
// Preserved: sp
UARTCharNonBlockingGet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A024:
	branch Mem0[r0 + 24:word32] << 27 < 0x00000000 l0000A02C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A02A_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A02C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

UARTCharNonBlockingGet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void UARTCharGet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZC r0 r2 r3
// Preserved: sp
UARTCharGet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A034:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A038:
	branch Mem0[r0 + 0x00000018:word32] << 27 < 0x00000000 l0000A038
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A03E:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

UARTCharGet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void UARTCharNonBlockingPut(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZC r0 r3
// Preserved: sp
UARTCharNonBlockingPut_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A044:
	branch Mem0[r0 + 24:word32] << 26 < 0x00000000 l0000A04C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A04A_1:
	Mem10[r0:word32] = r1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A04C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

UARTCharNonBlockingPut_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void UARTCharPut(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZC r2 r3
// Preserved: sp
UARTCharPut_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A054:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A058:
	branch Mem0[r0 + 0x00000018:word32] << 26 < 0x00000000 l0000A058
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A05E:
	Mem14[r0:word32] = r1
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

UARTCharPut_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void UARTBreakCtl(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: r3
// Preserved: sp
UARTBreakCtl_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A064:
	word32 r3_5 = Mem0[r0 + 44:word32]
	branch r1 != 0x00000000 l0000A070
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A070:
	Mem8[r0 + 44:word32] = r3_5 | 0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A068:
	Mem10[r0 + 44:word32] = r3_5 & ~0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

UARTBreakCtl_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void UARTIntRegister(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: lr r4 sp
UARTIntRegister_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A078:
	branch r0 != Mem7[0x0000A094:word32] l0000A082
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A080_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A082:
	IntRegister(0x00000016, r1)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A090_thunk_IntEnable:
	IntEnable(0x00000016)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

UARTIntRegister_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void UARTIntUnregister(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: lr r4 sp
UARTIntUnregister_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A098:
	branch r0 != Mem7[0x0000A0B4:word32] l0000A0A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0A0_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0A2:
	IntDisable(0x00000016)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0B0_thunk_IntUnregister:
	IntUnregister(0x00000016)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

UARTIntUnregister_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void UARTIntEnable(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZC r1 r3
// Preserved: sp
UARTIntEnable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0B8:
	Mem9[r0 + 56:word32] = r1 | Mem0[r0 + 56:word32]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

UARTIntEnable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void UARTIntDisable(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: r1 r3
// Preserved: sp
UARTIntDisable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0C0:
	Mem8[r0 + 56:word32] = Mem0[r0 + 56:word32] & ~(r1 << 0x00000000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

UARTIntDisable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 UARTIntStatus(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut: r0
// Trashed: r0
// Preserved: sp
UARTIntStatus_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0CC:
	branch r1 != 0x00000000 l0000A0D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0D2:
	return Mem0[r0 + 64:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0CE:
	return Mem0[r0 + 60:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

UARTIntStatus_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void UARTIntClear(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
UARTIntClear_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0D8:
	Mem5[r0 + 68:word32] = r1
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

UARTIntClear_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void CPUcpsie()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
CPUcpsie_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0DC:
	__cps_id()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

CPUcpsie_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void CPUcpsid()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
CPUcpsid_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0E4:
	__cps_id()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

CPUcpsid_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void CPUwfi()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
CPUwfi_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0EC:
	__wait_for_interrupt()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

CPUwfi_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CMasterInit(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r0 r1 r2
// Preserved: r3 r4 r5 sp
I2CMasterInit_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0F4:
	Mem18[r0 + 32:word32] = Mem11[r0 + 32:word32] | 0x00000010
	word32 r0_19 = SysCtlClockGet()
	word32 r3_27 = Mem18[0x0000A120:word32]
	word32 r2_28 = Mem18[0x0000A124:word32]
	branch r1 != 0x00000001 l0000A112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A110_1:
	r3_27 = r2_28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A112:
	Mem40[r0 + 12:word32] = (r0_19 - 0x00000001 + r3_27) /u r3_27 - 0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CMasterInit_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CSlaveInit(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: r2 r3
// Preserved: r4 sp
I2CSlaveInit_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A128:
	Mem11[r0 - 0x000007E0:word32] = Mem5[r0 - 0x000007E0:word32] | 0x00000020
	Mem12[r0 + 4:word32] = 0x00000001
	Mem14[r0:word32] = r1
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CSlaveInit_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CMasterEnable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r3
// Preserved: sp
I2CMasterEnable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A140:
	Mem7[r0 + 32:word32] = Mem0[r0 + 32:word32] | 0x00000010
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CMasterEnable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CSlaveEnable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r1 r2 r3
// Preserved: sp
I2CSlaveEnable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A14C:
	Mem9[r0 - 0x000007E0:word32] = Mem0[r0 - 0x000007E0:word32] | 0x00000020
	Mem10[r0 + 4:word32] = 0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CSlaveEnable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CMasterDisable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r3
// Preserved: sp
I2CMasterDisable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A160:
	Mem7[r0 + 32:word32] = Mem0[r0 + 32:word32] & ~0x00000010
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CMasterDisable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CSlaveDisable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
I2CSlaveDisable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A16C:
	Mem6[r0 + 4:word32] = 0x00000000
	Mem9[r0 - 0x000007E0:word32] = Mem6[r0 - 0x000007E0:word32] & ~0x00000020
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CSlaveDisable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CIntRegister(word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r1:[0..31]
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: lr sp
I2CIntRegister_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A180:
	IntRegister(0x00000018, r1)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A18E_thunk_IntEnable:
	IntEnable(0x00000018)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CIntRegister_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CIntUnregister()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: lr sp
I2CIntUnregister_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A194:
	IntDisable(0x00000018)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A1A2_thunk_IntUnregister:
	IntUnregister(0x00000018)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CIntUnregister_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CMasterIntEnable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r3
// Preserved: sp
I2CMasterIntEnable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A1A8:
	Mem5[r0 + 16:word32] = 0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CMasterIntEnable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CSlaveIntEnable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r3
// Preserved: sp
I2CSlaveIntEnable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A1B0:
	Mem5[r0 + 12:word32] = 0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CSlaveIntEnable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CMasterIntDisable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r3
// Preserved: sp
I2CMasterIntDisable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A1B8:
	Mem5[r0 + 16:word32] = 0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CMasterIntDisable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CSlaveIntDisable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r3
// Preserved: sp
I2CSlaveIntDisable_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A1C0:
	Mem5[r0 + 12:word32] = 0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CSlaveIntDisable_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 I2CMasterIntStatus(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut: r0
// Trashed: NZCV r0
// Preserved: sp
I2CMasterIntStatus_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A1C8:
	branch r1 != 0x00000000 l0000A1D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A1D4:
	word32 r0_6 = Mem0[r0 + 24:word32]
	word32 r0_10 = r0_6
	branch r0_6 == 0x00000000 l0000A1DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A1DA_1:
	r0_10 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A1DC:
	return r0_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A1CA:
	word32 r0_11 = Mem0[r0 + 20:word32]
	word32 r0_12 = r0_11
	branch r0_11 == 0x00000000 l0000A1D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A1D0_1:
	r0_12 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A1D2:
	return r0_12
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CMasterIntStatus_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CSlaveIntStatus(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed: NZCV r0
// Preserved: sp
I2CSlaveIntStatus_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A1E0:
	branch r1 != 0x00000000 l0000A1EC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A1EC:
	branch Mem0[r0 + 20:word32] == 0x00000000 l0000A1F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A1F2_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A1F4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A1E2:
	branch Mem0[r0 + 16:word32] == 0x00000000 l0000A1EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A1E8_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A1EA:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CSlaveIntStatus_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CMasterIntClear(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r3
// Preserved: sp
I2CMasterIntClear_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A1F8:
	Mem5[r0 + 28:word32] = 0x00000001
	Mem6[r0 + 24:word32] = 0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CMasterIntClear_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CSlaveIntClear(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r3
// Preserved: sp
I2CSlaveIntClear_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A200:
	Mem5[r0 + 24:word32] = 0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CSlaveIntClear_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CMasterSlaveAddrSet(word32 r0, word32 r1, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r2:[0..31]
// LiveOut:
// Trashed: r2
// Preserved: sp
I2CMasterSlaveAddrSet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A208:
	Mem7[r0:word32] = r2 | r1 << 0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CMasterSlaveAddrSet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CMasterBusy(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r0
// Preserved: sp
I2CMasterBusy_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A210:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CMasterBusy_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CMasterBusBusy(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r0
// Preserved: sp
I2CMasterBusBusy_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A218:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CMasterBusBusy_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CMasterControl(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
I2CMasterControl_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A220:
	Mem5[r0 + 4:word32] = r1
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CMasterControl_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CMasterErr(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: NZC r0 r2 r3
// Preserved: sp
I2CMasterErr_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A224:
	word32 r3_5 = Mem0[r0 + 4:word32]
	branch r3_5 << 31 < 0x00000000 l0000A236
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A236:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A22A:
	branch (r3_5 & 0x00000002) == 0x00000000 l0000A238
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A238:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A230:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CMasterErr_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CMasterDataPut(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
I2CMasterDataPut_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A23C:
	Mem5[r0 + 8:word32] = r1
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CMasterDataPut_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CMasterDataGet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r0
// Preserved: sp
I2CMasterDataGet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A240:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CMasterDataGet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CSlaveStatus(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r0
// Preserved: sp
I2CSlaveStatus_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A244:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CSlaveStatus_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CSlaveDataPut(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
I2CSlaveDataPut_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A248:
	Mem5[r0 + 8:word32] = r1
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CSlaveDataPut_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void I2CSlaveDataGet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: r0
// Preserved: sp
I2CSlaveDataGet_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A24C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

I2CSlaveDataGet_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte memcpy(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 lr, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: Z lr r4 r5 r6 r7
// Trashed: NZCV lr r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved:
memcpy_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A5C4:
	word32 r5_149 = r0
	branch r2 <=u 0x0000000F l0000A62C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A5CC:
	branch (r1 | r0) << 30 != 0x00000000 l0000A642
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A642:
	r5_149 = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A5D4:
	word32 r4_27 = r1
	word32 r3_28 = r0
	word32 r5_35 = r0 + ((r2 - 0x00000010 >>u 4) + 0x00000001 << 4)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A5E4:
	Mem40[r3_28:word32] = Mem37[r4_27:word32]
	Mem42[r3_28 + 4:word32] = Mem40[r4_27 + 4:word32]
	Mem44[r3_28 + 8:word32] = Mem42[r4_27 + 8:word32]
	Mem46[r3_28 + 12:word32] = Mem44[r4_27 + 12:word32]
	r3_28 = r3_28 + 0x00000010
	r4_27 = r4_27 + 0x00000010
	branch r5_35 != r3_28 l0000A5E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A5FC:
	word32 r6_54 = r2 - 0x00000010 & ~0x0000000F
	r5_149 = r0 + (r6_54 + 0x00000010)
	r1 = r1 + (r6_54 + 0x00000010)
	r3 = r2 & 0x0000000F
	branch (r2 & 0x0000000F) <=u 0x00000003 l0000A646
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A646:
	r2 = r2 & 0x0000000F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A60C:
	word32 r6_65 = (r2 & 0x0000000F) - 0x00000004
	word32 r3_66 = 0x00000000
	word32 r4_68 = (r6_65 >>u 2) + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A616:
	Mem77[r5_149 + r3_66:word32] = Mem74[r1 + r3_66:word32]
	r3_66 = r3_66 + 0x00000004
	branch r3_66 != r4_68 << 2 l0000A616
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A620:
	word32 r6_84 = r6_65 & ~0x00000003
	r3 = r6_84 + 0x00000004
	r2 = r2 & 0x00000003
	r1 = r1 + (r6_84 + 0x00000004)
	r5_149 = r5_149 + (r6_84 + 0x00000004)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A62C:
	branch r2 == 0x00000000 l0000A63C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A630:
	r3 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A632:
	Mem100[r5_149 + r3:byte] = (byte) (word32) Mem97[r1 + r3:byte]
	r3 = r3 + 0x00000001
	branch r3 != r2 l0000A632
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A63C:
	word32 r4_121
	word32 r5_122
	word32 r6_123
	word32 r7_124
	word32 lr_131
	byte NZCV_145
	call lr (retsize: 0;)
		uses: lr:lr,r0:r0,r1:lr,r2:r2_138,r3:r3_141,r4:r4,r5:r5,r6:r6,r7:r7,sp:fp,Stack +FFFFFFEC:r4,Stack +FFFFFFF0:r5,Stack +FFFFFFF4:r6,Stack +FFFFFFF8:r7,Stack +FFFFFFFC:lr
		defs: lr:lr_131,NZCV:NZCV_145,r4:r4_121,r5:r5_122,r6:r6_123,r7:r7_124
	r4Out = r4_121
	r5Out = r5_122
	r6Out = r6_123
	r7Out = r7_124
	lrOut = lr_131
	return SLICE(NZCV_145, bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

memcpy_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



