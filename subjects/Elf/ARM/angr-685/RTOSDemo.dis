void prvUnlockQueue(word32 r0, word32 r1, word32 r2, word32 r3, word32 r6, word32 r7, word32 cpsr, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r2 r3 r6 r7
// LiveOut:
// Trashed: NZCV r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved: lr
prvUnlockQueue_entry:
// DataOut: cpsr r0 r1 r2 r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000058:
	fn00008574()
	branch (int32) (int8) (word32) Mem0[r0 + 69:byte] <= 0x00000000 l0000007E
// DataOut: cpsr r1 r2 r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000006A:
	branch Mem0[r0 + 36:word32] == 0x00000000 l00000098
// DataOut: cpsr r1 r2 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// LocalsOut: fp(32)

l0000006E:
	r6 = r0 + 0x00000024
// DataOut: cpsr r1 r2 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r3:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// LocalsOut: fp(32)

l0000007C:
	r3 = Mem0[r0 + 36:word32]
// DataOut: cpsr r1 r2 r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r3:<invalid> r6:r0 + 0x00000024 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// LocalsOut: fp(32)

l0000007E:
	branch r3 == 0x00000000 l00000098
// DataOut: cpsr r1 r2 r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r3:<invalid> r6:r0 + 0x00000024 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// LocalsOut: fp(32)

l00000080:
	word32 r2_102
	word32 r4_103
	word32 r0_104 = fn00001018(r6, r1, r2, r3, r0, r6, r7, out r1, out r2_102, out r4_103)
	branch 0x00000000 == 0x00000000 l00000270
// DataOut: cpsr r0 r1 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r3:<invalid> r6:r0 + 0x00000024 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// LocalsOut: fp(32)

l00000270:
	Mem134[r6 + 124:word16] = (uint16) r0_104
	word32 r2_135
	word32 r4_136
	fn000085AC(r7, cpsr, out r2_135, out r4_136)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r0:<invalid> r3:<invalid> r6:r0 + 0x00000024 r2:<invalid> r1:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// LocalsOut: fp(32)

l0000008A:
	fn000011A8(r0_104)
	branch (uint32) (byte) (r4_103 - 0x00000001) != 0x00000000 l00000278
// DataOut: cpsr r1 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r0:<invalid> r3:<invalid> r6:r0 + 0x00000024 r2:<invalid> r1:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// LocalsOut: fp(32)
// Terminates process

l00000278:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:<invalid> r4:<invalid> sp:fp - 16 r5:r0 r0:<invalid> r6:r0 + 0x00000024 r2:<invalid> r1:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00000098:
	Mem40[r0 + 69:byte] = 0xFF
	word32 r2_43
	word32 r4_44
	word32 r0_45 = fn000085AC(r7, cpsr, out r2_43, out r4_44)
	fn00008574()
	word32 r3_39 = 0x000000FF
	branch (int32) (int8) (word32) Mem40[r0 + 68:byte] <= 0x00000000 l000000C4
// DataOut: cpsr r1 r2 r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r3:<invalid> r6:r0 + 0x00000024 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000000B0:
	branch Mem40[r0 + 16:word32] == 0x00000000 l000000DE
// DataOut: cpsr r1 r2 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r3:0x000000FF r0:<invalid> r6:r0 + 0x00000024 r2:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000000B4:
	r6 = r0 + 0x00000010
// DataOut: cpsr r1 r2 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r3:<invalid> r0:<invalid> r6:r0 + 0x00000024 r2:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000000C2:
	r3_39 = Mem40[r0 + 16:word32]
// DataOut: cpsr r1 r2 r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r3:<invalid> r6:<invalid> r0:<invalid> r2:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000000C4:
	branch r3_39 == 0x00000000 l000000DE
// DataOut: cpsr r1 r2 r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r3:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000000C6:
	word32 r1_80
	word32 r2_81
	word32 r4_82
	word32 r0_83 = fn00001018(r6, r1, r2_43, r3_39, r0, r6, r7, out r1_80, out r2_81, out r4_82)
	branch 0x00000000 == 0x00000000 l000002B6
// DataOut: cpsr r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r3:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000000CE_thunk_fn000002B6:
	fn000002B6(r0_83, r0, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r3:<invalid> r0:0x00000000 r6:<invalid> r2:<invalid> r1:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000000D0:
	fn000011A8(r0_83)
	branch (uint32) (byte) (r4_82 - 0x00000001) != 0x00000000 l000002BE
// DataOut: cpsr r0 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r3:<invalid> r0:0x00000000 r6:<invalid> r2:<invalid> r1:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// Terminates process

l000000DC_thunk_fn000002B6:
	fn000002B6(r0_83, r0, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:<invalid> r4:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000000DE:
	Mem51[r0 + 68:byte] = 0xFF
	word32 sp_60
	word32 r4_61
	word32 r5_62
	word32 r6_63
	word32 lr_64
	word32 r0_65
	byte NZCV_66
	byte NZV_67
	word32 r3_68
	byte Z_69
	word32 r7_70
	word32 r8_71
	word32 r9_72
	word32 r10_73
	word32 cpsr_74
	word32 r1_75
	word32 r2_76
	call fn00C085AC (retsize: 0;)
		uses: cpsr,dwLoc04_10,dwLoc08_8,dwLoc0C_6,dwLoc10_4,lr_55,NZCV_48,NZV_49,r0_45,r1_36,r10,r2_43,r3_50,r4_52,r5_53,r6_54,r7,r8,r9,sp_56,Z_37
		defs: cpsr_74,lr_64,NZCV_66,NZV_67,r0_65,r1_75,r10_73,r2_76,r3_68,r4_61,r5_62,r6_63,r7_70,r8_71,r9_72,sp_60,Z_69
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r3:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

prvUnlockQueue_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r3:<invalid> r6:<invalid> lr:lr r0:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r2:<invalid> r1:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



void prvCopyDataToQueue(word32 r0, word32 r1, word32 r2, word32 r3, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2 r3 r7
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved:
prvCopyDataToQueue_entry:
// DataOut: r0 r1 r2 r3 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000000EC:
	word32 r0_14 = Mem0[r0 + 64:word32]
	word32 r5_15 = Mem0[r0 + 56:word32]
	branch r0_14 != 0x00000000 l00000102
// DataOut: r0 r1 r2 r3 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000102:
	word32 r4_47
	word32 r5_46
	branch r2 != 0x00000000 l00000128
// DataOut: r1 r2 r3 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:r0 r0:<invalid> r5:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00000128:
	word32 r2_79
	word32 r5_81
	word32 r6_82
	fn0000A5C0(Mem0[r0 + 12:word32], r1, r0_14, r3, r7, out r2_79, out r4_47, out r5_81, out r6_82)
	word32 r3_85 = Mem0[r4_47 + 12:word32]
	word32 r1_87 = Mem0[r4_47:word32]
	Mem91[r4_47 + 12:word32] = r3_85
	word32 r3_105 = r3_85
	branch r3_85 >=u r1_87 l00000140
// DataOut: r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:r0 r0:<invalid> r5:<invalid> r6:r2 r2:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l0000013E:
	r3_105 = Mem91[r4_47 + 4:word32]
// DataOut: r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00000140:
	Mem94[r4_47 + 12:word32] = r3_105
	branch r6_82 == 0x00000002 l00000154
// DataOut: r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00000154:
	Mem100[r4_47 + 56:word32] = r5_81
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00000148:
	r5_46 = r5_81 + 0x00000001
// DataOut: r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00000108:
	word32 r2_55
	word32 r6_58
	fn0000A5C0(Mem0[r0 + 8:word32], r1, r0_14, r3, r7, out r2_55, out r4_47, out r5_46, out r6_58)
	word32 r2_62 = Mem0[r4_47 + 4:word32]
	word32 r3_63 = Mem0[r4_47 + 8:word32] + Mem0[r4_47 + 64:word32]
	Mem66[r4_47 + 8:word32] = r3_63
	branch r3_63 <u r2_62 l0000014C
// DataOut: r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:r0 r0:<invalid> r5:<invalid> r6:r2 r2:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l0000014C:
	Mem48[r4_47 + 56:word32] = r5_46
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l0000011C:
	Mem72[r4_47 + 8:word32] = Mem66[r4_47:word32]
	Mem73[r4_47 + 56:word32] = r5_46 + 0x00000001
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000000F6:
// DataOut: r4 r5
// DataOut (flags): Z
// SymbolicIn: sp:fp - 16 r4:r0 r0:<invalid> r5:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000000F8_thunk_fn000000FA:
	word32 r5_31
	word32 r6_32
	fn000000FA(r0, r5_15, out r5_31, out r6_32)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:r0 r0:<invalid> r5:<invalid> r6:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

prvCopyDataToQueue_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



word32 fn000000FA(word32 r4, word32 r5, ptr32 & r5Out, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r4 r5
// LiveOut: r4 r5 r6
// Trashed: NZCV r0 r4 r5 r6 sp
// Preserved:
fn000000FA_entry:
// DataOut: cpsr r4 r5 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: v3(32)

l000000FA:
	branch Z l0000015C
// DataOut: cpsr r4 r5 r7 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r0:0x00000000
// LocalsOut: v3(32)

l0000015C:
// DataOut: cpsr r4 r5 r7
// DataOut (flags): Z
// SymbolicIn: sp:v3 r0:0x00000000
// LocalsOut: v3(32)

l000000FC:
	Mem8[r4 + 56:word32] = r5 + 0x00000001
	word32 r5_11
	*r5Out = Mem8[v3 + 4:word32]
	word32 r6_12
	*r6Out = Mem8[v3 + 8:word32]
	return Mem8[v3:word32]
// DataOut: cpsr r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:v3 r0:0x00000000

fn000000FA_exit:
// DataOut: r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:v3 + 16 r5:<invalid> r4:<invalid> r6:<invalid> r0:0x00000000



word32 fn00000168(word32 r4, word32 r5, word32 r6, ptr32 & r5Out, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4 r5 r6
// LiveOut: r4 r5 r6
// Trashed: NZCV r0 r4 r5 r6 sp
// Preserved: sp
fn00000168_entry:
// DataOut: cpsr r4 r5 r6 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00000168:
	Mem3[r4 + 4:word32] = r6
// DataOut: cpsr r4 r5 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp

l0000016A_thunk_fn000000FA:
	word32 r5_6
	word32 r6_7
	return fn000000FA(r4, r5, out r5_6, out r6_7)
// DataOut: cpsr r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00000168_exit:
// DataOut: r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r0:0x00000000



void prvCopyDataFromQueue(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 sp
prvCopyDataFromQueue_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000016C:
	word32 r2_4 = Mem0[r0 + 64:word32]
	branch r2_4 == 0x00000000 l0000018C
// DataOut: r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000016E_thunk_fn0000018C:
	fn0000018C()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid>

l00000170:
	word32 r4_21 = Mem0[r0 + 4:word32]
	word32 r1_22 = Mem0[r0 + 12:word32] + r2_4
	Mem25[r0 + 12:word32] = r1_22
	branch r1_22 <u r4_21 l00000182
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid>

l00000180_1:
	r1_22 = Mem25[r0:word32]
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r2:<invalid> r3:r1 r1:<invalid> r4:<invalid> -4(fp):r4

l00000182:
	Mem27[r0 + 12:word32] = r1_22
	word32 sp_32
	word32 r2_33
	word32 r0_34
	word32 r3_35
	word32 r1_36
	word32 r4_37
	byte NZCV_38
	byte C_39
	word32 lr_40
	call fn00C0A5C0 (retsize: 0;)
		uses: C_24,dwLoc04_19,lr,NZCV_23,r0_30,r1_26,r2_4,r3_16,r4_28,sp_29
		defs: C_39,lr_40,NZCV_38,r0_34,r1_36,r2_33,r3_35,r4_37,sp_32
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r2:<invalid> r3:r1 r1:<invalid> r4:<invalid> -4(fp):r4

prvCopyDataFromQueue_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:r1 r1:<invalid> r4:r4 r0:r1 -4(fp):r4



void fn0000018C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0000018C_entry:
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000018C:
	word32 sp_3
	word32 lr_4
	call lr (retsize: 0;)
		uses: lr,sp_1
		defs: lr_4,sp_3
	return
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000018C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xQueueGenericSend()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueueGenericSend_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xQueueGenericSend_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000190:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000001F4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 48 r5:0x00000000 r4:r0 r10:r1 r7:r3 r8:0x00000000 r9:<invalid> -44(fp):r2 -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr



void fn000002A0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000002A0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000002A0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000002A0:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xQueuePeekFromISR(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed: NZCV r0 r3 r4 r5 r6 sp
// Preserved:
xQueuePeekFromISR_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000002A4:
	word32 r5_12 = __mrs(cpsr)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
// DataOut: cpsr r0 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l000002B2_thunk_fn000002B6:
	fn000002B6(r0, r5_12, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:<invalid> r3:0x000000BF -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

xQueuePeekFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r6:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



void fn000002B6(word32 r0, word32 r5, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r5
// LiveOut:
// Trashed: NZCV r0 r3 r4 r5 r6 sp
// Preserved:
fn000002B6_entry:
// DataOut: cpsr r0 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(32)

l000002B6:
	__dsb_sy()
	branch Mem0[r0 + 56:word32] != 0x00000000 l000002C6
// DataOut: cpsr r0 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000002C6:
	word32 r5_19
	word32 r6_20
	word32 r4_21 = fn00000168(r0, r5, Mem0[r0 + 12:word32], out r5_19, out r6_20)
	Mem22[r4_21 + 12:word32] = r6_20
	__msr(cpsr, r5_19)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:<invalid>

l000002BE:
	__msr(cpsr, r5)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:<invalid>

fn000002B6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r5:<invalid> r6:<invalid>



word32 fn000002D4(word32 r2, word32 dwArg00, word32 dwArg04, word32 dwArg08, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut: r4 sp
// Trashed: r1 r4 r5 r6 sp
// Preserved:
// Stack args: Stack +0000(32)
fn000002D4_entry:
// DataOut: cpsr r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l000002D4:
	word32 sp_11
	*spOut = fp + 16
	return dwArg00
// DataOut: cpsr r0 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn000002D4_exit:
// DataOut: r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 16 r1:<invalid> r4:<invalid> r5:<invalid> r6:<invalid>



void xQueueGenericReceive()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueueGenericReceive_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

xQueueGenericReceive_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000002D8:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000306:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 48 r5:0x00000000 r4:r0 r10:r1 r9:r3 r7:0x00000000 r8:<invalid> -44(fp):r2 -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr



void fn00000424()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00000424_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00000424_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000424:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void uxQueueMessagesWaiting(word32 r0, word32 r7, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r7
// LiveOut:
// Trashed: NZCV r0 r2
// Preserved: r4 sp
uxQueueMessagesWaiting_entry:
// DataOut: cpsr r0 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000428:
	fn00008574()
	word32 r2_13
	word32 r4_14
	fn000085AC(r7, cpsr, out r2_13, out r4_14)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

uxQueueMessagesWaiting_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r0:<invalid> r2:<invalid> -8(fp):r4 -4(fp):lr



word32 fn00000438(word32 dwArg00, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r4 sp
// Trashed: r4 sp
// Preserved:
// Stack args: Stack +0000(32)
fn00000438_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l00000438:
	word32 sp_4
	*spOut = fp + 8
	return dwArg00
// DataOut: cpsr r0 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00000438_exit:
// DataOut: r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 8 r4:<invalid>



void uxQueueSpacesAvailable(word32 r0, word32 r3, word32 r4, word32 r5, word32 r7, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r3 r4 r5 r7
// LiveOut:
// Trashed: NZCV r0 r2 r3 r4 r5 sp
// Preserved:
uxQueueSpacesAvailable_entry:
// DataOut: cpsr r0 r3 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000043C:
	fn00008574()
	word32 r2_19
	word32 r4_20
	fn000085AC(r7, cpsr, out r2_19, out r4_20)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0008(32) Local -000C(32) Local -0010(32)

l0000044E_thunk_fn00000450:
	word32 sp_23
	fn00000450(r3, r4, r5, out sp_23)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r0:<invalid> r4:<invalid> r2:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

uxQueueSpacesAvailable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



word32 fn00000450(word32 dwArg00, word32 dwArg04, word32 dwArg08, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r4 sp
// Trashed: r3 r4 r5 sp
// Preserved:
// Stack args: Stack +0004(32)
fn00000450_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0004(32)

l00000450:
	word32 sp_8
	*spOut = fp + 16
	return dwArg04
// DataOut: cpsr r0 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00000450_exit:
// DataOut: r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 16 r3:<invalid> r4:<invalid> r5:<invalid>



void vQueueDelete()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
vQueueDelete_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000454:
	word32 sp_2
	call fn00C0177C (retsize: 0;)
		uses: sp_1
		defs: sp_2
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

vQueueDelete_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xQueueGenericSendFromISR(word32 r0, word32 r2, word32 r3, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r2 r3
// LiveOut:
// Trashed: NZCV r0 r1
// Preserved: r3 r4 r5 r6 r7 sp
xQueueGenericSendFromISR_entry:
// DataOut: cpsr r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000458:
	word32 r6_16 = __mrs(cpsr)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	branch Mem0[r0 + 56:word32] <u Mem0[r0 + 60:word32] l0000047E
// DataOut: cpsr r2 r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000476:
	branch r3 == 0x00000002 l0000047E
// DataOut: cpsr r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:<invalid> r4:<invalid> r5:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l0000047E:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:<invalid> r4:<invalid> r5:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l0000047A:
	__msr(cpsr, r6_16)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:<invalid> r4:<invalid> r5:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00000480:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:<invalid> r4:<invalid> r5:<invalid> r1:<invalid> r0:0x00000000 -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

xQueueGenericSendFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 r4:r4 r5:r5 r1:<invalid> r0:0x00000000 r3:r3 r7:r7 -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr



void xQueueGiveFromISR(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed: NZCV r0 r1 r2
// Preserved: r3 r4 r5 sp
xQueueGiveFromISR_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000004C4:
	word32 r4_12 = __mrs(cpsr)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	word32 r2_16 = Mem0[r0 + 56:word32]
	branch r2_16 >=u Mem0[r0 + 60:word32] l000004FC
// DataOut: cpsr r0 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l000004FC:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:<invalid> r3:<invalid> r2:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l000004E2:
	word32 r3_42 = (int32) (int8) (word32) Mem0[r0 + 69:byte]
	Mem43[r0 + 56:word32] = r2_16 + 0x00000001
	branch r2_16 == 0x00000001 l00000504
// DataOut: cpsr r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:<invalid> r3:<invalid> r2:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00000504:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:<invalid> r3:<invalid> r2:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l000004F0:
	Mem48[r0 + 69:byte] = (byte) (int32) (int8) (r3_42 + 0x00000001)
	__msr(cpsr, r4_12)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:<invalid> r3:<invalid> r2:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l000004FE:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r0:0x00000001 -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

xQueueGiveFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r3:r3 r2:<invalid> r1:<invalid> r5:r5 r0:0x00000001 -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



void xQueueReceiveFromISR(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed: NZCV r0 r3
// Preserved: r4 r5 r6 r7 r8 sp
xQueueReceiveFromISR_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000524:
	word32 r6_16 = __mrs(cpsr)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	word32 r4_20 = Mem0[r0 + 56:word32]
	branch r4_20 != 0x00000000 l0000054A
// DataOut: cpsr r0 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000054A:
	word32 r5_46
	word32 r6_47
	word32 r4_48 = fn00000168(r4_20, (int32) (int8) (word32) Mem0[r0 + 68:byte], r6_16, out r5_46, out r6_47)
	Mem53[r0 + 56:word32] = r4_48 - 0x00000001
	branch r4_48 == 0x00000001 l0000056E
// DataOut: cpsr r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:<invalid> r4:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000560:
	Mem65[r0 + 68:byte] = (byte) (int32) (int8) (r5_46 + 0x00000001)
	__msr(cpsr, r6_47)
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r4:<invalid> r7:r0 r5:<invalid> r8:r2 r3:<invalid> r0:0x00000000 -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l0000056E:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r4:<invalid> r7:r0 r5:<invalid> r8:r2 r3:<invalid> r0:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000540:
	__msr(cpsr, r6_16)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:<invalid> r4:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

xQueueReceiveFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 r4:r4 r0:<invalid> r5:r5 r7:r7 r8:r8 r3:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr



void xQueueIsQueueEmptyFromISR(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZC r0
// Preserved: sp
xQueueIsQueueEmptyFromISR_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000594:
	__clz(Mem0[r0 + 56:word32])
	word32 sp_9
	word32 r0_10
	byte NZC_11
	word32 lr_12
	call lr (retsize: 0;)
		uses: lr,NZC_7,r0_6,sp_1
		defs: lr_12,NZC_11,r0_10,sp_9
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

xQueueIsQueueEmptyFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



void xQueueIsQueueFullFromISR(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZC r0 r3
// Preserved: sp
xQueueIsQueueFullFromISR_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l000005A0:
	word32 r3_4 = Mem0[r0 + 56:word32]
	__clz(Mem0[r0 + 60:word32] - r3_4)
	word32 sp_11
	word32 r3_12
	word32 r0_13
	byte NZC_14
	word32 lr_15
	call lr (retsize: 0;)
		uses: lr,NZC_9,r0_8,r3_4,sp_1
		defs: lr_15,NZC_14,r0_13,r3_12,sp_11
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

xQueueIsQueueFullFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>



word32 uxQueueMessagesWaitingFromISR(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut: r0
// Trashed: r0
// Preserved: sp
uxQueueMessagesWaitingFromISR_entry:
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l000005B0:
	word32 sp_6
	word32 r0_7
	word32 lr_8
	call lr (retsize: 0;)
		uses: lr,r0_4,sp_1
		defs: lr_8,r0_7,sp_6
	return r0_7
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

uxQueueMessagesWaitingFromISR_exit:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



void xQueueGetMutexHolder(word32 r0, word32 r4, word32 r7, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r4 r7
// LiveOut:
// Trashed: NZCV r0 r2 r3 r4 sp
// Preserved: r4 sp
xQueueGetMutexHolder_entry:
// DataOut: cpsr r0 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000005B4:
	fn00008574()
	branch Mem0[r0:word32] != 0x00000000 l000005CA
// DataOut: cpsr r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0008(0)

l000005CA:
	word32 r2_25
	word32 r4_26
	fn000085AC(r7, cpsr, out r2_25, out r4_26)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:r0 r3:<invalid> -8(fp):r4 -4(fp):lr
// LocalsOut: Local -0008(0)

l000005CC_thunk_fn000005D0:
	word32 r4_28
	word32 sp_29
	fn000005D0(r4, out r4_28, out sp_29)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:<invalid> r3:<invalid> r0:<invalid> r2:<invalid> -8(fp):r4 -4(fp):lr

l000005C0:
	word32 r2_18
	word32 r4_19
	fn000085AC(r7, cpsr, out r2_18, out r4_19)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:r0 r3:<invalid> -8(fp):r4 -4(fp):lr

xQueueGetMutexHolder_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> r2:<invalid> -8(fp):r4 -4(fp):lr



word32 fn000005D0(word32 dwArg00, ptr32 & r4Out, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r0 r4 sp
// Trashed: r0 r4 sp
// Preserved:
// Stack args: Stack +0000(32)
fn000005D0_entry:
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l000005D0:
	word32 r4_5
	*r4Out = dwArg00
	word32 sp_6
	*spOut = fp + 8
	return r4
// DataOut: cpsr r0 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn000005D0_exit:
// DataOut: r0 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 8 r0:r4 r4:<invalid>



void xQueueTakeMutexRecursive(word32 r0, word32 r1, word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r4 r5 r6
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r0 r4 r5 r6 sp
xQueueTakeMutexRecursive_entry:
// DataOut: r0 r1 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000005D4:
	word32 r3_17
	word32 r4_18
	branch Mem0[r0 + 4:word32] == fn00001134(r0, out r3_17, out r4_18) l000005F6
// DataOut: r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0008(0) Local -000C(0) Local -0010(0)

l000005E4:
	word32 sp_45
	r4_18 = fn000002D4(r1, r4, r5, r6, out sp_45)
	branch r4_18 == 0x00000000 l000005F8
// DataOut: r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:<invalid> r4:<invalid> r6:r1 r0:<invalid> r3:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000005F2:
	r3_17 = Mem0[r4_18 + 12:word32] + 0x00000001
// DataOut: r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r3:0x00000000 r2:r1 r1:<invalid> r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000005F6:
	Mem40[r4_18 + 12:word32] = r3_17
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:r1 r1:<invalid> r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000005F8:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:r1 r1:<invalid> r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

xQueueTakeMutexRecursive_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r4:r4 r6:r6 r3:<invalid> r2:r1 r1:<invalid> r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



word32 fn00000600(word32 r3, word32 r4, word32 dwArg00, word32 dwArg04, word32 dwArg08, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3 r4
// LiveOut: r4 sp
// Trashed: r4 r5 r6 sp
// Preserved:
// Stack args: Stack +0000(32)
fn00000600_entry:
// DataOut: cpsr r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l00000600:
	Mem3[r4 + 12:word32] = r3
	word32 sp_11
	*spOut = fp + 16
	return dwArg00
// DataOut: cpsr r0 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00000600_exit:
// DataOut: r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 16 r4:<invalid> r5:<invalid> r6:<invalid>



void xQueueGiveMutexRecursive(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZCV r0
// Preserved: r3 r4 r5 sp
xQueueGiveMutexRecursive_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000604:
	word32 r3_15
	word32 r4_16
	branch Mem0[r0 + 4:word32] == fn00001134(r0, out r3_15, out r4_16) l00000612
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000612:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:<invalid> r4:<invalid> r0:<invalid> r3:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

xQueueGiveMutexRecursive_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r4:r4 r0:0x00000000 r3:r3 -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



word32 fn0000062C(word32 dwArg00, word32 dwArg04, word32 dwArg08, ptr32 & r4Out, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r0 r4 sp
// Trashed: r0 r3 r4 r5 sp
// Preserved:
// Stack args: Stack +0004(32)
fn0000062C_entry:
// DataOut: cpsr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0004(32)

l0000062C:
	word32 r4_6
	*r4Out = dwArg04
	word32 sp_9
	*spOut = fp + 16
	return 0x00000001
// DataOut: cpsr r0 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000062C_exit:
// DataOut: r0 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 16 r0:0x00000001 r3:<invalid> r4:<invalid> r5:<invalid>



void xQueueGenericReset(word32 r0, word32 r1, word32 r7, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r7
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved: r4 r5 r6 sp
xQueueGenericReset_entry:
// DataOut: cpsr r0 r1 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000630:
	fn00008574()
	word32 r3_18 = Mem0[r0 + 64:word32]
	word32 r2_21 = Mem0[r0 + 60:word32] * r3_18
	word32 r0_20 = Mem0[r0:word32]
	Mem26[r0 + 56:word32] = 0x00000000
	word32 r2_24 = r2_21 + r0_20
	Mem27[r0 + 4:word32] = r2_24
	Mem28[r0 + 68:byte] = 0xFF
	Mem29[r0 + 12:word32] = r2_21 - r3_18 + r0_20
	Mem30[r0 + 8:word32] = r0_20
	Mem31[r0 + 69:byte] = 0xFF
	branch r1 != 0x00000000 l00000690
// DataOut: cpsr r1 r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000690:
	fn000082CC(r0 + 0x00000010)
	fn000082CC(r0 + 0x00000024)
	word32 r2_74
	word32 r4_75
	fn000085AC(r7, cpsr, out r2_74, out r4_75)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:r0 r6:r1 r5:0x000000FF r1:0x00000000 r3:<invalid> r2:<invalid> r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00000660:
	word32 r3_42 = Mem31[r0 + 16:word32]
	branch r3_42 != 0x00000000 l0000066C
// DataOut: cpsr r1 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:r0 r6:r1 r5:0x000000FF r1:0x00000000 r3:<invalid> r2:<invalid> r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l0000066C:
	word32 r1_55
	word32 r2_56
	word32 r4_57
	word32 r0_58 = fn00001018(r0 + 0x00000010, 0x00000000, r2_24, r3_42, 0x000000FF, r1, r7, out r1_55, out r2_56, out r4_57)
	branch 0x00000000 == 0x00000000 l00000676_thunk_fn00000860
// DataOut: cpsr r0 r1 r2 r3 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:r0 r6:r1 r5:0x000000FF r1:0x00000000 r3:<invalid> r2:<invalid> r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00000676_thunk_fn00000860:
	fn00000860(r0_58, r1_55, r2_56, r3_42, r4_57)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:<invalid> r6:r1 r5:0x000000FF r1:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00000678:
	Mem63[Mem31[0x000006AC:word32]:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
	word32 r2_64
	word32 r4_65
	fn000085AC(r7, cpsr, out r2_64, out r4_65)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:<invalid> r6:r1 r5:0x000000FF r1:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00000664:
	word32 r2_45
	word32 r4_46
	fn000085AC(r7, cpsr, out r2_45, out r4_46)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:r0 r6:r1 r5:0x000000FF r1:0x00000000 r3:<invalid> r2:<invalid> r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

xQueueGenericReset_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r5:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



void fn000006A8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000006A8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000006A8_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000006A8:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xQueueGenericCreate(word32 r0, word32 r1, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r3
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueueGenericCreate_entry:
// DataOut: r0 r1 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000006AC:
	fn00001728()
	word32 r0_14 = r0 * r1
	branch r0_14 == 0x00000048 l000006D4_in_xQueueGenericCreate
// DataOut: r0 r1 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l000006D4_in_xQueueGenericCreate:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r4:r0 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000006C0:
	branch r1 == 0x00000000 l000006C0_thunk_fn000006D8
// DataOut: r0 r1 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: r4:r0 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000006C0_thunk_fn000006D8:
	word32 r4_30
	word32 sp_31
	fn000006D8(r0_14 + 0x00000048, r1, r3, r0_14 + 0x00000048, r1, r0, out r4_30, out sp_31)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r4:r0 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000006C2:
// DataOut: r0 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: r4:r0 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000006C2_thunk_fn000006C6:
	word32 r4_26
	word32 sp_27
	fn000006C6(r0_14 + 0x00000048, r0_14 + 0x00000090, r0_14 + 0x00000048, r1, r0, out r4_26, out sp_27)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r4:r0 r3:r0 + 0x00000048 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

xQueueGenericCreate_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r0:<invalid> r5:<invalid> r6:<invalid> r3:<invalid> r1:0x00000001 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



word32 fn000006C6(word32 r0, word32 r3, word32 r4, word32 r5, word32 r6, ptr32 & r4Out, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r3 r4 r5 r6
// LiveOut: r0 r4 sp
// Trashed: r0 r1 r3 r4 r5 r6 sp
// Preserved:
l000006C6:
	Mem0[r0:word32] = r3
	Mem0[r4 + 60:word32] = r6
	Mem0[r4 + 64:word32] = r5
	r1 = 0x00000001
	r0 = r4
	r0 = fn0000062C(dwArg00, dwArg04, dwArg08, out r4, out sp)
// DataOut: cpsr r4 sp
// DataOut (flags): 
// SymbolicIn:

l000006D4:
	r0 = r4
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return r0
// DataOut: cpsr r0 r4 sp
// DataOut (flags): 
// SymbolicIn:

fn000006C6_entry:
	def fp
	def r3
	def r0
	def r6
	def r4
	def r5
	def dwArg00
	def dwArg04
	def dwArg08
	def Mem0
	def r4Out
	def spOut
// DataOut: cpsr r0 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l000006C6:
	sp_1 = fp
	Mem3[r0:word32] = r3
	Mem6[r4 + 60:word32] = r6
	Mem9[r4 + 64:word32] = r5
	r1_10 = 0x00000001
	r0_11 = r4
	r0_17 = fn0000062C(dwArg00, dwArg04, dwArg08, out r4_15, out sp_16)
// DataOut: cpsr r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000006D4_in_fn000006C6:
	r0_18 = r4_15
	r4_20 = Mem0[sp_16:word32]
	r5_21 = Mem0[sp_16 + 4:word32]
	r6_22 = Mem0[sp_16 + 8:word32]
	sp_23 = sp_16 + 16
	return r0_18
// DataOut: cpsr r0 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:0x00000001 r0:<invalid> r3:<invalid> r4:<invalid> r5:<invalid>

fn000006C6_exit:
	r0_24 = PHI(r0_18, r0)
	r4_25 = PHI(r4_20, r4)
	r5_26 = PHI(r5_21, r5)
	r6_27 = PHI(r6_22, r6)
	sp_28 = PHI(sp_23, sp)
	use r4_25 (=> r4Out)
	use sp_28 (=> spOut)
// DataOut: r0 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:0x00000001 r0:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r3:<invalid>



word32 fn000006D8(word32 r0, word32 r1, word32 r3, word32 r4, word32 r5, word32 r6, ptr32 & r4Out, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r3 r4 r5 r6
// LiveOut: r0 r4 sp
// Trashed: NZC r0 r1 r3 r4 r5 r6 sp
// Preserved:
fn000006D8_entry:
// DataOut: cpsr r0 r1 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l000006D8:
	Mem3[r4:word32] = r0
// DataOut: cpsr r1 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l000006C4:
// DataOut: cpsr r0 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l000006C4_thunk_fn000006C6:
	word32 r4_11
	word32 sp_12
	return fn000006C6(r1 << 13, r3, r4, r5, r6, out r4_11, out sp_12)
// DataOut: cpsr r0 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r1 << 13

fn000006D8_exit:
// DataOut: r0 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:0x00000001 r4:<invalid> r5:<invalid> r6:<invalid> r3:<invalid>



void xQueueCreateMutex()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xQueueCreateMutex_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000006DC:
	fn000006A8()
	branch 0x00000001 == 0x00000000 l000006EA_thunk_fn000006FC
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l000006EA_thunk_fn000006FC:
	fn000006FC(dwArg00)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r4:r0 -8(fp):r4 -4(fp):lr

l000006EC:
	Mem17[0x00000005:word32] = 0x00000000
	Mem18[0x00000001:word32] = 0x00000000
	Mem19[0x0000000D:word32] = 0x00000000
	fn0000018C()
// DataOut:
// DataOut (flags): 
// SymbolicIn: r4:r0 -8(fp):r4 -4(fp):lr

l000006F8_thunk_fn000006FC:
	fn000006FC(dwArg00)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r4:r0 r3:0x00000000 r2:0x00000000 r1:0x00000000 -8(fp):r4 -4(fp):lr

xQueueCreateMutex_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r3:0x00000000 r2:0x00000000 r1:0x00000000 r0:<invalid> -8(fp):r4 -4(fp):lr



word32 fn000006FC(word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: sp
// Trashed: r0 r4 sp
// Preserved:
fn000006FC_entry:
// DataOut: cpsr r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000006FC:
	return fp + 8
// DataOut: cpsr r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn000006FC_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 8 r0:r4 r4:<invalid>



void prvInitialiseNewTask(word32 r1, word32 r2, word32 r7, word32 cpsr, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r1 r2 r7
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0000(32) Stack +0004(32) Stack +0008(32)
// Terminates process
prvInitialiseNewTask_entry:
// DataOut: cpsr r1 r2 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32) Stack +0008(32)

l00000700:
	word32 r5_40 = Mem0[dwArg08 + 80:word32] + (r2 + 0x3FFFFFFF << 0x00000002) & ~0x00000007
	Mem46[dwArg08 + 0x00000054:byte] = (byte) (word32) Mem0[r1:byte]
	word32 r2_108 = dwArg00 & ~0x80000000
	branch (word32) Mem46[r1:byte] == 0x00000000 l0000073E
// DataOut: cpsr r0 r1 r2 r3 r4 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Stack +0004(32)

l0000073A:
	branch r1 != r1 + 0x00000002 l0000073C_thunk_fn0000092A
// DataOut: cpsr r0 r2 r4 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 40 r4:<invalid> r9:r3 r5:<invalid> r3:r1 + 0x00000002 fp:r2 r2:<invalid> r8:r0 r10:<invalid> r1:r1 + 0x00000002 r0:<invalid> r6:<invalid> -40(fp):r3 -36(fp):r4 -32(fp):r5 -28(fp):r6 -24(fp):r7 -20(fp):r8 -16(fp):r9 -12(fp):r10 -8(fp):fp -4(fp):lr
// LocalsOut: Stack +0004(32)

l0000073C_thunk_fn0000092A:
	fn0000092A(dwArg08 + 0x00000055, dwArg08, r7, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 40 r4:<invalid> r9:r3 r5:<invalid> r3:r1 + 0x00000002 fp:r2 r2:<invalid> r8:r0 r10:<invalid> r1:r1 + 0x00000002 r0:<invalid> r6:<invalid> -40(fp):r3 -36(fp):r4 -32(fp):r5 -28(fp):r6 -24(fp):r7 -20(fp):r8 -16(fp):r9 -12(fp):r10 -8(fp):fp -4(fp):lr
// Terminates process

l0000073E:
	branch r2_108 <u 0x00000001 l00000744
// DataOut: r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 40 r4:<invalid> r9:r3 r5:<invalid> r3:r1 + 0x00000002 fp:r2 r2:<invalid> r8:r0 r10:<invalid> r1:r1 + 0x00000002 r0:<invalid> r6:<invalid> -40(fp):r3 -36(fp):r4 -32(fp):r5 -28(fp):r6 -24(fp):r7 -20(fp):r8 -16(fp):r9 -12(fp):r10 -8(fp):fp -4(fp):lr
// LocalsOut: Stack +0004(32)

l00000742_1:
	r2_108 = 0x00000001
// DataOut: r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 40 r4:<invalid> r9:r3 r5:<invalid> r3:r1 + 0x00000002 fp:r2 r2:<invalid> r8:r0 r10:<invalid> r1:r1 + 0x00000002 r0:<invalid> r6:<invalid> -40(fp):r3 -36(fp):r4 -32(fp):r5 -28(fp):r6 -24(fp):r7 -20(fp):r8 -16(fp):r9 -12(fp):r10 -8(fp):fp -4(fp):lr
// LocalsOut: Stack +0004(32)

l00000744:
	Mem73[dwArg08 + 76:word32] = r2_108
	Mem74[dwArg08 + 88:word32] = r2_108
	Mem76[dwArg08 + 86:byte] = 0x00
	Mem77[dwArg08 + 92:word32] = 0x00000000
	fn000082E4()
	fn000082E4()
	Mem80[dwArg08 + 56:word32] = 0x00000002 - r2_108
	Mem86[dwArg08 + 48:word32] = dwArg08
	Mem87[dwArg08 + 68:word32] = dwArg08
	vPortEndScheduler()
	Mem88[dwArg08 + 96:word32] = 0x00000000
	Mem90[dwArg08 + 100:byte] = 0x00
	fn00001378()
	Mem96[dwArg08:word32] = r5_40
	branch dwArg04 == 0x00000000 l00000792
// DataOut: r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 40 r4:<invalid> r9:r3 r5:<invalid> r3:r1 + 0x00000002 fp:r2 r2:<invalid> r8:r0 r10:<invalid> r1:r1 + 0x00000002 r0:<invalid> r6:<invalid> -40(fp):r3 -36(fp):r4 -32(fp):r5 -28(fp):r6 -24(fp):r7 -20(fp):r8 -16(fp):r9 -12(fp):r10 -8(fp):fp -4(fp):lr
// Terminates process

l00000790:
	Mem107[dwArg04:word32] = dwArg08
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> -40(fp):r3 -36(fp):r4 -32(fp):r5 -28(fp):r6 -24(fp):r7 -20(fp):r8 -16(fp):r9 -12(fp):r10 -8(fp):fp -4(fp):lr

l00000792:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:<invalid> -40(fp):r3 -36(fp):r4 -32(fp):r5 -28(fp):r6 -24(fp):r7 -20(fp):r8 -16(fp):r9 -12(fp):r10 -8(fp):fp -4(fp):lr

prvInitialiseNewTask_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 r4:r4 r5:r5 r6:r6 r7:r7 r8:r8 r9:r9 r10:r10 fp:fp -40(fp):r3 -36(fp):r4 -32(fp):r5 -28(fp):r6 -24(fp):r7 -20(fp):r8 -16(fp):r9 -12(fp):r10 -8(fp):fp -4(fp):lr



word32 fn00000794(word32 r7, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r7
// LiveOut: r0
// Trashed: NZCV r0 r1 r2 r3
// Preserved: sp
fn00000794_entry:
// DataOut: cpsr r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000794:
	word32 r0_4 = (word32) Mem0[r7 + 124:word16]
// DataOut: cpsr r0 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000796_thunk_prvAddNewTaskToReadyList:
	return prvAddNewTaskToReadyList(r0_4, r7, cpsr)
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>

fn00000794_exit:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid>



word32 prvAddNewTaskToReadyList(word32 r0, word32 r7, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r7
// LiveOut: r0
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 r6 r7 r8 sp
prvAddNewTaskToReadyList_entry:
// DataOut: cpsr r0 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000798:
	word32 r0_25
	word32 r4_16 = Mem0[0x00000858:word32]
	fn00008574()
	Mem21[r4_16:word32] = Mem0[r4_16:word32] + 0x00000001
	r0_25 = r0
	branch Mem21[r4_16 + 4:word32] == 0x00000000 l0000080E
// DataOut: cpsr r0 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l000007B0:
	branch Mem21[r4_16 + 116:word32] == 0x00000000 l00000800
// DataOut: cpsr r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r5:r0 r3:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000800:
	r0_25 = Mem21[r0 + 76:word32]
// DataOut: cpsr r0 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r5:r0 r3:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l0000080E:
	Mem69[r4_16 + 4:word32] = r0
// DataOut: cpsr r0 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r5:r0 r3:<invalid> r0:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l000007B4:
	r0_25 = Mem21[r0 + 76:word32]
// DataOut: cpsr r0 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r5:r0 r3:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l000007B6:
	word32 r2_29 = Mem21[r4_16 + 120:word32]
	Mem37[r4_16 + 124:word32] = 0x00000001 << r0_25 | Mem21[r4_16 + 124:word32]
	Mem38[r4_16 + 120:word32] = r2_29 + 0x00000001
	fn000082EC()
	word32 r2_40
	word32 r4_41
	word32 r0_42 = fn000085AC(r7, cpsr, out r2_40, out r4_41)
	branch Mem38[r4_41 + 116:word32] == 0x00000000 l000007FC
// DataOut: cpsr r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r5:r0 r3:<invalid> r0:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l000007E2:
	branch Mem38[Mem38[r4_41 + 4:word32] + 76:word32] >=u Mem38[r0 + 76:word32] l000007F8
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r5:r0 r3:<invalid> r0:<invalid> r6:<invalid> r1:r0 + 0x00000024 r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l000007EC:
	Mem64[Mem38[0x0000085C:word32]:word32] = 0x10000000
	__dsb_sy()
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r5:r0 r3:<invalid> r0:<invalid> r6:<invalid> r1:r0 + 0x00000024 r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l000007F8:
	__isb_sy()
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r5:r0 r3:<invalid> r0:<invalid> r6:<invalid> r1:r0 + 0x00000024 r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l000007FC:
	return r0_42
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r5:r0 r3:<invalid> r0:<invalid> r6:<invalid> r1:r0 + 0x00000024 r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

prvAddNewTaskToReadyList_exit:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r5:r5 r3:<invalid> r0:<invalid> r6:r6 r1:r0 + 0x00000024 r2:<invalid> r7:r7 r8:r8 -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr



void fn00000858()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00000858_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00000858_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000858:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void prvAddCurrentTaskToDelayedList.isra.0(word32 r0, word32 r1, word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2 r3
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved:
prvAddCurrentTaskToDelayedList.isra.0_entry:
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000085C:
	word32 r4_12 = Mem0[0x000008B6:word32]
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000085E_thunk_fn00000860:
	fn00000860(r0, r1, r2, r3, r4_12)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

prvAddCurrentTaskToDelayedList.isra.0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> r3:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



void fn00000860(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2 r3 r4
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved: sp
l00000860:
	r5 = r0
	r6 = Mem0[r4 + 128:word32]
	r0 = Mem0[r4 + 4:word32]
	r0 = r0 + 0x00000024
	NZCV = cond(r0)
	r3 = fn0000833C(r0, r1, r2, r3, r4, r5, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, out r4, out r5, out r6, out r7, out sp)
	branch r0 != 0x00000000 l00000880
// DataOut: r0 r2 r4 r5 r6
// DataOut (flags): 
// SymbolicIn:

l0000086E_thunk_fn00000880:
	fn00000880(r0, r2, r4, r5, r6)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

l0000086E_thunk_fn00000870:
	fn00000870(r0, r4, r5, r6)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00000860_entry:
	def fp
	def r0
	def r4
	def Mem0
	def r1
	def r2
	def r3
	def dwArg00
	def dwArg04
	def dwArg08
	def dwArg0C
	def dwArg10
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000860:
	sp_1 = fp
	r5_3 = r0
	r6_6 = Mem0[r4 + 128:word32]
	r0_7 = Mem0[r4 + 4:word32]
	r0_8 = r0_7 + 0x00000024
	NZCV_9 = cond(r0_8)
	r3_23 = fn0000833C(r0_8, r1, r2, r3, r4, r5_3, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, out r4_18, out r5_19, out r6_20, out r7_21, out sp_22)
	branch r0_8 != 0x00000000 l0000086E_thunk_fn00000880
// DataOut: r0 r2 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000086E_thunk_fn00000880:
	fn00000880(r0_8, r2, r4_18, r5_19, r6_20)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> r7:<invalid>

l0000086E_thunk_fn00000870:
	fn00000870(r0_8, r4_18, r5_19, r6_20)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> r7:<invalid>

fn00000860_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r7:<invalid>



void fn00000870(word32 r0, word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5 r6
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn00000870_entry:
// DataOut: r0 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000870:
	word32 r2_8 = 0x00000001 << Mem0[Mem0[r4 + 4:word32] + 76:word32]
	Mem11[r4 + 124:word32] = Mem0[r4 + 124:word32] & ~(r2_8 << 0x00000000)
// DataOut: r0 r2 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000087E_thunk_fn00000880:
	fn00000880(r0, r2_8, r4, r5, r6)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r2:<invalid> r1:<invalid> r3:<invalid>

fn00000870_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r1:<invalid> r3:<invalid> r5:<invalid> r0:<invalid> r4:<invalid> r6:<invalid>



void fn00000880(word32 r0, word32 r2, word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r2 r4 r5 r6
// LiveOut:
// Trashed: NZCV r0 r1 r3 r4 r5 r6 sp
// Preserved:
fn00000880_entry:
// DataOut: r0 r2 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(32)

l00000880:
	word32 r5_4 = r5 + r6
	Mem10[Mem0[r4 + 4:word32] + 36:word32] = r5_4
	branch r6 >u r5_4 l0000089E
// DataOut: r0 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000089E:
	Mem29[r0 + r2:word32] = r4
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:v3 r5:r5 + r6 r3:<invalid>

l0000088A:
	fn00008308(Mem10[r4 + 108:word32], r2)
	branch r5_4 >=u Mem10[r4 + 132:word32] l000008A0
// DataOut: r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 r5:r5 + r6 r3:<invalid>

l0000089C_1:
	Mem28[r4 + 132:word32] = r5_4
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:v3 r5:r5 + r6 r3:<invalid> r0:<invalid> r1:<invalid>

l000008A0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r5:r5 + r6 r3:<invalid> r0:<invalid> r1:<invalid>

fn00000880_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 + 16 r5:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid>



void fn000008B0(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000008B0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000008B0_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l000008B0:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xTaskCreate(word32 r2, word32 cpsr, word64 d14, word64 d1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr d1 d14 r2
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xTaskCreate_entry:
// DataOut: cpsr d1 d14 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000008B4:
	fn00001728()
	branch r2 << 2 == 0x00000000 l00000904
// DataOut: cpsr d1 d14 r0 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00000904:
	return
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l000008CA:
	fn00001728()
	branch 0x00000068 == 0x00000000 l0000090E
// DataOut: cpsr d1 d14 r0 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr
// Terminates process

l0000090E:
	fn0000177C(r2)
// DataOut: cpsr d1 d14 r0
// DataOut (flags): 
// SymbolicIn: r4:r0 -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l00000914_thunk_fn00000918:
	fn00000918(d14, d1)
	return
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: r4:r0 r0:0xFFFFFFFF -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l000008D6:
	Mem46[0x000000B8:word32] = r2 << 2
	word32 r5_47 = Mem46[fp + 4:word32]
	Mem48[0x000000CD:byte] = 0x00
	Mem49[fp - 44:word32] = r5_47
	word32 r5_50 = Mem49[fp:word32]
	Mem55[fp - 36:word32] = 0x00000000
	Mem56[fp - 40:word32] = 0x00000068
	Mem57[fp - 48:word32] = r5_50
	fn000006FC(dwArg00)
	fn00000794(0x00000000, cpsr)
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: r4:r0 -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l000008FC_in_xTaskCreate:
	return
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r7:0x00000000 r5:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> sp:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

xTaskCreate_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> d18:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr



word32 fn000008FA(word64 d14, word64 d1, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d1 d14
// LiveOut: r4
// Trashed: d18 r10 r4 r5 r6 r7 r8 r9 sp
// Preserved:
// Stack args: Stack +0010(32)
l000008FA:
// DataOut: cpsr d1 d14 r0 r2 r4
// DataOut (flags): 
// SymbolicIn:

l000008B2_thunk_xTaskCreate:
	xTaskCreate(r2, cpsr, d14, d1)
	return r4
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn:

fn000008FA_entry:
	def fp
	def d14
	def d1
	def dwArg10
	def dwArg14
	def dwArg18
	def dwArg1C
	def dwArg20
	def dwArg24
	def dwArg28
// DataOut: cpsr d1 d14 r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0010(32)

l000008FA:
	sp_1 = fp
	d18_4 = __vhadd_u8(d14, d1)
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0010(32)

l000008FC:
	sp_5 = fp + 16
	r4_7 = dwArg10
	r5_9 = dwArg14
	r6_11 = dwArg18
	r7_13 = dwArg1C
	r8_15 = dwArg20
	r9_17 = dwArg24
	r10_19 = dwArg28
	sp_20 = fp + 48
	return r4_7
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp d18:<invalid>

fn000008FA_exit:
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:fp + 48 d18:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid>



word32 fn00000918(word64 d14, word64 d1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d1 d14
// LiveOut: r4
// Trashed: d18 r10 r4 r5 r6 r7 r8 r9 sp
// Preserved: sp
fn00000918_entry:
// DataOut: cpsr d1 d14 r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000918:
// DataOut: cpsr d1 d14 r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000918_thunk_fn000008FA:
	return fn000008FA(d14, d1, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg20, dwArg24, dwArg28)
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00000918_exit:
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> d18:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid>



void xTaskCreateRestricted(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1
// LiveOut:
// Trashed: r0 r3
// Preserved: sp
xTaskCreateRestricted_entry:
// DataOut: cpsr r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000091C:
	word32 r3_4 = Mem0[r0 + 20:word32]
	branch r3_4 == 0x00000000 l0000096A
// DataOut: cpsr r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000096A:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l0000096E_in_xTaskCreateRestricted:
	word32 sp_46
	word32 r3_47
	word32 r0_48
	word32 r4_49
	word32 r5_50
	word32 r6_51
	word32 r7_52
	word32 lr_53
	word32 r1_54
	word32 r2_55
	word32 cpsr_56
	call lr (retsize: 0;)
		uses: cpsr,dwLoc04,dwLoc08,dwLoc0C,dwLoc10,dwLoc14,lr,lr,r0_39,r1,r2,r3_4,r4,r5,r6,r7,sp_1
		defs: cpsr_56,lr_53,r0_48,r1_54,r2_55,r3_47,r4_49,r5_50,r6_51,r7_52,sp_46
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:0xFFFFFFFF

l00000920:
// DataOut: cpsr r0 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l00000928_thunk_fn0000092A:
	fn0000092A(0x00000068, r0, r1, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 40 r3:<invalid> r4:r0 r0:0x00000068 r7:r1 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// Terminates process

xTaskCreateRestricted_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:0xFFFFFFFF -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr



void fn0000092A(word32 r0, word32 r4, word32 r7, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r4 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
l0000092A:
	fn00001728()
	branch r0 == 0x00000000 l00000964
// DataOut: cpsr r0 r4 r7
// DataOut (flags): 
// SymbolicIn:
// Terminates process

l00000930_thunk_fn00000964:
	fn00000964()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

l00000930_thunk_fn00000932:
	fn00000932(r0, r4, r7, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000092A_entry:
// DataOut: cpsr r0 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000092A:
	fn00001728()
	branch r0 == 0x00000000 l00000930_thunk_fn00000964
// DataOut: cpsr r0 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00000930_thunk_fn00000964:
	fn00000964()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r5:r0

l00000930_thunk_fn00000932:
	fn00000932(r0, r4, r7, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r5:r0

fn0000092A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r5:<invalid> sp:<invalid> r6:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> lr:<invalid> r4:<invalid> r0:<invalid> r7:<invalid>



void fn00000932(word32 r0, word32 r4, word32 r7, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r4 r7
// LiveOut:
// Trashed: NZCV lr r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved:
fn00000932_entry:
// DataOut: cpsr r0 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(32)

l00000932:
	word32 r1_5 = Mem0[r4 + 20:word32]
	Mem6[r0 + 101:byte] = 0x01
	word32 lr_10 = Mem6[r4 + 16:word32]
	Mem11[r0 + 80:word32] = r1_5
	Mem13[v3 + 8:word32] = r0
	Mem15[v3 + 4:word32] = r7
	Mem19[v3:word32] = lr_10
	Mem20[v3 + 12:word32] = r4 + 24
	fn000006FC(dwArg00)
	fn00000794(r7, cpsr)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000095A_thunk_fn00000964:
	fn00000964()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:0x00000001 r1:<invalid> r3:<invalid> r2:<invalid> lr:<invalid> r4:<invalid> r0:<invalid>

fn00000932_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> lr:<invalid> r4:<invalid> r0:<invalid> r5:<invalid> r7:<invalid>



void fn00000964()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0 r4 r5 r6 r7 sp
// Preserved:
fn00000964_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(32)

l00000964:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000095C:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r0:0xFFFFFFFF

fn00000964_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 + 40 r0:r6 r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid>



word32 fn0000096C(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut: r0
// Trashed: NZCV r0
// Preserved: sp
fn0000096C_entry:
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000096C:
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000096E:
	word32 sp_6
	word32 r0_7
	byte NZCV_8
	word32 lr_9
	call lr (retsize: 0;)
		uses: lr,NZCV_4,r0_3,sp_1
		defs: lr_9,NZCV_8,r0_7,sp_6
	return r0_7
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 + 0x000000FF

fn0000096C_exit:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 + 0x000000FF



void vTaskAllocateMPURegions(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: sp
vTaskAllocateMPURegions_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000970:
	branch r0 == 0x00000000 l0000097C
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000097C:
	word32 sp_27
	word32 r0_28
	word32 r3_29
	byte NZCV_30
	word32 r2_31
	word32 pc_32
	call fn00C01550 (retsize: 0;)
		uses: NZCV_25,pc,r0_24,r2_26,r3_23,sp_1
		defs: NZCV_30,pc_32,r0_28,r2_31,r3_29,sp_27
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000972:
	word32 sp_14
	word32 r0_15
	word32 r3_16
	byte NZCV_17
	word32 r2_18
	word32 pc_19
	call fn00C01550 (retsize: 0;)
		uses: NZCV_11,pc,r0_10,r2_12,r3_9,sp_1
		defs: NZCV_17,pc_19,r0_15,r2_18,r3_16,sp_14
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

vTaskAllocateMPURegions_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:0x00000000 r0:<invalid> r2:0x00000000



void fn0000098C(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000098C_entry:
// DataOut: r0 r10 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000098C:
// DataOut: r10 r4 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000098E_thunk_vTaskStartScheduler:
	vTaskStartScheduler()
	return
// DataOut: r10 r4 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:0x00000000
// Terminates process

fn0000098C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vTaskStartScheduler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vTaskStartScheduler_entry:
// DataOut: r10 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000990:
	word32 r0_17 = Mem0[0x000009EC:word32]
	fn000008B0(r0_17)
	branch r0_17 == 0x00000001 l000009B2
// DataOut: r10 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l000009B2:
	return
// DataOut: r10 r4 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: -16(fp):0x80000000 -12(fp):<invalid> -8(fp):r4 -4(fp):lr

vTaskStartScheduler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 -16(fp):0x80000000 -12(fp):<invalid> -8(fp):r4 -4(fp):lr



void vTaskEndScheduler(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
vTaskEndScheduler_entry:
// DataOut: cpsr
// DataOut (flags): 
// SymbolicIn: sp:fp

l000009EC:
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	word32 r3_6 = Mem0[0x00000A0E:word32]
	Mem7[r3_6 + 116:word32] = 0x00000000
	word32 sp_8
	word32 r3_9
	word32 cpsr_10
	word32 r2_11
	word32 pc_12
	call fn00C0154C (retsize: 0;)
		uses: cpsr,r2_4,r3_6,sp_1
		defs: cpsr_10,pc_12,r2_11,r3_9,sp_8
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

vTaskEndScheduler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:0x00000000



bool fn00000A08(word32 r0, ptr32 & r0Out, ptr32 & r2Out, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut: C r0 r2 r4
// Trashed: NZCV r0 r2 r3 r4
// Preserved: sp
fn00000A08_entry:
// DataOut: cpsr r0 r1 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000A08:
	word32 r4_3
	*r4Out = r0 << 3
	word32 r0_5
	*r0Out = 0x00000000
// DataOut: cpsr r0 r1 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000A0A_thunk_vTaskSuspendAll:
	word32 r2_6
	return vTaskSuspendAll(out r2_6)
// DataOut: cpsr r0 r1 r2 r4 r5 r6 r7 r8
// DataOut (flags): C
// SymbolicIn: sp:fp r4:r0 << 3 r0:0x00000000

fn00000A08_exit:
// DataOut: r0 r2 r4
// DataOut (flags): C
// SymbolicIn: sp:fp r4:r0 << 3 r0:0x00000000 r2:<invalid> r3:<invalid>



bool vTaskSuspendAll(ptr32 & r2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: C r2
// Trashed: NZCV r2 r3
// Preserved: sp
vTaskSuspendAll_entry:
// DataOut: cpsr r0 r1 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000A0C:
	word32 r2_3 = Mem0[0x00000A20:word32]
	Mem8[r2_3 + 140:word32] = Mem0[r2_3 + 140:word32] + 0x00000001
	word32 sp_10
	word32 r2_11
	word32 pc_12
	word32 r3_13
	byte NZCV_14
	word32 lr_15
	bool C_16
	call lr (retsize: 0;)
		uses: C_7,lr,NZCV_6,r2_3,r3_5,sp_1
		defs: C_16,lr_15,NZCV_14,pc_12,r2_11,r3_13,sp_10
	return C_16
// DataOut: cpsr r0 r1 r2 r4 r5 r6 r7 r8
// DataOut (flags): C
// SymbolicIn: sp:fp

vTaskSuspendAll_exit:
// DataOut: r2
// DataOut (flags): C
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid>



word32 fn00000A1C(word32 r0, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut: r0 r4
// Trashed: NZC r0 r3 r4
// Preserved: sp
fn00000A1C_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000A1C:
	word32 r4_3
	*r4Out = r0 << 3
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000A1E_thunk_xTaskGetTickCount:
	return xTaskGetTickCount()
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:0x00000000

fn00000A1C_exit:
// DataOut: r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:<invalid> r3:<invalid>



word32 xTaskGetTickCount()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r0
// Trashed: r0 r3
// Preserved: sp
xTaskGetTickCount_entry:
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000A20:
	word32 sp_6
	word32 r3_7
	word32 pc_8
	word32 r0_9
	word32 lr_10
	call lr (retsize: 0;)
		uses: lr,r0_4,r3_3,sp_1
		defs: lr_10,pc_8,r0_9,r3_7,sp_6
	return r0_9
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

xTaskGetTickCount_exit:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>



void xTaskGetTickCountFromISR()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0 r3
// Preserved: sp
xTaskGetTickCountFromISR_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000A2C:
	word32 sp_6
	word32 r3_7
	word32 pc_8
	word32 r0_9
	word32 lr_10
	call lr (retsize: 0;)
		uses: lr,r0_4,r3_3,sp_1
		defs: lr_10,pc_8,r0_9,r3_7,sp_6
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

xTaskGetTickCountFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>



word32 fn00000A34(word32 r0, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut: r0 r4
// Trashed: NZC r0 r3 r4
// Preserved: sp
fn00000A34_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000A34:
	word32 r4_3
	*r4Out = r0 << 3
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000A36_thunk_uxTaskGetNumberOfTasks:
	return uxTaskGetNumberOfTasks()
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:0x00000000

fn00000A34_exit:
// DataOut: r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:<invalid> r3:<invalid>



word32 uxTaskGetNumberOfTasks()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r0
// Trashed: r0 r3
// Preserved: sp
uxTaskGetNumberOfTasks_entry:
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000A38:
	word32 sp_6
	word32 r3_7
	word32 pc_8
	word32 r0_9
	word32 lr_10
	call lr (retsize: 0;)
		uses: lr,r0_4,r3_3,sp_1
		defs: lr_10,pc_8,r0_9,r3_7,sp_6
	return r0_9
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

uxTaskGetNumberOfTasks_exit:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>



word32 fn00000A40(word32 r0, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut: r0 r4
// Trashed: NZCV r0 r3 r4
// Preserved: sp
fn00000A40_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000A40:
	word32 r4_3
	*r4Out = r0 << 3
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000A42_thunk_pcTaskGetName:
	return pcTaskGetName(0x00000000)
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:0x00000000

fn00000A40_exit:
// DataOut: r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:<invalid> r3:<invalid>



word32 pcTaskGetName(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut: r0
// Trashed: NZCV r0 r3
// Preserved: sp
pcTaskGetName_entry:
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000A44:
	branch r0 == 0x00000000 l00000A4A
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000A4A:
	word32 sp_25
	word32 r0_26
	byte NZCV_27
	word32 lr_28
	word32 r3_29
	word32 pc_30
	call lr (retsize: 0;)
		uses: lr,NZCV_24,pc,r0_23,r3_21,sp_1
		defs: lr_28,NZCV_27,pc_30,r0_26,r3_29,sp_25
	return r0_26
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000A46:
	word32 sp_14
	word32 r0_15
	byte NZCV_16
	word32 lr_17
	word32 r3_18
	word32 pc_19
	call lr (retsize: 0;)
		uses: lr,NZCV_10,pc,r0_9,r3,sp_1
		defs: lr_17,NZCV_16,pc_19,r0_15,r3_18,sp_14
	return r0_15
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

pcTaskGetName_exit:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r3:<invalid>



word32 fn00000A54(word32 r0, word32 r1, word32 r2, word32 r3, word32 r5, word32 r6, word32 r7, word32 lr, word32 cpsr, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr lr r0 r1 r2 r3 r5 r6 r7
// LiveOut: r0 r4
// Trashed: NZCV lr r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved: sp
fn00000A54_entry:
// DataOut: cpsr lr r0 r1 r2 r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000A54:
	word32 r4_3
	*r4Out = r0 << 3
// DataOut: cpsr lr r0 r1 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000A56_thunk_xTaskGenericNotify:
	return xTaskGenericNotify(0x00000000, r1, r2, r3, r0 << 3, r5, r6, r7, lr, cpsr)
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:0x00000000

fn00000A54_exit:
// DataOut: r0 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r6:<invalid> r7:<invalid> r5:<invalid> r3:<invalid> r8:<invalid> r9:<invalid> lr:<invalid> r1:<invalid>



word32 xTaskGenericNotify(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr lr r0 r1 r2 r3 r4 r5 r6 r7
// LiveOut: r0
// Trashed: NZCV lr r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved: r3 r4 r5 r6 r7 sp
xTaskGenericNotify_entry:
// DataOut: cpsr lr r0 r1 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000A58:
	fn00008574()
	branch r3 == 0x00000000 l00000A6C
// DataOut: cpsr r0 r1 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32)

l00000A68:
	Mem141[r3:word32] = Mem0[r0 + 96:word32]
// DataOut: cpsr r0 r1 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:r3 r6:r0 r7:r1 r5:r2 -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// LocalsOut: Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32)

l00000A6C:
	word32 r4_24 = (word32) Mem0[r0 + 100:byte]
	Mem26[r0 + 100:byte] = 0x02
	word32 r2_131 = r2 - 0x00000001
	word32 r4_121 = (uint32) (byte) r4_24
	byte Z_135 = cond(r2 - 0x00000004)
	branch r2 >u 0x00000004 || r2 <u 0x00000001 l00000A88
// DataOut: cpsr r0 r1 r2 r3 r4 r6 r7 sp
// DataOut (flags): Z
// SymbolicIn: sp:fp - 24 r4:r3 r6:r0 r7:r1 r5:r2 r3:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// LocalsOut: Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32)

l00000A7E:
	switch (r2 - 0x00000001) { l00000AF2 l00000A96 l00000A86 l00000A82 }
// DataOut: cpsr r0 r1 r2 r3 r4 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r6:r0 r7:r1 r5:r2 r3:0x00000002 r2:r2 - 0x00000001 -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// LocalsOut: Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32)

l00000A82:
	r2_131 = r1 >>u 16
	r4_121 = r0 << 8
// DataOut: cpsr r0 r1 r2 r3 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r6:r0 r7:r1 r5:r2 r3:0x00000002 r2:r2 - 0x00000001 -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// LocalsOut: Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32)

l00000A86:
	Z_135 = cond(r4_121 - 0x00000002) (alias)
// DataOut: cpsr r0 r1 r2 r3 r4 r6 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp - 24 r4:<invalid> r6:r0 r7:r1 r5:r2 r3:0x00000002 r2:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// LocalsOut: Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32)

l00000A88:
	branch Z_135 l00000AFA
// DataOut: cpsr r0 r1 r2 r3 r4 r6 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp - 24 r4:<invalid> r6:r0 r7:r1 r5:r2 r3:0x00000002 r2:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// LocalsOut: Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32)

l00000AFA:
	Mem130[r0 + 96:word32] = r1
// DataOut: cpsr r0 r1 r2 r3 r4 r6 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp - 24 r4:<invalid> r6:r0 r7:r1 r5:r2 r3:0x00000002 r2:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// LocalsOut: Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32)

l00000A8A:
	Mem81[r0 + 96:word32] = r1
	branch r4_121 == 0x00000001 l00000AA2
// DataOut: cpsr r0 r1 r2 r3 r4 r6 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp - 24 r4:<invalid> r6:r0 r7:r1 r5:r2 r3:0x00000002 r2:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// LocalsOut: Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32)

l00000AA2:
	Mem91[r0 + 96:word32] = 0x00000002
	branch r4_121 != 0x00000001 l00000AA4_thunk_fn00000C8C
// DataOut: cpsr r0 r1 r2 r3 r4 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp - 24 r4:<invalid> r6:r0 r7:r1 r5:r2 r3:0x00000002 r2:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// LocalsOut: Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32)

l00000AA4_thunk_fn00000C8C:
	fn00000C8C(r0, cpsr, r3, r4, r5, r6, r7, lr, dwArg00)
	return r0
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r6:r0 r7:r1 r5:r2 r3:0x00000002 r2:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00000AA6:
	word32 r4_95
	word32 r5_96
	word32 r6_97
	word32 r7_98
	word32 sp_99
	fn0000833C(r0 + 0x00000024, r1, r2_131, 0x00000002, r4_121, Mem91[0x00000B0A:word32], r3, r4, r5, r6, r7, out r4_95, out r5_96, out r6_97, out r7_98, out sp_99)
	word32 r0_101 = Mem91[r6_97 + 76:word32]
	Mem109[r5_96 + 124:word32] = r4_95 << r0_101 | Mem91[r5_96 + 124:word32] << 0x00000000
	fn000082EC()
	word32 r0_107 = r5_96 + 0x00000008 + r0_101 * 0x00000014
	branch Mem109[r6_97 + 76:word32] <=u Mem109[Mem109[r5_96 + 4:word32] + 76:word32] l00000ADC_thunk_fn00000C8C
// DataOut: cpsr r0 r6 r7 sp
// DataOut (flags): Z
// SymbolicIn: sp:fp - 24 r4:<invalid> r6:r0 r7:r1 r5:r2 r3:0x00000002 r2:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00000ADC_thunk_fn00000C8C:
	fn00000C8C(r6_97, cpsr, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18)
	return r0_107
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r7:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> lr:<invalid> r1:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00000ADE:
	Mem119[Mem109[0x00000B0E:word32]:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
	word32 r2_120
	fn000085AC(r7_98, cpsr, out r2_120, out r4_121)
// DataOut: cpsr r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r7:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> lr:<invalid> r1:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00000A90:
	word32 r2_88
	fn000085AC(r1, cpsr, out r2_88, out r4_121)
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r6:r0 r7:r1 r5:r2 r3:0x00000002 r2:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00000A96:
	return r4_121
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r6:r0 r7:r1 r5:r2 r3:0x00000002 r2:<invalid> r0:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00000AF2:
	return r4_121
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r7:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> lr:<invalid> r1:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

xTaskGenericNotify_exit:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r7:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r9:<invalid> lr:<invalid> r1:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr



void xTaskGenericNotifyFromISR(word32 r0, word32 r1, word32 r2, word32 r3, word32 r6, word32 r7, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r2 r3 r6 r7
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 r6 r7 r8 sp
xTaskGenericNotifyFromISR_entry:
// DataOut: cpsr r0 r1 r2 r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000B0C:
	word32 r5_109 = __mrs(cpsr)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	word32 sp_100 = fp - 24
	branch r3 == 0x00000000 l00000B2A
// DataOut: cpsr r0 r1 r2 r3 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000B26:
	Mem160[r3:word32] = Mem0[r0 + 96:word32]
// DataOut: cpsr r0 r1 r2 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r5:<invalid> r4:0x000000BF -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000B2A:
	word32 r4_22 = (word32) Mem0[r0 + 100:byte]
	Mem25[r0 + 100:byte] = 0x02
	word32 r3_121 = 0x00000002
	word32 r2_115 = r2 - 0x00000001
	word32 r4_108 = (uint32) (byte) r4_22
	byte Z_154 = cond(r2 - 0x00000004)
	branch r2 >u 0x00000004 || r2 <u 0x00000001 l00000B46
// DataOut: cpsr r0 r1 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): Z
// SymbolicIn: sp:fp - 24 r5:<invalid> r4:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000B3C:
	switch (r2 - 0x00000001) { l00000B90 l00000B54 l00000B44 l00000B40 }
// DataOut: cpsr r0 r1 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r5:<invalid> r4:<invalid> r3:0x00000002 r2:r2 - 0x00000001 -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000B40:
	r2_115 = r5_109 >>u 16
	r4_108 = r0 << 8
// DataOut: cpsr r0 r1 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r5:<invalid> r4:<invalid> r3:0x00000002 r2:r2 - 0x00000001 -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000B44:
	Z_154 = cond(r4_108 - 0x00000002) (alias)
// DataOut: cpsr r0 r1 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): Z
// SymbolicIn: sp:fp - 24 r5:<invalid> r4:<invalid> r3:0x00000002 r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000B46:
	branch Z_154 l00000BC0
// DataOut: cpsr r0 r1 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r5:<invalid> r4:<invalid> r3:0x00000002 r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000BC0:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r5:<invalid> r4:<invalid> r3:0x00000002 r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000B48:
	Mem82[r0 + 96:word32] = r1
	byte Z_119 = cond(r4_108 - 0x00000001)
// DataOut: cpsr r1 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): Z
// SymbolicIn: sp:fp - 24 r5:<invalid> r4:<invalid> r3:0x00000002 r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000B4C:
	branch Z_119 l00000B60
// DataOut: cpsr r1 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r0:0x00000001 r8:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000B60:
	Mem102[0x00000061:word32] = r3_121
	branch Z_119 l00000B62_thunk_fn00000D4A
// DataOut: cpsr r1 r2 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r0:0x00000001 r8:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000B62_thunk_fn00000D4A:
	fn00000D4A(r5_109, r6, r7, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r0:0x00000001 r8:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000B64:
	r6 = Mem102[0x00000BD4:word32]
	r7 = 0x00000001
	word32 r3_105 = Mem102[r6 + 140:word32]
	branch r3_105 == 0x00000000 l00000B9C
// DataOut: cpsr r1 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r0:0x00000001 r8:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000B9C:
	word32 r4_134
	fn0000833C(0x00000025, r1, r2_115, r3_105, r4_108, r5_109, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, out r4_134, out r5_109, out r6, out r7, out sp_100)
	r4_108 = r4_134 << Mem102[r7 + 76:word32] | Mem102[r6 + 124:word32]
	Mem149[r6 + 124:word32] = r4_108
	fn000082EC()
	r1 = 0x00000025
// DataOut: cpsr r1 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r0:0x00000001 r8:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000BC2:
// DataOut: cpsr r1 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000B6E:
	r1 = 0x00000039
// DataOut: cpsr r1 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r0:0x00000001 r8:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000B76:
	fn000082EC()
	r2_115 = Mem102[r7 + 76:word32]
	word32 r3_116 = Mem102[Mem102[r6 + 4:word32] + 76:word32]
	Z_119 = cond(r2_115 - r3_116) (alias)
	branch r2_115 <=u r3_116 l00000B82_thunk_fn00000D4A
// DataOut: cpsr r1 r2 r4 r5 r6 r7 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r0:<invalid> r8:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000B82_thunk_fn00000D4A:
	fn00000D4A(r5_109, r6, r7, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r0:<invalid> r8:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000B84:
	r3_121 = Mem102[sp_100 + 24:word32]
	branch r3_121 == 0x00000000 l00000BC8
// DataOut: cpsr r1 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r0:<invalid> r8:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000BC8:
	Mem124[r6 + 144:word32] = 0x00000001
// DataOut: cpsr r1 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r0:0x00000001 r8:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000B8A:
	Mem123[r3_121:word32] = 0x00000001
	__msr(cpsr, r5_109)
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r0:0x00000001 r8:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000B4E:
	__msr(cpsr, r5_109)
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r0:0x00000001 r8:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000B54:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r0:0x00000001 r6:<invalid> r7:<invalid> r1:<invalid> r8:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000B90:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r0:0x00000001 r8:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

xTaskGenericNotifyFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r4:r4 r3:<invalid> r2:<invalid> r6:r6 r7:r7 r8:r8 r0:0x00000001 r1:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr



word32 fn00000BD0(word32 r0, word32 r1, word32 r2, word32 r3, word32 cpsr, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r2 r3
// LiveOut: r0 r4
// Trashed: NZCV r0 r1 r2 r3 r4
// Preserved: sp
fn00000BD0_entry:
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000BD0:
	word32 r4_3
	*r4Out = r0 << 3
// DataOut: cpsr r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000BD2_thunk_xTaskNotifyWait:
	return xTaskNotifyWait(0x00000000, r1, r2, r3, cpsr)
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:0x00000000

fn00000BD0_exit:
// DataOut: r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:<invalid> r2:<invalid> r1:<invalid> r3:<invalid>



word32 xTaskNotifyWait(word32 r0, word32 r1, word32 r2, word32 r3, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r2 r3
// LiveOut: r0
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 r6 r7 r8 sp
xTaskNotifyWait_entry:
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000BD4:
	word32 r4_16 = Mem0[0x00000C5C:word32]
	fn00008574()
	branch (word32) Mem0[Mem0[r4_16 + 4:word32] + 100:byte] == 0x00000002 l00000C00
// DataOut: cpsr r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000BF0:
	word32 r1_86 = Mem0[r4_16 + 4:word32]
	Mem89[r1_86 + 96:word32] = Mem0[r1_86 + 96:word32] & ~(r0 << 0x00000000)
	Mem91[Mem89[r4_16 + 4:word32] + 100:byte] = 0x01
// DataOut: cpsr r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r5:r2 r8:r0 r6:r1 r7:r3 r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000C02:
	branch r3 != 0x00000000 l00000C3C
// DataOut: cpsr r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r5:r2 r8:r0 r6:r1 r7:r3 r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000C3C:
	fn00000858()
	Mem84[Mem0[0x00000C62:word32]:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
// DataOut: cpsr r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r5:r2 r8:r0 r6:r1 r7:r3 r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr
// Terminates process

l00000C04:
	word32 r2_53
	word32 r4_54
	fn000085AC(r3, cpsr, out r2_53, out r4_54)
	fn00008574()
	branch r2 == 0x00000000 l00000C14
// DataOut: cpsr r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r5:r2 r8:r0 r6:r1 r7:r3 r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000C0E:
	Mem80[r2:word32] = Mem0[Mem0[r4_54 + 4:word32] + 96:word32]
// DataOut: cpsr r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r5:r2 r8:r0 r6:r1 r7:r3 r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000C14:
	branch (word32) Mem0[Mem0[r4_54 + 4:word32] + 100:byte] == 0x00000001 l00000C50
// DataOut: cpsr r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r5:r2 r8:r0 r6:r1 r7:r3 r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000C50:
// DataOut: cpsr r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r3:<invalid> sp:fp - 24 r4:<invalid> r5:r2 r8:r0 r6:r1 r7:r3 r0:<invalid> r1:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000C00:
// DataOut: cpsr r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r5:r2 r8:r0 r6:r1 r7:r3 r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000C1E:
	word32 r3_61 = Mem0[r4_54 + 4:word32]
	Mem64[r3_61 + 96:word32] = Mem0[r3_61 + 96:word32] & ~(r1 << 0x00000000)
	Mem67[Mem64[r4_54 + 4:word32] + 100:byte] = 0x00
	word32 r2_68
	word32 r4_69
	fn000085AC(r3, cpsr, out r2_68, out r4_69)
	return 0x00000001
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r5:r2 r8:r0 r6:r1 r7:r3 r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

xTaskNotifyWait_exit:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r5:r5 r8:r8 r6:r6 r7:r7 r2:<invalid> r0:0x00000001 r1:<invalid> r3:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr



void vTaskNotifyGiveFromISR(word32 r0, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r3 r4 r5 r6 r7 r8 r9
// LiveOut:
// Trashed: NZCV r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
vTaskNotifyGiveFromISR_entry:
// DataOut: cpsr r0 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000C60:
	word32 r6_20 = __mrs(cpsr)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	Mem26[r0 + 100:byte] = 0x02
	Mem32[r0 + 96:word32] = Mem26[r0 + 96:word32] + 0x00000001
// DataOut: cpsr r6
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0020(32)

l00000C8A_thunk_fn00000C8C:
	fn00000C8C(r6_20, cpsr, r3, r4, r5, r6, r7, r8, r9)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 32 r6:<invalid> r3:<invalid> r5:<invalid> -32(fp):r3 -28(fp):r4 -24(fp):r5 -20(fp):r6 -16(fp):r7 -12(fp):r8 -8(fp):r9 -4(fp):lr

vTaskNotifyGiveFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> -32(fp):r3 -28(fp):r4 -24(fp):r5 -20(fp):r6 -16(fp):r7 -12(fp):r8 -8(fp):r9 -4(fp):lr



void fn00000C8C(word32 r6, word32 cpsr, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z cpsr r6
// LiveOut:
// Trashed: r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
l00000C8C:
	branch Test(EQ,Z) l00000C92
// DataOut: cpsr r0 r6
// DataOut (flags): 
// SymbolicIn:

l00000C8C_thunk_fn00000C8E:
	fn00000C8E(r6, cpsr)
	return
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn:

l00000C8C_thunk_fn00000C8E:
	fn00000C8E(r6, cpsr)
	return
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn:

fn00000C8C_entry:
// DataOut: cpsr r0 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000C8C:
	branch Z l00000C92_in_fn00000C8C
// DataOut: cpsr r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000C92_in_fn00000C8C:
	return
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000C8C_thunk_fn00000C8E:
	fn00000C8E(r6, cpsr)
	return
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00000C8C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid>



void fn00000C8E(word32 r6, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r6
// LiveOut:
// Trashed: r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00000C8E_entry:
// DataOut: cpsr r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(32)

l00000C8E:
	__msr(cpsr, r6)
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000C92:
	return
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:v3

fn00000C8E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 + 32 r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid>



void fn00000CFC(word32 r0, word32 r1, word32 r7, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00000CFC_entry:
// DataOut: cpsr r0 r1 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000CFC:
// DataOut: cpsr r0 r1 r4 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000CFE_thunk_ulTaskNotifyTake:
	ulTaskNotifyTake(0x00000000, r1, r7, cpsr)
	return
// DataOut: cpsr r0 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:0x00000000
// Terminates process

fn00000CFC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void ulTaskNotifyTake(word32 r0, word32 r1, word32 r7, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
ulTaskNotifyTake_entry:
// DataOut: cpsr r0 r1 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000D00:
	word32 r4_12 = Mem0[0x00000D6A:word32]
	fn00008574()
	branch Mem0[Mem0[r4_12 + 4:word32] + 96:word32] != 0x00000000 l00000D1C
// DataOut: cpsr r0 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000D10_thunk_fn00000D4A:
	fn00000D4A(r1, r0, r7, cpsr)
	return
// DataOut: cpsr r0 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:<invalid> r6:r0 r5:r1 r3:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// Terminates process

l00000D12:
	Mem23[Mem0[r4_12 + 4:word32] + 100:byte] = 0x01
// DataOut: cpsr r0 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:<invalid> r6:r0 r5:r1 r3:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00000D16_thunk_fn00000D4A:
	fn00000D4A(r1, r0, r7, cpsr)
	return
// DataOut: cpsr r0 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:<invalid> r6:r0 r5:r1 r3:<invalid> r2:0x00000001 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// Terminates process

ulTaskNotifyTake_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



void fn00000D4A(word32 r5, word32 r6, word32 r7, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r5 r6 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00000D4A_entry:
// DataOut: cpsr r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(32)

l00000D4A:
	fn00000858()
	Mem7[Mem0[0x00000D6C:word32]:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
// DataOut: cpsr r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp r2:0x10000000 r3:<invalid>
// LocalsOut: v3(32)
// Terminates process

l00000D18:
	branch r5 != 0x00000000 l00000D4A
// DataOut: cpsr r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: r2:0x10000000 r3:<invalid>
// LocalsOut: v3(32)

l00000D1C:
	word32 r2_10
	word32 r4_11
	fn000085AC(r7, cpsr, out r2_10, out r4_11)
	fn00008574()
	word32 r5_14 = Mem7[Mem7[r4_11 + 4:word32] + 96:word32]
	branch r5_14 == 0x00000000 l00000D32
// DataOut: cpsr r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: r2:0x10000000 r3:<invalid>

l00000D2A:
	word32 r3_27
	branch r6 != 0x00000000 l00000D42
// DataOut: cpsr r4 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r0:<invalid>

l00000D42:
	r3_27 = Mem7[r4_11 + 4:word32]
	Mem33[r3_27 + 96:word32] = 0x00000000
// DataOut: cpsr r3 r4 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r0:<invalid>

l00000D2C:
	r3_27 = Mem7[r4_11 + 4:word32]
// DataOut: cpsr r3 r4 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r0:<invalid>

l00000D2E:
	Mem29[r3_27 + 96:word32] = r5_14 - 0x00000001
// DataOut: cpsr r4 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r0:<invalid>

l00000D32:
	Mem17[Mem7[r4_11 + 4:word32] + 100:byte] = 0x00
	word32 r2_18
	word32 r4_19
	fn000085AC(r7, cpsr, out r2_18, out r4_19)
	return
// DataOut: cpsr r0 r4 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r0:<invalid>

fn00000D4A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r3:<invalid> r5:<invalid> sp:fp r4:<invalid> r0:<invalid> r6:<invalid>



void fn00000D68()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00000D68_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00000D68_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000D68:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xTaskIncrementTick(word32 r0, word32 r1, word32 r2, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r2
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved: r10 r4 r5 r6 r7 r8 r9 sp
xTaskIncrementTick_entry:
// DataOut: cpsr r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000D6C:
	word32 r4_20 = Mem0[0x00000E68:word32]
	branch Mem0[r4_20 + 140:word32] != 0x00000000 l00000E34
// DataOut: cpsr r0 r1 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000D7A:
	byte C_123
	word32 r7_55 = Mem0[r4_20 + 128:word32]
	Mem58[r4_20 + 128:word32] = r7_55 + 0x00000001
	branch r7_55 != 0x00000001 l00000DA8
// DataOut: cpsr r0 r1 r2 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 32 r4:<invalid> r3:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l00000D86:
	word32 r3_107 = Mem58[r4_20 + 108:word32]
	r2 = Mem58[r4_20 + 112:word32]
	Mem109[r4_20 + 108:word32] = r2
	Mem110[r4_20 + 112:word32] = r3_107
	Mem113[r4_20 + 148:word32] = Mem110[r4_20 + 148:word32] + 0x00000001
	branch Mem113[Mem113[r4_20 + 108:word32]:word32] != 0x00000000 l00000E42
// DataOut: cpsr r0 r1 r2 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 32 r4:<invalid> r3:<invalid> r7:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l00000E42:
	C_123 = cond(r0 + 0x00000098) (alias)
// DataOut: r4
// DataOut (flags): C
// SymbolicIn: sp:fp - 32 r4:<invalid> r3:<invalid> r7:<invalid> r2:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l00000DA0:
	Mem119[r4_20 + 132:word32] = 0xFFFFFFFF
// DataOut: cpsr r0 r1 r2 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 32 r4:<invalid> r3:<invalid> r7:<invalid> r2:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l00000DA8:
	word32 r3_102 = Mem58[r4_20 + 132:word32]
	branch r7_55 + 0x00000001 <u r3_102 l00000E10
// DataOut: cpsr r0 r1 r2 r3 r4
// DataOut (flags): C
// SymbolicIn: sp:fp - 32 r4:<invalid> r3:<invalid> r7:<invalid> r2:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l00000DB2:
// DataOut: cpsr r0 r1 r2 r4
// DataOut (flags): C
// SymbolicIn: sp:fp - 32 r4:<invalid> r3:<invalid> r7:<invalid> r6:0x00000000 r2:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l00000E00:
	branch r7_55 + 0x00000001 <u r3_102 l00000E04
// DataOut: cpsr r0 r1 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 32 r4:<invalid> r3:<invalid> r7:<invalid> r6:0x00000000 r9:0x00000001 r8:<invalid> r2:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l00000E02_1:
// DataOut: cpsr r0 r1 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 32 r4:<invalid> r3:<invalid> r7:<invalid> r6:0x00000000 r9:0x00000001 r8:<invalid> r2:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l00000E04:
	word32 r3_99 = Mem58[Mem58[r4_20 + 108:word32]:word32]
	branch r3_99 != 0x00000000 l00000E0A_thunk_fn00000FB8
// DataOut: cpsr r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 32 r4:<invalid> r3:<invalid> r7:<invalid> r6:<invalid> r9:0x00000001 r8:<invalid> r2:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l00000E0A_thunk_fn00000FB8:
	fn00000FB8(r0, r1, r2, r3_99, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 32 r4:<invalid> r3:<invalid> r7:<invalid> r6:<invalid> r9:0x00000001 r8:<invalid> r2:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l00000E0C:
	r3_102 = 0xFFFFFFFF
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 32 r4:<invalid> r3:<invalid> r7:<invalid> r6:<invalid> r9:0x00000001 r8:<invalid> r2:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l00000E10:
	Mem86[r4_20 + 132:word32] = r3_102
	C_123 = cond(Mem86[r4_20 + Mem86[Mem86[r4_20 + 4:word32] + 76:word32] * 0x00000014 + 8:word32] - 0x00000002) (alias)
// DataOut: r4
// DataOut (flags): C
// SymbolicIn: sp:fp - 32 r4:<invalid> r3:<invalid> r7:<invalid> r6:<invalid> r2:<invalid> r9:0x00000001 r8:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l00000E24:
	branch C_123 l00000E28
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 32 r4:<invalid> r3:<invalid> r7:<invalid> r2:<invalid> r0:r0 + 0x00000098 r6:<invalid> r9:0x00000001 r8:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l00000E26_1:
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 32 r4:<invalid> r3:<invalid> r7:<invalid> r2:<invalid> r0:r0 + 0x00000098 r6:<invalid> r9:0x00000001 r8:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l00000E28:
	branch Mem58[r4_20 + 144:word32] == 0x00000000 l00000E32
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 32 r4:<invalid> r3:<invalid> r7:<invalid> r2:<invalid> r0:r0 + 0x00000098 r6:<invalid> r9:0x00000001 r8:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l00000E30_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 32 r4:<invalid> r3:<invalid> r7:<invalid> r2:<invalid> r0:r0 + 0x00000098 r6:<invalid> r9:0x00000001 r8:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l00000E32:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 32 r4:<invalid> r3:<invalid> r7:<invalid> r2:<invalid> r0:r0 + 0x00000098 r6:<invalid> r9:0x00000001 r8:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l00000E34:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 32 r4:<invalid> r3:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r6:<invalid> r9:0x00000001 r8:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

xTaskIncrementTick_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:r10 r0:<invalid> r2:<invalid> r1:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr



word32 fn00000E68(word32 r1, word32 r2, word32 cpsr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r1 r2
// LiveOut: r0 r1 r2 r3 r4 r5 r7
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r7 sp
// Preserved: sp
fn00000E68_entry:
	*r5Out = r5
	*r7Out = r7
// DataOut: cpsr r1 r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000E68:
	word32 r4_3
	*r4Out = r1 << 3
// DataOut: cpsr r0 r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000E6A_thunk_xTaskResumeAll:
	word32 r1_8
	word32 r2_9
	word32 r3_10
	return xTaskResumeAll(0x00000000, r2, cpsr, out r1_8, out r2_9, out r3_10)
// DataOut: cpsr r0 r1 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r1 << 3 r0:0x00000000

fn00000E68_exit:
// DataOut: r0 r1 r2 r3 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:r1 << 3 r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r2:<invalid> r1:<invalid>



word32 xTaskResumeAll(word32 r0, word32 r2, word32 cpsr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r2
// LiveOut: r0 r1 r2 r3
// Trashed: NZCV r0 r1 r2 r3 r5 r7 sp
// Preserved: r4 r5 r6 r7 r8 sp
xTaskResumeAll_entry:
	*r2Out = r2
	*r1Out = r1
// DataOut: cpsr r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000E6C:
	word32 r4_16 = Mem0[0x00000F44:word32]
	fn00008574()
	word32 r3_17 = Mem0[r4_16 + 140:word32]
	Mem19[r4_16 + 140:word32] = r3_17 - 0x00000001
	word32 r3_18
	*r3Out = r3_17 - 0x00000001
	word32 r5_20 = Mem19[r4_16 + 140:word32]
	branch r5_20 != 0x00000000 l00000F22
// DataOut: cpsr r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000E88:
	word32 r3_52 = Mem19[r4_16:word32]
	*r3Out = r3_52
	branch r3_52 == 0x00000000 l00000F22
// DataOut: cpsr r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r5:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000E8E:
// DataOut: cpsr r0 r1 r2 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r5:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000ED0:
	Mem57[r4_16 + 144:word32] = 0x00000001
	word32 r3_101 = Mem57[r4_16 + 88:word32]
	*r3Out = r3_101
	branch r3_101 != 0x00000000 l00000ED8_thunk_fn00001092
// DataOut: cpsr r0 r1 r2 r3 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r5:<invalid> r6:0x00000001 r7:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000ED8_thunk_fn00001092:
	fn00001092()
	return r0
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r5:<invalid> r6:0x00000001 r7:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000EDA:
	branch r5_20 == 0x00000000 l00000EEA
// DataOut: cpsr r0 r1 r2 r3 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r5:<invalid> r6:0x00000001 r7:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000EDC:
	branch Mem57[Mem57[r4_16 + 108:word32]:word32] != 0x00000000 l00000F32
// DataOut: cpsr r0 r1 r2 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r5:<invalid> r6:0x00000001 r7:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000F32:
	r3_101 = Mem57[Mem57[Mem57[Mem57[r4_16 + 108:word32] + 12:word32] + 12:word32] + 36:word32]
	Mem106[r4_16 + 132:word32] = r3_101
// DataOut: cpsr r0 r1 r2 r3 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r5:<invalid> r6:0x00000001 r7:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000EE2:
	r3_101 = 0xFFFFFFFF
// DataOut: cpsr r0 r1 r2 r3 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r5:<invalid> r6:0x00000001 r7:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000EE6:
	Mem100[r4_16 + 132:word32] = r3_101
// DataOut: cpsr r0 r1 r2 r3 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r5:<invalid> r6:0x00000001 r7:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000EEA:
	word32 r5_62 = Mem57[r4_16 + 152:word32]
	branch r5_62 == 0x00000000 l00000F04
// DataOut: cpsr r0 r1 r2 r3 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r5:<invalid> r6:0x00000001 r7:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000EF0:
	fn00000D68()
	branch r0 == 0x00000000 l00000EFC
// DataOut: cpsr r1 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r5:<invalid> r6:0x00000001 r7:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr
// Terminates process

l00000EF8:
	Mem96[r4_16 + 144:word32] = 0x00000001
// DataOut: cpsr r1 r2 r3 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000EFC:
	branch r5_62 != 0x00000001 l00000EFE_thunk_fn000010EE
// DataOut: cpsr r1 r2 r3 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000EFE_thunk_fn000010EE:
	word32 r1_93
	word32 r3_94
	return fn000010EE(r2, r3_101, out r1_93, out r3_94)
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: r5:r5 - 0x00000001 -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000F00:
	Mem92[r4_16 + 152:word32] = r5_62 - 0x00000001
// DataOut: cpsr r1 r4 r7
// DataOut (flags): 
// SymbolicIn: r5:r5 - 0x00000001 -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000F04:
	word32 r3_67 = Mem57[r4_16 + 144:word32]
	*r3Out = r3_67
	branch r3_67 == 0x00000000 l00000F26
// DataOut: cpsr r1 r3 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r5:<invalid> r6:0x00000001 r7:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000F26:
	word32 r2_78
	word32 r4_79
	fn000085AC(r4_16 + 0x00000008, cpsr, out r2_78, out r4_79)
	return r4_79
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r5:<invalid> r6:0x00000001 r7:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000F0A:
	word32 r3_69 = Mem57[0x00000F4A:word32]
	*r3Out = r3_69
	Mem70[r3_69:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
	word32 r2_73
	word32 r4_74
	fn000085AC(r4_16 + 0x00000008, cpsr, out r2_73, out r4_74)
	r0 = r4_74
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r5:<invalid> r6:0x00000001 r7:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00000F22:
	return r0
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r5:<invalid> r6:0x00000001 r7:<invalid> r2:<invalid> r0:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

xTaskResumeAll_exit:
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:r4 r3:<invalid> r5:<invalid> r6:r6 r7:<invalid> r8:r8 r0:<invalid> r2:<invalid> r1:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr



void fn00000F44()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00000F44_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00000F44_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000F44:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vTaskDelay(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r7
// Preserved: r3 sp
vTaskDelay_entry:
// DataOut: cpsr r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000F48:
	branch r0 != 0x00000000 l00000F5E
// DataOut: cpsr r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000F5E:
	word32 r2_35 = Mem0[0x00000F82:word32]
	Mem39[r2_35 + 140:word32] = Mem0[r2_35 + 140:word32] + 0x00000001
	fn00000858()
	word32 r1_40
	word32 r2_41
	word32 r3_42
	word32 r4_43
	word32 r5_44
	word32 r7_45
	word32 r0_46 = fn00000E68(r1, r2_35, cpsr, out r1_40, out r2_41, out r3_42, out r4_43, out r5_44, out r7_45)
	branch r0_46 == 0x00000000 l00001148_in_vTaskDelay
// DataOut: r0 r2 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 -8(fp):r3 -4(fp):lr
// Terminates process

l00001148_in_vTaskDelay:
	word32 r3_52 = Mem0[r3_42 + 128:word32]
	Mem53[r0_46:word32] = r2_41
	Mem54[r0_46 + 4:word32] = r3_52
	word32 sp_56
	word32 r3_57
	word32 lr_58
	word32 r0_59
	word32 r2_60
	word32 pc_61
	byte NZCV_62
	byte Z_63
	word32 r1_64
	word32 cpsr_65
	word32 r4_66
	word32 r5_67
	word32 r7_68
	call lr (retsize: 0;)
		uses: cpsr,dwLoc04_6,dwLoc08_4,lr,lr,NZCV_47,pc,r0_46,r1_40,r2_41,r3_52,r4_43,r5_44,r7_45,sp_2,Z_48
		defs: cpsr_65,lr_58,NZCV_62,pc_61,r0_59,r1_64,r2_60,r3_57,r4_66,r5_67,r7_68,sp_56,Z_63
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r0:<invalid> r3:<invalid> sp:<invalid> r5:<invalid> r7:<invalid> r2:<invalid> r1:<invalid> -8(fp):r3 -4(fp):lr

l00000F76:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r0:<invalid> r3:<invalid> sp:<invalid> r5:<invalid> r7:<invalid> r2:<invalid> r1:<invalid> -8(fp):r3 -4(fp):lr

l00000F4C:
	Mem24[Mem0[0x00000F7C:word32]:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 -8(fp):r3 -4(fp):lr

vTaskDelay_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r1:<invalid> -8(fp):r3 -4(fp):lr



word32 fn00000F7C(word32 r0, word32 r1, word32 r5, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r5
// LiveOut: r4
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved: sp
fn00000F7C_entry:
// DataOut: cpsr r0 r1 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000F7C:
// DataOut: cpsr r0 r1 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000F7E_thunk_vTaskDelayUntil:
	return vTaskDelayUntil(0x00000000, r1, r5, cpsr)
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:0x00000000

fn00000F7C_exit:
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r5:<invalid> r6:<invalid>



word32 vTaskDelayUntil(word32 r0, word32 r1, word32 r5, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r5
// LiveOut: r4
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved:
vTaskDelayUntil_entry:
// DataOut: cpsr r0 r1 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000F80:
	word32 r2_3 = Mem0[0x00000FD8:word32]
	word32 r3_11 = Mem0[r0:word32]
	Mem13[r2_3 + 140:word32] = Mem0[r2_3 + 140:word32] + 0x00000001
	word32 r2_14 = Mem13[r2_3 + 128:word32]
	word32 r1_16 = r1 + r3_11
	branch r2_14 >=u r3_11 l00000FB4
// DataOut: cpsr r0 r1 r2 r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000FB4:
// DataOut: cpsr sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r2:<invalid> r4:<invalid> r3:<invalid> r1:<invalid> -8(fp):r4 -4(fp):lr

l00000F9A:
	branch r3_11 >u r1_16 l00000FB8
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r2:<invalid> r4:<invalid> r3:<invalid> r1:<invalid> -8(fp):r4 -4(fp):lr

l00000F9C_thunk_fn00000FB8:
	return fn00000FB8(r0, r1_16, r2_14, r3_11, cpsr)
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r2:<invalid> r4:<invalid> r3:<invalid> r1:<invalid> -8(fp):r4 -4(fp):lr

l00000F9E:
	Mem41[r0:word32] = r1_16
	word32 r1_43
	word32 r2_44
	word32 r3_45
	word32 r4_46
	word32 r5_47
	word32 r7_48
	word32 r0_49 = fn00000E68(r1_16, r2_14, cpsr, out r1_43, out r2_44, out r3_45, out r4_46, out r5_47, out r7_48)
	branch r0_49 != 0x00000000 l00000FD0
// DataOut: cpsr r0 r1 r2 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r2:<invalid> r4:<invalid> r3:<invalid> r1:<invalid> -8(fp):r4 -4(fp):lr

l00000FA4_thunk_fn00000FB8:
	return fn00000FB8(r0_49, r1_43, r2_44, r3_45, cpsr)
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> -8(fp):r4 -4(fp):lr

l00000FA6:
	Mem52[Mem41[0x00000FDE:word32]:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
// DataOut: cpsr sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> -8(fp):r4 -4(fp):lr

l00000FB6:
	return Mem13[fp - 8:word32]
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> -8(fp):r4 -4(fp):lr

vTaskDelayUntil_exit:
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r6:<invalid> -8(fp):r4 -4(fp):lr



word32 fn00000FB8(word32 r0, word32 r1, word32 r2, word32 r3, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r2 r3
// LiveOut: r4
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved:
fn00000FB8_entry:
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(32)

l00000FB8:
	branch r3 >u r1 l00000FBC
// DataOut: cpsr r0 r1 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000FBC:
	branch r2 >=u r1 l0000119A_in_vTaskDelayUntil
// DataOut: cpsr r0 r1 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:v3

l0000119A_in_vTaskDelayUntil:
	return Mem0[v3:word32]
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:v3

l00000FC0:
	Mem20[r0:word32] = r1
	fn00000858()
	word32 r1_24
	word32 r2_25
	word32 r3_26
	word32 r4_27
	word32 r5_28
	word32 r7_29
	branch fn00000E68(r1, r2, cpsr, out r1_24, out r2_25, out r3_26, out r4_27, out r5_28, out r7_29) == 0x00000000 l000011A2
// DataOut: cpsr sp
// DataOut (flags): 
// SymbolicIn: sp:v3

l000011A2:
	return Mem20[v3:word32]
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r0:<invalid> r3:<invalid> sp:<invalid> r5:<invalid> r7:<invalid> r2:<invalid> r1:<invalid>

l00000FD0:
	return Mem20[v3:word32]
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r0:<invalid> r3:<invalid> sp:<invalid> r5:<invalid> r7:<invalid> r2:<invalid> r1:<invalid>

fn00000FB8_exit:
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> r7:<invalid> r2:<invalid> r1:<invalid>



void vTaskPlaceOnEventList(word32 r0, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r2
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vTaskPlaceOnEventList_entry:
// DataOut: r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000FDC:
	fn00008308(r0, r2)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000FF0_thunk_fn00000858:
	fn00000858()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r3:<invalid> r1:<invalid> r0:r1 lr:lr -8(fp):r4 -4(fp):lr
// Terminates process

vTaskPlaceOnEventList_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp -8(fp):r4 -4(fp):lr



void fn00000FF4(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00000FF4_entry:
// DataOut: cpsr r0 r1 r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000FF4:
// DataOut: cpsr r1 r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000FF6_thunk_vTaskPlaceOnUnorderedEventList:
	vTaskPlaceOnUnorderedEventList(r1)
	return
// DataOut: cpsr r1 r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:0x00000000
// Terminates process

fn00000FF4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vTaskPlaceOnUnorderedEventList(word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r1
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vTaskPlaceOnUnorderedEventList_entry:
// DataOut: cpsr r1 r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00000FF8:
	Mem19[Mem0[Mem0[0x0000101C:word32] + 4:word32] + 56:word32] = r1 | 0x80000000
	fn000082EC()
// DataOut: cpsr r1 r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001016_thunk_fn00000858:
	fn00000858()
	return
// DataOut: cpsr r1 r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r3:r3 r1:<invalid> r5:r5 r0:r2 lr:lr -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr
// Terminates process

vTaskPlaceOnUnorderedEventList_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



word32 fn00001018(word32 r0, word32 r1, word32 r2, word32 r3, word32 r5, word32 r6, word32 r7, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2 r3 r5 r6 r7
// LiveOut: r0 r1 r2 r4
// Trashed: NZCV r0 r1 r2 r4
// Preserved: sp
fn00001018_entry:
// DataOut: cpsr r0 r1 r2 r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001018:
	word32 r4_3
	*r4Out = r0 << 3
// DataOut: cpsr r0 r1 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000101A_thunk_xTaskRemoveFromEventList:
	word32 r1_12
	word32 r2_13
	return xTaskRemoveFromEventList(0x00000000, r1, r2, r3, r0 << 3, r5, r6, r7, out r1_12, out r2_13)
// DataOut: cpsr r0 r1 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:0x00000000

fn00001018_exit:
// DataOut: r0 r1 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:0x00000000 r2:<invalid> r1:<invalid>



word32 xTaskRemoveFromEventList(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, ptr32 & r1Out, ptr32 & r2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2 r3 r4 r5 r6 r7
// LiveOut: r0 r1 r2
// Trashed: NZCV r0 r1 r2
// Preserved: r3 r4 r5 r6 r7 sp
xTaskRemoveFromEventList_entry:
// DataOut: cpsr r0 r1 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000101C:
	word32 r0_33
	word32 r3_17 = Mem0[r0 + 12:word32]
	word32 r5_19 = Mem0[r3_17 + 12:word32]
	word32 r6_26
	word32 r7_27
	word32 sp_28
	word32 r4_24
	word32 r5_25
	fn0000833C(r5_19 + 0x00000038, r1, r2, r3_17, Mem0[0x00001080:word32], r5_19, r3, r4, r5, r6, r7, out r4_24, out r5_25, out r6_26, out r7_27, out sp_28)
	word32 r3_30 = Mem0[r4_24 + 140:word32]
	branch r3_30 != 0x00000000 l00001070
// DataOut: cpsr r1 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001070:
	fn000082EC()
	word32 r1_80
	*r1Out = r6_26
	r0_33 = r4_24 + 0x00000058
// DataOut: cpsr r0 r1 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r7:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00001034:
	word32 r6_65
	word32 r7_66
	word32 sp_67
	fn0000833C(r5_25 + 0x00000024, r1, r2, r3_30, r4_24, r5_25, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, out r4_24, out r5_25, out r6_65, out r7_66, out sp_67)
	word32 r0_70 = Mem0[r5_25 + 76:word32]
	Mem79[r4_24 + 124:word32] = 0x00000001 << r0_70 | Mem0[r4_24 + 124:word32]
	word32 r1_77
	*r1Out = r6_65
	r0_33 = r4_24 + 0x00000008 + r0_70 * 0x00000014
// DataOut: cpsr r0 r1 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r7:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00001058:
	fn000082EC()
	word32 r2_40 = Mem0[r5_25 + 76:word32]
	*r2Out = r2_40
	branch r2_40 <=u Mem0[Mem0[r4_24 + 4:word32] + 76:word32] l00001068
// DataOut: cpsr r0 r1 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r7:<invalid> r2:<invalid> r1:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00001066_1:
	r0_33 = 0x00000001
// DataOut: cpsr r0 r1 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r7:<invalid> r2:<invalid> r1:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00001068:
	Mem45[r4_24 + 144:word32] = r0_33
	return 0x00000000
// DataOut: cpsr r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r7:<invalid> r2:<invalid> r1:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

xTaskRemoveFromEventList_exit:
// DataOut: r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 r4:r4 r5:r5 r6:r6 r0:0x00000000 r7:r7 r2:<invalid> r1:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr



void fn0000107C(word32 r0, word32 r1, word32 r2, word32 r3, word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2 r3 r5 r6 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000107C_entry:
// DataOut: cpsr r0 r1 r2 r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000107C:
// DataOut: cpsr r0 r1 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000107E_thunk_xTaskRemoveFromUnorderedEventList:
	xTaskRemoveFromUnorderedEventList(0x00000000, r1, r2, r3, r0 << 3, r5, r6, r7)
	return
// DataOut: cpsr r1 r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:0x00000000
// Terminates process

fn0000107C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xTaskRemoveFromUnorderedEventList(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2 r3 r4 r5 r6 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xTaskRemoveFromUnorderedEventList_entry:
// DataOut: cpsr r0 r1 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00001080:
	Mem21[r0:word32] = r1 | 0x80000000
	word32 r4_24
	word32 r5_25
	word32 r6_26
	word32 r7_27
	word32 sp_28
	fn0000833C(r0, r1 | 0x80000000, r2, r3, r4, 0x00000001, r3, r4, r5, r6, r7, out r4_24, out r5_25, out r6_26, out r7_27, out sp_28)
// DataOut: cpsr r1 r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001090_thunk_fn00001092:
	fn00001092()
	return
// DataOut: cpsr r1 r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r1:r1 | 0x80000000 r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// Terminates process

xTaskRemoveFromUnorderedEventList_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr



void fn00001092()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
l00001092:
	r4 = Mem0[0x000010D8:word32]
	r0 = r7
	r3 = fn0000833C(r0, r1, r2, r3, r4, r5, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, out r4, out r5, out r6, out r7, out sp)
	r3 = Mem0[r6 + 76:word32]
	lr = Mem0[r4 + 124:word32]
	r2 = r5 << r3
	r0 = r4 + 0x00000008
	r3 = r3 + (r3 << 0x00000002)
	r0 = r0 + (r3 << 0x00000002)
	r2 = r2 | lr << 0x00000000
	r1 = r7
	Mem0[r4 + 124:word32] = r2
	fn000082EC()
	r3 = Mem0[r4 + 4:word32]
	r2 = Mem0[r6 + 76:word32]
	r3 = Mem0[r3 + 76:word32]
	NZCV = cond(r2 - r3)
	ZC = NZCV (alias)
	branch Test(ULE,ZC) l000010CA
// DataOut: cpsr r1 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn:

l000010C8_1:
	r0 = r5
// DataOut: cpsr r1 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn:

l000010CA:
	Mem0[r4 + 144:word32] = r5
	r0 = 0x00000000
	r3 = Mem0[sp:word32]
	r4 = Mem0[sp + 4:word32]
	r5 = Mem0[sp + 8:word32]
	r6 = Mem0[sp + 12:word32]
	r7 = Mem0[sp + 16:word32]
	sp = sp + 24
	return
// DataOut: cpsr r0 r1 r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn:

fn00001092_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00001092_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001092:
	sp = fp
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000010D4(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r7 sp
// Preserved: sp
fn000010D4_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l000010D4:
// DataOut: cpsr
// DataOut (flags): 
// SymbolicIn: sp:fp

l000010D6_thunk_vTaskSwitchContext:
	vTaskSwitchContext()
	return
// DataOut: cpsr
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:0x00000000

fn000010D4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:r0 << 3 r0:<invalid> r2:<invalid> r3:<invalid> r7:<invalid> r1:<invalid>



void vTaskSwitchContext()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r7 sp
// Preserved: sp
vTaskSwitchContext_entry:
// DataOut: cpsr
// DataOut (flags): 
// SymbolicIn: sp:fp

l000010D8:
	word32 r2_3 = Mem0[0x00001120:word32]
	word32 r3_4 = Mem0[r2_3 + 140:word32]
	branch r3_4 != 0x00000000 l00001112
// DataOut: cpsr r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001112:
	Mem29[r2_3 + 144:word32] = 0x00000001
	word32 sp_32
	word32 r2_33
	word32 pc_34
	word32 r3_35
	byte NZC_36
	word32 r0_37
	word32 r1_38
	byte NZCV_39
	byte Z_40
	word32 lr_41
	call lr (retsize: 0;)
		uses: lr,NZC,NZCV,pc,r0,r1,r2_3,r3_28,sp_1,Z
		defs: lr_41,NZC_36,NZCV_39,pc_34,r0_37,r1_38,r2_33,r3_35,sp_32,Z_40
	return
// DataOut: cpsr
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid>

l000010E0:
	Mem15[r2_3 + 144:word32] = r3_4
	word32 r3_19 = 0x0000001F - (uint32) ((byte) __clz(Mem15[r2_3 + 124:word32]))
// DataOut: cpsr r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid>

l000010EC_thunk_fn000010EE:
	word32 r1_20
	word32 r3_21
	fn000010EE(r2_3, r3_19, out r1_20, out r3_21)
	return
// DataOut: cpsr
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid>

vTaskSwitchContext_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r7:<invalid> r0:<invalid> r1:<invalid>



word32 fn000010EE(word32 r2, word32 r3, ptr32 & r1Out, ptr32 & r3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r3
// LiveOut: r0 r1 r3
// Trashed: NZCV r0 r1 r3 r7 sp
// Preserved: sp
l000010EE:
	r3 = r3 + (r3 << 0x00000002)
	r3 = r3 << 2
	r0 = r2 + r3
	r3 = r0
	r1 = Mem0[r0 + 12:word32]
	r3 = r3 + 0x00000010
	r1 = Mem0[r1 + 4:word32]
	NZCV = cond(r1 - r3)
	NZC = NZCV (alias)
	Z = NZCV (alias)
	Mem0[r0 + 12:word32] = r1
	branch Test(NE,Z) l00001108
// DataOut: cpsr r0 r1 r2
// DataOut (flags): Z
// SymbolicIn:

l00001104_thunk_fn00001108:
	r3 = fn00001108(r0, r1, r2)
	return r0
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn:

l00001106_1:
	r1 = Mem0[r1 + 4:word32]
// DataOut: cpsr r0 r1 r2
// DataOut (flags): Z
// SymbolicIn:

l00001106_thunk_fn00001108:
	r3 = fn00001108(r0, r1, r2)
	return r0
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn:

fn000010EE_entry:
	def fp
	def r3
	def r2
	def Mem0
	def r1Out
	def r3Out
// DataOut: cpsr r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l000010EE:
	sp_1 = fp
	r7_3 = r3 << 12
	r3_4 = r3 + (r3 << 0x00000002)
	r3_5 = r3_4 << 2
	r0_7 = r2 + r3_5
	r3_8 = r0_7
	r1_10 = Mem0[r0_7 + 12:word32]
	r3_11 = r3_8 + 0x00000010
	r1_12 = Mem0[r1_10 + 4:word32]
	NZCV_13 = cond(r1_12 - r3_11)
	NZC_14 = NZCV_13 (alias)
	Z_15 = NZCV_13 (alias)
	Mem16[r0_7 + 12:word32] = r1_12
	branch r1_12 != r3_11 l00001106_thunk_fn00001108
// DataOut: cpsr r0 r1 r2
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00001106_thunk_fn00001108:
	r3_23 = fn00001108(r0_7, r1_12, r2)
	return r0_7
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r3 << 12 r3:r2 + r3 * 0x000F4240 + 0x00000010 r0:r2 + r3 * 0x00002710 r1:<invalid>

l00001106_1:
	r1_21 = Mem16[r1_12 + 4:word32]
// DataOut: cpsr r0 r1 r2
// DataOut (flags): Z
// SymbolicIn: sp:fp r7:r3 << 12 r3:r2 + r3 * 0x000F4240 + 0x00000010 r0:r2 + r3 * 0x00002710 r1:<invalid>

l00001106_thunk_fn00001108:
	r3_22 = fn00001108(r0_7, r1_21, r2)
	return r0_7
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r3 << 12 r3:r2 + r3 * 0x000F4240 + 0x00000010 r0:r2 + r3 * 0x00002710 r1:<invalid>

fn000010EE_exit:
	r1_17 = PHI(r1_12, r1_21, r1, r1)
	r3_18 = PHI(r3_23, r3_22, r3, r3)
	use r1_17 (=> r1Out)
	use r3_18 (=> r3Out)
// DataOut: r0 r1 r3
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:r3 << 12 r3:<invalid> r0:r2 + r3 * 0x00002710 r1:<invalid>



word32 fn00001108(word32 r0, word32 r1, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0 r1 r2
// LiveOut: r3
// Trashed: r3 sp
// Preserved:
fn00001108_entry:
// DataOut: cpsr r0 r1 r2
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00001108:
	word32 r3_4 = Mem0[r1 + 12:word32]
	branch Z l0000110E
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000110C_1:
	Mem16[r0 + 12:word32] = r1
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:<invalid>

l0000110E:
	Mem6[r2 + 4:word32] = r3_4
	word32 sp_9
	word32 r1_10
	word32 r3_11
	byte Z_12
	word32 r0_13
	word32 r2_14
	word32 lr_15
	call lr (retsize: 0;)
		uses: lr,r1,r2,r3_4,sp_1,Z
		defs: lr_15,r0_13,r1_10,r2_14,r3_11,sp_9,Z_12
	return r3_11
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:<invalid>

fn00001108_exit:
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:<invalid>



word32 fn0000111C(word32 r0, ptr32 & r1Out, ptr32 & r2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut: r0 r1 r2
// Trashed: NZC r0 r1 r2 r3 r4
// Preserved: sp
fn0000111C_entry:
// DataOut: cpsr r0 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000111C:
// DataOut: cpsr r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000111E_thunk_uxTaskResetEventItemValue:
	word32 r1_6
	word32 r2_7
	return uxTaskResetEventItemValue(out r1_6, out r2_7)
// DataOut: cpsr r0 r1 r2 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:0x00000000

fn0000111C_exit:
// DataOut: r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid>



word32 uxTaskResetEventItemValue(ptr32 & r1Out, ptr32 & r2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r0 r1 r2
// Trashed: r0 r1 r2 r3
// Preserved: sp
uxTaskResetEventItemValue_entry:
// DataOut: cpsr r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001120:
	word32 r3_3 = Mem0[0x00001138:word32]
	word32 r2_5 = Mem0[r3_3 + 4:word32]
	word32 r3_9 = 0x00000002 - Mem0[Mem0[r3_3 + 4:word32] + 76:word32]
	Mem10[r2_5 + 56:word32] = r3_9
	word32 sp_12
	word32 r3_13
	word32 pc_14
	word32 r1_15
	word32 r2_16
	word32 r0_17
	word32 lr_18
	call lr (retsize: 0;)
		uses: lr,r0_7,r1_4,r2_5,r3_9,sp_1
		defs: lr_18,pc_14,r0_17,r1_15,r2_16,r3_13,sp_12
	return r0_17
// DataOut: cpsr r0 r1 r2 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

uxTaskResetEventItemValue_exit:
// DataOut: r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid> r2:<invalid> r0:<invalid>



word32 fn00001134(word32 r0, ptr32 & r3Out, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut: r0 r3 r4
// Trashed: NZC r0 r3 r4
// Preserved: sp
fn00001134_entry:
// DataOut: r0 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001134:
	word32 r4_3
	*r4Out = r0 << 3
// DataOut: r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001136_thunk_xTaskGetCurrentTaskHandle:
	word32 r3_6
	return xTaskGetCurrentTaskHandle(out r3_6)
// DataOut: r0 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:0x00000000

fn00001134_exit:
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:<invalid> r3:<invalid>



word32 xTaskGetCurrentTaskHandle(ptr32 & r3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r0 r3
// Trashed: r0 r3
// Preserved: sp
xTaskGetCurrentTaskHandle_entry:
// DataOut: r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001138:
	word32 sp_6
	word32 r3_7
	word32 pc_8
	word32 r0_9
	word32 lr_10
	call lr (retsize: 0;)
		uses: lr,r0_4,r3_3,sp_1
		defs: lr_10,pc_8,r0_9,r3_7,sp_6
	return r0_9
// DataOut: r0 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

xTaskGetCurrentTaskHandle_exit:
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>



word32 fn00001140(word32 r0, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut: r0 r4
// Trashed: NZC r0 r2 r3 r4
// Preserved: sp
fn00001140_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001140:
	word32 r4_3
	*r4Out = r0 << 3
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001142_thunk_vTaskSetTimeOutState:
	vTaskSetTimeOutState(0x00000000)
	return 0x00000000
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:0x00000000

fn00001140_exit:
// DataOut: r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:0x00000000 r3:<invalid> r2:<invalid>



void vTaskSetTimeOutState(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
vTaskSetTimeOutState_entry:
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001144:
	word32 r3_3 = Mem0[0x00001158:word32]
	word32 r2_4 = Mem0[r3_3 + 148:word32]
// DataOut: cpsr r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001148:
	word32 r3_5 = Mem0[r3_3 + 128:word32]
	Mem6[r0:word32] = r2_4
	Mem8[r0 + 4:word32] = r3_5
	word32 sp_10
	word32 r3_11
	word32 pc_12
	word32 r2_13
	word32 r0_14
	word32 lr_15
	call lr (retsize: 0;)
		uses: lr,r0,r2_4,r3_5,sp_1
		defs: lr_15,pc_12,r0_14,r2_13,r3_11,sp_10
	return
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid>

vTaskSetTimeOutState_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid>



word32 fn00001154(word32 r0, word32 r1, word32 r7, word32 cpsr, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r7
// LiveOut: r0 r4
// Trashed: NZCV r0 r1 r2 r3 r4
// Preserved: sp
fn00001154_entry:
// DataOut: cpsr r0 r1 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001154:
	word32 r4_3
	*r4Out = r0 << 3
// DataOut: cpsr r0 r1 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001156_thunk_xTaskCheckForTimeOut:
	return xTaskCheckForTimeOut(0x00000000, r1, r7, cpsr)
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:0x00000000

fn00001154_exit:
// DataOut: r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid>



word32 xTaskCheckForTimeOut(word32 r0, word32 r1, word32 r7, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r7
// LiveOut: r0
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 r6 sp
xTaskCheckForTimeOut_entry:
// DataOut: cpsr r0 r1 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00001158:
	fn00008574()
	word32 r3_16 = Mem0[0x000011AE:word32]
	word32 r5_18 = Mem0[r3_16 + 128:word32]
	word32 r0_20 = Mem0[r0 + 4:word32]
	branch Mem0[r0:word32] == Mem0[r3_16 + 148:word32] l00001174
// DataOut: cpsr r0 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001174:
	branch r5_18 >=u r0_20 l00001198
// DataOut: cpsr r0 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:r0 r6:r1 r3:<invalid> r1:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00001178:
	word32 r2_37 = Mem0[r1:word32]
	branch r5_18 - r0_20 >=u r2_37 l00001198
// DataOut: cpsr r0 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:r0 r6:r1 r3:<invalid> r1:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00001180:
	word32 r1_43 = Mem0[r3_16 + 148:word32]
	word32 r3_44 = Mem0[r3_16 + 128:word32]
	Mem47[r1:word32] = r2_37 - r5_18 + r0_20
	Mem48[r0:word32] = r1_43
	Mem49[r0 + 4:word32] = r3_44
	word32 r2_52
	word32 r4_53
	fn000085AC(r7, cpsr, out r2_52, out r4_53)
	r5_18 = 0x00000000
// DataOut: cpsr r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:r0 r6:r1 r3:<invalid> r1:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00001198:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:<invalid> r6:r1 r3:<invalid> r1:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l0000119A:
	return r5_18
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:<invalid> r6:r1 r3:<invalid> r1:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

xTaskCheckForTimeOut_exit:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r6:r6 r3:<invalid> r1:<invalid> r5:r5 r2:<invalid> r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



void fn000011A8(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000011A8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000011A8_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l000011A8:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vTaskMissedYield()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
vTaskMissedYield_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000011AC:
	word32 r3_4 = Mem0[0x000011BE:word32]
	Mem5[r3_4 + 144:word32] = 0x00000001
	word32 sp_7
	word32 r2_8
	word32 r3_9
	word32 pc_10
	word32 lr_11
	call lr (retsize: 0;)
		uses: lr,r2_2,r3_4,sp_1
		defs: lr_11,pc_10,r2_8,r3_9,sp_7
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

vTaskMissedYield_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:0x00000001 r3:<invalid>



void vTaskPriorityInherit(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZCV r2
// Preserved: r3 r4 r5 r6 r7 sp
vTaskPriorityInherit_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000011BC:
	branch r0 == 0x00000000 l00001242
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00001242:
	word32 sp_96
	word32 r0_97
	byte NZCV_98
	byte Z_99
	word32 r3_100
	word32 r4_101
	word32 r5_102
	word32 r6_103
	word32 r7_104
	word32 lr_105
	word32 pc_106
	word32 r2_107
	byte C_108
	byte NV_109
	byte NZC_110
	call fn00C082EC (retsize: 0;)
		uses: C,dwLoc04,dwLoc08,dwLoc0C,dwLoc10,dwLoc14,dwLoc18,lr,NV,NZC,NZCV_3,pc,r0,r2,r3,r4,r5,r6,r7,sp_1,Z_4
		defs: C_108,lr_105,NV_109,NZC_110,NZCV_98,pc_106,r0_97,r2_107,r3_100,r4_101,r5_102,r6_103,r7_104,sp_96,Z_99
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000011C0:
	word32 r3_53
	word32 r4_40 = Mem0[0x0000124E:word32]
	word32 r3_41 = Mem0[r0 + 76:word32]
	branch r3_41 >=u Mem0[Mem0[r4_40 + 4:word32] + 76:word32] l000011F0
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l000011CE:
	word32 r2_74
	branch Mem0[r0 + 56:word32] < 0x00000000 l000011DA
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r2:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000011DA:
	r2_74 = r0 << 8
// DataOut: r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r2:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000011D4:
	r2_74 = 0x00000002 - Mem0[Mem0[r4_40 + 4:word32] + 76:word32]
// DataOut: r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r2:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000011DC:
	Mem75[r0 + 56:word32] = r2_74
	r3_53 = Mem75[0x00001252:word32] + r3_41 * 0x00000014
	branch Mem75[r0 + 52:word32] == r3_53 l000011F2
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r2:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000011EE:
	r3_41 = Mem75[r4_40 + 4:word32]
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000011F0:
	r3_53 = Mem0[r3_41 + 76:word32]
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000011F2:
	Mem54[r0 + 76:word32] = r3_53
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

vTaskPriorityInherit_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r3:r3 r2:<invalid> r5:r5 r6:r6 r7:r7 -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr



void xTaskPriorityDisinherit(word32 r0, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r3 r4 r5 r6 r7
// LiveOut:
// Trashed: NZCV lr r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved:
xTaskPriorityDisinherit_entry:
// DataOut: r0 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00001250:
	branch r0 == 0x00000000 l000012C4
// DataOut: r0 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00001254:
	word32 r1_64 = Mem0[r0 + 76:word32]
	word32 r3_65 = Mem0[r0 + 92:word32]
	word32 r2_66 = Mem0[r0 + 88:word32]
	Mem70[r0 + 92:word32] = r3_65 - 0x00000001
// DataOut: r0 r1 r2 r3 r5
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: Local -0008(0) Local -000C(0) Local -0010(0) Local -0014(0) Local -0018(0)

l00001262:
	branch r1_64 == r2_66 l00001262
// DataOut: r0 r1 r2 r3 r5
// DataOut (flags): Z
// SymbolicIn: sp:fp - 24 r1:<invalid> r3:<invalid> r2:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// LocalsOut: Local -0008(0) Local -000C(0) Local -0010(0) Local -0014(0) Local -0018(0)

l00001264:
	branch r3_65 == 0x00000001 l0000126A
// DataOut: r0 r1 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r1:<invalid> r3:<invalid> r2:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// LocalsOut: Local -0008(0) Local -000C(0) Local -0010(0) Local -0014(0) Local -0018(0)

l0000126A:
	word32 r2_102
	word32 r4_81
	word32 r5_82
	word32 r6_83
	word32 r7_84
	word32 sp_85
	fn0000833C(r0 + 0x00000024, r1_64, r2_66, r3_65 - 0x00000001, r0, r5, r3, r4, r5, r6, r7, out r4_81, out r5_82, out r6_83, out r7_84, out sp_85)
	branch r0 != 0x00000024 l00001298
// DataOut: r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r1:<invalid> r3:<invalid> r2:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00001298:
	r2_102 = Mem70[0x000012D0:word32]
// DataOut: r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r4:<invalid> r0:r0 + 0x00000024 r5:<invalid> r6:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00001278:
	word32 r1_101 = Mem70[r4_81 + 76:word32]
	r2_102 = Mem70[0x000012D2:word32]
	branch Mem70[r2_102 + r1_101 * 0x00000014 + 8:word32] != 0x00000000 l0000129A
// DataOut: r1 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r4:<invalid> r0:r0 + 0x00000024 r5:<invalid> r6:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l0000129A:
	word32 r3_89 = Mem70[r4_81 + 88:word32]
	word32 lr_90 = Mem70[r2_102 + 124:word32]
	Mem94[r4_81 + 76:word32] = r3_89
	Mem99[r4_81 + 56:word32] = 0x00000002 - r3_89
	Mem100[r2_102 + 124:word32] = 0x00000001 << r3_89 | lr_90 << 0x00000000
	fn000082EC()
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r4:<invalid> r0:r0 + 0x00000024 r5:<invalid> r6:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000012C4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r4:<invalid> r0:<invalid> r5:0x00000001 r6:<invalid> lr:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00001288:
	Mem110[r2_102 + 124:word32] = Mem70[r2_102 + 124:word32] & ~((0x00000001 << r1_101) << 0x00000000)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r4:<invalid> r0:r0 + 0x00000024 r5:<invalid> r6:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00001296:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r4:<invalid> r0:0x00000001 r5:<invalid> r6:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00001266:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r1:<invalid> r3:<invalid> r2:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

xTaskPriorityDisinherit_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r2:<invalid> lr:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr



void pvTaskIncrementMutexHeldCount()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: sp
pvTaskIncrementMutexHeldCount_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000012D4:
	word32 r3_3 = Mem0[0x000012EC:word32]
	word32 r2_4 = Mem0[r3_3 + 4:word32]
	branch r2_4 == 0x00000000 l000012E2
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l000012DA:
	word32 r1_15 = Mem0[r3_3 + 4:word32]
	Mem19[r1_15 + 92:word32] = Mem0[r1_15 + 92:word32] + 0x00000001
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid>

l000012E2:
	word32 sp_7
	word32 r3_8
	word32 pc_9
	word32 r2_10
	word32 r1_11
	byte NZCV_12
	word32 r0_13
	word32 lr_14
	call lr (retsize: 0;)
		uses: lr,r0_5,r2_4,r3_3,sp_1
		defs: lr_14,NZCV_12,pc_9,r0_13,r1_11,r2_10,r3_8,sp_7
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r1:<invalid>

pvTaskIncrementMutexHeldCount_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r1:<invalid> r0:<invalid>



void fn000012EC(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr
// LiveOut:
// Trashed: fp lr r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: r0 sp
l000012EC:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000012EC_entry:
// DataOut: cpsr
// DataOut (flags): 
// SymbolicIn: sp:fp

l000012EC:
// DataOut: cpsr
// DataOut (flags): 
// SymbolicIn: sp:fp

l000012EE_thunk_prvRestoreContextOfFirstTask:
	prvRestoreContextOfFirstTask(cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0

fn000012EC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> fp:<invalid> lr:<invalid>



void prvRestoreContextOfFirstTask(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr
// LiveOut:
// Trashed: fp lr r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
prvRestoreContextOfFirstTask_entry:
// DataOut: cpsr
// DataOut (flags): 
// SymbolicIn: sp:fp

l000012F0:
	__msr(cpsr, Mem0[Mem0[Mem0[0x00001728:word32]:word32]:word32])
	word32 r1_8 = Mem0[Mem0[0x00001334:word32]:word32]
	word32 r0_9 = Mem0[r1_8:word32]
	word32 r2_11 = Mem0[0x0000172E:word32]
	word32 r5_13 = Mem0[r1_8 + 0x00000008:word32]
	word32 r6_14 = Mem0[r1_8 + 0x0000000C:word32]
	word32 r7_15 = Mem0[r1_8 + 0x00000010:word32]
	word32 r8_16 = Mem0[r1_8 + 0x00000014:word32]
	word32 r9_17 = Mem0[r1_8 + 0x00000018:word32]
	word32 r10_18 = Mem0[r1_8 + 0x0000001C:word32]
	word32 fp_19 = Mem0[r1_8 + 0x00000020:word32]
	Mem21[r2_11:word32] = Mem0[r1_8 + 0x00000004:word32]
	Mem22[r2_11 + 4:word32] = r5_13
	Mem23[r2_11 + 8:word32] = r6_14
	Mem24[r2_11 + 12:word32] = r7_15
	Mem25[r2_11 + 16:word32] = r8_16
	Mem26[r2_11 + 20:word32] = r9_17
	Mem27[r2_11 + 24:word32] = r10_18
	Mem28[r2_11 + 28:word32] = fp_19
	word32 r3_30 = Mem28[r0_9:word32]
	__msr(cpsr, r3_30)
	__msr(cpsr, r0_9 + 36)
	__msr(cpsr, 0x00000000)
	word32 lr_41 = ~0x00000002
	word32 sp_42
	word32 r0_43
	word32 pc_44
	word32 cpsr_45
	word32 r3_46
	word32 r1_47
	word32 r2_48
	word32 r4_49
	word32 r5_50
	word32 r6_51
	word32 r7_52
	word32 r8_53
	word32 r9_54
	word32 r10_55
	word32 fp_56
	word32 lr_57
	call lr_41 (retsize: 0;)
		uses: cpsr,fp_38,lr_41,r0_40,r1_20,r10_37,r2_29,r3_30,r4_31,r5_32,r6_33,r7_34,r8_35,r9_36,sp_1
		defs: cpsr_45,fp_56,lr_57,pc_44,r0_43,r1_47,r10_55,r2_48,r3_46,r4_49,r5_50,r6_51,r7_52,r8_53,r9_54,sp_42
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

prvRestoreContextOfFirstTask_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00000000 r3:<invalid> r1:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> fp:<invalid> lr:~0x00000002



void fn00001330(word32 r1, word32 r2, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r1 r2
// LiveOut:
// Trashed: NZCV fp lr r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
l00001330:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

l000011AA_thunk_vTaskMissedYield:
	vTaskMissedYield()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00001330_entry:
// DataOut: cpsr r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001330:
// DataOut: cpsr r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001332_thunk_prvSVCHandler:
	prvSVCHandler(0x00000000, r2, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00000000

fn00001330_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> fp:<invalid> lr:<invalid>



void prvSVCHandler(word32 r0, word32 r2, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r2
// LiveOut:
// Trashed: NZCV fp lr r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
prvSVCHandler_entry:
// DataOut: cpsr r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001334:
	word32 r3_5 = (word32) Mem0[Mem0[r0 + 24:word32] - 2:byte]
	branch r3_5 == 0x00000001 l0000135C
// DataOut: cpsr r2 r3
// DataOut (flags): C
// SymbolicIn: sp:fp

l0000135C:
	Mem41[r2:word32] = r3_5
// DataOut: cpsr
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l0000135E_thunk_fn000012EC:
	fn000012EC(cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l0000133E:
	branch r3_5 <u 0x00000001 l00001350
// DataOut: cpsr r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l00001340:
	branch r3_5 != 0x00000002 l0000134E
// DataOut: cpsr r2
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l0000134E:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l00001344:
	__msr(cpsr, __mrs(cpsr) & ~0x00000001)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l00001350:
	word32 sp_25
	word32 r3_26
	word32 r0_27
	byte NZCV_28
	byte Z_29
	byte C_30
	word32 cpsr_31
	word32 r1_32
	word32 r2_33
	word32 r4_34
	word32 lr_35
	call lr (retsize: 0;)
		uses: C_8,cpsr,lr,NZCV_6,r0,r1,r2,r3_5,r4,sp_1,Z_7
		defs: C_30,cpsr_31,lr_35,NZCV_28,r0_27,r1_32,r2_33,r3_26,r4_34,sp_25,Z_29
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid> r4:<invalid>

prvSVCHandler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> fp:<invalid> lr:<invalid>



void fn00001378()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00001378_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00001378_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001378:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void pxPortInitialiseStack(word32 r0, word32 r1, word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2 r3
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 sp
pxPortInitialiseStack_entry:
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000137C:
	word32 r3_10
	r3_10 = r3
	branch r3 != 0x00000001 l00001384
// DataOut: r0 r1 r2 r3
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00001382_1:
	r3_10 = 0x00000002
// DataOut: r0 r1 r2 r3
// DataOut (flags): Z
// SymbolicIn: sp:fp - 8 -8(fp):r4 -4(fp):r5

l00001384:
	branch r3 == 0x00000001 l00001390
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:0x00000002 -8(fp):r4 -4(fp):r5

l0000138E_1:
	r3_10 = 0x00000003
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:0x00000002 r5:0x01000000 r4:0x00000000 -8(fp):r4 -4(fp):r5

l00001390:
	Mem15[r0 - 32:word32] = r2
	word32 r1_18 = r1 & ~0x00000001
	Mem20[r0 + -8:word32] = r1_18
	Mem21[r0 + -4:word32] = 0x01000000
	Mem22[r0 - 12:word32] = 0x00000000
	Mem23[r0 - 68:word32] = r3_10
	word32 sp_29
	word32 r3_30
	byte NZCV_31
	word32 r4_32
	word32 r5_33
	byte Z_34
	word32 r2_35
	word32 r0_36
	word32 r1_37
	word32 lr_38
	call lr (retsize: 0;)
		uses: dwLoc04_9,dwLoc08_7,lr,NZCV_3,r0_27,r1_18,r2_19,r3_13,r4_24,r5_25,sp_26,Z_4
		defs: lr_38,NZCV_31,r0_36,r1_37,r2_35,r3_30,r4_32,r5_33,sp_29,Z_34
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> r5:0x01000000 r4:0x00000000 -8(fp):r4 -4(fp):r5

pxPortInitialiseStack_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r5:r5 r4:r4 r1:r1 & ~0x00000001 r2:r0 - 0x00000044 r0:r0 - 0x00000044 -8(fp):r4 -4(fp):r5



void xPortStartScheduler(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 r6 sp
xPortStartScheduler_entry:
// DataOut: cpsr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000013B0:
	word32 r3_3 = Mem0[0x000014EC:word32]
	word32 r1_12 = Mem0[0x000014F2:word32]
	Mem14[r3_3:word32] = Mem0[r3_3:word32] | 0x00FF0000
	Mem17[r3_3:word32] = Mem14[r3_3:word32] | 0xFF000000
	word32 r3_18 = Mem17[r1_12:word32]
	branch r3_18 == 0x00000800 l000013FC
// DataOut: cpsr
// DataOut (flags): 
// SymbolicIn: sp:fp

l000013CE:
	word32 r2_43 = Mem17[0x000014F8:word32]
	word32 r3_44 = Mem17[0x000014FE:word32]
	Mem45[Mem17[0x000014F6:word32]:word32] = 0x00004E1F
	Mem46[r2_43:word32] = 0x00000007
	Mem47[r3_44:word32] = 0x00000000
	__msr(cpsr, Mem47[Mem47[Mem47[0x0000172A:word32]:word32]:word32])
	__cps_id()
	__cps_id()
	__dsb_sy()
	__isb_sy()
	__syscall(0x00000000)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 12 r3:<invalid> r2:<invalid> r1:<invalid> -12(fp):r4 -8(fp):r5 -4(fp):r6

l000013FC:
	word32 sp_26
	word32 r3_27
	word32 pc_28
	word32 r4_29
	word32 r5_30
	word32 r6_31
	word32 r2_32
	word32 r1_33
	byte NZCV_34
	byte Z_35
	word32 r0_36
	word32 cpsr_37
	word32 lr_38
	call lr (retsize: 0;)
		uses: dwLoc04_10,dwLoc08_8,dwLoc0C_6,lr,NZCV_19,r1_12,r2_16,r3_18,r4_21,r5_22,r6_23,sp_24,Z_20
		defs: cpsr_37,lr_38,NZCV_34,pc_28,r0_36,r1_33,r2_32,r3_27,r4_29,r5_30,r6_31,sp_26,Z_35
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 12 r3:<invalid> r2:<invalid> r1:<invalid> r5:0x00004E1F r0:<invalid> r4:<invalid> -12(fp):r4 -8(fp):r5 -4(fp):r6

xPortStartScheduler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r1:<invalid> r5:r5 r0:<invalid> r4:r4 r6:r6 -12(fp):r4 -8(fp):r5 -4(fp):r6



void vPortEndScheduler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
vPortEndScheduler_entry:
// DataOut: r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001550:
	word32 sp_3
	word32 lr_4
	call lr (retsize: 0;)
		uses: lr,sp_1
		defs: lr_4,sp_3
	return
// DataOut: r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

vPortEndScheduler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vPortStoreTaskMPUSettings(word32 r0, word32 r1, word32 r2, word32 r3, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r2 r3
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r7 sp
// Preserved: r5
vPortStoreTaskMPUSettings_entry:
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00001554:
	byte Z_159 = cond(r1)
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00001558:
	word32 r4_157
	branch Z_159 l000015DA
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): Z
// SymbolicIn: sp:fp - 8 r4:<invalid> r3:<invalid> r2:<invalid> -8(fp):r4 -4(fp):r5

l000015DA:
	r4_157 = Mem0[0x0000166A:word32]
// DataOut: cpsr r0 r1 r2 r3 r4
// DataOut (flags): Z
// SymbolicIn: sp:fp - 8 r4:<invalid> r3:<invalid> r2:<invalid> -8(fp):r4 -4(fp):r5

l0000155A:
	word32 r3_101
	word32 r2_119
	byte ZC_117
	branch r3 != 0x00000000 l000015B0
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:<invalid> r3:<invalid> r2:<invalid> -8(fp):r4 -4(fp):r5

l000015B0:
	r2_119 = r2 | 0x00000014
	Mem155[r0:word32] = r2_119
	r3 = r3 << 2
	ZC_117 = cond(r3 - 0x00000020) (alias)
	branch r3 <=u 0x00000020 l00001650
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): ZC
// SymbolicIn: sp:fp - 8 r4:<invalid> r3:<invalid> r2:<invalid> -8(fp):r4 -4(fp):r5

l00001650:
	r3_101 = 0x00000008
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): ZC
// SymbolicIn: sp:fp - 8 r3:<invalid> r2:<invalid> r4:<invalid> -8(fp):r4 -4(fp):r5

l000015BC:
	r2 = 0x00000040
	r4_157 = 0x00000005
// DataOut: cpsr r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> r2:<invalid> r4:<invalid> -8(fp):r4 -4(fp):r5

l000015C4:
	Z_159 = cond(0xFFFFFFE6) (alias)
	branch 0xFFFFFFE6 == 0x00000000 l000015D6
// DataOut: cpsr r0 r1 r2 r3 r4
// DataOut (flags): Z
// SymbolicIn: sp:fp - 8 r3:<invalid> r2:0x00000040 r4:0x00000005 -8(fp):r4 -4(fp):r5

l000015C8:
	Z_159 = cond(r3 - 0x00000040) (alias)
	r2 = 0x00000080
	branch r3 >u 0x00000040 l000015CE_thunk_fn000017BE
// DataOut: cpsr r0 r1 r2 r4
// DataOut (flags): Z
// SymbolicIn: sp:fp - 8 r3:<invalid> r2:0x00000040 r4:0x00000005 -8(fp):r4 -4(fp):r5

l000015CE_thunk_fn000017BE:
	word32 r4_168
	word32 sp_169
	fn000017BE(out r4_168, out sp_169)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> r2:0x00000080 r4:0x00000005 -8(fp):r4 -4(fp):r5

l000015D0:
	r3 = Mem155[0x00001664:word32]
// DataOut: cpsr r0 r1 r2 r3 r4
// DataOut (flags): Z
// SymbolicIn: sp:fp - 8 r3:<invalid> r2:0x00000080 r4:0x00000005 -8(fp):r4 -4(fp):r5

l000015D2:
	r4_157 = r3 | r4_157 << 0x00000001
// DataOut: cpsr r0 r1 r2 r3 r4
// DataOut (flags): Z
// SymbolicIn: sp:fp - 8 r4:<invalid> r3:<invalid> r2:<invalid> -8(fp):r4 -4(fp):r5

l000015D6:
	Mem28[r0 + 4:word32] = r4_157
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): Z
// SymbolicIn: sp:fp - 8 r4:<invalid> r3:<invalid> r2:<invalid> -8(fp):r4 -4(fp):r5

l0000155C:
	word32 r4_98 = Mem0[r1 + 4:word32]
	branch r4_98 == 0x00000000 l000015A2
// DataOut: cpsr r0 r1 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:<invalid> r3:<invalid> r2:<invalid> -8(fp):r4 -4(fp):r5

l000015A2:
	Mem148[r0 + 12:word32] = r4_98
	r3_101 = 0x00000015
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r5:0x00000005 r4:<invalid> r3:<invalid> r2:<invalid> -8(fp):r4 -4(fp):r5

l00001562:
	word32 r3_105 = Mem0[r1:word32]
	Mem110[r0 + 8:word32] = r3_105 | 0x00000015
	branch r4_98 <=u 0x00000020 l0000164C
// DataOut: cpsr r0 r1 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r5:0x00000005 r4:<invalid> r3:<invalid> r2:<invalid> -8(fp):r4 -4(fp):r5

l0000164C:
	word32 r2_120 = Mem110[0x00001680:word32]
// DataOut: r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r5:0x00000005 r4:<invalid> r3:<invalid> r2:0x00000015 -8(fp):r4 -4(fp):r5

l00001630:
	Mem125[r0 + 16:word32] = 0x00000016
	word32 r2_121 = r3_105 | 0x00000015 | r2_120 << 0x00000001
	Mem126[r0 + 12:word32] = r2_121
	Mem127[r0 + 20:word32] = 0x00000000
	Mem128[r0 + 28:word32] = 0x00000000
	Mem129[r0 + 24:word32] = 0x00000017
	word32 sp_133
	word32 r4_134
	word32 r5_135
	word32 r1_136
	byte NZCV_137
	byte Z_138
	word32 r3_139
	word32 r2_140
	byte NZC_141
	word32 r0_142
	byte ZC_143
	word32 pc_144
	word32 lr_145
	word32 cpsr_146
	call lr (retsize: 0;)
		uses: cpsr,dwLoc04_6,dwLoc08_4,lr,NZC_15,NZCV_108,pc,r0,r1_124,r2_121,r3_123,r4_130,r5_131,sp_132,Z_18,ZC_109
		defs: cpsr_146,lr_145,NZC_141,NZCV_137,pc_144,r0_142,r1_136,r2_140,r3_139,r4_134,r5_135,sp_133,Z_138,ZC_143
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r5:0x00000005 r4:<invalid> r3:<invalid> r2:<invalid> -8(fp):r4 -4(fp):r5

l00001570:
	r2 = 0x00000040
	r3_101 = 0x00000005
// DataOut: cpsr r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r5:0x00000005 r4:<invalid> r3:<invalid> r2:0x00000015 -8(fp):r4 -4(fp):r5

l00001578:
	branch 0xFFFFFFE6 == 0x00000000 l000015A8
// DataOut: cpsr r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r5:0x00000005 r4:<invalid> r3:0x00000005 r2:0x00000040 -8(fp):r4 -4(fp):r5

l000015A8:
	Mem104[r0 + 8:word32] = r3_101
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r5:0x00000005 r4:<invalid> r3:<invalid> r2:<invalid> -8(fp):r4 -4(fp):r5

l0000157C:
	ZC_117 = cond(r4_98 - 0x00000040) (alias)
	r2_119 = 0x00000080
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): ZC
// SymbolicIn: sp:fp - 8 r5:0x00000005 r4:<invalid> r3:0x00000005 r2:0x00000040 -8(fp):r4 -4(fp):r5

l00001582:
	branch ZC_117 l00001582_thunk_fn00001772
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> r2:<invalid> r5:0x00000005 r4:<invalid> -8(fp):r4 -4(fp):r5

l00001582_thunk_fn00001772:
	fn00001772(r1, r2_119, r3_101, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> r2:<invalid> r5:0x00000005 r4:<invalid> -8(fp):r4 -4(fp):r5

l00001584:
	r3_101 = r3_101 << 1
	r2 = Mem0[r1 + 8:word32] | 0x00000001
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> r2:<invalid> r5:0x00000005 r4:<invalid> -8(fp):r4 -4(fp):r5

l0000158C:
	word32 r3_57 = r3_101 | r2
	Mem58[r0 + 12:word32] = r3_57
	branch true l0000159C_thunk_fn0000175A
// DataOut: cpsr r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r5:0x00000005 r4:<invalid> r3:<invalid> r2:<invalid> -8(fp):r4 -4(fp):r5

l0000159C_thunk_fn0000175A:
	fn0000175A(r1 + 0x0000000C, r2, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r5:0x00000006 r4:<invalid> r3:<invalid> r1:r1 + 0x0000000C r0:r0 + 0x00000008 r2:<invalid> -8(fp):r4 -4(fp):r5

l0000159E:
	word32 sp_70
	word32 r4_71
	word32 r5_72
	word32 r1_73
	byte NZCV_74
	byte Z_75
	word32 r3_76
	word32 r2_77
	byte NZC_78
	word32 r0_79
	byte ZC_80
	word32 pc_81
	word32 lr_82
	word32 cpsr_83
	call lr (retsize: 0;)
		uses: cpsr,dwLoc04_6,dwLoc08_4,lr,NZC_53,NZCV_60,pc,r0_63,r1_62,r2_54,r3_57,r4_64,r5_65,sp_66,Z_61,ZC_52
		defs: cpsr_83,lr_82,NZC_78,NZCV_74,pc_81,r0_79,r1_73,r2_77,r3_76,r4_71,r5_72,sp_70,Z_75,ZC_80
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r5:0x00000006 r4:<invalid> r3:<invalid> r1:r1 + 0x0000000C r0:r0 + 0x00000008 r2:<invalid> -8(fp):r4 -4(fp):r5

vPortStoreTaskMPUSettings_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r7:<invalid> -8(fp):r4 -4(fp):r5



void xPortPendSVHandler(word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 fp, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr fp r10 r4 r5 r6 r7 r8 r9
// LiveOut:
// Trashed: NZCV fp lr r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved: lr sp
xPortPendSVHandler_entry:
// DataOut: cpsr fp r10 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00001688:
	word32 r0_3 = __mrs(cpsr)
	word32 r2_6 = Mem0[Mem0[0x000016E4:word32]:word32]
	Mem8[r0_3 + -36:word32] = __mrs(cpsr)
	Mem10[r0_3 + -32:word32] = r4
	Mem12[r0_3 + -28:word32] = r5
	Mem14[r0_3 + -24:word32] = r6
	Mem16[r0_3 + -20:word32] = r7
	Mem18[r0_3 + -16:word32] = r8
	Mem20[r0_3 + -12:word32] = r9
	Mem22[r0_3 + -8:word32] = r10
	Mem24[r0_3 + -4:word32] = fp
	Mem26[r2_6:word32] = r0_3 - 36
	__msr(cpsr, 0x000000BF)
	fn000010D4(0x000000BF)
	__msr(cpsr, 0x00000000)
	word32 r1_36 = Mem26[Mem26[fp - 8:word32]:word32]
	word32 lr_34 = Mem26[fp - 4:word32]
	word32 r0_37 = Mem26[r1_36:word32]
	word32 r2_39 = Mem26[0x0000172E:word32]
	word32 r5_41 = Mem26[r1_36 + 0x00000008:word32]
	word32 r6_42 = Mem26[r1_36 + 0x0000000C:word32]
	word32 r7_43 = Mem26[r1_36 + 0x00000010:word32]
	word32 r8_44 = Mem26[r1_36 + 0x00000014:word32]
	word32 r9_45 = Mem26[r1_36 + 0x00000018:word32]
	word32 r10_46 = Mem26[r1_36 + 0x0000001C:word32]
	word32 fp_47 = Mem26[r1_36 + 0x00000020:word32]
	Mem49[r2_39:word32] = Mem26[r1_36 + 0x00000004:word32]
	Mem50[r2_39 + 4:word32] = r5_41
	Mem51[r2_39 + 8:word32] = r6_42
	Mem52[r2_39 + 12:word32] = r7_43
	Mem53[r2_39 + 16:word32] = r8_44
	Mem54[r2_39 + 20:word32] = r9_45
	Mem55[r2_39 + 24:word32] = r10_46
	Mem56[r2_39 + 28:word32] = fp_47
	word32 r3_58 = Mem56[r0_37:word32]
	__msr(cpsr, r3_58)
	__msr(cpsr, r0_37 + 36)
	word32 sp_68
	word32 cpsr_69
	word32 r0_70
	word32 r3_71
	word32 pc_72
	word32 r2_73
	word32 r1_74
	word32 r4_75
	word32 r5_76
	word32 r6_77
	word32 r7_78
	word32 r8_79
	word32 r9_80
	word32 r10_81
	word32 fp_82
	word32 lr_83
	call lr_34 (retsize: 0;)
		uses: cpsr,dwLoc04_30,dwLoc08_28,fp_66,lr_34,r0_67,r1_48,r10_65,r2_57,r3_58,r4_59,r5_60,r6_61,r7_62,r8_63,r9_64,sp_35
		defs: cpsr_69,fp_82,lr_83,pc_72,r0_70,r1_74,r10_81,r2_73,r3_71,r4_75,r5_76,r6_77,r7_78,r8_79,r9_80,sp_68
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

xPortPendSVHandler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> lr:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> fp:<invalid> -8(fp):<invalid> -4(fp):lr



void xPortSysTickHandler(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xPortSysTickHandler_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000016E4:
	word32 r4_8 = __mrs(cpsr)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	fn00000D68()
	branch r0 == 0x00000000 l00001708
// DataOut: cpsr r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00001700:
	Mem19[Mem0[0x00001714:word32]:word32] = 0x10000000
// DataOut: cpsr r4 sp
// DataOut (flags): 
// SymbolicIn: -8(fp):r4 -4(fp):lr

l00001708:
	__msr(cpsr, r4_8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r2:0x10000000 r3:<invalid> -8(fp):r4 -4(fp):lr

xPortSysTickHandler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r2:0x10000000 r3:<invalid> sp:fp r4:r4 -8(fp):r4 -4(fp):lr



void vPortSVCHandler(word32 r1, word32 r2, word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr lr r1 r2
// LiveOut:
// Trashed: NZCV fp lr r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
vPortSVCHandler_entry:
// DataOut: cpsr lr r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001714:
	branch (lr & 0x00000004) != 0x00000000 l0000171E
// DataOut: cpsr r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000171A_1:
	__mrs(cpsr)
// DataOut: cpsr r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000171E:
	__mrs(cpsr)
// DataOut: cpsr r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>

l00001722_thunk_fn00001330:
	fn00001330(r1, r2, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>

vPortSVCHandler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> fp:<invalid> lr:<invalid>



void fn00001728()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00001728_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00001728_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001728:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void pvPortMalloc(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r7 sp
// Preserved:
pvPortMalloc_entry:
// DataOut: cpsr r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000172C:
	branch r0 << 29 == 0x00000000 l00001738
// DataOut: cpsr r0 r1 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001734_1:
// DataOut: cpsr r0 r1 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:r0 r3:r0 << 29 -8(fp):r4 -4(fp):lr

l00001738:
	word32 r0_15
	word32 r2_16
	word32 r4_17
	fn00000A08(r0, out r0_15, out r2_16, out r4_17)
	word32 r3_20 = Mem0[0x00001782:word32]
// DataOut: cpsr r1 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:<invalid> r3:r0 << 29 -8(fp):r4 -4(fp):lr

l0000173E_thunk_fn00001740:
	fn00001740(r1, r3_20, r4_17, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:<invalid> r3:<invalid> r0:0x00000000 r2:<invalid> -8(fp):r4 -4(fp):lr

pvPortMalloc_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> r5:<invalid> r7:<invalid> -8(fp):r4 -4(fp):lr



void fn00001740(word32 r1, word32 r3, word32 r4, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r1 r3 r4
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r7 sp
// Preserved:
fn00001740_entry:
// DataOut: cpsr r1 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001740:
	sp = v3
	r2 = Mem0[r3:word32]
	branch r2 == 0x00000000 l00001770
// DataOut: cpsr r1 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001770:
	r2 = r3 + 0x0000000C
// DataOut: cpsr r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:v3 r2:<invalid>

l00001770_thunk_fn00001772:
	fn00001772(r1, r2, r3, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r2:r3 + 0x0000000C

l00001744:
	r1 = 0x000005B3
	r2 = Mem0[r3 + 1472:word32]
	r4 = r4 + r2
	NZCV = cond(r4 - 0x000005B3)
	ZC = NZCV (alias)
	branch Test(UGT,ZC) l00001762
// DataOut: cpsr r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:v3 r2:<invalid>

l00001750_thunk_fn0000175A:
	fn0000175A(r1, r2, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r2:<invalid> r1:0x000005B3 r4:<invalid>

l00001752:
	NZCV = cond(r2 - r4)
	C = NZCV (alias)
	branch Test(UGE,C) l00001762
// DataOut: cpsr r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:v3 r2:<invalid> r1:0x000005B3 r4:<invalid>

l00001754_thunk_fn0000175A:
	fn0000175A(r1, r2, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r2:<invalid> r1:0x000005B3 r4:<invalid>

l00001756:
	r1 = Mem0[r3:word32]
	Mem0[r3 + 1472:word32] = r4
// DataOut: cpsr r1 r2
// DataOut (flags): 
// SymbolicIn: sp:v3 r2:<invalid> r1:0x000005B3 r4:<invalid>

l00001758_thunk_fn0000175A:
	fn0000175A(r1, r2, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r2:<invalid> r1:<invalid> r4:<invalid>

fn00001740_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r1:<invalid> r4:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid>



void fn0000175A(word32 r1, word32 r2, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r1 r2
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r7 sp
// Preserved:
l0000175A:
	r4 = r1 + r2
	r0 = fn00000E68(r1, r2, cpsr, out r1, out r2, out r3, out r4, out r5, out r7)
// DataOut: sp
// DataOut (flags): 
// SymbolicIn:

l00001762:
	r0 = r4
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000175A_entry:
	def fp
	def r1
	def r2
	def cpsr
	def Mem0
// DataOut: cpsr r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000175A:
	sp_1 = fp
	NZCV_2 = cond(0x00000000)
	r4_5 = r1 + r2
	r0_13 = fn00000E68(r1, r2, cpsr, out r1_7, out r2_8, out r3_9, out r4_10, out r5_11, out r7_12)
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001762_in_fn0000175A:
	r0_14 = r4_10
	r4_16 = Mem0[sp_1:word32]
	sp_17 = sp_1 + 8
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r2:<invalid> r1:<invalid>

fn0000175A_exit:
	r0_18 = PHI(r0_14, r0)
	r4_19 = PHI(r4_16, r4)
	sp_20 = PHI(sp_17, sp)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r2:<invalid> r1:<invalid>



void fn00001772(word32 r1, word32 r2, word32 r3, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r1 r2 r3
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r7 sp
// Preserved: sp
l00001772:
	r2 = r2 & ~0x00000007
	Mem0[r3:word32] = r2
// DataOut: cpsr r1 r3 r4
// DataOut (flags): 
// SymbolicIn:

l00001778_thunk_fn00001740:
	fn00001740(r1, r3, r4, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00001772_entry:
	def fp
	def r1
	def r2
	def r3
	def cpsr
// DataOut: cpsr r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001772:
	sp_1 = fp
	r4_3 = r1 << 8
	NZC_4 = cond(r4_3)
	r2_6 = r2 & ~0x00000007
	Mem7[r3:word32] = r2_6
// DataOut: cpsr r1 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000177A_thunk_fn00001740:
	fn00001740(r1, r3, r4_3, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r1 << 8 r2:r2 & ~0x00000007

fn00001772_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid>



word32 fn0000177C(word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r6
// LiveOut: r0
// Trashed: NZC r0
// Preserved: sp
fn0000177C_entry:
// DataOut: cpsr d1 d14 r1 r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000177C:
// DataOut: cpsr d1 d14 r0 r1 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000177E_thunk_vPortFree:
	vPortFree()
	return 0x00000000
// DataOut: cpsr d1 d14 r0 r1 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00000000

fn0000177C_exit:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00000000



void vPortFree()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
vPortFree_entry:
// DataOut: cpsr d1 d14 r0 r1 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001780:
	word32 sp_3
	word32 lr_4
	call lr (retsize: 0;)
		uses: lr,sp_1
		defs: lr_4,sp_3
	return
// DataOut: cpsr d1 d14 r0 r1 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

vPortFree_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vPortInitialiseBlocks()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
vPortInitialiseBlocks_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001784:
	word32 r3_4 = Mem0[0x00001796:word32]
	Mem5[r3_4 + 1472:word32] = 0x00000000
	word32 sp_7
	word32 r2_8
	word32 r3_9
	word32 pc_10
	word32 lr_11
	call lr (retsize: 0;)
		uses: lr,r2_2,r3_4,sp_1
		defs: lr_11,pc_10,r2_8,r3_9,sp_7
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

vPortInitialiseBlocks_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:0x00000000 r3:<invalid>



word32 fn00001790(word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r6
// LiveOut: r0
// Trashed: NZCV r0 r3
// Preserved: sp
fn00001790_entry:
// DataOut: cpsr r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001790:
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001792_thunk_xPortGetFreeHeapSize:
	return xPortGetFreeHeapSize()
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00000000

fn00001790_exit:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r3:<invalid>



word32 xPortGetFreeHeapSize()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r0
// Trashed: NZCV r0 r3
// Preserved: sp
xPortGetFreeHeapSize_entry:
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001794:
	word32 sp_9
	word32 r3_10
	word32 pc_11
	word32 r0_12
	byte NZCV_13
	word32 lr_14
	call lr (retsize: 0;)
		uses: lr,NZCV_7,r0_6,r3_3,sp_1
		defs: lr_14,NZCV_13,pc_11,r0_12,r3_10,sp_9
	return r0_12
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

xPortGetFreeHeapSize_exit:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>



void fn000017A4(word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000017A4_entry:
// DataOut: cpsr r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000017A4:
// DataOut: cpsr r0 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000017A6_thunk_xEventGroupCreate:
	xEventGroupCreate()
	return
// DataOut: cpsr r0 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00000000
// Terminates process

fn000017A4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xEventGroupCreate()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xEventGroupCreate_entry:
// DataOut: cpsr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000017A8:
	fn00001728()
	branch 0x00000018 == 0x00000000 l000017BE
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l000017B2_thunk_fn000017BE:
	word32 r4_19
	word32 sp_20
	fn000017BE(out r4_19, out sp_20)
	return
// DataOut: cpsr r0 r4 sp
// DataOut (flags): 
// SymbolicIn: r4:r0 -8(fp):r4 -4(fp):lr

l000017B4:
	Mem14[0x00000018:word32] = 0x00000000
	fn000082CC(0x0000001C)
// DataOut: cpsr
// DataOut (flags): 
// SymbolicIn: r4:r0 -8(fp):r4 -4(fp):lr

l000017BA_thunk_fn000017BE:
	word32 r4_16
	word32 sp_17
	fn000017BE(out r4_16, out sp_17)
	return
// DataOut: cpsr r0 r4 sp
// DataOut (flags): 
// SymbolicIn: r4:r0 r3:<invalid> r0:r0 + 4 r1:0xFFFFFFFF r2:0x00000000 -8(fp):r4 -4(fp):lr

xEventGroupCreate_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r3:<invalid> r0:<invalid> r1:0xFFFFFFFF r2:0x00000000 -8(fp):r4 -4(fp):lr



word32 fn000017BE(ptr32 & r4Out, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r0 r4 sp
// Trashed: r0 r4 sp
// Preserved:
fn000017BE_entry:
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l000017BE:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l000017BE_thunk_fn000017C0:
	word32 sp_5
	word32 r4_6
	*r4Out = fn000017C0(dwArg00, out sp_5)
	return r4
// DataOut: cpsr r0 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 r0:r4

fn000017BE_exit:
// DataOut: r0 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:r4 r4:<invalid>



word32 fn000017C0(word32 dwArg00, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r4 sp
// Trashed: r4 sp
// Preserved:
// Stack args: Stack +0000(32)
fn000017C0_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l000017C0:
	word32 sp_4
	*spOut = fp + 8
	return dwArg00
// DataOut: cpsr r0 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn000017C0_exit:
// DataOut: r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 8 r4:<invalid>



void xEventGroupWaitBits(word32 r0, word32 r1, word32 r2, word32 r3, word32 cpsr, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r2 r3
// LiveOut:
// Trashed: NZCV lr r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
// Stack args: Stack +0000(32)
xEventGroupWaitBits_entry:
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l000017C4:
	byte Z_198
	word32 r0_23
	word32 r2_24
	word32 r4_25
	bool C_26 = fn00000A08(r0, out r0_23, out r2_24, out r4_25)
	word32 r7_18 = r3
	word32 r5_20 = r1
	word32 r4_194 = Mem0[r0:word32]
	branch r3 != 0x00000000 l000017F2
// DataOut: cpsr r1 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l000017F2:
	Z_198 = cond(r1 & ~(r4_194 << 0x00000000)) (alias)
// DataOut: cpsr r1 r4 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:fp - 24 r6:r0 r7:r3 r5:r1 r8:r2 r4:<invalid> r0:0x00000000 r2:<invalid> r3:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr
// LocalsOut: fp(32) Stack +0000(32)

l000017D8:
	word32 r4_168 = r4_194 + r1 + C_26
	branch r4_168 == 0x00000000 l000017F4
// DataOut: cpsr r1 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:r0 r7:r3 r5:r1 r8:r2 r4:<invalid> r0:0x00000000 r2:<invalid> r3:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr
// LocalsOut: fp(32) Stack +0000(32)

l000017F4:
	r4_194 = 0x00000000
	Z_198 = cond(0x00000000) (alias)
// DataOut: cpsr r1 r4 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:fp - 24 r6:r0 r7:r3 r5:r1 r8:r2 r4:<invalid> r0:0x00000000 r2:<invalid> r3:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr
// LocalsOut: fp(32) Stack +0000(32)

l000017F6:
	branch Z_198 l000019D8_in_xEventGroupWaitBits
// DataOut: cpsr r1 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:r0 r7:r3 r5:r1 r8:r2 r4:<invalid> r3:<invalid> r0:0x00000000 r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr
// LocalsOut: fp(32) Stack +0000(32)

l000019D8_in_xEventGroupWaitBits:
	fn00008574()
	Mem144[r4_194:word32] = Mem0[r4_194:word32] & ~(r1 << 0x00000000)
	word32 sp_150
	word32 r4_151
	word32 r5_152
	word32 r6_153
	word32 r7_154
	word32 r8_155
	word32 lr_156
	word32 r0_157
	word32 r3_158
	word32 r1_159
	word32 r2_160
	bool C_161
	byte NZCV_162
	byte Z_163
	byte NZC_164
	word32 pc_165
	byte N_166
	word32 cpsr_167
	call fn00C085AC (retsize: 0; depth: 8)
		uses: C_51,cpsr,dwLoc04_14,dwLoc08_12,dwLoc0C_10,dwLoc10_8,dwLoc14_6,dwLoc18_4,lr_148,N_52,NZC_55,NZCV_53,pc,r0_23,r1,r2_24,r3_145,r4_146,r5_147,r6_16,r7_18,r8_22,sp_149,Z_54
		defs: C_161,cpsr_167,lr_156,N_166,NZC_164,NZCV_162,pc_165,r0_157,r1_159,r2_160,r3_158,r4_151,r5_152,r6_153,r7_154,r8_155,sp_150,Z_163
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:r0 r7:r3 r5:r1 r8:r2 r4:<invalid> r3:<invalid> r0:0x00000000 r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l000017F8:
	branch dwArg00 == 0x00000000 l000019E4_in_xEventGroupWaitBits
// DataOut: cpsr r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:r0 r7:r3 r5:r1 r8:r2 r4:<invalid> r3:<invalid> r0:0x00000000 r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr
// LocalsOut: fp(32)

l000019E4_in_xEventGroupWaitBits:
	Mem116[r4_194:word32] = dwArg00
	word32 sp_122
	word32 r4_123
	word32 r5_124
	word32 r6_125
	word32 r7_126
	word32 r8_127
	word32 lr_128
	word32 r0_129
	word32 r3_130
	word32 r1_131
	word32 r2_132
	bool C_133
	byte NZCV_134
	byte Z_135
	byte NZC_136
	word32 pc_137
	byte N_138
	word32 cpsr_139
	call fn00C085AC (retsize: 0; depth: 8)
		uses: C_51,cpsr,dwLoc04_14,dwLoc08_12,dwLoc0C_10,dwLoc10_8,dwLoc14_6,dwLoc18_4,lr_120,N_52,NZC_55,NZCV_60,pc,r0_23,r1,r2_24,r3_117,r4_118,r5_119,r6_16,r7_18,r8_22,sp_121,Z_61
		defs: C_133,cpsr_139,lr_128,N_138,NZC_136,NZCV_134,pc_137,r0_129,r1_131,r2_132,r3_130,r4_123,r5_124,r6_125,r7_126,r8_127,sp_122,Z_135
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:r0 r7:r3 r5:r1 r8:r2 r4:<invalid> r3:<invalid> r0:0x00000000 r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l000017FE:
	branch r2 != 0x00000000 l00001806
// DataOut: cpsr r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:r0 r7:r3 r5:r1 r8:r2 r4:<invalid> r3:<invalid> r0:0x00000000 r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00001804_1:
// DataOut: cpsr r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:r0 r7:r3 r5:r1 r8:r2 r4:<invalid> r3:<invalid> r0:0x00000000 r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00001806:
	word32 r1_114 = 0x01000000
// DataOut: cpsr r1 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:r0 r7:r3 r5:r1 r8:r2 r4:<invalid> r3:<invalid> r1:0x00000000 r0:0x00000000 r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00001808:
	branch r7_18 != 0x00000000 l0000183E
// DataOut: cpsr r1 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:r0 r7:<invalid> r5:<invalid> r8:r2 r4:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l0000183E:
	r1_114 = r1_114 | 0x04000000
// DataOut: cpsr r1 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:r0 r7:<invalid> r5:<invalid> r8:r2 r4:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l0000180C:
	word32 r1_83 = r1_114 | r5_20
	word32 r2_85 = Mem0[fp:word32]
	fn00000FF4(r0 + 0x00000004, r1_83)
	word32 r1_88
	word32 r2_89
	word32 r3_90
	word32 r4_91
	word32 r0_94 = fn00000E68(r1_83, r2_85, cpsr, out r1_88, out r2_89, out r3_90, out r4_91, out r5_20, out r7_18)
	branch r0_94 != 0x00000000 l0000182C
// DataOut: cpsr r0 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:r0 r7:<invalid> r5:<invalid> r8:r2 r4:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr
// Terminates process

l0000181C:
	Mem113[Mem0[0x00001874:word32]:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
// DataOut: cpsr r0 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r0:<invalid> r3:<invalid> sp:<invalid> r5:<invalid> r7:<invalid> r2:<invalid> r1:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l0000182C:
	word32 r2_96
	word32 r0_97 = fn0000111C(r0_94, out r1_114, out r2_96)
	branch r0_97 << 6 >= 0x00000000 l00001840
// DataOut: cpsr r0 r1 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> sp:<invalid> r5:<invalid> r7:<invalid> r1:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00001840:
	Mem110[r0_97 + 24:word32] = r0_97
// DataOut: cpsr r1 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> sp:<invalid> r5:<invalid> r7:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00001842:
// DataOut: cpsr r1 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:r0 r7:<invalid> r5:<invalid> r8:r2 r4:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00001836:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> sp:<invalid> r5:<invalid> r7:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l000017DC:
	word32 r5_174
	branch r2 == 0x00000000 l000017E4
// DataOut: cpsr r1 r2 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:r0 r7:r3 r5:r1 r8:r2 r4:<invalid> r0:0x00000000 r2:<invalid> r3:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l000017E4:
	r5_174 = 0x00000000
// DataOut: cpsr r1 r2 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:r0 r7:r3 r5:r1 r8:r2 r4:<invalid> r0:0x00000000 r2:<invalid> r3:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l000017E2:
	r5_174 = r4_168 & ~(r1 << 0x00000000)
// DataOut: cpsr r1 r2 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:r0 r7:r3 r5:r1 r8:r2 r4:<invalid> r0:0x00000000 r2:<invalid> r3:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l000017E6:
	Mem175[r0:word32] = r5_174
	word32 r1_176
	word32 r2_177
	word32 r3_178
	word32 r4_179
	word32 r5_180
	word32 r7_181
	fn00000E68(r1, r2_24, cpsr, out r1_176, out r2_177, out r3_178, out r4_179, out r5_180, out r7_181)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:r0 r7:r3 r5:<invalid> r8:r2 r4:<invalid> r0:0x00000000 r2:<invalid> r3:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

xEventGroupWaitBits_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r7:<invalid> r5:<invalid> r8:<invalid> r4:<invalid> r3:<invalid> lr:r7 r0:<invalid> r2:<invalid> r1:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr



void fn00001870()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00001870_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00001870_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001870:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void xEventGroupClearBits(word32 r0, word32 r1, word32 r4, word32 r5, word32 r6, word32 r7, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r4 r5 r6 r7
// LiveOut:
// Trashed: NZCV r0 r2 r4 r5 r6 sp
// Preserved:
xEventGroupClearBits_entry:
// DataOut: cpsr r0 r1 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00001874:
	fn00008574()
	Mem18[r0:word32] = Mem0[r0:word32] & ~(r1 << 0x00000000)
	word32 r2_21
	word32 r4_22
	fn000085AC(r7, cpsr, out r2_21, out r4_22)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0008(32) Local -000C(32) Local -0010(32)

l0000188A_thunk_fn0000188C:
	word32 r5_25
	word32 r6_26
	word32 sp_27
	fn0000188C(r4, r5, r6, out r5_25, out r6_26, out sp_27)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r6:r0 r4:<invalid> r5:<invalid> r0:<invalid> r2:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

xEventGroupClearBits_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r4:<invalid> r5:<invalid> r0:<invalid> r2:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



word32 fn0000188C(word32 dwArg00, word32 dwArg04, word32 dwArg08, ptr32 & r5Out, ptr32 & r6Out, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r4 r5 r6 sp
// Trashed: r4 r5 r6 sp
// Preserved:
// Stack args: Stack +0000(32) Stack +0004(32) Stack +0008(32)
fn0000188C_entry:
// DataOut: cpsr r0 r1 r2 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32) Stack +0008(32)

l0000188C:
	word32 r5_5
	*r5Out = dwArg04
	word32 r6_7
	*r6Out = dwArg08
	word32 sp_8
	*spOut = fp + 16
	return dwArg00
// DataOut: cpsr r0 r1 r2 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000188C_exit:
// DataOut: r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 16 r4:<invalid> r5:<invalid> r6:<invalid>



void xEventGroupSetBits(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed: NZCV lr r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved: r3 r4 r5 r6 r7 sp
xEventGroupSetBits_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00001890:
	word32 r0_19
	word32 r4_21
	word32 r2_20
	fn00000A08(r0, out r0_19, out r2_20, out r4_21)
	word32 r0_25 = Mem0[r0 + 16:word32]
	word32 r1_27 = Mem0[r0:word32] | r4_21
	Mem32[r0:word32] = r1_27
	branch r0 + 0x0000000C == r0_25 l000018EC_in_xEventGroupSetBits
// DataOut: cpsr r1 r2 r4 r5 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000018EC_in_xEventGroupSetBits:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r5:r0 r4:<invalid> r1:<invalid> r0:<invalid> r6:r0 + 0x0000000C r2:<invalid> r3:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000018AA:
// DataOut: cpsr r1 r2 r4 r5 r6 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp - 24 r5:r0 r4:<invalid> r1:<invalid> r0:<invalid> r6:r0 + 0x0000000C r2:<invalid> r3:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000018C4:
	branch r0 + 0x0000000C == r0_25 l000018DE
// DataOut: cpsr r0 r1 r2 r5 r6 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp - 24 r5:r0 r4:<invalid> r1:<invalid> r0:<invalid> r6:r0 + 0x0000000C r7:0x00000000 r2:<invalid> r3:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000018C8:
	word32 r3_60 = Mem32[r4_21:word32]
	r2_20 = r3_60 & ~0xFF000000
	branch (r3_60 & 0x04000000) == 0x00000000 l00001AAA
// DataOut: cpsr r1 r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r5:r0 r4:<invalid> r1:<invalid> r0:<invalid> r6:r0 + 0x0000000C r7:0x00000000 r2:<invalid> r3:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00001AAA:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r5:r0 r4:<invalid> r1:<invalid> r0:<invalid> r6:r0 + 0x0000000C r7:0x00000000 r3:<invalid> r2:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000018D6:
	branch (r2_20 & ~(r1_27 << 0x00000000)) == 0x00000000 l00001AAE
// DataOut: cpsr r1 r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r5:r0 r4:<invalid> r1:<invalid> r0:<invalid> r6:r0 + 0x0000000C r7:0x00000000 r3:<invalid> r2:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00001AAE:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r5:r0 r4:<invalid> r1:<invalid> r0:<invalid> r6:r0 + 0x0000000C r7:0x00000000 r3:<invalid> r2:<invalid> lr:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00001AC2_thunk_fn00001AC4:
	fn00001AC4()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r5:r0 r4:<invalid> r1:<invalid> r0:<invalid> r6:r0 + 0x0000000C r7:0x00000000 r3:<invalid> r2:<invalid> lr:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000018DC:
// DataOut: cpsr r1 r2 r5 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp - 24 r5:r0 r4:<invalid> r1:<invalid> r0:<invalid> r6:r0 + 0x0000000C r7:0x00000000 r3:<invalid> r2:<invalid> lr:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000018DE:
// DataOut: cpsr r1 r2 r5 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp - 24 r5:r0 r4:<invalid> r1:<invalid> r0:<invalid> r6:r0 + 0x0000000C r7:0x00000000 r3:<invalid> r2:<invalid> lr:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000018DE_thunk_fn000018E0:
	word32 r4_58
	fn000018E0(r1_27, r2_20, r0, 0x00000000, cpsr, out r4_58)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r5:r0 r4:<invalid> r1:<invalid> r0:<invalid> r6:r0 + 0x0000000C r7:0x00000000 r3:<invalid> r2:<invalid> lr:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

xEventGroupSetBits_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r3:<invalid> r7:<invalid> r2:<invalid> lr:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr



word32 fn000018E0(word32 r1, word32 r2, word32 r5, word32 r7, word32 cpsr, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z cpsr r1 r2 r5 r7
// LiveOut: r0 r4
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved:
l000018E0:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000018E0_entry:
	*r4Out = r4
// DataOut: cpsr r0 r1 r2 r4 r5 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000018E0:
	branch Z l00001AC4
// DataOut: cpsr r0 r1 r2 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l000018E0_thunk_fn00001AC4:
	fn00001AC4()
	return r0
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l000018E2:
	word32 r1_19 = r1 & ~r7
	Mem21[r5:word32] = r1_19
	word32 r1_25
	word32 r2_26
	word32 r3_27
	word32 r4_28
	word32 r5_29
	word32 r7_30
	fn00000E68(r1_19, r2, cpsr, out r1_25, out r2_26, out r3_27, out r4_28, out r5_29, out r7_30)
// DataOut: cpsr r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000018EC:
	word32 r4_34
	*r4Out = Mem21[fp + 4:word32]
	return Mem21[r5_29:word32]
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r1:<invalid> r4:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r2:<invalid>

fn000018E0_exit:
// DataOut: r0 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r2:<invalid>



word32 fn000018F4(word32 r1, word32 r2, word32 r5, word32 r7, word32 cpsr, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r1 r2 r5 r7
// LiveOut: r0 r4
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved: sp
fn000018F4_entry:
// DataOut: cpsr r1 r2 r5 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000018F4:
// DataOut: cpsr r1 r2 r5 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000018F4_thunk_fn000018E0:
	word32 r4_7
	return fn000018E0(r1, r2, r5, r7, cpsr, out r4_7)
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

fn000018F4_exit:
// DataOut: r0 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r2:<invalid>



void xEventGroupSync(word32 r0, word32 r1, word32 r3, word32 r4, word32 r5, word32 r6, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r3 r4 r5 r6
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved: r1 r4 r5 r6 r7 r8 sp
xEventGroupSync_entry:
// DataOut: cpsr r0 r1 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000018F8:
	word32 r0_23
	word32 r4_25
	word32 r2_101
	fn00000A08(r0, out r0_23, out r2_101, out r4_25)
	word32 r6_34
	word32 sp_35
	word32 r5_33
	word32 r4_36 = fn0000188C(r4, r5, r6, out r5_33, out r6_34, out sp_35)
	word32 r7_22 = r3
	word32 r1_100 = r1
	branch (r6_34 & ~(r4_36 << 0x00000000)) == 0x00000000 l0000195A
// DataOut: cpsr r1 r2 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000191A:
	branch r7_22 != 0x00000000 l00001928
// DataOut: cpsr r1 r2 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:r1 r5:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r4:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00001928:
	fn00000FF4(r5_33 + 0x00000004, r6_34 | 0x05000000)
	word32 r1_93
	word32 r2_94
	word32 r3_95
	word32 r4_96
	word32 r0_99 = fn00000E68(r6_34 | 0x05000000, r7_22, cpsr, out r1_93, out r2_94, out r3_95, out r4_96, out r5_33, out r7_22)
	branch r0_99 != 0x00000000 l0000194A
// DataOut: cpsr r0 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:r1 r5:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r4:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr
// Terminates process

l0000193A:
	Mem112[Mem0[0x0000198A:word32]:word32] = 0x10000000
	__dsb_sy()
	__isb_sy()
// DataOut: cpsr r0 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r0:<invalid> r3:<invalid> sp:<invalid> r5:<invalid> r7:<invalid> r2:<invalid> r1:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l0000194A:
	branch fn0000111C(r0_99, out r1_100, out r2_101) << 6 >= 0x00000000 l00001964
// DataOut: cpsr r1 r2 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> sp:<invalid> r5:<invalid> r7:<invalid> r1:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00001964:
	Mem109[r5_33:word32] = r6_34
// DataOut: cpsr r1 r2 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> sp:<invalid> r5:<invalid> r7:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00001954:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> sp:<invalid> r5:<invalid> r7:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l0000195A:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:r1 r5:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r4:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l0000191C:
	word32 r1_76
	word32 r2_77
	word32 r3_78
	word32 r4_79
	word32 r5_80
	word32 r7_81
	fn00000E68(r1_100, r2_101, cpsr, out r1_76, out r2_77, out r3_78, out r4_79, out r5_80, out r7_81)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:r1 r5:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r4:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

xEventGroupSync_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r4:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr



void xEventGroupGetBitsFromISR(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed: r0 r2 r3
// Preserved: sp
xEventGroupGetBitsFromISR_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001988:
	word32 r3_3 = __mrs(cpsr)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	__msr(cpsr, r3_3)
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000199C_thunk_fn000019A0:
	fn000019A0(r0)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:0x000000BF

xEventGroupGetBitsFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:0x000000BF r0:<invalid>



word32 fn000019A0(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut: r0
// Trashed: r0
// Preserved: sp
fn000019A0_entry:
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l000019A0:
	word32 sp_6
	word32 r0_7
	word32 lr_8
	call lr (retsize: 0;)
		uses: lr,r0_4,sp_1
		defs: lr_8,r0_7,sp_6
	return r0_7
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

fn000019A0_exit:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



void vEventGroupDelete(word32 r0, word32 r1, word32 r5, word32 r6, word32 r7, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r5 r6 r7
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r7 sp
// Preserved: lr sp
vEventGroupDelete_entry:
// DataOut: cpsr r0 r1 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000019A4:
	word32 r0_9
	word32 r2_10
	word32 r4_11
	fn00000A08(r0, out r0_9, out r2_10, out r4_11)
	word32 r3_14 = Mem0[r4_11 + 4:word32]
	branch r3_14 == 0x00000000 l000019C0
// DataOut: cpsr r1 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l000019B0:
	fn0000107C(Mem0[r4_11 + 16:word32], 0x02000000, r2_10, r3_14, r5, r6, r7)
	r1 = 0x02000000
	branch Mem0[r4_11 + 4:word32] != 0x00000000 l000019BE_thunk_fn00001BAC
// DataOut: cpsr r1 r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:<invalid> r3:<invalid> r0:0x00000000 r2:<invalid> -8(fp):r4 -4(fp):lr
// Terminates process

l000019BE_thunk_fn00001BAC:
	fn00001BAC()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:<invalid> -8(fp):r4 -4(fp):lr

l000019C0:
	fn0000177C(r6)
// DataOut: cpsr r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:<invalid> r3:<invalid> r0:0x00000000 r2:<invalid> -8(fp):r4 -4(fp):lr

l000019CA_thunk_fn00000E68:
	word32 r1_40
	word32 r2_41
	word32 r3_42
	word32 r4_43
	word32 r5_44
	word32 r7_45
	fn00000E68(r1, r2_10, cpsr, out r1_40, out r2_41, out r3_42, out r4_43, out r5_44, out r7_45)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r3:<invalid> r0:<invalid> lr:lr r2:<invalid> -8(fp):r4 -4(fp):lr

vEventGroupDelete_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:<invalid> sp:<invalid> r4:<invalid> r0:<invalid> lr:lr r2:<invalid> r5:<invalid> r7:<invalid> r1:<invalid> -8(fp):r4 -4(fp):lr



void vEventGroupSetBitsCallback()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r4 r5 r6 sp
// Preserved:
vEventGroupSetBitsCallback_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000019D0:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000019D0_thunk_fn0000188C:
	word32 r5_5
	word32 r6_6
	word32 sp_7
	fn0000188C(dwArg00, dwArg04, dwArg08, out r5_5, out r6_6, out sp_7)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

vEventGroupSetBitsCallback_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r6:<invalid>



void vEventGroupClearBitsCallback(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed:
// Preserved: lr r3 r4 r5 sp
vEventGroupClearBitsCallback_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000019D4:
// DataOut: r1 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l000019D8:
	fn00008574()
	word32 r3_17 = Mem0[r0:word32] & ~(r1 << 0x00000000)
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:r0 -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l000019E4:
	Mem18[r0:word32] = r3_17
	word32 sp_24
	word32 r3_25
	word32 r4_26
	word32 r5_27
	word32 lr_28
	word32 r0_29
	word32 r1_30
	call fn00C085AC (retsize: 0;)
		uses: dwLoc04_10,dwLoc08_8,dwLoc0C_6,dwLoc10_4,lr_22,r0,r1,r3_19,r4_20,r5_21,sp_23
		defs: lr_28,r0_29,r1_30,r3_25,r4_26,r5_27,sp_24
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:r0 r5:r1 r3:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

vEventGroupClearBitsCallback_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r5:r5 r3:r3 lr:lr -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



void fn00001AC4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: sp
// Preserved: r0
fn00001AC4_entry:
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001AC4:
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001BAA_thunk_fn00001BAC:
	fn00001BAC()
	return
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:v3 r0:r0

fn00001AC4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r0:r0



void fn00001BAC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r0 sp
l00001BAC:
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn:

l00007FFA_thunk_fn00007FFC:
	fn00007FFC()
	return
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn:

fn00001BAC_entry:
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00001BAC:
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00007FFA_thunk_fn00007FFC:
	fn00007FFC()
	return
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0

fn00001BAC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0



void fn00007FFC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r0 sp
l00007FFC:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00007FFC_entry:
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00007FFC:
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00007FFE_thunk_NmiSR:
	NmiSR()
	return
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0

fn00007FFC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0



void NmiSR()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
l00008000:
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn:

l00007FFE_thunk_NmiSR:
	NmiSR()
	return
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn:

NmiSR_entry:
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008000:
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008000_thunk_fn00007FFC:
	fn00007FFC()
	return
// DataOut: cpsr r4
// DataOut (flags): 
// SymbolicIn: sp:fp

NmiSR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void FaultISR()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
FaultISR_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008004:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008004_thunk_NmiSR:
	NmiSR()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

FaultISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void ResetISR(word32 r1, word32 r2, word32 r5, word32 r6, word32 r7, word32 r8, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r1 r2 r5 r6 r7 r8
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved: sp
ResetISR_entry:
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008008:
	word32 r3_11 = Mem0[0x00008030:word32]
	word32 r0_4 = Mem0[0x00008036:word32]
	branch r3_11 >=u r0_4 l00008022
// DataOut: cpsr r0 r1 r2 r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008010:
	Mem55[r3_11:word32] = 0x00000000
	r1 = 0x00000000
	r2 = (~r3_11 + r0_4 & ~0x00000003) + 0x00000004 + r3_11
	r3_11 = r3_11 + 4
// DataOut: cpsr r1 r2 r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>

l00008022:
	branch r3_11 != r2 l0000821A
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid> r2:<invalid> r1:0x00000000

l00008024_thunk_fn0000821A:
	fn0000821A(r1, r2, r5, r6, r7, r8, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid> r2:<invalid> r1:0x00000000

l00008026:
	word32 sp_34
	word32 r3_35
	word32 pc_36
	word32 r0_37
	byte NZCV_38
	byte C_39
	word32 r2_40
	word32 r1_41
	byte Z_42
	word32 r5_43
	word32 r6_44
	word32 r7_45
	word32 r8_46
	word32 cpsr_47
	call fn00C0809C (retsize: 0;)
		uses: C_6,cpsr,NZCV_12,pc,r0_4,r1_9,r2_10,r3_11,r5,r6,r7,r8,sp_1,Z_13
		defs: C_39,cpsr_47,NZCV_38,pc_36,r0_37,r1_41,r2_40,r3_35,r5_43,r6_44,r7_45,r8_46,sp_34,Z_42
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid> r2:<invalid> r1:0x00000000

ResetISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> r4:<invalid> r5:<invalid> r7:<invalid> r8:<invalid> r6:<invalid>



void raise()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
raise_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

raise_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008034:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00000000

l00008030:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00000000



void vPrintTask(word32 r7, word32 r8, word32 r9, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10 r7 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vPrintTask_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vPrintTask_entry:
// DataOut: r10 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008038:
// DataOut: r10 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000803C:
	word32 r4_22
	word32 r5_23
	word32 sp_24
	word32 r3_25 = fn00008B68(dwLoc18, dwLoc14, dwLoc10, out r4_22, out r5_23, out sp_24)
	fn0000977C(0xFFFFFFFF, r3_25, r5_23, r7, r8, r9, r10)
	fn000097C8(Mem0[sp_24 + 4:word32], r4_22 & 0x0000003F, r7, r8, r9, r10)
// DataOut: r10 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 12 r4:0x00000000 -12(fp):r4 -8(fp):r5 -4(fp):lr
// LocalsOut: fp(32)



void vCheckTask(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vCheckTask_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

vCheckTask_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008068:
	word32 r4_15 = fn00008900(dwLoc18) + 8
// DataOut: r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008078:
	Mem21[r4_15 - 8:word32] = r0
	word32 sp_27
	r0 = Mem21[fn00008870(dwArg00, dwArg04, dwArg08, out sp_27):word32]
	r4_15 = fn00008AE0(dwArg00, dwArg04, dwArg08)
// DataOut: r0 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r0:<invalid> r1:<invalid> r2:0xFFFFFFFF r6:<invalid> -24(fp):r0 -20(fp):<invalid> -12(fp):r4 -8(fp):r5 -4(fp):lr



void Main(word32 r6, word32 r7, word32 r8, word32 r9, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10 r6 r7 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
Main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

Main_entry:
// DataOut: r10 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000080A0:
	word32 r5_13
	word32 sp_14
	word32 r4_15 = fn00008A84(dwLoc10, dwLoc0C, dwLoc08, out r5_13, out sp_14)
	Mem18[Mem0[0x000080F4:word32]:word32] = 0x00000003
	fn000098EC(r4_15, r6)
	Mem23[sp_14:word32] = 0x00000003
	Mem26[sp_14 + 4:word32] = r4_15
	word32 sp_31
	word32 r4_32 = fn00008804(dwArg00, dwArg04, dwArg08, out sp_31)
	Mem36[sp_31:word32] = 0x00000002
	Mem37[sp_31 + 4:word32] = r4_32
	word32 r0_39 = Mem37[0x00008104:word32]
	word32 sp_40
	word32 r4_41 = fn00008804(dwArg00, dwArg04, dwArg08, out sp_40)
	fn0000098C(r0_39)
	word32 r0_44 = Mem37[0x0000810A:word32]
// DataOut: r0 r1 r10 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l000080E8:
	fn000097C8(r0_44, r4_41, r7, r8, r9, r10)
// DataOut: r0 r1 r10 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: r2:r4 r1:r4 r0:<invalid> -4(fp):lr



void vUART_ISR(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 r5 r6 sp
vUART_ISR_entry:
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008108:
	word32 r5_13 = Mem0[0x00008178:word32]
	fn0000A0C8()
	fn0000A0D4()
	branch r5_13 << 27 >= 0x00000000 l0000812C
// DataOut: r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008128:
	r3 = Mem0[Mem0[0x0000817C:word32]:word32]
// DataOut: r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> r4:<invalid> r2:<invalid> -20(fp):0x00000000 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// LocalsOut: fp(32)

l0000812C:
	word32 r3_26 = r3 << 25
	branch r3_26 < 0x00000000 l0000815A
// DataOut: r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> r4:<invalid> r2:<invalid> r3:<invalid> -20(fp):0x00000000 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// LocalsOut: fp(32)

l0000815A:
	Mem52[r5_13 << 27:byte] = (byte) r3_26
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> r4:<invalid> r2:<invalid> r3:<invalid> -20(fp):0x00000000 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// LocalsOut: fp(32)

l00008130:
	branch r5_13 << 26 >= 0x00000000 l00008138
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> r4:<invalid> r2:<invalid> r3:<invalid> -20(fp):0x00000000 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// LocalsOut: fp(32)

l00008134:
	r3_26 = (word32) Mem0[Mem0[0x00008180:word32]:byte]
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> r4:<invalid> r2:<invalid> r3:<invalid> -20(fp):0x00000000 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// LocalsOut: fp(32)

l00008138:
	branch r3_26 <=u 0x0000007A l00008148
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> r4:<invalid> r2:<invalid> r3:<invalid> -20(fp):0x00000000 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// LocalsOut: fp(32)

l0000813C:
	branch 0x00000000 == 0x00000000 l00008148
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> r4:<invalid> r2:<invalid> r3:<invalid> -20(fp):0x00000000 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// LocalsOut: fp(32)

l00008140:
	Mem46[Mem0[0x00008184:word32]:word32] = 0x10000000
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> r4:<invalid> r2:<invalid> r3:0x00000000 -20(fp):0x00000000 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// LocalsOut: fp(32)

l00008148:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r6:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> r4:<invalid> r2:<invalid> r3:<invalid> -20(fp):0x00000000 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

vUART_ISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:r6 r5:r5 r1:<invalid> r0:<invalid> r4:r4 r2:<invalid> r3:<invalid> -20(fp):0x00000000 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



void vSetErrorLED()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0 r1
// Preserved: sp
vSetErrorLED_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008184:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008186_thunk_fn00008188:
	fn00008188()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:0x00000001 r0:0x00000007

vSetErrorLED_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:0x00000001 r0:0x00000007



void fn00008188()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn00008188_entry:
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008188:
	word32 sp_2
	call fn00C085F0 (retsize: 0;)
		uses: sp_1
		defs: sp_2
	return
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00008188_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void prvSetAndCheckRegisters()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZCV fp ip r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
prvSetAndCheckRegisters_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000818C:
	byte Z_16 = cond(0x00000000)
	branch false l000081FC
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000081C6:
	Z_16 = cond(0x00000000) (alias)
	branch false l000081FC
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:0x0000000A r0:0x0000000B r1:0x0000000C r2:0x0000000D r3:0x0000000E r4:0x0000000F r5:0x00000010 r6:0x00000011 r7:0x00000012 r8:0x00000013 r9:0x00000014 r10:0x00000015 ip:0x00000016

l000081CA:
	Z_16 = cond(0x00000000) (alias)
	branch false l000081FC
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:0x0000000A r0:0x0000000B r1:0x0000000C r2:0x0000000D r3:0x0000000E r4:0x0000000F r5:0x00000010 r6:0x00000011 r7:0x00000012 r8:0x00000013 r9:0x00000014 r10:0x00000015 ip:0x00000016

l000081CE:
	Z_16 = cond(0x00000000) (alias)
	branch false l000081FC
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:0x0000000A r0:0x0000000B r1:0x0000000C r2:0x0000000D r3:0x0000000E r4:0x0000000F r5:0x00000010 r6:0x00000011 r7:0x00000012 r8:0x00000013 r9:0x00000014 r10:0x00000015 ip:0x00000016

l000081D2:
	Z_16 = cond(0x00000000) (alias)
	branch false l000081FC
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:0x0000000A r0:0x0000000B r1:0x0000000C r2:0x0000000D r3:0x0000000E r4:0x0000000F r5:0x00000010 r6:0x00000011 r7:0x00000012 r8:0x00000013 r9:0x00000014 r10:0x00000015 ip:0x00000016

l000081D6:
	Z_16 = cond(0x00000000) (alias)
	branch false l000081FC
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:0x0000000A r0:0x0000000B r1:0x0000000C r2:0x0000000D r3:0x0000000E r4:0x0000000F r5:0x00000010 r6:0x00000011 r7:0x00000012 r8:0x00000013 r9:0x00000014 r10:0x00000015 ip:0x00000016

l000081DA:
	Z_16 = cond(0x00000000) (alias)
	branch false l000081FC
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:0x0000000A r0:0x0000000B r1:0x0000000C r2:0x0000000D r3:0x0000000E r4:0x0000000F r5:0x00000010 r6:0x00000011 r7:0x00000012 r8:0x00000013 r9:0x00000014 r10:0x00000015 ip:0x00000016

l000081DE:
	Z_16 = cond(0x00000000) (alias)
	branch false l000081FC
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:0x0000000A r0:0x0000000B r1:0x0000000C r2:0x0000000D r3:0x0000000E r4:0x0000000F r5:0x00000010 r6:0x00000011 r7:0x00000012 r8:0x00000013 r9:0x00000014 r10:0x00000015 ip:0x00000016

l000081E2:
	Z_16 = cond(0x00000000) (alias)
	branch false l000081FC
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:0x0000000A r0:0x0000000B r1:0x0000000C r2:0x0000000D r3:0x0000000E r4:0x0000000F r5:0x00000010 r6:0x00000011 r7:0x00000012 r8:0x00000013 r9:0x00000014 r10:0x00000015 ip:0x00000016

l000081E6:
	Z_16 = cond(0x00000000) (alias)
	branch false l000081FC
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:0x0000000A r0:0x0000000B r1:0x0000000C r2:0x0000000D r3:0x0000000E r4:0x0000000F r5:0x00000010 r6:0x00000011 r7:0x00000012 r8:0x00000013 r9:0x00000014 r10:0x00000015 ip:0x00000016

l000081EC:
	Z_16 = cond(0x00000000) (alias)
	branch false l000081FC
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:0x0000000A r0:0x0000000B r1:0x0000000C r2:0x0000000D r3:0x0000000E r4:0x0000000F r5:0x00000010 r6:0x00000011 r7:0x00000012 r8:0x00000013 r9:0x00000014 r10:0x00000015 ip:0x00000016

l000081F2:
	Z_16 = cond(0x00000000) (alias)
	branch false l000081FC
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:0x0000000A r0:0x0000000B r1:0x0000000C r2:0x0000000D r3:0x0000000E r4:0x0000000F r5:0x00000010 r6:0x00000011 r7:0x00000012 r8:0x00000013 r9:0x00000014 r10:0x00000015 ip:0x00000016

l000081F8:
	Z_16 = cond(0x00000000) (alias)
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:0x0000000A r0:0x0000000B r1:0x0000000C r2:0x0000000D r3:0x0000000E r4:0x0000000F r5:0x00000010 r6:0x00000011 r7:0x00000012 r8:0x00000013 r9:0x00000014 r10:0x00000015 ip:0x00000016

l000081FC:
	branch Z_16 l000081FC
// DataOut:
// DataOut (flags): Z
// SymbolicIn: sp:fp fp:0x0000000A r0:0x0000000B r1:0x0000000C r2:0x0000000D r3:0x0000000E r4:0x0000000F r5:0x00000010 r6:0x00000011 r7:0x00000012 r8:0x00000013 r9:0x00000014 r10:0x00000015 ip:0x00000016

l000081FE:
	word32 sp_20
	word32 fp_21
	word32 r0_22
	word32 r1_23
	word32 r2_24
	word32 r3_25
	word32 r4_26
	word32 r5_27
	word32 r6_28
	word32 r7_29
	word32 r8_30
	word32 r9_31
	word32 r10_32
	word32 ip_33
	byte NZCV_34
	byte Z_35
	word32 lr_36
	call lr (retsize: 0;)
		uses: fp_2,ip_14,lr,NZCV_18,r0_3,r1_4,r10_13,r2_5,r3_6,r4_7,r5_8,r6_9,r7_10,r8_11,r9_12,sp_1,Z_17
		defs: fp_21,ip_33,lr_36,NZCV_34,r0_22,r1_23,r10_32,r2_24,r3_25,r4_26,r5_27,r6_28,r7_29,r8_30,r9_31,sp_20,Z_35
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:0x0000000A r0:0x0000000B r1:0x0000000C r2:0x0000000D r3:0x0000000E r4:0x0000000F r5:0x00000010 r6:0x00000011 r7:0x00000012 r8:0x00000013 r9:0x00000014 r10:0x00000015 ip:0x00000016

prvSetAndCheckRegisters_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp fp:0x0000000A r0:0x0000000B r1:0x0000000C r2:0x0000000D r3:0x0000000E r4:0x0000000F r5:0x00000010 r6:0x00000011 r7:0x00000012 r8:0x00000013 r9:0x00000014 r10:0x00000015 ip:0x00000016



void fn0000820C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0000820C_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000820C:
	word32 sp_3
	word32 lr_4
	call lr (retsize: 0;)
		uses: lr,sp_1
		defs: lr_4,sp_3
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000820C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vApplicationIdleHook(word32 r1, word32 r2, word32 r5, word32 r6, word32 r7, word32 r8, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r1 r2 r5 r6 r7 r8
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
vApplicationIdleHook_entry:
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008210:
	word32 r2_14
	word32 r5_15
	word32 r6_16
	word32 r7_17
	word32 r8_18
	word32 r1_19 = fn00008F28(r1, r2, r5, r6, r7, r8, cpsr, out r2_14, out r5_15, out r6_16, out r7_17, out r8_18)
	fn00008188()
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008216_thunk_fn0000821A:
	fn0000821A(r1_19, r2_14, r5_15, r6_16, r7_17, r8_18, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -8(fp):r3 -4(fp):lr

vApplicationIdleHook_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:0x00000000 r5:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -8(fp):r3 -4(fp):lr



void fn0000821A(word32 r1, word32 r2, word32 r5, word32 r6, word32 r7, word32 r8, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r1 r2 r5 r6 r7 r8
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
fn0000821A_entry:
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000821A:
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000820E:
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:v3

l0000820E_thunk_vApplicationIdleHook:
	vApplicationIdleHook(r1, r2, r5, r6, r7, r8, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3

fn0000821A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:0x00000000 r5:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r2:<invalid> r1:<invalid>



void fn0000821C(word32 r0, word32 r5, word32 r6, word32 r7, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r5 r6 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000821C_entry:
// DataOut: r0 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000821C:
	Mem3[r0 + 24:word16] = (uint16) r5
// DataOut: r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000821E_thunk_PDCInit:
	PDCInit(r6, r7, r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0
// Terminates process

fn0000821C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void PDCInit(word32 r6, word32 r7, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r6 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
PDCInit_entry:
// DataOut: r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008220:
	fn00009B78(Mem0[0x00008292:word32])
	fn00009B78(Mem0[0x00008296:word32])
	fn00009108(0x40004000, 0x00000034, 0x00000002)
	fn00009108(0x40004000, 0x00000008, 0x00000001)
	fn000091C4()
	word32 r5_25 = Mem0[0x0000829A:word32]
	fn000099E4(r7)
	fn00009A30(r5_25, 0x00000008, r5_25, r6, r8)
	fn00009450()
	word32 sp_45
	word32 r4_46
	word32 r5_47
	word32 lr_48
	word32 r0_49
	word32 pc_50
	word32 r2_51
	word32 r1_52
	word32 r3_53
	word32 r6_54
	word32 r7_55
	word32 r8_56
	call fn00C09450 (retsize: 0;)
		uses: dwLoc04_8,dwLoc08_6,dwLoc0C_4,dwLoc18_29,lr_43,r0_39,r1_38,r2_37,r3_27,r4_41,r5_42,r6,r7,r8,sp_44
		defs: lr_48,pc_50,r0_49,r1_52,r2_51,r3_53,r4_46,r5_47,r6_54,r7_55,r8_56,sp_45
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

PDCInit_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:0x40004000 r1:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> lr:<invalid> r7:<invalid> r3:<invalid> r6:<invalid> r8:<invalid> -24(fp):0x00000008 -12(fp):r4 -8(fp):r5 -4(fp):lr



void fn00008298(word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r1
// LiveOut:
// Trashed: NZCV r0 r1 r7
// Preserved: sp
fn00008298_entry:
// DataOut: cpsr r1 r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008298:
// DataOut: cpsr r0 r1 r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000829A_thunk_PDCWrite:
	PDCWrite(0x00000000, r1)
	return
// DataOut: cpsr r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00000000 r7:r1

fn00008298_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r7:r1 r1:<invalid>



void PDCWrite(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: r0 r1
// Preserved: r4 r5 sp
PDCWrite_entry:
// DataOut: cpsr r0 r1 r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000829C:
	word32 r4_12 = Mem0[0x000082D0:word32]
	SSIIntClear(r4_12, r0 & 0x0000000F)
	SSIIntClear(r4_12, r1)
	fn00009AB4()
	fn00009AB4()
	return
// DataOut: cpsr r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

PDCWrite_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r4:r4 r1:fp - 20 r0:<invalid> -12(fp):r4 -8(fp):r5 -4(fp):lr



void fn000082CC(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZC r1 r2 r3
// Preserved: r0 sp
fn000082CC_entry:
// DataOut: cpsr fp r0 r10 r4 r5 r6 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l000082CC:
	Mem3[r0:word16] = (uint16) r0
// DataOut: cpsr fp r0 r10 r4 r5 r6 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l000082CE_thunk_vListInitialise:
	vListInitialise(r0)
	return
// DataOut: cpsr fp r10 r4 r5 r6 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0

fn000082CC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 r1:0xFFFFFFFF r2:0x00000000 r3:<invalid>



void vListInitialise(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r1 r2 r3
// Preserved: sp
vListInitialise_entry:
// DataOut: cpsr fp r0 r10 r4 r5 r6 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l000082D0:
	Mem6[r0 + 8:word32] = 0xFFFFFFFF
	Mem7[r0:word32] = 0x00000000
	Mem8[r0 + 4:word32] = r0 + 0x00000008
	Mem9[r0 + 12:word32] = r0 + 0x00000008
	Mem10[r0 + 16:word32] = r0 + 0x00000008
// DataOut: cpsr fp r10 r4 r5 r6 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l000082E2_thunk_fn000082E4:
	fn000082E4()
	return
// DataOut: cpsr fp r10 r4 r5 r6 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp r1:0xFFFFFFFF r2:0x00000000 r3:r0 + 0x00000008

vListInitialise_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:0xFFFFFFFF r2:0x00000000 r3:r0 + 0x00000008



void fn000082E4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn000082E4_entry:
// DataOut: cpsr fp r10 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l000082E4:
	word32 sp_3
	word32 lr_4
	call lr (retsize: 0;)
		uses: lr,sp_1
		defs: lr_4,sp_3
	return
// DataOut: cpsr fp r10 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

fn000082E4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vListInitialiseItem(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r3
// Preserved: sp
vListInitialiseItem_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l000082E8:
	Mem3[r0 + 16:word32] = 0x00000000
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000082EA_thunk_fn000082EC:
	fn000082EC()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:0x00000000

vListInitialiseItem_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:0x00000000



void fn000082EC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn000082EC_entry:
// DataOut: cpsr lr r0 r1 r2 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l000082EC:
	word32 sp_3
	word32 lr_4
	call lr (retsize: 0;)
		uses: lr,sp_1
		defs: lr_4,sp_3
	return
// DataOut: cpsr lr r0 r1 r2 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

fn000082EC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vListInsertEnd(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: NZCV r2 r3
// Preserved: r4 sp
vListInsertEnd_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000082F0:
	word32 r3_5 = Mem0[r0 + 4:word32]
	word32 r2_4 = Mem0[r0:word32]
	Mem12[r1 + 8:word32] = Mem0[r3_5 + 8:word32]
	word32 r4_14 = Mem12[r3_5 + 8:word32]
	Mem15[r1 + 4:word32] = r3_5
	Mem16[r4_14 + 4:word32] = r1
	Mem17[r3_5 + 8:word32] = r1
	Mem20[r1 + 16:word32] = r0
// DataOut: r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008306_thunk_fn00008308:
	fn00008308(r0, r2_4 + 0x00000001)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid> r4:r4 -4(fp):r4

vListInsertEnd_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid> r4:r4 -4(fp):r4



void fn00008308(word32 r0, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r2
// LiveOut:
// Trashed:
// Preserved: sp
fn00008308_entry:
// DataOut: r0 r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008308:
	Mem3[r0:word32] = r2
	word32 sp_6
	word32 r2_7
	word32 r0_8
	word32 lr_9
	call lr (retsize: 0;)
		uses: lr,r0,r2,sp_1
		defs: lr_9,r0_8,r2_7,sp_6
	return
// DataOut: r0 r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00008308_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vListInsert(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0 r1
// LiveOut:
// Trashed: r3
// Preserved: r4 r5 sp
vListInsert_entry:
// DataOut: r0 r1
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000830C:
	branch Z l00008334_in_vListInsert
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008334_in_vListInsert:
	word32 sp_19
	word32 r4_20
	word32 r5_21
	word32 r1_22
	word32 r3_23
	byte Z_24
	word32 lr_25
	word32 r2_26
	word32 r0_27
	call lr (retsize: 0;)
		uses: dwLoc04_6,dwLoc08_4,lr,r0,r1,r2,r3_10,r4_14,r5_15,sp_16,Z
		defs: lr_25,r0_27,r1_22,r2_26,r3_23,r4_20,r5_21,sp_19,Z_24
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r5:<invalid> r3:<invalid> -8(fp):r4 -4(fp):r5

vListInsert_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r3:<invalid> r4:r4 -8(fp):r4 -4(fp):r5

l00008314:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r5:<invalid> r3:<invalid> -8(fp):r4 -4(fp):r5

l00008318:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r5:<invalid> r3:<invalid> r2:r0 + 0x00000008 -8(fp):r4 -4(fp):r5



word32 fn0000833C(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2 r3 r4 r5
// LiveOut: r3 r4 r5 r6 r7 sp
// Trashed: NZCV r3 r4 r5 r6 r7 sp
// Preserved:
// Stack args: Stack +0000(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)
fn0000833C_entry:
// DataOut: cpsr lr r0 r1 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l0000833C:
// DataOut: cpsr lr r0 r1 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l00008320:
	branch r5 >=u r4 l00008516
// DataOut: cpsr lr r0 r1 r2 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l00008516:
	word32 r4_58
	*r4Out = dwArg04
	word32 r5_60
	*r5Out = dwArg08
	word32 r6_62
	*r6Out = dwArg0C
	word32 r7_64
	*r7Out = dwArg10
	word32 sp_65
	*spOut = fp + 24
	return dwArg00
// DataOut: cpsr lr r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008324:
	word32 r4_25 = Mem0[r0:word32]
	Mem27[r1 + 4:word32] = r3
	Mem31[r3 + 8:word32] = r1
	Mem33[r1 + 8:word32] = r2
	Mem34[r2 + 4:word32] = r1
	Mem35[r1 + 16:word32] = r0
	Mem36[r0:word32] = r4_25 + 0x00000001
// DataOut: cpsr lr r0 r1 r2 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32)

l00008334:
	word32 sp_45
	word32 r5_46
	word32 r4_47
	byte NZCV_48
	byte C_49
	word32 r0_50
	word32 r3_51
	word32 r1_52
	word32 r2_53
	word32 lr_54
	word32 r6_55
	word32 r7_56
	call lr (retsize: 0; depth: -8)
		uses: C_5,lr,NZCV_30,r0,r1,r2,r3,r4_38,r5_40,r6,r7,sp_41
		defs: C_49,lr_54,NZCV_48,r0_50,r1_52,r2_53,r3_51,r4_47,r5_46,r6_55,r7_56,sp_45
	return r3_51
// DataOut: cpsr lr r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid>

fn0000833C_exit:
// DataOut: r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid>



void uxListRemove(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r4 sp
uxListRemove_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008340:
	word32 r2_4 = Mem0[r0 + 16:word32]
	word32 r3_5 = Mem0[r0 + 4:word32]
	Mem10[r3_5 + 8:word32] = Mem0[r0 + 8:word32]
	word32 r4_11 = Mem10[r2_4 + 4:word32]
	word32 r1_12 = Mem10[r0 + 8:word32]
	Mem15[r1_12 + 4:word32] = r3_5
	branch r0 != r4_11 l00008356
// DataOut: r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008354_1:
	Mem33[r2_4 + 4:word32] = r1_12
// DataOut: r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r2:<invalid> r3:<invalid> r1:<invalid> r4:<invalid> -4(fp):r4

l00008356:
	word32 r3_17 = Mem15[r2_4:word32]
	Mem18[r0 + 16:word32] = 0x00000000
	Mem20[r2_4:word32] = r3_17 - 0x00000001
	word32 sp_24
	word32 r2_25
	word32 r0_26
	word32 r3_27
	word32 r1_28
	word32 r4_29
	byte NZCV_30
	byte Z_31
	word32 lr_32
	call lr (retsize: 0;)
		uses: dwLoc04_9,lr,NZCV_13,r0_19,r1_16,r2_4,r3_17,r4_21,sp_22,Z_14
		defs: lr_32,NZCV_30,r0_26,r1_28,r2_25,r3_27,r4_29,sp_24,Z_31
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r2:<invalid> r3:<invalid> r1:<invalid> r4:<invalid> -4(fp):r4

uxListRemove_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid> r1:0x00000000 r4:r4 r0:<invalid> -4(fp):r4



void xQueueCRSend(word32 r0, word32 r7, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r7
// LiveOut:
// Trashed: NZCV r0 r2 r3 r4 r5 r6 sp
// Preserved:
xQueueCRSend_entry:
// DataOut: cpsr r0 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008364:
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	fn00008574()
	branch Mem0[r0 + 56:word32] == Mem0[r0 + 60:word32] l000083AE_in_xQueueCRSend
// DataOut: cpsr r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l000083AE_in_xQueueCRSend:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r6:r1 r4:r2 r3:<invalid> r2:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00008388:
	word32 r2_33
	word32 r4_34
	fn000085AC(r7, cpsr, out r2_33, out r4_34)
	__msr(cpsr, 0x00000000)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	word32 r2_38 = Mem0[r0 + 56:word32]
	word32 r3_39 = Mem0[r0 + 60:word32]
// DataOut: cpsr r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r6:r1 r4:r2 r3:<invalid> r2:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000083A4_thunk_fn000083A6:
	word32 r0_40
	word32 r4_41
	word32 r5_42
	word32 r6_43
	fn000083A6(r2_38, r3_39, cpsr, out r0_40, out r4_41, out r5_42, out r6_43)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r6:r1 r4:<invalid> r3:<invalid> r2:<invalid> r0:0x00000000 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

xQueueCRSend_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



bool fn000083A6(word32 r2, word32 r3, word32 cpsr, ptr32 & r0Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r2 r3
// LiveOut: Z r0 r4 r5 r6
// Trashed: NZCV r0 r3 r4 r5 r6 sp
// Preserved:
fn000083A6_entry:
	*r0Out = r0
// DataOut: cpsr lr r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(32)

l000083A6:
	bool Z_5 = (bool) cond(r2 - r3)
	branch r2 <u r3 l000083BC
// DataOut: cpsr lr r0 r1 r4 sp
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000083BC:
	word32 r0_26
	*r0Out = r4
	word32 r4_27
	*r4Out = Mem0[v3:word32]
	word32 r5_28
	*r5Out = Mem0[v3 + 4:word32]
	word32 r6_29
	*r6Out = Mem0[v3 + 8:word32]
	return Z_5
// DataOut: cpsr lr r0 r1 r4 r5 r6
// DataOut (flags): Z
// SymbolicIn: sp:v3

l000083AA:
	__msr(cpsr, 0x00000000)
// DataOut: cpsr lr r0 r1 sp
// DataOut (flags): Z
// SymbolicIn: sp:v3

l000083AE:
	word32 r4_20
	*r4Out = Mem0[v3:word32]
	word32 r5_21
	*r5Out = Mem0[v3 + 4:word32]
	word32 r6_22
	*r6Out = Mem0[v3 + 8:word32]
	return Z_5
// DataOut: cpsr lr r0 r1 r4 r5 r6
// DataOut (flags): Z
// SymbolicIn: sp:v3 r3:0x00000000

fn000083A6_exit:
// DataOut: r0 r4 r5 r6
// DataOut (flags): Z
// SymbolicIn: sp:v3 + 16 r0:r4 r4:<invalid> r5:<invalid> r6:<invalid> r3:0x00000000



bool fn000083FC(word32 r2, word32 r3, word32 cpsr, ptr32 & r0Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r2 r3
// LiveOut: Z r0 r4 r5 r6
// Trashed: NZCV r0 r3 r4 r5 r6 sp
// Preserved: sp
fn000083FC_entry:
// DataOut: cpsr lr r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l000083FC:
// DataOut: cpsr lr r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l000083FE_thunk_fn000083A6:
	word32 r0_7
	word32 r4_8
	word32 r5_9
	word32 r6_10
	return fn000083A6(r2, r3, cpsr, out r0_7, out r4_8, out r5_9, out r6_10)
// DataOut: cpsr lr r0 r1 r4 r5 r6
// DataOut (flags): Z
// SymbolicIn: sp:fp r4:r0

fn000083FC_exit:
// DataOut: r0 r4 r5 r6
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r5:<invalid> r6:<invalid> r3:0x00000000



void xQueueCRReceive(word32 r0, word32 r1, word32 r2, word32 r7, word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr lr r0 r1 r2 r7
// LiveOut:
// Trashed: NZCV lr r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved: r3 r4 r5 sp
xQueueCRReceive_entry:
// DataOut: cpsr lr r0 r1 r2 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008400:
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	word32 r4_106 = r0
	branch Mem0[r0 + 56:word32] != 0x00000000 l00008424
// DataOut: cpsr lr r0 r1 r2 r4 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008424:
	__msr(cpsr, 0x00000000)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	r2 = Mem0[r0 + 56:word32]
// DataOut: cpsr lr r1 r2 r4 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:r0 r3:0x000000BF r5:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008418:
	branch r2 != 0x00000000 l00008486
// DataOut: cpsr lr r0 r1 r2 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:r0 r3:0x000000BF r5:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008486:
	r4_106 = r0
// DataOut: cpsr lr r1 r2 r4 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:r0 r3:0x000000BF r5:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008488:
// DataOut: cpsr lr r1 r2 r4 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> r0:~0x00000004 r1:<invalid> r6:<invalid> r7:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l0000843C:
	branch r2 != 0x00000000 l00008448
// DataOut: cpsr lr r1 r4 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> r0:~0x00000004 r1:<invalid> r6:<invalid> r7:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008448:
	word32 r1_57
	word32 r2_48 = Mem0[r4_106 + 64:word32]
	word32 r3_50 = Mem0[r4_106 + 4:word32]
	word32 r1_51 = Mem0[r4_106 + 12:word32] + r2_48
	word32 r3_55 = Mem0[r4_106 + 56:word32]
	Mem56[r4_106 + 12:word32] = r1_51
	r1_57 = r1_51
	branch r1_51 <u r3_50 l0000845C
// DataOut: cpsr lr r0 r1 r2 r3 r4 r7
// DataOut (flags): C
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> r0:~0x00000004 r1:<invalid> r6:<invalid> r7:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l0000845A_1:
	r1_57 = Mem56[r4_106:word32]
// DataOut: cpsr lr r0 r1 r2 r3 r4 r7
// DataOut (flags): C
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r6:<invalid> r7:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l0000845C:
	Mem59[r4_106 + 56:word32] = r3_55 + 0xFFFFFFFF
	branch r1_51 <u r3_50 l00008466
// DataOut: cpsr lr r0 r1 r2 r3 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r6:<invalid> r7:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008464_1:
	Mem81[r4_106 + 12:word32] = r1_57
// DataOut: cpsr lr r0 r1 r2 r3 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r6:<invalid> r7:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008466:
	word32 r5_62
	word32 r6_63
	word32 r1_64 = fn0000A5C0(r1, r1_57, r2_48, r3_55 + 0xFFFFFFFF, r7, out r2, out r4_106, out r5_62, out r6_63)
	branch Mem59[r4_106 + 16:word32] != 0x00000000 l00008478
// DataOut: cpsr lr r1 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r6:<invalid> r7:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008478:
	word32 r3_74
	branch fn00009090(r1_64, r2, r4_106, r5_62, r6_63, lr, out r1, out r3_74, out r7) == 0x00000000 l0000866A
// DataOut: cpsr lr r1 r2 r3 r4 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r6:<invalid> r7:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l0000866A:
// DataOut: r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r6:<invalid> r7:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l0000866A_thunk_fn0000864E:
	fn0000864E(r1, r2, r3_74)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r6:<invalid> r7:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008484:
// DataOut: cpsr lr r1 r2 r4 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r6:<invalid> r7:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l0000846E:
	__msr(cpsr, 0x00000000)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r6:<invalid> r7:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l0000843E:
	__msr(cpsr, 0x00000000)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> r2:<invalid> r0:~0x00000004 r1:<invalid> r6:<invalid> r7:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l0000841C:
	__msr(cpsr, r2)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:r0 r3:0x000000BF r5:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

xQueueCRReceive_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> lr:<invalid> r7:<invalid> r6:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



void xQueueCRSendFromISR(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZCV r0 r3
// Preserved: r4 r5 r6 sp
xQueueCRSendFromISR_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000084A0:
	branch Mem0[r0 + 56:word32] <u Mem0[r0 + 60:word32] l000084AC
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000084AC:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r3:<invalid> r6:<invalid> r5:r2 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

xQueueCRSendFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r6:r6 r5:r5 r0:r2 r4:r4 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



void xQueueCRReceiveFromISR(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: NZCV lr r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved: r3 r4 r5 r6 r7 sp
xQueueCRReceiveFromISR_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000084D4:
	branch Mem0[r0 + 56:word32] == 0x00000000 l00008514
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008514:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r3:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00008516_in_xQueueCRReceiveFromISR:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r3:<invalid> r0:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000084DA:
	word32 r3_45
	word32 lr_32 = Mem0[r0 + 64:word32]
	word32 r4_33 = Mem0[r0 + 4:word32]
	word32 r3_34 = Mem0[r0 + 12:word32] + lr_32
	word32 r7_43 = Mem0[r0 + 56:word32]
	Mem44[r0 + 12:word32] = r3_34
	r3_45 = r3_34
	branch r3_34 <u r4_33 l000084F4
// DataOut: lr r0 r3 r4 r6 r7
// DataOut (flags): C
// SymbolicIn: sp:fp - 24 r3:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000084F2_1:
	r3_45 = Mem44[r0:word32]
// DataOut: lr r0 r3 r4 r6 r7
// DataOut (flags): C
// SymbolicIn: sp:fp - 24 r3:<invalid> lr:<invalid> r4:r0 r6:r1 r5:r2 r7:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000084F4:
	branch r3_34 <u r4_33 l000084FC
// DataOut: lr r0 r3 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r3:<invalid> lr:<invalid> r4:r0 r6:r1 r5:r2 r7:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000084FA_1:
	Mem80[r0 + 12:word32] = r3_45
// DataOut: lr r3 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r3:<invalid> lr:<invalid> r4:r0 r6:r1 r5:r2 r7:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000084FC:
	Mem50[r0 + 56:word32] = r7_43 + 0xFFFFFFFF
	word32 r2_51
	word32 r4_52
	word32 r5_53
	word32 r6_54
	word32 r1_55 = fn0000A5C0(r1, r3_45, lr_32, r3_45, r7_43 + 0xFFFFFFFF, out r2_51, out r4_52, out r5_53, out r6_54)
	branch Mem50[r5_53:word32] != 0x00000000 l00008510
// DataOut: lr r1 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r3:<invalid> lr:<invalid> r4:r0 r6:r1 r5:r2 r7:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l0000850C:
	branch Mem50[r4_52 + 16:word32] != 0x00000000 l00008518
// DataOut: lr r1 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> lr:<invalid> r4:<invalid> r6:<invalid> r5:<invalid> r7:<invalid> r1:<invalid> r2:<invalid> r0:r1 -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00008518:
	word32 r1_66
	word32 r3_67
	word32 r7_68
	branch fn00009090(r1_55, r2_51, r4_52, r5_53, r6_54, lr_32, out r1_66, out r3_67, out r7_68) == 0x00000000 l00008522_thunk_fn0000870C
// DataOut: r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> lr:<invalid> r4:<invalid> r6:<invalid> r5:<invalid> r7:<invalid> r1:<invalid> r2:<invalid> r0:r1 -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00008522_thunk_fn0000870C:
	fn0000870C(r4_52)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> lr:<invalid> r4:<invalid> r6:<invalid> r5:<invalid> r7:<invalid> r1:<invalid> r2:<invalid> r0:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00008524:
	Mem73[r5_53:word32] = 0x00000001
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> lr:<invalid> r4:<invalid> r6:<invalid> r5:<invalid> r7:<invalid> r1:<invalid> r2:<invalid> r0:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00008510:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> lr:<invalid> r4:<invalid> r6:<invalid> r5:<invalid> r7:<invalid> r1:<invalid> r2:<invalid> r0:r1 -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

xQueueCRReceiveFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> lr:<invalid> r1:<invalid> r2:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr



void prvIdleTask()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: sp
// Preserved:
prvIdleTask_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000852C:
	fn0000820C()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000852E_thunk_fn00008532:
	fn00008532()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 -8(fp):r3 -4(fp):lr

prvIdleTask_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> -8(fp):r3 -4(fp):lr



void fn00008530()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00008530_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00008530_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008530:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00008532()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: sp
// Preserved:
l00008532:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00008532_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008532:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000852A:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000852A_thunk_prvIdleTask:
	prvIdleTask()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00008532_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid>



void xTaskNotifyStateClear(word32 r0, word32 r7, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r7
// LiveOut:
// Trashed: NZCV r0 r2
// Preserved: r3 r4 r5 sp
xTaskNotifyStateClear_entry:
// DataOut: cpsr r0 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008534:
// DataOut: cpsr r0 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008536:
	branch r0 == 0x00000000 l00008558
// DataOut: cpsr r0 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r3:<invalid> r4:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008558:
// DataOut: cpsr r0 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r3:<invalid> r4:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008538:
	fn00008574()
	word32 r3_16 = (word32) Mem0[r0 + 100:byte]
	branch r3_16 != 0x00000002 l00008548
// DataOut: cpsr r3 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r3:<invalid> r4:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008546_1:
	r3_16 = 0x00000000
// DataOut: cpsr r3 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:r0 r3:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008548:
	Mem21[r0 + 100:byte] = (byte) r3_16
	word32 r2_24
	word32 r4_25
	fn000085AC(r7, cpsr, out r2_24, out r4_25)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:r0 r3:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

xTaskNotifyStateClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r3:r3 r5:r5 r0:0x00000000 r2:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



word32 fn00008560(word32 r0, word32 cpsr, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut: r0 r4
// Trashed: NZC r0 r4
// Preserved: sp
fn00008560_entry:
// DataOut: cpsr d1 d14 lr r0 r1 r2 r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008560:
	word32 r4_3
	*r4Out = r0 << 3
// DataOut: cpsr d1 d14 lr r1 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008562_thunk_xPortRaisePrivilege:
	return xPortRaisePrivilege(cpsr)
// DataOut: cpsr d1 d14 lr r0 r1 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:0x00000000

fn00008560_exit:
// DataOut: r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r0 << 3 r0:<invalid>



word32 xPortRaisePrivilege(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr
// LiveOut: r0
// Trashed: NZC r0
// Preserved: sp
xPortRaisePrivilege_entry:
// DataOut: cpsr d1 d14 lr r1 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008564:
	branch (__mrs(cpsr) & 0x00000001) == 0x00000000 l00008570
// DataOut: cpsr d1 d14 lr r1 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000856E_1:
// DataOut: cpsr d1 d14 lr r1 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>

l00008570:
	__syscall(0x00000002)
// DataOut: cpsr d1 d14 lr r0 r1 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>

l00008572_thunk_fn00008574:
	fn00008574()
	return 0x00000001
// DataOut: cpsr d1 d14 lr r0 r1 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00000001

xPortRaisePrivilege_exit:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00000001



void fn00008574()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn00008574_entry:
// DataOut: cpsr d1 d14 lr r0 r1 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008574:
	word32 sp_3
	word32 lr_4
	call lr (retsize: 0;)
		uses: lr,sp_1
		defs: lr_4,sp_3
	return
// DataOut: cpsr d1 d14 lr r0 r1 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00008574_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void vPortEnterCritical(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed: NZCV r0 r2 r4
// Preserved: r3 sp
vPortEnterCritical_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008578:
	word32 r4_9
	word32 r0_10 = fn00008560(r0, cpsr, out r4_9)
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	word32 r2_13 = Mem0[0x000085B2:word32]
	Mem18[r2_13:word32] = Mem0[r2_13:word32] + 0x00000001
	branch r0_10 == 0x00000001 l000085A4
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000859C:
	r0_10 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> r2:<invalid> r4:<invalid> r0:<invalid> -8(fp):r3 -4(fp):lr

l000085A4:
	__msr(cpsr, r0_10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> r2:<invalid> r0:<invalid> r4:<invalid> -8(fp):r3 -4(fp):lr

vPortEnterCritical_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 r2:<invalid> r0:<invalid> r4:<invalid> -8(fp):r3 -4(fp):lr



word32 fn000085AC(word32 r7, word32 cpsr, ptr32 & r2Out, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r7
// LiveOut: r0 r2 r4
// Trashed: NZCV r0 r2 r4
// Preserved: sp
fn000085AC_entry:
// DataOut: cpsr r1 r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l000085AC:
// DataOut: cpsr r0 r1 r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l000085AE_thunk_vPortExitCritical:
	word32 r2_7
	word32 r4_8
	return vPortExitCritical(0x00000000, cpsr, out r2_7, out r4_8)
// DataOut: cpsr r0 r1 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r7 << 2 r0:0x00000000

fn000085AC_exit:
// DataOut: r0 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid> r0:<invalid> r2:<invalid>



word32 vPortExitCritical(word32 r0, word32 cpsr, ptr32 & r2Out, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut: r0 r2 r4
// Trashed: NZCV r0 r2 r4
// Preserved: r3 sp
vPortExitCritical_entry:
// DataOut: cpsr r0 r1 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000085B0:
	word32 r4_9
	word32 r0_10 = fn00008560(r0, cpsr, out r4_9)
	word32 r2_12 = Mem0[0x000085DE:word32]
	*r2Out = r2_12
	word32 r3_13 = Mem0[r2_12:word32]
	Mem16[r2_12:word32] = r3_13 - 0x00000001
	branch r3_13 != 0x00000001 l000085C4
// DataOut: cpsr r0 r1 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l000085C0:
	__msr(cpsr, r3_13 - 0x00000001)
// DataOut: cpsr r0 r1 r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r2:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> -8(fp):r3 -4(fp):lr

l000085C4:
	branch r0_10 == 0x00000001 l000085D0
// DataOut: cpsr r0 r1 r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r2:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> -8(fp):r3 -4(fp):lr

l000085C8:
	r0_10 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 r1 r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r2:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> -8(fp):r3 -4(fp):lr

l000085D0:
	__msr(cpsr, r0_10)
	return r0_10
// DataOut: cpsr r0 r1 r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r2:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> -8(fp):r3 -4(fp):lr

vPortExitCritical_exit:
// DataOut: r0 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:r3 r0:<invalid> r4:<invalid> -8(fp):r3 -4(fp):lr



void vParTestInitialise(word32 r0, word32 r5, word32 r6, word32 r7, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r5 r6 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
vParTestInitialise_entry:
// DataOut: r0 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000085DC:
	fn0000821C(r0, r5, r6, r7, r8)
	word32 r1_15 = (word32) Mem0[Mem0[0x000085F6:word32]:byte]
// DataOut: r1
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l000085EC_thunk_fn00008298:
	fn00008298(r1_15)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:<invalid> r0:0x00000005 r1:<invalid> lr:<invalid> sp:sp + 8 -8(fp):r3 -4(fp):lr

vParTestInitialise_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:<invalid> r0:<invalid> r1:<invalid> lr:<invalid> sp:sp + 8 r7:<invalid> -8(fp):r3 -4(fp):lr



void vParTestSetLED(word32 r1, word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r1 r3 r4 r5
// LiveOut:
// Trashed: NZCV r0 r1 r2 r7
// Preserved: lr r3 r4 r5 sp
vParTestSetLED_entry:
// DataOut: r1 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000085F4:
	word32 r4_15
	word32 r5_16
	word32 sp_17
	fn000088BC(r3, r4, r5, out r4_15, out r5_16, out sp_17)
	branch r4_15 >u 0x00000007 l00008618
// DataOut: r1 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008602:
	word32 r3_42 = Mem0[0x00008630:word32]
	word32 r0_43 = (uint32) (byte) (0x00000001 << r4_15)
	word32 r2_44 = (word32) Mem0[r3_42:byte]
	branch r5_16 == 0x00000000 l00008624
// DataOut: r0 r2 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008624:
	r0_43 = r2_44 & ~(r0_43 << 0x00000000)
	Mem52[r3_42:byte] = (byte) r0_43
// DataOut: r0 r2 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r2:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008610:
	Mem48[r3_42:byte] = (byte) (r0_43 | r2_44)
	r1 = (word32) Mem48[r3_42:byte]
// DataOut: r1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r2:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008618:
	fn00008298(r1)
	word32 sp_28
	word32 r3_29
	word32 r4_30
	word32 r5_31
	word32 lr_32
	word32 r0_33
	word32 r1_34
	byte NZCV_35
	byte ZC_36
	word32 pc_37
	word32 r2_38
	byte NZC_39
	call fn00C088DC (retsize: 0;)
		uses: dwLoc04_10,dwLoc08_8,dwLoc0C_6,dwLoc10_4,lr_26,NZCV_19,r0,r1_21,r3_23,r4_24,r5_25,sp_27,ZC_20
		defs: lr_32,NZC_39,NZCV_35,pc_37,r0_33,r1_34,r2_38,r3_29,r4_30,r5_31,sp_28,ZC_36
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r0:0x00000005 r2:<invalid> r1:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

vParTestSetLED_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r5:r5 r3:r3 lr:lr r0:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



word32 fn0000862C(word32 r1, word32 r6, word32 lr, ptr32 & r5Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr r1 r6
// LiveOut: lr r3 r5
// Trashed: NZCV lr r0 r1 r2 r3 r4 r5 r7 sp
// Preserved: sp
fn0000862C_entry:
// DataOut: cpsr lr r1 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000862C:
// DataOut: cpsr lr r1 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000862E_thunk_vParTestToggleLED:
	word32 r5_8
	word32 lr_9
	return vParTestToggleLED(r1, r6 << 31, lr, out r5_8, out lr_9)
// DataOut: cpsr lr r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r6 << 31 r0:0x00000000

fn0000862C_exit:
// DataOut: lr r3 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r5:<invalid> lr:<invalid> r7:<invalid>



word32 vParTestToggleLED(word32 r1, word32 r4, word32 lr, ptr32 & r5Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr r1 r4
// LiveOut: lr r3 r5
// Trashed: NZCV lr r0 r1 r2 r3 r4 r5 r7 sp
// Preserved:
vParTestToggleLED_entry:
// DataOut: cpsr lr r1 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008630:
	word32 r4_10
	word32 r5_11
	word32 sp_12
	word32 r3_13 = fn000088BC(r4, lr, dwArg00, out r4_10, out r5_11, out sp_12)
	branch r4_10 >u 0x00000007 l00008656
// DataOut: cpsr r1 r3 r4 r5 r6
// DataOut (flags): C
// SymbolicIn: sp:fp

l0000863A_thunk_fn00008656:
	word32 lr_41
	*lrOut = fn00008656(r1)
	return r3_13
// DataOut: cpsr lr r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> -8(fp):r4 -4(fp):lr

l0000863C:
	word32 r3_30 = Mem0[0x00008672:word32]
	word32 r1_32 = (word32) Mem0[r3_30:byte]
	word32 r2_34 = (uint32) (byte) (0x00000001 << r4_10) + r1_32 + (r4_10 <u 0x00000007)
	branch r2_34 != 0x00000000 l0000865E
// DataOut: cpsr r1 r2 r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> -8(fp):r4 -4(fp):lr

l0000864A_thunk_fn00008656:
	word32 lr_39
	*lrOut = fn00008656(r1_32)
	return r3_30
// DataOut: cpsr lr r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> -8(fp):r4 -4(fp):lr

l0000864C:
	word32 r1_37 = (word32) Mem0[r3_30:byte]
// DataOut: cpsr r1 r2 r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> -8(fp):r4 -4(fp):lr

l0000864C_thunk_fn0000864E:
	word32 lr_38
	*lrOut = fn0000864E(r1_37, r2_34, r3_30)
	return r3_30
// DataOut: cpsr lr r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> -8(fp):r4 -4(fp):lr

vParTestToggleLED_exit:
// DataOut: lr r3 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> lr:<invalid> r7:<invalid> -8(fp):r4 -4(fp):lr



word32 fn0000864E(word32 r1, word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r1 r2 r3
// LiveOut: lr
// Trashed: NZCV lr r0 r1 r2 r4 r7 sp
// Preserved: sp
l0000864E:
	r2 = r2 | r1
	NZC = cond(r2)
	Mem0[r3:byte] = (byte) r2
	r1 = (word32) Mem0[r3:byte]
	r0 = 0x00000005
// DataOut: cpsr r1 r3 r5 r6
// DataOut (flags): 
// SymbolicIn:

l00008654_thunk_fn00008656:
	lr = fn00008656(r1)
	return lr
// DataOut: cpsr lr r3 r5 r6
// DataOut (flags): 
// SymbolicIn:

fn0000864E_entry:
	def fp
	def r2
	def r1
	def r3
// DataOut: cpsr r1 r2 r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000864E:
	sp_1 = fp
	r2_4 = r2 | r1
	NZC_5 = cond(r2_4)
	Mem6[r3:byte] = (byte) r2_4
	r1_8 = (word32) Mem6[r3:byte]
	r0_9 = 0x00000005
// DataOut: cpsr r1 r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008654_thunk_fn00008656:
	lr_10 = fn00008656(r1_8)
	return lr_10
// DataOut: cpsr lr r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp r2:r2 | r1 r1:<invalid> r0:0x00000005

fn0000864E_exit:
	lr_11 = PHI(lr_10, lr)
// DataOut: lr
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:r2 | r1 r1:<invalid> r0:<invalid> r4:<invalid> lr:<invalid> r7:<invalid>



word32 fn00008656(word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r1
// LiveOut: lr
// Trashed: NZCV lr r0 r1 r4 r7 sp
// Preserved:
fn00008656_entry:
// DataOut: cpsr r1 r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(32)

l00008656:
	fn00008298(r1)
// DataOut: cpsr lr r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000865E:
	word32 sp_7
	word32 r4_8
	word32 lr_9
	word32 r1_10
	call fn00C088DC (retsize: 0;)
		uses: lr_5,r1,r4_4,sp_6
		defs: lr_9,r1_10,r4_8,sp_7
	return lr_9
// DataOut: cpsr lr r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:v3 + 8 r4:<invalid> lr:<invalid> r0:<invalid> r7:<invalid> r1:<invalid>

fn00008656_exit:
// DataOut: lr
// DataOut (flags): 
// SymbolicIn: sp:v3 + 8 r4:<invalid> lr:<invalid> r0:<invalid> r7:<invalid> r1:<invalid>



void prvFlashCoRoutine(word32 r0, word32 r1, word32 r6, word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr lr r0 r1 r6
// LiveOut:
// Trashed: NZCV lr r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved: r4 r5 r6 sp
prvFlashCoRoutine_entry:
// DataOut: cpsr lr r0 r1 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008670:
	word32 r3_13 = (word32) Mem0[r0 + 104:word16]
	branch r3_13 == 0x000001C2 l000086B2
// DataOut: cpsr lr r1 r3 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000867E:
	branch r3_13 == 0x000001C3 l00008688
// DataOut: cpsr lr r1 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r3:<invalid> r4:r0 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// LocalsOut: fp(32)

l00008686:
	branch r3_13 == 0x00000000 l000086D2
// DataOut: cpsr lr r1 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r3:<invalid> r4:r0 r2:0x000001C3 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// LocalsOut: fp(32)

l000086D2:
// DataOut: cpsr lr r1 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r3:<invalid> r4:r0 r2:0x000001C3 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000086D4:
	r6 = fp - 20
// DataOut: cpsr lr r1 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> r5:<invalid> r6:<invalid> lr:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00008692:
	r1 = r6
	word32 r5_45
	word32 r0_52
	word32 r4_53
	word32 r5_54
	byte Z_56 = fn000083FC(0xFFFFFFFF, fn0000862C(r1, r6, lr, out r5_45, out lr), cpsr, out r0_52, out r4_53, out r5_54, out r6)
	branch Z_56 l000086D4
// DataOut: cpsr lr r0 r1 r4 r5 r6 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> r5:<invalid> r6:<invalid> lr:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000086A6:
	branch Z_56 l000086C4
// DataOut: cpsr lr r0 r1 r4 r5 r6 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> r5:<invalid> r6:<invalid> lr:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000086C4:
	branch Z_56 l000086C6_thunk_fn000088A6
// DataOut: cpsr r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> r5:<invalid> r6:<invalid> lr:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000086C6_thunk_fn000088A6:
	fn000088A6(r4_53, r5_54, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> r5:<invalid> r6:<invalid> lr:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000086C8:
	Mem66[r4_53 + 104:word16] = 0x01C3
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> r5:<invalid> r6:<invalid> lr:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000086AA:
	branch r0_52 == 0x00000001 l000086AC_thunk_fn0000888C
// DataOut: cpsr lr r1 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> r5:<invalid> r6:<invalid> lr:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000086AC_thunk_fn0000888C:
	fn0000888C(cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> r5:<invalid> r6:<invalid> lr:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000086AE:
	r3_13 = Mem0[0x000086E8:word32]
// DataOut: cpsr lr r1 r3 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> r5:<invalid> r6:<invalid> lr:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000086B2:
	Mem41[r3_13:word32] = 0x00000000
// DataOut: cpsr lr r1 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r2:0x00000000 r1:<invalid> r5:<invalid> r6:<invalid> lr:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00008688:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r3:<invalid> r4:r0 r2:0x000001C3 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

prvFlashCoRoutine_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r2:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> lr:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



void prvFixedDelayCoRoutine(word32 r0, word32 r1, word32 r5, word32 r6, word32 r7, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr r0 r1 r5 r6 r7
// LiveOut:
// Trashed: NZCV lr r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved: r4 sp
prvFixedDelayCoRoutine_entry:
// DataOut: lr r0 r1 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000086E8:
	word32 r3_9 = (word32) Mem0[r0 + 104:word16]
	word32 r4_14 = r0
	branch r3_9 == 0x00000182 l0000874C
// DataOut: lr r3 r4 r5 r6 r7
// DataOut (flags): ZC
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Local -000C(32)

l0000874C:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r3:<invalid> r4:r0 -12(fp):r1 -8(fp):r4 -4(fp):lr

l000086F8:
	branch r3_9 <=u 0x00000182 l00008744
// DataOut: lr r3 r4 r5 r6 r7
// DataOut (flags): Z
// SymbolicIn: sp:fp - 16 r3:<invalid> r4:r0 -12(fp):r1 -8(fp):r4 -4(fp):lr
// LocalsOut: Local -000C(32)

l00008744:
	branch r3_9 == 0x00000182 l00008744_thunk_fn00008908
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r3:<invalid> r4:r0 -12(fp):r1 -8(fp):r4 -4(fp):lr

l00008744_thunk_fn00008908:
	fn00008908()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r3:<invalid> r4:r0 -12(fp):r1 -8(fp):r4 -4(fp):lr

l00008746:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r3:<invalid> r4:r0 -12(fp):r1 -8(fp):r4 -4(fp):lr

l0000875A:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r3:<invalid> r4:r0 -12(fp):r1 -8(fp):r4 -4(fp):lr

l000086FA:
	branch r3_9 != 0x00000183 l00008712
// DataOut: lr r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r3:<invalid> r4:r0 -12(fp):r1 -8(fp):r4 -4(fp):lr
// LocalsOut: Local -000C(32)

l00008700_thunk_fn0000870C:
	fn0000870C(r0)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r3:<invalid> r4:r0 r2:0x00000183 -12(fp):r1 -8(fp):r4 -4(fp):lr

l00008702:
	word32 r0_34 = Mem0[Mem0[0x0000877E:word32] + (r1 << 2):word32]
// DataOut: lr r0 r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r3:<invalid> r4:r0 r2:0x00000183 -12(fp):r1 -8(fp):r4 -4(fp):lr

l00008708:
	branch r0_34 != 0x00000000 l0000875E
// DataOut: lr r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r3:<invalid> r4:<invalid> r2:r1 r0:<invalid> r1:<invalid> r6:<invalid> r5:<invalid> lr:<invalid> r7:<invalid> -12(fp):r1 -8(fp):r4 -4(fp):lr

l0000875E:
	r0_34 = fn00008EEC(0x00000000, r1, r5, r6, r7, lr, out r4_14, out r5, out r6, out r7, out lr)
// DataOut: lr r0 r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r3:<invalid> r4:<invalid> r2:r1 r0:<invalid> r1:<invalid> r6:<invalid> r5:<invalid> lr:<invalid> r7:<invalid> -12(fp):r1 -8(fp):r4 -4(fp):lr

l00008708_thunk_fn0000870C:
	fn0000870C(r4_14)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r3:<invalid> r4:<invalid> r2:r1 r0:<invalid> r1:<invalid> r6:<invalid> r5:<invalid> lr:<invalid> r7:<invalid> -12(fp):r1 -8(fp):r4 -4(fp):lr

prvFixedDelayCoRoutine_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r6:<invalid> r5:<invalid> lr:<invalid> r7:<invalid> -12(fp):r1 -8(fp):r4 -4(fp):lr



void fn0000870C(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4
// LiveOut:
// Trashed: r3 r4 sp
// Preserved:
fn0000870C_entry:
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(32)

l0000870C:
	Mem3[r4 + 104:word16] = 0x0196
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008712:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:0x00000196

fn0000870C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 + 16 r3:0x00000196 r4:<invalid>



void vStartFlashCoRoutines(word32 r0, word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5 r6
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: lr r4 r5 r6 sp
vStartFlashCoRoutines_entry:
// DataOut: r0 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008784:
	branch r0 <u 0x00000008 l0000878A
// DataOut: r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008788_1:
// DataOut: r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000878A:
	word32 r5_18
	word32 sp_19
	fn00008A84(r4, r5, r6, out r5_18, out sp_19)
	word32 r3_22 = Mem0[0x000087C8:word32]
	Mem23[r3_22:word32] = 0x00000001
	branch 0x00000001 == 0x00000000 l000087C2
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00000008

l000087C2:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:0x00000001 r2:0x00000000 r5:<invalid> r1:0x00000004 r3:<invalid> r4:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l0000879E:
	branch r5_18 == 0x00000000 l000087B4
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:0x00000001 r2:0x00000000 r5:<invalid> r1:0x00000004 r3:<invalid> r4:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000087A0:
	word32 r5_71
	word32 sp_72
	word32 r4_73 = fn00008E3C(dwArg00, dwArg04, dwArg08, out r5_71, out sp_72)
	branch r4_73 != r5_71 l000087B2_thunk_fn000089A0
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:0x00000001 r2:0x00000000 r5:<invalid> r1:0x00000004 r3:<invalid> r4:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000087B2_thunk_fn000089A0:
	fn000089A0()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:0x00000000 r5:<invalid> r1:0x00000000 r3:<invalid> r4:<invalid> r6:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000087B4:
	word32 sp_48
	word32 r0_49
	byte NZCV_50
	byte C_51
	word32 r4_52
	word32 r5_53
	word32 r6_54
	word32 lr_55
	word32 r2_56
	word32 r1_57
	word32 r3_58
	word32 pc_59
	byte Z_60
	call fn00C08E3C (retsize: 0;)
		uses: C_4,dwLoc04_13,dwLoc08_11,dwLoc0C_9,dwLoc10_7,lr_42,NZCV_3,pc,r0_45,r1_44,r2_38,r3_22,r4_39,r5_40,r6_41,sp_43,Z
		defs: C_51,lr_55,NZCV_50,pc_59,r0_49,r1_57,r2_56,r3_58,r4_52,r5_53,r6_54,sp_48,Z_60
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:0x00000000 r5:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r6:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

vStartFlashCoRoutines_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r2:0x00000000 r5:r5 r1:<invalid> r3:<invalid> r4:r4 r6:r6 lr:lr -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



void xAreFlashCoRoutinesStillRunning()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0 r3
// Preserved: sp
xAreFlashCoRoutinesStillRunning_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000087D0:
	word32 sp_6
	word32 r3_7
	word32 pc_8
	word32 r0_9
	word32 lr_10
	call lr (retsize: 0;)
		uses: lr,r0_4,r3_3,sp_1
		defs: lr_10,pc_8,r0_9,r3_7,sp_6
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

xAreFlashCoRoutinesStillRunning_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>



void MPU_xTaskCreateRestricted(word32 r0, word32 cpsr, word64 d1, word64 d14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr d1 d14 r0
// LiveOut:
// Trashed: NZCV d18 r0 r10 r3 r7 r8 r9
// Preserved: r0 r1 r4 r5 r6 sp
MPU_xTaskCreateRestricted_entry:
// DataOut: cpsr d1 d14 r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000087DC:
	word32 r4_16
	fn00008560(r0, cpsr, out r4_16)
	word32 r0_20 = r0
	branch fn00000918(d14, d1) == 0x00000001 l000087FE
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000087F6:
	r0_20 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r1:r1 r4:<invalid> r0:<invalid> r3:<invalid> d18:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000087FE:
	__msr(cpsr, r0_20)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r1:r1 r4:<invalid> r0:<invalid> r3:<invalid> d18:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

MPU_xTaskCreateRestricted_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r6:r6 r1:r1 r4:r4 r0:<invalid> r3:<invalid> d18:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



word32 fn00008804(word32 dwArg00, word32 dwArg04, word32 dwArg08, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r4 sp
// Trashed: r4 r5 r6 sp
// Preserved:
// Stack args: Stack +0000(32)
fn00008804_entry:
// DataOut: r0 r10 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l00008804:
	word32 sp_8
	*spOut = fp + 16
	return dwArg00
// DataOut: r0 r10 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00008804_exit:
// DataOut: r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 16 r4:<invalid> r5:<invalid> r6:<invalid>



void MPU_xTaskCreate(word32 r0, word32 cpsr, word32 dwArg00, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xTaskCreate_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008808:
	word32 r4_33
	word32 r0_34 = fn00008560(r0, cpsr, out r4_33)
	fn000008B0(r0)
	word32 r0_41 = r0
	branch r0_34 == 0x00000001 l0000883E
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00008836:
	r0_41 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l0000883E:
	__msr(cpsr, r0_41)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 r0:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

MPU_xTaskCreate_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 r0:r0 sp:fp r4:r4 r5:r5 r6:r6 r7:r7 r8:r8 r9:r9 r10:r10 -40(fp):<invalid> -36(fp):<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr



void MPU_vTaskAllocateMPURegions(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed: NZCV r0
// Preserved: r1 r4 r5 r6 sp
MPU_vTaskAllocateMPURegions_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000884C:
	word32 r4_16
	word32 r0_17 = fn00008560(r0, cpsr, out r4_16)
	word32 r0_21 = fn0000096C(r0)
	branch r0_17 == 0x00000001 l0000886C
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008864:
	r0_21 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r6:r1 r4:<invalid> r1:r1 r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l0000886C:
	__msr(cpsr, r0_21)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r6:r1 r4:<invalid> r1:r1 r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

MPU_vTaskAllocateMPURegions_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r6:r6 r4:r4 r1:r1 r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



word32 fn00008870(word32 dwArg00, word32 dwArg04, word32 dwArg08, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r5 sp
// Trashed: r4 r5 r6 sp
// Preserved:
// Stack args: Stack +0004(32)
fn00008870_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0004(32)

l00008870:
	word32 sp_8
	*spOut = fp + 16
	return dwArg04
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00008870_exit:
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 16 r4:<invalid> r5:<invalid> r6:<invalid>



void MPU_vTaskDelayUntil(word32 r0, word32 r1, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved: r0 r1
MPU_vTaskDelayUntil_entry:
// DataOut: cpsr r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008874:
	word32 r4_16
	fn00008560(r0, cpsr, out r4_16)
	branch fn00000F7C(r0, r1, r0, cpsr) == 0x00000001 l00008894
// DataOut: cpsr
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000888A_thunk_fn0000888C:
	fn0000888C(cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l0000888A_thunk_fn0000888C:
	fn0000888C(cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

MPU_vTaskDelayUntil_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



void fn0000888C(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr
// LiveOut:
// Trashed: r0 r4 r5 r6 sp
// Preserved:
fn0000888C_entry:
// DataOut: cpsr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(32)

l0000888C:
	word32 r0_3 = __mrs(cpsr)
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008894:
	__msr(cpsr, r0_3 | 0x00000001)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r0:<invalid>

fn0000888C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 + 16 r0:<invalid> r4:<invalid> r5:<invalid> r6:<invalid>



void MPU_vTaskDelay(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_vTaskDelay_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000889C:
	word32 r4_14
	word32 r0_15 = fn00008560(r0, cpsr, out r4_14)
// DataOut: cpsr r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l000088A4_thunk_fn000088A6:
	fn000088A6(r0_15, r0, cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r0:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr
// Terminates process

MPU_vTaskDelay_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



void fn000088A6(word32 r4, word32 r5, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r4 r5
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
l000088A6:
	r0 = r5
	fn00000F44()
	NZCV = cond(r4 - 0x00000001)
	Z = NZCV (alias)
	branch Test(EQ,Z) l000088B8
// DataOut: cpsr
// DataOut (flags): 
// SymbolicIn:
// Terminates process

l000088AE_thunk_fn000088B0:
	fn000088B0(cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

l000088AE_thunk_fn000088B0:
	fn000088B0(cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000088A6_entry:
	def fp
	def r5
	def r4
	def cpsr
	def r3
	def Mem0
// DataOut: cpsr r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000088A6:
	sp_1 = fp
	r0_3 = r5
	fn00000F44()
	NZCV_5 = cond(r4 - 0x00000001)
	Z_6 = NZCV_5 (alias)
	branch r4 == 0x00000001 l000088B8_in_fn000088A6
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l000088B8_in_fn000088A6:
	__msr(cpsr, r0_3)
	r3_14 = Mem0[sp_1:word32]
	r4_15 = Mem0[sp_1 + 4:word32]
	r5_16 = Mem0[sp_1 + 8:word32]
	sp_17 = sp_1 + 16
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

l000088AE_thunk_fn000088B0:
	fn000088B0(cpsr)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000088A6_exit:
	r3_7 = PHI(r3_14, r3, r3, r3)
	r4_8 = PHI(r4_15, r4, r4, r4)
	r5_9 = PHI(r5_16, r5, r5, r5)
	sp_10 = PHI(sp_17, sp_1, sp, sp)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r0:<invalid>



void fn000088B0(word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr
// LiveOut:
// Trashed: r0 r3 r4 r5 sp
// Preserved:
fn000088B0_entry:
// DataOut: cpsr
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(32)

l000088B0:
	word32 r0_3 = __mrs(cpsr)
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000088B8:
	__msr(cpsr, r0_3 | 0x00000001)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r0:<invalid>

fn000088B0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 + 16 r0:<invalid> r3:<invalid> r4:<invalid> r5:<invalid>



word32 fn000088BC(word32 dwArg00, word32 dwArg04, word32 dwArg08, ptr32 & r4Out, ptr32 & r5Out, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r3 r4 r5 sp
// Trashed: r3 r4 r5 sp
// Preserved:
// Stack args: Stack +0000(32) Stack +0004(32) Stack +0008(32)
fn000088BC_entry:
// DataOut: cpsr r1 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32) Stack +0008(32)

l000088BC:
	word32 r4_5
	*r4Out = dwArg04
	word32 r5_7
	*r5Out = dwArg08
	word32 sp_8
	*spOut = fp + 16
	return dwArg00
// DataOut: cpsr r1 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn000088BC_exit:
// DataOut: r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 16 r3:<invalid> r4:<invalid> r5:<invalid>



void MPU_vTaskSuspendAll(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: r4 sp
MPU_vTaskSuspendAll_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000088C0:
	word32 r4_9
	word32 r2_13
	word32 r4_14
	word32 r0_12
	fn00000A08(fn00008560(r0, cpsr, out r4_9), out r0_12, out r2_13, out r4_14)
	branch r4_14 == 0x00000001 l000088D8
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l000088D0:
	r0_12 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:<invalid> r0:0x00000000 r2:<invalid> r3:<invalid> -8(fp):r4 -4(fp):lr

l000088D8:
	__msr(cpsr, r0_12)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> -8(fp):r4 -4(fp):lr

MPU_vTaskSuspendAll_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r0:<invalid> r2:<invalid> r3:<invalid> -8(fp):r4 -4(fp):lr



void MPU_xTaskResumeAll(word32 r0, word32 r1, word32 r2, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r2
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r7 sp
// Preserved: r0
MPU_xTaskResumeAll_entry:
// DataOut: cpsr r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000088E0:
	word32 r4_9
	fn00008560(r0, cpsr, out r4_9)
	word32 r1_14
	word32 r2_15
	word32 r3_16
	word32 r4_17
	word32 r5_18
	word32 r7_19
	word32 r0_20 = fn00000E68(r1, r2, cpsr, out r1_14, out r2_15, out r3_16, out r4_17, out r5_18, out r7_19)
	branch r4_17 == 0x00000001 l000088FA
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l000088F2:
	r0_20 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r2:<invalid> r1:<invalid> -8(fp):r4 -4(fp):lr

l000088FA:
	__msr(cpsr, r0_20)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r2:<invalid> r1:<invalid> -8(fp):r4 -4(fp):lr

l000088FE_thunk_fn00008900:
	fn00008900(dwArg00)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r2:<invalid> r1:<invalid> -8(fp):r4 -4(fp):lr

MPU_xTaskResumeAll_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r2:<invalid> r1:<invalid> -8(fp):r4 -4(fp):lr



word32 fn00008900(word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: sp
// Trashed: r4 sp
// Preserved:
fn00008900_entry:
// DataOut: cpsr r0 r1 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008900:
	return fp + 8
// DataOut: cpsr r0 r1 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00008900_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 8 r4:<invalid>



void MPU_xTaskGetTickCount(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xTaskGetTickCount_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008904:
	word32 r4_9
	fn00008560(r0, cpsr, out r4_9)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008906_thunk_fn00008908:
	fn00008908()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:<invalid> r0:<invalid> -8(fp):r4 -4(fp):lr
// Terminates process

MPU_xTaskGetTickCount_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp -8(fp):r4 -4(fp):lr



void fn00008908()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
l00008908:
	r4 = r0
	r0 = fn00000A1C(r0, out r4)
	NZCV = cond(r4 - 0x00000001)
	Z = NZCV (alias)
	r3 = r0
	branch Test(EQ,Z) l0000891E
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn:

l00008916:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn:

l0000891E:
	__msr(cpsr, r0)
	r0 = r3
	r4 = Mem0[sp:word32]
	sp = sp + 8
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00008908_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00008908_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008908:
	sp = fp
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_uxTaskGetNumberOfTasks(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed: NZCV r0 r3
// Preserved: r0 r4 sp
MPU_uxTaskGetNumberOfTasks_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008928:
	word32 r4_9
	word32 r4_12
	word32 r0_13 = fn00000A34(fn00008560(r0, cpsr, out r4_9), out r4_12)
	branch r4_12 == 0x00000001 l00008942
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000893A:
	r0_13 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:<invalid> r3:<invalid> r0:<invalid> -8(fp):r4 -4(fp):lr

l00008942:
	__msr(cpsr, r0_13)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:<invalid> r3:<invalid> r0:<invalid> -8(fp):r4 -4(fp):lr

MPU_uxTaskGetNumberOfTasks_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r3:<invalid> r0:<invalid> -8(fp):r4 -4(fp):lr



void MPU_pcTaskGetName(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed: NZCV r0
// Preserved: r0 r3 r4 r5 sp
MPU_pcTaskGetName_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000894C:
	word32 r4_14
	fn00008560(r0, cpsr, out r4_14)
	word32 r4_18
	word32 r0_19 = fn00000A40(r0, out r4_18)
	branch r4_18 == 0x00000001 l0000896A
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008962:
	r0_19 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r0:<invalid> r3:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l0000896A:
	__msr(cpsr, r0_19)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r0:<invalid> r3:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

MPU_pcTaskGetName_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r4:r4 r0:<invalid> r3:r3 -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



void MPU_vTaskSetTimeOutState(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed: NZCV r0 r2
// Preserved: r3 r4 r5 sp
MPU_vTaskSetTimeOutState_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008974:
	word32 r4_14
	fn00008560(r0, cpsr, out r4_14)
	word32 r4_18
	word32 r0_19 = fn00001140(r0, out r4_18)
	branch r4_18 == 0x00000001 l00008990
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008988:
	r0_19 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008990:
	__msr(cpsr, r0_19)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

MPU_vTaskSetTimeOutState_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r4:r4 r0:<invalid> r3:r3 r2:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



void MPU_xTaskCheckForTimeOut(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xTaskCheckForTimeOut_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008998:
	word32 r4_16
	fn00008560(r0, cpsr, out r4_16)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000899E_thunk_fn000089A0:
	fn000089A0()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r6:r1 r4:<invalid> r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// Terminates process

MPU_xTaskCheckForTimeOut_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



void fn000089A0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
l000089A0:
	r1 = r6
	r4 = r0
	r0 = r5
	r0 = fn00001154(r0, r1, r7, cpsr, out r4)
	NZCV = cond(r4 - 0x00000001)
	Z = NZCV (alias)
	r3 = r0
	branch Test(EQ,Z) l000089BA
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn:

l000089B2:
	r0 = __mrs(cpsr)
	r0 = r0 | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn:

l000089BA:
	__msr(cpsr, r0)
	r0 = r3
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	sp = sp + 16
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000089A0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000089A0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000089A0:
	sp = fp
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void MPU_xTaskGenericNotify(word32 r0, word32 r1, word32 r2, word32 r3, word32 lr, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr lr r0 r1 r2 r3
// LiveOut:
// Trashed: NZCV lr r0 r1 r2 r3 r9
// Preserved: r0 r1 r2 r4 r5 r6 r7 r8 sp
MPU_xTaskGenericNotify_entry:
// DataOut: cpsr lr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000089C4:
	word32 r4_24
	fn00008560(r0, cpsr, out r4_24)
	word32 r4_31
	word32 r0_32 = fn00000A54(r0, r1, r2, r3, r0, r1, r2, lr, cpsr, out r4_31)
	branch r4_31 == 0x00000001 l000089F0
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000089E8:
	r0_32 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r3:<invalid> r4:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r9:<invalid> lr:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l000089F0:
	__msr(cpsr, r0_32)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r3:<invalid> r4:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r9:<invalid> lr:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

MPU_xTaskGenericNotify_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r6:r6 r7:r7 r8:r8 r3:<invalid> r4:r4 r2:<invalid> r1:<invalid> r0:<invalid> r9:<invalid> lr:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr



void MPU_xTaskNotifyWait(word32 r0, word32 r1, word32 r2, word32 r3, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r2 r3
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r0 r1 r2 r4 r5 r6 r7 r8 sp
MPU_xTaskNotifyWait_entry:
// DataOut: cpsr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000089FC:
	word32 r4_24
	fn00008560(r0, cpsr, out r4_24)
	word32 r4_31
	word32 r0_32 = fn00000BD0(r0, r1, r2, r3, cpsr, out r4_31)
	branch r4_31 == 0x00000001 l00008A28
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008A20:
	r0_32 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r5:r0 r6:r1 r7:r2 r8:r3 r3:<invalid> r4:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00008A28:
	__msr(cpsr, r0_32)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r5:r0 r6:r1 r7:r2 r8:r3 r3:<invalid> r4:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

MPU_xTaskNotifyWait_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r6:r6 r7:r7 r8:r8 r3:<invalid> r4:r4 r2:<invalid> r1:<invalid> r0:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr



void MPU_ulTaskNotifyTake(word32 r0, word32 r1, word32 r7, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_ulTaskNotifyTake_entry:
// DataOut: cpsr r0 r1 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008A34:
	word32 r4_16
	word32 r0_17 = fn00008560(r0, cpsr, out r4_16)
	fn00000CFC(r0, r1, r7, cpsr)
	word32 r0_20 = r0
	branch r0_17 == 0x00000001 l00008A56
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00008A4E:
	r0_20 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00008A56:
	__msr(cpsr, r0_20)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

MPU_ulTaskNotifyTake_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 r0:r0 sp:fp r4:r4 r5:r5 r6:r6 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



void MPU_xTaskNotifyStateClear(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xTaskNotifyStateClear_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008A60:
	word32 r4_14
	word32 r0_15 = fn00008560(r0, cpsr, out r4_14)
	fn00008530()
	word32 r0_17 = r0
	branch r0_15 == 0x00000001 l00008A7E
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00008A76:
	r0_17 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008A7E:
	__msr(cpsr, r0_17)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 r0:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

MPU_xTaskNotifyStateClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r3 r0:r0 sp:fp r4:r4 r5:r5 -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



word32 fn00008A84(word32 dwArg00, word32 dwArg04, word32 dwArg08, ptr32 & r5Out, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r4 r5 sp
// Trashed: r3 r4 r5 sp
// Preserved:
// Stack args: Stack +0004(32) Stack +0008(32)
fn00008A84_entry:
// DataOut: r10 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00008A84:
	word32 r5_7
	*r5Out = dwArg08
	word32 sp_8
	*spOut = fp + 16
	return dwArg04
// DataOut: r10 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00008A84_exit:
// DataOut: r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 16 r3:<invalid> r4:<invalid> r5:<invalid>



void MPU_xQueueGenericCreate(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xQueueGenericCreate_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008A88:
	word32 r4_22
	word32 r0_23 = fn00008560(r0, cpsr, out r4_22)
	fn000006A8()
	word32 r0_27 = r0
	branch r0_23 == 0x00000001 l00008AAE
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00008AA6:
	r0_27 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00008AAE:
	__msr(cpsr, r0_27)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 r0:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

MPU_xQueueGenericCreate_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r3 r0:r0 sp:fp r4:r4 r5:r5 r6:r6 r7:r7 -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr



void MPU_xQueueGenericReset(word32 r0, word32 r4, word32 r5, word32 r6, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r4 r5 r6
// LiveOut:
// Trashed: NZCV r0 r3
// Preserved: r0 r1 r4 r5 r6 sp
MPU_xQueueGenericReset_entry:
// DataOut: cpsr r0 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008AB8:
	word32 r4_16
	fn00008560(r0, cpsr, out r4_16)
	word32 r4_21
	word32 sp_22
	word32 r0_23 = fn0000062C(r4, r5, r6, out r4_21, out sp_22)
	branch r4_21 == 0x00000001 l00008ADA
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008AD2:
	r0_23 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:r1 r1:r1 r4:<invalid> r0:<invalid> r3:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00008ADA:
	__msr(cpsr, r0_23)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:r1 r1:r1 r4:<invalid> r0:<invalid> r3:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

MPU_xQueueGenericReset_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r6:r6 r1:r1 r4:r4 r0:<invalid> r3:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



word32 fn00008AE0(word32 dwArg00, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r4
// Trashed: r4 r5 r6 sp
// Preserved:
// Stack args: Stack +0000(32)
fn00008AE0_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l00008AE0:
	return dwArg00
// DataOut: r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00008AE0_exit:
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:fp + 16 r4:<invalid> r5:<invalid> r6:<invalid>



void MPU_xQueueGenericSend(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed: NZCV r0 r3
// Preserved: r0 r1 r2 r4 r5 r6 r7 r8 sp
MPU_xQueueGenericSend_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008AE4:
	word32 r4_24
	word32 r0_25 = fn00008560(r0, cpsr, out r4_24)
	fn0000018C()
	word32 r0_30 = r0
	branch r0_25 == 0x00000001 l00008B10
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008B08:
	r0_30 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r5:r0 r6:r1 r7:r2 r8:r3 r3:<invalid> r4:<invalid> r2:r2 r1:r1 r0:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00008B10:
	__msr(cpsr, r0_30)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r5:r0 r6:r1 r7:r2 r8:r3 r3:<invalid> r4:<invalid> r2:r2 r1:r1 r0:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

MPU_xQueueGenericSend_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r6:r6 r7:r7 r8:r8 r3:<invalid> r4:r4 r2:r2 r1:r1 r0:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr



void MPU_uxQueueMessagesWaiting(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_uxQueueMessagesWaiting_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008B1C:
	word32 r4_14
	word32 r0_15 = fn00008560(r0, cpsr, out r4_14)
	fn00000424()
	word32 r0_17 = r0
	branch r0_15 == 0x00000001 l00008B3A
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00008B32:
	r0_17 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008B3A:
	__msr(cpsr, r0_17)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 r0:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

MPU_uxQueueMessagesWaiting_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r3 r0:r0 sp:fp r4:r4 r5:r5 -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



void MPU_uxQueueSpacesAvailable(word32 r0, word32 r3, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r3
// LiveOut:
// Trashed: NZCV r0
// Preserved: r0 r3 r4 r5 sp
MPU_uxQueueSpacesAvailable_entry:
// DataOut: cpsr r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008B44:
	word32 r4_14
	fn00008560(r0, cpsr, out r4_14)
	word32 r0_17 = r0
	word32 sp_18
	branch fn00000438(r3, out sp_18) == 0x00000001 l00008B62
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008B5A:
	r0_17 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:r0 r4:<invalid> r0:<invalid> r3:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008B62:
	__msr(cpsr, r0_17)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:r0 r4:<invalid> r0:<invalid> r3:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

MPU_uxQueueSpacesAvailable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r4:r4 r0:<invalid> r3:r3 -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



word32 fn00008B68(word32 dwArg00, word32 dwArg04, word32 dwArg08, ptr32 & r4Out, ptr32 & r5Out, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r3 r4 r5 sp
// Trashed: r3 r4 r5 sp
// Preserved:
// Stack args: Stack +0000(32) Stack +0004(32) Stack +0008(32)
fn00008B68_entry:
// DataOut: r10 r2 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32) Stack +0008(32)

l00008B68:
	word32 r4_5
	*r4Out = dwArg04
	word32 r5_7
	*r5Out = dwArg08
	word32 sp_8
	*spOut = fp + 16
	return dwArg00
// DataOut: r10 r2 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00008B68_exit:
// DataOut: r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 16 r3:<invalid> r4:<invalid> r5:<invalid>



void MPU_xQueueGenericReceive(word32 r0, word32 r2, word32 r4, word32 r5, word32 r6, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r2 r4 r5 r6
// LiveOut:
// Trashed: NZCV r0 r1 r3
// Preserved: r0 r1 r2 r4 r5 r6 r7 r8 sp
MPU_xQueueGenericReceive_entry:
// DataOut: cpsr r0 r2 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008B6C:
	word32 r4_24
	fn00008560(r0, cpsr, out r4_24)
	word32 r0_30 = r0
	word32 sp_31
	branch fn000002D4(r2, r4, r5, r6, out sp_31) == 0x00000001 l00008B98
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008B90:
	r0_30 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r7:r2 r8:r3 r3:<invalid> r4:<invalid> r2:r2 r1:<invalid> r0:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00008B98:
	__msr(cpsr, r0_30)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r7:r2 r8:r3 r3:<invalid> r4:<invalid> r2:r2 r1:<invalid> r0:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

MPU_xQueueGenericReceive_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r6:r6 r7:r7 r8:r8 r3:<invalid> r4:r4 r2:r2 r1:<invalid> r0:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr



void MPU_xQueuePeekFromISR(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xQueuePeekFromISR_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008BA4:
	word32 r4_16
	word32 r0_17 = fn00008560(r0, cpsr, out r4_16)
	fn000002A0()
	word32 r0_20 = r0
	branch r0_17 == 0x00000001 l00008BC6
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00008BBE:
	r0_20 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00008BC6:
	__msr(cpsr, r0_20)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

MPU_xQueuePeekFromISR_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 r0:r0 sp:fp r4:r4 r5:r5 r6:r6 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



void MPU_xQueueGetMutexHolder(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed: NZCV r0
// Preserved: r0 r3 r4 r5 sp
MPU_xQueueGetMutexHolder_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008BD0:
	word32 r4_14
	word32 r0_15 = fn00008560(r0, cpsr, out r4_14)
	word32 r0_18 = uxQueueMessagesWaitingFromISR(r0)
	branch r0_15 == 0x00000001 l00008BEE
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008BE6:
	r0_18 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r0:<invalid> r3:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008BEE:
	__msr(cpsr, r0_18)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r0:<invalid> r3:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

MPU_xQueueGetMutexHolder_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r4:r4 r0:<invalid> r3:r3 -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



void MPU_xQueueCreateMutex(word32 r0, word32 r1, word32 r3, word32 r6, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r3 r6
// LiveOut:
// Trashed: NZCV r0 r1 r6
// Preserved: r0 r3 r4 r5 sp
MPU_xQueueCreateMutex_entry:
// DataOut: cpsr r0 r1 r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008BF8:
	word32 r4_14
	word32 r4_20
	word32 sp_21
	word32 r0_22 = fn000006D8(r0, r1, r3, fn00008560(r0, cpsr, out r4_14), r0, r6, out r4_20, out sp_21)
	branch r4_20 == 0x00000001 l00008C16
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008C0E:
	r0_22 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r0:<invalid> r3:<invalid> r1:0x00000001 r6:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008C16:
	__msr(cpsr, r0_22)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r0:<invalid> r3:<invalid> r1:0x00000001 r6:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

MPU_xQueueCreateMutex_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r4:r4 r0:<invalid> r3:r3 r1:0x00000001 r6:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



void MPU_xQueueTakeMutexRecursive(word32 r0, word32 r4, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r4
// LiveOut:
// Trashed: NZCV r0 r3
// Preserved: r0 r1 r4 r5 r6 sp
MPU_xQueueTakeMutexRecursive_entry:
// DataOut: cpsr r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008C20:
	word32 r4_16
	fn00008560(r0, cpsr, out r4_16)
	word32 r4_21
	word32 sp_22
	word32 r0_23 = fn000005D0(r4, out r4_21, out sp_22)
	branch r4_21 == 0x00000001 l00008C42
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008C3A:
	r0_23 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:r0 r6:r1 r1:r1 r4:<invalid> r0:<invalid> r3:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00008C42:
	__msr(cpsr, r0_23)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:r0 r6:r1 r1:r1 r4:<invalid> r0:<invalid> r3:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

MPU_xQueueTakeMutexRecursive_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r6:r6 r1:r1 r4:r4 r0:<invalid> r3:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



void MPU_xQueueGiveMutexRecursive(word32 r0, word32 r3, word32 r4, word32 r5, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r3 r4 r5
// LiveOut:
// Trashed: NZCV r0 r6
// Preserved: r0 r3 r4 r5 sp
MPU_xQueueGiveMutexRecursive_entry:
// DataOut: cpsr r0 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008C4C:
	word32 r0_17 = r0
	word32 r4_14
	word32 sp_18
	branch fn00000600(r3, fn00008560(r0, cpsr, out r4_14), r3, r4, r5, out sp_18) == 0x00000001 l00008C6A
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008C62:
	r0_17 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008C6A:
	__msr(cpsr, r0_17)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

MPU_xQueueGiveMutexRecursive_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r4:r4 r0:<invalid> r3:r3 r6:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



void MPU_vQueueDelete(word32 r0, word32 r3, word32 r4, word32 r5, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r3 r4 r5
// LiveOut:
// Trashed: NZCV r0
// Preserved: r3 r4 r5 sp
MPU_vQueueDelete_entry:
// DataOut: cpsr r0 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008C74:
	word32 r4_14
	fn00008560(r0, cpsr, out r4_14)
	word32 r0_17 = r0
	word32 sp_18
	branch fn00000450(r3, r4, r5, out sp_18) == 0x00000001 l00008C90
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008C88:
	r0_17 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r0:<invalid> r3:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008C90:
	__msr(cpsr, r0_17)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r4:<invalid> r0:<invalid> r3:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

MPU_vQueueDelete_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r4:r4 r0:<invalid> r3:r3 -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



void MPU_pvPortMalloc(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_pvPortMalloc_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008C98:
	word32 r4_14
	word32 r0_15 = fn00008560(r0, cpsr, out r4_14)
	fn00001728()
	word32 r0_17 = r0
	branch r0_15 == 0x00000001 l00008CB6
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00008CAE:
	r0_17 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008CB6:
	__msr(cpsr, r0_17)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 r0:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

MPU_pvPortMalloc_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r3 r0:r0 sp:fp r4:r4 r5:r5 -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



void MPU_vPortFree(word32 r0, word32 r6, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r6
// LiveOut:
// Trashed: NZCV r0
// Preserved: r3 r4 r5 sp
MPU_vPortFree_entry:
// DataOut: cpsr r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008CC0:
	word32 r4_14
	word32 r0_15 = fn00008560(r0, cpsr, out r4_14)
	word32 r0_19 = fn0000177C(r6)
	branch r0_15 == 0x00000001 l00008CDC
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008CD4:
	r0_19 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r0:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008CDC:
	__msr(cpsr, r0_19)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r0:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

MPU_vPortFree_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r4:r4 r0:<invalid> r3:r3 -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



void MPU_vPortInitialiseBlocks(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed: NZCV r0
// Preserved: r4 sp
MPU_vPortInitialiseBlocks_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008CE4:
	word32 r4_9
	word32 r0_10 = fn00008560(r0, cpsr, out r4_9)
	vPortFree()
	branch r0_10 == 0x00000001 l00008CFC
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008CF4:
	r0_10 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:<invalid> r0:<invalid> -8(fp):r4 -4(fp):lr

l00008CFC:
	__msr(cpsr, r0_10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:<invalid> r0:<invalid> -8(fp):r4 -4(fp):lr

MPU_vPortInitialiseBlocks_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r0:<invalid> -8(fp):r4 -4(fp):lr



void MPU_xPortGetFreeHeapSize(word32 r0, word32 r6, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r6
// LiveOut:
// Trashed: NZCV r0 r3
// Preserved: r0 r4 sp
MPU_xPortGetFreeHeapSize_entry:
// DataOut: cpsr r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008D04:
	word32 r4_9
	word32 r0_10 = fn00008560(r0, cpsr, out r4_9)
	word32 r0_13 = fn00001790(r6)
	branch r0_10 == 0x00000001 l00008D1E
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008D16:
	r0_13 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:<invalid> r3:<invalid> r0:<invalid> -8(fp):r4 -4(fp):lr

l00008D1E:
	__msr(cpsr, r0_13)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:<invalid> r3:<invalid> r0:<invalid> -8(fp):r4 -4(fp):lr

MPU_xPortGetFreeHeapSize_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r3:<invalid> r0:<invalid> -8(fp):r4 -4(fp):lr



void MPU_xEventGroupCreate(word32 r0, word32 r6, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xEventGroupCreate_entry:
// DataOut: cpsr r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008D28:
	word32 r4_9
	word32 r0_10 = fn00008560(r0, cpsr, out r4_9)
	fn000017A4(r6)
	branch r0_10 == 0x00000001 l00008D42
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00008D3A:
	r0_10 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -8(fp):r4 -4(fp):lr

l00008D42:
	__msr(cpsr, r0_10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 r0:<invalid> -8(fp):r4 -4(fp):lr

MPU_xEventGroupCreate_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 r0:r0 sp:fp r4:r4 -8(fp):r4 -4(fp):lr



void MPU_xEventGroupWaitBits(word32 r0, word32 cpsr, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed: NZCV r0 r3
// Preserved: r0 r1 r2 r4 r5 r6 r7 r8 r9 sp
// Stack args: Stack +0000(32)
MPU_xEventGroupWaitBits_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l00008D4C:
	word32 r4_29
	fn00008560(r0, cpsr, out r4_29)
	word32 r0_36 = r0
	word32 sp_37
	branch fn000017C0(dwArg00, out sp_37) == 0x00000001 l00008D7E
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008D76:
	r0_36 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:r0 r6:r1 r8:r2 r9:r3 r7:<invalid> r3:<invalid> r4:<invalid> r2:r2 r1:r1 r0:<invalid> -40(fp):<invalid> -28(fp):r4 -24(fp):r5 -20(fp):r6 -16(fp):r7 -12(fp):r8 -8(fp):r9 -4(fp):lr

l00008D7E:
	__msr(cpsr, r0_36)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:r0 r6:r1 r8:r2 r9:r3 r7:<invalid> r3:<invalid> r4:<invalid> r2:r2 r1:r1 r0:<invalid> -40(fp):<invalid> -28(fp):r4 -24(fp):r5 -20(fp):r6 -16(fp):r7 -12(fp):r8 -8(fp):r9 -4(fp):lr

MPU_xEventGroupWaitBits_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r6:r6 r8:r8 r9:r9 r7:r7 r3:<invalid> r4:r4 r2:r2 r1:r1 r0:<invalid> -40(fp):<invalid> -28(fp):r4 -24(fp):r5 -20(fp):r6 -16(fp):r7 -12(fp):r8 -8(fp):r9 -4(fp):lr



void MPU_xEventGroupClearBits(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
MPU_xEventGroupClearBits_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008D8C:
	word32 r4_16
	word32 r0_17 = fn00008560(r0, cpsr, out r4_16)
	fn00001870()
	word32 r0_20 = r0
	branch r0_17 == 0x00000001 l00008DAE
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00008DA6:
	r0_20 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00008DAE:
	__msr(cpsr, r0_20)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

MPU_xEventGroupClearBits_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 r0:r0 sp:fp r4:r4 r5:r5 r6:r6 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



void MPU_xEventGroupSetBits(word32 r0, word32 r4, word32 r5, word32 r6, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r4 r5 r6
// LiveOut:
// Trashed: NZCV r0 r3
// Preserved: r0 r1 r4 r5 r6 sp
MPU_xEventGroupSetBits_entry:
// DataOut: cpsr r0 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008DB8:
	word32 r4_16
	fn00008560(r0, cpsr, out r4_16)
	word32 r0_20 = r0
	word32 r5_21
	word32 r6_22
	word32 sp_23
	branch fn0000188C(r4, r5, r6, out r5_21, out r6_22, out sp_23) == 0x00000001 l00008DDA
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008DD2:
	r0_20 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r1:r1 r4:<invalid> r0:<invalid> r3:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00008DDA:
	__msr(cpsr, r0_20)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r1:r1 r4:<invalid> r0:<invalid> r3:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

MPU_xEventGroupSetBits_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r6:r6 r1:r1 r4:r4 r0:<invalid> r3:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



void MPU_xEventGroupSync(word32 r0, word32 r1, word32 r2, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r2
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: r0 r1 r2 r4 r5 r6 r7 r8 sp
MPU_xEventGroupSync_entry:
// DataOut: cpsr r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008DE4:
	word32 r4_24
	fn00008560(r0, cpsr, out r4_24)
	word32 r4_31
	word32 r0_32 = fn000018F4(r1, r2, r0, r2, cpsr, out r4_31)
	branch r4_31 == 0x00000001 l00008E10
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008E08:
	r0_32 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r8:r3 r3:<invalid> r4:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00008E10:
	__msr(cpsr, r0_32)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r8:r3 r3:<invalid> r4:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

MPU_xEventGroupSync_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r6:r6 r7:r7 r8:r8 r3:<invalid> r4:r4 r2:<invalid> r1:<invalid> r0:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr



void MPU_vEventGroupDelete(word32 r0, word32 cpsr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0
// LiveOut:
// Trashed: NZCV r0
// Preserved: r3 r4 r5 sp
MPU_vEventGroupDelete_entry:
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008E1C:
	word32 r4_14
	word32 r0_15 = fn00008560(r0, cpsr, out r4_14)
	word32 r0_18 = fn000019A0(r0)
	branch r0_15 == 0x00000001 l00008E38
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008E30:
	r0_18 = __mrs(cpsr) | 0x00000001
// DataOut: cpsr r0
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r0:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l00008E38:
	__msr(cpsr, r0_18)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r0 r4:<invalid> r0:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

MPU_vEventGroupDelete_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r4:r4 r0:<invalid> r3:r3 -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



word32 fn00008E3C(word32 dwArg00, word32 dwArg04, word32 dwArg08, ptr32 & r5Out, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r4 r5 sp
// Trashed: r3 r4 r5 sp
// Preserved:
// Stack args: Stack +0004(32) Stack +0008(32)
fn00008E3C_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00008E3C:
	word32 r5_7
	*r5Out = dwArg08
	word32 sp_8
	*spOut = fp + 16
	return dwArg04
// DataOut: r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00008E3C_exit:
// DataOut: r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 16 r3:<invalid> r4:<invalid> r5:<invalid>



void xCoRoutineCreate(word32 r0, word32 r1, word32 r2, word32 r4, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2 r4 r6 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
xCoRoutineCreate_entry:
// DataOut: r0 r1 r2 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008E40:
	fn00001728()
	branch 0x00000038 == 0x00000000 l00008EE0
// DataOut: r0 r10 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00008E54:
	r7 = Mem0[0x00008EF0:word32]
	r4 = 0x00000038
	branch Mem0[r7:word32] == 0x00000000 l00008EAC
// DataOut: r0 r10 r4 r5 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: -40(fp):r3 -36(fp):r4 -32(fp):r5 -28(fp):r6 -24(fp):r7 -20(fp):r8 -16(fp):r9 -12(fp):r10 -8(fp):fp -4(fp):lr

l00008EAC:
	Mem87[r7:word32] = 0x00000038
	fn000082CC(r7 + 4)
	fn000082CC(r7 + 0x00000018)
	fn000082CC(r7 + 0x0000002C)
	fn000082CC(r7 + 0x00000040)
	fn000082CC(r7 + 0x00000054)
	Mem96[r7 + 104:word32] = r7 + 0x0000002C
	r6 = r7 + 0x00000040
// DataOut: r10 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:r0 r3:<invalid> -40(fp):r3 -36(fp):r4 -32(fp):r5 -28(fp):r6 -24(fp):r7 -20(fp):r8 -16(fp):r9 -12(fp):r10 -8(fp):fp -4(fp):lr

l00008EE0:
	Mem81[r7 + 108:word32] = r6
// DataOut: r10 r4 r5 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:r0 r3:<invalid> r8:<invalid> r0:<invalid> fp:<invalid> r6:<invalid> r1:0xFFFFFFFF r2:0x00000000 -40(fp):r3 -36(fp):r4 -32(fp):r5 -28(fp):r6 -24(fp):r7 -20(fp):r8 -16(fp):r9 -12(fp):r10 -8(fp):fp -4(fp):lr

l00008E5C:
	branch r1 <u 0x00000001 l00008E66
// DataOut: r10 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:r0 r3:<invalid> r8:<invalid> r0:<invalid> fp:<invalid> r6:<invalid> r1:0xFFFFFFFF r2:0x00000000 -40(fp):r3 -36(fp):r4 -32(fp):r5 -28(fp):r6 -24(fp):r7 -20(fp):r8 -16(fp):r9 -12(fp):r10 -8(fp):fp -4(fp):lr

l00008E64_1:
// DataOut: r10 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:r0 r3:<invalid> r8:<invalid> r0:<invalid> fp:<invalid> r6:<invalid> r1:0xFFFFFFFF r2:0x00000000 -40(fp):r3 -36(fp):r4 -32(fp):r5 -28(fp):r6 -24(fp):r7 -20(fp):r8 -16(fp):r9 -12(fp):r10 -8(fp):fp -4(fp):lr

l00008E66:
	Mem43[r4 + 104:word16] = 0x0000
	Mem44[r4 + 44:word32] = 0x00000001
	Mem45[r4 + 48:word32] = r2
	Mem46[r4:word32] = r0
	fn000082E4()
	fn000082E4()
	word32 r0_50 = Mem46[r4 + 44:word32]
	branch r0_50 <=u Mem46[r7 + 112:word32] l00008E92
// DataOut: r0 r4 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:r0 r3:<invalid> r8:<invalid> r5:0x00000001 r0:<invalid> fp:<invalid> r6:<invalid> r1:0xFFFFFFFF r2:0x00000000 -40(fp):r3 -36(fp):r4 -32(fp):r5 -28(fp):r6 -24(fp):r7 -20(fp):r8 -16(fp):r9 -12(fp):r10 -8(fp):fp -4(fp):lr

l00008E90_1:
	Mem72[r7 + 112:word32] = r0_50
// DataOut: r0 r4 r8 sp
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:r0 r3:<invalid> r8:<invalid> r5:0x00000001 r6:r0 + 4 r0:<invalid> fp:<invalid> r1:0xFFFFFFFF r2:0x00000000 -40(fp):r3 -36(fp):r4 -32(fp):r5 -28(fp):r6 -24(fp):r7 -20(fp):r8 -16(fp):r9 -12(fp):r10 -8(fp):fp -4(fp):lr

l00008E92:
	Mem57[r4 + 24:word32] = 0x00000001
	Mem58[r4 + 16:word32] = r4
	Mem59[r4 + 36:word32] = r4
	fn000082EC()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:r0 r3:<invalid> r8:<invalid> r5:0x00000001 r6:r0 + 4 r0:<invalid> fp:<invalid> r1:0xFFFFFFFF r2:0x00000000 -40(fp):r3 -36(fp):r4 -32(fp):r5 -28(fp):r6 -24(fp):r7 -20(fp):r8 -16(fp):r9 -12(fp):r10 -8(fp):fp -4(fp):lr

xCoRoutineCreate_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r7:r7 r4:r4 r3:r3 r8:r8 r5:r5 r6:r6 r0:0x00000001 sp:fp r1:r0 + 4 r9:r9 r10:r10 fp:fp r2:0x00000000 -40(fp):r3 -36(fp):r4 -32(fp):r5 -28(fp):r6 -24(fp):r7 -20(fp):r8 -16(fp):r9 -12(fp):r10 -8(fp):fp -4(fp):lr



word32 fn00008EEC(word32 r1, word32 r2, word32 r5, word32 r6, word32 r7, word32 lr, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr r1 r2 r5 r6 r7
// LiveOut: lr r0 r4 r5 r6 r7
// Trashed: NZCV lr r0 r1 r3 r4 r5 r6 r7
// Preserved: sp
fn00008EEC_entry:
	*r5Out = r5
	*r6Out = r6
	*lrOut = lr
// DataOut: lr r1 r2 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008EEC:
	word32 r4_3
	*r4Out = r7 << 31
// DataOut: lr r0 r1 r2 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008EEE_thunk_vCoRoutineAddToDelayedList:
	word32 r7_11
	return vCoRoutineAddToDelayedList(0x00000000, r1, r2, r7 << 31, r5, r6, lr, out r7_11)
// DataOut: lr r0 r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r7 << 31 r0:0x00000000

fn00008EEC_exit:
// DataOut: lr r0 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r6:<invalid> r5:<invalid> lr:<invalid> r7:<invalid>



word32 vCoRoutineAddToDelayedList(word32 r0, word32 r1, word32 r2, word32 r4, word32 r5, word32 r6, word32 lr, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr r0 r1 r2 r4 r5 r6
// LiveOut: r0 r7
// Trashed: NZCV lr r0 r1 r3 r4 r5 r6 r7
// Preserved: lr r4 r5 r6 sp
vCoRoutineAddToDelayedList_entry:
// DataOut: lr r0 r1 r2 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008EF0:
	word32 r4_14 = Mem0[0x00008F2C:word32]
	word32 r3_15 = Mem0[r4_14:word32]
	word32 r4_23
	word32 r5_24
	word32 r6_25
	word32 r7_26
	word32 sp_27
	fn0000833C(r3_15 + 0x00000004, r1, r2, r3_15, r4_14, Mem0[r4_14 + 116:word32] + r0, r4, r5, r6, lr, dwArg00, out r4_23, out r5_24, out r6_25, out r7_26, out sp_27)
	word32 r3_29 = Mem0[r4_23 + 116:word32]
	Mem33[Mem0[r4_23:word32] + 4:word32] = r5_24
	branch r5_24 >=u r3_29 l00008F0E
// DataOut: r1 r2 r4 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008F0C_1:
// DataOut: r1 r2 r4 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00008F0E:
	word32 r0_34 = Mem33[r4_23 + 104:word32]
	fn00008308(r0_34, r2)
	branch r6_25 == 0x00000000 l00008F26
// DataOut: r0 r2 r4 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00008F26:
	return r0_34
// DataOut: r0 r2 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00008F18:
// DataOut: r0 r2 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00008F22_thunk_fn00008308:
	fn00008308(r6_25, r2)
	return r6_25
// DataOut: r0 r2 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> r0:<invalid> r1:<invalid> lr:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

vCoRoutineAddToDelayedList_exit:
// DataOut: r0 r7
// DataOut (flags): 
// SymbolicIn: sp:fp r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> r0:<invalid> r1:<invalid> lr:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



word32 fn00008F28(word32 r1, word32 r2, word32 r5, word32 r6, word32 r7, word32 r8, word32 cpsr, ptr32 & r2Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r1 r2 r5 r6 r7 r8
// LiveOut: r1 r2 r5 r6 r7 r8
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved: sp
fn00008F28_entry:
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008F28:
// DataOut: cpsr r0 r1 r2 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00008F2A_thunk_vCoRoutineSchedule:
	word32 r2_12
	word32 r5_13
	word32 r6_14
	word32 r7_15
	word32 r8_16
	return vCoRoutineSchedule(0x00000000, r1, r2, r7 << 31, r5, r6, r7, r8, cpsr, out r2_12, out r5_13, out r6_14, out r7_15, out r8_16)
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r7 << 31 r0:0x00000000

fn00008F28_exit:
// DataOut: r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r2:<invalid> r1:<invalid>



word32 vCoRoutineSchedule(word32 r0, word32 r1, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 cpsr, ptr32 & r2Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cpsr r0 r1 r2 r4 r5 r6 r7 r8
// LiveOut: r1 r2 r5 r6 r7 r8
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved: lr
vCoRoutineSchedule_entry:
	*r6Out = r6
// DataOut: cpsr r0 r1 r2 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008F2C:
	word32 r5_16 = Mem0[0x0000908C:word32]
	*r5Out = r5_16
	branch Mem0[r5_16 + 84:word32] == 0x00000000 l00008F82
// DataOut: cpsr r0 r1 r2 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0008(0) Local -000C(0) Local -0010(0) Local -0014(0) Local -0018(0)

l00008F36:
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	word32 r3_286 = Mem0[r5_16 + 96:word32]
	word32 r4_287 = Mem0[r3_286 + 12:word32]
	word32 r4_290
	word32 r5_291
	word32 r6_292
	word32 r7_293
	word32 sp_294
	word32 r3_295 = fn0000833C(r4_287 + 0x00000018, r1, r2, r3_286, r4_287, r5_16, r4, r5, r6, r7, r8, out r4_290, out r5_291, out r6_292, out r7_293, out sp_294)
	__msr(cpsr, r7_293)
	word32 r4_298
	word32 r6_300
	word32 r7_301
	word32 sp_302
	fn0000833C(r4_290 + 0x00000004, r1, r2, r3_295, r4_290, r5_291, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, out r4_298, out r5_16, out r6_300, out r7_301, out sp_302)
	word32 r3_304 = Mem0[r4_298 + 44:word32]
	word32 r8_284
	*r8Out = r5_16 + 0x00000004
	r1 = r6_300
	r0 = r5_16 + 0x00000004 + r3_304 * 0x00000014
	branch r3_304 <=u Mem0[r5_16 + 112:word32] l00008F78
// DataOut: cpsr r0 r1 r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r5:<invalid> r3:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00008F76_1:
	Mem319[r5_16 + 112:word32] = r3_304
// DataOut: cpsr r0 r1 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r4:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00008F78:
	fn000082EC()
	word32 r3_311 = Mem0[r5_16 + 84:word32]
	branch r3_311 != 0x00000000 l00008F80_thunk_fn00009138
// DataOut: cpsr r0 r1 r3 r5 r6 r7 r8
// DataOut (flags): C
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r4:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00008F80_thunk_fn00009138:
	word32 r2_317
	return fn00009138(r0, r6_300, r3_311, out r2_317)
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r4:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00008F82:
	word32 sp_100 = fn00008900(dwArg00)
	word32 r2_61 = Mem0[r5_16 + 120:word32]
	*r2Out = r2_61
	word32 r7_60 = 0x00000000
	*r7Out = r7_60
	word32 r3_187 = Mem0[r5_16 + 116:word32]
	word32 r0_188 = r0 - r2_61
	word32 r8_64 = Mem0[0x00009096:word32]
	*r8Out = r8_64
// DataOut: cpsr r0 r1 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r4:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00008F90:
	Mem71[r5_16 + 124:word32] = r0_188
	branch r0_188 == 0x00000000 l00009010
// DataOut: cpsr r0 r1 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:0x00000000 r2:<invalid> r0:<invalid> r8:<invalid> r6:<invalid> r1:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00008F98:
	r3_187 = r3_187 + 0x00000001
	Mem189[r5_16 + 116:word32] = r3_187
	r0_188 = r0_188 - 0x00000001
	Mem190[r5_16 + 124:word32] = r0_188
	branch r3_187 == 0x00000000 l00009048
// DataOut: cpsr r0 r1 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:0x00000000 r2:<invalid> r0:<invalid> r8:<invalid> r6:<invalid> r1:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00008FA4:
	word32 r2_193 = Mem190[r5_16 + 104:word32]
	r1 = Mem190[r2_193:word32]
	branch r1 == 0x00000000 l00009190_in_vCoRoutineSchedule
// DataOut: cpsr r0 r1 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:0x00000000 r2:<invalid> r0:<invalid> r8:<invalid> r6:<invalid> r1:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00009190_in_vCoRoutineSchedule:
	word32 sp_265
	word32 r4_266
	word32 r5_267
	word32 r6_268
	word32 r7_269
	word32 r8_270
	word32 lr_271
	word32 pc_272
	word32 r3_273
	word32 cpsr_274
	word32 r0_275
	word32 r2_276
	byte NZCV_277
	word32 r1_278
	byte ZC_279
	byte Z_280
	byte C_281
	byte NZC_282
	call lr (retsize: 0;)
		uses: C_65,cpsr,dwLoc04_14,dwLoc08_12,dwLoc0C_10,dwLoc10_8,dwLoc14_6,dwLoc18_4,lr,lr,NZC_48,NZCV_195,pc,r0_188,r1_194,r2_193,r3_187,r4_70,r5_56,r6_57,r7_60,r8_64,sp_59,Z_196,ZC_51
		defs: C_281,cpsr_274,lr_271,NZC_282,NZCV_277,pc_272,r0_275,r1_278,r2_276,r3_273,r4_266,r5_267,r6_268,r7_269,r8_270,sp_265,Z_280,ZC_279
	return r1_278
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:0x00000000 r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00008FAC:
	word32 r4_198 = Mem190[Mem190[r2_193 + 12:word32] + 12:word32]
	word32 r2_199 = Mem190[r4_198 + 4:word32]
	*r2Out = r2_199
	branch r3_187 >=u r2_199 l00008FC0
// DataOut: cpsr r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:0x00000000 r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00008FC0:
	byte Z_204 = cond(r2_199 - r3_187)
	branch r2_199 >u r3_187 l0000900A
// DataOut: cpsr r0 r1 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:0x00000000 r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00008FC4:
	__msr(cpsr, 0x000000BF)
	__isb_sy()
	__dsb_sy()
	word32 r4_230
	word32 r6_232
	word32 r7_233
	fn0000833C(r4_198 + 0x00000004, r1, r2_199, 0x000000BF, r4_198, r5_16, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, out r4_230, out r5_16, out r6_232, out r7_233, out sp_100)
	word32 r3_236 = Mem190[r4_230 + 40:word32]
	branch r3_236 == 0x00000000 l00008FE8
// DataOut: cpsr r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:0x00000000 r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00008FE4:
	fn0000833C(r4_230 + 0x00000018, r1, r2_199, r3_236, r4_230, r5_16, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, out r4_230, out r5_16, out r6_232, out r7_233, out sp_100)
// DataOut: cpsr r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00008FE8:
	__msr(cpsr, r7_233)
	word32 r3_243 = Mem190[r4_230 + 44:word32]
	r1 = r6_232
	r0_188 = r8_64 + r3_243 * 0x00000014
	branch r3_243 <=u Mem190[r5_16 + 112:word32] l00009000
// DataOut: cpsr r0 r1 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00008FFE_1:
	Mem257[r5_16 + 112:word32] = r3_243
// DataOut: cpsr r0 r1 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00009000:
	fn000082EC()
	r2_199 = Mem190[Mem190[r5_16 + 104:word32]:word32]
	*r2Out = r2_199
	Z_204 = cond(r2_199) (alias)
// DataOut: cpsr r0 r1 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l0000900A:
	branch Z_204 l0000900A_thunk_fn000091B4
// DataOut: cpsr r0 r1 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l0000900A_thunk_fn000091B4:
	fn000091B4(r0_188, r1, r2_199)
	return r1
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l0000900C:
	r3_187 = Mem190[r5_16 + 116:word32]
	r0_188 = Mem190[r5_16 + 124:word32]
// DataOut: cpsr r0 r1 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00009010:
	branch r0_188 != 0x00000000 l00009012_thunk_GPIOIntTypeGet
// DataOut: cpsr r0 r1 r3 r5 r6 r7 r8 sp
// DataOut (flags): C
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r6:<invalid> r1:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00009012_thunk_GPIOIntTypeGet:
	word32 r2_185
	return GPIOIntTypeGet(r0_188, r1, out r2_185)
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r6:<invalid> r1:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00009014:
	r1 = Mem71[r5_16 + 112:word32]
	Mem107[r5_16 + 120:word32] = r3_187
	word32 r2_111 = Mem107[r5_16 + r1 * 0x00000014 + 4:word32]
	*r2Out = r2_111
	branch r2_111 != 0x00000000 l00009080
// DataOut: cpsr r1 r2 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r6:<invalid> r1:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00009026:
	branch r1 == 0x00000000 l00009080
// DataOut: cpsr r1 r2 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00009080:
	word32 r5_115
	*r5Out = Mem107[sp_100 + 4:word32]
	word32 r6_116
	*r6Out = Mem107[sp_100 + 8:word32]
	word32 r7_117
	*r7Out = Mem107[sp_100 + 12:word32]
	word32 r8_118
	*r8Out = Mem107[sp_100 + 16:word32]
	return r1
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00009028:
	word32 r3_121 = r1 - 0x00000001 << 2
	word32 r2_120 = r1 - 0x00000001
	*r2Out = r2_120
	branch Mem107[r5_16 + (r3_121 + (r1 - 0x00000001) << 0x00000002) + 4:word32] != 0x00000000 l00009056
// DataOut: cpsr r1 r2 r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00009036:
	branch r1 == 0x00000001 l00009046
// DataOut: cpsr r1 r2 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00009038:
	r3_121 = r1 - 0x00000002 << 2
	r2_120 = r1 - 0x00000002
	*r2Out = r2_120
	r1 = Mem107[r5_16 + (r3_121 + (r1 - 0x00000002) << 0x00000002) + 4:word32]
	branch r1 != 0x00000000 l00009056
// DataOut: cpsr r1 r2 r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00009056:
	word32 r2_142
	Mem128[r5_16 + 112:word32] = r2_120
	word32 r3_129 = r3_121 + r2_120
	word32 r1_131 = r5_16 + (r3_129 << 2)
	word32 r2_134 = Mem128[Mem128[r1_131 + 8:word32] + 4:word32]
	word32 r3_135 = (r3_129 << 2) + Mem128[0x00009090:word32]
	Mem141[r1_131 + 8:word32] = r2_134
	r2_142 = r2_134
	branch r2_134 != r3_135 l0000906E
// DataOut: cpsr r1 r2 r5 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l0000906C_1:
	r2_142 = Mem141[r2_134 + 4:word32]
// DataOut: cpsr r1 r2 r5 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l0000906E:
	word32 r0_143 = Mem141[r2_142 + 12:word32]
	branch r2_134 != r3_135 l00009074
// DataOut: cpsr r0 r1 r2 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00009072_1:
	Mem172[r1_131 + 8:word32] = r2_142
// DataOut: cpsr r0 r2 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00009074:
	Mem144[r5_16:word32] = r0_143
	word32 r3_145 = Mem144[r0_143:word32]
	word32 sp_154
	word32 r4_155
	word32 r5_156
	word32 r6_157
	word32 r7_158
	word32 r8_159
	word32 lr_160
	word32 pc_161
	word32 r3_162
	word32 cpsr_163
	word32 r0_164
	word32 r2_165
	byte NZCV_166
	word32 r1_167
	byte ZC_168
	byte Z_169
	byte C_170
	byte NZC_171
	call r3_145 (retsize: 0;)
		uses: C_139,cpsr,dwLoc04_14,dwLoc08_12,dwLoc0C_10,dwLoc10_8,dwLoc14_6,dwLoc18_4,lr_152,NZC_140,NZCV_136,pc,r0_143,r1_146,r2_142,r3_145,r4_147,r5_148,r6_149,r7_150,r8_151,sp_153,Z_138,ZC_137
		defs: C_170,cpsr_163,lr_160,NZC_171,NZCV_166,pc_161,r0_164,r1_167,r2_165,r3_162,r4_155,r5_156,r6_157,r7_158,r8_159,sp_154,Z_169,ZC_168
	return r1_167
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00009046:
	Mem178[r5_16 + 112:word32] = r2_120
// DataOut: cpsr r1 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00009048:
	word32 r5_85
	*r5Out = Mem71[sp_100 + 4:word32]
	word32 r6_86
	*r6Out = Mem71[sp_100 + 8:word32]
	word32 r7_87
	*r7Out = Mem71[sp_100 + 12:word32]
	word32 r8_88
	*r8Out = Mem71[sp_100 + 16:word32]
	return r1
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:<invalid> r2:<invalid> r0:<invalid> r8:<invalid> r6:<invalid> r1:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

vCoRoutineSchedule_exit:
// DataOut: r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r4:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> lr:lr -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l00008FB6:
// DataOut: cpsr r0 r1 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r7:0x00000000 r2:<invalid> r0:<invalid> r8:<invalid> r1:<invalid> r6:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr



word32 fn00009090(word32 r1, word32 r2, word32 r4, word32 r5, word32 r6, word32 lr, ptr32 & r1Out, ptr32 & r3Out, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr r1 r2 r4 r5 r6
// LiveOut: r0 r1 r3 r7
// Trashed: NZCV r0 r1 r3 r7
// Preserved: sp
fn00009090_entry:
// DataOut: cpsr lr r1 r2 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009090:
// DataOut: cpsr lr r0 r1 r2 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009092_thunk_xCoRoutineRemoveFromEventList:
	word32 r1_9
	word32 r3_10
	word32 r7_11
	return xCoRoutineRemoveFromEventList(0x00000000, r1, r2, r4, r5, r6, lr, out r1_9, out r3_10, out r7_11)
// DataOut: cpsr lr r0 r1 r2 r3 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00000000

fn00009090_exit:
// DataOut: r0 r1 r3 r7
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid>



word32 xCoRoutineRemoveFromEventList(word32 r0, word32 r1, word32 r2, word32 r4, word32 r5, word32 r6, word32 lr, ptr32 & r1Out, ptr32 & r3Out, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr r0 r1 r2 r4 r5 r6
// LiveOut: r0 r1 r3 r7
// Trashed: NZCV r0 r1 r3 r7
// Preserved: r4 r5 r6 sp
xCoRoutineRemoveFromEventList_entry:
// DataOut: cpsr lr r0 r1 r2 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009094:
	word32 r3_4 = Mem0[r0 + 12:word32]
	word32 r4_14 = Mem0[r3_4 + 12:word32]
	word32 r4_21
	word32 r5_22
	word32 r6_23
	word32 r7_24
	word32 sp_25
	fn0000833C(r4_14 + 0x00000018, r1, r2, r3_4, r4_14, Mem0[0x000090C6:word32], r4, r5, r6, lr, dwArg00, out r4_21, out r5_22, out r6_23, out r7_24, out sp_25)
	fn000082EC()
	word32 r1_28
	*r1Out = r6_23
	word32 r3_31 = Mem0[Mem0[r5_22:word32] + 44:word32]
	*r3Out = r3_31
	branch Mem0[r4_21 + 44:word32] >=u r3_31 l000090BC
// DataOut: cpsr lr r1 r2 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000090BA_1:
// DataOut: cpsr lr r1 r2 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000090BC:
	return 0x00000001
// DataOut: cpsr lr r0 r1 r2 r3 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

xCoRoutineRemoveFromEventList_exit:
// DataOut: r0 r1 r3 r7
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r4:r4 r5:r5 r6:r6 r0:0x00000001 r1:<invalid> r7:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



void GPIOGetIntNumber(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZCV r0 r3
// Preserved: sp
GPIOGetIntNumber_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l000090C4:
	word32 r3_3 = Mem0[0x00009108:word32]
	branch r0 == r3_3 l000090FA
// DataOut: r0 r3
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l000090FA:
	word32 sp_51
	word32 r3_52
	word32 pc_53
	word32 r0_54
	byte NZCV_55
	byte Z_56
	byte ZC_57
	word32 lr_58
	call lr (retsize: 0;)
		uses: lr,NZCV_5,pc,r0_50,r3_3,sp_1,Z_6,ZC_7
		defs: lr_58,NZCV_55,pc_53,r0_54,r3_52,sp_51,Z_56,ZC_57
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l000090CA:
	branch r0 >u r3_3 l000090DA
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l000090CC:
	branch r0 == 0x40004000 l000090F6
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l000090F6:
	word32 sp_42
	word32 r3_43
	word32 pc_44
	word32 r0_45
	byte NZCV_46
	byte Z_47
	byte ZC_48
	word32 lr_49
	call lr (retsize: 0;)
		uses: lr,NZCV_27,pc,r0_41,r3_3,sp_1,Z_28,ZC_7
		defs: lr_49,NZCV_46,pc_44,r0_45,r3_43,sp_42,Z_47,ZC_48
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l000090D2:
	branch r0 != r3_3 - 0x00001000 l000090EC
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l000090EC:
	word32 sp_33
	word32 r3_34
	word32 pc_35
	word32 r0_36
	byte NZCV_37
	byte Z_38
	byte ZC_39
	word32 lr_40
	call lr (retsize: 0;)
		uses: lr,NZCV_30,pc,r0_32,r3_29,sp_1,Z_31,ZC_7
		defs: lr_40,NZCV_37,pc_35,r0_36,r3_34,sp_33,Z_38,ZC_39
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l000090DA:
	word32 sp_19
	word32 r3_20
	word32 pc_21
	word32 r0_22
	byte NZCV_23
	byte Z_24
	byte ZC_25
	word32 lr_26
	call lr (retsize: 0;)
		uses: lr,NZCV_5,pc,r0_16,r3_3,sp_1,Z_6,ZC_7
		defs: lr_26,NZCV_23,pc_21,r0_22,r3_20,sp_19,Z_24,ZC_25
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

GPIOGetIntNumber_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>



void fn00009108(word32 r0, word32 r1, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2
// LiveOut:
// Trashed: NZC r1 r2 r3
// Preserved: r0 sp
fn00009108_entry:
// DataOut: r0 r1 r2 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009108:
	Mem3[r0:byte] = (byte) r0
// DataOut: r0 r1 r2 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000910A_thunk_GPIODirModeSet:
	GPIODirModeSet(r0, r1, r2)
	return
// DataOut: r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0

fn00009108_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 r3:<invalid> r2:<invalid> r1:<invalid>



void GPIODirModeSet(word32 r0, word32 r1, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2
// LiveOut:
// Trashed: NZC r1 r2 r3
// Preserved: sp
GPIODirModeSet_entry:
// DataOut: r0 r1 r2 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000910C:
	word32 r3_30 = Mem0[r0 + 1024:word32]
	branch (r2 & 0x00000001) == 0x00000000 l00009118
// DataOut: r0 r1 r2 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009116_1:
	r3_30 = r3_30 | r1
// DataOut: r0 r1 r2 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l00009118:
	Mem11[r0 + 1024:word32] = r3_30 & ~r1
	word32 r3_12 = Mem11[r0 + 1056:word32]
	branch r2 << 30 >= 0x00000000 l00009128
// DataOut: r0 r1 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l00009126_1:
	r1 = r1 | r3_12
// DataOut: r0 r1 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:r2 << 30

l00009128:
	word32 r1_17 = r3_12 & ~(r1 << 0x00000000)
	Mem18[r0 + 1056:word32] = r1_17
	word32 sp_20
	word32 r3_21
	word32 r0_22
	word32 r2_23
	byte NZC_24
	byte Z_25
	word32 r1_26
	byte N_27
	word32 lr_28
	call lr (retsize: 0;)
		uses: lr,N_15,NZC_14,r0,r1_17,r2_13,r3_12,sp_1,Z_7
		defs: lr_28,N_27,NZC_24,r0_22,r1_26,r2_23,r3_21,sp_20,Z_25
	return
// DataOut: r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:r2 << 30 r1:<invalid>

GPIODirModeSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:r2 << 30 r1:<invalid>



void GPIODirModeGet(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 sp
// Preserved:
GPIODirModeGet_entry:
// DataOut: r0 r1
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009134:
// DataOut: r0 r1 r3
// DataOut (flags): C
// SymbolicIn: sp:fp

l00009136_thunk_fn00009138:
	word32 r2_8
	fn00009138(r0, r1, 0x00000001, out r2_8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r3:0x00000001 -4(fp):r4

GPIODirModeGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> r0:<invalid> -4(fp):r4



word32 fn00009138(word32 r0, word32 r1, word32 r3, ptr32 & r2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C r0 r1 r3
// LiveOut: r1 r2
// Trashed: NZCV r0 r1 r2 r3 r4 sp
// Preserved: sp
l00009138:
	r1 = r3 << r1
	r4 = Mem0[r0 + 1024:word32]
	r1 = (uint32) (byte) r1
	r2 = Mem0[r0 + 1056:word32]
	r4 = r4 + r1 + C
	NZCV = cond(r4)
	C = (bool) NZCV (alias)
	Z = NZCV (alias)
	branch Test(NE,Z) l0000914C
// DataOut: cpsr r1 r2 r3 r5 r6 r7 r8
// DataOut (flags): C
// SymbolicIn:

l0000914A_thunk_fn0000914C:
	r2 = fn0000914C(r1, r2, r3)
	return r1
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn:

l0000914A_1:
	r3 = 0x00000000
// DataOut: cpsr r1 r2 r3 r5 r6 r7 r8
// DataOut (flags): C
// SymbolicIn:

l0000914A_thunk_fn0000914C:
	r2 = fn0000914C(r1, r2, r3)
	return r1
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn:

fn00009138_entry:
	def fp
	def r3
	def r1
	def r0
	def Mem0
	def C
	def r2Out
// DataOut: cpsr r0 r1 r3 r5 r6 r7 r8
// DataOut (flags): C
// SymbolicIn: sp:fp

l00009138:
	sp_1 = fp
	r1_4 = r3 << r1
	r4_7 = Mem0[r0 + 1024:word32]
	r1_8 = (uint32) (byte) r1_4
	r2_9 = Mem0[r0 + 1056:word32]
	r4_11 = r4_7 + r1_8 + C
	NZCV_12 = cond(r4_11)
	C_13 = (bool) NZCV_12 (alias)
	Z_14 = NZCV_12 (alias)
	branch r4_11 != 0x00000000 l0000914A_thunk_fn0000914C
// DataOut: cpsr r1 r2 r3 r5 r6 r7 r8
// DataOut (flags): C
// SymbolicIn: sp:fp

l0000914A_thunk_fn0000914C:
	r2_20 = fn0000914C(r1_8, r2_9, r3)
	return r1_8
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r4:<invalid> r2:<invalid>

l0000914A_1:
	r3_18 = 0x00000000
// DataOut: cpsr r1 r2 r3 r5 r6 r7 r8
// DataOut (flags): C
// SymbolicIn: sp:fp r1:<invalid> r4:<invalid> r2:<invalid>

l0000914A_thunk_fn0000914C:
	r2_19 = fn0000914C(r1_8, r2_9, r3_18)
	return r1_8
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r4:<invalid> r2:<invalid> r3:0x00000000

fn00009138_exit:
	r3_15 = PHI(r3, r3_18, r3, r3)
	r2_16 = PHI(r2_20, r2_19, r2, r2)
	use r2_16 (=> r2Out)
// DataOut: r1 r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> r3:0x00000000 r0:<invalid>



word32 fn0000914C(word32 r1, word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C r1 r2 r3
// LiveOut: r2
// Trashed: NZCV r0 r2 r4 sp
// Preserved:
fn0000914C_entry:
// DataOut: cpsr r1 r2 r3 r5 r6 r7 r8
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: v3(32)

l0000914C:
	word32 r2_5 = r2 + r1 + C
	branch r2_5 == 0x00000000 l00009152
// DataOut: cpsr r1 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009150_1:
// DataOut: cpsr r1 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 r2:<invalid>

l00009152:
	word32 sp_16
	word32 r2_17
	word32 r1_18
	bool C_19
	byte NZCV_20
	byte Z_21
	word32 r0_22
	word32 r4_23
	word32 r3_24
	byte NZC_25
	word32 lr_26
	call lr (retsize: 0;)
		uses: C,lr,NZC_14,NZCV_6,r0_13,r1,r2_5,r3,r4_10,sp_11,Z_7
		defs: C_19,lr_26,NZC_25,NZCV_20,r0_22,r1_18,r2_17,r3_24,r4_23,sp_16,Z_21
	return r2_17
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:v3 r2:<invalid> r0:0x00000002

fn0000914C_exit:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:v3 + 4 r2:<invalid> r0:r3 r4:<invalid>



void GPIOIntTypeSet(word32 r0, word32 r1, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2
// LiveOut:
// Trashed: NZC r1 r2 r3
// Preserved: sp
GPIOIntTypeSet_entry:
// DataOut: r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000915C:
	word32 r3_37 = Mem0[r0 + 1032:word32]
	branch (r2 & 0x00000001) == 0x00000000 l00009168
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009166_1:
	r3_37 = r3_37 | r1
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l00009168:
	Mem11[r0 + 1032:word32] = r3_37 & ~r1
	word32 r3_12 = Mem11[r0 + 1028:word32]
	branch (r2 & 0x00000002) == 0x00000000 l0000917A
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l00009178_1:
	r3_12 = r3_12 | r1
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l0000917A:
	Mem17[r0 + 1028:word32] = r3_12 & ~r1
	word32 r3_18 = Mem17[r0 + 1036:word32]
	branch r2 << 29 >= 0x00000000 l0000918A
// DataOut: r0 r1 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l00009188_1:
	r1 = r1 | r3_18
// DataOut: r0 r1 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:r2 << 29

l0000918A:
	word32 r1_23 = r3_18 & ~(r1 << 0x00000000)
	Mem24[r0 + 1036:word32] = r1_23
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:r2 << 29 r1:<invalid>

l00009190:
	word32 sp_26
	word32 r3_27
	word32 r0_28
	word32 r2_29
	byte NZC_30
	byte Z_31
	word32 r1_32
	byte N_33
	word32 lr_34
	call lr (retsize: 0;)
		uses: lr,N_21,NZC_20,r0,r1_23,r2_19,r3_18,sp_1,Z_14
		defs: lr_34,N_33,NZC_30,r0_28,r1_32,r2_29,r3_27,sp_26,Z_31
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:r2 << 29 r1:<invalid>

GPIOIntTypeSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:r2 << 29 r1:<invalid>



word32 GPIOIntTypeGet(word32 r0, word32 r1, ptr32 & r2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C r0 r1
// LiveOut: r1 r2
// Trashed: NZCV r0 r1 r2 r3 sp
// Preserved: sp
GPIOIntTypeGet_entry:
// DataOut: cpsr r0 r1 r5 r6 r7 r8
// DataOut (flags): C
// SymbolicIn: sp:fp

l00009194:
	word32 r1_8 = (uint32) (byte) (0x00000001 << r1)
	word32 r0_16 = Mem0[r0 + 1036:word32]
	branch Mem0[r0 + 1032:word32] + r1_8 + C == 0x00000000 l000091AE
// DataOut: cpsr r0 r1 r3 r5 r6 r7 r8
// DataOut (flags): C
// SymbolicIn: sp:fp

l000091AC_1:
// DataOut: cpsr r0 r1 r3 r5 r6 r7 r8
// DataOut (flags): C
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r1:<invalid> r0:<invalid>

l000091AE:
	word32 r2_17
	*r2Out = 0x00000000
// DataOut: cpsr r0 r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r1:<invalid> r0:<invalid>

l000091B0_thunk_fn000091B4:
	fn000091B4(r0_16, r1_8, 0x00000000)
	return r1_8
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:0x00000000 r1:<invalid> r0:<invalid>

GPIOIntTypeGet_exit:
// DataOut: r1 r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:0x00000000 r1:<invalid> r0:<invalid>



void fn000091B4(word32 r0, word32 r1, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2
// LiveOut:
// Trashed: NZCV r0 r3 sp
// Preserved: sp
l000091B4:
	branch Test(EQ,Z) l000091B6
// DataOut: cpsr r0 r1 r2 r5 r6 r7 r8
// DataOut (flags): C
// SymbolicIn:

l000091B4_thunk_fn000091B6:
	fn000091B6(r0, r1, r2)
	return
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn:

l000091B4_1:
	r3 = 0x00000002
// DataOut: cpsr r0 r1 r2 r5 r6 r7 r8
// DataOut (flags): C
// SymbolicIn:

l000091B4_thunk_fn000091B6:
	fn000091B6(r0, r1, r2)
	return
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn:

fn000091B4_entry:
	def fp
	def r0
	def r1
	def r2
// DataOut: cpsr r0 r1 r2 r5 r6 r7 r8
// DataOut (flags): C
// SymbolicIn: sp:fp

l000091B4:
	sp_1 = fp
	r3_2 = 0x00000002
// DataOut: cpsr r0 r1 r2 r5 r6 r7 r8
// DataOut (flags): C
// SymbolicIn: sp:fp

l000091B4_thunk_fn000091B6:
	fn000091B6(r0, r1, r2)
	return
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r3:0x00000002

fn000091B4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid>



void fn000091B6(word32 r0, word32 r1, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C r0 r1 r2
// LiveOut:
// Trashed: NZCV r0 r3 sp
// Preserved:
fn000091B6_entry:
// DataOut: cpsr r0 r1 r2 r5 r6 r7 r8
// DataOut (flags): C
// SymbolicIn: sp:fp

l000091B6:
	branch r0 + r1 + C == 0x00000000 l000091BE
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l000091BC_1:
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:0x00000000 r0:<invalid>

l000091BE:
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:0x00000000 r0:<invalid>

l000091C4_in_GPIOIntTypeGet:
	word32 sp_15
	word32 r3_16
	word32 r0_17
	word32 r1_18
	bool C_19
	byte NZCV_20
	byte Z_21
	word32 r2_22
	byte NZC_23
	word32 lr_24
	call lr (retsize: 0;)
		uses: C,lr,NZC_13,NZCV_7,r0_12,r1,r2,r3_11,sp_1,Z_8
		defs: C_19,lr_24,NZC_23,NZCV_20,r0_17,r1_18,r2_22,r3_16,sp_15,Z_21
	return
// DataOut: cpsr r1 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:r2 r0:r2

fn000091B6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:r2 r0:r2



void fn000091C4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn000091C4_entry:
// DataOut: r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l000091C4:
	word32 sp_3
	word32 lr_4
	call lr (retsize: 0;)
		uses: lr,sp_1
		defs: lr_4,sp_3
	return
// DataOut: r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

fn000091C4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void GPIOPadConfigSet(word32 r0, word32 r1, word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2 r3
// LiveOut:
// Trashed: NZC r1 r2 r3
// Preserved: r4 sp
GPIOPadConfigSet_entry:
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000091C8:
	word32 r4_11 = Mem0[r0 + 1280:word32]
	branch (r2 & 0x00000001) == 0x00000000 l000091D6
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l000091D4_1:
	r4_11 = r4_11 | r1
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r4:<invalid> -4(fp):r4

l000091D6:
	Mem14[r0 + 1280:word32] = r4_11 & ~r1
	word32 r4_15 = Mem14[r0 + 1284:word32]
	branch (r2 & 0x00000002) == 0x00000000 l000091E8
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r4:<invalid> -4(fp):r4

l000091E6_1:
	r4_15 = r4_15 | r1
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r4:<invalid> -4(fp):r4

l000091E8:
	Mem20[r0 + 1284:word32] = r4_15 & ~r1
	word32 r4_21 = Mem20[r0 + 1288:word32]
	branch (r2 & 0x00000004) == 0x00000000 l000091FA
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r4:<invalid> -4(fp):r4

l000091F8_1:
	r4_21 = r4_21 | r1
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r4:<invalid> -4(fp):r4

l000091FA:
	Mem26[r0 + 1288:word32] = r4_21 & ~r1
	word32 r2_29 = Mem26[r0 + 1304:word32]
	branch (r2 & 0x00000008) == 0x00000000 l0000920C
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r4:<invalid> -4(fp):r4

l0000920A_1:
	r2_29 = r2_29 | r1
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r4:<invalid> r2:<invalid> -4(fp):r4

l0000920C:
	Mem32[r0 + 1304:word32] = r2_29 & ~r1
	word32 r2_33 = Mem32[r0 + 1292:word32]
	branch r3 << 31 >= 0x00000000 l0000921C
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r4:<invalid> r2:<invalid> -4(fp):r4

l0000921A_1:
	r2_33 = r2_33 | r1
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r4:r3 << 31 r2:<invalid> -4(fp):r4

l0000921C:
	Mem40[r0 + 1292:word32] = r2_33 & ~r1
	word32 r2_41 = Mem40[r0 + 1296:word32]
	branch r3 << 30 >= 0x00000000 l0000922C
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r4:r3 << 31 r2:<invalid> -4(fp):r4

l0000922A_1:
	r2_41 = r2_41 | r1
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r4:r3 << 30 r2:<invalid> -4(fp):r4

l0000922C:
	Mem47[r0 + 1296:word32] = r2_41 & ~r1
	word32 r2_48 = Mem47[r0 + 1300:word32]
	branch r3 << 29 >= 0x00000000 l0000923C
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r4:r3 << 30 r2:<invalid> -4(fp):r4

l0000923A_1:
	r2_48 = r2_48 | r1
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r4:r3 << 29 r2:<invalid> -4(fp):r4

l0000923C:
	word32 r2_53 = r2_48 & ~r1
	Mem54[r0 + 1300:word32] = r2_53
	word32 r3_57 = Mem54[r0 + 1308:word32]
	branch (r3 & 0x00000008) == 0x00000000 l00009250
// DataOut: r0 r1 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 4 r4:r3 << 29 r2:<invalid> -4(fp):r4

l0000924E_1:
	r1 = r1 | r3_57
// DataOut: r0 r1 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r2:<invalid> r3:<invalid> -4(fp):r4

l00009250:
	word32 r1_61 = r3_57 & ~(r1 << 0x00000000)
	Mem62[r0 + 1308:word32] = r1_61
	word32 sp_64
	word32 r4_65
	word32 r0_66
	word32 r2_67
	byte NZC_68
	byte Z_69
	word32 r1_70
	word32 r3_71
	byte N_72
	word32 lr_73
	call lr (retsize: 0;)
		uses: dwLoc04_4,lr,N_51,NZC_55,r0,r1_61,r2_53,r3_57,r4_58,sp_59,Z_56
		defs: lr_73,N_72,NZC_68,r0_66,r1_70,r2_67,r3_71,r4_65,sp_64,Z_69
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r2:<invalid> r3:<invalid> r1:<invalid> -4(fp):r4

GPIOPadConfigSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r2:<invalid> r3:<invalid> r1:<invalid> -4(fp):r4



void GPIOPadConfigGet(word32 r0, word32 r1, word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C r0 r1 r2 r3
// LiveOut:
// Trashed: NZCV r0 r1 r2
// Preserved: r4 r5 r6 r7 sp
GPIOPadConfigGet_entry:
// DataOut: r0 r1 r2 r3
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000925C:
	word32 r1_17 = (uint32) (byte) (0x00000001 << r1)
	word32 r4_18 = Mem0[r0 + 1284:word32]
	word32 r5_20 = Mem0[r0 + 1280:word32] + r1_17 + C
	word32 r5_25 = Mem0[r0 + 1288:word32]
	branch r5_20 == 0x00000000 l00009278
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): C
// SymbolicIn: sp:fp

l00009276_1:
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): C
// SymbolicIn: sp:fp - 16 r4:<invalid> r5:<invalid> r1:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):r7

l00009278:
	word32 r4_27 = r4_18 + r1_17 + (r5_20 <u 0x00000000)
	word32 r4_32 = Mem0[r0 + 1304:word32]
	branch r4_27 == 0x00000000 l00009284
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): C
// SymbolicIn: sp:fp - 16 r4:<invalid> r5:<invalid> r1:<invalid> r7:0x00000001 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):r7

l00009282_1:
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): C
// SymbolicIn: sp:fp - 16 r4:<invalid> r5:<invalid> r1:<invalid> r7:0x00000000 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):r7

l00009284:
	word32 r5_34 = r5_25 + r1_17 + (r4_27 <u 0x00000000)
	branch r5_34 == 0x00000000 l0000928C
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): C
// SymbolicIn: sp:fp - 16 r4:<invalid> r5:<invalid> r1:<invalid> r7:0x00000000 r6:0x00000002 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):r7

l0000928A_1:
// DataOut: r0 r1 r2 r3 r4
// DataOut (flags): C
// SymbolicIn: sp:fp - 16 r4:<invalid> r5:<invalid> r1:<invalid> r7:0x00000000 r6:0x00000000 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):r7

l0000928C:
	branch r4_32 + r1_17 + (r5_34 <u 0x00000000) == 0x00000000 l00009294
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:<invalid> r5:<invalid> r1:<invalid> r7:0x00000000 r6:0x00000000 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):r7

l00009292_1:
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:<invalid> r5:0x00000000 r1:<invalid> r7:0x00000000 r6:0x00000000 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):r7

l00009294:
	Mem49[r2:word32] = 0x00000000
	word32 r5_107 = 0x00000000
	word32 r4_52 = Mem49[r0 + 1296:word32]
	word32 r1_53 = r1_17 + Mem49[r0 + 1292:word32]
	word32 r6_58 = Mem49[r0 + 1300:word32]
	branch r1_53 == 0x00000000 l000092B0
// DataOut: r0 r1 r3 r4 r5 r6
// DataOut (flags): ZC
// SymbolicIn: sp:fp - 16 r4:<invalid> r5:0x00000000 r1:<invalid> r7:0x00000000 r6:0x00000000 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):r7

l000092AE_1:
	r5_107 = 0x00000001
// DataOut: r0 r1 r3 r4 r5 r6
// DataOut (flags): ZC
// SymbolicIn: sp:fp - 16 r4:<invalid> r5:0x00000000 r1:<invalid> r7:0x00000000 r6:<invalid> r2:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):r7

l000092B0:
	word32 r2_60 = Mem49[r0 + 1308:word32]
	branch r1_53 != 0x00000000 l000092B8
// DataOut: r1 r2 r3 r4 r5 r6
// DataOut (flags): C
// SymbolicIn: sp:fp - 16 r4:<invalid> r5:<invalid> r1:<invalid> r7:0x00000000 r6:<invalid> r2:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):r7

l000092B6_1:
	r5_107 = 0x00000000
// DataOut: r1 r2 r3 r4 r5 r6
// DataOut (flags): C
// SymbolicIn: sp:fp - 16 r4:<invalid> r5:<invalid> r1:<invalid> r7:0x00000000 r6:<invalid> r2:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):r7

l000092B8:
	word32 r1_62 = r1_53 + r4_52 + (r1_53 <u 0x00000000)
	branch r1_62 == 0x00000000 l000092BE
// DataOut: r1 r2 r3 r5 r6
// DataOut (flags): C
// SymbolicIn: sp:fp - 16 r4:<invalid> r5:<invalid> r1:<invalid> r7:0x00000000 r6:<invalid> r2:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):r7

l000092BC_1:
// DataOut: r1 r2 r3 r5 r6
// DataOut (flags): C
// SymbolicIn: sp:fp - 16 r4:<invalid> r5:<invalid> r1:<invalid> r7:0x00000000 r6:<invalid> r2:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):r7

l000092BE:
	word32 r1_68 = r1_62 + r6_58 + (r1_62 <u 0x00000000)
	branch r1_68 == 0x00000000 l000092C6
// DataOut: r1 r2 r3 r5
// DataOut (flags): C
// SymbolicIn: sp:fp - 16 r4:<invalid> r5:<invalid> r1:<invalid> r7:0x00000000 r6:<invalid> r2:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):r7

l000092C4_1:
// DataOut: r1 r2 r3 r5
// DataOut (flags): C
// SymbolicIn: sp:fp - 16 r4:0x00000000 r5:<invalid> r1:<invalid> r7:0x00000000 r6:<invalid> r2:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):r7

l000092C6:
	branch r1_68 + r2_60 + (r1_68 <u 0x00000000) == 0x00000000 l000092CE
// DataOut: r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:0x00000000 r5:<invalid> r1:<invalid> r7:0x00000000 r6:<invalid> r2:<invalid> r0:0x00000004 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):r7

l000092CC_1:
// DataOut: r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:0x00000000 r5:<invalid> r1:<invalid> r7:0x00000000 r6:<invalid> r2:<invalid> r0:0x00000000 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):r7

l000092CE:
	Mem82[r3:word32] = r5_107 << 0x00000000
	word32 sp_90
	word32 r4_91
	word32 r5_92
	word32 r6_93
	word32 r7_94
	word32 r0_95
	word32 r1_96
	bool C_97
	byte NZCV_98
	byte Z_99
	byte NZC_100
	word32 r2_101
	word32 r3_102
	word32 lr_103
	call lr (retsize: 0;)
		uses: C_70,dwLoc04_10,dwLoc08_8,dwLoc0C_6,dwLoc10_4,lr,NZC_81,NZCV_75,r0_73,r1_79,r2_80,r3,r4_84,r5_85,r6_86,r7_87,sp_88,Z_76
		defs: C_97,lr_103,NZC_100,NZCV_98,r0_95,r1_96,r2_101,r3_102,r4_91,r5_92,r6_93,r7_94,sp_90,Z_99
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r4:0x00000000 r5:<invalid> r1:<invalid> r7:0x00000000 r6:<invalid> r2:<invalid> r0:0x00000000 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):r7

GPIOPadConfigGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r5:r5 r1:<invalid> r7:r7 r6:r6 r2:<invalid> r0:0x00000000 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):r7



void GPIOPinIntEnable(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: NZC r1 r3
// Preserved: sp
GPIOPinIntEnable_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l000092E0:
	word32 r3_4 = Mem0[r0 + 1040:word32]
	word32 r1_6 = r1 | r3_4
	Mem8[r0 + 1040:word32] = r1_6
	word32 sp_10
	word32 r3_11
	word32 r0_12
	word32 r1_13
	byte NZC_14
	word32 lr_15
	call lr (retsize: 0;)
		uses: lr,NZC_7,r0,r1_6,r3_4,sp_1
		defs: lr_15,NZC_14,r0_12,r1_13,r3_11,sp_10
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

GPIOPinIntEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid>



void GPIOPinIntDisable(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: r1 r3
// Preserved: sp
GPIOPinIntDisable_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l000092EC:
	word32 r3_4 = Mem0[r0 + 1040:word32]
	word32 r1_6 = r3_4 & ~(r1 << 0x00000000)
	Mem7[r0 + 1040:word32] = r1_6
	word32 sp_9
	word32 r3_10
	word32 r0_11
	word32 r1_12
	word32 lr_13
	call lr (retsize: 0;)
		uses: lr,r0,r1_6,r3_4,sp_1
		defs: lr_13,r0_11,r1_12,r3_10,sp_9
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

GPIOPinIntDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid>



void GPIOPinIntStatus(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: r0
// Preserved: sp
GPIOPinIntStatus_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l000092FC:
	branch r1 != 0x00000000 l00009304
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009304:
	word32 sp_16
	word32 r1_17
	word32 r0_18
	word32 lr_19
	call lr (retsize: 0;)
		uses: lr,r0_15,r1,sp_1
		defs: lr_19,r0_18,r1_17,sp_16
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000092FE:
	word32 sp_11
	word32 r1_12
	word32 r0_13
	word32 lr_14
	call lr (retsize: 0;)
		uses: lr,r0_9,r1,sp_1
		defs: lr_14,r0_13,r1_12,sp_11
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

GPIOPinIntStatus_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



void GPIOPinIntClear(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed:
// Preserved: sp
GPIOPinIntClear_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000930C:
	Mem3[r0 + 1052:word32] = r1
	word32 sp_6
	word32 r1_7
	word32 r0_8
	word32 lr_9
	call lr (retsize: 0;)
		uses: lr,r0,r1,sp_1
		defs: lr_9,r0_8,r1_7,sp_6
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

GPIOPinIntClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void GPIOPortIntRegister(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZCV r0 r3 sp
// Preserved: lr r4
GPIOPortIntRegister_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009314:
	word32 r3_3 = Mem0[0x000093AC:word32]
	branch r0 == r3_3 l00009392
// DataOut: r0 r3
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00009392:
	word32 sp_61
	word32 r3_62
	word32 pc_63
	word32 r4_64
	word32 lr_65
	word32 r0_66
	byte NZCV_67
	byte Z_68
	byte ZC_69
	call fn00C095D8 (retsize: 0; depth: 8)
		uses: dwLoc04_8,dwLoc08_6,lr,NZCV_10,pc,r0,r3_3,r4,sp_4,Z_11,ZC_12
		defs: lr_65,NZCV_67,pc_63,r0_66,r3_62,r4_64,sp_61,Z_68,ZC_69
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> -8(fp):r4 -4(fp):lr

l0000931C:
	branch r0 >u r3_3 l0000933A
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> -8(fp):r4 -4(fp):lr

l0000931E:
	branch r0 == 0x40004000 l00009380
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> -8(fp):r4 -4(fp):lr

l00009380:
	word32 sp_52
	word32 r3_53
	word32 pc_54
	word32 r4_55
	word32 lr_56
	word32 r0_57
	byte NZCV_58
	byte Z_59
	byte ZC_60
	call fn00C095D8 (retsize: 0; depth: 8)
		uses: dwLoc04_8,dwLoc08_6,lr,NZCV_32,pc,r0,r3_3,r4,sp_4,Z_33,ZC_12
		defs: lr_56,NZCV_58,pc_54,r0_57,r3_53,r4_55,sp_52,Z_59,ZC_60
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> -8(fp):r4 -4(fp):lr

l00009324:
	branch r0 != r3_3 - 0x00001000 l0000935A
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> -8(fp):r4 -4(fp):lr

l0000935A:
	word32 sp_43
	word32 r3_44
	word32 pc_45
	word32 r4_46
	word32 lr_47
	word32 r0_48
	byte NZCV_49
	byte Z_50
	byte ZC_51
	call fn00C095D8 (retsize: 0; depth: 8)
		uses: dwLoc04_8,dwLoc08_6,lr,NZCV_35,pc,r0,r3_34,r4,sp_4,Z_36,ZC_12
		defs: lr_47,NZCV_49,pc_45,r0_48,r3_44,r4_46,sp_43,Z_50,ZC_51
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> -8(fp):r4 -4(fp):lr

l0000932C:
	IntMasterDisable()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> -8(fp):r4 -4(fp):lr

l0000933A:
	word32 sp_23
	word32 r3_24
	word32 pc_25
	word32 r4_26
	word32 lr_27
	word32 r0_28
	byte NZCV_29
	byte Z_30
	byte ZC_31
	call fn00C095D8 (retsize: 0;)
		uses: dwLoc04_8,dwLoc08_6,lr,NZCV_10,pc,r0,r3_3,r4,sp_4,Z_11,ZC_12
		defs: lr_27,NZCV_29,pc_25,r0_28,r3_24,r4_26,sp_23,Z_30,ZC_31
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:r4 r0:0x00000011 lr:lr -8(fp):r4 -4(fp):lr

GPIOPortIntRegister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:r4 r0:0x00000011 lr:lr -8(fp):r4 -4(fp):lr



void GPIOPortIntUnregister(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZCV lr r0 r3 r4 sp
// Preserved:
GPIOPortIntUnregister_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000093B0:
	word32 r3_3 = Mem0[0x00009448:word32]
	branch r0 == r3_3 l0000942E
// DataOut: r0 r3
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l0000942E:
	word32 sp_61
	word32 r3_62
	word32 pc_63
	word32 r4_64
	word32 lr_65
	word32 r0_66
	byte NZCV_67
	byte Z_68
	byte ZC_69
	call fn00C09534 (retsize: 0; depth: 8)
		uses: dwLoc04_8,dwLoc08_6,lr,NZCV_10,pc,r0,r3_3,r4,sp_4,Z_11,ZC_12
		defs: lr_65,NZCV_67,pc_63,r0_66,r3_62,r4_64,sp_61,Z_68,ZC_69
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> -8(fp):r4 -4(fp):lr

l000093B8:
	branch r0 >u r3_3 l000093D6
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> -8(fp):r4 -4(fp):lr

l000093BA:
	branch r0 == 0x40004000 l0000941C
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> -8(fp):r4 -4(fp):lr

l0000941C:
	word32 sp_52
	word32 r3_53
	word32 pc_54
	word32 r4_55
	word32 lr_56
	word32 r0_57
	byte NZCV_58
	byte Z_59
	byte ZC_60
	call fn00C09534 (retsize: 0; depth: 8)
		uses: dwLoc04_8,dwLoc08_6,lr,NZCV_32,pc,r0,r3_3,r4,sp_4,Z_33,ZC_12
		defs: lr_56,NZCV_58,pc_54,r0_57,r3_53,r4_55,sp_52,Z_59,ZC_60
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> -8(fp):r4 -4(fp):lr

l000093C0:
	branch r0 != r3_3 - 0x00001000 l000093F6
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> -8(fp):r4 -4(fp):lr

l000093F6:
	word32 sp_43
	word32 r3_44
	word32 pc_45
	word32 r4_46
	word32 lr_47
	word32 r0_48
	byte NZCV_49
	byte Z_50
	byte ZC_51
	call fn00C09534 (retsize: 0; depth: 8)
		uses: dwLoc04_8,dwLoc08_6,lr,NZCV_35,pc,r0,r3_34,r4,sp_4,Z_36,ZC_12
		defs: lr_47,NZCV_49,pc_45,r0_48,r3_44,r4_46,sp_43,Z_50,ZC_51
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> -8(fp):r4 -4(fp):lr

l000093C8:
	fn00009634()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> -8(fp):r4 -4(fp):lr
// Terminates process

l000093D6:
	word32 sp_23
	word32 r3_24
	word32 pc_25
	word32 r4_26
	word32 lr_27
	word32 r0_28
	byte NZCV_29
	byte Z_30
	byte ZC_31
	call fn00C09534 (retsize: 0;)
		uses: dwLoc04_8,dwLoc08_6,lr,NZCV_10,pc,r0,r3_3,r4,sp_4,Z_11,ZC_12
		defs: lr_27,NZCV_29,pc_25,r0_28,r3_24,r4_26,sp_23,Z_30,ZC_31
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:r4 r4:<invalid> lr:<invalid> -8(fp):r4 -4(fp):lr

GPIOPortIntUnregister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:r4 r4:<invalid> lr:<invalid> -8(fp):r4 -4(fp):lr



void GPIOPinRead(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: r0
// Preserved: sp
GPIOPinRead_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000944C:
	word32 sp_7
	word32 r0_8
	word32 r1_9
	word32 lr_10
	call lr (retsize: 0;)
		uses: lr,r0_5,r1,sp_1
		defs: lr_10,r0_8,r1_9,sp_7
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

GPIOPinRead_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



void fn00009450()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn00009450_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009450:
	word32 sp_3
	word32 lr_4
	call lr (retsize: 0;)
		uses: lr,sp_1
		defs: lr_4,sp_3
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00009450_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void GPIOPinWrite(word32 r0, word32 r1, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2
// LiveOut:
// Trashed:
// Preserved: sp
GPIOPinWrite_entry:
// DataOut: r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009454:
	Mem3[r0 + (r1 << 2):word32] = r2
	word32 sp_7
	word32 r2_8
	word32 r0_9
	word32 r1_10
	word32 lr_11
	call lr (retsize: 0;)
		uses: lr,r0,r1,r2,sp_1
		defs: lr_11,r0_9,r1_10,r2_8,sp_7
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

GPIOPinWrite_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void GPIOPinTypeComparator(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: NZCV r2 r3
// Preserved: r4 r5 r6 sp
GPIOPinTypeComparator_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000945C:
	word32 r5_10 = ~r1
	Mem17[r0 + 1024:word32] = Mem0[r0 + 1024:word32] & r5_10
	Mem22[r0 + 1056:word32] = r5_10 & Mem17[r0 + 1056:word32]
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000091C4_in_GPIOPinTypeComparator:
	word32 sp_28
	word32 r4_29
	word32 r5_30
	word32 r6_31
	word32 r1_32
	byte NZCV_33
	word32 r2_34
	word32 r0_35
	word32 r3_36
	byte NZC_37
	word32 lr_38
	call lr (retsize: 0;)
		uses: dwLoc04_8,dwLoc08_6,dwLoc0C_4,lr,NZC_21,NZCV_11,r0,r1,r2_19,r3_15,r4_23,r5_24,r6_25,sp_26
		defs: lr_38,NZC_37,NZCV_33,r0_35,r1_32,r2_34,r3_36,r4_29,r5_30,r6_31,sp_28
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r2:0x00000001 r3:0x00000000 r6:r6 r4:r4 -12(fp):r4 -8(fp):r5 -4(fp):r6

GPIOPinTypeComparator_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r2:0x00000001 r3:0x00000000 r6:r6 r4:r4 -12(fp):r4 -8(fp):r5 -4(fp):r6



void fn0000947C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000947C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000947C_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000947C:
	__breakpoint()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void GPIOPinTypeI2C(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: NZC r2 r3
// Preserved: r4 r5 r6 sp
GPIOPinTypeI2C_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009480:
	Mem16[r0 + 1024:word32] = Mem0[r0 + 1024:word32] & ~(r1 << 0x00000000)
	Mem21[r0 + 1056:word32] = r1 | Mem16[r0 + 1056:word32]
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000091C4_in_GPIOPinTypeI2C:
	word32 sp_27
	word32 r4_28
	word32 r5_29
	word32 r6_30
	word32 r1_31
	word32 r2_32
	word32 r0_33
	word32 r3_34
	byte NZC_35
	word32 lr_36
	call lr (retsize: 0;)
		uses: dwLoc04_8,dwLoc08_6,dwLoc0C_4,lr,NZC_20,r0,r1,r2_18,r3_14,r4_22,r5_23,r6_24,sp_25
		defs: lr_36,NZC_35,r0_33,r1_31,r2_32,r3_34,r4_28,r5_29,r6_30,sp_27
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r2:0x00000001 r3:0x0000000B r6:r6 r4:r4 -12(fp):r4 -8(fp):r5 -4(fp):r6

GPIOPinTypeI2C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r2:0x00000001 r3:0x0000000B r6:r6 r4:r4 -12(fp):r4 -8(fp):r5 -4(fp):r6



void GPIOPinTypeQEI(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: NZC r2 r3
// Preserved: r4 r5 r6 sp
GPIOPinTypeQEI_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000094A4:
	Mem16[r0 + 1024:word32] = Mem0[r0 + 1024:word32] & ~(r1 << 0x00000000)
	Mem21[r0 + 1056:word32] = r1 | Mem16[r0 + 1056:word32]
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000094C2_thunk_fn000094C4:
	fn000094C4()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r2:0x00000001 r3:0x0000000A r6:r6 r4:r4 -12(fp):r4 -8(fp):r5 -4(fp):r6

GPIOPinTypeQEI_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r2:0x00000001 r3:0x0000000A r6:r6 r4:r4 -12(fp):r4 -8(fp):r5 -4(fp):r6



void fn000094C4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
l000094C4:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000094C4_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000094C4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000094C4_thunk_fn000091C4:
	fn000091C4()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn000094C4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void GPIOPinTypeUART(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: NZC r2 r3
// Preserved: r4 r5 r6 sp
GPIOPinTypeUART_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000094C8:
	Mem16[r0 + 1024:word32] = Mem0[r0 + 1024:word32] & ~(r1 << 0x00000000)
	Mem21[r0 + 1056:word32] = r1 | Mem16[r0 + 1056:word32]
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000091C4_in_GPIOPinTypeUART:
	word32 sp_27
	word32 r4_28
	word32 r5_29
	word32 r6_30
	word32 r1_31
	word32 r2_32
	word32 r0_33
	word32 r3_34
	byte NZC_35
	word32 lr_36
	call lr (retsize: 0;)
		uses: dwLoc04_8,dwLoc08_6,dwLoc0C_4,lr,NZC_20,r0,r1,r2_18,r3_14,r4_22,r5_23,r6_24,sp_25
		defs: lr_36,NZC_35,r0_33,r1_31,r2_32,r3_34,r4_28,r5_29,r6_30,sp_27
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r2:0x00000001 r3:0x00000008 r6:r6 r4:r4 -12(fp):r4 -8(fp):r5 -4(fp):r6

GPIOPinTypeUART_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r2:0x00000001 r3:0x00000008 r6:r6 r4:r4 -12(fp):r4 -8(fp):r5 -4(fp):r6



void GPIOPinTypeTimer()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
GPIOPinTypeTimer_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000094EC:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000094EC_thunk_fn000094C4:
	fn000094C4()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

GPIOPinTypeTimer_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void GPIOPinTypeSSI()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
GPIOPinTypeSSI_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000094F0:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000094F0_thunk_fn000094C4:
	fn000094C4()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

GPIOPinTypeSSI_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void GPIOPinTypePWM()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
l000094F4:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn:

l0000947E_thunk_GPIOPinTypeI2C:
	GPIOPinTypeI2C(r0, r1)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

GPIOPinTypePWM_entry:
	def fp
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000094F4:
	sp_1 = fp
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000094F4_thunk_fn000094C4:
	fn000094C4()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

GPIOPinTypePWM_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void IntDefaultHandler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
IntDefaultHandler_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000094F8:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000094F8_thunk_GPIOPinTypePWM:
	GPIOPinTypePWM()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

IntDefaultHandler_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void IntMasterEnable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
IntMasterEnable_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000094FC:
	word32 sp_2
	call fn00C0A0D8 (retsize: 0;)
		uses: sp_1
		defs: sp_2
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

IntMasterEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void IntMasterDisable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
IntMasterDisable_entry:
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009500:
	word32 sp_2
	call fn00C0A0E0 (retsize: 0;)
		uses: sp_1
		defs: sp_2
	return
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp

IntMasterDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void IntRegister(word32 r0, word32 r1, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r4 r5
// LiveOut:
// Trashed: NZCV r2 r3
// Preserved: r4 r5 sp
IntRegister_entry:
// DataOut: r0 r1 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009504:
	word32 r4_10 = Mem0[0x0000953A:word32]
	branch Mem0[Mem0[0x00009534:word32]:word32] == r4_10 l00009522
// DataOut: r0 r1 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0004(32) Local -0008(32)

l00009510:
	Mem50[r4_10:word32] = Mem0[0x00000000:word32]
	branch r4_10 + 4 != r4_10 + 0x000000B8 l00009520_thunk_fn00009712
// DataOut: r0 r1 r4
// DataOut (flags): Z
// SymbolicIn: sp:fp - 8 r3:<invalid> r4:<invalid> -8(fp):r4 -4(fp):r5
// LocalsOut: Local -0004(32) Local -0008(32)

l00009520_thunk_fn00009712:
	fn00009712(r4, r5)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> -8(fp):r4 -4(fp):r5

l00009522:
	word32 r3_24 = Mem0[0x00009536:word32]
	Mem25[r3_24:word32] = r4_10
	Mem27[r4_10 + (r0 << 2):word32] = r1
	word32 sp_35
	word32 r3_36
	word32 pc_37
	word32 r4_38
	word32 r5_39
	byte NZCV_40
	byte Z_41
	word32 r2_42
	word32 r1_43
	word32 r0_44
	word32 lr_45
	call lr (retsize: 0;)
		uses: dwLoc04_8,dwLoc08_6,lr,NZCV_11,pc,r0,r1,r2,r3_24,r4_29,r5_30,sp_31,Z_12
		defs: lr_45,NZCV_40,pc_37,r0_44,r1_43,r2_42,r3_36,r4_38,r5_39,sp_35,Z_41
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r3:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> -8(fp):r4 -4(fp):r5

IntRegister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r4:r4 r5:r5 r2:<invalid> -8(fp):r4 -4(fp):r5



void fn00009534()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00009534_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00009534_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009534:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void IntUnregister(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
IntUnregister_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009538:
	word32 r3_3 = Mem0[0x00009548:word32]
	word32 r2_4 = Mem0[0x0000954E:word32]
	Mem5[r3_3 + (r0 << 2):word32] = r2_4
	word32 sp_8
	word32 r3_9
	word32 pc_10
	word32 r2_11
	word32 r0_12
	word32 lr_13
	call lr (retsize: 0;)
		uses: lr,r0,r2_4,r3_3,sp_1
		defs: lr_13,pc_10,r0_12,r2_11,r3_9,sp_8
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

IntUnregister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid>



void IntPriorityGroupingSet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
IntPriorityGroupingSet_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000954C:
	word32 r2_4 = Mem0[0x0000956A:word32]
	word32 r3_8 = Mem0[Mem0[0x00009564:word32] + (r0 << 2):word32] | 0x05F80000 | 0x00020000
	Mem9[r2_4:word32] = r3_8
	word32 sp_11
	word32 r3_12
	word32 pc_13
	word32 r2_14
	word32 r0_15
	word32 lr_16
	call lr (retsize: 0;)
		uses: lr,r0,r2_4,r3_8,sp_1
		defs: lr_16,pc_13,r0_15,r2_14,r3_12,sp_11
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

IntPriorityGroupingSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid>



void IntPriorityGroupingGet(word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r6
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: sp
IntPriorityGroupingGet_entry:
// DataOut: r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009568:
	word32 r0_15 = 0x00000000
	word32 r1_6 = Mem0[Mem0[0x0000958C:word32]:word32]
	word32 r2_7 = Mem0[0x00009592:word32]
// DataOut: r0 r1 r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009578:
	branch Mem0[r2_7:word32] == (r1_6 & 0x00000700) l00009582
// DataOut: r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp r3:0x00000700 r1:<invalid> r0:0x00000000 r2:<invalid>

l00009580:
	r0_15 = 0x00000001
// DataOut: r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid> r0:0x00000000 r2:<invalid>

l00009582:
	branch r0_15 != 0x00000008 l00009584_thunk_fn00009774
// DataOut: r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid> r0:<invalid> r2:<invalid>

l00009584_thunk_fn00009774:
	fn00009774(r0_15, r6)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid> r0:<invalid> r2:<invalid>

l00009586:
	word32 sp_32
	word32 r3_33
	word32 r1_34
	word32 pc_35
	word32 r0_36
	word32 r2_37
	byte NZC_38
	byte NZCV_39
	byte Z_40
	word32 lr_41
	word32 r6_42
	call lr (retsize: 0;)
		uses: lr,NZC_9,NZCV_16,pc,r0_15,r1_8,r2_11,r3_12,r6,sp_1,Z_17
		defs: lr_41,NZC_38,NZCV_39,pc_35,r0_36,r1_34,r2_37,r3_33,r6_42,sp_32,Z_40
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid> r0:<invalid> r2:<invalid>

IntPriorityGroupingGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid> r0:<invalid> r2:<invalid>



void IntPrioritySet(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: r4 sp
IntPrioritySet_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009590:
	word32 r0_15 = (r0 & 0x00000003) << 3
	word32 r4_12 = Mem0[Mem0[0x000095BE:word32] + (r0 & ~0x00000003) + 32:word32]
	word32 r2_16 = 0x000000FF << r0_15
	word32 r3_17 = Mem0[r4_12:word32] & ~(r2_16 << 0x00000000)
	word32 r0_20 = r1 << r0_15 | r3_17
	Mem22[r4_12:word32] = r0_20
	word32 sp_26
	word32 r2_27
	word32 r3_28
	word32 pc_29
	word32 r4_30
	word32 r0_31
	byte NZCV_32
	byte NZC_33
	word32 r1_34
	word32 lr_35
	call lr (retsize: 0;)
		uses: dwLoc04_7,lr,NZC_21,NZCV_11,r0_20,r1,r2_16,r3_17,r4_23,sp_24
		defs: lr_35,NZC_33,NZCV_32,pc_29,r0_31,r1_34,r2_27,r3_28,r4_30,sp_26
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

IntPrioritySet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:0x000000FF << (((r0 & 0x00000003) & 0x00000003) << 3) r3:<invalid> r4:r4 r0:<invalid> -4(fp):r4



void IntPriorityGet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: sp
IntPriorityGet_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l000095BC:
	word32 sp_16
	word32 r3_17
	word32 pc_18
	word32 r2_19
	word32 r0_20
	byte NZCV_21
	byte NZC_22
	word32 lr_23
	call lr (retsize: 0;)
		uses: lr,NZC_12,NZCV_7,r0_14,r2_5,r3_10,sp_1
		defs: lr_23,NZC_22,NZCV_21,pc_18,r0_20,r2_19,r3_17,sp_16
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

IntPriorityGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:r0 & ~0x00000003 r0:<invalid>



void fn000095D8(word32 r0, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r3
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: r0 sp
l000095D8:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn:

l00009536_thunk_IntUnregister:
	IntUnregister(r0)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000095D8_entry:
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l000095D8:
// DataOut: r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l000095DA_thunk_IntEnable:
	IntEnable(r0, 0x00009868, r3)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:00009868 r0:r0

fn000095D8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r0:<invalid> r3:0x00000001



void IntEnable(word32 r0, word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r2 r3
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: sp
IntEnable_entry:
// DataOut: r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l000095DC:
	branch r0 == 0x00000004 l00009604
// DataOut: r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009604:
	Mem67[r2:word32] = r3
	word32 sp_68
	word32 r0_69
	byte NZCV_70
	byte Z_71
	byte ZC_72
	word32 r3_73
	word32 r2_74
	word32 pc_75
	word32 lr_76
	call lr (retsize: 0;)
		uses: lr,NZCV_3,pc,r0,r2,r3,sp_1,Z_4,ZC
		defs: lr_76,NZCV_70,pc_75,r0_69,r2_74,r3_73,sp_68,Z_71,ZC_72
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000095E0:
	branch r0 == 0x00000005 l00009610
// DataOut: r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009610:
	Mem57[r2:word32] = r3
	word32 sp_58
	word32 r0_59
	byte NZCV_60
	byte Z_61
	byte ZC_62
	word32 r3_63
	word32 r2_64
	word32 pc_65
	word32 lr_66
	call lr (retsize: 0;)
		uses: lr,NZCV_14,pc,r0,r2,r3,sp_1,Z_15,ZC
		defs: lr_66,NZCV_60,pc_65,r0_59,r2_64,r3_63,sp_58,Z_61,ZC_62
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000095E4:
	branch r0 == 0x00000006 l0000961C
// DataOut: r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000961C:
	Mem46[r2:word32] = r3
	word32 sp_48
	word32 r0_49
	byte NZCV_50
	byte Z_51
	byte ZC_52
	word32 r3_53
	word32 r2_54
	word32 pc_55
	word32 lr_56
	call lr (retsize: 0;)
		uses: lr,NZCV_16,pc,r0,r2,r3,sp_1,Z_17,ZC
		defs: lr_56,NZCV_50,pc_55,r0_49,r2_54,r3_53,sp_48,Z_51,ZC_52
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000095E8:
	word32 r0_37
	word32 r2_34
	r2_34 = r2
	r0_37 = r0
	branch r0 == 0x0000000F l000095F8
// DataOut: r0 r2
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l000095EC:
	branch r0 <=u 0x0000000F l000095F6
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l000095F6:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000095EE:
	r2_34 = Mem0[0x00009632:word32]
	r0_37 = 0x00000001 << r0 - 0x00000010
// DataOut: r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l000095F8:
	Mem38[r2_34:word32] = r0_37
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:0x00000001 r0:0x00000001 << r0 - 0x00000020 r2:<invalid>

l000095FA:
	word32 sp_25
	word32 r0_26
	byte NZCV_27
	byte Z_28
	byte ZC_29
	word32 r3_30
	word32 r2_31
	word32 pc_32
	word32 lr_33
	call lr (retsize: 0;)
		uses: lr,NZCV_18,pc,r0,r2,r3,sp_1,Z_19,ZC_20
		defs: lr_33,NZCV_27,pc_32,r0_26,r2_31,r3_30,sp_25,Z_28,ZC_29
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r3:0x00000001 r2:<invalid>

IntEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r3:0x00000001 r2:<invalid>



void fn00009634()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00009634_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00009634_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009634:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void IntDisable(word32 r0, word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r2 r3
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: sp
IntDisable_entry:
// DataOut: r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009638:
	branch r0 == 0x00000004 l00009660
// DataOut: r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009660:
	Mem67[r2:word32] = r3
	word32 sp_68
	word32 r0_69
	byte NZCV_70
	byte Z_71
	byte ZC_72
	word32 r3_73
	word32 r2_74
	word32 pc_75
	word32 lr_76
	call lr (retsize: 0;)
		uses: lr,NZCV_3,pc,r0,r2,r3,sp_1,Z_4,ZC
		defs: lr_76,NZCV_70,pc_75,r0_69,r2_74,r3_73,sp_68,Z_71,ZC_72
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000963C:
	branch r0 == 0x00000005 l0000966C
// DataOut: r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000966C:
	Mem57[r2:word32] = r3
	word32 sp_58
	word32 r0_59
	byte NZCV_60
	byte Z_61
	byte ZC_62
	word32 r3_63
	word32 r2_64
	word32 pc_65
	word32 lr_66
	call lr (retsize: 0;)
		uses: lr,NZCV_14,pc,r0,r2,r3,sp_1,Z_15,ZC
		defs: lr_66,NZCV_60,pc_65,r0_59,r2_64,r3_63,sp_58,Z_61,ZC_62
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009640:
	branch r0 == 0x00000006 l00009678
// DataOut: r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009678:
	Mem46[r2:word32] = r3
	word32 sp_48
	word32 r0_49
	byte NZCV_50
	byte Z_51
	byte ZC_52
	word32 r3_53
	word32 r2_54
	word32 pc_55
	word32 lr_56
	call lr (retsize: 0;)
		uses: lr,NZCV_16,pc,r0,r2,r3,sp_1,Z_17,ZC
		defs: lr_56,NZCV_50,pc_55,r0_49,r2_54,r3_53,sp_48,Z_51,ZC_52
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009644:
	word32 r0_37
	word32 r2_34
	r2_34 = r2
	r0_37 = r0
	branch r0 == 0x0000000F l00009654
// DataOut: r0 r2
// DataOut (flags): ZC
// SymbolicIn: sp:fp

l00009648:
	branch r0 <=u 0x0000000F l00009652
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009652:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000964A:
	r2_34 = Mem0[0x0000968E:word32]
	r0_37 = 0x00000001 << r0 - 0x00000010
// DataOut: r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009654:
	Mem38[r2_34:word32] = r0_37
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:0x00000001 r0:0x00000001 << r0 - 0x00000020 r2:<invalid>

l00009656:
	word32 sp_25
	word32 r0_26
	byte NZCV_27
	byte Z_28
	byte ZC_29
	word32 r3_30
	word32 r2_31
	word32 pc_32
	word32 lr_33
	call lr (retsize: 0;)
		uses: lr,NZCV_18,pc,r0,r2,r3,sp_1,Z_19,ZC_20
		defs: lr_33,NZCV_27,pc_32,r0_26,r2_31,r3_30,sp_25,Z_28,ZC_29
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r3:0x00000001 r2:<invalid>

IntDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r3:0x00000001 r2:<invalid>



void fn00009690()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00009690_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00009690_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009690:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void OSRAMDelay(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2 r3 r4 r5 r6 r9
// LiveOut:
// Trashed: NZCV r0
// Preserved: sp
OSRAMDelay_entry:
// DataOut: r0 r1 r2 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009694:
	branch r0 != 0x00000001 l00009696_thunk_fn00009890
// DataOut: r1 r2 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009696_thunk_fn00009890:
	fn00009890(r1, r2, r3, r4, r5, r6, r9)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 - 0x00000001

l00009696_thunk_fn00009698:
	fn00009698()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 - 0x00000001

OSRAMDelay_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 - 0x00000001



void fn00009698()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn00009698_entry:
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009698:
	word32 sp_3
	word32 lr_4
	call lr (retsize: 0;)
		uses: lr,sp_1
		defs: lr_4,sp_3
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00009698_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void OSRAMWriteFirst()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0 r1 r2
// Preserved: lr r3 r4 r5 sp
OSRAMWriteFirst_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000969C:
	fn0000A204()
	fn0000A238()
	word32 sp_27
	word32 r3_28
	word32 r4_29
	word32 r5_30
	word32 lr_31
	word32 r0_32
	word32 pc_33
	word32 r2_34
	word32 r1_35
	call fn00C0A21C (retsize: 0;)
		uses: dwLoc04_10,dwLoc08_8,dwLoc0C_6,dwLoc10_4,lr_24,r0_20,r1_26,r2_15,r3_21,r4_22,r5_23,sp_25
		defs: lr_31,pc_33,r0_32,r1_35,r2_34,r3_28,r4_29,r5_30,sp_27
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

OSRAMWriteFirst_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r4:r4 r2:0x00000000 r0:<invalid> r1:0x00000003 r3:r3 lr:lr -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



word32 fn000096C0(word32 r0, word32 r1, word32 r2, word32 r3, word32 r9, word32 r10, ptr32 & r2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r10 r2 r3 r9
// LiveOut: r1 r2
// Trashed: NZCV r0 r1 r2
// Preserved: r0 sp
fn000096C0_entry:
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l000096C0:
	word32 r2_5 = r2 & r0
	*r2Out = r2_5
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l000096C2_thunk_OSRAMWriteArray:
	return OSRAMWriteArray(r0, r1, r2_5, r3, r9, r10)
// DataOut: r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 r2:r2 & r0

fn000096C0_exit:
// DataOut: r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r2:r2 & r0 r1:0x00000001



word32 OSRAMWriteArray(word32 r0, word32 r1, word32 r2, word32 r3, word32 r9, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r10 r2 r3 r9
// LiveOut: r1
// Trashed: NZCV r0 r1
// Preserved: r3 r4 r5 r6 r7 sp
OSRAMWriteArray_entry:
// DataOut: r0 r1 r10 r2 r3 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000096C4:
	branch r1 == 0x00000000 l000096FA
// DataOut: r0 r1 r10 r2 r3 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000096FA:
	word32 sp_74
	word32 r1_75
	word32 r3_76
	word32 r4_77
	word32 r5_78
	word32 r6_79
	word32 r7_80
	word32 lr_81
	word32 r0_82
	word32 pc_83
	byte NZCV_84
	byte Z_85
	word32 r2_86
	word32 r9_87
	word32 r10_88
	call lr (retsize: 0;)
		uses: dwLoc04,dwLoc08,dwLoc0C,dwLoc10,dwLoc14,dwLoc18,lr,NZCV,pc,r0,r1,r10,r2,r3,r4,r5,r6,r7,r9,sp_1,Z
		defs: lr_81,NZCV_84,pc_83,r0_82,r1_75,r10_88,r2_86,r3_76,r4_77,r5_78,r6_79,r7_80,r9_87,sp_74,Z_85
	return r1_75
// DataOut: r1 r10 r2 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l000096C6:
	word32 r7_40 = Mem0[0x00009702:word32]
	word32 r4_41 = Mem0[0x00009704:word32]
	fn0000A1C4()
	word32 r6_42 = r0 + r1
	branch r4_41 == 0x00000000 l000096DA_thunk_fn000098CC
// DataOut: r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000096DA_thunk_fn000098CC:
	fn000098CC(r2, r3, r4_41, r0, r6_42, r7_40, r9, r10)
	return 0x00000000
// DataOut: r1 r10 r2 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r5:r0 r7:<invalid> r4:<invalid> r6:r0 + r1 r1:0x00000000 r0:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000096DC:
	fn00009690()
	fn0000A238()
	fn0000A21C(r4_41)
	branch r6_42 != r0 + 1 l000096F6_thunk_fn000098CC
// DataOut: r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r5:r0 r7:<invalid> r4:<invalid> r6:r0 + r1 r1:0x00000000 r0:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000096F6_thunk_fn000098CC:
	fn000098CC(r2, r3, r4_41, r0 + 1, r6_42, r7_40, r9, r10)
	return 0x00000001
// DataOut: r1 r10 r2 r8 r9
// DataOut (flags): 
// SymbolicIn: r5:r5 + 1 r1:0x00000001 r0:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l000096F8:
	return 0x00000001
// DataOut: r1 r10 r2 r8 r9
// DataOut (flags): 
// SymbolicIn: r5:r5 + 1 r1:0x00000001 r0:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

OSRAMWriteArray_exit:
// DataOut: r1
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r1:0x00000001 r0:<invalid> r3:r3 r4:r4 r6:r6 r7:r7 -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr



void fn00009700(word32 r0, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r2
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00009700_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00009700_entry:
// DataOut: r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009700:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void OSRAMWriteByte(word32 r4, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr r4
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
OSRAMWriteByte_entry:
// DataOut: lr r0 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009704:
	fn0000A1C4()
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: Local -0004(32) Local -0008(32)

l00009710_thunk_fn00009712:
	fn00009712(r4, lr)
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:r0 r1:0x00000000 r0:<invalid> -8(fp):r4 -4(fp):lr
// Terminates process

OSRAMWriteByte_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp -8(fp):r4 -4(fp):lr



void fn00009712(word32 dwArg00, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0000(32)
// Terminates process
l00009712:
	branch Test(EQ,Z) l00009712_thunk_fn00009904
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn:

l00009712_thunk_fn00009904:
	fn00009904()
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn:
// Terminates process

l00009714:
	fn00009690()
	fn0000A238()
	call fn00C0A21C (retsize: 0;)
		defs: lr,r0,r1,r3,r4,sp,Z
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn:
// Terminates process

fn00009712_entry:
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l00009712:
	branch Z l00009712_thunk_fn00009904
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l00009712_thunk_fn00009904:
	fn00009904()
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00009714_in_fn00009712:
	fn00009690()
	fn0000A238()
	word32 sp_23
	byte Z_24
	word32 r3_25
	word32 r0_26
	word32 r1_27
	word32 r4_28
	word32 lr_29
	call fn00C0A21C (retsize: 0; depth: -8)
		uses: lr_19,r0_22,r1_21,r3_11,r4_17,sp_20,Z
		defs: lr_29,r0_26,r1_27,r3_25,r4_28,sp_23,Z_24
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

fn00009712_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:0x00000001 r0:<invalid> r4:<invalid> lr:<invalid>



void fn00009734(word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
l00009734:
// DataOut: lr r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn:

l00009702_thunk_OSRAMWriteByte:
	OSRAMWriteByte(r4, lr)
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn:
// Terminates process

fn00009734_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00009734_entry:
	def fp
	def r7
// DataOut: r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009734:
	sp_1 = fp
	r4_3 = r7 >>u 1
	NZC_4 = cond(r4_3)
	r0_5 = 0x00000000
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void OSRAMWriteFinal(word32 r3, word32 r7, word32 r9, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10 r3 r7 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
OSRAMWriteFinal_entry:
// DataOut: r0 r10 r2 r3 r5 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009738:
	word32 r4_14 = Mem0[0x0000977C:word32]
	fn0000A1C4()
	branch r4_14 == 0x00000000 l00009748_thunk_fn0000993A
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009748_thunk_fn0000993A:
	fn0000993A()
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r6:r0 r4:<invalid> r1:0x00000000 r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// Terminates process

l0000974A:
	word32 r5_32 = Mem0[0x00009782:word32]
	word32 r4_33 = Mem0[0x0000977C:word32]
	fn00009690()
	fn0000A238()
	fn0000A21C(r4_33)
	fn0000A1C4()
	branch r4_33 == 0x00000000 l00009960
// DataOut: r0 r1 r10 r2 r3 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r6:r0 r4:<invalid> r1:0x00000000 r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// Terminates process

l00009960:
	Mem55[0x00000000:word32] = 0x00000000
// DataOut: r1 r10 r2 r3 r9
// DataOut (flags): 
// SymbolicIn: r1:0x00000000 r0:r4 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00009972_thunk_OSRAMDisplayOn:
	word32 r4_67
	word32 r5_68
	word32 r6_69
	word32 r7_70
	word32 r8_71
	word32 sp_72
	OSRAMDisplayOn(0x00009D40, r3, r9, r10, out r4_67, out r5_68, out r6_69, out r7_70, out r8_71, out sp_72)
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r1:0x00000000 r0:0x00000000 r2:00009D40 r4:r7 >>u 1 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00009770:
	word32 r0_43 = Mem0[r5_32:word32]
	word32 r6_46 = Mem0[fp - 8:word32]
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r1:0x00000000 r0:r4 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00009772_thunk_fn00009774:
	fn00009774(r0_43, r6_46)
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r1:0x00000000 r0:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> lr:<invalid> sp:sp + 16 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// Terminates process

OSRAMWriteFinal_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:0x00000000 r0:0x00000080 r2:00009D40 r4:0x00000004 r7:<invalid> r6:0x000000E3 r5:0x00000000 r8:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



void fn00009774(word32 r0, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
l00009774:
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn:

l00009776_thunk_fn00009690:
	fn00009690()
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn:
// Terminates process

fn00009774_entry:
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009774:
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009776_thunk_fn00009690:
	fn00009690()
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 ^ r6
// Terminates process

fn00009774_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0000977C(word32 r2, word32 r3, word32 r5, word32 r7, word32 r8, word32 r9, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10 r2 r3 r5 r7 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
l0000977C:
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn:

l00009736_thunk_OSRAMWriteFinal:
	OSRAMWriteFinal(r3, r7, r9, r10)
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn:
// Terminates process

fn0000977C_entry:
// DataOut: r1 r10 r2 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000977C:
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000977E_thunk_OSRAMClear:
	OSRAMClear(r2, r3, r5, r7, r8, r9, r10)
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r7 >>u 1 r0:0x00000000
// Terminates process

fn0000977C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void OSRAMClear(word32 r2, word32 r3, word32 r5, word32 r7, word32 r8, word32 r9, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10 r2 r3 r5 r7 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
OSRAMClear_entry:
// DataOut: r10 r2 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009780:
	fn00009698()
	word32 r2_15
	fn000096C0(Mem0[0x000097CA:word32], 0x00000006, r2, r3, r9, r10, out r2_15)
	fn00009700(0x00000000, r2_15)
	branch true l0000998E
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l0000998E:
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r4:r4 - 0x00000001 -8(fp):r4 -4(fp):lr

l00009990_thunk_fn00009992:
	fn00009992(r2_15, r3 + 0x0000005E, 0x0000005E, r5 << 7, r7, r8, r9, r10)
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r4:r4 - 0x00000001 r5:r5 << 7 r3:r3 + (r4 - 0x00000002) -8(fp):r4 -4(fp):lr

l0000979C:
	fn00009734(r7)
	fn00009698()
	word32 r2_40
	fn000096C0(Mem0[0x000097CE:word32], 0x00000006, r2_15, r3, r9, r10, out r2_40)
	fn00009700(0x00000000, r2_40)
	branch true l000097BA_thunk_fn000099AE
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r4:r4 - 0x00000001 -8(fp):r4 -4(fp):lr
// Terminates process

l000097BA_thunk_fn000099AE:
	word32 r2_59
	word32 r3_60
	word32 r4_61
	word32 r5_62
	word32 r6_63
	word32 r7_64
	word32 r8_65
	word32 sp_66
	fn000099AE(0x00000000, r5, r7, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, out r2_59, out r3_60, out r4_61, out r5_62, out r6_63, out r7_64, out r8_65, out sp_66)
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r4:r4 - 0x00000001 -8(fp):r4 -4(fp):lr

l000097BC:
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r4:r4 - 0x00000001 -8(fp):r4 -4(fp):lr

l000097C2_thunk_fn00009734:
	fn00009734(r7)
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r0:r4 - 0x00000002 lr:<invalid> sp:sp + 8 -8(fp):r4 -4(fp):lr
// Terminates process

OSRAMClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r5:<invalid> r3:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r0:<invalid> r2:<invalid> -8(fp):r4 -4(fp):lr



void fn000097C8(word32 r0, word32 r1, word32 r7, word32 r8, word32 r9, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r10 r7 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000097C8_entry:
// DataOut: r0 r1 r10 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l000097C8:
// DataOut: r0 r1 r10 r2 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l000097CA_thunk_OSRAMStringDraw:
	OSRAMStringDraw(r0, r1, 0x00009BB8, r7, r8, r9, r10)
	return
// DataOut: r0 r1 r10 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp r2:00009BB8 r0:r0
// Terminates process

fn000097C8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void OSRAMStringDraw(word32 r0, word32 r1, word32 r2, word32 r7, word32 r8, word32 r9, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r10 r2 r7 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
OSRAMStringDraw_entry:
// DataOut: r0 r1 r10 r2 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000097CC:
	fn00009698()
	branch r2 != 0x00000000 l000097E0
// DataOut: r1 r10 r2 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000097DE_1:
// DataOut: r1 r10 r2 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r6:r2 r4:r1 r5:r0 r0:0x00000080 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l000097E0:
	fn00009700(0x000000B1, r2)
	fn00009700(0x00000080, r2)
	fn00009700(r1 + 0x00000024 & 0x0000000F, r2)
	fn00009700(0x00000080, r2)
	fn00009700((uint32) SLICE(r1 + 0x00000024, ui4, 4) | 0x00000010, r2)
	fn00009700(0x00000040, r2)
	word32 r3_29 = (word32) Mem0[r0:byte]
	branch r3_29 == 0x00000000 l00009876
// DataOut: r0 r1 r10 r2 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r6:r2 r4:r1 r5:r0 r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// Terminates process

l00009876:
	return
// DataOut: r0 r1 r10 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: r3:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00009814:
	word32 r6_47 = Mem0[0x0000987E:word32]
	branch r1 <=u 0x0000005A l0000982C
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l0000982C:
	branch r1 >u 0x0000005A l00009848
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> r6:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00009830:
	word32 r3_71 = r3_29 - 0x00000020 + (r3_29 - 0x00000020 << 0x00000002)
	word32 r2_76
	fn000096C0(r6_47 + r3_71, 0x00000005, r2, r3_71, r9, r10, out r2_76)
	branch r1 != 0x0000005A l00009844_thunk_fn00009A18
// DataOut: r0 r1 r10 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> r6:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00009844_thunk_fn00009A18:
	word32 r7_87
	word32 r8_88
	fn00009A18(r2_76, r1, r0, r6_47, r8, out r7_87, out r8_88)
	return
// DataOut: r0 r1 r10 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: r3:<invalid> r6:<invalid> r0:0x00000000 r1:<invalid> r2:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00009846:
// DataOut: r0 r1 r10 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: r3:<invalid> r6:<invalid> r0:0x00000000 r1:<invalid> r2:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l0000981A:
// DataOut: r0 r1 r10 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: r3:<invalid> r6:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l00009848:
// DataOut: r0 r1 r10 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: r3:<invalid> r6:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l0000984A:
// DataOut: r0 r1 r10 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: r3:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> lr:<invalid> sp:sp + 16 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr

l0000984A_thunk_fn00009734:
	fn00009734(r7)
	return
// DataOut: r0 r1 r10 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: r3:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> lr:<invalid> sp:sp + 16 -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr
// Terminates process

OSRAMStringDraw_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:<invalid> sp:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:0x00000000 r1:<invalid> r2:<invalid> r7:<invalid> r8:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):lr



void OSRAMImageDraw(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r7, word32 r9, word32 r10, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r10 r2 r3 r4 r5 r7 r9
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0000(32)
// Terminates process
OSRAMImageDraw_entry:
// DataOut: r0 r1 r10 r2 r3 r4 r5 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l00009880:
	branch dwArg00 == 0x00000000 l000098EA
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009886_thunk_fn000098CC:
	fn000098CC(r2, r3, r4, r5, dwArg00, r7, r9, r10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 32 r6:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr
// Terminates process

l00009888:
// DataOut: r1 r2 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 32 r6:<invalid> -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr

l0000988E_thunk_fn00009890:
	fn00009890(r1 + 0x00000024, r2, r3, r2, r0, dwArg00, r3)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 32 r6:<invalid> r5:r0 r4:r2 r9:r3 r1:r1 + 0x00000024 -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr
// Terminates process

OSRAMImageDraw_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp -32(fp):r4 -28(fp):r5 -24(fp):r6 -20(fp):r7 -16(fp):r8 -12(fp):r9 -8(fp):r10 -4(fp):lr



void fn00009890(word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r1 r2 r3 r4 r5 r6 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
l00009890:
	r8 = (uint32) SLICE(r1 + 0x00000024, ui4, 4)
	r6 = r6 + r2
	NZCV = cond(r6)
	r8 = r8 | 0x00000010
	r7 = r1 & 0x0000000F
	r10 = r3 + 0xFFFFFFFF
	r0 = 0x00000080
	fn00009698()
	NZCV = cond(r4 - 0x00000000)
	Z = NZCV (alias)
	branch Test(EQ,Z) l000098AE
// DataOut: r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn:

l000098AC_thunk_fn000098AE:
	fn000098AE(r2, r3, r4, r5, r6, r7, r8, r9, r10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:
// Terminates process

l000098AC_1:
	r0 = 0x000000B1
// DataOut: r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn:

l000098AC_thunk_fn000098AE:
	fn000098AE(r2, r3, r4, r5, r6, r7, r8, r9, r10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:
// Terminates process

fn00009890_entry:
	def fp
	def r1
	def r6
	def r2
	def r3
	def r4
	def r5
	def r9
// DataOut: r1 r2 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009890:
	sp_1 = fp
	r8_3 = (uint32) SLICE(r1, ui4, 4)
	r6_6 = r6 + r2
	NZCV_7 = cond(r6_6)
	r8_8 = r8_3 | 0x00000010
	r7_9 = r1 & 0x0000000F
	r10_11 = r3 + 0xFFFFFFFF
	r0_12 = 0x00000080
	fn00009698()
	NZCV_14 = cond(r4 - 0x00000000)
	Z_15 = NZCV_14 (alias)
	branch r4 == 0x00000000 l000098AC_thunk_fn000098AE
// DataOut: r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l000098AC_thunk_fn000098AE:
	fn000098AE(r2, r3, r4, r5, r6_6, r7_9, r8_8, r9, r10_11)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r6:r6 + r2 r7:r1 & 0x0000000F r10:r3 + 0xFFFFFFFF r0:0x00000080
// Terminates process

l000098AC_1:
	r0_17 = 0x000000B1
// DataOut: r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r6:r6 + r2 r7:r1 & 0x0000000F r10:r3 + 0xFFFFFFFF r0:0x00000080

l000098AC_thunk_fn000098AE:
	fn000098AE(r2, r3, r4, r5, r6_6, r7_9, r8_8, r9, r10_11)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r6:r6 + r2 r7:r1 & 0x0000000F r10:r3 + 0xFFFFFFFF r0:0x000000B1
// Terminates process

fn00009890_exit:
	r0_16 = PHI(r0_12, r0_17, r0, r0)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000098AE(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10 r2 r3 r4 r5 r6 r7 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000098AE_entry:
// DataOut: r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l000098AE:
	fn00009700(0x000000B0, r2)
	fn00009700(0x00000080, r2)
	fn00009700(r7, r2)
	fn00009700(0x00000080, r2)
	fn00009700(r8, r2)
// DataOut: r10 r2 r3 r4 r5 r6 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l000098C8_thunk_fn000098CC:
	fn000098CC(r2, r3, r4, r5, r6, r7, r9, r10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:
// Terminates process

fn000098AE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



void fn000098CC(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r9, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10 r2 r3 r4 r5 r6 r7 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
l000098CC:
	r0 = 0x00000040
	fn00009700(r0, r2)
	r0 = r5
	r1 = r10
	r5 = r5 + r9
	NZCV = cond(r5)
	r1 = fn000096C0(r0, r1, r2, r3, r9, r10, out r2)
	r4 = r4 + 0x00000001
	NZCV = cond(r4)
	r0 = (word32) Mem0[r5 - 1:byte]
	fn00009734(r7)
	NZCV = cond(r6 - r4)
	Z = NZCV (alias)
	branch Test(NE,Z) l000098E8_thunk_fn00009A9E
// DataOut: r0 r1 r10 r2 r3 r8 r9 sp
// DataOut (flags): 
// SymbolicIn:
// Terminates process

l000098E8_thunk_fn00009A9E:
	fn00009A9E(r0, r1, r3)
	return
// DataOut: r1 r10 r2 r8 r9
// DataOut (flags): 
// SymbolicIn:

l000098EA:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	r9 = Mem0[sp + 20:word32]
	r10 = Mem0[sp + 24:word32]
	sp = sp + 32
	return
// DataOut: r1 r10 r2 r8 r9
// DataOut (flags): 
// SymbolicIn:

fn000098CC_entry:
	def fp
	def r2
	def r5
	def r10
	def r9
	def r3
	def r4
	def Mem0
	def r7
	def r6
	def Mem0
	def r8
// DataOut: r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000098CC:
	sp_1 = fp
	r0_2 = 0x00000040
	fn00009700(r0_2, r2)
	r0_5 = r5
	r1_7 = r10
	r5_9 = r5 + r9
	NZCV_10 = cond(r5_9)
	r1_13 = fn000096C0(r0_5, r1_7, r2, r3, r9, r10, out r2_12)
	r4_15 = r4 + 0x00000001
	NZCV_16 = cond(r4_15)
	r0_18 = (word32) Mem0[r5_9 - 1:byte]
	fn00009734(r7)
	NZCV_21 = cond(r6 - r4_15)
	Z_22 = NZCV_21 (alias)
	branch r6 != r4_15 l000098E8_thunk_fn00009A9E
// DataOut: r0 r1 r10 r2 r3 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l000098E8_thunk_fn00009A9E:
	fn00009A9E(r0_18, r1_13, r3)
	return
// DataOut: r1 r10 r2 r8 r9
// DataOut (flags): 
// SymbolicIn:

l000098EA_in_fn000098CC:
	r4_32 = Mem0[sp_1:word32]
	r5_33 = Mem0[sp_1 + 4:word32]
	r6_34 = Mem0[sp_1 + 8:word32]
	r7_35 = Mem0[sp_1 + 12:word32]
	r8_36 = Mem0[sp_1 + 16:word32]
	r9_37 = Mem0[sp_1 + 20:word32]
	r10_38 = Mem0[sp_1 + 24:word32]
	sp_39 = sp_1 + 32
	return
// DataOut: r1 r10 r2 r8 r9
// DataOut (flags): 
// SymbolicIn:

fn000098CC_exit:
	r4_23 = PHI(r4_15, r4_32, r4, r4)
	r5_24 = PHI(r5_9, r5_33, r5, r5)
	r6_25 = PHI(r6, r6_34, r6, r6)
	r7_26 = PHI(r7, r7_35, r7, r7)
	r8_27 = PHI(r8, r8_36, r8, r8)
	r9_28 = PHI(r9, r9_37, r9, r9)
	r10_29 = PHI(r10, r10_38, r10, r10)
	sp_30 = PHI(sp_1, sp_39, sp, sp)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r3:<invalid> r0:<invalid>



void fn000098EC(word32 r0, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000098EC_entry:
// DataOut: r0 r10 r4 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000098EC:
	Mem3[r6 + 124:word16] = (uint16) r0
// DataOut: r10 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000098EE_thunk_OSRAMInit:
	OSRAMInit()
	return
// DataOut: r10 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

fn000098EC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void OSRAMInit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
OSRAMInit_entry:
// DataOut: r0 r10 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000098F0:
	fn00009B78(0x10001000)
	fn00009B78(Mem0[0x00009966:word32])
// DataOut: r10 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009900_thunk_fn00009904:
	fn00009904()
	return
// DataOut: r10 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r4:r0 r0:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr
// Terminates process

OSRAMInit_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr



void fn00009904()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
l00009904:
	r1 = 0x0000000C
	r0 = Mem0[0x0000996A:word32]
	fn0000947C()
	r1 = r4
	r0 = Mem0[0x0000996E:word32]
	fn0000A0F0()
	r2 = 0x00000001
	r3 = Mem0[0x00009972:word32]
	r7 = Mem0[0x00009974:word32]
	r6 = 0x000000E3
	r4 = 0x00000004
	r0 = 0x00000080
	r5 = 0x00000000
	Mem0[r3:word32] = 0x00000001
	r8 = r7 + 0x000001EC
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn:
// Terminates process

l00009928_thunk_fn00009934:
	fn00009934(r3)
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn:

fn00009904_entry:
	def fp
	def Mem0
	def r4
// DataOut: r10 r4 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009904:
	sp_1 = fp
	r1_2 = 0x0000000C
	r0_4 = Mem0[0x0000996A:word32]
	fn0000947C()
	r1_6 = r4
	r0_7 = Mem0[0x0000996E:word32]
	fn0000A0F0()
	r2_8 = 0x00000001
	r3_9 = Mem0[0x00009972:word32]
	r7_10 = Mem0[0x00009974:word32]
	r6_11 = 0x000000E3
	r4_12 = 0x00000004
	r0_13 = 0x00000080
	r5_14 = 0x00000000
	Mem15[r3_9:word32] = 0x00000001
	r8_16 = r7_10 + 0x000001EC
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00009928_thunk_fn00009934:
	fn00009934(r3_9)
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r1:r4 r0:0x00000080 r2:0x00000001 r3:<invalid> r7:<invalid> r6:0x000000E3 r4:0x00000004 r5:0x00000000 r8:<invalid>

fn00009904_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r1:r4 r0:0x00000080 r2:0x00000001 r3:<invalid> r7:<invalid> r6:0x000000E3 r4:0x00000004 r5:0x00000000 r8:<invalid> sp:fp



void fn00009934(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3
// LiveOut:
// Trashed:
// Preserved: sp
fn00009934_entry:
// DataOut: r0 r1 r10 r2 r3 r4 r5 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009934:
	fn00009698()
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009938_thunk_fn0000993A:
	fn0000993A()
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:v3 r6:<invalid>

fn00009934_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0000993A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
l0000993A:
	r0 = r5 + 0x00000002
	r1 = r4 - 0x00000002
	r0 = r0 + r8
	r4 = r4 + 0x00000001
	NZCV = cond(r4)
	r1 = fn000096C0(r0, r1, r2, r3, r9, r10, out r2)
	r5 = r5 + r4
	NZCV = cond(r5)
	r0 = r6
	fn00009734(r7)
	NZCV = cond(r5 - 0x00000070)
	ZC = NZCV (alias)
	r3 = r7 + (r5 << 0x00000000)
	branch Test(ULE,ZC) l00009956_thunk_fn00009B26
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn:

l00009956_thunk_fn00009B26:
	r0 = fn00009B26(r0, r3, out r3)
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn:

l00009958:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	lr = Mem0[sp + 20:word32]
	sp = sp + 24
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn:

l0000995C_thunk_fn0000977C:
	fn0000977C(r2, r3, r5, r7, r8, r9, r10)
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn:

fn0000993A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000993A_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000993A:
	sp = fp
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word32 OSRAMDisplayOn(word32 r2, word32 r3, word32 r9, word32 r10, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10 r2 r3 r9
// LiveOut: r0 r4 r5 r6 r7 r8 sp
// Trashed: r0 r4 r5 r6 r7 r8 sp
// Preserved:
OSRAMDisplayOn_entry:
// DataOut: r1 r10 r2 r3 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009974:
	word32 r7_16 = Mem0[0x000099C0:word32]
	*r7Out = r7_16
	word32 sp_2
	*spOut = fp - 24
	word32 r6_17
	*r6Out = 0x000000E3
	word32 r4_18
	*r4Out = 0x00000004
	word32 r5_20
	*r5Out = 0x00000000
	word32 r8_21
	*r8Out = r7_16 + 0x000001EC
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009986_thunk_fn00009992:
	fn00009992(r2, r3, 0x00000004, 0x00000000, r7_16, r7_16 + 0x000001EC, r9, r10)
	return 0x00000080
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r7:<invalid> r6:0x000000E3 r4:0x00000004 r0:0x00000080 r5:0x00000000 r8:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

OSRAMDisplayOn_exit:
// DataOut: r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r7:<invalid> r6:0x000000E3 r4:0x00000004 r0:0x00000080 r5:0x00000000 r8:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr



void fn00009992(word32 r2, word32 r3, word32 r4, word32 r5, word32 r7, word32 r8, word32 r9, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10 r2 r3 r4 r5 r7 r8 r9
// LiveOut:
// Trashed:
// Preserved:
fn00009992_entry:
// DataOut: r10 r2 r3 r4 r5 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009992:
	word32 r6_4 = (word32) Mem0[r3 + 236:byte]
	fn00009698()
	word32 r2_16
	fn000096C0(r5 + 0x00000002 + r8, r4 - 0x00000002, r2, r3, r9, r10, out r2_16)
	fn00009734(r7)
	word32 r5_18 = r5 + (r4 + 0x00000001)
// DataOut: r0 r1 r10 r5 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l000099AA_thunk_fn000099AE:
	word32 r2_27
	word32 r3_28
	word32 r4_29
	word32 r5_30
	word32 r6_31
	word32 r7_32
	word32 r8_33
	word32 sp_34
	fn000099AE(r6_4, r5_18, r7, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, out r2_27, out r3_28, out r4_29, out r5_30, out r6_31, out r7_32, out r8_33, out sp_34)
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn:

fn00009992_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



word32 fn000099AE(word32 r0, word32 r5, word32 r7, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r5 r7
// LiveOut: r0 r2 r3 r4 r5 r6 r7 r8 sp
// Trashed: NZCV r0 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
// Stack args: Stack +0000(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)
l000099AE:
	NZCV = cond(r5 - 0x00000070)
	ZC = NZCV (alias)
	r3 = r7 + (r5 << 0x00000000)
	branch Test(ULE,ZC) l00009B84_in_OSRAMDisplayOn
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn:

l00009B84_in_OSRAMDisplayOn:
	r3 = Mem0[r3 + 28:word32]
	r0 = r0 & ~0xF0000000
	r2 = Mem0[r3:word32]
	r0 = r0 | r2
	NZC = cond(r0)
	Mem0[r3:word32] = r0
	call lr (retsize: 0;)
		defs: lr,NZC,NZCV,r0,r2,r3,r4,r5,r6,r7,r8,sp,ZC
	return r0
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn:

l000099B6:
	r4 = Mem0[sp:word32]
	r5 = Mem0[sp + 4:word32]
	r6 = Mem0[sp + 8:word32]
	r7 = Mem0[sp + 12:word32]
	r8 = Mem0[sp + 16:word32]
	sp = sp + 24
	return r0
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn:

fn000099AE_entry:
	def fp
	def r5
	def r7
	def r2Out
	def r3Out
	def r4Out
	def r5Out
	def r6Out
	def r7Out
	def r8Out
	def spOut
	def dwArg00
	def dwArg04
	def dwArg08
	def dwArg0C
	def dwArg10
	def r0
	def lr
	def NZC
	def r2
	def Mem0
	def lr
	def r4
	def r6
	def r8
// DataOut: r0 r1 r10 r2 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l000099AE:
	sp_1 = fp
	NZCV_3 = cond(r5 - 0x00000070)
	ZC_4 = NZCV_3 (alias)
	r3_6 = r7 + (r5 << 0x00000000)
	branch r5 <=u 0x00000070 l00009B84_in_fn000099AE
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l00009B84_in_fn000099AE:
	r3_44 = Mem0[r3_6 + 28:word32]
	r0_45 = r0 & ~0xF0000000
	r2_46 = Mem0[r3_44:word32]
	r0_47 = r0_45 | r2_46
	NZC_48 = cond(r0_47)
	Mem49[r3_44:word32] = r0_47
	call lr (retsize: 0;)
		uses: lr,lr,NZC_48,NZCV_3,r0_47,r2_46,r3_44,r4,r5,r6,r7,r8,sp_1,ZC_4
		defs: lr_63,NZC_62,NZCV_56,r0_60,r2_61,r3_57,r4_64,r5_55,r6_65,r7_58,r8_66,sp_54,ZC_59
	return r0_60
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r7 + (r5 << 0x00000000)

l000099B6_in_fn000099AE:
	r4_29 = dwArg00
	r5_31 = dwArg04
	r6_33 = dwArg08
	r7_35 = dwArg0C
	r8_37 = dwArg10
	sp_38 = fp + 24
	return r0
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r7 + (r5 << 0x00000000)

fn000099AE_exit:
	lr_7 = PHI(lr_63, lr, lr, lr)
	NZC_8 = PHI(NZC_62, NZC, NZC, NZC)
	r2_9 = PHI(r2_61, r2, r2, r2)
	r0_10 = PHI(r0_60, r0, r0, r0)
	ZC_11 = PHI(ZC_59, ZC_4, ZC, ZC)
	r3_12 = PHI(r3_57, r3_6, r3, r3)
	NZCV_13 = PHI(NZCV_56, NZCV_3, NZCV, NZCV)
	r4_14 = PHI(r4_64, r4_29, r4, r4)
	r5_15 = PHI(r5_55, r5_31, r5, r5)
	r6_16 = PHI(r6_65, r6_33, r6, r6)
	r7_17 = PHI(r7_58, r7_35, r7, r7)
	r8_18 = PHI(r8_66, r8_37, r8, r8)
	sp_19 = PHI(sp_54, sp_38, sp, sp)
	use r2_9 (=> r2Out)
	use r3_12 (=> r3Out)
	use r4_14 (=> r4Out)
	use r5_15 (=> r5Out)
	use r6_16 (=> r6Out)
	use r7_17 (=> r7Out)
	use r8_18 (=> r8Out)
	use sp_19 (=> spOut)
// DataOut: r0 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r0:<invalid> r2:<invalid>



void OSRAMDisplayOff(word32 r2, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
OSRAMDisplayOff_entry:
// DataOut: r2 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000099C0:
	fn00009698()
	fn00009700(0x000000AE, r2)
	fn00009700(0x00000080, r2)
	fn00009700(0x000000AD, r2)
	fn00009700(0x00000080, r2)
// DataOut: r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l000099E6_thunk_fn00009734:
	fn00009734(r7)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:<invalid> lr:<invalid> sp:sp + 8 r0:0x0000008A -8(fp):r3 -4(fp):lr
// Terminates process

OSRAMDisplayOff_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp -8(fp):r3 -4(fp):lr



void fn000099E4(word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000099E4_entry:
// DataOut: r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l000099E4:
// DataOut: r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l000099E6_thunk_fn00009734:
	fn00009734(r7)
	return
// DataOut: r4 r5 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x0000008A
// Terminates process

fn000099E4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void SSIConfig(word32 r0, word32 r1, word32 r2, word32 r3, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2 r3
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
// Stack args: Stack +0000(32)
SSIConfig_entry:
// DataOut: r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32)

l000099E8:
	word32 r2_25
	word32 r0_26 = fn00009DEC(r0, out r2_25)
	branch r2 == 0x00000002 l00009A2C
// DataOut: r0 r2 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l000099FC_thunk_fn00009A18:
	word32 r7_40
	word32 r8_41
	fn00009A18(r2_25, r3, dwArg00, r0, r1, out r7_40, out r8_41)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r7:r2 r6:r0 r8:r1 r4:r3 r5:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l000099FE:
// DataOut: r0 r4 r5 r6 r7 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp - 24 r7:r2 r6:r0 r8:r1 r4:r3 r5:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

l000099FE_thunk_fn00009A00:
	fn00009A00(r0_26, r3, dwArg00, r0, r2, r1)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r7:r2 r6:r0 r8:r1 r4:r3 r5:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

SSIConfig_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:<invalid> r8:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> r0:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr



void fn00009A00(word32 r0, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z r0 r4 r5 r6 r7 r8
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved: sp
l00009A00:
	branch Test(EQ,Z) l00009A04
// DataOut: r0 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn:

l00009A00_thunk_fn00009A04:
	fn00009A04(r0, r4, r5, r6, r7, r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

l00009A02_1:
// DataOut: r0 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn:

l00009A02_thunk_fn00009A04:
	fn00009A04(r0, r4, r5, r6, r7, r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00009A00_entry:
// DataOut: r0 r4 r5 r6 r7 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009A00:
	branch Z l00009A02_thunk_fn00009A04
// DataOut: r0 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A02_thunk_fn00009A04:
	fn00009A04(r0, r4, r5, r6, r7, r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A02_1:
// DataOut: r0 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A02_thunk_fn00009A04:
	fn00009A04(r0, r4, r5, r6, 0x00000004, r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:0x00000004

fn00009A00_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> r1:<invalid> r6:<invalid> r8:<invalid>



void fn00009A04(word32 r0, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5 r6 r7 r8
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
fn00009A04_entry:
// DataOut: r0 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A04:
	Mem7[r6 + 4:word32] = r7
	word32 r2_11 = r0 /u r4 /u 0x00000002 - 0x00000001
	branch r2_11 >u 0x000000FF l00009A16_thunk_SysCtlPeripheralDeepSleepDisable
// DataOut: r0 r2 r4 r5 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A16_thunk_SysCtlPeripheralDeepSleepDisable:
	SysCtlPeripheralDeepSleepDisable(r0)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:r0 /u r4 r4:0x00000002 r2:r0 /u 0x00000002 /u 0x00000002 - 0x00000001

l00009A16_thunk_fn00009A18:
	word32 r7_19
	word32 r8_20
	fn00009A18(r2_11, 0x00000002, r5, r6, r8, out r7_19, out r8_20)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:r0 /u r4 r4:0x00000002 r2:r0 /u 0x00000002 /u 0x00000002 - 0x00000001

fn00009A04_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r4:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> r1:<invalid> r6:<invalid> r7:<invalid> r8:<invalid>



word32 fn00009A18(word32 r2, word32 r4, word32 r5, word32 r6, word32 r8, ptr32 & r7Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r4 r5 r6 r8
// LiveOut: r1 r7 r8
// Trashed: NZCV r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
fn00009A18_entry:
// DataOut: r0 r10 r2 r4 r5 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(32)

l00009A18:
	Mem13[r6 + 16:word32] = r4
	word32 r1_7 = r8 & 0x00000030 | r8 << 0x00000006
	Mem15[r6:word32] = r5 - 0x00000001 | r1_7 | r2 << 0x00000008
// DataOut: r0 r1 r10 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A2C:
	word32 r7_19
	*r7Out = Mem15[v3 + 12:word32]
	word32 r8_20
	*r8Out = Mem15[v3 + 16:word32]
	return r1_7
// DataOut: r0 r1 r10 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:r8 & 0x00000030 r5:r5 - 0x00000002 | (r8 & 0x00000030 | r8 << 0x00000006) r1:r8 & 0x00000030 | r8 << 0x00000006 r2:r5 - 0x00000002 | (r8 & 0x00000030 | r8 << 0x00000006) | r2 << 0x00000008

fn00009A18_exit:
// DataOut: r1 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:v3 + 24 r3:r8 & 0x00000030 r5:<invalid> r1:r8 & 0x00000030 | r8 << 0x00000006 r2:r5 - 0x00000002 | (r8 & 0x00000030 | r8 << 0x00000006) | r2 << 0x00000008 r4:<invalid> r6:<invalid> r7:<invalid> r8:<invalid>



void fn00009A30(word32 r0, word32 r4, word32 r5, word32 r6, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4 r5 r6 r8
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved: sp
fn00009A30_entry:
// DataOut: r0 r4 r5 r6 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009A30:
// DataOut: r0 r4 r5 r6 r7 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp

l00009A32_thunk_fn00009A00:
	fn00009A00(r0, r4, r5, r6, 0x0000000C, r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:0x0000000C

fn00009A30_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> r1:<invalid> r6:<invalid> r8:<invalid>



void SSIEnable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r3
// Preserved: sp
SSIEnable_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A34:
	Mem6[r0 + 4:word32] = Mem0[r0 + 4:word32] | 0x00000002
	word32 sp_8
	word32 r3_9
	word32 r0_10
	word32 lr_11
	call lr (retsize: 0;)
		uses: lr,r0,r3_5,sp_1
		defs: lr_11,r0_10,r3_9,sp_8
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SSIEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>



void SSIDisable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r3
// Preserved: sp
SSIDisable_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A40:
	word32 r3_5 = Mem0[r0 + 4:word32] & ~0x00000002
	Mem6[r0 + 4:word32] = r3_5
	word32 sp_8
	word32 r3_9
	word32 r0_10
	word32 lr_11
	call lr (retsize: 0;)
		uses: lr,r0,r3_5,sp_1
		defs: lr_11,r0_10,r3_9,sp_8
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SSIDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>



void SSIIntRegister(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: lr r3 sp
SSIIntRegister_entry:
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009A4C:
	IntMasterDisable()
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A5A_thunk_fn000095D8:
	fn000095D8(0x00000017, r3)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00000017 r3:r3 lr:lr -8(fp):r3 -4(fp):lr

SSIIntRegister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r3:<invalid> lr:lr r2:<invalid> -8(fp):r3 -4(fp):lr



void SSIIntUnregister()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SSIIntUnregister_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009A60:
	fn00009634()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A6E_thunk_fn00009534:
	fn00009534()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:<invalid> lr:<invalid> sp:sp + 8 r0:0x00000017 -8(fp):r3 -4(fp):lr
// Terminates process

SSIIntUnregister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp -8(fp):r3 -4(fp):lr



void SSIIntEnable(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: NZC r1 r3
// Preserved: sp
SSIIntEnable_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A74:
	word32 r3_4 = Mem0[r0 + 20:word32]
	word32 r1_6 = r1 | r3_4
	Mem8[r0 + 20:word32] = r1_6
	word32 sp_10
	word32 r3_11
	word32 r0_12
	word32 r1_13
	byte NZC_14
	word32 lr_15
	call lr (retsize: 0;)
		uses: lr,NZC_7,r0,r1_6,r3_4,sp_1
		defs: lr_15,NZC_14,r0_12,r1_13,r3_11,sp_10
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SSIIntEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid>



void SSIIntDisable(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: r1 r3
// Preserved: sp
SSIIntDisable_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A7C:
	word32 r3_4 = Mem0[r0 + 20:word32]
	word32 r1_6 = r3_4 & ~(r1 << 0x00000000)
	Mem7[r0 + 20:word32] = r1_6
	word32 sp_9
	word32 r3_10
	word32 r0_11
	word32 r1_12
	word32 lr_13
	call lr (retsize: 0;)
		uses: lr,r0,r1_6,r3_4,sp_1
		defs: lr_13,r0_11,r1_12,r3_10,sp_9
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SSIIntDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid>



void SSIIntStatus(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: r0
// Preserved: sp
SSIIntStatus_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A88:
	branch r1 != 0x00000000 l00009A8E
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A8E:
	word32 sp_16
	word32 r1_17
	word32 r0_18
	word32 lr_19
	call lr (retsize: 0;)
		uses: lr,r0_15,r1,sp_1
		defs: lr_19,r0_18,r1_17,sp_16
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A8A:
	word32 sp_11
	word32 r1_12
	word32 r0_13
	word32 lr_14
	call lr (retsize: 0;)
		uses: lr,r0_9,r1,sp_1
		defs: lr_14,r0_13,r1_12,sp_11
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SSIIntStatus_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



void SSIIntClear(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed:
// Preserved: sp
SSIIntClear_entry:
// DataOut: cpsr r0 r1 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A94:
	Mem3[r0 + 32:word32] = r1
	word32 sp_6
	word32 r1_7
	word32 r0_8
	word32 lr_9
	call lr (retsize: 0;)
		uses: lr,r0,r1,sp_1
		defs: lr_9,r0_8,r1_7,sp_6
	return
// DataOut: cpsr r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

SSIIntClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void SSIDataPut(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: NZC r0 r2 r3
// Preserved: sp
SSIDataPut_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A98:
	word32 r3_5 = Mem0[r0 + 0x0000000C:word32]
// DataOut: r0 r1 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A9C_thunk_fn00009A9E:
	fn00009A9E(r0, r1, r3_5)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:r0 + 0x0000000C r3:<invalid>

SSIDataPut_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:r0 + 0x0000000C r3:<invalid> r0:<invalid>



void fn00009A9E(word32 r0, word32 r1, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r3
// LiveOut:
// Trashed: NZC r0 r3
// Preserved: sp
l00009A9E:
	r3 = r3 << 30
	NZC = cond(r3)
	N = NZC (alias)
	branch Test(GE,N) l00009C98_in_SSIDataPut
// DataOut: r0 r1 r10 r2 r3 r8 r9
// DataOut (flags): 
// SymbolicIn:

l00009C98_in_SSIDataPut:
	r0 = Mem0[r3:word32]
	call lr (retsize: 0;)
		defs: lr,N,NZC,r0,r1,r3,sp
	return
// DataOut: r1 r10 r2 r8 r9
// DataOut (flags): 
// SymbolicIn:

l00009AA2:
	Mem0[r0 + 8:word32] = r1
	call lr (retsize: 0;)
		defs: lr,N,NZC,r0,r1,r3,sp
	return
// DataOut: r1 r10 r2 r8 r9
// DataOut (flags): 
// SymbolicIn:

fn00009A9E_entry:
	def fp
	def r3
	def r1
	def r0
	def lr
	def lr
	def Mem0
	def lr
// DataOut: r0 r1 r10 r2 r3 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009A9E:
	sp_1 = fp
	r3_3 = r3 << 30
	NZC_4 = cond(r3_3)
	N_5 = NZC_4 (alias)
	branch r3_3 >= 0x00000000 l00009C98_in_fn00009A9E
// DataOut: r0 r1 r10 r2 r3 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009C98_in_fn00009A9E:
	r0_26 = Mem0[r3_3:word32]
	call lr (retsize: 0;)
		uses: lr,lr,lr,N_5,NZC_4,r0_26,r1,r3_3,sp_1
		defs: lr_33,N_31,NZC_30,r0_32,r1_34,r3_29,sp_28
	return
// DataOut: r1 r10 r2 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 << 30

l00009AA2_in_fn00009A9E:
	Mem14[r0 + 8:word32] = r1
	call lr (retsize: 0;)
		uses: lr,lr,N_5,NZC_4,r0,r1,r3_3,sp_1
		defs: lr_23,N_21,NZC_20,r0_22,r1_24,r3_19,sp_18
	return
// DataOut: r1 r10 r2 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 << 30

fn00009A9E_exit:
	r1_6 = PHI(r1_34, r1_24, r1, r1)
	lr_7 = PHI(lr_33, lr_23, lr, lr)
	r0_8 = PHI(r0_32, r0_22, r0, r0)
	N_9 = PHI(N_31, N_21, N, N)
	NZC_10 = PHI(NZC_30, NZC_20, NZC, NZC)
	r3_11 = PHI(r3_29, r3_19, r3, r3)
	sp_12 = PHI(sp_28, sp_18, sp, sp)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 << 30 r0:<invalid>



void SSIDataNonBlockingPut(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: NZC r0 r3
// Preserved: sp
SSIDataNonBlockingPut_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009AA8:
	branch (Mem0[r0 + 12:word32] & 0x00000002) == 0x00000000 l00009AB2
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009AB0_1:
	Mem18[r0 + 8:word32] = r1
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l00009AB2:
	word32 sp_10
	word32 r3_11
	word32 r0_12
	byte NZC_13
	byte Z_14
	word32 r1_15
	word32 lr_16
	call lr (retsize: 0;)
		uses: lr,NZC_6,r0_8,r3_5,sp_1,Z_7
		defs: lr_16,NZC_13,r0_12,r1_15,r3_11,sp_10,Z_14
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

SSIDataNonBlockingPut_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>



void fn00009AB4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0
// Preserved: sp
fn00009AB4_entry:
// DataOut: cpsr r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009AB4:
	word32 sp_5
	word32 r0_6
	word32 r3_7
	word32 lr_8
	call lr (retsize: 0;)
		uses: lr,r0_3,r3,sp_1
		defs: lr_8,r0_6,r3_7,sp_5
	return
// DataOut: cpsr r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00009AB4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r3



void SSIDataGet(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: NZC r0 r2 r3
// Preserved: sp
SSIDataGet_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009AB8:
	branch Mem0[r0 + 0x0000000C:word32] << 29 >= 0x00000000 l00009AC0_thunk_SysCtlLDOGet
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009AC0_thunk_SysCtlLDOGet:
	SysCtlLDOGet()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:r0 + 0x0000000C r3:<invalid>

l00009AC2:
	word32 r3_17 = Mem0[r0 + 8:word32]
	Mem18[r1:word32] = r3_17
	word32 sp_21
	word32 r2_22
	word32 r0_23
	word32 r3_24
	byte NZC_25
	byte N_26
	word32 r1_27
	word32 lr_28
	call lr (retsize: 0;)
		uses: lr,N_8,NZC_7,r0,r1,r2_3,r3_17,sp_1
		defs: lr_28,N_26,NZC_25,r0_23,r1_27,r2_22,r3_24,sp_21
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:r0 + 0x0000000C r3:<invalid>

SSIDataGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:r0 + 0x0000000C r3:<invalid> r0:<invalid>



void SSIDataNonBlockingGet(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: NZC r0 r3
// Preserved: sp
SSIDataNonBlockingGet_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009AC8:
	word32 r3_4 = Mem0[r0 + 12:word32]
	word32 r3_20 = r3_4 & 0x00000004
	branch (r3_4 & 0x00000004) == 0x00000000 l00009AD2
// DataOut: r0 r1 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009AD0_1:
	r3_20 = Mem0[r0 + 8:word32]
// DataOut: r1 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l00009AD2:
	Mem9[r1:word32] = r3_20
	word32 sp_13
	word32 r3_14
	word32 r0_15
	byte NZC_16
	byte Z_17
	word32 r1_18
	word32 lr_19
	call lr (retsize: 0;)
		uses: lr,NZC_6,r0_11,r1,r3_8,sp_1,Z_7
		defs: lr_19,NZC_16,r0_15,r1_18,r3_14,sp_13,Z_17
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

SSIDataNonBlockingGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>



void SysCtlSRAMSizeGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0 r3
// Preserved: sp
SysCtlSRAMSizeGet_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009ADC:
	word32 sp_9
	word32 r3_10
	word32 pc_11
	word32 r0_12
	word32 lr_13
	call lr (retsize: 0;)
		uses: lr,r0_7,r3_5,sp_1
		defs: lr_13,pc_11,r0_12,r3_10,sp_9
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlSRAMSizeGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>



void SysCtlFlashSizeGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0 r3
// Preserved: sp
SysCtlFlashSizeGet_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009AF4:
	word32 sp_9
	word32 r3_10
	word32 pc_11
	word32 r0_12
	word32 lr_13
	call lr (retsize: 0;)
		uses: lr,r0_7,r3_5,sp_1
		defs: lr_13,pc_11,r0_12,r3_10,sp_9
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlFlashSizeGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>



void SysCtlPinPresent(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C r0
// LiveOut:
// Trashed: NZCV r0 r3
// Preserved: sp
SysCtlPinPresent_entry:
// DataOut: r0
// DataOut (flags): C
// SymbolicIn: sp:fp

l00009B0C:
	word32 r3_7 = Mem0[Mem0[0x00009B20:word32]:word32] + r0 + C
	branch r3_7 == 0x00000000 l00009B16
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009B14_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l00009B16:
	word32 sp_12
	word32 r3_13
	word32 pc_14
	word32 r0_15
	bool C_16
	byte NZCV_17
	byte Z_18
	word32 lr_19
	call lr (retsize: 0;)
		uses: C,lr,NZCV_8,r0_10,r3_7,sp_1,Z_9
		defs: C_16,lr_19,NZCV_17,pc_14,r0_15,r3_13,sp_12,Z_18
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:0x00000001

SysCtlPinPresent_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:0x00000000



void SysCtlPeripheralPresent(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: sp
SysCtlPeripheralPresent_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009B20:
	word32 r3_7 = Mem0[Mem0[0x00009B3C:word32] + ((r0 >>u 28) << 2):word32]
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009B24_thunk_fn00009B26:
	word32 r3_8
	fn00009B26(r0, r3_7, out r3_8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:r0 >>u 28

SysCtlPeripheralPresent_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:r0 >>u 28 r0:0x00000000



word32 fn00009B26(word32 r0, word32 r3, ptr32 & r3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r3
// LiveOut: r0 r3
// Trashed: NZCV r0 r3
// Preserved: sp
l00009B26:
	r0 = r0 & ~0xF0000000
	r3 = Mem0[r3:word32]
	r0 = r0 + r3 + C
	NZCV = cond(r0)
	Z = NZCV (alias)
	branch Test(EQ,Z) l00009B34
// DataOut: r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn:

l00009B32_1:
	r0 = 0x00000001
// DataOut: r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn:

l00009B34:
	r0 = 0x00000000
	call lr (retsize: 0;)
	return r0
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn:

fn00009B26_entry:
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009B26:
	sp = fp
	r0 = r0 + 0x00000022
	NZCV = cond(r0)
	C = (bool) NZCV (alias)
	r0 = r0 & ~0xF0000000
	r3 = Mem0[r3:word32]
	r0 = r0 + r3 + C
	NZCV = cond(r0)
	Z = NZCV (alias)
	branch Test(EQ,Z) l00009B34_in_fn00009B26
// DataOut: r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009B34_in_fn00009B26:
	r0 = 0x00000000
	call lr (retsize: 0;)
	return r0
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r3:<invalid>

l00009B32_1:
	r0 = 0x00000001
// DataOut: r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r3:<invalid>

l00009B34_in_fn00009B26:
	r0 = 0x00000000
	call lr (retsize: 0;)
	return r0
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00000001 r3:<invalid>

fn00009B26_exit:
	use r3 (=> r3Out)
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00000000 r3:<invalid>



void SysCtlPeripheralReset(word32 r0, word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r5 r6 r7
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
SysCtlPeripheralReset_entry:
// DataOut: r0 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009B3C:
	word32 r2_11 = Mem0[Mem0[0x00009B7E:word32] + ((r0 >>u 28) << 0x00000002) + 16:word32]
	word32 r4_13 = Mem0[r2_11:word32]
	Mem16[r2_11:word32] = r0 & ~0xF0000000 | r4_13
	word32 dwLoc0C_17 = 0x00000000
	word32 r3_18 = 0x00000000
	branch false l00009B66
// DataOut: r0 r1 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Local -000C(32)

l00009B5E:
	dwLoc0C_17 = 0x00000001
	r3_18 = 0x00000001
// DataOut: r0 r1 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r1:0x00000000 r3:0x00000000 r2:<invalid> r4:<invalid> -12(fp):0x00000000 -4(fp):r4
// LocalsOut: fp(32) Local -000C(32)

l00009B66:
	branch r3_18 <=u 0x0000000F l00009B68_thunk_fn00009D5A
// DataOut: r0 r1 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r1:0x00000000 r3:<invalid> r2:<invalid> r4:<invalid> -12(fp):<invalid> -4(fp):r4
// LocalsOut: fp(32) Local -000C(32)

l00009B68_thunk_fn00009D5A:
	fn00009D5A(r0, 0x00000000, r2_11, r3_18, r4_13, r5, r6, r7, dwLoc0C_17)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r1:0x00000000 r3:<invalid> r2:<invalid> r4:<invalid> -12(fp):<invalid> -4(fp):r4

l00009B6A:
	word32 r3_39 = Mem16[r2_11:word32]
	word32 r0_40 = r3_39 & ~(r0 << 0x00000000)
	Mem41[r2_11:word32] = r0_40
	word32 sp_51
	word32 r1_52
	word32 r3_53
	word32 pc_54
	word32 r2_55
	word32 r0_56
	byte NZC_57
	word32 r4_58
	byte NZCV_59
	byte ZC_60
	word32 lr_61
	word32 r5_62
	word32 r6_63
	word32 r7_64
	call lr (retsize: 0;)
		uses: dwLoc04_9,dwLoc0C_21,lr,NZC,NZCV_23,pc,r0_40,r1_2,r2_11,r3_39,r4_43,r5,r6,r7,sp_44,ZC_24
		defs: lr_61,NZC_57,NZCV_59,pc_54,r0_56,r1_52,r2_55,r3_53,r4_58,r5_62,r6_63,r7_64,sp_51,ZC_60
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r1:0x00000000 r3:<invalid> r2:<invalid> r4:<invalid> -12(fp):<invalid> -4(fp):r4

SysCtlPeripheralReset_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r0:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -4(fp):r4



void fn00009B78(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZC r0 r2 r3 r5
// Preserved: r0 sp
fn00009B78_entry:
// DataOut: r0 r10 r4 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009B78:
// DataOut: r0 r10 r4 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009B7A_thunk_SysCtlPeripheralEnable:
	SysCtlPeripheralEnable(r0)
	return
// DataOut: r10 r4 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp r5:00009CC8 r0:r0

fn00009B78_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:00009CC8 r0:<invalid> r3:<invalid> r2:<invalid>



void SysCtlPeripheralEnable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZC r0 r2 r3
// Preserved: sp
SysCtlPeripheralEnable_entry:
// DataOut: r0 r10 r4 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009B7C:
	word32 r3_7 = Mem0[0x00009B98:word32] + ((r0 >>u 28) << 0x00000002)
// DataOut: r0 r10 r3 r4 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009B84:
	word32 r3_8 = Mem0[r3_7 + 28:word32]
	word32 r2_10 = Mem0[r3_8:word32]
	word32 r0_11 = r0 & ~0xF0000000 | r2_10
	Mem13[r3_8:word32] = r0_11
	word32 sp_15
	word32 r3_16
	word32 pc_17
	word32 r2_18
	word32 r0_19
	byte NZC_20
	word32 lr_21
	call lr (retsize: 0;)
		uses: lr,NZC_12,r0_11,r2_10,r3_8,sp_1
		defs: lr_21,NZC_20,pc_17,r0_19,r2_18,r3_16,sp_15
	return
// DataOut: r10 r4 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:r0 >>u 28

SysCtlPeripheralEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r0:<invalid>



void SysCtlPeripheralDisable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZC r0 r2 r3
// Preserved: sp
SysCtlPeripheralDisable_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009B98:
	word32 r2_8 = Mem0[Mem0[0x00009BB4:word32] + ((r0 >>u 28) << 0x00000002) + 28:word32]
	word32 r3_10 = Mem0[r2_8:word32]
	word32 r0_11 = r3_10 & ~((r0 & ~0xF0000000) << 0x00000000)
	Mem12[r2_8:word32] = r0_11
	word32 sp_14
	word32 r3_15
	word32 pc_16
	word32 r2_17
	word32 r0_18
	byte NZC_19
	word32 lr_20
	call lr (retsize: 0;)
		uses: lr,NZC_6,r0_11,r2_8,r3_10,sp_1
		defs: lr_20,NZC_19,pc_16,r0_18,r2_17,r3_15,sp_14
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlPeripheralDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r0:<invalid>



void SysCtlPeripheralSleepEnable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZC r0 r2 r3
// Preserved: sp
SysCtlPeripheralSleepEnable_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009BB4:
	word32 r3_7 = Mem0[Mem0[0x00009BD0:word32] + ((r0 >>u 28) << 0x00000002) + 40:word32]
	word32 r2_9 = Mem0[r3_7:word32]
	word32 r0_10 = r0 & ~0xF0000000 | r2_9
	Mem12[r3_7:word32] = r0_10
	word32 sp_14
	word32 r3_15
	word32 pc_16
	word32 r2_17
	word32 r0_18
	byte NZC_19
	word32 lr_20
	call lr (retsize: 0;)
		uses: lr,NZC_11,r0_10,r2_9,r3_7,sp_1
		defs: lr_20,NZC_19,pc_16,r0_18,r2_17,r3_15,sp_14
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlPeripheralSleepEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r0:<invalid>



void SysCtlPeripheralSleepDisable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZC r0 r2 r3
// Preserved: sp
SysCtlPeripheralSleepDisable_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009BD0:
	word32 r2_8 = Mem0[Mem0[0x00009BEC:word32] + ((r0 >>u 28) << 0x00000002) + 40:word32]
	word32 r3_10 = Mem0[r2_8:word32]
	word32 r0_11 = r3_10 & ~((r0 & ~0xF0000000) << 0x00000000)
	Mem12[r2_8:word32] = r0_11
	word32 sp_14
	word32 r3_15
	word32 pc_16
	word32 r2_17
	word32 r0_18
	byte NZC_19
	word32 lr_20
	call lr (retsize: 0;)
		uses: lr,NZC_6,r0_11,r2_8,r3_10,sp_1
		defs: lr_20,NZC_19,pc_16,r0_18,r2_17,r3_15,sp_14
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlPeripheralSleepDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r0:<invalid>



void SysCtlPeripheralDeepSleepEnable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZC r0 r2 r3
// Preserved: sp
SysCtlPeripheralDeepSleepEnable_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009BEC:
	word32 r3_7 = Mem0[Mem0[0x00009C08:word32] + ((r0 >>u 28) << 0x00000002) + 52:word32]
	word32 r2_9 = Mem0[r3_7:word32]
	word32 r0_10 = r0 & ~0xF0000000 | r2_9
	Mem12[r3_7:word32] = r0_10
	word32 sp_14
	word32 r3_15
	word32 pc_16
	word32 r2_17
	word32 r0_18
	byte NZC_19
	word32 lr_20
	call lr (retsize: 0;)
		uses: lr,NZC_11,r0_10,r2_9,r3_7,sp_1
		defs: lr_20,NZC_19,pc_16,r0_18,r2_17,r3_15,sp_14
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlPeripheralDeepSleepEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r0:<invalid>



void SysCtlPeripheralDeepSleepDisable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZC r0 r2 r3
// Preserved: sp
SysCtlPeripheralDeepSleepDisable_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009C08:
	word32 r2_8 = Mem0[Mem0[0x00009C24:word32] + ((r0 >>u 28) << 0x00000002) + 52:word32]
	word32 r3_10 = Mem0[r2_8:word32]
	word32 r0_11 = r3_10 & ~((r0 & ~0xF0000000) << 0x00000000)
	Mem12[r2_8:word32] = r0_11
	word32 sp_14
	word32 r3_15
	word32 pc_16
	word32 r2_17
	word32 r0_18
	byte NZC_19
	word32 lr_20
	call lr (retsize: 0;)
		uses: lr,NZC_6,r0_11,r2_8,r3_10,sp_1
		defs: lr_20,NZC_19,pc_16,r0_18,r2_17,r3_15,sp_14
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlPeripheralDeepSleepDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r0:<invalid>



void SysCtlPeripheralClockGating(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
SysCtlPeripheralClockGating_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009C24:
	word32 r2_3 = Mem0[0x00009C40:word32]
	word32 r3_4 = Mem0[r2_3:word32]
	branch r0 != 0x00000000 l00009C32
// DataOut: r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009C32:
	Mem23[r2_3:word32] = r3_4 | 0x08000000
	word32 sp_24
	word32 r2_25
	word32 pc_26
	word32 r3_27
	word32 r0_28
	word32 lr_29
	call lr (retsize: 0;)
		uses: lr,pc,r0,r2_3,r3_22,sp_1
		defs: lr_29,pc_26,r0_28,r2_25,r3_27,sp_24
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid>

l00009C2A:
	word32 r3_12 = r3_4 & ~0x08000000
	Mem13[r2_3:word32] = r3_12
	word32 sp_16
	word32 r2_17
	word32 pc_18
	word32 r3_19
	word32 r0_20
	word32 lr_21
	call lr (retsize: 0;)
		uses: lr,pc,r0,r2_3,r3_12,sp_1
		defs: lr_21,pc_18,r0_20,r2_17,r3_19,sp_16
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid>

SysCtlPeripheralClockGating_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid>



void SysCtlIntRegister(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: lr r3 sp
SysCtlIntRegister_entry:
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009C40:
	IntMasterDisable()
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009C50_thunk_fn000095D8:
	fn000095D8(0x0000002C, r3)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r0 r0:0x0000002C r3:r3 lr:lr -8(fp):r3 -4(fp):lr

SysCtlIntRegister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:r0 r0:<invalid> r3:<invalid> lr:lr r2:<invalid> -8(fp):r3 -4(fp):lr



void SysCtlIntUnregister()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlIntUnregister_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009C54:
	fn00009634()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009C62_thunk_fn00009534:
	fn00009534()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:<invalid> lr:<invalid> sp:sp + 8 r0:0x0000002C -8(fp):r3 -4(fp):lr
// Terminates process

SysCtlIntUnregister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp -8(fp):r3 -4(fp):lr



void SysCtlIntEnable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZC r0 r2 r3
// Preserved: sp
SysCtlIntEnable_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009C68:
	word32 r2_3 = Mem0[0x00009C78:word32]
	word32 r3_4 = Mem0[r2_3:word32]
	word32 r0_6 = r0 | r3_4
	Mem8[r2_3:word32] = r0_6
	word32 sp_10
	word32 r2_11
	word32 pc_12
	word32 r3_13
	word32 r0_14
	byte NZC_15
	word32 lr_16
	call lr (retsize: 0;)
		uses: lr,NZC_7,r0_6,r2_3,r3_4,sp_1
		defs: lr_16,NZC_15,pc_12,r0_14,r2_11,r3_13,sp_10
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlIntEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid> r0:<invalid>



void SysCtlIntDisable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r0 r2 r3
// Preserved: sp
SysCtlIntDisable_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009C78:
	word32 r2_3 = Mem0[0x00009C88:word32]
	word32 r3_4 = Mem0[r2_3:word32]
	word32 r0_6 = r3_4 & ~(r0 << 0x00000000)
	Mem7[r2_3:word32] = r0_6
	word32 sp_9
	word32 r2_10
	word32 pc_11
	word32 r3_12
	word32 r0_13
	word32 lr_14
	call lr (retsize: 0;)
		uses: lr,r0_6,r2_3,r3_4,sp_1
		defs: lr_14,pc_11,r0_13,r2_10,r3_12,sp_9
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlIntDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid> r0:<invalid>



void SysCtlIntClear(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r3
// Preserved: sp
SysCtlIntClear_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009C88:
	word32 r3_3 = Mem0[0x00009C94:word32]
	Mem5[r3_3:word32] = r0
	word32 sp_7
	word32 r3_8
	word32 pc_9
	word32 r0_10
	word32 lr_11
	call lr (retsize: 0;)
		uses: lr,r0,r3_3,sp_1
		defs: lr_11,pc_9,r0_10,r3_8,sp_7
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlIntClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>



void SysCtlIntStatus(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r0 r3
// Preserved: sp
SysCtlIntStatus_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009C94:
	branch r0 != 0x00000000 l00009C9C
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009C9C:
	word32 sp_20
	word32 r0_21
	word32 r3_22
	word32 pc_23
	word32 lr_24
	call lr (retsize: 0;)
		uses: lr,pc,r0_19,r3_18,sp_1
		defs: lr_24,pc_23,r0_21,r3_22,sp_20
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009C96:
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009C98:
	word32 sp_13
	word32 r0_14
	word32 r3_15
	word32 pc_16
	word32 lr_17
	call lr (retsize: 0;)
		uses: lr,pc,r0_10,r3_9,sp_1
		defs: lr_17,pc_16,r0_14,r3_15,sp_13
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

SysCtlIntStatus_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>



void SysCtlLDOSet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r3
// Preserved: sp
SysCtlLDOSet_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009CAC:
	word32 r3_3 = Mem0[0x00009CB8:word32]
	Mem5[r3_3:word32] = r0
	word32 sp_7
	word32 r3_8
	word32 pc_9
	word32 r0_10
	word32 lr_11
	call lr (retsize: 0;)
		uses: lr,r0,r3_3,sp_1
		defs: lr_11,pc_9,r0_10,r3_8,sp_7
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlLDOSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>



void SysCtlLDOGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0 r3
// Preserved: sp
SysCtlLDOGet_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009CB8:
	word32 sp_6
	word32 r3_7
	word32 pc_8
	word32 r0_9
	word32 lr_10
	call lr (retsize: 0;)
		uses: lr,r0_4,r3_3,sp_1
		defs: lr_10,pc_8,r0_9,r3_7,sp_6
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlLDOGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>



void SysCtlLDOConfigSet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r3
// Preserved: sp
SysCtlLDOConfigSet_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009CC4:
	word32 r3_3 = Mem0[0x00009CD0:word32]
	Mem5[r3_3:word32] = r0
	word32 sp_7
	word32 r3_8
	word32 pc_9
	word32 r0_10
	word32 lr_11
	call lr (retsize: 0;)
		uses: lr,r0,r3_3,sp_1
		defs: lr_11,pc_9,r0_10,r3_8,sp_7
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlLDOConfigSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>



void SysCtlReset()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
SysCtlReset_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

SysCtlReset_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009CD0:
	word32 r3_3 = Mem0[0x00009CDC:word32]
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009CD2:
	Mem5[r3_3:word32] = Mem0[0x00009CE2:word32]
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid>



void SysCtlSleep()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
SysCtlSleep_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009CE0:
	word32 sp_2
	call fn00C0A0E8 (retsize: 0;)
		uses: sp_1
		defs: sp_2
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlSleep_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void SysCtlDeepSleep()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r3
// Preserved: r4 sp
SysCtlDeepSleep_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009CE4:
	word32 r4_8 = Mem0[0x00009D06:word32]
	Mem11[r4_8:word32] = Mem0[r4_8:word32] | 0x00000004
	fn0000A0E8()
	Mem14[r4_8:word32] = Mem11[r4_8:word32] & ~0x00000004
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlDeepSleep_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r3:<invalid> -8(fp):r4 -4(fp):lr



void SysCtlResetCauseGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0 r3
// Preserved: sp
SysCtlResetCauseGet_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009D04:
	word32 sp_6
	word32 r3_7
	word32 pc_8
	word32 r0_9
	word32 lr_10
	call lr (retsize: 0;)
		uses: lr,r0_4,r3_3,sp_1
		defs: lr_10,pc_8,r0_9,r3_7,sp_6
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlResetCauseGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>



void SysCtlResetCauseClear(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r0 r2 r3
// Preserved: sp
SysCtlResetCauseClear_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009D10:
	word32 r2_3 = Mem0[0x00009D20:word32]
	word32 r3_4 = Mem0[r2_3:word32]
	word32 r0_6 = r3_4 & ~(r0 << 0x00000000)
	Mem7[r2_3:word32] = r0_6
	word32 sp_9
	word32 r2_10
	word32 pc_11
	word32 r3_12
	word32 r0_13
	word32 lr_14
	call lr (retsize: 0;)
		uses: lr,r0_6,r2_3,r3_4,sp_1
		defs: lr_14,pc_11,r0_13,r2_10,r3_12,sp_9
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlResetCauseClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid> r0:<invalid>



void SysCtlBrownOutConfigSet(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: r1 r3
// Preserved: sp
SysCtlBrownOutConfigSet_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009D20:
	word32 r3_3 = Mem0[0x00009D30:word32]
	word32 r1_6 = r0 | r1 << 0x00000002
	Mem7[r3_3:word32] = r1_6
	word32 sp_9
	word32 r3_10
	word32 pc_11
	word32 r1_12
	word32 r0_13
	word32 lr_14
	call lr (retsize: 0;)
		uses: lr,r0,r1_6,r3_3,sp_1
		defs: lr_14,pc_11,r0_13,r1_12,r3_10,sp_9
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlBrownOutConfigSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r1:r0 | r1 << 0x00000002



void SysCtlClockSet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
SysCtlClockSet_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009D30:
	word32 r4_15 = Mem0[0x00009DE6:word32]
	word32 r3_17 = Mem0[r4_15:word32]
	word32 r1_22 = (Mem0[0x00009DE8:word32] & r3_17 | 0x00000800) & (r0 | ~0x00000003)
	word32 r3_25 = r3_17 & ~0x00400000
	word32 r5_26 = Mem0[0x00009DEE:word32]
// DataOut: r0 r1 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009D56_thunk_fn00009D5A:
	fn00009D5A(r0, r1_22, r0 & 0x000033F0, r3_25 | 0x00000800, r4_15, r5_26, 0x00000000, 0x00000040, dwLoc14)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r2:r0 & 0x000033F0 r7:0x00000040 r6:0x00000000 r4:<invalid> r1:<invalid> r3:<invalid> r5:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):r7

SysCtlClockSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r6:<invalid> r4:<invalid> r1:<invalid> r3:<invalid> r5:<invalid> r8:<invalid> r0:<invalid> -16(fp):r4 -12(fp):r5 -8(fp):r6 -4(fp):r7



void fn00009D5A(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2 r3 r4 r5 r6 r7
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved: sp
l00009D5A:
	r2 = r2 | r1
	Mem0[r4:word32] = r3
	Mem0[r5:word32] = r7
	Mem0[r4:word32] = r2
	Mem0[sp + 4:word32] = r6
	r3 = Mem0[sp + 4:word32]
	NZCV = cond(r3 - 0x0000000F)
	ZC = NZCV (alias)
	branch Test(UGT,ZC) l00009D72
// DataOut: r0 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn:

l00009D68_thunk_fn00009D72:
	fn00009D72(r0, r2, r3, r4, r5, r6, r7)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

l00009D68_thunk_fn00009D6A:
	fn00009D6A(r0, r2, r4, r5, r6, r7)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00009D5A_entry:
	def fp
	def r2
	def r1
	def r3
	def r4
	def r7
	def r5
	def r6
	def r0
// DataOut: r0 r1 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009D5A:
	sp_1 = fp
	r2_4 = r2 | r1
	Mem6[r4:word32] = r3
	Mem9[r5:word32] = r7
	Mem11[r4:word32] = r2_4
	dwArg04_13 = r6
	r3_14 = dwArg04_13
	NZCV_15 = cond(r3_14 - 0x0000000F)
	ZC_16 = NZCV_15 (alias)
	branch r3_14 >u 0x0000000F l00009D68_thunk_fn00009D72
// DataOut: r0 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009D68_thunk_fn00009D72:
	fn00009D72(r0, r2_4, r3_14, r4, r5, r6, r7)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:r2 | r1 r3:r6 4(fp):r6

l00009D68_thunk_fn00009D6A:
	fn00009D6A(r0, r2_4, r4, r5, r6, r7)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:r2 | r1 r3:r6 4(fp):r6

fn00009D5A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r8:<invalid> r0:<invalid> 4(fp):r6



void fn00009D6A(word32 r0, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r2 r4 r5 r6 r7
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
fn00009D6A_entry:
// DataOut: r0 r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(32)

l00009D6A:
	Mem6[v3 + 4:word32] = Mem0[v3 + 4:word32] + 0x00000001
	word32 r3_7 = Mem6[v3 + 4:word32]
// DataOut: r0 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009D70_thunk_fn00009D72:
	fn00009D72(r0, r2, r3_7, r4, r5, r6, r7)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:<invalid>

fn00009D6A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r8:<invalid> r0:<invalid>



void fn00009D72(word32 r0, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r2 r3 r4 r5 r6 r7
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
fn00009D72_entry:
// DataOut: r0 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(32)

l00009D72:
	branch r3 <=u 0x0000000F l00009F66_in_SysCtlClockSet
// DataOut: r0 r2 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009F66_in_SysCtlClockSet:
	Mem122[r5 + 48:word32] = Mem0[r5 + 48:word32] & ~0x00000300 & ~0x00000001
	word32 r2_123
	word32 r0_124 = fn00009DEC(r0, out r2_123)
	word32 r2_127 = r0_124 /u (r7 << 4)
	Mem135[r5 + 36:word32] = r2_127
	Mem136[r5 + 40:word32] = (r0_124 - (r7 << 4) * r2_127 << 3) /u r7 + 0x00000001 >>u 1
	Mem137[r5 + 44:word32] = r6
	Mem139[r5 + 24:word32] = r4
	Mem142[r5 + 44:word32] = Mem139[r5 + 44:word32] | 0x00000010
	Mem146[r5 + 48:word32] = Mem142[r5 + 48:word32] | 0x00000300 | 0x00000001
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3

l00009D76:
	word32 r2_27 = r2 & ~0x00000003 | r0 & 0x00000003
	Mem30[Mem0[0x00009DE6:word32]:word32] = r2_27
	word32 r1_34 = r0 & 0x07C00000 | (r2_27 & ~0x07C00000) << 0x00000000
	branch r0 << 20 < 0x00000000 l00009DBA
// DataOut: r1 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:v3

l00009D94:
	Mem91[v3 + 4:word32] = 0x00008000
	branch Mem91[v3 + 4:word32] == 0x00000000 l00009DBA
// DataOut: r1 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:(r2 & ~0x00000003 | r0 & 0x00000003) & ~0x07C00000 r4:r0 << 20 r2:r2 & ~0x00000003 | r0 & 0x00000003 r1:r0 & 0x07C00000 | ((r2 & ~0x00000003 | r0 & 0x00000003) & ~0x07C00000) << 0x00000000

l00009D9E:
	word32 r3_100 = Mem91[Mem91[0x00009DF2:word32]:word32]
	branch r3_100 << 25 >= 0x00000000 l00009DAA
// DataOut: r1 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:<invalid> r4:r0 << 20 r2:r2 & ~0x00000003 | r0 & 0x00000003 r1:r0 & 0x07C00000 | ((r2 & ~0x00000003 | r0 & 0x00000003) & ~0x07C00000) << 0x00000000

l00009DAA:
	r3_100 = r3_100 << 25
	branch r3_100 << 25 < 0x00000000 l00009DB6
// DataOut: r1 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:<invalid> r4:r0 << 20 r2:<invalid> r1:r0 & 0x07C00000 | ((r2 & ~0x00000003 | r0 & 0x00000003) & ~0x07C00000) << 0x00000000 r0:<invalid>

l00009DAE:
	Mem117[v3 + 4:word32] = Mem91[v3 + 4:word32] - 0x00000001
	r3_100 = Mem117[v3 + 4:word32]
// DataOut: r1 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:<invalid> r4:r0 << 20 r2:<invalid> r1:r0 & 0x07C00000 | ((r2 & ~0x00000003 | r0 & 0x00000003) & ~0x07C00000) << 0x00000000 r0:<invalid>

l00009DA6:
// DataOut: r1 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:<invalid> r4:r0 << 20 r2:<invalid> r1:r0 & 0x07C00000 | ((r2 & ~0x00000003 | r0 & 0x00000003) & ~0x07C00000) << 0x00000000 r0:<invalid>

l00009DB6:
	branch r3_100 != 0x00000000 l00009FA4_in_SysCtlClockSet
// DataOut: r1 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:<invalid> r4:r0 << 20 r2:<invalid> r1:r0 & 0x07C00000 | ((r2 & ~0x00000003 | r0 & 0x00000003) & ~0x07C00000) << 0x00000000 r0:<invalid>

l00009FA4_in_SysCtlClockSet:
	Mem103[r5 + 48:word32] = r3_100
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:<invalid> r4:r0 << 20 r2:<invalid> r1:r0 & 0x07C00000 | ((r2 & ~0x00000003 | r0 & 0x00000003) & ~0x07C00000) << 0x00000000 r0:<invalid>

l00009DBA:
	word32 r1_40 = r1_34 & ~0x00000800
	word32 r2_42 = Mem30[0x00009DE4:word32]
	Mem43[r2_42:word32] = r1_40
	Mem44[v3 + 4:word32] = 0x00000000
	word32 r3_45 = Mem44[v3 + 4:word32]
	branch r3_45 >u 0x0000000F l00009DD4
// DataOut: r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:<invalid> r4:r0 << 20 r2:<invalid> r1:r0 & 0x07C00000 | ((r2 & ~0x00000003 | r0 & 0x00000003) & ~0x07C00000) << 0x00000000 r0:<invalid>

l00009DCC:
	Mem88[v3 + 4:word32] = Mem44[v3 + 4:word32] + 0x00000001
	r3_45 = Mem88[v3 + 4:word32]
// DataOut: r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:<invalid> r4:r0 << 20 r2:<invalid> r1:(r0 & 0x07C00000 | ((r2 & ~0x00000003 | r0 & 0x00000003) & ~0x07C00000) << 0x00000000) & ~0x00000800 r0:<invalid>

l00009DD4:
	branch r3_45 <=u 0x0000000F l00009FC8_in_SysCtlClockSet
// DataOut: r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:<invalid> r4:r0 << 20 r2:<invalid> r1:(r0 & 0x07C00000 | ((r2 & ~0x00000003 | r0 & 0x00000003) & ~0x07C00000) << 0x00000000) & ~0x00000800 r0:<invalid>

l00009FC8_in_SysCtlClockSet:
	Mem77[r6:word32] = Mem44[(r0 << 20) + 44:word32] & 0x000000EE
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:<invalid> r4:r0 << 20 r2:<invalid> r1:(r0 & 0x07C00000 | ((r2 & ~0x00000003 | r0 & 0x00000003) & ~0x07C00000) << 0x00000000) & ~0x00000800 r0:<invalid>

l00009DD8:
	word32 sp_59
	word32 r3_60
	byte NZCV_61
	byte ZC_62
	word32 r0_63
	word32 r4_64
	word32 r2_65
	byte NZC_66
	word32 r1_67
	byte N_68
	byte Z_69
	word32 r5_70
	word32 r6_71
	word32 r7_72
	word32 lr_73
	word32 r8_74
	call lr (retsize: 0;)
		uses: lr,N_37,NZC_38,NZCV_49,r0_39,r1_40,r2_42,r3_48,r4_52,r5_53,r6_54,r7_55,r8,sp_56,Z_36,ZC_50
		defs: lr_73,N_68,NZC_66,NZCV_61,r0_63,r1_67,r2_65,r3_60,r4_64,r5_70,r6_71,r7_72,r8_74,sp_59,Z_69,ZC_62
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r3:<invalid> r4:r0 << 20 r2:<invalid> r1:(r0 & 0x07C00000 | ((r2 & ~0x00000003 | r0 & 0x00000003) & ~0x07C00000) << 0x00000000) & ~0x00000800 r0:<invalid>

fn00009D72_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 + 24 r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r1:<invalid> r8:<invalid> r0:<invalid>



word32 fn00009DEC(word32 r0, ptr32 & r2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut: r0 r2
// Trashed: NZC r0 r1 r2 r3
// Preserved: sp
fn00009DEC_entry:
// DataOut: r0 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009DEC:
// DataOut: r0 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009DEC_thunk_SysCtlADCSpeedSet:
	word32 r2_3
	return SysCtlADCSpeedSet(r0, out r2_3)
// DataOut: r0 r2 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00009DEC_exit:
// DataOut: r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r3:<invalid> r2:<invalid> r0:<invalid>



void SysCtlClockGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3
// Preserved: sp
SysCtlClockGet_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009DF0:
	word32 r3_4 = Mem0[Mem0[0x00009E58:word32]:word32]
	word32 r2_111 = r3_4 & 0x00000030
	branch (r3_4 & 0x00000030) == 0x00000010 l00009E4A
// DataOut: r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009E4A:
// DataOut: r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid>

l00009E0E:
// DataOut: r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r0:<invalid>

l00009DFC:
	branch (r3_4 & 0x00000030) == 0x00000020 l00009E46
// DataOut: r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid>

l00009E46:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid>

l00009E00:
	branch (r3_4 & 0x00000030) == 0x00000000 l00009E06
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid>

l00009E06:
	r2_111 = Mem0[0x00009E5E:word32]
// DataOut: r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid>

l00009E10:
	word32 r0_21 = Mem0[r2_111 + 48:word32]
	byte N_26 = cond(r3_4 << 20)
	branch r3_4 << 20 < 0x00000000 l00009E36
// DataOut: r0 r3
// DataOut (flags): N
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r0:<invalid> r1:<invalid>

l00009E16:
	word32 r2_73 = Mem0[Mem0[0x00009E62:word32]:word32]
	r0_21 = r0_21 * ((uint32) SLICE(r2_73, ui9, 5) + 0x00000002) /u ((r2_73 & 0x0000001F) + 0x00000002)
	branch r2_73 << 17 >= 0x00000000 l00009E34
// DataOut: r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r0:<invalid> r1:<invalid>

l00009E32_1:
	r0_21 = r0_21 >>u 1
// DataOut: r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r0:<invalid> r1:<invalid>

l00009E34:
	N_26 = cond(r2_73 << 16) (alias)
// DataOut: r0 r3
// DataOut (flags): N
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r0:<invalid> r1:<invalid>

l00009E36:
	branch N_26 l00009E3A
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r0:<invalid> r1:<invalid>

l00009E38_1:
	r0_21 = r0_21 >>u 2
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r0:<invalid> r1:<invalid>

l00009E3A:
	branch r3_4 << 9 >= 0x00000000 l0000A000_in_SysCtlClockGet
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r0:<invalid> r1:<invalid>

l0000A000_in_SysCtlClockGet:
	word32 r3_56 = r3_4 & ~0x00000300 & ~0x00000001
	Mem57[r0_21 + 48:word32] = r3_56
	word32 sp_59
	word32 r3_60
	word32 pc_61
	word32 r2_62
	byte NZCV_63
	byte Z_64
	word32 r0_65
	word32 lr_66
	word32 r1_67
	byte NZC_68
	byte N_69
	call lr (retsize: 0;)
		uses: lr,lr,N_37,NZC_36,NZCV_32,pc,r0_34,r1_29,r2_35,r3_56,sp_1,Z_31
		defs: lr_66,N_69,NZC_68,NZCV_63,pc_61,r0_65,r1_67,r2_62,r3_60,sp_59,Z_64
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r0:<invalid> r1:<invalid>

l00009E3E:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r0:<invalid> r1:<invalid>

l00009E48:
	word32 sp_44
	word32 r3_45
	word32 pc_46
	word32 r2_47
	byte NZCV_48
	byte Z_49
	word32 r0_50
	word32 lr_51
	word32 r1_52
	byte NZC_53
	byte N_54
	call lr (retsize: 0;)
		uses: lr,N_37,NZC_36,NZCV_40,pc,r0_41,r1_29,r2_35,r3_39,sp_1,Z_31
		defs: lr_51,N_54,NZC_53,NZCV_48,pc_46,r0_50,r1_52,r2_47,r3_45,sp_44,Z_49
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r0:<invalid> r1:<invalid>

l00009E02:
	word32 sp_98
	word32 r3_99
	word32 pc_100
	word32 r2_101
	byte NZCV_102
	byte Z_103
	word32 r0_104
	word32 lr_105
	word32 r1_106
	byte NZC_107
	byte N_108
	call lr (retsize: 0;)
		uses: lr,lr,N,NZC,NZCV_92,pc,r0_94,r1,r2_5,r3_4,sp_1,Z_93
		defs: lr_105,N_108,NZC_107,NZCV_102,pc_100,r0_104,r1_106,r2_101,r3_99,sp_98,Z_103
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid>

SysCtlClockGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r0:<invalid> r1:<invalid>



void SysCtlPWMClockSet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZC r0 r2 r3
// Preserved: sp
SysCtlPWMClockSet_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009E68:
	word32 r2_3 = Mem0[0x00009E7C:word32]
	word32 r3_5 = Mem0[r2_3:word32] & ~0x001E0000
	word32 r0_7 = r0 | r3_5
	Mem9[r2_3:word32] = r0_7
	word32 sp_11
	word32 r2_12
	word32 pc_13
	word32 r3_14
	word32 r0_15
	byte NZC_16
	word32 lr_17
	call lr (retsize: 0;)
		uses: lr,NZC_8,r0_7,r2_3,r3_5,sp_1
		defs: lr_17,NZC_16,pc_13,r0_15,r2_12,r3_14,sp_11
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlPWMClockSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid> r0:<invalid>



void SysCtlPWMClockGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0 r3
// Preserved: sp
SysCtlPWMClockGet_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009E7C:
	word32 sp_7
	word32 r3_8
	word32 pc_9
	word32 r0_10
	word32 lr_11
	call lr (retsize: 0;)
		uses: lr,r0_5,r3_3,sp_1
		defs: lr_11,pc_9,r0_10,r3_8,sp_7
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlPWMClockGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>



word32 SysCtlADCSpeedSet(word32 r0, ptr32 & r2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut: r0 r2
// Trashed: NZC r0 r1 r2 r3
// Preserved: r4 sp
SysCtlADCSpeedSet_entry:
// DataOut: r0 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009E8C:
	word32 r4_6 = Mem0[0x00009EBE:word32]
	word32 r1_7 = Mem0[0x00009EC0:word32]
	word32 r2_9 = Mem0[0x00009EC4:word32]
	Mem13[r4_6:word32] = Mem0[r4_6:word32] & ~0x00000F00 | r0
	Mem19[r1_7:word32] = Mem13[r1_7:word32] & ~0x00000F00 | r0
	word32 r3_21 = Mem19[r2_9:word32] & ~0x00000F00
	word32 r0_22 = r0 | r3_21
	Mem24[r2_9:word32] = r0_22
	word32 sp_26
	word32 r4_27
	word32 r1_28
	word32 r3_29
	word32 r2_30
	word32 r0_31
	byte NZC_32
	word32 lr_33
	call lr (retsize: 0;)
		uses: dwLoc04_4,lr,NZC_23,r0_22,r1_7,r2_9,r3_21,r4_15,sp_16
		defs: lr_33,NZC_32,r0_31,r1_28,r2_30,r3_29,r4_27,sp_26
	return r0_31
// DataOut: r0 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlADCSpeedSet_exit:
// DataOut: r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r1:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> -4(fp):r4



void SysCtlADCSpeedGet()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r0 r3
// Preserved: sp
SysCtlADCSpeedGet_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009EC4:
	word32 sp_7
	word32 r3_8
	word32 pc_9
	word32 r0_10
	word32 lr_11
	call lr (retsize: 0;)
		uses: lr,r0_5,r3_3,sp_1
		defs: lr_11,pc_9,r0_10,r3_8,sp_7
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlADCSpeedGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>



void SysCtlIOSCVerificationSet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
SysCtlIOSCVerificationSet_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009ED4:
	word32 r2_3 = Mem0[0x00009EF0:word32]
	word32 r3_4 = Mem0[r2_3:word32]
	branch r0 != 0x00000000 l00009EE2
// DataOut: r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009EE2:
	Mem23[r2_3:word32] = r3_4 | 0x00000008
	word32 sp_24
	word32 r2_25
	word32 pc_26
	word32 r3_27
	word32 r0_28
	word32 lr_29
	call lr (retsize: 0;)
		uses: lr,pc,r0,r2_3,r3_22,sp_1
		defs: lr_29,pc_26,r0_28,r2_25,r3_27,sp_24
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid>

l00009EDA:
	word32 r3_12 = r3_4 & ~0x00000008
	Mem13[r2_3:word32] = r3_12
	word32 sp_16
	word32 r2_17
	word32 pc_18
	word32 r3_19
	word32 r0_20
	word32 lr_21
	call lr (retsize: 0;)
		uses: lr,pc,r0,r2_3,r3_12,sp_1
		defs: lr_21,pc_18,r0_20,r2_17,r3_19,sp_16
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid>

SysCtlIOSCVerificationSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid>



void SysCtlMOSCVerificationSet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
SysCtlMOSCVerificationSet_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009EF0:
	word32 r2_3 = Mem0[0x00009F0C:word32]
	word32 r3_4 = Mem0[r2_3:word32]
	branch r0 != 0x00000000 l00009EFE
// DataOut: r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009EFE:
	Mem23[r2_3:word32] = r3_4 | 0x00000004
	word32 sp_24
	word32 r2_25
	word32 pc_26
	word32 r3_27
	word32 r0_28
	word32 lr_29
	call lr (retsize: 0;)
		uses: lr,pc,r0,r2_3,r3_22,sp_1
		defs: lr_29,pc_26,r0_28,r2_25,r3_27,sp_24
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid>

l00009EF6:
	word32 r3_12 = r3_4 & ~0x00000004
	Mem13[r2_3:word32] = r3_12
	word32 sp_16
	word32 r2_17
	word32 pc_18
	word32 r3_19
	word32 r0_20
	word32 lr_21
	call lr (retsize: 0;)
		uses: lr,pc,r0,r2_3,r3_12,sp_1
		defs: lr_21,pc_18,r0_20,r2_17,r3_19,sp_16
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid>

SysCtlMOSCVerificationSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid>



void SysCtlPLLVerificationSet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
SysCtlPLLVerificationSet_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009F0C:
	word32 r2_3 = Mem0[0x00009F28:word32]
	word32 r3_4 = Mem0[r2_3:word32]
	branch r0 != 0x00000000 l00009F1A
// DataOut: r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009F1A:
	Mem23[r2_3:word32] = r3_4 | 0x00000400
	word32 sp_24
	word32 r2_25
	word32 pc_26
	word32 r3_27
	word32 r0_28
	word32 lr_29
	call lr (retsize: 0;)
		uses: lr,pc,r0,r2_3,r3_22,sp_1
		defs: lr_29,pc_26,r0_28,r2_25,r3_27,sp_24
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid>

l00009F12:
	word32 r3_12 = r3_4 & ~0x00000400
	Mem13[r2_3:word32] = r3_12
	word32 sp_16
	word32 r2_17
	word32 pc_18
	word32 r3_19
	word32 r0_20
	word32 lr_21
	call lr (retsize: 0;)
		uses: lr,pc,r0,r2_3,r3_12,sp_1
		defs: lr_21,pc_18,r0_20,r2_17,r3_19,sp_16
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid>

SysCtlPLLVerificationSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid>



void SysCtlClkVerificationClear()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r1 r2 r3
// Preserved: sp
SysCtlClkVerificationClear_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009F28:
	word32 r3_5 = Mem0[0x00009F38:word32]
	Mem6[r3_5:word32] = 0x00000001
	Mem7[r3_5:word32] = 0x00000000
	word32 sp_9
	word32 r1_10
	word32 r2_11
	word32 r3_12
	word32 pc_13
	word32 lr_14
	call lr (retsize: 0;)
		uses: lr,r1_2,r2_3,r3_5,sp_1
		defs: lr_14,pc_13,r1_10,r2_11,r3_12,sp_9
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

SysCtlClkVerificationClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:0x00000001 r2:0x00000000 r3:<invalid>



void UARTParityModeSet(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: NZC r1 r3
// Preserved: sp
UARTParityModeSet_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009F38:
	word32 r3_5 = Mem0[r0 + 44:word32] & ~0x00000086
	word32 r1_7 = r1 | r3_5
	Mem9[r0 + 44:word32] = r1_7
	word32 sp_11
	word32 r3_12
	word32 r0_13
	word32 r1_14
	byte NZC_15
	word32 lr_16
	call lr (retsize: 0;)
		uses: lr,NZC_8,r0,r1_7,r3_5,sp_1
		defs: lr_16,NZC_15,r0_13,r1_14,r3_12,sp_11
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

UARTParityModeSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid>



void UARTParityModeGet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r0
// Preserved: sp
UARTParityModeGet_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009F44:
	word32 sp_7
	word32 r0_8
	word32 lr_9
	call lr (retsize: 0;)
		uses: lr,r0_5,sp_1
		defs: lr_9,r0_8,sp_7
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

UARTParityModeGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



void UARTConfigSet(word32 r0, word32 r1, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2
// LiveOut:
// Trashed: NZCV r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved:
UARTConfigSet_entry:
// DataOut: r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009F4C:
	word32 r4_24 = Mem0[r0 + 0x00000018:word32]
	branch (r4_24 & 0x00000008) != 0x00000000 l0000A152_in_UARTConfigSet
// DataOut: r0 r1 r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A152_in_UARTConfigSet:
	Mem79[r2:word32] = Mem0[r2:word32] | 0x00000020
	Mem80[r0 + 0x0000001C:word32] = r1
	word32 sp_82
	word32 r3_83
	word32 r4_84
	word32 r5_85
	word32 r6_86
	word32 r7_87
	word32 lr_88
	word32 r1_89
	word32 r2_90
	word32 r0_91
	byte NZCV_92
	byte NZC_93
	byte Z_94
	call lr (retsize: 0; depth: 24)
		uses: dwLoc04_14,dwLoc08_12,dwLoc0C_10,dwLoc10_8,dwLoc14_6,dwLoc18_4,lr,lr,NZC_26,NZCV_22,r0_21,r1,r2,r3_78,r4_25,r5_20,r6_18,r7_16,sp_2,Z_27
		defs: lr_88,NZC_93,NZCV_92,r0_91,r1_89,r2_90,r3_83,r4_84,r5_85,r6_86,r7_87,sp_82,Z_94
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r7:r1 r6:r2 r5:r0 r0:r0 + 0x00000018 r4:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00009F5E:
	Mem43[r0 + 44:word32] = Mem0[r0 + 44:word32] & ~0x00000010
// DataOut: r0 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r7:r1 r6:r2 r5:r0 r0:r0 + 0x00000018 r4:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00009F66:
	Mem47[r0 + 48:word32] = Mem43[r0 + 48:word32] & ~0x00000300 & ~0x00000001
	word32 r2_48
	word32 r0_49 = fn00009DEC(r0 + 0x00000018, out r2_48)
	word32 r2_51 = r0_49 /u (r1 << 4)
	Mem59[r0 + 36:word32] = r2_51
	Mem60[r0 + 40:word32] = (r0_49 - (r1 << 4) * r2_51 << 3) /u r1 + 0x00000001 >>u 1
	Mem61[r0 + 44:word32] = r2
	Mem62[r0 + 24:word32] = r4_24 & 0x00000008
	Mem65[r0 + 44:word32] = Mem62[r0 + 44:word32] | 0x00000010
	word32 r3_68 = Mem65[r0 + 48:word32] | 0x00000300 | 0x00000001
// DataOut: r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r7:r1 r6:r2 r5:r0 r0:r0 + 0x00000018 r4:<invalid> r3:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l00009FA4:
	Mem69[r0 + 48:word32] = r3_68
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r7:r1 r6:r2 r5:r0 r0:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

UARTConfigSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> r0:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):r3 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr



void UARTConfigGet(word32 r0, word32 r1, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2
// LiveOut:
// Trashed: NZC r0 r1 r2 r3
// Preserved: r4 r5 r6 r7 r8 sp
UARTConfigGet_entry:
// DataOut: r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009FA8:
	word32 r2_24
	Mem30[r1:word32] = (fn00009DEC(r0, out r2_24) << 2) /u (Mem0[r0 + 40:word32] + (Mem0[r0 + 36:word32] << 0x00000006))
// DataOut: r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009FC8:
	Mem33[r2:word32] = Mem30[r0 + 44:word32] & 0x000000EE
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 24 r8:<invalid> r4:r0 r7:r1 r6:r2 r5:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr

UARTConfigGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r8 r4:r4 r7:r7 r6:r6 r5:r5 r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> -24(fp):r4 -20(fp):r5 -16(fp):r6 -12(fp):r7 -8(fp):r8 -4(fp):lr



void UARTEnable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r3
// Preserved: sp
UARTEnable_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009FD4:
	Mem6[r0 + 44:word32] = Mem0[r0 + 44:word32] | 0x00000010
	word32 r3_9 = Mem6[r0 + 48:word32] | 0x00000300 | 0x00000001
	Mem10[r0 + 48:word32] = r3_9
	word32 sp_12
	word32 r3_13
	word32 r0_14
	word32 lr_15
	call lr (retsize: 0;)
		uses: lr,r0,r3_9,sp_1
		defs: lr_15,r0_14,r3_13,sp_12
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

UARTEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>



void UARTDisable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZCV r0 r2 r3 sp
// Preserved: sp
UARTDisable_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009FEC:
	branch Mem0[r0 + 0x00000018:word32] << 28 < 0x00000000 l00009FF4_thunk_fn0000A1EC
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009FF4_thunk_fn0000A1EC:
	fn0000A1EC(r0)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:r0 + 0x00000018 r3:<invalid>

l00009FF6:
	Mem18[r0 + 44:word32] = Mem0[r0 + 44:word32] & ~0x00000010
	word32 r3_19 = Mem18[r0 + 48:word32]
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp r2:r0 + 0x00000018 r3:<invalid>

l0000A000:
	word32 r3_21 = r3_19 & ~0x00000300 & ~0x00000001
	Mem22[r0 + 48:word32] = r3_21
	word32 sp_24
	word32 r2_25
	word32 r0_26
	word32 r3_27
	byte NZC_28
	byte N_29
	word32 lr_30
	call lr (retsize: 0;)
		uses: lr,N_8,NZC_7,r0,r2_3,r3_21,sp_1
		defs: lr_30,N_29,NZC_28,r0_26,r2_25,r3_27,sp_24
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:r0 + 0x00000018 r3:<invalid>

UARTDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:r0 + 0x00000018 r3:<invalid> r0:<invalid>



void UARTCharsAvail(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r0
// Preserved: sp
UARTCharsAvail_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A00C:
	word32 sp_8
	word32 r0_9
	word32 lr_10
	call lr (retsize: 0;)
		uses: lr,r0_6,sp_1
		defs: lr_10,r0_9,sp_8
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

UARTCharsAvail_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



void UARTSpaceAvail(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r0
// Preserved: sp
UARTSpaceAvail_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A018:
	word32 sp_8
	word32 r0_9
	word32 lr_10
	call lr (retsize: 0;)
		uses: lr,r0_6,sp_1
		defs: lr_10,r0_9,sp_8
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

UARTSpaceAvail_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



void UARTCharNonBlockingGet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZC r0 r3
// Preserved: sp
UARTCharNonBlockingGet_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A024:
	branch Mem0[r0 + 24:word32] << 27 < 0x00000000 l0000A02C
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A02A_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l0000A02C:
	word32 sp_10
	word32 r3_11
	word32 r0_12
	byte NZC_13
	byte N_14
	word32 lr_15
	call lr (retsize: 0;)
		uses: lr,N_7,NZC_6,r0_8,r3_5,sp_1
		defs: lr_15,N_14,NZC_13,r0_12,r3_11,sp_10
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:<invalid>

UARTCharNonBlockingGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:0xFFFFFFFF



void UARTCharGet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZC r0 r2 r3
// Preserved: sp
UARTCharGet_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A034:
	branch Mem0[r0 + 0x00000018:word32] << 27 < 0x00000000 l0000A234_in_UARTCharGet
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A234_in_UARTCharGet:
	word32 sp_26
	word32 r2_27
	word32 r0_28
	word32 r3_29
	byte NZC_30
	byte N_31
	word32 lr_32
	call lr (retsize: 0;)
		uses: lr,lr,N_8,NZC_7,r0,r2_3,r3_6,sp_1
		defs: lr_32,N_31,NZC_30,r0_28,r2_27,r3_29,sp_26
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:r0 + 0x00000018 r3:<invalid>

l0000A03E:
	word32 sp_18
	word32 r2_19
	word32 r0_20
	word32 r3_21
	byte NZC_22
	byte N_23
	word32 lr_24
	call lr (retsize: 0;)
		uses: lr,N_8,NZC_7,r0_16,r2_3,r3_6,sp_1
		defs: lr_24,N_23,NZC_22,r0_20,r2_19,r3_21,sp_18
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:r0 + 0x00000018 r3:<invalid>

UARTCharGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:r0 + 0x00000018 r3:<invalid> r0:<invalid>



void UARTCharNonBlockingPut(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: NZC r0 r3
// Preserved: sp
UARTCharNonBlockingPut_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A044:
	branch Mem0[r0 + 24:word32] << 26 < 0x00000000 l0000A04C
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A04A_1:
	Mem18[r0:word32] = r1
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l0000A04C:
	word32 sp_10
	word32 r3_11
	word32 r0_12
	byte NZC_13
	byte N_14
	word32 r1_15
	word32 lr_16
	call lr (retsize: 0;)
		uses: lr,N_7,NZC_6,r0_8,r3_5,sp_1
		defs: lr_16,N_14,NZC_13,r0_12,r1_15,r3_11,sp_10
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

UARTCharNonBlockingPut_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r0:0x00000000



void UARTCharPut(word32 r0, word32 r1, word32 r4, word32 r5, word32 r6, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r4 r5 r6 r9
// LiveOut:
// Trashed: NZC r2 r3
// Preserved: sp
UARTCharPut_entry:
// DataOut: r0 r1 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A054:
	branch Mem0[r0 + 0x00000018:word32] << 26 < 0x00000000 l0000A254
// DataOut: r0 r1 r2 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A254:
	Mem30[r4 + 52:word32] = r5
	Mem34[r0 + 0x00000021:byte] = (byte) r0
	Mem39[r5 + 21:byte] = (byte) (r5 << 1)
	Mem40[r5 + 68:word32] = r6 << 1
	word32 r0_41 = Mem40[(r6 << 1) + 96:word32]
	Mem42[r5 + 17:byte] = (byte) (r5 << 1)
	Mem43[(r6 << 1) + 32:word32] = r0_41
	Mem46[Mem43[r6 + 4:word32] + 9:byte] = (byte) r5
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:r0 + 0x00000018 r3:<invalid>

l0000A05E:
	Mem10[r0:word32] = r1
	word32 sp_12
	word32 r2_13
	word32 r0_14
	word32 r3_15
	byte NZC_16
	byte N_17
	word32 r1_18
	word32 lr_19
	word32 r7_20
	word32 r5_21
	word32 r4_22
	word32 r6_23
	word32 r9_24
	byte NZCV_25
	call lr (retsize: 0;)
		uses: lr,N_8,NZC_7,r0,r1,r2_3,r3_6,sp_1
		defs: lr_19,N_17,NZC_16,NZCV_25,r0_14,r1_18,r2_13,r3_15,r4_22,r5_21,r6_23,r7_20,r9_24,sp_12
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:r0 + 0x00000018 r3:<invalid>

UARTCharPut_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:r0 + 0x00000018 r3:<invalid>



void UARTBreakCtl(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: r3
// Preserved: sp
UARTBreakCtl_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A064:
	word32 r3_4 = Mem0[r0 + 44:word32]
	branch r1 != 0x00000000 l0000A070
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A070:
	Mem20[r0 + 44:word32] = r3_4 | 0x00000001
	word32 sp_21
	word32 r3_22
	word32 r0_23
	word32 r1_24
	word32 lr_25
	call lr (retsize: 0;)
		uses: lr,r0,r1,r3_19,sp_1
		defs: lr_25,r0_23,r1_24,r3_22,sp_21
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

l0000A068:
	word32 r3_11 = r3_4 & ~0x00000001
	Mem12[r0 + 44:word32] = r3_11
	word32 sp_14
	word32 r3_15
	word32 r0_16
	word32 r1_17
	word32 lr_18
	call lr (retsize: 0;)
		uses: lr,r0,r1,r3_11,sp_1
		defs: lr_18,r0_16,r1_17,r3_15,sp_14
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>

UARTBreakCtl_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>



void UARTIntRegister(word32 r0, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r3
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: lr r4 sp
UARTIntRegister_entry:
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A078:
	branch r0 != Mem0[0x0000A09A:word32] l0000A082
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A080_1:
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:<invalid> -8(fp):r4 -4(fp):lr

l0000A082:
	IntMasterDisable()
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:<invalid> -8(fp):r4 -4(fp):lr

l0000A090_thunk_fn000095D8:
	fn000095D8(0x00000016, r3)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r0:0x00000016 lr:lr -8(fp):r4 -4(fp):lr

UARTIntRegister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r0:<invalid> lr:lr r2:<invalid> r3:0x00000001 -8(fp):r4 -4(fp):lr



void UARTIntUnregister(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
UARTIntUnregister_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A098:
	branch r0 != Mem0[0x0000A0BA:word32] l0000A0A2
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A0A0_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:<invalid> -8(fp):r4 -4(fp):lr

l0000A0A2:
	fn00009634()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 8 r4:<invalid> -8(fp):r4 -4(fp):lr

l0000A0B0_thunk_fn00009534:
	fn00009534()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r0:r4 r4:<invalid> lr:<invalid> sp:sp + 8 -8(fp):r4 -4(fp):lr
// Terminates process

UARTIntUnregister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp -8(fp):r4 -4(fp):lr



void UARTIntEnable(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: NZC r1 r3
// Preserved: sp
UARTIntEnable_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A0B8:
	word32 r3_4 = Mem0[r0 + 56:word32]
	word32 r1_6 = r1 | r3_4
	Mem8[r0 + 56:word32] = r1_6
	word32 sp_10
	word32 r3_11
	word32 r0_12
	word32 r1_13
	byte NZC_14
	word32 lr_15
	call lr (retsize: 0;)
		uses: lr,NZC_7,r0,r1_6,r3_4,sp_1
		defs: lr_15,NZC_14,r0_12,r1_13,r3_11,sp_10
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

UARTIntEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid>



void UARTIntDisable(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: r1 r3
// Preserved: sp
UARTIntDisable_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A0C0:
	word32 r3_4 = Mem0[r0 + 56:word32]
	word32 r1_6 = r3_4 & ~(r1 << 0x00000000)
	Mem7[r0 + 56:word32] = r1_6
	word32 sp_9
	word32 r3_10
	word32 r0_11
	word32 r1_12
	word32 lr_13
	call lr (retsize: 0;)
		uses: lr,r0,r1_6,r3_4,sp_1
		defs: lr_13,r0_11,r1_12,r3_10,sp_9
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

UARTIntDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r1:<invalid>



void fn0000A0C8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0000A0C8_entry:
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A0C8:
	word32 sp_3
	word32 lr_4
	call lr (retsize: 0;)
		uses: lr,sp_1
		defs: lr_4,sp_3
	return
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000A0C8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void UARTIntStatus(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: r0
// Preserved: sp
UARTIntStatus_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A0CC:
	branch r1 != 0x00000000 l0000A0D2
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A0D2:
	word32 sp_16
	word32 r1_17
	word32 r0_18
	word32 lr_19
	call lr (retsize: 0;)
		uses: lr,r0_15,r1,sp_1
		defs: lr_19,r0_18,r1_17,sp_16
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A0CE:
	word32 sp_11
	word32 r1_12
	word32 r0_13
	word32 lr_14
	call lr (retsize: 0;)
		uses: lr,r0_9,r1,sp_1
		defs: lr_14,r0_13,r1_12,sp_11
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

UARTIntStatus_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



void fn0000A0D4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0000A0D4_entry:
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A0D4:
	word32 sp_3
	word32 lr_4
	call lr (retsize: 0;)
		uses: lr,sp_1
		defs: lr_4,sp_3
	return
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000A0D4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void UARTIntClear(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed:
// Preserved: sp
UARTIntClear_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A0D8:
	Mem3[r0 + 68:word32] = r1
	word32 sp_6
	word32 r1_7
	word32 r0_8
	word32 lr_9
	call lr (retsize: 0;)
		uses: lr,r0,r1,sp_1
		defs: lr_9,r0_8,r1_7,sp_6
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

UARTIntClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void CPUcpsie()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
CPUcpsie_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A0DC:
	__cps_id()
	word32 sp_3
	word32 lr_4
	call lr (retsize: 0;)
		uses: lr,sp_1
		defs: lr_4,sp_3
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

CPUcpsie_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void CPUcpsid()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
CPUcpsid_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A0E4:
	__cps_id()
	word32 sp_3
	word32 lr_4
	call lr (retsize: 0;)
		uses: lr,sp_1
		defs: lr_4,sp_3
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

CPUcpsid_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0000A0E8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0000A0E8_entry:
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A0E8:
	word32 sp_3
	word32 lr_4
	call lr (retsize: 0;)
		uses: lr,sp_1
		defs: lr_4,sp_3
	return
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000A0E8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void CPUwfi()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
CPUwfi_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A0EC:
	__wait_for_interrupt()
	word32 sp_3
	word32 lr_4
	call lr (retsize: 0;)
		uses: lr,sp_1
		defs: lr_4,sp_3
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

CPUwfi_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0000A0F0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0000A0F0_entry:
// DataOut: r1 r10 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A0F0:
	word32 sp_3
	word32 lr_4
	call lr (retsize: 0;)
		uses: lr,sp_1
		defs: lr_4,sp_3
	return
// DataOut: r1 r10 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000A0F0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void I2CMasterInit(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: NZCV r0 r1 r2
// Preserved: r3 r4 r5 sp
I2CMasterInit_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A0F4:
	Mem18[r0 + 32:word32] = Mem0[r0 + 32:word32] | 0x00000010
	word32 r2_19
	word32 r0_20 = fn00009DEC(r0, out r2_19)
	word32 r3_21 = Mem18[0x0000A126:word32]
	word32 r2_22 = Mem18[0x0000A128:word32]
	branch r1 != 0x00000001 l0000A112
// DataOut: r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A110_1:
	r3_21 = r2_22
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r1 r2:<invalid> r4:r0 r3:<invalid> r0:<invalid> r1:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

l0000A112:
	Mem31[r0 + 12:word32] = (r0_20 - 0x00000001 + r3_21) /u r3_21 - 0x00000001
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 16 r5:r1 r2:<invalid> r4:r0 r3:<invalid> r0:<invalid> r1:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr

I2CMasterInit_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:r5 r2:<invalid> r4:r4 r3:r3 r0:<invalid> r1:<invalid> -16(fp):r3 -12(fp):r4 -8(fp):r5 -4(fp):lr



void I2CSlaveInit(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: r2 r3
// Preserved: r4 sp
I2CSlaveInit_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A128:
	Mem11[r0 - 0x000007E0:word32] = Mem0[r0 - 0x000007E0:word32] | 0x00000020
	Mem12[r0 + 4:word32] = 0x00000001
	Mem14[r0:word32] = r1
	word32 sp_18
	word32 r4_19
	word32 r2_20
	word32 r0_21
	word32 r3_22
	word32 r1_23
	word32 lr_24
	call lr (retsize: 0;)
		uses: dwLoc04_4,lr,r0,r1,r2_7,r3_10,r4_15,sp_16
		defs: lr_24,r0_21,r1_23,r2_20,r3_22,r4_19,sp_18
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

I2CSlaveInit_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 r2:r0 - 0x000007E0 r3:<invalid> -4(fp):r4



void I2CMasterEnable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r3
// Preserved: sp
I2CMasterEnable_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A140:
	Mem6[r0 + 32:word32] = Mem0[r0 + 32:word32] | 0x00000010
	word32 sp_8
	word32 r3_9
	word32 r0_10
	word32 lr_11
	call lr (retsize: 0;)
		uses: lr,r0,r3_5,sp_1
		defs: lr_11,r0_10,r3_9,sp_8
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

I2CMasterEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>



void I2CSlaveEnable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r1 r2 r3
// Preserved: sp
I2CSlaveEnable_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A14C:
// DataOut: r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A152:
	Mem8[r0 - 0x000007E0:word32] = Mem0[r0 - 0x000007E0:word32] | 0x00000020
	Mem9[r0 + 4:word32] = 0x00000001
	word32 sp_11
	word32 r1_12
	word32 r2_13
	word32 r0_14
	word32 r3_15
	word32 lr_16
	call lr (retsize: 0;)
		uses: lr,r0,r1_2,r2_4,r3_7,sp_1
		defs: lr_16,r0_14,r1_12,r2_13,r3_15,sp_11
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:0x00000001 r2:r0 - 0x000007E0

I2CSlaveEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:0x00000001 r2:r0 - 0x000007E0 r3:<invalid>



void I2CMasterDisable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r3
// Preserved: sp
I2CMasterDisable_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A160:
	word32 r3_5 = Mem0[r0 + 32:word32] & ~0x00000010
	Mem6[r0 + 32:word32] = r3_5
	word32 sp_8
	word32 r3_9
	word32 r0_10
	word32 lr_11
	call lr (retsize: 0;)
		uses: lr,r0,r3_5,sp_1
		defs: lr_11,r0_10,r3_9,sp_8
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

I2CMasterDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid>



void I2CSlaveDisable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r2 r3
// Preserved: sp
I2CSlaveDisable_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A16C:
	Mem5[r0 + 4:word32] = 0x00000000
	word32 r3_7 = Mem5[r0 - 0x000007E0:word32] & ~0x00000020
	Mem8[r0 - 0x000007E0:word32] = r3_7
	word32 sp_10
	word32 r3_11
	word32 r2_12
	word32 r0_13
	word32 lr_14
	call lr (retsize: 0;)
		uses: lr,r0,r2_4,r3_7,sp_1
		defs: lr_14,r0_13,r2_12,r3_11,sp_10
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

I2CSlaveDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:r0 - 0x000007E0



void I2CIntRegister(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3
// LiveOut:
// Trashed: NZCV r0 r2 r3
// Preserved: lr r3 sp
I2CIntRegister_entry:
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A180:
	IntMasterDisable()
// DataOut: r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A18E_thunk_fn000095D8:
	fn000095D8(0x00000018, r3)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:0x00000018 r3:r3 lr:lr -8(fp):r3 -4(fp):lr

I2CIntRegister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid> r3:<invalid> lr:lr r2:<invalid> -8(fp):r3 -4(fp):lr



void I2CIntUnregister()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
I2CIntUnregister_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A194:
	fn00009634()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1A2_thunk_fn00009534:
	fn00009534()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:<invalid> lr:<invalid> sp:sp + 8 r0:0x00000018 -8(fp):r3 -4(fp):lr
// Terminates process

I2CIntUnregister_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp -8(fp):r3 -4(fp):lr



void I2CMasterIntEnable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r3
// Preserved: sp
I2CMasterIntEnable_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1A8:
	Mem3[r0 + 16:word32] = 0x00000001
	word32 sp_6
	word32 r3_7
	word32 r0_8
	word32 lr_9
	call lr (retsize: 0;)
		uses: lr,r0,r3_2,sp_1
		defs: lr_9,r0_8,r3_7,sp_6
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

I2CMasterIntEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:0x00000001



void I2CSlaveIntEnable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r3
// Preserved: sp
I2CSlaveIntEnable_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1B0:
	Mem3[r0 + 12:word32] = 0x00000001
	word32 sp_6
	word32 r3_7
	word32 r0_8
	word32 lr_9
	call lr (retsize: 0;)
		uses: lr,r0,r3_2,sp_1
		defs: lr_9,r0_8,r3_7,sp_6
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

I2CSlaveIntEnable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:0x00000001



void I2CMasterIntDisable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r3
// Preserved: sp
I2CMasterIntDisable_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1B8:
	Mem3[r0 + 16:word32] = 0x00000000
	word32 sp_6
	word32 r3_7
	word32 r0_8
	word32 lr_9
	call lr (retsize: 0;)
		uses: lr,r0,r3_2,sp_1
		defs: lr_9,r0_8,r3_7,sp_6
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

I2CMasterIntDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:0x00000000



void I2CSlaveIntDisable(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r3
// Preserved: sp
I2CSlaveIntDisable_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1C0:
	Mem3[r0 + 12:word32] = 0x00000000
	word32 sp_6
	word32 r3_7
	word32 r0_8
	word32 lr_9
	call lr (retsize: 0;)
		uses: lr,r0,r3_2,sp_1
		defs: lr_9,r0_8,r3_7,sp_6
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

I2CSlaveIntDisable_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:0x00000000



void fn0000A1C4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0000A1C4_entry:
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1C4:
	word32 sp_3
	word32 lr_4
	call lr (retsize: 0;)
		uses: lr,sp_1
		defs: lr_4,sp_3
	return
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000A1C4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void I2CMasterIntStatus(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: NZCV r0
// Preserved: sp
I2CMasterIntStatus_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1C8:
	branch r1 != 0x00000000 l0000A1D4
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1D4:
	branch Mem0[r0 + 24:word32] == 0x00000000 l0000A1DC
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1DA_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>

l0000A1DC:
	word32 sp_27
	word32 r1_28
	word32 r0_29
	byte NZCV_30
	byte Z_31
	word32 lr_32
	call lr (retsize: 0;)
		uses: lr,NZCV_25,r0_24,r1,sp_1,Z_26
		defs: lr_32,NZCV_30,r0_29,r1_28,sp_27,Z_31
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>

l0000A1CA:
	branch Mem0[r0 + 20:word32] == 0x00000000 l0000A1D2
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1D0_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>

l0000A1D2:
	word32 sp_16
	word32 r1_17
	word32 r0_18
	byte NZCV_19
	byte Z_20
	word32 lr_21
	call lr (retsize: 0;)
		uses: lr,NZCV_13,r0_12,r1,sp_1,Z_14
		defs: lr_21,NZCV_19,r0_18,r1_17,sp_16,Z_20
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>

I2CMasterIntStatus_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



void I2CSlaveIntStatus(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: NZCV r0 sp
// Preserved: sp
I2CSlaveIntStatus_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1E0:
	branch r1 != 0x00000000 l0000A1EC
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1E0_thunk_fn0000A1EC:
	fn0000A1EC(r0)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1E2:
	branch Mem0[r0 + 16:word32] == 0x00000000 l0000A1EA
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1E8_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>

l0000A1EA:
	word32 sp_16
	word32 r1_17
	word32 r0_18
	byte NZCV_19
	byte Z_20
	word32 lr_21
	call lr (retsize: 0;)
		uses: lr,NZCV_13,r0_12,r1,sp_1,Z_14
		defs: lr_21,NZCV_19,r0_18,r1_17,sp_16,Z_20
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>

I2CSlaveIntStatus_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid>



void fn0000A1EC(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZCV r0 sp
// Preserved:
fn0000A1EC_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1EC:
	branch Mem0[r0 + 20:word32] == 0x00000000 l0000A1F4
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1F2_1:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r0:<invalid>

l0000A1F4:
	word32 sp_9
	word32 r0_10
	byte NZCV_11
	byte Z_12
	word32 lr_13
	call lr (retsize: 0;)
		uses: lr,NZCV_6,r0_5,sp_1,Z_7
		defs: lr_13,NZCV_11,r0_10,sp_9,Z_12
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r0:<invalid>

fn0000A1EC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 r0:<invalid>



void I2CMasterIntClear(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r3
// Preserved: sp
I2CMasterIntClear_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A1F8:
	Mem3[r0 + 28:word32] = 0x00000001
	Mem5[r0 + 24:word32] = 0x00000001
	word32 sp_7
	word32 r3_8
	word32 r0_9
	word32 lr_10
	call lr (retsize: 0;)
		uses: lr,r0,r3_2,sp_1
		defs: lr_10,r0_9,r3_8,sp_7
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

I2CMasterIntClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:0x00000001



void I2CSlaveIntClear(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r3
// Preserved: sp
I2CSlaveIntClear_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A200:
	Mem3[r0 + 24:word32] = 0x00000001
	word32 sp_6
	word32 r3_7
	word32 r0_8
	word32 lr_9
	call lr (retsize: 0;)
		uses: lr,r0,r3_2,sp_1
		defs: lr_9,r0_8,r3_7,sp_6
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

I2CSlaveIntClear_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:0x00000001



void fn0000A204()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0000A204_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A204:
	word32 sp_3
	word32 lr_4
	call lr (retsize: 0;)
		uses: lr,sp_1
		defs: lr_4,sp_3
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000A204_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void I2CMasterSlaveAddrSet(word32 r0, word32 r1, word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2
// LiveOut:
// Trashed: r2
// Preserved: sp
I2CMasterSlaveAddrSet_entry:
// DataOut: r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A208:
	word32 r2_4 = r2 | r1 << 0x00000001
	Mem5[r0:word32] = r2_4
	word32 sp_8
	word32 r2_9
	word32 r1_10
	word32 r0_11
	word32 lr_12
	call lr (retsize: 0;)
		uses: lr,r0,r1,r2_4,sp_1
		defs: lr_12,r0_11,r1_10,r2_9,sp_8
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

I2CMasterSlaveAddrSet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r2:r2 | r1 << 0x00000001



void I2CMasterBusy(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r0
// Preserved: sp
I2CMasterBusy_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A210:
	word32 sp_7
	word32 r0_8
	word32 lr_9
	call lr (retsize: 0;)
		uses: lr,r0_5,sp_1
		defs: lr_9,r0_8,sp_7
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

I2CMasterBusy_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



void I2CMasterBusBusy(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r0
// Preserved: sp
I2CMasterBusBusy_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A218:
	word32 sp_7
	word32 r0_8
	word32 lr_9
	call lr (retsize: 0;)
		uses: lr,r0_5,sp_1
		defs: lr_9,r0_8,sp_7
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

I2CMasterBusBusy_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



void fn0000A21C(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZC r0
// Preserved: sp
fn0000A21C_entry:
// DataOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A21C:
	word32 sp_6
	word32 r0_7
	byte NZC_8
	word32 lr_9
	call lr (retsize: 0;)
		uses: lr,NZC_4,r0_3,sp_1
		defs: lr_9,NZC_8,r0_7,sp_6
	return
// DataOut: r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000A21C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 >> 2



void I2CMasterControl(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed:
// Preserved: sp
I2CMasterControl_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A220:
	Mem3[r0 + 4:word32] = r1
	word32 sp_6
	word32 r1_7
	word32 r0_8
	word32 lr_9
	call lr (retsize: 0;)
		uses: lr,r0,r1,sp_1
		defs: lr_9,r0_8,r1_7,sp_6
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

I2CMasterControl_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void I2CMasterErr(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: NZC r0 r2 r3 r4
// Preserved: sp
I2CMasterErr_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A224:
	word32 r3_4 = Mem0[r0 + 4:word32]
	branch r3_4 << 31 < 0x00000000 l0000A232
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A232:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid>

l0000A22A:
	branch (r3_4 & 0x00000002) == 0x00000000 l0000A234
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid>

l0000A230:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r0:<invalid>

l0000A234:
	word32 sp_9
	word32 r3_10
	word32 r0_11
	word32 r2_12
	byte NZC_13
	byte N_14
	byte Z_15
	word32 r4_16
	word32 lr_17
	call lr (retsize: 0;)
		uses: lr,N_7,NZC_6,r0,r2_5,r3_4,sp_1
		defs: lr_17,N_14,NZC_13,r0_11,r2_12,r3_10,r4_16,sp_9,Z_15
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r0:<invalid> r4:<invalid>

I2CMasterErr_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r2:<invalid> r0:<invalid> r4:<invalid>



void fn0000A238()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0000A238_entry:
// DataOut: r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A238:
	word32 sp_3
	word32 lr_4
	call lr (retsize: 0;)
		uses: lr,sp_1
		defs: lr_4,sp_3
	return
// DataOut: r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000A238_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void I2CMasterDataPut(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed:
// Preserved: sp
I2CMasterDataPut_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A23C:
	Mem3[r0 + 8:word32] = r1
	word32 sp_6
	word32 r1_7
	word32 r0_8
	word32 lr_9
	call lr (retsize: 0;)
		uses: lr,r0,r1,sp_1
		defs: lr_9,r0_8,r1_7,sp_6
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

I2CMasterDataPut_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void I2CMasterDataGet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r0
// Preserved: sp
I2CMasterDataGet_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A240:
	word32 sp_6
	word32 r0_7
	word32 lr_8
	call lr (retsize: 0;)
		uses: lr,r0_4,sp_1
		defs: lr_8,r0_7,sp_6
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

I2CMasterDataGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



void I2CSlaveStatus(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r0
// Preserved: sp
I2CSlaveStatus_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A244:
	word32 sp_6
	word32 r0_7
	word32 lr_8
	call lr (retsize: 0;)
		uses: lr,r0_4,sp_1
		defs: lr_8,r0_7,sp_6
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

I2CSlaveStatus_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



void I2CSlaveDataPut(word32 r0, word32 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed:
// Preserved: sp
I2CSlaveDataPut_entry:
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A248:
	Mem3[r0 + 8:word32] = r1
	word32 sp_6
	word32 r1_7
	word32 r0_8
	word32 lr_9
	call lr (retsize: 0;)
		uses: lr,r0,r1,sp_1
		defs: lr_9,r0_8,r1_7,sp_6
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

I2CSlaveDataPut_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void I2CSlaveDataGet(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0
// LiveOut:
// Trashed: r0
// Preserved: sp
I2CSlaveDataGet_entry:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A24C:
	word32 sp_6
	word32 r0_7
	word32 lr_8
	call lr (retsize: 0;)
		uses: lr,r0_4,sp_1
		defs: lr_8,r0_7,sp_6
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

I2CSlaveDataGet_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



word32 fn0000A5C0(word32 r0, word32 r1, word32 r2, word32 r3, word32 r7, ptr32 & r2Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2 r3 r7
// LiveOut: r1 r2 r4 r5 r6
// Trashed: NZCV r1 r2 r3 r4 r5 r6 r7 sp
// Preserved: r0 sp
fn0000A5C0_entry:
// DataOut: cpsr lr r0 r1 r2 r3 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A5C0:
// DataOut: cpsr lr r0 r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A5C2_thunk_memcpy:
	word32 r2_10
	word32 r4_11
	word32 r5_12
	word32 r6_13
	return memcpy(r0, r1, r2, r3, out r2_10, out r4_11, out r5_12, out r6_13)
// DataOut: cpsr lr r1 r2 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp r0:r0 r5:r7 << 1

fn0000A5C0_exit:
// DataOut: r1 r2 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:r0 r5:<invalid> r3:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r7:<invalid> r2:<invalid>



word32 memcpy(word32 r0, word32 r1, word32 r2, word32 r3, ptr32 & r2Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r2 r3
// LiveOut: r1 r2 r4 r5 r6
// Trashed: NZCV r1 r2 r3 r4 r5 r6 r7 sp
// Preserved:
memcpy_entry:
// DataOut: cpsr lr r0 r1 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A5C4:
	word32 r5_110
	word32 r2_105
	word32 r3_102
	word32 r5_114
	word32 r1_113
	word32 sp_2 = fp - 20
	word32 r5_14 = r0
	r3_102 = r3
	r2_105 = r2
	r5_110 = r5_14
	branch r2 <=u 0x0000000F l0000A628
// DataOut: cpsr lr r0 r1 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32)

l0000A5CC:
	branch (r1 | r0) << 30 != 0x00000000 l0000A63E
// DataOut: cpsr lr r0 r1 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 20 r5:r0 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32)

l0000A5D4:
	Mem129[r0:word32] = Mem0[r1:word32]
	Mem131[r0 + 4:word32] = Mem129[r1 + 4:word32]
	Mem133[r0 + 8:word32] = Mem131[r1 + 8:word32]
	word32 r7_134 = Mem133[r1 + 12:word32]
	Mem135[r0 + 12:word32] = r7_134
	word32 r5_127 = r0 + ((r2 - 0x00000010 >>u 4) + 0x00000001 << 4)
	branch r5_127 != r0 + 0x00000010 l0000A5FA_then
	word32 sp_140
	word32 r4_141
	word32 r5_142
	word32 r6_143
	word32 r7_144
	word32 lr_145
	word32 r0_146
	byte NZCV_148
	byte ZC_149
	word32 r3_150
	word32 r1_151
	byte NZC_152
	byte Z_153
	call fn0000A7E0 (retsize: 0; depth: 20)
		uses: dwLoc04_12,dwLoc08_10,dwLoc0C_8,dwLoc10_6,dwLoc14_4,lr,NZC_118,NZCV_138,r0,r1,r2,r3_136,r4_137,r5_127,r6_123,r7_134,sp_2,Z_139,ZC_17
		defs: lr_145,NZC_152,NZCV_148,r0_146,r1_151,r2_147,r3_150,r4_141,r5_142,r6_143,r7_144,sp_140,Z_153,ZC_149
	return r1_151
// DataOut: cpsr lr r0 r1 r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 20 r5:r0 r3:(r1 | r0) << 30 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32)

l0000A5FA_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 20 r5:r0 + ((r2 - 0x00000010 >>u 4) + 0x00000001 << 4) r3:r0 + 0x00000010 r6:r2 - 0x00000010 r4:r1 + 0x00000010 r7:<invalid> -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l0000A5FC:
	word32 r6_155 = r6_143 & ~0x0000000F
	word32 r5_157 = r0_146 + (r6_155 + 0x00000010)
	r1_113 = r1_151 + (r6_155 + 0x00000010)
	r3_102 = r2_105 & 0x0000000F
	branch (r2_105 & 0x0000000F) <=u 0x00000003 l0000A642
// DataOut: cpsr lr r0 r1 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 20 r5:r0 + ((r2 - 0x00000010 >>u 4) + 0x00000001 << 4) r3:r0 + 0x00000010 r6:r2 - 0x00000010 r4:r1 + 0x00000010 r7:<invalid> -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32)

l0000A642:
	r5_114 = r0_146
// DataOut: cpsr lr r1 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 20 r5:r0 + ((r2 - 0x00000010 & ~0x0000000F) + 0x00000010) r3:r2 & 0x0000000F r6:(r2 - 0x00000010 & ~0x0000000F) + 0x00000010 r4:r1 + 0x00000010 r7:<invalid> r1:r1 + ((r2 - 0x00000010 & ~0x0000000F) + 0x00000010) -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32)

l0000A60C:
	word32 r7_167 = Mem135[r1_113:word32]
	Mem168[r5_157:word32] = r7_167
	word32 r6_162 = (r2_105 & 0x0000000F) - 0x00000004
	branch 0x00000004 != (r6_162 >>u 2) + 0x00000001 << 2 l0000A61E_then
	word32 sp_172
	word32 r4_173
	word32 r6_175
	word32 r7_176
	word32 lr_177
	word32 r0_178
	word32 r2_179
	byte NZCV_180
	byte ZC_181
	word32 r3_182
	byte NZC_184
	byte Z_185
	call fn0000A812 (retsize: 0; depth: 20)
		uses: dwLoc04_12,dwLoc08_10,dwLoc0C_8,dwLoc10_6,dwLoc14_4,lr_145,NZC_152,NZCV_170,r0_146,r1_158,r2_147,r3_169,r4_166,r5_157,r6_162,r7_167,sp_140,Z_171,ZC_161
		defs: lr_177,NZC_184,NZCV_180,r0_178,r1_183,r2_179,r3_182,r4_173,r5_174,r6_175,r7_176,sp_172,Z_185,ZC_181
	return r1
// DataOut: cpsr lr r1 r2 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 20 r5:r0 + ((r2 - 0x00000010 & ~0x0000000F) + 0x00000010) r3:r2 & 0x0000000F r6:(r2 - 0x00000010 & ~0x0000000F) + 0x00000010 r4:r1 + 0x00000010 r7:<invalid> r1:r1 + ((r2 - 0x00000010 & ~0x0000000F) + 0x00000010) -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32)

l0000A61E_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 20 r5:r0 + ((r2 - 0x00000010 & ~0x0000000F) + 0x00000010) r3:0x00000004 r6:(r2 & 0x0000000F) - 0x00000004 r4:((r2 & 0x0000000F) - 0x00000004 >>u 2) + 0x00000001 << 2 r7:<invalid> r1:r1 + ((r2 - 0x00000010 & ~0x0000000F) + 0x00000010) -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l0000A620:
	word32 r6_187 = r6_175 & ~0x00000003
	*r6Out = r6_187
	word32 r4_186
	*r4Out = 0x00000003
	r3_102 = r6_187 + 0x00000004
	r2_105 = r2_179 & 0x00000003
	*r2Out = r2_105
// DataOut: cpsr lr r1 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 20 r5:r0 + ((r2 - 0x00000010 & ~0x0000000F) + 0x00000010) r3:0x00000004 r6:(r2 & 0x0000000F) - 0x00000004 r4:((r2 & 0x0000000F) - 0x00000004 >>u 2) + 0x00000001 << 2 r7:<invalid> r1:r1 + ((r2 - 0x00000010 & ~0x0000000F) + 0x00000010) -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32)

l0000A628:
	r1_113 = r1 + r3_102
	r5_114 = r5_110 + r3_102
// DataOut: cpsr lr r1 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 20 r5:<invalid> r3:((r2 & 0x0000000F) - 0x00000004 & ~0x00000003) + 0x00000004 r6:(r2 & 0x0000000F) - 0x00000004 & ~0x00000003 r4:0x00000003 r7:<invalid> r1:r1 + ((r2 - 0x00000010 & ~0x0000000F) + 0x00000010) r2:r2 & 0x00000003 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32)

l0000A62C:
	branch r2_105 == 0x00000000 l0000A638
// DataOut: cpsr lr r1 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 20 r5:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> r4:<invalid> r7:<invalid> r2:r2 & 0x00000003 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32)

l0000A630:
	Mem96[r5_114:byte] = (byte) (word32) Mem0[r1_113:byte]
	r3_102 = 0x00000001
// DataOut: cpsr lr r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 20 r5:<invalid> r1:<invalid> r3:<invalid> r6:<invalid> r4:<invalid> r7:<invalid> r2:r2 & 0x00000003 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32)

l0000A638:
	branch r3_102 != r2_105 l0000A63A_then
	word32 sp_75
	word32 r4_76
	word32 r5_77
	word32 r6_78
	word32 r7_79
	word32 lr_80
	word32 r0_81
	word32 r2_82
	byte NZCV_83
	byte ZC_84
	word32 r3_85
	word32 r1_86
	byte NZC_87
	byte Z_88
	call fn0000A82E (retsize: 0; depth: 20)
		uses: dwLoc04_12,dwLoc08_10,dwLoc0C_8,dwLoc10_6,dwLoc14_4,lr_64,NZC_58,NZCV_73,r0_63,r1_59,r2_62,r3_72,r4_68,r5_67,r6_66,r7_65,sp_69,Z_74,ZC_61
		defs: lr_80,NZC_87,NZCV_83,r0_81,r1_86,r2_82,r3_85,r4_76,r5_77,r6_78,r7_79,sp_75,Z_88,ZC_84
	return r1_86
// DataOut: cpsr lr r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 20 r5:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r6:<invalid> r7:<invalid> r2:r2 & 0x00000003 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32)

l0000A63A_then:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 20 r5:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r6:<invalid> r7:<invalid> r2:r2 & 0x00000003 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l0000A63C:
	word32 r4_89
	*r4Out = r4
	word32 r5_90
	*r5Out = r5
	word32 r6_91
	*r6Out = r6
	sp_2 = fp - 4
// DataOut: cpsr lr r1 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 20 r5:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r6:<invalid> r7:<invalid> r2:r2 & 0x00000003 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

l0000A63E:
	word32 r1_42 = Mem0[sp_2:word32]
	word32 sp_44
	word32 r4_45
	word32 r5_46
	word32 r6_47
	word32 r7_48
	word32 lr_49
	word32 r0_50
	word32 r2_51
	byte NZCV_52
	byte ZC_53
	word32 r3_54
	word32 r1_55
	byte NZC_56
	byte Z_57
	call r1_42 (retsize: 0;)
		uses: dwLoc04_12,dwLoc08_10,dwLoc0C_8,dwLoc10_6,dwLoc14_4,lr,NZC,NZCV_16,r0,r1_42,r2,r3,r4,r5_14,r6,r7,sp_43,Z,ZC_17
		defs: lr_49,NZC_56,NZCV_52,r0_50,r1_55,r2_51,r3_54,r4_45,r5_46,r6_47,r7_48,sp_44,Z_57,ZC_53
	return r1_55
// DataOut: cpsr lr r1 r2 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r1:<invalid> r4:r4 r6:r6 r7:r7 r2:r2 & 0x00000003 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr

memcpy_exit:
// DataOut: r1 r2 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r7:<invalid> r2:r2 & 0x00000003 -20(fp):r4 -16(fp):r5 -12(fp):r6 -8(fp):r7 -4(fp):lr



