void fn0000802E(word32 r0, word32 r2, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000802E_entry:
// DataOut: ap fp r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000802E:
	word32 sp_13
	byte CVZN_14
	byte ZN_15
	bool C_16
	bool V_17
	word32 r4_18
	word32 r3_19
	bool Z_20
	bool N_21
	word32 ap_22
	byte CZN_23
	word32 r2_24
	word32 r0_25
	word32 fp_26
	call Mem0[r3:word32] + 2 (retsize: 4; depth: 16)
		uses: C_9,dwLoc08_5,dwLoc0C_7,r3,r4,sp_6,V_10,ZN_8
		defs: ap_22,C_16,CVZN_14,CZN_23,fp_26,N_21,r0_25,r2_24,r3_19,r4_18,sp_13,V_17,Z_20,ZN_15
	word32 sp_34
	byte CVZN_35
	byte ZN_36
	bool C_37
	bool V_38
	word32 r4_39
	word32 r3_40
	bool Z_41
	bool N_42
	word32 ap_43
	byte CZN_44
	word32 r2_45
	word32 r0_46
	word32 fp_47
	call Mem0[r3_19:word32] + 2 (retsize: 4; depth: 24)
		uses: ap_22,C_32,CVZN_14,CZN_23,dwLoc08_5,dwLoc0C_7,dwLoc10_28,dwLoc14_30,fp_26,N_21,r0_25,r2_24,r3_19,r4_18,sp_29,V_33,Z_20,ZN_31
		defs: ap_43,C_37,CVZN_35,CZN_44,fp_47,N_42,r0_46,r2_45,r3_40,r4_39,sp_34,V_38,Z_41,ZN_36
	word32 sp_55
	byte CVZN_56
	byte ZN_57
	bool C_58
	bool V_59
	word32 r4_60
	word32 r3_61
	bool Z_62
	bool N_63
	word32 ap_64
	byte CZN_65
	word32 r2_66
	word32 r0_67
	word32 fp_68
	call Mem0[r3_40:word32] + 2 (retsize: 4; depth: 32)
		uses: ap_43,C_53,CVZN_35,CZN_44,dwLoc08_5,dwLoc0C_7,dwLoc10_28,dwLoc14_30,dwLoc18_49,dwLoc1C_51,fp_47,N_42,r0_46,r2_45,r3_40,r4_39,sp_50,V_54,Z_41,ZN_52
		defs: ap_64,C_58,CVZN_56,CZN_65,fp_68,N_63,r0_67,r2_66,r3_61,r4_60,sp_55,V_59,Z_62,ZN_57
	word32 sp_76
	byte CVZN_77
	byte ZN_78
	bool C_79
	bool V_80
	word32 r4_81
	word32 r3_82
	bool Z_83
	bool N_84
	word32 ap_85
	byte CZN_86
	word32 r2_87
	word32 r0_88
	word32 fp_89
	call Mem0[r3_61:word32] + 2 (retsize: 4; depth: 40)
		uses: ap_64,C_74,CVZN_56,CZN_65,dwLoc08_5,dwLoc0C_7,dwLoc10_28,dwLoc14_30,dwLoc18_49,dwLoc1C_51,dwLoc20_70,dwLoc24_72,fp_68,N_63,r0_67,r2_66,r3_61,r4_60,sp_71,V_75,Z_62,ZN_73
		defs: ap_85,C_79,CVZN_77,CZN_86,fp_89,N_84,r0_88,r2_87,r3_82,r4_81,sp_76,V_80,Z_83,ZN_78
	word32 r3_145 = 0x00000000
	branch Mem0[ap_85 + 4:word32] != 0x00000001 l00008081
// DataOut: ap fp r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000807F:
	r3_145 = 0x00000001
// DataOut: ap fp r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000024 r3:0x00000000 -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4
// LocalsOut: fp(32)

l00008081:
	Mem97[r2_87 + 96:word32] = r3_145
	fn00008EC2(fp_89)
	branch (r0_88 & 0x00000001) != 0x00000000 l0000809C
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000024 r3:<invalid> -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4
// Terminates process

l0000809C:
	Mem120[fp - 0x00000030:uint32] = 0x0000005D
	Mem123[fp - 0x00000034:word32] = Mem120[Mem120[ap_85 + 8:word32]:word32]
	fn000192DE()
	branch r0_88 != 0x00000000 l000080B8
// DataOut: ap r4 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -44(fp):ap + 4 -40(fp):ap + 8 -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4

l000080B8:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: r4:r0 -44(fp):ap + 4 -40(fp):ap + 8 -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4

l000080AF:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: r4:r0 -44(fp):ap + 4 -40(fp):ap + 8 -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4

l000080BA:
	Mem135[fp - 0x00000038:word32] = 0x00000007
// DataOut:
// DataOut (flags): 
// SymbolicIn: r4:<invalid> -44(fp):ap + 4 -40(fp):ap + 8 -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4

l00008098:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 -44(fp):ap + 4 -40(fp):ap + 8 -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4

fn0000802E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 r0:r0 sp:fp - 0x00000004 fp:<invalid> ap:<invalid> -44(fp):ap + 4 -40(fp):ap + 8 -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4



void fn00008CCE(word32 r2, word32 r3, word32 r4, word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap r2 r3 r4
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00008CCE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00008CCE_entry:
// DataOut: ap r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008CCE:
	branch Mem0[ap + 4:word32] == 0x00000000 l00008CF4
// DataOut: r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008CF4:
// DataOut: r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r7:<invalid>
// LocalsOut: fp(32)

l00008CEC:
// DataOut: r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r7:<invalid>
// LocalsOut: fp(32)

l00008CF6:
	branch Mem0[r2:word32] != 0x00000000 l00008D00
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r7:<invalid> r0:<invalid>
// LocalsOut: fp(32)

l00008D00:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r7:<invalid> r0:<invalid> r6:<invalid>

l00008CFD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r7:<invalid> r0:<invalid> r6:<invalid>
// LocalsOut: fp(32)

l00008DAC:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r7:<invalid> r0:<invalid> r6:<invalid>



void fn00008EC2(word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00008EC2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00008EC2_entry:
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008EC2:
	Mem4[fp + -280:word16] = 0x0000
	Mem7[fp + -278:byte] = 0x0E
	Mem9[fp + -277:byte] = 0x02
	Mem11[fp + -276:word32] = 0x00000000
	Mem13[fp + -288:word16] = 0x0000
	Mem15[fp + -286:byte] = 0x0E
	Mem17[fp + -285:byte] = 0x02
	Mem19[fp + -284:word32] = 0x00000000
	Mem21[fp + -296:word16] = 0x0000
	Mem23[fp + -294:byte] = 0x0E
	Mem25[fp + -293:byte] = 0x02
	Mem27[fp + -292:word32] = 0x00000000
	Mem29[fp + -304:word16] = 0x0000
	Mem31[fp + -302:byte] = 0x0E
	Mem33[fp + -301:byte] = 0x02
	Mem35[fp + -300:word32] = 0x00000000
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00009746(word32 r0, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00009746_entry:
// DataOut: ap fp r0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009746:
	Mem4[fp + -20:word16] = 0x0000
	Mem7[fp + -18:byte] = 0x0E
	Mem9[fp + -17:byte] = 0x02
	Mem11[fp + -16:word32] = 0x00000000
	fn00018F66()
	branch (r0 & 0x00000001) != 0x00000000 l0000976A
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l0000976A:
	word32 r4_75 = Mem11[ap + 16:word32]
	branch Mem11[r4_75:word32] != 0x00000000 l0000978D
// DataOut: ap fp r0 r4 sp
// DataOut (flags): 
// SymbolicIn: r2:r0 -24(fp):<invalid>

l0000978D:
	word32 r8_102 = Mem11[Mem11[ap + 24:word32]:word32]
	Mem105[fp - 0x0000001C:word32] = fp + -20
	Mem108[fp - 0x00000020:word32] = Mem105[ap + 4:word32]
	fn00018FA9()
	word32 sp_106 = fp - 0x00000020
	word32 r2_112 = r0
	branch (r0 & 0x00000001) != 0x00000000 l000097A7
// DataOut: ap fp r0 r2 r8 sp
// DataOut (flags): 
// SymbolicIn: r2:r0 r4:<invalid> -24(fp):<invalid>
// Terminates process

l000097A7:
// DataOut: ap fp r0 r2 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r2:r0 -24(fp):<invalid>

l000097AC:
	r8_102 = r8_102 + ((uint32) Mem108[fp + -20:word16] + 0x00000001)
	branch r8_102 <=u Mem108[Mem108[ap + 20:word32]:word32] l000097F2
// DataOut: ap fp r0 r2 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:r0 r7:ap + 20 -24(fp):<invalid>

l000097BE:
	word32 r4_301 = Mem108[ap + 16:word32]
	word32 r3_303 = Mem108[ap + 20:word32]
	word32 r5_302 = Mem108[r4_301:word32]
	Mem305[r3_303:word32] = Mem108[r3_303:word32] + 0x00000100
	word32 sp_306 = sp_106 - 0x00000004
	Mem308[sp_306:word32] = Mem305[r3_303:word32]
	Mem311[sp_306 - 0x00000004:word32] = Mem308[r4_301:word32]
	fn000192BA()
	Mem316[r4_301:word32] = r0
	sp_106 = sp_306 - 0x00000004
	branch r0 != 0x00000000 l000097F2
// DataOut: ap fp r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:r0 r7:ap + 20 r9:r8 r3:<invalid> r8:<invalid> -24(fp):<invalid>
// Terminates process

l000097F2:
	word32 sp_163 = sp_106 - 0x00000004
	Mem165[sp_163:word32] = fp + -20
	Mem168[sp_163 - 0x00000004:word32] = fp + -12
	Mem171[sp_163 - 0x00000008:word32] = fp + -8
	word32 r3_172 = Mem171[ap + 8:word32]
	Mem174[sp_163 - 0x0000000C:word32] = r3_172
	fn00019346()
	word32 r4_178 = Mem174[fp + -8:word32]
	branch r4_178 <= 0x00000001 l00009820
// DataOut: ap fp r2 r3 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:r0 r7:ap + 20 r9:r8 r3:<invalid> r8:<invalid> -24(fp):<invalid>

l00009813:
	branch Mem174[r4_178 + Mem174[r3_172 + 4:word32] - 0x00000002:byte] == 0x22 l00009824
// DataOut: ap fp r2 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> -24(fp):<invalid>

l00009820:
	branch r4_178 != 0x00000000 l00009827
// DataOut: ap fp r2 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r3:<invalid> -24(fp):<invalid>

l00009824:
// DataOut: ap fp r2 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r3:<invalid> -24(fp):<invalid>

l00009827:
	word32 r3_185 = Mem174[fp + -16:word32]
	word32 r4_186 = r8_102 + Mem174[Mem174[ap + 16:word32]:word32]
	word32 r5_187 = 0x00000000
	r0 = (uint32) Mem174[fp + -20:word16]
	branch 0x00000000 >=u r0 l00009866
// DataOut: ap fp r0 r2 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r3:<invalid> r6:0x00000001 -24(fp):<invalid>

l0000983B:
// DataOut: ap fp r2 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r3:<invalid> r6:0x00000001 r5:0x00000000 r0:<invalid> -24(fp):<invalid>

l0000983C:
	branch true l00009858
// DataOut: ap fp r2 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r3:<invalid> r6:0x00000001 r5:<invalid> r0:<invalid> -24(fp):<invalid>

l00009840:
	branch Mem174[r3_185:byte] < 0x41 l00009858
// DataOut: ap fp r2 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r3:<invalid> r6:0x00000001 r5:<invalid> r0:<invalid> -24(fp):<invalid>

l00009846:
	branch Mem174[r3_185:byte] > 0x5A l00009858
// DataOut: ap fp r2 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r3:<invalid> r6:0x00000001 r5:<invalid> r0:<invalid> -24(fp):<invalid>

l00009858:
	Mem263[r4_186:byte] = Mem174[r3_185:byte]
	r3_185 = r3_185 + 0x00000001
	r4_186 = r4_186 + 0x00000001
// DataOut: ap fp r2 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r3:<invalid> r6:0x00000001 r5:<invalid> r0:<invalid> -24(fp):<invalid>

l0000984C:
	Mem279[r4_186:int8] = (int8) ((int32) Mem174[r3_185:int8] + 0x00000020)
	r3_185 = r3_185 + 0x00000001
	r4_186 = r4_186 + 0x00000001
// DataOut: ap fp r2 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r3:<invalid> r6:0x00000001 r5:<invalid> r0:<invalid> -24(fp):<invalid>

l0000985B:
	r5_187 = r5_187 + 0x00000001
	r0 = (uint32) Mem174[fp + -20:word16]
	branch r5_187 <u r0 l0000983C
// DataOut: ap fp r0 r2 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r3:<invalid> r6:0x00000001 r5:<invalid> r0:<invalid> -24(fp):<invalid>

l00009866:
	branch r2_112 != 0x0003FD39 l00009884
// DataOut: ap fp r0 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r3:<invalid> r6:0x00000001 r5:<invalid> r0:<invalid> -24(fp):<invalid>

l00009884:
	Mem232[Mem174[Mem174[ap + 16:word32]:word32]:byte] = 0x00
// DataOut: ap fp r0 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r3:<invalid> r6:0x00000001 r5:<invalid> r0:<invalid> -24(fp):<invalid>

l0000986F:
	Mem225[Mem174[Mem174[ap + 16:word32]:word32]:int8] = (int8) Mem174[ap + 12:int32]
// DataOut: ap fp r0 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r3:<invalid> r6:0x00000001 r5:<invalid> r0:<invalid> -24(fp):<invalid>

l00009893:
	Mem210[sp_163 - 0x00000010:word32] = fp + -20
	Mem213[sp_163 - 0x00000014:word32] = Mem210[ap + 4:word32]
	fn00018FA9()
	sp_106 = sp_163 - 0x00000014
	r2_112 = r0
	branch (r0 & 0x00000001) == 0x00000000 l000098A9
// DataOut: ap fp r0 r2 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:r8 - 0x00000001 r3:<invalid> r6:0x00000001 r5:<invalid> r0:<invalid> -24(fp):<invalid>
// Terminates process

l000098A6:
// DataOut: ap fp r0 r2 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r2:r0 -24(fp):<invalid>

l000097DF:
	branch r5_302 == 0x00000000 l000097EC
// DataOut: fp r5 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid>

l000097E3:
	Mem333[sp_306 - 0x00000008:word32] = r5_302
	fn000192B2()
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid>
// Terminates process

l000097EC:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid>

l000097A4:
// DataOut: ap fp r8
// DataOut (flags): 
// SymbolicIn: r2:r0 -24(fp):<invalid>

l000098A9:
	Mem132[Mem132[ap + 24:word32]:word32] = r8_102
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: r2:r0 -24(fp):<invalid>

l00009772:
	word32 r3_80 = Mem11[ap + 20:word32]
	Mem82[r3_80:uint32] = 0x00000100
	Mem85[fp - 0x0000001C:word32] = Mem82[r3_80:word32]
	word32 fp_89
	word32 sp_90
	fn000192B6(fp, out fp_89, out sp_90)
	Mem93[r4_75:word32] = r0
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r2:r0 r4:<invalid> -24(fp):<invalid>

l00009767:
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: r2:r0 -24(fp):<invalid>

l000098AD:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r2:r0 -24(fp):<invalid>

fn00009746_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r2:r0 r0:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> -24(fp):<invalid>



void fn00009A52()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00009A52_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00009A52_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009A52:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word32 fn00009B0A(word32 r0, word32 r8, word32 r10, word32 r11, word32 fp, ptr32 & r3Out, ptr32 & apOut, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r0 r10 r11 r8
// LiveOut: ap fp r0 r3
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r9 sp
// Preserved:
fn00009B0A_entry:
// DataOut: fp r0 r10 r11 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009B0A:
	word32 r3_11
	word32 r6_12
	word32 r7_13
	word32 ap_14
	word32 fp_15
	word32 r0_16 = fn0000AA6A(r0, r8, r10, r11, fp, out r3_11, out r6_12, out r7_13, out ap_14, out fp_15)
	Mem18[ap_14 + 0x0001019C:word32] = r0_16
	branch r0_16 > 0x00000002 l00009B2A
// DataOut: ap fp r0 r3 r6 r7
// DataOut (flags): C
// SymbolicIn: sp:fp

l00009B2A:
	branch false l00009B2C
// DataOut: fp r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid>

l00009B2C:
// DataOut: fp r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid>

l00009B38:
	word32 r3_56
	word32 fp_57
	word32 r0_58 = fn00009C8A(r6_12, r7_13, fp_15, out r3_56, out fp_57)
	word32 fp_60
	*fpOut = Mem18[fp_57 + 0x0000000C:word32]
	word32 ap_61
	*apOut = Mem18[fp_57 + 0x00000008:word32]
	return r0_58
// DataOut: ap fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid>

l00009B22_1:
	word32 sp_42
	byte CVZN_43
	byte ZN_44
	bool C_45
	bool V_46
	word32 r0_47
	word32 ap_48
	word32 fp_49
	word32 r8_50
	word32 r10_51
	word32 r11_52
	word32 r3_53
	word32 r6_54
	word32 r7_55
	call 0x00009B26 + r0_16 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_14,C_20,CVZN_23,fp_15,r0_16,r10,r11,r3_11,r6_12,r7_13,r8,sp_2,V_21,ZN_19
		defs: ap_48,C_45,CVZN_43,fp_49,r0_47,r10_51,r11_52,r3_53,r6_54,r7_55,r8_50,sp_42,V_46,ZN_44
	return r0_47
// DataOut: ap fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid>

fn00009B0A_exit:
// DataOut: ap fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid>



void fn00009BAE(word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00009BAE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00009BAE_entry:
// DataOut: r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009BAE:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word32 fn00009C8A(word32 r6, word32 r7, word32 fp, ptr32 & r3Out, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r6 r7
// LiveOut: fp r0 r3
// Trashed: CVZN ap fp r0 r2 r3 r4 r5 sp
// Preserved:
fn00009C8A_entry:
// DataOut: fp r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009C8A:
	word32 r3_113
	*r3Out = DPB(r3, 0x01, 0)
	branch (Mem0[Mem0[r7 + 1511:word32] + 20:word32] & 0x00000008) != 0x00000000 l00009CB8
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009CB1:
	branch Mem0[r7 + 12:word32] != 0x00000000 l00009CB8
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:DPB(r3, 0x01, 0) r2:<invalid>

l00009CB6:
	*r3Out = DPB(r3, 0x00, 0)
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:DPB(r3, 0x01, 0) r2:<invalid>

l00009CB8:
	word32 r5_103
	int32 v14_17 = (int32) (int8) r3_113
	Mem18[r6 + 352:int32] = v14_17
	branch v14_17 != 0x00000000 l00009CC4
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid>

l00009CBF:
	branch Mem18[r7 + 8:word32] != 0x00000000 l00009CC8
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid>

l00009CC8:
	word32 r4_101
	branch Mem18[r7 + 8:word32] == 0x00000001 l00009CD4
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid>

l00009CD4:
	*r3Out = 0x00000000
	branch (uint32) Mem18[Mem18[r7 + 1511:word32] + 0x00000014:ui1] != 0x00000000 l00009CE7
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid>

l00009CE5:
	*r3Out = 0x00000001
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:0x00000000 r2:<invalid>

l00009CE7:
	r4_101 = r3_113
// DataOut: fp r3 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid>

l00009CCE:
	r4_101 = 0x00000001
// DataOut: fp r3 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid>

l00009CEA:
	r5_103 = r4_101
// DataOut: fp r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r4:<invalid>

l00009CC4:
	r5_103 = 0x00000000
// DataOut: fp r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid>

l00009CED:
	Mem31[r6 + 356:word32] = r5_103
	Mem33[r6 + 360:byte] = 0x05
	branch Mem33[r7 + 12:word32] == 0x00000000 l00009CFF
// DataOut: fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>

l00009CFF:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>

l00009CFC:
// DataOut: fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>

l00009FFD:
	Mem39[r6 + 0x00010170:word32] = r6 + 361
	Mem41[r6 + 0x0001016C:word32] = 0x00000000
	Mem43[r6 + 0x00010179:word32] = r6 + 361
	Mem45[r6 + 0x0001017D:word32] = 0x00000000
	Mem47[r6 + 0x00010175:word32] = r6 + 0x00010181
	Mem49[r6 + 0x00010185:word32] = r6 + 0x00008169
	Mem51[r6 + 0x00010189:word32] = 0x00000000
	Mem53[r6 + 0x00010181:word32] = r6 + 0x00010175
	Mem55[r6 + 0x00010190:word32] = r6 + 0x00010175
	branch Mem55[r6 + 352:word32] == 0x00000000 l0000A060
// DataOut: fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>

l0000A060:
// DataOut: fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>

l0000A053:
	Mem75[r6 + 0x00010174:byte] = 0x00
// DataOut: fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>

l0000A065:
	Mem62[r6 + 0x00010194:word32] = r3_113
	word32 fp_70
	*fpOut = Mem62[fp + 0x0000000C:word32]
	return 0x00000000
// DataOut: fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>

fn00009C8A_exit:
// DataOut: fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid> r5:<invalid> r0:0x00000000 fp:<invalid> ap:<invalid> r4:<invalid>



void fn0000A07A(word32 r6, word32 r7, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r6 r7 r8
// LiveOut:
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn0000A07A_entry:
// DataOut: fp r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A07A:
	Mem6[r6 + 352:word32] = Mem0[r7 + 12:word32]
	Mem10[r6 + 360:byte] = Mem6[Mem6[r6 + 308:word32] + 31:byte]
	branch Mem10[r7 + 12:word32] != 0x00000000 l0000A0AD
// DataOut: fp r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A0AD:
	word32 r2_15 = (uint32) Mem10[r6 + 360:byte]
	branch r2_15 != 0x00000002 l0000A0BA
// DataOut: fp r2 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>
// LocalsOut: fp(32)

l0000A0BA:
	branch r2_15 != 0x00000005 l0000A0C2
// DataOut: fp r2 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>
// LocalsOut: fp(32)

l0000A0C2:
	branch r2_15 != 0x00000006 l0000A0CA
// DataOut: fp r2 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>
// LocalsOut: fp(32)

l0000A0CA:
	branch r2_15 != 0x00000004 l0000A0D2
// DataOut: fp r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>
// LocalsOut: fp(32)

l0000A0D2:
	fn000192D2()
	word32 r2_140 = Mem10[r7 + 0x0000C839:word32]
	byte ZN_145
	bool C_146
	bool V_147
	word32 r7_148
	word32 r6_149
	word32 r2_150
	bool Z_151
	byte CZN_152
	bool N_153
	word32 r0_154
	word32 fp_155
	word32 ap_156
	byte VZN_157
	word32 r8_158
	word32 r3_159
	word32 sp_144
	call Mem10[r2_140:word32] + 2 (retsize: 4; depth: 548)
		uses: ap,C_142,CZN_115,dwLoc0208_119,dwLoc020C_122,dwLoc0210_125,dwLoc0214_128,dwLoc0218_134,dwLoc021C_137,dwLoc0220_139,fp,N,r0,r2_140,r3,r6,r7,r8,sp_138,V_143,VZN,Z_116,ZN_141
		defs: ap_156,C_146,CZN_152,fp_155,N_153,r0_154,r2_150,r3_159,r6_149,r7_148,r8_158,sp_144,V_147,VZN_157,Z_151,ZN_145
	branch Mem10[r6_149 + 320:word32] == 0x00000000 l0000A10C
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>
// Terminates process

l0000A101:
	Mem247[sp_144 - 0x00000004:word32] = Mem10[r6_149 + 320:word32]
	fn000192B2()
	sp_144 = sp_144 - 0x00000004
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001
// Terminates process

l0000A10C:
	branch Mem10[r6_149 + 328:word32] == 0x00000000 l0000A11D
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A112:
	sp_144 = sp_144 - 0x00000004
	Mem241[sp_144:word32] = Mem10[r6_149 + 328:word32]
	fn000192B2()
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001
// Terminates process

l0000A11D:
	branch Mem10[r6_149 + 324:word32] == 0x00000000 l0000A12E
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A123:
	sp_144 = sp_144 - 0x00000004
	Mem235[sp_144:word32] = Mem10[r6_149 + 324:word32]
	fn000192B2()
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001
// Terminates process

l0000A12E:
	branch Mem10[r6_149 + 316:word32] == 0x00000000 l0000A13F
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A134:
	sp_144 = sp_144 - 0x00000004
	Mem229[sp_144:word32] = Mem10[r6_149 + 316:word32]
	fn000192B2()
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001
// Terminates process

l0000A13F:
	branch Mem10[r6_149 + 340:word32] == 0x00000000 l0000A161
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A145:
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A148:
	word32 r2_214 = Mem10[r6_149 + 340:word32]
	word32 r3_215 = Mem10[r2_214 + 4:word32]
	sp_144 = sp_144 - 0x00000004
	Mem217[sp_144:word32] = r2_214
	fn000192B2()
	Mem222[r6_149 + 340:word32] = r3_215
	branch r3_215 != 0x00000000 l0000A148
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001
// Terminates process

l0000A161:
	word32 r3_186 = Mem10[r6_149 + 308:word32]
	branch r3_186 == 0x00000000 l0000A179
// DataOut: fp r3 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A168:
	branch r3_186 == r6_149 l0000A179
// DataOut: fp r3 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r3:<invalid> -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A170:
	Mem206[sp_144 - 0x00000004:word32] = r3_186
	fn000192B2()
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:r6 r3:<invalid> -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001
// Terminates process

l0000A179:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r3:<invalid> -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A0CF:
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A0C7:
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A0BF:
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A0B7:
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A4F9:
	Mem44[r6 + 0x00010170:word32] = r6 + 361
	Mem46[r6 + 0x0001016C:word32] = 0x00000000
	Mem48[r6 + 0x00010179:word32] = r6 + 361
	Mem50[r6 + 0x0001017D:word32] = 0x00000000
	Mem52[r6 + 0x00010175:word32] = r6 + 0x00010181
	Mem54[r6 + 0x00010185:word32] = r6 + 0x00008169
	Mem56[r6 + 0x00010189:word32] = 0x00000000
	Mem58[r6 + 0x00010181:word32] = r6 + 0x00010175
	Mem60[r6 + 0x00010190:word32] = r6 + 0x00010175
	branch Mem60[r6 + 352:word32] == 0x00000000 l0000A598
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A598:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A54F:
	word32 r0_65 = (uint32) Mem60[r6 + 360:byte]
	branch r0_65 > 0x00000006 l0000A560
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A560:
	vax_addp4(0x0000, 0x11, 0x0028, 0x17)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid> r0:<invalid>

l0000A554_1:
	word32 sp_83
	byte ZN_84
	bool C_85
	bool V_86
	word32 r7_87
	word32 r6_88
	word32 r2_89
	bool Z_90
	byte CZN_91
	bool N_92
	word32 r0_93
	word32 fp_94
	word32 ap_95
	byte VZN_96
	word32 r8_97
	word32 r3_98
	call 0x0000A558 + (r0_65 - 0x00000002) * 0x00000002 (retsize: 4; depth: 520)
		uses: ap,C_67,CZN_42,dwLoc0208,dwLoc020C,dwLoc0210,dwLoc0214,dwLoc0218,dwLoc021C,dwLoc0220,fp,N,r0_65,r2_15,r3,r6,r7,r8,sp_2,V_68,VZN,Z_62,ZN_66
		defs: ap_95,C_85,CZN_91,fp_94,N_92,r0_93,r2_89,r3_98,r6_88,r7_87,r8_97,sp_83,V_86,VZN_96,Z_90,ZN_84
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid> r0:<invalid>

fn0000A07A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A0AA:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A17D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>



void fn0000A5B2(word32 r5, word32 r6, word32 r7, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r5 r6 r7 r8
// LiveOut:
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn0000A5B2_entry:
// DataOut: fp r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A5B2:
	branch Mem0[r7 + 12:word32] != 0x00000000 l0000A5D2
// DataOut: fp r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A5D2:
	word32 r3_13 = (uint32) (Mem0[r6 + 0x000102F4:byte] & ~0xF0)
	branch r3_13 == 0x00000002 l0000A61F
// DataOut: fp r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// LocalsOut: fp(32)

l0000A5E3:
	branch r3_13 == 0x00000005 l0000A61F
// DataOut: fp r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid>
// LocalsOut: fp(32)

l0000A5E8:
	branch r3_13 == 0x00000006 l0000A61F
// DataOut: fp r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid>
// LocalsOut: fp(32)

l0000A5ED:
	branch r3_13 == 0x00000004 l0000A61F
// DataOut: fp r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid>
// LocalsOut: fp(32)

l0000A61F:
	Mem45[r6 + 0x00010170:word32] = r6 + 361
	Mem47[r6 + 0x0001016C:word32] = 0x00000000
	Mem49[r6 + 0x00010179:word32] = r6 + 361
	Mem51[r6 + 0x0001017D:word32] = 0x00000000
	Mem53[r6 + 0x00010175:word32] = r6 + 0x00010181
	Mem55[r6 + 0x00010185:word32] = r6 + 0x00008169
	Mem57[r6 + 0x00010189:word32] = 0x00000000
	Mem59[r6 + 0x00010181:word32] = r6 + 0x00010175
	Mem61[r6 + 0x00010190:word32] = r6 + 0x00010175
	branch r3_13 > 0x00000006 l0000A67E
// DataOut: r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid>

l0000A67E:
	vax_subp4(0x0000, 0x11, 0x002A, Mem61[Mem61[r5 + 5968:word32]:ptr32])
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r0:<invalid>

l0000A672_1:
	word32 sp_81
	byte CVZN_82
	byte ZN_83
	bool C_84
	bool V_85
	word32 r7_86
	bool Z_87
	word32 r6_88
	word32 r2_89
	word32 r3_90
	byte CZN_91
	word32 r8_92
	word32 r0_93
	word32 fp_94
	word32 ap_95
	bool N_96
	word32 r5_97
	byte VZN_98
	call 0x0000A676 + (r3_13 - 0x00000002) * 0x00000002 (retsize: 4; depth: 8)
		uses: ap,C_64,CVZN,CZN_42,dwLoc08,dwLoc0C,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,fp,N,r0_62,r2_12,r3_13,r5,r6,r7,r8,sp_2,V_65,VZN,Z_43,ZN_63
		defs: ap_95,C_84,CVZN_82,CZN_91,fp_94,N_96,r0_93,r2_89,r3_90,r5_97,r6_88,r7_86,r8_92,sp_81,V_85,VZN_98,Z_87,ZN_83
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r0:<invalid>

l0000A5F2:
	fn000192D2()
	word32 r2_132 = Mem0[r7 + 0x0000C839:word32]
	word32 sp_136
	byte CVZN_137
	byte ZN_138
	bool C_139
	bool V_140
	word32 r7_141
	bool Z_142
	word32 r6_143
	word32 r2_144
	word32 r3_145
	byte CZN_146
	word32 r8_147
	word32 r0_148
	word32 fp_149
	word32 ap_150
	bool N_151
	word32 r5_152
	byte VZN_153
	call Mem0[r2_132:word32] + 2 (retsize: 4; depth: 36)
		uses: ap,C_134,CVZN,CZN_107,dwLoc08_111,dwLoc0C_114,dwLoc10_117,dwLoc14_120,dwLoc18_126,dwLoc1C_129,dwLoc20_131,fp,N,r0,r2_132,r3_13,r5,r6,r7,r8,sp_130,V_135,VZN,Z_108,ZN_133
		defs: ap_150,C_139,CVZN_137,CZN_146,fp_149,N_151,r0_148,r2_144,r3_145,r5_152,r6_143,r7_141,r8_147,sp_136,V_140,VZN_153,Z_142,ZN_138
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid>

fn0000A5B2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -20(fp):r7 + 1515 -16(fp):r8 + 556 -12(fp):r7 + 0x0000C701 -8(fp):0x00000001

l0000A5CF:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000A6C4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004



void fn0000A8D6(word32 r0, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r0 r10 r6 r7 r8 r9
// LiveOut:
// Trashed: CVZN r0 r2 sp
// Preserved:
fn0000A8D6_entry:
// DataOut: fp r0 r10 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A8D6:
	word32 sp_103 = fp + -112
	branch Mem0[r9 + 348:byte] == 0x00 l0000A906
// DataOut: fp r0 r10 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A906:
// DataOut: fp r0 r10 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -112

l0000A910:
	word32 sp_104 = sp_103 - 0x00000004
	Mem105[sp_104:word32] = 0x00000001
	Mem108[sp_104 - 0x00000004:word32] = r7 + 0x0000C701
	Mem111[sp_104 - 0x00000008:word32] = r6 + 718
	Mem114[sp_104 - 0x0000000C:word32] = r7 + 1515
	fn000192D2()
	Mem119[sp_104 - 0x00000010:word32] = r0
	Mem122[sp_104 - 0x00000014:word32] = r7 + 1515
	Mem124[sp_104 - 0x00000018:word32] = r7
	word32 r2_125 = Mem124[r7 + 0x0000C839:word32]
	word32 sp_130
	byte ZN_131
	bool C_132
	bool V_133
	bool Z_135
	word32 r7_137
	word32 r6_138
	word32 r2_139
	word32 r8_140
	word32 fp_141
	byte VZN_142
	word32 r3_144
	byte CZN_145
	word32 ap_146
	word32 r10_143
	word32 r9_134
	call Mem124[r2_125:word32] + 2 (retsize: 4; depth: 4)
		uses: ap,C_127,CZN,fp,r0_102,r10,r2_125,r3,r6_100,r7_101,r8,r9,sp_123,V_128,VZN,Z_6,ZN_126
		defs: ap_146,C_132,CZN_145,fp_141,r0_136,r10_143,r2_139,r3_144,r6_138,r7_137,r8_140,r9_134,sp_130,V_133,VZN_142,Z_135,ZN_131
	Mem149[sp_130 - 0x00000004:word32] = Mem124[r8_140:word32]
	word32 sp_154
	word32 ap_155 = fn00019296(fp_141, out fp, out sp_154)
	Mem158[sp_154 - 0x00000004:word32] = Mem149[r8_140:word32]
	Mem160[sp_154 - 0x00000008:word32] = 0x00000009
	Mem163[sp_154 - 0x0000000C:word32] = fp + -14
	fn00019292()
	sp_103 = sp_154 - 0x0000000C
	branch r0 != 0x00000000 l0000A998
// DataOut: fp r0 r10 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001
// Terminates process

l0000A954:
	branch (Mem163[r10_143 + (int32) (Mem163[fp + -14:byte] & ~0x80):byte] & ~0xFC) != 0x00 l0000A998
// DataOut: fp r0 r10 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A965:
	Mem214[sp_154 - 0x00000010:int32] = (int32) Mem163[fp + -14:int8]
	byte ZN_218
	bool C_219
	bool V_220
	bool Z_222
	word32 r7_224
	word32 r6_225
	word32 r2_226
	word32 r8_227
	byte VZN_229
	word32 r3_231
	byte CZN_232
	word32 ap_233
	call Mem214[r3_144:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_155,C_216,CZN_145,fp_153,r0_136,r10_143,r2_207,r3_144,r6_138,r7_137,r8_140,r9_134,sp_212,V_211,VZN_215,Z_209,ZN_208
		defs: ap_233,C_219,CZN_232,fp_228,r0_223,r10_230,r2_226,r3_231,r6_225,r7_224,r8_227,r9_221,sp_217,V_220,VZN_229,Z_222,ZN_218
	branch r0 == 0x0000006F l0000A998
// DataOut: fp r0 r10 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A975:
	Mem239[sp_103 - 0x00000004:int32] = (int32) Mem214[fp + -14:int8]
	byte ZN_243
	bool C_244
	bool V_245
	bool Z_247
	word32 r7_249
	word32 r6_250
	word32 r2_251
	word32 r8_252
	byte VZN_254
	word32 r3_256
	byte CZN_257
	word32 ap_258
	call Mem239[r3_231:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_233,C_241,CZN_234,fp_228,r0_223,r10_230,r2_226,r3_231,r6_225,r7_224,r8_227,r9_221,sp_237,V_236,VZN_240,Z_235,ZN_218
		defs: ap_258,C_244,CZN_257,fp_253,r0_248,r10_255,r2_251,r3_256,r6_250,r7_249,r8_252,r9_246,sp_242,V_245,VZN_254,Z_247,ZN_243
	branch r0 == 0x00000076 l0000A998
// DataOut: fp r0 r10 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> sp:sp - 0x00000004 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A985:
	Mem264[sp_103 - 0x00000004:int32] = (int32) Mem239[fp + -14:int8]
	byte ZN_268
	bool C_269
	bool V_270
	bool Z_272
	word32 r2_276
	word32 r8_277
	byte VZN_279
	word32 r3_281
	byte CZN_282
	word32 ap_283
	call Mem264[r3_256:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_258,C_266,CZN_259,fp_253,r0_248,r10_255,r2_251,r3_256,r6_250,r7_249,r8_252,r9_246,sp_262,V_261,VZN_265,Z_260,ZN_243
		defs: ap_283,C_269,CZN_282,fp_278,r0_273,r10_280,r2_276,r3_281,r6_275,r7_274,r8_277,r9_271,sp_267,V_270,VZN_279,Z_272,ZN_268
	branch r0 == 0x0000006E l0000A998
// DataOut: fp r0 r10 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> sp:sp - 0x0000000C -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A998:
	branch (Mem163[r10_143 + (int32) (Mem163[fp + -14:byte] & ~0x80) * 4:word32] & 0x00000001) == 0x00000000 l0000A9C2
// DataOut: fp r0 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> sp:<invalid> -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A9A6:
	Mem193[sp_103 - 0x00000004:int32] = (int32) Mem163[fp + -14:int8]
	fn0001929A()
	Mem197[fp + -14:int8] = (int8) r0
	Mem199[r9_134 + 348:byte] = (byte) r0
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> sp:<invalid> -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001
// Terminates process

l0000A995:
// DataOut: fp r0 r10 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> sp:sp - 0x0000001C -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A903:
// DataOut: fp r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -112

l0000A9BC:
	Mem83[fp + -14:byte] = Mem0[r9 + 348:byte]
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp + -112

l0000A9C2:
	word32 r0_23 = (int32) Mem0[fp + -14:int8]
	branch r0_23 > 0x00000076 l0000A9DE
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A9DE:
	byte VZN_63 = vax_subp4(0x0000, 0x31, Mem0[r0_23:word16], 0x00)
	word32 sp_65
	byte ZN_66
	bool C_67
	bool V_68
	word32 r9_69
	bool Z_70
	word32 r0_71
	word32 r7_72
	word32 r6_73
	word32 r2_74
	word32 r8_75
	word32 fp_76
	byte VZN_77
	word32 r10_78
	word32 r3_79
	byte CZN_80
	word32 ap_81
	call fn40009A48 (retsize: 4; depth: 4)
		uses: ap_9,C_64,CZN_10,fp_13,r0_62,r10_12,r2_15,r3_11,r6_16,r7_17,r8_14,r9_19,sp_22,V_20,VZN_63,Z_18,ZN_21
		defs: ap_81,C_67,CZN_80,fp_76,r0_71,r10_78,r2_74,r3_79,r6_73,r7_72,r8_75,r9_69,sp_65,V_68,VZN_77,Z_70,ZN_66
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A9C6_1:
	word32 sp_44
	byte ZN_45
	bool C_46
	bool V_47
	word32 r9_48
	bool Z_49
	word32 r0_50
	word32 r7_51
	word32 r6_52
	word32 r2_53
	word32 r8_54
	word32 fp_55
	byte VZN_56
	word32 r10_57
	word32 r3_58
	byte CZN_59
	word32 ap_60
	call 0x0000A9CE + (r0_23 - 0x0000006E) * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_9,C_25,CZN_10,fp_13,r0_23,r10_12,r2_15,r3_11,r6_16,r7_17,r8_14,r9_19,sp_22,V_20,VZN_24,Z_18,ZN_21
		defs: ap_60,C_46,CZN_59,fp_55,r0_50,r10_57,r2_53,r3_58,r6_52,r7_51,r8_54,r9_48,sp_44,V_47,VZN_56,Z_49,ZN_45
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

fn0000A8D6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001



word32 fn0000AA6A(word32 r0, word32 r8, word32 r10, word32 r11, word32 fp, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & apOut, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r0 r10 r11 r8
// LiveOut: ap fp r0 r3 r6 r7
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r9 sp
// Preserved:
fn0000AA6A_entry:
	*r7Out = r7
	*r6Out = r6
	*r3Out = r3
// DataOut: fp r0 r10 r11 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000AA6A:
	word32 v8_5 = Mem0[r10 + 0x0000C627:word32]
	Mem10[r8 + 308:word32] = 0x00000000
	Mem13[r8 + 316:word64] = 0x0000000000000000
	Mem15[r8 + 324:word64] = 0x0000000000000000
	Mem17[r8 + 340:word64] = 0x0000000000000000
	word32 sp_188 = fp - 0x00000018
	branch v8_5 != 0x00000000 l0000AAA5
// DataOut: fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000AAA5:
	branch (uint32) Mem17[r10 + 0x0000C656:word16] > 0x00000000 l0000AAB2
// DataOut: fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018 -20(fp):0x00000000 -16(fp):<invalid>

l0000AAB2:
// DataOut: fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid>

l0000AABC:
	Mem192[sp_188 + 16:word32] = Mem17[sp_188 + 8:word32]
	branch Mem192[Mem192[sp_188 + 16:word32]:word16] == Mem192[r11 + 831:word16] l0000AACC
// DataOut: fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AACC:
	Mem395[sp_188 + 4:word32] = 0x00000001
	word32 r3_396 = Mem395[sp_188 + 16:word32]
	*r3Out = r3_396
	word32 r4_398 = Mem395[r3_396 + 4:word32]
	branch r4_398 != Mem395[r11 + 834:word32] l0000AB00
// DataOut: fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB00:
	branch r4_398 != Mem395[r11 + 839:word32] l0000AB4C
// DataOut: fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB4C:
	branch r4_398 != Mem395[r11 + 844:word32] l0000AB98
// DataOut: fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB98:
	branch r4_398 != Mem395[r11 + 849:word32] l0000ABC0
// DataOut: fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ABC0:
	branch r4_398 != Mem395[r11 + 854:word32] l0000ABE8
// DataOut: fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ABE8:
	branch r4_398 != Mem395[r11 + 859:word32] l0000AC10
// DataOut: fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC10:
	branch r4_398 != Mem395[r11 + 864:word32] l0000AC38
// DataOut: fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC38:
	branch r4_398 != Mem395[r11 + 869:word32] l0000AC42
// DataOut: fp r0 r10 r11 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC42:
	word32 sp_465 = sp_188 - 0x00000004
	Mem466[sp_465:word32] = 0x00000001
	Mem468[sp_465 - 0x00000004:word32] = r3_396 + 4
	Mem471[sp_465 - 0x00000008:word32] = r11 + 874
	Mem474[sp_465 - 0x0000000C:word32] = r10 + 1515
	word32 sp_478
	byte CVZN_479
	byte ZN_480
	bool C_481
	bool V_482
	word32 r10_483
	bool Z_484
	bool N_485
	word32 r8_486
	word32 r0_487
	word32 fp_488
	word32 ap_489
	word32 r11_490
	byte CZN_491
	word32 r2_492
	word32 r3_493
	word32 r6_494
	byte VZN_495
	word32 r9_496
	word32 r7_497
	word32 r5_498
	word32 r4_499
	call Mem474[Mem474[sp_465 + 0x00000004:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_190,C_476,CVZN_181,CZN_462,dwLoc0C_72,dwLoc10_6,dwLoc14_8,fp_189,N_186,r0_185,r10_180,r11_178,r2_183,r3_396,r4_398,r5_397,r6_177,r7_174,r8_179,r9_175,sp_472,V_477,VZN_176,Z_463,ZN_475
		defs: ap_489,C_481,CVZN_479,CZN_491,fp_488,N_485,r0_487,r10_483,r11_490,r2_492,r3_493,r4_499,r5_498,r6_494,r7_497,r8_486,r9_496,sp_478,V_482,VZN_495,Z_484,ZN_480
	Mem501[sp_478 - 0x00000004:word32] = r0_487
	Mem504[sp_478 - 0x00000008:word32] = r10_483 + 1515
	Mem506[sp_478 - 0x0000000C:word32] = r10_483
	word32 r2_507 = Mem506[r10_483 + 0x0000C839:word32]
	byte CVZN_512
	byte ZN_513
	bool C_514
	bool V_515
	bool Z_517
	bool N_518
	word32 ap_522
	byte CZN_524
	word32 r2_525
	word32 r3_526
	word32 r6_527
	byte VZN_528
	word32 r9_529
	word32 r7_530
	word32 r5_531
	word32 r4_532
	call Mem506[r2_507:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_489,C_509,CVZN_479,CZN_491,dwLoc0C_72,dwLoc10_6,dwLoc14_8,fp_488,N_485,r0_487,r10_483,r11_490,r2_507,r3_493,r4_499,r5_498,r6_494,r7_497,r8_486,r9_496,sp_505,V_510,VZN_495,Z_484,ZN_508
		defs: ap_522,C_514,CVZN_512,CZN_524,fp_521,N_518,r0_520,r10_516,r11_523,r2_525,r3_526,r4_532,r5_531,r6_527,r7_530,r8_519,r9_529,sp_511,V_515,VZN_528,Z_517,ZN_513
// DataOut: fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC3F:
// DataOut: fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC17:
	Mem458[sp_188 - 0x00000004:uint32] = (uint32) 0x0001936C
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ABEF:
	Mem449[sp_188 - 0x00000004:uint32] = (uint32) 0x00019368
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ABC7:
	Mem440[sp_188 - 0x00000004:uint32] = (uint32) 0x00019364
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB9F:
	Mem431[sp_188 - 0x00000004:uint32] = (uint32) 0x00019360
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB53:
	Mem422[sp_188 - 0x00000004:uint32] = (uint32) 0x0001935C
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB07:
	Mem413[sp_188 - 0x00000004:uint32] = (uint32) 0x00019358
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AAE2:
	Mem404[sp_188 - 0x00000004:uint32] = (uint32) 0x00019354
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AAC9:
// DataOut: fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC68:
	branch (uint32) Mem192[Mem192[sp_188 + 16:word32]:word16] == 0x0000000C l0000AC74
// DataOut: fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC74:
	Mem229[sp_188 + 4:word32] = 0x00000002
	word32 r3_230 = Mem229[sp_188 + 16:word32]
	word32 r2_231 = (uint32) Mem229[r3_230 + 2:word16]
	Mem235[r8 + 0x000102EC:word32] = 0x00000000
	word32 sp_236 = sp_188 - 0x00000004
	Mem237[sp_236:word32] = r2_231 - 0x00000004
	Mem239[sp_236 - 0x00000004:word32] = r3_230 + 8
	Mem241[sp_236 - 0x00000008:word32] = 0x00000000
	word32 r6_233 = r3_230 + 8
	*r6Out = r6_233
	word32 r2_245
	word32 r3_246
	word32 ap_247
	r0 = fn0000CFBA(r0, r3_230 + 8, r2_231 - 0x00000004, fp, out r2_245, out r3_246, out ap_247, out fp, out sp_188)
	branch Mem241[r3_246 + 4:word32] == r0 l0000ACC6
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ACA1:
	Mem322[sp_188 - 0x00000004:word32] = 0x00000001
	Mem325[sp_188 - 0x00000008:word32] = r11 + 915
	Mem328[sp_188 - 0x0000000C:word32] = r10 + 1515
	word32 sp_332
	byte CVZN_333
	byte ZN_334
	bool C_335
	bool V_336
	word32 r10_337
	bool Z_338
	bool N_339
	word32 r8_340
	word32 r0_341
	word32 fp_342
	word32 ap_343
	word32 r11_344
	byte CZN_345
	word32 r2_346
	word32 r3_347
	word32 r6_348
	byte VZN_349
	word32 r9_350
	word32 r7_351
	word32 r5_352
	word32 r4_353
	call Mem328[Mem328[sp_188:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_247,C_330,CVZN_181,CZN_251,dwLoc0C_72,dwLoc10_6,dwLoc14_8,fp_248,N_186,r0_250,r10_180,r11_178,r2_245,r3_246,r4_172,r5_173,r6_233,r7_174,r8_179,r9_175,sp_326,V_331,VZN_176,Z_252,ZN_329
		defs: ap_343,C_335,CVZN_333,CZN_345,fp_342,N_339,r0_341,r10_337,r11_344,r2_346,r3_347,r4_353,r5_352,r6_348,r7_351,r8_340,r9_350,sp_332,V_336,VZN_349,Z_338,ZN_334
	Mem355[sp_332 - 0x00000004:word32] = r0_341
	Mem358[sp_332 - 0x00000008:word32] = r10_337 + 1515
	Mem360[sp_332 - 0x0000000C:word32] = r10_337
	word32 r2_361 = Mem360[r10_337 + 0x0000C839:word32]
	byte CVZN_366
	byte ZN_367
	bool C_368
	bool V_369
	bool Z_371
	bool N_372
	word32 ap_376
	byte CZN_378
	word32 r2_379
	word32 r3_380
	byte VZN_382
	word32 r9_383
	word32 r7_384
	word32 r5_385
	word32 r4_386
	call Mem360[r2_361:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_343,C_363,CVZN_333,CZN_345,dwLoc0C_72,dwLoc10_6,dwLoc14_8,fp_342,N_339,r0_341,r10_337,r11_344,r2_361,r3_347,r4_353,r5_352,r6_348,r7_351,r8_340,r9_350,sp_359,V_364,VZN_349,Z_338,ZN_362
		defs: ap_376,C_368,CVZN_366,CZN_378,fp_375,N_372,r0_374,r10_370,r11_377,r2_379,r3_380,r4_386,r5_385,r6_381,r7_384,r8_373,r9_383,sp_365,V_369,VZN_382,Z_371,ZN_367
	Mem389[sp_188 + 4:word32] = 0x00000000
	ap_247 = 0x00000000
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ACC6:
	branch ap_247 > 0x00000004 l0000ACCE
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ACCE:
	word32 r0_294 = (uint32) Mem241[r6_233:word16]
	branch r0_294 > 0x0000001F l0000AD14
// DataOut: ap fp r0 r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AD14:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ACD8_1:
	word32 sp_299
	byte CVZN_300
	byte ZN_301
	bool C_302
	bool V_303
	word32 r10_304
	bool Z_305
	bool N_306
	word32 r8_307
	word32 r0_308
	word32 fp_309
	word32 ap_310
	word32 r11_311
	byte CZN_312
	word32 r2_313
	word32 r3_314
	word32 r6_315
	byte VZN_316
	word32 r9_317
	word32 r7_318
	word32 r5_319
	word32 r4_320
	call 0x0000ACDC + (r0_294 - 0x00000003) * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_272,C_296,CVZN_263,CZN_273,dwLoc0C_72,dwLoc10_6,dwLoc14_8,fp_271,N_268,r0_294,r10_262,r11_260,r2_265,r3_264,r4_254,r5_255,r6_259,r7_293,r8_261,r9_292,sp_270,V_297,VZN_258,Z_267,ZN_295
		defs: ap_310,C_302,CVZN_300,CZN_312,fp_309,N_306,r0_308,r10_304,r11_311,r2_313,r3_314,r4_320,r5_319,r6_315,r7_318,r8_307,r9_317,sp_299,V_303,VZN_316,Z_305,ZN_301
	return r0_308
// DataOut: ap fp r0 r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ACCB:
// DataOut: fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ADA1:
	Mem279[r8 + 0x0001024C + (Mem241[r8 + 0x000102EC:word32] << 3):word16] = 0x0000
	Mem283[r8 + 0x0001024E + (Mem279[r8 + 0x000102EC:word32] << 3):word16] = 0x0000
	Mem287[r8 + 0x00010250 + (Mem283[r8 + 0x000102EC:word32] << 3):word32] = 0x00000000
// DataOut: fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC71:
// DataOut: fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ADD7:
	word32 r2_215 = (uint32) Mem192[Mem192[sp_188 + 16:word32] + 2:word16]
	Mem218[sp_188 + 12:word32] = Mem192[sp_188 + 12:word32] - (r2_215 + 0x00000004)
	Mem220[sp_188 + 8:word32] = Mem218[sp_188 + 8:word32] + (r2_215 + 0x00000004)
	branch Mem220[sp_188 + 12:word32] <= 0x00000000 l0000ADF2
// DataOut: fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ADEF:
// DataOut: fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AAAF:
// DataOut: fp r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid>

l0000ADF2:
	branch Mem17[sp_188 + 4:word32] != 0x00000001 l0000AE5F
// DataOut: fp r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ADF8:
	word32 r2_109 = Mem17[r8 + 308:word32]
	branch r2_109 == 0x00000000 l0000AE5C
// DataOut: fp r2 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AE5C:
	Mem161[sp_188 + 4:word32] = 0x00000000
// DataOut: fp r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ADFF:
	Mem115[r2_109 + 36:word32] = 0x00000000
	word32 r3_116 = Mem115[r8 + 316:word32]
	branch r3_116 == 0x00000000 l0000AE1E
// DataOut: fp r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AE09:
	Mem153[r3_116 + 4:word32] = Mem115[Mem115[r8 + 308:word32] + 36:word32]
	Mem156[Mem153[r8 + 308:word32] + 36:word32] = Mem153[r8 + 316:word32]
// DataOut: fp r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AE1E:
	word32 r3_122 = Mem115[r8 + 320:word32]
	*r3Out = r3_122
	branch r3_122 == 0x00000000 l0000AE3A
// DataOut: fp r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AE25:
	Mem144[r3_122 + 4:word32] = Mem115[Mem115[r8 + 308:word32] + 36:word32]
	Mem147[Mem144[r8 + 308:word32] + 36:word32] = Mem144[r8 + 320:word32]
// DataOut: fp r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AE3A:
	branch Mem115[r8 + 340:word32] == 0x00000000 l0000AE5F
// DataOut: fp r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AE40:
	word32 r3_132 = Mem115[r8 + 344:word32]
	*r3Out = r3_132
	Mem135[r3_132 + 4:word32] = Mem115[Mem115[r8 + 308:word32] + 36:word32]
	Mem138[Mem135[r8 + 308:word32] + 36:word32] = Mem135[r8 + 340:word32]
// DataOut: fp r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AE5F:
	word32 sp_106 = fp - 0x00000004
	word32 fp_107
	*fpOut = Mem17[sp_106 + 0x00000010:word32]
	word32 ap_108
	*apOut = Mem17[sp_106 + 0x0000000C:word32]
	return Mem17[sp_188 + 4:word32]
// DataOut: ap fp r0 r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AAA2:
	word32 fp_57
	*fpOut = Mem17[fp + 0x0000000C:word32]
	word32 ap_58
	*apOut = Mem17[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018 -20(fp):0x00000000 -16(fp):<invalid>

fn0000AA6A_exit:
// DataOut: ap fp r0 r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):r10 + 1515 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



void fn0000AE66(word32 r3, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r3
// LiveOut:
// Trashed: CVZN ap fp r2 sp
// Preserved:
fn0000AE66_entry:
// DataOut: fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000AE66:
	branch Mem0[r3 + 320:word32] == 0x00000000 l0000AE81
// DataOut: fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000AE76:
	fn000192B2()
// DataOut: fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// LocalsOut: fp(32)
// Terminates process

l0000AE81:
	branch Mem0[r3 + 328:word32] == 0x00000000 l0000AE92
// DataOut: fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 -8(fp):<invalid>
// LocalsOut: fp(32)

l0000AE87:
	fn000192B2()
// DataOut: fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 -8(fp):<invalid>
// LocalsOut: fp(32)
// Terminates process

l0000AE92:
	branch Mem0[r3 + 324:word32] == 0x00000000 l0000AEA3
// DataOut: fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 -8(fp):<invalid>
// LocalsOut: fp(32)

l0000AE98:
	fn000192B2()
// DataOut: fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 -8(fp):<invalid>
// LocalsOut: fp(32)
// Terminates process

l0000AEA3:
	branch Mem0[r3 + 316:word32] == 0x00000000 l0000AEB4
// DataOut: fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 -8(fp):<invalid>
// LocalsOut: fp(32)

l0000AEA9:
	fn000192B2()
// DataOut: fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 -8(fp):<invalid>
// LocalsOut: fp(32)
// Terminates process

l0000AEB4:
	branch Mem0[r3 + 340:word32] == 0x00000000 l0000AED5
// DataOut: fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 -8(fp):<invalid>
// LocalsOut: fp(32)

l0000AEBA:
// DataOut: fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 -8(fp):<invalid>
// LocalsOut: fp(32)

l0000AEBC:
	word32 r2_69 = Mem0[Mem0[r3 + 340:word32] + 4:word32]
	fn000192B2()
	Mem76[r3 + 340:word32] = r2_69
	branch r2_69 != 0x00000000 l0000AEBC
// DataOut: fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 -8(fp):<invalid>
// LocalsOut: fp(32)
// Terminates process

l0000AED5:
	word32 ap_38 = Mem0[r3 + 308:word32]
	branch ap_38 == 0x00000000 l0000AEED
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 -8(fp):<invalid>
// LocalsOut: fp(32)

l0000AEDC:
	branch ap_38 == r3 l0000AEED
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 ap:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l0000AEE4:
	fn000192B2()
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 ap:<invalid> r2:r3 -8(fp):<invalid>
// Terminates process

l0000AEED:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 ap:<invalid> r2:r3 -8(fp):<invalid>

fn0000AE66_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 ap:<invalid> r2:r3 fp:<invalid> -8(fp):<invalid>



void fn0000AEF2(word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn0000AEF2_entry:
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000AEF2:
	word32 r2_133
	word32 r1_5 = Mem0[ap + 4:word32]
	word32 r6_7 = (uint32) Mem0[r1_5 + 8:word16] & ~0xFFFFFFF8
	word32 r5_8 = (uint32) Mem0[r1_5 + 2:word16]
	branch r6_7 != 0x00000000 l0000AF18
// DataOut: ap fp r1 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000AF18:
	r2_133 = (uint32) Mem0[r1_5 + 10:word16]
// DataOut: ap fp r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid>
// LocalsOut: fp(32)

l0000AF10:
	r2_133 = r5_8 - 0x0000000C
// DataOut: ap fp r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid>
// LocalsOut: fp(32)

l0000AF1C:
	branch Mem0[ap + 16:word32] != 0x00000000 l0000AF28
// DataOut: ap fp r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l0000AF24:
	Mem129[ap + 16:word32] = r2_133
// DataOut: ap fp r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l0000AF28:
	word32 r0_20 = Mem0[ap + 8:word32]
	branch r0_20 == 0x00000000 l0000AF31
// DataOut: ap fp r0 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l0000AF2E:
	Mem124[r0_20:word32] = r2_133
// DataOut: ap fp r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l0000AF31:
	word32 r0_26 = Mem0[ap + 16:word32]
	branch r0_26 <= r2_133 l0000AF40
// DataOut: fp r0 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l0000AF40:
// DataOut: fp r0 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l0000AF3A:
// DataOut: fp r0 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l0000AF43:
	word32 fp_37
	word32 sp_38
	word32 ap_39 = fn000192B6(fp, out fp_37, out sp_38)
	branch r0_26 != 0x00000000 l0000AF54
// DataOut: ap fp r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid>

l0000AF54:
	branch Mem0[ap_39 + 12:word32] == 0x00000000 l0000AF6E
// DataOut: ap r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> -8(fp):<invalid>

l0000AF59:
	branch r2_133 >= Mem0[ap_39 + 16:word32] l0000AF6E
// DataOut: ap r3 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> -8(fp):<invalid>

l0000AF5F:
	Mem106[sp_38 - 0x00000004:word32] = Mem0[ap_39 + 16:word32]
	Mem109[sp_38 - 0x00000008:word32] = Mem106[ap_39 + 12:word32]
	Mem111[sp_38 - 0x0000000C:word32] = r0_26
	fn0001929E()
// DataOut: r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> -8(fp):<invalid>
// Terminates process

l0000AF6E:
	branch r6_7 > 0x00000002 l0000AF79
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> -8(fp):<invalid>

l0000AF79:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> -8(fp):<invalid>

l0000AF71_1:
	word32 sp_84
	byte CVZN_85
	word32 ap_86
	word32 r1_87
	byte ZN_88
	bool C_89
	bool V_90
	word32 r0_91
	word32 r6_92
	word32 r5_93
	bool Z_94
	word32 r2_95
	word32 r4_96
	byte CZN_97
	word32 r3_98
	bool N_99
	word32 fp_100
	call 0x0000AF75 + r6_7 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_39,C_81,CVZN,CZN_76,dwLoc08_32,fp_37,N_77,r0_79,r1_5,r2_30,r3_40,r4_15,r5_9,r6_7,sp_78,V_82,Z_72,ZN_80
		defs: ap_86,C_89,CVZN_85,CZN_97,fp_100,N_99,r0_91,r1_87,r2_95,r3_98,r4_96,r5_93,r6_92,sp_84,V_90,Z_94,ZN_88
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> -8(fp):<invalid>

l0000AF51:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> -8(fp):<invalid>

fn0000AEF2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> -8(fp):<invalid>



void fn0000AFDA(word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 sp
// Preserved:
fn0000AFDA_entry:
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000AFDA:
	word32 r0_8 = Mem0[ap + 8:word32]
	Mem10[ap + 8:word32] = Mem0[ap + 8:word32] - 0x00000001
	word32 r2_115 = 0x00000000
	word32 r3_117 = 0x00000000
	branch r0_8 != 0x00000000 l0000AFED
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000AFED:
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid>

l0000AFF0:
	branch r2_115 > 0x00000000 l0000B011
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid>

l0000AFF4:
	word32 r1_121 = r2_115 + 0x00000008
	branch r1_121 > 0x00000020 l0000B011
// DataOut: ap fp r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid>

l0000AFFD:
	word32 r0_125 = Mem10[ap + 12:word32]
	Mem127[ap + 12:word32] = Mem10[ap + 12:word32] + 0x00000001
	r3_117 = r3_117 | __ashift((uint32) Mem127[r0_125:byte], r2_115)
	r2_115 = r1_121
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid>

l0000B011:
	branch (r3_117 & 0x00000001) == 0x00000000 l0000B054
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid>

l0000B054:
	word32 r0_110 = Mem10[ap + 4:word32]
	Mem112[ap + 4:word32] = Mem10[ap + 4:word32] + 0x00000001
	Mem114[r0_110:byte] = 0x00
	r2_115 = r2_115 - 0x00000001
	r3_117 = (uint32) SLICE(r3_117, ui31, 1)
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid>

l0000B014:
	word32 r3_104 = (uint32) SLICE(r3_117, ui31, 1)
	word32 r2_105 = r2_115 - 0x00000001
	branch r2_105 >= 0x00000008 l0000B03D
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid>

l0000B020:
	branch r2_105 > 0xFFFFFFE8 l0000B03D
// DataOut: ap fp r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid>

l0000B029:
	word32 r0_99 = Mem10[ap + 12:word32]
	Mem101[ap + 12:word32] = Mem10[ap + 12:word32] + 0x00000001
	r3_104 = r3_104 | __ashift((uint32) Mem101[r0_99:byte], r2_105)
	r2_105 = r2_105 + 0x00000008
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid>

l0000B03D:
	word32 r0_84 = Mem10[ap + 4:word32]
	Mem86[ap + 4:word32] = Mem10[ap + 4:word32] + 0x00000001
	Mem88[r0_84:byte] = (byte) r3_104
	r2_115 = r2_105 - 0x00000008
	r3_117 = (uint32) SLICE(r3_104, ui24, 8)
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid>

l0000B064:
	word32 r0_66 = Mem10[ap + 8:word32]
	Mem68[ap + 8:word32] = Mem10[ap + 8:word32] - 0x00000001
	branch r0_66 != 0x00000000 l0000AFF0
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid>

l0000AFEA:
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid>

l0000B06F:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid>

fn0000AFDA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r2:<invalid> r3:<invalid>



word32 fn0000B072(word32 r0, word32 r2, word32 r6, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2 r6
// LiveOut: fp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn0000B072_entry:
// DataOut: ap fp r0 r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B072:
	word32 r2_21
	word32 r3_22
	word32 ap_23
	word32 fp_24
	word32 sp_25
	word32 r0_26 = fn0000CFBA(r0, r6, ap, fp, out r2_21, out r3_22, out ap_23, out fp_24, out sp_25)
	Mem28[r2_21 + 0x0000C5EF:word32] = r0_26
	branch Mem28[r2_21 + 68:word32] == 0x00000000 l0000B0A5
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000B0A5:
	Mem56[sp_25 - 0x00000004:word32] = 0x00000000
	Mem59[sp_25 - 0x00000008:word32] = Mem56[ap_23 + 8:word32]
	Mem62[sp_25 - 0x0000000C:word32] = Mem59[ap_23 + 0x00000004:word32]
	word32 sp_67
	byte CVZN_68
	byte ZN_69
	bool C_70
	bool V_71
	word32 ap_72
	word32 r2_73
	word32 r0_74
	bool Z_75
	bool N_76
	word32 fp_77
	word32 r3_78
	word32 r6_79
	call Mem62[Mem62[r3_22 + 0x00010194:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_23,C_64,CVZN,dwLoc08_7,dwLoc0C_10,dwLoc10_14,fp_24,N,r0_26,r2_21,r3_22,r6,sp_60,V_65,Z_30,ZN_63
		defs: ap_72,C_70,CVZN_68,fp_77,N_76,r0_74,r2_73,r3_78,r6_79,sp_67,V_71,Z_75,ZN_69
	return Mem62[fp_77 + 0x0000000C:word32]
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000B0A2:
	return Mem28[fp_24 + 0x0000000C:word32]
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

fn0000B072_exit:
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



void fn0000B192(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r1 r2 r3 r4
// LiveOut:
// Trashed: CVZN ap fp pc r0 r3 sp
// Preserved:
fn0000B192_entry:
// DataOut: ap fp pc r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B192:
	word32 sp_140 = fp - 0x00000004
	branch Mem0[r2 + 0x000101F4:word32] == 0x00000000 l0000B1DF
// DataOut: ap fp pc r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B1AB:
	byte CVZN_141
	byte ZN_142
	bool C_143
	bool V_144
	bool Z_146
	word32 r4_148
	word32 r3_149
	word32 r0_150
	byte VZN_151
	bool N_152
	word32 r1_154
	word32 fp_155
	call Mem0[Mem0[pc:word32]:word32] + 2 (retsize: 4; depth: 16)
		uses: ap,C_136,CVZN,dwLoc08_132,dwLoc0C_134,dwLoc10,dwLoc14,fp,N,pc_139,r0,r1,r2,r3,r4,sp_133,V_137,VZN,Z_6,ZN_135
		defs: ap_153,C_143,CVZN_141,fp_155,N_152,pc_147,r0_150,r1_154,r2_145,r3_149,r4_148,sp_140,V_144,VZN_151,Z_146,ZN_142
	word32 r3_156 = r3_149 + Mem0[r4_148 + 0x50D07FFE:real32]
	branch (r0_150 & 0x00000001) == 0x00000000 l0000B1C7
// DataOut: ap fp pc r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// LocalsOut: fp(32)

l0000B1C0:
	r3_156 = (int32) Mem0[r2 + 0x000101FC:int16]
// DataOut: ap fp pc r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C pc:pc + 0x00000004 r3:<invalid> -12(fp):0x00000000 -8(fp):r2 + 0x000101FC
// LocalsOut: fp(32)

l0000B1C7:
	branch (r3_156 & 0x00000001) != 0x00000000 l0000B1D9
// DataOut: ap fp pc r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C pc:pc + 0x00000004 r3:<invalid> -12(fp):0x00000000 -8(fp):r2 + 0x000101FC
// LocalsOut: fp(32)

l0000B1D9:
	Mem179[r2 + 0x000101F4:word32] = 0x00000000
// DataOut: ap fp pc r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C pc:pc + 0x00000004 r3:<invalid> -12(fp):0x00000000 -8(fp):r2 + 0x000101FC

l0000B1DF:
	word32 sp_39 = sp_140 - 0x00000008
	Mem41[sp_39:word64] = 0x0000000000000000
	Mem43[sp_39 - 0x00000004:word32] = 0x00000000
	Mem46[sp_39 - 0x00000008:word32] = Mem43[r2 + 0x000101F8:word32]
	Mem49[sp_39 - 0x0000000C:word32] = Mem46[ap + 8:word32]
	Mem52[sp_39 - 0x00000010:word32] = Mem49[ap + 4:word32]
	Mem55[sp_39 - 0x00000018:word64] = 0x0000000000000000
	Mem58[sp_39 - 0x0000001C:word32] = r2 + 0x000101FC
	Mem60[sp_39 - 0x00000020:word32] = 0x00000030
	Mem63[sp_39 - 0x00000024:word32] = Mem60[r2 + 0x000101F0:word32]
	Mem65[sp_39 - 0x00000028:word32] = 0x00000000
	word32 sp_81
	byte CVZN_82
	byte ZN_83
	bool C_84
	bool V_85
	word32 r2_86
	bool Z_87
	word32 pc_88
	word32 r4_89
	word32 r3_90
	word32 r0_91
	byte VZN_92
	bool N_93
	word32 ap_94
	word32 r1_95
	word32 fp_96
	call Mem65[Mem65[pc:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_38,C_67,CVZN,dwLoc08_33,dwLoc0C_34,dwLoc10,dwLoc14,fp,N,pc_70,r0,r1,r2_36,r3,r4,sp_64,V_68,VZN,Z_6,ZN_66
		defs: ap_94,C_84,CVZN_82,fp_96,N_93,pc_88,r0_91,r1_95,r2_86,r3_90,r4_89,sp_81,V_85,VZN_92,Z_87,ZN_83
	Mem98[Mem98[r0_91 + 20816:word32]:word32] = Mem65[r0_91 + 20816:word32] | 0x00013206
	branch (r0_91 & 0x00000001) != 0x00000000 l0000B21D
// DataOut: ap fp r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:pc + 0x00000004 r3:<invalid> -12(fp):0x00000000 -8(fp):r2 + 0x000101FC

l0000B21D:
	Mem118[r2_86 + 0x000101F4:word32] = 0x00000001
	Mem121[r2_86 + 0x000101F8:word32] = Mem118[r2_86 + 0x000101F8:word32] + (uint32) Mem118[ap_94 + 0x00000009:ui23]
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:<invalid> r3:<invalid> -52(fp):0x00000000 -48(fp):<invalid> -44(fp):0x00000030 -40(fp):r2 + 0x000101FC -36(fp):0x0000000000000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):0x00000000 -12(fp):0x0000000000000000 -8(fp):r2 + 0x000101FC

l0000B20E:
	Mem103[sp_81 - 0x00000004:word32] = r1_95
	Mem106[sp_81 - 0x00000008:word32] = r4_89 + 1011
	fn0000C022(r0_91, r2_86, r3_90, r4_89, ap_94, fp_96)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:<invalid> r3:<invalid> -52(fp):0x00000000 -48(fp):<invalid> -44(fp):0x00000030 -40(fp):r2 + 0x000101FC -36(fp):0x0000000000000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):0x00000000 -12(fp):0x0000000000000000 -8(fp):r2 + 0x000101FC

l0000B1CA:
	fn0000C022(r0_150, r2, r3_156, r4_148, ap, fp_155)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C pc:pc + 0x00000004 r3:<invalid> -12(fp):0x00000000 -8(fp):r2 + 0x000101FC
// Terminates process

fn0000B192_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r0:<invalid> sp:fp - 0x00000004 fp:<invalid> ap:<invalid> pc:<invalid> r3:<invalid> -60(fp):r4 + 1011 -56(fp):r1 -52(fp):0x00000000 -48(fp):<invalid> -44(fp):0x00000030 -40(fp):r2 + 0x000101FC -36(fp):0x0000000000000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):0x0000000000000000 -8(fp):r2 + 0x000101FC



void fn0000B86E(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r1 r2 r3 r4
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 sp
// Preserved:
fn0000B86E_entry:
// DataOut: ap fp pc r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B86E:
	word32 sp_14
	byte CVZN_15
	byte ZN_16
	bool C_17
	bool V_18
	word32 r2_19
	word32 pc_20
	word32 r1_21
	word32 r0_22
	word32 r3_23
	word32 ap_24
	word32 fp_25
	bool Z_26
	bool N_27
	word32 r4_28
	call Mem0[Mem0[pc:word32]:word32] + 2 (retsize: 4; depth: 12)
		uses: C_9,dwLoc08_7,pc_13,r2,sp_3,V_10,ZN_8
		defs: ap_24,C_17,CVZN_15,fp_25,N_27,pc_20,r0_22,r1_21,r2_19,r3_23,r4_28,sp_14,V_18,Z_26,ZN_16
	branch (r0_22 & 0x00000001) != 0x00000000 l0000B8AC
// DataOut: ap fp pc r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B890:
	fn0000C022(r0_22, r2_19, r3_23, r4_28, ap_24, fp_25)
	fn0000C022(Mem0[r2_19 + 312:word32], r2_19, r3_23, r4_28, ap_24, fp_25)
// DataOut: ap fp pc r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 pc:pc + 0x00000004 r1:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)
// Terminates process

l0000B8AC:
	Mem42[Mem0[r2_19 + 312:word32] + 34:word16] = Mem0[ap_24 + 8:word16]
	word32 r0_43 = Mem42[r2_19 + 312:word32]
	Mem45[r0_43 + 40:word32] = Mem42[ap_24 + 4:word32]
	word32 sp_54
	byte CVZN_55
	byte ZN_56
	bool C_57
	bool V_58
	word32 r2_59
	word32 pc_60
	word32 r1_61
	word32 r0_62
	word32 r3_63
	word32 ap_64
	word32 fp_65
	bool Z_66
	bool N_67
	word32 r4_68
	call Mem45[Mem45[pc_20:word32]:word32] + 2 (retsize: 4; depth: 16)
		uses: ap_24,C_50,CVZN_15,dwLoc08_7,dwLoc0C_48,dwLoc10_37,dwLoc14_38,dwLoc18_39,fp_25,N_27,pc_53,r0_43,r1_30,r2_19,r3_23,r4_28,sp_46,V_51,Z_26,ZN_49
		defs: ap_64,C_57,CVZN_55,fp_65,N_67,pc_60,r0_62,r1_61,r2_59,r3_63,r4_68,sp_54,V_58,Z_66,ZN_56
	branch (r0_62 & 0x00000001) != 0x00000000 l0000B8F1
// DataOut: ap fp r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 pc:pc + 0x00000004 r1:<invalid> -16(fp):r3 + 1188 -12(fp):<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l0000B8F1:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C pc:pc + 0x0000000C r1:<invalid> r0:<invalid> -16(fp):r3 + 1188 -12(fp):<invalid> -8(fp):<invalid>

l0000B8D1:
	fn0000C022(r0_62, r2_59, r3_63, r4_68, ap_64, fp_65)
	fn0000C022(Mem45[r2_59 + 312:word32], r2_59, r3_63, r4_68, ap_64, fp_65)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C pc:pc + 0x0000000C r1:<invalid> r0:<invalid> -16(fp):r3 + 1188 -12(fp):<invalid> -8(fp):<invalid>

fn0000B86E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r0:<invalid> sp:fp - 0x00000004 fp:<invalid> ap:<invalid> pc:pc + 0x0000000C r1:<invalid> -20(fp):r3 + 1223 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



void fn0000B8F6(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r1 r2 r3 r4
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 sp
// Preserved:
fn0000B8F6_entry:
// DataOut: ap fp pc r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B8F6:
	branch Mem0[r2 + 12:word32] == 0x00000000 l0000B940
// DataOut: ap fp pc r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B940:
	word32 sp_137
	byte CVZN_138
	byte ZN_139
	bool C_140
	bool V_141
	word32 r2_142
	bool Z_143
	word32 ap_144
	word32 r0_145
	word32 r4_146
	word32 r3_147
	word32 pc_148
	word32 r1_149
	bool N_150
	word32 fp_151
	call Mem0[Mem0[pc:word32]:word32] + 2 (retsize: 4; depth: 12)
		uses: ap,C_129,CVZN,dwLoc08_127,dwLoc0C,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,fp,N,pc_132,r0,r1,r2,r3,r4,sp_125,V_130,Z_6,ZN_128
		defs: ap_144,C_140,CVZN_138,fp_151,N_150,pc_148,r0_145,r1_149,r2_142,r3_147,r4_146,sp_137,V_141,Z_143,ZN_139
	branch (r0_145 & 0x00000001) != 0x00000000 l0000B96D
// DataOut: ap fp pc r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// LocalsOut: fp(32)

l0000B951:
	fn0000C022(r0_145, r2_142, r3_147, r4_146, ap_144, fp_151)
	fn0000C022(Mem0[r3_147 + 312:word32], r2_142, r3_147, r4_146, ap_144, fp_151)
// DataOut: ap fp pc r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 pc:pc + 0x00000004 r1:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)
// Terminates process

l0000B96D:
	Mem162[Mem0[r3_147 + 312:word32] + 34:word16] = Mem0[ap_144 + 8:word16]
	word32 r0_163 = Mem162[r3_147 + 312:word32]
	Mem165[r0_163 + 40:word32] = Mem162[ap_144 + 4:word32]
	word32 sp_174
	byte CVZN_175
	byte ZN_176
	bool C_177
	bool V_178
	word32 r2_179
	bool Z_180
	word32 ap_181
	word32 r0_182
	word32 r4_183
	word32 r3_184
	word32 pc_185
	word32 r1_186
	bool N_187
	word32 fp_188
	call Mem165[Mem165[pc_148:word32]:word32] + 2 (retsize: 4; depth: 16)
		uses: ap_144,C_170,CVZN_138,dwLoc08_127,dwLoc0C_168,dwLoc10_157,dwLoc14_158,dwLoc18_159,dwLoc1C,dwLoc20,dwLoc24,fp_151,N_150,pc_173,r0_163,r1_153,r2_142,r3_147,r4_146,sp_166,V_171,Z_143,ZN_169
		defs: ap_181,C_177,CVZN_175,fp_188,N_187,pc_185,r0_182,r1_186,r2_179,r3_184,r4_183,sp_174,V_178,Z_180,ZN_176
	branch (r0_182 & 0x00000001) != 0x00000000 l0000B9B2
// DataOut: ap fp r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 pc:pc + 0x00000004 r1:<invalid> -16(fp):r4 + 1261 -12(fp):<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l0000B992:
	fn0000C022(r0_182, r2_179, r3_184, r4_183, ap_181, fp_188)
	fn0000C022(Mem165[r3_184 + 312:word32], r2_179, r3_184, r4_183, ap_181, fp_188)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C pc:pc + 0x0000000C r1:<invalid> r0:<invalid> -16(fp):r4 + 1261 -12(fp):<invalid> -8(fp):<invalid>
// Terminates process

l0000B913:
	word32 r0_67 = Mem0[r2 + 0x0000C839:word32]
	word32 sp_82
	byte CVZN_83
	byte ZN_84
	bool C_85
	bool V_86
	word32 r2_87
	bool Z_88
	word32 ap_89
	word32 r0_90
	word32 r4_91
	word32 r3_92
	word32 pc_93
	word32 r1_94
	bool N_95
	word32 fp_96
	call Mem0[r0_67:word32] + 2 (retsize: 4; depth: 24)
		uses: ap,C_69,CVZN,dwLoc08_57,dwLoc0C_61,dwLoc10_64,dwLoc14_66,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,fp,N,pc,r0_67,r1,r2,r3,r4,sp_65,V_70,Z_6,ZN_68
		defs: ap_89,C_85,CVZN_83,fp_96,N_95,pc_93,r0_90,r1_94,r2_87,r3_92,r4_91,sp_82,V_86,Z_88,ZN_84
	word32 r0_106 = Mem0[r2_87 + 0x0000C839:word32]
	word32 sp_110
	byte CVZN_111
	byte ZN_112
	bool C_113
	bool V_114
	word32 r2_115
	bool Z_116
	word32 ap_117
	word32 r0_118
	word32 r4_119
	word32 r3_120
	word32 pc_121
	word32 r1_122
	bool N_123
	word32 fp_124
	call Mem0[r0_106:word32] + 2 (retsize: 4; depth: 40)
		uses: ap_89,C_108,CVZN_83,dwLoc08_57,dwLoc0C_61,dwLoc10_64,dwLoc14_66,dwLoc18_98,dwLoc1C_100,dwLoc20_103,dwLoc24_105,fp_96,N_95,pc_93,r0_106,r1_94,r2_87,r3_92,r4_91,sp_104,V_109,Z_88,ZN_107
		defs: ap_117,C_113,CVZN_111,fp_124,N_123,pc_121,r0_118,r1_122,r2_115,r3_120,r4_119,sp_110,V_114,Z_116,ZN_112
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000B9B2:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> pc:pc + 0x0000000C r1:<invalid> -36(fp):r2 -32(fp):r4 + 1259 -28(fp):0x00000001 -24(fp):0x00000000 -20(fp):r2 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

fn0000B8F6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> fp:<invalid> ap:<invalid> pc:pc + 0x0000000C r1:<invalid> -36(fp):r2 -32(fp):r4 + 1259 -28(fp):0x00000001 -24(fp):0x00000000 -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



void fn0000B9BA(word32 r0, word32 r2, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r0 r2
// LiveOut:
// Trashed: CVZN ap fp sp
// Preserved:
fn0000B9BA_entry:
// DataOut: fp r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B9BA:
	word32 sp_14
	byte CVZN_15
	byte ZN_16
	bool C_17
	bool V_18
	bool Z_19
	bool N_20
	word32 ap_21
	word32 r0_22
	word32 fp_23
	word32 r2_24
	call Mem0[Mem0[ap + 0x00010194:word32]:word32] + 2 (retsize: 4; depth: 20)
		uses: ap,C_10,dwLoc08_4,N_9,qwLoc10_7,sp_5,V_11,Z_8
		defs: ap_21,C_17,CVZN_15,fp_23,N_20,r0_22,r2_24,sp_14,V_18,Z_19,ZN_16
	branch r0_22 == 0x00000000 l0000B9DB
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000B9DB:
	branch Mem0[r2_24 + 12:word32] == 0x00000000 l0000B9E1
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 -16(fp):0x0000000000000000 -8(fp):0x00000001

l0000B9E1:
	word32 sp_50
	byte CVZN_51
	byte ZN_52
	bool C_53
	bool V_54
	bool Z_55
	bool N_56
	word32 ap_57
	word32 r0_58
	word32 fp_59
	word32 r2_60
	call Mem0[Mem0[ap_21 + 0x00010198:word32]:word32] + 2 (retsize: 4; depth: 20)
		uses: ap_21,C_45,CVZN_15,dwLoc08_4,fp_23,N_20,qwLoc10_7,r0_22,r2_24,sp_14,V_46,Z_44,ZN_43
		defs: ap_57,C_53,CVZN_51,fp_59,N_56,r0_58,r2_60,sp_50,V_54,Z_55,ZN_52
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 -16(fp):0x0000000000000000 -8(fp):0x00000001

l0000B9E0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 -16(fp):0x0000000000000000 -8(fp):0x00000001

l0000B9DA:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 -16(fp):0x0000000000000000 -8(fp):0x00000001

fn0000B9BA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 fp:<invalid> ap:<invalid> -16(fp):0x0000000000000000 -8(fp):0x00000001



word32 fn0000BBB2(word32 r5, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r5
// LiveOut: ap fp r0 r2 r3 r4 r6 r8 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r6 r7 r8 r9 sp
// Preserved:
fn0000BBB2_entry:
// DataOut: ap fp r10 r11 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000BBB2:
	word32 r2_5 = Mem0[ap + 4:word32]
	word32 r3_6 = Mem0[r2_5 + 20:word32] + 0xFFFFFFBA
	*r3Out = r3_6
	word32 r0_7 = Mem0[r2_5 + 16:word32]
	word32 r7_9 = Mem0[r2_5 + 8:word32]
	word32 r8_10 = Mem0[r2_5 + 4:word32]
	word32 r6_11 = Mem0[r2_5:word32]
	word32 r4_25 = (r3_6 + 0x00000001) / 0x00000004 - (r3_6 + 0x00000045) / 0x00000064 + (r3_6 + 0x00000171) / 0x00000190 + ((Mem0[r2_5 + 12:word32] - 0x00000001) + r3_6 * 0x0000016D) + (int32) Mem0[(r5 + 0x0001052A) + r0_7 * 2:int16]
	branch r0_7 <= 0x00000001 l0000BC63
// DataOut: fp r10 r11 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000BC63:
	word32 r4_38 = r4_25 * 0x00015180 + r7_9 * 0x00000E10
	*r4Out = r4_38
	word32 r6_40 = r6_11 + r8_10 * 0x0000003C
	*r6Out = r6_40
	word32 r2_34
	*r2Out = 0
	word32 r8_39
	*r8Out = r8_10 * 0x0000003C
	word32 sp_44
	*spOut = fp - 0x00000004
	word32 fp_45
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_46
	*apOut = Mem0[fp + 0x00000008:word32]
	return r6_40 + r4_38
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:DPB(r9, 0x00, 0)

fn0000BBB2_exit:
// DataOut: ap fp r0 r2 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:DPB(r9, 0x00, 0) fp:<invalid> ap:<invalid>

l0000BC28:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:DPB(r9, 0x00, 0)



void fn0000BC8A(word32 r0, word32 r5, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r5
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000BC8A_entry:
// DataOut: ap fp r0 r10 r11 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000BC8A:
	fn000192A2()
	Mem10[fp + -8:word32] = r0
	fn000192A6()
	word32 r2_20 = Mem10[ap + 4:word32]
	Mem24[r0 + 20:word32] = ((uint32) SLICE(r2_20, ui23, 9) & ~0xFFFFFF80) + 0x00000050
	Mem28[r0 + 16:word32] = ((uint32) SLICE(r2_20, ui27, 5) & ~0xFFFFFFF0) - 0x00000001
	Mem30[r0 + 12:word32] = Mem28[ap + 4:word32] & ~0xFFFFFFE0
	word32 r2_31 = Mem30[ap + 8:word32]
	Mem34[r0 + 8:word32] = (uint32) SLICE(r2_31, ui21, 11) & ~0xFFFFFFE0
	Mem37[r0 + 4:word32] = (uint32) SLICE(r2_31, ui27, 5) & ~0xFFFFFFC0
	Mem40[r0:word32] = Mem37[ap + 8:word32] << 1 & ~0xFFFFFFC1
	word32 r2_47
	word32 r3_48
	word32 r4_49
	word32 r6_50
	word32 r8_51
	word32 ap_52
	word32 fp_53
	word32 sp_54
	word32 r0_55 = fn0000BBB2(r5, ap, fp, out r2_47, out r3_48, out r4_49, out r6_50, out r8_51, out ap_52, out fp_53, out sp_54)
	Mem59[fp_53 + 0xFFFFFFF8:word32] = r0_55
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000BD15_thunk_fn0000BD1C:
	fn0000BD1C(r0_55, r5, ap_52, fp_53)
	return
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: r1:<invalid> r2:0x00000003 r0:<invalid> sp:<invalid> r4:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -12(fp):0x00000000
// Terminates process

fn0000BC8A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp -12(fp):0x00000000



void fn0000BD08(word32 r5, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r5
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000BD08_entry:
// DataOut: ap fp r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000BD08:
	word32 r2_11
	word32 r3_12
	word32 r4_13
	word32 r6_14
	word32 r8_15
	word32 ap_16
	word32 fp_17
	word32 sp_18
	word32 r0_19 = fn0000BBB2(r5, ap, fp, out r2_11, out r3_12, out r4_13, out r6_14, out r8_15, out ap_16, out fp_17, out sp_18)
	Mem23[fp_17 + 0xFFFFFFF8:word32] = r0_19
// DataOut: ap fp r0 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000BD15_thunk_fn0000BD1C:
	fn0000BD1C(r0_19, r5, ap_16, fp_17)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r2:0x00000003 r3:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -4(fp):r1
// Terminates process

fn0000BD08_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp -4(fp):r1



void fn0000BD1C(word32 r0, word32 r5, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r5
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000BD1C_entry:
	word32 sp_1 = fp
// DataOut: ap fp r0 r10 r11 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000BD1C:
	word32 sp_9 = sp_1 - 0x00000004
	Mem11[sp_9:word32] = fp + -8
	fn000192A6()
	Mem16[sp_9 - 0x00000004:word32] = r0
	word32 r2_21
	word32 r3_22
	word32 r4_23
	word32 r6_24
	word32 r8_25
	word32 r0_29 = fn0000BBB2(r5, ap, fp, out r2_21, out r3_22, out r4_23, out r6_24, out r8_25, out ap, out fp, out sp_1)
	r0 = r4_23 - r0_29
	branch r0 == 0x00000000 l0000BD3B
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -4(fp):fp + -8
// Terminates process

l0000BD33:
	Mem55[fp + -8:word32] = Mem16[fp + -8:word32] + r0
	branch r2_21 > 0x00000001 l0000BD1C
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -4(fp):fp + -8

l0000BD3B:
	branch Mem16[ap + 4:word32] <u 0x00007432 l0000BD53
// DataOut: fp r10 r11 r3 r4 r5 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -4(fp):fp + -8

l0000BD45:
	branch Mem16[fp + -8:word32] >=u 0x70000000 l0000BD53
// DataOut: fp r10 r11 r3 r4 r5 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -4(fp):fp + -8

l0000BD4F:
	Mem52[fp + -8:word32] = -0x00000001
// DataOut: fp r10 r11 r3 r4 r5 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -4(fp):fp + -8

l0000BD53:
	return
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -4(fp):fp + -8

fn0000BD1C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:<invalid> -4(fp):fp + -8



void fn0000BDC2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000BDC2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000BDC2_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000BDC2:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0000C022(word32 r0, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2 r3 r4
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000C022_entry:
// DataOut: ap fp pc r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C022:
	Mem4[fp + -16:uint16] = 0x00FF
	Mem7[fp + -14:byte] = 0x0E
	Mem9[fp + -13:byte] = 0x01
	Mem12[fp + -12:word32] = r3 + 0x000105C5
	Mem14[fp + -8:word32] = 0x00000000
	fn0001932E()
	branch (r0 & 0x00000001) != 0x00000000 l0000C094
// DataOut: ap fp pc r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000C094:
	word32 r0_94 = Mem14[fp + -8:word32]
	Mem96[r3 + 0x000105C5:byte] = 0x00
	Mem98[fp - 0x00000028:word32] = 0x00000001
	Mem101[fp - 0x0000002C:word32] = r3 + 0x000105C5
	Mem104[fp - 0x00000030:word32] = Mem101[ap + 4:word32]
	Mem107[fp - 0x00000034:word32] = r4 + 1642
	Mem110[fp - 0x00000038:word32] = r2 + 1515
	fn000192D2()
	Mem115[fp - 0x0000003C:word32] = r0_94
	Mem118[fp - 0x00000040:word32] = r2 + 1515
	Mem120[fp - 0x00000044:word32] = r2
	word32 r0_121 = Mem120[r2 + 0x0000C839:word32]
	word32 sp_125
	byte CVZN_126
	byte ZN_127
	bool C_128
	bool V_129
	word32 fp_130
	word32 r3_131
	bool Z_132
	bool N_133
	word32 ap_134
	word32 r0_135
	word32 r4_136
	word32 r2_137
	call Mem120[r0_121:word32] + 2 (retsize: 4; depth: 4)
		uses: ap,C_123,CVZN,dwLoc1C_20,dwLoc20_23,dwLoc24_27,fp,N,qwLoc18_17,r0_121,r2,r3,r4,sp_119,V_124,Z,ZN_122
		defs: ap_134,C_128,CVZN_126,fp_130,N_133,r0_135,r2_137,r3_131,r4_136,sp_125,V_129,Z_132,ZN_127
	return
// DataOut: ap fp pc r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: -36(fp):ap + 8 -32(fp):fp + -8 -28(fp):fp + -16 -24(fp):0x0000000000000000
// Terminates process

l0000C067:
	Mem46[fp - 0x00000028:word32] = 0x00000001
	Mem49[fp - 0x0000002C:word32] = Mem46[ap + 8:word32]
	Mem52[fp - 0x00000030:word32] = Mem49[ap + 4:word32]
	Mem56[fp - 0x00000034:word32] = r4 + 1619
	Mem60[fp - 0x00000038:word32] = r2 + 1515
	fn000192D2()
	Mem65[fp - 0x0000003C:word32] = r0
	Mem68[fp - 0x00000040:word32] = r2 + 1515
	Mem70[fp - 0x00000044:word32] = r2
	word32 r0_71 = Mem70[r2 + 0x0000C839:word32]
	word32 sp_78
	byte CVZN_79
	byte ZN_80
	bool C_81
	bool V_82
	word32 fp_83
	word32 r3_84
	bool Z_85
	bool N_86
	word32 ap_87
	word32 r0_88
	word32 r4_89
	word32 r2_90
	call Mem70[r0_71:word32] + 2 (retsize: 4; depth: 4)
		uses: ap,C_73,CVZN,dwLoc1C_20,dwLoc20_23,dwLoc24_27,fp,N,qwLoc18_17,r0_71,r2,r3,r4,sp_69,V_74,Z,ZN_72
		defs: ap_87,C_81,CVZN_79,fp_83,N_86,r0_88,r2_90,r3_84,r4_89,sp_78,V_82,Z_85,ZN_80
	return
// DataOut: ap fp pc r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: -36(fp):ap + 8 -32(fp):fp + -8 -28(fp):fp + -16 -24(fp):0x0000000000000000
// Terminates process

fn0000C022_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> fp:<invalid> ap:<invalid> -36(fp):ap + 8 -32(fp):fp + -8 -28(fp):fp + -16 -24(fp):0x0000000000000000



void fn0000C0CE(word32 r0, word32 r6, word32 ap, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap pc r0 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000C0CE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000C0CE_entry:
// DataOut: ap pc r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C0CE:
	branch Mem0[r6 + 0x00010A78:word32] != 0x00000000 l0000C0F7
// DataOut: ap pc r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C0E0:
	fn000192D6()
	branch r0 != 0x00000000 l0000C0F7
// DataOut: ap pc r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// LocalsOut: fp(32)

l0000C0F7:
	fn000192BE()
	Mem21[r6 + 0x00010A78:word32] = 0x00000001
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 -12(fp):<invalid> -8(fp):r6 + 0x000108C5

l0000C0F4:
// DataOut: pc r6 sp
// DataOut (flags): 
// SymbolicIn: -12(fp):<invalid> -8(fp):r6 + 0x000108C5

l0000C1CB:
	Mem41[fp - 0x00000010:word32] = r6 + 0x000109C5
	word32 sp_48
	byte CVZN_49
	byte ZN_50
	bool C_51
	bool V_52
	word32 r6_53
	bool Z_54
	word32 ap_55
	word32 r0_56
	word32 pc_57
	call Mem41[Mem41[pc:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap,C_43,dwLoc08_27,dwLoc0C_30,pc_47,r0,r6,sp_39,V_44,Z_36,ZN_42
		defs: ap_55,C_51,CVZN_49,pc_57,r0_56,r6_53,sp_48,V_52,Z_54,ZN_50
// DataOut:
// DataOut (flags): 
// SymbolicIn: -12(fp):<invalid> -8(fp):r6 + 0x000108C5



void fn0000C1FE(word32 r2, word32 r3, word32 r5, word32 r11, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 r2 r3 r5
// LiveOut:
// Trashed: CVZN ap r0 r4 sp
// Preserved:
fn0000C1FE_entry:
// DataOut: pc r11 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C1FE:
	branch Mem0[r2 + 0x00010AA4:word32] == 0xFFFFFFFF l0000C226
// DataOut: pc r11 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C226:
	Mem75[r2 + 0x00010AA4:word32] = 0x00000000
	word32 sp_88
	byte CVZN_89
	byte ZN_90
	bool C_91
	bool V_92
	word32 r3_93
	word32 r4_94
	word32 r2_95
	byte CZN_96
	bool Z_97
	bool N_98
	word32 pc_99
	word32 r11_100
	word32 ap_101
	word32 r0_102
	word32 r5_103
	call Mem75[Mem75[pc:word32]:word32] + 2 (retsize: 4; depth: 16)
		uses: ap,C_82,CVZN,CZN_7,dwLoc08_78,dwLoc0C_80,N,pc_85,r0,r11,r2,r3,r4_5,r5,sp_79,V_83,Z_8,ZN_81
		defs: ap_101,C_91,CVZN_89,CZN_96,N_98,pc_99,r0_102,r11_100,r2_95,r3_93,r4_94,r5_103,sp_88,V_92,Z_97,ZN_90
	Mem105[r11_100 + -3953:word16] = atomic_fetch_add(Mem75[r11_100 + -3953:word16], Mem75[r2_95 + 0x50E97FFE:word16])
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid>

l0000C223:
// DataOut: r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid>

l0000C327:
	word32 ap_10 = Mem0[r3 + 1511:word32]
	word32 r0_11 = Mem0[ap_10 + 12:word32]
	branch r0_11 > 0x00000010 l0000C354
// DataOut: r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid>

l0000C354:
	fn0000F457()
	Mem54[Mem54[r5 + 336:word32]:uint16] = 0x0000
	word32 sp_58
	byte CVZN_59
	byte ZN_60
	bool C_61
	bool V_62
	word32 r3_63
	word32 r4_64
	word32 r2_65
	byte CZN_66
	bool Z_67
	bool N_68
	word32 pc_69
	word32 r11_70
	word32 ap_71
	word32 r0_72
	word32 r5_73
	call fn40009A48 (retsize: 4; depth: 8)
		uses: ap_10,C_56,CVZN,CZN_7,N,pc,r0_11,r11,r2,r3,r4_5,r5,sp_2,V_57,Z_8,ZN_55
		defs: ap_71,C_61,CVZN_59,CZN_66,N_68,pc_69,r0_72,r11_70,r2_65,r3_63,r4_64,r5_73,sp_58,V_62,Z_67,ZN_60
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> ap:<invalid> r0:<invalid>
// Terminates process

l0000C330_1:
	word32 sp_37
	byte CVZN_38
	byte ZN_39
	bool C_40
	bool V_41
	word32 r3_42
	word32 r4_43
	word32 r2_44
	byte CZN_45
	bool Z_46
	bool N_47
	word32 pc_48
	word32 r11_49
	word32 ap_50
	word32 r0_51
	word32 r5_52
	call 0x0000C334 + r0_11 * 0x00000002 (retsize: 4; depth: 8)
		uses: ap_10,C_13,CVZN,CZN_7,N,pc,r0_11,r11,r2,r3,r4_5,r5,sp_2,V_14,Z_8,ZN_12
		defs: ap_50,C_40,CVZN_38,CZN_45,N_47,pc_48,r0_51,r11_49,r2_44,r3_42,r4_43,r5_52,sp_37,V_41,Z_46,ZN_39
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> ap:<invalid> r0:<invalid>

fn0000C1FE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> ap:<invalid> r0:<invalid>



word32 fn0000C6FA(word32 r0, word32 r6, word32 r7, word32 r8, word32 r10, word32 ap, word32 fp, word32 pc, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r10 r6 r7 r8
// LiveOut: ap fp r2 sp
// Trashed: CVZN ap fp pc r0 r2 r3 r9 sp
// Preserved:
fn0000C6FA_entry:
// DataOut: ap fp pc r0 r10 r2 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C6FA:
	word32 r9_5 = Mem0[ap + 8:word32] & ~0xFFFFFFF8
	branch r9_5 == 0x00000000 l0000C729
// DataOut: ap fp pc r0 r10 r2 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C729:
	Mem464[fp + -40:word16] = 0x0000
	Mem466[fp + -38:word16] = 0x0003
	Mem468[fp + -36:word32] = 0x00000000
	Mem470[fp + -32:word16] = 0x0000
	Mem472[fp + -30:word16] = 0x0004
	Mem474[fp + -28:word32] = 0x00000000
	Mem476[fp + -24:word16] = 0x0000
	Mem478[fp + -22:word16] = 0x0005
	Mem480[fp + -20:word64] = 0x0000000000000000
	Mem482[fp + -12:word64] = 0x0000000000000000
	Mem484[r6 + 0x00010CEC:word32] = r6 + 0x00010ABC
	Mem486[r6 + 0x00010CC4:word32] = Mem484[r6 + 0x00010CEC:word32]
	Mem488[r6 + 0x00010CC0:word32] = Mem486[r6 + 0x00010CC4:word32]
	Mem490[r6 + 0x00010CDC:word32] = Mem488[r6 + 0x00010CC0:word32]
	Mem492[r6 + 0x00010CE8:word32] = 0x00000000
	Mem494[r6 + 0x00010CCC:word64] = 0x0000000000000000
	Mem496[fp + -44:word32] = Mem494[ap + 4:word32]
	fn000192C6()
	Mem504[fp + -48:word16] = (word16) r0
	word32 r2_505 = (uint32) (word16) r0
	branch r2_505 <=u 0x000000FF l0000C7A5
// DataOut: fp pc r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>

l0000C7A5:
	Mem518[fp + 0xFFFFFF18:word32] = fp + -8
	Mem521[fp + 0xFFFFFF14:word32] = fp + -40
	Mem524[fp + 0xFFFFFF10:word32] = fp + -48
	word32 sp_530
	byte ZN_531
	bool C_532
	bool V_533
	word32 ap_534
	word32 r9_535
	bool Z_536
	word32 fp_537
	bool N_538
	word32 r6_539
	word32 r0_540
	word32 r2_541
	byte CZN_542
	byte CZ_543
	word32 pc_544
	byte VZN_545
	word32 r7_546
	byte CVZN_547
	word32 r3_548
	word32 r10_549
	word32 r8_550
	call Mem524[Mem524[pc:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap,C_526,CVZN,CZ_507,CZN_506,dwLocE4_499,dwLocE8,dwLocEC,fp,N,pc_529,r0,r10,r2_505,r3,r6,r7,r8,r9_5,sp_522,V_527,VZN,Z_7,ZN_525
		defs: ap_534,C_532,CVZN_547,CZ_543,CZN_542,fp_537,N_538,pc_544,r0_540,r10_549,r2_541,r3_548,r6_539,r7_546,r8_550,r9_535,sp_530,V_533,VZN_545,Z_536,ZN_531
	Mem552[Mem552[r0_540 + 20483:word32]:word32] = __ashift(0x00000004, Mem524[r2_541 + 0x50E87FFE:word32])
	word32 sp_555
	*spOut = fp_537 - 0x00000004
	word32 fp_556
	*fpOut = Mem552[fp_537 + 0x0000000C:word32]
	word32 ap_557
	*apOut = Mem552[fp_537 + 0x00000008:word32]
	return r2_541
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> -228(fp):<invalid>

l0000C7A1:
	word32 sp_513
	*spOut = fp - 0x00000004
	word32 fp_514
	*fpOut = Mem504[fp + 0x0000000C:word32]
	word32 ap_515
	*apOut = Mem504[fp + 0x00000008:word32]
	return r2_505
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> -228(fp):<invalid>

l0000C726:
// DataOut: ap fp r0 r10 r2 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>
// LocalsOut: fp(32)

l0000C919:
	branch r9_5 == 0x00000001 l0000C921
// DataOut: ap fp r0 r10 r2 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>
// LocalsOut: fp(32)

l0000C921:
	fn000192C6()
	branch r0 + Mem0[r6 + 0x00010CE8:word32] <=u 0xFFFFFF0E l0000C945
// DataOut: fp r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>

l0000C945:
	branch Mem0[r6 + 0x00010CE8:word32] != 0x00000000 l0000C974
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: r0:<invalid> -228(fp):r7 + 0x0000C701

l0000C94D:
	Mem452[r6 + 0x00010CEC:word32] = r6 + 0x00010ABC
	Mem454[r6 + 0x00010CC4:word32] = Mem452[r6 + 0x00010CEC:word32]
	Mem456[r6 + 0x00010CC0:word32] = Mem454[r6 + 0x00010CC4:word32]
	Mem458[r6 + 0x00010CCC:word64] = 0x0000000000000000
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: r0:<invalid> -228(fp):r7 + 0x0000C701

l0000C974:
	Mem415[r6 + 0x00010CDC:word32] = Mem0[r6 + 0x00010CEC:word32]
	word32 r2_416 = 0x00000000
	branch Mem415[r6 + 0x00010CE4:word32] != 0x00000000 l0000C98B
// DataOut: fp r2 r6
// DataOut (flags): 
// SymbolicIn: r0:<invalid> -228(fp):r7 + 0x0000C701

l0000C989:
	r2_416 = 0x00000001
// DataOut: fp r2 r6
// DataOut (flags): 
// SymbolicIn: r0:<invalid> r2:0x00000000 -228(fp):r7 + 0x0000C701

l0000C98B:
	Mem424[r6 + 0x00010CE0:word32] = r2_416
	word32 v64_425 = Mem424[r6 + 0x00010CD8:word32]
	Mem426[r6 + 0x00010CD0:word32] = v64_425
	branch v64_425 == 0x00000000 l0000C9AA
// DataOut: fp r2 r6
// DataOut (flags): 
// SymbolicIn: r0:<invalid> r2:<invalid> -228(fp):r7 + 0x0000C701

l0000C99F:
	r2_416 = Mem426[r6 + 0x00010CDC:word32]
	Mem445[r2_416 + -1:byte] = 0x2E
// DataOut: fp r2 r6
// DataOut (flags): 
// SymbolicIn: r0:<invalid> r2:<invalid> -228(fp):r7 + 0x0000C701

l0000C9AA:
	Mem434[Mem434[r6 + 0x00010CDC:word32]:byte] = 0x00
	word32 sp_440
	*spOut = fp - 0x00000004
	word32 fp_441
	*fpOut = Mem434[fp + 0x0000000C:word32]
	word32 ap_442
	*apOut = Mem434[fp + 0x00000008:word32]
	return r2_416
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: r0:<invalid> r2:<invalid> -228(fp):r7 + 0x0000C701

l0000C941:
	word32 sp_406
	*spOut = fp - 0x00000004
	word32 fp_407
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_408
	*apOut = Mem0[fp + 0x00000008:word32]
	return r2
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: r0:<invalid> -228(fp):r7 + 0x0000C701

l0000C91E:
// DataOut: ap fp r0 r10 r2 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>
// LocalsOut: fp(32)

l0000C9B3:
	branch r9_5 == 0x00000002 l0000C9BB
// DataOut: ap fp r0 r10 r2 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>
// LocalsOut: fp(32)

l0000C9BB:
	fn000192C6()
	branch Mem0[r6 + 0x00010CE0:word32] == 0x00000000 l0000C9FB
// DataOut: ap fp r3 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>
// Terminates process

l0000C9D0:
	word32 r2_366 = Mem0[r6 + 0x00010CDC:word32]
	Mem368[r6 + 0x00010CDC:word32] = Mem0[r6 + 0x00010CDC:word32] + 0x00000001
	Mem370[r2_366:byte] = 0x5B
	branch r0 == 0x00000000 l0000C9F5
// DataOut: ap fp r3 r6 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -228(fp):<invalid>

l0000C9E5:
	word32 r2_383 = Mem370[r6 + 0x00010CDC:word32]
	Mem385[r6 + 0x00010CDC:word32] = Mem370[r6 + 0x00010CDC:word32] + 0x00000001
	Mem387[r2_383:byte] = 0x2E
// DataOut: ap fp r3 r6 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 r2:<invalid> -228(fp):<invalid>

l0000C9F5:
	Mem378[r6 + 0x00010CE0:word32] = 0x00000000
// DataOut: ap fp r3 r6 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 r2:<invalid> -228(fp):<invalid>

l0000C9FB:
	branch r0 != 0x00000001 l0000CA06
// DataOut: ap fp r3 r6 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 r2:<invalid> -228(fp):<invalid>

l0000CA00:
	branch Mem0[Mem0[ap + 4:word32]:byte] == 0x2E l0000CA7C
// DataOut: ap fp r3 r6 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 r2:<invalid> -228(fp):<invalid>

l0000CA06:
	branch r0 != 0x00000002 l0000CA3C
// DataOut: ap fp r3 r6 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 r2:<invalid> -228(fp):<invalid>

l0000CA0B:
	word32 r2_343 = Mem0[ap + 4:word32]
	branch Mem0[r2_343:byte] != 0x2E l0000CA3C
// DataOut: ap fp r2 r3 r6 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 r2:<invalid> -228(fp):<invalid>

l0000CA14:
	branch Mem0[r2_343 + 1:byte] != 0x2E l0000CA3C
// DataOut: ap fp r3 r6 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 r2:<invalid> -228(fp):<invalid>

l0000CA3C:
	word32 r2_316 = Mem0[r6 + 0x00010CDC:word32] - Mem0[r6 + 0x00010CBC:word32] + r0
	branch r2_316 <= 0x000000FF l0000CA58
// DataOut: ap fp r2 r3 r6 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 r2:<invalid> -228(fp):<invalid>

l0000CA58:
	Mem329[fp + 0xFFFFFF18:word32] = Mem0[ap + 4:word32]
	Mem332[fp + 0xFFFFFF14:word32] = Mem329[r6 + 0x00010CDC:word32]
	fn000192BE()
	Mem337[r6 + 0x00010CDC:word32] = Mem332[r6 + 0x00010CDC:word32] + r0
	Mem339[Mem339[r6 + 0x00010CDC:word32]:byte] = 0x2E
	Mem341[r6 + 0x00010CDC:word32] = Mem339[r6 + 0x00010CDC:word32] + 0x00000001
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: r3:r0 r2:<invalid> -228(fp):<invalid>
// Terminates process

l0000CA54:
	word32 sp_324
	*spOut = fp - 0x00000004
	word32 fp_325
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_326
	*apOut = Mem0[fp + 0x00000008:word32]
	return r2_316
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 r2:<invalid> -228(fp):<invalid>

l0000CA1A:
	word32 r2_350 = Mem0[r6 + 0x00010CDC:word32]
	Mem352[r6 + 0x00010CDC:word32] = Mem0[r6 + 0x00010CDC:word32] + 0x00000001
	Mem354[r2_350:byte] = 0x2D
	word32 r2_355 = Mem354[r6 + 0x00010CDC:word32]
	Mem357[r6 + 0x00010CDC:word32] = Mem354[r6 + 0x00010CDC:word32] + 0x00000001
	Mem359[r2_355:byte] = 0x2E
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: r3:r0 r2:<invalid> -228(fp):<invalid>

l0000CA7C:
	word32 r2_298 = Mem0[r6 + 0x00010CDC:word32]
	Mem300[r6 + 0x00010CD0:word32] = r2_298 - Mem0[r6 + 0x00010CC4:word32]
	Mem302[r2_298:byte] = 0x00
	word32 sp_308
	*spOut = fp - 0x00000004
	word32 fp_309
	*fpOut = Mem302[fp + 0x0000000C:word32]
	word32 ap_310
	*apOut = Mem302[fp + 0x00000008:word32]
	return r2_298
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 r2:<invalid> -228(fp):<invalid>

l0000C9B8:
// DataOut: ap fp r0 r10 r2 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>
// LocalsOut: fp(32)

l0000CA94:
	branch r9_5 == 0x00000003 l0000CA9C
// DataOut: ap fp r0 r10 r2 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>
// LocalsOut: fp(32)

l0000CA9C:
	branch (Mem0[ap + 8:word32] & 0x00000008) != 0x00000000 l0000CAA4
// DataOut: ap fp r0 r10 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>
// LocalsOut: fp(32)

l0000CAA4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>

l0000CAA1:
// DataOut: ap fp r0 r10 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>
// LocalsOut: fp(32)

l0000CB5C:
	word32 sp_124
	Mem113[Mem113[r6 + 0x00010CDC:word32]:byte] = 0x00
	branch Mem113[r6 + 0x00010CD0:word32] == 0x00000000 l0000CBE0
// DataOut: ap fp r0 r10 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>
// LocalsOut: fp(32)

l0000CBE0:
	fn000192D6()
	sp_124 = fp + 0xFFFFFF18
	branch r0 == 0x00000000 l0000CC2B
// DataOut: ap fp r0 r10 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>

l0000CBF5:
	Mem248[fp + 0xFFFFFF14:word32] = r8 + 1717
	Mem251[fp + 0xFFFFFF10:word32] = r6 + 0x00010BBC
	fn000192BE()
	Mem256[r6 + 0x00010CF0:word32] = 0x00000000
	Mem258[fp + 0xFFFFFF0C:word32] = 0x00000000
	Mem261[fp + 0xFFFFFF08:word32] = r6 + 0x00010BBC
	fn00019286()
	sp_124 = fp + 0xFFFFFF08
	branch r0 == 0x00000000 l0000CC2B
// DataOut: ap fp r0 r10 r6 sp
// DataOut (flags): 
// SymbolicIn: -232(fp):r6 + 0x00010BBC -228(fp):r8 + 1705

l0000CC1F:
	branch Mem261[r10:word32] == 0x00000011 l0000CC2B
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: -232(fp):r6 + 0x00010BBC -228(fp):r8 + 1705

l0000CC24:
	Mem273[r6 + 0x00010CF0:word32] = 0x00000001
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: -232(fp):r6 + 0x00010BBC -228(fp):r8 + 1705

l0000CB6A:
	Mem173[Mem173[r6 + 0x00010CC4:word32]:byte] = 0x5D
	r0 = fn0000E2EA(r8, ap, fp, out r6, out ap, out fp, out sp_124)
	branch r0 != 0x00000000 l0000CB9B
// DataOut: ap fp r0 r10 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>

l0000CB9B:
	Mem195[r6 + 0x00010CF0:word32] = 0x00000000
	Mem197[sp_124 - 0x00000004:word32] = 0x00000000
	Mem200[sp_124 - 0x00000008:word32] = r6 + 0x00010ABC
	fn00019286()
	branch r0 == 0x00000000 l0000CBC4
// DataOut: ap fp r0 r10 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -236(fp):r6 + 0x00010BBC -232(fp):r6 + 0x00010ABC -228(fp):0x7FFFFFFF

l0000CBC4:
	Mem228[r6 + 0x00010AB8:word32] = 0x00000001
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: -236(fp):r6 + 0x00010BBC -232(fp):r6 + 0x00010ABC -228(fp):0x7FFFFFFF

l0000CBB4:
	branch Mem200[r10:word32] == 0x00000011 l0000CBCB
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: -236(fp):r6 + 0x00010BBC -232(fp):r6 + 0x00010ABC -228(fp):0x7FFFFFFF

l0000CBB9:
	Mem223[r6 + 0x00010CF0:word32] = 0x00000001
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: -236(fp):r6 + 0x00010BBC -232(fp):r6 + 0x00010ABC -228(fp):0x7FFFFFFF

l0000CBCB:
	Mem212[sp_124 - 0x0000000C:word32] = r6 + 0x00010ABC
	Mem215[sp_124 - 0x00000010:word32] = r6 + 0x00010BBC
	fn000192BE()
	sp_124 = sp_124 - 0x00000010
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: -236(fp):r6 + 0x00010BBC -232(fp):r6 + 0x00010ABC -228(fp):0x7FFFFFFF

l0000CB98:
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -236(fp):r6 + 0x00010BBC -232(fp):r6 + 0x00010ABC -228(fp):0x7FFFFFFF

l0000CC2B:
	word32 sp_127 = sp_124 - 0x00000004
	Mem129[sp_127:word32] = Mem113[ap + 4:word32]
	fn000192C6()
	word32 r2_134 = Mem129[r6 + 0x00010CDC:word32] - (r6 + 0x00010ABC)
	word32 r0_135 = r0 + r2_134
	branch r0_135 <=u 0x000000FF l0000CC54
// DataOut: ap fp r0 r2 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -236(fp):r6 + 0x00010BBC -232(fp):<invalid> -228(fp):<invalid>

l0000CC54:
	Mem148[sp_127 - 0x00000004:word32] = Mem129[ap + 4:word32]
	Mem151[sp_127 - 0x00000008:word32] = Mem148[r6 + 0x00010CDC:word32]
	fn000192BE()
	Mem157[sp_127 - 0x0000000C:word32] = Mem151[ap + 4:word32]
	fn000192C6()
	Mem162[r6 + 0x00010CDC:word32] = Mem157[r6 + 0x00010CDC:word32] + r0_135
	word32 sp_168 = fp - 0x00000004
	*spOut = sp_168
	word32 fp_169
	*fpOut = Mem162[sp_168 + 0x00000010:word32]
	word32 ap_170
	*apOut = Mem162[sp_168 + 0x0000000C:word32]
	return r2_134
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r0:<invalid> -236(fp):r6 + 0x00010BBC -232(fp):<invalid> -228(fp):<invalid>

l0000CC50:
	word32 sp_143 = fp - 0x00000004
	*spOut = sp_143
	word32 fp_144
	*fpOut = Mem129[sp_143 + 0x00000010:word32]
	word32 ap_145
	*apOut = Mem129[sp_143 + 0x0000000C:word32]
	return r2_134
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r0:<invalid> -236(fp):r6 + 0x00010BBC -232(fp):<invalid> -228(fp):<invalid>

l0000CA99:
// DataOut: ap fp r2 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>
// LocalsOut: fp(32)

l0000CC78:
	branch r9_5 != 0x00000004 l0000CCA2
// DataOut: ap fp r2 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>
// LocalsOut: fp(32)

l0000CCA2:
	branch r9_5 != 0x00000005 l0000CCAA
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>

l0000CCAA:
	word32 sp_109
	*spOut = fp - 0x00000004
	word32 fp_110
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_111
	*apOut = Mem0[fp + 0x00000008:word32]
	return r2
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>

l0000CCA7:
	word32 sp_102
	*spOut = fp - 0x00000004
	word32 fp_103
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_104
	*apOut = Mem0[fp + 0x00000008:word32]
	return r2
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>

l0000CC7D:
	branch Mem0[r6 + 0x00010CF0:word32] == 0x00000000 l0000CC89
// DataOut: ap fp r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>
// LocalsOut: fp(32)

l0000CC89:
	Mem76[Mem76[r6 + 0x00010CDC:word32]:byte] = 0x00
	fn000192BE()
	word32 sp_91
	*spOut = fp - 0x00000004
	word32 fp_92
	*fpOut = Mem76[fp + 0x0000000C:word32]
	word32 ap_93
	*apOut = Mem76[fp + 0x00000008:word32]
	return r2
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>

l0000CC85:
	word32 sp_59
	*spOut = fp - 0x00000004
	word32 fp_60
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_61
	*apOut = Mem0[fp + 0x00000008:word32]
	return r2
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r9:<invalid>

fn0000C6FA_exit:
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r0:<invalid> sp:fp - 0x00000004 fp:<invalid> ap:<invalid> pc:pc + 0x00000004 r3:r0 r9:<invalid> -236(fp):r6 + 0x00010BBC -232(fp):<invalid> -228(fp):<invalid>



void fn0000CE52(word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000CE52_entry:
// DataOut: ap fp pc r11 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000CE52:
	word32 r0_5 = Mem0[ap + 4:word32]
	branch r0_5 != 0x00000001 l0000CE64
// DataOut: ap fp pc r0 r11 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000CE64:
	branch r0_5 == 0x00000002 l0000CE85
// DataOut: ap fp pc r0 r11 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE69:
	branch r0_5 < 0x00000009 l0000CE73
// DataOut: ap fp pc r0 r11 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE6E:
	branch r0_5 <= 0x0000000B l0000CE85
// DataOut: ap fp pc r0 r11 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE73:
	branch r0_5 < 0x00000050 l0000CE8C
// DataOut: ap fp pc r0 r11 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE7C:
	branch r0_5 > 0x00000052 l0000CE8C
// DataOut: ap fp pc r11 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE8C:
// DataOut: ap fp pc r0 r11 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE85:
// DataOut: ap fp pc r0 r11 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE8F:
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE5E:
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE92:
	branch Mem0[ap + 4:word32] != 0x00000000 l0000CEA0
// DataOut: ap fp pc r0 r1 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r3:<invalid>
// LocalsOut: fp(32)

l0000CEA0:
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r3:<invalid> r1:<invalid>
// LocalsOut: fp(32)

l0000CE9A:
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r3:<invalid> r1:<invalid>
// LocalsOut: fp(32)

l0000CEB0:
	fn0001928E()
	return
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid>
// Terminates process

fn0000CE52_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 fp:<invalid> ap:<invalid> -8(fp):<invalid>



void fn0000CEBE(word32 r0, word32 r2, word32 r3, word32 fp, word32 pc, word32 dwArg7FD6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp pc r0 r2 r3
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 sp
// Preserved:
// Stack args: Stack +7FD6(32)
fn0000CEBE_entry:
// DataOut: fp pc r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +7FD6(32)

l0000CEBE:
	branch Mem0[r2 + 0x00010CF4:word32] >= 0x00000000 l0000CF36
// DataOut: fp pc r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +7FD6(32)

l0000CED0:
	word32 sp_56
	byte CVZN_57
	byte ZN_58
	bool C_59
	bool V_60
	word32 r2_61
	bool N_62
	bool Z_63
	word32 fp_64
	word32 pc_65
	word32 r0_66
	byte VZN_67
	word32 ap_68
	word32 r3_69
	byte CZN_70
	word32 r1_71
	call Mem0[Mem0[pc:word32]:word32] + 2 (retsize: 4; depth: 44)
		uses: ap,C_50,CVZN,CZN,dwLoc24_45,dwLoc28_48,fp,N_6,pc_53,qwLoc20_42,r0,r1,r2,r3,sp_46,V_51,VZN,Z,ZN_49
		defs: ap_68,C_59,CVZN_57,CZN_70,fp_64,N_62,pc_65,r0_66,r1_71,r2_61,r3_69,sp_56,V_60,VZN_67,Z_63,ZN_58
	Mem74[Mem74[r0_66 + 21328:word32]:real32] = Mem0[dwArg7FD6:real32]
	branch (r0_66 & 0x00000001) == 0x00000000 l0000CF13
// DataOut: fp pc r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018
// LocalsOut: fp(32)

l0000CF13:
	word32 r1_123
	branch (r3_69 & 0x00000001) == 0x00000000 l0000CF2C
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 pc:pc + 0x00000004 -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

l0000CF16:
	branch ((int32) Mem74[fp_64 + -14:int16] & 0x00000001) == 0x00000000 l0000CF2C
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 pc:pc + 0x00000004 -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

l0000CF1D:
	word32 r0_142 = (uint32) Mem74[fp_64 + -15:byte]
	branch r0_142 <u 0x00000005 l0000CF2C
// DataOut: fp r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 pc:pc + 0x00000004 r0:<invalid> -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

l0000CF2C:
	r1_123 = 0x00000018
// DataOut: fp r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 pc:pc + 0x00000004 r0:<invalid> -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

l0000CF26:
	r1_123 = r0_142
// DataOut: fp r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 pc:pc + 0x00000004 r0:<invalid> -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

l0000CF2F:
	Mem128[r2_61 + 0x00010CF4:word32] = r1_123
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 pc:pc + 0x00000004 r0:<invalid> r1:<invalid> -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

l0000CF36:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:pc + 0x00000004 r0:<invalid> r1:<invalid> -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

fn0000CEBE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> fp:<invalid> ap:<invalid> pc:pc + 0x00000004 r1:<invalid> -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

l0000CEE8:
	word32 sp_107
	byte CVZN_108
	byte ZN_109
	bool C_110
	bool V_111
	word32 r2_112
	bool N_113
	bool Z_114
	word32 fp_115
	word32 pc_116
	word32 r0_117
	byte VZN_118
	word32 ap_119
	word32 r3_120
	byte CZN_121
	word32 r1_122
	call Mem74[Mem74[pc_65:word32]:word32] + 2 (retsize: 4; depth: 92)
		uses: ap_68,C_103,CVZN_57,CZN_70,dwLoc24_45,dwLoc28_48,dwLoc3C_85,dwLoc40_88,dwLoc4C_94,dwLoc50_96,dwLoc54_99,dwLoc58_101,fp_64,N_62,pc_106,qwLoc20_42,qwLoc30_80,qwLoc38_83,qwLoc48_91,r0_66,r1_71,r2_61,r3_69,sp_100,V_104,VZN_67,Z_63,ZN_102
		defs: ap_119,C_110,CVZN_108,CZN_121,fp_115,N_113,pc_116,r0_117,r1_122,r2_112,r3_120,sp_107,V_111,VZN_118,Z_114,ZN_109
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 pc:pc + 0x00000004 -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000



void fn0000CF42(word32 r2, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r2
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000CF42_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000CF42_entry:
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000CF42:
	word32 r4_30
	fn000192D2()
	branch Mem0[r2 + 1748:byte] < 0x36 l0000CF80
// DataOut: r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000CF80:
	r4_30 = r2 + 1755
// DataOut: r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x00000004 -64(fp):fp + -44 -60(fp):r2 + 1767 -56(fp):r2 + 1783 -52(fp):r2 + 1791 -48(fp):r2 + 1796

l0000CF77:
	r4_30 = r2 + 1759
// DataOut: r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x00000004 -64(fp):fp + -44 -60(fp):r2 + 1767 -56(fp):r2 + 1783 -52(fp):r2 + 1791 -48(fp):r2 + 1796

l0000CF85:
	Mem32[fp - 0x00000048:word32] = r4_30
	Mem35[fp - 0x0000004C:word32] = r2 + 1746
	Mem38[fp - 0x00000050:word32] = r2 + 1740
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x00000004 r4:<invalid> -64(fp):fp + -44 -60(fp):r2 + 1767 -56(fp):r2 + 1783 -52(fp):r2 + 1791 -48(fp):r2 + 1796



word32 fn0000CFBA(word32 r0, word32 r6, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r6
// LiveOut: ap fp r0 r2 r3 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn0000CFBA_entry:
// DataOut: ap fp r0 r10 r11 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000CFBA:
	word32 r3_5
	*r3Out = Mem0[ap + 4:word32]
	word32 r2_6 = Mem0[ap + 8:word32]
	*r2Out = r2_6
	branch r2_6 != 0x00000000 l0000CFCA
// DataOut: fp r0 r10 r11 r2 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000CFCA:
	word32 r3_49
	word32 r4_50
	word32 r5_51
	word32 ap_52
	word32 fp_53
	word32 sp_54
	word32 r2_149
	word32 r0_55 = fn0000D39E(r0, r6, fp, out r2_149, out r3_49, out r4_50, out r5_51, out ap_52, out fp_53, out sp_54)
	word32 r3_154 = r3_49 ^ 0xFFFFFFFF
	*r3Out = r3_154
	branch Mem0[ap_52 + 12:word32] >=u 0x00000008 l0000CFE4
// DataOut: ap fp r0 r10 r11 r2 r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid>

l0000CFE4:
	word32 r2_100 = r2_149 + 0x00000001
	word32 r3_105 = (uint32) SLICE(r3_154, ui24, 8) ^ Mem0[r0_55 + (((uint32) Mem0[r2_149:byte] ^ r3_154) & ~0xFFFFFF00) * 4:word32]
	word32 r3_112 = (uint32) SLICE(r3_105, ui24, 8) ^ Mem0[r0_55 + (((uint32) Mem0[r2_100:byte] ^ r3_105) & ~0xFFFFFF00) * 4:word32]
	word32 r3_119 = (uint32) SLICE(r3_112, ui24, 8) ^ Mem0[r0_55 + (((uint32) Mem0[r2_100 + 0x00000001:byte] ^ r3_112) & ~0xFFFFFF00) * 4:word32]
	word32 r3_126 = (uint32) SLICE(r3_119, ui24, 8) ^ Mem0[r0_55 + (((uint32) Mem0[r2_100 + 0x00000002:byte] ^ r3_119) & ~0xFFFFFF00) * 4:word32]
	word32 r3_133 = (uint32) SLICE(r3_126, ui24, 8) ^ Mem0[r0_55 + (((uint32) Mem0[r2_100 + 0x00000003:byte] ^ r3_126) & ~0xFFFFFF00) * 4:word32]
	word32 r3_140 = (uint32) SLICE(r3_133, ui24, 8) ^ Mem0[r0_55 + (((uint32) Mem0[r2_100 + 0x00000004:byte] ^ r3_133) & ~0xFFFFFF00) * 4:word32]
	word32 r3_147 = (uint32) SLICE(r3_140, ui24, 8) ^ Mem0[r0_55 + (((uint32) Mem0[r2_100 + 0x00000005:byte] ^ r3_140) & ~0xFFFFFF00) * 4:word32]
	r3_154 = (uint32) SLICE(r3_147, ui24, 8) ^ Mem0[r0_55 + (((uint32) Mem0[r2_100 + 0x00000006:byte] ^ r3_147) & ~0xFFFFFF00) * 4:word32]
	*r3Out = r3_154
	Mem156[ap_52 + 12:word32] = Mem0[ap_52 + 12:word32] - 0x00000008
	r2_149 = r2_100 + 0x00000007
	*r2Out = r2_149
	branch Mem156[ap_52 + 12:word32] <u 0x00000008 l0000D0A7
// DataOut: ap fp r0 r10 r11 r2 r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid>

l0000D0A4:
// DataOut: ap fp r0 r10 r11 r2 r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid>

l0000CFE1:
// DataOut: ap fp r0 r10 r11 r2 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r1:<invalid>

l0000D0A7:
	branch Mem0[ap_52 + 12:word32] == 0x00000000 l0000D0C8
// DataOut: ap fp r0 r10 r11 r2 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid>

l0000D0AC:
	r3_154 = (uint32) SLICE(r3_154, ui24, 8) ^ Mem0[r0_55 + (((uint32) Mem0[r2_149:byte] ^ r3_154) & ~0xFFFFFF00) * 4:word32]
	*r3Out = r3_154
	word32 v28_93 = Mem0[ap_52 + 12:word32] - 0x00000001
	Mem94[ap_52 + 12:word32] = v28_93
	r2_149 = r2_149 + 0x00000001
	*r2Out = r2_149
	branch v28_93 != 0x00000000 l0000D0AC
// DataOut: ap fp r0 r10 r11 r2 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid>

l0000D0C8:
	word32 sp_80
	*spOut = fp_53 - 0x00000004
	word32 fp_81
	*fpOut = Mem0[fp_53 + 0x0000000C:word32]
	word32 ap_82
	*apOut = Mem0[fp_53 + 0x00000008:word32]
	return r3_154 ^ 0xFFFFFFFF
// DataOut: ap fp r0 r10 r11 r2 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid>

l0000CFC7:
	word32 sp_38
	*spOut = fp - 0x00000004
	word32 fp_39
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_40
	*apOut = Mem0[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 r10 r11 r2 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid>

fn0000CFBA_exit:
// DataOut: ap fp r0 r2 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r4:<invalid> r1:<invalid>



void fn0000D0D6(word32 r0, word32 r4, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r4
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000D0D6_entry:
// DataOut: ap fp r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D0D6:
	fn000192CE()
	word32 sp_3 = fp - 0x00000008
	word32 r5_12 = r0
	branch r0 == 0x00000000 l0000D10B
// DataOut: ap fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l0000D0EF:
	branch (Mem0[r4 + (int32) (Mem0[r0:byte] & ~0x80) * 4:word32] & 0x00000008) == 0x00000000 l0000D10B
// DataOut: ap fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: r5:r0 -8(fp):<invalid>

l0000D0FC:
	r5_12 = r5_12 + 0x00000001
	r0 = (int32) (Mem0[r5_12:byte] & ~0x80)
	branch (Mem0[r4 + r0 * 4:word32] & 0x00000008) != 0x00000000 l0000D0FC
// DataOut: ap fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: r5:<invalid> r2:<invalid> r0:<invalid> -8(fp):<invalid>

l0000D10B:
	branch r5_12 == 0x00000000 l0000D113
// DataOut: ap fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: r5:<invalid> r2:<invalid> r0:<invalid> -8(fp):<invalid>

l0000D10F:
	branch Mem0[r5_12:byte] != 0x00 l0000D13F
// DataOut: ap fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: r5:<invalid> r2:<invalid> r0:<invalid> -8(fp):<invalid>

l0000D113:
	Mem332[fp - 0x0000000C:word32] = Mem0[ap + 16:word32]
	fn000192CE()
	sp_3 = fp - 0x0000000C
	r5_12 = r0
	branch r0 == 0x00000000 l0000D13F
// DataOut: fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: r5:<invalid> r2:<invalid> r0:<invalid> -8(fp):<invalid>
// Terminates process

l0000D122:
	branch (Mem332[r4 + (int32) (Mem332[r0:byte] & ~0x80) * 4:word32] & 0x00000008) == 0x00000000 l0000D13F
// DataOut: fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: r5:r0 -8(fp):<invalid>

l0000D12F:
// DataOut: fp r4 r5 sp
// DataOut (flags): 
// SymbolicIn: r5:r0 r2:<invalid> -8(fp):<invalid>

l0000D130:
	r5_12 = r5_12 + 0x00000001
	r0 = (int32) (Mem332[r5_12:byte] & ~0x80)
	branch (Mem332[r4 + r0 * 4:word32] & 0x00000008) != 0x00000000 l0000D130
// DataOut: fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: r5:<invalid> r2:<invalid> r0:<invalid> -8(fp):<invalid>

l0000D13F:
	branch r5_12 == 0x00000000 l0000D147
// DataOut: fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: r5:<invalid> r2:<invalid> r0:<invalid> -8(fp):<invalid>

l0000D143:
	branch Mem0[r5_12:byte] != 0x00 l0000D148
// DataOut: fp r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: r5:<invalid> r2:<invalid> r0:<invalid> -8(fp):<invalid>

l0000D148:
	word32 sp_73 = sp_3 - 0x00000004
	Mem74[sp_73:word32] = r5_12
	fn000192C6()
	word32 r0_78 = r0 + 0x00000001
	Mem80[sp_73 - 0x00000004:word32] = r0_78
	word32 fp_84
	word32 sp_85
	word32 ap_86 = fn000192B6(fp, out fp_84, out sp_85)
	word32 r3_169 = r0_78
	branch r0_78 != 0x00000000 l0000D177
// DataOut: ap fp r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: r5:<invalid> r2:<invalid> r0:<invalid> -8(fp):<invalid>

l0000D177:
	Mem93[sp_85 - 0x00000004:word32] = r5_12
	Mem95[sp_85 - 0x00000008:word32] = r0_78
	fn000192BE()
	word32 r2_108 = r0_78
	word32 r6_100 = 0x00000000
	r0_107 = r0_78
// DataOut: ap fp r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: r0:r0 + 0x00000001 sp:<invalid> fp:<invalid> ap:<invalid> r3:r0 + 0x00000002 -8(fp):<invalid>
// Terminates process

l0000D188:
	word32 r0_107
	byte v24_111 = Mem95[r2_108:byte]
	r6_100 = r6_100 + 0x00000001
	r0_107 = DPB(r0_107, v24_111, 0)
	branch v24_111 == 0x00 l0000D1AF
// DataOut: ap fp r0 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid>

l0000D18F:
	r0_107 = (int32) (v24_111 & ~0x80)
	branch (Mem95[r4 + r0_107 * 4:word32] & 0x00000008) != 0x00000000 l0000D1AF
// DataOut: ap fp r0 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid>

l0000D19B:
// DataOut: ap fp r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid>

l0000D19C:
	r2_108 = r2_108 + 0x00000001
	byte v26_319 = Mem95[r2_108:byte]
	r0_107 = DPB(r0_107, v26_319, 0)
	branch v26_319 == 0x00 l0000D1AF
// DataOut: ap fp r0 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid>

l0000D1A3:
	r0_107 = (int32) (v26_319 & ~0x80)
	branch (Mem95[r4 + r0_107 * 4:word32] & 0x00000008) == 0x00000000 l0000D19C
// DataOut: ap fp r0 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid>

l0000D1AF:
	byte v29_120 = Mem95[r2_108:byte]
	r1 = DPB(r1, v29_120, 0)
	branch v29_120 == 0x00 l0000D1D8
// DataOut: ap fp r0 r1 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid>

l0000D1B4:
	r0_107 = (int32) (v29_120 & ~0x80)
	branch (Mem95[r4 + r0_107 * 4:word32] & 0x00000008) == 0x00000000 l0000D1D8
// DataOut: ap fp r0 r1 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid>

l0000D1C1:
// DataOut: ap fp r0 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid>

l0000D1C4:
	r2_108 = r2_108 + 0x00000001
	byte v31_299 = Mem95[r2_108:byte]
	r1 = DPB(r1, v31_299, 0)
	branch v31_299 == 0x00 l0000D1D8
// DataOut: ap fp r0 r1 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid>

l0000D1CB:
	r0_107 = (int32) (v31_299 & ~0x80)
	branch (Mem95[r4 + r0_107 * 4:word32] & 0x00000008) != 0x00000000 l0000D1C4
// DataOut: ap fp r0 r1 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid>

l0000D1D8:
	branch (byte) r1 != 0x00 l0000D188
// DataOut: ap fp r0 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid>

l0000D1DC:
	Mem139[sp_85 - 0x0000000C:word32] = r6_100 + Mem95[Mem95[ap_86 + 4:word32]:word32] + 0x00000001 << 2
	word32 fp_142
	word32 sp_143
	word32 ap_144 = fn000192B6(fp_84, out fp_142, out sp_143)
	branch r0_107 != 0x00000000 l0000D215
// DataOut: ap fp r3 r4 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid>

l0000D215:
	word32 r5_158 = Mem139[ap_144 + 8:word32]
	word32 r2_159 = Mem139[r5_158:word32]
	Mem161[r5_158:word32] = Mem139[r5_158:word32] + 0x00000004
	Mem163[r0_107:word32] = Mem161[r2_159:word32]
	word32 r6_157 = r0_107 + 0x00000004
// DataOut: ap fp r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> -8(fp):<invalid>

l0000D22C:
	Mem174[r6_157:word32] = r3_169
	r6_157 = r6_157 + 0x00000004
	word32 r0_176 = (int32) Mem174[r3_169:int8]
	branch r0_176 == 0x00000000 l0000D258
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l0000D234:
	branch (Mem174[r4 + (r0_176 & ~0xFFFFFF80) * 4:word32] & 0x00000008) != 0x00000000 l0000D258
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l0000D241:
// DataOut: ap fp r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l0000D244:
	r3_169 = r3_169 + 0x00000001
	r0_176 = (int32) Mem174[r3_169:int8]
	branch r0_176 == 0x00000000 l0000D258
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l0000D24B:
	branch (Mem174[r4 + (r0_176 & ~0xFFFFFF80) * 4:word32] & 0x00000008) == 0x00000000 l0000D244
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l0000D258:
	branch r0_176 == 0x00000000 l0000D25E
// DataOut: ap fp r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l0000D25C:
	Mem260[r3_169:byte] = 0x00
	r3_169 = r3_169 + 0x00000001
// DataOut: ap fp r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l0000D25E:
	word32 r0_191 = (int32) Mem174[r3_169:int8]
	branch r0_191 == 0x00000000 l0000D284
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l0000D263:
	branch (Mem174[r4 + (r0_191 & ~0xFFFFFF80) * 4:word32] & 0x00000008) == 0x00000000 l0000D284
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l0000D270:
	r3_169 = r3_169 + 0x00000001
	r0_191 = (int32) Mem174[r3_169:int8]
	branch r0_191 == 0x00000000 l0000D284
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l0000D277:
	branch (Mem174[r4 + (r0_191 & ~0xFFFFFF80) * 4:word32] & 0x00000008) != 0x00000000 l0000D270
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l0000D284:
	branch r0_191 != 0x00000000 l0000D22C
// DataOut: ap fp r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l0000D288:
	word32 r7_204 = r6_100 + Mem174[Mem174[ap_144 + 4:word32]:word32]
	word32 v40_205 = Mem174[ap_144 + 4:word32] - 0x00000001
	Mem206[Mem206[ap_144 + 4:word32]:word32] = v40_205
	branch v40_205 == 0x00000000 l0000D2AA
// DataOut: ap fp r0 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l0000D295:
	word32 r3_226 = Mem206[ap_144 + 0x00000008:word32]
// DataOut: ap fp r0 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l0000D29C:
	word32 r2_231 = Mem206[r3_226:word32]
	Mem233[r3_226:word32] = Mem206[r3_226:word32] + 0x00000004
	Mem235[r6_157:word32] = Mem233[r2_231:word32]
	word32 v43_237 = Mem235[ap_144 + 4:word32] - 0x00000001
	Mem238[Mem238[ap_144 + 4:word32]:word32] = v43_237
	r6_157 = r6_157 + 0x00000004
	branch v43_237 != 0x00000000 l0000D29C
// DataOut: ap fp r0 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l0000D2AA:
	Mem215[r6_157:word32] = 0x00000000
	Mem217[Mem217[ap_144 + 8:word32]:word32] = r0_107
	Mem219[Mem219[ap_144 + 0x00000004:word32]:word32] = r7_204
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l0000D1F6:
	Mem151[sp_143 - 0x00000004:word32] = r0_78
	fn000192B2()
// DataOut:
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> -8(fp):<invalid>

l0000D161:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r0:r0 + 0x00000001 sp:<invalid> fp:<invalid> ap:<invalid> r3:r0 + 0x00000002 -8(fp):<invalid>

l0000D147:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r5:<invalid> r2:<invalid> r0:<invalid> -8(fp):<invalid>

fn0000D0D6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r5:<invalid> r2:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r3:<invalid> -8(fp):<invalid>



word32 fn0000D39E(word32 r0, word32 r6, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r0 r6
// LiveOut: ap fp r0 r2 r3 r4 r5 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn0000D39E_entry:
	*r5Out = r5
	*r2Out = r2
	*r3Out = r3
	*r4Out = r4
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D39E:
	branch Mem0[r6:word32] != 0x00000000 l0000D3FD
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D3AC:
	word32 sp_47
	fn000192B6(fp, out fp, out sp_47)
	word32 r5_50
	*r5Out = r0
	branch r0 == 0x00000000 l0000D3FD
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D3BD:
	word32 r4_55 = 0x00000000
	word32 r3_56 = r0
// DataOut: fp pc r10 r11 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:r0 fp:<invalid> ap:<invalid> -8(fp):0x00000400

l0000D3C4:
	word32 r2_103 = r4_55
	*r2Out = r2_103
	word32 r1_104 = 0x00000008
	branch 0x00000008 == 0x00000000 l0000D3EC
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:r0 r4:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> -8(fp):0x00000400

l0000D3CC:
	word32 r0_108
	branch (r2_103 & 0x00000001) == 0x00000000 l0000D3E0
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> -8(fp):0x00000400

l0000D3E0:
	r0_108 = (uint32) SLICE(r2_103, ui31, 1)
// DataOut: fp pc r0 r1 r10 r11 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> -8(fp):0x00000400

l0000D3CF:
	r0_108 = (uint32) SLICE(r2_103, ui31, 1) ^ 0xEDB88320
// DataOut: fp pc r0 r1 r10 r11 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> -8(fp):0x00000400

l0000D3E5:
	r2_103 = r0_108
	*r2Out = r2_103
	r1_104 = r1_104 - 0x00000001
	branch r1_104 != 0x00000000 l0000D3CC
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> ap:<invalid> r0:<invalid> fp:<invalid> -8(fp):0x00000400

l0000D3EC:
	Mem80[r3_56:word32] = r2_103
	r3_56 = r3_56 + 0x00000004
	*r3Out = r3_56
	r4_55 = r4_55 + 0x00000001
	*r4Out = r4_55
	branch r4_55 <= 0x000000FF l0000D3C4
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> -8(fp):0x00000400

l0000D3FA:
	Mem85[r6:word32] = r0
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> -8(fp):0x00000400

l0000D3FD:
	word32 sp_30 = fp - 0x00000004
	*spOut = sp_30
	word32 fp_31
	*fpOut = Mem0[sp_30 + 0x00000010:word32]
	word32 ap_32
	*apOut = Mem0[sp_30 + 0x0000000C:word32]
	return Mem0[r6:word32]
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:r0 fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> -8(fp):0x00000400

fn0000D39E_exit:
// DataOut: ap fp r0 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:r0 r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -8(fp):0x00000400



word32 fn0000D406(word32 ap, word32 fp, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: fp sp
// Trashed: CVZN ap fp sp
// Preserved:
fn0000D406_entry:
// DataOut: ap fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D406:
	branch Mem0[ap:word32] == 0x00000000 l0000D41F
// DataOut: ap fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D414:
	fn000192B2()
	Mem29[ap:word32] = 0x00000000
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// Terminates process

l0000D41F:
	word32 sp_18
	*spOut = fp - 0x00000004
	return Mem0[fp + 0x0000000C:word32]
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 -8(fp):<invalid>

fn0000D406_exit:
// DataOut: fp sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 fp:<invalid> ap:<invalid> -8(fp):<invalid>



void fn0000D422(word32 r2, word32 r3, word32 r4, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r2 r3 r4
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000D422_entry:
// DataOut: fp r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D422:
	fn0001927E()
	Mem15[r2 + 36:word32] = -0x00000001
	Mem18[r2 + 0x0000C60F:word32] = r4 + 2
	Mem21[r2 + 144:word32] = r3
	Mem23[r2 + 148:word32] = r3 + 4
	Mem25[r2 + 1511:word32] = r2 + 167
	Mem27[r2 + 0x0000C6E5:word32] = 0x00000001
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

fn0000D422_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r0:r2 sp:fp - 0x00000004 fp:<invalid> ap:<invalid> -16(fp):r2 -12(fp):0x00000000 -8(fp):0x0000C851



void fn0000D4A2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000D4A2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000D4A2_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D4A2:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0000D50E(word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut:
// Trashed: CVZN ap fp sp
// Preserved:
fn0000D50E_entry:
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D50E:
	branch Mem0[ap + 0x0000C5FB:word32] <= 0x00000000 l0000D529
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000D520:
	Mem54[ap + 132:word32] = Mem0[ap + 132:word32] + Mem0[ap + 0x0000C5FB:word32]
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D529:
	branch Mem0[ap + 0x0000C849:word32] <= 0x00000000 l0000D554
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D554:
	branch Mem0[ap + 0x0000C5FB:word32] >= 0x00000000 l0000D562
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D55C:
	Mem48[ap + 0x0000C5FB:word32] = 0x00000000
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D562:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D531:
	Mem22[ap + 0x0000C5FB:word32] = Mem0[ap + 132:word32] + Mem0[ap + 0x0000C849:word32]
	Mem24[ap + 0x0000C5F7:word32] = Mem22[ap + 0x0000C84D:word32] - Mem22[ap + 132:word32]
	Mem26[ap + 0x0000C849:word32] = 0x00000000
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

fn0000D50E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 fp:<invalid> ap:<invalid>



void fn0000D566(word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut:
// Trashed: CVZN ap fp sp
// Preserved:
fn0000D566_entry:
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D566:
	branch Mem0[ap + 0x0000C5FB:word32] <= Mem0[ap + 132:word32] l0000D5AC
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000D5AC:
	Mem43[ap + 0x0000C849:word32] = 0x00000000
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D57B:
	branch Mem0[ap + 132:word32] >= 0x00000000 l0000D585
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D581:
	Mem37[ap + 132:word32] = 0x00000000
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D585:
	Mem28[ap + 0x0000C84D:word32] = Mem0[ap + 132:word32] + Mem0[ap + 0x0000C5F7:word32]
	Mem30[ap + 0x0000C849:word32] = Mem28[ap + 0x0000C5FB:word32] - Mem28[ap + 132:word32]
	Mem32[ap + 0x0000C5FB:word32] = Mem30[ap + 132:word32]
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D5B2:
	Mem14[ap + 132:word32] = Mem0[ap + 132:word32] - Mem0[ap + 0x0000C5FB:word32]
	return
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

fn0000D566_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 fp:<invalid> ap:<invalid>



word32 fn0000D5BE(word32 r0, word32 r4, word32 r6, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r7Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r4 r6
// LiveOut: ap fp r0 r2 r7 sp
// Trashed: CVZN ap fp r0 r2 r7 sp
// Preserved:
fn0000D5BE_entry:
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D5BE:
	word32 r2_5 = Mem0[ap + 8:word32]
	*r2Out = r2_5
	word32 r7_6 = r2_5
	*r7Out = r7_6
	branch r2_5 != 0x00000000 l0000D5DD
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D5DD:
	r2_113 = r2_5
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r7:<invalid>
// LocalsOut: fp(32)

l0000D5E0:
	word32 r2_113
	branch Mem0[r4 + 0x0000C5FB:word32] > 0x00000000 l0000D64F
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r7:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l0000D5E8:
	fn00019272()
	Mem137[r4 + 0x0000C5FB:word32] = r0
	branch r0 != 0x00000000 l0000D60E
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r7:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l0000D60E:
	branch Mem137[r4 + 0x0000C5FB:word32] >= 0x00000000 l0000D639
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000
// LocalsOut: fp(32)

l0000D639:
	Mem197[r4 + 0x0000C61F:word32] = Mem137[r4 + 0x0000C61F:word32] + 0x00002000
	Mem199[r4 + 0x0000C5F7:word32] = Mem197[r4 + 0x0000C5F3:word32]
// DataOut: ap fp pc r10 r11 r2 r4 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000
// LocalsOut: fp(32)

l0000D64F:
	word32 r5_116
	r0 = Mem0[r4 + 0x0000C5FB:word32]
	branch r2_113 >=u r0 l0000D660
// DataOut: ap fp pc r0 r10 r11 r2 r4 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r7:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l0000D660:
	r5_116 = r0
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r7:<invalid> r0:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l0000D65B:
	r5_116 = r2_113
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r7:<invalid> r0:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l0000D663:
	fn0001929E()
	Mem108[ap + 4:word32] = Mem0[ap + 4:word32] + r5_116
	Mem110[r4 + 0x0000C5F7:word32] = Mem108[r4 + 0x0000C5F7:word32] + r5_116
	Mem112[r4 + 0x0000C5FB:word32] = Mem110[r4 + 0x0000C5FB:word32] - r5_116
	r2_113 = r2_113 - r5_116
	*r2Out = r2_113
	branch r2_113 == 0x00000000 l0000D692
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)
// Terminates process

l0000D68F:
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: r2:r2 - r3 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l0000D616:
	Mem153[fp - 0x00000014:uint32] = 0x00000401
	Mem156[fp - 0x00000018:word32] = r6 + 36
	fn000192C6()
	Mem161[fp - 0x0000001C:word32] = r0
	Mem164[fp - 0x00000020:word32] = r6 + 36
	Mem166[fp - 0x00000024:word32] = r4
	word32 r0_167 = Mem166[r4 + 0x0000C839:word32]
	word32 sp_171
	byte CVZN_172
	byte ZN_173
	bool C_174
	bool V_175
	word32 ap_176
	word32 r2_177
	word32 r7_178
	bool Z_179
	word32 r0_180
	word32 r4_181
	word32 fp_182
	bool N_183
	word32 r6_184
	byte CZN_185
	word32 r5_186
	word32 r3_187
	call Mem166[r0_167:word32] + 2 (retsize: 4; depth: 4)
		uses: ap,C_169,CVZN_77,CZN_73,dwLoc08_126,dwLoc0C_129,dwLoc10_132,fp,N_148,r0_167,r2_74,r3_71,r4,r5_72,r6,r7_6,sp_165,V_170,Z_139,ZN_168
		defs: ap_176,C_174,CVZN_172,CZN_185,fp_182,N_183,r0_180,r2_177,r3_187,r4_181,r5_186,r6_184,r7_178,sp_171,V_175,Z_179,ZN_173
	word32 sp_193
	*spOut = fp_182 - 0x00000004
	word32 fp_194
	*fpOut = Mem166[fp_182 + 0x0000000C:word32]
	word32 ap_195
	*apOut = Mem166[fp_182 + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000
// Terminates process

l0000D609:
	word32 sp_144
	*spOut = fp - 0x00000004
	word32 fp_145
	*fpOut = Mem137[fp + 0x0000000C:word32]
	word32 ap_146
	*apOut = Mem137[fp + 0x00000008:word32]
	return r2_5 - r2_113
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D5DA:
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r7:<invalid>

l0000D692:
	word32 sp_51
	*spOut = fp - 0x00000004
	word32 fp_52
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_53
	*apOut = Mem0[fp + 0x00000008:word32]
	return r2_5
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r7:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

fn0000D5BE_exit:
// DataOut: ap fp r0 r2 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



word32 fn0000D69A(word32 r0, word32 r4, word32 r6, word32 ap, word32 fp, word32 pc, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r5Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r4 r6
// LiveOut: ap fp r0 r2 r3 r5 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r5 sp
// Preserved:
fn0000D69A_entry:
	*r3Out = r3
	*r5Out = r5
	*r2Out = r2
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D69A:
	branch Mem0[r4 + 0x0000C6C5:word32] == 0x00000000 l0000D6B7
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D6B7:
	branch Mem0[r4 + 132:word32] > 0x00000000 l0000D6CB
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// LocalsOut: fp(32)

l0000D6CB:
	branch Mem0[r4 + 0x0000C5FB:word32] <= 0x00000000 l0000D6D6
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// LocalsOut: fp(32)

l0000D6D6:
	fn00019272()
	Mem159[r4 + 0x0000C5FB:word32] = r0
	branch r0 != 0x00000000 l0000D701
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// Terminates process

l0000D701:
	branch Mem159[r4 + 0x0000C5FB:word32] >= 0x00000000 l0000D73B
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D709:
	Mem233[fp - 0x00000014:uint32] = 0x00000401
	Mem236[fp - 0x00000018:word32] = r6 + 36
	fn000192C6()
	Mem241[fp - 0x0000001C:word32] = r0
	Mem244[fp - 0x00000020:word32] = r6 + 36
	Mem246[fp - 0x00000024:word32] = r4
	word32 r2_247 = Mem246[r4 + 0x0000C839:word32]
	word32 sp_251
	byte CVZN_252
	byte ZN_253
	bool C_254
	bool V_255
	bool Z_257
	word32 ap_260
	bool N_261
	word32 r2_262
	word32 r3_263
	word32 r5_264
	word32 r6_265
	byte CZN_266
	word32 pc_267
	call Mem246[r2_247:word32] + 2 (retsize: 4; depth: 4)
		uses: ap,C_249,CVZN,CZN,dwLoc08_148,dwLoc0C_151,dwLoc10_154,fp,N_172,pc,r0,r2_247,r3,r4,r5,r6,sp_245,V_250,Z_161,ZN_248
		defs: ap_260,C_254,CVZN_252,CZN_266,fp_259,N_261,pc_267,r0_258,r2_262,r3_263,r4_256,r5_264,r6_265,sp_251,V_255,Z_257,ZN_253
	Mem269[sp_251 - 0x00000004:word32] = 0x00000001
	fn000124FE(r0, r2_262, ap_260, pc_267)
	Mem274[sp_251 - 0x00000008:word32] = 0x00000003
	fn0000CE52(ap_260, fp)
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000
// Terminates process

l0000D73B:
	Mem190[r4 + 0x0000C61F:word32] = Mem159[r4 + 0x0000C61F:word32] + 0x00002000
	Mem192[r4 + 0x0000C5F7:word32] = Mem190[r4 + 0x0000C5F3:word32]
	branch Mem192[r4 + 0x0000C5FB:word32] <= Mem192[r4 + 132:word32] l0000D790
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D790:
	Mem226[r4 + 0x0000C849:word32] = 0x00000000
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D75C:
	branch Mem192[r4 + 132:word32] >= 0x00000000 l0000D766
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D762:
	Mem220[r4 + 132:word32] = 0x00000000
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D766:
	Mem211[r4 + 0x0000C84D:word32] = Mem192[r4 + 132:word32] + Mem192[r4 + 0x0000C5F7:word32]
	Mem213[r4 + 0x0000C849:word32] = Mem211[r4 + 0x0000C5FB:word32] - Mem211[r4 + 132:word32]
	Mem215[r4 + 0x0000C5FB:word32] = Mem213[r4 + 132:word32]
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D796:
	Mem202[r4 + 132:word32] = Mem192[r4 + 132:word32] - Mem192[r4 + 0x0000C5FB:word32]
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D6F7:
	Mem165[r4 + 0x0000C5FB:word32] = 0x00000000
	word32 sp_168
	*spOut = fp - 0x00000004
	word32 fp_169
	*fpOut = Mem165[fp + 0x0000000C:word32]
	word32 ap_170
	*apOut = Mem165[fp + 0x00000008:word32]
	return -0x00000001
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D6D3:
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D79F:
	branch (Mem0[Mem0[r4 + 1511:word32] + 20:word32] & 0x00000001) == 0x00000000 l0000D7EA
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D7A9:
	word32 r2_102 = Mem0[r4 + 0x0000C5FB:word32]
	word32 r3_103 = Mem0[r4 + 0x0000C5F7:word32]
	*r3Out = r3_103
	word32 r5_105 = r2_102 - 0x00000001
	*r5Out = r5_105
	branch r2_102 == 0x00000000 l0000D7EA
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D7C2:
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> ap:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D7C4:
	word32 r2_117 = (uint32) Mem0[r3_103:byte]
	word32 fp_121
	word32 sp_122
	word32 r0_123 = fn00011ED6(r0, fp, out fp_121, out sp_122)
	Mem126[r3_103:byte] = (byte) r2_117 ^ (byte) r0_123
	Mem129[sp_122 - 0x00000004:uint32] = (uint32) Mem126[r3_103:byte]
	word32 r3_133
	r0 = fn00011F06(r2_117, r0_123, fp_121, out r3_133, out fp)
	r3_103 = r3_133 + 0x00000001
	*r3Out = r3_103
	r5_105 = r5_278 - 0x00000001
	*r5Out = r5_105
	word32 r5_278 = r5_105
	branch r5_278 != 0x00000000 l0000D7C4
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D7EA:
	Mem91[r4 + 0x0000C5FB:word32] = Mem0[r4 + 0x0000C5FB:word32] - 0x00000001
	word32 r2_92 = Mem91[r4 + 0x0000C5F7:word32]
	*r2Out = r2_92
	Mem94[r4 + 0x0000C5F7:word32] = Mem91[r4 + 0x0000C5F7:word32] + 0x00000001
	word32 sp_99 = fp - 0x00000004
	*spOut = sp_99
	word32 fp_100
	*fpOut = Mem94[sp_99 + 0x00000010:word32]
	word32 ap_101
	*apOut = Mem94[sp_99 + 0x0000000C:word32]
	return (uint32) Mem94[r2_92:byte]
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D6BD:
	Mem55[r4 + 132:word32] = Mem0[r4 + 132:word32] - 0x00000001
	Mem57[r4 + 0x0000C5FB:word32] = 0x00000000
	word32 sp_60
	*spOut = fp - 0x00000004
	word32 fp_61
	*fpOut = Mem57[fp + 0x0000000C:word32]
	word32 ap_62
	*apOut = Mem57[fp + 0x00000008:word32]
	return -0x00000001
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D6B3:
	word32 sp_38
	*spOut = fp - 0x00000004
	word32 fp_39
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_40
	*apOut = Mem0[fp + 0x00000008:word32]
	return -0x00000001
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

fn0000D69A_exit:
// DataOut: ap fp r0 r2 r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000



word32 fn0000DC76(word32 ap, word32 fp, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp r0 sp
// Trashed: CVZN ap fp r0 sp
// Preserved:
fn0000DC76_entry:
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000DC76:
	branch Mem0[ap + 4:word32] != 0x00000000 l0000DC9F
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000DC9F:
	word32 r0_34 = Mem0[ap + 8:word32]
	branch r0_34 > 0x00000005 l0000DCB1
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): N
// SymbolicIn: sp:fp - 0x0000000C -12(fp):0x00000000

l0000DCB1:
	branch r0_34 < 0x00000000 l0000DCB3
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r0:<invalid> -12(fp):0x00000000

l0000DCB3:
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r0:<invalid> -12(fp):0x00000000

l0000E253:
	word32 sp_56
	*spOut = fp - 0x00000004
	word32 fp_57
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_58
	*apOut = Mem0[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r0:<invalid> -12(fp):0x00000000

l0000DCA3_1:
	word32 sp_42
	byte CVZN_43
	byte ZN_44
	bool C_45
	bool V_46
	bool Z_47
	bool N_48
	word32 ap_49
	word32 r0_50
	word32 fp_51
	call 0x0000DCA7 + r0_34 * 0x00000002 (retsize: 4; depth: 16)
		uses: ap,C_38,CVZN_40,dwLoc0C_4,fp,N_37,r0_34,sp_2,V_39,Z_36,ZN_35
		defs: ap_49,C_45,CVZN_43,fp_51,N_48,r0_50,sp_42,V_46,Z_47,ZN_44
	return r0_50
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r0:<invalid> -12(fp):0x00000000

l0000DC9C:
	word32 sp_30
	*spOut = fp - 0x00000004
	word32 fp_31
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_32
	*apOut = Mem0[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C -12(fp):0x00000000

fn0000DC76_exit:
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -12(fp):0x00000000



word32 fn0000E25A(word32 ap, word32 fp, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp r0 sp
// Trashed: CVZN ap fp r0 r1 r2 sp
// Preserved:
fn0000E25A_entry:
// DataOut: ap fp r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000E25A:
	word32 r2_5 = Mem0[ap + 4:word32]
	word32 sp_16
	*spOut = fp - 0x00000004
	word32 fp_17
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_18
	*apOut = Mem0[fp + 0x00000008:word32]
	return (uint32) ((word16) ((uint32) Mem0[r2_5 + 1:byte] << 8) | (word16) ((uint32) Mem0[r2_5:byte]))
// DataOut: ap fp r0 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000E25A_exit:
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid>



word32 fn0000E276(word32 ap, word32 fp, ptr32 & r2Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp r0 r2 sp
// Trashed: CVZN ap fp r0 r1 r2 sp
// Preserved:
fn0000E276_entry:
// DataOut: ap fp pc r10 r11 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000E276:
	word32 r1_5 = Mem0[ap + 4:word32]
	word32 r2_13 = ((uint32) Mem0[r1_5 + 3:byte] << 24) + ((uint32) Mem0[r1_5 + 2:byte] << 16) + ((uint32) Mem0[r1_5 + 1:byte] << 8)
	*r2Out = r2_13
	word32 sp_18
	*spOut = fp - 0x00000004
	word32 fp_19
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_20
	*apOut = Mem0[fp + 0x00000008:word32]
	return (uint32) Mem0[r1_5:byte] + r2_13
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000E276_exit:
// DataOut: ap fp r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid>



word32 fn0000E2A6(word32 r7, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r7
// LiveOut: ap fp r0 r2 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn0000E2A6_entry:
// DataOut: ap fp r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000E2A6:
	word32 r0_19 = Mem0[ap + 8:word32]
	word32 r1_15 = Mem0[ap + 4:word32]
// DataOut: ap fp r0 r1 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000E2B8:
	byte v12_22 = Mem0[r0_19:byte]
	r0_19 = r0_19 + 0x00000001
	r2 = DPB(r2, v12_22, 0)
	*r2Out = r2
	r1_15 = r1_15 + 0x00000001
	word32 r4_26 = (uint32) v12_22
	branch (r4_26 & 0x00000080) == 0x00000000 l0000E2D8
// DataOut: ap fp r0 r1 r2 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid>

l0000E2D8:
	r5 = DPB(r5, v12_22, 0)
// DataOut: ap fp r0 r1 r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid>

l0000E2C7:
	r5 = DPB(r5, Mem0[r7 + (r4_26 & ~0xFFFFFF80):byte], 0)
// DataOut: ap fp r0 r1 r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid>

l0000E2DB:
	Mem33[r1_15:byte] = (byte) r5
	branch r4_26 != 0x00000000 l0000E2B8
// DataOut: ap fp r0 r1 r2 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid>

l0000E2E2:
	word32 sp_43
	*spOut = fp - 0x00000004
	word32 fp_44
	*fpOut = Mem33[fp + 0x0000000C:word32]
	word32 ap_45
	*apOut = Mem33[fp + 0x00000008:word32]
	return Mem33[ap + 4:word32]
// DataOut: ap fp r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid>

fn0000E2A6_exit:
// DataOut: ap fp r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> ap:<invalid>



word32 fn0000E2EA(word32 r8, word32 ap, word32 fp, ptr32 & r6Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r8
// LiveOut: ap fp r0 r6 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved:
fn0000E2EA_entry:
	*r6Out = r6
// DataOut: ap fp r10 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000E2EA:
	word32 sp_109 = fp - 0x00000004
	word32 r2_124 = Mem0[ap + 4:word32]
	word32 r3_100 = Mem0[ap + 8:word32]
	word32 r4_123 = Mem0[ap + 12:word32]
	branch r4_123 != 0x00000000 l0000E305
// DataOut: fp r10 r2 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000E305:
// DataOut: fp r10 r2 r3 r4 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r4:<invalid>

l0000E30C:
	word32 r1_104
	byte v13_89 = Mem0[r2_124:byte]
	word32 r6_91 = (int32) v13_89
	word32 r0_92 = r6_91 & ~0xFFFFFF80
	branch (Mem0[r8 + r0_92 * 4:word32] & 0x00000001) == 0x00000000 l0000E32C
// DataOut: fp r0 r10 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E32C:
	r1_104 = r6_91
// DataOut: fp r1 r10 r2 r3 r4 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E31F:
	word32 sp_270 = sp_109 - 0x00000004
	Mem272[sp_270:int32] = (int32) v13_89
	byte CVZN_276
	byte ZN_277
	bool C_278
	bool V_279
	word32 ap_280
	bool Z_284
	word32 r5_285
	word32 r6_286
	byte VZN_287
	word32 r0_288
	word32 r1_291
	bool N_292
	byte CZN_295
	call Mem272[r9:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_88,C_274,CVZN_82,CZN_80,fp_87,N_85,r0_92,r1_81,r2_76,r3_77,r4_75,r5_90,r6_91,r7_78,r8_74,r9_73,sp_270,V_95,VZN_273,Z_84,ZN_93
		defs: ap_280,C_278,CVZN_276,CZN_295,fp_293,N_292,r0_288,r1_291,r2_281,r3_282,r4_283,r5_285,r6_286,r7_294,r8_289,r9_290,sp_275,V_279,VZN_287,Z_284,ZN_277
	r1_104 = r0_288
// DataOut: fp r1 r10 r2 r3 r4 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E32F:
	word32 r1_130
	byte v25_114 = Mem0[r3_100:byte]
	word32 r6_116 = (int32) v25_114
	*r6Out = r6_116
	r7 = DPB(r7, (int8) r1_104, 0)
	word32 r0_117 = r6_116 & ~0xFFFFFF80
	branch (Mem0[r8 + r0_117 * 4:word32] & 0x00000001) == 0x00000000 l0000E350
// DataOut: fp r0 r10 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E350:
	r1_130 = r6_116
// DataOut: fp r1 r10 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E345:
	word32 sp_236 = sp_109 - 0x00000004
	Mem238[sp_236:int32] = (int32) v25_114
	byte CVZN_242
	byte ZN_243
	bool C_244
	bool V_245
	word32 ap_246
	bool Z_250
	word32 r5_251
	word32 r6_252
	byte VZN_253
	word32 r0_254
	word32 r1_257
	bool N_258
	byte CZN_261
	call Mem238[r9:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_111,C_240,CVZN_105,CZN_103,fp_110,N_108,r0_117,r1_104,r2_99,r3_100,r4_98,r5_115,r6_116,r7_113,r8_97,r9_96,sp_236,V_120,VZN_239,Z_107,ZN_118
		defs: ap_246,C_244,CVZN_242,CZN_261,fp_259,N_258,r0_254,r1_257,r2_247,r3_248,r4_249,r5_251,r6_252,r7_260,r8_255,r9_256,sp_241,V_245,VZN_253,Z_250,ZN_243
	r1_130 = r0_254
// DataOut: fp r1 r10 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E353:
	branch (byte) r7 == (int8) r1_130 l0000E3BF
// DataOut: fp r10 r2 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3BF:
	branch Mem0[r2_124:byte] != 0x00 l0000E3C6
// DataOut: fp r10 r2 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3C6:
	r4_123 = r4_123 - 0x00000001
	r2_124 = r2_124 + 0x00000001
	r3_100 = r3_100 + 0x00000001
	branch r4_123 == 0x00000000 l0000E3D3
// DataOut: fp r10 r2 r3 r4 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3D0:
// DataOut: fp r10 r2 r3 r4 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3C3:
	word32 sp_226 = fp - 0x00000004
	*spOut = sp_226
	word32 fp_227
	*fpOut = Mem0[sp_226 + 0x00000010:word32]
	word32 ap_228
	*apOut = Mem0[sp_226 + 0x0000000C:word32]
	return 0x00000000
// DataOut: ap fp r0 r10 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E35B:
	word32 r1_151
	byte v29_144 = Mem0[r2_124:byte]
	word32 r6_146 = (int32) v29_144
	word32 r0_147 = r6_146 & ~0xFFFFFF80
	branch (Mem0[r8 + r0_147 * 4:word32] & 0x00000001) == 0x00000000 l0000E380
// DataOut: fp r0 r10 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E380:
	r1_151 = r6_146
// DataOut: fp r1 r10 r3 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E36E:
	sp_109 = sp_109 - 0x00000004
	Mem206[sp_109:int32] = (int32) v29_144
	fn0001929A()
	r1_151 = r0_147
// DataOut: fp r1 r10 r3 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E383:
	word32 r5_163
	byte v32_156 = Mem0[r3_100:byte]
	word32 r6_158 = (int32) v32_156
	*r6Out = r6_158
	int8 v31_154 = (int8) r1_151
	word32 r0_159 = r6_158 & ~0xFFFFFF80
	branch (Mem0[r8 + r0_159 * 4:word32] & 0x00000001) == 0x00000000 l0000E3A8
// DataOut: fp r0 r10 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: r1:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3A8:
	r5_163 = r6_158
// DataOut: fp r10 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: r1:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E399:
	Mem193[sp_109 - 0x00000004:int32] = (int32) v32_156
	fn0001929A()
	r5_163 = r0_159
// DataOut: fp r10 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: r1:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3AB:
	word32 r1_174
	branch v31_154 >= (int8) r5_163 l0000E3B8
// DataOut: fp r10 r6
// DataOut (flags): 
// SymbolicIn: r5:<invalid> r1:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3B8:
	r1_174 = DPB(r1_151, 0x01, 0)
// DataOut: fp r1 r10 r6
// DataOut (flags): 
// SymbolicIn: r5:<invalid> r1:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3B3:
	r1_174 = DPB(r1_151, -0x01, 0)
// DataOut: fp r1 r10 r6
// DataOut (flags): 
// SymbolicIn: r5:<invalid> r1:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3BB:
	word32 sp_180 = fp - 0x00000004
	*spOut = sp_180
	word32 fp_181
	*fpOut = Mem0[sp_180 + 0x00000010:word32]
	word32 ap_182
	*apOut = Mem0[sp_180 + 0x0000000C:word32]
	return (int32) (int8) r1_174
// DataOut: ap fp r0 r10 r6 sp
// DataOut (flags): 
// SymbolicIn: r5:<invalid> r1:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E302:
// DataOut: fp r10 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r4:<invalid>

l0000E3D3:
	word32 sp_56 = fp - 0x00000004
	*spOut = sp_56
	word32 fp_57
	*fpOut = Mem0[sp_56 + 0x00000010:word32]
	word32 ap_58
	*apOut = Mem0[sp_56 + 0x0000000C:word32]
	return 0x00000000
// DataOut: ap fp r0 r10 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

fn0000E2EA_exit:
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>



void fn0000F457()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000F457_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000F457_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000F457:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0000F4E2(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000F4E2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000F4E2_entry:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000F4E2:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0000F816(word32 r0, word32 r3, word32 r5, word32 r6, word32 r8, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r3 r5 r6 r8
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r9 sp
// Preserved:
fn0000F816_entry:
// DataOut: ap fp r0 r3 r5 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000F816:
	Mem10[r3 + 0x0000C5FF:word64] = 0x0000000000000000
	Mem13[r3 + 0x0000C607:word32] = 0x00000000
	Mem15[r3 + 0x0000C6D9:word32] = 0x00000001
	Mem17[r3 + 0x0000C5EF:word32] = 0x00000000
	branch Mem17[r3 + 68:word32] == 0x00000000 l0000F8AC
// DataOut: ap fp r0 r10 r11 r3 r5 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000F8AC:
	branch Mem17[r3 + 12:word32] == 0x00000000 l0000F8CB
// DataOut: fp r0 r10 r11 r3 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:r5 + 69 r11:r5 + 78 r10:0x00000000 -8(fp):r5 + 87

l0000F8CB:
	branch fn00009B0A(r0, r8, 0x00000000, r5 + 78, fp, out r3, out ap, out fp) == 0x00000000 l0000F8DA
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:r5 + 69 r11:r5 + 78 r10:0x00000000 -8(fp):r5 + 87

l0000F8D6:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r11:r5 + 78 r10:0x00000000 fp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -8(fp):r5 + 87

l0000F8B1:
	Mem175[r3 + 0x0000C6ED:word32] = 0x00019374
	branch fn00009B0A(r0, r8, 0x00000000, r5 + 78, fp, out r3, out ap, out fp) == 0x00000000 l0000F8DA
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:r5 + 69 r11:r5 + 78 r10:0x00000000 -8(fp):r5 + 87

l0000F8C7:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r11:r5 + 78 r10:0x00000000 fp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -8(fp):r5 + 87

l0000F85A:
	branch Mem17[r3 + 64:word32] != 0x00000000 l0000F8DA
// DataOut: ap fp r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:r5 + 69 r11:r5 + 78 r10:0x00000000 -8(fp):r5 + 87
// LocalsOut: fp(32)

l0000F85F:
	word32 r2_121
	word32 r3_122
	word32 ap_123
	word32 fp_124
	word32 sp_125
	word32 r0_126 = fn00010892(ap, fp, out r2_121, out r3_122, out ap_123, out fp_124, out sp_125)
	Mem128[sp_125 - 0x00000004:word32] = r0_126
	Mem131[sp_125 - 0x00000008:word32] = r5 + 96
	Mem134[sp_125 - 0x0000000C:word32] = r6 + 387
	Mem137[sp_125 - 0x00000010:word32] = r3_122 + 1515
	fn000192D2()
	Mem142[sp_125 - 0x00000014:word32] = r0_126
	Mem145[sp_125 - 0x00000018:word32] = r3_122 + 1515
	Mem147[sp_125 - 0x0000001C:word32] = r3_122
	word32 ap_148 = Mem147[r3_122 + 0x0000C839:word32]
	word32 sp_152
	byte CVZN_153
	byte ZN_154
	bool C_155
	bool V_156
	word32 r5_157
	word32 r9_158
	word32 r11_159
	word32 r10_160
	bool Z_161
	bool N_162
	word32 r2_164
	word32 r0_165
	word32 r6_166
	word32 r8_169
	call Mem147[ap_148:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_148,C_150,CVZN,dwLoc08_7,dwLoc0C_104,dwLoc10_107,dwLoc14_110,dwLoc18_114,dwLoc1C_117,fp_124,N,r0_126,r10_8,r11_5,r2_121,r3_122,r5,r6,r8,r9_4,sp_146,V_151,Z_88,ZN_149
		defs: ap_167,C_155,CVZN_153,fp_168,N_162,r0_165,r10_160,r11_159,r2_164,r3_163,r5_157,r6_166,r8_169,r9_158,sp_152,V_156,Z_161,ZN_154
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:r5 + 69 r11:r5 + 78 r10:0x00000000 -8(fp):r5 + 87

l0000F8DA:
	fn0000D566(ap, fp)
	word32 r0_64 = (uint32) Mem17[r3 + 0x0000C642:word16]
	branch r0_64 > 0x00000008 l0000F8FC
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r11:r5 + 78 r10:0x00000000 ap:<invalid> fp:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -44(fp):r3 + 1515 -40(fp):r6 + 387 -36(fp):r5 + 96 -32(fp):r0 -28(fp):r3 + 0x0000C701 -24(fp):r3 + 0x000045EB -20(fp):r5 + 101 -16(fp):r5 + 102 -12(fp):0x00000000 -8(fp):r5 + 87

l0000F8FC:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r11:r5 + 78 r10:0x00000000 ap:<invalid> r0:<invalid> fp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -44(fp):r3 + 1515 -40(fp):r6 + 387 -36(fp):r5 + 96 -32(fp):r0 -28(fp):r3 + 0x0000C701 -24(fp):r3 + 0x000045EB -20(fp):r5 + 101 -16(fp):r5 + 102 -12(fp):0x00000000 -8(fp):r5 + 87

l0000F8E8_1:
	word32 sp_69
	byte CVZN_70
	byte ZN_71
	bool C_72
	bool V_73
	word32 r5_74
	word32 r9_75
	word32 r11_76
	word32 r10_77
	bool Z_78
	bool N_79
	word32 r3_80
	word32 r2_81
	word32 r0_82
	word32 r6_83
	word32 ap_84
	word32 fp_85
	word32 r8_86
	call 0x0000F8EC + r0_64 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_52,C_66,CVZN_62,dwLoc08_7,dwLoc0C_45,dwLoc10_46,dwLoc14_47,dwLoc18_48,dwLoc1C_49,fp_51,N_56,r0_64,r10_58,r11_59,r2_54,r3_55,r5_61,r6_53,r8_50,r9_60,sp_63,V_67,Z_57,ZN_65
		defs: ap_84,C_72,CVZN_70,fp_85,N_79,r0_82,r10_77,r11_76,r2_81,r3_80,r5_74,r6_83,r8_86,r9_75,sp_69,V_73,Z_78,ZN_71
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r11:r5 + 78 r10:0x00000000 ap:<invalid> r0:<invalid> fp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -44(fp):r3 + 1515 -40(fp):r6 + 387 -36(fp):r5 + 96 -32(fp):r0 -28(fp):r3 + 0x0000C701 -24(fp):r3 + 0x000045EB -20(fp):r5 + 101 -16(fp):r5 + 102 -12(fp):0x00000000 -8(fp):r5 + 87

fn0000F816_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r11:r5 + 78 r10:0x00000000 ap:<invalid> r0:<invalid> fp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -44(fp):r3 + 1515 -40(fp):r6 + 387 -36(fp):r5 + 96 -32(fp):r0 -28(fp):r3 + 0x0000C701 -24(fp):r3 + 0x000045EB -20(fp):r5 + 101 -16(fp):r5 + 102 -12(fp):0x00000000 -8(fp):r5 + 87



void fn000100C2(word32 r0, word32 r2, word32 r5, word32 r7, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2 r5 r7
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r6 r8 r9 sp
// Preserved:
fn000100C2_entry:
// DataOut: ap fp r0 r2 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000100C2:
	branch Mem0[ap + 8:word32] >=u 0x00000004 l000100ED
// DataOut: ap fp r0 r2 r5 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l000100ED:
// DataOut: ap fp r0 r2 r5 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:ap + 8

l000100ED_thunk_fn000100F4:
	fn000100F4(r0, r2, r5, r7, ap + 8, ap, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:ap + 8

l000100EA:
// DataOut: fp r2 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:ap + 8

l000100EA_thunk_fn000105C4:
	fn000105C4(r2, r7, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:ap + 8

fn000100C2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:ap + 8 r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r2:<invalid>



void fn000100F4(word32 r0, word32 r2, word32 r5, word32 r7, word32 r9, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2 r5 r7 r9
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r6 r8 sp
// Preserved:
l000100F4:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000100F4_entry:
// DataOut: ap fp r0 r2 r5 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Local -0006(32)

l000100F4:
	word32 sp_11
	word32 ap_12
	byte ZN_13
	bool C_14
	bool V_15
	word32 r11_16
	word32 r0_17
	byte CVZN_18
	word32 r8_19
	word32 r9_20
	byte CZN_21
	byte CZ_22
	word32 r2_23
	bool Z_24
	word32 r7_25
	word32 r1_26
	bool N_27
	word32 r5_28
	word32 fp_29
	word32 r3_30
	call Mem0[r11:word32] + 2 (retsize: 4; depth: 8)
		uses: ap,C_8,dwLoc04_6,r11,sp_2,V_9,ZN_7
		defs: ap_12,C_14,CVZN_18,CZ_22,CZN_21,fp_29,N_27,r0_17,r1_26,r11_16,r2_23,r3_30,r5_28,r7_25,r8_19,r9_20,sp_11,V_15,Z_24,ZN_13
	byte ZN_39
	bool C_40
	bool V_41
	word32 r11_42
	word32 r0_43
	byte CVZN_44
	word32 r8_45
	word32 r9_46
	byte CZN_47
	byte CZ_48
	bool Z_50
	word32 r7_51
	word32 r1_52
	bool N_53
	word32 fp_55
	word32 r3_56
	word32 r5_212
	word32 r2_207
	word32 sp_195
	word32 ap_100
	call Mem0[r11_16:word32] + 2 (retsize: 4; depth: 12)
		uses: ap_12,C_14,CVZN_36,CZ_22,CZN_21,dwLoc04_6,dwLoc08_35,fp_29,N_27,r0_17,r1_26,r11_16,r2_23,r3_30,r5_28,r7_25,r8_19,r9_20,sp_33,V_15,wLoc02_32,Z_24,ZN_13
		defs: ap_38,C_40,CVZN_44,CZ_48,CZN_47,fp_55,N_53,r0_43,r1_52,r11_42,r2_49,r3_56,r5_54,r7_51,r8_45,r9_46,sp_37,V_41,Z_50,ZN_39
	word32 r8_203 = (uint32) (word16) r0_43
	word32 r0_201 = Mem0[r9_46:word32] - 0x00000004
	byte CZN_59 = cond(r8_203 - r0_201)
	branch r8_203 <=u r0_201 l00010184
// DataOut: ap fp r0 r2 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Local -0006(32)

l00010184:
	word32 r1_216 = (uint32) wLoc06
	branch r1_216 >= 0x00000007 l00010190
// DataOut: ap fp r1 r2 r5 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:<invalid> r0:<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):(word16) r0

l00010190:
	byte CZ_226 = DPB(CZN_59, false, 0)
	branch r1_216 > 0x0000000C l000101A1
// DataOut: ap fp r0 r2 r5 r7 r8
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x00000008 r8:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):(word16) r0

l000101A1:
	branch CZ_226 l000101A7
// DataOut: ap fp r0 r2 r5 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):(word16) r0

l000101A7:
	word32 sp_253
	word32 ap_254
	byte ZN_255
	bool C_256
	bool V_257
	word32 r11_258
	word32 r0_259
	byte CVZN_260
	word32 r8_261
	word32 r9_262
	byte CZN_263
	byte CZ_264
	word32 r2_265
	bool Z_266
	word32 r7_267
	word32 r1_268
	bool N_269
	word32 r5_270
	word32 fp_271
	word32 r3_272
	call fn4000E3D8 (retsize: 4; depth: 12)
		uses: ap_38,C_224,CVZN_228,CZ_226,CZN_225,dwLoc04_6,dwLoc08_35,dwLoc0C,dwLoc10,dwLoc14,fp_55,N_223,r0_220,r1_216,r11_42,r2_49,r3_56,r5_54,r7_51,r8_57,r9_46,sp_37,V_227,wLoc02_32,wLoc06,Z_222,ZN_221
		defs: ap_254,C_256,CVZN_260,CZ_264,CZN_263,fp_271,N_269,r0_259,r1_268,r11_258,r2_265,r3_272,r5_270,r7_267,r8_261,r9_262,sp_253,V_257,Z_266,ZN_255
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):(word16) r0

l000101A3:
// DataOut: ap fp r0 r2 r5 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):(word16) r0

l000101B0:
	branch r1_216 > 0x00004341 l000101B7_thunk_fn000101BC
// DataOut: ap fp r0 r2 r5 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):(word16) r0

l000101B7_thunk_fn000101BC:
	fn000101BC(r1_216, r2_207, r5_212, r7_51, r8_203, ap_100, fp_55)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):(word16) r0

l000101B9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):(word16) r0

l000101B9_thunk_fn000105B1:
	fn000105B1()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):(word16) r0

l00010193_1:
	word32 sp_230
	word32 ap_231
	byte ZN_232
	bool C_233
	bool V_234
	word32 r11_235
	word32 r0_236
	byte CVZN_237
	word32 r8_238
	word32 r9_239
	byte CZN_240
	byte CZ_241
	word32 r2_242
	bool Z_243
	word32 r7_244
	word32 r1_245
	bool N_246
	word32 r5_247
	word32 fp_248
	word32 r3_249
	call 0x00010197 + (r1_216 - 0x00000007) * 0x00000002 (retsize: 4; depth: 12)
		uses: ap_38,C_224,CVZN_228,CZ_226,CZN_225,dwLoc04_6,dwLoc08_35,dwLoc0C,dwLoc10,dwLoc14,fp_55,N_223,r0_220,r1_216,r11_42,r2_49,r3_56,r5_54,r7_51,r8_57,r9_46,sp_37,V_227,wLoc02_32,wLoc06,Z_222,ZN_221
		defs: ap_231,C_233,CVZN_237,CZ_241,CZN_240,fp_248,N_246,r0_236,r1_245,r11_235,r2_242,r3_249,r5_247,r7_244,r8_238,r9_239,sp_230,V_234,Z_243,ZN_232
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):(word16) r0

l0001018D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):(word16) r0

l0001018D_thunk_fn000105B1:
	fn000105B1()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:<invalid> r0:<invalid> r1:<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):(word16) r0

l00010112:
	branch Mem0[r2_207 + 64:word32] == 0x00000000 l00010156
// DataOut: ap fp r0 r2 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:<invalid> r0:<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):(word16) r0
// LocalsOut: fp(32)

l00010117:
	word32 r2_167
	word32 r3_168
	word32 ap_169
	word32 fp_170
	word32 sp_171
	word32 r0_172 = fn00010892(ap_100, fp_55, out r2_167, out r3_168, out ap_169, out fp_170, out sp_171)
	Mem174[sp_171 - 0x00000004:word32] = r0_172
	Mem177[sp_171 - 0x00000008:word32] = r7_51 + 199
	Mem180[sp_171 - 0x0000000C:word32] = r2_167 + 1515
	fn000192D2()
	Mem185[sp_171 - 0x00000010:word32] = r0_172
	Mem188[sp_171 - 0x00000014:word32] = r2_167 + 1515
	Mem190[sp_171 - 0x00000018:word32] = r2_167
	word32 r0_191 = Mem190[r2_167 + 0x0000C839:word32]
	byte ZN_197
	bool C_198
	bool V_199
	word32 r11_200
	byte CVZN_202
	word32 r9_204
	byte CZN_205
	byte CZ_206
	bool Z_208
	word32 r7_209
	word32 r1_210
	bool N_211
	word32 fp_213
	word32 r3_214
	call Mem190[r0_191:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_169,C_193,CVZN_44,CZ_60,CZN_59,dwLoc04_6,dwLoc08_35,dwLoc0C_156,dwLoc10_160,dwLoc14_163,fp_170,N_53,r0_191,r1_52,r11_42,r2_167,r3_168,r5_54,r7_51,r8_57,r9_46,sp_189,V_194,wLoc02_32,Z_86,ZN_192
		defs: ap_196,C_198,CVZN_202,CZ_206,CZN_205,fp_213,N_211,r0_201,r1_210,r11_200,r2_207,r3_214,r5_212,r7_209,r8_203,r9_204,sp_195,V_199,Z_208,ZN_197
// DataOut: ap fp r0 r2 r5 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:<invalid> r0:<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):(word16) r0

l00010156:
	word32 sp_101 = sp_195 - 0x00000004
	Mem102[sp_101:word32] = 0x00000001
	Mem105[sp_101 - 0x00000004:word32] = Mem102[ap_100 + 8:word32] - 0x00000004
	Mem107[sp_101 - 0x00000008:word32] = r8_203
	Mem110[sp_101 - 0x0000000C:word32] = r5_212 + 1459
	Mem113[sp_101 - 0x00000010:word32] = r2_207 + 1515
	fn000192D2()
	Mem118[sp_101 - 0x00000014:word32] = r0_201
	Mem121[sp_101 - 0x00000018:word32] = r2_207 + 1515
	Mem123[sp_101 - 0x0000001C:word32] = r2_207
	word32 r0_124 = Mem123[r2_207 + 0x0000C839:word32]
	word32 sp_128
	word32 ap_129
	byte ZN_130
	bool C_131
	bool V_132
	word32 r11_133
	word32 r0_134
	byte CVZN_135
	word32 r8_136
	word32 r9_137
	byte CZN_138
	byte CZ_139
	word32 r2_140
	bool Z_141
	word32 r7_142
	word32 r1_143
	bool N_144
	word32 r5_145
	word32 fp_146
	word32 r3_147
	call Mem123[r0_124:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_100,C_126,CVZN_44,CZ_60,CZN_59,dwLoc04_6,dwLoc08_35,dwLoc0C_92,dwLoc10_93,dwLoc14_94,fp_55,N_53,r0_124,r1_52,r11_42,r2_96,r3_56,r5_95,r7_51,r8_97,r9_46,sp_122,V_127,wLoc02_32,Z_86,ZN_125
		defs: ap_129,C_131,CVZN_135,CZ_139,CZN_138,fp_146,N_144,r0_134,r1_143,r11_133,r2_140,r3_147,r5_145,r7_142,r8_136,r9_137,sp_128,V_132,Z_141,ZN_130
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r0:<invalid> -32(fp):r2 + 1515 -28(fp):r7 + 199 -24(fp):r2 + 1515 -20(fp):r2 + 0x0000C701 -16(fp):r2 + 0x000045EB -12(fp):0x00000001 -8(fp):<invalid> -4(fp):<invalid> -2(fp):(word16) r0

fn000100F4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> -32(fp):r2 + 1515 -28(fp):r7 + 199 -24(fp):r2 + 1515 -20(fp):r2 + 0x0000C701 -16(fp):r2 + 0x000045EB -12(fp):0x00000001 -8(fp):<invalid> -4(fp):<invalid> -2(fp):(word16) r0



void fn000101BB(word32 r0, word32 r2, word32 r5, word32 r7, word32 r8, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2 r5 r7 r8
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r6 sp
// Preserved: sp
l000105C1_thunk_fn000100F4:
	fn000100F4(r0, r2, r5, r7, r9, ap, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000101BB_entry:
	def fp
	def r0
	def r2
	def r5
	def r7
	def r8
	def ap
	def fp
	sp_1 = fp
// DataOut: ap fp r0 r2 r5 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l000101BB:
	vax_bpt()
// DataOut: ap fp r0 r2 r5 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l000101BB_thunk_fn000101BC:
	fn000101BC(r0, r2, r5, r7, r8, ap, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn000101BB_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid>



void fn000101BC(word32 r0, word32 r2, word32 r5, word32 r7, word32 r8, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2 r5 r7 r8
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r6 sp
// Preserved: sp
l000101BC:
	CZN = cond(r0 - 0x00004453)
	N = (bool) CZN (alias)
	V = false
	branch Test(GE,N) l000101C8
// DataOut: ap fp r0 r2 r5 r7 r8
// DataOut (flags): Z
// SymbolicIn:

l000101C3_thunk_fn000101C8:
	fn000101C8(r0, r2, r5, r7, r8, ap, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

l000101C3_thunk_fn000101C5:
	fn000101C5()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000101BC_entry:
	def fp
	def r0
	def r2
	def r5
	def r7
	def r8
	def ap
	def fp
	sp_1 = fp
// DataOut: ap fp r0 r2 r5 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l000101BC:
	CZN_3 = cond(r0 - 0x00004453)
	N_4 = (bool) CZN_3 (alias)
	V_5 = false
	branch r0 >= 0x00004453 l000101C3_thunk_fn000101C8
// DataOut: ap fp r0 r2 r5 r7 r8
// DataOut (flags): Z
// SymbolicIn: sp:fp

l000101C3_thunk_fn000101C8:
	fn000101C8(r0, r2, r5, r7, r8, ap, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000101C3_thunk_fn000101C5:
	fn000101C5()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn000101BC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid>



void fn000101C5()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn000101C5_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000101C5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000101C5_thunk_fn000105B1:
	fn000105B1()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn000101C5_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000101C8(word32 r0, word32 r2, word32 r5, word32 r7, word32 r8, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z ap fp r0 r2 r5 r7 r8
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r6 sp
// Preserved: sp
fn000101C8_entry:
	word32 sp_1 = fp
// DataOut: ap fp r0 r2 r5 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000101C8:
	branch Z l000101CD
// DataOut: ap fp r0 r2 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000101CD:
	branch r0 >= 0x00004704 l000101D9
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp

l000101D9:
	branch r0 > 0x0000470F l000101F7
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000101F7:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000101D9_1:
	word32 sp_387
	bool Z_388
	word32 r8_389
	byte CZN_390
	bool V_391
	bool C_392
	word32 r4_393
	byte ZN_394
	word32 ap_395
	word32 r1_396
	word32 r0_397
	word32 r3_398
	word32 r6_399
	word32 r2_400
	byte CVZN_401
	word32 r7_402
	bool N_403
	word32 r5_404
	byte VZN_405
	word32 fp_406
	call 0x000101E1 + (r0 - 0x00004704) * 0x00000002 (retsize: 4; depth: 4)
		uses: ap,C,CVZN,CZN_379,dwLoc04,dwLoc08,dwLoc0C,dwLoc10,fp,N_380,r0,r1,r2,r3,r4,r5,r6,r7,r8,sp_1,V_381,VZN,Z,ZN
		defs: ap_395,C_392,CVZN_401,CZN_390,fp_406,N_403,r0_397,r1_396,r2_400,r3_398,r4_393,r5_404,r6_399,r7_402,r8_389,sp_387,V_391,VZN_405,Z_388,ZN_394
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000101D6:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000101D6_thunk_fn000105B1:
	fn000105B1()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000101CA:
// DataOut: ap fp r2 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000103A9:
	word32 r4_321
	branch r8 >=u 0x00000005 l000103B4
// DataOut: ap fp r2 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000103B4:
	word32 r3_346
	branch (uint32) Mem0[Mem0[ap + 4:word32] + 8:byte] == 0x00000000 l000103C8
// DataOut: ap fp r2 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000103C8:
	r3_346 = fn000105F2(ap, fp, out r2, out ap, out fp, out sp_1)
// DataOut: ap fp r2 r3 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid>

l000103BE:
	r3_346 = 0x00004001
// DataOut: ap fp r2 r3 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid>

l000103D8:
	r4_321 = r3_346
// DataOut: ap fp r2 r4 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r4:<invalid> -16(fp):<invalid> -12(fp):r8 -8(fp):0x00000005 -4(fp):0x00000000

l000103AE:
	r4_321 = 0x0000004F
// DataOut: ap fp r2 r4 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000103DB:
	word32 r6_313 = r4_321
	branch r4_321 != 0x00000000 l000103E3
// DataOut: ap fp r2 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid> -12(fp):r8 -8(fp):0x00000005 -4(fp):0x00000000

l000103E3:
	branch Mem0[r2 + 64:word32] == 0x00000000 l00010427
// DataOut: ap fp r2 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid> -12(fp):r8 -8(fp):0x00000005 -4(fp):0x00000000

l000103E8:
	word32 sp_261 = sp_1 - 0x00000004
	Mem262[sp_261:word32] = 0x00000001
	Mem266[sp_261 - 0x00000004:word32] = r2 + 0x000045EB
	Mem269[sp_261 - 0x00000008:word32] = r2 + 0x0000C701
	word32 r2_273
	word32 r3_274
	word32 ap_275
	word32 fp_276
	word32 sp_277
	word32 r0_278 = fn00010892(ap, fp, out r2_273, out r3_274, out ap_275, out fp_276, out sp_277)
	Mem280[sp_277 - 0x00000004:word32] = r0_278
	Mem283[sp_277 - 0x00000008:word32] = r7 + 215
	Mem286[sp_277 - 0x0000000C:word32] = r2_273 + 1515
	fn000192D2()
	Mem291[sp_277 - 0x00000010:word32] = r0_278
	Mem294[sp_277 - 0x00000014:word32] = r2_273 + 1515
	Mem296[sp_277 - 0x00000018:word32] = r2_273
	word32 r0_297 = Mem296[r2_273 + 0x0000C839:word32]
	bool Z_302
	word32 r8_303
	byte CZN_304
	bool V_305
	bool C_306
	word32 r4_307
	byte ZN_308
	word32 ap_309
	word32 r1_310
	word32 r0_311
	word32 r3_312
	byte CVZN_315
	word32 r7_316
	bool N_317
	byte VZN_319
	word32 fp_320
	call Mem296[r0_297:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_275,C_299,CVZN,CZN_28,dwLoc04_31,dwLoc08_32,dwLoc0C_33,dwLoc10_34,fp_276,N,r0_297,r1_37,r2_273,r3_274,r4_38,r5,r6_43,r7,r8,sp_295,V_300,VZN,Z_55,ZN_298
		defs: ap_309,C_306,CVZN_315,CZN_304,fp_320,N_317,r0_311,r1_310,r2_314,r3_312,r4_307,r5_318,r6_313,r7_316,r8_303,sp_301,V_305,VZN_319,Z_302,ZN_308
// DataOut: fp r2 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid> -12(fp):r8 -8(fp):0x00000005 -4(fp):0x00000000

l00010427:
	branch r6_313 >= 0x00000002 l0001042F
// DataOut: fp r2 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l0001042F:
	word32 v24_240 = r6_313 - 0x00000002
	branch v24_240 > 0x00000005 l00010440
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l00010440:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l00010432_1:
	word32 sp_241
	bool Z_242
	word32 r8_243
	byte CZN_244
	bool V_245
	bool C_246
	word32 r4_247
	byte ZN_248
	word32 ap_249
	word32 r1_250
	word32 r0_251
	word32 r3_252
	word32 r6_253
	word32 r2_254
	byte CVZN_255
	word32 r7_256
	bool N_257
	word32 r5_258
	byte VZN_259
	word32 fp_260
	call 0x00010436 + v24_240 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_74,C_238,CVZN_61,CZN_75,dwLoc04_31,dwLoc08_32,dwLoc0C_33,dwLoc10_34,fp_73,N_76,r0_236,r1_65,r2_62,r3_64,r4_66,r5_59,r6_63,r7_60,r8_67,sp_72,V_239,VZN_58,Z_68,ZN_237
		defs: ap_249,C_246,CVZN_255,CZN_244,fp_260,N_257,r0_251,r1_250,r2_254,r3_252,r4_247,r5_258,r6_253,r7_256,r8_243,sp_241,V_245,VZN_259,Z_242,ZN_248
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l0001042C:
// DataOut: fp r2 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l00010520:
	word32 r0_78 = r6_313 & ~0xFFFFFF00
	branch r0_78 == 0x00000002 l00010554
// DataOut: fp r0 r2 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l00010554:
	word32 r0_145 = r6_313 >> 8
	word32 r3_146 = (uint32) (word16) r0_145
	branch r3_146 != 0x00000008 l00010588
// DataOut: fp r0 r2 r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l00010588:
	word32 sp_192 = sp_1 - 0x00000004
	Mem193[sp_192:word32] = 0x00000001
	Mem195[sp_192 - 0x00000004:word32] = r3_146
	Mem198[sp_192 - 0x00000008:word32] = r5 + 1655
	Mem201[sp_192 - 0x0000000C:word32] = r2 + 1515
	fn000192D2()
	Mem206[sp_192 - 0x00000010:word32] = r0_145
	Mem209[sp_192 - 0x00000014:word32] = r2 + 1515
	Mem211[sp_192 - 0x00000018:word32] = r2
	word32 r0_212 = Mem211[r2 + 0x0000C839:word32]
	word32 sp_216
	bool Z_217
	word32 r8_218
	byte CZN_219
	bool V_220
	bool C_221
	word32 r4_222
	byte ZN_223
	word32 ap_224
	word32 r1_225
	word32 r0_226
	word32 r3_227
	word32 r6_228
	word32 r2_229
	byte CVZN_230
	word32 r7_231
	bool N_232
	word32 r5_233
	byte VZN_234
	word32 fp_235
	call Mem211[r0_212:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_74,C_214,CVZN_61,CZN_147,dwLoc04_31,dwLoc08_32,dwLoc0C_33,dwLoc10_34,fp_73,N_76,r0_212,r1_65,r2_62,r3_146,r4_66,r5_59,r6_63,r7_60,r8_67,sp_210,V_215,VZN_58,Z_148,ZN_213
		defs: ap_224,C_221,CVZN_230,CZN_219,fp_235,N_232,r0_226,r1_225,r2_229,r3_227,r4_222,r5_233,r6_228,r7_231,r8_218,sp_216,V_220,VZN_234,Z_217,ZN_223
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l00010561:
	word32 sp_150 = sp_1 - 0x00000004
	Mem151[sp_150:word32] = 0x00000001
	Mem154[sp_150 - 0x00000004:word32] = r5 + 1621
	Mem157[sp_150 - 0x00000008:word32] = r2 + 1515
	fn000192D2()
	Mem162[sp_150 - 0x0000000C:word32] = r0_145
	Mem165[sp_150 - 0x00000010:word32] = r2 + 1515
	Mem167[sp_150 - 0x00000014:word32] = r2
	word32 r0_168 = Mem167[r2 + 0x0000C839:word32]
	word32 sp_172
	bool Z_173
	word32 r8_174
	byte CZN_175
	bool V_176
	bool C_177
	word32 r4_178
	byte ZN_179
	word32 ap_180
	word32 r1_181
	word32 r0_182
	word32 r3_183
	word32 r6_184
	word32 r2_185
	byte CVZN_186
	word32 r7_187
	bool N_188
	word32 r5_189
	byte VZN_190
	word32 fp_191
	call Mem167[r0_168:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_74,C_170,CVZN_61,CZN_147,dwLoc04_31,dwLoc08_32,dwLoc0C_33,dwLoc10_34,fp_73,N_76,r0_168,r1_65,r2_62,r3_146,r4_66,r5_59,r6_63,r7_60,r8_67,sp_166,V_171,VZN_58,Z_148,ZN_169
		defs: ap_180,C_177,CVZN_186,CZN_175,fp_191,N_188,r0_182,r1_181,r2_185,r3_183,r4_178,r5_189,r6_184,r7_187,r8_174,sp_172,V_176,VZN_190,Z_173,ZN_179
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l0001052D:
	word32 sp_103 = sp_1 - 0x00000004
	Mem104[sp_103:word32] = 0x00000001
	Mem107[sp_103 - 0x00000004:word32] = r5 + 1733
	Mem110[sp_103 - 0x00000008:word32] = r2 + 1515
	fn000192D2()
	Mem115[sp_103 - 0x0000000C:word32] = r0_78
	Mem118[sp_103 - 0x00000010:word32] = r2 + 1515
	Mem120[sp_103 - 0x00000014:word32] = r2
	word32 r0_121 = Mem120[r2 + 0x0000C839:word32]
	word32 sp_125
	bool Z_126
	word32 r8_127
	byte CZN_128
	bool V_129
	bool C_130
	word32 r4_131
	byte ZN_132
	word32 ap_133
	word32 r1_134
	word32 r0_135
	word32 r3_136
	word32 r6_137
	word32 r2_138
	byte CVZN_139
	word32 r7_140
	bool N_141
	word32 r5_142
	byte VZN_143
	word32 fp_144
	call Mem120[r0_121:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_74,C_123,CVZN_61,CZN_79,dwLoc04_31,dwLoc08_32,dwLoc0C_33,dwLoc10_34,fp_73,N_76,r0_121,r1_65,r2_62,r3_64,r4_66,r5_59,r6_63,r7_60,r8_67,sp_119,V_124,VZN_58,Z_80,ZN_122
		defs: ap_133,C_130,CVZN_139,CZN_128,fp_144,N_141,r0_135,r1_134,r2_138,r3_136,r4_131,r5_142,r6_137,r7_140,r8_127,sp_125,V_129,VZN_143,Z_126,ZN_132
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l000105AD:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r0:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l000103E0:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid> -12(fp):r8 -8(fp):0x00000005 -4(fp):0x00000000

l000103E0_thunk_fn000105B1:
	fn000105B1()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid> -12(fp):r8 -8(fp):0x00000005 -4(fp):0x00000000

fn000101C8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>



void fn000105B1()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
l000105B1:
	r1 = r8 + 0x00000004
	v7 = Mem0[r9:word32] - r1
	Mem0[r9:word32] = v7
	v9 = Mem0[ap + 4:word32] + r1
	Mem0[ap + 4:word32] = v9
	CZN = cond(Mem0[r9:word32] - 0x00000004)
	C = (bool) CZN (alias)
	V = false
	branch Test(ULT,C) l000105C4
// DataOut: ap fp r0 r2 r5 r7 r9
// DataOut (flags): 
// SymbolicIn:

l000105BF_thunk_fn000105C4:
	fn000105C4(r2, r7, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

l000105C1:
// DataOut: ap fp r0 r2 r5 r7 r9
// DataOut (flags): 
// SymbolicIn:

l000105C1_thunk_fn000100F4:
	fn000100F4(r0, r2, r5, r7, r9, ap, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000101BB_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid>

fn000105B1_entry:
	sp = fp
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000105B1_thunk_fn000101C5:
	fn000101C5()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn000105B1_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000105C4(word32 r2, word32 r7, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r2 r7
// LiveOut:
// Trashed: CVZN ap fp r0 r3 sp
// Preserved:
fn000105C4_entry:
// DataOut: fp r2 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000105C4:
	branch Mem0[r2 + 64:word32] != 0x00000000 l000105EC
// DataOut: fp r2 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000105C9:
	fn000192D2()
	word32 r3_55 = Mem0[r2 + 0x0000C839:word32]
	word32 sp_61
	word32 r2_62
	byte ZN_63
	bool C_64
	bool V_65
	bool Z_66
	word32 r7_67
	word32 r0_68
	word32 r3_69
	bool N_70
	word32 fp_71
	word32 ap_72
	call Mem0[r3_55:word32] + 2 (retsize: 4; depth: 28)
		uses: ap,C_57,dwLoc04_37,dwLoc08_40,dwLoc0C_43,dwLoc10_49,dwLoc14_52,dwLoc18_54,fp,N,r0,r2,r3_55,r7,sp_53,V_58,Z_5,ZN_56
		defs: ap_72,C_64,fp_71,N_70,r0_68,r2_62,r3_69,r7_67,sp_61,V_65,Z_66,ZN_63
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l000105EC:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> -12(fp):r2 + 1515 -8(fp):r7 + 224 -4(fp):0x00000000

fn000105C4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r0:0x00000000 fp:<invalid> ap:<invalid> -12(fp):r2 + 1515 -8(fp):r7 + 224 -4(fp):0x00000000



word32 fn000105F2(word32 ap, word32 fp, ptr32 & r2Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp r0 r2 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 sp
// Preserved:
fn000105F2_entry:
	*r2Out = r2
// DataOut: ap fp r2 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000105F2:
	branch Mem0[ap + 8:word32] <u 0x00000004 l00010617
// DataOut: ap fp r2 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000105FB:
	word32 r0_174
	word32 r2_56
	word32 ap_57
	word32 sp_59
	word32 r0_60 = fn0000E276(ap, fp, out r2_56, out ap_57, out fp, out sp_59)
	r0_174 = r0_60
	branch r0_60 == 0x00000000 l0001061C
// DataOut: ap fp r0 r2 r4 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0001060C:
	r0_174 = Mem0[ap_57 + 12:word32] + 0x00000006
	branch Mem0[ap_57 + 8:word32] >u r0_174 l0001061C
// DataOut: fp r0 r2 r4 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> -8(fp):<invalid>

l0001061C:
	Mem70[sp_59 - 0x00000004:word32] = r0_60
	word32 fp_74
	word32 sp_75
	word32 ap_76 = fn000192B6(fp, out fp_74, out sp_75)
	branch r0_174 != 0x00000000 l0001062E
// DataOut: ap fp r2 r3 r4 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> -8(fp):<invalid>

l0001062E:
	Mem91[sp_75 - 0x00000004:word32] = Mem70[ap_76 + 8:word32] - Mem70[ap_76 + 12:word32]
	Mem95[sp_75 - 0x00000008:word32] = Mem91[ap_76 + 12:word32] + 0x00000004 + Mem91[ap_76 + 4:word32]
	Mem97[sp_75 - 0x0000000C:word32] = r0_60
	Mem99[sp_75 - 0x00000010:word32] = r0_174
	word32 r4_104
	word32 r7_105
	word32 ap_106
	word32 r3_103
	word32 sp_108
	word32 fp_107
	word32 r0_109 = fn00010676(r2_56, r0_60, ap_76, fp_74, out r3_103, out r4_104, out r7_105, out ap_106, out fp_107, out sp_108)
	word32 r2_110 = r0_109
	*r2Out = r2_110
	branch r0_109 != 0x00000000 l00010664
// DataOut: ap fp r2 r3 r4 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> -8(fp):<invalid>

l0001064E:
	word32 r0_137 = Mem99[ap_106 + 16:word32]
	branch r0_137 == 0x00000000 l00010664
// DataOut: ap fp r0 r2 r3 r4 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r8:<invalid> r9:<invalid> r6:0x00000000 r7:<invalid> r10:<invalid> -8(fp):<invalid>

l00010654:
	Mem143[sp_108 - 0x00000004:word32] = r4_104
	Mem145[sp_108 - 0x00000008:word32] = r3_103
	Mem148[sp_108 - 0x0000000C:word32] = Mem145[ap_106 + 8:word32]
	Mem151[sp_108 - 0x00000010:word32] = Mem148[ap_106 + 4:word32]
	byte CVZN_156
	word32 ap_157
	byte CZN_158
	bool V_159
	bool C_160
	word32 r0_161
	word32 r4_162
	byte ZN_163
	bool Z_164
	byte CZ_165
	word32 r2_168
	word32 r7_169
	call Mem151[r0_137:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_106,C_153,CVZN_55,CZ_66,CZN_67,dwLoc08_54,fp_107,r0_137,r2_110,r3_103,r4_104,r7_105,sp_149,V_154,Z_139,ZN_152
		defs: ap_157,C_160,CVZN_156,CZ_165,CZN_158,fp_166,r0_161,r2_168,r3_167,r4_162,r7_169,sp_155,V_159,Z_164,ZN_163
	*r2Out = r0_161
// DataOut: fp r2 r3 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r8:<invalid> r9:<invalid> r6:0x00000000 r7:<invalid> r10:<invalid> -8(fp):<invalid>

l00010664:
	Mem126[sp_108 - 0x00000004:word32] = r3_103
	fn000192B2()
	word32 sp_134 = fp_107 - 0x00000004
	*spOut = sp_134
	word32 fp_135
	*fpOut = Mem126[sp_134 + 0x00000010:word32]
	word32 ap_136
	*apOut = Mem126[sp_134 + 0x0000000C:word32]
	return r2_110
// DataOut: ap fp r0 r2 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r8:<invalid> r9:<invalid> r6:0x00000000 r7:<invalid> r10:<invalid> -8(fp):<invalid>
// Terminates process

l0001062A:
	word32 sp_86
	*spOut = fp_74 - 0x00000004
	word32 fp_87
	*fpOut = Mem70[fp_74 + 0x0000000C:word32]
	word32 ap_88
	*apOut = Mem70[fp_74 + 0x00000008:word32]
	return 0x00000007
// DataOut: ap fp r0 r2 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> -8(fp):<invalid>

l00010617:
	word32 sp_47 = fp - 0x00000004
	*spOut = sp_47
	word32 fp_48
	*fpOut = Mem0[sp_47 + 0x00000010:word32]
	word32 ap_49
	*apOut = Mem0[sp_47 + 0x0000000C:word32]
	return 0x0000004F
// DataOut: ap fp r0 r2 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> -8(fp):<invalid>

fn000105F2_exit:
// DataOut: ap fp r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> -8(fp):<invalid>



word32 fn00010676(word32 r2, word32 r4, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r7Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r2 r4
// LiveOut: ap fp r0 r3 r4 r7 sp
// Trashed: CVZN ap fp r0 r1 r10 r2 r3 r4 r6 r7 r8 r9 sp
// Preserved:
fn00010676_entry:
// DataOut: ap fp r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00010676:
	word32 r3_9 = Mem0[ap + 12:word32]
	word32 ap_16
	word32 fp_17
	word32 sp_18
	word16 v17_20 = (word16) fn0000E25A(ap, fp, out ap_16, out fp_17, out sp_18)
	Mem25[sp_18 - 0x00000004:word32] = r3_9 + 0x00000002
	word32 r2_27
	word32 ap_28
	word32 fp_29
	word32 sp_30
	fn0000E276(ap_16, fp_17, out r2_27, out ap_28, out fp_29, out sp_30)
	Mem34[r2_27 + 0x0000C5F7:word32] = r3_9 + 0x00000006
	Mem36[r2_27 + 132:word32] = Mem34[ap_28 + 16:word32] - 0x00000006
	Mem38[r2_27 + 0x0000C5FB:word32] = Mem36[r2_27 + 132:word32]
	Mem40[r2_27 + 0x0000C6C5:word32] = 0x00000001
	Mem42[r2_27 + 0x0000C6C9:word32] = Mem40[ap_28 + 4:word32]
	Mem44[r2_27 + 0x0000C6CD:word32] = Mem42[ap_28 + 8:word32]
	word32 r0_45 = (uint32) v17_20
	branch r0_45 > 0x00000008 l000106FB
// DataOut: ap fp r0 r3 r4 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000106FB:
	Mem96[Mem96[r4:word32]:real32] = 0.5F + 36.0F
	__halt()
	word32 sp_101
	byte CVZN_102
	byte ZN_103
	bool C_104
	bool V_105
	word32 r2_106
	word32 r8_107
	word32 r9_108
	word32 r6_109
	bool Z_110
	bool N_111
	word32 ap_112
	word32 r3_113
	word32 r0_114
	word32 r7_115
	word32 r10_116
	word32 r4_117
	word32 fp_118
	call fn4000E3D8 (retsize: 4; depth: 4)
		uses: ap_28,C_99,CVZN_26,dwLoc08_11,fp_29,N,r0_45,r10_32,r2_27,r3_9,r4_97,r6_7,r7_22,r8_5,r9_6,sp_30,V_100,Z,ZN_98
		defs: ap_112,C_104,CVZN_102,fp_118,N_111,r0_114,r10_116,r2_106,r3_113,r4_117,r6_109,r7_115,r8_107,r9_108,sp_101,V_105,Z_110,ZN_103
	return r0_114
// DataOut: ap fp r0 r3 r4 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r6:0x00000000 r3:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l000106E7_1:
	word32 sp_77
	byte CVZN_78
	byte ZN_79
	bool C_80
	bool V_81
	word32 r2_82
	word32 r8_83
	word32 r9_84
	word32 r6_85
	bool Z_86
	bool N_87
	word32 ap_88
	word32 r3_89
	word32 r0_90
	word32 r7_91
	word32 r10_92
	word32 r4_93
	word32 fp_94
	call 0x000106EB + r0_45 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_28,C_47,CVZN_26,dwLoc08_11,fp_29,N,r0_45,r10_32,r2_27,r3_9,r4,r6_7,r7_22,r8_5,r9_6,sp_30,V_48,Z,ZN_46
		defs: ap_88,C_80,CVZN_78,fp_94,N_87,r0_90,r10_92,r2_82,r3_89,r4_93,r6_85,r7_91,r8_83,r9_84,sp_77,V_81,Z_86,ZN_79
	return r0_90
// DataOut: ap fp r0 r3 r4 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r6:0x00000000 r3:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -12(fp):<invalid> -8(fp):<invalid>

fn00010676_exit:
// DataOut: ap fp r0 r3 r4 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r6:0x00000000 r3:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r4:r4 + 0x00000004 r2:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -12(fp):<invalid> -8(fp):<invalid>



word32 fn0001084A(word32 r2, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r2
// LiveOut: fp
// Trashed: CVZN ap fp r0 sp
// Preserved:
fn0001084A_entry:
// DataOut: ap fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0001084A:
	branch Mem0[ap + 8:word32] <=u Mem0[r2 + 0x0000C6CD:word32] l00010862
// DataOut: ap fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00010862:
	word32 r3_36 = Mem0[ap + 8:word32]
	fn0001929E()
	Mem49[r2 + 0x0000C6C9:word32] = Mem0[r2 + 0x0000C6C9:word32] + r3_36
	Mem51[r2 + 0x0000C6CD:word32] = Mem49[r2 + 0x0000C6CD:word32] - r3_36
	Mem53[r2 + 0x0000C6FD:word32] = Mem51[r2 + 0x0000C6FD:word32] + r3_36
	return Mem53[fp + 0x0000000C:word32]
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// Terminates process

l0001085E:
	return Mem0[fp + 0x0000000C:word32]
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

fn0001084A_exit:
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> fp:<invalid> ap:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



word32 fn00010892(word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp r0 r2 r3 sp
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn00010892_entry:
// DataOut: ap fp r10 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00010892:
	word32 r3_37 = Mem0[ap + 4:word32]
	*r3Out = r3_37
	word32 r2_15 = Mem0[ap + 8:word32]
	*r2Out = r2_15
	branch Mem0[r3_37:byte] == 0x00 l000108C7
// DataOut: ap fp r10 r2 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l000108A1:
// DataOut: ap fp r10 r2 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid>

l000108A4:
	branch (uint32) Mem0[r3_37:byte] >=u 0x00000020 l000108C0
// DataOut: ap fp r10 r2 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid> r0:<invalid>

l000108C0:
	Mem69[r2_15:byte] = Mem0[r3_37:byte]
	*r3Out = r3_37 + 0x00000001
	*r2Out = r2_15 + 0x00000001
// DataOut: ap fp r10 r2 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid> r0:<invalid>

l000108AC:
	Mem55[r2_15:byte] = 0x5E
	word32 r2_56 = r2_15 + 0x00000001
	Mem62[r2_56:int8] = (int8) ((uint32) Mem55[r3_37:byte] + 0x00000040)
	*r3Out = r3_37 + 0x00000001
	*r2Out = r2_56 + 0x00000001
// DataOut: ap fp r10 r2 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid> r0:<invalid>

l000108C3:
	branch Mem0[r3_37:byte] != 0x00 l000108A4
// DataOut: ap fp r10 r2 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid> r0:<invalid>

l000108C7:
	Mem19[r2_15:byte] = 0x00
	word32 sp_25
	*spOut = fp - 0x00000004
	word32 fp_26
	*fpOut = Mem19[fp + 0x0000000C:word32]
	word32 ap_27
	*apOut = Mem19[fp + 0x00000008:word32]
	return Mem19[ap + 8:word32]
// DataOut: ap fp r0 r10 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid> r0:<invalid>

fn00010892_exit:
// DataOut: ap fp r0 r2 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid>



void fn000108D2(word32 r0, word32 r2, word32 r5, word32 r10, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp pc r0 r10 r2 r5
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000108D2_entry:
// DataOut: fp pc r0 r10 r2 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000108D2:
	word32 fp_14
	word32 sp_15
	fn000192B6(fp, out fp_14, out sp_15)
	Mem19[r2 + 0x0000C5F3:word32] = r0
	Mem23[sp_15 - 0x00000004:uint32] = 0x00008001
	word32 fp_27
	word32 sp_28
	fn000192B6(fp_14, out fp_27, out sp_28)
	Mem31[r2 + 0x0000C6F1:word32] = r0
	Mem33[r2 + 0x0000C6F5:word32] = r0
	branch Mem33[r2 + 0x0000C5F3:word32] == 0x00000000 l0001092D
// DataOut: fp pc r0 r10 r11 r2 r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00010925:
	branch Mem33[r2 + 0x0000C6F1:word32] != 0x00000000 l00010955
// DataOut: fp pc r0 r10 r11 r2 r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:0x00000000 r3:0x00000000 fp:<invalid> ap:<invalid> -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010955:
	Mem129[r2 + 0x0000C62B:word32] = Mem33[r2 + 0x0000C5F3:word32] + 0x00002000
	Mem131[r2 + 0x0000C62F:byte] = 0x50
	Mem133[r2 + 0x0000C639:byte] = 0x50
	Mem135[r2 + 0x0000C634:byte] = 0x50
	Mem137[r2 + 0x0000C630:byte] = 0x4B
	Mem139[r2 + 0x0000C63A:byte] = 0x4B
	Mem141[r2 + 0x0000C635:byte] = 0x4B
	Mem143[sp_28 - 0x00000004:word32] = r5
	Mem147[sp_28 - 0x00000008:word32] = r2 + 0x0000C631
	word32 sp_151
	byte CVZN_152
	byte ZN_153
	bool C_154
	bool V_155
	word32 r11_156
	bool Z_157
	bool N_158
	word32 r3_159
	word32 r0_160
	word32 r2_161
	word32 r10_162
	word32 ap_163
	word32 fp_164
	word32 r5_165
	word32 r4_166
	word32 r6_167
	word32 r7_168
	word32 r8_169
	word32 r9_170
	byte CZN_171
	word32 pc_172
	call Mem147[r4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_144,C_149,CVZN,CZN,dwLoc08_6,dwLoc0C_9,fp_27,N,pc,r0,r10,r11_3,r2,r3_4,r4,r5,r6,r7,r8,r9,sp_145,V_150,Z_125,ZN_148
		defs: ap_163,C_154,CVZN_152,CZN_171,fp_164,N_158,pc_172,r0_160,r10_162,r11_156,r2_161,r3_159,r4_166,r5_165,r6_167,r7_168,r8_169,r9_170,sp_151,V_155,Z_157,ZN_153
	Mem175[sp_151 - 0x00000004:word32] = r5_165 + 3
	Mem179[sp_151 - 0x00000008:word32] = r2_161 + 0x0000C636
	word32 sp_181
	byte CVZN_182
	byte ZN_183
	bool C_184
	bool V_185
	word32 r11_186
	bool Z_187
	bool N_188
	word32 r3_189
	word32 r0_190
	word32 r2_191
	word32 r10_192
	word32 ap_193
	word32 fp_194
	word32 r5_195
	word32 r4_196
	word32 r6_197
	word32 r7_198
	word32 r8_199
	word32 r9_200
	byte CZN_201
	word32 pc_202
	call Mem179[r4_166:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_176,C_154,CVZN_180,CZN_171,dwLoc08_6,dwLoc0C_9,fp_164,N_158,pc_172,r0_160,r10_162,r11_156,r2_161,r3_159,r4_166,r5_165,r6_167,r7_168,r8_169,r9_170,sp_177,V_155,Z_157,ZN_153
		defs: ap_193,C_184,CVZN_182,CZN_201,fp_194,N_188,pc_202,r0_190,r10_192,r11_186,r2_191,r3_189,r4_196,r5_195,r6_197,r7_198,r8_199,r9_200,sp_181,V_185,Z_187,ZN_183
	Mem205[sp_181 - 0x00000004:word32] = r5_195 + 6
	Mem209[sp_181 - 0x00000008:word32] = r2_191 + 0x0000C63B
	word32 sp_211
	byte CVZN_212
	byte ZN_213
	bool C_214
	bool V_215
	bool Z_217
	bool N_218
	word32 r0_220
	word32 r4_226
	word32 r6_227
	word32 r7_228
	word32 r8_229
	word32 r9_230
	byte CZN_231
	word32 r5_1080
	word32 pc_1087
	word32 r10_1077
	word32 r2_1076
	word32 r3_1043
	word32 r11_1189
	word32 fp_1079
	word32 ap_1188
	call Mem209[r4_196:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_206,C_184,CVZN_210,CZN_201,dwLoc08_6,dwLoc0C_9,fp_194,N_188,pc_202,r0_190,r10_192,r11_186,r2_191,r3_189,r4_196,r5_195,r6_197,r7_198,r8_199,r9_200,sp_207,V_185,Z_187,ZN_183
		defs: ap_223,C_214,CVZN_212,CZN_231,fp_224,N_218,pc_232,r0_220,r10_222,r11_216,r2_221,r3_219,r4_226,r5_225,r6_227,r7_228,r8_229,r9_230,sp_211,V_215,Z_217,ZN_213
	Mem241[sp_211 - 0x00000004:word32] = Mem209[r2_1076 + 0x0000C60F:word32]
	fn0000C0CE(r0_220, 0x00000000, ap_1188, pc_1087)
	Mem246[r2_1076 + 0x0000C613:word32] = r0_220
	word32 r6_1082 = 0x00000000
	word32 r7_1083 = 0x00000000
	word32 r8_1084 = 0x00000000
	word32 r4_1081 = 0x00000000
	word32 r9_1085 = 0x00000000
	word32 sp_1066 = sp_211 - 0x00000004
	branch r0_220 != 0x00000000 l000109EF
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:0x00000000 r3:0x00000000 fp:<invalid> ap:<invalid> -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000
// Terminates process

l000109EF:
// DataOut: ap fp pc r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l000109F0:
	r11_1189 = Mem246[r2_1076 + 0x0000C613:word32]
	branch Mem246[r2_1076 + 64:word32] != 0x00000000 l00010A32
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l000109FC:
	branch r3_1043 == 0x00000009 l00010A32
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A01:
	branch r3_1043 == 0x0000004C l00010A32
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A0A:
	branch Mem246[r2_1076 + 72:word32] == 0x00000000 l00010A13
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A0F:
	branch Mem246[r2_1076:word32] == 0x00000000 l00010A32
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A13:
	ap_1188 = r7_1083 + r8_1084 + r6_1082 + r4_1081
	branch ap_1188 <= 0x00000000 l00010A32
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A1F:
	word32 sp_1300 = sp_1066 - 0x00000004
	Mem1301[sp_1300:word32] = 0x00000000
	Mem1303[sp_1300 - 0x00000004:word32] = 0x00000001
	Mem1306[sp_1300 - 0x00000008:word32] = r5_1080 + 9
	Mem1308[sp_1300 - 0x0000000C:word32] = r2_1076
	word32 ap_1309 = Mem1308[r2_1076 + 0x0000C839:word32]
	byte CVZN_1314
	byte ZN_1315
	bool C_1316
	bool V_1317
	bool Z_1319
	bool N_1320
	word32 r0_1322
	word32 r5_1327
	word32 r8_1331
	byte CZN_1333
	call Mem1308[ap_1309:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1309,C_1311,CVZN_1298,CZN_1285,dwLoc08_6,dwLoc0C_9,fp_1187,N_1183,pc_1172,r0_1185,r10_1180,r11_1189,r2_1181,r3_1182,r4_1178,r5_1179,r6_1177,r7_1176,r8_1175,r9_1174,sp_1307,V_1312,Z_1292,ZN_1310
		defs: ap_1325,C_1316,CVZN_1314,CZN_1333,fp_1326,N_1320,pc_1334,r0_1322,r10_1324,r11_1318,r2_1323,r3_1321,r4_1328,r5_1327,r6_1329,r7_1330,r8_1331,r9_1332,sp_1313,V_1317,Z_1319,ZN_1315
// DataOut: ap fp pc r10 r11 r2 r3 r4 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> ap:r7 + r8 + r6 + r4 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A32:
	Mem1209[sp_1066 - 0x00000004:word32] = 0x00000000
	word32 r3_1214
	word32 sp_1221
	word32 r0_1222 = fn00010E6A(r2_1076, r3_1043, r4_1081, r6_1082, r7_1083, r9_1085, ap_1188, fp_1079, out r2_1076, out r3_1214, out r4_1081, out r5_1080, out r8_1084, out r9_1085, out ap_1188, out fp_1079, out sp_1221)
	r3_1043 = r0_1222
	branch r0_1222 != 0x00000001 l00010A48
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> ap:<invalid> sp:sp - 0x0000003C -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A48:
	branch r0_1222 != 0x0000004C l00010A58
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r9:0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A58:
	branch r0_1222 != 0x00000009 l00010A64
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r9:0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A64:
	branch r0_1222 == 0x00000000 l00010A6C
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r9:0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A6C:
	r8_1084 = 0x00000001
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r9:0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A68:
	r7_1083 = r7_1083 + 0x00000001
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r9:0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A5D:
	r4_1081 = r4_1081 + 0x00000001
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r9:0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A51:
	r9_1085 = 0x00000002
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r9:0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A41:
	r6_1082 = r6_1082 + 0x00000001
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r9:0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A6E:
	branch r0_1222 == 0x0000004C l00010A7F
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r7:r7 + 0x00000001 r2:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A77:
	branch r0_1222 <= Mem1209[sp_1221:word32] l00010A7F
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r7:r7 + 0x00000001 r2:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A7C:
	Mem1256[sp_1221:word32] = r0_1222
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r7:r7 + 0x00000001 r2:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A7F:
	Mem1242[sp_1221 - 0x00000004:word32] = Mem1209[r2_1076 + 0x0000C60F:word32]
	fn0000C0CE(r0_1222, r6_1082, ap_1188, pc_1087)
	Mem1247[r2_1076 + 0x0000C613:word32] = r0_1222
	sp_1066 = sp_1221 - 0x00000004
	branch r0_1222 == 0x00000000 l00010A98
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r7:r7 + 0x00000001 r2:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000
// Terminates process

l00010A95:
// DataOut: ap fp pc r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l000109EC:
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A98:
	word32 ap_1005 = r6_1082 + r8_1084 + r7_1083
	branch ap_1005 == 0x00000000 l00010AA4
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AA4:
	ap_1005 = r4_1081 + r9_1085
	branch ap_1005 == 0x00000001 l00010AB0
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r6 + r8 + r7 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AB0:
	branch r11_1189 != 0x00000000 l00010AB7
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r4 + r9 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AB7:
	branch Mem246[sp_1066:word32] != 0x00000009 l00010AC2
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r4 + r9 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AC0:
	Mem1166[sp_1066:word32] = 0x00000000
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r4 + r9 r4:0x00000000 r9:0x00000000 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AC2:
	Mem1021[sp_1066 - 0x00000004:word32] = Mem246[r2_1076 + 0x0000C60F:word32]
	word32 ap_1025
	word32 fp_1026
	word32 sp_1027
	word32 r0_1028 = fn00018F22(ap_1005, fp_1079, out ap_1025, out fp_1026, out sp_1027)
	branch r0_1028 == 0x00000000 l00010B18
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r4 + r9 r4:0x00000000 r9:0x00000000 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B18:
	Mem1096[sp_1027 - 0x00000004:word32] = r11_1189
	fn000192C6()
	Mem1102[r2_1076 + 0x0000C613:word32] = r11_1189
	Mem1105[sp_1027 - 0x00000008:word32] = r5_1080 + 11
	Mem1107[sp_1027 - 0x0000000C:word32] = r0_1028 + r11_1189
	fn000192BE()
	Mem1112[sp_1027 - 0x00000010:word32] = 0x00000001
	word32 r0_1125 = fn00010E6A(r2_1076, r3_1043, 0x00000000, r6_1082, r7_1083, 0x00000000, ap_1025, fp_1026, out r2_1076, out r3_1043, out r4_1081, out r5_1080, out r8_1084, out r9_1085, out ap_1005, out fp_1079, out sp_1066)
	branch r0_1125 != 0x00000001 l00010B48
// DataOut: ap fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:0x00000000 r9:0x00000000 sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000
// Terminates process

l00010B48:
	branch r0_1125 != 0x0000004C l00010B58
// DataOut: ap fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r9:0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B58:
	branch r0_1125 == 0x00000009 l00010B6A
// DataOut: ap fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r9:0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B5D:
	branch r0_1125 == 0x00000000 l00010B68
// DataOut: ap fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r9:0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B68:
	r8_1084 = 0x00000001
// DataOut: ap fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r9:0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B61:
	r7_1083 = r7_1083 + 0x00000001
// DataOut: ap fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r9:0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B51:
	r9_1085 = 0x00000002
// DataOut: ap fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r9:0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B43:
	r6_1082 = r6_1082 + 0x00000001
// DataOut: ap fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r9:0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B6A:
	branch r0_1125 <= Mem1112[sp_1066:word32] l00010B72
// DataOut: ap fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B6F:
	Mem1141[sp_1066:word32] = r0_1125
// DataOut: ap fp pc r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AD3:
	Mem1035[sp_1027 - 0x00000004:uint32] = 0x00000401
	Mem1038[sp_1027 - 0x00000008:word32] = Mem1035[r2_1076 + 0x0000C60F:word32]
	branch Mem1038[r2_1076:word32] == 0x00000000 l00010AEC
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:0x00000000 r9:0x00000000 sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AEC:
	r3_1043 = r10_1077 + 456
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:0x00000000 r9:0x00000000 sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AE2:
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:0x00000000 r9:0x00000000 sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AF1:
	Mem1045[sp_1027 - 0x0000000C:word32] = r3_1043
	Mem1048[sp_1027 - 0x00000010:word32] = r10_1077 + 277
	Mem1051[sp_1027 - 0x00000014:word32] = r2_1076 + 1515
	fn000192D2()
	Mem1056[sp_1027 - 0x00000018:word32] = r0_1028
	Mem1059[sp_1027 - 0x0000001C:word32] = r2_1076 + 1515
	Mem1061[sp_1027 - 0x00000020:word32] = r2_1076
	word32 ap_1062 = Mem1061[r2_1076 + 0x0000C839:word32]
	byte CVZN_1067
	byte ZN_1068
	bool C_1069
	bool V_1070
	word32 r11_1071
	bool Z_1072
	bool N_1073
	word32 r0_1075
	byte CZN_1086
	call Mem1061[ap_1062:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1062,C_1064,CVZN_273,CZN_1015,dwLoc08_6,dwLoc0C_9,fp_1026,N_1018,pc_252,r0_1028,r10_260,r11_264,r2_261,r3_1043,r4_1013,r5_259,r6_257,r7_256,r8_255,r9_1014,sp_1060,V_1065,Z_1040,ZN_1063
		defs: ap_1078,C_1069,CVZN_1067,CZN_1086,fp_1079,N_1073,pc_1087,r0_1075,r10_1077,r11_1071,r2_1076,r3_1074,r4_1081,r5_1080,r6_1082,r7_1083,r8_1084,r9_1085,sp_1066,V_1070,Z_1072,ZN_1068
// DataOut: ap fp pc r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:0x00000000 r9:0x00000000 sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:r10 + 456 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000
// Terminates process

l00010AB4:
// DataOut: ap fp pc r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r4 + r9 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AAD:
// DataOut: ap fp pc r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r4 + r9 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AA1:
// DataOut: ap fp pc r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r6 + r8 + r7 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B72:
	Mem295[sp_1066 - 0x00000004:word32] = Mem246[r2_1076 + 0x0000C60F:word32]
	word32 ap_299
	word32 sp_301
	word32 fp_300
	word32 r0_302 = fn00018F22(ap_1005, fp_1079, out ap_299, out fp_300, out sp_301)
	branch r0_302 != 0x00000000 l00010B86
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B86:
	branch Mem295[r2_1076 + 64:word32] < 0x00000003 l00010B8F
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B8F:
	branch Mem295[r2_1076 + 72:word32] == 0x00000000 l00010BA0
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B94:
	branch Mem295[r2_1076 + 64:word32] == 0x00000000 l00010BA0
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B99:
	branch Mem295[r2_1076:word32] != 0x00000000 l00010BA0
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BA0:
	branch r4_1081 + r7_1083 + r6_1082 > 0x00000000 l00010BAE
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BA9:
	branch r8_1084 == 0x00000001 l00010BD8
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BAE:
	branch Mem295[r2_1076 + 72:word32] == 0x00000000 l00010BB7
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BB3:
	branch Mem295[r2_1076:word32] == 0x00000000 l00010BD8
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BB7:
	branch Mem295[r2_1076 + 68:word32] == 0x00000000 l00010BC2
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BBC:
	branch Mem295[r2_1076 + 64:word32] > 0x00000001 l00010BD8
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BC2:
	Mem953[sp_301 - 0x00000004:uint32] = 0x00000401
	Mem955[sp_301 - 0x00000008:word32] = 0x00000001
	Mem958[sp_301 - 0x0000000C:word32] = r5_1080 + 16
	Mem960[sp_301 - 0x00000010:word32] = r2_1076
	word32 ap_961 = Mem960[r2_1076 + 0x0000C839:word32]
	byte CVZN_966
	byte ZN_967
	bool C_968
	bool V_969
	word32 r11_970
	bool Z_971
	bool N_972
	word32 ap_977
	byte CZN_985
	call Mem960[ap_961:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_961,C_963,CVZN_414,CZN_942,dwLoc08_6,dwLoc0C_9,fp_300,N_403,pc_276,r0_302,r10_284,r11_288,r2_285,r3_286,r4_282,r5_283,r6_281,r7_280,r8_279,r9_278,sp_959,V_964,Z_948,ZN_962
		defs: ap_977,C_968,CVZN_966,CZN_985,fp_978,N_972,pc_986,r0_974,r10_976,r11_970,r2_975,r3_973,r4_980,r5_979,r6_981,r7_982,r8_983,r9_984,sp_965,V_969,Z_971,ZN_967
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BD8:
	branch r8_1084 > 0x00000001 l00010BEB
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): Z
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BDD:
	branch r8_1084 != 0x00000001 l00010C24
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BDF:
	branch r4_1081 + r9_1085 + r7_1083 + r6_1082 <= 0x00000000 l00010C24
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BEB:
	word32 r3_882
	word32 sp_876 = sp_301 - 0x00000004
	Mem878[sp_876:uint32] = 0x00000401
	branch r8_1084 != 0x00000001 l00010BFC
// DataOut: fp pc r0 r10 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BFC:
	r3_882 = r5_1080 + 18
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BF5:
	r3_882 = r5_1080 + 25
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C00:
	Mem884[sp_876 - 0x00000004:word32] = r3_882
	Mem886[sp_876 - 0x00000008:word32] = r8_1084
	Mem889[sp_876 - 0x0000000C:word32] = r10_1077 + 39
	Mem892[sp_876 - 0x00000010:word32] = r2_1076 + 1515
	fn000192D2()
	Mem897[sp_876 - 0x00000014:word32] = r0_302
	Mem900[sp_876 - 0x00000018:word32] = r2_1076 + 1515
	Mem902[sp_876 - 0x0000001C:word32] = r2_1076
	word32 ap_903 = Mem902[r2_1076 + 0x0000C839:word32]
	byte CVZN_908
	byte ZN_909
	bool C_910
	bool V_911
	word32 r11_912
	bool Z_913
	bool N_914
	word32 ap_919
	byte CZN_927
	call Mem902[ap_903:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_903,C_905,CVZN_873,CZN_879,dwLoc08_6,dwLoc0C_9,fp_430,N_436,pc_416,r0_428,r10_423,r11_426,r2_424,r3_882,r4_421,r5_422,r6_420,r7_419,r8_418,r9_417,sp_901,V_906,Z_880,ZN_904
		defs: ap_919,C_910,CVZN_908,CZN_927,fp_920,N_914,pc_928,r0_916,r10_918,r11_912,r2_917,r3_915,r4_922,r5_921,r6_923,r7_924,r8_925,r9_926,sp_907,V_911,Z_913,ZN_909
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000
// Terminates process

l00010C24:
	branch r6_1082 <= 0x00000000 l00010C60
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C28:
	word32 r3_818
	word32 sp_812 = sp_301 - 0x00000004
	Mem814[sp_812:uint32] = 0x00000401
	branch r6_1082 != 0x00000001 l00010C38
// DataOut: fp pc r0 r10 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C38:
	r3_818 = r5_1080 + 30
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C32:
	r3_818 = r5_1080 + 32
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C3C:
	Mem820[sp_812 - 0x00000004:word32] = r3_818
	Mem822[sp_812 - 0x00000008:word32] = r6_1082
	Mem825[sp_812 - 0x0000000C:word32] = r10_1077 + 77
	Mem828[sp_812 - 0x00000010:word32] = r2_1076 + 1515
	fn000192D2()
	Mem833[sp_812 - 0x00000014:word32] = r0_302
	Mem836[sp_812 - 0x00000018:word32] = r2_1076 + 1515
	Mem838[sp_812 - 0x0000001C:word32] = r2_1076
	word32 ap_839 = Mem838[r2_1076 + 0x0000C839:word32]
	byte CVZN_844
	byte ZN_845
	bool C_846
	bool V_847
	word32 r11_848
	bool Z_849
	bool N_850
	word32 ap_855
	byte CZN_863
	call Mem838[ap_839:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_839,C_841,CVZN_453,CZN_815,dwLoc08_6,dwLoc0C_9,fp_456,N_450,pc_439,r0_454,r10_447,r11_452,r2_448,r3_818,r4_445,r5_446,r6_444,r7_443,r8_442,r9_441,sp_837,V_842,Z_816,ZN_840
		defs: ap_855,C_846,CVZN_844,CZN_863,fp_856,N_850,pc_864,r0_852,r10_854,r11_848,r2_853,r3_851,r4_858,r5_857,r6_859,r7_860,r8_861,r9_862,sp_843,V_847,Z_849,ZN_845
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000
// Terminates process

l00010C60:
	branch r7_1083 <= 0x00000000 l00010C9C
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C64:
	word32 r3_757
	word32 sp_751 = sp_301 - 0x00000004
	Mem753[sp_751:uint32] = 0x00000401
	branch r7_1083 != 0x00000001 l00010C74
// DataOut: fp pc r0 r10 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C74:
	r3_757 = r5_1080 + 33
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C6E:
	r3_757 = r5_1080 + 35
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C78:
	Mem759[sp_751 - 0x00000004:word32] = r3_757
	Mem761[sp_751 - 0x00000008:word32] = r7_1083
	Mem764[sp_751 - 0x0000000C:word32] = r10_1077 + 125
	Mem767[sp_751 - 0x00000010:word32] = r2_1076 + 1515
	fn000192D2()
	Mem772[sp_751 - 0x00000014:word32] = r0_302
	Mem775[sp_751 - 0x00000018:word32] = r2_1076 + 1515
	Mem777[sp_751 - 0x0000001C:word32] = r2_1076
	word32 ap_778 = Mem777[r2_1076 + 0x0000C839:word32]
	byte CVZN_783
	byte ZN_784
	bool C_785
	bool V_786
	word32 r11_787
	bool Z_788
	bool N_789
	word32 ap_794
	byte CZN_802
	call Mem777[ap_778:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_778,C_780,CVZN_475,CZN_754,dwLoc08_6,dwLoc0C_9,fp_478,N_472,pc_461,r0_476,r10_469,r11_474,r2_470,r3_757,r4_467,r5_468,r6_466,r7_465,r8_464,r9_463,sp_776,V_781,Z_755,ZN_779
		defs: ap_794,C_785,CVZN_783,CZN_802,fp_795,N_789,pc_803,r0_791,r10_793,r11_787,r2_792,r3_790,r4_797,r5_796,r6_798,r7_799,r8_800,r9_801,sp_782,V_786,Z_788,ZN_784
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000
// Terminates process

l00010C9C:
	branch r4_1081 <= 0x00000000 l00010CD9
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010CA0:
	word32 r3_696
	word32 sp_690 = sp_301 - 0x00000004
	Mem692[sp_690:uint32] = 0x00000401
	branch r4_1081 != 0x00000001 l00010CB0
// DataOut: fp pc r0 r10 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010CB0:
	r3_696 = r5_1080 + 36
// DataOut: fp pc r0 r10 r2 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010CAA:
	r3_696 = r5_1080 + 38
// DataOut: fp pc r0 r10 r2 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010CB4:
	Mem698[sp_690 - 0x00000004:word32] = r3_696
	Mem700[sp_690 - 0x00000008:word32] = r4_1081
	Mem703[sp_690 - 0x0000000C:word32] = r10_1077 + 157
	Mem706[sp_690 - 0x00000010:word32] = r2_1076 + 1515
	fn000192D2()
	Mem711[sp_690 - 0x00000014:word32] = r0_302
	Mem714[sp_690 - 0x00000018:word32] = r2_1076 + 1515
	Mem716[sp_690 - 0x0000001C:word32] = r2_1076
	word32 ap_717 = Mem716[r2_1076 + 0x0000C839:word32]
	byte CVZN_722
	byte ZN_723
	bool C_724
	bool V_725
	word32 r11_726
	bool Z_727
	bool N_728
	word32 ap_733
	word32 r5_735
	word32 r4_736
	byte CZN_741
	call Mem716[ap_717:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_717,C_719,CVZN_497,CZN_693,dwLoc08_6,dwLoc0C_9,fp_500,N_494,pc_483,r0_498,r10_491,r11_496,r2_492,r3_696,r4_489,r5_490,r6_488,r7_487,r8_486,r9_485,sp_715,V_720,Z_694,ZN_718
		defs: ap_733,C_724,CVZN_722,CZN_741,fp_734,N_728,pc_742,r0_730,r10_732,r11_726,r2_731,r3_729,r4_736,r5_735,r6_737,r7_738,r8_739,r9_740,sp_721,V_725,Z_727,ZN_723
// DataOut: fp pc r0 r10 r2 r3 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000
// Terminates process

l00010CD9:
	branch r9_1085 != 0x00000001 l00010D08
// DataOut: fp pc r0 r10 r2 r3 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D08:
	branch r9_1085 <= 0x00000000 l00010D34
// DataOut: fp pc r0 r10 r2 r3 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D0C:
	word32 sp_643 = sp_301 - 0x00000004
	Mem645[sp_643:uint32] = 0x00000401
	Mem647[sp_643 - 0x00000004:word32] = r9_1085
	Mem650[sp_643 - 0x00000008:word32] = r10_1077 + 224
	Mem653[sp_643 - 0x0000000C:word32] = r2_1076 + 1515
	fn000192D2()
	Mem658[sp_643 - 0x00000010:word32] = r0_302
	Mem661[sp_643 - 0x00000014:word32] = r2_1076 + 1515
	Mem663[sp_643 - 0x00000018:word32] = r2_1076
	word32 ap_664 = Mem663[r2_1076 + 0x0000C839:word32]
	byte CVZN_669
	byte ZN_670
	bool C_671
	bool V_672
	word32 r11_673
	bool Z_674
	bool N_675
	word32 ap_680
	word32 r5_682
	word32 r4_683
	word32 r9_687
	byte CZN_688
	call Mem663[ap_664:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_664,C_666,CVZN_517,CZN_524,dwLoc08_6,dwLoc0C_9,fp_522,N_515,pc_505,r0_518,r10_512,r11_516,r2_513,r3_514,r4_510,r5_511,r6_509,r7_508,r8_507,r9_506,sp_662,V_667,Z_525,ZN_665
		defs: ap_680,C_671,CVZN_669,CZN_688,fp_681,N_675,pc_689,r0_677,r10_679,r11_673,r2_678,r3_676,r4_683,r5_682,r6_684,r7_685,r8_686,r9_687,sp_668,V_672,Z_674,ZN_670
// DataOut: fp pc r0 r10 r2 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000
// Terminates process

l00010CDE:
	word32 sp_595 = sp_301 - 0x00000004
	Mem597[sp_595:uint32] = 0x00000401
	Mem600[sp_595 - 0x00000004:word32] = r10_1077 + 194
	Mem603[sp_595 - 0x00000008:word32] = r2_1076 + 1515
	fn000192D2()
	Mem608[sp_595 - 0x0000000C:word32] = r0_302
	Mem611[sp_595 - 0x00000010:word32] = r2_1076 + 1515
	Mem613[sp_595 - 0x00000014:word32] = r2_1076
	word32 ap_614 = Mem613[r2_1076 + 0x0000C839:word32]
	byte CVZN_619
	byte ZN_620
	bool C_621
	bool V_622
	word32 r11_623
	bool Z_624
	bool N_625
	word32 ap_630
	word32 r5_632
	word32 r4_633
	word32 r9_637
	byte CZN_638
	call Mem613[ap_614:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_614,C_616,CVZN_517,CZN_524,dwLoc08_6,dwLoc0C_9,fp_522,N_515,pc_505,r0_518,r10_512,r11_516,r2_513,r3_514,r4_510,r5_511,r6_509,r7_508,r8_507,r9_506,sp_612,V_617,Z_525,ZN_615
		defs: ap_630,C_621,CVZN_619,CZN_638,fp_631,N_625,pc_639,r0_627,r10_629,r11_623,r2_628,r3_626,r4_633,r5_632,r6_634,r7_635,r8_636,r9_637,sp_618,V_622,Z_624,ZN_620
// DataOut: fp pc r0 r10 r2 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000
// Terminates process

l00010D34:
	branch r7_1083 + r8_1084 + r6_1082 != 0x00000000 l00010D63
// DataOut: fp pc r0 r10 r2 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D3D:
	word32 sp_550 = sp_301 - 0x00000004
	Mem552[sp_550:uint32] = 0x00000401
	Mem555[sp_550 - 0x00000004:word32] = r10_1077 + 257
	Mem558[sp_550 - 0x00000008:word32] = r2_1076 + 1515
	fn000192D2()
	Mem563[sp_550 - 0x0000000C:word32] = r0_302
	Mem566[sp_550 - 0x00000010:word32] = r2_1076 + 1515
	Mem568[sp_550 - 0x00000014:word32] = r2_1076
	word32 ap_569 = Mem568[r2_1076 + 0x0000C839:word32]
	word32 sp_573
	byte CVZN_574
	byte ZN_575
	bool C_576
	bool V_577
	word32 r11_578
	bool Z_579
	bool N_580
	word32 r0_582
	word32 r2_583
	word32 ap_585
	word32 r5_587
	word32 r4_588
	word32 r9_592
	byte CZN_593
	call Mem568[ap_569:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_569,C_571,CVZN_548,CZN_528,dwLoc08_6,dwLoc0C_9,fp_545,N_538,pc_527,r0_540,r10_535,r11_539,r2_536,r3_537,r4_533,r5_534,r6_532,r7_531,r8_530,r9_529,sp_567,V_572,Z_549,ZN_570
		defs: ap_585,C_576,CVZN_574,CZN_593,fp_586,N_580,pc_594,r0_582,r10_584,r11_578,r2_583,r3_581,r4_588,r5_587,r6_589,r7_590,r8_591,r9_592,sp_573,V_577,Z_579,ZN_575
// DataOut: fp pc r10 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000
// Terminates process

l00010B9D:
// DataOut: fp pc r10 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B8C:
// DataOut: fp pc r10 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B83:
// DataOut: fp pc r10 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D63:
	word32 ap_321
	word32 fp_322
	word32 sp_323
	word32 r0_324 = fn0001872A(r3_1043, fp_300, out ap_321, out fp_322, out sp_323)
	Mem326[sp_323 - 0x00000004:word32] = 0x00000005
	Mem328[sp_323 - 0x00000008:word32] = 0x00000000
	word32 ap_332
	word32 fp_333
	word32 sp_334
	word32 r2_335 = fn0000C6FA(r0_324, r6_1082, r7_1083, r8_1084, r10_1077, ap_321, fp_322, pc_1087, out ap_332, out fp_333, out sp_334)
	branch Mem328[r2_335 + 0x0000C5EB:word32] == 0x00000000 l00010D8A
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D7D:
	fn0000D406(ap_332, fp_333, out sp_334)
	Mem397[r2_335 + 0x0000C5EB:word32] = 0x00000000
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> pc:<invalid> r3:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D8A:
	branch Mem328[r2_335 + 0x0000C815:word32] == 0x00000000 l00010DA5
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> pc:<invalid> r3:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D92:
	sp_334 = sp_334 - 0x00000004
	Mem384[sp_334:word32] = Mem328[r2_335 + 0x0000C815:word32]
	fn000192B2()
	Mem389[r2_335 + 0x0000C815:word32] = 0x00000000
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> pc:<invalid> r3:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000
// Terminates process

l00010DA5:
	branch Mem328[r2_335 + 0x0000C6F1:word32] == 0x00000000 l00010DBA
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> pc:<invalid> r3:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010DAD:
	sp_334 = sp_334 - 0x00000004
	Mem378[sp_334:word32] = Mem328[r2_335 + 0x0000C6F1:word32]
	fn000192B2()
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> pc:<invalid> r3:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000
// Terminates process

l00010DBA:
	branch Mem328[r2_335 + 0x0000C5F3:word32] == 0x00000000 l00010DCF
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> pc:<invalid> r3:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010DC2:
	Mem372[sp_334 - 0x00000004:word32] = Mem328[r2_335 + 0x0000C5F3:word32]
	fn000192B2()
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> pc:<invalid> r3:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000
// Terminates process

l00010DCF:
	Mem360[r2_335 + 0x0000C6F1:word32] = 0x00000000
	Mem362[r2_335 + 0x0000C5F3:word32] = 0x00000000
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> pc:<invalid> r3:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l0001092D:
	Mem63[sp_28 - 0x00000004:uint32] = 0x00000401
	Mem66[sp_28 - 0x00000008:word32] = r10
	Mem69[sp_28 - 0x0000000C:word32] = r2 + 1515
	fn000192D2()
	Mem74[sp_28 - 0x00000010:word32] = r0
	Mem77[sp_28 - 0x00000014:word32] = r2 + 1515
	Mem79[sp_28 - 0x00000018:word32] = r2
	word32 ap_80 = Mem79[r2 + 0x0000C839:word32]
	word32 sp_94
	byte CVZN_95
	byte ZN_96
	bool C_97
	bool V_98
	word32 r11_99
	bool Z_100
	bool N_101
	word32 r3_102
	word32 r0_103
	word32 r2_104
	word32 r10_105
	word32 ap_106
	word32 fp_107
	word32 r5_108
	word32 r4_109
	word32 r6_110
	word32 r7_111
	word32 r8_112
	word32 r9_113
	byte CZN_114
	word32 pc_115
	call Mem79[ap_80:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_80,C_82,CVZN,CZN,dwLoc08_6,dwLoc0C_9,fp_27,N,pc,r0,r10,r11_3,r2,r3_4,r4,r5,r6,r7,r8,r9,sp_78,V_83,Z_35,ZN_81
		defs: ap_106,C_97,CVZN_95,CZN_114,fp_107,N_101,pc_115,r0_103,r10_105,r11_99,r2_104,r3_102,r4_109,r5_108,r6_110,r7_111,r8_112,r9_113,sp_94,V_98,Z_100,ZN_96
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:0x00000000 r3:0x00000000 fp:<invalid> ap:<invalid> -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000
// Terminates process

fn000108D2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> pc:<invalid> r3:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:r6 + 0x00000001 r7:r7 + 0x00000001 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000



word32 fn00010E6A(word32 r2, word32 r3, word32 r4, word32 r6, word32 r7, word32 r9, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r2 r3 r4 r6 r7 r9
// LiveOut: ap fp r0 r2 r3 r4 r5 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r8 r9 sp
// Preserved:
fn00010E6A_entry:
	*r2Out = r2
	*r4Out = r4
	*r3Out = r3
	*r9Out = r9
// DataOut: ap fp pc r10 r11 r2 r3 r4 r6 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00010E6A:
	word32 r8_1104 = 0x00000000
	*r8Out = r8_1104
	word32 r5_1386
	*r5Out = 0x00000000
	word32 sp_1014
	word32 fp_1095
	word32 ap_1228
	word32 r0_1024 = fn00018F22(ap, fp, out ap_1228, out fp_1095, out sp_1014)
	branch r0_1024 != 0x00000000 l00010EDF
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00010EA5:
	Mem268[sp_1014 - 0x00000004:word32] = r2 + 0x0000C694
	Mem271[sp_1014 - 0x00000008:word32] = Mem268[r2 + 0x0000C613:word32]
	fn000192AA()
	sp_1014 = sp_1014 - 0x00000008
	branch r0_1024 != 0x00000000 l00010EDF
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:0x00000000 r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> -16(fp):<invalid>
// Terminates process

l00010EBC:
	r0_1024 = (uint32) Mem271[r2 + 0x0000C69E:word16] & ~0xFFFF0FFF
	r1 = 0x00000000
	branch r0_1024 != 0x00004000 l00010ED7
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010ED5:
	r1 = 0x00000001
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r0:<invalid> r1:0x00000000 -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010ED7:
	r5_1386 = r1
	*r5Out = r5_1386
	branch r1 != 0x00000000 l00010EDF
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r0:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010EDF:
	branch Mem0[ap_1228 + 4:word32] != 0x00000000 l00010EE7
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010EE7:
	branch Mem0[r2 + 0x0000C6E9:word32] == 0x00000000 l00010F50
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F50:
	word32 sp_201 = sp_1014 - 0x00000004
	Mem203[sp_201:uint32] = 0x00000401
	Mem206[sp_201 - 0x00000004:word32] = Mem203[r2 + 0x0000C613:word32]
	Mem209[sp_201 - 0x00000008:word32] = Mem206[r2 + 0x0000C60F:word32]
	branch Mem209[r2:word32] == 0x00000000 l00010F70
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F70:
	r3 = r6 + 456
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid>

l00010F65:
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid>

l00010F75:
	Mem216[sp_201 - 0x0000000C:word32] = r3
	Mem219[sp_201 - 0x00000010:word32] = r6 + 421
	Mem222[sp_201 - 0x00000014:word32] = r2 + 1515
	fn000192D2()
	Mem227[sp_201 - 0x00000018:word32] = r0_1024
	Mem230[sp_201 - 0x0000001C:word32] = r2 + 1515
	Mem232[sp_201 - 0x00000020:word32] = r2
	word32 r0_233 = Mem232[r2 + 0x0000C839:word32]
	word32 sp_237
	byte CVZN_238
	byte ZN_239
	bool C_240
	bool V_241
	word32 r8_242
	bool Z_243
	bool N_244
	word32 r2_246
	word32 r0_247
	byte CZN_249
	word32 ap_250
	byte VZN_252
	word32 r3_253
	word32 r7_254
	word32 r4_255
	word32 r6_256
	word32 r9_257
	byte CZ_258
	call Mem232[r0_233:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_15,C_235,CVZN_60,CZ,CZN_57,dwLoc10_9,fp_16,N,r0_233,r1_58,r2,r3_214,r4,r5_59,r6,r7,r8_3,r9,sp_231,V_236,VZN,Z_211,ZN_234
		defs: ap_250,C_240,CVZN_238,CZ_258,CZN_249,fp_251,N_244,r0_247,r1_248,r2_246,r3_253,r4_255,r5_245,r6_256,r7_254,r8_242,r9_257,sp_237,V_241,VZN_252,Z_243,ZN_239
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r3:r6 + 456 r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid>
// Terminates process

l00010EEF:
	word32 r4_131
	word32 sp_120 = sp_1014 - 0x00000004
	Mem122[sp_120:uint32] = 0x00000401
	Mem125[sp_120 - 0x00000004:word32] = Mem122[r2 + 0x0000C613:word32]
	word32 r3_126 = Mem125[r2:word32]
	branch r3_126 == 0x00000000 l00010F08
// DataOut: fp pc r0 r10 r11 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F08:
	r4_131 = r7 + 39
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid>

l00010EFF:
	r4_131 = r7 + 40
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid>

l00010F0C:
	Mem133[sp_120 - 0x00000008:word32] = r4_131
	Mem136[sp_120 - 0x0000000C:word32] = Mem133[r2 + 0x0000C60F:word32]
	branch r3_126 == 0x00000000 l00010F24
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid>

l00010F24:
	r3_126 = r6 + 456
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid>

l00010F18:
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid>

l00010F29:
	Mem143[sp_120 - 0x00000010:word32] = r3_126
	Mem146[sp_120 - 0x00000014:word32] = r6 + 340
	Mem149[sp_120 - 0x00000018:word32] = r2 + 1515
	fn000192D2()
	Mem154[sp_120 - 0x0000001C:word32] = r0_1024
	Mem157[sp_120 - 0x00000020:word32] = r2 + 1515
	Mem159[sp_120 - 0x00000024:word32] = r2
	word32 r0_160 = Mem159[r2 + 0x0000C839:word32]
	word32 sp_164
	byte CVZN_165
	byte ZN_166
	bool C_167
	bool V_168
	word32 r8_169
	bool Z_170
	bool N_171
	word32 r2_173
	word32 r0_174
	byte CZN_176
	word32 ap_177
	byte VZN_179
	word32 r3_180
	word32 r7_181
	word32 r4_182
	word32 r6_183
	word32 r9_184
	byte CZ_185
	call Mem159[r0_160:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_15,C_162,CVZN_60,CZ,CZN_57,dwLoc10_9,fp_16,N,r0_160,r1_58,r2,r3_141,r4_131,r5_59,r6,r7,r8_3,r9,sp_158,V_163,VZN,Z_138,ZN_161
		defs: ap_177,C_167,CVZN_165,CZ_185,CZN_176,fp_178,N_171,r0_174,r1_175,r2_173,r3_180,r4_182,r5_172,r6_183,r7_181,r8_169,r9_184,sp_164,V_168,VZN_179,Z_170,ZN_166
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid>
// Terminates process

l00010EE4:
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F98:
	word32 r1_104
	branch r5_1386 == 0x00000000 l00010FA4
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -44(fp):r2 + 1515 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid>

l00010FA4:
	r1_104 = DPB(r1, 0x09, 0)
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -44(fp):r2 + 1515 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid>

l00010F9C:
	r1_104 = DPB(r1, 0x4C, 0)
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -44(fp):r2 + 1515 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid>

l00010FA7:
	word32 sp_95 = fp_1095 - 0x00000004
	*spOut = sp_95
	word32 fp_96
	*fpOut = Mem0[sp_95 + 0x00000010:word32]
	word32 ap_97
	*apOut = Mem0[sp_95 + 0x0000000C:word32]
	return (int32) (int8) r1_104
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -44(fp):r2 + 1515 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid>

l00010EDC:
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r0:<invalid> r1:<invalid> r5:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FAB:
	Mem293[r2 + 0x0000C61B:word32] = Mem271[r2 + 0x0000C6AE:word32]
	fn00009A52()
	branch r0_1024 == 0x00000000 l00010FC5
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r0:<invalid> r1:<invalid> r5:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FC5:
	fn0000D4A2()
	branch r0_1024 == 0x00000000 l00010FD4
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>
// Terminates process

l00010FD4:
	branch Mem293[r2 + 0x0000C5EB:word32] != 0x00000000 l00010FF0
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FDC:
	r0_1024 = fn0000D39E(r0_1024, r6, fp_1095, out r2, out r3, out r4, out r5_1386, out ap_1228, out fp_1095, out sp_1014)
	Mem1409[r2 + 0x0000C5EB:word32] = r0_1024
	branch r0_1024 != 0x00000000 l00010FF0
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FF0:
	Mem332[r2 + 0x0000C61F:word32] = 0x00000000
	Mem334[r2 + 0x0000C5F7:word32] = Mem332[r2 + 0x0000C5F3:word32]
	branch Mem334[r2:word32] != 0x00000000 l00011037
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011005:
	branch Mem334[r2 + 64:word32] != 0x00000000 l00011037
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001100A:
	branch Mem334[r2 + 72:word32] != 0x00000000 l00011037
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001100F:
	word32 sp_1353 = sp_1014 - 0x00000004
	Mem1354[sp_1353:word32] = 0x00000000
	Mem1357[sp_1353 - 0x00000004:word32] = Mem1354[r2 + 0x0000C613:word32]
	Mem1360[sp_1353 - 0x00000008:word32] = r7 + 43
	Mem1363[sp_1353 - 0x0000000C:word32] = r2 + 1515
	fn000192D2()
	Mem1368[sp_1353 - 0x00000010:word32] = r0_1024
	Mem1371[sp_1353 - 0x00000014:word32] = r2 + 1515
	Mem1373[sp_1353 - 0x00000018:word32] = r2
	word32 r0_1374 = Mem1373[r2 + 0x0000C839:word32]
	byte CVZN_1379
	byte ZN_1380
	bool C_1381
	bool V_1382
	bool Z_1384
	bool N_1385
	word32 r1_1389
	byte CZN_1390
	byte VZN_1393
	byte CZ_1399
	call Mem1373[r0_1374:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_330,C_1376,CVZN_286,CZ,CZN_282,dwLoc10_9,fp_329,N,r0_1374,r1_285,r2_325,r3_324,r4_323,r5_326,r6,r7,r8_3,r9,sp_1372,V_1377,VZN,Z_1350,ZN_1375
		defs: ap_1391,C_1381,CVZN_1379,CZ_1399,CZN_1390,fp_1392,N_1385,r0_1388,r1_1389,r2_1387,r3_1394,r4_1396,r5_1386,r6_1397,r7_1395,r8_1383,r9_1398,sp_1378,V_1382,VZN_1393,Z_1384,ZN_1380
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011037:
	branch Mem334[r2:word32] == 0x00000000 l00011060
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001103B:
	sp_1014 = sp_1014 - 0x00000004
	Mem1325[sp_1014:word32] = Mem334[r2 + 0x0000C61B:word32]
	fn000117AA(r0_1024, r2, r6, r8_1104, r9, ap_1228, fp_1095)
	*r9Out = r0_1024
	branch r0_1024 == 0x00000000 l0001104E
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001104E:
	r0_1024 = fn00012A2A(r0_1024, r2, r4, r5_1386, ap_1228, fp_1095, out r3, out r6, out r8_1104, out ap_1228, out fp_1095, out sp_1014)
	r9 = r0_1024
	*r9Out = r9
	branch r0_1024 <= 0x00000001 l00011060
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r9:r0 -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011060:
	branch Mem334[r2:word32] == 0x00000000 l00011067
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011067:
	r0_1024 = Mem334[r2 + 0x0000C61B:word32]
	branch r0_1024 >= 0x000101D0 l0001107C
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001107C:
	*r3Out = 0x000101D0
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011077:
	*r3Out = r0_1024
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011083:
	sp_1014 = sp_1014 - 0x00000004
	Mem1197[sp_1014:word32] = r3
	fn000117AA(r0_1024, r2, r6, r8_1104, r9, ap_1228, fp_1095)
	r9 = r0_1024
	*r9Out = r9
	branch r0_1024 != 0x00000000 l000110EF
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001108F:
	word32 r4_1206 = 0x00000000
	*r4Out = r4_1206
	branch Mem1197[r2 + 0x0000C692:word16] == 0x0000 l000110E7
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r9:r0 -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011099:
	branch Mem1197[r2 + 92:word32] > 0x00000000 l000110AA
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: r9:r0 r4:0x00000000 -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001109E:
	branch Mem1197[r2 + 92:word32] != 0x00000000 l000110E7
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r9:r0 r4:0x00000000 -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000110A0:
	branch Mem1197[r2 + 72:word32] != 0x00000000 l000110E7
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r9:r0 r4:0x00000000 -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000110A5:
	branch Mem1197[r2 + 64:word32] != 0x00000000 l000110E7
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r9:r0 r4:0x00000000 -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000110AA:
	Mem1243[sp_1014 - 0x00000004:word32] = 0x00000001
	Mem1246[sp_1014 - 0x00000008:uint32] = (uint32) Mem1243[r2 + 0x0000C692:word16]
	r0_1024 = fn0000DC76(ap_1228, fp_1095, out ap_1228, out fp_1095, out sp_1014)
	branch r0_1024 == 0x00000000 l000110E7
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r9:r0 r4:0x00000000 -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000110BE:
	Mem1260[sp_1014 - 0x00000004:uint32] = 0x00000401
	Mem1263[sp_1014 - 0x00000008:word32] = r6 + 1864
	Mem1266[sp_1014 - 0x0000000C:word32] = r2 + 1515
	fn000192D2()
	Mem1271[sp_1014 - 0x00000010:word32] = r0_1024
	Mem1274[sp_1014 - 0x00000014:word32] = r2 + 1515
	Mem1276[sp_1014 - 0x00000018:word32] = r2
	word32 r0_1277 = Mem1276[r2 + 0x0000C839:word32]
	byte CVZN_1282
	byte ZN_1283
	bool C_1284
	bool V_1285
	bool Z_1287
	bool N_1288
	word32 r5_1289
	word32 r1_1292
	byte CZN_1293
	byte VZN_1296
	word32 r4_1299
	word32 r9_1301
	byte CZ_1302
	call Mem1276[r0_1277:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1250,C_1279,CVZN_1240,CZ_1238,CZN_1237,dwLoc10_9,fp_1251,N_1235,r0_1277,r1_346,r2_347,r3_1195,r4_1206,r5_348,r6_405,r7_342,r8_408,r9_1201,sp_1275,V_1280,VZN_1241,Z_1255,ZN_1278
		defs: ap_1294,C_1284,CVZN_1282,CZ_1302,CZN_1293,fp_1295,N_1288,r0_1291,r1_1292,r2_1290,r3_1297,r4_1299,r5_1289,r6_1300,r7_1298,r8_1286,r9_1301,sp_1281,V_1285,VZN_1296,Z_1287,ZN_1283
	*r4Out = 0x00000001
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r9:r0 r4:0x00000000 sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000110E7:
	*r9Out = r4_1206
	branch r4_1206 <= 0x00000001 l00011110
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r9:r0 r4:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011064:
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011110:
	branch Mem334[r2 + 92:word32] <= 0x00000000 l0001112A
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011115:
	branch Mem334[r2:word32] != 0x00000000 l0001112A
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001112A:
	word32 r3_1172
	*r3Out = DPB(r3, 0x00, 0)
	branch Mem334[r2:word32] != 0x00000000 l0001113B
// DataOut: fp pc r0 r10 r11 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011130:
	r0_1024 = (uint32) Mem334[r2 + 0x0000C682:word16]
	branch r0_1024 == 0x00000000 l0001113B
// DataOut: fp pc r0 r10 r11 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011139:
	*r3Out = DPB(r3, 0x01, 0)
// DataOut: fp pc r0 r10 r11 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001113B:
	word32 r4_1099 = (int32) (int8) r3_1172
	*r4Out = r4_1099
	branch Mem334[r2:word32] != 0x00000000 l00011145
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011145:
	branch Mem334[r2 + 0x0000C682:word16] != Mem334[r2 + 0x0000C684:word16] l00011155
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011155:
	branch Mem334[r2 + 0x0000C682:word16] <=u Mem334[r2 + 0x0000C684:word16] l0001119C
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001119C:
	word32 sp_1108 = sp_1014 - 0x00000004
	Mem1110[sp_1108:uint32] = 0x00000401
	Mem1113[sp_1108 - 0x00000004:uint32] = (uint32) Mem1110[r2 + 0x0000C684:word16]
	Mem1116[sp_1108 - 0x00000008:uint32] = (uint32) Mem1113[r2 + 0x0000C682:word16]
	Mem1119[sp_1108 - 0x0000000C:word32] = Mem1116[r2 + 0x0000C613:word32]
	Mem1122[sp_1108 - 0x00000010:word32] = r6 + 662
	Mem1125[sp_1108 - 0x00000014:word32] = r2 + 1515
	fn000192D2()
	Mem1130[sp_1108 - 0x00000018:word32] = r0_1024
	Mem1133[sp_1108 - 0x0000001C:word32] = r2 + 1515
	Mem1135[sp_1108 - 0x00000020:word32] = r2
	word32 r0_1136 = Mem1135[r2 + 0x0000C839:word32]
	byte CVZN_1141
	byte ZN_1142
	bool C_1143
	bool V_1144
	bool Z_1146
	bool N_1147
	word32 r5_1148
	word32 r1_1151
	byte CZN_1152
	word32 ap_1153
	byte VZN_1155
	word32 r3_1156
	word32 r9_1160
	byte CZ_1161
	call Mem1135[r0_1136:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_436,C_1138,CVZN_1047,CZ_1045,CZN_1040,dwLoc10_9,fp_435,N_1044,r0_1136,r1_425,r2_426,r3_446,r4_449,r5_427,r6_419,r7_421,r8_429,r9_431,sp_1134,V_1139,VZN_1048,Z_1043,ZN_1137
		defs: ap_1153,C_1143,CVZN_1141,CZ_1161,CZN_1152,fp_1154,N_1147,r0_1150,r1_1151,r2_1149,r3_1156,r4_1158,r5_1148,r6_1159,r7_1157,r8_1145,r9_1160,sp_1140,V_1144,VZN_1155,Z_1146,ZN_1142
	word32 r9_1162
	*r9Out = 0x00000001
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011157:
	word32 sp_1049 = sp_1014 - 0x00000004
	Mem1051[sp_1049:uint32] = 0x00000401
	Mem1054[sp_1049 - 0x00000004:uint32] = (uint32) Mem1051[r2 + 0x0000C684:word16]
	Mem1057[sp_1049 - 0x00000008:uint32] = (uint32) Mem1054[r2 + 0x0000C682:word16]
	Mem1060[sp_1049 - 0x0000000C:word32] = Mem1057[r2 + 0x0000C613:word32]
	Mem1063[sp_1049 - 0x00000010:word32] = r6 + 515
	Mem1066[sp_1049 - 0x00000014:word32] = r2 + 1515
	fn000192D2()
	Mem1071[sp_1049 - 0x00000018:word32] = r0_1024
	Mem1074[sp_1049 - 0x0000001C:word32] = r2 + 1515
	Mem1076[sp_1049 - 0x00000020:word32] = r2
	word32 r0_1077 = Mem1076[r2 + 0x0000C839:word32]
	byte CVZN_1082
	byte ZN_1083
	bool C_1084
	bool V_1085
	word32 r8_1086
	bool Z_1087
	bool N_1088
	word32 r5_1089
	word32 r1_1092
	byte CZN_1093
	word32 ap_1094
	byte VZN_1096
	word32 r3_1097
	word32 r9_1101
	byte CZ_1102
	call Mem1076[r0_1077:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_436,C_1079,CVZN_1047,CZ_1045,CZN_1040,dwLoc10_9,fp_435,N_1044,r0_1077,r1_425,r2_426,r3_446,r4_449,r5_427,r6_419,r7_421,r8_429,r9_431,sp_1075,V_1080,VZN_1048,Z_1043,ZN_1078
		defs: ap_1094,C_1084,CVZN_1082,CZ_1102,CZN_1093,fp_1095,N_1088,r0_1091,r1_1092,r2_1090,r3_1097,r4_1099,r5_1089,r6_1100,r7_1098,r8_1086,r9_1101,sp_1081,V_1085,VZN_1096,Z_1087,ZN_1083
	word32 r9_1103
	*r9Out = 0x0000000B
	*r8Out = 0x00000001
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011152:
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011142:
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000111D9:
	branch r8_1104 == 0x00000000 l000111E0
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000111E0:
	branch r4_1099 == 0x00000000 l00011213
// DataOut: fp pc r0 r10 r11 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000111E4:
	word32 sp_988 = sp_1014 - 0x00000004
	Mem990[sp_988:uint32] = 0x00000401
	Mem993[sp_988 - 0x00000004:word32] = Mem990[r2 + 0x0000C613:word32]
	Mem996[sp_988 - 0x00000008:word32] = r6 + 844
	Mem999[sp_988 - 0x0000000C:word32] = r2 + 1515
	fn000192D2()
	Mem1004[sp_988 - 0x00000010:word32] = r0_1024
	Mem1007[sp_988 - 0x00000014:word32] = r2 + 1515
	Mem1009[sp_988 - 0x00000018:word32] = r2
	word32 r0_1010 = Mem1009[r2 + 0x0000C839:word32]
	byte CVZN_1015
	byte ZN_1016
	bool C_1017
	bool V_1018
	word32 r8_1019
	bool Z_1020
	bool N_1021
	word32 r5_1022
	word32 r1_1025
	byte CZN_1026
	word32 ap_1027
	word32 fp_1028
	byte VZN_1029
	word32 r3_1030
	word32 r4_1032
	word32 r9_1034
	byte CZ_1035
	call Mem1009[r0_1010:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_471,C_1012,CVZN_466,CZ_454,CZN_460,dwLoc10_9,fp_470,N_464,r0_1010,r1_461,r2_462,r3_458,r4_456,r5_463,r6_455,r7_457,r8_465,r9_467,sp_1008,V_1013,VZN_459,Z_586,ZN_1011
		defs: ap_1027,C_1017,CVZN_1015,CZ_1035,CZN_1026,fp_1028,N_1021,r0_1024,r1_1025,r2_1023,r3_1030,r4_1032,r5_1022,r6_1033,r7_1031,r8_1019,r9_1034,sp_1014,V_1018,VZN_1029,Z_1020,ZN_1016
// DataOut: fp pc r0 r10 r11 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011213:
	Mem607[r2 + 0x0000C623:word32] = Mem334[r2 + 124:word32] - Mem334[r2 + 128:word32]
	word32 r4_608 = Mem607[r2 + 0x0000C623:word32]
	branch r4_608 >= 0x00000000 l0001125C
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001125C:
	branch r4_608 > 0x00000000 l00011263
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011263:
	branch Mem607[r2 + 0x0000C68E:word32] != 0x00000000 l000112B8
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001126B:
	branch Mem607[r2 + 0x0000C68A:word32] == 0x00000000 l000112B8
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000112B8:
	word32 r3_866
	word32 sp_860 = sp_1014 - 0x00000004
	Mem862[sp_860:uint32] = 0x00000401
	branch r4_608 != 0x00000001 l000112C8
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000112C8:
	r3_866 = r7 + 57
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000112C2:
	r3_866 = r7 + 59
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000112CC:
	Mem868[sp_860 - 0x00000004:word32] = r3_866
	Mem870[sp_860 - 0x00000008:word32] = r4_608
	Mem873[sp_860 - 0x0000000C:word32] = Mem870[r2 + 0x0000C613:word32]
	Mem876[sp_860 - 0x00000010:word32] = r6 + 1102
	Mem879[sp_860 - 0x00000014:word32] = r2 + 1515
	fn000192D2()
	Mem884[sp_860 - 0x00000018:word32] = r0_1024
	Mem887[sp_860 - 0x0000001C:word32] = r2 + 1515
	Mem889[sp_860 - 0x00000020:word32] = r2
	word32 r0_890 = Mem889[r2 + 0x0000C839:word32]
	byte CVZN_895
	byte ZN_896
	bool C_897
	bool V_898
	word32 r8_899
	bool Z_900
	bool N_901
	word32 r5_902
	word32 r1_905
	byte CZN_906
	word32 ap_907
	word32 fp_908
	byte VZN_909
	word32 r3_910
	word32 r4_912
	word32 r9_914
	byte CZ_915
	call Mem889[r0_890:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_605,C_892,CVZN_599,CZ_589,CZN_863,dwLoc10_9,fp_604,N_610,r0_890,r1_595,r2_596,r3_866,r4_608,r5_597,r6_590,r7_591,r8_598,r9_600,sp_888,V_893,VZN_593,Z_864,ZN_891
		defs: ap_907,C_897,CVZN_895,CZ_915,CZN_906,fp_908,N_901,r0_904,r1_905,r2_903,r3_910,r4_912,r5_902,r6_913,r7_911,r8_899,r9_914,sp_894,V_898,VZN_909,Z_900,ZN_896
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011273:
	word32 sp_932 = sp_1014 - 0x00000004
	Mem934[sp_932:uint32] = 0x00000401
	Mem937[sp_932 - 0x00000004:word32] = Mem934[r2 + 0x0000C613:word32]
	Mem940[sp_932 - 0x00000008:word32] = r6 + 1275
	Mem943[sp_932 - 0x0000000C:word32] = r2 + 1515
	fn000192D2()
	Mem948[sp_932 - 0x00000010:word32] = r0_1024
	Mem951[sp_932 - 0x00000014:word32] = r2 + 1515
	Mem953[sp_932 - 0x00000018:word32] = r2
	word32 r0_954 = Mem953[r2 + 0x0000C839:word32]
	byte CVZN_959
	byte ZN_960
	bool C_961
	bool V_962
	word32 r8_963
	bool Z_964
	bool N_965
	word32 r5_966
	word32 r1_969
	byte CZN_970
	word32 ap_971
	word32 fp_972
	byte VZN_973
	word32 r3_974
	word32 r4_976
	word32 r9_978
	byte CZ_979
	call Mem953[r0_954:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_605,C_956,CVZN_599,CZ_589,CZN_594,dwLoc10_9,fp_604,N_610,r0_954,r1_595,r2_596,r3_592,r4_608,r5_597,r6_590,r7_591,r8_598,r9_600,sp_952,V_957,VZN_593,Z_929,ZN_955
		defs: ap_971,C_961,CVZN_959,CZ_979,CZN_970,fp_972,N_965,r0_968,r1_969,r2_967,r3_974,r4_976,r5_966,r6_977,r7_975,r8_963,r9_978,sp_958,V_962,VZN_973,Z_964,ZN_960
	Mem981[r2 + 0x0000C68E:word32] = Mem953[r2 + 0x0000C623:word32]
	Mem983[r2 + 0x0000C623:word32] = 0x00000000
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011260:
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011227:
	word32 sp_796 = sp_1014 - 0x00000004
	Mem798[sp_796:uint32] = 0x00000401
	Mem801[sp_796 - 0x00000004:word32] = -r4_608
	Mem804[sp_796 - 0x00000008:word32] = Mem801[r2 + 0x0000C613:word32]
	Mem807[sp_796 - 0x0000000C:word32] = r6 + 1199
	Mem810[sp_796 - 0x00000010:word32] = r2 + 1515
	fn000192D2()
	Mem815[sp_796 - 0x00000014:word32] = r0_1024
	Mem818[sp_796 - 0x00000018:word32] = r2 + 1515
	Mem820[sp_796 - 0x0000001C:word32] = r2
	word32 r0_821 = Mem820[r2 + 0x0000C839:word32]
	byte CVZN_826
	byte ZN_827
	bool C_828
	bool V_829
	word32 r8_830
	bool Z_831
	bool N_832
	word32 r5_833
	word32 r1_836
	byte CZN_837
	word32 ap_838
	word32 fp_839
	byte VZN_840
	word32 r3_841
	word32 r4_843
	word32 r9_845
	byte CZ_846
	call Mem820[r0_821:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_605,C_823,CVZN_599,CZ_589,CZN_594,dwLoc10_9,fp_604,N_610,r0_821,r1_595,r2_596,r3_592,r4_608,r5_597,r6_590,r7_591,r8_598,r9_600,sp_819,V_824,VZN_593,Z_601,ZN_822
		defs: ap_838,C_828,CVZN_826,CZ_846,CZN_837,fp_839,N_832,r0_835,r1_836,r2_834,r3_841,r4_843,r5_833,r6_844,r7_842,r8_830,r9_845,sp_825,V_829,VZN_840,Z_831,ZN_827
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000112FA:
	branch Mem607[r2 + 128:word32] == 0x00000000 l00011303
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r9:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011303:
	branch Mem607[r2 + 0x0000C68A:word32] == 0x00000000 l0001130E
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r9:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001130E:
	word32 fp_665
	word32 sp_664
	word32 r9_661
	word32 r2_656
	branch Mem607[r2:word32] == 0x00000000 l00011348
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r9:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011348:
	word32 sp_748 = sp_1014 - 0x00000004
	Mem750[sp_748:uint32] = 0x00000401
	Mem753[sp_748 - 0x00000004:word32] = Mem750[r2 + 0x0000C613:word32]
	Mem756[sp_748 - 0x00000008:word32] = r6 + 1352
	Mem759[sp_748 - 0x0000000C:word32] = r2 + 1515
	fn000192D2()
	Mem764[sp_748 - 0x00000010:word32] = r0_1024
	Mem767[sp_748 - 0x00000014:word32] = r2 + 1515
	Mem769[sp_748 - 0x00000018:word32] = r2
	word32 r0_770 = Mem769[r2 + 0x0000C839:word32]
	byte CVZN_775
	byte ZN_776
	bool C_777
	bool V_778
	word32 r8_779
	bool Z_780
	bool N_781
	word32 r5_782
	word32 r0_784
	word32 r1_785
	byte CZN_786
	word32 ap_787
	byte VZN_789
	word32 r3_790
	word32 r7_791
	word32 r4_792
	word32 r6_793
	byte CZ_795
	call Mem769[r0_770:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_630,C_772,CVZN_625,CZ_613,CZN_619,dwLoc10_9,fp_629,N_623,r0_770,r1_620,r2_621,r3_617,r4_615,r5_622,r6_614,r7_616,r8_624,r9_626,sp_768,V_773,VZN_618,Z_646,ZN_771
		defs: ap_787,C_777,CVZN_775,CZ_795,CZN_786,fp_788,N_781,r0_784,r1_785,r2_783,r3_790,r4_792,r5_782,r6_793,r7_791,r8_779,r9_794,sp_774,V_778,VZN_789,Z_780,ZN_776
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r9:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011312:
	word32 r3_695
	word32 sp_690 = sp_1014 - 0x00000004
	Mem691[sp_690:word32] = 0x00000000
	branch Mem691[r2 + 36:word32] <= 0x00000009 l00011320
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r9:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011320:
	r3_695 = r7 + 78
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r9:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001131A:
	r3_695 = r7 + 79
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r9:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011324:
	Mem697[sp_690 - 0x00000004:word32] = r3_695
	Mem700[sp_690 - 0x00000008:word32] = r7 + 60
	Mem703[sp_690 - 0x0000000C:word32] = r2 + 1515
	fn000192D2()
	Mem708[sp_690 - 0x00000010:word32] = r0_1024
	Mem711[sp_690 - 0x00000014:word32] = r2 + 1515
	Mem713[sp_690 - 0x00000018:word32] = r2
	word32 r0_714 = Mem713[r2 + 0x0000C839:word32]
	byte CVZN_719
	byte ZN_720
	bool C_721
	bool V_722
	word32 r8_723
	bool Z_724
	bool N_725
	word32 r5_726
	word32 r0_728
	word32 r1_729
	byte CZN_730
	word32 ap_731
	byte VZN_733
	word32 r3_734
	word32 r7_735
	word32 r4_736
	word32 r6_737
	byte CZ_739
	call Mem713[r0_714:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_630,C_716,CVZN_625,CZ_613,CZN_692,dwLoc10_9,fp_629,N_623,r0_714,r1_620,r2_621,r3_695,r4_615,r5_622,r6_614,r7_616,r8_624,r9_626,sp_712,V_717,VZN_618,Z_646,ZN_715
		defs: ap_731,C_721,CVZN_719,CZ_739,CZN_730,fp_732,N_725,r0_728,r1_729,r2_727,r3_734,r4_736,r5_726,r6_737,r7_735,r8_723,r9_738,sp_718,V_722,VZN_733,Z_724,ZN_720
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r9:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r1:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011374:
	Mem669[sp_664 - 0x00000004:word32] = Mem607[r2_656 + 0x0000C617:word32]
	fn0001925E()
	branch r9_661 <= 0x00000001 l0001138C
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r0:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>
// Terminates process

l0001138C:
	word32 sp_687 = fp_665 - 0x00000004
	*spOut = sp_687
	word32 fp_688
	*fpOut = Mem669[sp_687 + 0x00000010:word32]
	word32 ap_689
	*apOut = Mem669[sp_687 + 0x0000000C:word32]
	return 0x00000001
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011386:
	word32 sp_680 = fp_665 - 0x00000004
	*spOut = sp_680
	word32 fp_681
	*fpOut = Mem669[sp_680 + 0x00000010:word32]
	word32 ap_682
	*apOut = Mem669[sp_680 + 0x0000000C:word32]
	return r9_661
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001130B:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r9:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011300:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r9:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011390:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r9:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000111DD:
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011742:
	word32 sp_476 = sp_1014 - 0x00000004
	Mem478[sp_476:word32] = Mem334[r2 + 0x0000C617:word32]
	fn0001925E()
	branch Mem478[r2 + 72:word32] == 0x00000000 l000117A3
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>
// Terminates process

l00011754:
	branch Mem478[r2:word32] != 0x00000000 l000117A3
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011758:
	branch Mem478[fp_1095 + -12:word32] == 0x00000000 l000117A3
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001175D:
	Mem519[sp_476 - 0x00000004:word32] = Mem478[fp_1095 + -8:word32]
	Mem522[sp_476 - 0x00000008:word32] = Mem519[r2 + 0x0000C613:word32]
	fn0000BDC2()
	branch r0_1024 == 0x00000000 l000117A3
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>
// Terminates process

l00011771:
	Mem532[sp_476 - 0x0000000C:uint32] = 0x00000201
	Mem535[sp_476 - 0x00000010:word32] = Mem532[r2 + 0x0000C613:word32]
	Mem538[sp_476 - 0x00000014:word32] = r7 + 85
	Mem541[sp_476 - 0x00000018:word32] = r2 + 1515
	fn000192D2()
	Mem546[sp_476 - 0x0000001C:word32] = r0_1024
	Mem549[sp_476 - 0x00000020:word32] = r2 + 1515
	Mem551[sp_476 - 0x00000024:word32] = r2
	word32 r0_552 = Mem551[r2 + 0x0000C839:word32]
	word32 sp_556
	byte CVZN_557
	byte ZN_558
	bool C_559
	bool V_560
	word32 r8_561
	bool Z_562
	bool N_563
	word32 r5_564
	word32 r2_565
	word32 r0_566
	word32 r1_567
	byte CZN_568
	word32 ap_569
	byte VZN_571
	word32 r3_572
	word32 r7_573
	word32 r4_574
	word32 r6_575
	word32 r9_576
	byte CZ_577
	call Mem551[r0_552:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_471,C_554,CVZN_466,CZ_454,CZN_460,dwLoc10_9,fp_470,N_464,r0_552,r1_461,r2_462,r3_458,r4_456,r5_463,r6_455,r7_457,r8_465,r9_467,sp_550,V_555,VZN_459,Z_527,ZN_553
		defs: ap_569,C_559,CVZN_557,CZ_577,CZN_568,fp_570,N_563,r0_566,r1_567,r2_565,r3_572,r4_574,r5_564,r6_575,r7_573,r8_561,r9_576,sp_556,V_560,VZN_571,Z_562,ZN_558
	branch r9_576 > 0x00000000 l000117A3
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>
// Terminates process

l000117A0:
	word32 r9_581
	*r9Out = 0x00000001
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r0:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000117A3:
	word32 sp_506 = fp_1095 - 0x00000004
	*spOut = sp_506
	word32 fp_507
	*fpOut = Mem478[sp_506 + 0x00000010:word32]
	word32 ap_508
	*apOut = Mem478[sp_506 + 0x0000000C:word32]
	return 0x00000001
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r0:<invalid> r9:0x00000001 -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011119:
	Mem1180[sp_1014 - 0x00000004:word32] = Mem334[r2 + 0x0000C617:word32]
	fn0001925E()
	word32 sp_1188 = fp_1095 - 0x00000004
	*spOut = sp_1188
	word32 fp_1189
	*fpOut = Mem1180[sp_1188 + 0x00000010:word32]
	word32 ap_1190
	*apOut = Mem1180[sp_1188 + 0x0000000C:word32]
	return r9
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>
// Terminates process

l0001105D:
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r9:<invalid> sp:<invalid> r8:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r3:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001104B:
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r9:r0 -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000110EF:
	Mem381[sp_1014 - 0x00000004:word32] = Mem334[r2 + 0x0000C617:word32]
	fn0001925E()
	branch Mem381[ap_1228 + 4:word32] == 0x00000000 l00011105
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: r9:<invalid> sp:<invalid> r8:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r3:<invalid> r4:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>
// Terminates process

l00011105:
	Mem397[r2 + 0x0000C6E9:word32] = 0x00000001
	word32 sp_402 = fp_1095 - 0x00000004
	*spOut = sp_402
	word32 fp_403
	*fpOut = Mem397[sp_402 + 0x00000010:word32]
	word32 ap_404
	*apOut = Mem397[sp_402 + 0x0000000C:word32]
	return 0x00000009
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011101:
	word32 sp_393 = fp_1095 - 0x00000004
	*spOut = sp_393
	word32 fp_394
	*fpOut = Mem381[sp_393 + 0x00000010:word32]
	word32 ap_395
	*apOut = Mem381[sp_393 + 0x0000000C:word32]
	return r9
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FEC:
	word32 sp_1418
	*spOut = fp_1095 - 0x00000004
	word32 fp_1419
	*fpOut = Mem1409[fp_1095 + 0x0000000C:word32]
	word32 ap_1420
	*apOut = Mem1409[fp_1095 + 0x00000008:word32]
	return 0x00000004
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FD0:
	word32 sp_316
	*spOut = fp_1095 - 0x00000004
	word32 fp_317
	*fpOut = Mem293[fp_1095 + 0x0000000C:word32]
	word32 ap_318
	*apOut = Mem293[fp_1095 + 0x00000008:word32]
	return 0x00000009
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FC1:
	word32 sp_305
	*spOut = fp_1095 - 0x00000004
	word32 fp_306
	*fpOut = Mem293[fp_1095 + 0x0000000C:word32]
	word32 ap_307
	*apOut = Mem293[fp_1095 + 0x00000008:word32]
	return 0x00000002
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

fn00010E6A_exit:
// DataOut: ap fp r0 r2 r3 r4 r5 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r9:0x00000001 -44(fp):r2 + 1515 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid>



void fn000117AA(word32 r0, word32 r2, word32 r6, word32 r8, word32 r9, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2 r6 r8 r9
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000117AA_entry:
// DataOut: ap fp pc r0 r10 r11 r2 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000117AA:
	word32 r4_3 = 0x00000000
	word32 r5_6 = Mem0[r2 + 0x0000C61B:word32]
	branch r5_6 <= 0x00002000 l000117D7
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000117D7:
	fn0001926E()
	fn00019272()
	Mem33[r2 + 0x0000C5FB:word32] = r0
	word32 sp_156 = fp - 0x00000034
	branch Mem33[r2 + 0x0000C5FB:word32] == Mem33[r2 + 0x0000C61B:word32] l00011816
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000001C r4:0x00000000 r5:<invalid>
// Terminates process

l00011816:
	Mem381[r2 + 0x0000C5F7:word32] = Mem33[r2 + 0x0000C61B:word32] + Mem33[r2 + 0x0000C5F3:word32] - 0x00000016
	branch Mem381[r2 + 0x0000C5F7:word32] >=u Mem381[r2 + 0x0000C5F3:word32] l0001183A
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -40(fp):<invalid> -36(fp):0x0000000000000000

l0001183A:
// DataOut: ap fp pc r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l0001183C:
	word32 r3_391 = Mem381[r2 + 0x0000C5F7:word32]
	r0 = (uint32) Mem381[r3_391:byte]
	branch r0 != 0x00000050 l00011880
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> r0:<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l0001184F:
	word32 sp_404 = sp_156 - 0x00000004
	Mem405[sp_404:word32] = 0x00000004
	Mem408[sp_404 - 0x00000004:word32] = r2 + 0x0000C639
	Mem410[sp_404 - 0x00000008:word32] = r3_391
	fn000192DA()
	sp_156 = sp_404 - 0x00000008
	branch r0 != 0x00000000 l00011880
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> r0:<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000
// Terminates process

l00011880:
	Mem400[r2 + 0x0000C5F7:word32] = Mem381[r2 + 0x0000C5F7:word32] - 0x00000001
	branch Mem400[r2 + 0x0000C5F7:word32] >=u Mem400[r2 + 0x0000C5F3:word32] l0001183C
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> r0:<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011893:
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> r0:<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011864:
	r0 = Mem410[r2 + 0x0000C5F7:word32] - Mem410[r2 + 0x0000C5F3:word32]
	Mem420[r2 + 0x0000C5FB:word32] = Mem410[r2 + 0x0000C5FB:word32] - r0
	r4_3 = 0x00000001
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -40(fp):<invalid> -36(fp):0x0000000000000000

l00011837:
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011813:
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -40(fp):<invalid> -36(fp):0x0000000000000000

l00011A92:
	branch true l00011AF4
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> r0:<invalid> r4:0x00000001 -40(fp):<invalid> -36(fp):0x0000000000000000

l00011AF4:
	word32 r3_179 = Mem33[r2 + 0x0000C5F7:word32] - Mem33[r2 + 0x0000C5F3:word32]
	Mem181[r2 + 124:word32] = r3_179 + Mem33[r2 + 0x0000C61F:word32]
	word32 sp_182 = sp_156 - 0x00000004
	Mem183[sp_182:word32] = 0x00000016
	Mem186[sp_182 - 0x00000004:word32] = fp + -26
	word32 r2_190
	word32 r7_191
	word32 ap_192
	word32 fp_193
	word32 sp_194
	word32 r0_195 = fn0000D5BE(r0, r4_3, r6, ap, fp, out r2_190, out r7_191, out ap_192, out fp_193, out sp_194)
	branch r0_195 != 0x00000000 l00011B1D
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> r0:<invalid> r4:0x00000001 -40(fp):<invalid> -36(fp):0x0000000000000000

l00011B1D:
	Mem209[sp_194 - 0x00000004:word32] = fp_193 + -22
	word32 sp_213
	byte CVZN_214
	byte ZN_215
	bool C_216
	bool V_217
	word32 r4_218
	bool Z_219
	bool N_220
	word32 r2_221
	word32 r5_222
	byte CZN_223
	word32 r0_224
	word32 r8_225
	word32 r3_226
	word32 fp_227
	word32 ap_228
	word32 r9_229
	word32 r6_230
	word32 r7_231
	call Mem209[0x00000001:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_192,C_211,CVZN,CZN_38,dwLoc28_15,dwLoc2C_21,dwLoc30_24,dwLoc34_27,fp_193,N,qwLoc24_12,r0_195,r2_190,r3_179,r4_39,r5_6,r6,r7_191,r8,r9,sp_207,V_212,Z_197,ZN_210
		defs: ap_228,C_216,CVZN_214,CZN_223,fp_227,N_220,r0_224,r2_221,r3_226,r4_218,r5_222,r6_230,r7_231,r8_225,r9_229,sp_213,V_217,Z_219,ZN_215
	Mem233[r2_221 + 0x0000C682:word16] = (word16) r0_224
	Mem236[sp_213 - 0x00000004:word32] = fp_227 + -20
	word32 sp_240
	byte CVZN_241
	byte ZN_242
	bool C_243
	bool V_244
	word32 r4_245
	bool Z_246
	bool N_247
	word32 r2_248
	word32 r5_249
	byte CZN_250
	word32 r0_251
	word32 r8_252
	word32 r3_253
	word32 fp_254
	word32 ap_255
	word32 r9_256
	word32 r6_257
	word32 r7_258
	call Mem236[0x00000001:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_228,C_238,CVZN_214,CZN_223,dwLoc28_15,dwLoc2C_21,dwLoc30_24,dwLoc34_27,fp_227,N_220,qwLoc24_12,r0_224,r2_221,r3_226,r4_218,r5_222,r6_230,r7_231,r8_225,r9_229,sp_234,V_239,Z_219,ZN_237
		defs: ap_255,C_243,CVZN_241,CZN_250,fp_254,N_247,r0_251,r2_248,r3_253,r4_245,r5_249,r6_257,r7_258,r8_252,r9_256,sp_240,V_244,Z_246,ZN_242
	Mem260[r2_248 + 0x0000C684:word16] = (word16) r0_251
	Mem263[sp_240 - 0x00000004:word32] = fp_254 + -18
	word32 sp_267
	byte CVZN_268
	byte ZN_269
	bool C_270
	bool V_271
	word32 r4_272
	bool Z_273
	bool N_274
	word32 r2_275
	word32 r5_276
	byte CZN_277
	word32 r0_278
	word32 r8_279
	word32 r3_280
	word32 fp_281
	word32 ap_282
	word32 r9_283
	word32 r6_284
	word32 r7_285
	call Mem263[0x00000001:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_255,C_265,CVZN_241,CZN_250,dwLoc28_15,dwLoc2C_21,dwLoc30_24,dwLoc34_27,fp_254,N_247,qwLoc24_12,r0_251,r2_248,r3_253,r4_245,r5_249,r6_257,r7_258,r8_252,r9_256,sp_261,V_266,Z_246,ZN_264
		defs: ap_282,C_270,CVZN_268,CZN_277,fp_281,N_274,r0_278,r2_275,r3_280,r4_272,r5_276,r6_284,r7_285,r8_279,r9_283,sp_267,V_271,Z_273,ZN_269
	Mem287[r2_275 + 0x0000C686:word16] = (word16) r0_278
	Mem290[sp_267 - 0x00000004:word32] = fp_281 + -16
	word32 sp_294
	byte CVZN_295
	byte ZN_296
	bool C_297
	bool V_298
	word32 r4_299
	bool Z_300
	bool N_301
	word32 r2_302
	word32 r5_303
	byte CZN_304
	word32 r0_305
	word32 r8_306
	word32 r3_307
	word32 fp_308
	word32 ap_309
	word32 r9_310
	word32 r6_311
	word32 r7_312
	call Mem290[0x00000001:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_282,C_292,CVZN_268,CZN_277,dwLoc28_15,dwLoc2C_21,dwLoc30_24,dwLoc34_27,fp_281,N_274,qwLoc24_12,r0_278,r2_275,r3_280,r4_272,r5_276,r6_284,r7_285,r8_279,r9_283,sp_288,V_293,Z_273,ZN_291
		defs: ap_309,C_297,CVZN_295,CZN_304,fp_308,N_301,r0_305,r2_302,r3_307,r4_299,r5_303,r6_311,r7_312,r8_306,r9_310,sp_294,V_298,Z_300,ZN_296
	Mem314[r2_302 + 0x0000C688:word16] = (word16) r0_305
	Mem317[sp_294 - 0x00000004:word32] = fp_308 + -14
	word32 r2_321
	word32 ap_322
	word32 fp_323
	word32 sp_324
	word32 r0_325 = fn0000E276(ap_309, fp_308, out r2_321, out ap_322, out fp_323, out sp_324)
	Mem327[r2_321 + 0x0000C68A:word32] = r0_325
	Mem330[sp_324 - 0x00000004:word32] = fp_323 + -10
	word32 r2_334
	word32 ap_335
	word32 fp_336
	word32 sp_337
	word32 r0_338 = fn0000E276(ap_322, fp_323, out r2_334, out ap_335, out fp_336, out sp_337)
	Mem340[r2_334 + 0x0000C68E:word32] = r0_338
	Mem343[sp_337 - 0x00000004:word32] = fp_336 + -6
	word32 sp_347
	byte CVZN_348
	byte ZN_349
	bool C_350
	bool V_351
	word32 r4_352
	bool Z_353
	bool N_354
	word32 r2_355
	word32 r5_356
	byte CZN_357
	word32 r0_358
	word32 r8_359
	word32 r3_360
	word32 fp_361
	word32 ap_362
	word32 r9_363
	word32 r6_364
	word32 r7_365
	call Mem343[0x00000001:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_335,C_345,CVZN_295,CZN_304,dwLoc28_15,dwLoc2C_21,dwLoc30_24,dwLoc34_27,fp_336,N_301,qwLoc24_12,r0_338,r2_334,r3_307,r4_299,r5_303,r6_311,r7_312,r8_306,r9_310,sp_341,V_346,Z_300,ZN_344
		defs: ap_362,C_350,CVZN_348,CZN_357,fp_361,N_354,r0_358,r2_355,r3_360,r4_352,r5_356,r6_364,r7_365,r8_359,r9_363,sp_347,V_351,Z_353,ZN_349
	Mem367[r2_355 + 0x0000C692:word16] = (word16) r0_358
	Mem369[r2_355 + 128:word32] = Mem367[r2_355 + 0x0000C68A:word32] + Mem367[r2_355 + 0x0000C68E:word32]
	return
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:0x00000001 -40(fp):<invalid> -36(fp):0x0000000000000000

l00011B19:
	return
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:0x00000001 -40(fp):<invalid> -36(fp):0x0000000000000000

l00011A96:
	branch Mem33[r2 + 64:word32] != 0x00000000 l00011A9F
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> r0:<invalid> r4:0x00000001 -40(fp):<invalid> -36(fp):0x0000000000000000

l00011A9B:
	branch Mem33[r2:word32] == 0x00000000 l00011ACA
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> r0:<invalid> r4:0x00000001 -40(fp):<invalid> -36(fp):0x0000000000000000

l00011A9F:
	word32 sp_129 = sp_156 - 0x00000004
	Mem131[sp_129:uint32] = 0x00000401
	Mem134[sp_129 - 0x00000004:word32] = Mem131[r2 + 0x0000C613:word32]
	Mem137[sp_129 - 0x00000008:word32] = r8 + 119
	Mem140[sp_129 - 0x0000000C:word32] = r2 + 1515
	fn000192D2()
	Mem145[sp_129 - 0x00000010:word32] = r0
	Mem148[sp_129 - 0x00000014:word32] = r2 + 1515
	Mem150[sp_129 - 0x00000018:word32] = r2
	word32 r3_151 = Mem150[r2 + 0x0000C839:word32]
	byte CVZN_157
	byte ZN_158
	bool C_159
	bool V_160
	word32 r4_161
	bool Z_162
	bool N_163
	word32 r5_165
	byte CZN_166
	word32 r8_168
	word32 r3_169
	word32 fp_170
	word32 ap_171
	word32 r6_173
	word32 r7_174
	call Mem150[r3_151:word32] + 2 (retsize: 4; depth: 4)
		uses: ap,C_153,CVZN,CZN_38,dwLoc28_15,dwLoc2C_21,dwLoc30_24,dwLoc34_27,fp,N,qwLoc24_12,r0_40,r2,r3_151,r4_39,r5_6,r6,r7,r8,r9,sp_149,V_154,Z_66,ZN_152
		defs: ap_171,C_159,CVZN_157,CZN_166,fp_170,N_163,r0_167,r2_164,r3_169,r4_161,r5_165,r6_173,r7_174,r8_168,r9_172,sp_156,V_160,Z_162,ZN_158
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> r0:<invalid> r4:0x00000001 -40(fp):<invalid> -36(fp):0x0000000000000000

l00011ACA:
	word32 sp_73 = sp_156 - 0x00000004
	Mem75[sp_73:uint32] = 0x00000401
	Mem78[sp_73 - 0x00000004:word32] = r9 + 1608
	Mem81[sp_73 - 0x00000008:word32] = r2 + 1515
	fn000192D2()
	Mem86[sp_73 - 0x0000000C:word32] = r0
	Mem89[sp_73 - 0x00000010:word32] = r2 + 1515
	Mem91[sp_73 - 0x00000014:word32] = r2
	word32 r3_92 = Mem91[r2 + 0x0000C839:word32]
	word32 sp_103
	byte CVZN_104
	byte ZN_105
	bool C_106
	bool V_107
	word32 r4_108
	bool Z_109
	bool N_110
	word32 r2_111
	word32 r5_112
	byte CZN_113
	word32 r0_114
	word32 r8_115
	word32 r3_116
	word32 fp_117
	word32 ap_118
	word32 r9_119
	word32 r6_120
	word32 r7_121
	call Mem91[r3_92:word32] + 2 (retsize: 4; depth: 4)
		uses: ap,C_94,CVZN,CZN_38,dwLoc28_15,dwLoc2C_21,dwLoc30_24,dwLoc34_27,fp,N,qwLoc24_12,r0_71,r2_70,r3_92,r4_39,r5_6,r6,r7,r8,r9_69,sp_90,V_95,Z_66,ZN_93
		defs: ap_118,C_106,CVZN_104,CZN_113,fp_117,N_110,r0_114,r2_111,r3_116,r4_108,r5_112,r6_120,r7_121,r8_115,r9_119,sp_103,V_107,Z_109,ZN_105
	return
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r3:<invalid> r0:<invalid> r4:0x00000001 -40(fp):<invalid> -36(fp):0x0000000000000000
// Terminates process

fn000117AA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:<invalid> sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r4:0x00000001 -40(fp):<invalid> -36(fp):0x0000000000000000

l000117D4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000001C r4:0x00000000 r5:<invalid>

l00011898:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000001C r4:0x00000000 r5:<invalid>



word32 fn00011C0A(word32 r0, word32 r4, word32 r6, word32 ap, word32 fp, ptr32 & r7Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r4 r6
// LiveOut: ap fp r0 r7 sp
// Trashed: CVZN ap fp r0 r1 r2 r7 sp
// Preserved:
fn00011C0A_entry:
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00011C0A:
	word32 r2_11
	word32 r7_12
	word32 fp_13
	word32 sp_14
	word32 r0_15 = fn00011CDA(r0, r4, r6, ap, fp, out r2_11, out r7_12, out fp_13, out sp_14)
	branch r0_15 == 0x00000000 l00011C20
// DataOut: fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00011C20:
	word32 r1_130
	word32 r0_48 = Mem0[r2_11 + 1511:word32]
	branch (uint32) Mem0[r2_11 + 0x0000C659:byte] >=u 0x00000012 l00011C3C
// DataOut: fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid>

l00011C3C:
	r1_130 = DPB(r1, 0x12, 0)
// DataOut: fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> fp:<invalid> r2:<invalid> r7:<invalid>

l00011C31:
	r1_130 = DPB(r1, Mem0[r2_11 + 0x0000C659:byte], 0)
// DataOut: fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> fp:<invalid> r2:<invalid> r7:<invalid>

l00011C3F:
	Mem55[r0_48 + 12:uint32] = (uint32) (byte) r1_130
	word32 ap_56 = Mem55[r2_11 + 1511:word32]
	Mem58[ap_56 + 20:byte] = Mem55[ap_56 + 20:byte] & ~0x10
	branch Mem58[r2_11 + 40:word32] == 0x00000000 l00011C95
// DataOut: fp r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid>

l00011C95:
	branch (Mem58[r2_11 + 0x0000C67A:word32] & 0x00000008) == 0x00000000 l00011CCC
// DataOut: fp r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid>

l00011C9D:
	word32 ap_104 = Mem58[Mem58[r2_11 + 1511:word32] + 12:word32]
	branch ap_104 == 0x00000000 l00011CB7
// DataOut: ap fp r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid>

l00011CA8:
	branch ap_104 == 0x00000006 l00011CB7
// DataOut: ap fp r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid>

l00011CAD:
	branch ap_104 == 0x0000000B l00011CB7
// DataOut: ap fp r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid>

l00011CB2:
	branch ap_104 != 0x00000005 l00011CCC
// DataOut: fp r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid>

l00011CCC:
	word32 ap_97 = Mem58[r2_11 + 1511:word32]
	Mem99[ap_97 + 20:byte] = Mem58[ap_97 + 20:byte] & ~0x20
// DataOut: fp r10 r11 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid>

l00011CB7:
	word32 ap_111 = Mem58[r2_11 + 1511:word32]
	Mem113[ap_111 + 20:byte] = Mem58[ap_111 + 20:byte] | 0x20
	word32 ap_114 = Mem113[r2_11 + 1511:word32]
	Mem116[ap_114 + 20:byte] = Mem113[ap_114 + 20:byte] & ~0x10
// DataOut: fp r10 r11 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid>

l00011CD5:
	word32 sp_92
	*spOut = fp_13 - 0x00000004
	word32 fp_93
	*fpOut = Mem58[fp_13 + 0x0000000C:word32]
	word32 ap_94
	*apOut = Mem58[fp_13 + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid>

l00011C51:
	word32 ap_63 = Mem58[r2_11 + 1511:word32]
	word32 r0_64 = Mem58[ap_63 + 12:word32]
	branch r0_64 > 0x00000011 l00011C80
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid>

l00011C80:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid>

l00011C5A_1:
	word32 sp_69
	byte CVZN_70
	byte ZN_71
	bool C_72
	bool V_73
	word32 r0_74
	bool Z_75
	word32 fp_76
	word32 ap_77
	word32 r2_78
	byte CZN_79
	word32 r1_80
	bool N_81
	word32 r4_82
	word32 r6_83
	word32 r7_84
	call 0x00011C5E + r0_64 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_63,C_66,CVZN,CZN_50,fp_13,N,r0_64,r1_53,r2_11,r4,r6,r7_12,sp_14,V_67,Z_60,ZN_65
		defs: ap_77,C_72,CVZN_70,CZN_79,fp_76,N_81,r0_74,r1_80,r2_78,r4_82,r6_83,r7_84,sp_69,V_73,Z_75,ZN_71
	return r0_74
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid>

l00011C1F:
	word32 sp_40
	*spOut = fp_13 - 0x00000004
	word32 fp_42
	*fpOut = Mem0[fp_13 + 0x0000000C:word32]
	word32 ap_43
	*apOut = Mem0[fp_13 + 0x00000008:word32]
	return r0_15
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid>

fn00011C0A_exit:
// DataOut: ap fp r0 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r7:<invalid>



word32 fn00011CDA(word32 r0, word32 r4, word32 r6, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r7Out, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r4 r6
// LiveOut: fp r0 r2 r7 sp
// Trashed: CVZN ap fp r0 r2 r7 sp
// Preserved:
fn00011CDA_entry:
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00011CDA:
	word32 r2_16
	word32 r7_17
	word32 ap_18
	word32 fp_19
	word32 sp_20
	word32 r0_21 = fn0000D5BE(r0, r4, r6, ap, fp, out r2_16, out r7_17, out ap_18, out fp_19, out sp_20)
	branch r0_21 != 0x00000000 l00011CF8
// DataOut: fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00011CF8:
	Mem57[r2_16 + 0x0000C658:byte] = Mem0[fp_19 + -46:byte]
	Mem59[r2_16 + 0x0000C659:byte] = Mem57[fp_19 + -45:byte]
	Mem61[r2_16 + 0x0000C65A:byte] = Mem59[fp_19 + -44:byte]
	Mem63[r2_16 + 0x0000C65B:byte] = Mem61[fp_19 + -43:byte]
	Mem66[sp_20 - 0x00000004:word32] = fp_19 + -42
	word32 sp_70
	byte CVZN_71
	byte ZN_72
	bool C_73
	bool V_74
	word32 fp_75
	word32 r0_76
	bool Z_77
	word32 ap_78
	word32 r2_79
	word32 r3_80
	word32 r4_81
	bool N_82
	word32 r6_83
	word32 r7_84
	call Mem66[r3:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_18,C_68,CVZN,dwLoc34_4,dwLoc38_8,fp_19,N,r0_21,r2_16,r3,r4,r6,r7_17,sp_64,V_69,Z_23,ZN_67
		defs: ap_78,C_73,CVZN_71,fp_75,N_82,r0_76,r2_79,r3_80,r4_81,r6_83,r7_84,sp_70,V_74,Z_77,ZN_72
	Mem86[r2_79 + 0x0000C65C:word16] = (word16) r0_76
	Mem89[sp_70 - 0x00000004:word32] = fp_75 + -40
	word32 sp_93
	byte CVZN_94
	byte ZN_95
	bool C_96
	bool V_97
	word32 fp_98
	word32 r0_99
	bool Z_100
	word32 ap_101
	word32 r2_102
	word32 r3_103
	word32 r4_104
	bool N_105
	word32 r6_106
	word32 r7_107
	call Mem89[r3_80:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_78,C_91,CVZN_71,dwLoc34_4,dwLoc38_8,fp_75,N_82,r0_76,r2_79,r3_80,r4_81,r6_83,r7_84,sp_87,V_92,Z_77,ZN_90
		defs: ap_101,C_96,CVZN_94,fp_98,N_105,r0_99,r2_102,r3_103,r4_104,r6_106,r7_107,sp_93,V_97,Z_100,ZN_95
	Mem109[r2_102 + 0x0000C65E:word16] = (word16) r0_99
	Mem112[sp_93 - 0x00000004:word32] = fp_98 + -38
	word32 sp_116
	byte CVZN_117
	byte ZN_118
	bool C_119
	bool V_120
	word32 fp_121
	word32 r0_122
	bool Z_123
	word32 ap_124
	word32 r2_125
	word32 r3_126
	word32 r4_127
	bool N_128
	word32 r6_129
	word32 r7_130
	call Mem112[r3_103:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_101,C_114,CVZN_94,dwLoc34_4,dwLoc38_8,fp_98,N_105,r0_99,r2_102,r3_103,r4_104,r6_106,r7_107,sp_110,V_115,Z_100,ZN_113
		defs: ap_124,C_119,CVZN_117,fp_121,N_128,r0_122,r2_125,r3_126,r4_127,r6_129,r7_130,sp_116,V_120,Z_123,ZN_118
	Mem132[r2_125 + 0x0000C660:word16] = (word16) r0_122
	Mem135[sp_116 - 0x00000004:word32] = fp_121 + -36
	word32 sp_139
	byte CVZN_140
	byte ZN_141
	bool C_142
	bool V_143
	word32 fp_144
	word32 r0_145
	bool Z_146
	word32 ap_147
	word32 r2_148
	word32 r3_149
	word32 r4_150
	bool N_151
	word32 r6_152
	word32 r7_153
	call Mem135[r3_126:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_124,C_137,CVZN_117,dwLoc34_4,dwLoc38_8,fp_121,N_128,r0_122,r2_125,r3_126,r4_127,r6_129,r7_130,sp_133,V_138,Z_123,ZN_136
		defs: ap_147,C_142,CVZN_140,fp_144,N_151,r0_145,r2_148,r3_149,r4_150,r6_152,r7_153,sp_139,V_143,Z_146,ZN_141
	Mem155[r2_148 + 0x0000C662:word16] = (word16) r0_145
	Mem158[sp_139 - 0x00000004:word32] = fp_144 + -34
	word32 sp_162
	byte CVZN_163
	byte ZN_164
	bool C_165
	bool V_166
	word32 fp_167
	word32 r0_168
	bool Z_169
	word32 ap_170
	word32 r2_171
	word32 r3_172
	word32 r4_173
	bool N_174
	word32 r6_175
	word32 r7_176
	call Mem158[r4_150:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_147,C_160,CVZN_140,dwLoc34_4,dwLoc38_8,fp_144,N_151,r0_145,r2_148,r3_149,r4_150,r6_152,r7_153,sp_156,V_161,Z_146,ZN_159
		defs: ap_170,C_165,CVZN_163,fp_167,N_174,r0_168,r2_171,r3_172,r4_173,r6_175,r7_176,sp_162,V_166,Z_169,ZN_164
	Mem178[r2_171 + 0x0000C664:word32] = r0_168
	Mem181[sp_162 - 0x00000004:word32] = fp_167 + -30
	word32 sp_185
	byte CVZN_186
	byte ZN_187
	bool C_188
	bool V_189
	word32 fp_190
	word32 r0_191
	bool Z_192
	word32 ap_193
	word32 r2_194
	word32 r3_195
	word32 r4_196
	bool N_197
	word32 r6_198
	word32 r7_199
	call Mem181[r4_173:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_170,C_183,CVZN_163,dwLoc34_4,dwLoc38_8,fp_167,N_174,r0_168,r2_171,r3_172,r4_173,r6_175,r7_176,sp_179,V_184,Z_169,ZN_182
		defs: ap_193,C_188,CVZN_186,fp_190,N_197,r0_191,r2_194,r3_195,r4_196,r6_198,r7_199,sp_185,V_189,Z_192,ZN_187
	Mem201[r2_194 + 0x0000C668:word32] = r0_191
	Mem204[sp_185 - 0x00000004:word32] = fp_190 + -26
	word32 sp_208
	byte CVZN_209
	byte ZN_210
	bool C_211
	bool V_212
	word32 fp_213
	word32 r0_214
	bool Z_215
	word32 ap_216
	word32 r2_217
	word32 r3_218
	word32 r4_219
	bool N_220
	word32 r6_221
	word32 r7_222
	call Mem204[r4_196:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_193,C_206,CVZN_186,dwLoc34_4,dwLoc38_8,fp_190,N_197,r0_191,r2_194,r3_195,r4_196,r6_198,r7_199,sp_202,V_207,Z_192,ZN_205
		defs: ap_216,C_211,CVZN_209,fp_213,N_220,r0_214,r2_217,r3_218,r4_219,r6_221,r7_222,sp_208,V_212,Z_215,ZN_210
	Mem224[r2_217 + 0x0000C66C:word32] = r0_214
	Mem227[sp_208 - 0x00000004:word32] = fp_213 + -22
	word32 sp_231
	byte CVZN_232
	byte ZN_233
	bool C_234
	bool V_235
	word32 fp_236
	word32 r0_237
	bool Z_238
	word32 ap_239
	word32 r2_240
	word32 r3_241
	word32 r4_242
	bool N_243
	word32 r6_244
	word32 r7_245
	call Mem227[r3_218:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_216,C_229,CVZN_209,dwLoc34_4,dwLoc38_8,fp_213,N_220,r0_214,r2_217,r3_218,r4_219,r6_221,r7_222,sp_225,V_230,Z_215,ZN_228
		defs: ap_239,C_234,CVZN_232,fp_236,N_243,r0_237,r2_240,r3_241,r4_242,r6_244,r7_245,sp_231,V_235,Z_238,ZN_233
	Mem247[r2_240 + 0x0000C670:word16] = (word16) r0_237
	Mem250[sp_231 - 0x00000004:word32] = fp_236 + -20
	word32 sp_254
	byte CVZN_255
	byte ZN_256
	bool C_257
	bool V_258
	word32 fp_259
	word32 r0_260
	bool Z_261
	word32 ap_262
	word32 r2_263
	word32 r3_264
	word32 r4_265
	bool N_266
	word32 r6_267
	word32 r7_268
	call Mem250[r3_241:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_239,C_252,CVZN_232,dwLoc34_4,dwLoc38_8,fp_236,N_243,r0_237,r2_240,r3_241,r4_242,r6_244,r7_245,sp_248,V_253,Z_238,ZN_251
		defs: ap_262,C_257,CVZN_255,fp_259,N_266,r0_260,r2_263,r3_264,r4_265,r6_267,r7_268,sp_254,V_258,Z_261,ZN_256
	Mem270[r2_263 + 0x0000C672:word16] = (word16) r0_260
	Mem273[sp_254 - 0x00000004:word32] = fp_259 + -18
	word32 sp_277
	byte CVZN_278
	byte ZN_279
	bool C_280
	bool V_281
	word32 fp_282
	word32 r0_283
	bool Z_284
	word32 ap_285
	word32 r2_286
	word32 r3_287
	word32 r4_288
	bool N_289
	word32 r6_290
	word32 r7_291
	call Mem273[r3_264:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_262,C_275,CVZN_255,dwLoc34_4,dwLoc38_8,fp_259,N_266,r0_260,r2_263,r3_264,r4_265,r6_267,r7_268,sp_271,V_276,Z_261,ZN_274
		defs: ap_285,C_280,CVZN_278,fp_282,N_289,r0_283,r2_286,r3_287,r4_288,r6_290,r7_291,sp_277,V_281,Z_284,ZN_279
	Mem293[r2_286 + 0x0000C674:word16] = (word16) r0_283
	Mem296[sp_277 - 0x00000004:word32] = fp_282 + -16
	word32 sp_300
	byte CVZN_301
	byte ZN_302
	bool C_303
	bool V_304
	word32 fp_305
	word32 r0_306
	bool Z_307
	word32 ap_308
	word32 r2_309
	word32 r3_310
	word32 r4_311
	bool N_312
	word32 r6_313
	word32 r7_314
	call Mem296[r3_287:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_285,C_298,CVZN_278,dwLoc34_4,dwLoc38_8,fp_282,N_289,r0_283,r2_286,r3_287,r4_288,r6_290,r7_291,sp_294,V_299,Z_284,ZN_297
		defs: ap_308,C_303,CVZN_301,fp_305,N_312,r0_306,r2_309,r3_310,r4_311,r6_313,r7_314,sp_300,V_304,Z_307,ZN_302
	Mem316[r2_309 + 0x0000C676:word16] = (word16) r0_306
	Mem319[sp_300 - 0x00000004:word32] = fp_305 + -14
	word32 sp_323
	byte CVZN_324
	byte ZN_325
	bool C_326
	bool V_327
	word32 fp_328
	word32 r0_329
	bool Z_330
	word32 ap_331
	word32 r2_332
	word32 r3_333
	word32 r4_334
	bool N_335
	word32 r6_336
	word32 r7_337
	call Mem319[r3_310:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_308,C_321,CVZN_301,dwLoc34_4,dwLoc38_8,fp_305,N_312,r0_306,r2_309,r3_310,r4_311,r6_313,r7_314,sp_317,V_322,Z_307,ZN_320
		defs: ap_331,C_326,CVZN_324,fp_328,N_335,r0_329,r2_332,r3_333,r4_334,r6_336,r7_337,sp_323,V_327,Z_330,ZN_325
	Mem339[r2_332 + 0x0000C678:word16] = (word16) r0_329
	Mem342[sp_323 - 0x00000004:word32] = fp_328 + -12
	word32 sp_346
	byte CVZN_347
	byte ZN_348
	bool C_349
	bool V_350
	word32 fp_351
	word32 r0_352
	bool Z_353
	word32 ap_354
	word32 r2_355
	word32 r3_356
	word32 r4_357
	bool N_358
	word32 r6_359
	word32 r7_360
	call Mem342[r4_334:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_331,C_344,CVZN_324,dwLoc34_4,dwLoc38_8,fp_328,N_335,r0_329,r2_332,r3_333,r4_334,r6_336,r7_337,sp_340,V_345,Z_330,ZN_343
		defs: ap_354,C_349,CVZN_347,fp_351,N_358,r0_352,r2_355,r3_356,r4_357,r6_359,r7_360,sp_346,V_350,Z_353,ZN_348
	Mem362[r2_355 + 0x0000C67A:word32] = r0_352
	Mem365[sp_346 - 0x00000004:word32] = fp_351 + -8
	word32 sp_369
	byte CVZN_370
	byte ZN_371
	bool C_372
	bool V_373
	word32 fp_374
	word32 r0_375
	bool Z_376
	word32 ap_377
	word32 r2_378
	word32 r3_379
	word32 r4_380
	bool N_381
	word32 r6_382
	word32 r7_383
	call Mem365[r4_357:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_354,C_367,CVZN_347,dwLoc34_4,dwLoc38_8,fp_351,N_358,r0_352,r2_355,r3_356,r4_357,r6_359,r7_360,sp_363,V_368,Z_353,ZN_366
		defs: ap_377,C_372,CVZN_370,fp_374,N_381,r0_375,r2_378,r3_379,r4_380,r6_382,r7_383,sp_369,V_373,Z_376,ZN_371
	Mem385[r2_378 + 0x0000C67E:word32] = r0_375
	word32 sp_391
	*spOut = fp_374 - 0x00000004
	word32 fp_392
	*fpOut = Mem385[fp_374 + 0x0000000C:word32]
	return 0x00000000
// DataOut: fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -56(fp):fp + -46 -52(fp):0x0000002A

l00011CF4:
	word32 sp_49
	*spOut = fp_19 - 0x00000004
	word32 fp_51
	*fpOut = Mem0[fp_19 + 0x0000000C:word32]
	return 0x00000033
// DataOut: fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -56(fp):fp + -46 -52(fp):0x0000002A

fn00011CDA_exit:
// DataOut: fp r0 r2 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> -112(fp):fp + -8 -108(fp):fp + -12 -104(fp):fp + -14 -100(fp):fp + -16 -96(fp):fp + -18 -92(fp):fp + -20 -88(fp):fp + -22 -84(fp):fp + -26 -80(fp):fp + -30 -76(fp):fp + -34 -72(fp):fp + -36 -68(fp):fp + -38 -64(fp):fp + -40 -60(fp):fp + -42 -56(fp):fp + -46 -52(fp):0x0000002A



word32 fn00011ED6(word32 r0, word32 fp, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r0
// LiveOut: fp r0 sp
// Trashed: CVZN ap fp r0 r1 sp
// Preserved:
fn00011ED6_entry:
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00011ED6:
	word32 r1_5 = Mem0[r0 + 0x0000C811:word32] & ~0xFFFF0000
	word32 sp_15
	*spOut = fp - 0x00000004
	word32 fp_16
	*fpOut = Mem0[fp + 0x0000000C:word32]
	return (uint32) SLICE(((r1_5 | 0x00000002) ^ 0x00000001) * (r1_5 | 0x00000002), ui24, 8) & ~0xFFFFFF00
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00011ED6_exit:
// DataOut: fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> ap:<invalid> r0:<invalid> fp:<invalid>



word32 fn00011F06(word32 r2, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r2
// LiveOut: fp r0 r3
// Trashed: CVZN ap fp r0 r1 r3 sp
// Preserved:
fn00011F06_entry:
// DataOut: ap fp pc r11 r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00011F06:
	Mem11[r2 + 0x0000C809:word32] = (uint32) Mem0[r2 + 0x0000C80A:ui24] ^ Mem0[Mem0[r2 + 0x0000C5EB:word32] + ((Mem0[ap + 4:word32] ^ Mem0[r2 + 0x0000C809:word32]) & ~0xFFFFFF00) * 4:word32]
	Mem14[r2 + 0x0000C80D:word32] = Mem11[r2 + 0x0000C80D:word32] + (Mem11[r2 + 0x0000C809:word32] & ~0xFFFFFF00)
	Mem18[r2 + 0x0000C80D:word32] = Mem14[r2 + 0x0000C80D:word32] * 0x08088405 + 0x00000001
	word32 r3_22 = Mem18[r2 + 0x0000C5EB:word32]
	*r3Out = r3_22
	Mem25[r2 + 0x0000C811:word32] = (uint32) Mem18[r2 + 0x0000C812:ui24] ^ Mem18[r3_22 + (((uint32) Mem18[r2 + 0x0000C810:byte] ^ Mem18[r2 + 0x0000C811:word32]) & ~0xFFFFFF00) * 4:word32]
	word32 fp_32
	*fpOut = Mem25[fp + 0x0000000C:word32]
	return Mem25[ap + 4:word32]
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00011F06_exit:
// DataOut: fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r3:<invalid> r1:<invalid> fp:<invalid> ap:<invalid>



void fn000121EA(word32 r0, word32 r2, word32 r3, word32 r7, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2 r3 r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000121EA_entry:
// DataOut: ap fp r0 r2 r3 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000121EA:
	fn00012252(r2, ap, fp)
	branch r0 == 0x00000000 l0001224B
// DataOut: fp r0 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00012206:
	Mem48[fp - 0x00000010:word32] = Mem0[r3 + 0x0000C815:word32]
	fn000192C6()
	Mem54[fp - 0x00000014:word32] = r0 + 0x00000001
	word32 fp_58
	word32 sp_59
	word32 ap_60 = fn000192B6(fp, out fp_58, out sp_59)
	branch r0 != 0x00000001 l00012227
// DataOut: ap fp r2 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: r4:r0 -12(fp):<invalid> -8(fp):<invalid>
// Terminates process

l00012227:
	Mem73[sp_59 - 0x00000004:word32] = Mem54[r3 + 0x0000C815:word32]
	Mem75[sp_59 - 0x00000008:word32] = r0 + 0x00000001
	word32 r2_80
	word32 ap_81
	word32 fp_82
	word32 sp_83
	word32 r0_84 = fn0000E2A6(r7, ap_60, fp_58, out r2_80, out ap_81, out fp_82, out sp_83)
	Mem86[sp_83 - 0x00000004:word32] = r0_84
	Mem89[sp_83 - 0x00000008:word32] = Mem86[ap_81 + 4:word32]
	fn00012252(r2_80, ap_81, fp_82)
	Mem95[sp_83 - 0x0000000C:word32] = r2_80
	fn000192B2()
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: r0:r0 + 0x00000001 sp:<invalid> r2:r0 + 0x00000002 fp:<invalid> ap:<invalid> -12(fp):<invalid> -8(fp):<invalid>
// Terminates process

l0001224B:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r4:r0 -12(fp):<invalid> -8(fp):<invalid>

l00012223:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r0:r0 + 0x00000001 sp:<invalid> r2:r0 + 0x00000002 fp:<invalid> ap:<invalid> -12(fp):<invalid> -8(fp):<invalid>

fn000121EA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r4:r0 r0:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> r2:r0 + 0x00000002 -12(fp):<invalid> -8(fp):<invalid>



void fn00012252(word32 r2, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r2
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00012252_entry:
// DataOut: ap fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012252:
	word32 r4_203 = Mem0[ap + 8:word32]
	Mem7[r2 + 0x0000C809:word32] = 0x12345678
	Mem10[r2 + 0x0000C80D:word32] = 0x23456789
	Mem12[r2 + 0x0000C811:word32] = 0x34567890
	branch Mem12[r4_203:byte] != 0x00 l00012288
// DataOut: ap fp r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012288:
	Mem210[r2 + 0x0000C809:word32] = (uint32) Mem12[r2 + 0x0000C80A:ui24] ^ Mem12[Mem12[r2 + 0x0000C5EB:word32] + (((int32) Mem12[r4_203:int8] ^ Mem12[r2 + 0x0000C809:word32]) & ~0xFFFFFF00) * 4:word32]
	Mem213[r2 + 0x0000C80D:word32] = Mem210[r2 + 0x0000C80D:word32] + (Mem210[r2 + 0x0000C809:word32] & ~0xFFFFFF00)
	Mem217[r2 + 0x0000C80D:word32] = Mem213[r2 + 0x0000C80D:word32] * 0x08088405 + 0x00000001
	Mem224[r2 + 0x0000C811:word32] = (uint32) Mem217[r2 + 0x0000C812:ui24] ^ Mem217[Mem217[r2 + 0x0000C5EB:word32] + (((uint32) Mem217[r2 + 0x0000C810:byte] ^ Mem217[r2 + 0x0000C811:word32]) & ~0xFFFFFF00) * 4:word32]
	r4_203 = r4_203 + 0x00000001
	branch Mem224[r4_203:byte] == 0x00 l00012312
// DataOut: ap fp r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000020 r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid>
// LocalsOut: fp(32)

l0001230F:
// DataOut: ap fp r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000020 r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid>
// LocalsOut: fp(32)

l00012285:
// DataOut: ap fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000020 r4:<invalid>
// LocalsOut: fp(32)

l00012312:
	fn0001929E()
	word32 r7_34 = 0x00000000
	word32 r4_35 = fp + -16
// DataOut: fp r2 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000020 r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid>
// Terminates process

l00012328:
	word32 r6_42 = Mem12[r2 + 0x0000C811:word32] & ~0xFFFF0000
	Mem49[r4_35:byte] = (byte) (uint32) Mem12[r4_35:byte] ^ (byte) ((uint32) SLICE(((r6_42 | 0x00000002) ^ 0x00000001) * (r6_42 | 0x00000002), ui24, 8) & ~0xFFFFFF00)
	Mem56[r2 + 0x0000C809:word32] = (uint32) Mem49[r2 + 0x0000C80A:ui24] ^ Mem49[Mem49[r2 + 0x0000C5EB:word32] + (((uint32) Mem49[r4_35:byte] ^ Mem49[r2 + 0x0000C809:word32]) & ~0xFFFFFF00) * 4:word32]
	Mem59[r2 + 0x0000C80D:word32] = Mem56[r2 + 0x0000C80D:word32] + (Mem56[r2 + 0x0000C809:word32] & ~0xFFFFFF00)
	Mem63[r2 + 0x0000C80D:word32] = Mem59[r2 + 0x0000C80D:word32] * 0x08088405 + 0x00000001
	Mem70[r2 + 0x0000C811:word32] = (uint32) Mem63[r2 + 0x0000C812:ui24] ^ Mem63[Mem63[r2 + 0x0000C5EB:word32] + (((uint32) Mem63[r2 + 0x0000C810:byte] ^ Mem63[r2 + 0x0000C811:word32]) & ~0xFFFFFF00) * 4:word32]
	r4_35 = r4_35 + 0x00000001
	r7_34 = r7_34 + 0x00000001
	branch r7_34 <= 0x0000000B l00012328
// DataOut: fp r2 r3 r4 r7
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:<invalid> r3:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> r1:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l000123DA:
	word32 r4_192
	word32 r5_78 = (uint32) (uint16) Mem70[fp + -5:byte]
	branch (Mem70[Mem70[r2 + 1511:word32] + 20:word32] & 0x00000002) == 0x00000000 l000123FC
// DataOut: fp r2 r3 r5 r7
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:<invalid> r3:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> r1:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l000123FC:
	r4_192 = (uint32) Mem70[r2 + 0x0000C64B:byte]
// DataOut: fp r2 r3 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:<invalid> r3:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> r1:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l000123EB:
	r4_192 = (uint32) Mem70[r2 + 0x0000C644:word16] >> 8
// DataOut: fp r2 r3 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:<invalid> r3:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> r1:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l00012403:
	branch r5_78 == r4_192 l0001240C
// DataOut: fp r2 r3 r7
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:<invalid> r3:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> r1:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l0001240C:
	word32 r1_120
	word32 r4_115 = Mem70[r2 + 0x0000C5FB:word32]
	word32 r3_116 = Mem70[r2 + 132:word32]
	branch r4_115 <= r3_116 l00012424
// DataOut: fp r2 r3 r4 r7
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:<invalid> r3:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> r1:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l00012424:
	r1_120 = r4_115
// DataOut: fp r1 r2 r7
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:<invalid> r3:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> r1:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l0001241D:
	r1_120 = r3_116
// DataOut: fp r1 r2 r7
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:<invalid> r3:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> r1:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l00012427:
	word32 r5_122 = Mem70[r2 + 0x0000C5F7:word32]
	word32 r6_124 = r1_120 - 0x00000001
	branch r1_120 != 0x00000000 l0001243F
// DataOut: fp r2 r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:<invalid> r3:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> r1:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l0001243F:
// DataOut: fp r2 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:<invalid> r3:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> r1:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l00012440:
	word32 r8_147 = Mem70[r2 + 0x0000C811:word32] & ~0xFFFF0000
	Mem154[r5_122:byte] = (byte) (uint32) Mem70[r5_122:byte] ^ (byte) ((uint32) SLICE(((r8_147 | 0x00000002) ^ 0x00000001) * (r8_147 | 0x00000002), ui24, 8) & ~0xFFFFFF00)
	Mem161[r2 + 0x0000C809:word32] = (uint32) Mem154[r2 + 0x0000C80A:ui24] ^ Mem154[Mem154[r2 + 0x0000C5EB:word32] + (((uint32) Mem154[r5_122:byte] ^ Mem154[r2 + 0x0000C809:word32]) & ~0xFFFFFF00) * 4:word32]
	Mem164[r2 + 0x0000C80D:word32] = Mem161[r2 + 0x0000C80D:word32] + (Mem161[r2 + 0x0000C809:word32] & ~0xFFFFFF00)
	Mem168[r2 + 0x0000C80D:word32] = Mem164[r2 + 0x0000C80D:word32] * 0x08088405 + 0x00000001
	Mem175[r2 + 0x0000C811:word32] = (uint32) Mem168[r2 + 0x0000C812:ui24] ^ Mem168[Mem168[r2 + 0x0000C5EB:word32] + (((uint32) Mem168[r2 + 0x0000C810:byte] ^ Mem168[r2 + 0x0000C811:word32]) & ~0xFFFFFF00) * 4:word32]
	r5_122 = r5_122 + 0x00000001
	r6_124 = r6_124 - 0x00000001
	branch r6_124 == 0x00000000 l000124F8
// DataOut: fp r2 r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:<invalid> r3:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l000124F5:
// DataOut: fp r2 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:<invalid> r3:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l0001243C:
// DataOut: fp r2 r3 r7
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:<invalid> r3:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> r1:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l000124F8:
	return
// DataOut: fp r0 r2 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:<invalid> r3:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> r1:<invalid> r9:<invalid> r8:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l00012408:
	return
// DataOut: fp r0 r2 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:<invalid> r3:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> r1:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

fn00012252_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r7:<invalid> r4:<invalid> r3:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> r1:<invalid> r9:<invalid> sp:fp - 0x00000004 fp:<invalid> ap:<invalid> r8:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C



void fn000124FE(word32 r0, word32 r2, word32 ap, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap pc r0 r2
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000124FE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000124FE_entry:
// DataOut: ap pc r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000124FE:
	word32 sp_10 = fp - 0x00000004
// DataOut: ap pc r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00012503:
	word32 sp_11 = sp_10 - 0x00000008
	Mem13[sp_11:word64] = 0x0000000000000000
	Mem16[sp_11 - 0x00000004:word32] = r2 + 8
	Mem18[sp_11 - 0x00000008:word32] = r2
	byte CVZN_25
	byte ZN_26
	bool C_27
	bool V_28
	bool Z_29
	bool N_30
	word32 r0_33
	word32 ap_34
	byte VZN_35
	call Mem18[Mem18[pc:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: C_20,pc_23,r2_9,sp_17,V_21,ZN_19
		defs: ap_34,C_27,CVZN_25,N_30,pc_32,r0_33,r2_31,sp_24,V_28,VZN_35,Z_29,ZN_26
	real32 v15_36 = Mem18[Mem18[sp_10 + 32766:word32]:real32]
	Mem37[Mem37[r0_33 + -23984:word32]:real32] = v15_36
	branch v15_36 > 0.0F l00012503
// DataOut: ap pc r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:<invalid> -20(fp):r2 -16(fp):r2 + 8 -12(fp):0x0000000000000000

l0001251B:
	Mem42[Mem42[r0_33 + 5282:word32]:real32] = 0.8125F
	Mem45[ap_34 - 0x00000004:real32] = 0.75F
	Mem49[sp_10 - 0x00000004:word32] = ap_34 - 0x0000000C
	Mem51[sp_10 - 0x00000008:word32] = 0x00000008
	Mem54[sp_10 - 0x0000000C:word32] = r2 + 24
	Mem57[sp_10 - 0x00000014:word64] = 0x0000000000000000
	Mem60[sp_10 - 0x00000018:word32] = r2 + 10
	Mem62[sp_10 - 0x0000001C:word32] = 0x00000027
	Mem65[sp_10 - 0x00000020:int32] = (int32) Mem62[r2 + 8:int16]
	Mem67[sp_10 - 0x00000024:word32] = 0x00000000
	word32 sp_73
	byte CVZN_74
	byte ZN_75
	bool C_76
	bool V_77
	bool Z_78
	bool N_79
	word32 r2_80
	word32 pc_81
	word32 r0_82
	word32 ap_83
	byte VZN_84
	call Mem67[Mem67[pc:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_46,C_69,CVZN_25,N_30,pc_72,r0_33,r2_31,sp_66,V_70,VZN_35,Z_29,ZN_68
		defs: ap_83,C_76,CVZN_74,N_79,pc_81,r0_82,r2_80,sp_73,V_77,VZN_84,Z_78,ZN_75
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:<invalid> -20(fp):r2 -16(fp):r2 + 8 -12(fp):0x0000000000000000



void fn000125CA(word32 r0, word32 r2, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r2
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000125CA_entry:
// DataOut: ap fp pc r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000125CA:
	fn000124FE(r0, r2, ap, pc)
	fn00019272()
	word32 sp_19 = fp - 0x00000018
	branch Mem0[fp + -5:byte] == 0x0A l00012604
// DataOut: ap fp pc r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000125EE:
// DataOut: ap fp pc r0 r2 sp
// DataOut (flags): 
// SymbolicIn: -12(fp):0x00000000

l000125F0:
	word32 sp_47 = sp_19 - 0x00000004
	Mem48[sp_47:word32] = 0x00000001
	Mem51[sp_47 - 0x00000004:word32] = fp + -6
	Mem54[sp_47 - 0x00000008:word32] = Mem51[ap + 4:word32]
	fn00019272()
	sp_19 = sp_47 - 0x00000008
	branch Mem54[fp + -6:byte] != 0x0A l000125F0
// DataOut: ap fp pc r0 r2 sp
// DataOut (flags): 
// SymbolicIn: -12(fp):0x00000000

l00012604:
	Mem33[sp_19 - 0x00000004:word32] = 0x00000001
	fn000124FE(r0, ap + 4, ap, pc)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: -12(fp):0x00000000
// Terminates process

fn000125CA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r0:<invalid> sp:fp - 0x00000004 fp:<invalid> ap:<invalid> -12(fp):0x00000000



void fn00012616(word32 r0, word32 r7, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r0 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00012616_entry:
// DataOut: fp r0 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012616:
	fn0001924A()
	fn0001924E()
	branch r0 != 0x00000000 l00012644
// DataOut: fp r0 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l00012644:
	Mem69[fp - 0x0000001C:word32] = 0x00019374
	word32 fp_73
	word32 sp_101
	word32 ap_103 = fn00019296(fp, out fp_73, out sp_101)
	Mem80[sp_101:word32] = Mem69[ap_103 + 8:word32]
	word32 r9_314 = r8 + 14
// DataOut: ap fp r0 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r6:r0 -20(fp):0x00000000 -16(fp):r8 + 12

l00012680:
	branch Mem80[r9_314:byte] == 0x00 l0001268C
// DataOut: ap fp r0 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r6:r0 sp:<invalid> r9:<invalid> r4:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r0:r2 - 0x00000001 -20(fp):0x00000000 -16(fp):r8 + 12

l00012684:
	word32 sp_346 = sp_101 - 0x00000004
	Mem348[sp_346:word32] = Mem80[r7:word32]
	Mem350[sp_346 - 0x00000004:word32] = r9_314
	byte CVZN_355
	byte ZN_356
	bool C_357
	bool V_358
	word32 r8_359
	word32 r0_360
	word32 r6_361
	bool Z_362
	bool N_363
	word32 fp_364
	word32 r9_366
	word32 r4_367
	word32 r3_368
	word32 r11_370
	word32 r2_371
	word32 r10_372
	word32 r5_373
	word32 r1_374
	byte VZN_375
	byte CZN_376
	call Mem350[Mem350[sp_346 + 0x00000008:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_103,C_352,CVZN_95,CZN_97,dwLoc10_6,dwLoc14_8,dwLoc18_14,fp_102,N_100,r0_99,r1_86,r10_88,r11_90,r2_89,r3_98,r4_92,r5_87,r6_93,r7_91,r8_94,r9_96,sp_349,V_353,VZN_85,Z_105,ZN_351
		defs: ap_365,C_357,CVZN_355,CZN_376,fp_364,N_363,r0_360,r1_374,r10_372,r11_370,r2_371,r3_368,r4_367,r5_373,r6_361,r7_369,r8_359,r9_366,sp_354,V_358,VZN_375,Z_362,ZN_356
// DataOut: ap fp r0 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r6:r0 sp:<invalid> r9:<invalid> r4:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r0:r2 - 0x00000001 -20(fp):0x00000000 -16(fp):r8 + 12

l0001268C:
	word32 sp_111 = sp_101 - 0x00000004
	Mem113[sp_111:word32] = Mem80[r7:word32]
	Mem116[sp_111 - 0x00000004:word32] = Mem113[ap_103 + 4:word32]
	word32 sp_120
	byte CVZN_121
	byte ZN_122
	bool C_123
	bool V_124
	word32 r8_125
	word32 r0_126
	word32 r6_127
	bool Z_128
	bool N_129
	word32 fp_130
	word32 ap_131
	word32 r9_132
	word32 r4_133
	word32 r3_134
	word32 r7_135
	word32 r11_136
	word32 r2_137
	word32 r10_138
	word32 r5_139
	word32 r1_140
	byte VZN_141
	byte CZN_142
	call Mem116[Mem116[sp_111 + 0x00000008:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_110,C_118,CVZN_95,CZN_97,dwLoc10_6,dwLoc14_8,dwLoc18_14,fp_102,N_100,r0_99,r1_86,r10_88,r11_90,r2_89,r3_98,r4_92,r5_87,r6_93,r7_108,r8_94,r9_96,sp_114,V_119,VZN_85,Z_105,ZN_117
		defs: ap_131,C_123,CVZN_121,CZN_142,fp_130,N_129,r0_126,r1_140,r10_138,r11_136,r2_137,r3_134,r4_133,r5_139,r6_127,r7_135,r8_125,r9_132,sp_120,V_124,VZN_141,Z_128,ZN_122
	Mem145[sp_120 - 0x00000004:word32] = Mem116[r7_135:word32]
	word32 sp_149
	byte CVZN_150
	byte ZN_151
	bool C_152
	bool V_153
	word32 r8_154
	word32 r0_155
	word32 r6_156
	bool Z_157
	bool N_158
	word32 fp_159
	word32 ap_160
	word32 r9_161
	word32 r4_162
	word32 r3_163
	word32 r7_164
	word32 r11_165
	word32 r2_166
	word32 r10_167
	word32 r5_168
	word32 r1_169
	byte VZN_170
	byte CZN_171
	call Mem145[r11_136:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_131,C_147,CVZN_121,CZN_142,dwLoc10_6,dwLoc14_8,dwLoc18_14,fp_130,N_129,r0_126,r1_140,r10_138,r11_136,r2_137,r3_134,r4_133,r5_139,r6_127,r7_135,r8_125,r9_132,sp_143,V_148,VZN_141,Z_128,ZN_146
		defs: ap_160,C_152,CVZN_150,CZN_171,fp_159,N_158,r0_155,r1_169,r10_167,r11_165,r2_166,r3_163,r4_162,r5_168,r6_156,r7_164,r8_154,r9_161,sp_149,V_153,VZN_170,Z_157,ZN_151
	Mem174[sp_149 - 0x00000004:word32] = 0x00000000
	byte CVZN_179
	byte ZN_180
	bool C_181
	bool V_182
	word32 r8_183
	word32 r0_184
	bool Z_186
	bool N_187
	word32 fp_188
	word32 ap_189
	word32 r9_190
	word32 r4_191
	word32 r3_192
	word32 r7_193
	word32 r11_194
	word32 r2_195
	word32 r10_196
	word32 r5_197
	word32 r1_198
	byte VZN_199
	byte CZN_200
	word32 r6_185
	word32 sp_178
	call Mem174[r10_167:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_160,C_176,CVZN_150,CZN_171,dwLoc10_6,dwLoc14_8,dwLoc18_14,fp_159,N_158,r0_155,r1_169,r10_167,r11_165,r2_172,r3_163,r4_162,r5_168,r6_156,r7_164,r8_154,r9_161,sp_173,V_177,VZN_170,Z_157,ZN_175
		defs: ap_189,C_181,CVZN_179,CZN_200,fp_188,N_187,r0_184,r1_198,r10_196,r11_194,r2_195,r3_192,r4_191,r5_197,r6_185,r7_193,r8_183,r9_190,sp_178,V_182,VZN_199,Z_186,ZN_180
// DataOut: ap fp r0 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r6:r0 sp:<invalid> r9:<invalid> r4:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r0:r2 - 0x00000001 -20(fp):0x00000000 -16(fp):r8 + 12

l000126A4:
	word32 sp_203 = sp_178 - 0x00000004
	Mem204[sp_203:word32] = r6_185
	byte CVZN_209
	byte ZN_210
	bool C_211
	bool V_212
	word32 r8_213
	word32 r0_214
	bool Z_216
	bool N_217
	word32 fp_218
	word32 ap_219
	word32 r9_220
	word32 r4_221
	word32 r3_222
	word32 r7_223
	word32 r11_224
	word32 r2_225
	word32 r10_226
	word32 r5_227
	word32 r1_228
	byte VZN_229
	byte CZN_230
	call Mem204[r5_197:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_189,C_206,CVZN_179,CZN_200,dwLoc10_6,dwLoc14_8,dwLoc18_14,fp_188,N_187,r0_184,r1_198,r10_196,r11_194,r2_195,r3_192,r4_191,r5_197,r6_201,r7_193,r8_183,r9_190,sp_203,V_207,VZN_199,Z_186,ZN_205
		defs: ap_219,C_211,CVZN_209,CZN_230,fp_218,N_217,r0_214,r1_228,r10_226,r11_224,r2_225,r3_222,r4_221,r5_227,r6_215,r7_223,r8_213,r9_220,sp_208,V_212,VZN_229,Z_216,ZN_210
	int8 v29_231 = (int8) r0_214
	word32 r1_232 = DPB(r1_228, v29_231, 0)
	branch v29_231 != 0x0D l000126B4
// DataOut: ap fp r0 r1 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r6:r0 sp:<invalid> r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r0:<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l000126B1:
	r1_232 = DPB(r1_228, 0x0A, 0)
// DataOut: ap fp r0 r1 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r6:r0 sp:<invalid> r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l000126B4:
	branch r2_225 >= r4_221 l000126C3
// DataOut: ap fp r0 r1 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r6:r0 sp:<invalid> r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l000126B9:
	Mem337[Mem337[r3_222:word32]:byte] = (byte) r1_232
// DataOut: ap fp r0 r1 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r6:r0 sp:<invalid> r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l000126C3:
	branch (byte) r1_232 != 0x0A l000126A4
// DataOut: ap fp r0 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r6:r0 sp:<invalid> r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l000126C8:
	Mem250[sp_178 - 0x00000004:word32] = 0x00000001
	word32 sp_254
	byte CVZN_255
	byte ZN_256
	bool C_257
	bool V_258
	word32 r8_259
	word32 r0_260
	word32 r6_261
	bool Z_262
	bool N_263
	word32 fp_264
	word32 ap_265
	word32 r9_266
	word32 r4_267
	word32 r3_268
	word32 r7_269
	word32 r11_270
	word32 r2_271
	word32 r10_272
	word32 r5_273
	word32 r1_274
	byte VZN_275
	byte CZN_276
	call Mem250[r10_226:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_219,C_252,CVZN_209,CZN_246,dwLoc10_6,dwLoc14_8,dwLoc18_14,fp_218,N_240,r0_244,r1_236,r10_226,r11_224,r2_242,r3_222,r4_221,r5_227,r6_215,r7_223,r8_213,r9_220,sp_249,V_253,VZN_229,Z_247,ZN_251
		defs: ap_265,C_257,CVZN_255,CZN_276,fp_264,N_263,r0_260,r1_274,r10_272,r11_270,r2_271,r3_268,r4_267,r5_273,r6_261,r7_269,r8_259,r9_266,sp_254,V_258,VZN_275,Z_262,ZN_256
	Mem279[sp_254 - 0x00000004:word32] = Mem250[r7_269:word32]
	Mem281[sp_254 - 0x00000008:word32] = 0x0000000A
	fn0001926A()
	Mem287[sp_254 - 0x0000000C:word32] = Mem281[r7_269:word32]
	byte CVZN_292
	byte ZN_293
	bool C_294
	bool V_295
	word32 r8_296
	word32 r0_297
	word32 r6_298
	bool Z_299
	bool N_300
	word32 fp_301
	word32 r9_303
	word32 r4_304
	word32 r3_305
	word32 r11_307
	word32 r2_308
	word32 r10_309
	word32 r5_310
	word32 r1_311
	byte VZN_312
	byte CZN_313
	call Mem287[r11_270:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_265,C_289,CVZN_255,CZN_276,dwLoc10_6,dwLoc14_8,dwLoc18_14,fp_264,N_263,r0_260,r1_274,r10_272,r11_270,r2_271,r3_268,r4_267,r5_273,r6_261,r7_269,r8_259,r9_266,sp_285,V_290,VZN_275,Z_262,ZN_288
		defs: ap_302,C_294,CVZN_292,CZN_313,fp_301,N_300,r0_297,r1_311,r10_309,r11_307,r2_308,r3_305,r4_304,r5_310,r6_298,r7_306,r8_296,r9_303,sp_291,V_295,VZN_312,Z_299,ZN_293
	r9_314 = r8_296 + 15
	branch Mem287[Mem287[sp_101 + (r2_308 - 0x00000001):word32]:byte] != 0x0A l00012680
// DataOut: ap fp r0 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r6:r0 sp:<invalid> r9:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l000126EC:
	Mem321[Mem287[ap_103 + 8:word32]:byte] = 0x00
	Mem323[sp_101 - 0x00000004:word32] = r6_298
	fn00019252()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x00000004 r9:r8 + 15 r0:r2 - 0x00000001 -20(fp):0x00000000 -16(fp):r8 + 12
// Terminates process

l00012641:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r6:r0 -20(fp):0x00000000 -16(fp):r8 + 12

fn00012616_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r6:r0 r0:<invalid> sp:fp - 0x00000004 fp:<invalid> ap:<invalid> -20(fp):0x00000000 -16(fp):r8 + 12



void fn00012702(word32 r0, word32 r2, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00012702_entry:
// DataOut: ap fp r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012702:
	Mem12[r2 + 116:word32] = 0x00000000
	word32 v22_16 = Mem12[Mem12[ap + 8:word32]:word32]
	word32 r4_15 = Mem12[Mem12[ap + 4:word32]:word32]
	word32 dwLoc0C_159 = v22_16
	word32 dwLoc10_165 = r4_15 - 0x00000001
	branch r4_15 > 0x00000001 l00012732
// DataOut: ap fp r0 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l00012732:
	dwLoc0C_159 = v22_16 + 0x00000004
	branch Mem12[Mem12[v22_16 + 0x00000004:word32]:byte] == 0x2D l00012743
// DataOut: ap fp r0 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(0) Local -0010(32)

l00012743:
// DataOut: ap fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(0) Local -0010(32)

l00012744:
	r0 = Mem12[dwLoc0C_159:word32] + 0x00000001
	r4_15 = (int32) Mem12[r0:int8]
	branch r4_15 != 0x00000000 l00012758
// DataOut: ap fp r0 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l00012758:
	branch r4_15 > 0x0000007A l000127FD
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l000127FD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l0001275B_1:
	word32 sp_192
	byte CVZN_193
	byte ZN_194
	bool C_195
	bool V_196
	bool Z_197
	bool N_198
	word32 r1_199
	word32 r7_200
	word32 r8_201
	word32 r6_202
	word32 r11_203
	word32 r9_204
	word32 r10_205
	word32 r2_206
	word32 ap_207
	word32 r4_208
	word32 r3_209
	byte CZN_210
	word32 fp_211
	word32 r0_212
	word32 r5_213
	byte VZN_214
	call 0x00012763 + (r4_15 - 0x0000002D) * 0x00000002 (retsize: 4; depth: 20)
		uses: ap,C_189,CVZN_167,CZN_166,dwLoc08_4,dwLoc0C_164,dwLoc10_165,dwLoc14,fp,N,r0_187,r1_5,r10,r11_9,r2,r3_171,r4_173,r5_172,r6_8,r7_6,r8_7,r9,sp_2,V_190,VZN_174,Z_175,ZN_188
		defs: ap_207,C_195,CVZN_193,CZN_210,fp_211,N_198,r0_212,r1_199,r10_205,r11_203,r2_206,r3_209,r4_208,r5_213,r6_202,r7_200,r8_201,r9_204,sp_192,V_196,VZN_214,Z_197,ZN_194
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012755:
// DataOut: ap fp r0 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l00012948:
	word32 v37_177 = dwLoc10_165 - 0x00000001
	dwLoc10_165 = v37_177
	branch v37_177 <= 0x00000000 l0001295D
// DataOut: ap fp r0 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l0001294C:
	word32 v38_181 = dwLoc0C_159 + 0x00000004
	dwLoc0C_159 = v38_181
	branch Mem12[Mem12[v38_181:word32]:byte] != 0x2D l0001295D
// DataOut: ap fp r0 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l0001295A:
// DataOut: ap fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(0) Local -0010(32)

l00012740:
// DataOut: ap fp r0 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l0001272F:
// DataOut: ap fp r0 r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l0001295D:
	word32 v27_57 = dwLoc10_165 - 0x00000001
	branch dwLoc10_165 == 0x00000000 l0001296B
// DataOut: ap fp r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l00012966:
	branch 0x00000000 == 0x00000000 l0001297F
// DataOut: ap fp r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l0001297F:
	branch Mem12[r2 + 44:word32] == 0x00000000 l00012994
// DataOut: r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -0010(0)

l00012984:
	fn000192E6()
	branch r0 != 0x00000000 l00012994
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: Local -0010(0)
// Terminates process

l00012991:
	Mem149[r2 + 44:word32] = 0x00000000
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: Local -0010(0)

l00012994:
	branch Mem12[r2 + 36:word32] < 0x00000000 l000129A2
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: Local -0010(0)

l00012999:
	branch v27_57 <= 0x00000000 l000129A6
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l0001299D:
	branch Mem12[r2 + 36:word32] != 0x00000000 l000129A6
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l000129A2:
	Mem128[r2 + 36:word32] = 0x00000003
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l000129A6:
	word32 r0_98 = Mem12[r2 + 36:word32]
	branch r0_98 > 0x0000000A l000129C2
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l000129C2:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l000129AA_1:
	word32 sp_103
	byte CVZN_104
	byte ZN_105
	bool C_106
	bool V_107
	bool Z_108
	bool N_109
	word32 r1_110
	word32 r7_111
	word32 r8_112
	word32 r6_113
	word32 r11_114
	word32 r9_115
	word32 r10_116
	word32 r2_117
	word32 ap_118
	word32 r4_119
	word32 r3_120
	byte CZN_121
	word32 fp_122
	word32 r0_123
	word32 r5_124
	byte VZN_125
	call 0x000129AE + r0_98 * 0x00000002 (retsize: 4; depth: 20)
		uses: ap,C_100,CVZN_55,CZN_53,dwLoc08_4,dwLoc0C_48,dwLoc10_58,dwLoc14_91,fp,N_94,r0_98,r1_5,r10,r11_9,r2,r3_56,r4_54,r5_51,r6_8,r7_6,r8_7,r9,sp_92,V_101,VZN_50,Z_97,ZN_99
		defs: ap_118,C_106,CVZN_104,CZN_121,fp_122,N_109,r0_123,r1_110,r10_116,r11_114,r2_117,r3_120,r4_119,r5_124,r6_113,r7_111,r8_112,r9_115,sp_103,V_107,VZN_125,Z_108,ZN_105
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l0001296B:
	Mem65[Mem65[ap + 4:word32]:word32] = v27_57
	Mem67[Mem67[ap + 8:word32]:word32] = dwLoc0C_159
	fn00008CCE(r2, dwLoc10_165, r4_15, ap)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

fn00012702_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000



word32 fn00012A2A(word32 r0, word32 r2, word32 r4, word32 r5, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2 r4 r5
// LiveOut: ap fp r0 r3 r6 r8 sp
// Trashed: CVZN ap fp r0 r3 r6 r8 sp
// Preserved:
fn00012A2A_entry:
	*r3Out = r3
	*r6Out = r6
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012A2A:
	word32 sp_1070 = fp - 0x00000004
	word32 r8_1075 = 0x00000000
	*r8Out = r8_1075
	branch Mem0[r2 + 28:word32] == 0x00000000 l00012AAB
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012A49:
	word32 r0_1026 = (uint32) Mem0[r2 + 0x0000C688:word16]
	branch r0_1026 != 0x00000001 l00012A5C
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r8:0x00000000
// LocalsOut: fp(32)

l00012A5C:
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:0x00000000 r0:<invalid> -8(fp):0x00000000
// LocalsOut: fp(32)

l00012A57:
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:0x00000000 r0:<invalid> -8(fp):0x00000000
// LocalsOut: fp(32)

l00012A5F:
	word32 r3_1050
	fn000192C6()
	branch r0_1026 >= 0x00000027 l00012A88
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:0x00000000 r0:<invalid> r6:<invalid> -8(fp):0x00000000

l00012A88:
	r3_1050 = r4 + 39
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012A81:
	r3_1050 = r4 + 1
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012A8C:
	Mem1052[fp - 0x00000020:word32] = r3_1050
	Mem1055[fp - 0x00000024:word32] = r2 + 1515
	fn000192D2()
	Mem1060[fp - 0x00000028:word32] = r0_1026
	Mem1063[fp - 0x0000002C:word32] = r2 + 1515
	Mem1065[fp - 0x00000030:word32] = r2
	word32 ap_1066 = Mem1065[r2 + 0x0000C839:word32]
	byte CVZN_1071
	byte ZN_1072
	bool C_1073
	bool V_1074
	bool Z_1076
	bool N_1077
	word32 r0_1079
	byte CZN_1080
	word32 r6_1082
	word32 r3_1083
	word32 r5_1086
	call Mem1065[ap_1066:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1066,C_1068,CVZN,CZN_1047,dwLoc08_1025,dwLoc0C_1032,dwLoc10_1034,dwLoc14_1037,dwLoc18_1040,dwLoc1C_1043,fp,N_1048,r0_1026,r2,r3_1050,r4,r5,r6_1030,r7,r8_3,sp_1064,V_1069,Z_1028,ZN_1067
		defs: ap_1084,C_1073,CVZN_1071,CZN_1080,fp_1087,N_1077,r0_1079,r2_1078,r3_1083,r4_1081,r5_1086,r6_1082,r7_1085,r8_1075,sp_1070,V_1074,Z_1076,ZN_1072
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// Terminates process

l00012AAB:
	branch Mem0[r2 + 36:word32] > 0x00000009 l00012AB4
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 ap:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012AB4:
	word32 sp_346
	word32 r0_345
	word32 r2_341
	word32 r4_1001
	word32 r3_1003
	word32 sp_144 = sp_1070 - 0x00000004
	Mem145[sp_144:word32] = 0x00000000
	Mem148[sp_144 - 0x00000004:word32] = r4 + 64
	Mem151[sp_144 - 0x00000008:word32] = r2 + 1515
	word32 sp_155
	byte CVZN_156
	byte ZN_157
	bool C_158
	bool V_159
	word32 r8_160
	bool Z_161
	bool N_162
	word32 r2_163
	word32 r0_164
	byte CZN_165
	word32 r4_166
	word32 r6_167
	word32 r3_168
	word32 ap_169
	word32 r7_170
	word32 r5_171
	word32 fp_172
	call Mem151[r7:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_46,C_153,CVZN_40,CZN_47,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_45,N_38,r0_42,r2_37,r3_34,r4_36,r5_32,r6_35,r7_33,r8_41,sp_149,V_154,Z_39,ZN_152
		defs: ap_169,C_158,CVZN_156,CZN_165,fp_172,N_162,r0_164,r2_163,r3_168,r4_166,r5_171,r6_167,r7_170,r8_160,sp_155,V_159,Z_161,ZN_157
	Mem174[sp_155 - 0x00000004:word32] = r0_164
	Mem177[sp_155 - 0x00000008:word32] = r2_163 + 1515
	Mem179[sp_155 - 0x0000000C:word32] = r2_163
	word32 ap_180 = Mem179[r2_163 + 0x0000C839:word32]
	word32 sp_184
	byte CVZN_185
	byte ZN_186
	bool C_187
	bool V_188
	word32 r8_189
	bool Z_190
	bool N_191
	word32 r2_192
	word32 r0_193
	byte CZN_194
	word32 r4_195
	word32 r6_196
	word32 r3_197
	word32 ap_198
	word32 r7_199
	word32 r5_200
	word32 fp_201
	call Mem179[ap_180:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_180,C_182,CVZN_156,CZN_165,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_172,N_162,r0_164,r2_163,r3_168,r4_166,r5_171,r6_167,r7_170,r8_160,sp_178,V_183,Z_161,ZN_181
		defs: ap_198,C_187,CVZN_185,CZN_194,fp_201,N_191,r0_193,r2_192,r3_197,r4_195,r5_200,r6_196,r7_199,r8_189,sp_184,V_188,Z_190,ZN_186
	Mem203[sp_184 - 0x00000004:word32] = 0x00000000
	Mem206[sp_184 - 0x00000008:word32] = r4_195 + 99
	Mem209[sp_184 - 0x0000000C:word32] = r2_192 + 1515
	word32 sp_213
	byte CVZN_214
	byte ZN_215
	bool C_216
	bool V_217
	word32 r8_218
	bool Z_219
	bool N_220
	word32 r2_221
	word32 r0_222
	byte CZN_223
	word32 r4_224
	word32 r6_225
	word32 r3_226
	word32 ap_227
	word32 r7_228
	word32 r5_229
	word32 fp_230
	call Mem209[r7_199:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_198,C_211,CVZN_185,CZN_194,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_201,N_191,r0_193,r2_192,r3_197,r4_195,r5_200,r6_196,r7_199,r8_189,sp_207,V_212,Z_190,ZN_210
		defs: ap_227,C_216,CVZN_214,CZN_223,fp_230,N_220,r0_222,r2_221,r3_226,r4_224,r5_229,r6_225,r7_228,r8_218,sp_213,V_217,Z_219,ZN_215
	Mem232[sp_213 - 0x00000004:word32] = r0_222
	Mem235[sp_213 - 0x00000008:word32] = r2_221 + 1515
	Mem237[sp_213 - 0x0000000C:word32] = r2_221
	word32 ap_238 = Mem237[r2_221 + 0x0000C839:word32]
	word32 sp_242
	byte CVZN_243
	byte ZN_244
	bool C_245
	bool V_246
	word32 r8_247
	bool Z_248
	bool N_249
	word32 r2_250
	word32 r0_251
	byte CZN_252
	word32 r4_253
	word32 r6_254
	word32 r3_255
	word32 ap_256
	word32 r7_257
	word32 r5_258
	word32 fp_259
	call Mem237[ap_238:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_238,C_240,CVZN_214,CZN_223,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_230,N_220,r0_222,r2_221,r3_226,r4_224,r5_229,r6_225,r7_228,r8_218,sp_236,V_241,Z_219,ZN_239
		defs: ap_256,C_245,CVZN_243,CZN_252,fp_259,N_249,r0_251,r2_250,r3_255,r4_253,r5_258,r6_254,r7_257,r8_247,sp_242,V_246,Z_248,ZN_244
	Mem261[sp_242 - 0x00000004:word32] = 0x00000000
	Mem264[sp_242 - 0x00000008:word32] = Mem261[r2_250 + 128:word32]
	Mem267[sp_242 - 0x0000000C:word32] = Mem264[r2_250 + 128:word32]
	Mem270[sp_242 - 0x00000010:word32] = Mem267[r2_250 + 124:word32]
	Mem273[sp_242 - 0x00000014:word32] = Mem270[r2_250 + 124:word32]
	Mem276[sp_242 - 0x00000018:word32] = r4_253 + 133
	Mem279[sp_242 - 0x0000001C:word32] = r2_250 + 1515
	word32 sp_283
	byte CVZN_284
	byte ZN_285
	bool C_286
	bool V_287
	word32 r8_288
	bool Z_289
	bool N_290
	word32 r2_291
	word32 r0_292
	byte CZN_293
	word32 r4_294
	word32 r6_295
	word32 r3_296
	word32 ap_297
	word32 r7_298
	word32 r5_299
	word32 fp_300
	call Mem279[r7_257:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_256,C_281,CVZN_243,CZN_252,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_259,N_249,r0_251,r2_250,r3_255,r4_253,r5_258,r6_254,r7_257,r8_247,sp_277,V_282,Z_248,ZN_280
		defs: ap_297,C_286,CVZN_284,CZN_293,fp_300,N_290,r0_292,r2_291,r3_296,r4_294,r5_299,r6_295,r7_298,r8_288,sp_283,V_287,Z_289,ZN_285
	Mem302[sp_283 - 0x00000004:word32] = r0_292
	Mem305[sp_283 - 0x00000008:word32] = r2_291 + 1515
	Mem307[sp_283 - 0x0000000C:word32] = r2_291
	word32 ap_308 = Mem307[r2_291 + 0x0000C839:word32]
	word32 sp_312
	byte CVZN_313
	byte ZN_314
	bool C_315
	bool V_316
	word32 r8_317
	bool Z_318
	bool N_319
	word32 r2_320
	word32 r0_321
	byte CZN_322
	word32 r4_323
	word32 r6_324
	word32 r3_325
	word32 ap_326
	word32 r7_327
	word32 r5_328
	word32 fp_329
	call Mem307[ap_308:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_308,C_310,CVZN_284,CZN_293,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_300,N_290,r0_292,r2_291,r3_296,r4_294,r5_299,r6_295,r7_298,r8_288,sp_306,V_311,Z_289,ZN_309
		defs: ap_326,C_315,CVZN_313,CZN_322,fp_329,N_319,r0_321,r2_320,r3_325,r4_323,r5_328,r6_324,r7_327,r8_317,sp_312,V_316,Z_318,ZN_314
	word32 r6_330 = (uint32) Mem307[r2_320 + 0x0000C682:word16]
	branch r6_330 != 0x00000000 l00012BA4
// DataOut: fp pc r10 r11 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 ap:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012BA4:
	word32 r3_1016
	Mem798[sp_312 - 0x00000004:word32] = 0x00000000
	word32 r0_799 = (uint32) Mem798[r2_320 + 0x0000C686:word16]
	branch r0_799 != 0x00000001 l00012BB8
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 ap:<invalid> r6:<invalid> -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):r2 + 1515 -44(fp):r0 -40(fp):r2 + 1515 -36(fp):r4 + 99 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012BB8:
	r3_1016 = r5_328 + 16
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 ap:<invalid> r6:<invalid> r0:<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):r2 + 1515 -44(fp):r0 -40(fp):r2 + 1515 -36(fp):r4 + 99 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012BB2:
	r3_1016 = r5_328 + 20
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 ap:<invalid> r6:<invalid> r0:<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):r2 + 1515 -44(fp):r0 -40(fp):r2 + 1515 -36(fp):r4 + 99 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012BBC:
	word32 r3_1008
	Mem805[sp_312 - 0x00000008:word32] = r3_1016
	Mem807[sp_312 - 0x0000000C:word32] = r0_799
	Mem811[sp_312 - 0x00000010:word32] = (uint32) Mem807[r2_320 + 0x0000C684:word16] + 0x00000001
	Mem814[sp_312 - 0x00000014:word32] = r6_330 + 0x00000001
	Mem817[sp_312 - 0x00000018:word32] = r4_323 + 583
	Mem820[sp_312 - 0x0000001C:word32] = r2_320 + 1515
	word32 sp_824
	byte CVZN_825
	byte ZN_826
	bool C_827
	bool V_828
	word32 r8_829
	bool Z_830
	bool N_831
	word32 r2_832
	word32 r0_833
	byte CZN_834
	word32 r4_835
	word32 r6_836
	word32 r3_837
	word32 ap_838
	word32 r7_839
	word32 r5_840
	word32 fp_841
	call Mem820[r7_327:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_809,C_822,CVZN_313,CZN_800,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_329,N_319,r0_799,r2_320,r3_803,r4_323,r5_328,r6_812,r7_327,r8_317,sp_818,V_823,Z_801,ZN_821
		defs: ap_838,C_827,CVZN_825,CZN_834,fp_841,N_831,r0_833,r2_832,r3_837,r4_835,r5_840,r6_836,r7_839,r8_829,sp_824,V_828,Z_830,ZN_826
	Mem843[sp_824 - 0x00000004:word32] = r0_833
	Mem846[sp_824 - 0x00000008:word32] = r2_832 + 1515
	Mem848[sp_824 - 0x0000000C:word32] = r2_832
	word32 ap_849 = Mem848[r2_832 + 0x0000C839:word32]
	word32 sp_853
	byte CVZN_854
	byte ZN_855
	bool C_856
	bool V_857
	word32 r8_858
	bool Z_859
	bool N_860
	word32 r2_861
	word32 r0_862
	byte CZN_863
	word32 r4_864
	word32 r6_865
	word32 r3_866
	word32 ap_867
	word32 r7_868
	word32 r5_869
	word32 fp_870
	call Mem848[ap_849:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_849,C_851,CVZN_825,CZN_834,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_841,N_831,r0_833,r2_832,r3_837,r4_835,r5_840,r6_836,r7_839,r8_829,sp_847,V_852,Z_830,ZN_850
		defs: ap_867,C_856,CVZN_854,CZN_863,fp_870,N_860,r0_862,r2_861,r3_866,r4_864,r5_869,r6_865,r7_868,r8_858,sp_853,V_857,Z_859,ZN_855
	Mem872[sp_853 - 0x00000004:word32] = 0x00000000
	Mem875[sp_853 - 0x00000008:word32] = Mem872[r2_861 + 0x0000C68A:word32]
	Mem878[sp_853 - 0x0000000C:word32] = Mem875[r2_861 + 0x0000C68A:word32]
	word32 r0_879 = (uint32) Mem878[r2_861 + 0x0000C688:word16]
	branch r0_879 != 0x00000001 l00012C0C
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):r2 + 1515 -44(fp):r0 -40(fp):r2 + 1515 -36(fp):r4 + 99 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012C0C:
	r3_1008 = r5_869 + 23
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):r4 + 583 -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):r2 + 1515 -44(fp):r0 -40(fp):r2 + 1515 -36(fp):r4 + 99 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012C06:
	r3_1008 = r5_869 + 31
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):r4 + 583 -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):r2 + 1515 -44(fp):r0 -40(fp):r2 + 1515 -36(fp):r4 + 99 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012C10:
	Mem885[sp_853 - 0x00000010:word32] = r3_1008
	Mem887[sp_853 - 0x00000014:word32] = r0_879
	Mem890[sp_853 - 0x00000018:word32] = r4_864 + 726
	Mem893[sp_853 - 0x0000001C:word32] = r2_861 + 1515
	word32 sp_897
	byte CVZN_898
	byte ZN_899
	bool C_900
	bool V_901
	word32 r8_902
	bool Z_903
	bool N_904
	word32 r2_905
	word32 r0_906
	byte CZN_907
	word32 r4_908
	word32 r6_909
	word32 r3_910
	word32 ap_911
	word32 r7_912
	word32 r5_913
	word32 fp_914
	call Mem893[r7_868:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_867,C_895,CVZN_854,CZN_880,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_870,N_860,r0_879,r2_861,r3_883,r4_864,r5_869,r6_865,r7_868,r8_858,sp_891,V_896,Z_881,ZN_894
		defs: ap_911,C_900,CVZN_898,CZN_907,fp_914,N_904,r0_906,r2_905,r3_910,r4_908,r5_913,r6_909,r7_912,r8_902,sp_897,V_901,Z_903,ZN_899
	Mem916[sp_897 - 0x00000004:word32] = r0_906
	Mem919[sp_897 - 0x00000008:word32] = r2_905 + 1515
	Mem921[sp_897 - 0x0000000C:word32] = r2_905
	word32 ap_922 = Mem921[r2_905 + 0x0000C839:word32]
	word32 sp_926
	byte CVZN_927
	byte ZN_928
	bool C_929
	bool V_930
	word32 r8_931
	bool Z_932
	bool N_933
	word32 r2_934
	word32 r0_935
	byte CZN_936
	word32 r4_937
	word32 r6_938
	word32 r3_939
	word32 ap_940
	word32 r7_941
	word32 r5_942
	word32 fp_943
	call Mem921[ap_922:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_922,C_924,CVZN_898,CZN_907,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_914,N_904,r0_906,r2_905,r3_910,r4_908,r5_913,r6_909,r7_912,r8_902,sp_920,V_925,Z_903,ZN_923
		defs: ap_940,C_929,CVZN_927,CZN_936,fp_943,N_933,r0_935,r2_934,r3_939,r4_937,r5_942,r6_938,r7_941,r8_931,sp_926,V_930,Z_932,ZN_928
	Mem945[sp_926 - 0x00000004:word32] = 0x00000000
	Mem948[sp_926 - 0x00000008:word32] = Mem945[r2_934 + 0x0000C68E:word32]
	Mem951[sp_926 - 0x0000000C:word32] = Mem948[r2_934 + 0x0000C68E:word32]
	Mem954[sp_926 - 0x00000010:word32] = r4_937 + 857
	Mem957[sp_926 - 0x00000014:word32] = r2_934 + 1515
	word32 sp_961
	byte CVZN_962
	byte ZN_963
	bool C_964
	bool V_965
	word32 r8_966
	bool Z_967
	bool N_968
	word32 r2_969
	word32 r0_970
	byte CZN_971
	word32 r4_972
	word32 r6_973
	word32 r3_974
	word32 ap_975
	word32 r7_976
	word32 r5_977
	word32 fp_978
	call Mem957[r7_941:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_940,C_959,CVZN_927,CZN_936,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_943,N_933,r0_935,r2_934,r3_939,r4_937,r5_942,r6_938,r7_941,r8_931,sp_955,V_960,Z_932,ZN_958
		defs: ap_975,C_964,CVZN_962,CZN_971,fp_978,N_968,r0_970,r2_969,r3_974,r4_972,r5_977,r6_973,r7_976,r8_966,sp_961,V_965,Z_967,ZN_963
	Mem980[sp_961 - 0x00000004:word32] = r0_970
	Mem983[sp_961 - 0x00000008:word32] = r2_969 + 1515
	Mem985[sp_961 - 0x0000000C:word32] = r2_969
	word32 ap_986 = Mem985[r2_969 + 0x0000C839:word32]
	byte CVZN_991
	byte ZN_992
	bool C_993
	bool V_994
	word32 r8_995
	bool Z_996
	bool N_997
	byte CZN_1000
	word32 r6_1002
	word32 ap_1004
	word32 r7_1005
	word32 r5_1006
	word32 fp_1007
	call Mem985[ap_986:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_986,C_988,CVZN_962,CZN_971,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_978,N_968,r0_970,r2_969,r3_974,r4_972,r5_977,r6_973,r7_976,r8_966,sp_984,V_989,Z_967,ZN_987
		defs: ap_1004,C_993,CVZN_991,CZN_1000,fp_1007,N_997,r0_999,r2_998,r3_1003,r4_1001,r5_1006,r6_1002,r7_1005,r8_995,sp_990,V_994,Z_996,ZN_992
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):r4 + 583 -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):r2 + 1515 -44(fp):r0 -40(fp):r2 + 1515 -36(fp):r4 + 99 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012B2D:
	word32 r3_664
	Mem653[sp_312 - 0x00000004:word32] = 0x00000000
	Mem656[sp_312 - 0x00000008:word32] = Mem653[r2_320 + 0x0000C68A:word32]
	Mem659[sp_312 - 0x0000000C:word32] = Mem656[r2_320 + 0x0000C68A:word32]
	word32 r0_660 = (uint32) Mem659[r2_320 + 0x0000C688:word16]
	branch r0_660 != 0x00000001 l00012B50
// DataOut: fp pc r0 r10 r11 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 ap:<invalid> r6:<invalid> -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):r2 + 1515 -44(fp):r0 -40(fp):r2 + 1515 -36(fp):r4 + 99 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012B50:
	r3_664 = r5_328 + 2
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 ap:<invalid> r6:<invalid> r0:<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):r2 + 1515 -44(fp):r0 -40(fp):r2 + 1515 -36(fp):r4 + 99 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012B47:
	r3_664 = r5_328 + 10
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 ap:<invalid> r6:<invalid> r0:<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):r2 + 1515 -44(fp):r0 -40(fp):r2 + 1515 -36(fp):r4 + 99 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012B54:
	Mem666[sp_312 - 0x00000010:word32] = r3_664
	Mem668[sp_312 - 0x00000014:word32] = r0_660
	Mem671[sp_312 - 0x00000018:word32] = r4_323 + 332
	Mem674[sp_312 - 0x0000001C:word32] = r2_320 + 1515
	word32 sp_678
	byte CVZN_679
	byte ZN_680
	bool C_681
	bool V_682
	word32 r8_683
	bool Z_684
	bool N_685
	word32 r2_686
	word32 r0_687
	byte CZN_688
	word32 r4_689
	word32 r6_690
	word32 r3_691
	word32 ap_692
	word32 r7_693
	word32 r5_694
	word32 fp_695
	call Mem674[r7_327:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_326,C_676,CVZN_313,CZN_661,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_329,N_319,r0_660,r2_320,r3_664,r4_323,r5_328,r6_330,r7_327,r8_317,sp_672,V_677,Z_662,ZN_675
		defs: ap_692,C_681,CVZN_679,CZN_688,fp_695,N_685,r0_687,r2_686,r3_691,r4_689,r5_694,r6_690,r7_693,r8_683,sp_678,V_682,Z_684,ZN_680
	Mem697[sp_678 - 0x00000004:word32] = r0_687
	Mem700[sp_678 - 0x00000008:word32] = r2_686 + 1515
	Mem702[sp_678 - 0x0000000C:word32] = r2_686
	word32 ap_703 = Mem702[r2_686 + 0x0000C839:word32]
	word32 sp_707
	byte CVZN_708
	byte ZN_709
	bool C_710
	bool V_711
	word32 r8_712
	bool Z_713
	bool N_714
	word32 r2_715
	word32 r0_716
	byte CZN_717
	word32 r4_718
	word32 r6_719
	word32 r3_720
	word32 ap_721
	word32 r7_722
	word32 r5_723
	word32 fp_724
	call Mem702[ap_703:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_703,C_705,CVZN_679,CZN_688,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_695,N_685,r0_687,r2_686,r3_691,r4_689,r5_694,r6_690,r7_693,r8_683,sp_701,V_706,Z_684,ZN_704
		defs: ap_721,C_710,CVZN_708,CZN_717,fp_724,N_714,r0_716,r2_715,r3_720,r4_718,r5_723,r6_719,r7_722,r8_712,sp_707,V_711,Z_713,ZN_709
	Mem726[sp_707 - 0x00000004:word32] = 0x00000000
	Mem729[sp_707 - 0x00000008:word32] = Mem726[r2_715 + 0x0000C68E:word32]
	Mem732[sp_707 - 0x0000000C:word32] = Mem729[r2_715 + 0x0000C68E:word32]
	Mem735[sp_707 - 0x00000010:word32] = r4_718 + 537
	Mem738[sp_707 - 0x00000014:word32] = r2_715 + 1515
	word32 sp_742
	byte CVZN_743
	byte ZN_744
	bool C_745
	bool V_746
	word32 r8_747
	bool Z_748
	bool N_749
	word32 r2_750
	word32 r0_751
	byte CZN_752
	word32 r4_753
	word32 r6_754
	word32 r3_755
	word32 ap_756
	word32 r7_757
	word32 r5_758
	word32 fp_759
	call Mem738[r7_722:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_721,C_740,CVZN_708,CZN_717,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_724,N_714,r0_716,r2_715,r3_720,r4_718,r5_723,r6_719,r7_722,r8_712,sp_736,V_741,Z_713,ZN_739
		defs: ap_756,C_745,CVZN_743,CZN_752,fp_759,N_749,r0_751,r2_750,r3_755,r4_753,r5_758,r6_754,r7_757,r8_747,sp_742,V_746,Z_748,ZN_744
	Mem761[sp_742 - 0x00000004:word32] = r0_751
	Mem764[sp_742 - 0x00000008:word32] = r2_750 + 1515
	Mem766[sp_742 - 0x0000000C:word32] = r2_750
	word32 ap_767 = Mem766[r2_750 + 0x0000C839:word32]
	byte CVZN_772
	byte ZN_773
	bool C_774
	bool V_775
	word32 r8_776
	bool Z_777
	bool N_778
	byte CZN_781
	word32 r6_783
	word32 ap_785
	word32 r7_786
	word32 r5_787
	word32 fp_788
	call Mem766[ap_767:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_767,C_769,CVZN_743,CZN_752,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_759,N_749,r0_751,r2_750,r3_755,r4_753,r5_758,r6_754,r7_757,r8_747,sp_765,V_770,Z_748,ZN_768
		defs: ap_785,C_774,CVZN_772,CZN_781,fp_788,N_778,r0_780,r2_779,r3_784,r4_782,r5_787,r6_783,r7_786,r8_776,sp_771,V_775,Z_777,ZN_773
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):r2 + 1515 -44(fp):r0 -40(fp):r2 + 1515 -36(fp):r4 + 99 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012C5C:
	branch Mem307[r2_341 + 0x0000C692:word16] != 0x0000 l00012C8C
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -204(fp):r2 -200(fp):r2 + 1515 -196(fp):<invalid> -192(fp):r2 + 1515 -188(fp):r4 + 857 -184(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):r2 -168(fp):r2 + 1515 -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):r2 + 1515 -44(fp):r0 -40(fp):r2 + 1515 -36(fp):r4 + 99 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012C8C:
	word32 sp_393 = sp_346 - 0x00000004
	Mem394[sp_393:word32] = 0x00000000
	Mem397[sp_393 - 0x00000004:uint32] = (uint32) Mem394[r2_341 + 0x0000C692:word16]
	Mem400[sp_393 - 0x00000008:word32] = r4_1001 + 958
	Mem403[sp_393 - 0x0000000C:word32] = r2_341 + 1515
	word32 sp_407
	byte CVZN_408
	byte ZN_409
	bool C_410
	bool V_411
	word32 r8_412
	bool Z_413
	bool N_414
	word32 r2_415
	word32 r0_416
	byte CZN_417
	word32 r4_418
	word32 r6_419
	word32 r3_420
	word32 ap_421
	word32 r7_422
	word32 r5_423
	word32 fp_424
	call Mem403[r3_1003:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_348,C_405,CVZN_343,CZN_340,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_347,N_342,r0_345,r2_341,r3_337,r4_339,r5_335,r6_338,r7_336,r8_344,sp_401,V_406,Z_350,ZN_404
		defs: ap_421,C_410,CVZN_408,CZN_417,fp_424,N_414,r0_416,r2_415,r3_420,r4_418,r5_423,r6_419,r7_422,r8_412,sp_407,V_411,Z_413,ZN_409
	Mem426[sp_407 - 0x00000004:word32] = r0_416
	Mem429[sp_407 - 0x00000008:word32] = r2_415 + 1515
	Mem431[sp_407 - 0x0000000C:word32] = r2_415
	word32 ap_432 = Mem431[r2_415 + 0x0000C839:word32]
	word32 sp_436
	byte CVZN_437
	byte ZN_438
	bool C_439
	bool V_440
	word32 r8_441
	bool Z_442
	bool N_443
	word32 r2_444
	word32 r0_445
	byte CZN_446
	word32 r4_447
	word32 r6_448
	word32 r3_449
	word32 ap_450
	word32 r7_451
	word32 r5_452
	word32 fp_453
	call Mem431[ap_432:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_432,C_434,CVZN_408,CZN_417,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_424,N_414,r0_416,r2_415,r3_420,r4_418,r5_423,r6_419,r7_422,r8_412,sp_430,V_435,Z_413,ZN_433
		defs: ap_450,C_439,CVZN_437,CZN_446,fp_453,N_443,r0_445,r2_444,r3_449,r4_447,r5_452,r6_448,r7_451,r8_441,sp_436,V_440,Z_442,ZN_438
	Mem455[sp_436 - 0x00000004:word32] = 0x00000000
	Mem458[sp_436 - 0x00000008:word32] = r4_447 + 1032
	Mem461[sp_436 - 0x0000000C:word32] = r2_444 + 1515
	word32 sp_465
	byte CVZN_466
	byte ZN_467
	bool C_468
	bool V_469
	word32 r8_470
	bool Z_471
	bool N_472
	word32 r2_473
	word32 r0_474
	byte CZN_475
	word32 r4_476
	word32 r6_477
	word32 r3_478
	word32 ap_479
	word32 r7_480
	word32 r5_481
	word32 fp_482
	call Mem461[r3_449:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_450,C_463,CVZN_437,CZN_446,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_453,N_443,r0_445,r2_444,r3_449,r4_447,r5_452,r6_448,r7_451,r8_441,sp_459,V_464,Z_442,ZN_462
		defs: ap_479,C_468,CVZN_466,CZN_475,fp_482,N_472,r0_474,r2_473,r3_478,r4_476,r5_481,r6_477,r7_480,r8_470,sp_465,V_469,Z_471,ZN_467
	Mem484[sp_465 - 0x00000004:word32] = r0_474
	Mem487[sp_465 - 0x00000008:word32] = r2_473 + 1515
	Mem489[sp_465 - 0x0000000C:word32] = r2_473
	word32 ap_490 = Mem489[r2_473 + 0x0000C839:word32]
	word32 sp_494
	byte CVZN_495
	byte ZN_496
	bool C_497
	bool V_498
	word32 r8_499
	bool Z_500
	bool N_501
	word32 r2_502
	word32 r0_503
	byte CZN_504
	word32 r4_505
	word32 r6_506
	word32 r3_507
	word32 ap_508
	word32 r7_509
	word32 r5_510
	word32 fp_511
	call Mem489[ap_490:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_490,C_492,CVZN_466,CZN_475,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_482,N_472,r0_474,r2_473,r3_478,r4_476,r5_481,r6_477,r7_480,r8_470,sp_488,V_493,Z_471,ZN_491
		defs: ap_508,C_497,CVZN_495,CZN_504,fp_511,N_501,r0_503,r2_502,r3_507,r4_505,r5_510,r6_506,r7_509,r8_499,sp_494,V_498,Z_500,ZN_496
	Mem513[sp_494 - 0x00000004:word32] = 0x00000001
	Mem516[sp_494 - 0x00000008:uint32] = (uint32) Mem513[r2_502 + 0x0000C692:word16]
	word32 ap_520
	word32 fp_521
	word32 sp_522
	word32 r0_523 = fn0000DC76(ap_508, fp_511, out ap_520, out fp_521, out sp_522)
	branch r0_523 == 0x00000000 l00012CEF
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -204(fp):r2 -200(fp):r2 + 1515 -196(fp):<invalid> -192(fp):r2 + 1515 -188(fp):r4 + 857 -184(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):r2 -168(fp):r2 + 1515 -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):r2 + 1515 -44(fp):r0 -40(fp):r2 + 1515 -36(fp):r4 + 99 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012CEC:
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> fp:<invalid> -224(fp):<invalid> -220(fp):0x00000001 -216(fp):r2 -212(fp):r2 + 1515 -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):r2 + 1515 -44(fp):r0 -40(fp):r2 + 1515 -36(fp):r4 + 99 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012CEF:
	Mem529[sp_522 - 0x00000004:word32] = 0x00000000
	Mem532[sp_522 - 0x00000008:word32] = r4_505 + 1108
	Mem535[sp_522 - 0x0000000C:word32] = r2_502 + 1515
	word32 sp_539
	byte CVZN_540
	byte ZN_541
	bool C_542
	bool V_543
	word32 r8_544
	bool Z_545
	bool N_546
	word32 r2_547
	word32 r0_548
	byte CZN_549
	word32 r4_550
	word32 r6_551
	word32 r3_552
	word32 ap_553
	word32 r7_554
	word32 r5_555
	word32 fp_556
	call Mem535[r3_507:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_520,C_537,CVZN_495,CZN_504,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_521,N_501,r0_523,r2_502,r3_507,r4_505,r5_510,r6_506,r7_509,r8_499,sp_533,V_538,Z_525,ZN_536
		defs: ap_553,C_542,CVZN_540,CZN_549,fp_556,N_546,r0_548,r2_547,r3_552,r4_550,r5_555,r6_551,r7_554,r8_544,sp_539,V_543,Z_545,ZN_541
	Mem558[sp_539 - 0x00000004:word32] = r0_548
	Mem561[sp_539 - 0x00000008:word32] = r2_547 + 1515
	Mem563[sp_539 - 0x0000000C:word32] = r2_547
	word32 ap_564 = Mem563[r2_547 + 0x0000C839:word32]
	word32 sp_568
	byte CVZN_569
	byte ZN_570
	bool C_571
	bool V_572
	bool Z_574
	bool N_575
	word32 r2_576
	word32 r0_577
	byte CZN_578
	word32 r4_579
	word32 r6_580
	word32 r3_581
	word32 ap_582
	word32 r7_583
	word32 r5_584
	call Mem563[ap_564:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_564,C_566,CVZN_540,CZN_549,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_556,N_546,r0_548,r2_547,r3_552,r4_550,r5_555,r6_551,r7_554,r8_544,sp_562,V_567,Z_545,ZN_565
		defs: ap_582,C_571,CVZN_569,CZN_578,fp_585,N_575,r0_577,r2_576,r3_581,r4_579,r5_584,r6_580,r7_583,r8_573,sp_568,V_572,Z_574,ZN_570
	branch r8_1075 == 0x00000000 l00012D7E
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> fp:<invalid> -224(fp):<invalid> -220(fp):0x00000001 -216(fp):r2 -212(fp):r2 + 1515 -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):r2 + 1515 -44(fp):r0 -40(fp):r2 + 1515 -36(fp):r4 + 99 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012D12:
	Mem591[sp_568 - 0x00000004:word32] = 0x00000000
	Mem594[sp_568 - 0x00000008:word32] = r4_579 + 1184
	Mem597[sp_568 - 0x0000000C:word32] = r2_576 + 1515
	word32 sp_601
	byte CVZN_602
	byte ZN_603
	bool C_604
	bool V_605
	word32 r8_606
	bool Z_607
	bool N_608
	word32 r2_609
	word32 r0_610
	byte CZN_611
	word32 r4_612
	word32 r6_613
	word32 r3_614
	word32 ap_615
	word32 r7_616
	word32 r5_617
	word32 fp_618
	call Mem597[r3_581:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_582,C_599,CVZN_569,CZN_578,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_585,N_575,r0_577,r2_576,r3_581,r4_579,r5_584,r6_580,r7_583,r8_573,sp_595,V_600,Z_587,ZN_598
		defs: ap_615,C_604,CVZN_602,CZN_611,fp_618,N_608,r0_610,r2_609,r3_614,r4_612,r5_617,r6_613,r7_616,r8_606,sp_601,V_605,Z_607,ZN_603
	Mem620[sp_601 - 0x00000004:word32] = r0_610
	Mem623[sp_601 - 0x00000008:word32] = r2_609 + 1515
	Mem625[sp_601 - 0x0000000C:word32] = r2_609
	word32 ap_626 = Mem625[r2_609 + 0x0000C839:word32]
	word32 sp_630
	byte CVZN_631
	byte ZN_632
	bool C_633
	bool V_634
	bool Z_636
	bool N_637
	word32 r2_638
	word32 r0_639
	byte CZN_640
	word32 r4_641
	word32 r6_642
	word32 r3_643
	word32 ap_644
	word32 r7_645
	word32 r5_646
	call Mem625[ap_626:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_626,C_628,CVZN_602,CZN_611,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_618,N_608,r0_610,r2_609,r3_614,r4_612,r5_617,r6_613,r7_616,r8_606,sp_624,V_629,Z_607,ZN_627
		defs: ap_644,C_633,CVZN_631,CZN_640,fp_647,N_637,r0_639,r2_638,r3_643,r4_641,r5_646,r6_642,r7_645,r8_635,sp_630,V_634,Z_636,ZN_632
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> fp:<invalid> -224(fp):<invalid> -220(fp):0x00000001 -216(fp):r2 -212(fp):r2 + 1515 -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):r2 + 1515 -44(fp):r0 -40(fp):r2 + 1515 -36(fp):r4 + 99 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012C64:
	word32 sp_353 = sp_346 - 0x00000004
	Mem354[sp_353:word32] = 0x00000000
	Mem357[sp_353 - 0x00000004:word32] = r4_1001 + 926
	Mem360[sp_353 - 0x00000008:word32] = r2_341 + 1515
	fn000192D2()
	Mem365[sp_353 - 0x0000000C:word32] = r0_345
	Mem368[sp_353 - 0x00000010:word32] = r2_341 + 1515
	Mem370[sp_353 - 0x00000014:word32] = r2_341
	word32 ap_371 = Mem370[r2_341 + 0x0000C839:word32]
	word32 sp_375
	byte CVZN_376
	byte ZN_377
	bool C_378
	bool V_379
	bool Z_381
	bool N_382
	word32 r2_383
	word32 r0_384
	byte CZN_385
	word32 r4_386
	word32 r6_387
	word32 r3_388
	word32 ap_389
	word32 r7_390
	word32 r5_391
	call Mem370[ap_371:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_371,C_373,CVZN_343,CZN_340,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_347,N_342,r0_345,r2_341,r3_337,r4_339,r5_335,r6_338,r7_336,r8_344,sp_369,V_374,Z_350,ZN_372
		defs: ap_389,C_378,CVZN_376,CZN_385,fp_392,N_382,r0_384,r2_383,r3_388,r4_386,r5_391,r6_387,r7_390,r8_380,sp_375,V_379,Z_381,ZN_377
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -204(fp):r2 -200(fp):r2 + 1515 -196(fp):<invalid> -192(fp):r2 + 1515 -188(fp):r4 + 857 -184(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):r2 -168(fp):r2 + 1515 -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):r2 + 1515 -44(fp):r0 -40(fp):r2 + 1515 -36(fp):r4 + 99 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012AB1:
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 ap:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012D34:
	branch Mem0[r2 + 92:word32] == 0x00000000 l00012D7E
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 ap:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012D39:
	branch Mem0[r2 + 0x0000C692:word16] == 0x0000 l00012D7E
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 ap:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012D41:
	word32 sp_83 = sp_1070 - 0x00000004
	Mem84[sp_83:word32] = 0x00000001
	Mem87[sp_83 - 0x00000004:uint32] = (uint32) Mem84[r2 + 0x0000C692:word16]
	word32 ap_91
	word32 sp_93
	word32 r0_94 = fn0000DC76(ap, fp, out ap_91, out fp, out sp_93)
	branch r0_94 == 0x00000000 l00012D7E
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 ap:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012D55:
	Mem101[sp_93 - 0x00000004:uint32] = 0x00000401
	Mem104[sp_93 - 0x00000008:word32] = r4 + 1222
	Mem107[sp_93 - 0x0000000C:word32] = r2 + 1515
	fn000192D2()
	Mem112[sp_93 - 0x00000010:word32] = r0_94
	Mem115[sp_93 - 0x00000014:word32] = r2 + 1515
	Mem117[sp_93 - 0x00000018:word32] = r2
	word32 ap_118 = Mem117[r2 + 0x0000C839:word32]
	word32 sp_122
	byte CVZN_123
	byte ZN_124
	bool C_125
	bool V_126
	word32 r8_127
	bool Z_128
	bool N_129
	word32 r2_130
	word32 r0_131
	byte CZN_132
	word32 r4_133
	word32 r6_134
	word32 r3_135
	word32 ap_136
	word32 r7_137
	word32 r5_138
	call Mem117[ap_118:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_118,C_120,CVZN_40,CZN_47,dwLoc08_26,dwLoc0C_27,dwLoc10_28,dwLoc14_29,dwLoc18_30,dwLoc1C_31,fp_92,N_38,r0_94,r2_37,r3_34,r4_36,r5_32,r6_35,r7_33,r8_41,sp_116,V_121,Z_96,ZN_119
		defs: ap_136,C_125,CVZN_123,CZN_132,fp_139,N_129,r0_131,r2_130,r3_135,r4_133,r5_138,r6_134,r7_137,r8_127,sp_122,V_126,Z_128,ZN_124
	*r8Out = 0x00000001
// DataOut: fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r0:<invalid> fp:<invalid> ap:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00012D7E:
	word32 sp_66 = fp - 0x00000004
	*spOut = sp_66
	word32 fp_67
	*fpOut = Mem0[sp_66 + 0x00000010:word32]
	word32 ap_68
	*apOut = Mem0[sp_66 + 0x0000000C:word32]
	return r8_1075
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r3:<invalid> -224(fp):<invalid> -220(fp):0x00000001 -216(fp):r2 -212(fp):r2 + 1515 -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):r2 + 1515 -44(fp):r0 -40(fp):r2 + 1515 -36(fp):r4 + 99 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

fn00012A2A_exit:
// DataOut: ap fp r0 r3 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r3:<invalid> -224(fp):<invalid> -220(fp):0x00000001 -216(fp):r2 -212(fp):r2 + 1515 -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):r2 + 1515 -44(fp):r0 -40(fp):r2 + 1515 -36(fp):r4 + 99 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



void fn00012D86(word32 r0, word32 r3, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r3
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r2 r4 r5 r6 r7 r9 sp
// Preserved:
fn00012D86_entry:
// DataOut: ap fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012D86:
	word32 sp_102 = fp - 0x00000014
	word32 r10_385 = 0x00000000
	word32 r6_27 = 0x00000000
	branch Mem0[r3 + 100:word32] <= 0x00000000 l00012DCB
// DataOut: ap fp r0 r10 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012DA8:
	ap = fn000192B6(fp, out fp, out sp_102)
	r6_27 = r0
	branch r0 == 0x00000000 l00012DCB
// DataOut: ap fp r0 r10 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000014 r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 -18(fp):0x0000 -16(fp):0x0000000000000000

l00012DB9:
	word32 r2_793 = 0x00000000
	branch Mem0[r3 + 100:word32] <= 0x00000000 l00012DCB
// DataOut: ap fp r0 r10 r2 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 fp:<invalid> ap:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012DC0:
	Mem799[r0:word32] = 0x00000000
	r2_793 = r2_793 + 0x00000001
	branch r2_793 < Mem799[r3 + 100:word32] l00012DC0
// DataOut: ap fp r0 r10 r2 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r2:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012DCB:
	branch Mem0[r3 + 104:word32] <= 0x00000000 l00012DF3
// DataOut: ap fp r0 r10 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r2:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012DD0:
	Mem756[sp_102 - 0x00000004:word32] = Mem0[r3 + 104:word32] << 2
	ap = fn000192B6(fp, out fp, out sp_102)
	branch r0 == 0x00000000 l00012DF3
// DataOut: ap fp r0 r10 r3 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r2:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012DE1:
	word32 r2_768 = 0x00000000
	branch Mem756[r3 + 104:word32] <= 0x00000000 l00012DF3
// DataOut: ap fp r0 r10 r2 r3 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 fp:<invalid> ap:<invalid> r7:r0 r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012DE8:
	Mem774[r0:word32] = 0x00000000
	r2_768 = r2_768 + 0x00000001
	branch r2_768 < Mem774[r3 + 104:word32] l00012DE8
// DataOut: ap fp r0 r10 r2 r3 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 fp:<invalid> ap:<invalid> r7:r0 r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012DF3:
	word32 r4_295
	Mem49[r3 + 40:word32] = 0x00000000
	Mem51[r3 + 1511:word32] = r3 + 167
	word32 r2_52 = Mem51[r3 + 1511:word32]
	Mem54[r2_52 + 20:byte] = Mem51[r2_52 + 20:byte] & ~0x08
	branch Mem54[r3 + 0x0000C67E:word32] != 0x00000004 l00012E14
// DataOut: ap fp r0 r10 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 fp:<invalid> ap:<invalid> r7:r0 r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E14:
	r4_295 = DPB(r4, 0x00, 0)
// DataOut: ap fp r0 r10 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 fp:<invalid> ap:<invalid> r7:r0 r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E0F:
	r4_295 = DPB(r4, 0x04, 0)
// DataOut: ap fp r0 r10 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 fp:<invalid> ap:<invalid> r7:r0 r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E16:
	Mem63[fp + -8:int32] = (int32) (int8) r4_295
	word32 r9_299 = 0x00000000
	branch 0x00000000 < (uint32) Mem63[r3 + 0x0000C688:word16] l00012E2B
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 fp:<invalid> ap:<invalid> r7:r0 r2:<invalid> r4:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E2B:
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 fp:<invalid> ap:<invalid> r7:r0 r2:<invalid> r4:<invalid> r9:0x00000000 -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E3C:
	word32 sp_309 = sp_102 - 0x00000004
	Mem310[sp_309:word32] = 0x00000004
	Mem313[sp_309 - 0x00000004:word32] = r3 + 152
	word32 r2_317
	word32 r7_318
	word32 ap_319
	word32 fp_320
	word32 sp_321
	word32 r0_322 = fn0000D5BE(r0, r4_295, r6_27, ap, fp, out r2_317, out r7_318, out ap_319, out fp_320, out sp_321)
	branch r0_322 != 0x00000000 l00012E51
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 fp:<invalid> ap:<invalid> r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E51:
	Mem335[sp_321 - 0x00000004:word32] = 0x00000004
	Mem338[sp_321 - 0x00000008:word32] = r3 + 0x0000C634
	Mem341[sp_321 - 0x0000000C:word32] = r3 + 152
	fn000192DA()
	branch r0_322 == 0x00000000 l00012E96
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 fp:<invalid> ap:<invalid> r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000
// Terminates process

l00012E96:
	word32 r7_357
	word32 ap_358
	word32 fp_359
	word32 sp_360
	word32 r0_361 = fn00011C0A(r0_322, r4_295, r6_27, ap_319, fp_320, out r7_357, out ap_358, out fp_359, out sp_360)
	branch r0_361 == 0x00000000 l00012EA2
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EA2:
	Mem370[sp_360 - 0x00000004:word32] = 0x00000002
	Mem373[sp_360 - 0x00000008:uint32] = (uint32) Mem370[r3 + 0x0000C670:word16]
	byte CVZN_378
	byte ZN_379
	bool C_380
	bool V_381
	bool Z_383
	bool N_384
	word32 r7_387
	byte VZN_389
	word32 r2_391
	byte CZN_392
	word32 r9_395
	word32 r5_382
	call Mem373[r8:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_358,C_375,CVZN_304,CZN_300,dwLoc18_24,fp_359,N_302,qwLoc10_10,r0_361,r10_301,r2_317,r3_297,r4_295,r5_303,r6_298,r7_357,r8_294,r9_299,sp_371,V_376,VZN_296,wLoc12_8,Z_363,ZN_374
		defs: ap_396,C_380,CVZN_378,CZN_392,fp_394,N_384,r0_390,r10_385,r2_391,r3_388,r4_393,r5_382,r6_386,r7_387,r8_397,r9_395,sp_377,V_381,VZN_389,Z_383,ZN_379
	branch r0 == 0x00000000 l00012EBB
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r7:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EB2:
	r10_385 = r0
	branch r0 <= 0x00000001 l00012EBB
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r7:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EBB:
	branch Mem373[r3 + 108:word32] != 0x00000000 l00012F3F
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r2:<invalid> r7:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EC0:
	ap = Mem373[r3 + 144:word32] - 0x00000004
	r5_382 = 0x00000000
	word32 r2_589 = ap + 0x00000004
	branch Mem373[ap + 0x00000004:word32] == 0x00000000 l00012EFF
// DataOut: ap fp r0 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r2:<invalid> r7:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012ED0:
	word32 sp_681 = sp_102 - 0x00000004
	Mem683[sp_681:word32] = Mem373[r3 + 16:word32]
	Mem686[sp_681 - 0x00000004:word32] = Mem683[r2_589:word32]
	Mem689[sp_681 - 0x00000008:word32] = r3 + 0x0000C701
	byte CVZN_694
	byte ZN_695
	bool C_696
	bool V_697
	bool Z_699
	bool N_700
	word32 r7_703
	byte VZN_705
	word32 r2_707
	byte CZN_708
	call Mem689[r4_295:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_587,C_691,CVZN_378,CZN_402,dwLoc18_24,fp_394,N_384,qwLoc10_10,r0_390,r10_403,r2_679,r3_678,r4_393,r5_588,r6_386,r7_387,r8_397,r9_395,sp_687,V_692,VZN_389,wLoc12_8,Z_591,ZN_690
		defs: ap_712,C_696,CVZN_694,CZN_708,fp_710,N_700,r0_706,r10_701,r2_707,r3_704,r4_709,r5_698,r6_702,r7_703,r8_713,r9_711,sp_693,V_697,VZN_705,Z_699,ZN_695
	branch r0 == 0x00000000 l00012EF8
// DataOut: ap fp r0 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r5:0x00000000 r2:<invalid> r7:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EF8:
	r2_589 = r2_707 + 0x00000004
	branch Mem689[r2_707 + 0x00000004:word32] != 0x00000000 l00012ED0
// DataOut: ap fp r0 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r5:0x00000000 r2:<invalid> r7:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EE2:
	r5_382 = 0x00000001
	branch r6_27 == 0x00000000 l00012EFF
// DataOut: ap fp r0 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r5:0x00000000 r2:<invalid> r7:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EE9:
	ap = (r2_707 - Mem689[r3 + 144:word32]) / 0x00000004
	Mem726[r6_27:word32] = 0x00000001
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r5:0x00000001 r2:<invalid> r7:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EFF:
	branch r5_382 == 0x00000000 l00012F3F
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r5:<invalid> r2:<invalid> r7:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F03:
	word32 r2_615 = Mem373[r3 + 148:word32] - 0x00000004
	word32 r2_616 = r2_615 + 0x00000004
	branch Mem373[r2_615 + 0x00000004:word32] == 0x00000000 l00012F3F
// DataOut: ap fp r0 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r5:<invalid> r2:<invalid> r7:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F10:
	word32 sp_624 = sp_102 - 0x00000004
	Mem626[sp_624:word32] = Mem373[r3 + 16:word32]
	Mem629[sp_624 - 0x00000004:word32] = Mem626[r2_616:word32]
	Mem632[sp_624 - 0x00000008:word32] = r3 + 0x0000C701
	byte CVZN_637
	byte ZN_638
	bool C_639
	bool V_640
	bool Z_642
	bool N_643
	word32 r7_646
	byte VZN_648
	word32 r2_650
	byte CZN_651
	call Mem632[r4_295:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_610,C_634,CVZN_606,CZN_601,dwLoc18_24,fp_609,N_604,qwLoc10_10,r0_607,r10_602,r2_622,r3_621,r4_595,r5_605,r6_598,r7_600,r8_594,r9_599,sp_630,V_635,VZN_596,wLoc12_8,Z_618,ZN_633
		defs: ap_655,C_639,CVZN_637,CZN_651,fp_653,N_643,r0_649,r10_644,r2_650,r3_647,r4_652,r5_641,r6_645,r7_646,r8_656,r9_654,sp_636,V_640,VZN_648,Z_642,ZN_638
	branch r0 == 0x00000000 l00012F38
// DataOut: ap fp r0 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r5:<invalid> r2:<invalid> r7:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F38:
	r2_616 = r2_650 + 0x00000004
	branch Mem632[r2_650 + 0x00000004:word32] != 0x00000000 l00012F10
// DataOut: ap fp r0 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r5:<invalid> r2:<invalid> r7:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F22:
	r5_382 = 0x00000000
	branch r7_646 == 0x00000000 l00012F3F
// DataOut: ap fp r0 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r5:<invalid> r2:<invalid> r7:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F28:
	ap = (r2_650 - Mem632[r3 + 148:word32]) / 0x00000004
	Mem669[r7_646:word32] = 0x00000001
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r5:0x00000000 r2:<invalid> r7:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F3F:
	branch Mem373[r3 + 108:word32] != 0x00000000 l00012F4B
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F44:
	branch r5_382 != 0x00000000 l00012F4B
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F4B:
	word32 r0_430 = Mem373[r3 + 36:word32]
	branch r0_430 > 0x0000000A l00012F65
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F65:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F4F_1:
	word32 sp_435
	byte CVZN_436
	byte ZN_437
	bool C_438
	bool V_439
	word32 r5_440
	bool Z_441
	bool N_442
	word32 r10_443
	word32 r6_444
	word32 r7_445
	word32 r3_446
	byte VZN_447
	word32 r0_448
	word32 r2_449
	byte CZN_450
	word32 r4_451
	word32 fp_452
	word32 r9_453
	word32 ap_454
	word32 r8_455
	call 0x00012F53 + (r0_430 - 0x00000001) * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_424,C_432,CVZN_420,CZN_415,dwLoc18_24,fp_423,N_418,qwLoc10_10,r0_430,r10_416,r2_417,r3_411,r4_409,r5_419,r6_412,r7_414,r8_408,r9_413,sp_422,V_433,VZN_410,wLoc12_8,Z_429,ZN_431
		defs: ap_454,C_438,CVZN_436,CZN_450,fp_452,N_442,r0_448,r10_443,r2_449,r3_446,r4_451,r5_440,r6_444,r7_445,r8_455,r9_453,sp_435,V_439,VZN_447,Z_441,ZN_437
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F48:
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l0001307C:
	branch Mem373[r3 + 0x0000C672:word16] == 0x0000 l0001309D
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013084:
	word32 sp_547 = sp_102 - 0x00000004
	Mem548[sp_547:word32] = 0x00000000
	Mem551[sp_547 - 0x00000004:uint32] = (uint32) Mem548[r3 + 0x0000C672:word16]
	byte CVZN_556
	byte ZN_557
	bool C_558
	bool V_559
	word32 r5_560
	bool Z_561
	bool N_562
	word32 r7_565
	byte VZN_567
	word32 r2_569
	byte CZN_570
	call Mem551[r8:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_424,C_553,CVZN_420,CZN_415,dwLoc18_24,fp_423,N_418,qwLoc10_10,r0_421,r10_416,r2_417,r3_411,r4_409,r5_419,r6_412,r7_414,r8_408,r9_413,sp_549,V_554,VZN_410,wLoc12_8,Z_461,ZN_552
		defs: ap_574,C_558,CVZN_556,CZN_570,fp_572,N_562,r0_568,r10_563,r2_569,r3_566,r4_571,r5_560,r6_564,r7_565,r8_575,r9_573,sp_555,V_559,VZN_567,Z_561,ZN_557
	branch r0 == 0x00000000 l0001309D
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013094:
	r10_385 = r0
	branch r0 <= 0x00000001 l0001309D
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l0001309D:
	branch Mem373[r3 + 0x0000C674:word16] == 0x0000 l000130BE
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130A5:
	word32 sp_507 = sp_102 - 0x00000004
	Mem508[sp_507:word32] = 0x00000000
	Mem511[sp_507 - 0x00000004:uint32] = (uint32) Mem508[r3 + 0x0000C674:word16]
	byte CVZN_516
	byte ZN_517
	bool C_518
	bool V_519
	word32 r5_520
	bool Z_521
	bool N_522
	word32 r7_525
	byte VZN_527
	word32 r2_529
	byte CZN_530
	call Mem511[r8:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_480,C_513,CVZN_476,CZN_471,dwLoc18_24,fp_479,N_474,qwLoc10_10,r0_477,r10_472,r2_473,r3_467,r4_465,r5_475,r6_468,r7_470,r8_464,r9_469,sp_509,V_514,VZN_466,wLoc12_8,Z_482,ZN_512
		defs: ap_534,C_518,CVZN_516,CZN_530,fp_532,N_522,r0_528,r10_523,r2_529,r3_526,r4_531,r5_520,r6_524,r7_525,r8_535,r9_533,sp_515,V_519,VZN_527,Z_521,ZN_517
	branch r0 == 0x00000000 l000130BE
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130B5:
	r10_385 = r0
	branch r0 <= 0x00000001 l000130BE
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130BE:
	r9_299 = r9_395 + 0x00000001
	branch r9_299 >= (uint32) Mem373[r3 + 0x0000C688:word16] l000130CF
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130CC:
// DataOut: ap fp r0 r10 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r9:r9 + 0x00000001 r2:<invalid> r7:<invalid> r5:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130BD:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l0001309C:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EBA:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r10:<invalid> r2:<invalid> r7:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EA1:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r7:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E68:
	Mem351[sp_321 - 0x00000010:uint32] = 0x00000401
	Mem353[sp_321 - 0x00000014:word32] = r9_299
// DataOut:
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E4D:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 fp:<invalid> ap:<invalid> r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E28:
// DataOut: ap fp r0 r10 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 fp:<invalid> ap:<invalid> r7:r0 r2:<invalid> r4:<invalid> r9:0x00000000 -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130CF:
	word32 sp_105 = sp_102 - 0x00000004
	Mem106[sp_105:word32] = 0x00000004
	Mem109[sp_105 - 0x00000004:word32] = r3 + 152
	word32 r2_113
	word32 r7_114
	word32 ap_115
	word32 fp_116
	word32 sp_117
	word32 r0_118 = fn0000D5BE(r0, r4_295, r6_27, ap, fp, out r2_113, out r7_114, out ap_115, out fp_116, out sp_117)
	branch r0_118 != 0x00000000 l000130E4
// DataOut: ap fp r0 r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 fp:<invalid> ap:<invalid> r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130E4:
	Mem131[sp_117 - 0x00000004:word32] = 0x00000004
	Mem134[sp_117 - 0x00000008:word32] = r3 + 0x0000C639
	Mem137[sp_117 - 0x0000000C:word32] = r3 + 152
	fn000192DA()
	word32 sp_135 = sp_117 - 0x0000000C
	branch r0_118 == 0x00000000 l00013126
// DataOut: ap fp r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 fp:<invalid> ap:<invalid> r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000
// Terminates process

l00013126:
	branch Mem137[r3 + 68:word32] == 0x00000000 l000131A4
// DataOut: ap fp r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131A4:
	branch r6_27 == 0x00000000 l000131F6
// DataOut: fp r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131A8:
	word32 ap_254 = 0x00000000
	branch Mem137[r3 + 100:word32] <= 0x00000000 l000131ED
// DataOut: ap fp r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131AF:
// DataOut: ap fp r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: ap:0x00000000 -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131B0:
	branch Mem137[r6_27 + ap_254 * 4:word32] != 0x00000000 l000131E5
// DataOut: ap fp r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131E5:
	ap_254 = ap_254 + 0x00000001
	branch ap_254 < Mem137[r3 + 100:word32] l000131B0
// DataOut: ap fp r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131ED:
	Mem263[sp_117 - 0x00000010:word32] = r6_27
	fn000192B2()
	sp_135 = sp_117 - 0x00000010
// DataOut: fp r10 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000
// Terminates process

l000131F6:
	branch r7_114 == 0x00000000 l0001324A
// DataOut: fp r10 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131FA:
	word32 ap_217 = 0x00000000
	branch Mem137[r3 + 104:word32] <= 0x00000000 l00013241
// DataOut: ap fp r10 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013201:
// DataOut: ap fp r10 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: ap:0x00000000 -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013204:
	branch Mem137[r7_114 + ap_217 * 4:word32] != 0x00000000 l00013239
// DataOut: ap fp r10 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013239:
	ap_217 = ap_217 + 0x00000001
	branch ap_217 < Mem137[r3 + 104:word32] l00013204
// DataOut: ap fp r10 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013241:
	sp_135 = sp_135 - 0x00000004
	Mem226[sp_135:word32] = r7_114
	fn000192B2()
// DataOut: fp r10 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000
// Terminates process

l0001324A:
	branch (uint32) Mem137[sp_135 + 2:word16] != 0x00000000 l00013258
// DataOut: fp r10
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013250:
	branch r10_385 > 0x00000001 l00013258
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013255:
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013258:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r10:0x0000000B -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013209:
	word32 sp_240 = sp_135 - 0x00000004
	Mem242[sp_240:uint32] = 0x00000401
	Mem246[sp_240 - 0x00000004:word32] = Mem242[Mem242[r3 + 148:word32] + ap_217 * 4:word32]
// DataOut:
// DataOut (flags): 
// SymbolicIn: ap:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131B5:
	Mem276[sp_117 - 0x00000010:uint32] = 0x00000401
	Mem280[sp_117 - 0x00000014:word32] = Mem276[Mem276[r3 + 144:word32] + ap_254 * 4:word32]
// DataOut:
// DataOut (flags): 
// SymbolicIn: ap:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l0001312B:
	Mem157[sp_117 - 0x00000010:word32] = Mem137[sp_117 - 0x00000008:word32]
	Mem160[sp_117 - 0x00000014:word32] = Mem157[sp_117 - 0x0000000C:word32]
	word32 sp_164
	branch fn00017662(ap_115, fp_116, out sp_164) >= 0x00000000 l0001314E
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013144:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r5:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l0001314E:
	Mem174[sp_164 - 0x00000004:word32] = 0x00000000
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r5:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130FB:
	Mem147[sp_117 - 0x00000010:uint32] = 0x00000401
// DataOut:
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130E0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 fp:<invalid> ap:<invalid> r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

fn00012D86_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 fp:<invalid> ap:<invalid> r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000



void fn0001325E(word32 r5, word32 r6, word32 r7, word32 r8, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r5 r6 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001325E_entry:
// DataOut: ap fp r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0001325E:
	word32 r2_7 = Mem0[Mem0[ap + 4:word32]:word32]
	branch Mem0[r5 + 0x0000C67E:word32] == r2_7 l000132B7
// DataOut: ap fp r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00013286_thunk_fn000132B7:
	fn000132B7(r5, r6, r7, r8, ap, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -236 r2:<invalid> -228(fp):0x00000000
// Terminates process

l00013288:
	branch r2_7 == 0x00000000 l000132B7
// DataOut: ap fp r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -236 r2:<invalid> -228(fp):0x00000000
// LocalsOut: fp(32)

l0001328A_thunk_fn000132B7:
	fn000132B7(r5, r6, r7, r8, ap, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -236 r2:<invalid> -228(fp):0x00000000
// Terminates process

l0001328C:
	fn000192D2()
	word32 r2_70 = Mem0[r5 + 0x0000C839:word32]
	word32 sp_87
	byte ZN_88
	bool C_89
	bool V_90
	bool Z_91
	bool N_92
	word32 ap_93
	word32 r2_94
	word32 r5_95
	byte CZN_96
	byte CVZN_97
	word32 r6_98
	word32 r0_99
	word32 r3_100
	word32 fp_101
	word32 r4_102
	word32 r9_103
	word32 r10_104
	word32 r8_105
	word32 r7_106
	word32 r1_107
	byte CZ_108
	byte VZN_109
	word32 r11_110
	call Mem0[r2_70:word32] + 2 (retsize: 4; depth: 268)
		uses: ap,C_72,CVZN,CZ,CZN_9,dwLoc0100_64,dwLoc0104_67,dwLoc0108_69,dwLocE4_4,dwLocF0_48,dwLocF4_51,dwLocF8_55,dwLocFC_58,fp,N,r0,r1,r10,r11,r2_70,r3,r4,r5,r6,r7,r8,r9,sp_68,V_73,VZN,Z_44,ZN_71
		defs: ap_93,C_89,CVZN_97,CZ_108,CZN_96,fp_101,N_92,r0_99,r1_107,r10_104,r11_110,r2_94,r3_100,r4_102,r5_95,r6_98,r7_106,r8_105,r9_103,sp_87,V_90,VZN_109,Z_91,ZN_88
// DataOut: ap fp r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -236 r2:<invalid> -228(fp):0x00000000

l000132B4_thunk_fn000132B7:
	fn000132B7(r5_95, r6_98, r7_106, r8_105, ap_93, fp_101)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -252(fp):r5 + 1515 -248(fp):r6 + 1743 -244(fp):<invalid> -240(fp):0x00000000 -228(fp):0x00000000
// Terminates process

fn0001325E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp -252(fp):r5 + 1515 -248(fp):r6 + 1743 -244(fp):<invalid> -240(fp):0x00000000 -228(fp):0x00000000



void fn000132B7(word32 r5, word32 r6, word32 r7, word32 r8, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r5 r6 r7 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000132B7_entry:
// DataOut: ap fp r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000132B7:
	word32 r3_10 = Mem0[r5 + 0x0000C67E:word32] + 0x0000001E + (uint32) Mem0[r5 + 0x0000C670:word16] + (uint32) Mem0[r5 + 0x0000C672:word16] + (uint32) Mem0[r5 + 0x0000C674:word16]
	Mem12[Mem12[ap + 4:word32]:word32] = r3_10 + Mem0[r5 + 0x0000C668:word32]
	word32 ap_23
	word32 fp_24
	word32 sp_25
	word32 r0_26 = fn0000DC76(ap, fp, out ap_23, out fp_24, out sp_25)
	Mem28[sp_25 + 4:word32] = r0_26
	branch r0_26 == 0x00000000 l0001331C
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000132FC:
	branch Mem28[r5 + 0x0000C627:word32] == 0x00000000 l00013317
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -8(fp):<invalid> -4(fp):<invalid>

l00013304:
	Mem3154[sp_25 - 0x00000004:word32] = Mem28[r5 + 0x0000C627:word32]
	fn000192B2()
	Mem3159[r5 + 0x0000C627:word32] = 0x00000000
	sp_25 = sp_25 - 0x00000004
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -8(fp):<invalid> -4(fp):<invalid>

l00013317:
	Mem3148[sp_25 + 8:word32] = Mem28[sp_25 + 4:word32]
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l0001331C:
	Mem40[sp_25 + 2:word16] = Mem28[Mem28[r5 + 1511:word32] + 12:word16]
	Mem42[fp_24 + -6:uint16] = (uint16) Mem40[r5 + 0x0000C658:byte]
	branch (uint32) Mem42[r5 + 0x0000C65B:byte] >=u 0x00000012 l00013344
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> 0(fp):r0

l00013344:
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0

l0001333A:
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0

l00013347:
	word32 r3_3120
	branch (uint32) Mem42[r5 + 0x0000C65E:word16] >=u 0x0000000B l00013368
// DataOut: ap fp r0 r10 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0

l00013368:
	r3_3120 = DPB(r3_10, 0x000B, 0)
// DataOut: ap fp r0 r10 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0

l0001335D:
	r3_3120 = DPB(r3_10, Mem42[r5 + 0x0000C65E:word16], 0)
// DataOut: ap fp r0 r10 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0

l0001336B:
	word32 r4_154
	Mem61[sp_25 + 16:word16] = (word16) r3_3120
	word32 sp_62 = sp_25 - 0x00000004
	Mem63[sp_62:word32] = 0x00000000
	Mem65[sp_62 - 0x00000004:word32] = 0x00000002
	Mem69[sp_62 - 0x00000008:word32] = r8 + 42
	Mem71[sp_62 - 0x0000000C:word32] = r5
	word32 r2_72 = Mem71[r5 + 0x0000C839:word32]
	word32 sp_76
	word32 r5_77
	word32 r3_78
	byte CVZN_79
	word32 r2_80
	byte ZN_81
	bool C_82
	bool V_83
	word32 ap_84
	word32 r0_85
	bool Z_86
	bool N_87
	word32 fp_88
	byte CZN_89
	word32 r4_90
	word32 r9_91
	word32 r10_92
	word32 r8_93
	word32 r6_94
	word32 r7_95
	word32 r1_96
	byte CZ_97
	byte VZN_98
	call Mem71[r2_72:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_23,C_74,CZN_56,dwLoc04_15,dwLoc08_18,fp_24,N_34,r0_26,r10_54,r2_72,r3_59,r4_47,r5,r8,r9_51,sp_70,V_75,Z_35,ZN_73
		defs: ap_84,C_82,CVZN_79,CZ_97,CZN_89,fp_88,N_87,r0_85,r1_96,r10_92,r2_80,r3_78,r4_90,r5_77,r6_94,r7_95,r8_93,r9_91,sp_76,V_83,VZN_98,Z_86,ZN_81
	fn00017772(r2_80, ap_84, fp_88)
	Mem100[sp_76 - 0x00000004:word32] = 0x00000000
	Mem103[sp_76 - 0x00000008:word32] = Mem100[r5_77 + 0x0000C67E:word32]
	Mem106[sp_76 - 0x0000000C:word32] = Mem103[r5_77 + 0x0000C67E:word32]
	Mem109[sp_76 - 0x00000010:word32] = r6_94 + 1810
	Mem112[sp_76 - 0x00000014:word32] = r5_77 + 1515
	fn000192D2()
	Mem117[sp_76 - 0x00000018:word32] = r0_85
	Mem120[sp_76 - 0x0000001C:word32] = r5_77 + 1515
	Mem122[sp_76 - 0x00000020:word32] = r5_77
	word32 r2_123 = Mem122[r5_77 + 0x0000C839:word32]
	word32 r5_128
	word32 r3_129
	byte CVZN_130
	word32 r2_131
	byte ZN_132
	bool C_133
	bool V_134
	word32 ap_135
	word32 r0_136
	bool Z_137
	bool N_138
	word32 fp_139
	byte CZN_140
	word32 r4_141
	word32 r9_142
	word32 r10_143
	word32 r8_144
	word32 r6_145
	word32 r7_146
	word32 r1_147
	byte CZ_148
	byte VZN_149
	word32 sp_127
	call Mem122[r2_123:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_84,C_125,CVZN_79,CZ_97,CZN_89,dwLoc04_15,dwLoc08_18,fp_88,N_87,r0_85,r1_96,r10_92,r2_123,r3_78,r4_90,r5_77,r6_94,r7_95,r8_93,r9_91,sp_121,V_126,VZN_98,Z_86,ZN_124
		defs: ap_135,C_133,CVZN_130,CZ_148,CZN_140,fp_139,N_138,r0_136,r1_147,r10_143,r2_131,r3_129,r4_141,r5_128,r6_145,r7_146,r8_144,r9_142,sp_127,V_134,VZN_149,Z_137,ZN_132
	word32 r3_150 = (uint32) Mem122[sp_127 + 2:word16]
	branch r3_150 <u 0x00000012 l000133DC
// DataOut: ap fp r0 r10 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0

l000133DC:
	r4_154 = Mem122[r6_145 + 5188 + r3_150 * 4:word32]
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r3:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000133C1:
	Mem3101[sp_127 - 0x00000004:uint32] = (uint32) Mem122[r5_128 + 0x0000C659:byte]
	Mem3104[sp_127 - 0x00000008:word32] = r6_145 + 1797
	Mem3107[sp_127 - 0x0000000C:word32] = fp_139 + -58
	fn000192D2()
	sp_127 = sp_127 - 0x0000000C
	r4_154 = fp_139 + -58
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r3:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000133E2:
	word32 sp_156 = sp_127 - 0x00000004
	Mem157[sp_156:word32] = 0x00000000
	Mem159[sp_156 - 0x00000004:word32] = r4_154
	Mem162[sp_156 - 0x00000008:word32] = r6_145 + 1883
	Mem165[sp_156 - 0x0000000C:word32] = r5_128 + 1515
	word32 sp_169
	word32 r5_170
	word32 r3_171
	byte CVZN_172
	word32 r2_173
	byte ZN_174
	bool C_175
	bool V_176
	word32 ap_177
	word32 r0_178
	bool Z_179
	bool N_180
	word32 fp_181
	byte CZN_182
	word32 r4_183
	word32 r9_184
	word32 r10_185
	word32 r8_186
	word32 r6_187
	word32 r7_188
	word32 r1_189
	byte CZ_190
	byte VZN_191
	call Mem165[r7_146:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_135,C_167,CVZN_130,CZ_148,CZN_151,dwLoc04_15,dwLoc08_18,fp_139,N_138,r0_136,r1_147,r10_143,r2_131,r3_150,r4_154,r5_128,r6_145,r7_146,r8_144,r9_142,sp_163,V_168,VZN_149,Z_137,ZN_166
		defs: ap_177,C_175,CVZN_172,CZ_190,CZN_182,fp_181,N_180,r0_178,r1_189,r10_185,r2_173,r3_171,r4_183,r5_170,r6_187,r7_188,r8_186,r9_184,sp_169,V_176,VZN_191,Z_179,ZN_174
	Mem193[sp_169 - 0x00000004:word32] = r0_178
	Mem196[sp_169 - 0x00000008:word32] = r5_170 + 1515
	Mem198[sp_169 - 0x0000000C:word32] = r5_170
	word32 r2_199 = Mem198[r5_170 + 0x0000C839:word32]
	word32 sp_203
	word32 r5_204
	word32 r3_205
	byte CVZN_206
	word32 r2_207
	byte ZN_208
	bool C_209
	bool V_210
	word32 ap_211
	word32 r0_212
	bool Z_213
	bool N_214
	word32 fp_215
	byte CZN_216
	word32 r4_217
	word32 r9_218
	word32 r10_219
	word32 r8_220
	word32 r6_221
	word32 r7_222
	word32 r1_223
	byte CZ_224
	byte VZN_225
	call Mem198[r2_199:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_177,C_201,CVZN_172,CZ_190,CZN_182,dwLoc04_15,dwLoc08_18,fp_181,N_180,r0_178,r1_189,r10_185,r2_199,r3_171,r4_183,r5_170,r6_187,r7_188,r8_186,r9_184,sp_197,V_202,VZN_191,Z_179,ZN_200
		defs: ap_211,C_209,CVZN_206,CZ_224,CZN_216,fp_215,N_214,r0_212,r1_223,r10_219,r2_207,r3_205,r4_217,r5_204,r6_221,r7_222,r8_220,r9_218,sp_203,V_210,VZN_225,Z_213,ZN_208
	Mem227[sp_203 - 0x00000004:word32] = 0x00000000
	word32 r1_228 = 0x00000000
	word32 r0_229 = (uint32) Mem227[fp_215 + -6:word16]
	branch 0x0000000A == 0x00000000 l00013430
// DataOut: ap fp r0 r1 r10 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:sp - 0x0000001C r2:<invalid> r3:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013417:
	branch 0x00000009 == 0x00000000 l00013435
// DataOut: ap fp r0 r1 r10 r5 r6 r7 r8 r9 sp
// DataOut (flags): ZN
// SymbolicIn: r4:<invalid> sp:sp - 0x00001FFC r2:0x0000000A r3:<invalid> r1:0x00000000 r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l0001341C:
	branch true l00013430
// DataOut: ap fp r0 r1 r10 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:sp - 0x00001FFC r2:0x0000000A r3:<invalid> r1:0x00000000 r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013430:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:sp - 0x00001FFC r2:0x0000000A r3:<invalid> r1:0x00000000 r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l0001341E:
	branch 0x0000000A == r0_229 l00013435
// DataOut: ap fp r0 r1 r10 r5 r6 r7 r8 r9 sp
// DataOut (flags): CZ
// SymbolicIn: r4:<invalid> sp:sp - 0x00001FFC r2:0x0000000A r3:<invalid> r1:0x00000000 r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013423:
	branch 0x0000000A >u r0_229 l00013428
// DataOut: ap fp r0 r1 r10 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:sp - 0x00001FFC r2:0x0000000A r3:<invalid> r1:0x00000000 r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013425:
	r1_228 = 0xFFFFFFF6
// DataOut: ap fp r0 r1 r10 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:sp - 0x00001FFC r2:0x0000000A r3:<invalid> r1:0x00000000 r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013428:
	r1_228 = r1_228 + r0_229
// DataOut: ap fp r1 r10 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:sp - 0x00001FFC r2:0x0000000A r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013435:
	Mem261[sp_203 - 0x00000008:uint32] = (uint32) (word16) r1_228
	word32 r2_262 = (uint32) Mem261[fp_215 + -6:word16]
	word32 r1_263 = 0x00000000
	branch true l00013450
// DataOut: ap fp r0 r1 r10 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:sp - 0x00001FFC r2:0x0000000A r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013450:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:sp - 0x00003FFC r2:0x0000000A r3:<invalid> r1:0x00000000 r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013446:
	branch 0x0000000A >u r2_262 l00013455
// DataOut: ap fp r0 r1 r10 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:sp - 0x00003FFC r2:0x0000000A r3:<invalid> r1:0x00000000 r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l0001344B:
	r1_263 = 0x00000001
// DataOut: ap fp r0 r1 r10 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:sp - 0x00003FFC r2:0x0000000A r3:<invalid> r1:0x00000000 r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013455:
	word32 r4_3075
	Mem275[sp_203 - 0x0000000C:word32] = r1_263
	Mem278[sp_203 - 0x00000010:word32] = r6_221 + 1939
	Mem281[sp_203 - 0x00000014:word32] = r5_204 + 1515
	word32 sp_285
	word32 r5_286
	word32 r3_287
	byte CVZN_288
	word32 r2_289
	byte ZN_290
	bool C_291
	bool V_292
	word32 ap_293
	word32 r0_294
	bool Z_295
	bool N_296
	word32 fp_297
	byte CZN_298
	word32 r4_299
	word32 r9_300
	word32 r10_301
	word32 r8_302
	word32 r6_303
	word32 r7_304
	word32 r1_305
	byte CZ_306
	byte VZN_307
	call Mem281[r7_222:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_211,C_283,CVZN_257,CZ_271,CZN_270,dwLoc04_15,dwLoc08_18,fp_215,N_267,r0_264,r1_273,r10_219,r2_265,r3_205,r4_217,r5_204,r6_221,r7_222,r8_220,r9_218,sp_279,V_284,VZN_253,Z_256,ZN_282
		defs: ap_293,C_291,CVZN_288,CZ_306,CZN_298,fp_297,N_296,r0_294,r1_305,r10_301,r2_289,r3_287,r4_299,r5_286,r6_303,r7_304,r8_302,r9_300,sp_285,V_292,VZN_307,Z_295,ZN_290
	Mem309[sp_285 - 0x00000004:word32] = r0_294
	Mem312[sp_285 - 0x00000008:word32] = r5_286 + 1515
	Mem314[sp_285 - 0x0000000C:word32] = r5_286
	word32 r2_315 = Mem314[r5_286 + 0x0000C839:word32]
	word32 r3_321
	byte CVZN_322
	word32 r2_323
	byte ZN_324
	bool C_325
	bool V_326
	word32 ap_327
	word32 r0_328
	bool Z_329
	bool N_330
	word32 fp_331
	byte CZN_332
	word32 r4_333
	word32 r9_334
	word32 r10_335
	word32 r8_336
	word32 r7_338
	word32 r1_339
	byte CZ_340
	byte VZN_341
	word32 r6_3070
	word32 r5_3053
	word32 sp_3052
	call Mem314[r2_315:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_293,C_317,CVZN_288,CZ_306,CZN_298,dwLoc04_15,dwLoc08_18,fp_297,N_296,r0_294,r1_305,r10_301,r2_315,r3_287,r4_299,r5_286,r6_303,r7_304,r8_302,r9_300,sp_313,V_318,VZN_307,Z_295,ZN_316
		defs: ap_327,C_325,CVZN_322,CZ_340,CZN_332,fp_331,N_330,r0_328,r1_339,r10_335,r2_323,r3_321,r4_333,r5_320,r6_337,r7_338,r8_336,r9_334,sp_319,V_326,VZN_341,Z_329,ZN_324
	word32 r3_342 = (uint32) (word16) r9_334
	branch r3_342 <u 0x00000012 l00013494
// DataOut: ap fp r0 r10 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:sp - 0x00003FFC r2:0x0000000A r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013494:
	r4_3075 = Mem314[r6_3070 + 5188 + r3_342 * 4:word32]
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:sp - 0x000FFFFC r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l0001347C:
	Mem3042[sp_3052 - 0x00000004:uint32] = (uint32) Mem314[r5_3053 + 0x0000C65B:byte]
	Mem3045[sp_3052 - 0x00000008:word32] = r6_3070 + 1797
	Mem3048[sp_3052 - 0x0000000C:word32] = fp_331 + -58
	word32 r3_3054
	byte CVZN_3055
	word32 r2_3056
	byte ZN_3057
	bool C_3058
	bool V_3059
	word32 ap_3060
	word32 r0_3061
	bool Z_3062
	bool N_3063
	word32 fp_3064
	byte CZN_3065
	word32 r4_3066
	word32 r9_3067
	word32 r10_3068
	word32 r8_3069
	word32 r7_3071
	word32 r1_3072
	byte CZ_3073
	byte VZN_3074
	call Mem3048[r7_338:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_327,C_3050,CVZN_322,CZ_340,CZN_343,dwLoc04_15,dwLoc08_18,fp_331,N_330,r0_328,r1_339,r10_335,r2_323,r3_342,r4_333,r5_320,r6_337,r7_338,r8_336,r9_334,sp_3046,V_3051,VZN_341,Z_329,ZN_3049
		defs: ap_3060,C_3058,CVZN_3055,CZ_3073,CZN_3065,fp_3064,N_3063,r0_3061,r1_3072,r10_3068,r2_3056,r3_3054,r4_3066,r5_3053,r6_3070,r7_3071,r8_3069,r9_3067,sp_3052,V_3059,VZN_3074,Z_3062,ZN_3057
	r4_3075 = fp_3064 + -58
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:sp - 0x000FFFFC r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l0001349A:
	word32 sp_350 = sp_3052 - 0x00000004
	Mem351[sp_350:word32] = 0x00000000
	Mem353[sp_350 - 0x00000004:word32] = r4_3075
	Mem356[sp_350 - 0x00000008:word32] = r6_3070 + 1998
	Mem359[sp_350 - 0x0000000C:word32] = r5_3053 + 1515
	word32 sp_363
	word32 r5_364
	word32 r3_365
	byte CVZN_366
	word32 r2_367
	byte ZN_368
	bool C_369
	bool V_370
	word32 ap_371
	word32 r0_372
	bool Z_373
	bool N_374
	word32 fp_375
	byte CZN_376
	word32 r4_377
	word32 r9_378
	word32 r10_379
	word32 r8_380
	word32 r6_381
	word32 r7_382
	word32 r1_383
	byte CZ_384
	byte VZN_385
	call Mem359[r7_338:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_327,C_361,CVZN_322,CZ_340,CZN_343,dwLoc04_15,dwLoc08_18,fp_331,N_330,r0_328,r1_339,r10_335,r2_323,r3_342,r4_347,r5_348,r6_346,r7_338,r8_336,r9_334,sp_357,V_362,VZN_341,Z_329,ZN_360
		defs: ap_371,C_369,CVZN_366,CZ_384,CZN_376,fp_375,N_374,r0_372,r1_383,r10_379,r2_367,r3_365,r4_377,r5_364,r6_381,r7_382,r8_380,r9_378,sp_363,V_370,VZN_385,Z_373,ZN_368
	Mem387[sp_363 - 0x00000004:word32] = r0_372
	Mem390[sp_363 - 0x00000008:word32] = r5_364 + 1515
	Mem392[sp_363 - 0x0000000C:word32] = r5_364
	word32 r2_393 = Mem392[r5_364 + 0x0000C839:word32]
	word32 sp_397
	word32 r5_398
	word32 r3_399
	byte CVZN_400
	word32 r2_401
	byte ZN_402
	bool C_403
	bool V_404
	word32 ap_405
	word32 r0_406
	bool Z_407
	bool N_408
	word32 fp_409
	byte CZN_410
	word32 r4_411
	word32 r9_412
	word32 r10_413
	word32 r8_414
	word32 r6_415
	word32 r7_416
	word32 r1_417
	byte CZ_418
	byte VZN_419
	call Mem392[r2_393:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_371,C_395,CVZN_366,CZ_384,CZN_376,dwLoc04_15,dwLoc08_18,fp_375,N_374,r0_372,r1_383,r10_379,r2_393,r3_365,r4_377,r5_364,r6_381,r7_382,r8_380,r9_378,sp_391,V_396,VZN_385,Z_373,ZN_394
		defs: ap_405,C_403,CVZN_400,CZ_418,CZN_410,fp_409,N_408,r0_406,r1_417,r10_413,r2_401,r3_399,r4_411,r5_398,r6_415,r7_416,r8_414,r9_412,sp_397,V_404,VZN_419,Z_407,ZN_402
	Mem421[sp_397 - 0x00000004:word32] = 0x00000000
	word32 r1_3035 = 0x00000000
	word32 r0_423 = (uint32) (word16) r10_413
	branch 0x0000000A == 0x00000000 l000134E4
// DataOut: ap fp r0 r1 r10 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000134CE:
	branch 0x00000009 == 0x00000000 l000134E9
// DataOut: ap fp r0 r1 r10 r5 r6 r7 r8 sp
// DataOut (flags): ZN
// SymbolicIn: r4:<invalid> sp:<invalid> r2:0x0000000A r3:<invalid> r1:0x00000000 r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000134D3:
	branch true l000134E4
// DataOut: ap fp r0 r1 r10 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:0x0000000A r3:<invalid> r1:0x00000000 r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000134E4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:0x0000000A r3:<invalid> r1:0x00000000 r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000134D5:
	branch 0x0000000A == r0_423 l000134E9
// DataOut: ap fp r0 r1 r10 r5 r6 r7 r8 sp
// DataOut (flags): CZ
// SymbolicIn: r4:<invalid> sp:<invalid> r2:0x0000000A r3:<invalid> r1:0x00000000 r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000134DA:
	branch 0x0000000A >u r0_423 l000134DF
// DataOut: ap fp r0 r1 r10 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:0x0000000A r3:<invalid> r1:0x00000000 r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000134DC:
	r1_3035 = 0xFFFFFFF6
// DataOut: ap fp r0 r1 r10 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:0x0000000A r3:<invalid> r1:0x00000000 r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000134DF:
	r1_3035 = r1_3035 + r0_423
// DataOut: ap fp r1 r10 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:0x0000000A r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000134E9:
	Mem455[sp_397 - 0x00000008:uint32] = (uint32) (word16) r1_3035
	word32 r2_456 = (uint32) (word16) r10_413
	word32 r1_3024 = 0x00000000
	branch true l00013504
// DataOut: ap fp r0 r1 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:0x0000000A r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013504:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:0x0000000A r3:<invalid> r1:0x00000000 r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000134F9:
	branch 0x0000000A >u r2_456 l00013509
// DataOut: ap fp r0 r1 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:0x0000000A r3:<invalid> r1:0x00000000 r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000134FE:
	r1_3024 = 0x00000001
// DataOut: ap fp r0 r1 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:0x0000000A r3:<invalid> r1:0x00000000 r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013509:
	word32 r4_3016
	Mem469[sp_397 - 0x0000000C:word32] = r1_3024
	Mem472[sp_397 - 0x00000010:word32] = r6_415 + 2054
	Mem475[sp_397 - 0x00000014:word32] = r5_398 + 1515
	word32 sp_479
	word32 r5_480
	word32 r3_481
	byte CVZN_482
	word32 r2_483
	byte ZN_484
	bool C_485
	bool V_486
	word32 ap_487
	word32 r0_488
	bool Z_489
	bool N_490
	word32 fp_491
	byte CZN_492
	word32 r4_493
	word32 r9_494
	word32 r10_495
	word32 r8_496
	word32 r6_497
	word32 r7_498
	word32 r1_499
	byte CZ_500
	byte VZN_501
	call Mem475[r7_416:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_405,C_477,CVZN_451,CZ_465,CZN_464,dwLoc04_15,dwLoc08_18,fp_409,N_461,r0_458,r1_467,r10_413,r2_459,r3_399,r4_411,r5_398,r6_415,r7_416,r8_414,r9_412,sp_473,V_478,VZN_447,Z_450,ZN_476
		defs: ap_487,C_485,CVZN_482,CZ_500,CZN_492,fp_491,N_490,r0_488,r1_499,r10_495,r2_483,r3_481,r4_493,r5_480,r6_497,r7_498,r8_496,r9_494,sp_479,V_486,VZN_501,Z_489,ZN_484
	Mem503[sp_479 - 0x00000004:word32] = r0_488
	Mem506[sp_479 - 0x00000008:word32] = r5_480 + 1515
	Mem508[sp_479 - 0x0000000C:word32] = r5_480
	word32 r2_509 = Mem508[r5_480 + 0x0000C839:word32]
	word32 r3_515
	byte CVZN_516
	word32 r2_517
	byte ZN_518
	bool C_519
	bool V_520
	word32 ap_521
	word32 r0_522
	bool Z_523
	bool N_524
	word32 fp_525
	byte CZN_526
	word32 r4_527
	word32 r9_528
	word32 r10_529
	word32 r8_530
	word32 r7_532
	word32 r1_533
	byte CZ_534
	byte VZN_535
	word32 r6_3011
	word32 r5_2994
	word32 sp_2993
	call Mem508[r2_509:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_487,C_511,CVZN_482,CZ_500,CZN_492,dwLoc04_15,dwLoc08_18,fp_491,N_490,r0_488,r1_499,r10_495,r2_509,r3_481,r4_493,r5_480,r6_497,r7_498,r8_496,r9_494,sp_507,V_512,VZN_501,Z_489,ZN_510
		defs: ap_521,C_519,CVZN_516,CZ_534,CZN_526,fp_525,N_524,r0_522,r1_533,r10_529,r2_517,r3_515,r4_527,r5_514,r6_531,r7_532,r8_530,r9_528,sp_513,V_520,VZN_535,Z_523,ZN_518
	word32 r3_536 = (uint32) Mem508[sp_2993 + 16:word16]
	branch r3_536 <u 0x0000000B l00013548
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:0x0000000A r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013548:
	r4_3016 = Mem508[r6_3011 + 5260 + r3_536 * 4:word32]
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013531:
	Mem2983[sp_2993 - 0x00000004:uint32] = (uint32) Mem508[r5_2994 + 0x0000C65E:word16]
	Mem2986[sp_2993 - 0x00000008:word32] = r6_3011 + 1797
	Mem2989[sp_2993 - 0x0000000C:word32] = fp_525 + -58
	word32 r3_2995
	byte CVZN_2996
	word32 r2_2997
	byte ZN_2998
	bool C_2999
	bool V_3000
	word32 ap_3001
	word32 r0_3002
	bool Z_3003
	bool N_3004
	word32 fp_3005
	byte CZN_3006
	word32 r4_3007
	word32 r9_3008
	word32 r10_3009
	word32 r8_3010
	word32 r7_3012
	word32 r1_3013
	byte CZ_3014
	byte VZN_3015
	call Mem2989[r7_532:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_521,C_2991,CVZN_516,CZ_534,CZN_537,dwLoc04_15,dwLoc08_18,fp_525,N_524,r0_522,r1_533,r10_529,r2_517,r3_536,r4_527,r5_514,r6_531,r7_532,r8_530,r9_528,sp_2987,V_2992,VZN_535,Z_523,ZN_2990
		defs: ap_3001,C_2999,CVZN_2996,CZ_3014,CZN_3006,fp_3005,N_3004,r0_3002,r1_3013,r10_3009,r2_2997,r3_2995,r4_3007,r5_2994,r6_3011,r7_3012,r8_3010,r9_3008,sp_2993,V_3000,VZN_3015,Z_3003,ZN_2998
	r4_3016 = fp_3005 + -58
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l0001354E:
	word32 sp_544 = sp_2993 - 0x00000004
	Mem545[sp_544:word32] = 0x00000000
	Mem547[sp_544 - 0x00000004:word32] = r4_3016
	Mem550[sp_544 - 0x00000008:word32] = r6_3011 + 2113
	Mem553[sp_544 - 0x0000000C:word32] = r5_2994 + 1515
	word32 sp_557
	word32 r5_558
	word32 r3_559
	byte CVZN_560
	word32 r2_561
	byte ZN_562
	bool C_563
	bool V_564
	word32 ap_565
	word32 r0_566
	bool Z_567
	bool N_568
	word32 fp_569
	byte CZN_570
	word32 r4_571
	word32 r9_572
	word32 r10_573
	word32 r8_574
	word32 r6_575
	word32 r7_576
	word32 r1_577
	byte CZ_578
	byte VZN_579
	call Mem553[r7_532:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_521,C_555,CVZN_516,CZ_534,CZN_537,dwLoc04_15,dwLoc08_18,fp_525,N_524,r0_522,r1_533,r10_529,r2_517,r3_536,r4_541,r5_542,r6_540,r7_532,r8_530,r9_528,sp_551,V_556,VZN_535,Z_523,ZN_554
		defs: ap_565,C_563,CVZN_560,CZ_578,CZN_570,fp_569,N_568,r0_566,r1_577,r10_573,r2_561,r3_559,r4_571,r5_558,r6_575,r7_576,r8_574,r9_572,sp_557,V_564,VZN_579,Z_567,ZN_562
	Mem581[sp_557 - 0x00000004:word32] = r0_566
	Mem584[sp_557 - 0x00000008:word32] = r5_558 + 1515
	Mem586[sp_557 - 0x0000000C:word32] = r5_558
	word32 r2_587 = Mem586[r5_558 + 0x0000C839:word32]
	word32 r3_593
	byte CVZN_594
	word32 r2_595
	byte ZN_596
	bool C_597
	bool V_598
	word32 ap_599
	word32 r0_600
	bool Z_601
	bool N_602
	word32 fp_603
	byte CZN_604
	word32 r4_605
	word32 r9_606
	word32 r10_607
	word32 r7_610
	word32 r1_611
	byte CZ_612
	byte VZN_613
	word32 r6_2876
	word32 r8_2875
	word32 r5_2859
	word32 sp_2858
	call Mem586[r2_587:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_565,C_589,CVZN_560,CZ_578,CZN_570,dwLoc04_15,dwLoc08_18,fp_569,N_568,r0_566,r1_577,r10_573,r2_587,r3_559,r4_571,r5_558,r6_575,r7_576,r8_574,r9_572,sp_585,V_590,VZN_579,Z_567,ZN_588
		defs: ap_599,C_597,CVZN_594,CZ_612,CZN_604,fp_603,N_602,r0_600,r1_611,r10_607,r2_595,r3_593,r4_605,r5_592,r6_609,r7_610,r8_608,r9_606,sp_591,V_598,VZN_613,Z_601,ZN_596
	word32 r4_2872 = (uint32) Mem586[sp_2858 + 16:word16]
	branch r4_2872 != 0x00000006 l000135F4
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000135F4:
	branch r4_2872 != 0x00000008 l00013638
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000135F9:
	Mem2908[fp_603 + -8:int16] = (int16) ((uint32) Mem586[r5_2859 + 0x0000C65C:word16] >> 1 & ~0xFFFFFFFC)
	Mem2910[sp_2858 - 0x00000004:word32] = 0x00000000
	word32 r2_2911 = (uint32) Mem2910[fp_603 + -8:word16]
	Mem2914[sp_2858 - 0x00000008:word32] = Mem2910[r6_2876 + 5304 + r2_2911 * 4:word32]
	Mem2917[sp_2858 - 0x0000000C:word32] = r6_2876 + 2282
	Mem2920[sp_2858 - 0x00000010:word32] = r5_2859 + 1515
	word32 sp_2924
	word32 r5_2925
	word32 r3_2926
	byte CVZN_2927
	word32 r2_2928
	byte ZN_2929
	bool C_2930
	bool V_2931
	word32 ap_2932
	word32 r0_2933
	bool Z_2934
	bool N_2935
	word32 fp_2936
	byte CZN_2937
	word32 r4_2938
	word32 r9_2939
	word32 r10_2940
	word32 r8_2941
	word32 r6_2942
	word32 r7_2943
	word32 r1_2944
	byte CZ_2945
	byte VZN_2946
	call Mem2920[r7_610:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_599,C_2922,CVZN_594,CZ_612,CZN_2901,dwLoc04_15,dwLoc08_18,fp_603,N_602,r0_600,r1_611,r10_607,r2_2911,r3_593,r4_614,r5_592,r6_609,r7_610,r8_608,r9_606,sp_2918,V_2923,VZN_613,Z_2902,ZN_2921
		defs: ap_2932,C_2930,CVZN_2927,CZ_2945,CZN_2937,fp_2936,N_2935,r0_2933,r1_2944,r10_2940,r2_2928,r3_2926,r4_2938,r5_2925,r6_2942,r7_2943,r8_2941,r9_2939,sp_2924,V_2931,VZN_2946,Z_2934,ZN_2929
	Mem2948[sp_2924 - 0x00000004:word32] = r0_2933
	Mem2951[sp_2924 - 0x00000008:word32] = r5_2925 + 1515
	Mem2953[sp_2924 - 0x0000000C:word32] = r5_2925
	word32 r2_2954 = Mem2953[r5_2925 + 0x0000C839:word32]
	word32 r3_2960
	byte CVZN_2961
	word32 r2_2962
	byte ZN_2963
	bool C_2964
	bool V_2965
	word32 ap_2966
	word32 r0_2967
	bool Z_2968
	bool N_2969
	word32 fp_2970
	byte CZN_2971
	word32 r9_2973
	word32 r10_2974
	word32 r7_2977
	word32 r1_2978
	byte CZ_2979
	byte VZN_2980
	call Mem2953[r2_2954:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2932,C_2956,CVZN_2927,CZ_2945,CZN_2937,dwLoc04_15,dwLoc08_18,fp_2936,N_2935,r0_2933,r1_2944,r10_2940,r2_2954,r3_2926,r4_2938,r5_2925,r6_2942,r7_2943,r8_2941,r9_2939,sp_2952,V_2957,VZN_2946,Z_2934,ZN_2955
		defs: ap_2966,C_2964,CVZN_2961,CZ_2979,CZN_2971,fp_2970,N_2969,r0_2967,r1_2978,r10_2974,r2_2962,r3_2960,r4_2972,r5_2959,r6_2976,r7_2977,r8_2975,r9_2973,sp_2958,V_2965,VZN_2980,Z_2968,ZN_2963
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l0001357F:
	word32 r3_2735
	Mem2730[sp_2858 - 0x00000004:word32] = 0x00000000
	word32 r2_2731 = (uint32) Mem2730[r5_2859 + 0x0000C65C:word16]
	branch (r2_2731 & 0x00000002) == 0x00000000 l00013594
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013594:
	r3_2735 = DPB(r3_593, 0x34, 0)
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l0001358C:
	r3_2735 = DPB(r3_593, 0x38, 0)
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013597:
	word32 r3_2811
	Mem2738[sp_2858 - 0x00000008:int32] = (int32) (int8) r3_2735
	Mem2741[sp_2858 - 0x0000000C:word32] = r6_2876 + 2169
	Mem2744[sp_2858 - 0x00000010:word32] = r5_2859 + 1515
	word32 sp_2748
	word32 r5_2749
	word32 r3_2750
	byte CVZN_2751
	word32 r2_2752
	byte ZN_2753
	bool C_2754
	bool V_2755
	word32 ap_2756
	word32 r0_2757
	bool Z_2758
	bool N_2759
	word32 fp_2760
	byte CZN_2761
	word32 r4_2762
	word32 r9_2763
	word32 r10_2764
	word32 r8_2765
	word32 r6_2766
	word32 r7_2767
	word32 r1_2768
	byte CZ_2769
	byte VZN_2770
	call Mem2744[r7_610:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_599,C_2746,CVZN_594,CZ_612,CZN_615,dwLoc04_15,dwLoc08_18,fp_603,N_602,r0_600,r1_611,r10_607,r2_2731,r3_2735,r4_614,r5_592,r6_609,r7_610,r8_608,r9_606,sp_2742,V_2747,VZN_613,Z_616,ZN_2745
		defs: ap_2756,C_2754,CVZN_2751,CZ_2769,CZN_2761,fp_2760,N_2759,r0_2757,r1_2768,r10_2764,r2_2752,r3_2750,r4_2762,r5_2749,r6_2766,r7_2767,r8_2765,r9_2763,sp_2748,V_2755,VZN_2770,Z_2758,ZN_2753
	Mem2772[sp_2748 - 0x00000004:word32] = r0_2757
	Mem2775[sp_2748 - 0x00000008:word32] = r5_2749 + 1515
	Mem2777[sp_2748 - 0x0000000C:word32] = r5_2749
	word32 r2_2778 = Mem2777[r5_2749 + 0x0000C839:word32]
	word32 sp_2782
	word32 r5_2783
	word32 r3_2784
	byte CVZN_2785
	word32 r2_2786
	byte ZN_2787
	bool C_2788
	bool V_2789
	word32 ap_2790
	word32 r0_2791
	bool Z_2792
	bool N_2793
	word32 fp_2794
	byte CZN_2795
	word32 r4_2796
	word32 r9_2797
	word32 r10_2798
	word32 r8_2799
	word32 r6_2800
	word32 r7_2801
	word32 r1_2802
	byte CZ_2803
	byte VZN_2804
	call Mem2777[r2_2778:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2756,C_2780,CVZN_2751,CZ_2769,CZN_2761,dwLoc04_15,dwLoc08_18,fp_2760,N_2759,r0_2757,r1_2768,r10_2764,r2_2778,r3_2750,r4_2762,r5_2749,r6_2766,r7_2767,r8_2765,r9_2763,sp_2776,V_2781,VZN_2770,Z_2758,ZN_2779
		defs: ap_2790,C_2788,CVZN_2785,CZ_2803,CZN_2795,fp_2794,N_2793,r0_2791,r1_2802,r10_2798,r2_2786,r3_2784,r4_2796,r5_2783,r6_2800,r7_2801,r8_2799,r9_2797,sp_2782,V_2789,VZN_2804,Z_2792,ZN_2787
	Mem2806[sp_2782 - 0x00000004:word32] = 0x00000000
	word32 r2_2807 = (uint32) Mem2806[r5_2783 + 0x0000C65C:word16]
	branch (r2_2807 & 0x00000004) == 0x00000000 l000135CC
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000135CC:
	r3_2811 = DPB(r3_2784, 0x32, 0)
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000135C4:
	r3_2811 = DPB(r3_2784, 0x33, 0)
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000135CF:
	Mem2814[sp_2782 - 0x00000008:int32] = (int32) (int8) r3_2811
	Mem2817[sp_2782 - 0x0000000C:word32] = r6_2800 + 2226
	Mem2820[sp_2782 - 0x00000010:word32] = r5_2783 + 1515
	word32 sp_2824
	word32 r5_2825
	word32 r3_2826
	byte CVZN_2827
	word32 r2_2828
	byte ZN_2829
	bool C_2830
	bool V_2831
	word32 ap_2832
	word32 r0_2833
	bool Z_2834
	bool N_2835
	word32 fp_2836
	byte CZN_2837
	word32 r4_2838
	word32 r9_2839
	word32 r10_2840
	word32 r8_2841
	word32 r6_2842
	word32 r7_2843
	word32 r1_2844
	byte CZ_2845
	byte VZN_2846
	call Mem2820[r7_2801:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2790,C_2822,CVZN_2785,CZ_2803,CZN_2795,dwLoc04_15,dwLoc08_18,fp_2794,N_2793,r0_2791,r1_2802,r10_2798,r2_2807,r3_2811,r4_2796,r5_2783,r6_2800,r7_2801,r8_2799,r9_2797,sp_2818,V_2823,VZN_2804,Z_2792,ZN_2821
		defs: ap_2832,C_2830,CVZN_2827,CZ_2845,CZN_2837,fp_2836,N_2835,r0_2833,r1_2844,r10_2840,r2_2828,r3_2826,r4_2838,r5_2825,r6_2842,r7_2843,r8_2841,r9_2839,sp_2824,V_2831,VZN_2846,Z_2834,ZN_2829
	Mem2848[sp_2824 - 0x00000004:word32] = r0_2833
	Mem2851[sp_2824 - 0x00000008:word32] = r5_2825 + 1515
	Mem2853[sp_2824 - 0x0000000C:word32] = r5_2825
	word32 r2_2854 = Mem2853[r5_2825 + 0x0000C839:word32]
	word32 r3_2860
	byte CVZN_2861
	word32 r2_2862
	byte ZN_2863
	bool C_2864
	bool V_2865
	word32 ap_2866
	word32 r0_2867
	bool Z_2868
	bool N_2869
	word32 fp_2870
	byte CZN_2871
	word32 r9_2873
	word32 r10_2874
	word32 r7_2877
	word32 r1_2878
	byte CZ_2879
	byte VZN_2880
	call Mem2853[r2_2854:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2832,C_2856,CVZN_2827,CZ_2845,CZN_2837,dwLoc04_15,dwLoc08_18,fp_2836,N_2835,r0_2833,r1_2844,r10_2840,r2_2854,r3_2826,r4_2838,r5_2825,r6_2842,r7_2843,r8_2841,r9_2839,sp_2852,V_2857,VZN_2846,Z_2834,ZN_2855
		defs: ap_2866,C_2864,CVZN_2861,CZ_2879,CZN_2871,fp_2870,N_2869,r0_2867,r1_2878,r10_2874,r2_2862,r3_2860,r4_2872,r5_2859,r6_2876,r7_2877,r8_2875,r9_2873,sp_2858,V_2865,VZN_2880,Z_2868,ZN_2863
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013638:
	word32 r3_2721
	word32 sp_637 = sp_2858 - 0x00000004
	Mem638[sp_637:word32] = 0x00000000
	word32 r2_639 = (uint32) Mem638[r5_2859 + 0x0000C65C:word16]
	branch (r2_639 & 0x00000001) == 0x00000000 l0001364C
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l0001364C:
	r3_2721 = r8_2875 + 45
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013644:
	r3_2721 = r6_2876
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013650:
	word32 r3_2713
	Mem645[sp_637 - 0x00000004:word32] = r3_2721
	Mem648[sp_637 - 0x00000008:word32] = r6_2876 + 2338
	Mem651[sp_637 - 0x0000000C:word32] = r5_2859 + 1515
	word32 sp_655
	word32 r5_656
	word32 r3_657
	byte CVZN_658
	word32 r2_659
	byte ZN_660
	bool C_661
	bool V_662
	word32 ap_663
	word32 r0_664
	bool Z_665
	bool N_666
	word32 fp_667
	byte CZN_668
	word32 r4_669
	word32 r9_670
	word32 r10_671
	word32 r8_672
	word32 r6_673
	word32 r7_674
	word32 r1_675
	byte CZ_676
	byte VZN_677
	call Mem651[r4_2872:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_636,C_653,CVZN_629,CZ_619,CZN_632,dwLoc04_15,dwLoc08_18,fp_635,N_627,r0_633,r1_620,r10_624,r2_639,r3_643,r4_626,r5_631,r6_622,r7_621,r8_623,r9_625,sp_649,V_654,VZN_618,Z_628,ZN_652
		defs: ap_663,C_661,CVZN_658,CZ_676,CZN_668,fp_667,N_666,r0_664,r1_675,r10_671,r2_659,r3_657,r4_669,r5_656,r6_673,r7_674,r8_672,r9_670,sp_655,V_662,VZN_677,Z_665,ZN_660
	Mem679[sp_655 - 0x00000004:word32] = r0_664
	Mem682[sp_655 - 0x00000008:word32] = r5_656 + 1515
	Mem684[sp_655 - 0x0000000C:word32] = r5_656
	word32 r2_685 = Mem684[r5_656 + 0x0000C839:word32]
	word32 sp_689
	word32 r5_690
	word32 r3_691
	byte CVZN_692
	word32 r2_693
	byte ZN_694
	bool C_695
	bool V_696
	word32 ap_697
	word32 r0_698
	bool Z_699
	bool N_700
	word32 fp_701
	byte CZN_702
	word32 r4_703
	word32 r9_704
	word32 r10_705
	word32 r8_706
	word32 r6_707
	word32 r7_708
	word32 r1_709
	byte CZ_710
	byte VZN_711
	call Mem684[r2_685:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_663,C_687,CVZN_658,CZ_676,CZN_668,dwLoc04_15,dwLoc08_18,fp_667,N_666,r0_664,r1_675,r10_671,r2_685,r3_657,r4_669,r5_656,r6_673,r7_674,r8_672,r9_670,sp_683,V_688,VZN_677,Z_665,ZN_686
		defs: ap_697,C_695,CVZN_692,CZ_710,CZN_702,fp_701,N_700,r0_698,r1_709,r10_705,r2_693,r3_691,r4_703,r5_690,r6_707,r7_708,r8_706,r9_704,sp_689,V_696,VZN_711,Z_699,ZN_694
	Mem713[sp_689 - 0x00000004:word32] = 0x00000000
	word32 r2_714 = (uint32) Mem713[r5_690 + 0x0000C65C:word16]
	branch (r2_714 & 0x00000008) == 0x00000000 l0001368C
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l0001368C:
	r3_2713 = r8_706 + 50
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013683:
	r3_2713 = r8_706 + 53
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013690:
	word32 r4_1376
	Mem720[sp_689 - 0x00000008:word32] = r3_2713
	Mem723[sp_689 - 0x0000000C:word32] = r6_707 + 2403
	Mem726[sp_689 - 0x00000010:word32] = r5_690 + 1515
	word32 sp_730
	word32 r5_731
	word32 r3_732
	byte CVZN_733
	word32 r2_734
	byte ZN_735
	bool C_736
	bool V_737
	word32 ap_738
	word32 r0_739
	bool Z_740
	bool N_741
	word32 fp_742
	byte CZN_743
	word32 r4_744
	word32 r9_745
	word32 r10_746
	word32 r8_747
	word32 r6_748
	word32 r7_749
	word32 r1_750
	byte CZ_751
	byte VZN_752
	call Mem726[r4_703:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_697,C_728,CVZN_692,CZ_710,CZN_702,dwLoc04_15,dwLoc08_18,fp_701,N_700,r0_698,r1_709,r10_705,r2_714,r3_718,r4_703,r5_690,r6_707,r7_708,r8_706,r9_704,sp_724,V_729,VZN_711,Z_699,ZN_727
		defs: ap_738,C_736,CVZN_733,CZ_751,CZN_743,fp_742,N_741,r0_739,r1_750,r10_746,r2_734,r3_732,r4_744,r5_731,r6_748,r7_749,r8_747,r9_745,sp_730,V_737,VZN_752,Z_740,ZN_735
	Mem754[sp_730 - 0x00000004:word32] = r0_739
	Mem757[sp_730 - 0x00000008:word32] = r5_731 + 1515
	Mem759[sp_730 - 0x0000000C:word32] = r5_731
	word32 r2_760 = Mem759[r5_731 + 0x0000C839:word32]
	word32 sp_764
	word32 r5_765
	word32 r3_766
	byte CVZN_767
	word32 r2_768
	byte ZN_769
	bool C_770
	bool V_771
	word32 ap_772
	word32 r0_773
	bool Z_774
	bool N_775
	word32 fp_776
	byte CZN_777
	word32 r4_778
	word32 r9_779
	word32 r10_780
	word32 r8_781
	word32 r6_782
	word32 r7_783
	word32 r1_784
	byte CZ_785
	byte VZN_786
	call Mem759[r2_760:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_738,C_762,CVZN_733,CZ_751,CZN_743,dwLoc04_15,dwLoc08_18,fp_742,N_741,r0_739,r1_750,r10_746,r2_760,r3_732,r4_744,r5_731,r6_748,r7_749,r8_747,r9_745,sp_758,V_763,VZN_752,Z_740,ZN_761
		defs: ap_772,C_770,CVZN_767,CZ_785,CZN_777,fp_776,N_775,r0_773,r1_784,r10_780,r2_768,r3_766,r4_778,r5_765,r6_782,r7_783,r8_781,r9_779,sp_764,V_771,VZN_786,Z_774,ZN_769
	Mem789[sp_764 - 0x00000004:word32] = fp_776 + -42
	Mem791[sp_764 - 0x00000008:word32] = 0x00000000
	Mem794[sp_764 - 0x0000000C:word32] = r5_765 + 0x0000C660
	Mem797[sp_764 - 0x00000010:word32] = r5_765 + 0x0000C662
	fn00015106(r3_766, r4_778, ap_772, fp_776)
	Mem802[sp_764 - 0x00000014:word32] = 0x00000000
	Mem805[sp_764 - 0x00000018:word32] = fp_776 + -42
	Mem808[sp_764 - 0x0000001C:word32] = r6_782 + 2459
	Mem811[sp_764 - 0x00000020:word32] = r5_765 + 1515
	word32 sp_815
	word32 r5_816
	word32 r3_817
	byte CVZN_818
	word32 r2_819
	byte ZN_820
	bool C_821
	bool V_822
	word32 ap_823
	word32 r0_824
	bool Z_825
	bool N_826
	word32 fp_827
	byte CZN_828
	word32 r4_829
	word32 r9_830
	word32 r10_831
	word32 r8_832
	word32 r6_833
	word32 r7_834
	word32 r1_835
	byte CZ_836
	byte VZN_837
	call Mem811[r4_778:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_772,C_813,CVZN_767,CZ_785,CZN_777,dwLoc04_15,dwLoc08_18,fp_776,N_775,r0_773,r1_784,r10_780,r2_768,r3_766,r4_778,r5_765,r6_782,r7_783,r8_781,r9_779,sp_809,V_814,VZN_786,Z_774,ZN_812
		defs: ap_823,C_821,CVZN_818,CZ_836,CZN_828,fp_827,N_826,r0_824,r1_835,r10_831,r2_819,r3_817,r4_829,r5_816,r6_833,r7_834,r8_832,r9_830,sp_815,V_822,VZN_837,Z_825,ZN_820
	Mem839[sp_815 - 0x00000004:word32] = r0_824
	Mem842[sp_815 - 0x00000008:word32] = r5_816 + 1515
	Mem844[sp_815 - 0x0000000C:word32] = r5_816
	word32 r2_845 = Mem844[r5_816 + 0x0000C839:word32]
	word32 sp_849
	word32 r5_850
	word32 r3_851
	byte CVZN_852
	word32 r2_853
	byte ZN_854
	bool C_855
	bool V_856
	word32 ap_857
	word32 r0_858
	bool Z_859
	bool N_860
	word32 fp_861
	byte CZN_862
	word32 r4_863
	word32 r9_864
	word32 r10_865
	word32 r8_866
	word32 r6_867
	word32 r7_868
	word32 r1_869
	byte CZ_870
	byte VZN_871
	call Mem844[r2_845:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_823,C_847,CVZN_818,CZ_836,CZN_828,dwLoc04_15,dwLoc08_18,fp_827,N_826,r0_824,r1_835,r10_831,r2_845,r3_817,r4_829,r5_816,r6_833,r7_834,r8_832,r9_830,sp_843,V_848,VZN_837,Z_825,ZN_846
		defs: ap_857,C_855,CVZN_852,CZ_870,CZN_862,fp_861,N_860,r0_858,r1_869,r10_865,r2_853,r3_851,r4_863,r5_850,r6_867,r7_868,r8_866,r9_864,sp_849,V_856,VZN_871,Z_859,ZN_854
	Mem873[sp_849 - 0x00000004:word32] = 0x00000000
	Mem876[sp_849 - 0x00000008:word32] = Mem873[r5_850 + 0x0000C664:word32]
	Mem879[sp_849 - 0x0000000C:word32] = r6_867 + 2515
	Mem882[sp_849 - 0x00000010:word32] = r5_850 + 1515
	word32 sp_886
	word32 r5_887
	word32 r3_888
	byte CVZN_889
	word32 r2_890
	byte ZN_891
	bool C_892
	bool V_893
	word32 ap_894
	word32 r0_895
	bool Z_896
	bool N_897
	word32 fp_898
	byte CZN_899
	word32 r4_900
	word32 r9_901
	word32 r10_902
	word32 r8_903
	word32 r6_904
	word32 r7_905
	word32 r1_906
	byte CZ_907
	byte VZN_908
	call Mem882[r4_863:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_857,C_884,CVZN_852,CZ_870,CZN_862,dwLoc04_15,dwLoc08_18,fp_861,N_860,r0_858,r1_869,r10_865,r2_853,r3_851,r4_863,r5_850,r6_867,r7_868,r8_866,r9_864,sp_880,V_885,VZN_871,Z_859,ZN_883
		defs: ap_894,C_892,CVZN_889,CZ_907,CZN_899,fp_898,N_897,r0_895,r1_906,r10_902,r2_890,r3_888,r4_900,r5_887,r6_904,r7_905,r8_903,r9_901,sp_886,V_893,VZN_908,Z_896,ZN_891
	Mem910[sp_886 - 0x00000004:word32] = r0_895
	Mem913[sp_886 - 0x00000008:word32] = r5_887 + 1515
	Mem915[sp_886 - 0x0000000C:word32] = r5_887
	word32 r2_916 = Mem915[r5_887 + 0x0000C839:word32]
	word32 sp_920
	word32 r5_921
	word32 r3_922
	byte CVZN_923
	word32 r2_924
	byte ZN_925
	bool C_926
	bool V_927
	word32 ap_928
	word32 r0_929
	bool Z_930
	bool N_931
	word32 fp_932
	byte CZN_933
	word32 r4_934
	word32 r9_935
	word32 r10_936
	word32 r8_937
	word32 r6_938
	word32 r7_939
	word32 r1_940
	byte CZ_941
	byte VZN_942
	call Mem915[r2_916:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_894,C_918,CVZN_889,CZ_907,CZN_899,dwLoc04_15,dwLoc08_18,fp_898,N_897,r0_895,r1_906,r10_902,r2_916,r3_888,r4_900,r5_887,r6_904,r7_905,r8_903,r9_901,sp_914,V_919,VZN_908,Z_896,ZN_917
		defs: ap_928,C_926,CVZN_923,CZ_941,CZN_933,fp_932,N_931,r0_929,r1_940,r10_936,r2_924,r3_922,r4_934,r5_921,r6_938,r7_939,r8_937,r9_935,sp_920,V_927,VZN_942,Z_930,ZN_925
	Mem944[sp_920 - 0x00000004:word32] = 0x00000000
	Mem947[sp_920 - 0x00000008:word32] = Mem944[r5_921 + 0x0000C668:word32]
	Mem950[sp_920 - 0x0000000C:word32] = r6_938 + 2574
	Mem953[sp_920 - 0x00000010:word32] = r5_921 + 1515
	word32 sp_957
	word32 r5_958
	word32 r3_959
	byte CVZN_960
	word32 r2_961
	byte ZN_962
	bool C_963
	bool V_964
	word32 ap_965
	word32 r0_966
	bool Z_967
	bool N_968
	word32 fp_969
	byte CZN_970
	word32 r4_971
	word32 r9_972
	word32 r10_973
	word32 r8_974
	word32 r6_975
	word32 r7_976
	word32 r1_977
	byte CZ_978
	byte VZN_979
	call Mem953[r4_934:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_928,C_955,CVZN_923,CZ_941,CZN_933,dwLoc04_15,dwLoc08_18,fp_932,N_931,r0_929,r1_940,r10_936,r2_924,r3_922,r4_934,r5_921,r6_938,r7_939,r8_937,r9_935,sp_951,V_956,VZN_942,Z_930,ZN_954
		defs: ap_965,C_963,CVZN_960,CZ_978,CZN_970,fp_969,N_968,r0_966,r1_977,r10_973,r2_961,r3_959,r4_971,r5_958,r6_975,r7_976,r8_974,r9_972,sp_957,V_964,VZN_979,Z_967,ZN_962
	Mem981[sp_957 - 0x00000004:word32] = r0_966
	Mem984[sp_957 - 0x00000008:word32] = r5_958 + 1515
	Mem986[sp_957 - 0x0000000C:word32] = r5_958
	word32 r2_987 = Mem986[r5_958 + 0x0000C839:word32]
	word32 sp_991
	word32 r5_992
	word32 r3_993
	byte CVZN_994
	word32 r2_995
	byte ZN_996
	bool C_997
	bool V_998
	word32 ap_999
	word32 r0_1000
	bool Z_1001
	bool N_1002
	word32 fp_1003
	byte CZN_1004
	word32 r4_1005
	word32 r9_1006
	word32 r10_1007
	word32 r8_1008
	word32 r6_1009
	word32 r7_1010
	word32 r1_1011
	byte CZ_1012
	byte VZN_1013
	call Mem986[r2_987:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_965,C_989,CVZN_960,CZ_978,CZN_970,dwLoc04_15,dwLoc08_18,fp_969,N_968,r0_966,r1_977,r10_973,r2_987,r3_959,r4_971,r5_958,r6_975,r7_976,r8_974,r9_972,sp_985,V_990,VZN_979,Z_967,ZN_988
		defs: ap_999,C_997,CVZN_994,CZ_1012,CZN_1004,fp_1003,N_1002,r0_1000,r1_1011,r10_1007,r2_995,r3_993,r4_1005,r5_992,r6_1009,r7_1010,r8_1008,r9_1006,sp_991,V_998,VZN_1013,Z_1001,ZN_996
	Mem1015[sp_991 - 0x00000004:word32] = 0x00000000
	Mem1018[sp_991 - 0x00000008:word32] = Mem1015[r5_992 + 0x0000C66C:word32]
	Mem1021[sp_991 - 0x0000000C:word32] = r6_1009 + 2637
	Mem1024[sp_991 - 0x00000010:word32] = r5_992 + 1515
	word32 sp_1028
	word32 r5_1029
	word32 r3_1030
	byte CVZN_1031
	word32 r2_1032
	byte ZN_1033
	bool C_1034
	bool V_1035
	word32 ap_1036
	word32 r0_1037
	bool Z_1038
	bool N_1039
	word32 fp_1040
	byte CZN_1041
	word32 r4_1042
	word32 r9_1043
	word32 r10_1044
	word32 r8_1045
	word32 r6_1046
	word32 r7_1047
	word32 r1_1048
	byte CZ_1049
	byte VZN_1050
	call Mem1024[r4_1005:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_999,C_1026,CVZN_994,CZ_1012,CZN_1004,dwLoc04_15,dwLoc08_18,fp_1003,N_1002,r0_1000,r1_1011,r10_1007,r2_995,r3_993,r4_1005,r5_992,r6_1009,r7_1010,r8_1008,r9_1006,sp_1022,V_1027,VZN_1013,Z_1001,ZN_1025
		defs: ap_1036,C_1034,CVZN_1031,CZ_1049,CZN_1041,fp_1040,N_1039,r0_1037,r1_1048,r10_1044,r2_1032,r3_1030,r4_1042,r5_1029,r6_1046,r7_1047,r8_1045,r9_1043,sp_1028,V_1035,VZN_1050,Z_1038,ZN_1033
	Mem1052[sp_1028 - 0x00000004:word32] = r0_1037
	Mem1055[sp_1028 - 0x00000008:word32] = r5_1029 + 1515
	Mem1057[sp_1028 - 0x0000000C:word32] = r5_1029
	word32 r2_1058 = Mem1057[r5_1029 + 0x0000C839:word32]
	word32 sp_1062
	word32 r5_1063
	word32 r3_1064
	byte CVZN_1065
	word32 r2_1066
	byte ZN_1067
	bool C_1068
	bool V_1069
	word32 ap_1070
	word32 r0_1071
	bool Z_1072
	bool N_1073
	word32 fp_1074
	byte CZN_1075
	word32 r4_1076
	word32 r9_1077
	word32 r10_1078
	word32 r8_1079
	word32 r6_1080
	word32 r7_1081
	word32 r1_1082
	byte CZ_1083
	byte VZN_1084
	call Mem1057[r2_1058:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1036,C_1060,CVZN_1031,CZ_1049,CZN_1041,dwLoc04_15,dwLoc08_18,fp_1040,N_1039,r0_1037,r1_1048,r10_1044,r2_1058,r3_1030,r4_1042,r5_1029,r6_1046,r7_1047,r8_1045,r9_1043,sp_1056,V_1061,VZN_1050,Z_1038,ZN_1059
		defs: ap_1070,C_1068,CVZN_1065,CZ_1083,CZN_1075,fp_1074,N_1073,r0_1071,r1_1082,r10_1078,r2_1066,r3_1064,r4_1076,r5_1063,r6_1080,r7_1081,r8_1079,r9_1077,sp_1062,V_1069,VZN_1084,Z_1072,ZN_1067
	Mem1086[sp_1062 - 0x00000004:word32] = 0x00000000
	Mem1089[sp_1062 - 0x00000008:uint32] = (uint32) Mem1086[r5_1063 + 0x0000C670:word16]
	Mem1092[sp_1062 - 0x0000000C:word32] = r6_1080 + 2700
	Mem1095[sp_1062 - 0x00000010:word32] = r5_1063 + 1515
	word32 sp_1099
	word32 r5_1100
	word32 r3_1101
	byte CVZN_1102
	word32 r2_1103
	byte ZN_1104
	bool C_1105
	bool V_1106
	word32 ap_1107
	word32 r0_1108
	bool Z_1109
	bool N_1110
	word32 fp_1111
	byte CZN_1112
	word32 r4_1113
	word32 r9_1114
	word32 r10_1115
	word32 r8_1116
	word32 r6_1117
	word32 r7_1118
	word32 r1_1119
	byte CZ_1120
	byte VZN_1121
	call Mem1095[r4_1076:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1070,C_1097,CVZN_1065,CZ_1083,CZN_1075,dwLoc04_15,dwLoc08_18,fp_1074,N_1073,r0_1071,r1_1082,r10_1078,r2_1066,r3_1064,r4_1076,r5_1063,r6_1080,r7_1081,r8_1079,r9_1077,sp_1093,V_1098,VZN_1084,Z_1072,ZN_1096
		defs: ap_1107,C_1105,CVZN_1102,CZ_1120,CZN_1112,fp_1111,N_1110,r0_1108,r1_1119,r10_1115,r2_1103,r3_1101,r4_1113,r5_1100,r6_1117,r7_1118,r8_1116,r9_1114,sp_1099,V_1106,VZN_1121,Z_1109,ZN_1104
	Mem1123[sp_1099 - 0x00000004:word32] = r0_1108
	Mem1126[sp_1099 - 0x00000008:word32] = r5_1100 + 1515
	Mem1128[sp_1099 - 0x0000000C:word32] = r5_1100
	word32 r2_1129 = Mem1128[r5_1100 + 0x0000C839:word32]
	word32 sp_1133
	word32 r5_1134
	word32 r3_1135
	byte CVZN_1136
	word32 r2_1137
	byte ZN_1138
	bool C_1139
	bool V_1140
	word32 ap_1141
	word32 r0_1142
	bool Z_1143
	bool N_1144
	word32 fp_1145
	byte CZN_1146
	word32 r4_1147
	word32 r9_1148
	word32 r10_1149
	word32 r8_1150
	word32 r6_1151
	word32 r7_1152
	word32 r1_1153
	byte CZ_1154
	byte VZN_1155
	call Mem1128[r2_1129:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1107,C_1131,CVZN_1102,CZ_1120,CZN_1112,dwLoc04_15,dwLoc08_18,fp_1111,N_1110,r0_1108,r1_1119,r10_1115,r2_1129,r3_1101,r4_1113,r5_1100,r6_1117,r7_1118,r8_1116,r9_1114,sp_1127,V_1132,VZN_1121,Z_1109,ZN_1130
		defs: ap_1141,C_1139,CVZN_1136,CZ_1154,CZN_1146,fp_1145,N_1144,r0_1142,r1_1153,r10_1149,r2_1137,r3_1135,r4_1147,r5_1134,r6_1151,r7_1152,r8_1150,r9_1148,sp_1133,V_1140,VZN_1155,Z_1143,ZN_1138
	Mem1157[sp_1133 - 0x00000004:word32] = 0x00000000
	Mem1160[sp_1133 - 0x00000008:uint32] = (uint32) Mem1157[r5_1134 + 0x0000C672:word16]
	Mem1163[sp_1133 - 0x0000000C:word32] = r6_1151 + 2767
	Mem1166[sp_1133 - 0x00000010:word32] = r5_1134 + 1515
	word32 sp_1170
	word32 r5_1171
	word32 r3_1172
	byte CVZN_1173
	word32 r2_1174
	byte ZN_1175
	bool C_1176
	bool V_1177
	word32 ap_1178
	word32 r0_1179
	bool Z_1180
	bool N_1181
	word32 fp_1182
	byte CZN_1183
	word32 r4_1184
	word32 r9_1185
	word32 r10_1186
	word32 r8_1187
	word32 r6_1188
	word32 r7_1189
	word32 r1_1190
	byte CZ_1191
	byte VZN_1192
	call Mem1166[r4_1147:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1141,C_1168,CVZN_1136,CZ_1154,CZN_1146,dwLoc04_15,dwLoc08_18,fp_1145,N_1144,r0_1142,r1_1153,r10_1149,r2_1137,r3_1135,r4_1147,r5_1134,r6_1151,r7_1152,r8_1150,r9_1148,sp_1164,V_1169,VZN_1155,Z_1143,ZN_1167
		defs: ap_1178,C_1176,CVZN_1173,CZ_1191,CZN_1183,fp_1182,N_1181,r0_1179,r1_1190,r10_1186,r2_1174,r3_1172,r4_1184,r5_1171,r6_1188,r7_1189,r8_1187,r9_1185,sp_1170,V_1177,VZN_1192,Z_1180,ZN_1175
	Mem1194[sp_1170 - 0x00000004:word32] = r0_1179
	Mem1197[sp_1170 - 0x00000008:word32] = r5_1171 + 1515
	Mem1199[sp_1170 - 0x0000000C:word32] = r5_1171
	word32 r2_1200 = Mem1199[r5_1171 + 0x0000C839:word32]
	word32 sp_1204
	word32 r5_1205
	word32 r3_1206
	byte CVZN_1207
	word32 r2_1208
	byte ZN_1209
	bool C_1210
	bool V_1211
	word32 ap_1212
	word32 r0_1213
	bool Z_1214
	bool N_1215
	word32 fp_1216
	byte CZN_1217
	word32 r4_1218
	word32 r9_1219
	word32 r10_1220
	word32 r8_1221
	word32 r6_1222
	word32 r7_1223
	word32 r1_1224
	byte CZ_1225
	byte VZN_1226
	call Mem1199[r2_1200:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1178,C_1202,CVZN_1173,CZ_1191,CZN_1183,dwLoc04_15,dwLoc08_18,fp_1182,N_1181,r0_1179,r1_1190,r10_1186,r2_1200,r3_1172,r4_1184,r5_1171,r6_1188,r7_1189,r8_1187,r9_1185,sp_1198,V_1203,VZN_1192,Z_1180,ZN_1201
		defs: ap_1212,C_1210,CVZN_1207,CZ_1225,CZN_1217,fp_1216,N_1215,r0_1213,r1_1224,r10_1220,r2_1208,r3_1206,r4_1218,r5_1205,r6_1222,r7_1223,r8_1221,r9_1219,sp_1204,V_1211,VZN_1226,Z_1214,ZN_1209
	Mem1228[sp_1204 - 0x00000004:word32] = 0x00000000
	Mem1231[sp_1204 - 0x00000008:uint32] = (uint32) Mem1228[r5_1205 + 0x0000C674:word16]
	Mem1234[sp_1204 - 0x0000000C:word32] = r6_1222 + 2829
	Mem1237[sp_1204 - 0x00000010:word32] = r5_1205 + 1515
	word32 sp_1241
	word32 r5_1242
	word32 r3_1243
	byte CVZN_1244
	word32 r2_1245
	byte ZN_1246
	bool C_1247
	bool V_1248
	word32 ap_1249
	word32 r0_1250
	bool Z_1251
	bool N_1252
	word32 fp_1253
	byte CZN_1254
	word32 r4_1255
	word32 r9_1256
	word32 r10_1257
	word32 r8_1258
	word32 r6_1259
	word32 r7_1260
	word32 r1_1261
	byte CZ_1262
	byte VZN_1263
	call Mem1237[r4_1218:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1212,C_1239,CVZN_1207,CZ_1225,CZN_1217,dwLoc04_15,dwLoc08_18,fp_1216,N_1215,r0_1213,r1_1224,r10_1220,r2_1208,r3_1206,r4_1218,r5_1205,r6_1222,r7_1223,r8_1221,r9_1219,sp_1235,V_1240,VZN_1226,Z_1214,ZN_1238
		defs: ap_1249,C_1247,CVZN_1244,CZ_1262,CZN_1254,fp_1253,N_1252,r0_1250,r1_1261,r10_1257,r2_1245,r3_1243,r4_1255,r5_1242,r6_1259,r7_1260,r8_1258,r9_1256,sp_1241,V_1248,VZN_1263,Z_1251,ZN_1246
	Mem1265[sp_1241 - 0x00000004:word32] = r0_1250
	Mem1268[sp_1241 - 0x00000008:word32] = r5_1242 + 1515
	Mem1270[sp_1241 - 0x0000000C:word32] = r5_1242
	word32 r2_1271 = Mem1270[r5_1242 + 0x0000C839:word32]
	word32 sp_1275
	word32 r5_1276
	word32 r3_1277
	byte CVZN_1278
	word32 r2_1279
	byte ZN_1280
	bool C_1281
	bool V_1282
	word32 ap_1283
	word32 r0_1284
	bool Z_1285
	bool N_1286
	word32 fp_1287
	byte CZN_1288
	word32 r4_1289
	word32 r9_1290
	word32 r10_1291
	word32 r8_1292
	word32 r6_1293
	word32 r7_1294
	word32 r1_1295
	byte CZ_1296
	byte VZN_1297
	call Mem1270[r2_1271:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1249,C_1273,CVZN_1244,CZ_1262,CZN_1254,dwLoc04_15,dwLoc08_18,fp_1253,N_1252,r0_1250,r1_1261,r10_1257,r2_1271,r3_1243,r4_1255,r5_1242,r6_1259,r7_1260,r8_1258,r9_1256,sp_1269,V_1274,VZN_1263,Z_1251,ZN_1272
		defs: ap_1283,C_1281,CVZN_1278,CZ_1296,CZN_1288,fp_1287,N_1286,r0_1284,r1_1295,r10_1291,r2_1279,r3_1277,r4_1289,r5_1276,r6_1293,r7_1294,r8_1292,r9_1290,sp_1275,V_1282,VZN_1297,Z_1285,ZN_1280
	Mem1299[sp_1275 - 0x00000004:word32] = 0x00000000
	Mem1303[sp_1275 - 0x00000008:word32] = (uint32) Mem1299[r5_1276 + 0x0000C676:word16] + 0x00000001
	Mem1306[sp_1275 - 0x0000000C:word32] = r6_1293 + 2896
	Mem1309[sp_1275 - 0x00000010:word32] = r5_1276 + 1515
	word32 sp_1313
	word32 r5_1314
	word32 r3_1315
	byte CVZN_1316
	word32 r2_1317
	byte ZN_1318
	bool C_1319
	bool V_1320
	word32 ap_1321
	word32 r0_1322
	bool Z_1323
	bool N_1324
	word32 fp_1325
	byte CZN_1326
	word32 r4_1327
	word32 r9_1328
	word32 r10_1329
	word32 r8_1330
	word32 r6_1331
	word32 r7_1332
	word32 r1_1333
	byte CZ_1334
	byte VZN_1335
	call Mem1309[r4_1289:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1283,C_1311,CVZN_1278,CZ_1296,CZN_1288,dwLoc04_15,dwLoc08_18,fp_1287,N_1286,r0_1284,r1_1295,r10_1291,r2_1301,r3_1277,r4_1289,r5_1276,r6_1293,r7_1294,r8_1292,r9_1290,sp_1307,V_1312,VZN_1297,Z_1285,ZN_1310
		defs: ap_1321,C_1319,CVZN_1316,CZ_1334,CZN_1326,fp_1325,N_1324,r0_1322,r1_1333,r10_1329,r2_1317,r3_1315,r4_1327,r5_1314,r6_1331,r7_1332,r8_1330,r9_1328,sp_1313,V_1320,VZN_1335,Z_1323,ZN_1318
	Mem1337[sp_1313 - 0x00000004:word32] = r0_1322
	Mem1340[sp_1313 - 0x00000008:word32] = r5_1314 + 1515
	Mem1342[sp_1313 - 0x0000000C:word32] = r5_1314
	word32 r2_1343 = Mem1342[r5_1314 + 0x0000C839:word32]
	word32 sp_1347
	word32 r5_1348
	word32 r3_1349
	byte CVZN_1350
	word32 r2_1351
	byte ZN_1352
	bool C_1353
	bool V_1354
	word32 ap_1355
	word32 r0_1356
	bool Z_1357
	bool N_1358
	word32 fp_1359
	byte CZN_1360
	word32 r4_1361
	word32 r9_1362
	word32 r10_1363
	word32 r8_1364
	word32 r6_1365
	word32 r7_1366
	word32 r1_1367
	byte CZ_1368
	byte VZN_1369
	call Mem1342[r2_1343:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1321,C_1345,CVZN_1316,CZ_1334,CZN_1326,dwLoc04_15,dwLoc08_18,fp_1325,N_1324,r0_1322,r1_1333,r10_1329,r2_1343,r3_1315,r4_1327,r5_1314,r6_1331,r7_1332,r8_1330,r9_1328,sp_1341,V_1346,VZN_1335,Z_1323,ZN_1344
		defs: ap_1355,C_1353,CVZN_1350,CZ_1368,CZN_1360,fp_1359,N_1358,r0_1356,r1_1367,r10_1363,r2_1351,r3_1349,r4_1361,r5_1348,r6_1365,r7_1366,r8_1364,r9_1362,sp_1347,V_1354,VZN_1369,Z_1357,ZN_1352
	Mem1371[sp_1347 - 0x00000004:word32] = 0x00000000
	word32 r3_1372 = (uint32) Mem1371[r5_1348 + 0x0000C678:word16]
	branch (r3_1372 & 0x00000001) == 0x00000000 l00013804
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> sp:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013804:
	word32 r3_2700
	branch (r3_1372 & 0x00000002) == 0x00000000 l00013810
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0xFFFFFFFC r2:<invalid> r3:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013810:
	r3_2700 = r8_1364 + 57
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0xFFFFFFFC r2:<invalid> r3:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013808:
	r3_2700 = r8_1364 + 64
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0xFFFFFFFC r2:<invalid> r3:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013814:
	r4_1376 = r3_2700
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0xFFFFFFFC r2:<invalid> r3:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000137FE:
	r4_1376 = r8_1364 + 71
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0xFFFFFFFC r2:<invalid> r3:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013817:
	word32 fp_1445
	word32 sp_1444
	word32 r0_1443
	word32 r5_1440
	word32 r8_1434
	word32 r6_1433
	Mem1378[sp_1347 - 0x00000008:word32] = r4_1376
	Mem1381[sp_1347 - 0x0000000C:word32] = r6_1365 + 2957
	Mem1384[sp_1347 - 0x00000010:word32] = r5_1348 + 1515
	fn000192D2()
	Mem1389[sp_1347 - 0x00000014:word32] = r0_1356
	Mem1392[sp_1347 - 0x00000018:word32] = r5_1348 + 1515
	Mem1394[sp_1347 - 0x0000001C:word32] = r5_1348
	word32 r2_1395 = Mem1394[r5_1348 + 0x0000C839:word32]
	word32 sp_1399
	word32 r5_1400
	word32 r3_1401
	byte CVZN_1402
	word32 r2_1403
	byte ZN_1404
	bool C_1405
	bool V_1406
	word32 ap_1407
	word32 r0_1408
	bool Z_1409
	bool N_1410
	word32 fp_1411
	byte CZN_1412
	word32 r4_1413
	word32 r9_1414
	word32 r10_1415
	word32 r8_1416
	word32 r6_1417
	word32 r7_1418
	word32 r1_1419
	byte CZ_1420
	byte VZN_1421
	call Mem1394[r2_1395:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1355,C_1397,CVZN_1350,CZ_1368,CZN_1360,dwLoc04_15,dwLoc08_18,fp_1359,N_1358,r0_1356,r1_1367,r10_1363,r2_1395,r3_1372,r4_1376,r5_1348,r6_1365,r7_1366,r8_1364,r9_1362,sp_1393,V_1398,VZN_1369,Z_1357,ZN_1396
		defs: ap_1407,C_1405,CVZN_1402,CZ_1420,CZN_1412,fp_1411,N_1410,r0_1408,r1_1419,r10_1415,r2_1403,r3_1401,r4_1413,r5_1400,r6_1417,r7_1418,r8_1416,r9_1414,sp_1399,V_1406,VZN_1421,Z_1409,ZN_1404
	Mem1424[sp_1399 + 14:word16] = (word16) (uint32) Mem1394[r5_1400 + 0x0000C67C:word16] & ~0x0000
	word32 r9_1425 = (uint32) Mem1424[sp_1399 + 2:word16]
	branch r9_1425 == 0x00000002 l00013854
// DataOut: ap fp r0 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0xFFFFFFFC r2:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013854:
	word32 r4_2467 = fp_1411 + 0xFFFFFFD7
	word32 r0_2468 = 0x00000000
	word32 r2_2469 = fp_1411 + -20
// DataOut: ap fp r0 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013868:
	Mem2476[r2_2469:byte] = 0x00
	r2_2469 = r2_2469 + 0x00000001
	r0_2468 = r0_2468 + 0x00000001
	branch r0_2468 <= 0x0000000B l00013868
// DataOut: ap fp r0 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:fp + -42 r4:fp + 0xFFFFFFD7 r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013870:
	word32 r7_2480 = (uint32) Mem2476[sp_1399 + 14:word16]
	branch (r7_2480 & 0x00000100) == 0x00000000 l0001387D
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:fp + -42 r4:fp + 0xFFFFFFD7 r0:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013878:
	Mem2692[fp_1411 + -20:byte] = 0x52
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:fp + -42 r4:fp + 0xFFFFFFD7 r0:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l0001387D:
	branch (r7_2480 & 0x00000080) == 0x00000000 l0001388B
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:fp + -42 r4:fp + 0xFFFFFFD7 r0:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013881:
	Mem2685[fp_1411 + -19:byte] = 0x57
	Mem2687[fp_1411 + -17:byte] = 0x44
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:fp + -42 r4:fp + 0xFFFFFFD7 r0:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l0001388B:
	branch (r7_2480 & 0x00000040) == 0x00000000 l00013894
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:fp + -42 r4:fp + 0xFFFFFFD7 r0:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l0001388F:
	Mem2680[fp_1411 + -18:byte] = 0x45
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:fp + -42 r4:fp + 0xFFFFFFD7 r0:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013894:
	branch (r7_2480 & 0x00000020) == 0x00000000 l0001389D
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:fp + -42 r4:fp + 0xFFFFFFD7 r0:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013898:
	Mem2675[fp_1411 + -16:byte] = 0x52
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:fp + -42 r4:fp + 0xFFFFFFD7 r0:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l0001389D:
	branch (r7_2480 & 0x00000010) == 0x00000000 l000138AB
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:fp + -42 r4:fp + 0xFFFFFFD7 r0:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000138A1:
	Mem2668[fp_1411 + -15:byte] = 0x57
	Mem2670[fp_1411 + -13:byte] = 0x44
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:fp + -42 r4:fp + 0xFFFFFFD7 r0:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000138AB:
	branch (r7_2480 & 0x00000008) == 0x00000000 l000138B4
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:fp + -42 r4:fp + 0xFFFFFFD7 r0:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000138AF:
	Mem2663[fp_1411 + -14:byte] = 0x45
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:fp + -42 r4:fp + 0xFFFFFFD7 r0:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000138B4:
	branch (r7_2480 & 0x00000004) == 0x00000000 l000138BD
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:fp + -42 r4:fp + 0xFFFFFFD7 r0:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000138B8:
	Mem2658[fp_1411 + -12:byte] = 0x52
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:fp + -42 r4:fp + 0xFFFFFFD7 r0:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000138BD:
	branch (r7_2480 & 0x00000002) == 0x00000000 l000138CB
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:fp + -42 r4:fp + 0xFFFFFFD7 r0:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000138C1:
	Mem2651[fp_1411 + -11:byte] = 0x57
	Mem2653[fp_1411 + -9:byte] = 0x44
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:fp + -42 r4:fp + 0xFFFFFFD7 r0:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000138CB:
	branch (r7_2480 & 0x00000001) == 0x00000000 l000138D3
// DataOut: ap fp r0 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:fp + -42 r4:fp + 0xFFFFFFD7 r0:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000138CE:
	Mem2646[fp_1411 + -10:byte] = 0x45
// DataOut: ap fp r0 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:fp + -42 r4:fp + 0xFFFFFFD7 r0:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000138D3:
	Mem2511[fp_1411 + -42:byte] = 0x28
	word32 r3_2512 = fp_1411 + 0xFFFFFFD7
	word32 r7_2513 = 0x00000000
	word32 r2_2514 = 0x00000000
	branch false l00013920
// DataOut: ap fp r0 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:fp + -42 r4:fp + 0xFFFFFFD7 r0:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000138DF:
	r7_2576 = r7_2513
	r4_2577 = r4_2467
// DataOut: ap fp r0 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:0x00000000 r9:<invalid> r3:fp + 0xFFFFFFD7 r4:fp + 0xFFFFFFD7 r0:<invalid> r7:0x00000000 -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000138E0:
	word32 r7_2576
	word32 r4_2577
	word32 r1_2583 = 0x00000000
// DataOut: ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000138E4:
	branch Mem2511[fp_1411 + -20 + r2_2514:byte] == 0x00 l000138EF
// DataOut: ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000138EA:
	Mem2640[r3_2512:byte] = Mem2511[fp_1411 + -20 + r2_2514:byte]
	r3_2512 = r3_2512 + 0x00000001
// DataOut: ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000138EF:
	r1_2583 = r1_2583 + 0x00000001
	r2_2514 = r2_2514 + 0x00000001
	branch r1_2583 < 0x00000004 l000138E4
// DataOut: ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000138F8:
	Mem2605[r3_2512:byte] = 0x2C
	r3_2512 = r3_2512 + 0x00000001
	branch r7_2576 != 0x00000000 l00013919
// DataOut: ap fp r0 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000138FF:
	Mem2624[r3_2512:byte] = Mem2605[r4_2577:byte]
	r3_2512 = r3_2512 + 0x00000001
	r4_2577 = r4_2577 + 0x00000001
	branch Mem2624[r3_2512:byte] == 0x2C l00013919
// DataOut: ap fp r0 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l0001390C:
	Mem2635[r3_3164:byte] = Mem2624[r4_2577:byte]
	r3_2512 = r3_3164 + 0x00000001
	r4_2577 = r4_2577 + 0x00000001
	word32 r3_3164 = r3_2512
	branch Mem2635[r3_3164:byte] != 0x2C l0001390C
// DataOut: ap fp r0 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013919:
	r7_2576 = r7_2576 + 0x00000001
	branch r7_2576 < 0x00000003 l000138E0
// DataOut: ap fp r0 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013920:
	Mem2522[r3_2512:byte] = 0x00
	word32 r3_2520 = r3_2512 - 0x00000001
	Mem2524[r3_2520:byte] = 0x29
	Mem2526[sp_1399 - 0x00000004:word32] = 0x00000000
	Mem2529[sp_1399 - 0x00000008:word32] = fp_1411 + -42
	Mem2532[sp_1399 - 0x0000000C:uint32] = (uint32) Mem2529[sp_1399 + 0x0000000A:word16]
	Mem2535[sp_1399 - 0x00000010:word32] = r6_1417 + 3013
	Mem2538[sp_1399 - 0x00000014:word32] = r5_1400 + 1515
	fn000192D2()
	Mem2543[sp_1399 - 0x00000018:word32] = r0_2468
	Mem2546[sp_1399 - 0x0000001C:word32] = r5_1400 + 1515
	Mem2548[sp_1399 - 0x00000020:word32] = r5_1400
	word32 r2_2549 = Mem2548[r5_1400 + 0x0000C839:word32]
	word32 r3_2555
	byte CVZN_2556
	word32 r2_2557
	byte ZN_2558
	bool C_2559
	bool V_2560
	word32 ap_2561
	bool Z_2563
	bool N_2564
	byte CZN_2566
	word32 r4_2567
	word32 r9_2568
	word32 r10_2569
	word32 r7_2572
	word32 r1_2573
	byte CZ_2574
	byte VZN_2575
	call Mem2548[r2_2549:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1407,C_2551,CVZN_2479,CZ_1420,CZN_2515,dwLoc04_15,dwLoc08_18,fp_1411,N_2516,r0_2478,r1_1419,r10_1415,r2_2549,r3_2520,r4_2467,r5_1400,r6_1417,r7_2513,r8_1416,r9_1425,sp_2547,V_2552,VZN_1421,Z_1427,ZN_2550
		defs: ap_2561,C_2559,CVZN_2556,CZ_2574,CZN_2566,fp_2565,N_2564,r0_2562,r1_2573,r10_2569,r2_2557,r3_2555,r4_2567,r5_2554,r6_2571,r7_2572,r8_2570,r9_2568,sp_2553,V_2560,VZN_2575,Z_2563,ZN_2558
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013851:
// DataOut: ap fp r0 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013958:
	branch r9_1425 == 0x00000001 l00013960
// DataOut: ap fp r0 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013960:
	word32 r2_2252 = (uint32) Mem1424[sp_1399 + 14:word16] & ~0xFFFFF3FF
	branch r2_2252 < 0x00000400 l00013990
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013974:
	branch r2_2252 == 0x00000400 l00013988
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013988:
	Mem2461[fp_1411 + -42:byte] = 0x2D
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013976:
	branch r2_2252 != 0x00000800 l00013990
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013990:
	Mem2448[fp_1411 + -42:byte] = 0x3F
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l0001397F:
	Mem2456[fp_1411 + -42:byte] = 0x64
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013994:
	word32 r3_2268
	word32 r7_2264 = (uint32) Mem1424[sp_1399 + 14:word16]
	branch (r7_2264 & 0x00000080) == 0x00000000 l000139A4
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000139A4:
	r3_2268 = DPB(r3_1401, 0x2D, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l0001399C:
	r3_2268 = DPB(r3_1401, 0x68, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000139A7:
	word32 r4_2274
	Mem2270[fp_1411 + -41:byte] = (byte) r3_2268
	branch (r7_2264 & 0x00000040) == 0x00000000 l000139B8
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000139B8:
	r4_2274 = DPB(r4_1413, 0x2D, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000139AF:
	r4_2274 = DPB(r4_1413, 0x73, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000139BB:
	word32 r3_2280
	Mem2276[fp_1411 + -40:byte] = (byte) r4_2274
	branch (r7_2264 & 0x00000020) == 0x00000000 l000139CC
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000139CC:
	r3_2280 = DPB(r3_2268, 0x2D, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000139C3:
	r3_2280 = DPB(r3_2268, 0x70, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000139CF:
	word32 r4_2286
	Mem2282[fp_1411 + -39:byte] = (byte) r3_2280
	branch (r7_2264 & 0x00000010) == 0x00000000 l000139E0
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000139E0:
	r4_2286 = DPB(r4_2274, 0x2D, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000139D7:
	r4_2286 = DPB(r4_2274, 0x61, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000139E3:
	word32 r3_2292
	Mem2288[fp_1411 + -38:byte] = (byte) r4_2286
	branch (r7_2264 & 0x00000008) == 0x00000000 l000139F4
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000139F4:
	r3_2292 = DPB(r3_2280, 0x2D, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000139EB:
	r3_2292 = DPB(r3_2280, 0x72, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000139F7:
	word32 r4_2298
	Mem2294[fp_1411 + -37:byte] = (byte) r3_2292
	branch (r7_2264 & 0x00000004) == 0x00000000 l00013A08
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A08:
	r4_2298 = DPB(r4_2286, 0x2D, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l000139FF:
	r4_2298 = DPB(r4_2286, 0x77, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A0B:
	word32 r3_2304
	Mem2300[fp_1411 + -36:byte] = (byte) r4_2298
	branch (r7_2264 & 0x00000002) == 0x00000000 l00013A1C
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A1C:
	r3_2304 = DPB(r3_2292, 0x2D, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A13:
	r3_2304 = DPB(r3_2292, 0x65, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A1F:
	word32 r4_2310
	Mem2306[fp_1411 + -35:byte] = (byte) r3_2304
	branch (r7_2264 & 0x00000001) == 0x00000000 l00013A2C
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A2C:
	r4_2310 = DPB(r4_2298, 0x2D, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A26:
	r4_2310 = DPB(r4_2298, 0x64, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A2F:
	Mem2312[fp_1411 + -34:byte] = (byte) r4_2310
	Mem2314[fp_1411 + -33:byte] = 0x00
	Mem2316[sp_1399 - 0x00000004:word32] = 0x00000000
	Mem2319[sp_1399 - 0x00000008:word32] = fp_1411 + -42
	Mem2321[sp_1399 - 0x0000000C:word32] = r7_2264
	Mem2324[sp_1399 - 0x00000010:word32] = r6_1417 + 3067
	Mem2327[sp_1399 - 0x00000014:word32] = r5_1400 + 1515
	fn000192D2()
	Mem2332[sp_1399 - 0x00000018:word32] = r0_1408
	Mem2335[sp_1399 - 0x0000001C:word32] = r5_1400 + 1515
	Mem2337[sp_1399 - 0x00000020:word32] = r5_1400
	word32 r2_2338 = Mem2337[r5_1400 + 0x0000C839:word32]
	word32 r3_2344
	byte CVZN_2345
	word32 r2_2346
	byte ZN_2347
	bool C_2348
	bool V_2349
	word32 ap_2350
	bool Z_2352
	bool N_2353
	byte CZN_2355
	word32 r4_2356
	word32 r9_2357
	word32 r10_2358
	word32 r7_2361
	word32 r1_2362
	byte CZ_2363
	byte VZN_2364
	call Mem2337[r2_2338:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1407,C_2340,CVZN_2260,CZ_2258,CZN_2263,dwLoc04_15,dwLoc08_18,fp_1411,N_2257,r0_1408,r1_1419,r10_1415,r2_2338,r3_2304,r4_2310,r5_1400,r6_1417,r7_2264,r8_1416,r9_1425,sp_2336,V_2341,VZN_2261,Z_2262,ZN_2339
		defs: ap_2350,C_2348,CVZN_2345,CZ_2363,CZN_2355,fp_2354,N_2353,r0_2351,r1_2362,r10_2358,r2_2346,r3_2344,r4_2356,r5_2343,r6_2360,r7_2361,r8_2359,r9_2357,sp_2342,V_2349,VZN_2364,Z_2352,ZN_2347
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l0001395D:
// DataOut: ap fp r0 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A64:
	branch r9_1425 != 0x00000000 l00013A6B
// DataOut: ap fp r0 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A6B:
	branch r9_1425 != 0x00000006 l00013A73
// DataOut: ap fp r0 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A73:
	branch r9_1425 != 0x0000000B l00013A7B
// DataOut: ap fp r0 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A7B:
	branch r9_1425 != 0x0000000E l00013A83
// DataOut: ap fp r0 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A83:
	branch r9_1425 != 0x0000000D l00013A8B
// DataOut: ap fp r0 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A8B:
	branch r9_1425 != 0x00000004 l00013A93
// DataOut: ap fp r0 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A93:
	branch r9_1425 != 0x0000000F l00013A9B
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A9B:
	word32 r2_1882 = (uint32) Mem1424[sp_1399 + 14:word16] & ~0xFFFF0FFF
	branch r2_1882 < 0x00001000 l00013B2C
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013AAF:
	branch r2_1882 == 0x00001000 l00013B1C
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B1C:
	Mem2247[fp_1411 + -42:byte] = 0x70
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013AB1:
	branch r2_1882 < 0x00002000 l00013B2C
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013ABA:
	branch r2_1882 == 0x00002000 l00013B14
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B14:
	Mem2242[fp_1411 + -42:byte] = 0x63
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013ABC:
	branch r2_1882 < 0x00004000 l00013B2C
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013AC5:
	branch r2_1882 == 0x00004000 l00013AF4
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013AF4:
	Mem2237[fp_1411 + -42:byte] = 0x64
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013AC7:
	branch r2_1882 < 0x00006000 l00013B2C
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013AD0:
	branch r2_1882 == 0x00006000 l00013B0C
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B0C:
	Mem2232[fp_1411 + -42:byte] = 0x62
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013AD2:
	branch r2_1882 < 0x00008000 l00013B2C
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013ADB:
	branch r2_1882 == 0x00008000 l00013AFC
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013AFC:
	Mem2227[fp_1411 + -42:byte] = 0x2D
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013ADD:
	branch r2_1882 < 0x0000A000 l00013B2C
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013AE6:
	branch r2_1882 == 0x0000A000 l00013B04
// DataOut: ap fp r0 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B04:
	Mem2222[fp_1411 + -42:byte] = 0x6C
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013AE8:
	branch r2_1882 == 0x0000C000 l00013B24
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B24:
	Mem2217[fp_1411 + -42:byte] = 0x73
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013AF1:
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B2C:
	Mem2164[fp_1411 + -42:byte] = 0x3F
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B30:
	word32 r3_1902
	word32 r7_1898 = (uint32) Mem1424[sp_1399 + 14:word16]
	branch (r7_1898 & 0x00000100) == 0x00000000 l00013B40
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B40:
	r3_1902 = DPB(r3_1401, 0x2D, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B38:
	r3_1902 = DPB(r3_1401, 0x72, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B43:
	word32 r4_1908
	Mem1904[fp_1411 + -41:byte] = (byte) r3_1902
	branch (r7_1898 & 0x00000020) == 0x00000000 l00013B54
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B54:
	r4_1908 = DPB(r4_1413, 0x2D, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B4B:
	r4_1908 = DPB(r4_1413, 0x72, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B57:
	word32 r3_1914
	Mem1910[fp_1411 + -38:byte] = (byte) r4_1908
	branch (r7_1898 & 0x00000004) == 0x00000000 l00013B68
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B68:
	r3_1914 = DPB(r3_1902, 0x2D, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B5F:
	r3_1914 = DPB(r3_1902, 0x72, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B6B:
	word32 r4_1920
	Mem1916[fp_1411 + -35:byte] = (byte) r3_1914
	branch (r7_1898 & 0x00000080) == 0x00000000 l00013B7C
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B7C:
	r4_1920 = DPB(r4_1908, 0x2D, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B73:
	r4_1920 = DPB(r4_1908, 0x77, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B7F:
	word32 r3_1926
	Mem1922[fp_1411 + -40:byte] = (byte) r4_1920
	branch (r7_1898 & 0x00000010) == 0x00000000 l00013B90
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B90:
	r3_1926 = DPB(r3_1914, 0x2D, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B87:
	r3_1926 = DPB(r3_1914, 0x77, 0)
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B93:
	word32 r4_1932
	Mem1928[fp_1411 + -37:byte] = (byte) r3_1926
	branch (r7_1898 & 0x00000002) == 0x00000000 l00013BA4
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013BA4:
	r4_1932 = DPB(r4_1920, 0x2D, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013B9B:
	r4_1932 = DPB(r4_1920, 0x77, 0)
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013BA7:
	word32 r2_1938
	Mem1934[fp_1411 + -34:byte] = (byte) r4_1932
	branch (r7_1898 & 0x00000040) == 0x00000000 l00013BC8
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013BC8:
	branch (r7_1898 & 0x00000800) == 0x00000000 l00013BD4
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013BD4:
	r2_1938 = DPB(r2_1882, 0x2D, 0)
// DataOut: ap fp r0 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013BCC:
	r2_1938 = DPB(r2_1882, 0x53, 0)
// DataOut: ap fp r0 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013BD7:
	Mem2083[fp_1411 + -39:byte] = (byte) r2_1938
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013BAF:
	branch (r7_1898 & 0x00000800) == 0x00000000 l00013BBC
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013BBC:
	r2_1938 = DPB(r2_1882, 0x78, 0)
// DataOut: ap fp r0 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013BB3:
	r2_1938 = DPB(r2_1882, 0x73, 0)
// DataOut: ap fp r0 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013BC0:
	Mem2067[fp_1411 + -39:byte] = (byte) r2_1938
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013BDB:
	word32 r2_1943
	word32 r3_1939 = (uint32) Mem1934[sp_1399 + 14:word16]
	branch (r3_1939 & 0x00000008) == 0x00000000 l00013BFC
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013BFC:
	branch (r3_1939 & 0x00000400) == 0x00000000 l00013C08
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013C08:
	r2_1943 = DPB(r2_1938, 0x2D, 0)
// DataOut: ap fp r0 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013C00:
	r2_1943 = DPB(r2_1938, 0x6C, 0)
// DataOut: ap fp r0 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013C0B:
	Mem2051[fp_1411 + -36:byte] = (byte) r2_1943
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013BE3:
	branch (r3_1939 & 0x00000400) == 0x00000000 l00013BF0
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013BF0:
	r2_1943 = DPB(r2_1938, 0x78, 0)
// DataOut: ap fp r0 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013BE7:
	r2_1943 = DPB(r2_1938, 0x73, 0)
// DataOut: ap fp r0 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013BF4:
	Mem2035[fp_1411 + -36:byte] = (byte) r2_1943
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013C0F:
	word32 r3_1944 = (uint32) Mem1934[sp_1399 + 14:word16]
	branch (r3_1944 & 0x00000001) == 0x00000000 l00013C2C
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013C2C:
	word32 r2_2017
	branch (r3_1944 & 0x00000200) == 0x00000000 l00013C38
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013C38:
	r2_2017 = DPB(r2_1943, 0x2D, 0)
// DataOut: ap fp r0 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013C30:
	r2_2017 = DPB(r2_1943, 0x54, 0)
// DataOut: ap fp r0 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013C3B:
	Mem2019[fp_1411 + -33:byte] = (byte) r2_2017
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013C16:
	word32 r2_2001
	branch (r3_1944 & 0x00000200) == 0x00000000 l00013C20
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013C20:
	r2_2001 = DPB(r2_1943, 0x78, 0)
// DataOut: ap fp r0 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013C1A:
	r2_2001 = DPB(r2_1943, 0x74, 0)
// DataOut: ap fp r0 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013C24:
	Mem2003[fp_1411 + -33:byte] = (byte) r2_2001
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013C3F:
	Mem1949[fp_1411 + -32:byte] = 0x00
	Mem1951[sp_1399 - 0x00000004:word32] = 0x00000000
	Mem1954[sp_1399 - 0x00000008:word32] = fp_1411 + -42
	Mem1957[sp_1399 - 0x0000000C:uint32] = (uint32) Mem1954[sp_1399 + 0x0000000A:word16]
	Mem1960[sp_1399 - 0x00000010:word32] = r6_1417 + 3121
	Mem1963[sp_1399 - 0x00000014:word32] = r5_1400 + 1515
	fn000192D2()
	Mem1968[sp_1399 - 0x00000018:word32] = r0_1408
	Mem1971[sp_1399 - 0x0000001C:word32] = r5_1400 + 1515
	Mem1973[sp_1399 - 0x00000020:word32] = r5_1400
	word32 r2_1974 = Mem1973[r5_1400 + 0x0000C839:word32]
	word32 r3_1980
	byte CVZN_1981
	word32 r2_1982
	byte ZN_1983
	bool C_1984
	bool V_1985
	word32 ap_1986
	bool Z_1988
	bool N_1989
	byte CZN_1991
	word32 r4_1992
	word32 r9_1993
	word32 r10_1994
	word32 r7_1997
	word32 r1_1998
	byte CZ_1999
	byte VZN_2000
	call Mem1973[r2_1974:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1407,C_1976,CVZN_1896,CZ_1893,CZN_1897,dwLoc04_15,dwLoc08_18,fp_1411,N_1894,r0_1408,r1_1419,r10_1415,r2_1974,r3_1944,r4_1932,r5_1400,r6_1417,r7_1898,r8_1416,r9_1425,sp_1972,V_1977,VZN_1892,Z_1895,ZN_1975
		defs: ap_1986,C_1984,CVZN_1981,CZ_1999,CZN_1991,fp_1990,N_1989,r0_1987,r1_1998,r10_1994,r2_1982,r3_1980,r4_1992,r5_1979,r6_1996,r7_1997,r8_1995,r9_1993,sp_1978,V_1985,VZN_2000,Z_1988,ZN_1983
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A98:
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A90:
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A88:
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A80:
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A78:
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A70:
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013A68:
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013C70:
	Mem1816[sp_1399 - 0x00000004:word32] = 0x00000000
	Mem1819[sp_1399 - 0x00000008:word32] = (uint32) Mem1816[r5_1400 + 0x0000C67B:ui24]
	Mem1822[sp_1399 - 0x0000000C:word32] = r6_1417 + 3175
	Mem1825[sp_1399 - 0x00000010:word32] = r5_1400 + 1515
	fn000192D2()
	Mem1830[sp_1399 - 0x00000014:word32] = r0_1408
	Mem1833[sp_1399 - 0x00000018:word32] = r5_1400 + 1515
	Mem1835[sp_1399 - 0x0000001C:word32] = r5_1400
	word32 r2_1836 = Mem1835[r5_1400 + 0x0000C839:word32]
	word32 r3_1842
	byte CVZN_1843
	word32 r2_1844
	byte ZN_1845
	bool C_1846
	bool V_1847
	word32 ap_1848
	bool Z_1850
	bool N_1851
	byte CZN_1853
	word32 r4_1854
	word32 r9_1855
	word32 r10_1856
	word32 r7_1859
	word32 r1_1860
	byte CZ_1861
	byte VZN_1862
	call Mem1835[r2_1836:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1407,C_1838,CVZN_1402,CZ_1420,CZN_1808,dwLoc04_15,dwLoc08_18,fp_1411,N_1410,r0_1408,r1_1419,r10_1415,r2_1836,r3_1401,r4_1413,r5_1400,r6_1417,r7_1418,r8_1416,r9_1425,sp_1834,V_1839,VZN_1421,Z_1812,ZN_1837
		defs: ap_1848,C_1846,CVZN_1843,CZ_1861,CZN_1853,fp_1852,N_1851,r0_1849,r1_1860,r10_1856,r2_1844,r3_1842,r4_1854,r5_1841,r6_1858,r7_1859,r8_1857,r9_1855,sp_1840,V_1847,VZN_1862,Z_1850,ZN_1845
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013C9E:
	word32 ap_1471
	word32 fp_1470
	word32 sp_1469
	word32 r0_1468
	word32 r5_1466
	word32 r4_1462
	word32 r8_1459
	word32 r6_1458
	word32 r7_1457
	Mem1448[sp_1444 + 14:word16] = Mem1424[r5_1440 + 0x0000C67A:word16] & ~0xFF00
	word32 r3_1449 = (uint32) Mem1448[sp_1444 + 14:word16]
	branch r3_1449 != 0x00000000 l00013CD8
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013CD8:
	branch r3_1449 != 0x00000001 l00013D08
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r3:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D08:
	word32 r10_1678
	word32 sp_1673 = sp_1444 - 0x00000004
	Mem1674[sp_1673:word32] = 0x00000000
	branch (r3_1449 & 0x00000020) == 0x00000000 l00013D14
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r3:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D14:
	r10_1678 = r6_1433
// DataOut: ap fp r0 r10 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000003C r2:<invalid> r3:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D0E:
	r10_1678 = r8_1434 + 101
// DataOut: ap fp r0 r10 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000003C r2:<invalid> r3:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D17:
	word32 r9_1684
	Mem1680[sp_1673 - 0x00000004:word32] = r10_1678
	branch (r3_1449 & 0x00000010) == 0x00000000 l00013D24
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000003C r2:<invalid> r3:<invalid> r10:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D24:
	r9_1684 = r6_1433
// DataOut: ap fp r0 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000007C r2:<invalid> r3:<invalid> r10:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D1D:
	r9_1684 = r8_1434 + 96
// DataOut: ap fp r0 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000007C r2:<invalid> r3:<invalid> r10:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D27:
	word32 r7_1690
	Mem1686[sp_1673 - 0x00000008:word32] = r9_1684
	branch (r3_1449 & 0x00000008) == 0x00000000 l00013D34
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000007C r2:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D34:
	r7_1690 = r6_1433
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x000000FC r2:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D2D:
	r7_1690 = r8_1434 + 91
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x000000FC r2:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D37:
	word32 r4_1696
	Mem1692[sp_1673 - 0x0000000C:word32] = r7_1690
	branch (r3_1449 & 0x00000004) == 0x00000000 l00013D44
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x000000FC r2:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D44:
	r4_1696 = r6_1433
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x000001FC r2:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D3D:
	r4_1696 = r8_1434 + 86
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x000001FC r2:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D47:
	Mem1698[sp_1673 - 0x00000010:word32] = r4_1696
	branch (r3_1449 & 0x00000002) == 0x00000000 l00013D54
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x000001FC r2:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> r7:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D54:
	Mem1772[fp_1445 + -62:word32] = r6_1433
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x000003FC r2:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> r7:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D4D:
	Mem1767[fp_1445 + -62:word32] = r8_1434 + 81
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x000003FC r2:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> r7:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D58:
	Mem1704[sp_1673 - 0x00000014:word32] = Mem1698[fp_1445 + -62:word32]
	branch (r3_1449 & 0x00000001) == 0x00000000 l00013D68
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x000003FC r2:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> r7:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D68:
	Mem1762[fp_1445 + -66:word32] = r6_1433
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x000007FC r2:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> r7:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D5E:
	Mem1757[fp_1445 + -66:word32] = r8_1434 + 76
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x000007FC r2:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> r7:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D6C:
	Mem1710[sp_1673 - 0x00000018:word32] = Mem1704[fp_1445 + -66:word32]
	Mem1712[sp_1673 - 0x0000001C:word32] = r3_1449
	Mem1715[sp_1673 - 0x00000020:word32] = r6_1433 + 3363
	Mem1718[sp_1673 - 0x00000024:word32] = r5_1440 + 1515
	fn000192D2()
	Mem1723[sp_1673 - 0x00000028:word32] = r0_1443
	Mem1726[sp_1673 - 0x0000002C:word32] = r5_1440 + 1515
	Mem1728[sp_1673 - 0x00000030:word32] = r5_1440
	word32 r2_1729 = Mem1728[r5_1440 + 0x0000C839:word32]
	word32 r3_1735
	byte CVZN_1736
	word32 r2_1737
	byte ZN_1738
	bool C_1739
	bool V_1740
	bool Z_1743
	bool N_1744
	byte CZN_1746
	word32 r9_1748
	word32 r10_1749
	word32 r1_1753
	byte CZ_1754
	byte VZN_1755
	call Mem1728[r2_1729:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1446,C_1731,CVZN_1439,CZ_1430,CZN_1623,dwLoc04_15,dwLoc08_18,fp_1445,N_1438,r0_1443,r1_1431,r10_1678,r2_1729,r3_1449,r4_1696,r5_1440,r6_1433,r7_1690,r8_1434,r9_1684,sp_1727,V_1732,VZN_1429,Z_1624,ZN_1730
		defs: ap_1741,C_1739,CVZN_1736,CZ_1754,CZN_1746,fp_1745,N_1744,r0_1742,r1_1753,r10_1749,r2_1737,r3_1735,r4_1747,r5_1734,r6_1751,r7_1752,r8_1750,r9_1748,sp_1733,V_1740,VZN_1755,Z_1743,ZN_1738
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x000007FC r2:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> r7:<invalid> r4:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>
// Terminates process

l00013CDD:
	word32 sp_1626 = sp_1444 - 0x00000004
	Mem1627[sp_1626:word32] = 0x00000000
	Mem1629[sp_1626 - 0x00000004:word32] = r3_1449
	Mem1632[sp_1626 - 0x00000008:word32] = r6_1433 + 3298
	Mem1635[sp_1626 - 0x0000000C:word32] = r5_1440 + 1515
	fn000192D2()
	Mem1640[sp_1626 - 0x00000010:word32] = r0_1443
	Mem1643[sp_1626 - 0x00000014:word32] = r5_1440 + 1515
	Mem1645[sp_1626 - 0x00000018:word32] = r5_1440
	word32 r2_1646 = Mem1645[r5_1440 + 0x0000C839:word32]
	word32 r3_1652
	byte CVZN_1653
	word32 r2_1654
	byte ZN_1655
	bool C_1656
	bool V_1657
	bool Z_1660
	bool N_1661
	byte CZN_1663
	word32 r9_1665
	word32 r10_1666
	word32 r1_1670
	byte CZ_1671
	byte VZN_1672
	call Mem1645[r2_1646:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1446,C_1648,CVZN_1439,CZ_1430,CZN_1623,dwLoc04_15,dwLoc08_18,fp_1445,N_1438,r0_1443,r1_1431,r10_1435,r2_1646,r3_1449,r4_1437,r5_1440,r6_1433,r7_1432,r8_1434,r9_1436,sp_1644,V_1649,VZN_1429,Z_1624,ZN_1647
		defs: ap_1658,C_1656,CVZN_1653,CZ_1671,CZN_1663,fp_1662,N_1661,r0_1659,r1_1670,r10_1666,r2_1654,r3_1652,r4_1664,r5_1651,r6_1668,r7_1669,r8_1667,r9_1665,sp_1650,V_1657,VZN_1672,Z_1660,ZN_1655
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r3:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>
// Terminates process

l00013CAF:
	word32 sp_1576 = sp_1444 - 0x00000004
	Mem1577[sp_1576:word32] = 0x00000000
	Mem1579[sp_1576 - 0x00000004:word32] = r3_1449
	Mem1582[sp_1576 - 0x00000008:word32] = r6_1433 + 3238
	Mem1585[sp_1576 - 0x0000000C:word32] = r5_1440 + 1515
	fn000192D2()
	Mem1590[sp_1576 - 0x00000010:word32] = r0_1443
	Mem1593[sp_1576 - 0x00000014:word32] = r5_1440 + 1515
	Mem1595[sp_1576 - 0x00000018:word32] = r5_1440
	word32 r2_1596 = Mem1595[r5_1440 + 0x0000C839:word32]
	word32 r3_1602
	byte CVZN_1603
	word32 r2_1604
	byte ZN_1605
	bool C_1606
	bool V_1607
	bool Z_1610
	bool N_1611
	byte CZN_1613
	word32 r9_1615
	word32 r10_1616
	word32 r1_1620
	byte CZ_1621
	byte VZN_1622
	call Mem1595[r2_1596:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1446,C_1598,CVZN_1439,CZ_1430,CZN_1442,dwLoc04_15,dwLoc08_18,fp_1445,N_1438,r0_1443,r1_1431,r10_1435,r2_1596,r3_1449,r4_1437,r5_1440,r6_1433,r7_1432,r8_1434,r9_1436,sp_1594,V_1599,VZN_1429,Z_1451,ZN_1597
		defs: ap_1608,C_1606,CVZN_1603,CZ_1621,CZN_1613,fp_1612,N_1611,r0_1609,r1_1620,r10_1616,r2_1604,r3_1602,r4_1614,r5_1601,r6_1618,r7_1619,r8_1617,r9_1615,sp_1600,V_1607,VZN_1622,Z_1610,ZN_1605
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r3:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>
// Terminates process

l00013D92:
	branch (uint32) Mem1448[r5_1466 + 0x0000C672:word16] != 0x00000000 l00013D9E
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D9E:
	Mem1502[sp_1469 + 42:word16] = Mem1448[r5_1466 + 0x0000C672:word16]
	branch Mem1502[sp_1469 + 8:word32] <= 0x00000001 l00013DB8
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013DB8:
	branch Mem1502[r5_1466 + 0x0000C627:word32] != 0x00000000 l00013DC4
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013DC4:
	word32 sp_1524 = sp_1469 - 0x00000004
	Mem1525[sp_1524:word32] = 0x00000000
	Mem1528[sp_1524 - 0x00000004:word32] = r6_1458 + 3560
	Mem1531[sp_1524 - 0x00000008:word32] = r5_1466 + 1515
	fn000192D2()
	Mem1536[sp_1524 - 0x0000000C:word32] = r0_1468
	Mem1539[sp_1524 - 0x00000010:word32] = r5_1466 + 1515
	Mem1541[sp_1524 - 0x00000014:word32] = r5_1466
	word32 r2_1542 = Mem1541[r5_1466 + 0x0000C839:word32]
	word32 sp_1546
	word32 r5_1547
	word32 r3_1548
	byte CVZN_1549
	word32 r2_1550
	byte ZN_1551
	bool C_1552
	bool V_1553
	word32 ap_1554
	word32 r0_1555
	bool Z_1556
	bool N_1557
	word32 fp_1558
	byte CZN_1559
	word32 r4_1560
	word32 r9_1561
	word32 r10_1562
	word32 r8_1563
	word32 r6_1564
	word32 r7_1565
	word32 r1_1566
	byte CZ_1567
	byte VZN_1568
	call Mem1541[r2_1542:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1471,C_1544,CVZN_1464,CZ_1455,CZN_1503,dwLoc04_15,dwLoc08_18,fp_1470,N_1463,r0_1468,r1_1456,r10_1460,r2_1542,r3_1465,r4_1462,r5_1466,r6_1458,r7_1500,r8_1459,r9_1461,sp_1540,V_1545,VZN_1454,Z_1514,ZN_1543
		defs: ap_1554,C_1552,CVZN_1549,CZ_1567,CZN_1559,fp_1558,N_1557,r0_1555,r1_1566,r10_1562,r2_1550,r3_1548,r4_1560,r5_1547,r6_1564,r7_1565,r8_1563,r9_1561,sp_1546,V_1553,VZN_1568,Z_1556,ZN_1551
	branch (uint32) Mem1541[sp_1546 + 42:word16] >=u 0x00000004 l00013DF3
// DataOut: ap fp r0 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>
// Terminates process

l00013DF3:
// DataOut: ap fp r0 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013E1B_thunk_fn00014355:
	fn00014355(r0_1555, r4_1560, r5_1547, r6_1564, r7_1565, r8_1563, ap_1554, fp_1558)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013DF0:
// DataOut: ap fp r0 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013DF0_thunk_fn00014355:
	fn00014355(r0_1555, r4_1560, r5_1547, r6_1564, r7_1565, r8_1563, ap_1554, fp_1558)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013DC0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013DB3:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> r7:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D9B:
// DataOut: ap fp r0 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

l00013D9B_thunk_fn00014355:
	fn00014355(r0_1468, r4_1462, r5_1466, r6_1458, r7_1457, r8_1459, ap_1471, fp_1470)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>

fn000132B7_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -24(fp):r5 -20(fp):r8 + 42 -16(fp):0x00000002 -12(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> 0(fp):r0 8(fp):<invalid>



void fn00014353(word32 r0, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r4 r5 r6 r7 r8
// LiveOut:
// Trashed: CVZN ap fp r0 r10 r11 r2 r3 r4 r7 sp
// Preserved: sp
fn00014353_entry:
// DataOut: ap fp r0 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00014353:
// DataOut: ap fp r0 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00014353_thunk_fn00014355:
	fn00014355(r0, r4 + 0x00000001, r5, r6, r7, r8, ap, fp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r4:r4 + 0x00000001

fn00014353_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r11:<invalid> r10:<invalid>



void fn00014355(word32 r0, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r4 r5 r6 r7 r8
// LiveOut:
// Trashed: CVZN ap fp r0 r10 r11 r2 r3 r4 r7 sp
// Preserved: sp
fn00014355_entry:
	word32 sp_1 = fp
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00014355:
	word32 r2_40 = (uint32) Mem0[r7:byte]
	branch (r2_40 & 0x00000002) == 0x00000000 l0001438D
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001435C:
	word32 sp_2652 = sp_1 - 0x00000004
	Mem2654[sp_2652:word32] = fp + -154
	word32 sp_2658
	word32 r7_2659
	word32 r2_2660
	byte ZN_2661
	bool C_2662
	bool V_2663
	word32 fp_2664
	word32 r0_2665
	word32 r3_2666
	word32 r4_2667
	bool Z_2668
	byte CVZN_2669
	word32 r6_2670
	word32 ap_2671
	word32 r8_2672
	word32 r5_2673
	byte VZN_2674
	byte CZN_2675
	byte CZ_2676
	word32 r9_2677
	bool N_2678
	word32 r11_2679
	word32 r10_2680
	call Mem2654[Mem2654[sp_2652 + 24:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_27,C_2656,CVZN_29,CZ_23,CZN_38,fp_34,N_21,r0_33,r10_20,r11_37,r2_40,r3_32,r4_31,r5_25,r6_28,r7_35,r8_26,r9_22,sp_2652,V_2657,VZN_24,Z_30,ZN_2655
		defs: ap_2671,C_2662,CVZN_2669,CZ_2676,CZN_2675,fp_2664,N_2678,r0_2665,r10_2680,r11_2679,r2_2660,r3_2666,r4_2667,r5_2673,r6_2670,r7_2659,r8_2672,r9_2677,sp_2658,V_2663,VZN_2674,Z_2668,ZN_2661
	word32 r3_2681 = r0_2665
	branch r4_2667 == 0x00000000 l00014376
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001436B:
	Mem2725[fp_2664 + -154:byte] = 0x2F
	r3_2681 = r0_2665 + 0x00000001
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r7:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014376:
	Mem2689[sp_2658 - 0x00000004:word32] = r6_2670 + 4393
	Mem2693[sp_2658 - 0x00000008:word32] = fp_2664 + -154 + r3_2681
	word32 r2_2697
	byte ZN_2698
	bool C_2699
	bool V_2700
	word32 r0_2702
	word32 r3_2703
	word32 r4_2704
	bool Z_2705
	byte CVZN_2706
	word32 ap_2708
	byte VZN_2711
	byte CZN_2712
	byte CZ_2713
	bool N_2715
	word32 r11_2716
	word32 r10_2717
	call Mem2693[Mem2693[sp_2658 + 0x00000018:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2671,C_2684,CVZN_2694,CZ_2676,CZN_2675,fp_2664,N_2678,r0_2665,r10_2680,r11_2679,r2_2690,r3_2686,r4_2667,r5_2673,r6_2670,r7_2659,r8_2672,r9_2677,sp_2691,V_2685,VZN_2674,Z_2683,ZN_2682
		defs: ap_2708,C_2699,CVZN_2706,CZ_2713,CZN_2712,fp_2701,N_2715,r0_2702,r10_2717,r11_2716,r2_2697,r3_2703,r4_2704,r5_2710,r6_2707,r7_2696,r8_2709,r9_2714,sp_2695,V_2700,VZN_2711,Z_2705,ZN_2698
	Mem2720[Mem2720[ap_2708 + 4:word32]:word32] = Mem2693[ap_2708 + 4:word32] + 0x00000004
	r4 = r4_2704 + 0x00000001
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r7:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001438D:
	word32 r2_63 = (uint32) Mem0[r7:byte]
	branch (r2_63 & 0x00000004) == 0x00000000 l000143C5
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014394:
	word32 sp_2575 = sp_1 - 0x00000004
	Mem2577[sp_2575:word32] = fp + -154
	word32 sp_2581
	word32 r7_2582
	word32 r2_2583
	byte ZN_2584
	bool C_2585
	bool V_2586
	word32 fp_2587
	word32 r0_2588
	word32 r3_2589
	word32 r4_2590
	bool Z_2591
	byte CVZN_2592
	word32 r6_2593
	word32 ap_2594
	word32 r8_2595
	word32 r5_2596
	byte VZN_2597
	byte CZN_2598
	byte CZ_2599
	word32 r9_2600
	bool N_2601
	word32 r11_2602
	word32 r10_2603
	call Mem2577[Mem2577[sp_2575 + 24:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_51,C_2579,CVZN_53,CZ_47,CZN_62,fp_58,N_45,r0_57,r10_44,r11_61,r2_63,r3_56,r4_55,r5_49,r6_52,r7_59,r8_50,r9_46,sp_2575,V_2580,VZN_48,Z_54,ZN_2578
		defs: ap_2594,C_2585,CVZN_2592,CZ_2599,CZN_2598,fp_2587,N_2601,r0_2588,r10_2603,r11_2602,r2_2583,r3_2589,r4_2590,r5_2596,r6_2593,r7_2582,r8_2595,r9_2600,sp_2581,V_2586,VZN_2597,Z_2591,ZN_2584
	word32 r3_2604 = r0_2588
	branch r4_2590 == 0x00000000 l000143AE
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000143A3:
	Mem2648[fp_2587 + -154:byte] = 0x2F
	r3_2604 = r0_2588 + 0x00000001
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000143AE:
	Mem2612[sp_2581 - 0x00000004:word32] = r6_2593 + 4400
	Mem2616[sp_2581 - 0x00000008:word32] = fp_2587 + -154 + r3_2604
	word32 r7_2619
	word32 r2_2620
	byte ZN_2621
	bool C_2622
	bool V_2623
	word32 r0_2625
	word32 r3_2626
	word32 r4_2627
	bool Z_2628
	byte CVZN_2629
	word32 ap_2631
	byte VZN_2634
	byte CZN_2635
	byte CZ_2636
	bool N_2638
	word32 r11_2639
	word32 r10_2640
	call Mem2616[Mem2616[sp_2581 + 0x00000018:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2594,C_2607,CVZN_2617,CZ_2599,CZN_2598,fp_2587,N_2601,r0_2588,r10_2603,r11_2602,r2_2613,r3_2609,r4_2590,r5_2596,r6_2593,r7_2582,r8_2595,r9_2600,sp_2614,V_2608,VZN_2597,Z_2606,ZN_2605
		defs: ap_2631,C_2622,CVZN_2629,CZ_2636,CZN_2635,fp_2624,N_2638,r0_2625,r10_2640,r11_2639,r2_2620,r3_2626,r4_2627,r5_2633,r6_2630,r7_2619,r8_2632,r9_2637,sp_2618,V_2623,VZN_2634,Z_2628,ZN_2621
	Mem2643[Mem2643[ap_2631 + 4:word32]:word32] = Mem2616[ap_2631 + 4:word32] + 0x00000004
	r4 = r4_2627 + 0x00000001
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000143C5:
	branch r4 > 0x00000000 l000143CC
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000143CC:
	word32 r3_2495
	word32 sp_2490 = sp_1 - 0x00000004
	Mem2491[sp_2490:word32] = 0x00000000
	branch r4 != 0x00000001 l000143D8
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000143D8:
	r3_2495 = r8 + 207
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000143D3:
	r3_2495 = r6
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000143DD:
	Mem2497[sp_2490 - 0x00000004:word32] = r3_2495
	Mem2500[sp_2490 - 0x00000008:word32] = fp + -154
	Mem2503[sp_2490 - 0x0000000C:word32] = r6 + 4330
	Mem2506[sp_2490 - 0x00000010:word32] = r5 + 1515
	word32 sp_2510
	word32 r7_2511
	word32 r2_2512
	byte ZN_2513
	bool C_2514
	bool V_2515
	word32 fp_2516
	word32 r0_2517
	word32 r3_2518
	word32 r4_2519
	bool Z_2520
	byte CVZN_2521
	word32 r6_2522
	word32 ap_2523
	word32 r8_2524
	word32 r5_2525
	byte VZN_2526
	byte CZN_2527
	byte CZ_2528
	word32 r9_2529
	bool N_2530
	word32 r11_2531
	word32 r10_2532
	call Mem2506[r9:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_74,C_2508,CVZN_76,CZ_70,CZN_2492,fp_81,N_68,r0_80,r10_67,r11_85,r2_82,r3_2495,r4_78,r5_72,r6_75,r7_83,r8_73,r9_69,sp_2504,V_2509,VZN_71,Z_2493,ZN_2507
		defs: ap_2523,C_2514,CVZN_2521,CZ_2528,CZN_2527,fp_2516,N_2530,r0_2517,r10_2532,r11_2531,r2_2512,r3_2518,r4_2519,r5_2525,r6_2522,r7_2511,r8_2524,r9_2529,sp_2510,V_2515,VZN_2526,Z_2520,ZN_2513
	Mem2534[sp_2510 - 0x00000004:word32] = r0_2517
	Mem2537[sp_2510 - 0x00000008:word32] = r5_2525 + 1515
	Mem2539[sp_2510 - 0x0000000C:word32] = r5_2525
	word32 r2_2540 = Mem2539[r5_2525 + 0x0000C839:word32]
	word32 r7_2545
	word32 r2_2546
	byte ZN_2547
	bool C_2548
	bool V_2549
	word32 fp_2550
	word32 r0_2551
	word32 r3_2552
	word32 r4_2553
	bool Z_2554
	byte CVZN_2555
	word32 r6_2556
	word32 ap_2557
	byte VZN_2560
	byte CZN_2561
	byte CZ_2562
	word32 r9_2563
	bool N_2564
	word32 r11_2565
	word32 r10_2566
	call Mem2539[r2_2540:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2523,C_2542,CVZN_2521,CZ_2528,CZN_2527,fp_2516,N_2530,r0_2517,r10_2532,r11_2531,r2_2540,r3_2518,r4_2519,r5_2525,r6_2522,r7_2511,r8_2524,r9_2529,sp_2538,V_2543,VZN_2526,Z_2520,ZN_2541
		defs: ap_2557,C_2548,CVZN_2555,CZ_2562,CZN_2561,fp_2550,N_2564,r0_2551,r10_2566,r11_2565,r2_2546,r3_2552,r4_2553,r5_2559,r6_2556,r7_2545,r8_2558,r9_2563,sp_2544,V_2549,VZN_2560,Z_2554,ZN_2547
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000143C9:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001466A:
	word32 sp_93 = sp_1 - 0x00000004
	Mem94[sp_93:word32] = 0x00000000
	Mem96[sp_93 - 0x00000004:word32] = 0x00000001
	Mem99[sp_93 - 0x00000008:word32] = r8 + 222
	Mem101[sp_93 - 0x0000000C:word32] = r5
	word32 r2_102 = Mem101[r5 + 0x0000C839:word32]
	word32 sp_106
	word32 r7_107
	word32 r2_108
	byte ZN_109
	bool C_110
	bool V_111
	word32 fp_112
	word32 r0_113
	word32 r3_114
	word32 r4_115
	bool Z_116
	byte CVZN_117
	word32 r6_118
	word32 ap_119
	word32 r8_120
	word32 r5_121
	byte VZN_122
	byte CZN_123
	byte CZ_124
	word32 r9_125
	bool N_126
	word32 r11_127
	word32 r10_128
	call Mem101[r2_102:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_74,C_104,CVZN_76,CZ_70,CZN_86,fp_81,N_68,r0_80,r10_67,r11_85,r2_102,r3_79,r4_78,r5_90,r6_75,r7_83,r8_91,r9_69,sp_100,V_105,VZN_71,Z_77,ZN_103
		defs: ap_119,C_110,CVZN_117,CZ_124,CZN_123,fp_112,N_126,r0_113,r10_128,r11_127,r2_108,r3_114,r4_115,r5_121,r6_118,r7_107,r8_120,r9_125,sp_106,V_111,VZN_122,Z_116,ZN_109
	word32 r0_129 = (uint32) Mem101[sp_106 + 40:word16]
	word32 r2_131 = (uint32) Mem101[sp_106 + 42:word16]
	word32 r0_132 = r2_131 - r0_129
	Mem134[sp_106 + 42:int16] = (int16) r0_132
	word32 r7_130 = r7_107 + r0_129
	word32 r0_135 = (uint32) (word16) r0_132
	branch r0_135 <u 0x00000004 l0001469C
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001469C:
	Mem2090[sp_106 - 0x00000004:word32] = 0x00000000
	Mem2092[sp_106 - 0x00000008:word32] = 0x00000001
	Mem2095[sp_106 - 0x0000000C:word32] = r8_120 + 224
	Mem2097[sp_106 - 0x00000010:word32] = r5_121
	word32 r2_2098 = Mem2097[r5_121 + 0x0000C839:word32]
	word32 r7_2103
	word32 r2_2104
	byte ZN_2105
	bool C_2106
	bool V_2107
	word32 fp_2108
	word32 r3_2110
	word32 r4_2111
	bool Z_2112
	byte CVZN_2113
	word32 ap_2115
	word32 r8_2116
	byte VZN_2118
	byte CZN_2119
	byte CZ_2120
	word32 r9_2121
	bool N_2122
	word32 r11_2123
	word32 r10_2124
	word32 r5_2117
	word32 r6_2114
	word32 r0_2109
	word32 sp_2102
	call Mem2097[r2_2098:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_119,C_2100,CVZN_117,CZ_124,CZN_136,fp_112,N_126,r0_135,r10_128,r11_127,r2_2098,r3_114,r4_115,r5_121,r6_118,r7_130,r8_120,r9_125,sp_2096,V_2101,VZN_122,Z_116,ZN_2099
		defs: ap_2115,C_2106,CVZN_2113,CZ_2120,CZN_2119,fp_2108,N_2122,r0_2109,r10_2124,r11_2123,r2_2104,r3_2110,r4_2111,r5_2117,r6_2114,r7_2103,r8_2116,r9_2121,sp_2102,V_2107,VZN_2118,Z_2112,ZN_2105
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000146B0:
	word32 r2_2126 = (uint32) SLICE(Mem2097[r5_2117 + 0x0000C67A:word32] & ~0xFFFF3FFF, ui20, 12)
	Mem2128[sp_2102 + 14:int16] = (int16) r2_2126
	word32 r9_2129 = (uint32) (word16) r2_2126
	branch (r9_2129 & 0x00000008) != 0x00000000 l000146CF
// DataOut: ap fp r0 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000146CF:
	word32 r7_2340 = (uint32) Mem2128[sp_2102 + 2:word16]
	branch r7_2340 == 0x00000003 l000146E2
// DataOut: ap fp r0 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000146D8:
	branch r7_2340 == 0x00000006 l000146E2
// DataOut: ap fp r0 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000146DD:
	branch r7_2340 != 0x0000000B l00014738
// DataOut: ap fp r0 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014738:
	branch r7_2340 != 0x00000000 l00014776
// DataOut: ap fp r0 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001473C:
	branch (r9_2129 & 0x00000004) != 0x00000000 l00014776
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014740:
	Mem2432[sp_2102 - 0x00000004:word32] = 0x00000000
	Mem2435[sp_2102 - 0x00000008:word32] = r6_2114 + 4890
	Mem2437[sp_2102 - 0x0000000C:word32] = 0x00000008
	Mem2440[sp_2102 - 0x00000010:word32] = r6_2114 + 3712
	Mem2443[sp_2102 - 0x00000014:uint32] = 0x00005855
	Mem2446[sp_2102 - 0x00000018:word32] = r8_2116 + 229
	Mem2449[sp_2102 - 0x0000001C:word32] = r6_2114 + 4764
	Mem2452[sp_2102 - 0x00000020:word32] = r5_2117 + 1515
	fn000192D2()
	Mem2457[sp_2102 - 0x00000024:word32] = r0_2109
	Mem2460[sp_2102 - 0x00000028:word32] = r5_2117 + 1515
	Mem2462[sp_2102 - 0x0000002C:word32] = r5_2117
	word32 r2_2463 = Mem2462[r5_2117 + 0x0000C839:word32]
	word32 r7_2468
	word32 r2_2469
	byte ZN_2470
	bool C_2471
	bool V_2472
	word32 fp_2473
	word32 r3_2475
	word32 r4_2476
	bool Z_2477
	byte CVZN_2478
	word32 ap_2480
	word32 r8_2481
	byte VZN_2483
	byte CZN_2484
	byte CZ_2485
	word32 r9_2486
	bool N_2487
	word32 r11_2488
	word32 r10_2489
	call Mem2462[r2_2463:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2115,C_2465,CVZN_2113,CZ_2120,CZN_2424,fp_2108,N_2122,r0_2109,r10_2124,r11_2123,r2_2463,r3_2110,r4_2111,r5_2117,r6_2114,r7_2340,r8_2116,r9_2129,sp_2461,V_2466,VZN_2118,Z_2428,ZN_2464
		defs: ap_2480,C_2471,CVZN_2478,CZ_2485,CZN_2484,fp_2473,N_2487,r0_2474,r10_2489,r11_2488,r2_2469,r3_2475,r4_2476,r5_2482,r6_2479,r7_2468,r8_2481,r9_2486,sp_2467,V_2472,VZN_2483,Z_2477,ZN_2470
// DataOut: ap fp r0 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000146E2:
	word32 r4_2352
	Mem2347[sp_2102 - 0x00000004:word32] = 0x00000000
	word32 r3_2348 = (uint32) Mem2347[sp_2102 + 0x0000000E:word16]
	branch (r3_2348 & 0x00000004) == 0x00000000 l000146F4
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000146F4:
	r4_2352 = r6_2114 + 4890
// DataOut: ap fp r0 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000146EC:
	r4_2352 = r6_2114 + 4843
// DataOut: ap fp r0 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000146F9:
	Mem2354[sp_2102 - 0x00000008:word32] = r4_2352
	word32 r3_2355 = r3_2348 & ~0xFFFFFFF3
	Mem2357[sp_2102 - 0x0000000C:word32] = r3_2355
	Mem2360[sp_2102 - 0x00000010:word32] = r6_2114 + 3712
	Mem2363[sp_2102 - 0x00000014:uint32] = 0x00005855
	Mem2366[sp_2102 - 0x00000018:word32] = r8_2116 + 226
	Mem2369[sp_2102 - 0x0000001C:word32] = r6_2114 + 4764
	Mem2372[sp_2102 - 0x00000020:word32] = r5_2117 + 1515
	fn000192D2()
	Mem2377[sp_2102 - 0x00000024:word32] = r0_2109
	Mem2380[sp_2102 - 0x00000028:word32] = r5_2117 + 1515
	Mem2382[sp_2102 - 0x0000002C:word32] = r5_2117
	word32 r2_2383 = Mem2382[r5_2117 + 0x0000C839:word32]
	word32 r7_2388
	word32 r2_2389
	byte ZN_2390
	bool C_2391
	bool V_2392
	word32 fp_2393
	word32 r3_2395
	word32 r4_2396
	bool Z_2397
	byte CVZN_2398
	word32 ap_2400
	word32 r8_2401
	byte VZN_2403
	byte CZN_2404
	byte CZ_2405
	word32 r9_2406
	bool N_2407
	word32 r11_2408
	word32 r10_2409
	call Mem2382[r2_2383:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2115,C_2385,CVZN_2113,CZ_2120,CZN_2345,fp_2108,N_2122,r0_2109,r10_2124,r11_2123,r2_2383,r3_2355,r4_2352,r5_2117,r6_2114,r7_2340,r8_2116,r9_2129,sp_2381,V_2386,VZN_2118,Z_2344,ZN_2384
		defs: ap_2400,C_2391,CVZN_2398,CZ_2405,CZN_2404,fp_2393,N_2407,r0_2394,r10_2409,r11_2408,r2_2389,r3_2395,r4_2396,r5_2402,r6_2399,r7_2388,r8_2401,r9_2406,sp_2387,V_2392,VZN_2403,Z_2397,ZN_2390
	Mem2411[Mem2411[ap_2400 + 4:word32]:word32] = Mem2382[ap_2400 + 4:word32] + r3_2395
// DataOut: ap fp r0 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000146CC:
// DataOut: ap fp r0 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014776:
	branch Mem2128[r5_2117 + 0x0000C674:word16] != 0x0000 l000147A4
// DataOut: ap fp r0 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -64(fp):r5 + 1515 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000147A4:
	word32 sp_2226 = sp_2102 - 0x00000004
	Mem2227[sp_2226:word32] = 0x00000000
	Mem2230[sp_2226 - 0x00000004:word32] = r6_2114 + 4955
	Mem2233[sp_2226 - 0x00000008:word32] = r5_2117 + 1515
	fn000192D2()
	Mem2238[sp_2226 - 0x0000000C:word32] = r0_2109
	Mem2241[sp_2226 - 0x00000010:word32] = r5_2117 + 1515
	Mem2243[sp_2226 - 0x00000014:word32] = r5_2117
	word32 r2_2244 = Mem2243[r5_2117 + 0x0000C839:word32]
	word32 sp_2248
	word32 r7_2249
	word32 r2_2250
	byte ZN_2251
	bool C_2252
	bool V_2253
	word32 fp_2254
	word32 r0_2255
	word32 r3_2256
	word32 r4_2257
	bool Z_2258
	byte CVZN_2259
	word32 r6_2260
	word32 ap_2261
	word32 r8_2262
	word32 r5_2263
	byte VZN_2264
	byte CZN_2265
	byte CZ_2266
	word32 r9_2267
	bool N_2268
	word32 r11_2269
	word32 r10_2270
	call Mem2243[r2_2244:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2140,C_2246,CVZN_2142,CZ_2136,CZN_2151,fp_2146,N_2134,r0_2145,r10_2133,r11_2150,r2_2244,r3_2144,r4_2143,r5_2138,r6_2141,r7_2148,r8_2139,r9_2135,sp_2242,V_2247,VZN_2137,Z_2153,ZN_2245
		defs: ap_2261,C_2252,CVZN_2259,CZ_2266,CZN_2265,fp_2254,N_2268,r0_2255,r10_2270,r11_2269,r2_2250,r3_2256,r4_2257,r5_2263,r6_2260,r7_2249,r8_2262,r9_2267,sp_2248,V_2253,VZN_2264,Z_2258,ZN_2251
	Mem2272[sp_2248 - 0x00000004:word32] = 0x00000005
	Mem2275[sp_2248 - 0x00000008:uint32] = (uint32) Mem2272[r5_2263 + 0x0000C674:word16]
	word32 ap_2279
	word32 fp_2280
	word32 sp_2281
	word32 r0_2282 = fn0000DC76(ap_2261, fp_2254, out ap_2279, out fp_2280, out sp_2281)
	branch r0_2282 == 0x00000000 l000147E5
// DataOut: fp r0 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -64(fp):r5 + 1515 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>
// Terminates process

l000147DB:
	Mem2333[sp_2281 + 8:word32] = r0_2282
	branch r0_2282 <= 0x00000001 l000147E5
// DataOut: fp r0 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -64(fp):r5 + 1515 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000147E5:
	Mem2288[sp_2281 - 0x00000004:word32] = 0x00000000
	Mem2291[sp_2281 - 0x00000008:word32] = r6_2260 + 5032
	Mem2294[sp_2281 - 0x0000000C:word32] = r5_2263 + 1515
	fn000192D2()
	Mem2299[sp_2281 - 0x00000010:word32] = r0_2282
	Mem2302[sp_2281 - 0x00000014:word32] = r5_2263 + 1515
	Mem2304[sp_2281 - 0x00000018:word32] = r5_2263
	word32 r2_2305 = Mem2304[r5_2263 + 0x0000C839:word32]
	word32 sp_2309
	word32 r7_2310
	word32 r2_2311
	byte ZN_2312
	bool C_2313
	bool V_2314
	word32 fp_2315
	word32 r0_2316
	word32 r3_2317
	word32 r4_2318
	bool Z_2319
	byte CVZN_2320
	word32 r6_2321
	word32 ap_2322
	word32 r8_2323
	word32 r5_2324
	byte VZN_2325
	byte CZN_2326
	byte CZ_2327
	word32 r9_2328
	bool N_2329
	word32 r11_2330
	word32 r10_2331
	call Mem2304[r2_2305:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2279,C_2307,CVZN_2259,CZ_2266,CZN_2265,fp_2280,N_2268,r0_2282,r10_2270,r11_2269,r2_2305,r3_2256,r4_2257,r5_2263,r6_2260,r7_2249,r8_2262,r9_2267,sp_2303,V_2308,VZN_2264,Z_2284,ZN_2306
		defs: ap_2322,C_2313,CVZN_2320,CZ_2327,CZN_2326,fp_2315,N_2329,r0_2316,r10_2331,r11_2330,r2_2311,r3_2317,r4_2318,r5_2324,r6_2321,r7_2310,r8_2323,r9_2328,sp_2309,V_2314,VZN_2325,Z_2319,ZN_2312
// DataOut: fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -64(fp):r5 + 1515 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>
// Terminates process

l000147E4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -64(fp):r5 + 1515 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001477E:
	word32 sp_2181 = sp_2102 - 0x00000004
	Mem2182[sp_2181:word32] = 0x00000000
	Mem2185[sp_2181 - 0x00000004:word32] = r6_2114 + 4925
	Mem2188[sp_2181 - 0x00000008:word32] = r5_2117 + 1515
	fn000192D2()
	Mem2193[sp_2181 - 0x0000000C:word32] = r0_2109
	Mem2196[sp_2181 - 0x00000010:word32] = r5_2117 + 1515
	Mem2198[sp_2181 - 0x00000014:word32] = r5_2117
	word32 r2_2199 = Mem2198[r5_2117 + 0x0000C839:word32]
	word32 sp_2203
	word32 r7_2204
	word32 r2_2205
	byte ZN_2206
	bool C_2207
	bool V_2208
	word32 fp_2209
	word32 r0_2210
	word32 r3_2211
	word32 r4_2212
	bool Z_2213
	byte CVZN_2214
	word32 r6_2215
	word32 ap_2216
	word32 r8_2217
	word32 r5_2218
	byte VZN_2219
	byte CZN_2220
	byte CZ_2221
	word32 r9_2222
	bool N_2223
	word32 r11_2224
	word32 r10_2225
	call Mem2198[r2_2199:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2140,C_2201,CVZN_2142,CZ_2136,CZN_2151,fp_2146,N_2134,r0_2145,r10_2133,r11_2150,r2_2199,r3_2144,r4_2143,r5_2138,r6_2141,r7_2148,r8_2139,r9_2135,sp_2197,V_2202,VZN_2137,Z_2153,ZN_2200
		defs: ap_2216,C_2207,CVZN_2214,CZ_2221,CZN_2220,fp_2209,N_2223,r0_2210,r10_2225,r11_2224,r2_2205,r3_2211,r4_2212,r5_2218,r6_2215,r7_2204,r8_2217,r9_2222,sp_2203,V_2208,VZN_2219,Z_2213,ZN_2206
// DataOut: fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r9:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -64(fp):r5 + 1515 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>
// Terminates process

l00014808:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:<invalid> -64(fp):r5 + 1515 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014699:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00013E24:
	Mem163[sp_106 - 0x00000004:word32] = r7_130
	word32 sp_167
	word32 r7_168
	word32 r2_169
	byte ZN_170
	bool C_171
	bool V_172
	word32 fp_173
	word32 r0_174
	word32 r3_175
	word32 r4_176
	bool Z_177
	byte CVZN_178
	word32 r6_179
	word32 ap_180
	word32 r8_181
	word32 r5_182
	byte VZN_183
	byte CZN_184
	byte CZ_185
	word32 r9_186
	bool N_187
	word32 r11_188
	word32 r10_189
	call Mem163[Mem163[sp_106 + 0x00000020:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_119,C_165,CVZN_117,CZ_124,CZN_136,fp_112,N_126,r0_135,r10_128,r11_127,r2_131,r3_114,r4_115,r5_121,r6_118,r7_130,r8_120,r9_125,sp_162,V_166,VZN_122,Z_116,ZN_164
		defs: ap_180,C_171,CVZN_178,CZ_185,CZN_184,fp_173,N_187,r0_174,r10_189,r11_188,r2_169,r3_175,r4_176,r5_182,r6_179,r7_168,r8_181,r9_186,sp_167,V_172,VZN_183,Z_177,ZN_170
	Mem191[sp_167 + 18:word16] = (word16) r0_174
	Mem194[sp_167 - 0x00000004:word32] = r7_168 + 2
	word32 r7_199
	word32 r2_200
	byte ZN_201
	bool C_202
	bool V_203
	word32 fp_204
	word32 r0_205
	word32 r3_206
	word32 r4_207
	bool Z_208
	byte CVZN_209
	word32 ap_211
	word32 r8_212
	byte VZN_214
	byte CZN_215
	byte CZ_216
	bool N_218
	word32 r11_219
	word32 r10_220
	word32 r9_2080
	word32 r5_2076
	word32 r6_2073
	word32 sp_198
	call Mem194[Mem194[sp_167 + 0x00000020:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_180,C_196,CVZN_178,CZ_185,CZN_184,fp_173,N_187,r0_174,r10_189,r11_188,r2_169,r3_175,r4_176,r5_182,r6_179,r7_168,r8_181,r9_186,sp_192,V_197,VZN_183,Z_177,ZN_195
		defs: ap_211,C_202,CVZN_209,CZ_216,CZN_215,fp_204,N_218,r0_205,r10_220,r11_219,r2_200,r3_206,r4_207,r5_213,r6_210,r7_199,r8_212,r9_217,sp_198,V_203,VZN_214,Z_208,ZN_201
	Mem222[sp_198 + 40:word16] = (word16) r0_205
	Mem227[sp_198 + 42:int16] = (int16) ((uint32) Mem222[sp_198 + 42:word16] - 0x00000004)
	branch Mem227[sp_198 + 40:word16] <=u Mem227[sp_198 + 42:word16] l00013E81
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00013E4E:
	Mem2008[sp_198 - 0x00000004:uint32] = 0x00000421
	Mem2011[sp_198 - 0x00000008:uint32] = (uint32) Mem2008[sp_198 + 0x00000026:word16]
	Mem2014[sp_198 - 0x0000000C:uint32] = (uint32) Mem2011[sp_198 + 0x00000024:word16]
	Mem2017[sp_198 - 0x00000010:uint32] = (uint32) Mem2014[sp_198 + 0x0000000E:word16]
	Mem2020[sp_198 - 0x00000014:word32] = r6_2073 + 3431
	Mem2023[sp_198 - 0x00000018:word32] = r5_2076 + 1515
	word32 sp_2027
	word32 r7_2028
	word32 r2_2029
	byte ZN_2030
	bool C_2031
	bool V_2032
	word32 fp_2033
	word32 r0_2034
	word32 r3_2035
	word32 r4_2036
	bool Z_2037
	byte CVZN_2038
	word32 r6_2039
	word32 ap_2040
	word32 r8_2041
	word32 r5_2042
	byte VZN_2043
	byte CZN_2044
	byte CZ_2045
	word32 r9_2046
	bool N_2047
	word32 r11_2048
	word32 r10_2049
	call Mem2023[r9_2080:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_211,C_2025,CVZN_209,CZ_229,CZN_228,fp_204,N_218,r0_225,r10_220,r11_219,r2_200,r3_206,r4_207,r5_213,r6_210,r7_223,r8_212,r9_217,sp_2021,V_2026,VZN_214,Z_208,ZN_2024
		defs: ap_2040,C_2031,CVZN_2038,CZ_2045,CZN_2044,fp_2033,N_2047,r0_2034,r10_2049,r11_2048,r2_2029,r3_2035,r4_2036,r5_2042,r6_2039,r7_2028,r8_2041,r9_2046,sp_2027,V_2032,VZN_2043,Z_2037,ZN_2030
	Mem2051[sp_2027 - 0x00000004:word32] = r0_2034
	Mem2054[sp_2027 - 0x00000008:word32] = r5_2042 + 1515
	Mem2056[sp_2027 - 0x0000000C:word32] = r5_2042
	word32 r2_2057 = Mem2056[r5_2042 + 0x0000C839:word32]
	word32 r7_2062
	word32 r2_2063
	byte ZN_2064
	bool C_2065
	bool V_2066
	word32 fp_2067
	word32 r0_2068
	word32 r3_2069
	word32 r4_2070
	bool Z_2071
	byte CVZN_2072
	word32 ap_2074
	word32 r8_2075
	byte VZN_2077
	byte CZN_2078
	byte CZ_2079
	bool N_2081
	word32 r11_2082
	word32 r10_2083
	call Mem2056[r2_2057:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2040,C_2059,CVZN_2038,CZ_2045,CZN_2044,fp_2033,N_2047,r0_2034,r10_2049,r11_2048,r2_2057,r3_2035,r4_2036,r5_2042,r6_2039,r7_2028,r8_2041,r9_2046,sp_2055,V_2060,VZN_2043,Z_2037,ZN_2058
		defs: ap_2074,C_2065,CVZN_2072,CZ_2079,CZN_2078,fp_2067,N_2081,r0_2068,r10_2083,r11_2082,r2_2063,r3_2069,r4_2070,r5_2076,r6_2073,r7_2062,r8_2075,r9_2080,sp_2061,V_2066,VZN_2077,Z_2071,ZN_2064
	Mem2085[sp_198 + 40:word16] = Mem2056[sp_198 + 42:word16]
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00013E81:
	word32 r2_250 = (uint32) Mem227[sp_198 + 18:word16]
	branch r2_250 >= 0x00000007 l00013E8D
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00013E8D:
	branch r2_250 > 0x0000000D l00013EA0
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00013EA0:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00013E90_1:
	word32 sp_1983
	word32 r7_1984
	word32 r2_1985
	byte ZN_1986
	bool C_1987
	bool V_1988
	word32 fp_1989
	word32 r0_1990
	word32 r3_1991
	word32 r4_1992
	bool Z_1993
	byte CVZN_1994
	word32 r6_1995
	word32 ap_1996
	word32 r8_1997
	word32 r5_1998
	byte VZN_1999
	byte CZN_2000
	byte CZ_2001
	word32 r9_2002
	bool N_2003
	word32 r11_2004
	word32 r10_2005
	call 0x00013E94 + (r2_250 - 0x00000007) * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_237,C_1980,CVZN_239,CZ_233,CZN_251,fp_244,N_252,r0_1978,r10_231,r11_248,r2_250,r3_242,r4_241,r5_235,r6_238,r7_246,r8_236,r9_232,sp_247,V_1981,VZN_234,Z_240,ZN_1979
		defs: ap_1996,C_1987,CVZN_1994,CZ_2001,CZN_2000,fp_1989,N_2003,r0_1990,r10_2005,r11_2004,r2_1985,r3_1991,r4_1992,r5_1998,r6_1995,r7_1984,r8_1997,r9_2002,sp_1983,V_1988,VZN_1999,Z_1993,ZN_1986
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

fn00014355_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -64(fp):r5 + 1515 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00013E8A:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014080:
	word32 sp_255 = sp_198 - 0x00000004
	Mem256[sp_255:word32] = 0x00000000
	Mem259[sp_255 - 0x00000004:uint32] = (uint32) Mem256[sp_255 + 0x00000028:word16]
	word32 r3_254 = r6_2073 + 3904
	Mem261[sp_255 - 0x00000008:word32] = r3_254
	word32 r4_262 = (uint32) Mem261[sp_255 + 0x00000016:word16]
	Mem264[sp_255 - 0x0000000C:word32] = r4_262
	Mem267[sp_255 - 0x00000010:word32] = r6_2073 + 3607
	Mem270[sp_255 - 0x00000014:word32] = r5_2076 + 1515
	word32 sp_274
	word32 r7_275
	word32 r2_276
	byte ZN_277
	bool C_278
	bool V_279
	word32 fp_280
	word32 r0_281
	word32 r3_282
	word32 r4_283
	bool Z_284
	byte CVZN_285
	word32 r6_286
	word32 ap_287
	word32 r8_288
	word32 r5_289
	byte VZN_290
	byte CZN_291
	byte CZ_292
	word32 r9_293
	bool N_294
	word32 r11_295
	word32 r10_296
	call Mem270[r9_2080:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_237,C_272,CVZN_239,CZ_233,CZN_251,fp_244,N_252,r0_243,r10_231,r11_248,r2_250,r3_254,r4_262,r5_235,r6_238,r7_246,r8_236,r9_232,sp_268,V_273,VZN_234,Z_240,ZN_271
		defs: ap_287,C_278,CVZN_285,CZ_292,CZN_291,fp_280,N_294,r0_281,r10_296,r11_295,r2_276,r3_282,r4_283,r5_289,r6_286,r7_275,r8_288,r9_293,sp_274,V_279,VZN_290,Z_284,ZN_277
	Mem298[sp_274 - 0x00000004:word32] = r0_281
	Mem301[sp_274 - 0x00000008:word32] = r5_289 + 1515
	Mem303[sp_274 - 0x0000000C:word32] = r5_289
	word32 r2_304 = Mem303[r5_289 + 0x0000C839:word32]
	word32 r2_310
	byte ZN_311
	bool C_312
	bool V_313
	word32 r0_315
	word32 r3_316
	word32 r4_317
	bool Z_318
	byte CVZN_319
	word32 ap_321
	byte VZN_324
	byte CZN_325
	byte CZ_326
	bool N_328
	word32 r11_329
	word32 r10_330
	call Mem303[r2_304:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_287,C_306,CVZN_285,CZ_292,CZN_291,fp_280,N_294,r0_281,r10_296,r11_295,r2_304,r3_282,r4_283,r5_289,r6_286,r7_275,r8_288,r9_293,sp_302,V_307,VZN_290,Z_284,ZN_305
		defs: ap_321,C_312,CVZN_319,CZ_326,CZN_325,fp_314,N_328,r0_315,r10_330,r11_329,r2_310,r3_316,r4_317,r5_323,r6_320,r7_309,r8_322,r9_327,sp_308,V_313,VZN_324,Z_318,ZN_311
	branch r4_317 >= 0x00000009 l000140BB
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000140BB:
	branch r4_317 != 0x00000009 l000140C0
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000140C0:
	branch r4_317 >= 0x00002605 l000140CC
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000140CC:
	branch r4_317 != 0x00002605 l000140D1
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000140D1:
	branch r4_317 >= 0x00004453 l000140DD
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000140DD:
	branch r4_317 != 0x00004453 l000140E2
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000140E2:
	branch r4_317 >= 0x00004B46 l000140EE
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000140EE:
	branch r4_317 != 0x00004B46 l000140F3
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000140F3:
	branch r4_317 >= 0x00004C41 l000140FF
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000140FF:
	branch r4_317 == 0x00004C41 l00014154
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014101:
	branch r4_317 >= 0x00004D49 l0001410D
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001410D:
	branch r4_317 != 0x00004D49 l00014112
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014112:
	branch r4_317 >= 0x00005356 l0001411E
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001411E:
	branch r4_317 != 0x00005356 l00014123
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014123:
	branch r4_317 >= 0x00005455 l0001412F
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001412F:
	branch r4_317 != 0x00005455 l00014134
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014134:
	branch r4_317 >= 0x00006542 l00014140
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014140:
	branch r4_317 != 0x00006542 l00014145
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014145:
	branch r4_317 != 0x0000FB4A l00014151
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014151:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001414E:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014504:
	word32 r0_1894 = (uint32) Mem303[sp_1 + 40:word16]
	branch r0_1894 >=u 0x00000004 l00014510
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014510:
	Mem1899[sp_1 - 0x00000004:word32] = 0x00000000
	Mem1902[sp_1 - 0x00000008:uint32] = (uint32) Mem1899[r7 + 3:byte]
	Mem1905[sp_1 - 0x0000000C:uint32] = (uint32) Mem1902[r7 + 2:byte]
	Mem1908[sp_1 - 0x00000010:uint32] = (uint32) Mem1905[r7 + 1:byte]
	Mem1911[sp_1 - 0x00000014:uint32] = (uint32) Mem1908[r7:byte]
	Mem1914[sp_1 - 0x00000018:word32] = r6 + 4591
	Mem1917[sp_1 - 0x0000001C:word32] = r5 + 1515
	word32 sp_1921
	word32 r7_1922
	word32 r2_1923
	byte ZN_1924
	bool C_1925
	bool V_1926
	word32 fp_1927
	word32 r0_1928
	word32 r3_1929
	word32 r4_1930
	bool Z_1931
	byte CVZN_1932
	word32 r6_1933
	word32 ap_1934
	word32 r8_1935
	word32 r5_1936
	byte VZN_1937
	byte CZN_1938
	byte CZ_1939
	word32 r9_1940
	bool N_1941
	word32 r11_1942
	word32 r10_1943
	call Mem1917[r9:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_321,C_1919,CVZN_1763,CZ_1760,CZN_1895,fp_314,N_1759,r0_1894,r10_330,r11_329,r2_331,r3_316,r4_317,r5_323,r6_320,r7_309,r8_322,r9_327,sp_1915,V_1920,VZN_1762,Z_1892,ZN_1918
		defs: ap_1934,C_1925,CVZN_1932,CZ_1939,CZN_1938,fp_1927,N_1941,r0_1928,r10_1943,r11_1942,r2_1923,r3_1929,r4_1930,r5_1936,r6_1933,r7_1922,r8_1935,r9_1940,sp_1921,V_1926,VZN_1937,Z_1931,ZN_1924
	Mem1945[sp_1921 - 0x00000004:word32] = r0_1928
	Mem1948[sp_1921 - 0x00000008:word32] = r5_1936 + 1515
	Mem1950[sp_1921 - 0x0000000C:word32] = r5_1936
	word32 r2_1951 = Mem1950[r5_1936 + 0x0000C839:word32]
	word32 r7_1956
	word32 r2_1957
	byte ZN_1958
	bool C_1959
	bool V_1960
	word32 fp_1961
	word32 r0_1962
	word32 r3_1963
	word32 r4_1964
	bool Z_1965
	byte CVZN_1966
	word32 r6_1967
	word32 ap_1968
	byte VZN_1971
	byte CZN_1972
	byte CZ_1973
	word32 r9_1974
	bool N_1975
	word32 r11_1976
	word32 r10_1977
	call Mem1950[r2_1951:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1934,C_1953,CVZN_1932,CZ_1939,CZN_1938,fp_1927,N_1941,r0_1928,r10_1943,r11_1942,r2_1951,r3_1929,r4_1930,r5_1936,r6_1933,r7_1922,r8_1935,r9_1940,sp_1949,V_1954,VZN_1937,Z_1931,ZN_1952
		defs: ap_1968,C_1959,CVZN_1966,CZ_1973,CZN_1972,fp_1961,N_1975,r0_1962,r10_1977,r11_1976,r2_1957,r3_1963,r4_1964,r5_1970,r6_1967,r7_1956,r8_1969,r9_1974,sp_1955,V_1960,VZN_1971,Z_1965,ZN_1958
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001450D:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014142:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000144AC:
	word32 r0_1764 = (uint32) Mem303[sp_1 + 40:word16]
	branch r0_1764 >=u 0x00000005 l000144B8
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000144B8:
	word32 r3_1774
	Mem1769[sp_1 - 0x00000004:word32] = 0x00000000
	word32 r2_1770 = (uint32) Mem1769[r7 + 4:byte]
	branch (r2_1770 & 0x00000001) == 0x00000000 l000144C8
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000144C8:
	r3_1774 = r6
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000144C1:
	r3_1774 = r8 + 214
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000144CB:
	Mem1776[sp_1 - 0x00000008:word32] = r3_1774
	Mem1778[sp_1 - 0x0000000C:word32] = r7
	word32 sp_1782
	word32 r7_1783
	word32 r2_1784
	byte ZN_1785
	bool C_1786
	bool V_1787
	word32 fp_1788
	word32 r0_1789
	word32 r3_1790
	word32 r4_1791
	bool Z_1792
	byte CVZN_1793
	word32 r6_1794
	word32 ap_1795
	word32 r8_1796
	word32 r5_1797
	byte VZN_1798
	byte CZN_1799
	byte CZ_1800
	word32 r9_1801
	bool N_1802
	word32 r11_1803
	word32 r10_1804
	call Mem1778[Mem1778[sp_1 + 0x0000001C:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_321,C_1780,CVZN_1763,CZ_1760,CZN_1765,fp_314,N_1759,r0_1764,r10_330,r11_329,r2_1770,r3_1774,r4_317,r5_323,r6_320,r7_309,r8_322,r9_327,sp_1777,V_1781,VZN_1762,Z_1758,ZN_1779
		defs: ap_1795,C_1786,CVZN_1793,CZ_1800,CZN_1799,fp_1788,N_1802,r0_1789,r10_1804,r11_1803,r2_1784,r3_1790,r4_1791,r5_1797,r6_1794,r7_1783,r8_1796,r9_1801,sp_1782,V_1787,VZN_1798,Z_1792,ZN_1785
	Mem1806[sp_1782 - 0x00000004:word32] = r0_1789
	Mem1809[sp_1782 - 0x00000008:word32] = r6_1794 + 4512
	Mem1812[sp_1782 - 0x0000000C:word32] = r5_1797 + 1515
	word32 sp_1816
	word32 r7_1817
	word32 r2_1818
	byte ZN_1819
	bool C_1820
	bool V_1821
	word32 fp_1822
	word32 r0_1823
	word32 r3_1824
	word32 r4_1825
	bool Z_1826
	byte CVZN_1827
	word32 r6_1828
	word32 ap_1829
	word32 r8_1830
	word32 r5_1831
	byte VZN_1832
	byte CZN_1833
	byte CZ_1834
	word32 r9_1835
	bool N_1836
	word32 r11_1837
	word32 r10_1838
	call Mem1812[r9_1801:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1795,C_1814,CVZN_1793,CZ_1800,CZN_1799,fp_1788,N_1802,r0_1789,r10_1804,r11_1803,r2_1784,r3_1790,r4_1791,r5_1797,r6_1794,r7_1783,r8_1796,r9_1801,sp_1810,V_1815,VZN_1798,Z_1792,ZN_1813
		defs: ap_1829,C_1820,CVZN_1827,CZ_1834,CZN_1833,fp_1822,N_1836,r0_1823,r10_1838,r11_1837,r2_1818,r3_1824,r4_1825,r5_1831,r6_1828,r7_1817,r8_1830,r9_1835,sp_1816,V_1821,VZN_1832,Z_1826,ZN_1819
	Mem1840[sp_1816 - 0x00000004:word32] = r0_1823
	Mem1843[sp_1816 - 0x00000008:word32] = r5_1831 + 1515
	Mem1845[sp_1816 - 0x0000000C:word32] = r5_1831
	word32 r2_1846 = Mem1845[r5_1831 + 0x0000C839:word32]
	word32 r7_1851
	word32 r2_1852
	byte ZN_1853
	bool C_1854
	bool V_1855
	word32 fp_1856
	word32 r0_1857
	word32 r3_1858
	word32 r4_1859
	bool Z_1860
	byte CVZN_1861
	word32 r6_1862
	word32 ap_1863
	byte VZN_1866
	byte CZN_1867
	byte CZ_1868
	word32 r9_1869
	bool N_1870
	word32 r11_1871
	word32 r10_1872
	call Mem1845[r2_1846:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1829,C_1848,CVZN_1827,CZ_1834,CZN_1833,fp_1822,N_1836,r0_1823,r10_1838,r11_1837,r2_1846,r3_1824,r4_1825,r5_1831,r6_1828,r7_1817,r8_1830,r9_1835,sp_1844,V_1849,VZN_1832,Z_1826,ZN_1847
		defs: ap_1863,C_1854,CVZN_1861,CZ_1868,CZN_1867,fp_1856,N_1870,r0_1857,r10_1872,r11_1871,r2_1852,r3_1858,r4_1859,r5_1865,r6_1862,r7_1851,r8_1864,r9_1869,sp_1850,V_1855,VZN_1866,Z_1860,ZN_1853
	branch ((uint32) Mem1845[r7_1851 + 4:byte] & 0x00000001) == 0x00000000 l000144FC
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000144FC:
	Mem1878[Mem1878[ap_1863 + 4:word32]:word32] = 0x00000000
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000144F9:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000144B5:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001413D:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014131:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001432C:
	word32 r0_1709 = (uint32) Mem303[sp_1 + 40:word16]
	branch r0_1709 >=u 0x00000001 l00014338
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014338:
	Mem1716[fp + -154:byte] = 0x00
	r4 = 0x00000000
	word32 r2_1717 = (uint32) Mem1716[r7:byte]
	branch (r2_1717 & 0x00000001) == 0x00000000 l00014355
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014347:
	Mem1723[sp_1 - 0x00000004:word32] = r6 + 4380
	Mem1726[sp_1 - 0x00000008:word32] = fp + -154
	word32 r2_1732
	byte ZN_1733
	bool C_1734
	bool V_1735
	word32 r0_1737
	word32 r3_1738
	word32 r4_1739
	bool Z_1740
	byte CVZN_1741
	word32 ap_1743
	byte VZN_1746
	byte CZN_1747
	byte CZ_1748
	bool N_1750
	word32 r11_1751
	word32 r10_1752
	call Mem1726[Mem1726[sp_1 + 0x00000018:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_321,C_1728,CVZN_1708,CZ_1705,CZN_1710,fp_314,N_1704,r0_1709,r10_330,r11_329,r2_1717,r3_316,r4_1713,r5_323,r6_320,r7_309,r8_322,r9_327,sp_1724,V_1729,VZN_1707,Z_1703,ZN_1727
		defs: ap_1743,C_1734,CVZN_1741,CZ_1748,CZN_1747,fp_1736,N_1750,r0_1737,r10_1752,r11_1751,r2_1732,r3_1738,r4_1739,r5_1745,r6_1742,r7_1731,r8_1744,r9_1749,sp_1730,V_1735,VZN_1746,Z_1740,ZN_1733
	r4 = 0x00000001
// DataOut: ap fp r0 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:0x00000000 r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014335:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001412C:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014120:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014544:
	branch (uint32) Mem303[sp_1 + 40:word16] >=u 0x00000005 l00014550
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014550:
	Mem1695[sp_1 - 0x00000004:word32] = 0x00000000
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001454D:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001411B:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001410F:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000141DC:
	word32 r10_1174 = (uint32) Mem303[sp_1 + 40:word16]
	branch r10_1174 >=u 0x00000008 l000141E8
// DataOut: ap fp r0 r10 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000141E8:
	Mem1180[sp_1 - 0x00000004:word32] = r7 + 0x00000004
	word32 sp_1182
	word32 r7_1183
	word32 r2_1184
	byte ZN_1185
	bool C_1186
	bool V_1187
	word32 fp_1188
	word32 r0_1189
	word32 r3_1190
	word32 r4_1191
	bool Z_1192
	byte CVZN_1193
	word32 r6_1194
	word32 ap_1195
	word32 r8_1196
	word32 r5_1197
	byte VZN_1198
	byte CZN_1199
	byte CZ_1200
	word32 r9_1201
	bool N_1202
	word32 r11_1203
	word32 r10_1204
	call Mem1180[Mem1180[sp_1 + 0x00000020:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_321,C_1176,CVZN_1181,CZ_1170,CZN_1175,fp_314,N_1169,r0_315,r10_1174,r11_329,r2_331,r3_316,r4_317,r5_323,r6_320,r7_309,r8_322,r9_327,sp_1178,V_1177,VZN_1172,Z_1168,ZN_1167
		defs: ap_1195,C_1186,CVZN_1193,CZ_1200,CZN_1199,fp_1188,N_1202,r0_1189,r10_1204,r11_1203,r2_1184,r3_1190,r4_1191,r5_1197,r6_1194,r7_1183,r8_1196,r9_1201,sp_1182,V_1187,VZN_1198,Z_1192,ZN_1185
	Mem1209[fp_1188 + -74:byte] = 0x00
	word32 r4_1206 = (uint32) (word16) r0_1189 & ~0xFFFFFFF8
	branch r4_1206 <= 0x00000003 l00014209
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014206:
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:fp + -74 r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014209:
	word32 r3_1250
	Mem1214[sp_1182 - 0x00000004:word32] = 0x00000004
	Mem1217[sp_1182 - 0x00000008:word32] = r8_1196 + 105
	Mem1219[sp_1182 - 0x0000000C:word32] = r7_1183
	word32 r2_1225
	byte ZN_1226
	bool C_1227
	bool V_1228
	word32 r0_1230
	word32 r3_1231
	word32 r4_1232
	bool Z_1233
	byte CVZN_1234
	word32 r6_1235
	word32 ap_1236
	word32 r8_1237
	word32 r5_1238
	byte VZN_1239
	byte CZN_1240
	byte CZ_1241
	word32 r9_1242
	bool N_1243
	word32 r11_1244
	word32 r10_1245
	word32 fp_1229
	word32 r7_1224
	word32 sp_1223
	call Mem1219[Mem1219[sp_1182 + 0x0000002C:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1195,C_1221,CVZN_1193,CZ_1200,CZN_1210,fp_1188,N_1202,r0_1189,r10_1204,r11_1203,r2_1207,r3_1190,r4_1206,r5_1197,r6_1194,r7_1183,r8_1196,r9_1201,sp_1218,V_1222,VZN_1198,Z_1192,ZN_1220
		defs: ap_1236,C_1227,CVZN_1234,CZ_1241,CZN_1240,fp_1229,N_1243,r0_1230,r10_1245,r11_1244,r2_1225,r3_1231,r4_1232,r5_1238,r6_1235,r7_1224,r8_1237,r9_1242,sp_1223,V_1228,VZN_1239,Z_1233,ZN_1226
	branch r0_1230 != 0x00000000 l00014220
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:fp + -74 r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014220:
	Mem1365[sp_1223 - 0x00000004:word32] = 0x00000004
	Mem1368[sp_1223 - 0x00000008:word32] = r8_1237 + 114
	Mem1370[sp_1223 - 0x0000000C:word32] = r7_1224
	word32 r2_1376
	byte ZN_1377
	bool C_1378
	bool V_1379
	word32 r0_1381
	word32 r3_1382
	word32 r4_1383
	bool Z_1384
	byte CVZN_1385
	word32 r6_1386
	word32 ap_1387
	word32 r8_1388
	word32 r5_1389
	byte VZN_1390
	byte CZN_1391
	byte CZ_1392
	word32 r9_1393
	bool N_1394
	word32 r11_1395
	word32 r10_1396
	call Mem1370[Mem1370[sp_1223 + 0x0000002C:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1236,C_1372,CVZN_1234,CZ_1241,CZN_1240,fp_1229,N_1243,r0_1230,r10_1245,r11_1244,r2_1225,r3_1231,r4_1232,r5_1238,r6_1235,r7_1224,r8_1237,r9_1242,sp_1369,V_1373,VZN_1239,Z_1247,ZN_1371
		defs: ap_1387,C_1378,CVZN_1385,CZ_1392,CZN_1391,fp_1380,N_1394,r0_1381,r10_1396,r11_1395,r2_1376,r3_1382,r4_1383,r5_1389,r6_1386,r7_1375,r8_1388,r9_1393,sp_1374,V_1379,VZN_1390,Z_1384,ZN_1377
	branch r0_1381 != 0x00000000 l00014238
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:fp + -74 r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014238:
	Mem1406[sp_1223 - 0x00000004:word32] = 0x00000004
	Mem1409[sp_1223 - 0x00000008:word32] = r8_1388 + 126
	Mem1411[sp_1223 - 0x0000000C:word32] = r7_1224
	word32 r2_1417
	byte ZN_1418
	bool C_1419
	bool V_1420
	word32 r0_1422
	word32 r3_1423
	word32 r4_1424
	bool Z_1425
	byte CVZN_1426
	word32 r6_1427
	word32 ap_1428
	word32 r8_1429
	word32 r5_1430
	byte VZN_1431
	byte CZN_1432
	byte CZ_1433
	word32 r9_1434
	bool N_1435
	word32 r11_1436
	word32 r10_1437
	call Mem1411[Mem1411[sp_1223 + 0x0000002C:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1387,C_1413,CVZN_1385,CZ_1392,CZN_1391,fp_1380,N_1394,r0_1381,r10_1396,r11_1395,r2_1376,r3_1382,r4_1383,r5_1389,r6_1386,r7_1375,r8_1388,r9_1393,sp_1410,V_1414,VZN_1390,Z_1398,ZN_1412
		defs: ap_1428,C_1419,CVZN_1426,CZ_1433,CZN_1432,fp_1421,N_1435,r0_1422,r10_1437,r11_1436,r2_1417,r3_1423,r4_1424,r5_1430,r6_1427,r7_1416,r8_1429,r9_1434,sp_1415,V_1420,VZN_1431,Z_1425,ZN_1418
	branch r0_1422 != 0x00000000 l00014250
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:fp + -74 r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014250:
	Mem1447[sp_1223 - 0x00000004:word32] = 0x00000004
	Mem1450[sp_1223 - 0x00000008:word32] = r8_1429 + 138
	Mem1452[sp_1223 - 0x0000000C:word32] = r7_1224
	word32 r2_1458
	byte ZN_1459
	bool C_1460
	bool V_1461
	word32 r0_1463
	word32 r3_1464
	word32 r4_1465
	bool Z_1466
	byte CVZN_1467
	word32 r6_1468
	word32 ap_1469
	word32 r8_1470
	word32 r5_1471
	byte VZN_1472
	byte CZN_1473
	byte CZ_1474
	word32 r9_1475
	bool N_1476
	word32 r11_1477
	word32 r10_1478
	call Mem1452[Mem1452[sp_1223 + 0x0000002C:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1428,C_1454,CVZN_1426,CZ_1433,CZN_1432,fp_1421,N_1435,r0_1422,r10_1437,r11_1436,r2_1417,r3_1423,r4_1424,r5_1430,r6_1427,r7_1416,r8_1429,r9_1434,sp_1451,V_1455,VZN_1431,Z_1439,ZN_1453
		defs: ap_1469,C_1460,CVZN_1467,CZ_1474,CZN_1473,fp_1462,N_1476,r0_1463,r10_1478,r11_1477,r2_1458,r3_1464,r4_1465,r5_1471,r6_1468,r7_1457,r8_1470,r9_1475,sp_1456,V_1461,VZN_1472,Z_1466,ZN_1459
	branch r0_1463 != 0x00000000 l00014268
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:fp + -74 r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014268:
	Mem1488[sp_1223 - 0x00000004:word32] = 0x00000004
	Mem1491[sp_1223 - 0x00000008:word32] = r8_1470 + 150
	Mem1493[sp_1223 - 0x0000000C:word32] = r7_1224
	word32 r2_1499
	byte ZN_1500
	bool C_1501
	bool V_1502
	word32 r0_1504
	word32 r3_1505
	word32 r4_1506
	bool Z_1507
	byte CVZN_1508
	word32 r6_1509
	word32 ap_1510
	word32 r8_1511
	word32 r5_1512
	byte VZN_1513
	byte CZN_1514
	byte CZ_1515
	word32 r9_1516
	bool N_1517
	word32 r11_1518
	word32 r10_1519
	call Mem1493[Mem1493[sp_1223 + 0x0000002C:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1469,C_1495,CVZN_1467,CZ_1474,CZN_1473,fp_1462,N_1476,r0_1463,r10_1478,r11_1477,r2_1458,r3_1464,r4_1465,r5_1471,r6_1468,r7_1457,r8_1470,r9_1475,sp_1492,V_1496,VZN_1472,Z_1480,ZN_1494
		defs: ap_1510,C_1501,CVZN_1508,CZ_1515,CZN_1514,fp_1503,N_1517,r0_1504,r10_1519,r11_1518,r2_1499,r3_1505,r4_1506,r5_1512,r6_1509,r7_1498,r8_1511,r9_1516,sp_1497,V_1502,VZN_1513,Z_1507,ZN_1500
	branch r0_1504 != 0x00000000 l00014280
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:fp + -74 r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014280:
	Mem1529[sp_1223 - 0x00000004:word32] = 0x00000004
	Mem1532[sp_1223 - 0x00000008:word32] = r8_1511 + 162
	Mem1534[sp_1223 - 0x0000000C:word32] = r7_1224
	word32 r2_1540
	byte ZN_1541
	bool C_1542
	bool V_1543
	word32 r0_1545
	word32 r3_1546
	word32 r4_1547
	bool Z_1548
	byte CVZN_1549
	word32 r6_1550
	word32 ap_1551
	word32 r8_1552
	word32 r5_1553
	byte VZN_1554
	byte CZN_1555
	byte CZ_1556
	word32 r9_1557
	bool N_1558
	word32 r11_1559
	word32 r10_1560
	call Mem1534[Mem1534[sp_1223 + 0x0000002C:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1510,C_1536,CVZN_1508,CZ_1515,CZN_1514,fp_1503,N_1517,r0_1504,r10_1519,r11_1518,r2_1499,r3_1505,r4_1506,r5_1512,r6_1509,r7_1498,r8_1511,r9_1516,sp_1533,V_1537,VZN_1513,Z_1521,ZN_1535
		defs: ap_1551,C_1542,CVZN_1549,CZ_1556,CZN_1555,fp_1544,N_1558,r0_1545,r10_1560,r11_1559,r2_1540,r3_1546,r4_1547,r5_1553,r6_1550,r7_1539,r8_1552,r9_1557,sp_1538,V_1543,VZN_1554,Z_1548,ZN_1541
	branch r0_1545 != 0x00000000 l00014298
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:fp + -74 r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014298:
	Mem1570[sp_1223 - 0x00000004:word32] = 0x00000004
	Mem1573[sp_1223 - 0x00000008:word32] = r8_1552 + 174
	Mem1575[sp_1223 - 0x0000000C:word32] = r7_1224
	word32 r2_1581
	byte ZN_1582
	bool C_1583
	bool V_1584
	word32 r0_1586
	word32 r3_1587
	word32 r4_1588
	bool Z_1589
	byte CVZN_1590
	word32 r6_1591
	word32 ap_1592
	word32 r8_1593
	word32 r5_1594
	byte VZN_1595
	byte CZN_1596
	byte CZ_1597
	word32 r9_1598
	bool N_1599
	word32 r11_1600
	word32 r10_1601
	call Mem1575[Mem1575[sp_1223 + 0x0000002C:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1551,C_1577,CVZN_1549,CZ_1556,CZN_1555,fp_1544,N_1558,r0_1545,r10_1560,r11_1559,r2_1540,r3_1546,r4_1547,r5_1553,r6_1550,r7_1539,r8_1552,r9_1557,sp_1574,V_1578,VZN_1554,Z_1562,ZN_1576
		defs: ap_1592,C_1583,CVZN_1590,CZ_1597,CZN_1596,fp_1585,N_1599,r0_1586,r10_1601,r11_1600,r2_1581,r3_1587,r4_1588,r5_1594,r6_1591,r7_1580,r8_1593,r9_1598,sp_1579,V_1584,VZN_1595,Z_1589,ZN_1582
	branch r0_1586 != 0x00000000 l000142B0
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:fp + -74 r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000142B0:
	Mem1611[sp_1223 - 0x00000004:word32] = 0x00000004
	Mem1614[sp_1223 - 0x00000008:word32] = r8_1593 + 186
	Mem1616[sp_1223 - 0x0000000C:word32] = r7_1224
	word32 r2_1622
	byte ZN_1623
	bool C_1624
	bool V_1625
	word32 r0_1627
	word32 r3_1628
	word32 r4_1629
	bool Z_1630
	byte CVZN_1631
	word32 r6_1632
	word32 ap_1633
	word32 r8_1634
	word32 r5_1635
	byte VZN_1636
	byte CZN_1637
	byte CZ_1638
	word32 r9_1639
	bool N_1640
	word32 r11_1641
	word32 r10_1642
	call Mem1616[Mem1616[sp_1223 + 0x0000002C:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1592,C_1618,CVZN_1590,CZ_1597,CZN_1596,fp_1585,N_1599,r0_1586,r10_1601,r11_1600,r2_1581,r3_1587,r4_1588,r5_1594,r6_1591,r7_1580,r8_1593,r9_1598,sp_1615,V_1619,VZN_1595,Z_1603,ZN_1617
		defs: ap_1633,C_1624,CVZN_1631,CZ_1638,CZN_1637,fp_1626,N_1640,r0_1627,r10_1642,r11_1641,r2_1622,r3_1628,r4_1629,r5_1635,r6_1632,r7_1621,r8_1634,r9_1639,sp_1620,V_1625,VZN_1636,Z_1630,ZN_1623
	branch r0_1627 != 0x00000000 l000142F0
// DataOut: ap fp r0 r10 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:fp + -74 r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000142F0:
	r3_1250 = r8_1634 + 199
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:fp + -74 r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000142C0:
	r3_1250 = r8_1634 + 191
	branch r10_1642 <u 0x00000010 l000142F5
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:fp + -74 r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000142CA:
	Mem1652[fp_1229 + -74:byte] = 0x20
	Mem1654[fp_1229 + -73:byte] = 0x28
	Mem1656[sp_1223 - 0x00000004:word32] = 0x00000004
	Mem1659[sp_1223 - 0x00000008:word32] = r7_1224 + 0x0000000C
	Mem1663[sp_1223 - 0x0000000C:word32] = fp_1229 + 0xFFFFFFB8
	fn000192C2()
	Mem1666[fp_1229 + -68:byte] = 0x29
	Mem1668[fp_1229 + -67:byte] = 0x00
	sp_1223 = sp_1223 - 0x0000000C
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:fp + -74 r0:<invalid> r7:<invalid> r3:r8 + 191 r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000142A8:
	r3_1250 = r8_1593 + 179
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:fp + -74 r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014290:
	r3_1250 = r8_1552 + 167
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:fp + -74 r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014278:
	r3_1250 = r8_1511 + 155
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:fp + -74 r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014260:
	r3_1250 = r8_1470 + 143
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:fp + -74 r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014247:
	r3_1250 = r8_1429 + 131
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:fp + -74 r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001422F:
	r3_1250 = r8_1388 + 119
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:fp + -74 r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014218:
	r3_1250 = r8_1237 + 110
// DataOut: ap fp r0 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:fp + -74 r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000142F5:
	word32 sp_1254 = sp_1223 - 0x00000004
	Mem1255[sp_1254:word32] = 0x00000000
	Mem1258[sp_1254 - 0x00000004:word32] = fp_1229 + -74
	Mem1260[sp_1254 - 0x00000008:word32] = r3_1250
	Mem1263[sp_1254 - 0x0000000C:word32] = r7_1224 + 0x00000006
	word32 sp_1265
	word32 r7_1266
	word32 r2_1267
	byte ZN_1268
	bool C_1269
	bool V_1270
	word32 fp_1271
	word32 r0_1272
	word32 r3_1273
	word32 r4_1274
	bool Z_1275
	byte CVZN_1276
	word32 r6_1277
	word32 ap_1278
	word32 r8_1279
	word32 r5_1280
	byte VZN_1281
	byte CZN_1282
	byte CZ_1283
	word32 r9_1284
	bool N_1285
	word32 r11_1286
	word32 r10_1287
	call Mem1263[Mem1263[sp_1254 + 0x00000024:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1236,C_1248,CVZN_1264,CZ_1241,CZN_1240,fp_1251,N_1243,r0_1230,r10_1245,r11_1244,r2_1225,r3_1250,r4_1232,r5_1238,r6_1235,r7_1252,r8_1237,r9_1242,sp_1261,V_1249,VZN_1239,Z_1247,ZN_1246
		defs: ap_1278,C_1269,CVZN_1276,CZ_1283,CZN_1282,fp_1271,N_1285,r0_1272,r10_1287,r11_1286,r2_1267,r3_1273,r4_1274,r5_1280,r6_1277,r7_1266,r8_1279,r9_1284,sp_1265,V_1270,VZN_1281,Z_1275,ZN_1268
	Mem1290[sp_1265 - 0x00000004:uint32] = (uint32) (word16) r0_1272
	Mem1293[sp_1265 - 0x00000008:word32] = Mem1290[r6_1277 + 4164 + r4_1274 * 4:word32]
	Mem1296[sp_1265 - 0x0000000C:word32] = r6_1277 + 4043
	Mem1299[sp_1265 - 0x00000010:word32] = r5_1280 + 1515
	word32 sp_1303
	word32 r7_1304
	word32 r2_1305
	byte ZN_1306
	bool C_1307
	bool V_1308
	word32 fp_1309
	word32 r0_1310
	word32 r3_1311
	word32 r4_1312
	bool Z_1313
	byte CVZN_1314
	word32 r6_1315
	word32 ap_1316
	word32 r8_1317
	word32 r5_1318
	byte VZN_1319
	byte CZN_1320
	byte CZ_1321
	word32 r9_1322
	bool N_1323
	word32 r11_1324
	word32 r10_1325
	call Mem1299[r9_1284:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1278,C_1301,CVZN_1276,CZ_1283,CZN_1282,fp_1271,N_1285,r0_1272,r10_1287,r11_1286,r2_1267,r3_1273,r4_1274,r5_1280,r6_1277,r7_1266,r8_1279,r9_1284,sp_1297,V_1302,VZN_1281,Z_1275,ZN_1300
		defs: ap_1316,C_1307,CVZN_1314,CZ_1321,CZN_1320,fp_1309,N_1323,r0_1310,r10_1325,r11_1324,r2_1305,r3_1311,r4_1312,r5_1318,r6_1315,r7_1304,r8_1317,r9_1322,sp_1303,V_1308,VZN_1319,Z_1313,ZN_1306
	Mem1327[sp_1303 - 0x00000004:word32] = r0_1310
	Mem1330[sp_1303 - 0x00000008:word32] = r5_1318 + 1515
	Mem1332[sp_1303 - 0x0000000C:word32] = r5_1318
	word32 r2_1333 = Mem1332[r5_1318 + 0x0000C839:word32]
	word32 r7_1338
	word32 r2_1339
	byte ZN_1340
	bool C_1341
	bool V_1342
	word32 fp_1343
	word32 r0_1344
	word32 r3_1345
	word32 r4_1346
	bool Z_1347
	byte CVZN_1348
	word32 r6_1349
	word32 ap_1350
	byte VZN_1353
	byte CZN_1354
	byte CZ_1355
	word32 r9_1356
	bool N_1357
	word32 r11_1358
	word32 r10_1359
	call Mem1332[r2_1333:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1316,C_1335,CVZN_1314,CZ_1321,CZN_1320,fp_1309,N_1323,r0_1310,r10_1325,r11_1324,r2_1333,r3_1311,r4_1312,r5_1318,r6_1315,r7_1304,r8_1317,r9_1322,sp_1331,V_1336,VZN_1319,Z_1313,ZN_1334
		defs: ap_1350,C_1341,CVZN_1348,CZ_1355,CZN_1354,fp_1343,N_1357,r0_1344,r10_1359,r11_1358,r2_1339,r3_1345,r4_1346,r5_1352,r6_1349,r7_1338,r8_1351,r9_1356,sp_1337,V_1342,VZN_1353,Z_1347,ZN_1340
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:fp + -74 r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000141E5:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r10:<invalid> r11:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001410A:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000140FC:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000140F0:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014588:
	branch (uint32) Mem303[sp_1 + 40:word16] <u 0x00000013 l000145DC
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014591:
	word32 r2_1034 = 0x00000000
// DataOut: ap fp r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014594:
	word32 sp_1045 = sp_1 - 0x00000004
	Mem1047[sp_1045:uint32] = (uint32) Mem303[r7 + (0x0000000F - r2_1034):byte]
	Mem1050[sp_1045 - 0x00000004:word32] = r8 + 217
	word32 r0_1051 = r2_1034 << 1
	Mem1054[sp_1045 - 0x00000008:word32] = fp + -188 + r0_1051 * 4
	word32 r2_1060
	byte ZN_1061
	bool C_1062
	bool V_1063
	word32 r0_1065
	word32 r3_1066
	word32 r4_1067
	bool Z_1068
	byte CVZN_1069
	word32 r6_1070
	word32 ap_1071
	word32 r5_1073
	byte VZN_1074
	byte CZN_1075
	byte CZ_1076
	word32 r9_1077
	bool N_1078
	word32 r11_1079
	word32 r10_1080
	call Mem1054[r9:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_321,C_1056,CVZN_1029,CZ_1026,CZN_1031,fp_1040,N_1036,r0_1051,r10_330,r11_329,r2_1041,r3_316,r4_317,r5_323,r6_320,r7_1042,r8_1039,r9_327,sp_1052,V_1057,VZN_1028,Z_1035,ZN_1055
		defs: ap_1071,C_1062,CVZN_1069,CZ_1076,CZN_1075,fp_1064,N_1078,r0_1065,r10_1080,r11_1079,r2_1060,r3_1066,r4_1067,r5_1073,r6_1070,r7_1059,r8_1072,r9_1077,sp_1058,V_1063,VZN_1074,Z_1068,ZN_1061
	r2_1034 = r2_1060 + 0x00000001
	branch r2_1060 <= 0xFFFFFFF2 l00014594
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000145B0:
	Mem1084[fp + -156:byte] = 0x00
	Mem1086[sp_1 - 0x00000004:word32] = 0x00000000
	Mem1089[sp_1 - 0x00000008:word32] = fp + -188
	Mem1092[sp_1 - 0x0000000C:word32] = r6_1070 + 4687
	Mem1095[sp_1 - 0x00000010:word32] = r5_1073 + 1515
	word32 sp_1099
	word32 r7_1100
	word32 r2_1101
	byte ZN_1102
	bool C_1103
	bool V_1104
	word32 fp_1105
	word32 r0_1106
	word32 r3_1107
	word32 r4_1108
	bool Z_1109
	byte CVZN_1110
	word32 r6_1111
	word32 ap_1112
	word32 r8_1113
	word32 r5_1114
	byte VZN_1115
	byte CZN_1116
	byte CZ_1117
	word32 r9_1118
	bool N_1119
	word32 r11_1120
	word32 r10_1121
	call Mem1095[r9_1077:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1071,C_1097,CVZN_1082,CZ_1076,CZN_1075,fp_1064,N_1078,r0_1065,r10_1080,r11_1079,r2_1081,r3_1066,r4_1067,r5_1073,r6_1070,r7_1059,r8_1072,r9_1077,sp_1093,V_1098,VZN_1074,Z_1068,ZN_1096
		defs: ap_1112,C_1103,CVZN_1110,CZ_1117,CZN_1116,fp_1105,N_1119,r0_1106,r10_1121,r11_1120,r2_1101,r3_1107,r4_1108,r5_1114,r6_1111,r7_1100,r8_1113,r9_1118,sp_1099,V_1104,VZN_1115,Z_1109,ZN_1102
	Mem1123[sp_1099 - 0x00000004:word32] = r0_1106
	Mem1126[sp_1099 - 0x00000008:word32] = r5_1114 + 1515
	Mem1128[sp_1099 - 0x0000000C:word32] = r5_1114
	word32 r2_1129 = Mem1128[r5_1114 + 0x0000C839:word32]
	word32 r7_1134
	word32 r2_1135
	byte ZN_1136
	bool C_1137
	bool V_1138
	word32 fp_1139
	word32 r0_1140
	word32 r3_1141
	word32 r4_1142
	bool Z_1143
	byte CVZN_1144
	word32 r6_1145
	word32 ap_1146
	byte VZN_1149
	byte CZN_1150
	byte CZ_1151
	word32 r9_1152
	bool N_1153
	word32 r11_1154
	word32 r10_1155
	call Mem1128[r2_1129:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1112,C_1131,CVZN_1110,CZ_1117,CZN_1116,fp_1105,N_1119,r0_1106,r10_1121,r11_1120,r2_1129,r3_1107,r4_1108,r5_1114,r6_1111,r7_1100,r8_1113,r9_1118,sp_1127,V_1132,VZN_1115,Z_1109,ZN_1130
		defs: ap_1146,C_1137,CVZN_1144,CZ_1151,CZN_1150,fp_1139,N_1153,r0_1140,r10_1155,r11_1154,r2_1135,r3_1141,r4_1142,r5_1148,r6_1145,r7_1134,r8_1147,r9_1152,sp_1133,V_1138,VZN_1149,Z_1143,ZN_1136
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000140EB:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000140DF:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000141A0:
	word32 r0_913 = (uint32) Mem303[sp_1 + 40:word16]
	branch r0_913 >=u 0x00000004 l000141AC
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000141AC:
	Mem918[sp_1 - 0x00000004:word32] = 0x00000000
	Mem920[sp_1 - 0x00000008:word32] = r7
	word32 sp_924
	word32 r7_925
	word32 r2_926
	byte ZN_927
	bool C_928
	bool V_929
	word32 fp_930
	word32 r0_931
	word32 r3_932
	word32 r4_933
	bool Z_934
	byte CVZN_935
	word32 r6_936
	word32 ap_937
	word32 r8_938
	word32 r5_939
	byte VZN_940
	byte CZN_941
	byte CZ_942
	word32 r9_943
	bool N_944
	word32 r11_945
	word32 r10_946
	call Mem920[Mem920[sp_1 + 0x0000001C:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_321,C_922,CVZN_912,CZ_909,CZN_914,fp_314,N_908,r0_913,r10_330,r11_329,r2_331,r3_316,r4_317,r5_323,r6_320,r7_309,r8_322,r9_327,sp_919,V_923,VZN_911,Z_907,ZN_921
		defs: ap_937,C_928,CVZN_935,CZ_942,CZN_941,fp_930,N_944,r0_931,r10_946,r11_945,r2_926,r3_932,r4_933,r5_939,r6_936,r7_925,r8_938,r9_943,sp_924,V_929,VZN_940,Z_934,ZN_927
	Mem948[sp_924 - 0x00000004:word32] = r0_931
	Mem951[sp_924 - 0x00000008:word32] = r6_936 + 4257
	Mem954[sp_924 - 0x0000000C:word32] = r5_939 + 1515
	word32 sp_958
	word32 r7_959
	word32 r2_960
	byte ZN_961
	bool C_962
	bool V_963
	word32 fp_964
	word32 r0_965
	word32 r3_966
	word32 r4_967
	bool Z_968
	byte CVZN_969
	word32 r6_970
	word32 ap_971
	word32 r8_972
	word32 r5_973
	byte VZN_974
	byte CZN_975
	byte CZ_976
	word32 r9_977
	bool N_978
	word32 r11_979
	word32 r10_980
	call Mem954[r9_943:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_937,C_956,CVZN_935,CZ_942,CZN_941,fp_930,N_944,r0_931,r10_946,r11_945,r2_926,r3_932,r4_933,r5_939,r6_936,r7_925,r8_938,r9_943,sp_952,V_957,VZN_940,Z_934,ZN_955
		defs: ap_971,C_962,CVZN_969,CZ_976,CZN_975,fp_964,N_978,r0_965,r10_980,r11_979,r2_960,r3_966,r4_967,r5_973,r6_970,r7_959,r8_972,r9_977,sp_958,V_963,VZN_974,Z_968,ZN_961
	Mem982[sp_958 - 0x00000004:word32] = r0_965
	Mem985[sp_958 - 0x00000008:word32] = r5_973 + 1515
	Mem987[sp_958 - 0x0000000C:word32] = r5_973
	word32 r2_988 = Mem987[r5_973 + 0x0000C839:word32]
	word32 r7_993
	word32 r2_994
	byte ZN_995
	bool C_996
	bool V_997
	word32 fp_998
	word32 r0_999
	word32 r3_1000
	word32 r4_1001
	bool Z_1002
	byte CVZN_1003
	word32 r6_1004
	word32 ap_1005
	byte VZN_1008
	byte CZN_1009
	byte CZ_1010
	word32 r9_1011
	bool N_1012
	word32 r11_1013
	word32 r10_1014
	call Mem987[r2_988:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_971,C_990,CVZN_969,CZ_976,CZN_975,fp_964,N_978,r0_965,r10_980,r11_979,r2_988,r3_966,r4_967,r5_973,r6_970,r7_959,r8_972,r9_977,sp_986,V_991,VZN_974,Z_968,ZN_989
		defs: ap_1005,C_996,CVZN_1003,CZ_1010,CZN_1009,fp_998,N_1012,r0_999,r10_1014,r11_1013,r2_994,r3_1000,r4_1001,r5_1007,r6_1004,r7_993,r8_1006,r9_1011,sp_992,V_997,VZN_1008,Z_1002,ZN_995
	Mem1016[Mem1016[ap_1005 + 4:word32]:word32] = 0x00000000
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000141A9:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000140DA:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000140CE:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014404:
	word32 r3_745 = (uint32) Mem303[sp_1 + 40:word16]
	branch r3_745 >=u 0x00000005 l00014410
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014410:
	Mem750[sp_1 - 0x00000004:word32] = 0x00000004
	Mem753[sp_1 - 0x00000008:word32] = r8 + 209
	Mem755[sp_1 - 0x0000000C:word32] = r7
	word32 r7_760
	word32 r2_761
	byte ZN_762
	bool C_763
	bool V_764
	word32 fp_765
	word32 r0_766
	word32 r3_767
	word32 r4_768
	bool Z_769
	byte CVZN_770
	word32 r6_771
	word32 ap_772
	byte VZN_775
	byte CZN_776
	byte CZ_777
	word32 r9_778
	bool N_779
	word32 r11_780
	word32 r10_781
	call Mem755[Mem755[sp_1 + 0x0000002C:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_321,C_757,CVZN_744,CZ_741,CZN_746,fp_314,N_740,r0_315,r10_330,r11_329,r2_331,r3_745,r4_317,r5_323,r6_320,r7_309,r8_322,r9_327,sp_754,V_758,VZN_743,Z_739,ZN_756
		defs: ap_772,C_763,CVZN_770,CZ_777,CZN_776,fp_765,N_779,r0_766,r10_781,r11_780,r2_761,r3_767,r4_768,r5_774,r6_771,r7_760,r8_773,r9_778,sp_759,V_764,VZN_775,Z_769,ZN_762
	branch r0_766 == 0x00000000 l00014423
// DataOut: ap fp r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014423:
	word32 r4_786 = (uint32) Mem755[r7_760 + 4:byte]
	branch r3_767 >=u r4_786 + 0x0000000D l00014433
// DataOut: ap fp r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014433:
	word32 r0_792 = (uint32) Mem755[r7_760 + (r4_786 + 0x00000005):byte]
	Mem794[fp_765 + -155:int8] = (int8) r0_792
	Mem796[r7_760:byte] = 0x00
	Mem798[sp_1 - 0x00000004:word32] = 0x00000000
	Mem802[sp_1 - 0x00000008:uint32] = (uint32) Mem798[r7_760 + (r4_786 + 0x0000000C):byte]
	Mem806[sp_1 - 0x0000000C:uint32] = (uint32) Mem802[r7_760 + (r4_786 + 0x0000000B):byte]
	Mem810[sp_1 - 0x00000010:uint32] = (uint32) Mem806[r7_760 + (r4_786 + 0x0000000A):byte]
	Mem814[sp_1 - 0x00000014:uint32] = (uint32) Mem810[r7_760 + (r4_786 + 0x00000009):byte]
	Mem818[sp_1 - 0x00000018:uint32] = (uint32) Mem814[r7_760 + (r4_786 + 0x00000008):byte]
	Mem822[sp_1 - 0x0000001C:uint32] = (uint32) Mem818[r7_760 + (r4_786 + 0x00000007):byte]
	Mem826[sp_1 - 0x00000020:uint32] = (uint32) Mem822[r7_760 + (r4_786 + 0x00000006):byte]
	Mem829[sp_1 - 0x00000024:int32] = (int32) Mem826[fp_765 + -155:int8]
	Mem832[sp_1 - 0x00000028:word32] = r7_760 + 0x00000005
	Mem835[sp_1 - 0x0000002C:word32] = r6_771 + 4409
	Mem838[sp_1 - 0x00000030:word32] = r5 + 1515
	word32 sp_842
	word32 r7_843
	word32 r2_844
	byte ZN_845
	bool C_846
	bool V_847
	word32 fp_848
	word32 r0_849
	word32 r3_850
	word32 r4_851
	bool Z_852
	byte CVZN_853
	word32 r6_854
	word32 ap_855
	word32 r8_856
	word32 r5_857
	byte VZN_858
	byte CZN_859
	byte CZ_860
	word32 r9_861
	bool N_862
	word32 r11_863
	word32 r10_864
	call Mem838[r9_778:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_772,C_840,CVZN_770,CZ_777,CZN_788,fp_765,N_779,r0_792,r10_781,r11_780,r2_819,r3_791,r4_823,r5_774,r6_771,r7_760,r8_773,r9_778,sp_836,V_841,VZN_775,Z_783,ZN_839
		defs: ap_855,C_846,CVZN_853,CZ_860,CZN_859,fp_848,N_862,r0_849,r10_864,r11_863,r2_844,r3_850,r4_851,r5_857,r6_854,r7_843,r8_856,r9_861,sp_842,V_847,VZN_858,Z_852,ZN_845
	Mem866[sp_842 - 0x00000004:word32] = r0_849
	Mem869[sp_842 - 0x00000008:word32] = r5_857 + 1515
	Mem871[sp_842 - 0x0000000C:word32] = r5_857
	word32 r2_872 = Mem871[r5_857 + 0x0000C839:word32]
	word32 r7_877
	word32 r2_878
	byte ZN_879
	bool C_880
	bool V_881
	word32 fp_882
	word32 r0_883
	word32 r3_884
	word32 r4_885
	bool Z_886
	byte CVZN_887
	word32 r6_888
	word32 ap_889
	byte VZN_892
	byte CZN_893
	byte CZ_894
	word32 r9_895
	bool N_896
	word32 r11_897
	word32 r10_898
	call Mem871[r2_872:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_855,C_874,CVZN_853,CZ_860,CZN_859,fp_848,N_862,r0_849,r10_864,r11_863,r2_872,r3_850,r4_851,r5_857,r6_854,r7_843,r8_856,r9_861,sp_870,V_875,VZN_858,Z_852,ZN_873
		defs: ap_889,C_880,CVZN_887,CZ_894,CZN_893,fp_882,N_896,r0_883,r10_898,r11_897,r2_878,r3_884,r4_885,r5_891,r6_888,r7_877,r8_890,r9_895,sp_876,V_881,VZN_892,Z_886,ZN_879
	Mem900[r7_877:byte] = Mem871[fp_882 + -155:byte]
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014430:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014420:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001440D:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000140C9:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000140BD:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014154:
	branch (uint32) Mem303[sp_1 + 40:word16] >=u 0x00000004 l00014160
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014160:
	word32 r0_621 = (uint32) Mem303[sp_1 + 18:word16]
	branch r0_621 != 0x00000009 l00014170
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014170:
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014169:
// DataOut: ap fp r0 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014175:
	Mem626[sp_1 - 0x00000004:word32] = 0x00000000
	Mem628[sp_1 - 0x00000008:word32] = r7
	word32 sp_632
	word32 r7_633
	word32 r2_634
	byte ZN_635
	bool C_636
	bool V_637
	word32 fp_638
	word32 r0_639
	word32 r3_640
	word32 r4_641
	bool Z_642
	byte CVZN_643
	word32 r6_644
	word32 ap_645
	word32 r8_646
	word32 r5_647
	byte VZN_648
	byte CZN_649
	byte CZ_650
	word32 r9_651
	bool N_652
	word32 r11_653
	word32 r10_654
	call Mem628[Mem628[sp_1 + 0x0000001C:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_321,C_630,CVZN_614,CZ_612,CZN_622,fp_314,N_611,r0_621,r10_330,r11_329,r2_331,r3_316,r4_317,r5_323,r6_320,r7_309,r8_322,r9_327,sp_627,V_631,VZN_613,Z_623,ZN_629
		defs: ap_645,C_636,CVZN_643,CZ_650,CZN_649,fp_638,N_652,r0_639,r10_654,r11_653,r2_634,r3_640,r4_641,r5_647,r6_644,r7_633,r8_646,r9_651,sp_632,V_637,VZN_648,Z_642,ZN_635
	Mem656[sp_632 - 0x00000004:word32] = r0_639
	Mem658[sp_632 - 0x00000008:word32] = r3_640
	Mem661[sp_632 - 0x0000000C:word32] = r5_647 + 1515
	word32 sp_665
	word32 r7_666
	word32 r2_667
	byte ZN_668
	bool C_669
	bool V_670
	word32 fp_671
	word32 r0_672
	word32 r3_673
	word32 r4_674
	bool Z_675
	byte CVZN_676
	word32 r6_677
	word32 ap_678
	word32 r8_679
	word32 r5_680
	byte VZN_681
	byte CZN_682
	byte CZ_683
	word32 r9_684
	bool N_685
	word32 r11_686
	word32 r10_687
	call Mem661[r9_651:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_645,C_663,CVZN_643,CZ_650,CZN_649,fp_638,N_652,r0_639,r10_654,r11_653,r2_634,r3_640,r4_641,r5_647,r6_644,r7_633,r8_646,r9_651,sp_659,V_664,VZN_648,Z_642,ZN_662
		defs: ap_678,C_669,CVZN_676,CZ_683,CZN_682,fp_671,N_685,r0_672,r10_687,r11_686,r2_667,r3_673,r4_674,r5_680,r6_677,r7_666,r8_679,r9_684,sp_665,V_670,VZN_681,Z_675,ZN_668
	Mem689[sp_665 - 0x00000004:word32] = r0_672
	Mem692[sp_665 - 0x00000008:word32] = r5_680 + 1515
	Mem694[sp_665 - 0x0000000C:word32] = r5_680
	word32 r2_695 = Mem694[r5_680 + 0x0000C839:word32]
	word32 r7_700
	word32 r2_701
	byte ZN_702
	bool C_703
	bool V_704
	word32 fp_705
	word32 r0_706
	word32 r3_707
	word32 r4_708
	bool Z_709
	byte CVZN_710
	word32 r6_711
	word32 ap_712
	byte VZN_715
	byte CZN_716
	byte CZ_717
	word32 r9_718
	bool N_719
	word32 r11_720
	word32 r10_721
	call Mem694[r2_695:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_678,C_697,CVZN_676,CZ_683,CZN_682,fp_671,N_685,r0_672,r10_687,r11_686,r2_695,r3_673,r4_674,r5_680,r6_677,r7_666,r8_679,r9_684,sp_693,V_698,VZN_681,Z_675,ZN_696
		defs: ap_712,C_703,CVZN_710,CZ_717,CZN_716,fp_705,N_719,r0_706,r10_721,r11_720,r2_701,r3_707,r4_708,r5_714,r6_711,r7_700,r8_713,r9_718,sp_699,V_704,VZN_715,Z_709,ZN_702
	Mem723[Mem723[ap_712 + 4:word32]:word32] = 0x00000000
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001415D:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000140B8:
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000145DC:
	word32 r2_347 = (uint32) Mem303[sp_1 + 40:word16]
	branch r2_347 != 0x00000000 l000145E5
// DataOut: ap fp r0 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000145E5:
	word32 r7_370
	word32 r6_363
	word32 r11_372
	word32 r9_357
	branch r2_347 >u 0x00000018 l00014610
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014610:
	Mem539[sp_1 - 0x00000004:word32] = 0x00000000
	Mem542[sp_1 - 0x00000008:word32] = r6 + 4725
	Mem545[sp_1 - 0x0000000C:word32] = r5 + 1515
	word32 sp_549
	word32 r7_550
	word32 r2_551
	byte ZN_552
	bool C_553
	bool V_554
	word32 fp_555
	word32 r0_556
	word32 r3_557
	word32 r4_558
	bool Z_559
	byte CVZN_560
	word32 r6_561
	word32 ap_562
	word32 r8_563
	word32 r5_564
	byte VZN_565
	byte CZN_566
	byte CZ_567
	word32 r9_568
	bool N_569
	word32 r11_570
	word32 r10_571
	call Mem545[r9:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_321,C_547,CVZN_344,CZ_353,CZN_352,fp_314,N_341,r0_345,r10_330,r11_329,r2_347,r3_316,r4_317,r5_323,r6_320,r7_309,r8_322,r9_327,sp_543,V_548,VZN_343,Z_349,ZN_546
		defs: ap_562,C_553,CVZN_560,CZ_567,CZN_566,fp_555,N_569,r0_556,r10_571,r11_570,r2_551,r3_557,r4_558,r5_564,r6_561,r7_550,r8_563,r9_568,sp_549,V_554,VZN_565,Z_559,ZN_552
	Mem573[sp_549 - 0x00000004:word32] = r0_556
	Mem576[sp_549 - 0x00000008:word32] = r5_564 + 1515
	Mem578[sp_549 - 0x0000000C:word32] = r5_564
	word32 r2_579 = Mem578[r5_564 + 0x0000C839:word32]
	word32 r2_585
	byte ZN_586
	bool C_587
	bool V_588
	word32 fp_589
	word32 r0_590
	word32 r3_591
	word32 r4_592
	bool Z_593
	byte CVZN_594
	word32 ap_596
	byte VZN_599
	byte CZN_600
	byte CZ_601
	bool N_603
	word32 r10_605
	call Mem578[r2_579:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_562,C_581,CVZN_560,CZ_567,CZN_566,fp_555,N_569,r0_556,r10_571,r11_570,r2_579,r3_557,r4_558,r5_564,r6_561,r7_550,r8_563,r9_568,sp_577,V_582,VZN_565,Z_559,ZN_580
		defs: ap_596,C_587,CVZN_594,CZ_601,CZN_600,fp_589,N_603,r0_590,r10_605,r11_604,r2_585,r3_591,r4_592,r5_598,r6_595,r7_584,r8_597,r9_602,sp_583,V_588,VZN_599,Z_593,ZN_586
	Mem607[sp_1 + 38:word16] = 0x0014
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000145EA:
	Mem466[sp_1 - 0x00000004:word32] = 0x00000000
	Mem469[sp_1 - 0x00000008:word32] = r6 + 4752
	Mem472[sp_1 - 0x0000000C:word32] = r5 + 1515
	word32 sp_476
	word32 r7_477
	word32 r2_478
	byte ZN_479
	bool C_480
	bool V_481
	word32 fp_482
	word32 r0_483
	word32 r3_484
	word32 r4_485
	bool Z_486
	byte CVZN_487
	word32 r6_488
	word32 ap_489
	word32 r8_490
	word32 r5_491
	byte VZN_492
	byte CZN_493
	byte CZ_494
	word32 r9_495
	bool N_496
	word32 r11_497
	word32 r10_498
	call Mem472[r9:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_321,C_474,CVZN_344,CZ_353,CZN_352,fp_314,N_341,r0_345,r10_330,r11_329,r2_347,r3_316,r4_317,r5_323,r6_320,r7_309,r8_322,r9_327,sp_470,V_475,VZN_343,Z_349,ZN_473
		defs: ap_489,C_480,CVZN_487,CZ_494,CZN_493,fp_482,N_496,r0_483,r10_498,r11_497,r2_478,r3_484,r4_485,r5_491,r6_488,r7_477,r8_490,r9_495,sp_476,V_481,VZN_492,Z_486,ZN_479
	Mem500[sp_476 - 0x00000004:word32] = r0_483
	Mem503[sp_476 - 0x00000008:word32] = r5_491 + 1515
	Mem505[sp_476 - 0x0000000C:word32] = r5_491
	word32 r2_506 = Mem505[r5_491 + 0x0000C839:word32]
	word32 r2_512
	byte ZN_513
	bool C_514
	bool V_515
	word32 fp_516
	word32 r0_517
	word32 r3_518
	word32 r4_519
	bool Z_520
	byte CVZN_521
	word32 ap_523
	byte VZN_526
	byte CZN_527
	byte CZ_528
	bool N_530
	word32 r10_532
	call Mem505[r2_506:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_489,C_508,CVZN_487,CZ_494,CZN_493,fp_482,N_496,r0_483,r10_498,r11_497,r2_506,r3_484,r4_485,r5_491,r6_488,r7_477,r8_490,r9_495,sp_504,V_509,VZN_492,Z_486,ZN_507
		defs: ap_523,C_514,CVZN_521,CZ_528,CZN_527,fp_516,N_530,r0_517,r10_532,r11_531,r2_512,r3_518,r4_519,r5_525,r6_522,r7_511,r8_524,r9_529,sp_510,V_515,VZN_526,Z_520,ZN_513
	Mem534[sp_1 + 38:word16] = Mem505[sp_1 + 40:word16]
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l00014633:
	word32 r11_375 = DPB(r11_372, 0x0000, 0)
	branch Mem303[sp_1 + 38:word16] == 0x0000 l0001466A
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001463A:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l0001463C:
	word32 sp_388 = sp_1 - 0x00000004
	Mem389[sp_388:word32] = 0x00000000
	word32 r0_390 = (uint32) (word16) r11_375
	Mem393[sp_388 - 0x00000004:uint32] = (uint32) Mem389[r7_370 + r0_390:byte]
	Mem396[sp_388 - 0x00000008:word32] = r6_363 + 4758
	Mem399[sp_388 - 0x0000000C:word32] = r5 + 1515
	word32 sp_403
	word32 r7_404
	word32 r2_405
	byte ZN_406
	bool C_407
	bool V_408
	word32 fp_409
	word32 r0_410
	word32 r3_411
	word32 r4_412
	bool Z_413
	byte CVZN_414
	word32 r6_415
	word32 ap_416
	word32 r8_417
	word32 r5_418
	byte VZN_419
	byte CZN_420
	byte CZ_421
	word32 r9_422
	bool N_423
	word32 r11_424
	word32 r10_425
	call Mem399[r9_357:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_362,C_401,CVZN_364,CZ_358,CZN_373,fp_368,N_356,r0_390,r10_355,r11_387,r2_369,r3_366,r4_365,r5_383,r6_384,r7_385,r8_361,r9_357,sp_397,V_402,VZN_359,Z_377,ZN_400
		defs: ap_416,C_407,CVZN_414,CZ_421,CZN_420,fp_409,N_423,r0_410,r10_425,r11_424,r2_405,r3_411,r4_412,r5_418,r6_415,r7_404,r8_417,r9_422,sp_403,V_408,VZN_419,Z_413,ZN_406
	Mem427[sp_403 - 0x00000004:word32] = r0_410
	Mem430[sp_403 - 0x00000008:word32] = r5_418 + 1515
	Mem432[sp_403 - 0x0000000C:word32] = r5_418
	word32 r0_433 = Mem432[r5_418 + 0x0000C839:word32]
	word32 r2_439
	byte ZN_440
	bool C_441
	bool V_442
	word32 fp_443
	word32 r0_444
	word32 r3_445
	word32 r4_446
	bool Z_447
	byte CVZN_448
	word32 ap_450
	byte VZN_453
	byte CZN_454
	byte CZ_455
	word32 r9_456
	bool N_457
	word32 r11_458
	word32 r10_459
	call Mem432[r0_433:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_416,C_435,CVZN_414,CZ_421,CZN_420,fp_409,N_423,r0_433,r10_425,r11_424,r2_405,r3_411,r4_412,r5_418,r6_415,r7_404,r8_417,r9_422,sp_431,V_436,VZN_419,Z_413,ZN_434
		defs: ap_450,C_441,CVZN_448,CZ_455,CZN_454,fp_443,N_457,r0_444,r10_459,r11_458,r2_439,r3_445,r4_446,r5_452,r6_449,r7_438,r8_451,r9_456,sp_437,V_442,VZN_453,Z_447,ZN_440
	word16 v61_460 = (word16) r11_458 + 0x0001
	r11_375 = DPB(r11_458, v61_460, 0)
	branch v61_460 <u Mem432[sp_1 + 38:word16] l0001463C
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>

l000145E2:
// DataOut: ap fp r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r7:<invalid> r3:r6 + 3904 r4:<invalid> r11:<invalid> r10:<invalid> -60(fp):r5 -56(fp):r5 + 1515 -52(fp):<invalid> -48(fp):r5 + 1515 -44(fp):r6 + 3431 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 16(fp):<invalid> 18(fp):<invalid> 26(fp):<invalid>



void fn00014812(word32 r4, word32 r5, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r4 r5 r8
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00014812_entry:
// DataOut: fp r4 r5 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00014812:
	word32 r3_10
	branch (uint32) Mem0[r4 + 0x0000C65E:word16] >=u 0x0000000B l00014844
// DataOut: fp r4 r5 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00014844:
	r3_10 = DPB(r3, 0x000B, 0)
// DataOut: fp r3 r4 r5 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 r11:0x00000000 r2:<invalid>
// LocalsOut: fp(32)

l00014838:
	r3_10 = DPB(r3, Mem0[r4 + 0x0000C65E:word16], 0)
// DataOut: fp r3 r4 r5 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 r11:0x00000000 r2:<invalid>
// LocalsOut: fp(32)

l00014847:
	word16 v19_15 = Mem0[Mem0[r4 + 1511:word32] + 12:word16]
	fn000192BE()
	word32 ap_21 = (uint32) (word16) r3_10
	branch ap_21 != 0x00000006 l000148AC
// DataOut: ap fp r10 r4 r5 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 r11:0x00000000 r2:<invalid> r3:<invalid>
// Terminates process

l000148AC:
	branch ap_21 != 0x00000008 l000148D0
// DataOut: ap fp r10 r4 r5 r8 sp
// DataOut (flags): 
// SymbolicIn: -48(fp):fp + -37 -44(fp):<invalid>

l000148D0:
	branch ap_21 <u 0x0000000B l000148EA
// DataOut: fp r10 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: -48(fp):fp + -37 -44(fp):<invalid>

l000148D5:
	Mem140[fp - 0x00000034:uint32] = (uint32) Mem0[r4 + 0x0000C65E:word16]
	Mem144[fp - 0x00000038:word32] = r5 + 236
	Mem147[fp - 0x0000003C:word32] = fp + -36
	fn000192D2()
// DataOut: fp r10 r4
// DataOut (flags): 
// SymbolicIn: -48(fp):fp + -37 -44(fp):<invalid>
// Terminates process

l000148B1:
	Mem131[fp + -34:byte] = Mem0[r8 + 5320 + (uint32) ((word16) ((uint32) Mem0[r4 + 0x0000C65C:word16] >> 1 & ~0xFFFFFFFC)):byte]
// DataOut: fp r10 r4
// DataOut (flags): 
// SymbolicIn: -48(fp):fp + -37 -44(fp):<invalid>

l00014875:
	word32 r3_114
	branch ((uint32) Mem0[r4 + 0x0000C65C:word16] & 0x00000002) == 0x00000000 l00014888
// DataOut: fp r10 r4
// DataOut (flags): 
// SymbolicIn: -48(fp):fp + -37 -44(fp):<invalid>

l00014888:
	r3_114 = DPB(r3_10, 0x34, 0)
// DataOut: fp r10 r3 r4
// DataOut (flags): 
// SymbolicIn: r2:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l00014880:
	r3_114 = DPB(r3_10, 0x38, 0)
// DataOut: fp r10 r3 r4
// DataOut (flags): 
// SymbolicIn: r2:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l0001488B:
	word32 r2_104
	Mem92[fp + -36:byte] = (byte) r3_114
	word32 r2_93 = (uint32) Mem92[r4 + 0x0000C65C:word16]
	branch (r2_93 & 0x00000004) == 0x00000000 l000148A0
// DataOut: fp r10 r4
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r3:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l000148A0:
	r2_104 = DPB(r2_93, 0x32, 0)
// DataOut: fp r10 r2 r4
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r3:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l0001489A:
	r2_104 = DPB(r2_93, 0x33, 0)
// DataOut: fp r10 r2 r4
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r3:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l000148A3:
	Mem99[fp + -34:byte] = (byte) r2_104
// DataOut: fp r10 r4
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r3:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l000148EA:
	word32 ap_41 = 0x00000000
	word32 r2_42 = fp + -32
// DataOut: ap fp r10 r2 r4
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r3:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l000148F0:
	Mem49[r2_42:byte] = 0x20
	r2_42 = r2_42 + 0x00000001
	ap_41 = ap_41 + 0x00000001
	branch ap_41 <= 0x0000000E l000148F0
// DataOut: ap fp r10 r2 r4
// DataOut (flags): 
// SymbolicIn: r2:<invalid> ap:<invalid> r3:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l000148F9:
	Mem54[fp + -17:byte] = 0x00
	word32 r0_59 = (uint32) v19_15
	branch r0_59 > 0x0000000F l0001492E
// DataOut:
// DataOut (flags): 
// SymbolicIn: r2:<invalid> ap:<invalid> r3:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l0001492E:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r2:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r3:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l0001490C_1:
	word32 sp_64
	byte CVZN_65
	byte ZN_66
	bool C_67
	bool V_68
	word32 r11_69
	bool Z_70
	bool N_71
	word32 r4_72
	word32 r2_73
	byte CZN_74
	word32 r3_75
	word32 r6_76
	word32 r10_77
	word32 r9_78
	word32 ap_79
	word32 r8_80
	word32 fp_81
	byte VZN_82
	word32 r7_83
	word32 r0_84
	word32 r5_85
	call 0x00014910 + r0_59 * 0x00000002 (retsize: 4;)
		uses: ap_51,C_61,CVZN_52,CZN_38,dwLoc2C_26,dwLoc30_30,fp,r0_59,r10_17,r11_3,r2_55,r3_37,r4,r6_13,r7_58,r8,r9_20,sp_40,V_62,Z_39,ZN_60
		defs: ap_79,C_67,CVZN_65,CZN_74,fp_81,N_71,r0_84,r10_77,r11_69,r2_73,r3_75,r4_72,r5_85,r6_76,r7_83,r8_80,r9_78,sp_64,V_68,VZN_82,Z_70,ZN_66
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r2:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r3:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

fn00014812_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r2:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> sp:fp r3:<invalid> -48(fp):fp + -37 -44(fp):<invalid>



void fn00015106(word32 r3, word32 r4, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r3 r4
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00015106_entry:
// DataOut: ap fp r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00015106:
	word32 r1_6 = (uint32) Mem0[Mem0[ap + 4:word32]:word16]
	int16 v13_11 = (int16) ((r1_6 >> 9 & ~0xFFFFFF80) + 0x00000050)
	word32 r2_39 = (uint32) (int16) (r1_6 >> 5 & ~0xFFFFFFF0)
	branch r2_39 == 0x00000000 l00015189
// DataOut: ap fp r10 r11 r2 r3 r4 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00015184:
	branch r2_39 <=u 0x0000000C l000151A0
// DataOut: ap fp r10 r11 r2 r3 r4 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid>
// LocalsOut: fp(32)

l000151A0:
// DataOut: ap fp r10 r11 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid>
// LocalsOut: fp(32)

l00015189:
	fn000192D2()
// DataOut: ap fp r10 r11 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid>
// LocalsOut: fp(32)

l000151AC:
	branch Mem0[r4 + 36:word32] <= 0x00000009 l000151DC
// DataOut: ap fp r10 r11 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: r5:<invalid> sp:fp - 0x00000008 r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>
// LocalsOut: fp(32)

l000151DC:
	branch Mem0[r4 + 72:word32] == 0x00000000 l0001520C
// DataOut: ap fp r10 r11 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: r5:<invalid> sp:fp - 0x00000008 r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>
// LocalsOut: fp(32)

l0001520C:
	word32 r0_152 = (uint32) v13_11
	branch 0x00000064 == 0x00000000 l00015234
// DataOut: ap fp r0 r1 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: r5:<invalid> sp:fp - 0x00000008 r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>
// LocalsOut: fp(32)

l0001521E:
	branch 0x00000063 == 0x00000000 l00015239
// DataOut: ap fp r0 r1 r3 r5 r6 r7 r8 r9
// DataOut (flags): ZN
// SymbolicIn: r5:<invalid> sp:fp - 0x00000010 r0:<invalid> r1:0x00000000 r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> -20(fp):fp + -8 -16(fp):<invalid> -12(fp):<invalid>
// LocalsOut: fp(32)

l00015223:
	branch true l00015234
// DataOut: ap fp r0 r1 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: r5:<invalid> sp:fp - 0x00000010 r0:<invalid> r1:0x00000000 r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> -20(fp):fp + -8 -16(fp):<invalid> -12(fp):<invalid>
// LocalsOut: fp(32)

l00015234:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r5:<invalid> sp:fp - 0x00000010 r0:<invalid> r1:0x00000000 r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> -20(fp):fp + -8 -16(fp):<invalid> -12(fp):<invalid>

l00015225:
	branch 0x00000064 == r0_152 l00015239
// DataOut: ap fp r0 r1 r3 r5 r6 r7 r8 r9
// DataOut (flags): CZ
// SymbolicIn: r5:<invalid> sp:fp - 0x00000010 r0:<invalid> r1:0x00000000 r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> -20(fp):fp + -8 -16(fp):<invalid> -12(fp):<invalid>
// LocalsOut: fp(32)

l0001522A:
	branch 0x00000064 >u r0_152 l0001522F
// DataOut: ap fp r0 r1 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: r5:<invalid> sp:fp - 0x00000010 r0:<invalid> r1:0x00000000 r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> -20(fp):fp + -8 -16(fp):<invalid> -12(fp):<invalid>
// LocalsOut: fp(32)

l0001522C:
// DataOut: ap fp r0 r1 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: r5:<invalid> sp:fp - 0x00000010 r0:<invalid> r1:0x00000000 r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> -20(fp):fp + -8 -16(fp):<invalid> -12(fp):<invalid>
// LocalsOut: fp(32)

l0001522F:
// DataOut: ap fp r1 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: r5:<invalid> sp:fp - 0x00000010 r0:<invalid> r1:<invalid> r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> -20(fp):fp + -8 -16(fp):<invalid> -12(fp):<invalid>
// LocalsOut: fp(32)

l00015239:
	fn000192D2()
// DataOut: ap fp r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: r5:<invalid> sp:fp - 0x00000010 r0:<invalid> r1:<invalid> r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> -20(fp):fp + -8 -16(fp):<invalid> -12(fp):<invalid>
// Terminates process

l000151E1:
	fn000192D2()
// DataOut: ap fp r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: r5:<invalid> sp:fp - 0x00000008 r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>
// Terminates process

l000151B2:
	fn000192D2()
// DataOut: ap fp r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: r5:<invalid> sp:fp - 0x00000008 r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>
// Terminates process

l0001524F:
	return
// DataOut: ap fp r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid>

fn00015106_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r0:<invalid> sp:fp - 0x00000004 fp:<invalid> ap:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid>



word32 fn00015256(word32 r0, word32 r2, word32 r4, word32 r6, word32 ap, word32 fp, word32 pc, ptr32 & r2Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r2 r4 r6
// LiveOut: ap fp r0 r2 r4 r6 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved:
fn00015256_entry:
	*r2Out = r2
// DataOut: ap fp pc r0 r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00015256:
	word32 r0_101
	word32 r5_10
	word32 v8_5 = Mem0[r2 + 0x0000C5FB:word32] - 0x00000001
	Mem6[r2 + 0x0000C5FB:word32] = v8_5
	branch v8_5 < 0x00000000 l0001527C
// DataOut: ap fp pc r0 r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001527C:
	word32 r3_168
	word32 r5_169
	word32 sp_172
	r0_101 = fn0000D69A(r0, r4, r6, ap, fp, pc, out r2, out r3_168, out r5_169, out ap, out fp, out sp_172)
	r5_10 = r0_101
// DataOut: ap fp pc r0 r2 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l00015268:
	r0_101 = Mem6[r2 + 0x0000C5F7:word32]
	Mem157[r2 + 0x0000C5F7:word32] = Mem6[r2 + 0x0000C5F7:word32] + 0x00000001
	r5_10 = (uint32) Mem157[r0_101:byte]
// DataOut: ap fp pc r0 r2 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l00015286:
	word32 r7_108 = r5_10 + 0x00000001
	word32 r4_102
	*r4Out = 0x00000000
// DataOut: ap fp pc r0 r2 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r1:<invalid>

l0001528C:
	word32 r5_139
	word32 v16_44 = Mem6[r2 + 0x0000C5FB:word32] - 0x00000001
	Mem45[r2 + 0x0000C5FB:word32] = v16_44
	branch v16_44 < 0x00000000 l000152A8
// DataOut: ap fp pc r0 r2 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r6:<invalid> r1:<invalid>

l000152A8:
	word32 r3_145
	word32 r5_146
	word32 sp_149
	r5_139 = fn0000D69A(r0_101, r4_102, r6, ap, fp, pc, out r2, out r3_145, out r5_146, out ap, out fp, out sp_149)
// DataOut: ap fp pc r2 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r6:<invalid> r1:<invalid>

l00015294:
	word32 r0_136 = Mem45[r2 + 0x0000C5F7:word32]
	Mem138[r2 + 0x0000C5F7:word32] = Mem45[r2 + 0x0000C5F7:word32] + 0x00000001
	r5_139 = (uint32) Mem138[r0_136:byte]
// DataOut: ap fp pc r2 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r6:<invalid> r1:<invalid>

l000152B2:
	word32 r6_56 = r5_139 & ~0xFFFFFFF0
	word32 r0_59 = (uint32) SLICE(r5_139 & ~0xFFFFFF0F, ui28, 4)
	r6 = r6_56 + 0x00000001
	*r6Out = r6
	word32 r3_100 = r0_59 + 0x00000001
	branch r0_59 + 0x00000001 + r4_102 <=u Mem45[ap + 8:word32] l000152DE
// DataOut: ap fp pc r2 r3 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r6:<invalid>

l000152DE:
	word32 r1_95 = Mem45[ap + 4:word32]
// DataOut: ap fp pc r1 r2 r3 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r2:<invalid> r1:<invalid>

l000152E4:
	Mem104[r1_95:word32] = r6_56 + 0x00000001
	r0_101 = r4_102
	r4_102 = r4_102 + 0x00000001
	*r4Out = r4_102
	r3_100 = r3_100 - 0x00000001
	branch r3_100 != 0x00000000 l000152E4
// DataOut: ap fp pc r0 r1 r2 r3 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r2:<invalid>

l000152F1:
	r7_108 = r7_108 - 0x00000001
	branch r7_108 != 0x00000000 l0001528C
// DataOut: ap fp pc r0 r2 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r2:<invalid>

l000152F5:
	word32 r3_116
	branch r4_102 == Mem104[ap + 8:word32] l00015300
// DataOut: fp pc r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r2:<invalid>

l00015300:
	r3_116 = DPB(r3_100, 0x00, 0)
// DataOut: fp pc r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r2:<invalid>

l000152FB:
	r3_116 = DPB(r3_100, 0x04, 0)
// DataOut: fp pc r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r2:<invalid>

l00015302:
	word32 sp_122 = fp - 0x00000004
	*spOut = sp_122
	word32 fp_123
	*fpOut = Mem104[sp_122 + 0x00000010:word32]
	word32 ap_124
	*apOut = Mem104[sp_122 + 0x0000000C:word32]
	return (int32) (int8) r3_116
// DataOut: ap fp pc r0 r2 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r2:<invalid>

l000152DA:
	word32 sp_91 = fp - 0x00000004
	*spOut = sp_91
	word32 fp_92
	*fpOut = Mem45[sp_91 + 0x00000010:word32]
	word32 ap_93
	*apOut = Mem45[sp_91 + 0x0000000C:word32]
	return 0x00000004
// DataOut: ap fp pc r0 r2 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r2:<invalid> r1:<invalid>

fn00015256_exit:
// DataOut: ap fp r0 r2 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r2:<invalid> r1:<invalid>



void fn0001530A(word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001530A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0001530A_entry:
// DataOut: ap
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0001530A:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00015896(word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00015896_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00015896_entry:
// DataOut: ap
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00015896:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00015E22(word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00015E22_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00015E22_entry:
// DataOut: ap
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00015E22:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000162E6(word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000162E6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000162E6_entry:
// DataOut: ap
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000162E6:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000167AA(word32 r2, word32 r4, word32 r6, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp pc r2 r4 r6
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved:
fn000167AA_entry:
// DataOut: fp pc r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000167AA:
	word32 r0_11
	Mem4[fp + -24:word32] = 0x00000007
	branch Mem4[r4 + 0x0000C5FB:word32] + Mem4[r4 + 132:word32] <= 0x00030D40 l000167DC
// DataOut: fp pc r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000167DC:
	r0_11 = DPB(r0, 0x07, 0)
// DataOut: fp pc r0 r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1052 ap:<invalid>
// LocalsOut: fp(32)

l000167D4:
	r0_11 = DPB(r0, 0x08, 0)
// DataOut: fp pc r0 r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1052 ap:<invalid>
// LocalsOut: fp(32)

l000167DF:
	Mem13[fp + -28:int32] = (int32) (int8) r0_11
	Mem15[r4 + 0x0000C819:word32] = 0x00000000
	word32 ap_16 = (uint32) Mem15[r4 + 0x0000C640:word16]
	branch (ap_16 & 0x00000004) != 0x00000000 l000167F7
// DataOut: ap fp pc r0 r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1052 ap:<invalid> r0:<invalid>
// LocalsOut: fp(32)

l000167F7:
	Mem350[fp + -20:word32] = 0x00000009
	word32 r2_360
	word32 r4_361
	word32 r6_362
	word32 ap_363
	word32 fp_364
	word32 sp_365
	word32 r0_366 = fn00015256(r0_11, r2, r4, r6, ap_16, fp, pc, out r2_360, out r4_361, out r6_362, out ap_363, out fp_364, out sp_365)
	branch r0_366 == 0x00000000 l00016812
// DataOut: ap fp pc r0 r2 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -1052 ap:<invalid> r0:<invalid>

l00016812:
	Mem381[sp_365 - 0x00000004:word32] = fp_364 + -20
	Mem384[sp_365 - 0x00000008:word32] = fp_364 + -8
	Mem387[sp_365 - 0x00000010:word64] = 0x0000000000000000
	Mem390[sp_365 - 0x00000014:uint32] = 0x00000100
	Mem393[sp_365 - 0x00000018:uint32] = 0x00000100
	Mem396[sp_365 - 0x0000001C:word32] = fp_364 + -1052
	fn0001878E(r0_366, ap_363, fp_364)
	branch r0_366 == 0x00000000 l00016847
// DataOut: ap fp pc r0 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1060(fp):fp + -1052 -1056(fp):0x00000100
// Terminates process

l00016847:
	Mem427[sp_365 - 0x00000020:uint32] = 0x00000040
	Mem430[sp_365 - 0x00000024:word32] = fp_364 + -1052
	word32 r2_434
	word32 r4_435
	word32 r6_436
	word32 sp_439
	word32 fp_438
	word32 ap_437
	word32 r0_440 = fn00015256(r0_366, r2_360, r4_361, r6_362, ap_363, fp_364, pc, out r2_434, out r4_435, out r6_436, out ap_437, out fp_438, out sp_439)
	branch r0_440 == 0x00000000 l0001685D
// DataOut: ap fp pc r0 r2 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l0001685D:
	Mem455[sp_439 - 0x00000004:word32] = fp_438 + -24
	Mem458[sp_439 - 0x00000008:word32] = fp_438 + -12
	Mem461[sp_439 - 0x0000000C:word32] = r2_434 + 256
	Mem464[sp_439 - 0x00000010:word32] = r2_434 + 128
	Mem466[sp_439 - 0x00000014:word32] = 0x00000000
	Mem469[sp_439 - 0x00000018:uint32] = 0x00000040
	Mem472[sp_439 - 0x0000001C:word32] = fp_438 + -1052
	fn0001878E(r0_440, ap_437, fp_438)
	word32 sp_470 = sp_439 - 0x0000001C
	branch r0_440 == 0x00000000 l0001689E
// DataOut: ap fp pc r0 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100
// Terminates process

l0001689E:
	Mem514[sp_439 - 0x00000020:uint32] = 0x00000040
	Mem517[sp_439 - 0x00000024:word32] = fp_438 + -1052
	word32 r2_521
	word32 r4_522
	word32 r6_523
	word32 ap_524
	word32 sp_526
	word32 fp_525
	word32 r0_527 = fn00015256(r0_440, r2_434, r4_435, r6_436, ap_437, fp_438, pc, out r2_521, out r4_522, out r6_523, out ap_524, out fp_525, out sp_526)
	branch r0_527 == 0x00000000 l000168B4
// DataOut: fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l000168B4:
	word32 ap_540 = (uint32) Mem517[r4_522 + 0x0000C640:word16]
	branch (ap_540 & 0x00000002) == 0x00000000 l00016928
// DataOut: ap fp r0 r2 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016928:
	Mem709[sp_526 - 0x00000004:word32] = fp_525 + -28
	Mem712[sp_526 - 0x00000008:word32] = fp_525 + -16
	Mem715[sp_526 - 0x0000000C:word32] = r2_521 + 256
	Mem718[sp_526 - 0x00000010:word32] = r2_521 + 384
	Mem720[sp_526 - 0x00000014:word32] = 0x00000000
	Mem723[sp_526 - 0x00000018:uint32] = 0x00000040
	Mem726[sp_526 - 0x0000001C:word32] = fp_525 + -1052
	fn0001878E(r0_527, ap_540, fp_525)
	word32 sp_724 = sp_526 - 0x0000001C
	branch r0_527 == 0x00000000 l00016973
// DataOut: ap fp r3 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100
// Terminates process

l00016973:
	Mem777[sp_526 - 0x00000020:word32] = Mem726[fp_525 + -28:word32]
	Mem780[sp_526 - 0x00000024:word32] = Mem777[fp_525 + -24:word32]
	Mem783[sp_526 - 0x00000028:word32] = Mem780[fp_525 + -20:word32]
	Mem786[sp_526 - 0x0000002C:word32] = Mem783[fp_525 + -16:word32]
	Mem789[sp_526 - 0x00000030:word32] = Mem786[fp_525 + -12:word32]
	Mem792[sp_526 - 0x00000034:word32] = Mem789[fp_525 + -8:word32]
	fn00015896(ap_540)
// DataOut: fp sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100
// Terminates process

l0001694C:
	branch r0_527 != 0x00000001 l0001695B
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016951:
	Mem768[sp_526 - 0x00000020:word32] = Mem726[fp_525 + -16:word32]
	ap_540 = fn00018BF6(ap_540, fp_525, out fp_525, out sp_724)
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l0001695B:
	Mem743[sp_724 - 0x00000004:word32] = Mem726[fp_525 + -12:word32]
	word32 fp_747
	word32 sp_748
	word32 ap_749 = fn00018BF6(ap_540, fp_525, out fp_747, out sp_748)
	Mem752[sp_748 - 0x00000004:word32] = Mem743[fp_747 + -8:word32]
	word32 fp_756
	word32 sp_757
	fn00018BF6(ap_749, fp_747, out fp_756, out sp_757)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 sp:<invalid> r2:<invalid> r0:0x00000000 fp:<invalid> ap:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l000168BF:
	Mem616[sp_526 - 0x00000004:word32] = fp_525 + -28
	Mem619[sp_526 - 0x00000008:word32] = fp_525 + -16
	Mem622[sp_526 - 0x0000000C:word32] = r2_521 + 256
	Mem625[sp_526 - 0x00000010:word32] = r2_521 + 512
	Mem627[sp_526 - 0x00000014:word32] = 0x00000000
	Mem630[sp_526 - 0x00000018:uint32] = 0x00000040
	Mem633[sp_526 - 0x0000001C:word32] = fp_525 + -1052
	fn0001878E(r0_527, ap_540, fp_525)
	word32 sp_631 = sp_526 - 0x0000001C
	branch r0_527 == 0x00000000 l0001690A
// DataOut: ap fp r3 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100
// Terminates process

l0001690A:
	Mem684[sp_526 - 0x00000020:word32] = Mem633[fp_525 + -28:word32]
	Mem687[sp_526 - 0x00000024:word32] = Mem684[fp_525 + -24:word32]
	Mem690[sp_526 - 0x00000028:word32] = Mem687[fp_525 + -20:word32]
	Mem693[sp_526 - 0x0000002C:word32] = Mem690[fp_525 + -16:word32]
	Mem696[sp_526 - 0x00000030:word32] = Mem693[fp_525 + -12:word32]
	Mem699[sp_526 - 0x00000034:word32] = Mem696[fp_525 + -8:word32]
	fn0001530A(ap_540)
// DataOut: fp sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100
// Terminates process

l0001698D:
	Mem547[sp_526 - 0x00000038:word32] = Mem517[fp_525 + -16:word32]
	word32 sp_551
	byte ZN_552
	bool C_553
	bool V_554
	word32 fp_555
	word32 r4_556
	word32 ap_557
	byte CVZN_558
	byte CZN_559
	word32 r0_560
	byte VZN_561
	bool Z_562
	bool N_563
	word32 r3_564
	word32 r2_565
	word32 r6_566
	word32 pc_567
	call Mem547[ap_540:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_540,C_549,CVZN,CZN_8,dwLoc0420_353,dwLoc0424_356,fp_525,N,pc,r0_527,r2_521,r3_528,r4_522,r6_523,sp_545,V_550,VZN,Z_530,ZN_548
		defs: ap_557,C_553,CVZN_558,CZN_559,fp_555,N_563,pc_567,r0_560,r2_565,r3_564,r4_556,r6_566,sp_551,V_554,VZN_561,Z_562,ZN_552
	Mem570[sp_551 - 0x00000004:word32] = Mem547[fp_555 + -12:word32]
	word32 sp_574
	byte ZN_575
	bool C_576
	bool V_577
	word32 fp_578
	word32 r4_579
	word32 ap_580
	byte CVZN_581
	byte CZN_582
	word32 r0_583
	byte VZN_584
	bool Z_585
	bool N_586
	word32 r3_587
	word32 r2_588
	word32 r6_589
	word32 pc_590
	call Mem570[ap_557:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_557,C_572,CVZN_558,CZN_559,dwLoc0420_353,dwLoc0424_356,fp_555,N_563,pc_567,r0_560,r2_565,r3_564,r4_556,r6_566,sp_568,V_573,VZN_561,Z_562,ZN_571
		defs: ap_580,C_576,CVZN_581,CZN_582,fp_578,N_586,pc_590,r0_583,r2_588,r3_587,r4_579,r6_589,sp_574,V_577,VZN_584,Z_585,ZN_575
	Mem593[sp_574 - 0x00000004:word32] = Mem570[fp_578 + -8:word32]
	word32 sp_597
	byte ZN_598
	bool C_599
	bool V_600
	word32 fp_601
	word32 r4_602
	word32 ap_603
	byte CVZN_604
	byte CZN_605
	word32 r0_606
	byte VZN_607
	bool Z_608
	bool N_609
	word32 r3_610
	word32 r2_611
	word32 r6_612
	word32 pc_613
	call Mem593[ap_580:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_580,C_595,CVZN_581,CZN_582,dwLoc0420_353,dwLoc0424_356,fp_578,N_586,pc_590,r0_583,r2_588,r3_587,r4_579,r6_589,sp_591,V_596,VZN_584,Z_585,ZN_594
		defs: ap_603,C_599,CVZN_604,CZN_605,fp_601,N_609,pc_613,r0_606,r2_611,r3_610,r4_602,r6_612,sp_597,V_600,VZN_607,Z_608,ZN_598
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l000168E3:
	branch r0_527 != 0x00000001 l000168F2
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l000168E8:
	Mem675[sp_526 - 0x00000020:word32] = Mem633[fp_525 + -16:word32]
	ap_540 = fn00018BF6(ap_540, fp_525, out fp_525, out sp_631)
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l000168F2:
	Mem650[sp_631 - 0x00000004:word32] = Mem633[fp_525 + -12:word32]
	word32 fp_654
	word32 sp_655
	word32 ap_656 = fn00018BF6(ap_540, fp_525, out fp_654, out sp_655)
	Mem659[sp_655 - 0x00000004:word32] = Mem650[fp_654 + -8:word32]
	word32 fp_663
	word32 sp_664
	fn00018BF6(ap_656, fp_654, out fp_663, out sp_664)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 sp:<invalid> r2:<invalid> r0:0x00000000 fp:<invalid> ap:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l000168B0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:<invalid> sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016881:
	branch r0_440 != 0x00000001 l00016890
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016886:
	Mem505[sp_439 - 0x00000020:word32] = Mem472[fp_438 + -12:word32]
	ap_437 = fn00018BF6(ap_437, fp_438, out fp_438, out sp_470)
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016890:
	Mem489[sp_470 - 0x00000004:word32] = Mem472[fp_438 + -8:word32]
	word32 fp_493
	word32 sp_494
	fn00018BF6(ap_437, fp_438, out fp_493, out sp_494)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 sp:<invalid> r2:<invalid> r0:0x00000000 fp:<invalid> ap:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016859:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:<invalid> sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016834:
	branch r0_366 != 0x00000001 l00016843
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016839:
	Mem418[sp_365 - 0x00000020:word32] = Mem396[fp_364 + -8:word32]
	word32 fp_422
	word32 sp_423
	fn00018BF6(ap_363, fp_364, out fp_422, out sp_423)
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016843:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 sp:<invalid> r2:<invalid> r0:0x00000000 fp:<invalid> ap:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l0001680E:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1060(fp):fp + -1052 -1056(fp):0x00000100

l000167F4:
// DataOut: ap fp pc r0 r2 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1052 ap:<invalid> r0:<invalid>
// LocalsOut: fp(32)

l000169AC:
	word32 r2_71
	word32 r4_72
	word32 r6_73
	word32 ap_74
	word32 fp_75
	word32 sp_76
	word32 r0_77 = fn00015256(r0_11, r2, r4, r6, ap_16, fp, pc, out r2_71, out r4_72, out r6_73, out ap_74, out fp_75, out sp_76)
	branch r0_77 == 0x00000000 l000169C2
// DataOut: ap fp pc r0 r2 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -1052 ap:<invalid> r0:<invalid>

l000169C2:
	Mem95[sp_76 - 0x00000004:word32] = fp_75 + -24
	Mem98[sp_76 - 0x00000008:word32] = fp_75 + -12
	Mem101[sp_76 - 0x0000000C:word32] = r2_71 + 256
	Mem103[sp_76 - 0x00000010:word32] = r2_71
	Mem105[sp_76 - 0x00000014:word32] = 0x00000000
	Mem108[sp_76 - 0x00000018:uint32] = 0x00000040
	Mem111[sp_76 - 0x0000001C:word32] = fp_75 + -1052
	fn0001878E(r0_77, ap_74, fp_75)
	branch r0_77 == 0x00000000 l000169F7
// DataOut: ap fp pc r0 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1060(fp):fp + -1052 -1056(fp):0x00000040
// Terminates process

l000169F7:
	Mem142[sp_76 - 0x00000020:uint32] = 0x00000040
	Mem145[sp_76 - 0x00000024:word32] = fp_75 + -1052
	word32 r2_149
	word32 r4_150
	word32 r6_151
	word32 ap_152
	word32 sp_154
	word32 fp_153
	word32 r0_155 = fn00015256(r0_77, r2_71, r4_72, r6_73, ap_74, fp_75, pc, out r2_149, out r4_150, out r6_151, out ap_152, out fp_153, out sp_154)
	branch r0_155 == 0x00000000 l00016A0D
// DataOut: fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A0D:
	word32 ap_168 = (uint32) Mem145[r4_150 + 0x0000C640:word16]
	branch (ap_168 & 0x00000002) == 0x00000000 l00016A70
// DataOut: ap fp r0 r2 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A70:
	Mem273[sp_154 - 0x00000004:word32] = fp_153 + -28
	Mem276[sp_154 - 0x00000008:word32] = fp_153 + -16
	Mem279[sp_154 - 0x0000000C:word32] = r2_149 + 256
	Mem282[sp_154 - 0x00000010:word32] = r2_149 + 384
	Mem284[sp_154 - 0x00000014:word32] = 0x00000000
	Mem287[sp_154 - 0x00000018:uint32] = 0x00000040
	Mem290[sp_154 - 0x0000001C:word32] = fp_153 + -1052
	fn0001878E(r0_155, ap_168, fp_153)
	word32 sp_288 = sp_154 - 0x0000001C
	branch r0_155 == 0x00000000 l00016AB1
// DataOut: ap fp r3 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> sp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040
// Terminates process

l00016AB1:
	Mem332[sp_154 - 0x00000020:word32] = Mem290[fp_153 + -28:word32]
	Mem335[sp_154 - 0x00000024:word32] = Mem332[fp_153 + -24:word32]
	Mem338[sp_154 - 0x00000028:word32] = Mem335[fp_153 + -16:word32]
	Mem341[sp_154 - 0x0000002C:word32] = Mem338[fp_153 + -12:word32]
	fn000162E6(ap_168)
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040
// Terminates process

l00016A94:
	branch r0_155 != 0x00000001 l00016AA3
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A99:
	Mem323[sp_154 - 0x00000020:word32] = Mem290[fp_153 + -16:word32]
	ap_168 = fn00018BF6(ap_168, fp_153, out fp_153, out sp_288)
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016AA3:
	Mem307[sp_288 - 0x00000004:word32] = Mem290[fp_153 + -12:word32]
	word32 fp_311
	word32 sp_312
	fn00018BF6(ap_168, fp_153, out fp_311, out sp_312)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 sp:<invalid> r2:<invalid> r0:0x00000000 fp:<invalid> ap:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A18:
	Mem195[sp_154 - 0x00000004:word32] = fp_153 + -28
	Mem198[sp_154 - 0x00000008:word32] = fp_153 + -16
	Mem201[sp_154 - 0x0000000C:word32] = r2_149 + 256
	Mem204[sp_154 - 0x00000010:word32] = r2_149 + 512
	Mem206[sp_154 - 0x00000014:word32] = 0x00000000
	Mem209[sp_154 - 0x00000018:uint32] = 0x00000040
	Mem212[sp_154 - 0x0000001C:word32] = fp_153 + -1052
	fn0001878E(r0_155, ap_168, fp_153)
	word32 sp_210 = sp_154 - 0x0000001C
	branch r0_155 == 0x00000000 l00016A59
// DataOut: ap fp r3 sp
// DataOut (flags): 
// SymbolicIn: r3:<invalid> sp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040
// Terminates process

l00016A59:
	Mem254[sp_154 - 0x00000020:word32] = Mem212[fp_153 + -28:word32]
	Mem257[sp_154 - 0x00000024:word32] = Mem254[fp_153 + -24:word32]
	Mem260[sp_154 - 0x00000028:word32] = Mem257[fp_153 + -16:word32]
	Mem263[sp_154 - 0x0000002C:word32] = Mem260[fp_153 + -12:word32]
	fn00015E22(ap_168)
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040
// Terminates process

l00016AC5:
	Mem177[sp_154 - 0x00000030:word32] = Mem145[fp_153 + -16:word32]
	word32 fp_181
	word32 sp_182
	word32 ap_183 = fn00018BF6(ap_168, fp_153, out fp_181, out sp_182)
	Mem186[sp_182 - 0x00000004:word32] = Mem177[fp_181 + -12:word32]
	word32 fp_190
	word32 sp_191
	fn00018BF6(ap_183, fp_181, out fp_190, out sp_191)
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016AD9:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 sp:<invalid> r2:<invalid> r0:0x00000000 fp:<invalid> ap:<invalid> -1088(fp):fp + -1052 -1084(fp):<invalid> -1080(fp):<invalid> -1076(fp):<invalid> -1072(fp):r2 + 256 -1068(fp):<invalid> -1064(fp):<invalid> -1060(fp):fp + -1052 -1056(fp):<invalid>

l00016A3C:
	branch r0_155 != 0x00000001 l00016A4B
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A41:
	Mem245[sp_154 - 0x00000020:word32] = Mem212[fp_153 + -16:word32]
	ap_168 = fn00018BF6(ap_168, fp_153, out fp_153, out sp_210)
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A4B:
	Mem229[sp_210 - 0x00000004:word32] = Mem212[fp_153 + -12:word32]
	word32 fp_233
	word32 sp_234
	fn00018BF6(ap_168, fp_153, out fp_233, out sp_234)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 sp:<invalid> r2:<invalid> r0:0x00000000 fp:<invalid> ap:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A09:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:<invalid> sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l000169E4:
	branch r0_77 != 0x00000001 l000169F3
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l000169E9:
	Mem133[sp_76 - 0x00000020:word32] = Mem111[fp_75 + -12:word32]
	word32 fp_137
	word32 sp_138
	fn00018BF6(ap_74, fp_75, out fp_137, out sp_138)
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l000169F3:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 sp:<invalid> r2:<invalid> r0:0x00000000 fp:<invalid> ap:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l000169BE:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1060(fp):fp + -1052 -1056(fp):0x00000040

fn000167AA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> fp:<invalid> r2:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> -1088(fp):fp + -1052 -1084(fp):<invalid> -1080(fp):<invalid> -1076(fp):<invalid> -1072(fp):r2 + 256 -1068(fp):<invalid> -1064(fp):<invalid> -1060(fp):fp + -1052 -1056(fp):<invalid>



void fn000173CA(word32 r0, word32 r3, word32 r4, word32 r5, word32 r10, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r10 r3 r4 r5
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r11 r2 r4 r6 r7 r8 sp
// Preserved:
fn000173CA_entry:
// DataOut: ap fp r0 r10 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000173CA:
	Mem6[Mem6[ap + 4:word32]:word32] = 0x00000000
	Mem9[Mem9[ap + 8:word32]:word32] = 0x00000000
	Mem12[r3 + 1511:word32] = fp + -25
	word32 sp_147 = fp - 0x0000001C
	word32 r6_142 = 0x00000000
	word32 r11_356 = 0x00000000
	word32 r8_139 = 0x00000000
	branch 0x00000000 <u (uint32) Mem12[r3 + 0x0000C688:word16] l00017403
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00017403:
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000001C r6:0x00000000 r11:0x00000000 r8:0x00000000 r2:<invalid>

l00017414:
	word32 sp_150 = sp_147 - 0x00000004
	Mem151[sp_150:word32] = 0x00000004
	Mem154[sp_150 - 0x00000004:word32] = r3 + 152
	word32 r2_158
	word32 r7_159
	word32 ap_160
	word32 fp_161
	word32 sp_162
	word32 r0_163 = fn0000D5BE(r0, r4, r6_142, ap, fp, out r2_158, out r7_159, out ap_160, out fp_161, out sp_162)
	branch r0_163 != 0x00000000 l00017429
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017429:
	Mem176[sp_162 - 0x00000004:word32] = 0x00000004
	Mem179[sp_162 - 0x00000008:word32] = r3 + 0x0000C634
	Mem182[sp_162 - 0x0000000C:word32] = r3 + 152
	fn000192DA()
	branch r0_163 == 0x00000000 l0001748E
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r1:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004
// Terminates process

l0001748E:
	word32 r7_287
	word32 ap_288
	word32 fp_289
	word32 sp_290
	word32 r0_291 = fn00011C0A(r0_163, r4, r6_142, ap_160, fp_161, out r7_287, out ap_288, out fp_289, out sp_290)
	branch r0_291 == 0x00000000 l0001749A
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001749A:
	Mem300[sp_290 - 0x00000004:word32] = 0x00000002
	Mem303[sp_290 - 0x00000008:uint32] = (uint32) Mem300[r3 + 0x0000C670:word16]
	byte CVZN_308
	byte ZN_309
	bool C_310
	bool V_311
	word32 r6_312
	bool Z_313
	bool N_314
	word32 r11_315
	word32 ap_316
	word32 fp_317
	word32 r3_318
	word32 r8_319
	word32 r2_320
	byte CZN_321
	word32 r0_322
	word32 r7_323
	word32 r10_324
	word32 r9_325
	word32 r5_326
	word32 r4_327
	byte VZN_328
	word32 sp_307
	call Mem303[r9:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_288,C_305,CVZN_143,CZN_144,fp_289,N_141,r0_291,r10_138,r11_145,r2_158,r3_140,r4_135,r5_136,r6_142,r7_287,r8_139,r9_137,sp_301,V_306,VZN_134,Z_293,ZN_304
		defs: ap_316,C_310,CVZN_308,CZN_321,fp_317,N_314,r0_322,r10_324,r11_315,r2_320,r3_318,r4_327,r5_326,r6_312,r7_323,r8_319,r9_325,sp_307,V_311,VZN_328,Z_313,ZN_309
	branch r0_322 == 0x00000000 l000174B3
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174AA:
	branch r0_322 <= 0x00000001 l000174B3
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174B3:
	branch Mem303[r3_318 + 0x0000C627:word32] == 0x00000000 l000174CE
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174BB:
	Mem709[sp_307 - 0x00000004:word32] = Mem303[r3_318 + 0x0000C627:word32]
	fn000192B2()
	Mem714[r3_318 + 0x0000C627:word32] = 0x00000000
	sp_307 = sp_307 - 0x00000004
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004
// Terminates process

l000174CE:
	word32 sp_340 = sp_307 - 0x00000004
	Mem341[sp_340:word32] = 0x00000003
	Mem344[sp_340 - 0x00000004:uint32] = (uint32) Mem341[r3_318 + 0x0000C672:word16]
	byte CVZN_349
	byte ZN_350
	bool C_351
	bool V_352
	bool Z_354
	bool N_355
	word32 r2_361
	byte CZN_362
	word32 r7_364
	word32 r10_365
	byte VZN_369
	word32 r5_367
	word32 r8_360
	call Mem344[r9_325:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_316,C_346,CVZN_308,CZN_333,fp_317,N_314,r0_322,r10_324,r11_334,r2_320,r3_318,r4_327,r5_326,r6_312,r7_323,r8_319,r9_325,sp_342,V_347,VZN_328,Z_336,ZN_345
		defs: ap_357,C_351,CVZN_349,CZN_362,fp_358,N_355,r0_363,r10_365,r11_356,r2_361,r3_359,r4_368,r5_367,r6_353,r7_364,r8_360,r9_366,sp_348,V_352,VZN_369,Z_354,ZN_350
	branch r0 == 0x00000000 l000174E7
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174DE:
	r11_356 = r0
	branch r0 <= 0x00000001 l000174E7
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174E7:
	branch Mem344[r3 + 108:word32] != 0x00000000 l0001754B
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174EC:
	r0 = Mem344[r3 + 144:word32] - 0x00000004
	r6_142 = 0x00000000
	word32 r2_566 = r0 + 0x00000004
	branch Mem344[r0 + 0x00000004:word32] == 0x00000000 l0001751B
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174FC:
	word32 sp_653 = sp_147 - 0x00000004
	Mem655[sp_653:word32] = Mem344[r3 + 16:word32]
	Mem658[sp_653 - 0x00000004:word32] = Mem655[r2_566:word32]
	Mem661[sp_653 - 0x00000008:word32] = r3 + 0x0000C701
	byte CVZN_666
	byte ZN_667
	bool C_668
	bool V_669
	bool Z_671
	bool N_672
	word32 r2_678
	byte CZN_679
	word32 r7_681
	word32 r10_682
	byte VZN_686
	call Mem661[r5_367:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_357,C_663,CVZN_349,CZN_374,fp_358,N_355,r0_564,r10_365,r11_375,r2_651,r3_650,r4_368,r5_367,r6_565,r7_364,r8_360,r9_366,sp_659,V_664,VZN_369,Z_568,ZN_662
		defs: ap_674,C_668,CVZN_666,CZN_679,fp_675,N_672,r0_680,r10_682,r11_673,r2_678,r3_676,r4_685,r5_684,r6_670,r7_681,r8_677,r9_683,sp_665,V_669,VZN_686,Z_671,ZN_667
	branch r0 == 0x00000000 l00017514
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r0:<invalid> r6:0x00000000 r2:<invalid> r1:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017514:
	r2_566 = r2_678 + 0x00000004
	branch Mem661[r2_678 + 0x00000004:word32] != 0x00000000 l000174FC
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r0:<invalid> r6:0x00000000 r2:<invalid> r1:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001750E:
	r6_142 = 0x00000001
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r0:<invalid> r6:0x00000000 r2:<invalid> r1:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001751B:
	branch r6_142 == 0x00000000 l0001754B
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001751F:
	word32 r2_593 = Mem344[r3 + 148:word32] - 0x00000004
	word32 r2_594 = r2_593 + 0x00000004
	branch Mem344[r2_593 + 0x00000004:word32] == 0x00000000 l0001754B
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001752C:
	word32 sp_602 = sp_147 - 0x00000004
	Mem604[sp_602:word32] = Mem344[r3 + 16:word32]
	Mem607[sp_602 - 0x00000004:word32] = Mem604[r2_594:word32]
	Mem610[sp_602 - 0x00000008:word32] = r3 + 0x0000C701
	byte CVZN_615
	byte ZN_616
	bool C_617
	bool V_618
	bool Z_620
	bool N_621
	word32 r2_627
	byte CZN_628
	word32 r7_630
	word32 r10_631
	byte VZN_635
	call Mem610[r5_367:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_588,C_612,CVZN_580,CZN_583,fp_587,N_578,r0_585,r10_575,r11_584,r2_600,r3_599,r4_572,r5_573,r6_579,r7_582,r8_576,r9_574,sp_608,V_613,VZN_571,Z_596,ZN_611
		defs: ap_623,C_617,CVZN_615,CZN_628,fp_624,N_621,r0_629,r10_631,r11_622,r2_627,r3_625,r4_634,r5_633,r6_619,r7_630,r8_626,r9_632,sp_614,V_618,VZN_635,Z_620,ZN_616
	branch r0 == 0x00000000 l00017544
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017544:
	r2_594 = r2_627 + 0x00000004
	branch Mem610[r2_627 + 0x00000004:word32] != 0x00000000 l0001752C
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001753E:
	r6_142 = 0x00000000
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001754B:
	branch Mem344[r3 + 108:word32] != 0x00000000 l00017554
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r0:<invalid> r1:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017550:
	branch r6_142 == 0x00000000 l000175C4
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r0:<invalid> r1:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017554:
	sp_147 = sp_147 - 0x00000004
	Mem479[sp_147:word32] = r3 + 0x0000C701
	fn000192C6()
	r4 = DPB(r4, 0x00, 0)
	branch r0 == 0x00000000 l0001759B
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r0:<invalid> r1:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004
// Terminates process

l00017567:
	r0 = r0 - 0x00000001
	byte v48_525 = Mem479[r3 + 0x0000C701 + r0:byte]
	branch v48_525 == 0x2F l00017599
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:DPB(r4, 0x00, 0) -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017576:
	r0 = Mem479[r3 + 1511:word32]
	branch Mem479[r0 + 12:word32] != 0x00000000 l0001759B
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:DPB(r4, 0x00, 0) r0:r0 - 0x00000001 r2:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017580:
	Mem546[sp_147 - 0x00000004:word32] = 0x0000002F
	Mem549[sp_147 - 0x00000008:word32] = r3 + 0x0000C701
	fn00019262()
	sp_147 = sp_147 - 0x00000008
	branch r0 != 0x00000000 l0001759B
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:DPB(r4, 0x00, 0) r0:<invalid> r2:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004
// Terminates process

l00017593:
	branch v48_525 != 0x5C l0001759B
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017599:
	r4 = DPB(r4, 0x01, 0)
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:DPB(r4, 0x00, 0) r0:r0 - 0x00000001 r2:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001759B:
	branch (int32) (int8) r4 != 0x00000000 l000175C4
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r0:<invalid> r2:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175A0:
	word32 sp_500 = sp_147 - 0x00000004
	Mem502[sp_500:uint32] = (uint32) Mem479[r3 + 0x0000C660:word16]
	Mem505[sp_500 - 0x00000004:uint32] = (uint32) Mem502[r3 + 0x0000C662:word16]
	fn0000BC8A(r0, r5_367, ap, fp)
	sp_147 = sp_500 - 0x00000004
	word32 r2_509 = Mem505[ap + 4:word32]
	branch Mem505[r2_509:word32] >=u r0 l000175C1
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: r4:<invalid> r2:<invalid> r0:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004
// Terminates process

l000175BE:
	Mem520[r2_509:word32] = r0
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175C1:
	Mem517[Mem517[ap + 8:word32]:word32] = Mem505[ap + 8:word32] + 0x00000001
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175C4:
	branch Mem344[r3 + 0x0000C674:word16] == 0x0000 l000175E5
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r4:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r6:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175CC:
	word32 sp_436 = sp_147 - 0x00000004
	Mem437[sp_436:word32] = 0x00000000
	Mem440[sp_436 - 0x00000004:uint32] = (uint32) Mem437[r3 + 0x0000C674:word16]
	byte CVZN_445
	byte ZN_446
	bool C_447
	bool V_448
	bool Z_450
	bool N_451
	word32 r2_457
	byte CZN_458
	word32 r7_460
	word32 r10_461
	word32 r5_463
	byte VZN_465
	call Mem440[r9:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_397,C_442,CVZN_404,CZN_406,fp_396,N_387,r0_407,r10_384,r11_393,r2_405,r3_386,r4_403,r5_382,r6_388,r7_391,r8_385,r9_383,sp_438,V_443,VZN_402,Z_410,ZN_441
		defs: ap_453,C_447,CVZN_445,CZN_458,fp_454,N_451,r0_459,r10_461,r11_452,r2_457,r3_455,r4_464,r5_463,r6_449,r7_460,r8_456,r9_462,sp_444,V_448,VZN_465,Z_450,ZN_446
	branch r0 == 0x00000000 l000175E5
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r4:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r6:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175DC:
	r11_356 = r0
	branch r0 <= 0x00000001 l000175E5
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r4:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r6:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175E5:
	r8_139 = r8_360 + 0x00000001
	branch r8_139 >=u (uint32) Mem344[r3 + 0x0000C688:word16] l000175F6
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r4:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r6:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175F3:
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r8:r8 + 0x00000001 r2:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> r6:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175E4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r4:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r6:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174E6:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174B2:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017499:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017440:
	Mem192[sp_162 - 0x00000010:uint32] = 0x00000401
	Mem194[sp_162 - 0x00000014:word32] = r8_139
	Mem196[sp_162 - 0x00000018:word32] = r7_159
	Mem199[sp_162 - 0x0000001C:word32] = r3 + 1515
	fn000192D2()
	Mem204[sp_162 - 0x00000020:word32] = r0_163
	Mem207[sp_162 - 0x00000024:word32] = r3 + 1515
	Mem209[sp_162 - 0x00000028:word32] = r3
	word32 r2_210 = Mem209[r3 + 0x0000C839:word32]
	word32 sp_214
	byte CVZN_215
	byte ZN_216
	bool C_217
	bool V_218
	word32 r6_219
	bool Z_220
	bool N_221
	word32 r11_222
	word32 ap_223
	word32 fp_224
	word32 r3_225
	word32 r8_226
	word32 r2_227
	byte CZN_228
	word32 r0_229
	word32 r7_230
	word32 r10_231
	word32 r9_232
	word32 r5_233
	word32 r4_234
	byte VZN_235
	call Mem209[r2_210:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_160,C_212,CVZN_143,CZN_144,fp_161,N_141,r0_163,r10_138,r11_145,r2_210,r3_140,r4_135,r5_136,r6_142,r7_159,r8_139,r9_137,sp_208,V_213,VZN_134,Z_187,ZN_211
		defs: ap_223,C_217,CVZN_215,CZN_228,fp_224,N_221,r0_229,r10_231,r11_222,r2_227,r3_225,r4_234,r5_233,r6_219,r7_230,r8_226,r9_232,sp_214,V_218,VZN_235,Z_220,ZN_216
	Mem238[sp_214 - 0x00000004:uint32] = 0x00000401
	Mem240[sp_214 - 0x00000008:word32] = r10_231
	Mem243[sp_214 - 0x0000000C:word32] = r3_225 + 1515
	fn000192D2()
	Mem248[sp_214 - 0x00000010:word32] = r0_229
	Mem251[sp_214 - 0x00000014:word32] = r3_225 + 1515
	Mem253[sp_214 - 0x00000018:word32] = r3_225
	word32 r2_254 = Mem253[r3_225 + 0x0000C839:word32]
	word32 sp_258
	byte CVZN_259
	byte ZN_260
	bool C_261
	bool V_262
	word32 r6_263
	bool Z_264
	bool N_265
	word32 r11_266
	word32 ap_267
	word32 fp_268
	word32 r3_269
	word32 r8_270
	word32 r2_271
	byte CZN_272
	word32 r0_273
	word32 r7_274
	word32 r10_275
	word32 r9_276
	word32 r5_277
	word32 r4_278
	byte VZN_279
	call Mem253[r2_254:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_223,C_256,CVZN_215,CZN_228,fp_224,N_221,r0_229,r10_231,r11_222,r2_254,r3_225,r4_234,r5_233,r6_219,r7_230,r8_226,r9_232,sp_252,V_257,VZN_235,Z_220,ZN_255
		defs: ap_267,C_261,CVZN_259,CZN_272,fp_268,N_265,r0_273,r10_275,r11_266,r2_271,r3_269,r4_278,r5_277,r6_263,r7_274,r8_270,r9_276,sp_258,V_262,VZN_279,Z_264,ZN_260
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004
// Terminates process

l00017425:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r1:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017400:
// DataOut: ap fp r0 r11 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000001C r6:0x00000000 r11:0x00000000 r8:0x00000000 r2:<invalid>

l000175F6:
	word32 sp_57 = sp_147 - 0x00000004
	Mem58[sp_57:word32] = 0x00000004
	Mem61[sp_57 - 0x00000004:word32] = r3 + 152
	word32 r2_65
	word32 r7_66
	word32 ap_67
	word32 fp_68
	word32 sp_69
	word32 r0_70 = fn0000D5BE(r0, r4, r6_142, ap, fp, out r2_65, out r7_66, out ap_67, out fp_68, out sp_69)
	branch r0_70 != 0x00000000 l0001760B
// DataOut: ap fp r0 r11 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001760B:
	Mem83[sp_69 - 0x00000004:word32] = 0x00000004
	Mem86[sp_69 - 0x00000008:word32] = r3 + 0x0000C639
	Mem89[sp_69 - 0x0000000C:word32] = r3 + 152
	fn000192DA()
	branch r0_70 == 0x00000000 l0001764D
// DataOut: ap fp r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r1:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004
// Terminates process

l0001764D:
	branch Mem89[Mem89[ap_67 + 8:word32]:word32] != 0x00000000 l0001765A
// DataOut: fp r11
// DataOut (flags): 
// SymbolicIn: -48(fp):r3 + 152 -44(fp):<invalid> -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017652:
	branch r11_356 > 0x00000001 l0001765A
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: -48(fp):r3 + 152 -44(fp):<invalid> -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017657:
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: -48(fp):r3 + 152 -44(fp):<invalid> -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001765A:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r11:0x0000000B -48(fp):r3 + 152 -44(fp):<invalid> -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017622:
	Mem99[sp_69 - 0x00000010:uint32] = 0x00000401
// DataOut:
// DataOut (flags): 
// SymbolicIn: -48(fp):r3 + 152 -44(fp):<invalid> -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017607:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r1:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

fn000173CA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r1:<invalid> r4:<invalid> -48(fp):r3 + 152 -44(fp):<invalid> -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004



word32 fn00017662(word32 ap, word32 fp, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: r0 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn00017662_entry:
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00017662:
	branch Mem0[ap + 4:word32] != 0x00000000 l0001766D
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001766D:
	word32 r4_46 = Mem0[ap + 4:word32]
	branch r4_46 >u 0x001E8480 l0001767D
// DataOut: ap fp r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0001767D:
	word32 r1_111 = 0x00000000
	branch true l00017694
// DataOut: ap fp r0 r1 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid>

l00017694:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:0x000003E8

l0001768B:
	branch 0x000003E8 >u r4_46 l00017699
// DataOut: ap fp r1 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:0x000003E8

l00017690:
	r1_111 = 0x00000001
// DataOut: ap fp r1 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:0x000003E8

l00017699:
	word32 r5_134
	word32 r3_124 = Mem0[ap + 8:word32]
	branch r4_46 <u r3_124 l000176D0
// DataOut: fp r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:<invalid> r0:<invalid> r2:0x000003E8

l000176D0:
	word32 r3_166 = r3_124 - r4_46 + (uint32) SLICE(r1_111, ui31, 1)
	word32 r1_167 = 0x00000000
	branch r1_111 >= 0x00000000 l000176F0
// DataOut: fp r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:<invalid> r0:<invalid> r2:0x000003E8 r6:<invalid> r3:<invalid>

l000176F0:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176E5:
	branch r1_111 >u r3_166 l000176F5
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176EA:
	r1_167 = 0x00000001
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176F5:
	r5_134 = -r1_167
// DataOut: fp r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176A5:
	word32 r2_145 = r4_46 - r3_124 + (uint32) SLICE(r1_111, ui31, 1)
	word32 r1_146 = 0x00000000
	branch r1_111 >= 0x00000000 l000176C4
// DataOut: fp r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:<invalid> r0:<invalid> r2:0x000003E8 r6:<invalid> r3:<invalid>

l000176C4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176BB:
	branch r1_111 >u r2_145 l000176C9
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176C0:
	r1_146 = 0x00000001
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176C9:
	r5_134 = r1_146
// DataOut: fp r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176F8:
	return r5_134
// DataOut: r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid> r5:<invalid>

l0001767A:
// DataOut: ap fp r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid>

l000176FC:
	word32 r5_107
	word32 r3_51 = Mem0[ap + 8:word32]
	branch r4_46 <u r3_51 l0001773C
// DataOut: fp r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid>

l0001773C:
	word32 r3_95 = (r3_51 - r4_46) * 0x000003E8 + (uint32) SLICE(r4_46, ui31, 1)
	word32 r1_106 = 0x00000000
	branch r4_46 >= 0x00000000 l00017764
// DataOut: fp r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid>

l00017764:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r0:<invalid> r1:0x00000000 r2:<invalid>

l00017758:
	branch r4_46 >u r3_95 l00017769
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r0:<invalid> r1:0x00000000 r2:<invalid>

l0001775D:
	r1_106 = 0x00000001
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r0:<invalid> r1:0x00000000 r2:<invalid>

l00017769:
	r5_107 = -r1_106
// DataOut: fp r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r2:<invalid>

l00017708:
	word32 r2_73 = (r4_46 - r3_51) * 0x000003E8 + (uint32) SLICE(r4_46, ui31, 1)
	word32 r1_74 = 0x00000000
	branch r4_46 >= 0x00000000 l00017730
// DataOut: fp r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid>

l00017730:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r1:0x00000000

l00017725:
	branch r4_46 >u r2_73 l00017735
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r1:0x00000000

l0001772A:
	r1_74 = 0x00000001
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r1:0x00000000

l00017735:
	r5_107 = r1_74
// DataOut: fp r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r1:<invalid>

l0001776C:
	return r5_107
// DataOut: r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r5:<invalid>

l0001766A:
	return 0x00000000
// DataOut: r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

fn00017662_exit:
// DataOut: r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r5:<invalid>



void fn00017772(word32 r2, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r2
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00017772_entry:
// DataOut: ap fp r10 r2 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00017772:
	word32 r2_15
	word32 r3_16
	word32 ap_17
	word32 fp_18
	word32 sp_19
	word32 r0_20 = fn00010892(ap, fp, out r2_15, out r3_16, out ap_17, out fp_18, out sp_19)
	Mem23[sp_19 - 0x00000004:word32] = 0x00000000
	Mem25[sp_19 - 0x00000008:word32] = r0_20
	fn000192C6()
	Mem30[sp_19 - 0x0000000C:word32] = r0_20
	Mem32[sp_19 - 0x00000010:word32] = r0_20
	Mem34[sp_19 - 0x00000014:word32] = r2_15
	word32 ap_35 = Mem34[r2_15 + 0x0000C839:word32]
	word32 sp_39
	byte CVZN_40
	byte ZN_41
	bool C_42
	bool V_43
	word32 r2_44
	word32 r0_45
	word32 ap_46
	word32 r3_47
	word32 fp_48
	call Mem34[ap_35:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_35,C_37,dwLoc08_6,dwLoc0C_9,fp_18,r0_20,r2_15,r3_16,sp_33,V_38,ZN_36
		defs: ap_46,C_42,CVZN_40,fp_48,r0_45,r2_44,r3_47,sp_39,V_43,ZN_41
	Mem50[sp_39 - 0x00000004:word32] = 0x00000000
	Mem52[sp_39 - 0x00000008:word32] = 0x00000001
	Mem55[sp_39 - 0x0000000C:word32] = r3_47 + 18
	Mem57[sp_39 - 0x00000010:word32] = r2_44
	word32 ap_58 = Mem57[r2_44 + 0x0000C839:word32]
	word32 sp_62
	byte CVZN_63
	byte ZN_64
	bool C_65
	bool V_66
	word32 r2_67
	word32 r0_68
	word32 ap_69
	word32 r3_70
	word32 fp_71
	call Mem57[ap_58:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_58,C_60,CVZN_40,dwLoc08_6,dwLoc0C_9,fp_48,r0_45,r2_44,r3_47,sp_56,V_61,ZN_59
		defs: ap_69,C_65,CVZN_63,fp_71,r0_68,r2_67,r3_70,sp_62,V_66,ZN_64
	return
// DataOut: ap fp r0 r10 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

fn00017772_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 ap:<invalid> fp:<invalid> -20(fp):r0 -16(fp):0x00000000 -12(fp):r2 + 0x0000C701 -8(fp):r2 + 1515



void fn000177CA(word32 r6, word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000177CA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000177CA_entry:
// DataOut: ap r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000177CA:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00017C2E(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00017C2E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00017C2E_entry:
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00017C2E:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00017DEE(word32 r0, word32 r3, word32 r5, word32 r6, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r3 r5 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00017DEE_entry:
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00017DEE:
	branch Mem0[r3 + 0x0000C81D:word32] == 0x00000000 l00017E0C
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00017E0C:
	word32 r0_107 = 0x00000000
	word32 r2_81 = fp + -1156
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160
// LocalsOut: fp(32)

l00017E14:
	Mem88[r2_81:word32] = 0x00000008
	r2_81 = r2_81 + 0x00000004
	r0_107 = r0_107 + 0x00000001
	branch r0_107 <= 0x0000008F l00017E14
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E22:
	branch r0_107 >= 0x00000100 l00017E3D
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E2B:
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E2C:
	Mem241[fp + -1156:word32] = 0x00000009
	r0_107 = r0_107 + 0x00000001
	branch r0_107 < 0x00000100 l00017E2C
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E3D:
	branch r0_107 >= 0x00000118 l00017E59
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E46:
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E48:
	Mem234[fp + -1156:word32] = 0x00000007
	r0_107 = r0_107 + 0x00000001
	branch r0_107 < 0x00000118 l00017E48
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E59:
	branch r0_107 >= 0x00000120 l00017E75
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E62:
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E64:
	Mem224[fp + -1156:word32] = 0x00000008
	r0_107 = r0_107 + 0x00000001
	branch r0_107 < 0x00000120 l00017E64
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E75:
	Mem109[r3 + 0x0000C825:word32] = 0x00000007
	fn0001878E(r0_107, ap, fp)
	branch r0_107 == 0x00000000 l00017EAF
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)
// Terminates process

l00017EAF:
	r0 = 0x00000000
	word32 r2_149 = fp + 0xFFFFFB7C
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825
// LocalsOut: fp(32)

l00017EB8:
	Mem156[r2_149:word32] = 0x00000005
	r2_149 = r2_149 + 0x00000004
	r0 = r0 + 0x00000001
	branch r0 <= 0x0000001D l00017EB8
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: r0:<invalid> r2:<invalid> -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825
// LocalsOut: fp(32)

l00017EC2:
	Mem161[r3 + 0x0000C829:word32] = 0x00000005
	Mem164[fp + 0xFFFFFB58:word32] = r3 + 0x0000C829
	Mem167[fp + 0xFFFFFB54:word32] = r3 + 0x0000C821
	Mem170[fp + 0xFFFFFB50:word32] = r5 + 260
	Mem173[fp + 0xFFFFFB4C:word32] = r5 + 200
	Mem175[fp + 0xFFFFFB48:word32] = 0x00000000
	Mem177[fp + 0xFFFFFB44:word32] = 0x0000001E
	Mem180[fp + 0xFFFFFB40:word32] = fp + -1156
	fn0001878E(r0, ap, fp)
	word32 sp_178 = fp + 0xFFFFFB40
	r6 = r0
	branch r0 <= 0x00000001 l00017F1F
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: r0:<invalid> r2:<invalid> -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825
// LocalsOut: fp(32)
// Terminates process

l00017EF4:
	word32 r4_188 = Mem180[r3 + 0x0000C81D:word32]
	word32 ap_189 = r4_188
	branch r4_188 == 0x00000000 l00017F15
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: r6:r0 -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825

l00017F00:
	word32 ap_207 = ap_189 - 0x00000006
	word32 r2_208 = Mem180[ap_207 + 2:word32]
	sp_178 = sp_178 - 0x00000004
	Mem210[sp_178:word32] = ap_207
	fn000192B2()
	ap_189 = r2_208
	branch r2_208 != 0x00000000 l00017F00
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: r6:r0 r4:<invalid> ap:<invalid> -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825
// Terminates process

l00017F15:
	Mem197[r3 + 0x0000C81D:word32] = 0x00000000
	return
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: r6:r0 r4:<invalid> ap:<invalid> -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825

l00017EA8:
	Mem140[r3 + 0x0000C81D:word32] = 0x00000000
	return
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825

l00017E09:
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160
// LocalsOut: fp(32)

l00017F1F:
	fn000177CA(r6, ap)
	branch r0 == 0x00000000 l00017F46
// DataOut: fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r6:r0 -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825
// Terminates process

l00017F44:
// DataOut: fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: r2:0x00000000 -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1164(fp):<invalid>

l00017F46:
	return
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: r2:<invalid> -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1164(fp):<invalid>

fn00017DEE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r0:<invalid> sp:fp - 0x00000004 fp:<invalid> ap:<invalid> r6:r0 r4:<invalid> -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1164(fp):<invalid>



word32 fn00017F4E(word32 r0, word32 r4, word32 r5, word32 r6, word32 r11, word32 ap, word32 fp, word32 pc, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r11 r4 r5 r6
// LiveOut: fp r0 r2 r3 r4 r5 r6
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
fn00017F4E_entry:
	*r5Out = r5
	*r6Out = r6
// DataOut: ap fp pc r0 r11 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00017F4E:
	word32 sp_148 = fp + -1344
	word32 r3_5 = Mem0[r5 + 0x0000C831:word32]
	*r3Out = r3_5
	word32 r2_52 = Mem0[r5 + 0x0000C835:word32]
	*r2Out = r2_52
	branch r2_52 >=u 0x00000005 l00017FB9
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00017F74:
	word32 v10_532 = Mem0[r5 + 0x0000C5FB:word32] - 0x00000001
	Mem533[r5 + 0x0000C5FB:word32] = v10_532
	branch v10_532 < 0x00000000 l00017F90
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid>

l00017F90:
	r0 = fn0000D69A(r0, r4, r6, ap, fp, pc, out r2_52, out r3_5, out r5, out ap, out fp, out sp_148)
	*r6Out = r0
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid>

l00017F7C:
	word32 r4_563 = Mem533[r5 + 0x0000C5F7:word32]
	Mem565[r5 + 0x0000C5F7:word32] = Mem533[r5 + 0x0000C5F7:word32] + 0x00000001
	*r6Out = (uint32) Mem565[r4_563:byte]
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid>

l00017F9A:
	word32 r4_546
	*r4Out = r6
	branch r6 != 0xFFFFFFFF l00017FAA
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid>

l00017FAA:
	r4 = __ashift(r6, r2_52)
	r3_5 = r3_5 | r4
	*r3Out = r3_5
	r2_52 = r2_52 + 0x00000008
	*r2Out = r2_52
	branch r2_52 <u 0x00000005 l00017F74
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid>

l00017FB9:
	word32 r4_460 = r3_5 & ~0xFFFFFFE0
	Mem62[sp_148 + 32:word32] = r4_460 + 0x00000101
	word32 r3_456 = (uint32) SLICE(r3_5, ui27, 5)
	*r3Out = r3_456
	word32 r2_457 = r2_52 - 0x00000005
	*r2Out = r2_457
	branch r2_457 >=u 0x00000005 l0001801D
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid>

l00017FD7:
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l00017FD8:
	word32 v17_469 = Mem62[r5 + 0x0000C5FB:word32] - 0x00000001
	Mem470[r5 + 0x0000C5FB:word32] = v17_469
	branch v17_469 < 0x00000000 l00017FF4
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l00017FF4:
	r0 = fn0000D69A(r0, r4_460, r6, ap, fp, pc, out r2_457, out r3_456, out r5, out ap, out fp, out sp_148)
	*r6Out = r0
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l00017FE0:
	word32 r4_500 = Mem470[r5 + 0x0000C5F7:word32]
	Mem502[r5 + 0x0000C5F7:word32] = Mem470[r5 + 0x0000C5F7:word32] + 0x00000001
	*r6Out = (uint32) Mem502[r4_500:byte]
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l00017FFE:
	word32 r4_483
	*r4Out = r6
	branch r6 != 0xFFFFFFFF l0001800E
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l0001800E:
	r4_460 = __ashift(r6, r2_457)
	r3_456 = r3_456 | r4_460
	*r3Out = r3_456
	r2_457 = r2_457 + 0x00000008
	*r2Out = r2_457
	branch r2_457 <u 0x00000005 l00017FD8
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l0001801D:
	word32 r4_395 = r3_456 & ~0xFFFFFFE0
	*r4Out = r4_395
	Mem82[sp_148 + 28:word32] = r4_395 + 0x00000001
	word32 r3_391 = (uint32) SLICE(r3_456, ui27, 5)
	*r3Out = r3_391
	word32 r2_392 = r2_457 - 0x00000005
	*r2Out = r2_392
	branch r2_392 >=u 0x00000004 l0001807D
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l00018037:
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l00018038:
	word32 v25_404 = Mem82[r5 + 0x0000C5FB:word32] - 0x00000001
	Mem405[r5 + 0x0000C5FB:word32] = v25_404
	branch v25_404 < 0x00000000 l00018054
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l00018054:
	r0 = fn0000D69A(r0, r4_395, r6, ap, fp, pc, out r2_392, out r3_391, out r5, out ap, out fp, out sp_148)
	*r6Out = r0
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l00018040:
	word32 r4_437 = Mem405[r5 + 0x0000C5F7:word32]
	Mem439[r5 + 0x0000C5F7:word32] = Mem405[r5 + 0x0000C5F7:word32] + 0x00000001
	*r6Out = (uint32) Mem439[r4_437:byte]
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l0001805E:
	word32 r4_418
	*r4Out = r6
	branch r6 != 0xFFFFFFFF l0001806E
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l0001806E:
	r4_395 = __ashift(r6, r2_392)
	*r4Out = r4_395
	r3_391 = r3_391 | r4_395
	*r3Out = r3_391
	r2_392 = r2_392 + 0x00000008
	*r2Out = r2_392
	branch r2_392 <u 0x00000004 l00018038
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l0001807D:
	word32 r8_102 = r3_391 & ~0xFFFFFFF0
	word32 r8_103 = r8_102 + 0x00000004
	word32 r3_104 = (uint32) SLICE(r3_391, ui28, 4)
	*r3Out = r3_104
	word32 r2_105 = r2_392 - 0x00000004
	*r2Out = r2_105
	branch Mem82[sp_148 + 32:word32] >u 0x00000120 l000180A0
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l0001809A:
	branch Mem82[sp_148 + 28:word32] <=u 0x00000020 l000180A4
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180A4:
	word32 r7_126 = 0x00000000
	branch r8_102 == 0x00000004 l0001811B
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180AA:
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:0x00000000 r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180B4:
	branch r2_105 >=u 0x00000003 l000180FD
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180B9:
// DataOut: fp pc r0 r11 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180BC:
	word32 r4_333
	word32 v30_316 = Mem82[r5 + 0x0000C5FB:word32] - 0x00000001
	Mem317[r5 + 0x0000C5FB:word32] = v30_316
	branch v30_316 < 0x00000000 l000180D8
// DataOut: fp pc r0 r11 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180D8:
	byte ZN_364
	bool C_365
	bool V_366
	byte CZN_370
	byte CVZN_371
	bool N_372
	word32 r4_373
	bool Z_375
	word32 ap_378
	byte VZN_379
	byte CZ_381
	word32 r10_384
	word32 pc_385
	call Mem317[r6:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_315,C_311,CVZN_318,CZ_297,CZN_305,fp_314,N_319,pc_295,r0_309,r10_304,r11_296,r2_301,r3_300,r4_307,r5_299,r6_306,r7_302,r8_303,sp_313,V_312,VZN_298,Z_308,ZN_310
		defs: ap_378,C_365,CVZN_371,CZ_381,CZN_370,fp_377,N_372,pc_385,r0_376,r10_384,r11_383,r2_369,r3_368,r4_373,r5_367,r6_374,r7_382,r8_380,sp_363,V_366,VZN_379,Z_375,ZN_364
	*r4Out = r0
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180C4:
	word32 ap_356 = Mem317[r5 + 0x0000C5F7:word32]
	Mem358[r5 + 0x0000C5F7:word32] = Mem317[r5 + 0x0000C5F7:word32] + 0x00000001
	*r4Out = (uint32) Mem358[ap_356:byte]
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180DE:
	branch r4_333 != 0xFFFFFFFF l000180EE
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180EE:
	ap = __ashift(r4_333, r2_105)
	r3_104 = r3_104 | ap
	*r3Out = r3_104
	r2_105 = r2_105 + 0x00000008
	*r2Out = r2_105
	branch r2_105 <u 0x00000003 l000180BC
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180FD:
	word32 r4_283
	*r4Out = Mem82[r11 + r7_126 * 4:word32]
	Mem285[fp + -1300:word32] = r3_104 & ~0xFFFFFFF8
	r3_104 = (uint32) SLICE(r3_104, ui29, 3)
	*r3Out = r3_104
	r2_105 = r2_105 - 0x00000003
	*r2Out = r2_105
	r7_126 = r7_126 + 0x00000001
	branch r7_126 <u r8_103 l000180B4
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l0001811B:
	branch r7_126 >=u 0x00000013 l00018130
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l00018120:
	word32 r4_231
	*r4Out = Mem82[r11 + r7_126 * 4:word32]
	Mem233[fp + -1300:word32] = 0x00000000
	r7_126 = r7_126 + 0x00000001
	branch r7_126 <u 0x00000013 l00018120
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l00018130:
	Mem158[fp + -16:word32] = 0x00000007
	word32 sp_159 = sp_148 - 0x00000004
	Mem161[sp_159:word32] = fp + -16
	Mem164[sp_159 - 0x00000004:word32] = fp + -8
	Mem167[sp_159 - 0x0000000C:word64] = 0x0000000000000000
	Mem169[sp_159 - 0x00000010:word32] = 0x00000013
	Mem171[sp_159 - 0x00000014:word32] = 0x00000013
	Mem174[sp_159 - 0x00000018:word32] = fp + -1300
	fn0001878E(r0, ap, fp)
	word32 sp_172 = sp_159 - 0x00000018
	word32 r8_178 = r0
	branch Mem174[fp + -16:word32] != 0x00000000 l00018156
// DataOut: fp pc r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>
// Terminates process

l00018153:
	r8_178 = 0x00000001
// DataOut: fp pc r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: r8:r0 -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>

l00018156:
	branch r8_178 == 0x00000000 l00018181
// DataOut: fp pc r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: r8:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>

l00018181:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r8:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>

l0001815A:
	branch r8_178 != 0x00000001 l0001817D
// DataOut: fp pc r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: r8:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>

l0001815F:
	word32 r6_201 = Mem174[fp + -8:word32]
	*r6Out = r6_201
	word32 ap_202 = r6_201
	branch r6_201 == 0x00000000 l0001817D
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: r8:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>

l00018168:
	word32 ap_209 = ap_202 - 0x00000006
	word32 r4_210 = Mem174[ap_209 + 2:word32]
	*r4Out = r4_210
	sp_172 = sp_172 - 0x00000004
	Mem212[sp_172:word32] = ap_209
	fn000192B2()
	ap_202 = r4_210
	branch r4_210 != 0x00000000 l00018168
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: r8:<invalid> r6:<invalid> ap:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>
// Terminates process

l0001817D:
	word32 fp_199
	*fpOut = Mem174[fp + 0x0000000C:word32]
	return r8_178
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: r8:<invalid> r6:<invalid> ap:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>

l000180EA:
	word32 fp_348
	*fpOut = Mem317[fp + 0x0000000C:word32]
	return 0x00000001
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180A0:
	word32 fp_116
	*fpOut = Mem82[fp + 0x0000000C:word32]
	return 0x00000001
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l0001806A:
	word32 fp_427
	*fpOut = Mem405[fp + 0x0000000C:word32]
	return 0x00000001
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l0001800A:
	word32 fp_492
	*fpOut = Mem470[fp + 0x0000000C:word32]
	return 0x00000001
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l00017FA6:
	word32 fp_555
	*fpOut = Mem533[fp + 0x0000000C:word32]
	return 0x00000001
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid>

fn00017F4E_exit:
// DataOut: fp r0 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r7:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>



word32 fn000185AE(word32 r0, word32 r4, word32 r5, word32 r6, word32 r11, word32 ap, word32 fp, word32 pc, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r11 r4 r5 r6
// LiveOut: ap fp r0 r2 r3 r4 r5 r6 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
fn000185AE_entry:
	*r4Out = r4
	*r5Out = r5
	*r6Out = r6
// DataOut: ap fp pc r0 r11 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000185AE:
	word32 r3_180 = Mem0[r4 + 0x0000C831:word32]
	*r3Out = r3_180
	word32 r2_179 = Mem0[r4 + 0x0000C835:word32]
	*r2Out = r2_179
	branch r2_179 >=u 0x00000001 l00018611
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l000185CB:
// DataOut: ap fp pc r0 r11 r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid>

l000185CC:
	word32 v11_189 = Mem0[r4 + 0x0000C5FB:word32] - 0x00000001
	Mem190[r4 + 0x0000C5FB:word32] = v11_189
	branch v11_189 < 0x00000000 l000185E8
// DataOut: ap fp pc r0 r11 r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l000185E8:
	word32 r5_227
	word32 sp_230
	*r5Out = fn0000D69A(r0, r4, r6, ap, fp, pc, out r2_179, out r3_180, out r5_227, out ap, out fp, out sp_230)
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l000185D4:
	word32 r0_218 = Mem190[r4 + 0x0000C5F7:word32]
	Mem220[r4 + 0x0000C5F7:word32] = Mem190[r4 + 0x0000C5F7:word32] + 0x00000001
	*r5Out = (uint32) Mem220[r0_218:byte]
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l000185F2:
	branch r5 != 0xFFFFFFFF l00018602
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018602:
	r0 = __ashift(r5, r2_179)
	r3_180 = r3_180 | r0
	*r3Out = r3_180
	r2_179 = r2_179 + 0x00000008
	*r2Out = r2_179
	branch r2_179 <u 0x00000001 l000185CC
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018611:
	Mem55[Mem55[ap + 4:word32]:word32] = r3_180 & ~0xFFFFFFFE
	word32 r3_120 = (uint32) SLICE(r3_180, ui31, 1)
	*r3Out = r3_120
	word32 r2_119 = r2_179 - 0x00000001
	*r2Out = r2_119
	branch r2_119 >=u 0x00000002 l0001866D
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018626:
// DataOut: ap fp pc r0 r11 r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018628:
	word32 v18_129 = Mem55[r4 + 0x0000C5FB:word32] - 0x00000001
	Mem130[r4 + 0x0000C5FB:word32] = v18_129
	branch v18_129 < 0x00000000 l00018644
// DataOut: ap fp pc r0 r11 r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018644:
	word32 r5_168
	word32 sp_171
	*r5Out = fn0000D69A(r0, r4, r6, ap, fp, pc, out r2_119, out r3_120, out r5_168, out ap, out fp, out sp_171)
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018630:
	word32 r0_159 = Mem130[r4 + 0x0000C5F7:word32]
	Mem161[r4 + 0x0000C5F7:word32] = Mem130[r4 + 0x0000C5F7:word32] + 0x00000001
	*r5Out = (uint32) Mem161[r0_159:byte]
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l0001864E:
	branch r5 != 0xFFFFFFFF l0001865E
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l0001865E:
	r0 = __ashift(r5, r2_119)
	r3_120 = r3_120 | r0
	*r3Out = r3_120
	r2_119 = r2_119 + 0x00000008
	*r2Out = r2_119
	branch r2_119 <u 0x00000002 l00018628
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l0001866D:
	word32 r3_73 = (uint32) SLICE(r3_120, ui30, 2)
	*r3Out = r3_73
	Mem76[r4 + 0x0000C831:word32] = r3_73
	word32 r2_74 = r2_119 - 0x00000002
	*r2Out = r2_74
	Mem78[r4 + 0x0000C835:word32] = r2_74
	word32 r6_72 = r3_120 & ~0xFFFFFFFC
	*r6Out = r6_72
	branch r6_72 != 0x00000002 l00018696
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018696:
	branch r6_72 != 0x00000000 l000186A0
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l000186A0:
	branch r6_72 != 0x00000001 l000186AB
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l000186AB:
	word32 sp_111 = fp - 0x00000004
	*spOut = sp_111
	word32 fp_112
	*fpOut = Mem78[sp_111 + 0x00000010:word32]
	word32 ap_113
	*apOut = Mem78[sp_111 + 0x0000000C:word32]
	return 2
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l000186A5:
	fn00017DEE(r0, r3_73, r5, r6_72, ap, fp)
	word32 sp_105 = fp - 0x00000004
	*spOut = sp_105
	word32 fp_106
	*fpOut = Mem78[sp_105 + 0x00000010:word32]
	word32 ap_107
	*apOut = Mem78[sp_105 + 0x0000000C:word32]
	return r0
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l0001869A:
	fn00017C2E(r4)
	word32 sp_99 = fp - 0x00000004
	*spOut = sp_99
	word32 fp_100
	*fpOut = Mem78[sp_99 + 0x00000010:word32]
	word32 ap_101
	*apOut = Mem78[sp_99 + 0x0000000C:word32]
	return r0
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018690:
	word32 r2_84
	word32 r3_85
	word32 r4_86
	word32 r5_87
	word32 r6_88
	word32 fp_89
	word32 r0_90 = fn00017F4E(r0, r4, r5, r6_72, r11, ap, fp, pc, out r2_84, out r3_85, out r4_86, out r5_87, out r6_88, out fp_89)
	word32 sp_91
	*spOut = fp_89 - 0x00000004
	word32 fp_92
	*fpOut = Mem78[fp_89 + 0x0000000C:word32]
	word32 ap_93
	*apOut = Mem78[fp_89 + 0x00000008:word32]
	return r0_90
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l0001865A:
	word32 sp_149 = fp - 0x00000004
	*spOut = sp_149
	word32 fp_150
	*fpOut = Mem130[sp_149 + 0x00000010:word32]
	word32 ap_151
	*apOut = Mem130[sp_149 + 0x0000000C:word32]
	return 0x00000001
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l000185FE:
	word32 sp_209 = fp - 0x00000004
	*spOut = sp_209
	word32 fp_210
	*fpOut = Mem190[sp_209 + 0x00000010:word32]
	word32 ap_211
	*apOut = Mem190[sp_209 + 0x0000000C:word32]
	return 0x00000001
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

fn000185AE_exit:
// DataOut: ap fp r0 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r1:<invalid> r7:<invalid>



void fn000186B2(word32 r0, word32 r2, word32 r4, word32 r5, word32 r6, word32 r11, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r11 r2 r4 r5 r6
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
fn000186B2_entry:
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000186B2:
	Mem4[r2 + 0x0000C82D:word32] = 0x00000000
	Mem7[r2 + 0x0000C831:word64] = 0x0000000000000000
	word32 sp_2 = fp - 0x00000008
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000186CC:
	Mem31[r2 + 0x0000C819:word32] = 0x00000000
	Mem34[sp_2 - 0x00000004:word32] = fp + -8
	word32 r3_41
	r0 = fn000185AE(r0, r4, r5, r6, r11, ap, fp, pc, out r2, out r3_41, out r4, out r5, out r6, out ap, out fp, out sp_2)
	branch r0 == 0x00000000 l000186DF
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r1:<invalid> r7:<invalid> -12(fp):fp + -8

l000186DF:
	branch Mem34[r2 + 0x0000C819:word32] <=u r3_41 l000186EF
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r1:<invalid> r7:<invalid> -12(fp):fp + -8

l000186E8:
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r1:<invalid> r7:<invalid> -12(fp):fp + -8

l000186EF:
	branch Mem34[fp + -8:word32] == 0x00000000 l000186CC
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r1:<invalid> r7:<invalid> -12(fp):fp + -8

l000186F4:
	branch Mem34[r2 + 0x0000C6C5:word32] == 0x00000000 l00018710
// DataOut: ap fp r0 r2 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r1:<invalid> r7:<invalid> -12(fp):fp + -8

l00018710:
	Mem102[sp_2 - 0x00000004:word32] = 0x00000000
	Mem105[sp_2 - 0x00000008:word32] = Mem102[r2 + 0x0000C82D:word32]
	Mem108[sp_2 - 0x0000000C:word32] = r2 + 1515
	fn0000B072(r0, r2, r6, ap, fp)
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r1:<invalid> r7:<invalid> -12(fp):fp + -8

l000186FC:
	Mem93[sp_2 - 0x00000004:word32] = Mem34[r2 + 0x0000C82D:word32]
	Mem96[sp_2 - 0x00000008:word32] = r2 + 1515
	fn0001084A(r2, ap, fp)
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r1:<invalid> r7:<invalid> -12(fp):fp + -8

l00018723:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r8:<invalid> r7:<invalid> -24(fp):r2 + 1515 -20(fp):<invalid> -16(fp):<invalid> -12(fp):fp + -8

l000186DE:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r1:<invalid> r7:<invalid> -12(fp):fp + -8

fn000186B2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r1:<invalid> r7:<invalid> -24(fp):r2 + 1515 -20(fp):<invalid> -16(fp):<invalid> -12(fp):fp + -8



word32 fn0001872A(word32 r3, word32 fp, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r3
// LiveOut: ap fp r0 sp
// Trashed: CVZN ap fp r0 r4 sp
// Preserved:
fn0001872A_entry:
// DataOut: fp pc r10 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0001872A:
	branch Mem0[r3 + 0x0000C81D:word32] == 0x00000000 l00018787
// DataOut: fp pc r10 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0001873C:
	word32 r4_28 = Mem0[r3 + 0x0000C821:word32]
	word32 ap_29 = r4_28
	branch r4_28 == 0x00000000 l0001875D
// DataOut: ap fp pc r10 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C
// LocalsOut: fp(32)

l00018748:
	word32 r2_73 = Mem0[ap_29 - 0x00000004:word32]
	fn000192B2()
	ap_29 = r2_73
	branch r2_73 != 0x00000000 l00018748
// DataOut: ap fp pc r10 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r4:<invalid> ap:<invalid> -16(fp):<invalid>
// LocalsOut: fp(32)
// Terminates process

l0001875D:
	word32 r4_37 = Mem0[r3 + 0x0000C81D:word32]
	word32 ap_38 = r4_37
	branch r4_37 == 0x00000000 l00018781
// DataOut: ap fp pc r10 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r4:<invalid> ap:<invalid> -16(fp):<invalid>
// LocalsOut: fp(32)

l00018769:
// DataOut: ap fp pc r10 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r4:<invalid> ap:<invalid> -16(fp):<invalid>
// LocalsOut: fp(32)

l0001876C:
	word32 r2_60 = Mem0[ap_38 - 0x00000004:word32]
	fn000192B2()
	ap_38 = r2_60
	branch r2_60 != 0x00000000 l0001876C
// DataOut: ap fp pc r10 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r4:<invalid> ap:<invalid> -16(fp):<invalid>
// LocalsOut: fp(32)
// Terminates process

l00018781:
	Mem49[r3 + 0x0000C81D:word64] = 0x0000000000000000
// DataOut: fp pc r10 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r4:<invalid> ap:<invalid> -16(fp):<invalid>

l00018787:
	word32 sp_22
	*spOut = fp - 0x00000004
	word32 fp_23
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_24
	*apOut = Mem0[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp pc r0 r10 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r4:<invalid> ap:<invalid> -16(fp):<invalid>

fn0001872A_exit:
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:0x00000000 fp:<invalid> ap:<invalid> r4:<invalid> -16(fp):<invalid>



void fn0001878E(word32 r0, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001878E_entry:
// DataOut: ap fp pc r0 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0001878E:
	branch Mem0[ap + 8:word32] <=u 0x00000100 l000187B4
// DataOut: ap fp pc r0 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000187B4:
// DataOut: ap fp pc r0 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1488 r2:fp + -140 -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32)

l000187A7:
// DataOut: ap fp pc r0 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1488 r2:fp + -140 -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32)

l000187B7:
	fn0001927E()
	word32 r11_27 = Mem0[ap + 8:word32]
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -1488 r2:<invalid> r3:<invalid> -1452(fp):fp + 0xFFFFFF78
// Terminates process

l000187D4:
	Mem35[fp + -72:word32] = Mem0[fp + -72:word32] + 0x00000001
	r11_27 = r11_27 - 0x00000001
	branch r11_27 != 0x00000000 l000187D4
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000187E2:
	branch Mem35[fp + -72:word32] != Mem35[ap + 8:word32] l000187F2
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000187F2:
	word32 r10_637 = 1
// DataOut: ap fp pc r0 r10 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000187F8:
	branch Mem35[fp + -72 + r10_637 * 4:word32] != 0x00000000 l00018805
// DataOut: ap fp pc r0 r10 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:<invalid> r10:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000187FE:
	r10_637 = r10_637 + 0x00000001
	branch r10_637 <=u 0x00000010 l000187F8
// DataOut: ap fp pc r0 r10 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:<invalid> r10:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018805:
	word32 r9_245 = r10_637
	word32 r2_99 = Mem35[ap + 28:word32]
	branch Mem35[r2_99:word32] >=u r10_637 l00018814
// DataOut: ap fp pc r0 r10 r2 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:<invalid> r10:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018811:
	Mem633[r2_99:word32] = r10_637
// DataOut: ap fp pc r0 r10 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018814:
	word32 r11_103 = 0x00000010
	branch 0x00000010 == 0x00000000 l00018826
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018819:
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000010 r3:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l0001881C:
	branch Mem35[fp + -72 + r11_103 * 4:word32] != 0x00000000 l00018826
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018822:
	r11_103 = r11_103 - 0x00000001
	branch r11_103 != 0x00000000 l0001881C
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018826:
	Mem114[fp + 0xFFFFFA30:word32] = r11_103
	word32 r2_115 = Mem114[ap + 28:word32]
	branch Mem114[r2_115:word32] <=u r11_103 l00018836
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018833:
	Mem616[r2_115:word32] = r11_103
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018836:
	Mem121[fp + 0xFFFFFA28:word32] = __ashift(0x00000001, r10_637)
	r10_594 = r10_637
	branch r10_637 >=u r11_103 l00018859
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018840:
	word32 r10_594
	word32 v31_598 = Mem121[fp + 0xFFFFFA28:word32] - Mem121[(fp + -72) + r10_594 * 4:word32]
	Mem599[fp + 0xFFFFFA28:word32] = v31_598
	branch v31_598 >= 0x00000000 l0001884C
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l0001884C:
	Mem611[fp + 0xFFFFFA28:word32] = Mem599[fp + 0xFFFFFA28:word32] << 1
	r10_594 = r10_594 + 0x00000001
	branch r10_594 <u r11_103 l00018840
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018859:
	word32 v32_129 = Mem121[fp + 0xFFFFFA28:word32] - Mem121[(fp + -72) + r11_103 * 4:word32]
	Mem130[fp + 0xFFFFFA28:word32] = v32_129
	branch v32_129 >= 0x00000000 l00018865
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018865:
	Mem141[fp + -72:word32] = Mem130[fp + -72:word32] + Mem130[fp + 0xFFFFFA28:word32]
	Mem144[fp + -1420:word32] = 0x00000000
	word32 r10_142 = 0x00000000
	word32 r2_146 = fp + 0xFFFFFFBC
	word32 r5_148 = fp + 0xFFFFFA78
	word32 r11_149 = r11_103 - 0x00000001
	branch r11_149 == 0x00000000 l00018892
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018886:
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:fp + 0xFFFFFFBC r11:<invalid> r3:fp + -1424 r10:0x00000000 r9:<invalid> r5:fp + 0xFFFFFA78 -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018888:
	r10_142 = r10_142 + Mem144[r2_146:word32]
	Mem589[r5_148:word32] = r10_142
	r2_146 = r2_146 + 0x00000004
	r5_148 = r5_148 + 0x00000004
	r11_149 = r11_149 - 0x00000001
	branch r11_149 != 0x00000000 l00018888
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:fp + -1424 r10:<invalid> r9:<invalid> r5:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018892:
	Mem157[fp + 0xFFFFFA20:uint32] = 0x00000480
	Mem159[fp + 0xFFFFFA1C:word32] = 0x00000000
	Mem162[fp + 0xFFFFFA18:word32] = fp + -1356
	fn0001927E()
	word32 sp_160 = fp + 0xFFFFFA18
	word32 r2_166 = Mem162[ap + 4:word32]
	word32 r11_167 = 0x00000000
// DataOut: ap fp pc r0 r11 r2 r4 r5 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:fp + -1424 r10:<invalid> r9:<invalid> r5:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// Terminates process

l000188AC:
	r2_166 = r2_166 + 0x00000004
	branch Mem162[r2_166:word32] == 0x00000000 l000188C2
// DataOut: ap fp pc r0 r10 r11 r2 r4 r5 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r10:<invalid> r3:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000188B1:
	Mem572[fp + -1424:word32] = Mem162[fp + -1424:word32] + 0x00000001
	Mem574[fp + -1356:word32] = r11_167
// DataOut: ap fp pc r0 r11 r2 r4 r5 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r10:<invalid> r3:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000188C2:
	r11_167 = r11_167 + 0x00000001
	branch r11_167 <u Mem162[ap + 8:word32] l000188AC
// DataOut: ap fp pc r0 r11 r2 r4 r5 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r10:<invalid> r3:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000188CA:
	Mem190[fp + 0xFFFFFA20:word32] = ap + 8
	Mem193[Mem193[fp + 0xFFFFFA20:word32]:word32] = Mem190[fp + -1424 + Mem190[fp + 0xFFFFFA24:word32] * 4:word32]
	Mem196[fp + -1424:word32] = 0x00000000
	Mem199[fp + 0xFFFFFA48:word32] = -0x00000001
	Mem202[Mem199[fp + 0xFFFFFA3C:word32] + -4:word32] = 0x00000000
	Mem205[fp + -204:word32] = 0x00000000
	Mem208[fp + 0xFFFFFA44:word32] = 0x00000000
	word32 r8_197 = fp + -1356
	word32 r6_203 = 0x00000000
	branch r10_637 <= Mem208[fp + 0xFFFFFA24:word32] l00018904
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r10:<invalid> r3:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018904:
	Mem241[fp + 0xFFFFFA40:word32] = ap + 28
// DataOut: ap fp pc r0 r11 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018914:
	Mem248[fp + 0xFFFFFA28:word32] = Mem241[fp + -72 + r9_245 * 4:word32]
	word32 r2_249 = Mem248[fp + 0xFFFFFA28:word32]
	Mem251[fp + 0xFFFFFA28:word32] = Mem248[fp + 0xFFFFFA28:word32] - 0x00000001
	branch r2_249 != 0x00000000 l00018928
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018928:
	branch r9_245 > Mem251[Mem251[(fp + 0xFFFFFA3C) + Mem251[fp + 0xFFFFFA48:word32] * 4:word32]:word32] l0001893A
// DataOut: ap fp pc r0 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l0001893A:
	Mem355[fp + 0xFFFFFA38:word32] = Mem251[fp + 0xFFFFFA28:word32] + 0x00000001
// DataOut: ap fp pc r0 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018940:
	word32 r4_386
	word32 r2_375 = Mem355[sp_160 + 48:word32]
	Mem377[sp_160 + 48:word32] = Mem355[sp_160 + 48:word32] + 0x00000001
	word32 r6_378 = r6_203 + Mem377[Mem377[(sp_160 + 36) + r2_375 * 4:word32]:word32]
	Mem380[sp_160 + 44:word32] = Mem377[sp_160 + 12:word32] - r6_378
	word32 r3_382 = Mem380[sp_160 + 40:word32]
	branch Mem380[sp_160 + 44:word32] <=u Mem380[Mem380[r3_382:word32]:word32] l00018968
// DataOut: ap fp pc r0 r11 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r9:<invalid> r4:<invalid> sp:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018968:
	r4_386 = Mem380[sp_160 + 44:word32]
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r9:<invalid> r4:<invalid> sp:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018960:
	r4_386 = Mem380[Mem380[r3_382:word32]:word32]
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r9:<invalid> r4:<invalid> sp:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l0001896C:
	Mem390[sp_160 + 44:word32] = r4_386
	word32 r10_391 = r9_245 - r6_378
	Mem394[sp_160 + 52:word32] = __ashift(0x00000001, r10_391)
	branch Mem394[sp_160 + 52:word32] <=u Mem394[sp_160 + 32:word32] l000189C2
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018986:
	Mem535[sp_160 + 52:word32] = Mem394[sp_160 + 52:word32] - (Mem394[sp_160 + 16:word32] + 0x00000001)
	word32 r3_538 = (r9_245 << 2) + (fp + -72)
	r10_391 = r10_391 + 0x00000001
	branch r10_391 + 0x00000001 >=u Mem535[sp_160 + 44:word32] l000189C2
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189A2:
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:fp + -72 r9:<invalid> sp:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189A4:
	Mem550[sp_160 + 52:word32] = Mem535[sp_160 + 52:word32] << 1
	r3_538 = r3_538 + 0x00000004
	branch Mem550[sp_160 + 52:word32] <=u Mem550[r3_538:word32] l000189C2
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:fp + -72 r9:<invalid> sp:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189B6:
	Mem557[sp_160 + 52:word32] = Mem550[sp_160 + 52:word32] - Mem550[r3_538:word32]
	r10_391 = r10_391 + 0x00000001
	branch r10_391 <u Mem557[sp_160 + 44:word32] l000189A4
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:fp + -72 r9:<invalid> sp:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189C2:
	branch r6_378 + r10_391 <=u Mem394[sp_160 + 28:word32] l000189D7
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189CC:
	branch r6_378 >=u Mem394[sp_160 + 28:word32] l000189D7
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189D2:
	r10_391 = Mem394[sp_160 + 28:word32] - r6_378
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189D7:
	Mem410[sp_160 + 44:word32] = __ashift(0x00000001, r10_391)
	Mem413[Mem413[sp_160 + 36:word32]:word32] = r10_391
	word32 r2_414 = Mem413[sp_160 + 44:word32] + 0x00000001
	word32 sp_415 = sp_160 - 0x00000004
	Mem417[sp_415:word32] = r2_414 * 0x00000006
	byte ZN_420
	bool C_421
	bool V_422
	word32 r2_424
	byte CVZN_425
	byte CZN_427
	byte CZ_428
	word32 r3_429
	word32 r11_430
	bool Z_431
	bool N_432
	word32 r0_433
	word32 r10_434
	byte VZN_435
	word32 r7_440
	word32 r4_441
	call Mem417[Mem417[sp_415 + 28:word32]:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_374,C_403,CVZN_418,CZ_406,CZN_405,dwLoc05AC_6,dwLoc05B4_14,dwLoc05D4_17,dwLoc05D8_19,dwLoc05DC_22,fp_373,N_370,r0_368,r10_408,r11_359,r2_414,r3_401,r4_400,r5_362,r6_378,r7_360,r8_363,r9_364,sp_415,V_407,VZN_366,Z_369,ZN_402
		defs: ap_426,C_421,CVZN_425,CZ_428,CZN_427,fp_423,N_432,r0_433,r10_434,r11_430,r2_424,r3_429,r4_441,r5_437,r6_439,r7_440,r8_438,r9_436,sp_419,V_422,VZN_435,Z_431,ZN_420
	branch r0_433 != 0x00000000 l00018A21
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018A21:
	Mem488[r2_424:word32] = Mem417[sp_160 + 44:word32] + 0x00000001 + 0x00007BE9
	Mem490[Mem490[ap + 24:word32]:word32] = r0_433 + 0x00000006
	Mem492[ap + 24:word32] = r0_433 + 2
	Mem494[Mem494[ap + 24:word32]:word32] = 0x00000000
	word32 r2_496 = Mem494[sp_160 + 48:word32]
	Mem498[fp + -204:word32] = r0_433 + 0x00000006
	branch r2_496 == 0x00000000 l00018AA3
// DataOut: ap fp pc r0 r10 r11 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 r4:<invalid> sp:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AA3:
	branch r9_245 <= r6_203 + Mem498[Mem498[(sp_160 + 36) + Mem498[sp_160 + 48:word32] * 4:word32]:word32] l00018AB5
// DataOut: ap fp pc r0 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 + 0x00000006 r4:<invalid> sp:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AB2:
// DataOut: ap fp pc r0 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 + 0x00000006 r4:<invalid> sp:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018A55:
	Mem504[fp + -1424:word32] = 0x00000000
	Mem508[fp + -1429:byte] = Mem504[Mem504[sp_160 + 36 + (Mem504[sp_160 + 48:word32] - 0x00000001) * 4:word32]:byte]
	Mem511[fp + -1430:int8] = (int8) (r10_434 + 0x00000010)
	Mem513[fp + -1428:word32] = r0_433 + 0x00000006
	__ashift(0x00000001, r6_203)
// DataOut:
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 + 0x00000006 r4:<invalid> sp:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189F7:
	branch Mem417[sp_160 + 48:word32] == 0x00000000 l00018A1D
// DataOut: fp pc r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 r4:<invalid> sp:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189FC:
	word32 r4_462 = Mem417[fp + -204:word32]
	word32 r2_463 = r4_462
	branch r4_462 == 0x00000000 l00018A1D
// DataOut: fp pc r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 r4:<invalid> sp:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018A06:
// DataOut: fp pc r11 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 r4:<invalid> sp:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018A08:
	word32 r2_473 = r2_463 - 0x00000006
	word32 r3_474 = Mem417[r2_473 + 2:word32]
	sp_160 = sp_160 - 0x00000004
	Mem476[sp_160:word32] = r2_473
	fn000192B2()
	r2_463 = r3_474
	branch r3_474 != 0x00000000 l00018A08
// DataOut: fp pc r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 r4:<invalid> sp:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// Terminates process

l00018A1D:
	return
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 r4:<invalid> sp:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018937:
// DataOut: ap fp r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AB5:
	Mem285[fp + -1429:int8] = (int8) (r9_245 - r6_203)
	branch r8_197 <u (fp + -1356) + (Mem285[Mem285[sp_160 + 8:word32]:word32] << 2) l00018AD8
// DataOut: ap fp r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r9:<invalid> r4:<invalid> sp:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AD8:
	word32 r4_311 = Mem285[r8_197:word32]
	word32 r0_312 = Mem285[ap + 12:word32]
	branch r4_311 >=u r0_312 l00018B0C
// DataOut: ap fp r0 r4 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r9:<invalid> r4:<invalid> sp:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018B0C:
	Mem343[fp + -1430:byte] = Mem285[Mem285[ap + 20:word32] + (r4_311 - r0_312) * 2:byte]
	Mem349[fp + -1428:word16] = Mem343[Mem343[ap + 16:word32] + (Mem343[r8_197:word32] - r0_312) * 2:word16]
// DataOut: r6 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> r0:<invalid> r9:<invalid> sp:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AE4:
	word32 r5_319
	branch r4_311 >=u 0x00000100 l00018AF4
// DataOut: fp r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> r0:<invalid> r9:<invalid> sp:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AF4:
	r5_319 = DPB(r5_148, 0x0F, 0)
// DataOut: fp r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> r0:<invalid> r9:<invalid> sp:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AED:
	r5_319 = DPB(r5_148, 0x10, 0)
// DataOut: fp r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> r0:<invalid> r9:<invalid> sp:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AF7:
	Mem321[fp + -1430:byte] = (byte) r5_319
	Mem325[fp + -1428:word16] = Mem321[r8_197:word16]
// DataOut: r6 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> r0:<invalid> r5:<invalid> r9:<invalid> sp:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AD0:
	Mem307[fp + -1430:byte] = 0x63
// DataOut: r6 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r9:<invalid> r4:<invalid> sp:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018B2A:
	Mem303[sp_160 + 52:word32] = __ashift(0x00000001, r9_245 - r6_203)
// DataOut:
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:<invalid> r6:<invalid> r7:<invalid> r4:<invalid> r0:<invalid> r5:<invalid> r9:<invalid> sp:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018925:
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018BCF:
	r9_245 = r9_245 + 0x00000001
	branch r9_245 > Mem251[fp + 0xFFFFFA24:word32] l00018BDA
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018BD7:
// DataOut: ap fp pc r0 r11 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018901:
// DataOut: ap fp pc r11 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018BDA:
	Mem216[Mem216[ap + 28:word32]:word32] = Mem208[Mem208[fp + 0xFFFFFA3C:word32]:word32]
	branch Mem216[fp + 0xFFFFFA1C:word32] == 0x00000000 l00018BEE
// DataOut: fp pc r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018BE6:
	branch Mem216[fp + 0xFFFFFA24:word32] == 0x00000001 l00018BEE
// DataOut: fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018BEC:
// DataOut: fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018BEE:
	return
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:0x00000000 r10:<invalid> r3:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018861:
	return
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018848:
	return
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000187E9:
	Mem67[Mem67[ap + 24:word32]:word32] = 0x00000000
	Mem69[Mem69[ap + 28:word32]:word32] = 0x00000000
	return
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

fn0001878E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r11:<invalid> r3:<invalid> r0:<invalid> sp:fp - 0x00000004 fp:<invalid> ap:<invalid> r10:<invalid> r9:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78



word32 fn00018BF6(word32 ap, word32 fp, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp sp
// Trashed: CVZN ap fp r0 r2 sp
// Preserved:
fn00018BF6_entry:
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00018BF6:
	word32 r2_27 = Mem0[ap + 4:word32]
	branch r2_27 == 0x00000000 l00018C15
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00018BFF:
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid>
// LocalsOut: fp(32)

l00018C00:
	word32 r3_29 = Mem0[r2_27 - 0x00000004:word32]
	fn000192B2()
	r2_27 = r3_29
	branch r3_29 != 0x00000000 l00018C00
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)
// Terminates process

l00018C15:
	word32 sp_22
	*spOut = fp - 0x00000004
	word32 fp_23
	*fpOut = Mem0[fp + 0x0000000C:word32]
	return Mem0[fp + 0x00000008:word32]
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> -8(fp):<invalid>

fn00018BF6_exit:
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r0:0x00000000 fp:<invalid> ap:<invalid> -8(fp):<invalid>



word32 fn00018C3A(word32 r0, word32 r10, word32 ap, word32 fp, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r10
// LiveOut: ap fp r0 sp
// Trashed: CVZN ap fp r0 r1 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00018C3A_entry:
// DataOut: ap fp r0 r10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00018C3A:
	word32 r2_5 = Mem0[ap + 4:word32]
	Mem7[ap + 4:word32] = Mem0[ap + 4:word32] + 0x00000001
	word32 sp_159 = fp - 0x00000004
	word32 r4_202 = (uint32) Mem7[r2_5:byte]
	branch r4_202 != 0x00000000 l00018C60
// DataOut: ap fp r0 r10 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00018C60:
	branch r4_202 != 0x0000003F l00018C86
// DataOut: ap fp r0 r10 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018C86:
	branch r4_202 != 0x0000002A l00018CBE
// DataOut: ap fp r0 r10 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018CBE:
	branch r4_202 == 0x0000005B l00018CCA
// DataOut: ap fp r0 r10 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018CCA:
	branch (uint32) Mem7[Mem7[ap + 8:word32]:byte] != 0x00000000 l00018CD3
// DataOut: ap fp r0 r10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid>

l00018CD3:
	word32 r5_364 = Mem7[ap + 4:word32]
	word32 r6_366 = DPB(r6, 0x01, 0)
	word32 r2_367 = (uint32) Mem7[r5_364:byte]
	branch r2_367 == 0x00000021 l00018CED
// DataOut: ap fp r0 r10 r2 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid>

l00018CE2:
	branch r2_367 == 0x0000005E l00018CED
// DataOut: ap fp r0 r10 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> r6:DPB(r6, 0x01, 0)

l00018CEB:
	r6_366 = DPB(r6, 0x00, 0)
// DataOut: ap fp r0 r10 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> r6:DPB(r6, 0x01, 0)

l00018CED:
	word32 r8_374 = (int32) (int8) r6_366
	Mem376[ap + 4:word32] = r8_374 + r5_364
	word32 r7_377 = Mem376[ap + 4:word32]
	word32 r3_378 = 0x00000000
	branch Mem376[r7_377:byte] == 0x00 l00018D2B
// DataOut: ap fp r0 r10 r3 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid>

l00018CFF:
// DataOut: ap fp r0 r10 r3 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:0x00000000

l00018D00:
	branch r3_378 == 0x00000000 l00018D08
// DataOut: ap fp r0 r10 r3 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D08:
	word32 r2_890 = (uint32) Mem376[r7_377:byte]
	branch r2_890 != 0x0000005C l00018D1C
// DataOut: ap fp r0 r10 r2 r3 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D1C:
	branch r2_890 == 0x0000005D l00018D2B
// DataOut: ap fp r0 r10 r3 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D14:
	r3_378 = 0x00000001
// DataOut: ap fp r0 r10 r3 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D04:
	r3_378 = 0x00000000
// DataOut: ap fp r0 r10 r3 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D25:
	r7_377 = r7_377 + 0x00000001
	branch Mem376[r7_377:byte] != 0x00 l00018D00
// DataOut: ap fp r0 r10 r3 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D2B:
	branch (uint32) Mem376[r7_377:byte] == 0x0000005D l00018D3A
// DataOut: ap fp r0 r10 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D3A:
	word32 r5_401 = Mem376[ap + 4:word32]
	word32 r4_400 = 0x00000000
	word32 r3_403 = 0x00000000
	branch (uint32) Mem376[r5_401:byte] != 0x0000002D l00018D4C
// DataOut: ap fp r0 r10 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D4A:
	r3_403 = 0x00000001
// DataOut: ap fp r0 r10 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:0x00000000 r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:0x00000000

l00018D4C:
	word32 r9_409 = r3_403
	branch r5_401 <u r7_377 l00018D57
// DataOut: ap fp r0 r10 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:0x00000000 r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D57:
	word32 r11_472 = ap + 12
// DataOut: ap fp r0 r10 r11 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:0x00000000 r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid>

l00018D64:
	branch r9_409 != 0x00000000 l00018D7C
// DataOut: ap fp r0 r10 r11 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018D68:
	branch (uint32) Mem376[Mem376[ap + 4:word32]:byte] != 0x0000005C l00018D7C
// DataOut: ap fp r0 r10 r11 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018D7C:
	branch r9_409 != 0x00000000 l00018D94
// DataOut: ap fp r0 r10 r11 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018D80:
	r0 = Mem376[ap + 4:word32]
	branch (uint32) Mem376[r0:byte] != 0x0000002D l00018D94
// DataOut: ap fp r0 r10 r11 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018D94:
	branch Mem376[r11_472:word32] == 0x00000000 l00018DC0
// DataOut: ap fp r0 r10 r11 r4 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DC0:
	r3_403 = DPB(r3_403, Mem376[Mem376[ap + 8:word32]:byte], 0)
// DataOut: ap fp r0 r10 r11 r3 r4 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018D98:
	word32 r1_784
	word32 r3_774 = (uint32) Mem376[Mem376[ap + 8:word32]:byte]
	word32 r2_775 = r3_774 & ~0xFFFFFF80
	branch (Mem376[r10 + r2_775 * 4:word32] & 0x00000001) == 0x00000000 l00018DB8
// DataOut: ap fp r0 r10 r11 r3 r4 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DB8:
	r1_784 = DPB(r1, (int8) r3_774, 0)
// DataOut: ap fp r0 r1 r10 r11 r4 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DAC:
	word32 sp_805 = sp_159 - 0x00000004
	Mem807[sp_805:int32] = (int32) (int8) r3_774
	byte CVZN_811
	byte ZN_812
	bool C_813
	bool V_814
	word32 r2_816
	bool Z_818
	bool N_820
	byte CZN_821
	word32 r5_824
	byte VZN_827
	word32 r9_830
	word32 r1_832
	byte CZ_833
	call Mem807[r6_366:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_495,C_809,CVZN_491,CZ_482,CZN_532,dwLoc08,dwLoc0C,dwLoc10,fp_494,N_488,r0_534,r1_481,r10_479,r11_476,r2_775,r3_774,r4_487,r5_484,r6_480,r7_477,r8_478,r9_483,sp_805,V_778,VZN_808,Z_536,ZN_776
		defs: ap_815,C_813,CVZN_811,CZ_833,CZN_821,fp_823,N_820,r0_822,r1_832,r10_826,r11_831,r2_816,r3_819,r4_817,r5_824,r6_825,r7_829,r8_828,r9_830,sp_810,V_814,VZN_827,Z_818,ZN_812
	r1_784 = DPB(r1_832, (int8) r0, 0)
// DataOut: ap fp r0 r1 r10 r11 r4 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DBB:
	r3_403 = DPB(r3_774, (byte) r1_784, 0)
// DataOut: ap fp r0 r10 r11 r3 r4 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DC4:
	r1 = Mem376[ap + 4:word32]
	word32 r5_557 = (uint32) (byte) r3_403
	branch (uint32) Mem376[r1 + 0x00000001:byte] == 0x0000002D l00018E4B
// DataOut: ap fp r0 r1 r10 r11 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DD7:
	branch r4_400 == 0x00000000 l00018DE0
// DataOut: ap fp r1 r10 r11 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DE0:
	r0 = (uint32) Mem376[r1:byte]
// DataOut: ap fp r0 r1 r10 r11 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DDB:
	r0 = r4_400
// DataOut: ap fp r0 r1 r10 r11 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DE3:
	word32 r4_595 = r0
	word32 r2_596 = (uint32) Mem376[r1:byte]
	branch r0 >u r2_596 l00018E4B
// DataOut: ap fp r0 r10 r11 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DEE:
	r3_403 = Mem376[r11_472:word32]
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DF4:
	branch r3_403 == 0x00000000 l00018E18
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E18:
	r1 = r4_595
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DF8:
	r0 = r4_595 & ~0xFFFFFF80
	branch (Mem376[r10 + r0 * 4:word32] & 0x00000001) == 0x00000000 l00018E10
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E10:
	r2_596 = DPB(r2_596, (int8) r4_595, 0)
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E05:
	word32 sp_724 = sp_159 - 0x00000004
	Mem726[sp_724:int32] = (int32) (int8) r4_595
	byte CVZN_730
	byte ZN_731
	bool C_732
	bool V_733
	word32 r2_735
	bool Z_737
	bool N_739
	byte CZN_740
	byte VZN_746
	word32 r9_749
	word32 r1_751
	byte CZ_752
	call Mem726[r6_366:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_623,C_728,CVZN_619,CZ_610,CZN_614,dwLoc08,dwLoc0C,dwLoc10,fp_622,N_616,r0_696,r1_609,r10_607,r11_604,r2_617,r3_618,r4_615,r5_612,r6_608,r7_605,r8_606,r9_611,sp_724,V_699,VZN_727,Z_625,ZN_697
		defs: ap_734,C_732,CVZN_730,CZ_752,CZN_740,fp_742,N_739,r0_741,r1_751,r10_745,r11_750,r2_735,r3_738,r4_736,r5_743,r6_744,r7_748,r8_747,r9_749,sp_729,V_733,VZN_746,Z_737,ZN_731
	r2_596 = DPB(r2_735, (int8) r0, 0)
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E13:
	r1 = (int32) (int8) r2_596
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E1B:
	branch r1 != r5_557 l00018E40
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E40:
	r4_595 = r4_595 + 0x00000001
	r0 = (uint32) Mem376[Mem376[ap + 4:word32]:byte]
	branch r4_595 <=u r0 l00018DF4
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E4B:
	r9_409 = 0x00000000
	r4_400 = 0x00000000
// DataOut: ap fp r0 r10 r11 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E20:
	word32 r2_657
	branch r8_374 == 0x00000000 l00018E28
// DataOut: ap fp r0 r10 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E28:
	word32 sp_673 = sp_159 - 0x00000004
	Mem675[sp_673:word32] = Mem376[ap + 12:word32]
	Mem678[sp_673 - 0x00000004:word32] = Mem675[ap + 8:word32] + 0x00000001
	Mem681[sp_673 - 0x00000008:word32] = r7_377 + 0x00000001
	word32 ap_683
	word32 sp_685
	r2_657 = fn00018C3A(r0, r10, ap, fp, out ap_683, out fp, out sp_685)
// DataOut: fp r10 r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E24:
	r2_657 = 0x00000000
// DataOut: fp r10 r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E3C:
	word32 sp_665 = fp - 0x00000004
	*spOut = sp_665
	word32 fp_666
	*fpOut = Mem376[sp_665 + 0x00000010:word32]
	word32 ap_667
	*apOut = Mem376[sp_665 + 0x0000000C:word32]
	return r2_657
// DataOut: ap fp r0 r10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018D8C:
	r0 = r0 - 0x00000001
	r4_400 = (uint32) Mem376[r0 - 0x00000001:byte]
// DataOut: ap fp r0 r10 r11 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018D75:
	r9_409 = 0x00000001
// DataOut: ap fp r0 r10 r11 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E4F:
	Mem522[ap + 4:word32] = Mem376[ap + 4:word32] + 0x00000001
	branch Mem522[ap + 4:word32] >=u r7_377 l00018E5B
// DataOut: ap fp r0 r10 r11 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E58:
// DataOut: ap fp r0 r10 r11 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018D54:
// DataOut: ap fp r0 r10 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:0x00000000 r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid>

l00018E5B:
	word32 r2_438
	branch r8_374 == 0x00000000 l00018E78
// DataOut: ap fp r0 r10 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E78:
	r2_438 = 0x00000000
// DataOut: fp r10 r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E5F:
	word32 sp_449 = sp_159 - 0x00000004
	Mem451[sp_449:word32] = Mem376[ap + 12:word32]
	Mem454[sp_449 - 0x00000004:word32] = Mem451[ap + 8:word32] + 0x00000001
	Mem457[sp_449 - 0x00000008:word32] = r7_377 + 0x00000001
	word32 ap_459
	word32 sp_461
	r2_438 = fn00018C3A(r0, r10, ap, fp, out ap_459, out fp, out sp_461)
// DataOut: fp r10 r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E7A:
	word32 sp_446 = fp - 0x00000004
	*spOut = sp_446
	word32 fp_447
	*fpOut = Mem376[sp_446 + 0x00000010:word32]
	word32 ap_448
	*apOut = Mem376[sp_446 + 0x0000000C:word32]
	return r2_438
// DataOut: ap fp r0 r10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018D37:
	word32 sp_397
	*spOut = fp - 0x00000004
	word32 fp_398
	*fpOut = Mem376[fp + 0x0000000C:word32]
	word32 ap_399
	*apOut = Mem376[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 r10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018CD0:
	word32 sp_361
	*spOut = fp - 0x00000004
	word32 fp_362
	*fpOut = Mem7[fp + 0x0000000C:word32]
	word32 ap_363
	*apOut = Mem7[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 r10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid>

l00018CC7:
// DataOut: ap fp r0 r10 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018E7E:
	branch r4_202 != 0x0000005C l00018E96
// DataOut: ap fp r0 r10 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018E87:
	word32 r2_335 = Mem7[ap + 4:word32]
	Mem337[ap + 4:word32] = Mem7[ap + 4:word32] + 0x00000001
	r4_202 = (uint32) Mem337[r2_335:byte]
	branch r4_202 != 0x00000000 l00018E96
// DataOut: ap fp r0 r10 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018E96:
	word32 r5_208
	branch Mem7[ap + 12:word32] == 0x00000000 l00018EC4
// DataOut: ap fp r0 r10 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018EC4:
	r5_208 = DPB(r5, (byte) r4_202, 0)
// DataOut: ap fp r0 r10 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018E9B:
	word32 r5_303 = (uint32) (byte) r4_202
	branch (Mem7[r10 + (r5_303 & ~0xFFFFFF80) * 4:word32] & 0x00000001) == 0x00000000 l00018EBC
// DataOut: ap fp r0 r10 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018EBC:
	r3 = DPB(r3, (int8) r5_303, 0)
// DataOut: ap fp r0 r10 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid>
// LocalsOut: fp(32)

l00018EAB:
	fn0001929A()
	r3 = DPB(r3, (int8) r0, 0)
// DataOut: ap fp r0 r10 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid>
// LocalsOut: fp(32)

l00018EBF:
	r5_208 = DPB(r5_303, (byte) r3, 0)
// DataOut: ap fp r0 r10 r5
// DataOut (flags): 
// SymbolicIn: r3:<invalid> sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l00018EC7:
	word32 r4_219
	branch Mem7[ap + 12:word32] == 0x00000000 l00018EF8
// DataOut: ap fp r0 r10 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l00018EF8:
	r4_219 = DPB(r4_202, Mem7[Mem7[ap + 8:word32]:byte], 0)
// DataOut: ap fp r0 r10 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l00018ECC:
	word32 r3_278
	word32 r4_271 = (uint32) Mem7[Mem7[ap + 8:word32]:byte]
	branch (Mem7[r10 + (r4_271 & ~0xFFFFFF80) * 4:word32] & 0x00000001) == 0x00000000 l00018EF0
// DataOut: ap fp r0 r10 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l00018EF0:
	r3_278 = DPB(r3, (int8) r4_271, 0)
// DataOut: ap fp r0 r10 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l00018EE0:
	fn0001929A()
	r3_278 = DPB(r3, (int8) r0, 0)
// DataOut: ap fp r0 r10 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l00018EF3:
	r4_219 = DPB(r4_271, (byte) r3_278, 0)
// DataOut: ap fp r0 r10 r4 r5
// DataOut (flags): 
// SymbolicIn: r3:<invalid> sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l00018EFC:
	word32 r2_233
	branch (byte) r5_208 != (byte) r4_219 l00018F18
// DataOut: ap fp r0 r10
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l00018F18:
	r2_233 = 0x00000000
// DataOut: fp r10 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018F01:
	Mem247[ap + 8:word32] = Mem7[ap + 8:word32] + 0x00000001
	word32 ap_257
	word32 sp_259
	r2_233 = fn00018C3A(r0, r10, ap, fp, out ap_257, out fp, out sp_259)
// DataOut: fp r10 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018F1A:
	word32 sp_240 = fp - 0x00000004
	*spOut = sp_240
	word32 fp_241
	*fpOut = Mem7[sp_240 + 0x00000010:word32]
	word32 ap_242
	*apOut = Mem7[sp_240 + 0x0000000C:word32]
	return r2_233
// DataOut: ap fp r0 r10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018E93:
	word32 sp_348
	*spOut = fp - 0x00000004
	word32 fp_349
	*fpOut = Mem337[fp + 0x0000000C:word32]
	word32 ap_350
	*apOut = Mem337[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 r10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid>

l00018C8B:
	branch (uint32) Mem7[Mem7[ap + 4:word32]:byte] != 0x00000000 l00018C95
// DataOut: ap fp r0 r10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid>

l00018C95:
	branch Mem7[Mem7[ap + 8:word32]:byte] == 0x00 l00018CBA
// DataOut: ap fp r0 r10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid>

l00018C9A:
// DataOut: ap fp r0 r10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid>

l00018C9C:
	word32 sp_162 = sp_159 - 0x00000004
	Mem164[sp_162:word32] = Mem7[ap + 12:word32]
	Mem167[sp_162 - 0x00000004:word32] = Mem164[ap + 8:word32]
	Mem170[sp_162 - 0x00000008:word32] = Mem167[ap + 4:word32]
	r0 = fn00018C3A(r0, r10, ap, fp, out ap, out fp, out sp_159)
	branch r0 == 0x00000000 l00018CB2
// DataOut: ap fp r0 r10 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018CB2:
	Mem191[ap + 8:word32] = Mem170[ap + 8:word32] + 0x00000001
	branch Mem191[Mem191[ap + 8:word32]:byte] != 0x00 l00018C9C
// DataOut: ap fp r0 r10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018CBA:
	word32 sp_152 = fp - 0x00000004
	*spOut = sp_152
	word32 fp_153
	*fpOut = Mem7[sp_152 + 0x00000010:word32]
	word32 ap_154
	*apOut = Mem7[sp_152 + 0x0000000C:word32]
	return 0x00000002
// DataOut: ap fp r0 r10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018CAE:
	word32 sp_187
	*spOut = fp - 0x00000004
	word32 fp_188
	*fpOut = Mem170[fp + 0x0000000C:word32]
	word32 ap_189
	*apOut = Mem170[fp + 0x00000008:word32]
	return r0
// DataOut: ap fp r0 r10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018C91:
	word32 sp_138
	*spOut = fp - 0x00000004
	word32 fp_139
	*fpOut = Mem7[fp + 0x0000000C:word32]
	word32 ap_140
	*apOut = Mem7[fp + 0x00000008:word32]
	return 0x00000001
// DataOut: ap fp r0 r10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid>

l00018C65:
	word32 r2_117
	branch Mem7[Mem7[ap + 8:word32]:byte] == 0x00 l00018C80
// DataOut: ap fp r0 r10 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018C80:
	r2_117 = 0x00000000
// DataOut: fp r10 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid>

l00018C6D:
	word32 ap_113
	word32 sp_115
	r2_117 = fn00018C3A(r0, r10, ap, fp, out ap_113, out fp, out sp_115)
// DataOut: fp r10 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid>

l00018C82:
	word32 sp_96 = fp - 0x00000004
	*spOut = sp_96
	word32 fp_97
	*fpOut = Mem7[sp_96 + 0x00000010:word32]
	word32 ap_98
	*apOut = Mem7[sp_96 + 0x0000000C:word32]
	return r2_117
// DataOut: ap fp r0 r10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018C50:
	word32 r3_44 = 0x00000000
	branch (uint32) Mem7[Mem7[ap + 8:word32]:byte] != 0x00000000 l00018C5C
// DataOut: fp r10 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid>

l00018C5A:
	r3_44 = 0x00000001
// DataOut: fp r10 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r3:0x00000000

l00018C5C:
	word32 sp_57
	*spOut = fp - 0x00000004
	word32 fp_58
	*fpOut = Mem7[fp + 0x0000000C:word32]
	word32 ap_59
	*apOut = Mem7[fp + 0x00000008:word32]
	return r3_44
// DataOut: ap fp r0 r10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r4:<invalid> r3:<invalid>

fn00018C3A_exit:
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



word32 fn00018F22(word32 ap, word32 fp, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp r0 sp
// Trashed: CVZN ap fp r0 r1 sp
// Preserved:
fn00018F22_entry:
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00018F22:
	branch Mem0[Mem0[ap + 4:word32]:byte] == 0x00 l00018F5E
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00018F2A:
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l00018F2C:
	word32 r0_44 = Mem0[ap + 4:word32]
	byte v11_45 = Mem0[r0_44:byte]
	branch v11_45 != 0x5C l00018F48
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

l00018F39:
	branch Mem0[r0_44 + 0x00000001:byte] == 0x00 l00018F48
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

l00018F48:
	branch v11_45 == 0x25 l00018F52
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

l00018F4D:
	branch v11_45 != 0x2A l00018F56
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

l00018F52:
	word32 fp_71
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_72
	*apOut = Mem0[fp + 0x00000008:word32]
	return 0x00000001
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

l00018F3F:
	Mem83[ap + 4:word32] = r0_44 + 0x00000001
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

l00018F56:
	Mem53[ap + 4:word32] = Mem0[ap + 4:word32] + 0x00000001
	branch Mem53[Mem53[ap + 4:word32]:byte] != 0x00 l00018F2C
// DataOut: ap fp pc r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

l00018F5E:
	word32 fp_35
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_36
	*apOut = Mem0[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

fn00018F22_exit:
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>



void fn00018F66()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00018F66_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00018F66_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00018F66:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00018FA9()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00018FA9_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00018FA9_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00018FA9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0001902B()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001902B_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0001902B_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0001902B:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0001924A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001924A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0001924A_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001924A:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0001924E()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001924E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0001924E_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001924E:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00019252()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00019252_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00019252_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00019252:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0001925E()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001925E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0001925E_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001925E:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00019262()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00019262_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00019262_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00019262:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00019266()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00019266_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00019266_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00019266:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0001926A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001926A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0001926A_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001926A:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0001926E()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001926E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0001926E_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001926E:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00019272()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00019272_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00019272_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00019272:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00019276()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00019276_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00019276_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00019276:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0001927A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001927A_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001927A:
	__halt()
	__halt()
	0x00 = ~0x00000040 & 0x00
	branch false l0001927C_thunk_fn00019280
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001927C_thunk_fn00019280:
	fn00019280()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l0001927C_thunk_fn00019280:
	fn00019280()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

fn0001927A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0001927E()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001927E_entry:
// DataOut: ap fp pc r0 r2 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001927E:
	__halt()
	__halt()
// DataOut: ap fp pc r0 r2 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001927F_thunk_fn00019280:
	fn00019280()
	return
// DataOut: ap fp pc r0 r2 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

fn0001927E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00019280()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
l00019280:
	__movp(0x00, 0x00, 0x0004)
// DataOut: ap fp pc r0 r2 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn:

l00019280_thunk_fn00019284:
	fn00019284()
	return
// DataOut: ap fp pc r0 r2 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn:
// Terminates process

fn00019280_entry:
// DataOut: ap fp pc r0 r2 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00019280:
	__movp(0x00, 0x00, 0x0004)
// DataOut: ap fp pc r0 r2 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00019280_thunk_fn00019284:
	fn00019284()
	return
// DataOut: ap fp pc r0 r2 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

fn00019280_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00019282()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00019282_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00019282_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00019282:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00019284()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
l00019284:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00019284_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00019284_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00019284:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00019286()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00019286_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00019286_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00019286:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0001928A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001928A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0001928A_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001928A:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0001928E()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001928E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0001928E_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001928E:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00019292()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00019292_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00019292_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00019292:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word32 fn00019296(word32 fp, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp
// LiveOut: ap fp sp
// Trashed: ap fp sp
// Preserved:
fn00019296_entry:
// DataOut: fp r0 r10 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00019296:
	__halt()
	__halt()
	word32 sp_3
	*spOut = fp - 0x00000004
	word32 fp_5
	*fpOut = Mem0[fp + 0x0000000C:word32]
	return Mem0[fp + 0x00000008:word32]
// DataOut: ap fp r0 r10 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00019296_exit:
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 fp:<invalid> ap:<invalid>



void fn0001929A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001929A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0001929A_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001929A:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0001929E()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001929E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0001929E_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001929E:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000192A2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  V
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000192A2_entry:
// DataOut: ap fp r0 r10 r11 r5
// DataOut (flags): V
// SymbolicIn: sp:fp

l000192A2:
	__halt()
	__halt()
	branch V l000192A4_thunk_fn000192A8
// DataOut: ap fp r0 r10 r11 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l000192A4_thunk_fn000192A8:
	fn000192A8()
	return
// DataOut: ap fp r0 r10 r11 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l000192A4_thunk_fn000192A6:
	fn000192A6()
	return
// DataOut: ap fp r0 r10 r11 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

fn000192A2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000192A6()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000192A6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000192A6_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000192A6:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000192A8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
l000192A8:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000192A8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000192A8_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000192A8:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000192AA()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000192AA_entry:
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000192AA:
	__halt()
	__halt()
	0x00 = ~0x00000008 & 0x00
	branch false l000192AC_thunk_fn000192B0
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000192AC_thunk_fn000192B0:
	fn000192B0()
	return
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l000192AC_thunk_fn000192B0:
	fn000192B0()
	return
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

fn000192AA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000192AE()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000192AE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000192AE_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000192AE:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000192B0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
l000192B0:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000192B0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000192B0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000192B0:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000192B2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000192B2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000192B2_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000192B2:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word32 fn000192B6(word32 fp, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp
// LiveOut: ap fp sp
// Trashed: ap fp sp
// Preserved:
fn000192B6_entry:
// DataOut: fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l000192B6:
	__halt()
	__halt()
	word32 sp_3
	*spOut = fp - 0x00000004
	word32 fp_5
	*fpOut = Mem0[fp + 0x0000000C:word32]
	return Mem0[fp + 0x00000008:word32]
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn000192B6_exit:
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 fp:<invalid> ap:<invalid>



void fn000192BA()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000192BA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000192BA_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000192BA:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000192BE()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000192BE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000192BE_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000192BE:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000192C2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000192C2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000192C2_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000192C2:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000192C6()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000192C6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000192C6_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000192C6:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000192CE()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000192CE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000192CE_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000192CE:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000192D2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000192D2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000192D2_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000192D2:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000192D6()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000192D6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000192D6_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000192D6:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000192DA()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000192DA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000192DA_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000192DA:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000192DE()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000192DE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000192DE_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000192DE:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000192E6()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000192E6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000192E6_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l000192E6:
	__halt()
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0001931E()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001931E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0001931E_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001931E:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00019322()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00019322_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00019322_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00019322:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0001932E()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001932E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0001932E_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001932E:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00019332()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00019332_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00019332_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00019332:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00019336()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00019336_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00019336:
	__halt()
	__halt()
	fn0001933E()
	__halt()
	__halt()
	__halt()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

fn00019336_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0001933E()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001933E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0001933E_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001933E:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00019342()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00019342_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00019342_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00019342:
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00019346()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00019346_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00019346_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00019346:
	__halt()
	__halt()
	__halt()
	__halt()
	__halt()
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



