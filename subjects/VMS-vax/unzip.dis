void fn0000802E(word32 r0, word32 r2, word32 r4, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r2:[0..31] r4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
l00008098:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000809C:
	Mem95[sp - 0x00000004:uint32] = 0x0000005D
	Mem98[sp - 0x00000008:word32] = Mem95[Mem95[ap + 8:word32]:word32]
	call Mem98[0x000192DC:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r2:r2,r3:r3,r4:r4,sp:sp - 0x00000008,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: r0:r0_108,sp:sp_102
	branch r0_108 != 0x00000000 l000080B8
	def sp
	def r3
	def dwLoc08
	def dwLoc0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000080B8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000080AF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000080BA:
	Mem124[sp_102 - 0x00000004:word32] = 0x00000007
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000802E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000802E_entry:
	def fp
	def r4
	def ap
	def r2
	def r0
	def fp
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000802E:
	r3_9 = Mem8[0x000192E0:word32]
	call r3_9 + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r2:r2,r3:r3_9,r4:r4,sp:fp - 0x0000000C,Stack +0004:0x00000002,Stack +0008:r4
		defs: ap:ap_17,fp:fp_23,r0:r0_21,r2:r2_19,r3:r3_15,r4:r4_14,sp:sp_13
	Mem26[sp_13 - 0x00000004:word32] = r4_14
	Mem28[sp_13 - 0x00000008:word32] = 0x0000000F
	call r3_15 + 2 (retsize: 4;)
		uses: ap:ap_17,fp:fp_23,r0:r0_21,r2:r2_19,r3:r3_15,r4:r4_14,sp:sp_13 - 0x00000008,Stack +FFFFFFF8:0x00000002,Stack +FFFFFFFC:r4
		defs: ap:ap_35,fp:fp_38,r0:r0_37,r2:r2_36,r3:r3_34,r4:r4_33,sp:sp_32
	Mem41[sp_32 - 0x00000004:word32] = r4_33
	Mem43[sp_32 - 0x00000008:word32] = 0x0000000A
	call r3_34 + 2 (retsize: 4;)
		uses: ap:ap_35,fp:fp_38,r0:r0_37,r2:r2_36,r3:r3_34,r4:r4_33,sp:sp_32 - 0x00000008,Stack +FFFFFFF8:0x00000002,Stack +FFFFFFFC:r4
		defs: ap:ap_50,fp:fp_53,r0:r0_52,r2:r2_51,r3:r3_49,r4:r4_48,sp:sp_47
	Mem56[sp_47 - 0x00000004:word32] = r4_48
	Mem58[sp_47 - 0x00000008:word32] = 0x0000000B
	call r3_49 + 2 (retsize: 4;)
		uses: ap:ap_50,fp:fp_53,r0:r0_52,r2:r2_51,r3:r3_49,r4:r4_48,sp:sp_47 - 0x00000008,Stack +FFFFFFF8:0x00000002,Stack +FFFFFFFC:r4
		defs: ap:ap_65,fp:fp_68,r2:r2_66,sp:sp_62
	r3_70 = 0x00000000
	branch Mem58[ap_65 + 4:word32] != 0x00000001 l00008081
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000807F:
	r3_74 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008081:
	r3_76 = PHI((r3_70, l0000802E), (r3_74, l0000807F))
	Mem79[r2_66 + 96:word32] = r3_76
	Mem84[sp_62 - 0x00000004:word32] = ap_65 + 8
	Mem87[sp_62 - 0x00000008:word32] = ap_65 + 4
	fn00008EC2(fp_68)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00008CCE(word32 r2, word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] r2:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn00008CCE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00008CCE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008CCE:
	branch Mem0[ap + 4:word32] == 0x00000000 l00008CF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008CF4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008CEC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008CF6:
	branch Mem0[r2:word32] != 0x00000000 l00008D00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008D00:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008CFD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008DAC:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00008EC2(word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn00008EC2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00008EC2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008EC2:
	Mem6[fp + -280:word16] = 0x0000
	Mem8[fp + -278:byte] = 0x0E
	Mem10[fp + -277:byte] = 0x02
	Mem12[fp + -276:word32] = 0x00000000
	Mem14[fp + -288:word16] = 0x0000
	Mem16[fp + -286:byte] = 0x0E
	Mem18[fp + -285:byte] = 0x02
	Mem20[fp + -284:word32] = 0x00000000
	Mem22[fp + -296:word16] = 0x0000
	Mem24[fp + -294:byte] = 0x0E
	Mem26[fp + -293:byte] = 0x02
	Mem28[fp + -292:word32] = 0x00000000
	Mem30[fp + -304:word16] = 0x0000
	Mem32[fp + -302:byte] = 0x0E
	Mem34[fp + -301:byte] = 0x02
	Mem36[fp + -300:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00009746(word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
l000098A6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000097A4:
	def r8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000098A9:
	Mem305[Mem0[ap + 24:word32]:word32] = r8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000097A7:
	def r4
	def dwLoc18
	r7_37 = ap + 20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000097AC:
	r7_48 = PHI((r7_37, l000097A7), (r7, l000098A6))
	r9_42 = r8
	r8_47 = r8 + ((uint32) Mem0[fp + -20:word16] + 0x00000001)
	branch r8_47 <=u Mem0[Mem0[r7_48:word32]:word32] l000097F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000097BE:
	r4_53 = Mem0[ap + 16:word32]
	r3_55 = Mem0[r7_48:word32]
	r5_54 = Mem0[r4_53:word32]
	Mem57[r3_55:word32] = Mem0[r3_55:word32] + 0x00000100
	Mem61[sp - 0x00000004:word32] = Mem57[r3_55:word32]
	Mem64[sp - 0x00000008:word32] = Mem61[r4_53:word32]
	call Mem64[0x000192B8:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r2:r2,r3:r3_55,r4:r4_53,r5:r5_54,r6:r6,r7:r7_48,r8:r8_47,r9:r8,sp:sp - 0x00000008,Stack +FFFFFFEC:dwLoc18
		defs: ap:ap_70,fp:fp_69,r0:r0_72,r2:r2_74,r3:r3_76,r4:r4_75,r5:r5_80,r6:r6_82,r7:r7_78,r8:r8_77,r9:r9_79,sp:sp_68
	Mem85[r4_75:word32] = r0_72
	branch r0_72 != 0x00000000 l000097F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000097F2:
	r5_126 = PHI((r5_80, l000097BE), (r5, l000097AC))
	r9_124 = PHI((r9_79, l000097BE), (r9_42, l000097AC))
	r7_122 = PHI((r7_78, l000097BE), (r7_48, l000097AC))
	r8_120 = PHI((r8_77, l000097BE), (r8_47, l000097AC))
	r4_116 = PHI((r4_75, l000097BE), (r4, l000097AC))
	r2_114 = PHI((r2_74, l000097BE), (r2, l000097AC))
	r0_112 = PHI((r0_72, l000097BE), (r0, l000097AC))
	ap_102 = PHI((ap_70, l000097BE), (ap, l000097AC))
	fp_93 = PHI((fp_69, l000097BE), (fp, l000097AC))
	sp_91 = PHI((sp_68, l000097BE), (sp, l000097AC))
	sp_92 = sp_91 - 0x00000004
	Mem95[sp_92:word32] = fp_93 + -20
	Mem98[sp_92 - 0x00000004:word32] = fp_93 + -12
	Mem101[sp_92 - 0x00000008:word32] = fp_93 + -8
	r3_103 = Mem101[ap_102 + 8:word32]
	Mem105[sp_92 - 0x0000000C:word32] = r3_103
	call Mem105[0x00019344:word32] + 2 (retsize: 4;)
		uses: ap:ap_102,fp:fp_93,r0:r0_112,r2:r2_114,r3:r3_103,r4:r4_116,r5:r5_126,r6:0x00000000,r7:r7_122,r8:r8_120,r9:r9_124,sp:sp_92 - 0x0000000C,Stack +FFFFFFEC:dwLoc18
		defs: ap:ap_111,fp:fp_110,r2:r2_115,r3:r3_119,r6:r6_129,r9:r9_125,sp:sp_109
	r4_131 = Mem105[fp_110 + -8:word32]
	branch r4_131 <= 0x00000001 l00009820
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009813:
	branch Mem105[r4_131 + Mem105[r3_119 + 4:word32] - 0x00000002:byte] == 0x22 l00009824
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009820:
	branch r4_131 != 0x00000000 l00009827
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009824:
	r6_145 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009827:
	r6_355 = PHI((r6_129, l00009820), (r6_145, l00009824))
	r3_155 = Mem105[fp_110 + -16:word32]
	r4_162 = r9_125 + Mem105[Mem105[ap_111 + 16:word32]:word32]
	r5_163 = 0x00000000
	branch (uint32) Mem105[fp_110 + -20:word16] <=u 0x00000000 l00009866
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000983B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000983C:
	r5_203 = PHI((r5_163, l0000983B), (r5_205, l0000985B))
	r4_187 = PHI((r4_162, l0000983B), (r4_360, l0000985B))
	Mem174 = PHI((Mem105, l0000983B), (Mem209, l0000985B))
	r3_173 = PHI((r3_155, l0000983B), (r3_359, l0000985B))
	branch r6_355 != 0x00000000 l00009858
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009840:
	branch Mem174[r3_173:byte] < 0x41 l00009858
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009846:
	branch Mem174[r3_173:byte] > 0x5A l00009858
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009858:
	Mem188[r4_187:byte] = Mem174[r3_173:byte]
	r3_183 = r3_173 + 0x00000001
	r4_189 = r4_187 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000984C:
	Mem198[r4_187:int8] = (int8) ((int32) Mem174[r3_173:int8] + 0x00000020)
	r3_194 = r3_173 + 0x00000001
	r4_199 = r4_187 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000985B:
	r4_360 = PHI((r4_199, l0000984C), (r4_189, l00009858))
	r3_359 = PHI((r3_194, l0000984C), (r3_183, l00009858))
	Mem209 = PHI((Mem198, l0000984C), (Mem188, l00009858))
	r5_205 = r5_203 + 0x00000001
	branch r5_205 <u (uint32) Mem209[fp_110 + -20:word16] l0000983C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009866:
	Mem236 = PHI((Mem105, l00009827), (Mem209, l0000985B))
	branch r2_115 != 0x0003FD39 l00009884
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009884:
	Mem240[Mem236[Mem236[ap_111 + 16:word32]:word32]:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000986F:
	Mem249[Mem236[Mem236[ap_111 + 16:word32]:word32]:int8] = (int8) Mem236[ap_111 + 12:int32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009893:
	Mem264[sp_109 - 0x00000004:word32] = fp_110 + -20
	Mem268[sp_109 - 0x00000008:word32] = Mem264[ap_111 + 4:word32]
	fn00018FA9()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000097DF:
	branch r5_80 == 0x00000000 l000097EC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000097E3:
	Mem277[sp_68 - 0x00000004:word32] = r5_80
	call Mem277[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_70,fp:fp_69,r0:r0_72,r2:r2_74,r3:r3_76,r4:r4_75,r5:r5_80,r6:r6_82,r7:r7_78,r8:r8_77,r9:r9_79,sp:sp_68 - 0x00000004,Stack +FFFFFFEC:dwLoc18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000097EC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009767:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000098AD:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000976A:
	r4_21 = Mem0[ap + 16:word32]
	branch Mem0[r4_21:word32] != 0x00000000 l0000978D
	def Mem0
	def sp
	def r0
	def r2
	def r7
	def r9
	def r5
	def r6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000978D:
	Mem30[sp - 0x00000004:word32] = fp + -20
	Mem33[sp - 0x00000008:word32] = Mem30[ap + 4:word32]
	fn00018FA9()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009772:
	r3_309 = Mem0[ap + 20:word32]
	Mem311[r3_309:uint32] = 0x00000100
	Mem314[sp - 0x00000004:word32] = Mem311[r3_309:word32]
	call Mem314[0x000192B4:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r2:r2,r3:r3_309,r4:r4_21,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9,sp:sp - 0x00000004,Stack +FFFFFFEC:dwLoc18
		defs: r0:r0_322,r4:r4_325
	Mem338[r4_325:word32] = r0_322
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00009746_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00009746_entry:
	def fp
	def ap
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009746:
	Mem6[fp + -20:word16] = 0x0000
	Mem8[fp + -18:byte] = 0x0E
	Mem10[fp + -17:byte] = 0x02
	Mem12[fp + -16:word32] = 0x00000000
	fn00018F66()
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000098B6(word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn000098B6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000098B6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000098B6:
	word32 sp_11
	word32 ap_13
	call Mem7[0x00019330:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,sp:fp - 0x00000008,Stack +0004:Mem0[0x0001933C:word32]
		defs: ap:ap_13,sp:sp_11
	Mem19[sp_11 - 0x00000004:word32] = Mem7[ap_13 + 0x00000004:word32]
	fn00018F66()
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00009A52()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn00009A52_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00009A52_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009A52:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00009B0A(word32 r0, word32 r1, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00009B0A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009B0A:
	word32 ap_20
	word32 fp_21
	word32 r10_23
	word32 r11_24
	word32 r2_25
	word32 r3_26
	word32 r4_27
	word32 r5_28
	word32 r6_29
	word32 r7_30
	word32 r8_31
	word32 r9_32
	word32 sp_33
	word32 r1_34
	word32 r0_22 = fn0000AA6A(r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, ap, fp, out r1_34, out r2_25, out r3_26, out r4_27, out r5_28, out r6_29, out r7_30, out r8_31, out r9_32, out r10_23, out r11_24, out ap_20, out fp_21, out sp_33)
	Mem40[ap_20 + 0x0001019C:word32] = r0_22
	branch r0_22 > 0x00000002 l00009B2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009B2A:
	branch Test(UGE,false) l00009B2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009B2C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009B38:
	word32 fp_50
	word32 r2_52
	word32 r3_53
	word32 r5_54
	word32 r0_51 = fn00009C8A(r3_26, r6_29, r7_30, fp_21, out r2_52, out r3_53, out r5_54, out fp_50)
	word32 fp_62 = Mem40[fp_50 + 0x0000000C:word32]
	word32 ap_63 = Mem40[fp_50 + 0x00000008:word32]
	r1Out = r1_34
	r2Out = r2_52
	r3Out = r3_53
	r4Out = r4_27
	r5Out = r5_54
	r6Out = r6_29
	r7Out = r7_30
	r8Out = r8_31
	r9Out = r9_32
	r10Out = r10_23
	r11Out = r11_24
	apOut = ap_63
	fpOut = fp_62
	return r0_51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009B22_1:
	word32 r0_65
	word32 ap_66
	word32 fp_67
	word32 r10_68
	word32 r8_69
	word32 r11_70
	word32 r2_71
	word32 r6_72
	word32 r9_73
	word32 r7_74
	word32 r5_75
	word32 r4_76
	word32 r1_77
	word32 r3_78
	call 0x00009B26 + r0_22 * 0x00000002 (retsize: 4;)
		uses: ap:ap_20,fp:fp_21,r0:r0_22,r1:r1_34,r10:r10_23,r11:r11_24,r2:r2_25,r3:r3_26,r4:r4_27,r5:r5_28,r6:r6_29,r7:r7_30,r8:r8_31,r9:r9_32,sp:sp_33
		defs: ap:ap_66,fp:fp_67,r0:r0_65,r1:r1_77,r10:r10_68,r11:r11_70,r2:r2_71,r3:r3_78,r4:r4_76,r5:r5_75,r6:r6_72,r7:r7_74,r8:r8_69,r9:r9_73
	r1Out = r1_77
	r2Out = r2_71
	r3Out = r3_78
	r4Out = r4_76
	r5Out = r5_75
	r6Out = r6_72
	r7Out = r7_74
	r8Out = r8_69
	r9Out = r9_73
	r10Out = r10_68
	r11Out = r11_70
	apOut = ap_66
	fpOut = fp_67
	return r0_65
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00009B0A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00009BAE()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn00009BAE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00009BAE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009BAE:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00009C8A(word32 r3, word32 r6, word32 r7, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r5Out, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp:[0..31] r3:[8..31] r6:[0..31] r7:[0..31]
// LiveOut: fp r0 r2 r3 r5
// Trashed: CVZN ap fp r0 r2 r3 r5 sp
// Preserved: r4
fn00009C8A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009C8A:
	word32 r3_115 = DPB(r3, 0x01, 0)
	word32 r2_137 = Mem0[r7 + 1511:word32]
	branch (Mem0[r2_137 + 20:word32] & 0x00000008) != 0x00000000 l00009CB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CB1:
	branch Mem0[r7 + 12:word32] != 0x00000000 l00009CB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CB6:
	r3_115 = DPB(r3, 0x00, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CB8:
	word32 r5_58
	int32 v14_24 = (int32) (int8) r3_115
	Mem27[r6 + 352:int32] = v14_24
	branch v14_24 != 0x00000000 l00009CC4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CBF:
	branch Mem27[r7 + 8:word32] != 0x00000000 l00009CC8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CC8:
	word32 r4_49
	branch Mem27[r7 + 8:word32] == 0x00000001 l00009CD4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CD4:
	r2_137 = (uint32) Mem27[Mem27[r7 + 1511:word32] + 0x00000014:ui1]
	r3_115 = 0x00000000
	branch r2_137 != 0x00000000 l00009CE7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CE5:
	r3_115 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CE7:
	r4_49 = r3_115
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CCE:
	r4_49 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CEA:
	r5_58 = r4_49
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CC4:
	r5_58 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CED:
	Mem73[r6 + 356:word32] = r5_58
	Mem75[r6 + 360:byte] = 0x05
	branch Mem75[r7 + 12:word32] == 0x00000000 l00009CFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CFF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CFC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009FFD:
	Mem85[r6 + 0x00010170:word32] = r6 + 361
	Mem87[r6 + 0x0001016C:word32] = 0x00000000
	Mem89[r6 + 0x00010179:word32] = r6 + 361
	Mem91[r6 + 0x0001017D:word32] = 0x00000000
	Mem93[r6 + 0x00010175:word32] = r6 + 0x00010181
	Mem95[r6 + 0x00010185:word32] = r6 + 0x00008169
	Mem97[r6 + 0x00010189:word32] = 0x00000000
	Mem99[r6 + 0x00010181:word32] = r6 + 0x00010175
	Mem101[r6 + 0x00010190:word32] = r6 + 0x00010175
	branch Mem101[r6 + 352:word32] == 0x00000000 l0000A060
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A060:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A053:
	Mem110[r6 + 0x00010174:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A065:
	Mem120[r6 + 0x00010194:word32] = r3_115
	word32 fp_134 = Mem120[fp + 0x0000000C:word32]
	r2Out = r2_137
	r3Out = r3_115
	r5Out = r5_58
	fpOut = fp_134
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00009C8A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000A07A(word32 r0, word32 r3, word32 r6, word32 r7, word32 r8, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r3:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r2 r3 r6 r7 r8 sp
// Preserved:
fn0000A07A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A07A:
	Mem8[r6 + 352:word32] = Mem0[r7 + 12:word32]
	Mem11[r6 + 360:byte] = Mem8[Mem8[r6 + 308:word32] + 31:byte]
	branch Mem11[r7 + 12:word32] != 0x00000000 l0000A0AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0AD:
	word32 r2_16 = (uint32) Mem11[r6 + 360:byte]
	branch r2_16 != 0x00000002 l0000A0BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0BA:
	branch r2_16 != 0x00000005 l0000A0C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0C2:
	branch r2_16 != 0x00000006 l0000A0CA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0CA:
	branch r2_16 != 0x00000004 l0000A0D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0D2:
	word32 sp_44
	word32 r7_45
	word32 r6_46
	word32 r0_49
	word32 fp_51
	word32 ap_53
	word32 r8_54
	word32 r3_56
	call Mem40[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r2:r2_16,r3:r3,r6:r6,r7:r7,r8:r8,sp:fp + 0xFFFFFDEC,Stack +0004:r7 + 1515,Stack +0008:r8 + 399,Stack +000C:r7 + 0x0000C701,Stack +0010:0x00000001
		defs: ap:ap_53,fp:fp_51,r0:r0_49,r3:r3_56,r6:r6_46,r7:r7_45,r8:r8_54,sp:sp_44
	Mem59[sp_44 - 0x00000004:word32] = r0_49
	Mem62[sp_44 - 0x00000008:word32] = r7_45 + 1515
	Mem64[sp_44 - 0x0000000C:word32] = r7_45
	word32 r2_65 = Mem64[r7_45 + 0x0000C839:word32]
	word32 r2_116
	word32 r3_126
	word32 r6_115
	word32 sp_105
	word32 r7_113
	word32 r0_118
	word32 fp_120
	word32 ap_122
	word32 r8_124
	call r2_65 + 2 (retsize: 4;)
		uses: ap:ap_53,fp:fp_51,r0:r0_49,r2:r2_65,r3:r3_56,r6:r6_46,r7:r7_45,r8:r8_54,sp:sp_44 - 0x0000000C,Stack +FFFFFDF0:r7 + 1515,Stack +FFFFFDF4:r8 + 399,Stack +FFFFFDF8:r7 + 0x0000C701,Stack +FFFFFDFC:0x00000001
		defs: ap:ap_75,fp:fp_74,r0:r0_73,r2:r2_72,r3:r3_77,r6:r6_71,r7:r7_70,r8:r8_76,sp:sp_69
	branch Mem64[r6_115 + 320:word32] == 0x00000000 l0000A10C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A101:
	Mem85[sp_105 - 0x00000004:word32] = Mem64[r6_115 + 320:word32]
	call Mem85[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_75,fp:fp_74,r0:r0_73,r2:r2_72,r3:r3_77,r6:r6_71,r7:r7_70,r8:r8_76,sp:sp_69 - 0x00000004,Stack +FFFFFDF0:r7 + 1515,Stack +FFFFFDF4:r8 + 399,Stack +FFFFFDF8:r7 + 0x0000C701,Stack +FFFFFDFC:0x00000001
		defs: ap:ap_95,fp:fp_94,r0:r0_93,r2:r2_92,r3:r3_97,r6:r6_91,r7:r7_90,r8:r8_96,sp:sp_89
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A10C:
	branch Mem100[r6_115 + 328:word32] == 0x00000000 l0000A11D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A112:
	word32 sp_106 = sp_105 - 0x00000004
	Mem108[sp_106:word32] = Mem100[r6_115 + 328:word32]
	call Mem108[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_122,fp:fp_120,r0:r0_118,r2:r2_116,r3:r3_126,r6:r6_99,r7:r7_113,r8:r8_124,sp:sp_106,Stack +FFFFFDF0:r7 + 1515,Stack +FFFFFDF4:r8 + 399,Stack +FFFFFDF8:r7 + 0x0000C701,Stack +FFFFFDFC:0x00000001
		defs: ap:ap_123,fp:fp_121,r0:r0_119,r2:r2_117,r3:r3_127,r6:r6_115,r7:r7_114,r8:r8_125,sp:sp_112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A11D:
	branch Mem130[r6_115 + 324:word32] == 0x00000000 l0000A12E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A123:
	word32 sp_136 = sp_105 - 0x00000004
	Mem138[sp_136:word32] = Mem130[r6_115 + 324:word32]
	call Mem138[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_152,fp:fp_150,r0:r0_148,r2:r2_146,r3:r3_156,r6:r6_129,r7:r7_143,r8:r8_154,sp:sp_136,Stack +FFFFFDF0:r7 + 1515,Stack +FFFFFDF4:r8 + 399,Stack +FFFFFDF8:r7 + 0x0000C701,Stack +FFFFFDFC:0x00000001
		defs: ap:ap_153,fp:fp_151,r0:r0_149,r2:r2_147,r3:r3_157,r6:r6_145,r7:r7_144,r8:r8_155,sp:sp_142
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A12E:
	branch Mem160[r6_115 + 316:word32] == 0x00000000 l0000A13F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A134:
	word32 sp_166 = sp_105 - 0x00000004
	Mem168[sp_166:word32] = Mem160[r6_115 + 316:word32]
	call Mem168[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_182,fp:fp_180,r0:r0_178,r2:r2_176,r3:r3_186,r6:r6_159,r7:r7_173,r8:r8_184,sp:sp_166,Stack +FFFFFDF0:r7 + 1515,Stack +FFFFFDF4:r8 + 399,Stack +FFFFFDF8:r7 + 0x0000C701,Stack +FFFFFDFC:0x00000001
		defs: ap:ap_183,fp:fp_181,r0:r0_179,r6:r6_175,r7:r7_174,r8:r8_185,sp:sp_172
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A13F:
	branch Mem190[r6_115 + 340:word32] == 0x00000000 l0000A161
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A145:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A148:
	word32 r2_201 = Mem200[r6_115 + 340:word32]
	word32 r3_202 = Mem200[r2_201 + 4:word32]
	word32 sp_204 = sp_105 - 0x00000004
	Mem205[sp_204:word32] = r2_201
	word32 r3_222
	call Mem205[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_218,fp:fp_216,r0:r0_214,r2:r2_201,r3:r3_202,r6:r6_199,r7:r7_210,r8:r8_220,sp:sp_204,Stack +FFFFFDF0:r7 + 1515,Stack +FFFFFDF4:r8 + 399,Stack +FFFFFDF8:r7 + 0x0000C701,Stack +FFFFFDFC:0x00000001
		defs: ap:ap_219,fp:fp_217,r0:r0_215,r3:r3_222,r6:r6_212,r7:r7_211,r8:r8_221,sp:sp_209
	Mem225[r6_115 + 340:word32] = r3_222
	branch r3_222 != 0x00000000 l0000A148
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A161:
	word32 r3_232 = Mem231[r6_115 + 308:word32]
	branch r3_232 == 0x00000000 l0000A179
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A168:
	branch r3_232 == r6_115 l0000A179
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A170:
	word32 sp_243 = sp_105 - 0x00000004
	Mem244[sp_243:word32] = r3_232
	call Mem244[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_259,fp:fp_256,r0:r0_254,r2:r6_230,r3:r3_232,r6:r6_230,r7:r7_249,r8:r8_262,sp:sp_243,Stack +FFFFFDF0:r7 + 1515,Stack +FFFFFDF4:r8 + 399,Stack +FFFFFDF8:r7 + 0x0000C701,Stack +FFFFFDFC:0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A179:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0CF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0C7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0BF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0B7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A4F9:
	Mem278[r6 + 0x00010170:word32] = r6 + 361
	Mem280[r6 + 0x0001016C:word32] = 0x00000000
	Mem282[r6 + 0x00010179:word32] = r6 + 361
	Mem284[r6 + 0x0001017D:word32] = 0x00000000
	Mem286[r6 + 0x00010175:word32] = r6 + 0x00010181
	Mem288[r6 + 0x00010185:word32] = r6 + 0x00008169
	Mem290[r6 + 0x00010189:word32] = 0x00000000
	Mem292[r6 + 0x00010181:word32] = r6 + 0x00010175
	Mem294[r6 + 0x00010190:word32] = r6 + 0x00010175
	branch Mem294[r6 + 352:word32] == 0x00000000 l0000A598
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A598:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A54F:
	word32 r0_308 = (uint32) Mem294[r6 + 360:byte]
	branch r0_308 > 0x00000006 l0000A560
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A560:
	vax_addp4(0x0000, 0x11, 0x0028, 0x17)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A554_1:
	call 0x0000A558 + (r0_308 - 0x00000002) * 0x00000002 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0_308,r2:r2_16,r3:r3,r6:r6,r7:r7,r8:r8,sp:fp + -516,Stack +0000:dwLoc0208,Stack +FFFFFFF4:dwLoc0214,Stack +FFFFFFF8:dwLoc0210,Stack +FFFFFFFC:dwLoc020C
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000A07A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0AA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A17D:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000A5B2(word32 r0, word32 r2, word32 r5, word32 r6, word32 r7, word32 r8, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r2:[8..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r2 r3 r5 r6 r7 r8 sp
// Preserved:
fn0000A5B2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A5B2:
	branch Mem0[r7 + 12:word32] != 0x00000000 l0000A5D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A5D2:
	byte v11_11 = Mem0[r6 + 0x000102F4:byte] & ~0xF0
	word32 r2_13 = DPB(r2, v11_11, 0)
	word32 r3_14 = (uint32) v11_11
	branch r3_14 == 0x00000002 l0000A61F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A5E3:
	branch r3_14 == 0x00000005 l0000A61F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A5E8:
	branch r3_14 == 0x00000006 l0000A61F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A5ED:
	branch r3_14 == 0x00000004 l0000A61F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A61F:
	Mem29[r6 + 0x00010170:word32] = r6 + 361
	Mem31[r6 + 0x0001016C:word32] = 0x00000000
	Mem33[r6 + 0x00010179:word32] = r6 + 361
	Mem35[r6 + 0x0001017D:word32] = 0x00000000
	Mem37[r6 + 0x00010175:word32] = r6 + 0x00010181
	Mem39[r6 + 0x00010185:word32] = r6 + 0x00008169
	Mem41[r6 + 0x00010189:word32] = 0x00000000
	Mem43[r6 + 0x00010181:word32] = r6 + 0x00010175
	Mem45[r6 + 0x00010190:word32] = r6 + 0x00010175
	branch r3_14 > 0x00000006 l0000A67E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A67E:
	vax_subp4(0x0000, 0x11, 0x002A, Mem45[Mem45[r5 + 5968:word32]:ptr32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A672_1:
	call 0x0000A676 + (r3_14 - 0x00000002) * 0x00000002 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r3_14,r2:r2_13,r3:r3_14,r5:r5,r6:r6,r7:r7,r8:r8,sp:fp - 0x00000004,Stack +0000:dwLoc08,Stack +FFFFFFF4:dwLoc14,Stack +FFFFFFF8:dwLoc10,Stack +FFFFFFFC:dwLoc0C
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A5F2:
	word32 sp_90
	word32 r7_91
	word32 r6_92
	word32 r3_94
	word32 r8_95
	word32 r0_97
	word32 fp_98
	word32 ap_99
	word32 r5_100
	call Mem86[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r2:r2_13,r3:r3_14,r5:r5,r6:r6,r7:r7,r8:r8,sp:fp - 0x00000014,Stack +0004:r7 + 1515,Stack +0008:r8 + 556,Stack +000C:r7 + 0x0000C701,Stack +0010:0x00000001
		defs: ap:ap_99,fp:fp_98,r0:r0_97,r3:r3_94,r5:r5_100,r6:r6_92,r7:r7_91,r8:r8_95,sp:sp_90
	Mem103[sp_90 - 0x00000004:word32] = r0_97
	Mem106[sp_90 - 0x00000008:word32] = r7_91 + 1515
	Mem108[sp_90 - 0x0000000C:word32] = r7_91
	word32 r2_109 = Mem108[r7_91 + 0x0000C839:word32]
	call r2_109 + 2 (retsize: 4;)
		uses: ap:ap_99,fp:fp_98,r0:r0_97,r2:r2_109,r3:r3_94,r5:r5_100,r6:r6_92,r7:r7_91,r8:r8_95,sp:sp_90 - 0x0000000C,Stack +FFFFFFF0:r7 + 1515,Stack +FFFFFFF4:r8 + 556,Stack +FFFFFFF8:r7 + 0x0000C701,Stack +FFFFFFFC:0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000A5B2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A5CF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A6C4:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000A8D6(word32 r0, word32 r2, word32 r3, word32 r6, word32 r7, word32 r9, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp:[0..31] r0:[0..31] r2:[0..31] r3:[0..31] r6:[0..31] r7:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CVZN fp r0 r10 r2 r3 r6 r7 r8 r9 sp
// Preserved:
fn0000A8D6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A8D6:
	word32 sp_102 = fp + -112
	word32 r10_103 = Mem0[0x0001934C:word32]
	word32 r8_104 = Mem0[0x00019350:word32]
	branch Mem0[r9 + 348:byte] == 0x00 l0000A906
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A906:
	r3 = Mem0[0x00019298:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A910:
	word32 sp_18 = sp_102 - 0x00000004
	Mem19[sp_18:word32] = 0x00000001
	Mem23[sp_18 - 0x00000004:word32] = r7 + 0x0000C701
	Mem27[sp_18 - 0x00000008:word32] = r6 + 718
	Mem30[sp_18 - 0x0000000C:word32] = r7 + 1515
	word32 sp_34
	word32 r10_36
	word32 r8_38
	word32 r9_40
	word32 r3_42
	word32 r0_44
	word32 r7_45
	word32 r6_46
	word32 fp_50
	call Mem30[0x000192D0:word32] + 2 (retsize: 4;)
		uses: fp:fp_49,r0:r0_43,r10:r10_35,r2:r2_47,r3:r3_41,r6:r6_25,r7:r7_21,r8:r8_37,r9:r9_39,sp:sp_18 - 0x0000000C
		defs: fp:fp_50,r0:r0_44,r10:r10_36,r3:r3_42,r6:r6_46,r7:r7_45,r8:r8_38,r9:r9_40,sp:sp_34
	Mem53[sp_34 - 0x00000004:word32] = r0_44
	Mem56[sp_34 - 0x00000008:word32] = r7_45 + 1515
	Mem58[sp_34 - 0x0000000C:word32] = r7_45
	word32 r2_59 = Mem58[r7_45 + 0x0000C839:word32]
	word32 sp_63
	word32 r10_64
	word32 r8_65
	word32 r9_66
	word32 r3_67
	word32 r0_68
	word32 r7_69
	word32 r6_70
	word32 r2_71
	word32 fp_72
	call r2_59 + 2 (retsize: 4;)
		uses: fp:fp_50,r0:r0_44,r10:r10_36,r2:r2_59,r3:r3_42,r6:r6_46,r7:r7_45,r8:r8_38,r9:r9_40,sp:sp_34 - 0x0000000C
		defs: fp:fp_72,r0:r0_68,r10:r10_64,r2:r2_71,r3:r3_67,r6:r6_70,r7:r7_69,r8:r8_65,r9:r9_66,sp:sp_63
	Mem76[sp_63 - 0x00000004:word32] = Mem58[r8_65:word32]
	word32 sp_80
	word32 r10_81
	word32 r8_82
	word32 r9_83
	word32 r3_84
	word32 r0_85
	word32 r7_86
	word32 r6_87
	word32 r2_88
	word32 fp_89
	call Mem76[0x00019294:word32] + 2 (retsize: 4;)
		uses: fp:fp_72,r0:r0_68,r10:r10_64,r2:r2_71,r3:r3_67,r6:r6_70,r7:r7_69,r8:r8_65,r9:r9_66,sp:sp_63 - 0x00000004
		defs: fp:fp_89,r0:r0_85,r10:r10_81,r2:r2_88,r3:r3_84,r6:r6_87,r7:r7_86,r8:r8_82,r9:r9_83,sp:sp_80
	Mem93[sp_80 - 0x00000004:word32] = Mem76[r8_82:word32]
	Mem95[sp_80 - 0x00000008:word32] = 0x00000009
	Mem98[sp_80 - 0x0000000C:word32] = fp_89 + -14
	call Mem98[0x00019290:word32] + 2 (retsize: 4;)
		uses: fp:fp_89,r0:r0_85,r10:r10_81,r2:r2_88,r3:r3_84,r6:r6_87,r7:r7_86,r8:r8_82,r9:r9_83,sp:sp_80 - 0x0000000C
		defs: fp:fp_111,r0:r0_107,r10:r10_103,r3:r3_106,r6:r6_109,r7:r7_108,r8:r8_104,r9:r9_105,sp:sp_102
	branch r0 != 0x00000000 l0000A998
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A954:
	word32 r2_119 = (int32) (Mem98[fp + -14:byte] & ~0x80)
	byte v25_120 = Mem98[r10_103 + r2_119:byte] & ~0xFC
	word32 r2_121 = DPB(r2_119, v25_120, 0)
	branch v25_120 != 0x00 l0000A998
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A965:
	Mem128[sp_102 - 0x00000004:int32] = (int32) Mem98[fp + -14:int8]
	word32 r2_139
	call r3 + 2 (retsize: 4;)
		uses: fp:fp_111,r0:r0_107,r10:r10_103,r2:r2_121,r3:r3_106,r6:r6_109,r7:r7_108,r8:r8_104,r9:r9_105,sp:sp_102 - 0x00000004
		defs: fp:fp_140,r0:r0_136,r10:r10_132,r2:r2_139,r3:r3_135,r6:r6_138,r7:r7_137,r8:r8_133,r9:r9_134,sp:sp_131
	branch r0 == 0x0000006F l0000A998
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A975:
	Mem147[sp_102 - 0x00000004:int32] = (int32) Mem128[fp + -14:int8]
	word32 r2_158
	call r3 + 2 (retsize: 4;)
		uses: fp:fp_140,r0:r0_136,r10:r10_132,r2:r2_139,r3:r3_135,r6:r6_138,r7:r7_137,r8:r8_133,r9:r9_134,sp:sp_131 - 0x00000004
		defs: fp:fp_159,r0:r0_155,r10:r10_151,r2:r2_158,r3:r3_154,r6:r6_157,r7:r7_156,r8:r8_152,r9:r9_153,sp:sp_150
	branch r0 == 0x00000076 l0000A998
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A985:
	Mem166[sp_102 - 0x00000004:int32] = (int32) Mem147[fp + -14:int8]
	call r3 + 2 (retsize: 4;)
		uses: fp:fp_159,r0:r0_155,r10:r10_151,r2:r2_158,r3:r3_154,r6:r6_157,r7:r7_156,r8:r8_152,r9:r9_153,sp:sp_150 - 0x00000004
		defs: fp:fp_178,r0:r0_174,r10:r10_170,r2:r2_177,r3:r3_173,r6:r6_176,r7:r7_175,r8:r8_171,r9:r9_172,sp:sp_169
	branch r0 == 0x0000006E l0000A998
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A998:
	r2 = (int32) (Mem184[fp + -14:byte] & ~0x80)
	branch (Mem184[r10_103 + r2 * 4:word32] & 0x00000001) == 0x00000000 l0000A9C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A9A6:
	word32 sp_193 = sp_102 - 0x00000004
	Mem195[sp_193:int32] = (int32) Mem184[fp + -14:int8]
	word32 r0_207
	call Mem195[0x00019298:word32] + 2 (retsize: 4;)
		uses: fp:fp_183,r0:r0_206,r10:r10_191,r2:r2_188,r3:r3_204,r6:r6_210,r7:r7_208,r8:r8_200,r9:r9_202,sp:sp_193
		defs: fp:fp_213,r0:r0_207,r10:r10_199,r2:r2_212,r3:r3_205,r6:r6_211,r7:r7_209,r8:r8_201,r9:r9_203,sp:sp_198
	Mem216[fp + -14:int8] = (int8) r0_207
	Mem218[r9 + 348:byte] = (byte) r0_207
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A995:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A903:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A9BC:
	Mem224[fp + -14:byte] = Mem0[r9 + 348:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A9C2:
	word32 r0_230 = (int32) Mem229[fp + -14:int8]
	branch r0_230 > 0x00000076 l0000A9DE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A9DE:
	vax_subp4(0x0000, 0x31, Mem229[r0_230:word16], 0x00)
	call fn40009A48 (retsize: 4;)
		uses: fp:fp_228,r0:r0_230 + 0x00000002,r10:r10_240,r2:r2_256,r3:r3_246,r6:r6_253,r7:r7_250,r8:r8_242,r9:r9_244,sp:sp_238
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A9C6_1:
	call 0x0000A9CE + (r0_230 - 0x0000006E) * 0x00000002 (retsize: 4;)
		uses: fp:fp_228,r0:r0_230,r10:r10_240,r2:r2_256,r3:r3_246,r6:r6_253,r7:r7_250,r8:r8_242,r9:r9_244,sp:sp_238
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000A8D6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000AA6A(word32 r0, word32 r1, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000AA6A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AA6A:
	word32 v8_6 = Mem0[r10 + 0x0000C627:word32]
	Mem12[r8 + 308:word32] = 0x00000000
	Mem14[r8 + 316:word64] = 0x0000000000000000
	Mem16[r8 + 324:word64] = 0x0000000000000000
	Mem18[r8 + 340:word64] = 0x0000000000000000
	word32 sp_118 = fp - 0x00000018
	branch v8_6 != 0x00000000 l0000AAA5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AAA5:
	uint32 v20_23 = (uint32) Mem18[r10 + 0x0000C656:word16]
	branch v20_23 > 0x00000000 l0000AAB2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AAB2:
	word32 v21_28 = Mem24[0x000192D0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AABC:
	Mem36[sp_118 + 16:word32] = Mem34[sp_118 + 8:word32]
	branch Mem36[Mem36[sp_118 + 16:word32]:word16] == Mem36[r11 + 831:word16] l0000AACC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AACC:
	Mem42[sp_118 + 4:word32] = 0x00000001
	r3 = Mem42[sp_118 + 16:word32]
	r5 = r3 + 4
	r4 = Mem42[r3 + 4:word32]
	branch r4 != Mem42[r11 + 834:word32] l0000AB00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB00:
	branch r4 != Mem42[r11 + 839:word32] l0000AB4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB4C:
	branch r4 != Mem42[r11 + 844:word32] l0000AB98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB98:
	branch r4 != Mem42[r11 + 849:word32] l0000ABC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ABC0:
	branch r4 != Mem42[r11 + 854:word32] l0000ABE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ABE8:
	branch r4 != Mem42[r11 + 859:word32] l0000AC10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AC10:
	branch r4 != Mem42[r11 + 864:word32] l0000AC38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AC38:
	branch r4 != Mem42[r11 + 869:word32] l0000AC42
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AC42:
	word32 sp_70 = sp_118 - 0x00000004
	Mem71[sp_70:word32] = 0x00000001
	Mem73[sp_70 - 0x00000004:word32] = r3 + 4
	Mem76[sp_70 - 0x00000008:word32] = r11 + 874
	Mem80[sp_70 - 0x0000000C:word32] = r10 + 1515
	word32 sp_84
	word32 r10_85
	word32 r8_87
	word32 r0_89
	word32 fp_91
	word32 ap_93
	word32 r11_94
	word32 r3_97
	word32 r6_99
	word32 r9_101
	word32 r7_103
	word32 r5_104
	word32 r4_105
	word32 r1_750
	call fn00000003 (retsize: 4;)
		uses: ap:ap_92,fp:fp_90,r0:r0_88,r1:r1_438,r10:r10_78,r11:r11_37,r2:r2_95,r3:r3_43,r4:r4_45,r5:r3_43 + 4,r6:r6_98,r7:r7_102,r8:r8_86,r9:r9_100,sp:sp_70 - 0x0000000C,Stack +FFFFFFEC:v21_28,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:v8_6,Stack +FFFFFFF8:v20_23
		defs: ap:ap_93,fp:fp_91,r0:r0_89,r1:r1_750,r10:r10_85,r11:r11_94,r3:r3_97,r4:r4_105,r5:r5_104,r6:r6_99,r7:r7_103,r8:r8_87,r9:r9_101,sp:sp_84
	Mem108[sp_84 - 0x00000004:word32] = r0_89
	Mem111[sp_84 - 0x00000008:word32] = r10_85 + 1515
	Mem113[sp_84 - 0x0000000C:word32] = r10_85
	word32 r2_114 = Mem113[r10_85 + 0x0000C839:word32]
	call r2_114 + 2 (retsize: 4;)
		uses: ap:ap_93,fp:fp_91,r0:r0_89,r1:r1_750,r10:r10_85,r11:r11_94,r2:r2_114,r3:r3_97,r4:r4_105,r5:r5_104,r6:r6_99,r7:r7_103,r8:r8_87,r9:r9_101,sp:sp_84 - 0x0000000C,Stack +FFFFFFEC:v21_28,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:v8_6,Stack +FFFFFFF8:v20_23
		defs: ap:ap_123,fp:fp_122,r0:r0_121,r10:r10_119,r11:r11_124,r3:r3_126,r4:r4_131,r5:r5_130,r6:r6_127,r7:r7_129,r8:r8_120,r9:r9_128,sp:sp_118
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AC3F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AC17:
	word32 sp_133 = sp_118 - 0x00000004
	Mem135[sp_133:uint32] = (uint32) Mem42[Mem42[0x0001936C:word32]:byte]
	Mem138[sp_133 - 0x00000004:word32] = Mem135[0x000192F4:word32]
	Mem140[sp_133 - 0x00000008:word32] = 0x00000000
	Mem142[sp_133 - 0x0000000C:word32] = r3
	r0 = fn0000AEF2(r3, ap, fp, out r1, out r3, out r4, out r5, out r6, out ap, out fp, out sp_118)
	Mem161[r8 + 328:word32] = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ABEF:
	word32 sp_165 = sp_118 - 0x00000004
	Mem167[sp_165:uint32] = (uint32) Mem42[Mem42[0x00019368:word32]:byte]
	Mem170[sp_165 - 0x00000004:word32] = Mem167[0x000192F0:word32]
	Mem172[sp_165 - 0x00000008:word32] = 0x00000000
	Mem174[sp_165 - 0x0000000C:word32] = r3
	r0 = fn0000AEF2(r3, ap, fp, out r1, out r3, out r4, out r5, out r6, out ap, out fp, out sp_118)
	Mem193[r8 + 324:word32] = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ABC7:
	word32 sp_197 = sp_118 - 0x00000004
	Mem199[sp_197:uint32] = (uint32) Mem42[Mem42[0x00019364:word32]:byte]
	Mem202[sp_197 - 0x00000004:word32] = Mem199[0x00019300:word32]
	Mem204[sp_197 - 0x00000008:word32] = 0x00000000
	Mem206[sp_197 - 0x0000000C:word32] = r3
	r0 = fn0000AEF2(r3, ap, fp, out r1, out r3, out r4, out r5, out r6, out ap, out fp, out sp_118)
	Mem225[r8 + 320:word32] = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB9F:
	word32 sp_229 = sp_118 - 0x00000004
	Mem231[sp_229:uint32] = (uint32) Mem42[Mem42[0x00019360:word32]:byte]
	Mem234[sp_229 - 0x00000004:word32] = Mem231[0x000192FC:word32]
	Mem236[sp_229 - 0x00000008:word32] = 0x00000000
	Mem238[sp_229 - 0x0000000C:word32] = r3
	r0 = fn0000AEF2(r3, ap, fp, out r1, out r3, out r4, out r5, out r6, out ap, out fp, out sp_118)
	Mem257[r8 + 316:word32] = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB53:
	word32 sp_261 = sp_118 - 0x00000004
	Mem263[sp_261:uint32] = (uint32) Mem42[Mem42[0x0001935C:word32]:byte]
	Mem266[sp_261 - 0x00000004:word32] = Mem263[0x000192F8:word32]
	Mem268[sp_261 - 0x00000008:word32] = 0x00000000
	Mem270[sp_261 - 0x0000000C:word32] = r3
	r0 = fn0000AEF2(r3, ap, fp, out r1, out r3, out r4, out r5, out r6, out ap, out fp, out sp_118)
	Mem289[r8 + 332:word32] = r0
	branch Mem289[r8 + 340:word32] != 0x00000000 l0000AB7B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB74:
	Mem295[r8 + 340:word32] = Mem289[r8 + 332:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB7B:
	word32 r2_301 = Mem300[r8 + 344:word32]
	branch r2_301 == 0x00000000 l0000AB88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB82:
	Mem307[r2_301 + 4:word32] = Mem300[r8 + 332:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB88:
	word32 r2_313 = Mem312[r8 + 332:word32]
	Mem315[r8 + 344:word32] = r2_313
	Mem317[r2_313 + 4:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB07:
	word32 sp_322 = sp_118 - 0x00000004
	Mem324[sp_322:uint32] = (uint32) Mem42[Mem42[0x00019358:word32]:byte]
	Mem327[sp_322 - 0x00000004:word32] = Mem324[0x00019304:word32]
	Mem329[sp_322 - 0x00000008:word32] = 0x00000000
	Mem331[sp_322 - 0x0000000C:word32] = r3
	r0 = fn0000AEF2(r3, ap, fp, out r1, out r3, out r4, out r5, out r6, out ap, out fp, out sp_118)
	Mem350[r8 + 336:word32] = r0
	branch Mem350[r8 + 340:word32] != 0x00000000 l0000AB2F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB28:
	Mem356[r8 + 340:word32] = Mem350[r8 + 336:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB2F:
	word32 r2_362 = Mem361[r8 + 344:word32]
	branch r2_362 == 0x00000000 l0000AB3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB36:
	Mem368[r2_362 + 4:word32] = Mem361[r8 + 336:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB3C:
	word32 r2_374 = Mem373[r8 + 336:word32]
	Mem376[r8 + 344:word32] = r2_374
	Mem378[r2_374 + 4:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AAE2:
	word32 sp_383 = sp_118 - 0x00000004
	Mem385[sp_383:uint32] = (uint32) Mem42[Mem42[0x00019354:word32]:byte]
	Mem388[sp_383 - 0x00000004:word32] = Mem385[0x0001930C:word32]
	Mem390[sp_383 - 0x00000008:word32] = 0x00000000
	Mem392[sp_383 - 0x0000000C:word32] = r3
	r0 = fn0000AEF2(r3, ap, fp, out r1, out r3, out r4, out r5, out r6, out ap, out fp, out sp_118)
	Mem411[r8 + 308:word32] = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AAC9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AC68:
	branch (uint32) Mem36[Mem36[sp_118 + 16:word32]:word16] == 0x0000000C l0000AC74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AC74:
	Mem420[sp_118 + 4:word32] = 0x00000002
	word32 r3_421 = Mem420[sp_118 + 16:word32]
	word32 r2_422 = (uint32) Mem420[r3_421 + 2:word16]
	Mem426[r8 + 0x000102EC:word32] = 0x00000000
	word32 sp_427 = sp_118 - 0x00000004
	Mem428[sp_427:word32] = r2_422 - 0x00000004
	Mem430[sp_427 - 0x00000004:word32] = r3_421 + 8
	Mem432[sp_427 - 0x00000008:word32] = 0x00000000
	word32 r2_443
	r0 = fn0000CFBA(r0, r1, r4, r5, r3_421 + 8, r2_422 - 0x00000004, fp, out r1, out r2_443, out r3, out r4, out r5, out r6, out ap, out fp, out sp_118)
	branch Mem432[r3 + 4:word32] == r0 l0000ACC6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ACA1:
	Mem457[sp_118 - 0x00000004:word32] = 0x00000001
	Mem460[sp_118 - 0x00000008:word32] = r11 + 915
	Mem463[sp_118 - 0x0000000C:word32] = r10 + 1515
	word32 sp_467
	word32 r10_468
	word32 r8_469
	word32 r0_470
	word32 fp_471
	word32 ap_472
	word32 r11_473
	word32 r3_475
	word32 r6_476
	word32 r9_477
	word32 r7_478
	word32 r5_479
	word32 r4_480
	word32 r1_481
	call fn00000003 (retsize: 4;)
		uses: ap:ap_439,fp:fp_440,r0:r0_441,r1:r1_442,r10:r10_78,r11:r11_37,r2:r2_443,r3:r3_444,r4:r4_445,r5:r5_446,r6:r6_447,r7:r7_102,r8:r8_86,r9:r9_100,sp:sp_448 - 0x0000000C,Stack +FFFFFFEC:v21_28,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:v8_6,Stack +FFFFFFF8:v20_23
		defs: ap:ap_472,fp:fp_471,r0:r0_470,r1:r1_481,r10:r10_468,r11:r11_473,r3:r3_475,r4:r4_480,r5:r5_479,r6:r6_476,r7:r7_478,r8:r8_469,r9:r9_477,sp:sp_467
	Mem484[sp_467 - 0x00000004:word32] = r0_470
	Mem487[sp_467 - 0x00000008:word32] = r10_468 + 1515
	Mem489[sp_467 - 0x0000000C:word32] = r10_468
	word32 r2_490 = Mem489[r10_468 + 0x0000C839:word32]
	call r2_490 + 2 (retsize: 4;)
		uses: ap:ap_472,fp:fp_471,r0:r0_470,r1:r1_481,r10:r10_468,r11:r11_473,r2:r2_490,r3:r3_475,r4:r4_480,r5:r5_479,r6:r6_476,r7:r7_478,r8:r8_469,r9:r9_477,sp:sp_467 - 0x0000000C,Stack +FFFFFFEC:v21_28,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:v8_6,Stack +FFFFFFF8:v20_23
		defs: fp:fp_498,r0:r0_497,r1:r1_508,r10:r10_495,r11:r11_500,r2:r2_501,r3:r3_502,r4:r4_507,r5:r5_506,r6:r6_503,r7:r7_505,r8:r8_496,r9:r9_504,sp:sp_494
	Mem512[sp_118 + 4:word32] = 0x00000000
	ap = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ACC6:
	branch ap > 0x00000004 l0000ACCE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ACCE:
	word32 r0_525 = (uint32) Mem524[r6:word16]
	branch r0_525 > 0x0000001F l0000AD14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AD14:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ACD8_1:
	word32 sp_531
	word32 r10_533
	word32 r8_535
	word32 r0_536
	word32 fp_538
	word32 ap_539
	word32 r11_541
	word32 r2_543
	word32 r3_545
	word32 r6_546
	word32 r9_547
	word32 r7_548
	word32 r5_550
	word32 r4_552
	word32 r1_554
	call 0x0000ACDC + (r0_525 - 0x00000003) * 0x00000002 (retsize: 4;)
		uses: ap:ap_517,fp:fp_537,r0:r0_525,r1:r1_553,r10:r10_532,r11:r11_540,r2:r2_542,r3:r3_544,r4:r4_551,r5:r5_549,r6:r6_522,r7:r6_522,r8:r8_534,r9:0x00000000,sp:sp_530,Stack +FFFFFFEC:v21_28,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:v8_6,Stack +FFFFFFF8:v20_23
		defs: ap:ap_539,fp:fp_538,r0:r0_536,r1:r1_554,r10:r10_533,r11:r11_541,r2:r2_543,r3:r3_545,r4:r4_552,r5:r5_550,r6:r6_546,r7:r7_548,r8:r8_535,r9:r9_547,sp:sp_531
	r1Out = r1_554
	r2Out = r2_543
	r3Out = r3_545
	r4Out = r4_552
	r5Out = r5_550
	r6Out = r6_546
	r7Out = r7_548
	r8Out = r8_535
	r9Out = r9_547
	r10Out = r10_533
	r11Out = r11_541
	apOut = ap_539
	fpOut = fp_538
	spOut = sp_531
	return r0_536
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ACCB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ADA1:
	Mem559[r8 + 0x0001024C + (Mem524[r8 + 0x000102EC:word32] << 3):word16] = 0x0000
	Mem563[r8 + 0x0001024E + (Mem559[r8 + 0x000102EC:word32] << 3):word16] = 0x0000
	Mem567[r8 + 0x00010250 + (Mem563[r8 + 0x000102EC:word32] << 3):word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AC71:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ADD7:
	word32 r2_579 = (uint32) Mem577[Mem577[sp_118 + 16:word32] + 2:word16]
	Mem582[sp_118 + 12:word32] = Mem577[sp_118 + 12:word32] - (r2_579 + 0x00000004)
	Mem584[sp_118 + 8:word32] = Mem582[sp_118 + 8:word32] + (r2_579 + 0x00000004)
	r2 = r2_579 + 0x00000004
	branch Mem584[sp_118 + 12:word32] <= 0x00000000 l0000ADF2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ADEF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AAAF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ADF2:
	branch Mem589[sp_118 + 4:word32] != 0x00000001 l0000AE5F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ADF8:
	r2 = Mem589[r8 + 308:word32]
	branch r2 == 0x00000000 l0000AE5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AE5C:
	Mem601[sp_118 + 4:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ADFF:
	Mem607[r2 + 36:word32] = 0x00000000
	word32 r3_608 = Mem607[r8 + 316:word32]
	branch r3_608 == 0x00000000 l0000AE1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AE09:
	Mem615[r3_608 + 4:word32] = Mem607[Mem607[r8 + 308:word32] + 36:word32]
	r2 = Mem615[r8 + 308:word32]
	Mem618[r2 + 36:word32] = Mem615[r8 + 316:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AE1E:
	r3 = Mem623[r8 + 320:word32]
	branch r3 == 0x00000000 l0000AE3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AE25:
	Mem631[r3 + 4:word32] = Mem623[Mem623[r8 + 308:word32] + 36:word32]
	r2 = Mem631[r8 + 308:word32]
	Mem634[r2 + 36:word32] = Mem631[r8 + 320:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AE3A:
	branch Mem639[r8 + 340:word32] == 0x00000000 l0000AE5F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AE40:
	r3 = Mem639[r8 + 344:word32]
	Mem647[r3 + 4:word32] = Mem639[Mem639[r8 + 308:word32] + 36:word32]
	r2 = Mem647[r8 + 308:word32]
	Mem650[r2 + 36:word32] = Mem647[r8 + 340:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AE5F:
	word32 sp_672 = fp - 0x00000004
	word32 r0_658 = Mem657[sp_118 + 4:word32]
	word32 fp_673 = Mem657[sp_672 + 0x00000010:word32]
	word32 ap_674 = Mem657[sp_672 + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	apOut = ap_674
	fpOut = fp_673
	spOut = sp_672
	return r0_658
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AAA2:
	word32 fp_681 = Mem18[fp + 0x0000000C:word32]
	word32 ap_682 = Mem18[fp + 0x00000008:word32]
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	apOut = ap_682
	fpOut = fp_681
	spOut = fp - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000AA6A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000AE66(word32 r0, word32 r2, word32 r3, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r2:[0..31] r3:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn0000AE66_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AE66:
	word32 sp_113 = fp - 0x00000004
	branch Mem0[r3 + 320:word32] == 0x00000000 l0000AE81
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AE76:
	word32 v9_11 = Mem0[r3 + 320:word32]
	call Mem12[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r2:r2,r3:r3,sp:fp - 0x00000008,Stack +0004:v9_11
		defs: ap:ap_21,fp:fp_25,r0:r0_19,r2:r2_23,r3:r3_17,sp:sp_16
	dwLoc08 = v9_11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AE81:
	branch Mem28[r3 + 328:word32] == 0x00000000 l0000AE92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AE87:
	word32 sp_34 = sp_113 - 0x00000004
	Mem36[sp_34:word32] = Mem28[r3 + 328:word32]
	call Mem36[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_44,fp:fp_48,r0:r0_42,r2:r2_46,r3:r3_27,sp:sp_34,Stack +FFFFFFFC:dwLoc08_168
		defs: ap:ap_45,fp:fp_49,r0:r0_43,r2:r2_47,r3:r3_41,sp:sp_40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AE92:
	branch Mem52[r3 + 324:word32] == 0x00000000 l0000AEA3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AE98:
	word32 sp_58 = sp_113 - 0x00000004
	Mem60[sp_58:word32] = Mem52[r3 + 324:word32]
	call Mem60[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_68,fp:fp_72,r0:r0_66,r2:r2_70,r3:r3_51,sp:sp_58,Stack +FFFFFFFC:dwLoc08_168
		defs: ap:ap_69,fp:fp_73,r0:r0_67,r2:r2_71,r3:r3_65,sp:sp_64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AEA3:
	branch Mem76[r3 + 316:word32] == 0x00000000 l0000AEB4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AEA9:
	word32 sp_82 = sp_113 - 0x00000004
	Mem84[sp_82:word32] = Mem76[r3 + 316:word32]
	call Mem84[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_92,fp:fp_96,r0:r0_90,r2:r2_94,r3:r3_75,sp:sp_82,Stack +FFFFFFFC:dwLoc08_168
		defs: fp:fp_97,r0:r0_91,r3:r3_89,sp:sp_88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AEB4:
	branch Mem100[r3 + 340:word32] == 0x00000000 l0000AED5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AEBA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AEBC:
	word32 ap_111 = Mem110[r3 + 340:word32]
	word32 r2_112 = Mem110[ap_111 + 4:word32]
	word32 sp_114 = sp_113 - 0x00000004
	Mem115[sp_114:word32] = ap_111
	word32 r2_124
	call Mem115[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_111,fp:fp_125,r0:r0_121,r2:r2_112,r3:r3_109,sp:sp_114,Stack +FFFFFFFC:dwLoc08_168
		defs: fp:fp_126,r0:r0_122,r2:r2_124,r3:r3_120,sp:sp_119
	Mem129[r3 + 340:word32] = r2_124
	branch r2_124 != 0x00000000 l0000AEBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AED5:
	word32 ap_136 = Mem135[r3 + 308:word32]
	branch ap_136 == 0x00000000 l0000AEED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AEDC:
	branch ap_136 == r3 l0000AEED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AEE4:
	word32 sp_147 = sp_113 - 0x00000004
	Mem148[sp_147:word32] = ap_136
	call Mem148[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_136,fp:fp_158,r0:r0_154,r2:r3_134,r3:r3_134,sp:sp_147,Stack +FFFFFFFC:dwLoc08_168
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AEED:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000AE66_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000AEF2(word32 r3, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r3:[0..31]
// LiveOut: ap fp r0 r1 r3 r4 r5 r6 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn0000AEF2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AEF2:
	word32 r2_15
	word32 r1_6 = Mem0[ap + 4:word32]
	word32 r6_8 = (uint32) Mem0[r1_6 + 8:word16] & ~0xFFFFFFF8
	word32 r5_9 = (uint32) Mem0[r1_6 + 2:word16]
	branch r6_8 != 0x00000000 l0000AF18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF18:
	r2_15 = (uint32) Mem0[r1_6 + 10:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF10:
	r2_15 = r5_9 - 0x0000000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF1C:
	branch Mem0[ap + 16:word32] != 0x00000000 l0000AF28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF24:
	Mem32[ap + 16:word32] = r2_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF28:
	word32 r0_38 = Mem37[ap + 8:word32]
	branch r0_38 == 0x00000000 l0000AF31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF2E:
	Mem45[r0_38:word32] = r2_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF31:
	word32 r2_56
	word32 r0_51 = Mem50[ap + 16:word32]
	branch r0_51 <= r2_15 l0000AF40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF40:
	r2_56 = r2_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF3A:
	r2_56 = r0_51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF43:
	word32 r0_83
	word32 r6_137
	word32 sp_133
	word32 ap_134
	word32 r1_135
	word32 r5_138
	word32 r2_139
	word32 r4_140
	word32 fp_108
	call Mem70[0x000192B4:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0_51,r1:r1_6,r2:r2_69,r3:r3,r4:r2_23,r5:r5_9 - 0x0000000C,r6:r6_8,sp:fp - 0x00000008,Stack +0004:r2_69
		defs: ap:ap_76,fp:fp_108,r0:r0_83,r1:r1_81,r2:r2_94,r4:r4_96,r5:r5_93,r6:r6_88,sp:sp_74
	word32 r3_110 = r0_83
	branch r0_83 != 0x00000000 l0000AF54
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF54:
	branch Mem70[ap_134 + 12:word32] == 0x00000000 l0000AF6E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF59:
	branch r4_140 >= Mem70[ap_134 + 16:word32] l0000AF6E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF5F:
	Mem124[sp_133 - 0x00000004:word32] = Mem70[ap_134 + 16:word32]
	Mem127[sp_133 - 0x00000008:word32] = Mem124[ap_134 + 12:word32]
	Mem129[sp_133 - 0x0000000C:word32] = r0_83
	call Mem129[0x0001929C:word32] + 2 (retsize: 4;)
		uses: ap:ap_76,fp:fp_108,r0:r0_83,r1:r1_81,r2:r2_94,r3:r0_83,r4:r4_96,r5:r5_93,r6:r6_88,sp:sp_74 - 0x0000000C,Stack +FFFFFFFC:r2_69
		defs: ap:ap_134,fp:fp_142,r1:r1_135,r2:r2_139,r3:r3_141,r4:r4_140,r5:r5_138,r6:r6_137,sp:sp_133
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF6E:
	branch r6_137 > 0x00000002 l0000AF79
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF79:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF71_1:
	word32 sp_151
	word32 ap_153
	word32 r1_155
	word32 r0_156
	word32 r6_157
	word32 r5_159
	word32 r4_163
	word32 r3_165
	word32 fp_167
	call 0x0000AF75 + r6_137 * 0x00000002 (retsize: 4;)
		uses: ap:ap_152,fp:fp_166,r0:r6_144,r1:r1_154,r2:r2_160,r3:r3_164,r4:r4_162,r5:r5_158,r6:r6_144,sp:sp_150,Stack +FFFFFFFC:r2_69
		defs: ap:ap_153,fp:fp_167,r0:r0_156,r1:r1_155,r3:r3_165,r4:r4_163,r5:r5_159,r6:r6_157,sp:sp_151
	r1Out = r1_155
	r3Out = r3_165
	r4Out = r4_163
	r5Out = r5_159
	r6Out = r6_157
	apOut = ap_153
	fpOut = fp_167
	spOut = sp_151
	return r0_156
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF51:
	word32 fp_175 = Mem70[fp_108 + 0x0000000C:word32]
	word32 ap_176 = Mem70[fp_108 + 0x00000008:word32]
	r1Out = r1_135
	r3Out = r0_83
	r4Out = r4_140
	r5Out = r5_138
	r6Out = r6_137
	apOut = ap_176
	fpOut = fp_175
	spOut = fp_108 - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000AEF2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000AFDA(word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 sp
// Preserved:
fn0000AFDA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AFDA:
	word32 r0_7 = Mem0[ap + 8:word32]
	Mem9[ap + 8:word32] = Mem0[ap + 8:word32] - 0x00000001
	word32 r2_104 = 0x00000000
	word32 r3_106 = 0x00000000
	branch r0_7 != 0x00000000 l0000AFED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AFED:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AFF0:
	branch r2_104 > 0x00000000 l0000B011
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AFF4:
	word32 r1_21 = r2_104 + 0x00000008
	branch r1_21 > 0x00000020 l0000B011
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AFFD:
	word32 r0_27 = Mem26[ap + 12:word32]
	Mem29[ap + 12:word32] = Mem26[ap + 12:word32] + 0x00000001
	r3_106 = r3_106 | __ashift((uint32) Mem29[r0_27:byte], r2_104)
	r2_104 = r1_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B011:
	branch (r3_106 & 0x00000001) == 0x00000000 l0000B054
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B054:
	word32 r0_41 = Mem40[ap + 4:word32]
	Mem43[ap + 4:word32] = Mem40[ap + 4:word32] + 0x00000001
	Mem45[r0_41:byte] = 0x00
	r2_104 = r2_104 - 0x00000001
	r3_106 = (uint32) SLICE(r3_106, ui31, 1)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B014:
	word32 r3_52 = (uint32) SLICE(r3_106, ui31, 1)
	word32 r2_53 = r2_104 - 0x00000001
	branch r2_53 >= 0x00000008 l0000B03D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B020:
	branch r2_53 > 0x00000018 l0000B03D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B029:
	word32 r0_61 = Mem40[ap + 12:word32]
	Mem63[ap + 12:word32] = Mem40[ap + 12:word32] + 0x00000001
	r3_52 = r3_52 | __ashift((uint32) Mem63[r0_61:byte], r2_53)
	r2_53 = r2_53 + 0x00000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B03D:
	word32 r0_73 = Mem72[ap + 4:word32]
	Mem75[ap + 4:word32] = Mem72[ap + 4:word32] + 0x00000001
	Mem78[r0_73:byte] = (byte) r3_52
	r2_104 = r2_53 - 0x00000008
	r3_106 = (uint32) SLICE(r3_52, ui24, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B064:
	word32 r0_87 = Mem86[ap + 8:word32]
	Mem89[ap + 8:word32] = Mem86[ap + 8:word32] - 0x00000001
	branch r0_87 != 0x00000000 l0000AFF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AFEA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B06F:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000AFDA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000B072(word32 r0, word32 r1, word32 r2, word32 r4, word32 r5, word32 r6, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: fp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn0000B072_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B072:
	word32 v8_7 = Mem0[ap + 8:word32]
	word32 v9_10 = Mem8[ap + 4:word32]
	word32 v11_14 = Mem11[r2 + 0x0000C5EF:word32]
	word32 ap_25
	word32 fp_26
	word32 r1_28
	word32 r2_29
	word32 r3_30
	word32 r4_31
	word32 r5_32
	word32 r6_33
	word32 sp_34
	word32 r0_27 = fn0000CFBA(r0, r1, r4, r5, r6, ap, fp, out r1_28, out r2_29, out r3_30, out r4_31, out r5_32, out r6_33, out ap_25, out fp_26, out sp_34)
	Mem40[r2_29 + 0x0000C5EF:word32] = r0_27
	branch Mem40[r2_29 + 68:word32] == 0x00000000 l0000B0A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B0A5:
	Mem46[sp_34 - 0x00000004:word32] = 0x00000000
	Mem49[sp_34 - 0x00000008:word32] = Mem46[ap_25 + 8:word32]
	Mem52[sp_34 - 0x0000000C:word32] = Mem49[ap_25 + 0x00000004:word32]
	word32 fp_60
	call Mem52[r3_30 + 0x00010194:word32] + 2 (retsize: 4;)
		uses: ap:ap_25,fp:fp_26,r0:r0_27,r1:r1_28,r2:r2_29,r3:r3_30,r4:r4_31,r5:r5_32,r6:r6_33,sp:sp_34 - 0x0000000C,Stack +FFFFFFF4:v11_14,Stack +FFFFFFF8:v9_10,Stack +FFFFFFFC:v8_7
		defs: fp:fp_60
	return Mem52[fp_60 + 0x0000000C:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B0A2:
	return Mem40[fp_26 + 0x0000000C:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000B072_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000B192(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 r2 r3 r4 sp
// Preserved:
fn0000B192_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B192:
	word32 sp_21 = fp - 0x00000004
	branch Mem0[r2 + 0x000101F4:word32] == 0x00000000 l0000B1DF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B1AB:
	word32 r3_27
	call Mem14[pc:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc + 0x00000004,r0:r0,r1:r1,r2:r2,r3:r3,r4:r4,sp:fp - 0x0000000C,Stack +0004:0x00000000,Stack +0008:r2 + 0x000101FC
		defs: ap:ap_31,fp:fp_35,pc:pc_23,r0:r0_29,r1:r1_33,r2:r2_22,r3:r3_27,r4:r4_25,sp:sp_21
	dwLoc08 = r2 + 0x000101FC
	dwLoc0C = 0x00000000
	r3 = r3_27 + Mem14[r4 + 0x50D07FFE:real32]
	branch (r0 & 0x00000001) == 0x00000000 l0000B1C7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B1C0:
	r3 = (int32) Mem14[r2 + 0x000101FC:int16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B1C7:
	branch (r3 & 0x00000001) != 0x00000000 l0000B1D9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B1D9:
	Mem47[r2 + 0x000101F4:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B1DF:
	word32 sp_54 = sp_21 - 0x00000008
	Mem56[sp_54:word64] = 0x0000000000000000
	Mem58[sp_54 - 0x00000004:word32] = 0x00000000
	Mem62[sp_54 - 0x00000008:word32] = Mem58[r2 + 0x000101F8:word32]
	Mem67[sp_54 - 0x0000000C:word32] = Mem62[ap + 8:word32]
	Mem70[sp_54 - 0x00000010:word32] = Mem67[ap + 4:word32]
	Mem73[sp_54 - 0x00000018:word64] = 0x0000000000000000
	Mem76[sp_54 - 0x0000001C:word32] = r2 + 0x000101FC
	Mem78[sp_54 - 0x00000020:word32] = 0x00000030
	Mem81[sp_54 - 0x00000024:word32] = Mem78[r2 + 0x000101F0:word32]
	Mem83[sp_54 - 0x00000028:word32] = 0x00000000
	word32 sp_91
	word32 r2_92
	word32 r4_96
	word32 r3_98
	word32 r0_101
	word32 ap_102
	word32 r1_105
	word32 fp_108
	call Mem83[pc:word32] + 2 (retsize: 4;)
		uses: ap:ap_64,fp:fp_106,pc:pc_87 + 0x00000004,r0:r0_99,r1:r1_103,r2:r2_60,r3:r3_97,r4:r4_94,sp:sp_54 - 0x00000028,Stack +FFFFFFF8:dwLoc0C_185,Stack +FFFFFFFC:dwLoc08_182
		defs: ap:ap_102,fp:fp_108,r0:r0_101,r1:r1_105,r2:r2_92,r3:r3_98,r4:r4_96,sp:sp_91
	Mem111[Mem83[r0_101 + 20816:word32]:word32] = Mem83[r0_101 + 20816:word32] | Mem83[Mem83[0x00013206:word32]:word32]
	branch (r0_101 & 0x00000001) != 0x00000000 l0000B21D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B21D:
	Mem116[r2_92 + 0x000101F4:word32] = 0x00000001
	Mem119[r2_92 + 0x000101F8:word32] = Mem116[r2_92 + 0x000101F8:word32] + (uint32) Mem116[ap_102 + 0x00000009:ui23]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B20E:
	Mem129[sp_91 - 0x00000004:word32] = r1_105
	Mem132[sp_91 - 0x00000008:word32] = r4_96 + 1011
	fn0000C022(r0_101, r2_92, r3_98, r4_96, ap_102, fp_108, out r3_205, out r4_206, out ap_207, out fp_137, out sp_208)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B1CA:
	Mem155[sp_21 - 0x00000004:word32] = r3
	Mem158[sp_21 - 0x00000008:word32] = r4 + 968
	fn0000C022(r0, r2, r3, r4, ap, fp, out r3_209, out r4_210, out ap_211, out fp_163, out sp_212)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000B192_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000B86E(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 r2 r3 r4 sp
// Preserved:
fn0000B86E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B86E:
	word32 v8_7 = Mem0[r2 + 312:word32]
	word32 pc_17
	word32 r1_19
	word32 r0_21
	word32 r2_16
	word32 ap_25
	word32 sp_15
	word32 r3_100
	word32 fp_103
	call Mem8[pc:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc + 0x00000004,r0:r0,r1:r1,r2:r2,r3:r3,r4:r4,sp:fp - 0x00000008,Stack +0004:v8_7
		defs: ap:ap_25,fp:fp_27,pc:pc_17,r0:r0_21,r1:r1_19,r2:r2_16,r3:r3_23,sp:sp_15
	word32 r1_30 = DPB(r1_19, (word16) r1_19 | Mem8[r1_19 + 0x50D07FFE:word16], 0)
	branch (r0_21 & 0x00000001) != 0x00000000 l0000B8AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B890:
	Mem35[sp_15 - 0x00000004:word32] = r1_30
	Mem38[sp_15 - 0x00000008:word32] = r3_100 + 1188
	word32 ap_43
	word32 fp_44
	word32 r3_47
	word32 r4_48
	word32 sp_49
	word32 r2_46 = fn0000C022(r0_21, r2_16, r3_100, r4, ap_25, fp_103, out r3_47, out r4_48, out ap_43, out fp_44, out sp_49)
	word32 r0_54 = Mem38[r2_46 + 312:word32]
	Mem57[sp_49 - 0x00000004:word32] = Mem38[r0_54 + 12:word32]
	Mem60[sp_49 - 0x00000008:word32] = r3_47 + 1222
	r2_16 = fn0000C022(r0_54, r2_46, r3_47, r4_48, ap_43, fp_44, out r3_100, out r4, out ap_25, out fp_103, out sp_15)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B8AC:
	Mem80[Mem76[r2_16 + 312:word32] + 34:word16] = Mem76[ap_25 + 8:word16]
	word32 r0_81 = Mem80[r2_16 + 312:word32]
	Mem83[r0_81 + 40:word32] = Mem80[ap_25 + 4:word32]
	word32 sp_85 = sp_15 - 0x00000004
	Mem87[sp_85:word32] = Mem83[r2_16 + 312:word32]
	word32 sp_94
	word32 r2_95
	word32 r1_98
	word32 r0_99
	word32 r3_101
	word32 ap_102
	word32 fp_104
	word32 r4_106
	call Mem87[pc_17:word32] + 2 (retsize: 4;)
		uses: ap:ap_78,fp:fp_103,pc:pc_17 + 0x00000004,r0:r0_81,r1:r1_30,r2:r2_75,r3:r3_100,r4:r4_105,sp:sp_85,Stack +FFFFFFFC:v8_7
		defs: ap:ap_102,fp:fp_104,r0:r0_99,r1:r1_98,r2:r2_95,r3:r3_101,r4:r4_106,sp:sp_94
	word32 r1_109 = DPB(r1_98, Mem87[r1_98 + 0x50D07FFE:word16], 0)
	branch (r0_99 & 0x00000001) != 0x00000000 l0000B8F1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B8F1:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B8D1:
	Mem122[sp_94 - 0x00000004:word32] = r1_109
	Mem125[sp_94 - 0x00000008:word32] = r3_101 + 1223
	word32 ap_129
	word32 fp_130
	word32 r3_133
	word32 r4_134
	word32 sp_135
	word32 r2_132 = fn0000C022(r0_99, r2_95, r3_101, r4_106, ap_102, fp_104, out r3_133, out r4_134, out ap_129, out fp_130, out sp_135)
	word32 r0_140 = Mem125[r2_132 + 312:word32]
	Mem143[sp_135 - 0x00000004:word32] = Mem125[r0_140 + 12:word32]
	Mem146[sp_135 - 0x00000008:word32] = r3_133 + 1258
	fn0000C022(r0_140, r2_132, r3_133, r4_134, ap_129, fp_130, out r3_186, out r4_187, out ap_188, out fp_151, out sp_189)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000B86E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000B8F6(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 r2 r3 r4 sp
// Preserved:
fn0000B8F6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B8F6:
	branch Mem0[r2 + 12:word32] == 0x00000000 l0000B940
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B940:
	word32 v16_12 = Mem0[r3 + 312:word32]
	word32 r0_25
	word32 pc_29
	word32 r1_31
	word32 r3_28
	word32 ap_23
	word32 sp_20
	word32 r2_100
	word32 r4_104
	word32 fp_110
	call Mem13[pc:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc + 0x00000004,r0:r0,r1:r1,r2:r2,r3:r3,r4:r4,sp:fp - 0x00000008,Stack +0000:dwLoc0C,Stack +0004:v16_12,Stack +FFFFFFF8:dwLoc14,Stack +FFFFFFFC:dwLoc10
		defs: ap:ap_23,fp:fp_33,pc:pc_29,r0:r0_25,r1:r1_31,r2:r2_21,r3:r3_28,r4:r4_27,sp:sp_20
	word32 r1_36 = DPB(r1_31, (word16) r1_31 | Mem13[r1_31 + 0x50D07FFE:word16], 0)
	branch (r0_25 & 0x00000001) != 0x00000000 l0000B96D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B951:
	Mem41[sp_20 - 0x00000004:word32] = r1_36
	Mem44[sp_20 - 0x00000008:word32] = r4_104 + 1261
	word32 ap_48
	word32 fp_49
	word32 r3_52
	word32 r4_53
	word32 sp_54
	word32 r2_51 = fn0000C022(r0_25, r2_100, r3_28, r4_104, ap_23, fp_110, out r3_52, out r4_53, out ap_48, out fp_49, out sp_54)
	word32 r0_59 = Mem44[r3_52 + 312:word32]
	Mem62[sp_54 - 0x00000004:word32] = Mem44[r0_59 + 12:word32]
	Mem65[sp_54 - 0x00000008:word32] = r4_53 + 1295
	r2_100 = fn0000C022(r0_59, r2_51, r3_52, r4_53, ap_48, fp_49, out r3_28, out r4_104, out ap_23, out fp_110, out sp_20)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B96D:
	Mem85[Mem81[r3_28 + 312:word32] + 34:word16] = Mem81[ap_23 + 8:word16]
	word32 r0_86 = Mem85[r3_28 + 312:word32]
	Mem88[r0_86 + 40:word32] = Mem85[ap_23 + 4:word32]
	word32 sp_90 = sp_20 - 0x00000004
	Mem92[sp_90:word32] = Mem88[r3_28 + 312:word32]
	word32 sp_99
	word32 r2_101
	word32 ap_102
	word32 r0_103
	word32 r4_105
	word32 r3_106
	word32 r1_109
	word32 fp_111
	call Mem92[pc_29:word32] + 2 (retsize: 4;)
		uses: ap:ap_83,fp:fp_110,pc:pc_29 + 0x00000004,r0:r0_86,r1:r1_36,r2:r2_100,r3:r3_80,r4:r4_104,sp:sp_90,Stack +FFFFFFF0:dwLoc14,Stack +FFFFFFF4:dwLoc10,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:v16_12
		defs: ap:ap_102,fp:fp_111,r0:r0_103,r1:r1_109,r2:r2_101,r3:r3_106,r4:r4_105,sp:sp_99
	word32 r1_114 = DPB(r1_109, (byte) r1_109 | Mem92[r1_109 + 0x50D07FFE:byte], 0)
	branch (r0_103 & 0x00000001) != 0x00000000 l0000B9B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B992:
	Mem119[sp_99 - 0x00000004:word32] = r1_114
	Mem122[sp_99 - 0x00000008:word32] = r4_105 + 1296
	word32 ap_126
	word32 fp_127
	word32 r3_130
	word32 r4_131
	word32 sp_132
	word32 r2_129 = fn0000C022(r0_103, r2_101, r3_106, r4_105, ap_102, fp_111, out r3_130, out r4_131, out ap_126, out fp_127, out sp_132)
	word32 r0_137 = Mem122[r3_130 + 312:word32]
	Mem140[sp_132 - 0x00000004:word32] = Mem122[r0_137 + 12:word32]
	Mem143[sp_132 - 0x00000008:word32] = r4_131 + 1329
	fn0000C022(r0_137, r2_129, r3_130, r4_131, ap_126, fp_127, out r3_254, out r4_255, out ap_256, out fp_148, out sp_257)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B913:
	word32 v10_168 = Mem166[ap + 8:word32]
	word32 v11_171 = Mem169[ap + 4:word32]
	word32 r0_175 = Mem174[r2 + 0x0000C839:word32]
	word32 sp_179
	word32 r2_180
	word32 ap_181
	word32 r4_183
	word32 r3_184
	word32 pc_185
	word32 r1_186
	word32 fp_187
	call r0_175 + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc,r0:r0_175,r1:r1,r2:r2,r3:r3,r4:r4,sp:fp - 0x00000014,Stack +0004:r2,Stack +0008:v11_171,Stack +000C:v10_168,Stack +0010:0x00000000
		defs: ap:ap_181,fp:fp_187,pc:pc_185,r1:r1_186,r2:r2_180,r3:r3_184,r4:r4_183,sp:sp_179
	Mem190[sp_179 - 0x00000004:word32] = 0x00000000
	Mem192[sp_179 - 0x00000008:word32] = 0x00000001
	Mem195[sp_179 - 0x0000000C:word32] = r4_183 + 1259
	Mem197[sp_179 - 0x00000010:word32] = r2_180
	word32 r0_198 = Mem197[r2_180 + 0x0000C839:word32]
	call r0_198 + 2 (retsize: 4;)
		uses: ap:ap_181,fp:fp_187,pc:pc_185,r0:r0_198,r1:r1_186,r2:r2_180,r3:r3_184,r4:r4_183,sp:sp_179 - 0x00000010,Stack +FFFFFFF0:r2,Stack +FFFFFFF4:v11_171,Stack +FFFFFFF8:v10_168,Stack +FFFFFFFC:0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B9B2:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000B8F6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000B9BA(word32 r0, word32 r2, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r2:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r2 sp
// Preserved:
fn0000B9BA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B9BA:
	word32 sp_14
	word32 ap_15
	word32 r0_17
	word32 fp_19
	word32 r2_21
	call Mem8[ap + 0x00010194:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r2:r2,sp:fp - 0x00000010,Stack +0004:0x0000000000000000,Stack +000C:0x00000001
		defs: ap:ap_15,fp:fp_19,r0:r0_17,r2:r2_21,sp:sp_14
	branch r0_17 == 0x00000000 l0000B9DB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B9DB:
	branch Mem8[r2_21 + 12:word32] == 0x00000000 l0000B9E1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B9E1:
	call Mem8[ap_15 + 0x00010198:word32] + 2 (retsize: 4;)
		uses: ap:ap_15,fp:fp_19,r0:r0_17,r2:r2_21,sp:sp_14,Stack +FFFFFFF4:0x0000000000000000,Stack +FFFFFFFC:0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B9E0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B9DA:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000B9BA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000BBB2(word32 r5, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r5:[0..31]
// LiveOut: ap fp r0 r1 r2 r3 r4 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r6 r7 r8 r9 sp
// Preserved:
fn0000BBB2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BBB2:
	word32 r2_6 = Mem0[ap + 4:word32]
	word32 r3_7 = Mem0[r2_6 + 20:word32] + 0xFFFFFFBA
	word32 r1_14 = Mem0[r2_6 + 12:word32] - 0x00000001 + r3_7 * 0x0000016D
	word32 r0_8 = Mem0[r2_6 + 16:word32]
	word32 r7_10 = Mem0[r2_6 + 8:word32]
	word32 r8_11 = Mem0[r2_6 + 4:word32]
	word32 r6_12 = Mem0[r2_6:word32]
	word32 r4_26 = (r3_7 + 0x00000001) / 0x00000004 - (r3_7 + 0x00000045) / 0x00000064 + (r3_7 + 0x00000171) / 0x00000190 + r1_14 + (int32) Mem0[(r5 + 0x0001052A) + r0_8 * 2:int16]
	word32 r9_29 = DPB(r9, 0x00, 0)
	branch r0_8 <= 0x00000001 l0000BC63
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BC63:
	word32 fp_44 = Mem0[fp + 0x0000000C:word32]
	word32 ap_45 = Mem0[fp + 0x00000008:word32]
	r1Out = r1_14
	r2Out = 0
	r3Out = r3_7
	word32 r4_37 = r4_26 * 0x00015180 + r7_10 * 0x00000E10
	r4Out = r4_37
	word32 r6_39 = r6_12 + r8_11 * 0x0000003C
	r6Out = r6_39
	r7Out = r7_10 * 0x00000E10
	r8Out = r8_11 * 0x0000003C
	r9Out = r9_29
	apOut = ap_45
	fpOut = fp_44
	spOut = fp - 0x00000004
	return r6_39 + r4_37
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000BBB2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BC28:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000BC8A(word32 r0, word32 r1, word32 r2, word32 r4, word32 r5, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: ap fp r0 r1 r3 r4 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000BC8A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BC8A:
	word32 sp_9
	word32 r0_11
	word32 fp_13
	word32 r1_15
	word32 ap_17
	word32 r2_19
	word32 r4_21
	word32 r5_108
	word32 r3_109
	word32 r6_110
	word32 r7_111
	word32 r8_112
	word32 r9_113
	call Mem5[0x000192A0:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r1:r1,r2:r2,r3:r3_72,r4:r4,r5:r5,r6:r6_74,r7:r7_75,r8:r8_76,r9:r9_77,sp:fp - 0x0000000C,Stack +0004:0x00000000
		defs: ap:ap_17,fp:fp_13,r0:r0_11,r1:r1_15,r2:r2_19,r3:r3_109,r4:r4_21,r5:r5_108,r6:r6_110,r7:r7_111,r8:r8_112,r9:r9_113,sp:sp_9
	Mem24[fp_13 + -8:word32] = r0_11
	Mem27[sp_9 - 0x00000004:word32] = fp_13 + -8
	word32 sp_31
	word32 r0_32
	word32 fp_33
	word32 ap_35
	call Mem27[0x000192A4:word32] + 2 (retsize: 4;)
		uses: ap:ap_17,fp:fp_13,r0:r0_11,r1:r1_15,r2:r2_19,r3:r3_109,r4:r4_21,r5:r5_108,r6:r6_110,r7:r7_111,r8:r8_112,r9:r9_113,sp:sp_9 - 0x00000004,Stack +FFFFFFF8:0x00000000
		defs: ap:ap_35,fp:fp_33,r0:r0_32,sp:sp_31
	word32 r2_40 = Mem27[ap_35 + 4:word32]
	Mem44[r0_32 + 20:word32] = ((uint32) SLICE(r2_40, ui23, 9) & ~0xFFFFFF80) + 0x00000050
	Mem48[r0_32 + 16:word32] = ((uint32) SLICE(r2_40, ui27, 5) & ~0xFFFFFFF0) - 0x00000001
	Mem50[r0_32 + 12:word32] = Mem48[ap_35 + 4:word32] & ~0xFFFFFFE0
	word32 r2_51 = Mem50[ap_35 + 8:word32]
	Mem54[r0_32 + 8:word32] = (uint32) SLICE(r2_51, ui21, 11) & ~0xFFFFFFE0
	Mem57[r0_32 + 4:word32] = (uint32) SLICE(r2_51, ui27, 5) & ~0xFFFFFFC0
	Mem60[r0_32:word32] = Mem57[ap_35 + 8:word32] << 1 & ~0xFFFFFFC1
	Mem62[sp_31 - 0x00000004:word32] = r0_32
	word32 ap_67
	word32 fp_68
	word32 r3_72
	word32 r6_74
	word32 r7_75
	word32 r8_76
	word32 r9_77
	word32 r0_69 = fn0000BBB2(r5, ap_35, fp_33, out r1_131, out r2_132, out r3_72, out r4_133, out r6_74, out r7_75, out r8_76, out r9_77, out ap_67, out fp_68, out sp_134)
	Mem86[fp_68 + 0xFFFFFFF8:word32] = r0_69
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BD15_thunk_fn0000BD1C:
	word32 ap_90
	word32 fp_91
	word32 r1_93
	word32 r3_95
	word32 r4_96
	word32 r5_97
	word32 r6_98
	word32 r7_99
	word32 r8_100
	word32 r9_101
	word32 sp_102
	word32 r0_92 = fn0000BD1C(r0_69, 0x00000003, r0_69, r5, ap_67, fp_68, out r1_93, out r3_95, out r4_96, out r5_97, out r6_98, out r7_99, out r8_100, out r9_101, out ap_90, out fp_91, out sp_102)
	r1Out = r1_93
	r3Out = r3_95
	r4Out = r4_96
	r5Out = r5_97
	r6Out = r6_98
	r7Out = r7_99
	r8Out = r8_100
	r9Out = r9_101
	apOut = ap_90
	fpOut = fp_91
	spOut = sp_102
	return r0_92
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000BC8A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000BD08(word32 r5, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r5:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000BD08_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BD08:
	word32 ap_12
	word32 fp_13
	word32 r0_14 = fn0000BBB2(r5, ap, fp, out r1_53, out r2_54, out r3_55, out r4_56, out r6_57, out r7_58, out r8_59, out r9_60, out ap_12, out fp_13, out sp_61)
	Mem31[fp_13 + 0xFFFFFFF8:word32] = r0_14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BD15_thunk_fn0000BD1C:
	fn0000BD1C(r0_14, 0x00000003, r0_14, r5, ap_12, fp_13, out r1_62, out r3_63, out r4_64, out r5_65, out r6_66, out r7_67, out r8_68, out r9_69, out ap_70, out fp_71, out sp_72)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000BD08_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000BD1C(word32 r0, word32 r2, word32 r4, word32 r5, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r2:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: ap fp r0 r1 r3 r4 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000BD1C_entry:
	word32 sp_2 = fp
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BD1C:
	word32 sp_4 = sp_2 - 0x00000004
	Mem7[sp_4:word32] = fp + -8
	word32 sp_11
	word32 fp_12
	word32 r0_14
	word32 ap_20
	word32 r6_82
	word32 r3_81
	word32 r1_80
	word32 r7_83
	word32 r8_84
	word32 r9_85
	call Mem7[0x000192A4:word32] + 2 (retsize: 4;)
		uses: ap:ap_19,fp:fp_5,r0:r0_13,r1:r1_31,r2:r2_17,r3:r3_33,r4:r4_15,r5:r5,r6:r6_35,r7:r7_36,r8:r8_37,r9:r9_38,sp:sp_4
		defs: ap:ap_20,fp:fp_12,r0:r0_14,r1:r1_80,r3:r3_81,r5:r5_79,r6:r6_82,r7:r7_83,r8:r8_84,r9:r9_85,sp:sp_11
	Mem23[sp_11 - 0x00000004:word32] = r0_14
	word32 r1_31
	word32 r2_32
	word32 r3_33
	word32 r6_35
	word32 r7_36
	word32 r8_37
	word32 r9_38
	r0 = r4 - fn0000BBB2(r5, ap_20, fp_12, out r1_31, out r2_32, out r3_33, out r4, out r6_35, out r7_36, out r8_37, out r9_38, out ap, out fp, out sp_2)
	branch r0 == 0x00000000 l0000BD3B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BD33:
	Mem48[fp + -8:word32] = Mem23[fp + -8:word32] + r0
	r2 = r2_32 - 0x00000001
	branch r2_32 > 0x00000001 l0000BD1C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BD3B:
	branch Mem53[ap + 4:word32] <u 0x00007432 l0000BD53
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BD45:
	branch Mem53[fp + -8:word32] >=u 0x70000000 l0000BD53
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BD4F:
	Mem62[fp + -8:word32] = -0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BD53:
	word32 r0_66 = Mem65[fp + -8:word32]
	word32 fp_71 = Mem65[fp + 0x0000000C:word32]
	word32 ap_72 = Mem65[fp + 0x00000008:word32]
	r1Out = r1_80
	r3Out = r3_81
	r4Out = r4
	r5Out = r5
	r6Out = r6_82
	r7Out = r7_83
	r8Out = r8_84
	r9Out = r9_85
	apOut = ap_72
	fpOut = fp_71
	spOut = fp - 0x00000004
	return r0_66
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000BD1C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000BDC2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0000BDC2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000BDC2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BDC2:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000C022(word32 r0, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & r4Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r2:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: ap fp r2 r3 r4 sp
// Trashed: CVZN ap fp r0 r2 r3 r4 sp
// Preserved:
fn0000C022_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C022:
	Mem6[fp + -16:uint16] = 0x00FF
	Mem8[fp + -14:byte] = 0x0E
	Mem10[fp + -13:byte] = 0x01
	Mem13[fp + -12:word32] = r3 + 0x000105C5
	Mem15[fp + -8:word32] = 0x00000000
	word32 sp_32
	word32 fp_33
	word32 r3_34
	word32 ap_35
	word32 r0_37
	word32 r4_39
	word32 r2_41
	call Mem28[0x0001932C:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r2:r2,r3:r3,r4:r4,sp:fp - 0x00000024,Stack +0004:ap + 8,Stack +0008:fp + -8,Stack +000C:fp + -16,Stack +0010:0x0000000000000000
		defs: ap:ap_35,fp:fp_33,r0:r0_37,r2:r2_41,r3:r3_34,r4:r4_39,sp:sp_32
	branch (r0_37 & 0x00000001) != 0x00000000 l0000C094
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C094:
	word32 r0_43 = Mem28[fp_33 + -8:word32]
	Mem45[r3_34 + 0x000105C5:byte] = 0x00
	Mem47[sp_32 - 0x00000004:word32] = 0x00000001
	Mem50[sp_32 - 0x00000008:word32] = r3_34 + 0x000105C5
	Mem53[sp_32 - 0x0000000C:word32] = Mem50[ap_35 + 4:word32]
	Mem56[sp_32 - 0x00000010:word32] = r4_39 + 1642
	Mem59[sp_32 - 0x00000014:word32] = r2_41 + 1515
	word32 sp_63
	word32 fp_64
	word32 r3_65
	word32 ap_66
	word32 r0_67
	word32 r4_68
	word32 r2_69
	call Mem59[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_35,fp:fp_33,r0:r0_43,r2:r2_41,r3:r3_34,r4:r4_39,sp:sp_32 - 0x00000014,Stack +FFFFFFE0:ap + 8,Stack +FFFFFFE4:fp + -8,Stack +FFFFFFE8:fp + -16,Stack +FFFFFFEC:0x0000000000000000
		defs: ap:ap_66,fp:fp_64,r0:r0_67,r2:r2_69,r3:r3_65,r4:r4_68,sp:sp_63
	Mem72[sp_63 - 0x00000004:word32] = r0_67
	Mem75[sp_63 - 0x00000008:word32] = r2_69 + 1515
	Mem77[sp_63 - 0x0000000C:word32] = r2_69
	word32 r0_78 = Mem77[r2_69 + 0x0000C839:word32]
	word32 fp_83
	word32 r3_84
	word32 r4_87
	word32 r2_88
	call r0_78 + 2 (retsize: 4;)
		uses: ap:ap_66,fp:fp_64,r0:r0_78,r2:r2_69,r3:r3_65,r4:r4_68,sp:sp_63 - 0x0000000C,Stack +FFFFFFE0:ap + 8,Stack +FFFFFFE4:fp + -8,Stack +FFFFFFE8:fp + -16,Stack +FFFFFFEC:0x0000000000000000
		defs: fp:fp_83,r2:r2_88,r3:r3_84,r4:r4_87
	word32 fp_91 = Mem77[fp_83 + 0x0000000C:word32]
	word32 ap_92 = Mem77[fp_83 + 0x00000008:word32]
	r3Out = r3_84
	r4Out = r4_87
	apOut = ap_92
	fpOut = fp_91
	spOut = fp_83 - 0x00000004
	return r2_88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C067:
	Mem94[sp_32 - 0x00000004:word32] = 0x00000001
	Mem97[sp_32 - 0x00000008:word32] = Mem94[ap_35 + 8:word32]
	Mem100[sp_32 - 0x0000000C:word32] = Mem97[ap_35 + 4:word32]
	Mem103[sp_32 - 0x00000010:word32] = r4_39 + 1619
	Mem106[sp_32 - 0x00000014:word32] = r2_41 + 1515
	word32 sp_110
	word32 fp_111
	word32 r3_112
	word32 ap_113
	word32 r0_114
	word32 r4_115
	word32 r2_116
	call Mem106[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_35,fp:fp_33,r0:r0_37,r2:r2_41,r3:r3_34,r4:r4_39,sp:sp_32 - 0x00000014,Stack +FFFFFFE0:ap + 8,Stack +FFFFFFE4:fp + -8,Stack +FFFFFFE8:fp + -16,Stack +FFFFFFEC:0x0000000000000000
		defs: ap:ap_113,fp:fp_111,r0:r0_114,r2:r2_116,r3:r3_112,r4:r4_115,sp:sp_110
	Mem119[sp_110 - 0x00000004:word32] = r0_114
	Mem122[sp_110 - 0x00000008:word32] = r2_116 + 1515
	Mem124[sp_110 - 0x0000000C:word32] = r2_116
	word32 r0_125 = Mem124[r2_116 + 0x0000C839:word32]
	word32 fp_130
	word32 r3_131
	word32 r4_134
	word32 r2_135
	call r0_125 + 2 (retsize: 4;)
		uses: ap:ap_113,fp:fp_111,r0:r0_125,r2:r2_116,r3:r3_112,r4:r4_115,sp:sp_110 - 0x0000000C,Stack +FFFFFFE0:ap + 8,Stack +FFFFFFE4:fp + -8,Stack +FFFFFFE8:fp + -16,Stack +FFFFFFEC:0x0000000000000000
		defs: fp:fp_130,r2:r2_135,r3:r3_131,r4:r4_134
	word32 fp_138 = Mem124[fp_130 + 0x0000000C:word32]
	word32 ap_139 = Mem124[fp_130 + 0x00000008:word32]
	r3Out = r3_131
	r4Out = r4_134
	apOut = ap_139
	fpOut = fp_138
	spOut = fp_130 - 0x00000004
	return r2_135
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000C022_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000C0CE(word32 r0, word32 r6, word32 ap, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] pc:[0..31] r0:[0..31] r6:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0000C0CE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000C0CE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C0CE:
	word32 sp_20 = fp - 0x00000004
	branch Mem0[r6 + 0x00010A78:word32] != 0x00000000 l0000C0F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C0E0:
	word32 v11_15 = Mem12[ap + 4:word32]
	call Mem16[0x000192D4:word32] + 2 (retsize: 4;)
		uses: ap:ap,pc:pc,r0:r0,r6:r6,sp:fp - 0x0000000C,Stack +0004:v11_15,Stack +0008:r6 + 0x000108C5
		defs: ap:ap_22,pc:pc_26,r0:r0_24,r6:r6_21,sp:sp_20
	dwLoc08 = r6 + 0x000108C5
	dwLoc0C = v11_15
	branch r0 != 0x00000000 l0000C0F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C0F7:
	word32 sp_33 = sp_20 - 0x00000004
	Mem37[sp_33:word32] = Mem35[ap + 4:word32]
	Mem41[sp_33 - 0x00000004:word32] = r6 + 0x000108C5
	word32 r6_46
	call Mem41[0x000192BC:word32] + 2 (retsize: 4;)
		uses: ap:ap_34,pc:pc_50,r0:r0_48,r6:r6_39,sp:sp_33 - 0x00000004,Stack +FFFFFFF8:dwLoc0C_76,Stack +FFFFFFFC:dwLoc08_74
		defs: r6:r6_46
	Mem54[r6_46 + 0x00010A78:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C0F4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C1CB:
	Mem60[sp_20 - 0x00000004:word32] = r6 + 0x000109C5
	call Mem60[pc:word32] + 2 (retsize: 4;)
		uses: ap:ap_22,pc:pc_26 + 0x00000004,r0:r0_24,r6:r6_21,sp:sp_20 - 0x00000004,Stack +FFFFFFF8:v11_15,Stack +FFFFFFFC:r6 + 0x000108C5
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000C1FE(word32 r0, word32 r2, word32 r3, word32 r5, word32 r11, word32 ap, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] pc:[0..31] r0:[0..31] r11:[0..31] r2:[0..31] r3:[0..31] r5:[0..31]
// LiveOut:
// Trashed: CVZN ap pc r0 r11 r2 r3 r4 r5 sp
// Preserved:
fn0000C1FE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C1FE:
	word32 r4_6 = Mem0[r3 + 0x0000C67A:word32]
	branch Mem0[r2 + 0x00010AA4:word32] == 0xFFFFFFFF l0000C226
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C226:
	Mem12[r2 + 0x00010AA4:word32] = 0x00000000
	word32 r2_27
	word32 r11_30
	call Mem17[pc:word32] + 2 (retsize: 4;)
		uses: ap:ap,pc:pc + 0x00000004,r0:r0,r11:r11,r2:r2,r3:r3,r4:r4_6,r5:r5,sp:fp - 0x0000000C,Stack +0004:0x00000000,Stack +0008:r2 + 0x00010AA4
		defs: r11:r11_30,r2:r2_27
	Mem39[r11_30 + -3953:word16] = atomic_fetch_add(Mem17[r11_30 + -3953:word16], Mem17[r2_27 + 0x50E97FFE:word16])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C223:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C327:
	word32 ap_41 = Mem0[r3 + 1511:word32]
	word32 r0_42 = Mem0[ap_41 + 12:word32]
	branch r0_42 > 0x00000010 l0000C354
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C354:
	fn0000F457()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C330_1:
	call 0x0000C334 + r0_42 * 0x00000002 (retsize: 4;)
		uses: ap:ap_41,pc:pc,r0:r0_42,r11:r11,r2:r2,r3:r3,r4:r4_6,r5:r5,sp:fp - 0x00000004,Stack +0000:dwLoc08,Stack +FFFFFFFC:dwLoc0C
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000C1FE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000C6FA(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 ap, word32 fp, word32 pc, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut, ptr32 & pcOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: ap fp pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000C6FA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C6FA:
	word32 r10_414 = Mem0[0x00019370:word32]
	word32 r9_7 = Mem0[ap + 8:word32] & ~0xFFFFFFF8
	branch r9_7 == 0x00000000 l0000C729
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C729:
	Mem14[fp + -40:word16] = 0x0000
	Mem16[fp + -38:word16] = 0x0003
	Mem18[fp + -36:word32] = 0x00000000
	Mem20[fp + -32:word16] = 0x0000
	Mem22[fp + -30:word16] = 0x0004
	Mem24[fp + -28:word32] = 0x00000000
	Mem26[fp + -24:word16] = 0x0000
	Mem28[fp + -22:word16] = 0x0005
	Mem30[fp + -20:word64] = 0x0000000000000000
	Mem32[fp + -12:word64] = 0x0000000000000000
	Mem35[r6 + 0x00010CEC:word32] = r6 + 0x00010ABC
	Mem37[r6 + 0x00010CC4:word32] = Mem35[r6 + 0x00010CEC:word32]
	Mem39[r6 + 0x00010CC0:word32] = Mem37[r6 + 0x00010CC4:word32]
	Mem41[r6 + 0x00010CDC:word32] = Mem39[r6 + 0x00010CC0:word32]
	Mem43[r6 + 0x00010CE8:word32] = 0x00000000
	Mem45[r6 + 0x00010CCC:word64] = 0x0000000000000000
	Mem47[fp + -44:word32] = Mem45[ap + 4:word32]
	word32 v30_49 = Mem47[ap + 4:word32]
	word32 sp_54
	word32 r10_55
	word32 ap_56
	word32 r9_57
	word32 fp_58
	word32 r6_59
	word32 r0_61
	word32 pc_65
	word32 r7_67
	word32 r3_69
	word32 r8_71
	word32 r4_786
	word32 r1_785
	word32 r5_784
	call Mem50[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc,r0:r0,r1:r1,r10:r10_5,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9_7,sp:fp + 0xFFFFFF1C,Stack +0000:dwLocE8,Stack +0004:v30_49,Stack +FFFFFFFC:dwLocEC
		defs: ap:ap_56,fp:fp_58,pc:pc_65,r0:r0_61,r1:r1_785,r10:r10_55,r3:r3_69,r4:r4_786,r5:r5_784,r6:r6_59,r7:r7_67,r8:r8_71,r9:r9_57,sp:sp_54
	Mem74[fp_58 + -48:word16] = (word16) r0_61
	word32 r2_75 = (uint32) (word16) r0_61
	branch r2_75 <=u 0x000000FF l0000C7A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C7A5:
	Mem81[sp_54 - 0x00000004:word32] = fp_58 + -8
	Mem84[sp_54 - 0x00000008:word32] = fp_58 + -40
	Mem87[sp_54 - 0x0000000C:word32] = fp_58 + -48
	word32 r10_94
	word32 r9_96
	word32 fp_97
	word32 r6_98
	word32 r0_99
	word32 r2_100
	word32 pc_101
	word32 r7_102
	word32 r3_103
	word32 r8_104
	word32 r4_789
	word32 r1_788
	word32 r5_787
	call Mem87[pc_65:word32] + 2 (retsize: 4;)
		uses: ap:ap_56,fp:fp_58,pc:pc_65 + 0x00000004,r0:r0_61,r1:r1_785,r10:r10_55,r2:r2_75,r3:r3_69,r4:r4_786,r5:r5_784,r6:r6_59,r7:r7_67,r8:r8_71,r9:r9_57,sp:sp_54 - 0x0000000C,Stack +FFFFFF18:dwLocEC,Stack +FFFFFF1C:dwLocE8,Stack +FFFFFF20:v30_49
		defs: fp:fp_97,pc:pc_101,r0:r0_99,r1:r1_788,r10:r10_94,r2:r2_100,r3:r3_103,r4:r4_789,r5:r5_787,r6:r6_98,r7:r7_102,r8:r8_104,r9:r9_96
	Mem107[Mem87[r0_99 + 20483:word32]:word32] = __ashift(0x00000004, Mem87[r2_100 + 0x50E87FFE:word32])
	word32 fp_111 = Mem107[fp_97 + 0x0000000C:word32]
	word32 ap_112 = Mem107[fp_97 + 0x00000008:word32]
	r1Out = r1_788
	r2Out = r2_100
	r3Out = r3_103
	r4Out = r4_789
	r5Out = r5_787
	r6Out = r6_98
	r7Out = r7_102
	r8Out = r8_104
	r9Out = r9_96
	r10Out = r10_94
	apOut = ap_112
	fpOut = fp_111
	spOut = fp_97 - 0x00000004
	pcOut = pc_101
	return r0_99
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C7A1:
	word32 fp_118 = Mem74[fp_58 + 0x0000000C:word32]
	word32 ap_119 = Mem74[fp_58 + 0x00000008:word32]
	r1Out = r1_785
	r2Out = r2_75
	r3Out = r3_69
	r4Out = r4_786
	r5Out = r5_784
	r6Out = r6_59
	r7Out = r7_67
	r8Out = r8_71
	r9Out = r9_57
	r10Out = r10_55
	apOut = ap_119
	fpOut = fp_118
	spOut = fp_58 - 0x00000004
	pcOut = pc_65
	return 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C726:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C919:
	branch r9_7 == 0x00000001 l0000C921
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C921:
	word32 r10_130
	word32 r9_132
	word32 fp_133
	word32 r6_134
	word32 r0_135
	word32 r2_136
	word32 pc_137
	word32 r7_138
	word32 r3_139
	word32 r8_140
	word32 r4_793
	word32 r1_792
	word32 r5_791
	call Mem125[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc,r0:r0,r1:r1,r10:r10_5,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9_7,sp:fp + 0xFFFFFF1C,Stack +0000:dwLocE8,Stack +0004:r7 + 0x0000C701,Stack +FFFFFFFC:dwLocEC
		defs: fp:fp_133,pc:pc_137,r0:r0_135,r1:r1_792,r10:r10_130,r2:r2_136,r3:r3_139,r4:r4_793,r5:r5_791,r6:r6_134,r7:r7_138,r8:r8_140,r9:r9_132
	branch r0_135 + Mem125[r6_134 + 0x00010CE8:word32] <=u 0x000000F2 l0000C945
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C945:
	branch Mem125[r6_134 + 0x00010CE8:word32] != 0x00000000 l0000C974
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C94D:
	Mem152[r6_134 + 0x00010CEC:word32] = r6_134 + 0x00010ABC
	Mem154[r6_134 + 0x00010CC4:word32] = Mem152[r6_134 + 0x00010CEC:word32]
	Mem156[r6_134 + 0x00010CC0:word32] = Mem154[r6_134 + 0x00010CC4:word32]
	Mem158[r6_134 + 0x00010CCC:word64] = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C974:
	Mem166[r6_134 + 0x00010CDC:word32] = Mem164[r6_134 + 0x00010CEC:word32]
	word32 r2_167 = 0x00000000
	branch Mem166[r6_134 + 0x00010CE4:word32] != 0x00000000 l0000C98B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C989:
	r2_167 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C98B:
	Mem177[r6_134 + 0x00010CE0:word32] = r2_167
	word32 v65_178 = Mem177[r6_134 + 0x00010CD8:word32]
	Mem179[r6_134 + 0x00010CD0:word32] = v65_178
	branch v65_178 == 0x00000000 l0000C9AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C99F:
	r2_167 = Mem179[r6_134 + 0x00010CDC:word32]
	Mem186[r2_167 + -1:byte] = 0x2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C9AA:
	Mem193[Mem192[r6_134 + 0x00010CDC:word32]:byte] = 0x00
	word32 fp_203 = Mem193[fp_133 + 0x0000000C:word32]
	word32 ap_204 = Mem193[fp_133 + 0x00000008:word32]
	r1Out = r1_792
	r2Out = r2_167
	r3Out = r3_139
	r4Out = r4_793
	r5Out = r5_791
	r6Out = r6_134
	r7Out = r7_138
	r8Out = r8_140
	r9Out = r9_132
	r10Out = r10_130
	apOut = ap_204
	fpOut = fp_203
	spOut = fp_133 - 0x00000004
	pcOut = pc_137
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C941:
	word32 fp_210 = Mem125[fp_133 + 0x0000000C:word32]
	word32 ap_211 = Mem125[fp_133 + 0x00000008:word32]
	r1Out = r1_792
	r2Out = r2_136
	r3Out = r3_139
	r4Out = r4_793
	r5Out = r5_791
	r6Out = r6_134
	r7Out = r7_138
	r8Out = r8_140
	r9Out = r9_132
	r10Out = r10_130
	apOut = ap_211
	fpOut = fp_210
	spOut = fp_133 - 0x00000004
	pcOut = pc_137
	return 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C91E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C9B3:
	branch r9_7 == 0x00000002 l0000C9BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C9BB:
	word32 v46_216 = Mem0[ap + 4:word32]
	word32 sp_221
	word32 ap_223
	word32 r0_227
	word32 r10_222
	word32 r1_796
	word32 pc_229
	word32 r6_226
	word32 fp_225
	word32 r4_797
	word32 r5_795
	word32 r7_230
	word32 r8_232
	word32 r9_224
	call Mem217[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc,r0:r0,r1:r1,r10:r10_5,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9_7,sp:fp + 0xFFFFFF1C,Stack +0000:dwLocE8,Stack +0004:v46_216,Stack +FFFFFFFC:dwLocEC
		defs: ap:ap_223,fp:fp_225,pc:pc_229,r0:r0_227,r1:r1_796,r10:r10_222,r4:r4_797,r5:r5_795,r6:r6_226,r7:r7_230,r8:r8_232,r9:r9_224,sp:sp_221
	word32 r3_234 = r0_227
	branch Mem217[r6_226 + 0x00010CE0:word32] == 0x00000000 l0000C9FB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C9D0:
	word32 r2_239 = Mem217[r6_226 + 0x00010CDC:word32]
	Mem241[r6_226 + 0x00010CDC:word32] = Mem217[r6_226 + 0x00010CDC:word32] + 0x00000001
	Mem243[r2_239:byte] = 0x5B
	branch r0_227 == 0x00000000 l0000C9F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C9E5:
	word32 r2_248 = Mem243[r6_226 + 0x00010CDC:word32]
	Mem250[r6_226 + 0x00010CDC:word32] = Mem243[r6_226 + 0x00010CDC:word32] + 0x00000001
	Mem252[r2_248:byte] = 0x2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C9F5:
	Mem258[r6_226 + 0x00010CE0:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C9FB:
	branch r0_227 != 0x00000001 l0000CA06
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA00:
	branch Mem270[Mem270[ap_223 + 4:word32]:byte] == 0x2E l0000CA7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA06:
	branch r0_227 != 0x00000002 l0000CA3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA0B:
	word32 r2_280 = Mem270[ap_223 + 4:word32]
	branch Mem270[r2_280:byte] != 0x2E l0000CA3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA14:
	branch Mem270[r2_280 + 1:byte] != 0x2E l0000CA3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA3C:
	word32 r2_293 = Mem270[r6_226 + 0x00010CDC:word32] - Mem270[r6_226 + 0x00010CBC:word32] + r0_227
	branch r2_293 <= 0x000000FF l0000CA58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA58:
	Mem304[sp_221 - 0x00000004:word32] = Mem270[ap_223 + 4:word32]
	Mem307[sp_221 - 0x00000008:word32] = Mem304[r6_226 + 0x00010CDC:word32]
	call Mem307[0x000192BC:word32] + 2 (retsize: 4;)
		uses: ap:ap_223,fp:fp_225,pc:pc_229,r0:r0_227,r1:r1_796,r10:r10_222,r2:r2_293,r3:r0_227,r4:r4_797,r5:r5_795,r6:r6_226,r7:r7_230,r8:r8_232,r9:r9_224,sp:sp_221 - 0x00000008,Stack +FFFFFF18:dwLocEC,Stack +FFFFFF1C:dwLocE8,Stack +FFFFFF20:v46_216
		defs: fp:fp_327,pc:pc_339,r1:r1_807,r10:r10_316,r3:r3_345,r4:r4_812,r5:r5_802,r6:r6_328,r7:r7_344,r8:r8_350,r9:r9_322
	Mem353[r6_226 + 0x00010CDC:word32] = Mem307[r6_226 + 0x00010CDC:word32] + r3_234
	Mem355[Mem353[r6_226 + 0x00010CDC:word32]:byte] = 0x2E
	Mem357[r6_226 + 0x00010CDC:word32] = Mem355[r6_226 + 0x00010CDC:word32] + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA54:
	word32 fp_364 = Mem270[fp_225 + 0x0000000C:word32]
	word32 ap_365 = Mem270[fp_225 + 0x00000008:word32]
	r1Out = r1_796
	r2Out = r2_293
	r3Out = r0_227
	r4Out = r4_797
	r5Out = r5_795
	r6Out = r6_226
	r7Out = r7_230
	r8Out = r8_232
	r9Out = r9_224
	r10Out = r10_222
	apOut = ap_365
	fpOut = fp_364
	spOut = fp_225 - 0x00000004
	pcOut = pc_229
	return 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA1A:
	word32 r2_366 = Mem270[r6_226 + 0x00010CDC:word32]
	Mem368[r6_226 + 0x00010CDC:word32] = Mem270[r6_226 + 0x00010CDC:word32] + 0x00000001
	Mem370[r2_366:byte] = 0x2D
	word32 r2_371 = Mem370[r6_226 + 0x00010CDC:word32]
	Mem373[r6_226 + 0x00010CDC:word32] = Mem370[r6_226 + 0x00010CDC:word32] + 0x00000001
	Mem375[r2_371:byte] = 0x2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA7C:
	word32 r2_381 = Mem380[r6_226 + 0x00010CDC:word32]
	Mem383[r6_226 + 0x00010CD0:word32] = r2_381 - Mem380[r6_226 + 0x00010CC4:word32]
	Mem385[r2_381:byte] = 0x00
	word32 sp_392 = fp_225 - 0x00000004
	word32 fp_393 = Mem385[sp_392 + 0x00000010:word32]
	word32 ap_394 = Mem385[sp_392 + 0x0000000C:word32]
	r1Out = r1_796
	r2Out = r2_381
	r3Out = r3_234
	r4Out = r4_797
	r5Out = r5_795
	r6Out = r6_226
	r7Out = r7_230
	r8Out = r8_232
	r9Out = r9_224
	r10Out = r10_222
	apOut = ap_394
	fpOut = fp_393
	spOut = sp_392
	pcOut = pc_229
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C9B8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA94:
	branch r9_7 == 0x00000003 l0000CA9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA9C:
	branch (Mem0[ap + 8:word32] & 0x00000008) != 0x00000000 l0000CAA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CAA4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CAA1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CB5C:
	word32 r8_424
	word32 r3_423
	word32 r7_422
	word32 r2_420
	word32 r0_419
	word32 r6_418
	word32 fp_417
	word32 r9_416
	word32 ap_415
	word32 sp_413
	word32 dwLocE8_818
	word32 dwLocE4_817
	Mem399[Mem0[r6 + 0x00010CDC:word32]:byte] = 0x00
	branch Mem399[r6 + 0x00010CD0:word32] == 0x00000000 l0000CBE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CBE0:
	call Mem409[0x000192D4:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc,r0:r0,r1:r1,r10:r10_5,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9_7,sp:fp + 0xFFFFFF18,Stack +0000:dwLocEC,Stack +0004:r6 + 0x00010BBC,Stack +0008:r8 + 1705
		defs: ap:ap_415,fp:fp_417,pc:pc_421,r0:r0_419,r10:r10_414,r2:r2_420,r3:r3_423,r6:r6_418,r7:r7_422,r8:r8_424,r9:r9_416,sp:sp_413
	dwLocE4_817 = r8 + 1705
	dwLocE8_818 = r6 + 0x00010BBC
	branch r0_419 == 0x00000000 l0000CC2B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CBF5:
	Mem432[sp_413 - 0x00000004:word32] = r8_424 + 1717
	Mem435[sp_413 - 0x00000008:word32] = r6_418 + 0x00010BBC
	word32 r5_822
	word32 r1_823
	word32 r4_824
	word32 sp_439
	word32 r10_440
	word32 ap_441
	word32 r9_442
	word32 fp_443
	word32 r6_444
	word32 r0_445
	word32 r2_446
	word32 pc_447
	word32 r7_448
	word32 r3_449
	word32 r8_450
	call Mem435[0x000192BC:word32] + 2 (retsize: 4;)
		uses: ap:ap_415,fp:fp_417,pc:pc_421,r0:r0_419,r1:r1,r10:r10_414,r2:r2_420,r3:r3_423,r4:r4,r5:r5,r6:r6_418,r7:r7_422,r8:r8_424,r9:r9_416,sp:sp_413 - 0x00000008,Stack +FFFFFF18:dwLocEC,Stack +FFFFFF1C:r6 + 0x00010BBC,Stack +FFFFFF20:r8 + 1705
		defs: ap:ap_441,fp:fp_443,pc:pc_447,r0:r0_445,r1:r1_823,r10:r10_440,r2:r2_446,r3:r3_449,r4:r4_824,r5:r5_822,r6:r6_444,r7:r7_448,r8:r8_450,r9:r9_442,sp:sp_439
	Mem453[r6_444 + 0x00010CF0:word32] = 0x00000000
	Mem455[sp_439 - 0x00000004:word32] = 0x00000000
	Mem458[sp_439 - 0x00000008:word32] = r6_444 + 0x00010BBC
	call Mem458[0x00019284:word32] + 2 (retsize: 4;)
		uses: ap:ap_441,fp:fp_443,pc:pc_447,r0:r0_445,r1:r1_823,r10:r10_440,r2:r2_446,r3:r3_449,r4:r4_824,r5:r5_822,r6:r6_444,r7:r7_448,r8:r8_450,r9:r9_442,sp:sp_439 - 0x00000008,Stack +FFFFFF18:dwLocEC,Stack +FFFFFF1C:r6 + 0x00010BBC,Stack +FFFFFF20:r8 + 1705
		defs: ap:ap_464,fp:fp_466,pc:pc_470,r0:r0_468,r10:r10_463,r2:r2_469,r3:r3_472,r6:r6_467,r7:r7_471,r8:r8_473,r9:r9_465,sp:sp_462
	branch r0_419 == 0x00000000 l0000CC2B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CC1F:
	branch Mem458[r10_414:word32] == 0x00000011 l0000CC2B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CC24:
	Mem483[r6_418 + 0x00010CF0:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CB6A:
	Mem489[Mem399[r6 + 0x00010CC4:word32]:byte] = 0x5D
	dwLocE4_817 = 0x7FFFFFFF
	dwLocE8_818 = r6 + 0x00010ABC
	dwLocEC = r6 + 0x00010BBC
	r0_419 = fn0000E2EA(r1, r5, r7, ap, fp, out r1, out r2_420, out r3_423, out r4, out r5, out r6_418, out r7_422, out r8_424, out r9_416, out ap_415, out fp_417, out sp_413)
	branch r0_419 != 0x00000000 l0000CB9B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CB9B:
	Mem525[r6_418 + 0x00010CF0:word32] = 0x00000000
	Mem527[sp_413 - 0x00000004:word32] = 0x00000000
	Mem530[sp_413 - 0x00000008:word32] = r6_418 + 0x00010ABC
	word32 sp_534
	word32 r10_535
	word32 ap_536
	word32 r9_537
	word32 fp_538
	word32 r6_539
	word32 r0_540
	word32 r2_541
	word32 pc_542
	word32 r7_543
	word32 r3_544
	word32 r8_545
	word32 r5_546
	word32 r1_547
	word32 r4_548
	call Mem530[0x00019284:word32] + 2 (retsize: 4;)
		uses: ap:ap_503,fp:fp_504,pc:pc,r0:r0_505,r1:r1_506,r10:r10_5,r2:r2_507,r3:r3_508,r4:r4_509,r5:r5_510,r6:r6_511,r7:r7_512,r8:r8_513,r9:r9_514,sp:sp_515 - 0x00000008,Stack +FFFFFF18:r6 + 0x00010BBC,Stack +FFFFFF1C:r6 + 0x00010ABC,Stack +FFFFFF20:0x7FFFFFFF
		defs: ap:ap_536,fp:fp_538,pc:pc_542,r0:r0_540,r1:r1_547,r10:r10_535,r2:r2_541,r3:r3_544,r4:r4_548,r5:r5_546,r6:r6_539,r7:r7_543,r8:r8_545,r9:r9_537,sp:sp_534
	branch r0_540 == 0x00000000 l0000CBC4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CBC4:
	Mem555[r6_539 + 0x00010AB8:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CBB4:
	branch Mem530[r10_535:word32] == 0x00000011 l0000CBCB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CBB9:
	Mem563[r6_539 + 0x00010CF0:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CBCB:
	Mem571[sp_534 - 0x00000004:word32] = r6_539 + 0x00010ABC
	Mem574[sp_534 - 0x00000008:word32] = r6_539 + 0x00010BBC
	call Mem574[0x000192BC:word32] + 2 (retsize: 4;)
		uses: ap:ap_536,fp:fp_538,pc:pc_542,r0:r0_540,r1:r1_547,r10:r10_535,r2:r2_541,r3:r3_544,r4:r4_548,r5:r5_546,r6:r6_539,r7:r7_543,r8:r8_545,r9:r9_537,sp:sp_534 - 0x00000008,Stack +FFFFFF18:r6 + 0x00010BBC,Stack +FFFFFF1C:r6 + 0x00010ABC,Stack +FFFFFF20:0x7FFFFFFF
		defs: ap:ap_582,fp:fp_586,pc:pc_593,r0:r0_589,r1:r1_603,r10:r10_580,r2:r2_591,r3:r3_597,r4:r4_605,r5:r5_601,r6:r6_587,r7:r7_595,r8:r8_599,r9:r9_584,sp:sp_578
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CB98:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CC2B:
	word32 sp_608 = sp_413 - 0x00000004
	Mem612[sp_608:word32] = Mem610[ap_415 + 4:word32]
	word32 sp_616
	word32 r10_618
	word32 ap_619
	word32 r9_621
	word32 fp_623
	word32 r6_625
	word32 r0_627
	word32 pc_631
	word32 r7_633
	word32 r3_635
	word32 r8_637
	word32 r5_639
	word32 r1_641
	word32 r4_644
	call Mem612[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap_609,fp:fp_622,pc:pc_630,r0:r0_626,r1:r1_640,r10:r10_617,r2:r2_628,r3:r3_634,r4:r4_642,r5:r5_638,r6:r6_624,r7:r7_632,r8:r8_636,r9:r9_620,sp:sp_608,Stack +FFFFFF18:dwLocEC_836,Stack +FFFFFF1C:dwLocE8_835,Stack +FFFFFF20:dwLocE4_834
		defs: ap:ap_619,fp:fp_623,pc:pc_631,r0:r0_627,r1:r1_641,r10:r10_618,r3:r3_635,r4:r4_644,r5:r5_639,r6:r6_625,r7:r7_633,r8:r8_637,r9:r9_621,sp:sp_616
	word32 r2_647 = Mem612[r6_625 + 0x00010CDC:word32] - (r6_625 + 0x00010ABC)
	word32 r0_648 = r0_627 + r2_647
	branch r0_648 <=u 0x000000FF l0000CC54
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CC54:
	Mem654[sp_616 - 0x00000004:word32] = Mem612[ap_619 + 4:word32]
	Mem657[sp_616 - 0x00000008:word32] = Mem654[r6_625 + 0x00010CDC:word32]
	word32 sp_661
	word32 r10_662
	word32 ap_663
	word32 r9_664
	word32 fp_665
	word32 r6_666
	word32 r0_667
	word32 r2_668
	word32 pc_669
	word32 r7_670
	word32 r3_671
	word32 r8_672
	word32 r5_673
	word32 r1_674
	word32 r4_675
	call Mem657[0x000192BC:word32] + 2 (retsize: 4;)
		uses: ap:ap_619,fp:fp_623,pc:pc_631,r0:r0_648,r1:r1_641,r10:r10_618,r2:r2_647,r3:r3_635,r4:r4_644,r5:r5_639,r6:r6_625,r7:r7_633,r8:r8_637,r9:r9_621,sp:sp_616 - 0x00000008,Stack +FFFFFF18:dwLocEC_836,Stack +FFFFFF1C:dwLocE8_835,Stack +FFFFFF20:dwLocE4_834
		defs: ap:ap_663,fp:fp_665,pc:pc_669,r0:r0_667,r1:r1_674,r10:r10_662,r2:r2_668,r3:r3_671,r4:r4_675,r5:r5_673,r6:r6_666,r7:r7_670,r8:r8_672,r9:r9_664,sp:sp_661
	Mem679[sp_661 - 0x00000004:word32] = Mem657[ap_663 + 4:word32]
	word32 r10_684
	word32 r9_686
	word32 fp_687
	word32 r6_688
	word32 r0_689
	word32 r2_690
	word32 pc_691
	word32 r7_692
	word32 r3_693
	word32 r8_694
	word32 r5_695
	word32 r1_696
	word32 r4_697
	call Mem679[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap_663,fp:fp_665,pc:pc_669,r0:r0_667,r1:r1_674,r10:r10_662,r2:r2_668,r3:r3_671,r4:r4_675,r5:r5_673,r6:r6_666,r7:r7_670,r8:r8_672,r9:r9_664,sp:sp_661 - 0x00000004,Stack +FFFFFF18:dwLocEC_836,Stack +FFFFFF1C:dwLocE8_835,Stack +FFFFFF20:dwLocE4_834
		defs: fp:fp_687,pc:pc_691,r0:r0_689,r1:r1_696,r10:r10_684,r2:r2_690,r3:r3_693,r4:r4_697,r5:r5_695,r6:r6_688,r7:r7_692,r8:r8_694,r9:r9_686
	Mem700[r6_688 + 0x00010CDC:word32] = Mem679[r6_688 + 0x00010CDC:word32] + r0_689
	word32 fp_707 = Mem700[fp_687 + 0x0000000C:word32]
	word32 ap_708 = Mem700[fp_687 + 0x00000008:word32]
	r1Out = r1_696
	r2Out = r2_690
	r3Out = r3_693
	r4Out = r4_697
	r5Out = r5_695
	r6Out = r6_688
	r7Out = r7_692
	r8Out = r8_694
	r9Out = r9_686
	r10Out = r10_684
	apOut = ap_708
	fpOut = fp_707
	spOut = fp_687 - 0x00000004
	pcOut = pc_691
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CC50:
	word32 fp_714 = Mem612[fp_623 + 0x0000000C:word32]
	word32 ap_715 = Mem612[fp_623 + 0x00000008:word32]
	r1Out = r1_641
	r2Out = r2_647
	r3Out = r3_635
	r4Out = r4_644
	r5Out = r5_639
	r6Out = r6_625
	r7Out = r7_633
	r8Out = r8_637
	r9Out = r9_621
	r10Out = r10_618
	apOut = ap_715
	fpOut = fp_714
	spOut = fp_623 - 0x00000004
	pcOut = pc_631
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA99:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CC78:
	branch r9_7 != 0x00000004 l0000CCA2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CCA2:
	branch r9_7 != 0x00000005 l0000CCAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CCAA:
	word32 fp_727 = Mem0[fp + 0x0000000C:word32]
	word32 ap_728 = Mem0[fp + 0x00000008:word32]
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9_7
	r10Out = r10_414
	apOut = ap_728
	fpOut = fp_727
	spOut = fp - 0x00000004
	pcOut = pc
	return 0x00000063
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CCA7:
	word32 fp_735 = Mem0[fp + 0x0000000C:word32]
	word32 ap_736 = Mem0[fp + 0x00000008:word32]
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9_7
	r10Out = r10_414
	apOut = ap_736
	fpOut = fp_735
	spOut = fp - 0x00000004
	pcOut = pc
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CC7D:
	branch Mem0[r6 + 0x00010CF0:word32] == 0x00000000 l0000CC89
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CC89:
	Mem742[Mem0[r6 + 0x00010CDC:word32]:byte] = 0x00
	word32 r10_753
	word32 r9_755
	word32 fp_756
	word32 r6_757
	word32 r2_759
	word32 pc_760
	word32 r7_761
	word32 r3_762
	word32 r8_763
	word32 r5_764
	word32 r1_765
	word32 r4_766
	call Mem748[0x000192BC:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc,r0:r0,r1:r1,r10:r10_5,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9_7,sp:fp + 0xFFFFFF18,Stack +0000:dwLocEC,Stack +0004:Mem745[ap + 4:word32],Stack +0008:r6 + 0x00010ABC
		defs: fp:fp_756,pc:pc_760,r1:r1_765,r10:r10_753,r2:r2_759,r3:r3_762,r4:r4_766,r5:r5_764,r6:r6_757,r7:r7_761,r8:r8_763,r9:r9_755
	word32 fp_774 = Mem748[fp_756 + 0x0000000C:word32]
	word32 ap_775 = Mem748[fp_756 + 0x00000008:word32]
	r1Out = r1_765
	r2Out = r2_759
	r3Out = r3_762
	r4Out = r4_766
	r5Out = r5_764
	r6Out = r6_757
	r7Out = r7_761
	r8Out = r8_763
	r9Out = r9_755
	r10Out = r10_753
	apOut = ap_775
	fpOut = fp_774
	spOut = fp_756 - 0x00000004
	pcOut = pc_760
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CC85:
	word32 fp_781 = Mem0[fp + 0x0000000C:word32]
	word32 ap_782 = Mem0[fp + 0x00000008:word32]
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9_7
	r10Out = r10_414
	apOut = ap_782
	fpOut = fp_781
	spOut = fp - 0x00000004
	pcOut = pc
	return 0x00000003
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000C6FA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000CE52(word32 r3, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r3:[8..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 sp
// Preserved:
fn0000CE52_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE52:
	word32 r3_45
	word32 r0_28 = Mem0[ap + 4:word32]
	branch r0_28 != 0x00000001 l0000CE64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE64:
	branch r0_28 == 0x00000002 l0000CE85
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE69:
	branch r0_28 < 0x00000009 l0000CE73
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE6E:
	branch r0_28 <= 0x0000000B l0000CE85
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE73:
	branch r0_28 < 0x00000050 l0000CE8C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE7C:
	branch r0_28 > 0x00000052 l0000CE8C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE8C:
	r0_28 = DPB(r0_28, 0x04, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE85:
	r0_28 = DPB(r0_28, 0x02, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE8F:
	r3_45 = DPB(r3, (byte) r0_28, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE5E:
	r3_45 = DPB(r3, 0x01, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE92:
	word32 r2_72
	word32 r1_55 = (int32) (int8) r3_45
	branch Mem0[ap + 4:word32] != 0x00000000 l0000CEA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CEA0:
	word32 r0_70 = Mem0[ap + 4:word32] << 4
	r0_28 = r0_70 | 0x7FFF0000
	r2_72 = r0_70 | 0x7FFF0000 | r1_55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE9A:
	r2_72 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CEB0:
	call Mem88[0x0001928C:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0_95,r1:r1_55,r2:r2_87,r3:r3_54,sp:fp - 0x00000008,Stack +0004:r2_87
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000CE52_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000CEBE(word32 r0, word32 r1, word32 r2, word32 r3, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31]
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 r2 r3 sp
// Preserved:
fn0000CEBE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CEBE:
	branch Mem0[r2 + 0x00010CF4:word32] >= 0x00000000 l0000CF36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CED0:
	word32 sp_26
	word32 r2_27
	word32 fp_28
	word32 pc_29
	word32 r0_31
	word32 ap_33
	word32 r3_35
	word32 r1_37
	call Mem19[pc:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc + 0x00000004,r0:r0,r1:r1,r2:r2,r3:r3,sp:fp - 0x00000028,Stack +0004:r2 + 0x00010CF8,Stack +0008:fp + -6,Stack +000C:0x0000000000000000
		defs: ap:ap_33,fp:fp_28,pc:pc_29,r0:r0_31,r1:r1_37,r2:r2_27,r3:r3_35,sp:sp_26
	Mem40[Mem19[r0_31 + 21328:word32]:real32] = Mem19[Mem19[sp_26 + 32766:word32]:real32]
	branch (r0_31 & 0x00000001) == 0x00000000 l0000CF13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF13:
	word32 r1_51
	branch (r3_35 & 0x00000001) == 0x00000000 l0000CF2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF16:
	branch ((int32) Mem40[fp_28 + -14:int16] & 0x00000001) == 0x00000000 l0000CF2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF1D:
	word32 r0_47 = (uint32) Mem40[fp_28 + -15:byte]
	branch r0_47 <u 0x00000005 l0000CF2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF2C:
	r1_51 = 0x00000018
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF26:
	r1_51 = r0_47
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF2F:
	Mem63[r2_27 + 0x00010CF4:word32] = r1_51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF36:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000CEBE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CEE8:
	Mem81[sp_26 - 0x00000008:word64] = 0x0000000000000000
	Mem84[sp_26 - 0x00000010:word64] = 0x0000000000000000
	Mem86[sp_26 - 0x00000014:word32] = 0x00000008
	Mem89[sp_26 - 0x00000018:word32] = fp_28 + -22
	Mem92[sp_26 - 0x00000020:word64] = 0x0000000000000000
	Mem95[sp_26 - 0x00000024:word32] = fp_28 + -14
	Mem97[sp_26 - 0x00000028:word32] = 0x00000027
	Mem100[sp_26 - 0x0000002C:int32] = (int32) Mem97[fp_28 + -6:int16]
	Mem102[sp_26 - 0x00000030:word32] = 0x00000000
	call Mem102[pc_29:word32] + 2 (retsize: 4;)
		uses: ap:ap_33,fp:fp_28,pc:pc_29 + 0x00000004,r0:r0_31,r1:r1_37,r2:r2_27,r3:r3_35,sp:sp_26 - 0x00000030,Stack +FFFFFFDC:r2 + 0x00010CF8,Stack +FFFFFFE0:fp + -6,Stack +FFFFFFE4:0x0000000000000000
	__halt()
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000CF42(word32 r2, word32 r4, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp:[0..31] r2:[0..31] r4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0000CF42_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000CF42_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF42:
	word32 r4_36
	word32 sp_24
	word32 r2_25
	word32 fp_26
	call Mem20[0x000192D0:word32] + 2 (retsize: 4;)
		uses: fp:fp,r2:r2,r4:r4,sp:fp - 0x00000040,Stack +0004:fp + -44,Stack +0008:r2 + 1767,Stack +000C:r2 + 1783,Stack +0010:r2 + 1791,Stack +0014:r2 + 1796
		defs: fp:fp_26,r2:r2_25,sp:sp_24
	Mem32[sp_24 - 0x00000004:word32] = fp_26 + -44
	branch Mem32[r2_25 + 1748:byte] < 0x36 l0000CF80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF80:
	r4_36 = r2_25 + 1755
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF77:
	r4_36 = r2_25 + 1759
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF85:
	Mem47[sp_24 - 0x00000008:word32] = r4_36
	Mem51[sp_24 - 0x0000000C:word32] = r2_25 + 1746
	Mem54[sp_24 - 0x00000010:word32] = r2_25 + 1740
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000CFBA(word32 r0, word32 r1, word32 r4, word32 r5, word32 r6, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn0000CFBA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CFBA:
	word32 r3_6 = Mem0[ap + 4:word32]
	word32 r2_7 = Mem0[ap + 8:word32]
	branch r2_7 != 0x00000000 l0000CFCA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CFCA:
	word32 ap_18
	word32 fp_19
	word32 r3_24
	word32 r6_27
	word32 r1_118
	word32 r2_110
	word32 r4_117
	word32 r0_20 = fn0000D39E(r0, r1, r2_7, r3_6, r4, r5, r6, ap, fp, out r1_118, out r2_110, out r3_24, out r4_117, out r5_187, out r6_27, out ap_18, out fp_19, out sp_188)
	word32 r3_115 = r3_24 ^ 0xFFFFFFFF
	branch Mem0[ap_18 + 12:word32] >=u 0x00000008 l0000CFE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CFE4:
	word32 r2_39 = r2_110 + 0x00000001
	word32 r3_47 = (uint32) SLICE(r3_115, ui24, 8) ^ Mem40[r0_20 + (((uint32) Mem40[r2_110:byte] ^ r3_115) & ~0xFFFFFF00) * 4:word32]
	word32 r3_54 = (uint32) SLICE(r3_47, ui24, 8) ^ Mem40[r0_20 + (((uint32) Mem40[r2_39:byte] ^ r3_47) & ~0xFFFFFF00) * 4:word32]
	word32 r3_61 = (uint32) SLICE(r3_54, ui24, 8) ^ Mem40[r0_20 + (((uint32) Mem40[r2_39 + 0x00000001:byte] ^ r3_54) & ~0xFFFFFF00) * 4:word32]
	word32 r3_68 = (uint32) SLICE(r3_61, ui24, 8) ^ Mem40[r0_20 + (((uint32) Mem40[r2_39 + 0x00000002:byte] ^ r3_61) & ~0xFFFFFF00) * 4:word32]
	word32 r3_75 = (uint32) SLICE(r3_68, ui24, 8) ^ Mem40[r0_20 + (((uint32) Mem40[r2_39 + 0x00000003:byte] ^ r3_68) & ~0xFFFFFF00) * 4:word32]
	word32 r3_82 = (uint32) SLICE(r3_75, ui24, 8) ^ Mem40[r0_20 + (((uint32) Mem40[r2_39 + 0x00000004:byte] ^ r3_75) & ~0xFFFFFF00) * 4:word32]
	word32 r3_89 = (uint32) SLICE(r3_82, ui24, 8) ^ Mem40[r0_20 + (((uint32) Mem40[r2_39 + 0x00000005:byte] ^ r3_82) & ~0xFFFFFF00) * 4:word32]
	r4_117 = ((uint32) Mem40[r2_39 + 0x00000006:byte] ^ r3_89) & ~0xFFFFFF00
	r1_118 = (uint32) SLICE(r3_89, ui24, 8)
	r3_115 = r1_118 ^ Mem40[r0_20 + r4_117 * 4:word32]
	Mem99[ap_18 + 12:word32] = Mem40[ap_18 + 12:word32] - 0x00000008
	r2_110 = r2_39 + 0x00000007
	branch Mem99[ap_18 + 12:word32] <u 0x00000008 l0000D0A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D0A4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CFE1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D0A7:
	branch Mem105[ap_18 + 12:word32] == 0x00000000 l0000D0C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D0AC:
	r4_117 = ((uint32) Mem113[r2_110:byte] ^ r3_115) & ~0xFFFFFF00
	r1_118 = (uint32) SLICE(r3_115, ui24, 8)
	r3_115 = r1_118 ^ Mem113[r0_20 + r4_117 * 4:word32]
	word32 v28_122 = Mem113[ap_18 + 12:word32] - 0x00000001
	Mem123[ap_18 + 12:word32] = v28_122
	r2_110 = r2_110 + 0x00000001
	branch v28_122 != 0x00000000 l0000D0AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D0C8:
	word32 fp_138 = Mem137[fp_19 + 0x0000000C:word32]
	word32 ap_139 = Mem137[fp_19 + 0x00000008:word32]
	r1Out = r1_118
	r2Out = r2_110
	r3Out = r3_115
	r4Out = r4_117
	r5Out = ap_18 + 12
	r6Out = r6_27
	apOut = ap_139
	fpOut = fp_138
	spOut = fp_19 - 0x00000004
	return r3_115 ^ 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CFC7:
	word32 fp_146 = Mem0[fp + 0x0000000C:word32]
	word32 ap_147 = Mem0[fp + 0x00000008:word32]
	r1Out = r1
	r2Out = r2_7
	r3Out = r3_6
	r4Out = r4
	r5Out = r5
	r6Out = r6
	apOut = ap_147
	fpOut = fp_146
	spOut = fp - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000CFBA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000D0D6(word32 r0, word32 r1, word32 r2, word32 r3, word32 r5, word32 r6, word32 r7, word32 r8, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
fn0000D0D6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D0D6:
	word32 v9_8 = Mem0[ap + 12:word32]
	word32 sp_13
	word32 r4_14
	word32 ap_15
	word32 r0_133
	word32 r2_124
	word32 fp_166
	word32 r3_169
	word32 r6_103
	word32 r1_107
	word32 r7_111
	word32 r8_115
	call Mem9[0x000192CC:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r1:r1,r2:r2,r3:r3,r4:Mem0[0x0001934C:word32],r5:r5,r6:r6,r7:r7,r8:r8,sp:fp - 0x00000008,Stack +0004:v9_8
		defs: ap:ap_15,fp:fp_23,r0:r0_17,r1:r1_29,r2:r2_21,r3:r3_25,r4:r4_14,r6:r6_27,r7:r7_31,r8:r8_33,sp:sp_13
	word32 r5_117 = r0_133
	branch r0_133 == 0x00000000 l0000D10B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D0EF:
	r2_124 = (int32) (Mem9[r0_133:byte] & ~0x80)
	branch (Mem9[r4_14 + r2_124 * 4:word32] & 0x00000008) == 0x00000000 l0000D10B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D0FC:
	r5_117 = r5_117 + 0x00000001
	r0_133 = (int32) (Mem9[r5_117:byte] & ~0x80)
	branch (Mem9[r4_14 + r0_133 * 4:word32] & 0x00000008) != 0x00000000 l0000D0FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D10B:
	branch r5_117 == 0x00000000 l0000D113
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D10F:
	branch Mem9[r5_117:byte] != 0x00 l0000D13F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D113:
	Mem74[sp_13 - 0x00000004:word32] = Mem9[ap_15 + 16:word32]
	call Mem74[0x000192CC:word32] + 2 (retsize: 4;)
		uses: ap:ap_15,fp:fp_23,r0:r0_84,r1:r1_29,r2:r2_89,r3:r3_25,r4:r4_14,r5:r5_55,r6:r6_27,r7:r7_31,r8:r8_33,sp:sp_13 - 0x00000004,Stack +FFFFFFFC:v9_8
		defs: ap:ap_82,fp:fp_95,r0:r0_85,r1:r1_107,r2:r2_91,r3:r3_99,r4:r4_81,r6:r6_103,r7:r7_111,r8:r8_115,sp:sp_78
	r5_117 = r0_133
	branch r0_133 == 0x00000000 l0000D13F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D122:
	r2_124 = (int32) (Mem74[r0_133:byte] & ~0x80)
	branch (Mem74[r4_14 + r2_124 * 4:word32] & 0x00000008) == 0x00000000 l0000D13F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D12F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D130:
	r5_117 = r5_117 + 0x00000001
	r0_133 = (int32) (Mem74[r5_117:byte] & ~0x80)
	branch (Mem74[r4_14 + r0_133 * 4:word32] & 0x00000008) != 0x00000000 l0000D130
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D13F:
	branch r5_117 == 0x00000000 l0000D147
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D143:
	branch Mem142[r5_117:byte] != 0x00 l0000D148
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D148:
	word32 sp_149 = sp_13 - 0x00000004
	Mem150[sp_149:word32] = r5_117
	word32 sp_154
	word32 r4_156
	word32 ap_159
	word32 r0_161
	word32 r5_162
	word32 r2_165
	word32 fp_168
	word32 r3_171
	word32 r6_174
	word32 r1_177
	word32 r7_180
	word32 r8_183
	call Mem150[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap_157,fp:fp_166,r0:r0_160,r1:r1_175,r2:r2_163,r3:r3_169,r4:r4_155,r5:r5_137,r6:r6_172,r7:r7_178,r8:r8_181,sp:sp_149,Stack +FFFFFFFC:v9_8
		defs: ap:ap_159,fp:fp_168,r0:r0_161,r1:r1_177,r2:r2_165,r3:r3_171,r4:r4_156,r5:r5_162,r6:r6_174,r7:r7_180,r8:r8_183,sp:sp_154
	Mem187[sp_154 - 0x00000004:word32] = r0_161 + 0x00000001
	word32 sp_191
	word32 r4_192
	word32 ap_193
	word32 r0_194
	word32 r5_195
	word32 r2_196
	word32 fp_197
	word32 r6_199
	word32 r1_200
	word32 r7_201
	word32 r8_202
	call Mem187[0x000192B4:word32] + 2 (retsize: 4;)
		uses: ap:ap_159,fp:fp_168,r0:r0_161 + 0x00000001,r1:r1_177,r2:r2_165,r3:r3_171,r4:r4_156,r5:r5_162,r6:r6_174,r7:r7_180,r8:r8_183,sp:sp_154 - 0x00000004,Stack +FFFFFFFC:v9_8
		defs: ap:ap_193,fp:fp_197,r0:r0_194,r1:r1_200,r2:r2_196,r4:r4_192,r5:r5_195,r6:r6_199,r7:r7_201,r8:r8_202,sp:sp_191
	branch r0_194 != 0x00000000 l0000D177
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D177:
	Mem210[sp_191 - 0x00000004:word32] = r5_195
	Mem212[sp_191 - 0x00000008:word32] = r0_194
	word32 sp_216
	word32 r4_217
	word32 ap_218
	word32 r5_220
	word32 fp_222
	word32 r3_223
	word32 r8_227
	word32 r1_225
	word32 r0_219
	call Mem212[0x000192BC:word32] + 2 (retsize: 4;)
		uses: ap:ap_193,fp:fp_197,r0:r0_194,r1:r1_200,r2:r2_196,r3:r0_194,r4:r4_192,r5:r5_195,r6:r6_199,r7:r7_201,r8:r8_202,sp:sp_191 - 0x00000008,Stack +FFFFFFFC:v9_8
		defs: ap:ap_218,fp:fp_222,r0:r0_219,r1:r1_225,r3:r3_223,r4:r4_217,r5:r5_220,r8:r8_227,sp:sp_216
	word32 r2_229 = r3_223
	word32 r6_230 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D188:
	byte v24_239 = Mem212[r2_229:byte]
	r6_230 = r6_230 + 0x00000001
	r0_219 = DPB(r0_219, v24_239, 0)
	branch v24_239 == 0x00 l0000D1AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D18F:
	r0_219 = (int32) (v24_239 & ~0x80)
	branch (Mem212[r4_217 + r0_219 * 4:word32] & 0x00000008) != 0x00000000 l0000D1AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D19B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D19C:
	r2_229 = r2_229 + 0x00000001
	byte v26_255 = Mem212[r2_229:byte]
	r0_219 = DPB(r0_219, v26_255, 0)
	branch v26_255 == 0x00 l0000D1AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D1A3:
	r0_219 = (int32) (v26_255 & ~0x80)
	branch (Mem212[r4_217 + r0_219 * 4:word32] & 0x00000008) == 0x00000000 l0000D19C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D1AF:
	byte v29_270 = Mem212[r2_229:byte]
	r1_225 = DPB(r1_225, v29_270, 0)
	branch v29_270 == 0x00 l0000D1D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D1B4:
	r0_219 = (int32) (v29_270 & ~0x80)
	branch (Mem212[r4_217 + r0_219 * 4:word32] & 0x00000008) == 0x00000000 l0000D1D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D1C1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D1C4:
	r2_229 = r2_229 + 0x00000001
	byte v31_292 = Mem212[r2_229:byte]
	r1_225 = DPB(r1_225, v31_292, 0)
	branch v31_292 == 0x00 l0000D1D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D1CB:
	r0_219 = (int32) (v31_292 & ~0x80)
	branch (Mem212[r4_217 + r0_219 * 4:word32] & 0x00000008) != 0x00000000 l0000D1C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D1D8:
	branch (byte) r1_225 != 0x00 l0000D188
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D1DC:
	word32 r2_322 = r6_230 + Mem212[Mem212[ap_218 + 4:word32]:word32]
	Mem331[sp_216 - 0x00000004:word32] = r2_322 + 0x00000001 << 2
	word32 sp_334
	word32 r4_336
	word32 ap_337
	word32 r0_339
	word32 r5_345
	word32 r2_346
	word32 fp_352
	word32 r1_360
	word32 r7_361
	word32 r8_367
	word32 r3_358
	call Mem331[0x000192B4:word32] + 2 (retsize: 4;)
		uses: ap:ap_218,fp:fp_222,r0:r0_338,r1:r1_306,r2:r2_322 + 0x00000001,r3:r3_223,r4:r4_217,r5:r5_220,r6:r6_236,r7:r6_236,r8:r8_227,sp:sp_216 - 0x00000004,Stack +FFFFFFFC:v9_8
		defs: ap:ap_337,fp:fp_352,r0:r0_339,r1:r1_360,r2:r2_346,r3:r3_358,r4:r4_336,r5:r5_345,r7:r7_361,r8:r8_367,sp:sp_334
	branch r0_339 != 0x00000000 l0000D215
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D215:
	word32 r5_377 = Mem331[ap_337 + 8:word32]
	word32 r2_378 = Mem331[r5_377:word32]
	Mem380[r5_377:word32] = Mem331[r5_377:word32] + 0x00000004
	Mem382[r0_339:word32] = Mem380[r2_378:word32]
	word32 r6_376 = r0_339 + 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D22C:
	Mem389[r6_376:word32] = r3_358
	r6_376 = r6_376 + 0x00000004
	word32 r0_391 = (int32) Mem389[r3_358:int8]
	branch r0_391 == 0x00000000 l0000D258
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D234:
	branch (Mem389[r4_336 + (r0_391 & ~0xFFFFFF80) * 4:word32] & 0x00000008) != 0x00000000 l0000D258
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D241:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D244:
	r3_358 = r3_358 + 0x00000001
	r0_391 = (int32) Mem389[r3_358:int8]
	branch r0_391 == 0x00000000 l0000D258
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D24B:
	branch (Mem389[r4_336 + (r0_391 & ~0xFFFFFF80) * 4:word32] & 0x00000008) == 0x00000000 l0000D244
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D258:
	branch r0_391 == 0x00000000 l0000D25E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D25C:
	Mem422[r3_358:byte] = 0x00
	r3_358 = r3_358 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D25E:
	word32 r0_431 = (int32) Mem429[r3_358:int8]
	branch r0_431 == 0x00000000 l0000D284
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D263:
	branch (Mem429[r4_336 + (r0_431 & ~0xFFFFFF80) * 4:word32] & 0x00000008) == 0x00000000 l0000D284
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D270:
	r3_358 = r3_358 + 0x00000001
	r0_431 = (int32) Mem429[r3_358:int8]
	branch r0_431 == 0x00000000 l0000D284
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D277:
	branch (Mem429[r4_336 + (r0_431 & ~0xFFFFFF80) * 4:word32] & 0x00000008) != 0x00000000 l0000D270
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D284:
	branch r0_431 != 0x00000000 l0000D22C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D288:
	word32 r7_472 = r7_361 + Mem429[Mem429[ap_337 + 4:word32]:word32]
	word32 v40_473 = Mem429[ap_337 + 4:word32] - 0x00000001
	Mem474[Mem429[ap_337 + 4:word32]:word32] = v40_473
	branch v40_473 == 0x00000000 l0000D2AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D295:
	word32 r3_477 = Mem474[ap_337 + 0x00000008:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D29C:
	word32 r2_483 = Mem482[r3_477:word32]
	Mem485[r3_477:word32] = Mem482[r3_477:word32] + 0x00000004
	Mem488[r6_376:word32] = Mem485[r2_483:word32]
	word32 v43_491 = Mem488[ap_337 + 4:word32] - 0x00000001
	Mem492[Mem488[ap_337 + 4:word32]:word32] = v43_491
	r6_376 = r6_376 + 0x00000004
	branch v43_491 != 0x00000000 l0000D29C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D2AA:
	Mem502[r6_376:word32] = 0x00000000
	Mem514[Mem502[ap_337 + 8:word32]:word32] = r0_339
	Mem518[Mem514[ap_337 + 0x00000004:word32]:word32] = r7_472
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D1F6:
	Mem534[sp_334 - 0x00000004:word32] = r3_358
	call Mem534[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_337,fp:fp_352,r0:r0_339,r1:r1_360,r2:r2_346,r3:r3_358,r4:r4_336,r5:r5_345,r6:r0_339,r7:r7_361,r8:r8_367,sp:sp_334 - 0x00000004,Stack +FFFFFFFC:v9_8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D161:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D147:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000D0D6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000D39E(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn0000D39E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D39E:
	branch Mem0[r6:word32] != 0x00000000 l0000D3FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D3AC:
	word32 r0_19
	call Mem12[0x000192B4:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r1:r1,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,sp:fp - 0x00000008,Stack +0004:0x00000400
		defs: fp:fp_33,r0:r0_19,r1:r1_29,r2:r2_27,r3:r3_25,r4:r4_23,r6:r6_17
	r5 = r0_19
	branch r0_19 == 0x00000000 l0000D3FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D3BD:
	r4 = 0x00000000
	r3 = r0_19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D3C4:
	r2 = r4
	r1 = 0x00000008
	branch 0x00000008 == 0x00000000 l0000D3EC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D3CC:
	word32 r0_53
	branch (r2 & 0x00000001) == 0x00000000 l0000D3E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D3E0:
	r0_53 = (uint32) SLICE(r2, ui31, 1)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D3CF:
	r0_53 = (uint32) SLICE(r2, ui31, 1) ^ 0xEDB88320
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D3E5:
	r2 = r0_53
	r1 = r1 - 0x00000001
	branch r1 != 0x00000000 l0000D3CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D3EC:
	Mem74[r3:word32] = r2
	r3 = r3 + 0x00000004
	r4 = r4 + 0x00000001
	branch r4 <= 0x000000FF l0000D3C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D3FA:
	Mem90[r6:word32] = r0_19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D3FD:
	word32 sp_105 = fp - 0x00000004
	word32 r0_96 = Mem95[r6:word32]
	word32 fp_106 = Mem95[sp_105 + 0x00000010:word32]
	word32 ap_107 = Mem95[sp_105 + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	apOut = ap_107
	fpOut = fp_106
	spOut = sp_105
	return r0_96
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000D39E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000D406(word32 ap, word32 fp, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31]
// LiveOut: ap fp sp
// Trashed: CVZN ap fp sp
// Preserved:
fn0000D406_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D406:
	branch Mem0[ap:word32] == 0x00000000 l0000D41F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D414:
	word32 ap_17
	call Mem12[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,sp:fp - 0x00000008,Stack +0004:Mem0[ap:word32]
		defs: ap:ap_17,fp:fp_19
	Mem22[ap_17:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D41F:
	word32 sp_28 = fp - 0x00000004
	word32 ap_31 = Mem29[sp_28 + 0x0000000C:word32]
	fpOut = Mem29[sp_28 + 0x00000010:word32]
	spOut = sp_28
	return ap_31
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000D406_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000D422(word32 r0, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r2:[0..31] r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r2 r3 r4 sp
// Preserved:
fn0000D422_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D422:
	word32 r2_16
	word32 r4_18
	word32 r3_20
	call Mem11[0x0001927C:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r2:r2,r3:r3,r4:r4,sp:fp - 0x00000010,Stack +0004:r2,Stack +0008:0x00000000,Stack +000C:0x0000C851
		defs: r2:r2_16,r3:r3_20,r4:r4_18
	Mem29[r2_16 + 36:word32] = -0x00000001
	Mem31[r2_16 + 0x0000C60F:word32] = r4_18 + 2
	Mem33[r2_16 + 144:word32] = r3_20
	Mem35[r2_16 + 148:word32] = r3_20 + 4
	Mem37[r2_16 + 1511:word32] = r2_16 + 167
	Mem39[r2_16 + 0x0000C6E5:word32] = 0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000D422_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000D4A2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0000D4A2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000D4A2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D4A2:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000D50E(word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31]
// LiveOut:
// Trashed: CVZN ap fp sp
// Preserved:
fn0000D50E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D50E:
	branch Mem0[ap + 0x0000C5FB:word32] <= 0x00000000 l0000D529
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D520:
	Mem10[ap + 132:word32] = Mem0[ap + 132:word32] + Mem0[ap + 0x0000C5FB:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D529:
	branch Mem13[ap + 0x0000C849:word32] <= 0x00000000 l0000D554
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D554:
	branch Mem13[ap + 0x0000C5FB:word32] >= 0x00000000 l0000D562
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D55C:
	Mem22[ap + 0x0000C5FB:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D562:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D531:
	Mem35[ap + 0x0000C5FB:word32] = Mem13[ap + 132:word32] + Mem13[ap + 0x0000C849:word32]
	Mem37[ap + 0x0000C5F7:word32] = Mem35[ap + 0x0000C84D:word32] - Mem35[ap + 132:word32]
	Mem39[ap + 0x0000C849:word32] = 0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000D50E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000D566(word32 ap, word32 fp, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31]
// LiveOut: ap fp sp
// Trashed: CVZN ap fp sp
// Preserved:
fn0000D566_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D566:
	branch Mem0[ap + 0x0000C5FB:word32] <= Mem0[ap + 132:word32] l0000D5AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D5AC:
	Mem10[ap + 0x0000C849:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D57B:
	branch Mem0[ap + 132:word32] >= 0x00000000 l0000D585
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D581:
	Mem20[ap + 132:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D585:
	Mem28[ap + 0x0000C84D:word32] = Mem26[ap + 132:word32] + Mem26[ap + 0x0000C5F7:word32]
	Mem30[ap + 0x0000C849:word32] = Mem28[ap + 0x0000C5FB:word32] - Mem28[ap + 132:word32]
	Mem32[ap + 0x0000C5FB:word32] = Mem30[ap + 132:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D5B2:
	Mem39[ap + 132:word32] = Mem37[ap + 132:word32] - Mem37[ap + 0x0000C5FB:word32]
	word32 ap_46 = Mem39[fp + 0x00000008:word32]
	fpOut = Mem39[fp + 0x0000000C:word32]
	spOut = fp - 0x00000004
	return ap_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000D566_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000D5BE(word32 r0, word32 r3, word32 r4, word32 r5, word32 r6, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: ap fp r0 r2 r3 r4 r5 r6 r7 sp
// Trashed: CVZN ap fp r0 r2 r3 r4 r5 r6 r7 sp
// Preserved:
fn0000D5BE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D5BE:
	word32 r2_128 = Mem0[ap + 8:word32]
	word32 sp_103 = fp - 0x00000004
	word32 r7_108 = r2_128
	branch r2_128 != 0x00000000 l0000D5DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D5DD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D5E0:
	branch Mem17[r4 + 0x0000C5FB:word32] > 0x00000000 l0000D64F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D5E8:
	word32 sp_22 = sp_103 - 0x00000004
	Mem24[sp_22:uint32] = 0x00002000
	Mem27[sp_22 - 0x00000004:word32] = Mem24[r4 + 0x0000C5F3:word32]
	Mem30[sp_22 - 0x00000008:word32] = Mem27[r4 + 0x0000C617:word32]
	word32 r0_42
	word32 r5_49
	word32 r3_51
	call Mem30[0x00019270:word32] + 2 (retsize: 4;)
		uses: ap:ap_35,fp:fp_44,r0:r0_41,r2:r2_37,r3:r3_50,r4:r4_16,r5:r5_48,r6:r6_46,r7:r7_39,sp:sp_22 - 0x00000008
		defs: ap:ap_36,fp:fp_45,r0:r0_42,r2:r2_38,r3:r3_51,r4:r4_43,r5:r5_49,r6:r6_47,r7:r7_40,sp:sp_34
	Mem54[r4 + 0x0000C5FB:word32] = r0_42
	branch r0_42 != 0x00000000 l0000D60E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D60E:
	branch Mem54[r4 + 0x0000C5FB:word32] >= 0x00000000 l0000D639
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D639:
	Mem64[r4 + 0x0000C61F:word32] = Mem54[r4 + 0x0000C61F:word32] + 0x00002000
	Mem66[r4 + 0x0000C5F7:word32] = Mem64[r4 + 0x0000C5F3:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D64F:
	word32 r5_77
	word32 r0_72 = Mem71[r4 + 0x0000C5FB:word32]
	branch r2_128 >=u r0_72 l0000D660
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D660:
	r5_77 = r0_72
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D65B:
	r5_77 = r2_128
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D663:
	word32 sp_89 = sp_103 - 0x00000004
	Mem90[sp_89:word32] = r5_77
	Mem94[sp_89 - 0x00000004:word32] = Mem90[r4 + 0x0000C5F7:word32]
	Mem99[sp_89 - 0x00000008:word32] = Mem94[ap + 4:word32]
	word32 r2_106
	call Mem99[0x0001929C:word32] + 2 (retsize: 4;)
		uses: ap:ap_97,fp:fp_114,r0:r0_72,r2:r2_73,r3:r5_85,r4:r4_70,r5:r5_85,r6:r6_117,r7:r7_108,sp:sp_89 - 0x00000008
		defs: ap:ap_104,fp:fp_115,r0:r0_111,r2:r2_106,r3:r3_120,r4:r4_112,r5:r5_119,r6:r6_118,r7:r7_109,sp:sp_103
	Mem123[ap + 4:word32] = Mem99[ap + 4:word32] + r3
	Mem125[r4 + 0x0000C5F7:word32] = Mem123[r4 + 0x0000C5F7:word32] + r3
	Mem127[r4 + 0x0000C5FB:word32] = Mem125[r4 + 0x0000C5FB:word32] - r3
	r2_128 = r2_106 - r3
	branch r2_128 == 0x00000000 l0000D692
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D68F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D616:
	Mem133[sp_103 - 0x00000004:uint32] = 0x00000401
	Mem136[sp_103 - 0x00000008:word32] = r6 + 36
	word32 sp_140
	word32 ap_141
	word32 r2_142
	word32 r7_143
	word32 r0_144
	word32 r4_145
	word32 fp_146
	word32 r6_147
	word32 r5_148
	word32 r3_149
	call Mem136[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap_36,fp:fp_45,r0:r0_42,r2:r2_38,r3:r3_51,r4:r4_43,r5:r5_49,r6:r6_47,r7:r7_40,sp:sp_34 - 0x00000008
		defs: ap:ap_141,fp:fp_146,r0:r0_144,r2:r2_142,r3:r3_149,r4:r4_145,r5:r5_148,r6:r6_147,r7:r7_143,sp:sp_140
	Mem152[sp_140 - 0x00000004:word32] = r0_144
	Mem155[sp_140 - 0x00000008:word32] = r6_147 + 36
	Mem157[sp_140 - 0x0000000C:word32] = r4_145
	word32 r0_158 = Mem157[r4_145 + 0x0000C839:word32]
	word32 r2_164
	word32 r7_165
	word32 r4_167
	word32 fp_168
	word32 r6_169
	word32 r5_170
	word32 r3_171
	call r0_158 + 2 (retsize: 4;)
		uses: ap:ap_141,fp:fp_146,r0:r0_158,r2:r2_142,r3:r3_149,r4:r4_145,r5:r5_148,r6:r6_147,r7:r7_143,sp:sp_140 - 0x0000000C
		defs: fp:fp_168,r2:r2_164,r3:r3_171,r4:r4_167,r5:r5_170,r6:r6_169,r7:r7_165
	word32 fp_179 = Mem157[fp_168 + 0x0000000C:word32]
	word32 ap_180 = Mem157[fp_168 + 0x00000008:word32]
	r2Out = r2_164
	r3Out = r3_171
	r4Out = r4_167
	r5Out = r5_170
	r6Out = r6_169
	r7Out = r7_165
	apOut = ap_180
	fpOut = fp_179
	spOut = fp_168 - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D609:
	word32 fp_184 = Mem54[fp + 0x0000000C:word32]
	word32 ap_185 = Mem54[fp + 0x00000008:word32]
	r2Out = r2_128
	r3Out = r3_51
	r4Out = r4
	r5Out = r5_49
	r6Out = r6
	r7Out = r7_108
	apOut = ap_185
	fpOut = fp_184
	spOut = fp - 0x00000004
	return r7_108 - r2_128
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D5DA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D692:
	word32 sp_193 = fp - 0x00000004
	word32 fp_195 = Mem194[sp_193 + 0x00000010:word32]
	word32 ap_196 = Mem194[sp_193 + 0x0000000C:word32]
	r2Out = r2_128
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7_108
	apOut = ap_196
	fpOut = fp_195
	spOut = sp_193
	return r7_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000D5BE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000D69A(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 ap, word32 fp, word32 pc, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut, ptr32 & pcOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: ap fp pc r0 r1 r2 r3 r4 r5 r6 sp
// Trashed: CVZN ap fp pc r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn0000D69A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D69A:
	branch Mem0[r4 + 0x0000C6C5:word32] == 0x00000000 l0000D6B7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D6B7:
	branch Mem0[r4 + 132:word32] > 0x00000000 l0000D6CB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D6CB:
	branch Mem0[r4 + 0x0000C5FB:word32] <= 0x00000000 l0000D6D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D6D6:
	word32 v16_20 = Mem18[r4 + 0x0000C5F3:word32]
	word32 v17_23 = Mem21[r4 + 0x0000C617:word32]
	word32 sp_28
	word32 ap_35
	word32 r2_37
	word32 pc_247
	call Mem24[0x00019270:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc,r0:r0,r1:r1,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,sp:fp - 0x00000010,Stack +0004:v17_23,Stack +0008:v16_20,Stack +000C:0x00002000
		defs: ap:ap_35,fp:fp_33,pc:pc_247,r0:r0_31,r1:r1_249,r2:r2_37,r3:r3_39,r4:r4_29,r5:r5_41,r6:r6_43,sp:sp_28
	Mem46[r4 + 0x0000C5FB:word32] = r0
	branch r0 != 0x00000000 l0000D701
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D701:
	branch Mem46[r4 + 0x0000C5FB:word32] >= 0x00000000 l0000D73B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D73B:
	Mem102[r4 + 0x0000C61F:word32] = Mem46[r4 + 0x0000C61F:word32] + 0x00002000
	Mem104[r4 + 0x0000C5F7:word32] = Mem102[r4 + 0x0000C5F3:word32]
	branch Mem104[r4 + 0x0000C5FB:word32] <= Mem104[r4 + 132:word32] l0000D790
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D790:
	Mem109[r4 + 0x0000C849:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D75C:
	branch Mem104[r4 + 132:word32] >= 0x00000000 l0000D766
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D762:
	Mem119[r4 + 132:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D766:
	Mem127[r4 + 0x0000C84D:word32] = Mem125[r4 + 132:word32] + Mem125[r4 + 0x0000C5F7:word32]
	Mem129[r4 + 0x0000C849:word32] = Mem127[r4 + 0x0000C5FB:word32] - Mem127[r4 + 132:word32]
	Mem131[r4 + 0x0000C5FB:word32] = Mem129[r4 + 132:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D796:
	Mem138[r4 + 132:word32] = Mem136[r4 + 132:word32] - Mem136[r4 + 0x0000C5FB:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D709:
	Mem57[sp_28 - 0x00000004:uint32] = 0x00000401
	Mem60[sp_28 - 0x00000008:word32] = r6 + 36
	word32 sp_64
	word32 r4_65
	word32 r0_66
	word32 fp_67
	word32 ap_68
	word32 r3_70
	word32 r5_71
	word32 r6_72
	word32 r1_251
	word32 pc_250
	call Mem60[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap_35,fp:fp_33,pc:pc,r0:r0_31,r1:r1_249,r2:r2_37,r3:r3_39,r4:r4_29,r5:r5_41,r6:r6_43,sp:sp_28 - 0x00000008,Stack +FFFFFFF4:v17_23,Stack +FFFFFFF8:v16_20,Stack +FFFFFFFC:0x00002000
		defs: ap:ap_68,fp:fp_67,pc:pc_250,r0:r0_66,r1:r1_251,r3:r3_70,r4:r4_65,r5:r5_71,r6:r6_72,sp:sp_64
	Mem75[sp_64 - 0x00000004:word32] = r0_66
	Mem78[sp_64 - 0x00000008:word32] = r6_72 + 36
	Mem80[sp_64 - 0x0000000C:word32] = r4_65
	word32 r2_81 = Mem80[r4_65 + 0x0000C839:word32]
	word32 sp_85
	word32 r0_87
	word32 ap_89
	word32 r2_90
	call r2_81 + 2 (retsize: 4;)
		uses: ap:ap_68,fp:fp_67,pc:pc_250,r0:r0_66,r1:r1_251,r2:r2_81,r3:r3_70,r4:r4_65,r5:r5_71,r6:r6_72,sp:sp_64 - 0x0000000C,Stack +FFFFFFF4:v17_23,Stack +FFFFFFF8:v16_20,Stack +FFFFFFFC:0x00002000
		defs: ap:ap_89,r0:r0_87,r2:r2_90,sp:sp_85
	Mem96[sp_85 - 0x00000004:word32] = 0x00000001
	fn000124FE(r0_87, r2_90, ap_89, pc)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D6F7:
	Mem141[r4 + 0x0000C5FB:word32] = 0x00000000
	word32 fp_145 = Mem141[fp + 0x0000000C:word32]
	word32 ap_146 = Mem141[fp + 0x00000008:word32]
	r1Out = r1
	r2Out = r2_37
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	apOut = ap_146
	fpOut = fp_145
	spOut = fp - 0x00000004
	pcOut = pc_247
	return -0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D6D3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D79F:
	branch (Mem148[Mem148[r4 + 1511:word32] + 20:word32] & 0x00000001) == 0x00000000 l0000D7EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D7A9:
	word32 r2_153 = Mem148[r4 + 0x0000C5FB:word32]
	r3 = Mem148[r4 + 0x0000C5F7:word32]
	r5 = r2_153 - 0x00000001
	branch r2_153 == 0x00000000 l0000D7EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D7C2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D7C4:
	word32 r2_169 = (uint32) Mem168[r3:byte]
	word32 fp_176
	word32 sp_179
	word32 r0_177 = fn00011ED6(r0, fp, out fp_176, out sp_179)
	Mem186[r3:byte] = (byte) r2_169 ^ (byte) r0_177
	Mem189[sp_179 - 0x00000004:uint32] = (uint32) Mem186[r3:byte]
	word32 r3_197
	r0 = fn00011F06(r2_169, r0_177, fp_176, out r1, out r3_197, out fp)
	r3 = r3_197 + 0x00000001
	r5 = r5_315 - 0x00000001
	r5_315 = r5
	branch r5_315 != 0x00000000 l0000D7C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D7EA:
	Mem215[r4 + 0x0000C5FB:word32] = Mem213[r4 + 0x0000C5FB:word32] - 0x00000001
	word32 r2_216 = Mem215[r4 + 0x0000C5F7:word32]
	Mem218[r4 + 0x0000C5F7:word32] = Mem215[r4 + 0x0000C5F7:word32] + 0x00000001
	word32 sp_227 = fp - 0x00000004
	word32 r0_219 = (uint32) Mem218[r2_216:byte]
	word32 fp_228 = Mem218[sp_227 + 0x00000010:word32]
	word32 ap_229 = Mem218[sp_227 + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_216
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	apOut = ap_229
	fpOut = fp_228
	spOut = sp_227
	pcOut = pc
	return r0_219
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D6BD:
	Mem231[r4 + 132:word32] = Mem0[r4 + 132:word32] - 0x00000001
	Mem233[r4 + 0x0000C5FB:word32] = 0x00000000
	word32 fp_237 = Mem233[fp + 0x0000000C:word32]
	word32 ap_238 = Mem233[fp + 0x00000008:word32]
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	apOut = ap_238
	fpOut = fp_237
	spOut = fp - 0x00000004
	pcOut = pc
	return -0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D6B3:
	word32 fp_242 = Mem0[fp + 0x0000000C:word32]
	word32 ap_243 = Mem0[fp + 0x00000008:word32]
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	apOut = ap_243
	fpOut = fp_242
	spOut = fp - 0x00000004
	pcOut = pc
	return -0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000D69A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000DC76(word32 ap, word32 fp, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31]
// LiveOut: ap fp r0 r11 sp
// Trashed: CVZN ap fp r0 r11 sp
// Preserved:
fn0000DC76_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000DC76:
	word32 r11_5 = Mem0[0x0001934C:word32]
	branch Mem7[ap + 4:word32] != 0x00000000 l0000DC9F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000DC9F:
	word32 r0_13 = Mem7[ap + 8:word32]
	branch r0_13 > 0x00000005 l0000DCB1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000DCB1:
	branch r0_13 < 0x00000000 l0000DCB3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000DCB3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E253:
	word32 fp_28 = Mem7[fp + 0x0000000C:word32]
	word32 ap_29 = Mem7[fp + 0x00000008:word32]
	r11Out = r11_5
	apOut = ap_29
	fpOut = fp_28
	spOut = fp - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000DCA3_1:
	word32 sp_30
	word32 r11_31
	word32 ap_32
	word32 r0_33
	word32 fp_34
	call 0x0000DCA7 + r0_13 * 0x00000002 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0_13,r11:r11_5,sp:fp - 0x0000000C,Stack +0004:0x00000000
		defs: ap:ap_32,fp:fp_34,r0:r0_33,r11:r11_31,sp:sp_30
	r11Out = r11_31
	apOut = ap_32
	fpOut = fp_34
	spOut = sp_30
	return r0_33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000DC9C:
	word32 fp_42 = Mem7[fp + 0x0000000C:word32]
	word32 ap_43 = Mem7[fp + 0x00000008:word32]
	r11Out = r11_5
	apOut = ap_43
	fpOut = fp_42
	spOut = fp - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000DC76_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000E25A(word32 ap, word32 fp, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31]
// LiveOut: ap fp r0 sp
// Trashed: CVZN ap fp r0 r1 r2 sp
// Preserved:
fn0000E25A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E25A:
	word32 r2_6 = Mem0[ap + 4:word32]
	word32 r0_12 = (uint32) ((word16) ((uint32) Mem0[r2_6 + 1:byte] << 8) | (word16) ((uint32) Mem0[r2_6:byte]))
	word32 fp_18 = Mem0[fp + 0x0000000C:word32]
	apOut = Mem0[fp + 0x00000008:word32]
	fpOut = fp_18
	spOut = fp - 0x00000004
	return r0_12
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000E25A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000E276(word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31]
// LiveOut: ap fp r0 r1 r2 sp
// Trashed: CVZN ap fp r0 r1 r2 sp
// Preserved:
fn0000E276_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E276:
	word32 r1_6 = Mem0[ap + 4:word32]
	word32 r2_14 = ((uint32) Mem0[r1_6 + 3:byte] << 24) + ((uint32) Mem0[r1_6 + 2:byte] << 16) + ((uint32) Mem0[r1_6 + 1:byte] << 8)
	word32 r0_16 = (uint32) Mem0[r1_6:byte] + r2_14
	word32 fp_20 = Mem0[fp + 0x0000000C:word32]
	word32 ap_21 = Mem0[fp + 0x00000008:word32]
	r1Out = r1_6
	r2Out = r2_14
	apOut = ap_21
	fpOut = fp_20
	spOut = fp - 0x00000004
	return r0_16
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000E276_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000E2A6(word32 r7, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r7:[0..31]
// LiveOut: ap fp r0 r1 r2 r5 r6 sp
// Trashed: CVZN ap fp r0 r1 r2 r4 r5 r6 sp
// Preserved: r3
fn0000E2A6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E2A6:
	word32 r0_11 = Mem0[ap + 8:word32]
	word32 r1_18 = Mem0[ap + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E2B8:
	byte v12_15 = Mem14[r0_11:byte]
	r0_11 = r0_11 + 0x00000001
	r2 = DPB(r2, v12_15, 0)
	r1_18 = r1_78 + 0x00000001
	word32 r4_21 = (uint32) v12_15
	branch (r4_21 & 0x00000080) == 0x00000000 l0000E2D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E2D8:
	r5 = DPB(r5, v12_15, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E2C7:
	r5 = DPB(r5, Mem14[r7 + (r4_21 & ~0xFFFFFF80):byte], 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E2DB:
	Mem41[r1_78:byte] = (byte) r5
	r1_78 = r1_18
	branch r4_21 != 0x00000000 l0000E2B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E2E2:
	word32 r0_49 = Mem41[ap + 4:word32]
	word32 fp_57 = Mem41[fp + 0x0000000C:word32]
	word32 ap_58 = Mem41[fp + 0x00000008:word32]
	r1Out = r1_18
	r2Out = r2
	r5Out = r5
	r6Out = r1_78
	apOut = ap_58
	fpOut = fp_57
	spOut = fp - 0x00000004
	return r0_49
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000E2A6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000E2EA(word32 r1, word32 r5, word32 r7, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r1:[0..31] r5:[8..31] r7:[0..31]
// LiveOut: ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000E2EA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E2EA:
	word32 sp_157 = fp - 0x00000004
	word32 r8_152 = Mem0[0x0001934C:word32]
	word32 r2_120 = Mem0[ap + 4:word32]
	word32 r3_129 = Mem0[ap + 8:word32]
	word32 r4_126 = Mem0[ap + 12:word32]
	branch r4_126 != 0x00000000 l0000E305
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E305:
	r9 = Mem0[0x00019298:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E30C:
	word32 r1_29
	byte v15_20 = Mem19[r2_120:byte]
	word32 r6_23 = (int32) v15_20
	word32 r5_22 = DPB(r5, v15_20, 0)
	word32 r0_24 = r6_23 & ~0xFFFFFF80
	branch (Mem19[r8_152 + r0_24 * 4:word32] & 0x00000001) == 0x00000000 l0000E32C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E32C:
	r1_29 = r6_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E31F:
	word32 sp_34 = sp_157 - 0x00000004
	Mem36[sp_34:int32] = (int32) v15_20
	word32 r0_52
	call r9 + 2 (retsize: 4;)
		uses: ap:ap_42,fp:fp_55,r0:r0_24,r1:r1_53,r2:r2_18,r3:r3_45,r4:r4_47,r5:r5_22,r6:r6_23,r7:r7_57,r8:r8_28,r9:r9_39,sp:sp_34
		defs: ap:ap_43,fp:fp_56,r0:r0_52,r2:r2_44,r3:r3_46,r4:r4_48,r5:r5_50,r7:r7_58,r8:r8_41,r9:r9_49,sp:sp_40
	r1_29 = r0_52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E32F:
	byte v25_70 = Mem69[r3_129:byte]
	r6 = (int32) v25_70
	r7 = DPB(r7, (int8) r1_29, 0)
	r5 = DPB(r5_22, v25_70, 0)
	word32 r0_102 = r6 & ~0xFFFFFF80
	branch (Mem69[r8_152 + r0_102 * 4:word32] & 0x00000001) == 0x00000000 l0000E350
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E350:
	r1 = r6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E345:
	word32 sp_84 = sp_157 - 0x00000004
	Mem86[sp_84:int32] = (int32) v25_70
	call r9 + 2 (retsize: 4;)
		uses: ap:ap_92,fp:fp_104,r0:r0_74,r1:r1_64,r2:r2_94,r3:r3_68,r4:r4_97,r5:r5_72,r6:r6_73,r7:r7_67,r8:r8_78,r9:r9_89,sp:sp_84
		defs: ap:ap_93,fp:fp_105,r0:r0_102,r2:r2_95,r3:r3_96,r4:r4_98,r5:r5_100,r6:r6_101,r7:r7_106,r8:r8_91,r9:r9_99,sp:sp_90
	r1 = r0_102
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E353:
	branch (byte) (r7 - DPB(r0_102, (int8) r1, 0)) == 0x00 l0000E3BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E3BF:
	branch Mem121[r2_120:byte] != 0x00 l0000E3C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E3C6:
	r4_126 = r4_126 - 0x00000001
	r2_120 = r2_120 + 0x00000001
	r3_129 = r3_129 + 0x00000001
	branch r4_126 == 0x00000000 l0000E3D3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E3D0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E3C3:
	word32 sp_141 = fp - 0x00000004
	word32 fp_142 = Mem121[sp_141 + 0x00000010:word32]
	word32 ap_143 = Mem121[sp_141 + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_120
	r3Out = r3_129
	r4Out = r4_126
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8_152
	r9Out = r9
	apOut = ap_143
	fpOut = fp_142
	spOut = sp_141
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E35B:
	word32 r1_153
	byte v29_144 = Mem121[r2_120:byte]
	word32 r6_147 = (int32) v29_144
	word32 r5_146 = DPB(r5, v29_144, 0)
	word32 r0_148 = r6_147 & ~0xFFFFFF80
	branch (Mem121[r8_152 + r0_148 * 4:word32] & 0x00000001) == 0x00000000 l0000E380
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E380:
	r1_153 = r6_147
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E36E:
	word32 sp_158 = sp_157 - 0x00000004
	Mem160[sp_158:int32] = (int32) v29_144
	word32 r0_174
	call Mem160[0x00019298:word32] + 2 (retsize: 4;)
		uses: ap:ap_165,fp:fp_140,r0:r0_148,r1:r1_112,r2:r2_120,r3:r3_129,r4:r4_126,r5:r5_146,r6:r6_147,r7:r7_116,r8:r8_152,r9:r9_170,sp:sp_158
		defs: ap:ap_166,fp:fp_176,r0:r0_174,r2:r2_167,r3:r3_168,r4:r4_169,r5:r5_172,r7:r7_177,r8:r8_164,r9:r9_171,sp:sp_163
	r1_153 = r0_174
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E383:
	word32 r5_198
	byte v32_189 = Mem188[r3_129:byte]
	word32 r6_192 = (int32) v32_189
	word32 r7_186 = DPB(r7, (int8) r1_153, 0)
	word32 r5_191 = DPB(r5_146, v32_189, 0)
	word32 r0_193 = r6_192 & ~0xFFFFFF80
	branch (Mem188[r8_152 + r0_193 * 4:word32] & 0x00000001) == 0x00000000 l0000E3A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E3A8:
	r5_198 = r6_192
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E399:
	word32 sp_203 = sp_157 - 0x00000004
	Mem205[sp_203:int32] = (int32) v32_189
	call Mem205[0x00019298:word32] + 2 (retsize: 4;)
		uses: ap:ap_210,fp:fp_223,r0:r0_193,r1:r1_183,r2:r2_212,r3:r3_187,r4:r4_215,r5:r5_191,r6:r6_192,r7:r7_186,r8:r8_197,r9:r9_217,sp:sp_203
		defs: fp:fp_224,r0:r0_221,r1:r1_222,r2:r2_213,r3:r3_214,r4:r4_216,r6:r6_220,r7:r7_225,r8:r8_209,r9:r9_218
	r5_198 = r0_193
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E3AB:
	word32 r1_241
	branch (byte) (r7_186 - DPB(r0_193, (int8) r5_198, 0)) >= 0x00 l0000E3B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E3B8:
	r1_241 = DPB(r1_153, 0x01, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E3B3:
	r1_241 = DPB(r1_153, -0x01, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E3BB:
	word32 sp_254 = fp - 0x00000004
	word32 fp_257 = Mem256[sp_254 + 0x00000010:word32]
	word32 ap_258 = Mem256[sp_254 + 0x0000000C:word32]
	r1Out = r1_241
	r2Out = r2_120
	r3Out = r3_129
	r4Out = r4_126
	r5Out = r5_198
	r6Out = r6_192
	r7Out = r7_186
	r8Out = r8_152
	r9Out = r9
	apOut = ap_258
	fpOut = fp_257
	spOut = sp_254
	return (int32) (int8) r1_241
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E302:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E3D3:
	word32 sp_266 = fp - 0x00000004
	word32 fp_268 = Mem267[sp_266 + 0x00000010:word32]
	word32 ap_269 = Mem267[sp_266 + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_120
	r3Out = r3_129
	r4Out = r4_126
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8_152
	r9Out = r9
	apOut = ap_269
	fpOut = fp_268
	spOut = sp_266
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000E2EA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000F457()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0000F457_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000F457_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F457:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000F4E2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0000F4E2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000F4E2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F4E2:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000F816(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000F816_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F816:
	word32 r5_175
	Mem12[r3 + 0x0000C5FF:word64] = 0x0000000000000000
	Mem14[r3 + 0x0000C607:word32] = 0x00000000
	Mem16[r3 + 0x0000C6D9:word32] = 0x00000001
	Mem18[r3 + 0x0000C5EF:word32] = 0x00000000
	word32 r9_176 = r5 + 69
	word32 r11_177 = r5 + 78
	word32 r10_178 = 0x00000000
	branch Mem18[r3 + 68:word32] == 0x00000000 l0000F8AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F8AC:
	branch Mem18[r3 + 12:word32] == 0x00000000 l0000F8CB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F8CB:
	branch fn00009B0A(r0, r1, r2, r4, r5, r6, r7, r8, r5 + 69, 0x00000000, r5 + 78, ap, fp, out r1, out r2, out r3, out r4, out r5_175, out r6, out r7, out r8, out r9_176, out r10_178, out r11_177, out ap, out fp) == 0x00000000 l0000F8DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F8D6:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F8B1:
	Mem67[r3 + 0x0000C6ED:word32] = Mem18[Mem18[0x00019374:word32]:word32]
	branch fn00009B0A(r0, r1, r2, r4, r5, r6, r7, r8, r5 + 69, 0x00000000, r5 + 78, ap, fp, out r1, out r2, out r3, out r4, out r5_175, out r6, out r7, out r8, out r9_176, out r10_178, out r11_177, out ap, out fp) == 0x00000000 l0000F8DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F8C7:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F85A:
	r5_175 = r5
	branch Mem18[r3 + 64:word32] != 0x00000000 l0000F8DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F85F:
	word32 ap_123
	word32 fp_124
	word32 r2_126
	word32 r3_127
	word32 sp_128
	word32 r0_125 = fn00010892(ap, fp, out r2_126, out r3_127, out ap_123, out fp_124, out sp_128)
	Mem134[sp_128 - 0x00000004:word32] = r0_125
	Mem137[sp_128 - 0x00000008:word32] = r5 + 96
	Mem140[sp_128 - 0x0000000C:word32] = r6 + 387
	Mem143[sp_128 - 0x00000010:word32] = r3_127 + 1515
	word32 sp_147
	word32 r5_148
	word32 r9_149
	word32 r11_150
	word32 r10_151
	word32 r3_152
	word32 r2_153
	word32 r0_154
	word32 r6_155
	word32 fp_157
	word32 r8_158
	word32 r7_159
	word32 r4_160
	word32 r1_161
	call Mem143[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_123,fp:fp_124,r0:r0_125,r1:r1,r10:0x00000000,r11:r5 + 78,r2:r2_126,r3:r3_127,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r5 + 69,sp:sp_128 - 0x00000010,Stack +FFFFFFE8:r3 + 0x0000C701,Stack +FFFFFFEC:r3 + 0x000045EB,Stack +FFFFFFF0:r5 + 101,Stack +FFFFFFF4:r5 + 102,Stack +FFFFFFF8:0x00000000,Stack +FFFFFFFC:r5 + 87
		defs: fp:fp_157,r0:r0_154,r1:r1_161,r10:r10_151,r11:r11_150,r2:r2_153,r3:r3_152,r4:r4_160,r5:r5_148,r6:r6_155,r7:r7_159,r8:r8_158,r9:r9_149,sp:sp_147
	Mem164[sp_147 - 0x00000004:word32] = r0_154
	Mem167[sp_147 - 0x00000008:word32] = r3_152 + 1515
	Mem169[sp_147 - 0x0000000C:word32] = r3_152
	word32 ap_170 = Mem169[r3_152 + 0x0000C839:word32]
	call ap_170 + 2 (retsize: 4;)
		uses: ap:ap_170,fp:fp_157,r0:r0_154,r1:r1_161,r10:r10_151,r11:r11_150,r2:r2_153,r3:r3_152,r4:r4_160,r5:r5_148,r6:r6_155,r7:r7_159,r8:r8_158,r9:r9_149,sp:sp_147 - 0x0000000C,Stack +FFFFFFE8:r3 + 0x0000C701,Stack +FFFFFFEC:r3 + 0x000045EB,Stack +FFFFFFF0:r5 + 101,Stack +FFFFFFF4:r5 + 102,Stack +FFFFFFF8:0x00000000,Stack +FFFFFFFC:r5 + 87
		defs: ap:ap_183,fp:fp_184,r1:r1_188,r10:r10_178,r11:r11_177,r2:r2_180,r3:r3_179,r4:r4_187,r5:r5_175,r6:r6_182,r7:r7_186,r8:r8_185,r9:r9_176
	dwLoc0C = 0x00000000
	dwLoc10 = r5 + 102
	dwLoc14 = r5 + 101
	dwLoc18 = r3 + 0x000045EB
	dwLoc1C = r3 + 0x0000C701
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F8DA:
	word32 fp_193
	word32 sp_194
	word32 ap_192 = fn0000D566(ap, fp, out fp_193, out sp_194)
	word32 r0_201 = (uint32) Mem200[r3 + 0x0000C642:word16]
	branch r0_201 > 0x00000008 l0000F8FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F8FC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F8E8_1:
	call 0x0000F8EC + r0_201 * 0x00000002 (retsize: 4;)
		uses: ap:ap_192,fp:fp_193,r0:r0_201,r1:r1_229,r10:r10_213,r11:r11_211,r2:r2_216,r3:r3_199,r4:r4_227,r5:r5_207,r6:r6_219,r7:r7_225,r8:r8_223,r9:r9_209,sp:sp_194,Stack +FFFFFFE8:dwLoc1C_247,Stack +FFFFFFEC:dwLoc18_245,Stack +FFFFFFF0:dwLoc14_243,Stack +FFFFFFF4:dwLoc10_241,Stack +FFFFFFF8:dwLoc0C_239,Stack +FFFFFFFC:r5 + 87
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000F816_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000100C2(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r10, word32 r11, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000100C2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000100C2:
	word32 sp_13 = fp - 0x00000008
	word32 r9_160 = ap + 8
	branch Mem0[ap + 8:word32] >=u 0x00000004 l000100ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000100ED:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000100F4:
	word32 sp_14 = sp_13 - 0x00000004
	Mem18[sp_14:word32] = Mem16[ap + 4:word32]
	word32 sp_23
	word32 ap_24
	word32 r9_26
	word32 r11_27
	word32 r0_29
	word32 r8_31
	word32 r2_33
	word32 r7_35
	word32 r3_37
	word32 r5_39
	word32 fp_41
	word32 r1_43
	word32 r4_45
	word32 r6_47
	word32 r10_812
	call r11 + 2 (retsize: 4;)
		uses: ap:ap_15,fp:fp_40,r0:r0_28,r1:r1_42,r10:r10_147,r11:r11_22,r2:r2_32,r3:r3_36,r4:r4_44,r5:r5_38,r6:r6_46,r7:r7_34,r8:r8_30,r9:r9_25,sp:sp_14
		defs: ap:ap_24,fp:fp_41,r0:r0_29,r1:r1_43,r10:r10_812,r11:r11_27,r2:r2_33,r3:r3_37,r4:r4_45,r5:r5_39,r6:r6_47,r7:r7_35,r8:r8_31,r9:r9_26,sp:sp_23
	Mem50[sp_23 + 2:word16] = (word16) r0_29
	Mem53[sp_23 - 0x00000004:word32] = Mem50[ap_24 + 4:word32] + 0x00000002
	word32 r0_59
	word32 r1_617
	call r11_27 + 2 (retsize: 4;)
		uses: ap:ap_24,fp:fp_41,r0:r0_29,r1:r1_43,r10:r10_812,r11:r11_27,r2:r2_33,r3:r3_37,r4:r4_45,r5:r5_39,r6:r6_47,r7:r7_35,r8:r8_31,r9:r9_26,sp:sp_23 - 0x00000004
		defs: ap:ap_56,fp:fp_65,r0:r0_59,r1:r1_66,r11:r11_58,r2:r2_61,r3:r3_63,r4:r4_67,r5:r5_64,r6:r6_68,r7:r7_62,r9:r9_57,sp:sp_55
	r8 = (uint32) (word16) r0_59
	r0 = Mem53[r9_160:word32] - 0x00000004
	branch r8 <=u r0 l00010184
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010184:
	word32 r1_130 = (uint32) Mem53[sp_13 + 2:word16]
	branch r1_130 >= 0x00000007 l00010190
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010190:
	r0 = r1_130
	branch r1_130 > 0x0000000C l000101A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101A1:
	branch r1_130 >u 0x00000000 l000101A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101A7:
	call fn4000E3D8 (retsize: 4;)
		uses: ap:ap_56,fp:fp_65,r0:r1_75,r1:r1_75,r10:r10_147,r11:r11_58,r2:r2_61,r3:r3_63,r4:r4_67,r5:r5_64,r6:r6_68,r7:r7_62,r8:r8_70,r9:r9_57,sp:sp_55
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101A3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101B0:
	branch r1_130 > 0x00004341 l000101BC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101BC:
	branch r1_130 >= 0x00004453 l000101C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101C8:
	branch r1_130 != 0x00004453 l000101CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101CD:
	branch r1_130 >= 0x00004704 l000101D9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101D9:
	branch r1_130 > 0x0000470F l000101F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101F7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101D9_1:
	call 0x000101E1 + (r1_130 - 0x00004704) * 0x00000002 (retsize: 4;)
		uses: ap:ap_56,fp:fp_65,r0:r1_75,r1:r1_75,r10:r10_147,r11:r11_58,r2:r2_61,r3:r3_63,r4:r4_67,r5:r5_64,r6:r6_68,r7:r7_62,r8:r8_70,r9:r9_57,sp:sp_55
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101D6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101CA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000103A9:
	branch r8 >=u 0x00000005 l000103B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000103B4:
	r1_130 = Mem53[ap + 4:word32]
	r0 = (uint32) Mem53[r1_130 + 8:byte]
	branch r0 == 0x00000000 l000103C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000103C8:
	Mem137[sp_13 - 0x00000004:word32] = 0x00000000
	Mem139[sp_13 - 0x00000008:word32] = 0x00000005
	Mem141[sp_13 - 0x0000000C:word32] = r8
	Mem143[sp_13 - 0x00000010:word32] = r1_130
	r0 = fn000105F2(r3, r6, r7, r8, r9_160, r10, ap, fp, out r1_130, out r2, out r7, out r8, out r9_160, out r10, out ap, out fp, out sp_13)
	r3 = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000103BE:
	r3 = 0x00004001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000103D8:
	r4 = r3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000103AE:
	r4 = 0x0000004F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000103DB:
	r6 = r4
	branch r4 != 0x00000000 l000103E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000103E3:
	branch Mem190[r2 + 64:word32] == 0x00000000 l00010427
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000103E8:
	word32 sp_198 = sp_13 - 0x00000004
	Mem199[sp_198:word32] = 0x00000001
	Mem203[sp_198 - 0x00000004:word32] = r2 + 0x000045EB
	Mem206[sp_198 - 0x00000008:word32] = r2 + 0x0000C701
	word32 ap_214
	word32 fp_215
	word32 r2_217
	word32 r3_218
	word32 sp_219
	word32 r0_216 = fn00010892(ap, fp, out r2_217, out r3_218, out ap_214, out fp_215, out sp_219)
	Mem225[sp_219 - 0x00000004:word32] = r0_216
	Mem230[sp_219 - 0x00000008:word32] = r7 + 215
	Mem233[sp_219 - 0x0000000C:word32] = r2_217 + 1515
	word32 sp_237
	word32 ap_238
	word32 r9_241
	word32 r11_244
	word32 r0_245
	word32 r8_248
	word32 r2_249
	word32 r7_250
	word32 r3_251
	word32 r5_254
	word32 fp_255
	word32 r1_258
	word32 r4_259
	word32 r6_260
	word32 r10_263
	call Mem233[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_214,fp:fp_215,r0:r0_216,r1:r1_256,r10:r10_261,r11:r11_58,r2:r2_217,r3:r3_218,r4:r4_182,r5:r5_64,r6:r4_182,r7:r7_227,r8:r8_246,r9:r9_239,sp:sp_219 - 0x0000000C
		defs: ap:ap_238,fp:fp_255,r0:r0_245,r1:r1_258,r10:r10_263,r11:r11_244,r2:r2_249,r3:r3_251,r4:r4_259,r5:r5_254,r6:r6_260,r7:r7_250,r8:r8_248,r9:r9_241,sp:sp_237
	Mem266[sp_237 - 0x00000004:word32] = r0_245
	Mem269[sp_237 - 0x00000008:word32] = r2_249 + 1515
	Mem271[sp_237 - 0x0000000C:word32] = r2_249
	word32 r0_272 = Mem271[r2_249 + 0x0000C839:word32]
	call r0_272 + 2 (retsize: 4;)
		uses: ap:ap_238,fp:fp_255,r0:r0_272,r1:r1_258,r10:r10_263,r11:r11_244,r2:r2_249,r3:r3_251,r4:r4_259,r5:r5_254,r6:r6_260,r7:r7_250,r8:r8_248,r9:r9_241,sp:sp_237 - 0x0000000C
		defs: ap:ap_277,fp:fp_286,r1:r1_287,r10:r10_290,r11:r11_279,r2:r2_282,r3:r3_284,r4:r4_288,r5:r5_285,r6:r6_289,r7:r7_283,r8:r8_281,r9:r9_278,sp:sp_276
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010427:
	branch r6 >= 0x00000002 l0001042F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001042F:
	word32 v48_300 = r6 - 0x00000002
	branch v48_300 > 0x00000005 l00010440
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010440:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010432_1:
	call 0x00010436 + v48_300 * 0x00000002 (retsize: 4;)
		uses: ap:ap_303,fp:fp_321,r0:r6_292,r1:r1_323,r10:r10_328,r11:r11_307,r2:r2_312,r3:r3_316,r4:r4_325,r5:r5_319,r6:r6_292,r7:r7_314,r8:r8_310,r9:r9_305,sp:sp_301
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001042C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010520:
	word32 r0_331 = r6 & ~0xFFFFFF00
	branch r0_331 == 0x00000002 l00010554
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010554:
	word32 r0_335 = r6 >> 8
	word32 r3_336 = (uint32) (word16) r0_335
	branch r3_336 != 0x00000008 l00010588
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010588:
	word32 sp_340 = sp_13 - 0x00000004
	Mem341[sp_340:word32] = 0x00000001
	Mem343[sp_340 - 0x00000004:word32] = r3_336
	Mem346[sp_340 - 0x00000008:word32] = r5 + 1655
	Mem349[sp_340 - 0x0000000C:word32] = r2 + 1515
	word32 sp_353
	word32 ap_354
	word32 r9_355
	word32 r11_356
	word32 r0_357
	word32 r8_358
	word32 r2_359
	word32 r7_360
	word32 r3_361
	word32 r5_362
	word32 fp_363
	word32 r1_364
	word32 r4_365
	word32 r6_366
	word32 r10_367
	call Mem349[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_303,fp:fp_321,r0:r0_335,r1:r1_323,r10:r10_328,r11:r11_307,r2:r2_312,r3:r3_336,r4:r4_325,r5:r5_319,r6:r6_292,r7:r7_314,r8:r8_310,r9:r9_305,sp:sp_340 - 0x0000000C
		defs: ap:ap_354,fp:fp_363,r0:r0_357,r1:r1_364,r10:r10_367,r11:r11_356,r2:r2_359,r3:r3_361,r4:r4_365,r5:r5_362,r6:r6_366,r7:r7_360,r8:r8_358,r9:r9_355,sp:sp_353
	Mem370[sp_353 - 0x00000004:word32] = r0_357
	Mem373[sp_353 - 0x00000008:word32] = r2_359 + 1515
	Mem375[sp_353 - 0x0000000C:word32] = r2_359
	word32 r0_376 = Mem375[r2_359 + 0x0000C839:word32]
	call r0_376 + 2 (retsize: 4;)
		uses: ap:ap_354,fp:fp_363,r0:r0_376,r1:r1_364,r10:r10_367,r11:r11_356,r2:r2_359,r3:r3_361,r4:r4_365,r5:r5_362,r6:r6_366,r7:r7_360,r8:r8_358,r9:r9_355,sp:sp_353 - 0x0000000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010561:
	word32 sp_396 = sp_13 - 0x00000004
	Mem397[sp_396:word32] = 0x00000001
	Mem400[sp_396 - 0x00000004:word32] = r5 + 1621
	Mem403[sp_396 - 0x00000008:word32] = r2 + 1515
	word32 sp_407
	word32 ap_408
	word32 r9_409
	word32 r11_410
	word32 r0_411
	word32 r8_412
	word32 r2_413
	word32 r7_414
	word32 r3_415
	word32 r5_416
	word32 fp_417
	word32 r1_418
	word32 r4_419
	word32 r6_420
	word32 r10_421
	call Mem403[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_303,fp:fp_321,r0:r0_335,r1:r1_323,r10:r10_328,r11:r11_307,r2:r2_312,r3:r3_336,r4:r4_325,r5:r5_319,r6:r6_292,r7:r7_314,r8:r8_310,r9:r9_305,sp:sp_396 - 0x00000008
		defs: ap:ap_408,fp:fp_417,r0:r0_411,r1:r1_418,r10:r10_421,r11:r11_410,r2:r2_413,r3:r3_415,r4:r4_419,r5:r5_416,r6:r6_420,r7:r7_414,r8:r8_412,r9:r9_409,sp:sp_407
	Mem424[sp_407 - 0x00000004:word32] = r0_411
	Mem427[sp_407 - 0x00000008:word32] = r2_413 + 1515
	Mem429[sp_407 - 0x0000000C:word32] = r2_413
	word32 r0_430 = Mem429[r2_413 + 0x0000C839:word32]
	call r0_430 + 2 (retsize: 4;)
		uses: ap:ap_408,fp:fp_417,r0:r0_430,r1:r1_418,r10:r10_421,r11:r11_410,r2:r2_413,r3:r3_415,r4:r4_419,r5:r5_416,r6:r6_420,r7:r7_414,r8:r8_412,r9:r9_409,sp:sp_407 - 0x0000000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001052D:
	word32 sp_450 = sp_13 - 0x00000004
	Mem451[sp_450:word32] = 0x00000001
	Mem454[sp_450 - 0x00000004:word32] = r5 + 1733
	Mem457[sp_450 - 0x00000008:word32] = r2 + 1515
	word32 sp_461
	word32 ap_462
	word32 r9_463
	word32 r11_464
	word32 r0_465
	word32 r8_466
	word32 r2_467
	word32 r7_468
	word32 r3_469
	word32 r5_470
	word32 fp_471
	word32 r1_472
	word32 r4_473
	word32 r6_474
	word32 r10_475
	call Mem457[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_303,fp:fp_321,r0:r0_331,r1:r1_323,r10:r10_328,r11:r11_307,r2:r2_312,r3:r3_316,r4:r4_325,r5:r5_319,r6:r6_292,r7:r7_314,r8:r8_310,r9:r9_305,sp:sp_450 - 0x00000008
		defs: ap:ap_462,fp:fp_471,r0:r0_465,r1:r1_472,r10:r10_475,r11:r11_464,r2:r2_467,r3:r3_469,r4:r4_473,r5:r5_470,r6:r6_474,r7:r7_468,r8:r8_466,r9:r9_463,sp:sp_461
	Mem478[sp_461 - 0x00000004:word32] = r0_465
	Mem481[sp_461 - 0x00000008:word32] = r2_467 + 1515
	Mem483[sp_461 - 0x0000000C:word32] = r2_467
	word32 r0_484 = Mem483[r2_467 + 0x0000C839:word32]
	call r0_484 + 2 (retsize: 4;)
		uses: ap:ap_462,fp:fp_471,r0:r0_484,r1:r1_472,r10:r10_475,r11:r11_464,r2:r2_467,r3:r3_469,r4:r4_473,r5:r5_470,r6:r6_474,r7:r7_468,r8:r8_466,r9:r9_463,sp:sp_461 - 0x0000000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000105AD:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000103E0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101C5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101B9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010193_1:
	call 0x00010197 + (r1_130 - 0x00000007) * 0x00000002 (retsize: 4;)
		uses: ap:ap_56,fp:fp_65,r0:r1_75,r1:r1_75,r10:r10_147,r11:r11_58,r2:r2_61,r3:r3_63,r4:r4_67,r5:r5_64,r6:r6_68,r7:r7_62,r8:r8_70,r9:r9_57,sp:sp_55
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001018D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000105B1:
	r1 = r8 + 0x00000004
	Mem535[r9_160:word32] = Mem533[r9_160:word32] - r1
	Mem538[ap + 4:word32] = Mem535[ap + 4:word32] + r1
	branch Mem538[r9_160:word32] <u 0x00000004 l000105C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000105C1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010112:
	branch Mem53[r2 + 64:word32] == 0x00000000 l00010156
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010117:
	Mem547[sp_13 - 0x00000004:word32] = 0x00000001
	Mem551[sp_13 - 0x00000008:word32] = r2 + 0x000045EB
	Mem554[sp_13 - 0x0000000C:word32] = r2 + 0x0000C701
	word32 ap_558
	word32 fp_559
	word32 r2_561
	word32 r3_562
	word32 sp_563
	word32 r0_560 = fn00010892(ap, fp, out r2_561, out r3_562, out ap_558, out fp_559, out sp_563)
	Mem569[sp_563 - 0x00000004:word32] = r0_560
	Mem572[sp_563 - 0x00000008:word32] = r7 + 199
	Mem575[sp_563 - 0x0000000C:word32] = r2_561 + 1515
	word32 sp_579
	word32 ap_580
	word32 r9_581
	word32 r11_582
	word32 r0_583
	word32 r8_584
	word32 r2_585
	word32 r7_586
	word32 r3_587
	word32 r5_588
	word32 fp_589
	word32 r1_590
	word32 r4_591
	word32 r6_592
	word32 r10_593
	call Mem575[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_558,fp:fp_559,r0:r0_560,r1:r1_66,r10:r10_147,r11:r11_58,r2:r2_561,r3:r3_562,r4:r4_67,r5:r5_64,r6:r6_68,r7:r7_62,r8:r8_70,r9:r9_57,sp:sp_563 - 0x0000000C
		defs: ap:ap_580,fp:fp_589,r0:r0_583,r1:r1_590,r10:r10_593,r11:r11_582,r2:r2_585,r3:r3_587,r4:r4_591,r5:r5_588,r6:r6_592,r7:r7_586,r8:r8_584,r9:r9_581,sp:sp_579
	Mem596[sp_579 - 0x00000004:word32] = r0_583
	Mem599[sp_579 - 0x00000008:word32] = r2_585 + 1515
	Mem601[sp_579 - 0x0000000C:word32] = r2_585
	word32 r0_602 = Mem601[r2_585 + 0x0000C839:word32]
	call r0_602 + 2 (retsize: 4;)
		uses: ap:ap_580,fp:fp_589,r0:r0_602,r1:r1_590,r10:r10_593,r11:r11_582,r2:r2_585,r3:r3_587,r4:r4_591,r5:r5_588,r6:r6_592,r7:r7_586,r8:r8_584,r9:r9_581,sp:sp_579 - 0x0000000C
		defs: ap:ap_607,fp:fp_616,r0:r0_610,r1:r1_617,r10:r10_620,r11:r11_609,r2:r2_612,r3:r3_614,r4:r4_618,r5:r5_615,r6:r6_619,r7:r7_613,r8:r8_611,r9:r9_608,sp:sp_606
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010156:
	word32 sp_623 = sp_13 - 0x00000004
	Mem624[sp_623:word32] = 0x00000001
	Mem628[sp_623 - 0x00000004:word32] = Mem624[ap + 8:word32] - 0x00000004
	Mem631[sp_623 - 0x00000008:word32] = r8
	Mem635[sp_623 - 0x0000000C:word32] = r5 + 1459
	Mem639[sp_623 - 0x00000010:word32] = r2 + 1515
	word32 sp_643
	word32 ap_644
	word32 r9_646
	word32 r11_648
	word32 r0_650
	word32 r8_651
	word32 r2_652
	word32 r7_654
	word32 r3_656
	word32 r5_657
	word32 fp_659
	word32 r1_661
	word32 r4_663
	word32 r6_665
	word32 r10_667
	call Mem639[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_626,fp:fp_658,r0:r0_649,r1:r1_660,r10:r10_666,r11:r11_647,r2:r2_637,r3:r3_655,r4:r4_662,r5:r5_633,r6:r6_664,r7:r7_653,r8:r8_630,r9:r9_645,sp:sp_623 - 0x00000010
		defs: ap:ap_644,fp:fp_659,r0:r0_650,r1:r1_661,r10:r10_667,r11:r11_648,r2:r2_652,r3:r3_656,r4:r4_663,r5:r5_657,r6:r6_665,r7:r7_654,r8:r8_651,r9:r9_646,sp:sp_643
	Mem670[sp_643 - 0x00000004:word32] = r0_650
	Mem673[sp_643 - 0x00000008:word32] = r2_652 + 1515
	Mem675[sp_643 - 0x0000000C:word32] = r2_652
	word32 r0_676 = Mem675[r2_652 + 0x0000C839:word32]
	call r0_676 + 2 (retsize: 4;)
		uses: ap:ap_644,fp:fp_659,r0:r0_676,r1:r1_661,r10:r10_667,r11:r11_648,r2:r2_652,r3:r3_656,r4:r4_663,r5:r5_657,r6:r6_665,r7:r7_654,r8:r8_651,r9:r9_646,sp:sp_643 - 0x0000000C
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000100EA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000105C4:
	branch Mem706[r2 + 64:word32] != 0x00000000 l000105EC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000105C9:
	word32 sp_713 = sp_13 - 0x00000004
	Mem714[sp_713:word32] = 0x00000000
	Mem720[sp_713 - 0x00000004:word32] = r7 + 224
	Mem723[sp_713 - 0x00000008:word32] = r2 + 1515
	word32 sp_727
	word32 ap_729
	word32 r9_731
	word32 r11_735
	word32 r0_741
	word32 r8_744
	word32 r2_745
	word32 r7_746
	word32 r5_754
	word32 fp_758
	word32 r1_761
	word32 r4_765
	word32 r6_769
	word32 r10_773
	call Mem723[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_728,fp:fp_755,r0:r0_736,r1:r1_759,r10:r10_770,r11:r11_732,r2:r2_703,r3:r3_747,r4:r4_762,r5:r5_751,r6:r6_766,r7:r7_716,r8:r8_742,r9:r9_730,sp:sp_713 - 0x00000008
		defs: ap:ap_729,fp:fp_758,r0:r0_741,r1:r1_761,r10:r10_773,r11:r11_735,r2:r2_745,r4:r4_765,r5:r5_754,r6:r6_769,r7:r7_746,r8:r8_744,r9:r9_731,sp:sp_727
	Mem776[sp_727 - 0x00000004:word32] = r0_741
	Mem779[sp_727 - 0x00000008:word32] = r2_745 + 1515
	Mem781[sp_727 - 0x0000000C:word32] = r2_745
	word32 r3_782 = Mem781[r2_745 + 0x0000C839:word32]
	call r3_782 + 2 (retsize: 4;)
		uses: ap:ap_729,fp:fp_758,r0:r0_741,r1:r1_761,r10:r10_773,r11:r11_735,r2:r2_745,r3:r3_782,r4:r4_765,r5:r5_754,r6:r6_769,r7:r7_746,r8:r8_744,r9:r9_731,sp:sp_727 - 0x0000000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000105EC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000100C2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn000105F2(word32 r3, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r10:[0..31] r3:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: ap fp r0 r1 r10 r2 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r10 r2 r3 r4 r6 r7 r8 r9 sp
// Preserved:
fn000105F2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000105F2:
	branch Mem0[ap + 8:word32] <u 0x00000004 l00010617
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000105FB:
	word32 r0_29
	word32 v8_10 = Mem0[ap + 4:word32] + 0x00000004
	word32 ap_14
	word32 sp_19
	word32 r0_16 = fn0000E276(ap, fp, out r1, out r2, out ap_14, out fp, out sp_19)
	r0_29 = r0_16
	branch r0_16 == 0x00000000 l0001061C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001060C:
	r0_29 = Mem11[ap_14 + 12:word32] + 0x00000006
	branch Mem11[ap_14 + 8:word32] >u r0_29 l0001061C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001061C:
	Mem36[sp_19 - 0x00000004:word32] = r0_16
	word32 sp_40
	word32 ap_42
	word32 r0_44
	word32 r4_45
	word32 r10_194
	word32 fp_47
	word32 r2_52
	word32 r7_191
	word32 r1_54
	word32 r8_200
	word32 r9_203
	call Mem36[0x000192B4:word32] + 2 (retsize: 4;)
		uses: ap:ap_14,fp:fp_15,r0:r0_43,r1:r1_17,r10:r10,r2:r2_18,r3:r3,r4:r0_16,r6:r6,r7:r7,r8:r8,r9:r9,sp:sp_19 - 0x00000004,Stack +FFFFFFFC:v8_10
		defs: ap:ap_42,fp:fp_47,r0:r0_44,r1:r1_54,r10:r10_194,r2:r2_52,r4:r4_45,r7:r7_191,r8:r8_200,r9:r9_203,sp:sp_40
	branch r0_44 != 0x00000000 l0001062E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001062E:
	Mem63[sp_40 - 0x00000004:word32] = Mem36[ap_42 + 8:word32] - Mem36[ap_42 + 12:word32]
	Mem67[sp_40 - 0x00000008:word32] = Mem63[ap_42 + 12:word32] + 0x00000004 + Mem63[ap_42 + 4:word32]
	Mem69[sp_40 - 0x0000000C:word32] = r4_45
	Mem71[sp_40 - 0x00000010:word32] = r0_44
	word32 sp_117
	word32 r3_122
	word32 ap_118
	word32 r4_120
	word32 fp_121
	word32 r1_124
	word32 r7_125
	word32 r10_126
	word32 r6_127
	word32 r8_128
	word32 r9_129
	word32 r0_119 = fn00010676(r2_52, r4_45, r7, ap_42, fp_47, out r1_124, out r3_122, out r4_120, out r6_127, out r7_125, out r8_128, out r9_129, out r10_126, out ap_118, out fp_121, out sp_117)
	word32 r2_131 = r0_119
	branch r0_119 != 0x00000000 l00010664
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001064E:
	r0_119 = Mem71[ap_118 + 16:word32]
	branch r0_119 == 0x00000000 l00010664
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010654:
	Mem105[sp_117 - 0x00000004:word32] = r4_120
	Mem107[sp_117 - 0x00000008:word32] = r3_122
	Mem110[sp_117 - 0x0000000C:word32] = Mem107[ap_118 + 8:word32]
	Mem113[sp_117 - 0x00000010:word32] = Mem110[ap_118 + 4:word32]
	call r0_119 + 2 (retsize: 4;)
		uses: ap:ap_77,fp:fp_78,r0:r0_99,r1:r1_80,r10:r10_81,r2:r0_79,r3:r3_83,r4:r4_84,r6:r6_85,r7:r7_86,r8:r8_87,r9:r9_88,sp:sp_89 - 0x00000010,Stack +FFFFFFFC:v8_10
		defs: ap:ap_118,fp:fp_121,r0:r0_119,r1:r1_124,r10:r10_126,r3:r3_122,r4:r4_120,r6:r6_127,r7:r7_125,r8:r8_128,r9:r9_129,sp:sp_117
	r2_131 = r0_119
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010664:
	word32 sp_136 = sp_117 - 0x00000004
	Mem138[sp_136:word32] = r3_122
	word32 fp_150
	word32 r2_153
	word32 r1_155
	word32 r7_157
	word32 r10_159
	word32 r8_163
	word32 r9_165
	call Mem138[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_143,fp:fp_149,r0:r0_145,r1:r1_154,r10:r10_158,r2:r2_152,r3:r3_137,r4:r4_147,r6:r6_160,r7:r7_156,r8:r8_162,r9:r9_164,sp:sp_136,Stack +FFFFFFFC:v8_10
		defs: fp:fp_150,r1:r1_155,r10:r10_159,r2:r2_153,r7:r7_157,r8:r8_163,r9:r9_165
	word32 fp_172 = Mem138[fp_150 + 0x0000000C:word32]
	word32 ap_173 = Mem138[fp_150 + 0x00000008:word32]
	r1Out = r1_155
	r2Out = r2_153
	r7Out = r7_157
	r8Out = r8_163
	r9Out = r9_165
	r10Out = r10_159
	apOut = ap_173
	fpOut = fp_172
	spOut = fp_150 - 0x00000004
	return r2_153
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001062A:
	word32 fp_179 = Mem36[fp_47 + 0x0000000C:word32]
	word32 ap_180 = Mem36[fp_47 + 0x00000008:word32]
	r1Out = r1_54
	r2Out = r2_52
	r7Out = r7_191
	r8Out = r8_200
	r9Out = r9_203
	r10Out = r10_194
	apOut = ap_180
	fpOut = fp_179
	spOut = fp_47 - 0x00000004
	return 0x00000007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010617:
	word32 sp_186 = fp - 0x00000004
	word32 fp_188 = Mem187[sp_186 + 0x00000010:word32]
	word32 ap_189 = Mem187[sp_186 + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	apOut = ap_189
	fpOut = fp_188
	spOut = sp_186
	return 0x0000004F
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000105F2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00010676(word32 r2, word32 r4, word32 r7, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r2:[0..31] r4:[0..31] r7:[16..31]
// LiveOut: ap fp r0 r1 r10 r3 r4 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r10 r2 r3 r4 r6 r7 r8 r9 sp
// Preserved:
fn00010676_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010676:
	word32 r8_6 = Mem0[r2 + 0x0000C5F7:word32]
	word32 r9_7 = Mem0[r2 + 0x0000C5FB:word32]
	word32 r3_10 = Mem0[ap + 12:word32]
	word32 ap_17
	word32 fp_18
	word32 sp_22
	word16 v17_27 = (word16) fn0000E25A(ap, fp, out ap_17, out fp_18, out sp_22)
	Mem32[sp_22 - 0x00000004:word32] = r3_10 + 0x00000002
	word32 ap_34
	word32 fp_35
	word32 r1_37
	word32 r2_38
	word32 sp_39
	word32 r0_36 = fn0000E276(ap_17, fp_18, out r1_37, out r2_38, out ap_34, out fp_35, out sp_39)
	Mem46[r2_38 + 0x0000C5F7:word32] = r3_10 + 0x00000006
	Mem48[r2_38 + 132:word32] = Mem46[ap_34 + 16:word32] - 0x00000006
	Mem50[r2_38 + 0x0000C5FB:word32] = Mem48[r2_38 + 132:word32]
	Mem52[r2_38 + 0x0000C6C5:word32] = 0x00000001
	Mem54[r2_38 + 0x0000C6C9:word32] = Mem52[ap_34 + 4:word32]
	Mem56[r2_38 + 0x0000C6CD:word32] = Mem54[ap_34 + 8:word32]
	word32 r7_29 = DPB(r7, v17_27, 0)
	word32 r0_57 = (uint32) v17_27
	branch r0_57 > 0x00000008 l000106FB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000106FB:
	Mem64[Mem56[r4:word32]:real32] = 0.5F + 36.0F
	__halt()
	word32 sp_69
	word32 r8_71
	word32 r9_72
	word32 r6_73
	word32 ap_74
	word32 r3_75
	word32 r0_76
	word32 r7_77
	word32 r10_78
	word32 r4_79
	word32 fp_80
	word32 r1_81
	call fn4000E3D8 (retsize: 4;)
		uses: ap:ap_34,fp:fp_35,r0:r0_57,r1:r1_37,r10:r0_36,r2:r2_38,r3:r3_10,r4:r4 + 0x00000004,r6:0x00000000,r7:r7_29,r8:r8_6,r9:r9_7,sp:sp_39,Stack +FFFFFFFC:r3_10
		defs: ap:ap_74,fp:fp_80,r0:r0_76,r1:r1_81,r10:r10_78,r3:r3_75,r4:r4_79,r6:r6_73,r7:r7_77,r8:r8_71,r9:r9_72,sp:sp_69
	r1Out = r1_81
	r3Out = r3_75
	r4Out = r4_79
	r6Out = r6_73
	r7Out = r7_77
	r8Out = r8_71
	r9Out = r9_72
	r10Out = r10_78
	apOut = ap_74
	fpOut = fp_80
	spOut = sp_69
	return r0_76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000106E7_1:
	word32 sp_83
	word32 r8_85
	word32 r9_86
	word32 r6_87
	word32 ap_88
	word32 r3_89
	word32 r0_90
	word32 r7_91
	word32 r10_92
	word32 r4_93
	word32 fp_94
	word32 r1_95
	call 0x000106EB + r0_57 * 0x00000002 (retsize: 4;)
		uses: ap:ap_34,fp:fp_35,r0:r0_57,r1:r1_37,r10:r0_36,r2:r2_38,r3:r3_10,r4:r4,r6:0x00000000,r7:r7_29,r8:r8_6,r9:r9_7,sp:sp_39,Stack +FFFFFFFC:r3_10
		defs: ap:ap_88,fp:fp_94,r0:r0_90,r1:r1_95,r10:r10_92,r3:r3_89,r4:r4_93,r6:r6_87,r7:r7_91,r8:r8_85,r9:r9_86,sp:sp_83
	r1Out = r1_95
	r3Out = r3_89
	r4Out = r4_93
	r6Out = r6_87
	r7Out = r7_91
	r8Out = r8_85
	r9Out = r9_86
	r10Out = r10_92
	apOut = ap_88
	fpOut = fp_94
	spOut = sp_83
	return r0_90
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00010676_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0001084A(word32 r0, word32 r2, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r2:[0..31]
// LiveOut: fp
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn0001084A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001084A:
	branch Mem0[ap + 8:word32] <=u Mem0[r2 + 0x0000C6CD:word32] l00010862
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010862:
	word32 r3_10 = Mem0[ap + 8:word32]
	word32 r2_24
	word32 fp_28
	word32 r3_29
	call Mem18[0x0001929C:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r2:r2,r3:r3_10,sp:fp - 0x00000010,Stack +0004:Mem15[r2 + 0x0000C6C9:word32],Stack +0008:Mem12[ap + 4:word32],Stack +000C:r3_10
		defs: fp:fp_28,r2:r2_24,r3:r3_29
	Mem32[r2_24 + 0x0000C6C9:word32] = Mem18[r2_24 + 0x0000C6C9:word32] + r3_29
	Mem34[r2_24 + 0x0000C6CD:word32] = Mem32[r2_24 + 0x0000C6CD:word32] - r3_29
	Mem36[r2_24 + 0x0000C6FD:word32] = Mem34[r2_24 + 0x0000C6FD:word32] + r3_29
	return Mem36[fp_28 + 0x0000000C:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001085E:
	return Mem0[fp + 0x0000000C:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0001084A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00010892(word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31]
// LiveOut: ap fp r0 r2 r3 sp
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn00010892_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010892:
	word32 r3_16 = Mem0[ap + 4:word32]
	word32 r2_25 = Mem0[ap + 8:word32]
	branch Mem0[r3_16:byte] == 0x00 l000108C7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000108A1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000108A4:
	branch (uint32) Mem17[r3_16:byte] >=u 0x00000020 l000108C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000108C0:
	Mem26[r2_25:byte] = Mem17[r3_16:byte]
	r3_16 = r3_16 + 0x00000001
	r2_25 = r2_25 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000108AC:
	Mem32[r2_25:byte] = 0x5E
	word32 r2_33 = r2_25 + 0x00000001
	Mem39[r2_33:int8] = (int8) ((uint32) Mem32[r3_16:byte] + 0x00000040)
	r3_16 = r3_16 + 0x00000001
	r2_25 = r2_33 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000108C3:
	branch Mem44[r3_16:byte] != 0x00 l000108A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000108C7:
	Mem52[r2_25:byte] = 0x00
	word32 r0_56 = Mem52[ap + 8:word32]
	word32 fp_65 = Mem52[fp + 0x0000000C:word32]
	word32 ap_66 = Mem52[fp + 0x00000008:word32]
	r2Out = r2_25
	r3Out = r3_16
	apOut = ap_66
	fpOut = fp_65
	spOut = fp - 0x00000004
	return r0_56
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00010892_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000108D2(word32 r0, word32 r1, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
l00010A95:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000109EC:
	def r11
	def sp
	def Mem0
	def r3
	def dwLoc08
	def dwLoc0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A98:
	ap_344 = r6 + r8 + r7
	branch ap_344 == 0x00000000 l00010AA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AA4:
	ap_347 = r4 + r9
	branch ap_347 == 0x00000001 l00010AB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AB0:
	branch r11 != 0x00000000 l00010AB7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AB7:
	branch Mem0[sp:word32] != 0x00000009 l00010AC2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AC0:
	Mem364[sp:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AC2:
	Mem372 = PHI((Mem0, l00010AB7), (Mem364, l00010AC0))
	Mem374[sp - 0x00000004:word32] = Mem372[r2 + 0x0000C60F:word32]
	r0_382 = fn00018F22(ap_347, fp, out r1_384, out ap_380, out fp_381, out sp_383)
	branch r0_382 == 0x00000000 l00010B18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B18:
	Mem395[sp_383 - 0x00000004:word32] = r11
	call Mem395[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap_380,fp:fp_381,pc:pc,r0:r0_382,r1:r1_384,r10:r10,r11:r11,r2:r2,r3:r3,r4:0x00000000,r5:r5,r6:r6,r7:r7,r8:r8,r9:0x00000000,sp:sp_383 - 0x00000004,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_408,fp:fp_409,pc:pc_423,r0:r0_404,r1:r1_424,r10:r10_407,r11:r11_400,r2:r2_405,r3:r3_403,r4:r4_413,r5:r5_411,r6:r6_415,r7:r7_417,r8:r8_419,r9:r9_421,sp:sp_399
	Mem428[r2_405 + 0x0000C613:word32] = r11_400
	Mem431[sp_399 - 0x00000004:word32] = r5_411 + 11
	r0_426 = r0_404 + r11_400
	Mem433[sp_399 - 0x00000008:word32] = r0_426
	call Mem433[0x000192BC:word32] + 2 (retsize: 4;)
		uses: ap:ap_408,fp:fp_409,pc:pc_423,r0:r0_426,r1:r1_424,r10:r10_407,r11:r11_400,r2:r2_405,r3:r3_403,r4:r4_413,r5:r5_411,r6:r6_415,r7:r7_417,r8:r8_419,r9:r9_421,sp:sp_399 - 0x00000008,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_443,fp:fp_444,pc:pc_451,r10:r10_442,r2:r2_441,r3:r3_439,r4:r4_446,r6:r6_447,r7:r7_448,r9:r9_450,sp:sp_437
	Mem455[sp_437 - 0x00000004:word32] = 0x00000001
	r0_461 = fn00010E6A(r2_441, r3_439, r4_446, r6_447, r7_448, r9_450, ap_443, fp_444, out r2_464, out r3_465, out r4_466, out r5_467, out r6_468, out r7_469, out r8_470, out r9_471, out r11_463, out ap_459, out fp_460, out sp_472)
	branch r0_461 != 0x00000001 l00010B48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B48:
	branch r0_461 != 0x0000004C l00010B58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B58:
	branch r0_461 == 0x00000009 l00010B6A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B5D:
	branch r0_461 == 0x00000000 l00010B68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B68:
	r8_490 = r8_470 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B61:
	r7_492 = r7_469 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B51:
	r9_494 = r9_471 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B43:
	r6_496 = r6_468 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B6A:
	r9_761 = PHI((r9_471, l00010B43), (r9_494, l00010B51), (r9_471, l00010B58), (r9_471, l00010B61), (r9_471, l00010B68))
	r8_655 = PHI((r8_470, l00010B43), (r8_470, l00010B51), (r8_470, l00010B58), (r8_470, l00010B61), (r8_490, l00010B68))
	r6_649 = PHI((r6_496, l00010B43), (r6_468, l00010B51), (r6_468, l00010B58), (r6_468, l00010B61), (r6_468, l00010B68))
	r7_645 = PHI((r7_469, l00010B43), (r7_469, l00010B51), (r7_469, l00010B58), (r7_492, l00010B61), (r7_469, l00010B68))
	branch r0_461 <= Mem455[sp_472:word32] l00010B72
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B6F:
	Mem505[sp_472:word32] = r0_461
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AD3:
	Mem511[sp_383 - 0x00000004:uint32] = 0x00000401
	Mem514[sp_383 - 0x00000008:word32] = Mem511[r2 + 0x0000C60F:word32]
	branch Mem514[r2:word32] == 0x00000000 l00010AEC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AEC:
	r3_519 = r10 + 456
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AE2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AF1:
	r3_528 = PHI((r3, l00010AE2), (r3_519, l00010AEC))
	Mem529[sp_383 - 0x0000000C:word32] = r3_528
	Mem533[sp_383 - 0x00000010:word32] = r10 + 277
	Mem537[sp_383 - 0x00000014:word32] = r2 + 1515
	call Mem537[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_380,fp:fp_381,pc:pc,r0:r0_382,r1:r1_384,r10:r10,r11:r11,r2:r2,r3:r3_528,r4:0x00000000,r5:r5,r6:r6,r7:r7,r8:r8,r9:0x00000000,sp:sp_383 - 0x00000014,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_552,pc:pc_566,r0:r0_546,r1:r1_568,r10:r10_548,r11:r11_543,r2:r2_547,r3:r3_544,r4:r4_556,r5:r5_554,r6:r6_558,r7:r7_560,r8:r8_562,r9:r9_564,sp:sp_541
	Mem571[sp_541 - 0x00000004:word32] = r0_546
	Mem574[sp_541 - 0x00000008:word32] = r2_547 + 1515
	Mem576[sp_541 - 0x0000000C:word32] = r2_547
	ap_577 = Mem576[r2_547 + 0x0000C839:word32]
	call ap_577 + 2 (retsize: 4;)
		uses: ap:ap_577,fp:fp_552,pc:pc_566,r0:r0_546,r1:r1_568,r10:r10_548,r11:r11_543,r2:r2_547,r3:r3_544,r4:r4_556,r5:r5_554,r6:r6_558,r7:r7_560,r8:r8_562,r9:r9_564,sp:sp_541 - 0x0000000C,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_587,fp:fp_588,pc:pc_595,r10:r10_586,r11:r11_582,r2:r2_585,r3:r3_583,r4:r4_590,r5:r5_589,r6:r6_591,r7:r7_592,r8:r8_593,r9:r9_594,sp:sp_581
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AB4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AAD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AA1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B72:
	pc_767 = PHI((pc, l00010AA1), (pc, l00010AAD), (pc, l00010AB4), (pc_595, l00010AF1), (pc_451, l00010B6A), (pc_451, l00010B6F))
	r9_760 = PHI((r9, l00010AA1), (r9, l00010AAD), (r9, l00010AB4), (r9_594, l00010AF1), (r9_761, l00010B6A), (r9_761, l00010B6F))
	r10_730 = PHI((r10, l00010AA1), (r10, l00010AAD), (r10, l00010AB4), (r10_586, l00010AF1), (r10_442, l00010B6A), (r10_442, l00010B6F))
	r3_717 = PHI((r3, l00010AA1), (r3, l00010AAD), (r3, l00010AB4), (r3_583, l00010AF1), (r3_465, l00010B6A), (r3_465, l00010B6F))
	r11_710 = PHI((r11, l00010AA1), (r11, l00010AAD), (r11, l00010AB4), (r11_582, l00010AF1), (r11_463, l00010B6A), (r11_463, l00010B6F))
	r5_694 = PHI((r5, l00010AA1), (r5, l00010AAD), (r5, l00010AB4), (r5_589, l00010AF1), (r5_467, l00010B6A), (r5_467, l00010B6F))
	r8_654 = PHI((r8, l00010AA1), (r8, l00010AAD), (r8, l00010AB4), (r8_593, l00010AF1), (r8_655, l00010B6A), (r8_655, l00010B6F))
	r6_648 = PHI((r6, l00010AA1), (r6, l00010AAD), (r6, l00010AB4), (r6_591, l00010AF1), (r6_649, l00010B6A), (r6_649, l00010B6F))
	r7_644 = PHI((r7, l00010AA1), (r7, l00010AAD), (r7, l00010AB4), (r7_592, l00010AF1), (r7_645, l00010B6A), (r7_645, l00010B6F))
	r4_641 = PHI((r4, l00010AA1), (r4, l00010AAD), (r4, l00010AB4), (r4_590, l00010AF1), (r4_466, l00010B6A), (r4_466, l00010B6F))
	fp_610 = PHI((fp, l00010AA1), (fp, l00010AAD), (fp, l00010AB4), (fp_588, l00010AF1), (fp_460, l00010B6A), (fp_460, l00010B6F))
	ap_608 = PHI((ap_344, l00010AA1), (ap_347, l00010AAD), (ap_347, l00010AB4), (ap_587, l00010AF1), (ap_459, l00010B6A), (ap_459, l00010B6F))
	Mem602 = PHI((Mem0, l00010AA1), (Mem0, l00010AAD), (Mem0, l00010AB4), (Mem576, l00010AF1), (Mem455, l00010B6A), (Mem505, l00010B6F))
	r2_600 = PHI((r2, l00010AA1), (r2, l00010AAD), (r2, l00010AB4), (r2_585, l00010AF1), (r2_464, l00010B6A), (r2_464, l00010B6F))
	sp_598 = PHI((sp, l00010AA1), (sp, l00010AAD), (sp, l00010AB4), (sp_581, l00010AF1), (sp_472, l00010B6A), (sp_472, l00010B6F))
	Mem604[sp_598 - 0x00000004:word32] = Mem602[r2_600 + 0x0000C60F:word32]
	r0_614 = fn00018F22(ap_608, fp_610, out r1_616, out ap_1849, out fp_613, out sp_615)
	branch r0_614 != 0x00000000 l00010B86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B86:
	branch Mem604[r2_600 + 64:word32] < 0x00000003 l00010B8F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B8F:
	branch Mem604[r2_600 + 72:word32] == 0x00000000 l00010BA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B94:
	branch Mem604[r2_600 + 64:word32] == 0x00000000 l00010BA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B99:
	branch Mem604[r2_600:word32] != 0x00000000 l00010BA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BA0:
	ap_650 = r4_641 + r7_644 + r6_648
	branch ap_650 > 0x00000000 l00010BAE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BA9:
	branch r8_654 == 0x00000001 l00010BD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BAE:
	branch Mem604[r2_600 + 72:word32] == 0x00000000 l00010BB7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BB3:
	branch Mem604[r2_600:word32] == 0x00000000 l00010BD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BB7:
	branch Mem604[r2_600 + 68:word32] == 0x00000000 l00010BC2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BBC:
	branch Mem604[r2_600 + 64:word32] > 0x00000001 l00010BD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BC2:
	Mem686[sp_615 - 0x00000004:uint32] = 0x00000401
	Mem688[sp_615 - 0x00000008:word32] = 0x00000001
	Mem697[sp_615 - 0x0000000C:word32] = r5_694 + 16
	Mem700[sp_615 - 0x00000010:word32] = r2_600
	ap_701 = Mem700[r2_600 + 0x0000C839:word32]
	call ap_701 + 2 (retsize: 4;)
		uses: ap:ap_701,fp:fp_613,pc:pc_767,r0:r0_614,r1:r1_616,r10:r10_730,r11:r11_710,r2:r2_600,r3:r3_717,r4:r4_641,r5:r5_694,r6:r6_648,r7:r7_644,r8:r8_654,r9:r9_760,sp:sp_615 - 0x00000010,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_733,fp:fp_738,pc:pc_769,r0:r0_724,r1:r1_774,r10:r10_732,r11:r11_712,r2:r2_725,r3:r3_719,r4:r4_743,r5:r5_739,r6:r6_747,r7:r7_751,r8:r8_755,r9:r9_762,sp:sp_705
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BD8:
	r3_1254 = PHI((r3_717, l00010BA9), (r3_717, l00010BB3), (r3_717, l00010BBC), (r3_719, l00010BC2))
	r1_874 = PHI((r1_616, l00010BA9), (r1_616, l00010BB3), (r1_616, l00010BBC), (r1_774, l00010BC2))
	pc_870 = PHI((pc_767, l00010BA9), (pc_767, l00010BB3), (pc_767, l00010BBC), (pc_769, l00010BC2))
	fp_851 = PHI((fp_613, l00010BA9), (fp_613, l00010BB3), (fp_613, l00010BBC), (fp_738, l00010BC2))
	ap_845 = PHI((ap_650, l00010BA9), (ap_650, l00010BB3), (ap_650, l00010BBC), (ap_733, l00010BC2))
	r0_839 = PHI((r0_614, l00010BA9), (r0_614, l00010BB3), (r0_614, l00010BBC), (r0_724, l00010BC2))
	r11_834 = PHI((r11_710, l00010BA9), (r11_710, l00010BB3), (r11_710, l00010BBC), (r11_712, l00010BC2))
	r2_825 = PHI((r2_600, l00010BA9), (r2_600, l00010BB3), (r2_600, l00010BBC), (r2_725, l00010BC2))
	r10_819 = PHI((r10_730, l00010BA9), (r10_730, l00010BB3), (r10_730, l00010BBC), (r10_732, l00010BC2))
	r5_800 = PHI((r5_694, l00010BA9), (r5_694, l00010BB3), (r5_694, l00010BBC), (r5_739, l00010BC2))
	sp_791 = PHI((sp_615, l00010BA9), (sp_615, l00010BB3), (sp_615, l00010BBC), (sp_705, l00010BC2))
	r6_786 = PHI((r6_648, l00010BA9), (r6_648, l00010BB3), (r6_648, l00010BBC), (r6_747, l00010BC2))
	r7_784 = PHI((r7_644, l00010BA9), (r7_644, l00010BB3), (r7_644, l00010BBC), (r7_751, l00010BC2))
	r9_782 = PHI((r9_760, l00010BA9), (r9_760, l00010BB3), (r9_760, l00010BBC), (r9_762, l00010BC2))
	r4_781 = PHI((r4_641, l00010BA9), (r4_641, l00010BB3), (r4_641, l00010BBC), (r4_743, l00010BC2))
	r8_776 = PHI((r8_654, l00010BA9), (r8_654, l00010BB3), (r8_654, l00010BBC), (r8_755, l00010BC2))
	branch r8_776 > 0x00000001 l00010BEB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BDD:
	branch r8_776 != 0x00000001 l00010C24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BDF:
	ap_787 = r4_781 + r9_782 + r7_784 + r6_786
	branch ap_787 <= 0x00000000 l00010C24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BEB:
	ap_844 = PHI((ap_845, l00010BD8), (ap_787, l00010BDF))
	sp_792 = sp_791 - 0x00000004
	Mem794[sp_792:uint32] = 0x00000401
	branch r8_776 != 0x00000001 l00010BFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BFC:
	r3_801 = r5_800 + 18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BF5:
	r3_805 = r5_800 + 25
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C00:
	r3_811 = PHI((r3_805, l00010BF5), (r3_801, l00010BFC))
	Mem812[sp_792 - 0x00000004:word32] = r3_811
	Mem815[sp_792 - 0x00000008:word32] = r8_776
	Mem821[sp_792 - 0x0000000C:word32] = r10_819 + 39
	Mem827[sp_792 - 0x00000010:word32] = r2_825 + 1515
	call Mem827[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_844,fp:fp_851,pc:pc_870,r0:r0_839,r1:r1_874,r10:r10_819,r11:r11_834,r2:r2_825,r3:r3_811,r4:r4_781,r5:r5_800,r6:r6_786,r7:r7_784,r8:r8_776,r9:r9_782,sp:sp_792 - 0x00000010,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_852,pc:pc_871,r0:r0_840,r1:r1_875,r10:r10_842,r11:r11_835,r2:r2_841,r3:r3_836,r4:r4_857,r5:r5_854,r6:r6_860,r7:r7_863,r8:r8_864,r9:r9_867,sp:sp_831
	Mem878[sp_831 - 0x00000004:word32] = r0_840
	Mem881[sp_831 - 0x00000008:word32] = r2_841 + 1515
	Mem883[sp_831 - 0x0000000C:word32] = r2_841
	ap_884 = Mem883[r2_841 + 0x0000C839:word32]
	call ap_884 + 2 (retsize: 4;)
		uses: ap:ap_884,fp:fp_852,pc:pc_871,r0:r0_840,r1:r1_875,r10:r10_842,r11:r11_835,r2:r2_841,r3:r3_836,r4:r4_857,r5:r5_854,r6:r6_860,r7:r7_863,r8:r8_864,r9:r9_867,sp:sp_831 - 0x0000000C,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_894,fp:fp_895,pc:pc_902,r0:r0_891,r1:r1_903,r10:r10_893,r11:r11_889,r2:r2_892,r3:r3_890,r4:r4_897,r5:r5_896,r6:r6_898,r7:r7_899,r8:r8_900,r9:r9_901,sp:sp_888
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C24:
	r3_1253 = PHI((r3_1254, l00010BDD), (r3_1254, l00010BDF), (r3_890, l00010C00))
	r1_980 = PHI((r1_874, l00010BDD), (r1_874, l00010BDF), (r1_903, l00010C00))
	pc_977 = PHI((pc_870, l00010BDD), (pc_870, l00010BDF), (pc_902, l00010C00))
	r9_974 = PHI((r9_782, l00010BDD), (r9_782, l00010BDF), (r9_901, l00010C00))
	r8_971 = PHI((r8_776, l00010BDD), (r8_776, l00010BDF), (r8_900, l00010C00))
	r7_968 = PHI((r7_784, l00010BDD), (r7_784, l00010BDF), (r7_899, l00010C00))
	r4_964 = PHI((r4_781, l00010BDD), (r4_781, l00010BDF), (r4_897, l00010C00))
	fp_959 = PHI((fp_851, l00010BDD), (fp_851, l00010BDF), (fp_895, l00010C00))
	ap_956 = PHI((ap_845, l00010BDD), (ap_787, l00010BDF), (ap_894, l00010C00))
	r0_951 = PHI((r0_839, l00010BDD), (r0_839, l00010BDF), (r0_891, l00010C00))
	r11_947 = PHI((r11_834, l00010BDD), (r11_834, l00010BDF), (r11_889, l00010C00))
	r2_939 = PHI((r2_825, l00010BDD), (r2_825, l00010BDF), (r2_892, l00010C00))
	r10_934 = PHI((r10_819, l00010BDD), (r10_819, l00010BDF), (r10_893, l00010C00))
	r5_916 = PHI((r5_800, l00010BDD), (r5_800, l00010BDF), (r5_896, l00010C00))
	sp_909 = PHI((sp_791, l00010BDD), (sp_791, l00010BDF), (sp_888, l00010C00))
	r6_905 = PHI((r6_786, l00010BDD), (r6_786, l00010BDF), (r6_898, l00010C00))
	branch r6_905 <= 0x00000000 l00010C60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C28:
	sp_910 = sp_909 - 0x00000004
	Mem912[sp_910:uint32] = 0x00000401
	branch r6_905 != 0x00000001 l00010C38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C38:
	r3_917 = r5_916 + 30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C32:
	r3_921 = r5_916 + 32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C3C:
	r3_927 = PHI((r3_921, l00010C32), (r3_917, l00010C38))
	Mem928[sp_910 - 0x00000004:word32] = r3_927
	Mem931[sp_910 - 0x00000008:word32] = r6_905
	Mem936[sp_910 - 0x0000000C:word32] = r10_934 + 77
	Mem941[sp_910 - 0x00000010:word32] = r2_939 + 1515
	call Mem941[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_956,fp:fp_959,pc:pc_977,r0:r0_951,r1:r1_980,r10:r10_934,r11:r11_947,r2:r2_939,r3:r3_927,r4:r4_964,r5:r5_916,r6:r6_905,r7:r7_968,r8:r8_971,r9:r9_974,sp:sp_910 - 0x00000010,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_960,pc:pc_978,r0:r0_952,r1:r1_981,r10:r10_954,r11:r11_948,r2:r2_953,r3:r3_949,r4:r4_965,r5:r5_962,r6:r6_966,r7:r7_969,r8:r8_972,r9:r9_975,sp:sp_945
	Mem984[sp_945 - 0x00000004:word32] = r0_952
	Mem987[sp_945 - 0x00000008:word32] = r2_953 + 1515
	Mem989[sp_945 - 0x0000000C:word32] = r2_953
	ap_990 = Mem989[r2_953 + 0x0000C839:word32]
	call ap_990 + 2 (retsize: 4;)
		uses: ap:ap_990,fp:fp_960,pc:pc_978,r0:r0_952,r1:r1_981,r10:r10_954,r11:r11_948,r2:r2_953,r3:r3_949,r4:r4_965,r5:r5_962,r6:r6_966,r7:r7_969,r8:r8_972,r9:r9_975,sp:sp_945 - 0x0000000C,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_1000,fp:fp_1001,pc:pc_1008,r0:r0_997,r1:r1_1009,r10:r10_999,r11:r11_995,r2:r2_998,r3:r3_996,r4:r4_1003,r5:r5_1002,r6:r6_1004,r7:r7_1005,r8:r8_1006,r9:r9_1007,sp:sp_994
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C60:
	r3_1252 = PHI((r3_1253, l00010C24), (r3_996, l00010C3C))
	r1_1086 = PHI((r1_980, l00010C24), (r1_1009, l00010C3C))
	pc_1083 = PHI((pc_977, l00010C24), (pc_1008, l00010C3C))
	r9_1080 = PHI((r9_974, l00010C24), (r9_1007, l00010C3C))
	r8_1077 = PHI((r8_971, l00010C24), (r8_1006, l00010C3C))
	r6_1073 = PHI((r6_905, l00010C24), (r6_1004, l00010C3C))
	r4_1070 = PHI((r4_964, l00010C24), (r4_1003, l00010C3C))
	fp_1065 = PHI((fp_959, l00010C24), (fp_1001, l00010C3C))
	ap_1062 = PHI((ap_956, l00010C24), (ap_1000, l00010C3C))
	r0_1057 = PHI((r0_951, l00010C24), (r0_997, l00010C3C))
	r11_1053 = PHI((r11_947, l00010C24), (r11_995, l00010C3C))
	r2_1045 = PHI((r2_939, l00010C24), (r2_998, l00010C3C))
	r10_1040 = PHI((r10_934, l00010C24), (r10_999, l00010C3C))
	r5_1022 = PHI((r5_916, l00010C24), (r5_1002, l00010C3C))
	sp_1015 = PHI((sp_909, l00010C24), (sp_994, l00010C3C))
	r7_1011 = PHI((r7_968, l00010C24), (r7_1005, l00010C3C))
	branch r7_1011 <= 0x00000000 l00010C9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C64:
	sp_1016 = sp_1015 - 0x00000004
	Mem1018[sp_1016:uint32] = 0x00000401
	branch r7_1011 != 0x00000001 l00010C74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C74:
	r3_1023 = r5_1022 + 33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C6E:
	r3_1027 = r5_1022 + 35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C78:
	r3_1033 = PHI((r3_1027, l00010C6E), (r3_1023, l00010C74))
	Mem1034[sp_1016 - 0x00000004:word32] = r3_1033
	Mem1037[sp_1016 - 0x00000008:word32] = r7_1011
	Mem1042[sp_1016 - 0x0000000C:word32] = r10_1040 + 125
	Mem1047[sp_1016 - 0x00000010:word32] = r2_1045 + 1515
	call Mem1047[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1062,fp:fp_1065,pc:pc_1083,r0:r0_1057,r1:r1_1086,r10:r10_1040,r11:r11_1053,r2:r2_1045,r3:r3_1033,r4:r4_1070,r5:r5_1022,r6:r6_1073,r7:r7_1011,r8:r8_1077,r9:r9_1080,sp:sp_1016 - 0x00000010,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_1066,pc:pc_1084,r0:r0_1058,r1:r1_1087,r10:r10_1060,r11:r11_1054,r2:r2_1059,r3:r3_1055,r4:r4_1071,r5:r5_1068,r6:r6_1074,r7:r7_1075,r8:r8_1078,r9:r9_1081,sp:sp_1051
	Mem1090[sp_1051 - 0x00000004:word32] = r0_1058
	Mem1093[sp_1051 - 0x00000008:word32] = r2_1059 + 1515
	Mem1095[sp_1051 - 0x0000000C:word32] = r2_1059
	ap_1096 = Mem1095[r2_1059 + 0x0000C839:word32]
	call ap_1096 + 2 (retsize: 4;)
		uses: ap:ap_1096,fp:fp_1066,pc:pc_1084,r0:r0_1058,r1:r1_1087,r10:r10_1060,r11:r11_1054,r2:r2_1059,r3:r3_1055,r4:r4_1071,r5:r5_1068,r6:r6_1074,r7:r7_1075,r8:r8_1078,r9:r9_1081,sp:sp_1051 - 0x0000000C,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_1106,fp:fp_1107,pc:pc_1114,r0:r0_1103,r1:r1_1115,r10:r10_1105,r11:r11_1101,r2:r2_1104,r3:r3_1102,r4:r4_1109,r5:r5_1108,r6:r6_1110,r7:r7_1111,r8:r8_1112,r9:r9_1113,sp:sp_1100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C9C:
	r3_1251 = PHI((r3_1252, l00010C60), (r3_1102, l00010C78))
	r1_1192 = PHI((r1_1086, l00010C60), (r1_1115, l00010C78))
	pc_1189 = PHI((pc_1083, l00010C60), (pc_1114, l00010C78))
	r9_1186 = PHI((r9_1080, l00010C60), (r9_1113, l00010C78))
	r8_1183 = PHI((r8_1077, l00010C60), (r8_1112, l00010C78))
	r7_1180 = PHI((r7_1011, l00010C60), (r7_1111, l00010C78))
	r6_1177 = PHI((r6_1073, l00010C60), (r6_1110, l00010C78))
	fp_1171 = PHI((fp_1065, l00010C60), (fp_1107, l00010C78))
	ap_1168 = PHI((ap_1062, l00010C60), (ap_1106, l00010C78))
	r0_1163 = PHI((r0_1057, l00010C60), (r0_1103, l00010C78))
	r11_1159 = PHI((r11_1053, l00010C60), (r11_1101, l00010C78))
	r2_1151 = PHI((r2_1045, l00010C60), (r2_1104, l00010C78))
	r10_1146 = PHI((r10_1040, l00010C60), (r10_1105, l00010C78))
	r5_1128 = PHI((r5_1022, l00010C60), (r5_1108, l00010C78))
	sp_1121 = PHI((sp_1015, l00010C60), (sp_1100, l00010C78))
	r4_1117 = PHI((r4_1070, l00010C60), (r4_1109, l00010C78))
	branch r4_1117 <= 0x00000000 l00010CD9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010CA0:
	sp_1122 = sp_1121 - 0x00000004
	Mem1124[sp_1122:uint32] = 0x00000401
	branch r4_1117 != 0x00000001 l00010CB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010CB0:
	r3_1129 = r5_1128 + 36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010CAA:
	r3_1133 = r5_1128 + 38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010CB4:
	r3_1139 = PHI((r3_1133, l00010CAA), (r3_1129, l00010CB0))
	Mem1140[sp_1122 - 0x00000004:word32] = r3_1139
	Mem1143[sp_1122 - 0x00000008:word32] = r4_1117
	Mem1148[sp_1122 - 0x0000000C:word32] = r10_1146 + 157
	Mem1153[sp_1122 - 0x00000010:word32] = r2_1151 + 1515
	call Mem1153[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1168,fp:fp_1171,pc:pc_1189,r0:r0_1163,r1:r1_1192,r10:r10_1146,r11:r11_1159,r2:r2_1151,r3:r3_1139,r4:r4_1117,r5:r5_1128,r6:r6_1177,r7:r7_1180,r8:r8_1183,r9:r9_1186,sp:sp_1122 - 0x00000010,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_1172,pc:pc_1190,r0:r0_1164,r1:r1_1193,r10:r10_1166,r11:r11_1160,r2:r2_1165,r3:r3_1161,r4:r4_1175,r5:r5_1174,r6:r6_1178,r7:r7_1181,r8:r8_1184,r9:r9_1187,sp:sp_1157
	Mem1196[sp_1157 - 0x00000004:word32] = r0_1164
	Mem1199[sp_1157 - 0x00000008:word32] = r2_1165 + 1515
	Mem1201[sp_1157 - 0x0000000C:word32] = r2_1165
	ap_1202 = Mem1201[r2_1165 + 0x0000C839:word32]
	call ap_1202 + 2 (retsize: 4;)
		uses: ap:ap_1202,fp:fp_1172,pc:pc_1190,r0:r0_1164,r1:r1_1193,r10:r10_1166,r11:r11_1160,r2:r2_1165,r3:r3_1161,r4:r4_1175,r5:r5_1174,r6:r6_1178,r7:r7_1181,r8:r8_1184,r9:r9_1187,sp:sp_1157 - 0x0000000C,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_1212,fp:fp_1213,pc:pc_1220,r0:r0_1209,r1:r1_1221,r10:r10_1211,r11:r11_1207,r2:r2_1210,r3:r3_1208,r4:r4_1215,r5:r5_1214,r6:r6_1216,r7:r7_1217,r8:r8_1218,r9:r9_1219,sp:sp_1206
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010CD9:
	r1_1277 = PHI((r1_1192, l00010C9C), (r1_1221, l00010CB4))
	pc_1275 = PHI((pc_1189, l00010C9C), (pc_1220, l00010CB4))
	r8_1272 = PHI((r8_1183, l00010C9C), (r8_1218, l00010CB4))
	r7_1270 = PHI((r7_1180, l00010C9C), (r7_1217, l00010CB4))
	r6_1268 = PHI((r6_1177, l00010C9C), (r6_1216, l00010CB4))
	r4_1266 = PHI((r4_1117, l00010C9C), (r4_1215, l00010CB4))
	r5_1264 = PHI((r5_1128, l00010C9C), (r5_1214, l00010CB4))
	fp_1262 = PHI((fp_1171, l00010C9C), (fp_1213, l00010CB4))
	ap_1260 = PHI((ap_1168, l00010C9C), (ap_1212, l00010CB4))
	r0_1256 = PHI((r0_1163, l00010C9C), (r0_1209, l00010CB4))
	r3_1250 = PHI((r3_1251, l00010C9C), (r3_1208, l00010CB4))
	r11_1248 = PHI((r11_1159, l00010C9C), (r11_1207, l00010CB4))
	r2_1241 = PHI((r2_1151, l00010C9C), (r2_1210, l00010CB4))
	r10_1237 = PHI((r10_1146, l00010C9C), (r10_1211, l00010CB4))
	sp_1230 = PHI((sp_1121, l00010C9C), (sp_1206, l00010CB4))
	r9_1223 = PHI((r9_1186, l00010C9C), (r9_1219, l00010CB4))
	branch r9_1223 != 0x00000001 l00010D08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010D08:
	branch r9_1223 <= 0x00000000 l00010D34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010D0C:
	sp_1231 = sp_1230 - 0x00000004
	Mem1233[sp_1231:uint32] = 0x00000401
	Mem1235[sp_1231 - 0x00000004:word32] = r9_1223
	Mem1239[sp_1231 - 0x00000008:word32] = r10_1237 + 224
	Mem1243[sp_1231 - 0x0000000C:word32] = r2_1241 + 1515
	call Mem1243[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1260,fp:fp_1262,pc:pc_1275,r0:r0_1256,r1:r1_1277,r10:r10_1237,r11:r11_1248,r2:r2_1241,r3:r3_1250,r4:r4_1266,r5:r5_1264,r6:r6_1268,r7:r7_1270,r8:r8_1272,r9:r9_1223,sp:sp_1231 - 0x0000000C,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_1263,pc:pc_1276,r0:r0_1257,r1:r1_1278,r10:r10_1259,r11:r11_1249,r2:r2_1258,r3:r3_1255,r4:r4_1267,r5:r5_1265,r6:r6_1269,r7:r7_1271,r8:r8_1273,r9:r9_1274,sp:sp_1247
	Mem1281[sp_1247 - 0x00000004:word32] = r0_1257
	Mem1284[sp_1247 - 0x00000008:word32] = r2_1258 + 1515
	Mem1286[sp_1247 - 0x0000000C:word32] = r2_1258
	ap_1287 = Mem1286[r2_1258 + 0x0000C839:word32]
	call ap_1287 + 2 (retsize: 4;)
		uses: ap:ap_1287,fp:fp_1263,pc:pc_1276,r0:r0_1257,r1:r1_1278,r10:r10_1259,r11:r11_1249,r2:r2_1258,r3:r3_1255,r4:r4_1267,r5:r5_1265,r6:r6_1269,r7:r7_1271,r8:r8_1273,r9:r9_1274,sp:sp_1247 - 0x0000000C,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_1298,pc:pc_1305,r0:r0_1294,r1:r1_1306,r10:r10_1296,r11:r11_1292,r2:r2_1295,r3:r3_1293,r4:r4_1300,r5:r5_1299,r6:r6_1301,r7:r7_1302,r8:r8_1303,r9:r9_1304,sp:sp_1291
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010CDE:
	sp_1308 = sp_1230 - 0x00000004
	Mem1310[sp_1308:uint32] = 0x00000401
	Mem1313[sp_1308 - 0x00000004:word32] = r10_1237 + 194
	Mem1316[sp_1308 - 0x00000008:word32] = r2_1241 + 1515
	call Mem1316[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1260,fp:fp_1262,pc:pc_1275,r0:r0_1256,r1:r1_1277,r10:r10_1237,r11:r11_1248,r2:r2_1241,r3:r3_1250,r4:r4_1266,r5:r5_1264,r6:r6_1268,r7:r7_1270,r8:r8_1272,r9:r9_1223,sp:sp_1308 - 0x00000008,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_1327,pc:pc_1334,r0:r0_1323,r1:r1_1335,r10:r10_1325,r11:r11_1321,r2:r2_1324,r3:r3_1322,r4:r4_1329,r5:r5_1328,r6:r6_1330,r7:r7_1331,r8:r8_1332,r9:r9_1333,sp:sp_1320
	Mem1338[sp_1320 - 0x00000004:word32] = r0_1323
	Mem1341[sp_1320 - 0x00000008:word32] = r2_1324 + 1515
	Mem1343[sp_1320 - 0x0000000C:word32] = r2_1324
	ap_1344 = Mem1343[r2_1324 + 0x0000C839:word32]
	call ap_1344 + 2 (retsize: 4;)
		uses: ap:ap_1344,fp:fp_1327,pc:pc_1334,r0:r0_1323,r1:r1_1335,r10:r10_1325,r11:r11_1321,r2:r2_1324,r3:r3_1322,r4:r4_1329,r5:r5_1328,r6:r6_1330,r7:r7_1331,r8:r8_1332,r9:r9_1333,sp:sp_1320 - 0x0000000C,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_1355,pc:pc_1362,r0:r0_1351,r1:r1_1363,r10:r10_1353,r11:r11_1349,r2:r2_1352,r3:r3_1350,r4:r4_1357,r5:r5_1356,r6:r6_1358,r7:r7_1359,r8:r8_1360,r9:r9_1361,sp:sp_1348
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010D34:
	r1_1410 = PHI((r1_1363, l00010CDE), (r1_1277, l00010D08), (r1_1306, l00010D0C))
	pc_1408 = PHI((pc_1362, l00010CDE), (pc_1275, l00010D08), (pc_1305, l00010D0C))
	r9_1406 = PHI((r9_1361, l00010CDE), (r9_1223, l00010D08), (r9_1304, l00010D0C))
	r4_1401 = PHI((r4_1357, l00010CDE), (r4_1266, l00010D08), (r4_1300, l00010D0C))
	r5_1399 = PHI((r5_1356, l00010CDE), (r5_1264, l00010D08), (r5_1299, l00010D0C))
	fp_1397 = PHI((fp_1355, l00010CDE), (fp_1262, l00010D08), (fp_1298, l00010D0C))
	r0_1392 = PHI((r0_1351, l00010CDE), (r0_1256, l00010D08), (r0_1294, l00010D0C))
	r3_1390 = PHI((r3_1350, l00010CDE), (r3_1250, l00010D08), (r3_1293, l00010D0C))
	r11_1388 = PHI((r11_1349, l00010CDE), (r11_1248, l00010D08), (r11_1292, l00010D0C))
	r2_1381 = PHI((r2_1352, l00010CDE), (r2_1241, l00010D08), (r2_1295, l00010D0C))
	r10_1377 = PHI((r10_1353, l00010CDE), (r10_1237, l00010D08), (r10_1296, l00010D0C))
	sp_1372 = PHI((sp_1348, l00010CDE), (sp_1230, l00010D08), (sp_1291, l00010D0C))
	r6_1368 = PHI((r6_1358, l00010CDE), (r6_1268, l00010D08), (r6_1301, l00010D0C))
	r8_1366 = PHI((r8_1360, l00010CDE), (r8_1272, l00010D08), (r8_1303, l00010D0C))
	r7_1365 = PHI((r7_1359, l00010CDE), (r7_1270, l00010D08), (r7_1302, l00010D0C))
	ap_1369 = r7_1365 + r8_1366 + r6_1368
	branch ap_1369 != 0x00000000 l00010D63
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010D3D:
	sp_1373 = sp_1372 - 0x00000004
	Mem1375[sp_1373:uint32] = 0x00000401
	Mem1379[sp_1373 - 0x00000004:word32] = r10_1377 + 257
	Mem1383[sp_1373 - 0x00000008:word32] = r2_1381 + 1515
	call Mem1383[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1369,fp:fp_1397,pc:pc_1408,r0:r0_1392,r1:r1_1410,r10:r10_1377,r11:r11_1388,r2:r2_1381,r3:r3_1390,r4:r4_1401,r5:r5_1399,r6:r6_1368,r7:r7_1365,r8:r8_1366,r9:r9_1406,sp:sp_1373 - 0x00000008,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_1398,pc:pc_1409,r0:r0_1393,r1:r1_1411,r10:r10_1395,r11:r11_1389,r2:r2_1394,r3:r3_1391,r4:r4_1402,r5:r5_1400,r6:r6_1403,r7:r7_1404,r8:r8_1405,r9:r9_1407,sp:sp_1387
	Mem1414[sp_1387 - 0x00000004:word32] = r0_1393
	Mem1417[sp_1387 - 0x00000008:word32] = r2_1394 + 1515
	Mem1419[sp_1387 - 0x0000000C:word32] = r2_1394
	ap_1420 = Mem1419[r2_1394 + 0x0000C839:word32]
	call ap_1420 + 2 (retsize: 4;)
		uses: ap:ap_1420,fp:fp_1398,pc:pc_1409,r0:r0_1393,r1:r1_1411,r10:r10_1395,r11:r11_1389,r2:r2_1394,r3:r3_1391,r4:r4_1402,r5:r5_1400,r6:r6_1403,r7:r7_1404,r8:r8_1405,r9:r9_1407,sp:sp_1387 - 0x0000000C,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_1431,pc:pc_1438,r0:r0_1427,r1:r1_1439,r11:r11_1425,r3:r3_1426,r5:r5_1432,r6:r6_1434,r7:r7_1435,r8:r8_1436
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B9D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B8C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B83:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010D63:
	r11_1519 = PHI((r11_710, l00010B83), (r11_710, l00010B8C), (r11_710, l00010B9D), (r11_1388, l00010D34), (r11_1425, l00010D3D))
	r1_1467 = PHI((r1_616, l00010B83), (r1_616, l00010B8C), (r1_616, l00010B9D), (r1_1410, l00010D34), (r1_1439, l00010D3D))
	r5_1466 = PHI((r5_694, l00010B83), (r5_694, l00010B8C), (r5_694, l00010B9D), (r5_1399, l00010D34), (r5_1432, l00010D3D))
	r8_1465 = PHI((r8_654, l00010B83), (r8_654, l00010B8C), (r8_654, l00010B9D), (r8_1366, l00010D34), (r8_1436, l00010D3D))
	r7_1464 = PHI((r7_644, l00010B83), (r7_644, l00010B8C), (r7_644, l00010B9D), (r7_1365, l00010D34), (r7_1435, l00010D3D))
	pc_1463 = PHI((pc_767, l00010B83), (pc_767, l00010B8C), (pc_767, l00010B9D), (pc_1408, l00010D34), (pc_1438, l00010D3D))
	r6_1462 = PHI((r6_648, l00010B83), (r6_648, l00010B8C), (r6_648, l00010B9D), (r6_1368, l00010D34), (r6_1434, l00010D3D))
	fp_1443 = PHI((fp_613, l00010B83), (fp_613, l00010B8C), (fp_613, l00010B9D), (fp_1397, l00010D34), (fp_1431, l00010D3D))
	r0_1442 = PHI((r0_614, l00010B83), (r0_614, l00010B8C), (r0_614, l00010B9D), (r0_1392, l00010D34), (r0_1427, l00010D3D))
	r3_1441 = PHI((r3_717, l00010B83), (r3_717, l00010B8C), (r3_717, l00010B9D), (r3_1390, l00010D34), (r3_1426, l00010D3D))
	r0_1446 = fn0001872A(r0_1442, r3_1441, fp_1443, out r2_1449, out r3_1450, out r4_1448, out ap_1444, out fp_1445, out sp_1447)
	Mem1456[sp_1447 - 0x00000004:word32] = 0x00000005
	Mem1458[sp_1447 - 0x00000008:word32] = 0x00000000
	r0_1471 = fn0000C6FA(r0_1446, r1_1467, r2_1449, r3_1450, r4_1448, r5_1466, r6_1462, r7_1464, r8_1465, ap_1444, fp_1445, pc_1463, out r1_1472, out r2_1474, out r3_1475, out r4_1476, out r5_1477, out r6_1478, out r7_1479, out r8_1480, out r9_1481, out r10_1473, out ap_1468, out fp_1469, out sp_1482, out pc_1470)
	branch Mem1458[r2_1474 + 0x0000C5EB:word32] == 0x00000000 l00010D8A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010D7D:
	ap_1491 = fn0000D406(ap_1468, fp_1469, out fp_1492, out sp_1493)
	Mem1499[r2_1474 + 0x0000C5EB:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010D8A:
	fp_1530 = PHI((fp_1469, l00010D63), (fp_1492, l00010D7D))
	ap_1528 = PHI((ap_1468, l00010D63), (ap_1491, l00010D7D))
	sp_1510 = PHI((sp_1482, l00010D63), (sp_1493, l00010D7D))
	Mem1505 = PHI((Mem1458, l00010D63), (Mem1499, l00010D7D))
	branch Mem1505[r2_1474 + 0x0000C815:word32] == 0x00000000 l00010DA5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010D92:
	sp_1511 = sp_1510 - 0x00000004
	Mem1513[sp_1511:word32] = Mem1505[r2_1474 + 0x0000C815:word32]
	call Mem1513[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1528,fp:fp_1530,pc:pc_1470,r0:r0_1471,r1:r1_1472,r10:r10_1473,r11:r11_1519,r2:r2_1474,r3:r3_1475,r4:r4_1476,r5:r5_1477,r6:r6_1478,r7:r7_1479,r8:r8_1480,r9:r9_1481,sp:sp_1511,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_1529,fp:fp_1531,pc:pc_1545,r0:r0_1524,r1:r1_1547,r10:r10_1527,r11:r11_1520,r2:r2_1525,r3:r3_1522,r4:r4_1535,r5:r5_1533,r6:r6_1537,r7:r7_1539,r8:r8_1541,r9:r9_1543,sp:sp_1517
	Mem1550[r2_1525 + 0x0000C815:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010DA5:
	r1_1596 = PHI((r1_1472, l00010D8A), (r1_1547, l00010D92))
	pc_1594 = PHI((pc_1470, l00010D8A), (pc_1545, l00010D92))
	r9_1592 = PHI((r9_1481, l00010D8A), (r9_1543, l00010D92))
	r8_1590 = PHI((r8_1480, l00010D8A), (r8_1541, l00010D92))
	r7_1588 = PHI((r7_1479, l00010D8A), (r7_1539, l00010D92))
	r6_1586 = PHI((r6_1478, l00010D8A), (r6_1537, l00010D92))
	r4_1584 = PHI((r4_1476, l00010D8A), (r4_1535, l00010D92))
	r5_1582 = PHI((r5_1477, l00010D8A), (r5_1533, l00010D92))
	fp_1580 = PHI((fp_1530, l00010D8A), (fp_1531, l00010D92))
	ap_1578 = PHI((ap_1528, l00010D8A), (ap_1529, l00010D92))
	r10_1576 = PHI((r10_1473, l00010D8A), (r10_1527, l00010D92))
	r0_1573 = PHI((r0_1471, l00010D8A), (r0_1524, l00010D92))
	r3_1571 = PHI((r3_1475, l00010D8A), (r3_1522, l00010D92))
	r11_1569 = PHI((r11_1519, l00010D8A), (r11_1520, l00010D92))
	sp_1561 = PHI((sp_1510, l00010D8A), (sp_1517, l00010D92))
	Mem1556 = PHI((Mem1505, l00010D8A), (Mem1550, l00010D92))
	r2_1555 = PHI((r2_1474, l00010D8A), (r2_1525, l00010D92))
	branch Mem1556[r2_1555 + 0x0000C6F1:word32] == 0x00000000 l00010DBA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010DAD:
	sp_1562 = sp_1561 - 0x00000004
	Mem1564[sp_1562:word32] = Mem1556[r2_1555 + 0x0000C6F1:word32]
	call Mem1564[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1578,fp:fp_1580,pc:pc_1594,r0:r0_1573,r1:r1_1596,r10:r10_1576,r11:r11_1569,r2:r2_1555,r3:r3_1571,r4:r4_1584,r5:r5_1582,r6:r6_1586,r7:r7_1588,r8:r8_1590,r9:r9_1592,sp:sp_1562,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_1579,fp:fp_1581,pc:pc_1595,r0:r0_1574,r1:r1_1597,r10:r10_1577,r11:r11_1570,r2:r2_1575,r3:r3_1572,r4:r4_1585,r5:r5_1583,r6:r6_1587,r7:r7_1589,r8:r8_1591,r9:r9_1593,sp:sp_1568
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010DBA:
	r1_1640 = PHI((r1_1596, l00010DA5), (r1_1597, l00010DAD))
	pc_1638 = PHI((pc_1594, l00010DA5), (pc_1595, l00010DAD))
	r9_1636 = PHI((r9_1592, l00010DA5), (r9_1593, l00010DAD))
	r8_1634 = PHI((r8_1590, l00010DA5), (r8_1591, l00010DAD))
	r7_1632 = PHI((r7_1588, l00010DA5), (r7_1589, l00010DAD))
	r6_1630 = PHI((r6_1586, l00010DA5), (r6_1587, l00010DAD))
	r4_1628 = PHI((r4_1584, l00010DA5), (r4_1585, l00010DAD))
	r5_1626 = PHI((r5_1582, l00010DA5), (r5_1583, l00010DAD))
	fp_1624 = PHI((fp_1580, l00010DA5), (fp_1581, l00010DAD))
	ap_1622 = PHI((ap_1578, l00010DA5), (ap_1579, l00010DAD))
	r10_1620 = PHI((r10_1576, l00010DA5), (r10_1577, l00010DAD))
	r0_1617 = PHI((r0_1573, l00010DA5), (r0_1574, l00010DAD))
	r3_1615 = PHI((r3_1571, l00010DA5), (r3_1572, l00010DAD))
	r11_1613 = PHI((r11_1569, l00010DA5), (r11_1570, l00010DAD))
	sp_1605 = PHI((sp_1561, l00010DA5), (sp_1568, l00010DAD))
	Mem1600 = PHI((Mem1556, l00010DA5), (Mem1564, l00010DAD))
	r2_1599 = PHI((r2_1555, l00010DA5), (r2_1575, l00010DAD))
	branch Mem1600[r2_1599 + 0x0000C5F3:word32] == 0x00000000 l00010DCF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010DC2:
	sp_1606 = sp_1605 - 0x00000004
	Mem1608[sp_1606:word32] = Mem1600[r2_1599 + 0x0000C5F3:word32]
	call Mem1608[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1622,fp:fp_1624,pc:pc_1638,r0:r0_1617,r1:r1_1640,r10:r10_1620,r11:r11_1613,r2:r2_1599,r3:r3_1615,r4:r4_1628,r5:r5_1626,r6:r6_1630,r7:r7_1632,r8:r8_1634,r9:r9_1636,sp:sp_1606,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: r2:r2_1619
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010DCF:
	r2_1644 = PHI((r2_1599, l00010DBA), (r2_1619, l00010DC2))
	Mem1645[r2_1644 + 0x0000C6F1:word32] = 0x00000000
	Mem1647[r2_1644 + 0x0000C5F3:word32] = 0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000109EF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000109F0:
	r11_174 = Mem0[r2 + 0x0000C613:word32]
	branch Mem0[r2 + 64:word32] != 0x00000000 l00010A32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000109FC:
	branch r3 == 0x00000009 l00010A32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A01:
	branch r3 == 0x0000004C l00010A32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A0A:
	branch Mem0[r2 + 72:word32] == 0x00000000 l00010A13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A0F:
	branch Mem0[r2:word32] == 0x00000000 l00010A32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A13:
	ap_204 = r7 + r8 + r6 + r4
	branch ap_204 <= 0x00000000 l00010A32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A1F:
	Mem210[sp - 0x00000004:word32] = 0x00000000
	Mem212[sp - 0x00000008:word32] = 0x00000001
	Mem217[sp - 0x0000000C:word32] = r5 + 9
	Mem220[sp - 0x00000010:word32] = r2
	ap_221 = Mem220[r2 + 0x0000C839:word32]
	call ap_221 + 2 (retsize: 4;)
		uses: ap:ap_221,fp:fp,pc:pc,r0:r0,r1:r1,r10:r10,r11:r11_174,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9,sp:sp - 0x00000010,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_237,fp:fp_240,pc:pc_251,r2:r2_233,r3:r3_229,r4:r4_242,r6:r6_243,r7:r7_244,r9:r9_248,sp:sp_225
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A32:
	pc_342 = PHI((pc, l000109FC), (pc, l00010A01), (pc, l00010A0F), (pc, l00010A13), (pc_251, l00010A1F), (pc, l000109F0))
	r9_267 = PHI((r9, l000109FC), (r9, l00010A01), (r9, l00010A0F), (r9, l00010A13), (r9_248, l00010A1F), (r9, l000109F0))
	r6_266 = PHI((r6, l000109FC), (r6, l00010A01), (r6, l00010A0F), (r6, l00010A13), (r6_243, l00010A1F), (r6, l000109F0))
	r4_265 = PHI((r4, l000109FC), (r4, l00010A01), (r4, l00010A0F), (r4, l00010A13), (r4_242, l00010A1F), (r4, l000109F0))
	r7_264 = PHI((r7, l000109FC), (r7, l00010A01), (r7, l00010A0F), (r7, l00010A13), (r7_244, l00010A1F), (r7, l000109F0))
	r3_263 = PHI((r3, l000109FC), (r3, l00010A01), (r3, l00010A0F), (r3, l00010A13), (r3_229, l00010A1F), (r3, l000109F0))
	fp_262 = PHI((fp, l000109FC), (fp, l00010A01), (fp, l00010A0F), (fp, l00010A13), (fp_240, l00010A1F), (fp, l000109F0))
	ap_260 = PHI((ap, l000109FC), (ap, l00010A01), (ap, l00010A0F), (ap_204, l00010A13), (ap_237, l00010A1F), (ap, l000109F0))
	r2_259 = PHI((r2, l000109FC), (r2, l00010A01), (r2, l00010A0F), (r2, l00010A13), (r2_233, l00010A1F), (r2, l000109F0))
	sp_253 = PHI((sp, l000109FC), (sp, l00010A01), (sp, l00010A0F), (sp, l00010A13), (sp_225, l00010A1F), (sp, l000109F0))
	Mem255[sp_253 - 0x00000004:word32] = 0x00000000
	r0_270 = fn00010E6A(r2_259, r3_263, r4_265, r6_266, r7_264, r9_267, ap_260, fp_262, out r2_273, out r3_1841, out r4_1842, out r5_1843, out r6_277, out r7_1844, out r8_1845, out r9_1846, out r11_1847, out ap_268, out fp_1848, out sp_281)
	branch r0_270 != 0x00000001 l00010A48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A48:
	branch r0_270 != 0x0000004C l00010A58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A58:
	branch r0_270 != 0x00000009 l00010A64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A64:
	branch r0_270 == 0x00000000 l00010A6C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A6C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A68:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A5D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A51:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A41:
	r6_308 = r6_277 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A6E:
	r6_335 = PHI((r6_308, l00010A41), (r6_277, l00010A51), (r6_277, l00010A5D), (r6_277, l00010A68), (r6_277, l00010A6C))
	branch r0_270 == 0x0000004C l00010A7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A77:
	branch r0_270 <= Mem255[sp_281:word32] l00010A7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A7C:
	Mem320[sp_281:word32] = r0_270
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A7F:
	Mem328 = PHI((Mem255, l00010A6E), (Mem255, l00010A77), (Mem320, l00010A7C))
	Mem330[sp_281 - 0x00000004:word32] = Mem328[r2_273 + 0x0000C60F:word32]
	fn0000C0CE(r0_270, r6_335, ap_268, pc_342)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000108D2_entry:
	def fp
	def r0
	def r2
	def r10
	def ap
	def fp
	def r5
	def r4
	def r6
	def r7
	def r8
	def r9
	def pc
	def r1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000108D2:
	call Mem10[0x000192B4:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc,r0:r0,r1:r1,r10:r10,r11:0x00000000,r2:r2,r3:0x00000000,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9,sp:fp - 0x0000000C,Stack +0004:0x00002004,Stack +0008:0x00000000
		defs: ap:ap_24,fp:fp_26,pc:pc_1742,r0:r0_18,r1:r1_1743,r10:r10_22,r11:r11_15,r2:r2_20,r3:r3_16,r4:r4_30,r5:r5_28,r6:r6_32,r7:r7_34,r8:r8_36,r9:r9_38,sp:sp_14
	Mem41[r2_20 + 0x0000C5F3:word32] = r0_18
	Mem44[sp_14 - 0x00000004:uint32] = 0x00008001
	call Mem44[0x000192B4:word32] + 2 (retsize: 4;)
		uses: ap:ap_24,fp:fp_26,pc:pc_1742,r0:r0_18,r1:r1_1743,r10:r10_22,r11:r11_15,r2:r2_20,r3:r3_16,r4:r4_30,r5:r5_28,r6:r6_32,r7:r7_34,r8:r8_36,r9:r9_38,sp:sp_14 - 0x00000004,Stack +FFFFFFF8:0x00002004,Stack +FFFFFFFC:0x00000000
		defs: ap:ap_54,fp:fp_55,r0:r0_51,r10:r10_53,r11:r11_49,r2:r2_52,r3:r3_50,r4:r4_57,r5:r5_56,r6:r6_58,r7:r7_59,r8:r8_60,r9:r9_61,sp:sp_48
	Mem64[r2_52 + 0x0000C6F1:word32] = r0_51
	Mem66[r2_52 + 0x0000C6F5:word32] = r0_51
	branch Mem66[r2_52 + 0x0000C5F3:word32] == 0x00000000 l0001092D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010925:
	branch Mem66[r2_52 + 0x0000C6F1:word32] != 0x00000000 l00010955
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010955:
	Mem76[r2_52 + 0x0000C62B:word32] = Mem66[r2_52 + 0x0000C5F3:word32] + 0x00002000
	Mem78[r2_52 + 0x0000C62F:byte] = 0x50
	Mem80[r2_52 + 0x0000C639:byte] = 0x50
	Mem82[r2_52 + 0x0000C634:byte] = 0x50
	Mem84[r2_52 + 0x0000C630:byte] = 0x4B
	Mem86[r2_52 + 0x0000C63A:byte] = 0x4B
	Mem88[r2_52 + 0x0000C635:byte] = 0x4B
	Mem90[sp_48 - 0x00000004:word32] = r5_56
	Mem94[sp_48 - 0x00000008:word32] = r2_52 + 0x0000C631
	r4_95 = Mem94[0x000192BC:word32]
	call r4_95 + 2 (retsize: 4;)
		uses: ap:r2_52 + 0x0000C62F,fp:fp_55,pc:pc,r0:r0_51,r1:r1,r10:r10_53,r11:r11_49,r2:r2_52,r3:r3_50,r4:r4_95,r5:r5_56,r6:r6_58,r7:r7_59,r8:r8_60,r9:r9_61,sp:sp_48 - 0x00000008,Stack +FFFFFFF8:0x00002004,Stack +FFFFFFFC:0x00000000
		defs: fp:fp_106,pc:pc_1746,r0:r0_102,r1:r1_1747,r10:r10_104,r11:r11_100,r2:r2_103,r3:r3_101,r4:r4_108,r5:r5_107,r6:r6_109,r7:r7_110,r8:r8_111,r9:r9_112,sp:sp_99
	Mem116[sp_99 - 0x00000004:word32] = r5_107 + 3
	Mem120[sp_99 - 0x00000008:word32] = r2_103 + 0x0000C636
	call r4_108 + 2 (retsize: 4;)
		uses: ap:r2_103 + 0x0000C634,fp:fp_106,pc:pc_1746,r0:r0_102,r1:r1_1747,r10:r10_104,r11:r11_100,r2:r2_103,r3:r3_101,r4:r4_108,r5:r5_107,r6:r6_109,r7:r7_110,r8:r8_111,r9:r9_112,sp:sp_99 - 0x00000008,Stack +FFFFFFF8:0x00002004,Stack +FFFFFFFC:0x00000000
		defs: fp:fp_129,pc:pc_1748,r0:r0_125,r1:r1_1749,r10:r10_127,r11:r11_123,r2:r2_126,r3:r3_124,r4:r4_131,r5:r5_130,r6:r6_132,r7:r7_133,r8:r8_134,r9:r9_135,sp:sp_122
	Mem139[sp_122 - 0x00000004:word32] = r5_130 + 6
	Mem143[sp_122 - 0x00000008:word32] = r2_126 + 0x0000C63B
	call r4_131 + 2 (retsize: 4;)
		uses: ap:r2_126 + 0x0000C639,fp:fp_129,pc:pc_1748,r0:r0_125,r1:r1_1749,r10:r10_127,r11:r11_123,r2:r2_126,r3:r3_124,r4:r4_131,r5:r5_130,r6:r6_132,r7:r7_133,r8:r8_134,r9:r9_135,sp:sp_122 - 0x00000008,Stack +FFFFFFF8:0x00002004,Stack +FFFFFFFC:0x00000000
		defs: ap:ap_151,r0:r0_148,r2:r2_149,sp:sp_145
	Mem166[sp_145 - 0x00000004:word32] = Mem143[r2_149 + 0x0000C60F:word32]
	fn0000C0CE(r0_148, 0x00000000, ap_151, pc)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001092D:
	Mem1660[sp_48 - 0x00000004:uint32] = 0x00000401
	Mem1663[sp_48 - 0x00000008:word32] = r10_53
	Mem1667[sp_48 - 0x0000000C:word32] = r2_52 + 1515
	call Mem1667[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_54,fp:fp_55,pc:pc,r0:r0_51,r1:r1,r10:r10_53,r11:r11_49,r2:r2_52,r3:r3_50,r4:r4_57,r5:r5_56,r6:r6_58,r7:r7_59,r8:r8_60,r9:r9_61,sp:sp_48 - 0x0000000C,Stack +FFFFFFF8:0x00002004,Stack +FFFFFFFC:0x00000000
		defs: fp:fp_1683,pc:pc_1697,r0:r0_1677,r1:r1_1700,r10:r10_1679,r11:r11_1673,r2:r2_1678,r3:r3_1675,r4:r4_1687,r5:r5_1685,r6:r6_1689,r7:r7_1691,r8:r8_1693,r9:r9_1695,sp:sp_1671
	Mem1703[sp_1671 - 0x00000004:word32] = r0_1677
	Mem1706[sp_1671 - 0x00000008:word32] = r2_1678 + 1515
	Mem1708[sp_1671 - 0x0000000C:word32] = r2_1678
	ap_1709 = Mem1708[r2_1678 + 0x0000C839:word32]
	call ap_1709 + 2 (retsize: 4;)
		uses: ap:ap_1709,fp:fp_1683,pc:pc_1697,r0:r0_1677,r1:r1_1700,r10:r10_1679,r11:r11_1673,r2:r2_1678,r3:r3_1675,r4:r4_1687,r5:r5_1685,r6:r6_1689,r7:r7_1691,r8:r8_1693,r9:r9_1695,sp:sp_1671 - 0x0000000C,Stack +FFFFFFF8:0x00002004,Stack +FFFFFFFC:0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000108D2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00010E6A(word32 r2, word32 r3, word32 r4, word32 r6, word32 r7, word32 r9, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r6:[0..31] r7:[0..31] r9:[0..31]
// LiveOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
l00011771:
	Mem1520[sp - 0x00000004:uint32] = 0x00000201
	Mem1523[sp - 0x00000008:word32] = Mem1520[r2 + 0x0000C613:word32]
	Mem1526[sp - 0x0000000C:word32] = r7 + 85
	Mem1529[sp - 0x00000010:word32] = r2 + 1515
	call Mem1529[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r1:r1,r11:r11,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9,sp:sp - 0x00000010,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1539,fp:fp_1540,r0:r0_1537,r1:r1_1538,r11:r11_1546,r2:r2_1536,r3:r3_1541,r4:r4_1543,r5:r5_1535,r6:r6_1544,r7:r7_1542,r8:r8_1534,r9:r9_1545,sp:sp_1533
	Mem1549[sp_1533 - 0x00000004:word32] = r0_1537
	Mem1552[sp_1533 - 0x00000008:word32] = r2_1536 + 1515
	Mem1554[sp_1533 - 0x0000000C:word32] = r2_1536
	r0_1555 = Mem1554[r2_1536 + 0x0000C839:word32]
	call r0_1555 + 2 (retsize: 4;)
		uses: ap:ap_1539,fp:fp_1540,r0:r0_1555,r1:r1_1538,r11:r11_1546,r2:r2_1536,r3:r3_1541,r4:r4_1543,r5:r5_1535,r6:r6_1544,r7:r7_1542,r8:r8_1534,r9:r9_1545,sp:sp_1533 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: fp:fp_1566,r11:r11_1572,r2:r2_1562,r3:r3_1567,r4:r4_1569,r5:r5_1561,r6:r6_1570,r7:r7_1568,r8:r8_1560,r9:r9_1571
	branch r9_1571 > 0x00000000 l000117A3
	def dwLoc10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000117A0:
	r9_1577 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010FD0:
	fp_1690 = Mem0[fp + 0x0000000C:word32]
	ap_1691 = Mem0[fp + 0x00000008:word32]
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_1691
	fpOut = fp_1690
	spOut = fp - 0x00000004
	return 0x00000009
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010FD4:
	branch Mem0[r2 + 0x0000C5EB:word32] != 0x00000000 l00010FF0
	def r0
	def r5
	def r1
	def sp
	def r8
	def r11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010FDC:
	r0_344 = fn0000D39E(r0, r1, r2, r3, r4, r5, r6, ap, fp, out r1_346, out r2_347, out r3_348, out r4_349, out r5_350, out r6_351, out ap_342, out fp_343, out sp_345)
	Mem357[r2_347 + 0x0000C5EB:word32] = r0_344
	branch r0_344 != 0x00000000 l00010FF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010FF0:
	r6_416 = PHI((r6, l00010FD4), (r6_351, l00010FDC))
	r4_414 = PHI((r4, l00010FD4), (r4_349, l00010FDC))
	r3_411 = PHI((r3, l00010FD4), (r3_348, l00010FDC))
	fp_409 = PHI((fp, l00010FD4), (fp_343, l00010FDC))
	ap_407 = PHI((ap, l00010FD4), (ap_342, l00010FDC))
	r1_405 = PHI((r1, l00010FD4), (r1_346, l00010FDC))
	r0_403 = PHI((r0, l00010FD4), (r0_344, l00010FDC))
	r5_400 = PHI((r5, l00010FD4), (r5_350, l00010FDC))
	sp_379 = PHI((sp, l00010FD4), (sp_345, l00010FDC))
	r2_363 = PHI((r2, l00010FD4), (r2_347, l00010FDC))
	Mem364[r2_363 + 0x0000C61F:word32] = 0x00000000
	Mem366[r2_363 + 0x0000C5F7:word32] = Mem364[r2_363 + 0x0000C5F3:word32]
	branch Mem366[r2_363:word32] != 0x00000000 l00011037
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011005:
	branch Mem366[r2_363 + 64:word32] != 0x00000000 l00011037
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001100A:
	branch Mem366[r2_363 + 72:word32] != 0x00000000 l00011037
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001100F:
	sp_381 = sp_379 - 0x00000004
	Mem382[sp_381:word32] = 0x00000000
	Mem385[sp_381 - 0x00000004:word32] = Mem382[r2_363 + 0x0000C613:word32]
	Mem389[sp_381 - 0x00000008:word32] = r7 + 43
	Mem392[sp_381 - 0x0000000C:word32] = r2_363 + 1515
	call Mem392[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_407,fp:fp_409,r0:r0_403,r1:r1_405,r11:r11,r2:r2_363,r3:r3_411,r4:r4_414,r5:r5_400,r6:r6_416,r7:r7,r8:r8,r9:r9,sp:sp_381 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_408,fp:fp_410,r0:r0_404,r1:r1_406,r11:r11_1699,r2:r2_402,r3:r3_412,r4:r4_415,r5:r5_401,r6:r6_417,r7:r7_413,r8:r8_399,r9:r9_419,sp:sp_396
	Mem422[sp_396 - 0x00000004:word32] = r0_404
	Mem425[sp_396 - 0x00000008:word32] = r2_402 + 1515
	Mem427[sp_396 - 0x0000000C:word32] = r2_402
	r0_428 = Mem427[r2_402 + 0x0000C839:word32]
	call r0_428 + 2 (retsize: 4;)
		uses: ap:ap_408,fp:fp_410,r0:r0_428,r1:r1_406,r11:r11_1699,r2:r2_402,r3:r3_412,r4:r4_415,r5:r5_401,r6:r6_417,r7:r7_413,r8:r8_399,r9:r9_419,sp:sp_396 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_438,fp:fp_439,r0:r0_436,r1:r1_437,r2:r2_435,r3:r3_440,r4:r4_442,r5:r5_434,r6:r6_443,r7:r7_441,r8:r8_433,r9:r9_444,sp:sp_432
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011037:
	r4_1609 = PHI((r4_414, l00010FF0), (r4_414, l00011005), (r4_414, l0001100A), (r4_442, l0001100F))
	r5_771 = PHI((r5_400, l00010FF0), (r5_400, l00011005), (r5_400, l0001100A), (r5_434, l0001100F))
	r1_467 = PHI((r1_405, l00010FF0), (r1_405, l00011005), (r1_405, l0001100A), (r1_437, l0001100F))
	r7_466 = PHI((r7, l00010FF0), (r7, l00011005), (r7, l0001100A), (r7_441, l0001100F))
	r6_465 = PHI((r6_416, l00010FF0), (r6_416, l00011005), (r6_416, l0001100A), (r6_443, l0001100F))
	r9_464 = PHI((r9, l00010FF0), (r9, l00011005), (r9, l0001100A), (r9_444, l0001100F))
	ap_463 = PHI((ap_407, l00010FF0), (ap_407, l00011005), (ap_407, l0001100A), (ap_438, l0001100F))
	fp_462 = PHI((fp_409, l00010FF0), (fp_409, l00011005), (fp_409, l0001100A), (fp_439, l0001100F))
	r3_461 = PHI((r3_411, l00010FF0), (r3_411, l00011005), (r3_411, l0001100A), (r3_440, l0001100F))
	r8_460 = PHI((r8, l00010FF0), (r8, l00011005), (r8, l0001100A), (r8_433, l0001100F))
	r0_459 = PHI((r0_403, l00010FF0), (r0_403, l00011005), (r0_403, l0001100A), (r0_436, l0001100F))
	sp_452 = PHI((sp_379, l00010FF0), (sp_379, l00011005), (sp_379, l0001100A), (sp_432, l0001100F))
	Mem447 = PHI((Mem366, l00010FF0), (Mem366, l00011005), (Mem366, l0001100A), (Mem427, l0001100F))
	r2_446 = PHI((r2_363, l00010FF0), (r2_363, l00011005), (r2_363, l0001100A), (r2_435, l0001100F))
	branch Mem447[r2_446:word32] == 0x00000000 l00011060
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001103B:
	Mem455[sp_452 - 0x00000004:word32] = Mem447[r2_446 + 0x0000C61B:word32]
	r0_470 = fn000117AA(r0_459, r1_467, r2_446, r3_461, r6_465, r7_466, r8_460, r9_464, ap_463, fp_462, out r1_480, out r2_471, out r3_472, out r4_473, out r5_474, out r6_475, out r7_476, out r8_477, out ap_468, out fp_469, out sp_479)
	r9_485 = r0_470
	branch r0_470 == 0x00000000 l0001104E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001104E:
	r0_495 = fn00012A2A(r0_470, r2_471, r3_472, r4_473, r5_474, r6_475, r7_476, r11, ap_468, fp_469, out r2_497, out r3_498, out r4_499, out r5_500, out r6_501, out r7_502, out r8_503, out r11_496, out ap_493, out fp_494, out sp_504)
	r9_509 = r0_495
	branch r0_495 <= 0x00000001 l00011060
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011060:
	r4_1608 = PHI((r4_1609, l00011037), (r4_499, l0001104E))
	r11_811 = PHI((r11, l00011037), (r11_496, l0001104E))
	r0_778 = PHI((r0_459, l00011037), (r0_495, l0001104E))
	r5_770 = PHI((r5_771, l00011037), (r5_500, l0001104E))
	r3_703 = PHI((r3_461, l00011037), (r3_498, l0001104E))
	r1_554 = PHI((r1_467, l00011037), (r1_480, l0001104E))
	r7_552 = PHI((r7_466, l00011037), (r7_502, l0001104E))
	r6_550 = PHI((r6_465, l00011037), (r6_501, l0001104E))
	r9_548 = PHI((r9_464, l00011037), (r9_509, l0001104E))
	ap_546 = PHI((ap_463, l00011037), (ap_493, l0001104E))
	fp_544 = PHI((fp_462, l00011037), (fp_494, l0001104E))
	r8_542 = PHI((r8_460, l00011037), (r8_503, l0001104E))
	sp_532 = PHI((sp_452, l00011037), (sp_504, l0001104E))
	Mem514 = PHI((Mem447, l00011037), (Mem455, l0001104E))
	r2_513 = PHI((r2_446, l00011037), (r2_497, l0001104E))
	branch Mem514[r2_513:word32] == 0x00000000 l00011067
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011067:
	r0_519 = Mem514[r2_513 + 0x0000C61B:word32]
	branch r0_519 >= 0x000101D0 l0001107C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001107C:
	r3_523 = 0x000101D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011077:
	r3_527 = r0_519
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011083:
	r3_534 = PHI((r3_527, l00011077), (r3_523, l0001107C))
	Mem535[sp_532 - 0x00000004:word32] = r3_534
	r0_557 = fn000117AA(r0_519, r1_554, r2_513, r3_534, r6_550, r7_552, r8_542, r9_548, ap_546, fp_544, out r1_567, out r2_558, out r3_559, out r4_560, out r5_561, out r6_562, out r7_563, out r8_564, out ap_555, out fp_556, out sp_566)
	r9_572 = r0_557
	branch r0_557 != 0x00000000 l000110EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001108F:
	r4_577 = 0x00000000
	branch Mem535[r2_558 + 0x0000C692:word16] == 0x0000 l000110E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011099:
	branch Mem535[r2_558 + 92:word32] > 0x00000000 l000110AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001109E:
	branch Mem535[r2_558 + 92:word32] != 0x00000000 l000110E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000110A0:
	branch Mem535[r2_558 + 72:word32] != 0x00000000 l000110E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000110A5:
	branch Mem535[r2_558 + 64:word32] != 0x00000000 l000110E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000110AA:
	Mem596[sp_566 - 0x00000004:word32] = 0x00000001
	Mem600[sp_566 - 0x00000008:uint32] = (uint32) Mem596[r2_558 + 0x0000C692:word16]
	r0_608 = fn0000DC76(ap_555, fp_556, out r11_609, out ap_606, out fp_607, out sp_610)
	branch r0_608 == 0x00000000 l000110E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000110BE:
	Mem621[sp_610 - 0x00000004:uint32] = 0x00000401
	Mem625[sp_610 - 0x00000008:word32] = r6_562 + 1864
	Mem628[sp_610 - 0x0000000C:word32] = r2_558 + 1515
	call Mem628[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_606,fp:fp_607,r0:r0_608,r1:r1_567,r11:r11_609,r2:r2_558,r3:r3_559,r4:0x00000000,r5:r5_561,r6:r6_562,r7:r7_563,r8:r8_564,r9:r0_557,sp:sp_610 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_641,fp:fp_642,r0:r0_638,r1:r1_640,r11:r11_652,r2:r2_637,r3:r3_644,r4:r4_648,r5:r5_636,r6:r6_649,r7:r7_646,r8:r8_634,r9:r9_651,sp:sp_632
	Mem655[sp_632 - 0x00000004:word32] = r0_638
	Mem658[sp_632 - 0x00000008:word32] = r2_637 + 1515
	Mem660[sp_632 - 0x0000000C:word32] = r2_637
	r0_661 = Mem660[r2_637 + 0x0000C839:word32]
	call r0_661 + 2 (retsize: 4;)
		uses: ap:ap_641,fp:fp_642,r0:r0_661,r1:r1_640,r11:r11_652,r2:r2_637,r3:r3_644,r4:r4_648,r5:r5_636,r6:r6_649,r7:r7_646,r8:r8_634,r9:r9_651,sp:sp_632 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_671,fp:fp_672,r0:r0_669,r1:r1_670,r11:r11_678,r2:r2_668,r3:r3_673,r5:r5_667,r6:r6_676,r7:r7_674,r8:r8_666,sp:sp_665
	r4_680 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000110E7:
	r11_812 = PHI((r11_811, l0001108F), (r11_811, l0001109E), (r11_811, l000110A0), (r11_811, l000110A5), (r11_609, l000110AA), (r11_678, l000110BE))
	r7_800 = PHI((r7_563, l0001108F), (r7_563, l0001109E), (r7_563, l000110A0), (r7_563, l000110A5), (r7_563, l000110AA), (r7_674, l000110BE))
	fp_794 = PHI((fp_556, l0001108F), (fp_556, l0001109E), (fp_556, l000110A0), (fp_556, l000110A5), (fp_607, l000110AA), (fp_672, l000110BE))
	ap_789 = PHI((ap_555, l0001108F), (ap_555, l0001109E), (ap_555, l000110A0), (ap_555, l000110A5), (ap_606, l000110AA), (ap_671, l000110BE))
	r1_784 = PHI((r1_567, l0001108F), (r1_567, l0001109E), (r1_567, l000110A0), (r1_567, l000110A5), (r1_567, l000110AA), (r1_670, l000110BE))
	r0_779 = PHI((r0_557, l0001108F), (r0_557, l0001109E), (r0_557, l000110A0), (r0_557, l000110A5), (r0_608, l000110AA), (r0_669, l000110BE))
	r5_772 = PHI((r5_561, l0001108F), (r5_561, l0001109E), (r5_561, l000110A0), (r5_561, l000110A5), (r5_561, l000110AA), (r5_667, l000110BE))
	r8_765 = PHI((r8_564, l0001108F), (r8_564, l0001109E), (r8_564, l000110A0), (r8_564, l000110A5), (r8_564, l000110AA), (r8_666, l000110BE))
	r6_752 = PHI((r6_562, l0001108F), (r6_562, l0001109E), (r6_562, l000110A0), (r6_562, l000110A5), (r6_562, l000110AA), (r6_676, l000110BE))
	sp_735 = PHI((sp_566, l0001108F), (sp_566, l0001109E), (sp_566, l000110A0), (sp_566, l000110A5), (sp_610, l000110AA), (sp_665, l000110BE))
	r3_704 = PHI((r3_559, l0001108F), (r3_559, l0001109E), (r3_559, l000110A0), (r3_559, l000110A5), (r3_559, l000110AA), (r3_673, l000110BE))
	Mem692 = PHI((Mem535, l0001108F), (Mem535, l0001109E), (Mem535, l000110A0), (Mem535, l000110A5), (Mem600, l000110AA), (Mem660, l000110BE))
	r2_690 = PHI((r2_558, l0001108F), (r2_558, l0001109E), (r2_558, l000110A0), (r2_558, l000110A5), (r2_558, l000110AA), (r2_668, l000110BE))
	r4_684 = PHI((r4_577, l0001108F), (r4_577, l0001109E), (r4_577, l000110A0), (r4_577, l000110A5), (r4_577, l000110AA), (r4_680, l000110BE))
	r9_685 = r4_684
	branch r4_684 <= 0x00000001 l00011110
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011064:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011110:
	r4_1607 = PHI((r4_1608, l00011064), (r4_684, l000110E7))
	r11_810 = PHI((r11_811, l00011064), (r11_812, l000110E7))
	r9_806 = PHI((r9_548, l00011064), (r9_685, l000110E7))
	r7_799 = PHI((r7_552, l00011064), (r7_800, l000110E7))
	fp_793 = PHI((fp_544, l00011064), (fp_794, l000110E7))
	ap_788 = PHI((ap_546, l00011064), (ap_789, l000110E7))
	r1_783 = PHI((r1_554, l00011064), (r1_784, l000110E7))
	r0_777 = PHI((r0_778, l00011064), (r0_779, l000110E7))
	r5_769 = PHI((r5_770, l00011064), (r5_772, l000110E7))
	r8_764 = PHI((r8_542, l00011064), (r8_765, l000110E7))
	r6_751 = PHI((r6_550, l00011064), (r6_752, l000110E7))
	sp_734 = PHI((sp_532, l00011064), (sp_735, l000110E7))
	r3_702 = PHI((r3_703, l00011064), (r3_704, l000110E7))
	Mem691 = PHI((Mem514, l00011064), (Mem692, l000110E7))
	r2_689 = PHI((r2_513, l00011064), (r2_690, l000110E7))
	branch Mem691[r2_689 + 92:word32] <= 0x00000000 l0001112A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011115:
	branch Mem691[r2_689:word32] != 0x00000000 l0001112A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001112A:
	r3_705 = DPB(r3_702, 0x00, 0)
	branch Mem691[r2_689:word32] != 0x00000000 l0001113B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011130:
	r0_712 = (uint32) Mem691[r2_689 + 0x0000C682:word16]
	branch r0_712 == 0x00000000 l0001113B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011139:
	r3_718 = DPB(r3_702, 0x01, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001113B:
	r0_775 = PHI((r0_777, l0001112A), (r0_712, l00011130), (r0_712, l00011139))
	r3_720 = PHI((r3_705, l0001112A), (r3_705, l00011130), (r3_718, l00011139))
	r4_721 = (int32) (int8) r3_720
	branch Mem691[r2_689:word32] != 0x00000000 l00011145
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011145:
	branch Mem691[r2_689 + 0x0000C682:word16] != Mem691[r2_689 + 0x0000C684:word16] l00011155
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011155:
	branch Mem691[r2_689 + 0x0000C682:word16] <=u Mem691[r2_689 + 0x0000C684:word16] l0001119C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001119C:
	sp_736 = sp_734 - 0x00000004
	Mem738[sp_736:uint32] = 0x00000401
	Mem741[sp_736 - 0x00000004:uint32] = (uint32) Mem738[r2_689 + 0x0000C684:word16]
	Mem744[sp_736 - 0x00000008:uint32] = (uint32) Mem741[r2_689 + 0x0000C682:word16]
	Mem747[sp_736 - 0x0000000C:word32] = Mem744[r2_689 + 0x0000C613:word32]
	Mem754[sp_736 - 0x00000010:word32] = r6_751 + 662
	Mem757[sp_736 - 0x00000014:word32] = r2_689 + 1515
	call Mem757[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_788,fp:fp_793,r0:r0_775,r1:r1_783,r11:r11_810,r2:r2_689,r3:r3_720,r4:r4_721,r5:r5_769,r6:r6_751,r7:r7_799,r8:r8_764,r9:r9_806,sp:sp_736 - 0x00000014,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_790,fp:fp_795,r0:r0_780,r1:r1_785,r11:r11_814,r2:r2_774,r3:r3_796,r4:r4_802,r5:r5_773,r6:r6_803,r7:r7_801,r8:r8_766,r9:r9_807,sp:sp_761
	Mem817[sp_761 - 0x00000004:word32] = r0_780
	Mem820[sp_761 - 0x00000008:word32] = r2_774 + 1515
	Mem822[sp_761 - 0x0000000C:word32] = r2_774
	r0_823 = Mem822[r2_774 + 0x0000C839:word32]
	call r0_823 + 2 (retsize: 4;)
		uses: ap:ap_790,fp:fp_795,r0:r0_823,r1:r1_785,r11:r11_814,r2:r2_774,r3:r3_796,r4:r4_802,r5:r5_773,r6:r6_803,r7:r7_801,r8:r8_766,r9:r9_807,sp:sp_761 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_833,fp:fp_834,r0:r0_831,r1:r1_832,r11:r11_840,r2:r2_830,r3:r3_835,r4:r4_837,r5:r5_829,r6:r6_838,r7:r7_836,r8:r8_828,sp:sp_827
	r9_842 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011157:
	sp_846 = sp_734 - 0x00000004
	Mem848[sp_846:uint32] = 0x00000401
	Mem851[sp_846 - 0x00000004:uint32] = (uint32) Mem848[r2_689 + 0x0000C684:word16]
	Mem854[sp_846 - 0x00000008:uint32] = (uint32) Mem851[r2_689 + 0x0000C682:word16]
	Mem857[sp_846 - 0x0000000C:word32] = Mem854[r2_689 + 0x0000C613:word32]
	Mem860[sp_846 - 0x00000010:word32] = r6_751 + 515
	Mem863[sp_846 - 0x00000014:word32] = r2_689 + 1515
	call Mem863[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_788,fp:fp_793,r0:r0_775,r1:r1_783,r11:r11_810,r2:r2_689,r3:r3_720,r4:r4_721,r5:r5_769,r6:r6_751,r7:r7_799,r8:r8_764,r9:r9_806,sp:sp_846 - 0x00000014,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_873,fp:fp_874,r0:r0_871,r1:r1_872,r11:r11_880,r2:r2_870,r3:r3_875,r4:r4_877,r5:r5_869,r6:r6_878,r7:r7_876,r8:r8_868,r9:r9_879,sp:sp_867
	Mem883[sp_867 - 0x00000004:word32] = r0_871
	Mem886[sp_867 - 0x00000008:word32] = r2_870 + 1515
	Mem888[sp_867 - 0x0000000C:word32] = r2_870
	r0_889 = Mem888[r2_870 + 0x0000C839:word32]
	call r0_889 + 2 (retsize: 4;)
		uses: ap:ap_873,fp:fp_874,r0:r0_889,r1:r1_872,r11:r11_880,r2:r2_870,r3:r3_875,r4:r4_877,r5:r5_869,r6:r6_878,r7:r7_876,r8:r8_868,r9:r9_879,sp:sp_867 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_899,fp:fp_900,r0:r0_897,r1:r1_898,r11:r11_906,r2:r2_896,r3:r3_901,r4:r4_903,r5:r5_895,r6:r6_904,r7:r7_902,sp:sp_893
	r9_908 = 0x0000000B
	r8_909 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011152:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011142:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000111D9:
	Mem997 = PHI((Mem691, l00011142), (Mem691, l00011152), (Mem888, l00011157), (Mem822, l0001119C))
	r11_962 = PHI((r11_810, l00011142), (r11_810, l00011152), (r11_906, l00011157), (r11_840, l0001119C))
	r9_960 = PHI((r9_806, l00011142), (r9_806, l00011152), (r9_908, l00011157), (r9_842, l0001119C))
	r7_956 = PHI((r7_799, l00011142), (r7_799, l00011152), (r7_902, l00011157), (r7_836, l0001119C))
	r3_954 = PHI((r3_720, l00011142), (r3_720, l00011152), (r3_901, l00011157), (r3_835, l0001119C))
	fp_952 = PHI((fp_793, l00011142), (fp_793, l00011152), (fp_900, l00011157), (fp_834, l0001119C))
	ap_950 = PHI((ap_788, l00011142), (ap_788, l00011152), (ap_899, l00011157), (ap_833, l0001119C))
	r1_948 = PHI((r1_783, l00011142), (r1_783, l00011152), (r1_898, l00011157), (r1_832, l0001119C))
	r0_946 = PHI((r0_775, l00011142), (r0_775, l00011152), (r0_897, l00011157), (r0_831, l0001119C))
	r5_943 = PHI((r5_769, l00011142), (r5_769, l00011152), (r5_895, l00011157), (r5_829, l0001119C))
	r6_932 = PHI((r6_751, l00011142), (r6_751, l00011152), (r6_904, l00011157), (r6_838, l0001119C))
	r2_928 = PHI((r2_689, l00011142), (r2_689, l00011152), (r2_896, l00011157), (r2_830, l0001119C))
	sp_923 = PHI((sp_734, l00011142), (sp_734, l00011152), (sp_893, l00011157), (sp_827, l0001119C))
	r4_918 = PHI((r4_721, l00011142), (r4_721, l00011152), (r4_903, l00011157), (r4_837, l0001119C))
	r8_913 = PHI((r8_764, l00011142), (r8_764, l00011152), (r8_909, l00011157), (r8_828, l0001119C))
	branch r8_913 == 0x00000000 l000111E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000111E0:
	branch r4_918 == 0x00000000 l00011213
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000111E4:
	sp_924 = sp_923 - 0x00000004
	Mem926[sp_924:uint32] = 0x00000401
	Mem930[sp_924 - 0x00000004:word32] = Mem926[r2_928 + 0x0000C613:word32]
	Mem934[sp_924 - 0x00000008:word32] = r6_932 + 844
	Mem937[sp_924 - 0x0000000C:word32] = r2_928 + 1515
	call Mem937[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_950,fp:fp_952,r0:r0_946,r1:r1_948,r11:r11_962,r2:r2_928,r3:r3_954,r4:r4_918,r5:r5_943,r6:r6_932,r7:r7_956,r8:r8_913,r9:r9_960,sp:sp_924 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_951,fp:fp_953,r0:r0_947,r1:r1_949,r11:r11_963,r2:r2_945,r3:r3_955,r4:r4_958,r5:r5_944,r6:r6_959,r7:r7_957,r8:r8_942,r9:r9_961,sp:sp_941
	Mem966[sp_941 - 0x00000004:word32] = r0_947
	Mem969[sp_941 - 0x00000008:word32] = r2_945 + 1515
	Mem971[sp_941 - 0x0000000C:word32] = r2_945
	r0_972 = Mem971[r2_945 + 0x0000C839:word32]
	call r0_972 + 2 (retsize: 4;)
		uses: ap:ap_951,fp:fp_953,r0:r0_972,r1:r1_949,r11:r11_963,r2:r2_945,r3:r3_955,r4:r4_958,r5:r5_944,r6:r6_959,r7:r7_957,r8:r8_942,r9:r9_961,sp:sp_941 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_982,fp:fp_983,r0:r0_980,r1:r1_981,r11:r11_989,r2:r2_979,r3:r3_984,r5:r5_978,r6:r6_987,r7:r7_985,r8:r8_977,sp:sp_976
	r9_991 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011213:
	r3_1152 = PHI((r3_954, l000111E0), (r3_984, l000111E4))
	r11_1096 = PHI((r11_962, l000111E0), (r11_989, l000111E4))
	r9_1092 = PHI((r9_960, l000111E0), (r9_991, l000111E4))
	fp_1083 = PHI((fp_952, l000111E0), (fp_983, l000111E4))
	ap_1079 = PHI((ap_950, l000111E0), (ap_982, l000111E4))
	r1_1075 = PHI((r1_948, l000111E0), (r1_981, l000111E4))
	r0_1071 = PHI((r0_946, l000111E0), (r0_980, l000111E4))
	r5_1066 = PHI((r5_943, l000111E0), (r5_978, l000111E4))
	r8_1062 = PHI((r8_913, l000111E0), (r8_977, l000111E4))
	r6_1050 = PHI((r6_932, l000111E0), (r6_987, l000111E4))
	r7_1026 = PHI((r7_956, l000111E0), (r7_985, l000111E4))
	sp_1017 = PHI((sp_923, l000111E0), (sp_976, l000111E4))
	Mem996 = PHI((Mem997, l000111E0), (Mem971, l000111E4))
	r2_995 = PHI((r2_928, l000111E0), (r2_979, l000111E4))
	Mem999[r2_995 + 0x0000C623:word32] = Mem996[r2_995 + 124:word32] - Mem996[r2_995 + 128:word32]
	r4_1000 = Mem999[r2_995 + 0x0000C623:word32]
	branch r4_1000 >= 0x00000000 l0001125C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001125C:
	branch r4_1000 > 0x00000000 l00011263
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011263:
	branch Mem999[r2_995 + 0x0000C68E:word32] != 0x00000000 l000112B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001126B:
	branch Mem999[r2_995 + 0x0000C68A:word32] == 0x00000000 l000112B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000112B8:
	sp_1018 = sp_1017 - 0x00000004
	Mem1020[sp_1018:uint32] = 0x00000401
	branch r4_1000 != 0x00000001 l000112C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000112C8:
	r3_1027 = r7_1026 + 57
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000112C2:
	r3_1031 = r7_1026 + 59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000112CC:
	r3_1037 = PHI((r3_1031, l000112C2), (r3_1027, l000112C8))
	Mem1038[sp_1018 - 0x00000004:word32] = r3_1037
	Mem1041[sp_1018 - 0x00000008:word32] = r4_1000
	Mem1046[sp_1018 - 0x0000000C:word32] = Mem1041[r2_995 + 0x0000C613:word32]
	Mem1052[sp_1018 - 0x00000010:word32] = r6_1050 + 1102
	Mem1055[sp_1018 - 0x00000014:word32] = r2_995 + 1515
	call Mem1055[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1079,fp:fp_1083,r0:r0_1071,r1:r1_1075,r11:r11_1096,r2:r2_995,r3:r3_1037,r4:r4_1000,r5:r5_1066,r6:r6_1050,r7:r7_1026,r8:r8_1062,r9:r9_1092,sp:sp_1018 - 0x00000014,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1080,fp:fp_1084,r0:r0_1072,r1:r1_1076,r11:r11_1097,r2:r2_1068,r3:r3_1085,r4:r4_1088,r5:r5_1067,r6:r6_1089,r7:r7_1087,r8:r8_1063,r9:r9_1093,sp:sp_1059
	Mem1100[sp_1059 - 0x00000004:word32] = r0_1072
	Mem1103[sp_1059 - 0x00000008:word32] = r2_1068 + 1515
	Mem1105[sp_1059 - 0x0000000C:word32] = r2_1068
	r0_1106 = Mem1105[r2_1068 + 0x0000C839:word32]
	call r0_1106 + 2 (retsize: 4;)
		uses: ap:ap_1080,fp:fp_1084,r0:r0_1106,r1:r1_1076,r11:r11_1097,r2:r2_1068,r3:r3_1085,r4:r4_1088,r5:r5_1067,r6:r6_1089,r7:r7_1087,r8:r8_1063,r9:r9_1093,sp:sp_1059 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1116,fp:fp_1117,r0:r0_1114,r1:r1_1115,r11:r11_1123,r2:r2_1113,r3:r3_1118,r4:r4_1120,r5:r5_1112,r6:r6_1121,r7:r7_1119,r8:r8_1111,sp:sp_1110
	r9_1125 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011273:
	sp_1129 = sp_1017 - 0x00000004
	Mem1131[sp_1129:uint32] = 0x00000401
	Mem1134[sp_1129 - 0x00000004:word32] = Mem1131[r2_995 + 0x0000C613:word32]
	Mem1137[sp_1129 - 0x00000008:word32] = r6_1050 + 1275
	Mem1140[sp_1129 - 0x0000000C:word32] = r2_995 + 1515
	call Mem1140[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1079,fp:fp_1083,r0:r0_1071,r1:r1_1075,r11:r11_1096,r2:r2_995,r3:r3_1152,r4:r4_1000,r5:r5_1066,r6:r6_1050,r7:r7_1026,r8:r8_1062,r9:r9_1092,sp:sp_1129 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1150,fp:fp_1151,r0:r0_1148,r1:r1_1149,r11:r11_1158,r2:r2_1147,r3:r3_1153,r4:r4_1155,r5:r5_1146,r6:r6_1156,r7:r7_1154,r8:r8_1145,r9:r9_1157,sp:sp_1144
	Mem1161[sp_1144 - 0x00000004:word32] = r0_1148
	Mem1164[sp_1144 - 0x00000008:word32] = r2_1147 + 1515
	Mem1166[sp_1144 - 0x0000000C:word32] = r2_1147
	r0_1167 = Mem1166[r2_1147 + 0x0000C839:word32]
	call r0_1167 + 2 (retsize: 4;)
		uses: ap:ap_1150,fp:fp_1151,r0:r0_1167,r1:r1_1149,r11:r11_1158,r2:r2_1147,r3:r3_1153,r4:r4_1155,r5:r5_1146,r6:r6_1156,r7:r7_1154,r8:r8_1145,r9:r9_1157,sp:sp_1144 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1177,fp:fp_1178,r0:r0_1175,r1:r1_1176,r11:r11_1184,r2:r2_1174,r3:r3_1179,r4:r4_1181,r5:r5_1173,r6:r6_1182,r7:r7_1180,r8:r8_1172,sp:sp_1171
	Mem1187[r2_1174 + 0x0000C68E:word32] = Mem1166[r2_1174 + 0x0000C623:word32]
	Mem1189[r2_1174 + 0x0000C623:word32] = 0x00000000
	r9_1190 = 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011260:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011227:
	sp_1194 = sp_1017 - 0x00000004
	Mem1196[sp_1194:uint32] = 0x00000401
	Mem1199[sp_1194 - 0x00000004:word32] = -r4_1000
	Mem1202[sp_1194 - 0x00000008:word32] = Mem1199[r2_995 + 0x0000C613:word32]
	Mem1205[sp_1194 - 0x0000000C:word32] = r6_1050 + 1199
	Mem1208[sp_1194 - 0x00000010:word32] = r2_995 + 1515
	call Mem1208[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1079,fp:fp_1083,r0:r0_1071,r1:r1_1075,r11:r11_1096,r2:r2_995,r3:r3_1152,r4:r4_1000,r5:r5_1066,r6:r6_1050,r7:r7_1026,r8:r8_1062,r9:r9_1092,sp:sp_1194 - 0x00000010,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1218,fp:fp_1219,r0:r0_1216,r1:r1_1217,r11:r11_1225,r2:r2_1215,r3:r3_1220,r4:r4_1222,r5:r5_1214,r6:r6_1223,r7:r7_1221,r8:r8_1213,r9:r9_1224,sp:sp_1212
	Mem1228[sp_1212 - 0x00000004:word32] = r0_1216
	Mem1231[sp_1212 - 0x00000008:word32] = r2_1215 + 1515
	Mem1233[sp_1212 - 0x0000000C:word32] = r2_1215
	r0_1234 = Mem1233[r2_1215 + 0x0000C839:word32]
	call r0_1234 + 2 (retsize: 4;)
		uses: ap:ap_1218,fp:fp_1219,r0:r0_1234,r1:r1_1217,r11:r11_1225,r2:r2_1215,r3:r3_1220,r4:r4_1222,r5:r5_1214,r6:r6_1223,r7:r7_1221,r8:r8_1213,r9:r9_1224,sp:sp_1212 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1244,fp:fp_1245,r0:r0_1242,r1:r1_1243,r11:r11_1251,r2:r2_1241,r3:r3_1246,r4:r4_1248,r5:r5_1240,r6:r6_1249,r7:r7_1247,r8:r8_1239,sp:sp_1238
	r9_1253 = 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000112FA:
	r11_1311 = PHI((r11_1251, l00011227), (r11_1096, l00011260), (r11_1184, l00011273), (r11_1123, l000112CC))
	r9_1309 = PHI((r9_1253, l00011227), (r9_1092, l00011260), (r9_1190, l00011273), (r9_1125, l000112CC))
	r4_1306 = PHI((r4_1248, l00011227), (r4_1000, l00011260), (r4_1181, l00011273), (r4_1120, l000112CC))
	r7_1304 = PHI((r7_1247, l00011227), (r7_1026, l00011260), (r7_1180, l00011273), (r7_1119, l000112CC))
	r3_1302 = PHI((r3_1246, l00011227), (r3_1152, l00011260), (r3_1179, l00011273), (r3_1118, l000112CC))
	fp_1300 = PHI((fp_1245, l00011227), (fp_1083, l00011260), (fp_1178, l00011273), (fp_1117, l000112CC))
	ap_1298 = PHI((ap_1244, l00011227), (ap_1079, l00011260), (ap_1177, l00011273), (ap_1116, l000112CC))
	r1_1296 = PHI((r1_1243, l00011227), (r1_1075, l00011260), (r1_1176, l00011273), (r1_1115, l000112CC))
	r0_1294 = PHI((r0_1242, l00011227), (r0_1071, l00011260), (r0_1175, l00011273), (r0_1114, l000112CC))
	r5_1291 = PHI((r5_1240, l00011227), (r5_1066, l00011260), (r5_1173, l00011273), (r5_1112, l000112CC))
	r8_1289 = PHI((r8_1239, l00011227), (r8_1062, l00011260), (r8_1172, l00011273), (r8_1111, l000112CC))
	r6_1279 = PHI((r6_1249, l00011227), (r6_1050, l00011260), (r6_1182, l00011273), (r6_1121, l000112CC))
	sp_1271 = PHI((sp_1238, l00011227), (sp_1017, l00011260), (sp_1171, l00011273), (sp_1110, l000112CC))
	Mem1258 = PHI((Mem1233, l00011227), (Mem999, l00011260), (Mem1189, l00011273), (Mem1105, l000112CC))
	r2_1257 = PHI((r2_1241, l00011227), (r2_995, l00011260), (r2_1174, l00011273), (r2_1113, l000112CC))
	branch Mem1258[r2_1257 + 128:word32] == 0x00000000 l00011303
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011303:
	branch Mem1258[r2_1257 + 0x0000C68A:word32] == 0x00000000 l0001130E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001130E:
	branch Mem1258[r2_1257:word32] == 0x00000000 l00011348
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011348:
	sp_1272 = sp_1271 - 0x00000004
	Mem1274[sp_1272:uint32] = 0x00000401
	Mem1277[sp_1272 - 0x00000004:word32] = Mem1274[r2_1257 + 0x0000C613:word32]
	Mem1281[sp_1272 - 0x00000008:word32] = r6_1279 + 1352
	Mem1284[sp_1272 - 0x0000000C:word32] = r2_1257 + 1515
	call Mem1284[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1298,fp:fp_1300,r0:r0_1294,r1:r1_1296,r11:r11_1311,r2:r2_1257,r3:r3_1302,r4:r4_1306,r5:r5_1291,r6:r6_1279,r7:r7_1304,r8:r8_1289,r9:r9_1309,sp:sp_1272 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1299,fp:fp_1301,r0:r0_1295,r1:r1_1297,r11:r11_1312,r2:r2_1293,r3:r3_1303,r4:r4_1307,r5:r5_1292,r6:r6_1308,r7:r7_1305,r8:r8_1290,r9:r9_1310,sp:sp_1288
	Mem1315[sp_1288 - 0x00000004:word32] = r0_1295
	Mem1318[sp_1288 - 0x00000008:word32] = r2_1293 + 1515
	Mem1320[sp_1288 - 0x0000000C:word32] = r2_1293
	r0_1321 = Mem1320[r2_1293 + 0x0000C839:word32]
	call r0_1321 + 2 (retsize: 4;)
		uses: ap:ap_1299,fp:fp_1301,r0:r0_1321,r1:r1_1297,r11:r11_1312,r2:r2_1293,r3:r3_1303,r4:r4_1307,r5:r5_1292,r6:r6_1308,r7:r7_1305,r8:r8_1290,r9:r9_1310,sp:sp_1288 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1331,fp:fp_1332,r0:r0_1329,r1:r1_1330,r11:r11_1338,r2:r2_1328,r3:r3_1333,r4:r4_1335,r5:r5_1327,r6:r6_1336,r7:r7_1334,r8:r8_1326,r9:r9_1337,sp:sp_1325
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011312:
	sp_1340 = sp_1271 - 0x00000004
	Mem1341[sp_1340:word32] = 0x00000000
	branch Mem1341[r2_1257 + 36:word32] <= 0x00000009 l00011320
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011320:
	r3_1345 = r7_1304 + 78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001131A:
	r3_1349 = r7_1304 + 79
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011324:
	r3_1355 = PHI((r3_1349, l0001131A), (r3_1345, l00011320))
	Mem1356[sp_1340 - 0x00000004:word32] = r3_1355
	Mem1360[sp_1340 - 0x00000008:word32] = r7_1304 + 60
	Mem1364[sp_1340 - 0x0000000C:word32] = r2_1257 + 1515
	call Mem1364[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1298,fp:fp_1300,r0:r0_1294,r1:r1_1296,r11:r11_1311,r2:r2_1257,r3:r3_1355,r4:r4_1306,r5:r5_1291,r6:r6_1279,r7:r7_1304,r8:r8_1289,r9:r9_1309,sp:sp_1340 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1379,fp:fp_1381,r0:r0_1375,r1:r1_1377,r11:r11_1391,r2:r2_1373,r3:r3_1382,r4:r4_1385,r5:r5_1372,r6:r6_1387,r7:r7_1383,r8:r8_1370,r9:r9_1389,sp:sp_1368
	Mem1394[sp_1368 - 0x00000004:word32] = r0_1375
	Mem1397[sp_1368 - 0x00000008:word32] = r2_1373 + 1515
	Mem1399[sp_1368 - 0x0000000C:word32] = r2_1373
	r0_1400 = Mem1399[r2_1373 + 0x0000C839:word32]
	call r0_1400 + 2 (retsize: 4;)
		uses: ap:ap_1379,fp:fp_1381,r0:r0_1400,r1:r1_1377,r11:r11_1391,r2:r2_1373,r3:r3_1382,r4:r4_1385,r5:r5_1372,r6:r6_1387,r7:r7_1383,r8:r8_1370,r9:r9_1389,sp:sp_1368 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1410,fp:fp_1411,r0:r0_1408,r1:r1_1409,r11:r11_1417,r2:r2_1407,r3:r3_1412,r4:r4_1414,r5:r5_1406,r6:r6_1415,r7:r7_1413,r8:r8_1405,r9:r9_1416,sp:sp_1404
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011374:
	r11_1452 = PHI((r11_1417, l00011324), (r11_1338, l00011348))
	r9_1450 = PHI((r9_1416, l00011324), (r9_1337, l00011348))
	r6_1448 = PHI((r6_1415, l00011324), (r6_1336, l00011348))
	r4_1446 = PHI((r4_1414, l00011324), (r4_1335, l00011348))
	r7_1444 = PHI((r7_1413, l00011324), (r7_1334, l00011348))
	r3_1442 = PHI((r3_1412, l00011324), (r3_1333, l00011348))
	fp_1440 = PHI((fp_1411, l00011324), (fp_1332, l00011348))
	ap_1438 = PHI((ap_1410, l00011324), (ap_1331, l00011348))
	r1_1436 = PHI((r1_1409, l00011324), (r1_1330, l00011348))
	r0_1434 = PHI((r0_1408, l00011324), (r0_1329, l00011348))
	r5_1431 = PHI((r5_1406, l00011324), (r5_1327, l00011348))
	r8_1429 = PHI((r8_1405, l00011324), (r8_1326, l00011348))
	Mem1422 = PHI((Mem1399, l00011324), (Mem1320, l00011348))
	r2_1421 = PHI((r2_1407, l00011324), (r2_1328, l00011348))
	sp_1419 = PHI((sp_1404, l00011324), (sp_1325, l00011348))
	sp_1420 = sp_1419 - 0x00000004
	Mem1424[sp_1420:word32] = Mem1422[r2_1421 + 0x0000C617:word32]
	call Mem1424[0x0001925C:word32] + 2 (retsize: 4;)
		uses: ap:ap_1438,fp:fp_1440,r0:r0_1434,r1:r1_1436,r11:r11_1452,r2:r2_1421,r3:r3_1442,r4:r4_1446,r5:r5_1431,r6:r6_1448,r7:r7_1444,r8:r8_1429,r9:r9_1450,sp:sp_1420,Stack +FFFFFFF4:dwLoc10
		defs: fp:fp_1441,r11:r11_1453,r2:r2_1433,r3:r3_1443,r4:r4_1447,r5:r5_1432,r6:r6_1449,r7:r7_1445,r8:r8_1430,r9:r9_1451
	branch r9_1451 <= 0x00000001 l0001138C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001138C:
	fp_1463 = Mem1424[fp_1441 + 0x0000000C:word32]
	ap_1464 = Mem1424[fp_1441 + 0x00000008:word32]
	r2Out = r2_1433
	r3Out = r3_1443
	r4Out = r4_1447
	r5Out = r5_1432
	r6Out = r6_1449
	r7Out = r7_1445
	r8Out = r8_1430
	r9Out = r9_1451
	r11Out = r11_1453
	apOut = ap_1464
	fpOut = fp_1463
	spOut = fp_1441 - 0x00000004
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011386:
	fp_1470 = Mem1424[fp_1441 + 0x0000000C:word32]
	ap_1471 = Mem1424[fp_1441 + 0x00000008:word32]
	r2Out = r2_1433
	r3Out = r3_1443
	r4Out = r4_1447
	r5Out = r5_1432
	r6Out = r6_1449
	r7Out = r7_1445
	r8Out = r8_1430
	r9Out = r9_1451
	r11Out = r11_1453
	apOut = ap_1471
	fpOut = fp_1470
	spOut = fp_1441 - 0x00000004
	return r9_1451
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001130B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011300:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011390:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000111DD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011742:
	sp_1476 = sp_923 - 0x00000004
	Mem1478[sp_1476:word32] = Mem997[r2_928 + 0x0000C617:word32]
	call Mem1478[0x0001925C:word32] + 2 (retsize: 4;)
		uses: ap:ap_950,fp:fp_952,r0:r0_946,r1:r1_948,r11:r11_962,r2:r2_928,r3:r3_954,r4:r4_918,r5:r5_943,r6:r6_932,r7:r7_956,r8:r8_913,r9:r9_960,sp:sp_1476,Stack +FFFFFFF4:dwLoc10
		defs: fp:fp_1489,r11:r11_1495,r2:r2_1485,r3:r3_1490,r4:r4_1492,r5:r5_1484,r6:r6_1493,r7:r7_1491,r8:r8_1483,r9:r9_1494,sp:sp_1482
	branch Mem1478[r2_1485 + 72:word32] == 0x00000000 l000117A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011754:
	branch Mem1478[r2_1485:word32] != 0x00000000 l000117A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011758:
	branch Mem1478[fp_1489 + -12:word32] == 0x00000000 l000117A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000117A3:
	r8_1764 = PHI((r8_1483, l00011742), (r8_1483, l00011754), (r8_1483, l00011758), (r8_1560, l00011771), (r8_1560, l000117A0))
	r7_1760 = PHI((r7_1491, l00011742), (r7_1491, l00011754), (r7_1491, l00011758), (r7_1568, l00011771), (r7_1568, l000117A0))
	r6_1756 = PHI((r6_1493, l00011742), (r6_1493, l00011754), (r6_1493, l00011758), (r6_1570, l00011771), (r6_1570, l000117A0))
	r5_1752 = PHI((r5_1484, l00011742), (r5_1484, l00011754), (r5_1484, l00011758), (r5_1561, l00011771), (r5_1561, l000117A0))
	r4_1749 = PHI((r4_1492, l00011742), (r4_1492, l00011754), (r4_1492, l00011758), (r4_1569, l00011771), (r4_1569, l000117A0))
	r3_1745 = PHI((r3_1490, l00011742), (r3_1490, l00011754), (r3_1490, l00011758), (r3_1567, l00011771), (r3_1567, l000117A0))
	r2_1741 = PHI((r2_1485, l00011742), (r2_1485, l00011754), (r2_1485, l00011758), (r2_1562, l00011771), (r2_1562, l000117A0))
	r11_1737 = PHI((r11_1495, l00011742), (r11_1495, l00011754), (r11_1495, l00011758), (r11_1572, l00011771), (r11_1572, l000117A0))
	Mem1588 = PHI((Mem1478, l00011742), (Mem1478, l00011754), (Mem1478, l00011758), (Mem1554, l00011771), (Mem1554, l000117A0))
	fp_1586 = PHI((fp_1489, l00011742), (fp_1489, l00011754), (fp_1489, l00011758), (fp_1566, l00011771), (fp_1566, l000117A0))
	r9_1581 = PHI((r9_1494, l00011742), (r9_1494, l00011754), (r9_1494, l00011758), (r9_1571, l00011771), (r9_1577, l000117A0))
	sp_1587 = fp_1586 - 0x00000004
	fp_1589 = Mem1588[sp_1587 + 0x00000010:word32]
	ap_1590 = Mem1588[sp_1587 + 0x0000000C:word32]
	r2Out = r2_1741
	r3Out = r3_1745
	r4Out = r4_1749
	r5Out = r5_1752
	r6Out = r6_1756
	r7Out = r7_1760
	r8Out = r8_1764
	r9Out = r9_1581
	r11Out = r11_1737
	apOut = ap_1590
	fpOut = fp_1589
	spOut = sp_1587
	return r9_1581
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001175D:
	Mem1511[sp_1482 - 0x00000004:word32] = Mem1478[fp_1489 + -8:word32]
	Mem1514[sp_1482 - 0x00000008:word32] = Mem1511[r2_1485 + 0x0000C613:word32]
	fn0000BDC2()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011119:
	sp_1591 = sp_734 - 0x00000004
	Mem1593[sp_1591:word32] = Mem691[r2_689 + 0x0000C617:word32]
	call Mem1593[0x0001925C:word32] + 2 (retsize: 4;)
		uses: ap:ap_788,fp:fp_793,r0:r0_777,r1:r1_783,r11:r11_810,r2:r2_689,r3:r3_702,r4:r4_1607,r5:r5_769,r6:r6_751,r7:r7_799,r8:r8_764,r9:r9_806,sp:sp_1591,Stack +FFFFFFF4:dwLoc10
		defs: fp:fp_1604,r11:r11_1613,r2:r2_1600,r3:r3_1605,r4:r4_1610,r5:r5_1599,r6:r6_1611,r7:r7_1606,r8:r8_1598,r9:r9_1612
	fp_1620 = Mem1593[fp_1604 + 0x0000000C:word32]
	ap_1621 = Mem1593[fp_1604 + 0x00000008:word32]
	r2Out = r2_1600
	r3Out = r3_1605
	r4Out = r4_1610
	r5Out = r5_1599
	r6Out = r6_1611
	r7Out = r7_1606
	r8Out = r8_1598
	r9Out = r9_1612
	r11Out = r11_1613
	apOut = ap_1621
	fpOut = fp_1620
	spOut = fp_1604 - 0x00000004
	return r9_1612
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001105D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001104B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000110EF:
	r11_1655 = PHI((r11, l0001104B), (r11_496, l0001105D), (r11_811, l00011083), (r11_812, l000110E7))
	r9_1653 = PHI((r9_485, l0001104B), (r9_509, l0001105D), (r9_572, l00011083), (r9_685, l000110E7))
	r6_1651 = PHI((r6_475, l0001104B), (r6_501, l0001105D), (r6_562, l00011083), (r6_752, l000110E7))
	r4_1649 = PHI((r4_473, l0001104B), (r4_499, l0001105D), (r4_560, l00011083), (r4_684, l000110E7))
	r7_1647 = PHI((r7_476, l0001104B), (r7_502, l0001105D), (r7_563, l00011083), (r7_800, l000110E7))
	r3_1645 = PHI((r3_472, l0001104B), (r3_498, l0001105D), (r3_559, l00011083), (r3_704, l000110E7))
	fp_1643 = PHI((fp_469, l0001104B), (fp_494, l0001105D), (fp_556, l00011083), (fp_794, l000110E7))
	ap_1641 = PHI((ap_468, l0001104B), (ap_493, l0001105D), (ap_555, l00011083), (ap_789, l000110E7))
	r1_1639 = PHI((r1_480, l0001104B), (r1_480, l0001105D), (r1_567, l00011083), (r1_784, l000110E7))
	r0_1637 = PHI((r0_470, l0001104B), (r0_495, l0001105D), (r0_557, l00011083), (r0_779, l000110E7))
	r5_1634 = PHI((r5_474, l0001104B), (r5_500, l0001105D), (r5_561, l00011083), (r5_772, l000110E7))
	r8_1632 = PHI((r8_477, l0001104B), (r8_503, l0001105D), (r8_564, l00011083), (r8_765, l000110E7))
	Mem1625 = PHI((Mem455, l0001104B), (Mem455, l0001105D), (Mem535, l00011083), (Mem692, l000110E7))
	r2_1624 = PHI((r2_471, l0001104B), (r2_497, l0001105D), (r2_558, l00011083), (r2_690, l000110E7))
	sp_1622 = PHI((sp_479, l0001104B), (sp_504, l0001105D), (sp_566, l00011083), (sp_735, l000110E7))
	sp_1623 = sp_1622 - 0x00000004
	Mem1627[sp_1623:word32] = Mem1625[r2_1624 + 0x0000C617:word32]
	call Mem1627[0x0001925C:word32] + 2 (retsize: 4;)
		uses: ap:ap_1641,fp:fp_1643,r0:r0_1637,r1:r1_1639,r11:r11_1655,r2:r2_1624,r3:r3_1645,r4:r4_1649,r5:r5_1634,r6:r6_1651,r7:r7_1647,r8:r8_1632,r9:r9_1653,sp:sp_1623,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1642,fp:fp_1644,r11:r11_1656,r2:r2_1636,r3:r3_1646,r4:r4_1650,r5:r5_1635,r6:r6_1652,r7:r7_1648,r8:r8_1633,r9:r9_1654
	branch Mem1627[ap_1642 + 4:word32] == 0x00000000 l00011105
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011105:
	Mem1663[r2_1636 + 0x0000C6E9:word32] = 0x00000001
	fp_1669 = Mem1663[fp_1644 + 0x0000000C:word32]
	ap_1670 = Mem1663[fp_1644 + 0x00000008:word32]
	r2Out = r2_1636
	r3Out = r3_1646
	r4Out = r4_1650
	r5Out = r5_1635
	r6Out = r6_1652
	r7Out = r7_1648
	r8Out = r8_1633
	r9Out = r9_1654
	r11Out = r11_1656
	apOut = ap_1670
	fpOut = fp_1669
	spOut = fp_1644 - 0x00000004
	return 0x00000009
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011101:
	fp_1676 = Mem1627[fp_1644 + 0x0000000C:word32]
	ap_1677 = Mem1627[fp_1644 + 0x00000008:word32]
	r2Out = r2_1636
	r3Out = r3_1646
	r4Out = r4_1650
	r5Out = r5_1635
	r6Out = r6_1652
	r7Out = r7_1648
	r8Out = r8_1633
	r9Out = r9_1654
	r11Out = r11_1656
	apOut = ap_1677
	fpOut = fp_1676
	spOut = fp_1644 - 0x00000004
	return r9_1654
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010FEC:
	fp_1683 = Mem357[fp_343 + 0x0000000C:word32]
	ap_1684 = Mem357[fp_343 + 0x00000008:word32]
	r2Out = r2_347
	r3Out = r3_348
	r4Out = r4_349
	r5Out = r5_350
	r6Out = r6_351
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_1684
	fpOut = fp_1683
	spOut = fp_343 - 0x00000004
	return 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010FC1:
	fp_1697 = Mem0[fp + 0x0000000C:word32]
	ap_1698 = Mem0[fp + 0x00000008:word32]
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_1698
	fpOut = fp_1697
	spOut = fp - 0x00000004
	return 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010FC5:
	fn0000D4A2()
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00010E6A_entry:
	def r2
	def Mem0
	def ap
	def fp
	def r3
	def r7
	def r4
	def r6
	def r9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010E6A:
	v12_9 = Mem0[r2 + 0x0000C613:word32]
	r8_4 = 0x00000000
	r5_5 = 0x00000000
	r0_18 = fn00018F22(ap, fp, out r1_20, out ap_16, out fp_17, out sp_19)
	branch r0_18 != 0x00000000 l00010EDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010EA5:
	Mem31[sp_19 - 0x00000004:word32] = r2 + 0x0000C694
	Mem34[sp_19 - 0x00000008:word32] = Mem31[r2 + 0x0000C613:word32]
	call Mem34[0x000192A8:word32] + 2 (retsize: 4;)
		uses: ap:ap_16,fp:fp_17,r0:r0_18,r1:r1_20,r11:r11,r2:r2,r3:r3,r4:r4,r5:0x00000000,r6:r6,r7:r7,r8:0x00000000,r9:r9,sp:sp_19 - 0x00000008,Stack +FFFFFFF4:v12_9
		defs: ap:ap_44,fp:fp_45,r0:r0_42,r1:r1_43,r11:r11_1702,r2:r2_41,r3:r3_47,r4:r4_51,r5:r5_40,r6:r6_53,r7:r7_49,r8:r8_39,r9:r9_55,sp:sp_38
	branch r0_42 != 0x00000000 l00010EDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010EBC:
	r0_62 = (uint32) Mem34[r2_41 + 0x0000C69E:word16] & ~0xFFFF0FFF
	r1_63 = 0x00000000
	branch r0_62 != 0x00004000 l00010ED7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010ED5:
	r1_67 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010ED7:
	r1_69 = PHI((r1_63, l00010EBC), (r1_67, l00010ED5))
	r5_70 = r1_69
	branch r1_69 != 0x00000000 l00010EDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010EDF:
	r11_1704 = PHI((r11, l00010E6A), (r11_1702, l00010EA5), (r11_1702, l00010ED7))
	r9_163 = PHI((r9, l00010E6A), (r9_55, l00010EA5), (r9_55, l00010ED7))
	r4_158 = PHI((r4, l00010E6A), (r4_51, l00010EA5), (r4_51, l00010ED7))
	r7_154 = PHI((r7, l00010E6A), (r7_49, l00010EA5), (r7_49, l00010ED7))
	fp_149 = PHI((fp_17, l00010E6A), (fp_45, l00010EA5), (fp_45, l00010ED7))
	r1_144 = PHI((r1_20, l00010E6A), (r1_43, l00010EA5), (r1_69, l00010ED7))
	r0_140 = PHI((r0_18, l00010E6A), (r0_42, l00010EA5), (r0_62, l00010ED7))
	r5_136 = PHI((r5_5, l00010E6A), (r5_40, l00010EA5), (r5_70, l00010ED7))
	r8_132 = PHI((r8_4, l00010E6A), (r8_39, l00010EA5), (r8_39, l00010ED7))
	r3_116 = PHI((r3, l00010E6A), (r3_47, l00010EA5), (r3_47, l00010ED7))
	r6_104 = PHI((r6, l00010E6A), (r6_53, l00010EA5), (r6_53, l00010ED7))
	sp_89 = PHI((sp_19, l00010E6A), (sp_38, l00010EA5), (sp_38, l00010ED7))
	r2_83 = PHI((r2, l00010E6A), (r2_41, l00010EA5), (r2_41, l00010ED7))
	Mem77 = PHI((Mem10, l00010E6A), (Mem34, l00010EA5), (Mem34, l00010ED7))
	ap_75 = PHI((ap_16, l00010E6A), (ap_44, l00010EA5), (ap_44, l00010ED7))
	branch Mem77[ap_75 + 4:word32] != 0x00000000 l00010EE7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010EE7:
	branch Mem77[r2_83 + 0x0000C6E9:word32] == 0x00000000 l00010F50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F50:
	sp_91 = sp_89 - 0x00000004
	Mem93[sp_91:uint32] = 0x00000401
	Mem96[sp_91 - 0x00000004:word32] = Mem93[r2_83 + 0x0000C613:word32]
	Mem99[sp_91 - 0x00000008:word32] = Mem96[r2_83 + 0x0000C60F:word32]
	branch Mem99[r2_83:word32] == 0x00000000 l00010F70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F70:
	r3_106 = r6_104 + 456
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F65:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F75:
	r3_115 = PHI((r3_116, l00010F65), (r3_106, l00010F70))
	Mem118[sp_91 - 0x0000000C:word32] = r3_115
	Mem122[sp_91 - 0x00000010:word32] = r6_104 + 421
	Mem126[sp_91 - 0x00000014:word32] = r2_83 + 1515
	call Mem126[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_75,fp:fp_149,r0:r0_140,r1:r1_144,r11:r11_1704,r2:r2_83,r3:r3_115,r4:r4_158,r5:r5_136,r6:r6_104,r7:r7_154,r8:r8_132,r9:r9_163,sp:sp_91 - 0x00000014,Stack +FFFFFFF4:v12_9
		defs: ap:ap_147,fp:fp_151,r0:r0_142,r1:r1_145,r11:r11_1706,r2:r2_138,r3:r3_152,r4:r4_160,r5:r5_137,r6:r6_161,r7:r7_156,r8:r8_134,r9:r9_165,sp:sp_130
	Mem168[sp_130 - 0x00000004:word32] = r0_142
	Mem171[sp_130 - 0x00000008:word32] = r2_138 + 1515
	Mem173[sp_130 - 0x0000000C:word32] = r2_138
	r0_174 = Mem173[r2_138 + 0x0000C839:word32]
	call r0_174 + 2 (retsize: 4;)
		uses: ap:ap_147,fp:fp_151,r0:r0_174,r1:r1_145,r11:r11_1706,r2:r2_138,r3:r3_152,r4:r4_160,r5:r5_137,r6:r6_161,r7:r7_156,r8:r8_134,r9:r9_165,sp:sp_130 - 0x0000000C,Stack +FFFFFFF4:v12_9
		defs: fp:fp_185,r1:r1_183,r11:r11_1710,r2:r2_181,r3:r3_186,r4:r4_188,r5:r5_180,r6:r6_189,r7:r7_187,r8:r8_179,r9:r9_190
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010EEF:
	sp_192 = sp_89 - 0x00000004
	Mem194[sp_192:uint32] = 0x00000401
	Mem197[sp_192 - 0x00000004:word32] = Mem194[r2_83 + 0x0000C613:word32]
	r3_198 = Mem197[r2_83:word32]
	branch r3_198 == 0x00000000 l00010F08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F08:
	r4_203 = r7_154 + 39
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010EFF:
	r4_207 = r7_154 + 40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F0C:
	r4_213 = PHI((r4_207, l00010EFF), (r4_203, l00010F08))
	Mem214[sp_192 - 0x00000008:word32] = r4_213
	Mem218[sp_192 - 0x0000000C:word32] = Mem214[r2_83 + 0x0000C60F:word32]
	branch r3_198 == 0x00000000 l00010F24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F24:
	r3_225 = r6_104 + 456
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F18:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F29:
	r3_234 = PHI((r3_198, l00010F18), (r3_225, l00010F24))
	Mem235[sp_192 - 0x00000010:word32] = r3_234
	Mem239[sp_192 - 0x00000014:word32] = r6_104 + 340
	Mem243[sp_192 - 0x00000018:word32] = r2_83 + 1515
	call Mem243[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_75,fp:fp_149,r0:r0_140,r1:r1_144,r11:r11_1704,r2:r2_83,r3:r3_234,r4:r4_213,r5:r5_136,r6:r6_104,r7:r7_154,r8:r8_132,r9:r9_163,sp:sp_192 - 0x00000018,Stack +FFFFFFF4:v12_9
		defs: ap:ap_263,fp:fp_266,r0:r0_257,r1:r1_260,r11:r11_1713,r2:r2_254,r3:r3_267,r4:r4_272,r5:r5_253,r6:r6_273,r7:r7_270,r8:r8_250,r9:r9_276,sp:sp_247
	Mem279[sp_247 - 0x00000004:word32] = r0_257
	Mem282[sp_247 - 0x00000008:word32] = r2_254 + 1515
	Mem284[sp_247 - 0x0000000C:word32] = r2_254
	r0_285 = Mem284[r2_254 + 0x0000C839:word32]
	call r0_285 + 2 (retsize: 4;)
		uses: ap:ap_263,fp:fp_266,r0:r0_285,r1:r1_260,r11:r11_1713,r2:r2_254,r3:r3_267,r4:r4_272,r5:r5_253,r6:r6_273,r7:r7_270,r8:r8_250,r9:r9_276,sp:sp_247 - 0x0000000C,Stack +FFFFFFF4:v12_9
		defs: fp:fp_296,r1:r1_294,r11:r11_1716,r2:r2_292,r3:r3_297,r4:r4_299,r5:r5_291,r6:r6_300,r7:r7_298,r8:r8_290,r9:r9_301
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010EE4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F98:
	r9_1767 = PHI((r9_163, l00010EE4), (r9_190, l00010F75), (r9_301, l00010F29))
	r8_1763 = PHI((r8_132, l00010EE4), (r8_179, l00010F75), (r8_290, l00010F29))
	r7_1759 = PHI((r7_154, l00010EE4), (r7_187, l00010F75), (r7_298, l00010F29))
	r6_1755 = PHI((r6_104, l00010EE4), (r6_189, l00010F75), (r6_300, l00010F29))
	r4_1748 = PHI((r4_158, l00010EE4), (r4_188, l00010F75), (r4_299, l00010F29))
	r3_1744 = PHI((r3_116, l00010EE4), (r3_186, l00010F75), (r3_297, l00010F29))
	r2_1740 = PHI((r2_83, l00010EE4), (r2_181, l00010F75), (r2_292, l00010F29))
	r11_1736 = PHI((r11_1704, l00010EE4), (r11_1710, l00010F75), (r11_1716, l00010F29))
	Mem327 = PHI((Mem77, l00010EE4), (Mem173, l00010F75), (Mem284, l00010F29))
	fp_324 = PHI((fp_149, l00010EE4), (fp_185, l00010F75), (fp_296, l00010F29))
	r1_309 = PHI((r1_144, l00010EE4), (r1_183, l00010F75), (r1_294, l00010F29))
	r5_303 = PHI((r5_136, l00010EE4), (r5_180, l00010F75), (r5_291, l00010F29))
	branch r5_303 == 0x00000000 l00010FA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010FA4:
	r1_310 = DPB(r1_309, 0x09, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F9C:
	r1_315 = DPB(r1_309, 0x4C, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010FA7:
	r1_319 = PHI((r1_315, l00010F9C), (r1_310, l00010FA4))
	sp_325 = fp_324 - 0x00000004
	fp_328 = Mem327[sp_325 + 0x00000010:word32]
	ap_329 = Mem327[sp_325 + 0x0000000C:word32]
	r2Out = r2_1740
	r3Out = r3_1744
	r4Out = r4_1748
	r5Out = r5_303
	r6Out = r6_1755
	r7Out = r7_1759
	r8Out = r8_1763
	r9Out = r9_1767
	r11Out = r11_1736
	apOut = ap_329
	fpOut = fp_328
	spOut = sp_325
	return (int32) (int8) r1_319
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00010E6A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010EDC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010FAB:
	Mem331[r2_41 + 0x0000C61B:word32] = Mem34[r2_41 + 0x0000C6AE:word32]
	fn00009A52()
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn000117AA(word32 r0, word32 r1, word32 r2, word32 r3, word32 r6, word32 r7, word32 r8, word32 r9, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000117AA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000117AA:
	word32 r5_7 = Mem0[r2 + 0x0000C61B:word32]
	branch r5_7 <= 0x00002000 l000117D7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000117D7:
	word32 v14_15 = Mem13[r2 + 0x0000C617:word32]
	word32 sp_20
	word32 r4_21
	word32 r2_22
	word32 r5_23
	word32 r0_25
	word32 r8_27
	word32 r3_29
	word32 fp_31
	word32 ap_33
	word32 r9_35
	word32 r1_501
	word32 r6_499
	word32 r7_500
	call Mem16[0x0001926C:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r1:r1,r2:r2,r3:r3,r4:0x00000000,r5:r5_7,r6:r6,r7:r7,r8:r8,r9:r9,sp:fp - 0x00000028,Stack +0004:v14_15,Stack +0008:0x0000000000000000
		defs: ap:ap_33,fp:fp_31,r0:r0_25,r1:r1_501,r2:r2_22,r3:r3_29,r4:r4_21,r5:r5_23,r6:r6_499,r7:r7_500,r8:r8_27,r9:r9_35,sp:sp_20
	Mem39[sp_20 - 0x00000004:word32] = Mem16[r2_22 + 0x0000C61B:word32]
	Mem42[sp_20 - 0x00000008:word32] = Mem39[r2_22 + 0x0000C5F3:word32]
	Mem45[sp_20 - 0x0000000C:word32] = Mem42[r2_22 + 0x0000C617:word32]
	word32 sp_138
	word32 r9_106
	word32 r2_113
	word32 r4_123
	word32 r5_158
	word32 r0_120
	word32 r8_100
	word32 r3_101
	word32 fp_102
	word32 ap_104
	call Mem45[0x00019270:word32] + 2 (retsize: 4;)
		uses: ap:ap_33,fp:fp_31,r0:r0_25,r1:r1_501,r2:r2_22,r3:r3_29,r4:r4_21,r5:r5_23,r6:r6_499,r7:r7_500,r8:r8_27,r9:r9_35,sp:sp_20 - 0x0000000C,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: ap:ap_57,fp:fp_56,r0:r0_53,r2:r2_51,r3:r3_55,r4:r4_50,r5:r5_52,r8:r8_54,r9:r9_58,sp:sp_49
	Mem61[r2_113 + 0x0000C5FB:word32] = r0_120
	branch Mem61[r2_113 + 0x0000C5FB:word32] == Mem61[r2_113 + 0x0000C61B:word32] l00011816
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011816:
	r3_101 = Mem61[r2_113 + 0x0000C61B:word32] + Mem61[r2_113 + 0x0000C5F3:word32]
	Mem67[r2_113 + 0x0000C5F7:word32] = r3_101 - 0x00000016
	branch Mem67[r2_113 + 0x0000C5F7:word32] >=u Mem67[r2_113 + 0x0000C5F3:word32] l0001183A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001183A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001183C:
	r3_101 = Mem75[r2_113 + 0x0000C5F7:word32]
	r0_120 = (uint32) Mem75[r3_101:byte]
	branch r0_120 != 0x00000050 l00011880
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001184F:
	word32 sp_82 = sp_138 - 0x00000004
	Mem83[sp_82:word32] = 0x00000004
	Mem86[sp_82 - 0x00000004:word32] = r2_113 + 0x0000C639
	Mem88[sp_82 - 0x00000008:word32] = r3_101
	call Mem88[0x000192D8:word32] + 2 (retsize: 4;)
		uses: ap:ap_104,fp:fp_102,r0:r0_77,r1:r1,r2:r2_74,r3:r3_76,r4:r4_93,r5:r5_96,r6:r6,r7:r7,r8:r8_99,r9:r9_106,sp:sp_82 - 0x00000008,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: ap:ap_105,fp:fp_103,r0:r0_98,r2:r2_95,r3:r3_101,r4:r4_94,r5:r5_97,r8:r8_100,r9:r9_107,sp:sp_92
	branch r0_120 != 0x00000000 l00011880
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011880:
	Mem116[r2_113 + 0x0000C5F7:word32] = Mem114[r2_113 + 0x0000C5F7:word32] - 0x00000001
	branch Mem116[r2_113 + 0x0000C5F7:word32] >=u Mem116[r2_113 + 0x0000C5F3:word32] l0001183C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011893:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011864:
	r0_120 = Mem88[r2_113 + 0x0000C5F7:word32] - Mem88[r2_113 + 0x0000C5F3:word32]
	Mem122[r2_113 + 0x0000C5FB:word32] = Mem88[r2_113 + 0x0000C5FB:word32] - r0_120
	r4_123 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011837:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011813:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A92:
	branch r4_123 != 0x00000000 l00011AF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011AF4:
	word32 r3_135 = Mem134[r2_113 + 0x0000C5F7:word32] - Mem134[r2_113 + 0x0000C5F3:word32]
	Mem137[r2_113 + 124:word32] = r3_135 + Mem134[r2_113 + 0x0000C61F:word32]
	word32 sp_140 = sp_138 - 0x00000004
	Mem141[sp_140:word32] = 0x00000016
	Mem146[sp_140 - 0x00000004:word32] = fp_102 + -26
	word32 ap_160
	word32 fp_161
	word32 r2_163
	word32 r3_164
	word32 r4_165
	word32 r5_166
	word32 r6_167
	word32 r7_168
	word32 sp_169
	word32 r0_162 = fn0000D5BE(r0_120, r3_135, r4_123, r5_158, r6, ap_104, fp_102, out r2_163, out r3_164, out r4_165, out r5_166, out r6_167, out r7_168, out ap_160, out fp_161, out sp_169)
	branch r0_162 != 0x00000000 l00011B1D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011B1D:
	Mem180[sp_169 - 0x00000004:word32] = fp_161 + -22
	word32 sp_184
	word32 r4_185
	word32 r2_186
	word32 r5_187
	word32 r0_188
	word32 r8_191
	word32 r3_192
	word32 fp_193
	word32 ap_194
	word32 r9_197
	word32 r6_198
	word32 r7_199
	word32 r1_510
	call fn00000002 (retsize: 4;)
		uses: ap:ap_160,fp:fp_161,r0:r0_162,r1:r1_320,r2:r2_163,r3:r3_164,r4:r4_165,r5:r5_166,r6:r6_167,r7:r7_168,r8:r8_189,r9:r9_195,sp:sp_169 - 0x00000004,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: ap:ap_194,fp:fp_193,r0:r0_188,r1:r1_510,r2:r2_186,r3:r3_192,r4:r4_185,r5:r5_187,r6:r6_198,r7:r7_199,r8:r8_191,r9:r9_197,sp:sp_184
	Mem202[r2_186 + 0x0000C682:word16] = (word16) r0_188
	Mem205[sp_184 - 0x00000004:word32] = fp_193 + -20
	word32 sp_209
	word32 r4_210
	word32 r2_211
	word32 r5_212
	word32 r0_213
	word32 r8_214
	word32 r3_215
	word32 fp_216
	word32 ap_217
	word32 r9_218
	word32 r6_219
	word32 r7_220
	word32 r1_515
	call fn00000002 (retsize: 4;)
		uses: ap:ap_194,fp:fp_193,r0:r0_188,r1:r1_510,r2:r2_186,r3:r3_192,r4:r4_185,r5:r5_187,r6:r6_198,r7:r7_199,r8:r8_191,r9:r9_197,sp:sp_184 - 0x00000004,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: ap:ap_217,fp:fp_216,r0:r0_213,r1:r1_515,r2:r2_211,r3:r3_215,r4:r4_210,r5:r5_212,r6:r6_219,r7:r7_220,r8:r8_214,r9:r9_218,sp:sp_209
	Mem223[r2_211 + 0x0000C684:word16] = (word16) r0_213
	Mem226[sp_209 - 0x00000004:word32] = fp_216 + -18
	word32 r1_516
	word32 sp_230
	word32 r4_231
	word32 r2_232
	word32 r5_233
	word32 r0_234
	word32 r8_235
	word32 r3_236
	word32 fp_237
	word32 ap_238
	word32 r9_239
	word32 r6_240
	word32 r7_241
	call fn00000002 (retsize: 4;)
		uses: ap:ap_217,fp:fp_216,r0:r0_213,r1:r1_515,r2:r2_211,r3:r3_215,r4:r4_210,r5:r5_212,r6:r6_219,r7:r7_220,r8:r8_214,r9:r9_218,sp:sp_209 - 0x00000004,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: ap:ap_238,fp:fp_237,r0:r0_234,r1:r1_516,r2:r2_232,r3:r3_236,r4:r4_231,r5:r5_233,r6:r6_240,r7:r7_241,r8:r8_235,r9:r9_239,sp:sp_230
	Mem244[r2_232 + 0x0000C686:word16] = (word16) r0_234
	Mem247[sp_230 - 0x00000004:word32] = fp_237 + -16
	word32 r1_517
	word32 sp_251
	word32 r4_252
	word32 r2_253
	word32 r5_254
	word32 r0_255
	word32 r8_256
	word32 r3_257
	word32 fp_258
	word32 ap_259
	word32 r9_260
	word32 r6_261
	word32 r7_262
	call fn00000002 (retsize: 4;)
		uses: ap:ap_238,fp:fp_237,r0:r0_234,r1:r1_516,r2:r2_232,r3:r3_236,r4:r4_231,r5:r5_233,r6:r6_240,r7:r7_241,r8:r8_235,r9:r9_239,sp:sp_230 - 0x00000004,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: ap:ap_259,fp:fp_258,r0:r0_255,r1:r1_517,r2:r2_253,r3:r3_257,r4:r4_252,r5:r5_254,r6:r6_261,r7:r7_262,r8:r8_256,r9:r9_260,sp:sp_251
	Mem265[r2_253 + 0x0000C688:word16] = (word16) r0_255
	Mem268[sp_251 - 0x00000004:word32] = fp_258 + -14
	word32 ap_272
	word32 fp_273
	word32 r2_276
	word32 sp_277
	Mem283[r2_276 + 0x0000C68A:word32] = fn0000E276(ap_259, fp_258, out r1_554, out r2_276, out ap_272, out fp_273, out sp_277)
	Mem286[sp_277 - 0x00000004:word32] = fp_273 + -10
	word32 ap_290
	word32 fp_291
	word32 r1_293
	word32 r2_294
	word32 sp_295
	word32 r0_292 = fn0000E276(ap_272, fp_273, out r1_293, out r2_294, out ap_290, out fp_291, out sp_295)
	Mem301[r2_294 + 0x0000C68E:word32] = r0_292
	Mem304[sp_295 - 0x00000004:word32] = fp_291 + -6
	word32 r4_309
	word32 r2_310
	word32 r5_311
	word32 r0_312
	word32 r8_313
	word32 r3_314
	word32 fp_315
	word32 r6_318
	word32 r7_319
	word32 r1_320
	call fn00000002 (retsize: 4;)
		uses: ap:ap_290,fp:fp_291,r0:r0_292,r1:r1_293,r2:r2_294,r3:r3_257,r4:r4_252,r5:r5_254,r6:r6_261,r7:r7_262,r8:r8_256,r9:r9_260,sp:sp_295 - 0x00000004,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: fp:fp_315,r0:r0_312,r1:r1_320,r2:r2_310,r3:r3_314,r4:r4_309,r5:r5_311,r6:r6_318,r7:r7_319,r8:r8_313
	Mem323[r2_310 + 0x0000C692:word16] = (word16) r0_312
	Mem325[r2_310 + 128:word32] = Mem323[r2_310 + 0x0000C68A:word32] + Mem323[r2_310 + 0x0000C68E:word32]
	word32 fp_332 = Mem325[fp_315 + 0x0000000C:word32]
	word32 ap_333 = Mem325[fp_315 + 0x00000008:word32]
	r1Out = r1_517
	r2Out = r2_310
	r3Out = r3_314
	r4Out = r4_309
	r5Out = r5_311
	r6Out = r6_318
	r7Out = r7_319
	r8Out = r8_313
	apOut = ap_333
	fpOut = fp_332
	spOut = fp_315 - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011B19:
	word32 fp_339 = Mem146[fp_161 + 0x0000000C:word32]
	word32 ap_340 = Mem146[fp_161 + 0x00000008:word32]
	r1Out = r1
	r2Out = r2_163
	r3Out = r3_164
	r4Out = r4_165
	r5Out = r5_166
	r6Out = r6_167
	r7Out = r7_168
	r8Out = r8_100
	apOut = ap_340
	fpOut = fp_339
	spOut = fp_161 - 0x00000004
	return 0x00000033
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A96:
	branch Mem134[r2_113 + 64:word32] != 0x00000000 l00011A9F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A9B:
	branch Mem134[r2_113:word32] == 0x00000000 l00011ACA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A9F:
	word32 sp_350 = sp_138 - 0x00000004
	Mem352[sp_350:uint32] = 0x00000401
	Mem356[sp_350 - 0x00000004:word32] = Mem352[r2_113 + 0x0000C613:word32]
	Mem360[sp_350 - 0x00000008:word32] = r8_100 + 119
	Mem363[sp_350 - 0x0000000C:word32] = r2_113 + 1515
	word32 sp_367
	word32 r4_369
	word32 r2_370
	word32 r5_372
	word32 r0_374
	word32 r8_375
	word32 fp_381
	word32 ap_383
	word32 r9_385
	word32 r6_387
	word32 r7_393
	word32 r1_399
	call Mem363[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_150,fp:fp_143,r0:r0_152,r1:r1,r2:r2_133,r3:r3_377,r4:r4_127,r5:r5_158,r6:r6,r7:r7,r8:r8_189,r9:r9_195,sp:sp_350 - 0x0000000C,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: ap:ap_383,fp:fp_381,r0:r0_374,r1:r1_399,r2:r2_370,r4:r4_369,r5:r5_372,r6:r6_387,r7:r7_393,r8:r8_375,r9:r9_385,sp:sp_367
	Mem402[sp_367 - 0x00000004:word32] = r0_374
	Mem405[sp_367 - 0x00000008:word32] = r2_370 + 1515
	Mem407[sp_367 - 0x0000000C:word32] = r2_370
	word32 r3_408 = Mem407[r2_370 + 0x0000C839:word32]
	call r3_408 + 2 (retsize: 4;)
		uses: ap:ap_383,fp:fp_381,r0:r0_374,r1:r1_399,r2:r2_370,r3:r3_408,r4:r4_369,r5:r5_372,r6:r6_387,r7:r7_393,r8:r8_375,r9:r9_385,sp:sp_367 - 0x0000000C,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: ap:ap_420,fp:fp_419,r0:r0_416,r1:r1_424,r2:r2_414,r3:r3_418,r4:r4_413,r5:r5_415,r6:r6_422,r7:r7_423,r8:r8_417,r9:r9_421,sp:sp_412
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011ACA:
	word32 sp_427 = sp_138 - 0x00000004
	Mem429[sp_427:uint32] = 0x00000401
	Mem433[sp_427 - 0x00000004:word32] = r9_106 + 1608
	Mem437[sp_427 - 0x00000008:word32] = r2_113 + 1515
	word32 sp_441
	word32 r4_443
	word32 r2_444
	word32 r5_446
	word32 r0_448
	word32 r8_450
	word32 fp_454
	word32 ap_456
	word32 r9_457
	word32 r6_459
	word32 r7_461
	word32 r1_463
	call Mem437[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_455,fp:fp_453,r0:r0_447,r1:r1_462,r2:r2_435,r3:r3_451,r4:r4_442,r5:r5_445,r6:r6_458,r7:r7_460,r8:r8_449,r9:r9_431,sp:sp_427 - 0x00000008,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: ap:ap_456,fp:fp_454,r0:r0_448,r1:r1_463,r2:r2_444,r4:r4_443,r5:r5_446,r6:r6_459,r7:r7_461,r8:r8_450,r9:r9_457,sp:sp_441
	Mem466[sp_441 - 0x00000004:word32] = r0_448
	Mem469[sp_441 - 0x00000008:word32] = r2_444 + 1515
	Mem471[sp_441 - 0x0000000C:word32] = r2_444
	word32 r3_472 = Mem471[r2_444 + 0x0000C839:word32]
	word32 r4_477
	word32 r2_478
	word32 r5_479
	word32 r8_481
	word32 r3_482
	word32 fp_483
	word32 r6_486
	word32 r7_487
	word32 r1_488
	call r3_472 + 2 (retsize: 4;)
		uses: ap:ap_456,fp:fp_454,r0:r0_448,r1:r1_463,r2:r2_444,r3:r3_472,r4:r4_443,r5:r5_446,r6:r6_459,r7:r7_461,r8:r8_450,r9:r9_457,sp:sp_441 - 0x0000000C,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: fp:fp_483,r1:r1_488,r2:r2_478,r3:r3_482,r4:r4_477,r5:r5_479,r6:r6_486,r7:r7_487,r8:r8_481
	word32 fp_495 = Mem471[fp_483 + 0x0000000C:word32]
	word32 ap_496 = Mem471[fp_483 + 0x00000008:word32]
	r1Out = r1_488
	r2Out = r2_478
	r3Out = r3_482
	r4Out = r4_477
	r5Out = r5_479
	r6Out = r6_486
	r7Out = r7_487
	r8Out = r8_481
	apOut = ap_496
	fpOut = fp_495
	spOut = fp_483 - 0x00000004
	return 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000117AA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000117D4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011898:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00011C0A(word32 r0, word32 r1, word32 r3, word32 r4, word32 r5, word32 r6, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[8..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: ap fp r0 r1 r2 r3 r4 r5 r6 r7 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved:
fn00011C0A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C0A:
	word32 fp_15
	word32 r2_17
	word32 r3_18
	word32 r4_19
	word32 r5_20
	word32 r6_21
	word32 r7_22
	word32 sp_23
	word32 r0_16 = fn00011CDA(r0, r3, r4, r5, r6, ap, fp, out r2_17, out r3_18, out r4_19, out r5_20, out r6_21, out r7_22, out fp_15, out sp_23)
	branch r0_16 == 0x00000000 l00011C20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C20:
	word32 r1_40
	word32 r0_33 = Mem0[r2_17 + 1511:word32]
	branch (uint32) Mem0[r2_17 + 0x0000C659:byte] >=u 0x00000012 l00011C3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C3C:
	r1_40 = DPB(r1, 0x12, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C31:
	r1_40 = DPB(r1, Mem0[r2_17 + 0x0000C659:byte], 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C3F:
	Mem52[r0_33 + 12:uint32] = (uint32) (byte) r1_40
	word32 ap_54 = Mem52[r2_17 + 1511:word32]
	Mem56[ap_54 + 20:byte] = Mem52[ap_54 + 20:byte] & ~0x10
	branch Mem56[r2_17 + 40:word32] == 0x00000000 l00011C95
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C95:
	branch (Mem56[r2_17 + 0x0000C67A:word32] & 0x00000008) == 0x00000000 l00011CCC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C9D:
	word32 ap_62 = Mem56[Mem56[r2_17 + 1511:word32] + 12:word32]
	branch ap_62 == 0x00000000 l00011CB7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CA8:
	branch ap_62 == 0x00000006 l00011CB7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CAD:
	branch ap_62 == 0x0000000B l00011CB7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CB2:
	branch ap_62 != 0x00000005 l00011CCC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CCC:
	word32 ap_78 = Mem56[r2_17 + 1511:word32]
	Mem80[ap_78 + 20:byte] = Mem56[ap_78 + 20:byte] & ~0x20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CB7:
	word32 ap_86 = Mem56[r2_17 + 1511:word32]
	Mem88[ap_86 + 20:byte] = Mem56[ap_86 + 20:byte] | 0x20
	word32 ap_89 = Mem88[r2_17 + 1511:word32]
	Mem91[ap_89 + 20:byte] = Mem88[ap_89 + 20:byte] & ~0x10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CD5:
	word32 fp_106 = Mem105[fp_15 + 0x0000000C:word32]
	word32 ap_107 = Mem105[fp_15 + 0x00000008:word32]
	r1Out = r1_40
	r2Out = r2_17
	r3Out = r3_18
	r4Out = r4_19
	r5Out = r5_20
	r6Out = r6_21
	r7Out = r7_22
	apOut = ap_107
	fpOut = fp_106
	spOut = fp_15 - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C51:
	word32 ap_108 = Mem56[r2_17 + 1511:word32]
	word32 r0_109 = Mem56[ap_108 + 12:word32]
	branch r0_109 > 0x00000011 l00011C80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C80:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C5A_1:
	word32 sp_115
	word32 r0_116
	word32 fp_117
	word32 ap_118
	word32 r2_119
	word32 r1_120
	word32 r4_122
	word32 r6_124
	word32 r5_126
	word32 r3_128
	word32 r7_130
	call 0x00011C5E + r0_109 * 0x00000002 (retsize: 4;)
		uses: ap:ap_108,fp:fp_15,r0:r0_109,r1:r1_49,r2:r2_17,r3:r3_18,r4:r4_19,r5:r5_20,r6:r6_21,r7:r7_22,sp:sp_23
		defs: ap:ap_118,fp:fp_117,r0:r0_116,r1:r1_120,r2:r2_119,r3:r3_128,r4:r4_122,r5:r5_126,r6:r6_124,r7:r7_130,sp:sp_115
	r1Out = r1_120
	r2Out = r2_119
	r3Out = r3_128
	r4Out = r4_122
	r5Out = r5_126
	r6Out = r6_124
	r7Out = r7_130
	apOut = ap_118
	fpOut = fp_117
	spOut = sp_115
	return r0_116
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C1F:
	word32 fp_133 = Mem0[fp_15 + 0x0000000C:word32]
	word32 ap_134 = Mem0[fp_15 + 0x00000008:word32]
	r1Out = r1
	r2Out = r2_17
	r3Out = r3_18
	r4Out = r4_19
	r5Out = r5_20
	r6Out = r6_21
	r7Out = r7_22
	apOut = ap_134
	fpOut = fp_133
	spOut = fp_15 - 0x00000004
	return r0_16
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00011C0A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00011CDA(word32 r0, word32 r3, word32 r4, word32 r5, word32 r6, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: fp r0 r2 r3 r4 r5 r6 r7 sp
// Trashed: CVZN ap fp r0 r2 r3 r4 r5 r6 r7 sp
// Preserved:
fn00011CDA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CDA:
	word32 ap_19
	word32 fp_20
	word32 r2_22
	word32 r3_23
	word32 r4_24
	word32 r5_25
	word32 r6_26
	word32 r7_27
	word32 sp_28
	word32 r0_21 = fn0000D5BE(r0, r3, r4, r5, r6, ap, fp, out r2_22, out r3_23, out r4_24, out r5_25, out r6_26, out r7_27, out ap_19, out fp_20, out sp_28)
	branch r0_21 != 0x00000000 l00011CF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CF8:
	Mem38[r2_22 + 0x0000C658:byte] = Mem9[fp_20 + -46:byte]
	Mem40[r2_22 + 0x0000C659:byte] = Mem38[fp_20 + -45:byte]
	Mem42[r2_22 + 0x0000C65A:byte] = Mem40[fp_20 + -44:byte]
	Mem44[r2_22 + 0x0000C65B:byte] = Mem42[fp_20 + -43:byte]
	Mem47[sp_28 - 0x00000004:word32] = fp_20 + -42
	word32 sp_51
	word32 fp_52
	word32 r0_53
	word32 ap_54
	word32 r2_55
	word32 r3_56
	word32 r4_57
	word32 r6_58
	word32 r5_59
	word32 r7_60
	call r3_23 + 2 (retsize: 4;)
		uses: ap:ap_19,fp:fp_20,r0:r0_21,r2:r2_22,r3:r3_23,r4:r4_24,r5:r5_25,r6:r6_26,r7:r7_27,sp:sp_28 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_54,fp:fp_52,r0:r0_53,r2:r2_55,r3:r3_56,r4:r4_57,r5:r5_59,r6:r6_58,r7:r7_60,sp:sp_51
	Mem63[r2_55 + 0x0000C65C:word16] = (word16) r0_53
	Mem66[sp_51 - 0x00000004:word32] = fp_52 + -40
	word32 sp_70
	word32 fp_71
	word32 r0_72
	word32 ap_73
	word32 r2_74
	word32 r3_75
	word32 r4_76
	word32 r6_77
	word32 r5_78
	word32 r7_79
	call r3_56 + 2 (retsize: 4;)
		uses: ap:ap_54,fp:fp_52,r0:r0_53,r2:r2_55,r3:r3_56,r4:r4_57,r5:r5_59,r6:r6_58,r7:r7_60,sp:sp_51 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_73,fp:fp_71,r0:r0_72,r2:r2_74,r3:r3_75,r4:r4_76,r5:r5_78,r6:r6_77,r7:r7_79,sp:sp_70
	Mem82[r2_74 + 0x0000C65E:word16] = (word16) r0_72
	Mem85[sp_70 - 0x00000004:word32] = fp_71 + -38
	word32 sp_89
	word32 fp_90
	word32 r0_91
	word32 ap_92
	word32 r2_93
	word32 r3_94
	word32 r4_95
	word32 r6_96
	word32 r5_97
	word32 r7_98
	call r3_75 + 2 (retsize: 4;)
		uses: ap:ap_73,fp:fp_71,r0:r0_72,r2:r2_74,r3:r3_75,r4:r4_76,r5:r5_78,r6:r6_77,r7:r7_79,sp:sp_70 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_92,fp:fp_90,r0:r0_91,r2:r2_93,r3:r3_94,r4:r4_95,r5:r5_97,r6:r6_96,r7:r7_98,sp:sp_89
	Mem101[r2_93 + 0x0000C660:word16] = (word16) r0_91
	Mem104[sp_89 - 0x00000004:word32] = fp_90 + -36
	word32 sp_108
	word32 fp_109
	word32 r0_110
	word32 ap_111
	word32 r2_112
	word32 r3_113
	word32 r4_114
	word32 r6_115
	word32 r5_116
	word32 r7_117
	call r3_94 + 2 (retsize: 4;)
		uses: ap:ap_92,fp:fp_90,r0:r0_91,r2:r2_93,r3:r3_94,r4:r4_95,r5:r5_97,r6:r6_96,r7:r7_98,sp:sp_89 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_111,fp:fp_109,r0:r0_110,r2:r2_112,r3:r3_113,r4:r4_114,r5:r5_116,r6:r6_115,r7:r7_117,sp:sp_108
	Mem120[r2_112 + 0x0000C662:word16] = (word16) r0_110
	Mem123[sp_108 - 0x00000004:word32] = fp_109 + -34
	word32 sp_127
	word32 fp_128
	word32 r0_129
	word32 ap_130
	word32 r2_131
	word32 r3_132
	word32 r4_133
	word32 r6_134
	word32 r5_135
	word32 r7_136
	call r4_114 + 2 (retsize: 4;)
		uses: ap:ap_111,fp:fp_109,r0:r0_110,r2:r2_112,r3:r3_113,r4:r4_114,r5:r5_116,r6:r6_115,r7:r7_117,sp:sp_108 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_130,fp:fp_128,r0:r0_129,r2:r2_131,r3:r3_132,r4:r4_133,r5:r5_135,r6:r6_134,r7:r7_136,sp:sp_127
	Mem139[r2_131 + 0x0000C664:word32] = r0_129
	Mem142[sp_127 - 0x00000004:word32] = fp_128 + -30
	word32 sp_146
	word32 fp_147
	word32 r0_148
	word32 ap_149
	word32 r2_150
	word32 r3_151
	word32 r4_152
	word32 r6_153
	word32 r5_154
	word32 r7_155
	call r4_133 + 2 (retsize: 4;)
		uses: ap:ap_130,fp:fp_128,r0:r0_129,r2:r2_131,r3:r3_132,r4:r4_133,r5:r5_135,r6:r6_134,r7:r7_136,sp:sp_127 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_149,fp:fp_147,r0:r0_148,r2:r2_150,r3:r3_151,r4:r4_152,r5:r5_154,r6:r6_153,r7:r7_155,sp:sp_146
	Mem158[r2_150 + 0x0000C668:word32] = r0_148
	Mem161[sp_146 - 0x00000004:word32] = fp_147 + -26
	word32 sp_165
	word32 fp_166
	word32 r0_167
	word32 ap_168
	word32 r2_169
	word32 r3_170
	word32 r4_171
	word32 r6_172
	word32 r5_173
	word32 r7_174
	call r4_152 + 2 (retsize: 4;)
		uses: ap:ap_149,fp:fp_147,r0:r0_148,r2:r2_150,r3:r3_151,r4:r4_152,r5:r5_154,r6:r6_153,r7:r7_155,sp:sp_146 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_168,fp:fp_166,r0:r0_167,r2:r2_169,r3:r3_170,r4:r4_171,r5:r5_173,r6:r6_172,r7:r7_174,sp:sp_165
	Mem177[r2_169 + 0x0000C66C:word32] = r0_167
	Mem180[sp_165 - 0x00000004:word32] = fp_166 + -22
	word32 sp_184
	word32 fp_185
	word32 r0_186
	word32 ap_187
	word32 r2_188
	word32 r3_189
	word32 r4_190
	word32 r6_191
	word32 r5_192
	word32 r7_193
	call r3_170 + 2 (retsize: 4;)
		uses: ap:ap_168,fp:fp_166,r0:r0_167,r2:r2_169,r3:r3_170,r4:r4_171,r5:r5_173,r6:r6_172,r7:r7_174,sp:sp_165 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_187,fp:fp_185,r0:r0_186,r2:r2_188,r3:r3_189,r4:r4_190,r5:r5_192,r6:r6_191,r7:r7_193,sp:sp_184
	Mem196[r2_188 + 0x0000C670:word16] = (word16) r0_186
	Mem199[sp_184 - 0x00000004:word32] = fp_185 + -20
	word32 sp_203
	word32 fp_204
	word32 r0_205
	word32 ap_206
	word32 r2_207
	word32 r3_208
	word32 r4_209
	word32 r6_210
	word32 r5_211
	word32 r7_212
	call r3_189 + 2 (retsize: 4;)
		uses: ap:ap_187,fp:fp_185,r0:r0_186,r2:r2_188,r3:r3_189,r4:r4_190,r5:r5_192,r6:r6_191,r7:r7_193,sp:sp_184 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_206,fp:fp_204,r0:r0_205,r2:r2_207,r3:r3_208,r4:r4_209,r5:r5_211,r6:r6_210,r7:r7_212,sp:sp_203
	Mem215[r2_207 + 0x0000C672:word16] = (word16) r0_205
	Mem218[sp_203 - 0x00000004:word32] = fp_204 + -18
	word32 sp_222
	word32 fp_223
	word32 r0_224
	word32 ap_225
	word32 r2_226
	word32 r3_227
	word32 r4_228
	word32 r6_229
	word32 r5_230
	word32 r7_231
	call r3_208 + 2 (retsize: 4;)
		uses: ap:ap_206,fp:fp_204,r0:r0_205,r2:r2_207,r3:r3_208,r4:r4_209,r5:r5_211,r6:r6_210,r7:r7_212,sp:sp_203 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_225,fp:fp_223,r0:r0_224,r2:r2_226,r3:r3_227,r4:r4_228,r5:r5_230,r6:r6_229,r7:r7_231,sp:sp_222
	Mem234[r2_226 + 0x0000C674:word16] = (word16) r0_224
	Mem237[sp_222 - 0x00000004:word32] = fp_223 + -16
	word32 sp_241
	word32 fp_242
	word32 r0_243
	word32 ap_244
	word32 r2_245
	word32 r3_246
	word32 r4_247
	word32 r6_248
	word32 r5_249
	word32 r7_250
	call r3_227 + 2 (retsize: 4;)
		uses: ap:ap_225,fp:fp_223,r0:r0_224,r2:r2_226,r3:r3_227,r4:r4_228,r5:r5_230,r6:r6_229,r7:r7_231,sp:sp_222 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_244,fp:fp_242,r0:r0_243,r2:r2_245,r3:r3_246,r4:r4_247,r5:r5_249,r6:r6_248,r7:r7_250,sp:sp_241
	Mem253[r2_245 + 0x0000C676:word16] = (word16) r0_243
	Mem256[sp_241 - 0x00000004:word32] = fp_242 + -14
	word32 sp_260
	word32 fp_261
	word32 r0_262
	word32 ap_263
	word32 r2_264
	word32 r3_265
	word32 r4_266
	word32 r6_267
	word32 r5_268
	word32 r7_269
	call r3_246 + 2 (retsize: 4;)
		uses: ap:ap_244,fp:fp_242,r0:r0_243,r2:r2_245,r3:r3_246,r4:r4_247,r5:r5_249,r6:r6_248,r7:r7_250,sp:sp_241 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_263,fp:fp_261,r0:r0_262,r2:r2_264,r3:r3_265,r4:r4_266,r5:r5_268,r6:r6_267,r7:r7_269,sp:sp_260
	Mem272[r2_264 + 0x0000C678:word16] = (word16) r0_262
	Mem275[sp_260 - 0x00000004:word32] = fp_261 + -12
	word32 sp_279
	word32 fp_280
	word32 r0_281
	word32 ap_282
	word32 r2_283
	word32 r3_284
	word32 r4_285
	word32 r6_286
	word32 r5_287
	word32 r7_288
	call r4_266 + 2 (retsize: 4;)
		uses: ap:ap_263,fp:fp_261,r0:r0_262,r2:r2_264,r3:r3_265,r4:r4_266,r5:r5_268,r6:r6_267,r7:r7_269,sp:sp_260 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_282,fp:fp_280,r0:r0_281,r2:r2_283,r3:r3_284,r4:r4_285,r5:r5_287,r6:r6_286,r7:r7_288,sp:sp_279
	Mem291[r2_283 + 0x0000C67A:word32] = r0_281
	Mem294[sp_279 - 0x00000004:word32] = fp_280 + -8
	word32 fp_299
	word32 r0_300
	word32 r2_302
	word32 r3_303
	word32 r4_304
	word32 r6_305
	word32 r5_306
	word32 r7_307
	call r4_285 + 2 (retsize: 4;)
		uses: ap:ap_282,fp:fp_280,r0:r0_281,r2:r2_283,r3:r3_284,r4:r4_285,r5:r5_287,r6:r6_286,r7:r7_288,sp:sp_279 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: fp:fp_299,r0:r0_300,r2:r2_302,r3:r3_303,r4:r4_304,r5:r5_306,r6:r6_305,r7:r7_307
	Mem310[r2_302 + 0x0000C67E:word32] = r0_300
	word32 fp_317 = Mem310[fp_299 + 0x0000000C:word32]
	r2Out = r2_302
	r3Out = r3_303
	r4Out = r4_304
	r5Out = r5_306
	r6Out = r6_305
	r7Out = r7_307
	fpOut = fp_317
	spOut = fp_299 - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CF4:
	word32 fp_324 = Mem9[fp_20 + 0x0000000C:word32]
	r2Out = r2_22
	r3Out = r3_23
	r4Out = r4_24
	r5Out = r5_25
	r6Out = r6_26
	r7Out = r7_27
	fpOut = fp_324
	spOut = fp_20 - 0x00000004
	return 0x00000033
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00011CDA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00011ED6(word32 r0, word32 fp, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp:[0..31] r0:[0..31]
// LiveOut: fp r0 sp
// Trashed: CVZN ap fp r0 r1 sp
// Preserved:
fn00011ED6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011ED6:
	word32 r1_6 = Mem0[r0 + 0x0000C811:word32] & ~0xFFFF0000
	fpOut = Mem0[fp + 0x0000000C:word32]
	spOut = fp - 0x00000004
	return (uint32) SLICE(((r1_6 | 0x00000002) ^ 0x00000001) * (r1_6 | 0x00000002), ui24, 8) & ~0xFFFFFF00
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00011ED6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00011F06(word32 r2, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r3Out, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r2:[0..31]
// LiveOut: fp r0 r1 r3
// Trashed: CVZN ap fp r0 r1 r3 sp
// Preserved:
fn00011F06_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011F06:
	Mem12[r2 + 0x0000C809:word32] = (uint32) Mem0[r2 + 0x0000C80A:ui24] ^ Mem0[Mem0[r2 + 0x0000C5EB:word32] + ((Mem0[ap + 4:word32] ^ Mem0[r2 + 0x0000C809:word32]) & ~0xFFFFFF00) * 4:word32]
	Mem15[r2 + 0x0000C80D:word32] = Mem12[r2 + 0x0000C80D:word32] + (Mem12[r2 + 0x0000C809:word32] & ~0xFFFFFF00)
	Mem19[r2 + 0x0000C80D:word32] = Mem15[r2 + 0x0000C80D:word32] * 0x08088405 + 0x00000001
	word32 r3_23 = Mem19[r2 + 0x0000C5EB:word32]
	word32 r1_24 = (uint32) Mem19[r2 + 0x0000C812:ui24]
	Mem26[r2 + 0x0000C811:word32] = r1_24 ^ Mem19[r3_23 + (((uint32) Mem19[r2 + 0x0000C810:byte] ^ Mem19[r2 + 0x0000C811:word32]) & ~0xFFFFFF00) * 4:word32]
	word32 r0_27 = Mem26[ap + 4:word32]
	word32 fp_33 = Mem26[fp + 0x0000000C:word32]
	r1Out = r1_24
	r3Out = r3_23
	fpOut = fp_33
	return r0_27
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00011F06_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000121EA(word32 r0, word32 r1, word32 r2, word32 r3, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000121EA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000121EA:
	word32 v8_7 = Mem0[r3 + 0x0000C815:word32]
	word32 v10_11 = Mem8[ap + 4:word32]
	word32 ap_25
	word32 fp_26
	word32 r1_28
	word32 r2_29
	word32 r3_30
	word32 r5_32
	word32 r6_33
	word32 r7_34
	word32 r8_35
	word32 r9_36
	word32 sp_37
	word32 r0_27 = fn00012252(r0, r1, r2, r3, r5, r6, r7, r8, r9, ap, fp, out r1_28, out r2_29, out r3_30, out r5_32, out r6_33, out r7_34, out r8_35, out r9_36, out ap_25, out fp_26, out sp_37)
	branch r0_27 == 0x00000000 l0001224B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012206:
	Mem49[sp_37 - 0x00000004:word32] = Mem12[r3_30 + 0x0000C815:word32]
	word32 sp_53
	word32 r3_54
	word32 ap_55
	word32 r0_56
	word32 r4_57
	word32 r2_58
	word32 fp_59
	word32 r5_60
	word32 r1_61
	word32 r7_62
	word32 r6_63
	word32 r9_64
	word32 r8_65
	call Mem49[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap_25,fp:fp_26,r0:r0_27,r1:r1_28,r2:r2_29,r3:r3_30,r4:r0_27,r5:r5_32,r6:r6_33,r7:r7_34,r8:r8_35,r9:r9_36,sp:sp_37 - 0x00000004,Stack +FFFFFFF8:v10_11,Stack +FFFFFFFC:v8_7
		defs: ap:ap_55,fp:fp_59,r0:r0_56,r1:r1_61,r2:r2_58,r3:r3_54,r4:r4_57,r5:r5_60,r6:r6_63,r7:r7_62,r8:r8_65,r9:r9_64,sp:sp_53
	Mem69[sp_53 - 0x00000004:word32] = r0_56 + 0x00000001
	word32 sp_73
	word32 r3_74
	word32 ap_75
	word32 r0_76
	word32 fp_79
	word32 r7_82
	word32 r9_84
	word32 r8_85
	call Mem69[0x000192B4:word32] + 2 (retsize: 4;)
		uses: ap:ap_55,fp:fp_59,r0:r0_56 + 0x00000001,r1:r1_61,r2:r2_58,r3:r3_54,r4:r4_57,r5:r5_60,r6:r6_63,r7:r7_62,r8:r8_65,r9:r9_64,sp:sp_53 - 0x00000004,Stack +FFFFFFF8:v10_11,Stack +FFFFFFFC:v8_7
		defs: ap:ap_75,fp:fp_79,r0:r0_76,r3:r3_74,r7:r7_82,r8:r8_85,r9:r9_84,sp:sp_73
	branch r0_76 != 0x00000000 l00012227
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012227:
	Mem94[sp_73 - 0x00000004:word32] = Mem69[r3_74 + 0x0000C815:word32]
	Mem96[sp_73 - 0x00000008:word32] = r0_76
	word32 ap_100
	word32 fp_101
	word32 r1_103
	word32 r2_104
	word32 r5_106
	word32 r6_107
	word32 sp_108
	word32 r0_102 = fn0000E2A6(r7_82, ap_75, fp_79, out r1_103, out r2_104, out r5_106, out r6_107, out ap_100, out fp_101, out sp_108)
	Mem114[sp_108 - 0x00000004:word32] = r0_102
	Mem117[sp_108 - 0x00000008:word32] = Mem114[ap_100 + 4:word32]
	word32 ap_121
	word32 fp_122
	word32 r1_124
	word32 r2_125
	word32 r3_126
	word32 r5_128
	word32 r6_129
	word32 r7_130
	word32 r8_131
	word32 r9_132
	word32 sp_133
	word32 r0_123 = fn00012252(r0_102, r1_103, r2_104, r3_74, r5_106, r6_107, r7_82, r8_85, r9_84, ap_100, fp_101, out r1_124, out r2_125, out r3_126, out r5_128, out r6_129, out r7_130, out r8_131, out r9_132, out ap_121, out fp_122, out sp_133)
	Mem140[sp_133 - 0x00000004:word32] = r2_125
	call Mem140[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_121,fp:fp_122,r0:r0_123,r1:r1_124,r2:r2_125,r3:r3_126,r4:r0_123,r5:r5_128,r6:r6_129,r7:r7_130,r8:r8_131,r9:r9_132,sp:sp_133 - 0x00000004,Stack +FFFFFFF8:v10_11,Stack +FFFFFFFC:v8_7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001224B:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012223:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000121EA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00012252(word32 r0, word32 r1, word32 r2, word32 r3, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: ap fp r0 r1 r2 r3 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00012252_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012252:
	word32 r4_18 = Mem0[ap + 8:word32]
	Mem9[r2 + 0x0000C809:word32] = 0x12345678
	Mem11[r2 + 0x0000C80D:word32] = 0x23456789
	Mem13[r2 + 0x0000C811:word32] = 0x34567890
	branch Mem13[r4_18:byte] != 0x00 l00012288
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012288:
	r5 = (int32) Mem19[r4_18:int8]
	Mem27[r2 + 0x0000C809:word32] = (uint32) Mem19[r2 + 0x0000C80A:ui24] ^ Mem19[Mem19[r2 + 0x0000C5EB:word32] + ((r5 ^ Mem19[r2 + 0x0000C809:word32]) & ~0xFFFFFF00) * 4:word32]
	Mem30[r2 + 0x0000C80D:word32] = Mem27[r2 + 0x0000C80D:word32] + (Mem27[r2 + 0x0000C809:word32] & ~0xFFFFFF00)
	Mem34[r2 + 0x0000C80D:word32] = Mem30[r2 + 0x0000C80D:word32] * 0x08088405 + 0x00000001
	r0 = ((uint32) Mem34[r2 + 0x0000C810:byte] ^ Mem34[r2 + 0x0000C811:word32]) & ~0xFFFFFF00
	r3 = Mem34[r2 + 0x0000C5EB:word32]
	r1 = (uint32) Mem34[r2 + 0x0000C812:ui24]
	Mem41[r2 + 0x0000C811:word32] = r1 ^ Mem34[r3 + r0 * 4:word32]
	r4_18 = r4_18 + 0x00000001
	branch Mem41[r4_18:byte] == 0x00 l00012312
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001230F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012285:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012312:
	word32 r2_70
	word32 fp_83
	word32 r8_197
	call Mem61[0x0001929C:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0_74,r1:r1_80,r2:r2,r3:r3_77,r4:r4_67,r5:r5_71,r6:r6,r7:r7,r8:r8,r9:r9,sp:fp - 0x0000002C,Stack +0004:fp + -16,Stack +0008:Mem50[ap + 4:word32],Stack +000C:0x0000000C
		defs: fp:fp_83,r2:r2_70,r8:r8_99
	word32 r7_101 = 0x00000000
	word32 r4_102 = fp_83 + -16
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012328:
	word32 r6_110 = Mem107[r2_70 + 0x0000C811:word32] & ~0xFFFF0000
	Mem117[r4_102:byte] = (byte) (uint32) Mem107[r4_102:byte] ^ (byte) ((uint32) SLICE(((r6_110 | 0x00000002) ^ 0x00000001) * (r6_110 | 0x00000002), ui24, 8) & ~0xFFFFFF00)
	Mem124[r2_70 + 0x0000C809:word32] = (uint32) Mem117[r2_70 + 0x0000C80A:ui24] ^ Mem117[Mem117[r2_70 + 0x0000C5EB:word32] + (((uint32) Mem117[r4_102:byte] ^ Mem117[r2_70 + 0x0000C809:word32]) & ~0xFFFFFF00) * 4:word32]
	Mem127[r2_70 + 0x0000C80D:word32] = Mem124[r2_70 + 0x0000C80D:word32] + (Mem124[r2_70 + 0x0000C809:word32] & ~0xFFFFFF00)
	Mem131[r2_70 + 0x0000C80D:word32] = Mem127[r2_70 + 0x0000C80D:word32] * 0x08088405 + 0x00000001
	word32 r3_135 = Mem131[r2_70 + 0x0000C5EB:word32]
	word32 r1_136 = (uint32) Mem131[r2_70 + 0x0000C812:ui24]
	Mem138[r2_70 + 0x0000C811:word32] = r1_136 ^ Mem131[r3_135 + (((uint32) Mem131[r2_70 + 0x0000C810:byte] ^ Mem131[r2_70 + 0x0000C811:word32]) & ~0xFFFFFF00) * 4:word32]
	r4_102 = r4_102 + 0x00000001
	r7_101 = r7_101 + 0x00000001
	branch r7_101 <= 0x0000000B l00012328
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000123DA:
	word32 r4_153
	word32 r5_148 = (uint32) (uint16) Mem138[fp_83 + -5:byte]
	branch (Mem138[Mem138[r2_70 + 1511:word32] + 20:word32] & 0x00000002) == 0x00000000 l000123FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000123FC:
	r4_153 = (uint32) Mem138[r2_70 + 0x0000C64B:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000123EB:
	r3_135 = (uint32) Mem138[r2_70 + 0x0000C644:word16]
	r4_153 = r3_135 >> 8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012403:
	branch r5_148 == r4_153 l0001240C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001240C:
	word32 r1_173
	word32 r4_168 = Mem138[r2_70 + 0x0000C5FB:word32]
	word32 r3_169 = Mem138[r2_70 + 132:word32]
	branch r4_168 <= r3_169 l00012424
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012424:
	r1_173 = r4_168
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001241D:
	r1_173 = r3_169
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012427:
	word32 r3_182 = r1_173
	word32 r5_185 = Mem138[r2_70 + 0x0000C5F7:word32]
	word32 r6_187 = r1_173 - 0x00000001
	branch r1_173 != 0x00000000 l0001243F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001243F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012440:
	word32 r8_196 = Mem193[r2_70 + 0x0000C811:word32] & ~0xFFFF0000
	Mem203[r5_185:byte] = (byte) (uint32) Mem193[r5_185:byte] ^ (byte) ((uint32) SLICE(((r8_196 | 0x00000002) ^ 0x00000001) * (r8_196 | 0x00000002), ui24, 8) & ~0xFFFFFF00)
	Mem210[r2_70 + 0x0000C809:word32] = (uint32) Mem203[r2_70 + 0x0000C80A:ui24] ^ Mem203[Mem203[r2_70 + 0x0000C5EB:word32] + (((uint32) Mem203[r5_185:byte] ^ Mem203[r2_70 + 0x0000C809:word32]) & ~0xFFFFFF00) * 4:word32]
	Mem213[r2_70 + 0x0000C80D:word32] = Mem210[r2_70 + 0x0000C80D:word32] + (Mem210[r2_70 + 0x0000C809:word32] & ~0xFFFFFF00)
	Mem217[r2_70 + 0x0000C80D:word32] = Mem213[r2_70 + 0x0000C80D:word32] * 0x08088405 + 0x00000001
	r3_182 = Mem217[r2_70 + 0x0000C5EB:word32]
	r1_173 = (uint32) Mem217[r2_70 + 0x0000C812:ui24]
	Mem224[r2_70 + 0x0000C811:word32] = r1_173 ^ Mem217[r3_182 + (((uint32) Mem217[r2_70 + 0x0000C810:byte] ^ Mem217[r2_70 + 0x0000C811:word32]) & ~0xFFFFFF00) * 4:word32]
	r8_197 = r8_196 | 0x00000002
	r5_185 = r5_185 + 0x00000001
	r6_187 = r6_187 - 0x00000001
	branch r6_187 == 0x00000000 l000124F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000124F5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001243C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000124F8:
	word32 fp_244 = Mem243[fp_83 + 0x0000000C:word32]
	word32 ap_245 = Mem243[fp_83 + 0x00000008:word32]
	r1Out = r1_173
	r2Out = <invalid>
	r3Out = r3_182
	r5Out = r5_185
	r6Out = r6_187
	r7Out = <invalid>
	r8Out = r8_197
	r9Out = <invalid>
	apOut = ap_245
	fpOut = fp_244
	spOut = <invalid>
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012408:
	word32 fp_249 = Mem138[fp_83 + 0x0000000C:word32]
	word32 ap_250 = Mem138[fp_83 + 0x00000008:word32]
	r1Out = r1_136
	r2Out = <invalid>
	r3Out = r3_135
	r5Out = r5_148
	r6Out = r6_110 | 0x00000002
	r7Out = <invalid>
	r8Out = r8_197
	r9Out = <invalid>
	apOut = ap_250
	fpOut = fp_249
	spOut = <invalid>
	return -0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00012252_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000124FE(word32 r0, word32 r2, word32 ap, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] pc:[0..31] r0:[0..31] r2:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn000124FE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000124FE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000124FE:
	word32 sp_23 = fp - 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012503:
	word32 sp_8 = sp_23 - 0x00000008
	Mem10[sp_8:word64] = 0x0000000000000000
	Mem14[sp_8 - 0x00000004:word32] = r2 + 8
	Mem16[sp_8 - 0x00000008:word32] = r2
	call Mem16[pc:word32] + 2 (retsize: 4;)
		uses: ap:ap_28,pc:pc_20 + 0x00000004,r0:r0_26,r2:r2_12,sp:sp_8 - 0x00000008
		defs: ap:ap_29,pc:pc_25,r0:r0_27,r2:r2_24,sp:sp_23
	real32 v15_31 = Mem16[Mem16[sp_23 + 32766:word32]:real32]
	Mem32[Mem16[r0 + -23984:word32]:real32] = v15_31
	branch v15_31 > 0.0F l00012503
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001251B:
	Mem37[Mem32[r0 + 5282:word32]:real32] = 0.8125F
	Mem40[ap - 0x00000004:real32] = 0.75F
	Mem44[sp_23 - 0x00000004:word32] = ap - 0x0000000C
	Mem46[sp_23 - 0x00000008:word32] = 0x00000008
	Mem49[sp_23 - 0x0000000C:word32] = r2 + 24
	Mem52[sp_23 - 0x00000014:word64] = 0x0000000000000000
	Mem55[sp_23 - 0x00000018:word32] = r2 + 10
	Mem57[sp_23 - 0x0000001C:word32] = 0x00000027
	Mem60[sp_23 - 0x00000020:int32] = (int32) Mem57[r2 + 8:int16]
	Mem62[sp_23 - 0x00000024:word32] = 0x00000000
	call Mem62[pc:word32] + 2 (retsize: 4;)
		uses: ap:ap_29 - 0x0000000C,pc:pc_25 + 0x00000004,r0:r0_27,r2:r2_24,sp:sp_23 - 0x00000024
	__halt()
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000125CA(word32 r0, word32 r2, word32 ap, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] pc:[0..31] r0:[0..31] r2:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
l000125EE:
	def sp
	def fp
	def dwLoc0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000125F0:
	pc_37 = PHI((pc, l000125EE), (pc_38, l000125F0))
	r0_35 = PHI((r0, l000125EE), (r0_36, l000125F0))
	ap_32 = PHI((ap, l000125EE), (ap_33, l000125F0))
	r2_24 = PHI((r2, l000125EE), (r2_34, l000125F0))
	fp_20 = PHI((fp, l000125EE), (fp_31, l000125F0))
	sp_16 = PHI((sp, l000125EE), (sp_30, l000125F0))
	sp_17 = sp_16 - 0x00000004
	Mem18[sp_17:word32] = 0x00000001
	Mem22[sp_17 - 0x00000004:word32] = fp_20 + -6
	Mem26[sp_17 - 0x00000008:word32] = Mem22[r2_24:word32]
	call Mem26[0x00019270:word32] + 2 (retsize: 4;)
		uses: ap:ap_32,fp:fp_20,pc:pc_37,r0:r0_35,r2:r2_24,sp:sp_17 - 0x00000008,Stack +FFFFFFF8:dwLoc0C
		defs: ap:ap_33,fp:fp_31,pc:pc_38,r0:r0_36,r2:r2_34,sp:sp_30
	branch Mem26[fp_31 + -6:byte] != 0x0A l000125F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012604:
	Mem44[sp_30 - 0x00000004:word32] = 0x00000001
	fn000124FE(r0_36, r2_34, ap_33, pc_38)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000125CA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000125CA_entry:
	def r2
	def pc
	def r0
	def ap
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000125CA:
	fn000124FE(r0, r2, ap, pc)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00012616(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r8, word32 r9, word32 r10, word32 r11, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00012616_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012616:
	word32 sp_15
	word32 r7_16
	word32 r8_17
	word32 r0_19
	word32 r6_21
	word32 fp_23
	word32 ap_25
	word32 r9_27
	word32 r11_29
	word32 r5_31
	word32 r4_33
	word32 r3_35
	word32 r2_37
	word32 r10_39
	word32 r1_41
	call Mem11[0x00019248:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r1:r1,r10:r10,r11:r11,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,r7:Mem0[0x00019350:word32],r8:r8,r9:r9,sp:fp - 0x00000014,Stack +0004:0x00000000,Stack +0008:r8 + 12
		defs: ap:ap_25,fp:fp_23,r0:r0_19,r1:r1_41,r10:r10_39,r11:r11_29,r2:r2_37,r3:r3_35,r4:r4_33,r5:r5_31,r6:r6_21,r7:r7_16,r8:r8_17,r9:r9_27,sp:sp_15
	Mem44[sp_15 - 0x00000004:word32] = r0_19
	word32 sp_48
	word32 r7_49
	word32 r8_50
	word32 r0_51
	word32 fp_53
	word32 ap_54
	word32 r9_55
	word32 r11_56
	word32 r5_57
	word32 r4_58
	word32 r3_59
	word32 r2_60
	word32 r10_61
	word32 r1_62
	call Mem44[0x0001924C:word32] + 2 (retsize: 4;)
		uses: ap:ap_25,fp:fp_23,r0:r0_19,r1:r1_41,r10:r10_39,r11:r11_29,r2:r2_37,r3:r3_35,r4:r4_33,r5:r5_31,r6:r6_21,r7:r7_16,r8:r8_17,r9:r9_27,sp:sp_15 - 0x00000004,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
		defs: ap:ap_54,fp:fp_53,r0:r0_51,r1:r1_62,r10:r10_61,r11:r11_56,r2:r2_60,r3:r3_59,r4:r4_58,r5:r5_57,r7:r7_49,r8:r8_50,r9:r9_55,sp:sp_48
	branch r0_51 != 0x00000000 l00012644
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012644:
	Mem71[sp_48 - 0x00000004:word32] = Mem44[Mem44[0x00019374:word32]:word32]
	word32 sp_109
	word32 r7_111
	word32 ap_129
	word32 r8_121
	word32 r0_123
	word32 r6_125
	word32 fp_127
	word32 r2_140
	word32 r10_142
	word32 r1_144
	call Mem71[0x00019294:word32] + 2 (retsize: 4;)
		uses: ap:ap_54,fp:fp_53,r0:r0_51,r1:r1_62,r10:r10_61,r11:r11_56,r2:r2_60,r3:r3_59,r4:r4_58,r5:r5_57,r6:r0_51,r7:r7_49,r8:r8_50,r9:r9_55,sp:sp_48 - 0x00000004,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
		defs: ap:ap_81,fp:fp_80,r0:r0_78,r1:r1_89,r10:r10_88,r2:r2_87,r6:r6_79,r7:r7_76,r8:r8_77,sp:sp_75
	Mem93[sp_109 + 4:word32] = Mem71[0x00019258:word32]
	word32 r11_132 = Mem93[0x00019294:word32]
	word32 r5_134 = Mem93[0x00019254:word32]
	word32 r4_136 = Mem93[ap_129 + 12:word32]
	Mem99[sp_109:word32] = Mem93[ap_129 + 8:word32]
	word32 r9_103 = r8_121 + 14
	word32 r3_138 = ap_129 + 8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012680:
	branch Mem104[r9_103:byte] == 0x00 l0001268C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012684:
	word32 sp_110 = sp_109 - 0x00000004
	Mem113[sp_110:word32] = Mem104[r7_111:word32]
	Mem115[sp_110 - 0x00000004:word32] = r9_103
	call Mem115[sp_110 + 0x00000008:word32] + 2 (retsize: 4;)
		uses: ap:ap_129,fp:fp_127,r0:r0_123,r1:r1_144,r10:r10_142,r11:r11_132,r2:r2_140,r3:r3_138,r4:r4_136,r5:r5_134,r6:r6_125,r7:r7_111,r8:r8_121,r9:r9_103,sp:sp_110 - 0x00000004,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
		defs: ap:ap_130,fp:fp_128,r0:r0_124,r1:r1_145,r10:r10_143,r11:r11_133,r2:r2_141,r3:r3_139,r4:r4_137,r5:r5_135,r6:r6_126,r7:r7_120,r8:r8_122,r9:r9_131,sp:sp_119
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001268C:
	word32 sp_148 = sp_109 - 0x00000004
	Mem152[sp_148:word32] = Mem150[r7_111:word32]
	Mem156[sp_148 - 0x00000004:word32] = Mem152[ap_129 + 4:word32]
	word32 sp_160
	word32 r7_161
	word32 r8_163
	word32 r0_165
	word32 r6_167
	word32 fp_169
	word32 ap_170
	word32 r9_172
	word32 r11_174
	word32 r5_176
	word32 r4_178
	word32 r3_180
	word32 r2_182
	word32 r10_184
	word32 r1_186
	call Mem156[sp_148 + 0x00000008:word32] + 2 (retsize: 4;)
		uses: ap:ap_154,fp:fp_168,r0:r0_164,r1:r1_185,r10:r10_183,r11:r11_173,r2:r2_181,r3:r3_179,r4:r4_177,r5:r5_175,r6:r6_166,r7:r7_149,r8:r8_162,r9:r9_171,sp:sp_148 - 0x00000004,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
		defs: ap:ap_170,fp:fp_169,r0:r0_165,r1:r1_186,r10:r10_184,r11:r11_174,r2:r2_182,r3:r3_180,r4:r4_178,r5:r5_176,r6:r6_167,r7:r7_161,r8:r8_163,r9:r9_172,sp:sp_160
	Mem190[sp_160 - 0x00000004:word32] = Mem156[r7_161:word32]
	word32 sp_194
	word32 r7_195
	word32 r8_196
	word32 r0_197
	word32 r6_198
	word32 fp_199
	word32 ap_200
	word32 r9_201
	word32 r11_202
	word32 r5_203
	word32 r4_204
	word32 r3_205
	word32 r10_207
	word32 r1_208
	call r11_174 + 2 (retsize: 4;)
		uses: ap:ap_170,fp:fp_169,r0:r0_165,r1:r1_186,r10:r10_184,r11:r11_174,r2:r2_182,r3:r3_180,r4:r4_178,r5:r5_176,r6:r6_167,r7:r7_161,r8:r8_163,r9:r9_172,sp:sp_160 - 0x00000004,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
		defs: ap:ap_200,fp:fp_199,r0:r0_197,r1:r1_208,r10:r10_207,r11:r11_202,r3:r3_205,r4:r4_204,r5:r5_203,r6:r6_198,r7:r7_195,r8:r8_196,r9:r9_201,sp:sp_194
	Mem212[sp_194 - 0x00000004:word32] = 0x00000000
	word32 sp_216
	word32 r6_220
	word32 r5_225
	word32 r7_217
	word32 r8_218
	word32 fp_221
	word32 ap_222
	word32 r9_223
	word32 r11_224
	word32 r4_226
	word32 r3_227
	word32 r10_229
	word32 r1_230
	word32 r0_219
	word32 r2_228
	call r10_207 + 2 (retsize: 4;)
		uses: ap:ap_200,fp:fp_199,r0:r0_197,r1:r1_208,r10:r10_207,r11:r11_202,r2:0x00000000,r3:r3_205,r4:r4_204,r5:r5_203,r6:r6_198,r7:r7_195,r8:r8_196,r9:r9_201,sp:sp_194 - 0x00000004,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
		defs: ap:ap_222,fp:fp_221,r0:r0_219,r1:r1_230,r10:r10_229,r11:r11_224,r2:r2_228,r3:r3_227,r4:r4_226,r5:r5_225,r6:r6_220,r7:r7_217,r8:r8_218,r9:r9_223,sp:sp_216
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000126A4:
	word32 sp_233 = sp_216 - 0x00000004
	Mem235[sp_233:word32] = r6_220
	word32 r1_266
	call r5_225 + 2 (retsize: 4;)
		uses: ap:ap_250,fp:fp_248,r0:r0_245,r1:r1_265,r10:r10_263,r11:r11_254,r2:r2_261,r3:r3_259,r4:r4_257,r5:r5_239,r6:r6_234,r7:r7_241,r8:r8_243,r9:r9_252,sp:sp_233,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
		defs: ap:ap_251,fp:fp_249,r0:r0_246,r1:r1_266,r10:r10_264,r11:r11_255,r2:r2_262,r3:r3_260,r4:r4_258,r5:r5_256,r6:r6_247,r7:r7_242,r8:r8_244,r9:r9_253,sp:sp_240
	int8 v31_268 = (int8) r0_219
	r1_230 = DPB(r1_266, v31_268, 0)
	branch v31_268 != 0x0D l000126B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000126B1:
	r1_230 = DPB(r1_266, 0x0A, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000126B4:
	branch r2_228 >= r4_226 l000126C3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000126B9:
	Mem289[Mem235[r3_227:word32]:byte] = (byte) r1_230
	r0_219 = r2_228
	r2_228 = r2_228 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000126C3:
	branch (byte) r1_230 != 0x0A l000126A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000126C8:
	Mem300[sp_216 - 0x00000004:word32] = 0x00000001
	word32 sp_306
	word32 r7_309
	word32 r8_312
	word32 r0_315
	word32 r6_318
	word32 fp_321
	word32 ap_324
	word32 r9_327
	word32 r11_330
	word32 r5_333
	word32 r4_335
	word32 r3_337
	word32 r2_339
	word32 r10_340
	word32 r1_341
	call r10_229 + 2 (retsize: 4;)
		uses: ap:ap_251,fp:fp_249,r0:r0_313,r1:r1_285,r10:r10_264,r11:r11_255,r2:r2_338,r3:r3_260,r4:r4_258,r5:r5_256,r6:r6_247,r7:r7_242,r8:r8_244,r9:r9_253,sp:sp_240 - 0x00000004,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
		defs: ap:ap_324,fp:fp_321,r0:r0_315,r1:r1_341,r10:r10_340,r11:r11_330,r2:r2_339,r3:r3_337,r4:r4_335,r5:r5_333,r6:r6_318,r7:r7_309,r8:r8_312,r9:r9_327,sp:sp_306
	Mem345[sp_306 - 0x00000004:word32] = Mem300[r7_309:word32]
	Mem347[sp_306 - 0x00000008:word32] = 0x0000000A
	word32 sp_351
	word32 r7_352
	word32 r8_353
	word32 r0_354
	word32 r6_355
	word32 fp_356
	word32 ap_357
	word32 r9_358
	word32 r11_359
	word32 r5_360
	word32 r4_361
	word32 r3_362
	word32 r2_363
	word32 r10_364
	word32 r1_365
	call Mem347[0x00019268:word32] + 2 (retsize: 4;)
		uses: ap:ap_324,fp:fp_321,r0:r0_315,r1:r1_341,r10:r10_340,r11:r11_330,r2:r2_339,r3:r3_337,r4:r4_335,r5:r5_333,r6:r6_318,r7:r7_309,r8:r8_312,r9:r9_327,sp:sp_306 - 0x00000008,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
		defs: ap:ap_357,fp:fp_356,r0:r0_354,r1:r1_365,r10:r10_364,r11:r11_359,r2:r2_363,r3:r3_362,r4:r4_361,r5:r5_360,r6:r6_355,r7:r7_352,r8:r8_353,r9:r9_358,sp:sp_351
	Mem369[sp_351 - 0x00000004:word32] = Mem347[r7_352:word32]
	call r11_359 + 2 (retsize: 4;)
		uses: ap:ap_357,fp:fp_356,r0:r0_354,r1:r1_365,r10:r10_364,r11:r11_359,r2:r2_363,r3:r3_362,r4:r4_361,r5:r5_360,r6:r6_355,r7:r7_352,r8:r8_353,r9:r9_358,sp:sp_351 - 0x00000004,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
		defs: ap:ap_379,fp:fp_378,r1:r1_387,r10:r10_386,r11:r11_381,r2:r2_385,r3:r3_384,r4:r4_383,r5:r5_382,r6:r6_377,r7:r7_374,r8:r8_375,sp:sp_373
	r9_103 = r8_121 + 15
	r0_123 = r2_140 - 0x00000001
	branch Mem369[Mem369[sp_109 + (r2_140 - 0x00000001):word32]:byte] != 0x0A l00012680
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000126EC:
	word32 r3_394 = Mem369[ap_129 + 8:word32]
	Mem396[r3_394:byte] = 0x00
	Mem398[sp_109 - 0x00000004:word32] = r6_125
	call Mem398[0x00019250:word32] + 2 (retsize: 4;)
		uses: ap:ap_379,fp:fp_378,r0:r2_385 - 0x00000001,r1:r1_387,r10:r10_386,r11:r11_381,r2:r2_385,r3:r3_394,r4:r4_383,r5:r5_382,r6:r6_377,r7:r7_374,r8:r8_375,r9:r8_375 + 15,sp:sp_373 - 0x00000004,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012641:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00012616_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00012702(word32 r0, word32 r2, word32 r5, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r2:[0..31] r5:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00012702_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012702:
	Mem14[r2 + 116:word32] = 0x00000000
	word32 v22_17 = Mem14[Mem14[ap + 8:word32]:word32]
	word32 r4_122 = Mem14[Mem14[ap + 4:word32]:word32]
	word32 sp_102 = fp - 0x00000010
	word32 r1_104 = 0x00000000
	word32 r7_106 = 0x00000001
	word32 r8_108 = 0x00000000
	word32 r6_110 = 0x00000001
	word32 r11_10 = 0x00000000
	word32 r9_114 = 0x00000000
	word32 r10_117 = 0x00000000
	word32 dwLoc0C_241 = v22_17
	word32 dwLoc10_242 = r4_122 - 0x00000001
	branch r4_122 > 0x00000001 l00012732
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012732:
	dwLoc0C_241 = v22_17 + 0x00000004
	branch Mem24[Mem24[v22_17 + 0x00000004:word32]:byte] == 0x2D l00012743
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012743:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012744:
	r0 = Mem30[dwLoc0C_241:word32] + 0x00000001
	r5 = r0 + 0x00000001
	r4_122 = (int32) Mem30[r0:int8]
	branch r4_122 != 0x00000000 l00012758
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012758:
	branch r4_122 > 0x0000007A l000127FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000127FD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001275B_1:
	call 0x00012763 + (r4_122 - 0x0000002D) * 0x00000002 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r4_34,r1:0x00000000,r10:0x00000000,r11:0x00000000,r2:r2,r3:r0_31,r4:r4_34,r5:r0_31 + 0x00000001,r6:0x00000001,r7:0x00000001,r8:0x00000000,r9:0x00000000,sp:fp - 0x00000010,Stack +0000:dwLoc14,Stack +0004:dwLoc10_246,Stack +0008:dwLoc0C_244,Stack +000C:0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012755:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012948:
	word32 v37_69 = dwLoc10_242 - 0x00000001
	dwLoc10_242 = v37_69
	branch v37_69 <= 0x00000000 l0001295D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001294C:
	word32 v38_73 = dwLoc0C_241 + 0x00000004
	dwLoc0C_241 = v38_73
	branch Mem74[Mem74[v38_73:word32]:byte] != 0x2D l0001295D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001295A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012740:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001272F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001295D:
	word32 r3_124 = dwLoc10_242
	word32 v27_82 = dwLoc10_242 - 0x00000001
	branch dwLoc10_242 == 0x00000000 l0001296B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012966:
	branch 0x00000000 == 0x00000000 l0001297F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001297F:
	branch Mem83[r2 + 44:word32] == 0x00000000 l00012994
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012984:
	word32 r0_130
	call Mem98[0x000192E4:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0_128,r1:0x00000000,r10:0x00000000,r11:0x00000000,r2:r2,r3:dwLoc10_249,r4:r4_122,r5:r5_131,r6:0x00000001,r7:0x00000001,r8:0x00000000,r9:0x00000000,sp:fp - 0x00000014,Stack +0004:0x00000001,Stack +0008:v27_82,Stack +000C:dwLoc0C_253,Stack +0010:0x00000000
		defs: ap:ap_121,fp:fp_127,r0:r0_130,r1:r1_104,r10:r10_118,r11:r11_112,r2:r2_119,r3:r3_124,r4:r4_123,r5:r5_133,r6:r6_110,r7:r7_106,r8:r8_108,r9:r9_115,sp:sp_102
	dwLoc14 = 0x00000001
	branch r0_130 != 0x00000000 l00012994
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012991:
	Mem140[r2 + 44:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012994:
	branch Mem146[r2 + 36:word32] < 0x00000000 l000129A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012999:
	branch Mem146[sp_102:word32] <= 0x00000000 l000129A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001299D:
	branch Mem146[r2 + 36:word32] != 0x00000000 l000129A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000129A2:
	Mem161[r2 + 36:word32] = 0x00000003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000129A6:
	word32 r0_167 = Mem166[r2 + 36:word32]
	branch r0_167 > 0x0000000A l000129C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000129C2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000129AA_1:
	call 0x000129AE + r0_167 * 0x00000002 (retsize: 4;)
		uses: ap:ap_205,fp:fp_217,r0:r0_167,r1:r1_176,r10:r10_200,r11:r11_192,r2:r2_145,r3:r3_213,r4:r4_209,r5:r5_222,r6:r6_188,r7:r7_180,r8:r8_184,r9:r9_196,sp:sp_151,Stack +FFFFFFF0:dwLoc14_264,Stack +FFFFFFF4:v27_82,Stack +FFFFFFF8:dwLoc0C_253,Stack +FFFFFFFC:0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00012702_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001296B:
	Mem230[Mem83[ap + 4:word32]:word32] = v27_82
	Mem232[Mem230[ap + 8:word32]:word32] = dwLoc0C_241
	fn00008CCE(r2, ap)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00012A2A(word32 r0, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r11, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r11:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// Trashed: CVZN ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
fn00012A2A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A2A:
	word32 sp_123 = fp - 0x00000004
	word32 r8_1032 = 0x00000000
	branch Mem0[r2 + 28:word32] == 0x00000000 l00012AAB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A49:
	word32 r6_18
	dwLoc08 = 0x00000000
	word32 r0_13 = (uint32) Mem12[r2 + 0x0000C688:word16]
	branch r0_13 != 0x00000001 l00012A5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A5C:
	r6_18 = r5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A57:
	r6_18 = r4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A5F:
	word32 r3_73
	word32 v15_36 = Mem33[r2 + 0x0000C61B:word32]
	word32 v16_39 = Mem37[r2 + 0x0000C613:word32]
	word32 v17_42 = Mem40[r2 + 0x0000C613:word32]
	word32 sp_47
	word32 r8_49
	word32 r2_50
	word32 r0_51
	word32 r4_53
	word32 r6_54
	word32 ap_60
	word32 r7_63
	word32 r5_65
	word32 fp_68
	call Mem43[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0_13,r11:r11,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6_29,r7:r7,r8:0x00000000,sp:fp - 0x0000001C,Stack +0004:v17_42,Stack +0008:v16_39,Stack +000C:v15_36,Stack +0010:r0_13,Stack +0014:r6_29,Stack +0018:0x00000000
		defs: ap:ap_60,fp:fp_68,r0:r0_51,r2:r2_50,r4:r4_53,r5:r5_65,r6:r6_54,r7:r7_63,r8:r8_49,sp:sp_47
	dwLoc0C = r6_18
	dwLoc10 = r0_13
	dwLoc14 = v15_36
	dwLoc18 = v16_39
	dwLoc1C = v17_42
	branch r0_51 >= 0x00000027 l00012A88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A88:
	r3_73 = r4_53 + 39
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A81:
	r3_73 = r4_53 + 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A8C:
	Mem84[sp_47 - 0x00000004:word32] = r3_73
	Mem88[sp_47 - 0x00000008:word32] = r2_50 + 1515
	word32 sp_92
	word32 r8_94
	word32 r2_95
	word32 r0_97
	word32 r4_99
	word32 r6_101
	word32 r3_102
	word32 r7_106
	word32 r5_108
	word32 fp_110
	word32 r11_1054
	call Mem88[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_60,fp:fp_68,r0:r0_51,r11:r11,r2:r2_50,r3:r3_83,r4:r4_53,r5:r5_65,r6:r6_54,r7:r7_63,r8:r8_49,sp:sp_47 - 0x00000008,Stack +FFFFFFE8:v17_42,Stack +FFFFFFEC:v16_39,Stack +FFFFFFF0:v15_36,Stack +FFFFFFF4:r0_13,Stack +FFFFFFF8:r6_29,Stack +FFFFFFFC:0x00000000
		defs: fp:fp_110,r0:r0_97,r11:r11_1054,r2:r2_95,r3:r3_102,r4:r4_99,r5:r5_108,r6:r6_101,r7:r7_106,r8:r8_94,sp:sp_92
	Mem113[sp_92 - 0x00000004:word32] = r0_97
	Mem116[sp_92 - 0x00000008:word32] = r2_95 + 1515
	Mem118[sp_92 - 0x0000000C:word32] = r2_95
	word32 ap_119 = Mem118[r2_95 + 0x0000C839:word32]
	call ap_119 + 2 (retsize: 4;)
		uses: ap:ap_119,fp:fp_110,r0:r0_97,r11:r11_1054,r2:r2_95,r3:r3_102,r4:r4_99,r5:r5_108,r6:r6_101,r7:r7_106,r8:r8_94,sp:sp_92 - 0x0000000C,Stack +FFFFFFE8:v17_42,Stack +FFFFFFEC:v16_39,Stack +FFFFFFF0:v15_36,Stack +FFFFFFF4:r0_13,Stack +FFFFFFF8:r6_29,Stack +FFFFFFFC:0x00000000
		defs: ap:ap_130,fp:fp_133,r0:r0_126,r2:r2_125,r3:r3_129,r4:r4_127,r5:r5_132,r6:r6_128,r7:r7_131,r8:r8_124,sp:sp_123
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012AAB:
	branch Mem136[r2 + 36:word32] > 0x00000009 l00012AB4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012AB4:
	word32 r3_511
	word32 fp_515
	word32 r5_514
	word32 r7_513
	word32 ap_512
	word32 r6_510
	word32 r0_508
	word32 r8_506
	word32 r4_509
	word32 sp_505
	word32 r2_507
	word32 sp_141 = sp_123 - 0x00000004
	Mem142[sp_141:word32] = 0x00000000
	Mem146[sp_141 - 0x00000004:word32] = r4 + 64
	Mem149[sp_141 - 0x00000008:word32] = r2 + 1515
	word32 r7_150 = Mem149[0x000192D0:word32]
	word32 sp_154
	word32 r8_156
	word32 r2_157
	word32 r0_160
	word32 r4_161
	word32 r6_164
	word32 r3_166
	word32 r7_169
	word32 r5_171
	word32 fp_173
	word32 r11_1062
	call r7_150 + 2 (retsize: 4;)
		uses: ap:ap_167,fp:fp_172,r0:r0_158,r11:r11,r2:r2_135,r3:r3_165,r4:r4_144,r5:r5_170,r6:r6_162,r7:r7_150,r8:r8_155,sp:sp_141 - 0x00000008,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_173,r0:r0_160,r11:r11_1062,r2:r2_157,r3:r3_166,r4:r4_161,r5:r5_171,r6:r6_164,r7:r7_169,r8:r8_156,sp:sp_154
	Mem176[sp_154 - 0x00000004:word32] = r0_160
	Mem179[sp_154 - 0x00000008:word32] = r2_157 + 1515
	Mem181[sp_154 - 0x0000000C:word32] = r2_157
	word32 ap_182 = Mem181[r2_157 + 0x0000C839:word32]
	word32 sp_186
	word32 r8_187
	word32 r2_188
	word32 r0_189
	word32 r4_190
	word32 r6_191
	word32 r3_192
	word32 ap_193
	word32 r7_194
	word32 r5_195
	word32 fp_196
	word32 r11_1075
	call ap_182 + 2 (retsize: 4;)
		uses: ap:ap_182,fp:fp_173,r0:r0_160,r11:r11_1062,r2:r2_157,r3:r3_166,r4:r4_161,r5:r5_171,r6:r6_164,r7:r7_169,r8:r8_156,sp:sp_154 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_193,fp:fp_196,r0:r0_189,r11:r11_1075,r2:r2_188,r3:r3_192,r4:r4_190,r5:r5_195,r6:r6_191,r7:r7_194,r8:r8_187,sp:sp_186
	Mem199[sp_186 - 0x00000004:word32] = 0x00000000
	Mem202[sp_186 - 0x00000008:word32] = r4_190 + 99
	Mem205[sp_186 - 0x0000000C:word32] = r2_188 + 1515
	word32 sp_209
	word32 r8_210
	word32 r2_211
	word32 r0_212
	word32 r4_213
	word32 r6_214
	word32 r3_215
	word32 r7_217
	word32 r5_218
	word32 fp_219
	word32 r11_1076
	call r7_194 + 2 (retsize: 4;)
		uses: ap:ap_193,fp:fp_196,r0:r0_189,r11:r11_1075,r2:r2_188,r3:r3_192,r4:r4_190,r5:r5_195,r6:r6_191,r7:r7_194,r8:r8_187,sp:sp_186 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_219,r0:r0_212,r11:r11_1076,r2:r2_211,r3:r3_215,r4:r4_213,r5:r5_218,r6:r6_214,r7:r7_217,r8:r8_210,sp:sp_209
	Mem222[sp_209 - 0x00000004:word32] = r0_212
	Mem225[sp_209 - 0x00000008:word32] = r2_211 + 1515
	Mem227[sp_209 - 0x0000000C:word32] = r2_211
	word32 ap_228 = Mem227[r2_211 + 0x0000C839:word32]
	word32 sp_232
	word32 r8_233
	word32 r2_234
	word32 r0_235
	word32 r4_236
	word32 r6_237
	word32 r3_238
	word32 ap_239
	word32 r7_240
	word32 r5_241
	word32 fp_242
	word32 r11_1077
	call ap_228 + 2 (retsize: 4;)
		uses: ap:ap_228,fp:fp_219,r0:r0_212,r11:r11_1076,r2:r2_211,r3:r3_215,r4:r4_213,r5:r5_218,r6:r6_214,r7:r7_217,r8:r8_210,sp:sp_209 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_239,fp:fp_242,r0:r0_235,r11:r11_1077,r2:r2_234,r3:r3_238,r4:r4_236,r5:r5_241,r6:r6_237,r7:r7_240,r8:r8_233,sp:sp_232
	Mem245[sp_232 - 0x00000004:word32] = 0x00000000
	Mem248[sp_232 - 0x00000008:word32] = Mem245[r2_234 + 128:word32]
	Mem251[sp_232 - 0x0000000C:word32] = Mem248[r2_234 + 128:word32]
	Mem254[sp_232 - 0x00000010:word32] = Mem251[r2_234 + 124:word32]
	Mem257[sp_232 - 0x00000014:word32] = Mem254[r2_234 + 124:word32]
	Mem260[sp_232 - 0x00000018:word32] = r4_236 + 133
	Mem263[sp_232 - 0x0000001C:word32] = r2_234 + 1515
	word32 sp_267
	word32 r8_268
	word32 r2_269
	word32 r0_270
	word32 r4_271
	word32 r6_272
	word32 r3_273
	word32 r7_275
	word32 r5_276
	word32 fp_277
	word32 r11_1078
	call r7_240 + 2 (retsize: 4;)
		uses: ap:ap_239,fp:fp_242,r0:r0_235,r11:r11_1077,r2:r2_234,r3:r3_238,r4:r4_236,r5:r5_241,r6:r6_237,r7:r7_240,r8:r8_233,sp:sp_232 - 0x0000001C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_277,r0:r0_270,r11:r11_1078,r2:r2_269,r3:r3_273,r4:r4_271,r5:r5_276,r6:r6_272,r7:r7_275,r8:r8_268,sp:sp_267
	Mem280[sp_267 - 0x00000004:word32] = r0_270
	Mem283[sp_267 - 0x00000008:word32] = r2_269 + 1515
	Mem285[sp_267 - 0x0000000C:word32] = r2_269
	word32 ap_286 = Mem285[r2_269 + 0x0000C839:word32]
	word32 sp_290
	word32 r8_291
	word32 r2_292
	word32 r4_294
	word32 ap_297
	word32 r7_298
	word32 r5_299
	word32 fp_300
	call ap_286 + 2 (retsize: 4;)
		uses: ap:ap_286,fp:fp_277,r0:r0_270,r11:r11_1078,r2:r2_269,r3:r3_273,r4:r4_271,r5:r5_276,r6:r6_272,r7:r7_275,r8:r8_268,sp:sp_267 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_297,fp:fp_300,r2:r2_292,r4:r4_294,r5:r5_299,r7:r7_298,r8:r8_291,sp:sp_290
	word32 r6_302 = (uint32) Mem285[r2_292 + 0x0000C682:word16]
	branch r6_302 != 0x00000000 l00012BA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012BA4:
	word32 r3_313
	Mem308[sp_290 - 0x00000004:word32] = 0x00000000
	word32 r0_309 = (uint32) Mem308[r2_292 + 0x0000C686:word16]
	branch r0_309 != 0x00000001 l00012BB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012BB8:
	r3_313 = r5_299 + 16
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012BB2:
	r3_313 = r5_299 + 20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012BBC:
	word32 r3_398
	Mem324[sp_290 - 0x00000008:word32] = r3_313
	Mem327[sp_290 - 0x0000000C:word32] = r0_309
	word32 ap_329 = (uint32) Mem327[r2_292 + 0x0000C684:word16]
	Mem332[sp_290 - 0x00000010:word32] = ap_329 + 0x00000001
	Mem336[sp_290 - 0x00000014:word32] = r6_302 + 0x00000001
	Mem340[sp_290 - 0x00000018:word32] = r4_294 + 583
	Mem343[sp_290 - 0x0000001C:word32] = r2_292 + 1515
	word32 sp_348
	word32 r8_350
	word32 r2_351
	word32 r0_352
	word32 r4_353
	word32 r6_354
	word32 r3_355
	word32 r7_357
	word32 r5_359
	word32 fp_361
	word32 r11_1080
	call r7_298 + 2 (retsize: 4;)
		uses: ap:ap_329 + 0x00000001,fp:fp_300,r0:r0_309,r11:r11,r2:r2_292,r3:r3_323,r4:r4_294,r5:r5_299,r6:r6_302 + 0x00000001,r7:r7_298,r8:r8_291,sp:sp_290 - 0x0000001C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_361,r0:r0_352,r11:r11_1080,r2:r2_351,r3:r3_355,r4:r4_353,r5:r5_359,r6:r6_354,r7:r7_357,r8:r8_350,sp:sp_348
	Mem364[sp_348 - 0x00000004:word32] = r0_352
	Mem367[sp_348 - 0x00000008:word32] = r2_351 + 1515
	Mem369[sp_348 - 0x0000000C:word32] = r2_351
	word32 ap_370 = Mem369[r2_351 + 0x0000C839:word32]
	word32 sp_374
	word32 r8_375
	word32 r2_376
	word32 r4_378
	word32 r6_379
	word32 ap_381
	word32 r7_382
	word32 r5_383
	word32 fp_384
	call ap_370 + 2 (retsize: 4;)
		uses: ap:ap_370,fp:fp_361,r0:r0_352,r11:r11_1080,r2:r2_351,r3:r3_355,r4:r4_353,r5:r5_359,r6:r6_354,r7:r7_357,r8:r8_350,sp:sp_348 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_381,fp:fp_384,r2:r2_376,r4:r4_378,r5:r5_383,r6:r6_379,r7:r7_382,r8:r8_375,sp:sp_374
	Mem387[sp_374 - 0x00000004:word32] = 0x00000000
	Mem390[sp_374 - 0x00000008:word32] = Mem387[r2_376 + 0x0000C68A:word32]
	Mem393[sp_374 - 0x0000000C:word32] = Mem390[r2_376 + 0x0000C68A:word32]
	word32 r0_394 = (uint32) Mem393[r2_376 + 0x0000C688:word16]
	branch r0_394 != 0x00000001 l00012C0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012C0C:
	r3_398 = r5_383 + 23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012C06:
	r3_398 = r5_383 + 31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012C10:
	Mem409[sp_374 - 0x00000010:word32] = r3_398
	Mem412[sp_374 - 0x00000014:word32] = r0_394
	Mem416[sp_374 - 0x00000018:word32] = r4_378 + 726
	Mem420[sp_374 - 0x0000001C:word32] = r2_376 + 1515
	word32 r11_1088
	word32 sp_425
	word32 r8_427
	word32 r2_428
	word32 r0_429
	word32 r4_430
	word32 r6_432
	word32 r3_433
	word32 r7_436
	word32 r5_438
	word32 fp_440
	call r7_382 + 2 (retsize: 4;)
		uses: ap:ap_381,fp:fp_384,r0:r0_394,r11:r11,r2:r2_376,r3:r3_408,r4:r4_378,r5:r5_383,r6:r6_379,r7:r7_382,r8:r8_375,sp:sp_374 - 0x0000001C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_440,r0:r0_429,r11:r11_1088,r2:r2_428,r3:r3_433,r4:r4_430,r5:r5_438,r6:r6_432,r7:r7_436,r8:r8_427,sp:sp_425
	Mem443[sp_425 - 0x00000004:word32] = r0_429
	Mem446[sp_425 - 0x00000008:word32] = r2_428 + 1515
	Mem448[sp_425 - 0x0000000C:word32] = r2_428
	word32 ap_449 = Mem448[r2_428 + 0x0000C839:word32]
	word32 r11_1095
	word32 sp_453
	word32 r8_454
	word32 r2_455
	word32 r0_456
	word32 r4_457
	word32 r6_458
	word32 r3_459
	word32 ap_460
	word32 r7_461
	word32 r5_462
	word32 fp_463
	call ap_449 + 2 (retsize: 4;)
		uses: ap:ap_449,fp:fp_440,r0:r0_429,r11:r11_1088,r2:r2_428,r3:r3_433,r4:r4_430,r5:r5_438,r6:r6_432,r7:r7_436,r8:r8_427,sp:sp_425 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_460,fp:fp_463,r0:r0_456,r11:r11_1095,r2:r2_455,r3:r3_459,r4:r4_457,r5:r5_462,r6:r6_458,r7:r7_461,r8:r8_454,sp:sp_453
	Mem466[sp_453 - 0x00000004:word32] = 0x00000000
	Mem469[sp_453 - 0x00000008:word32] = Mem466[r2_455 + 0x0000C68E:word32]
	Mem472[sp_453 - 0x0000000C:word32] = Mem469[r2_455 + 0x0000C68E:word32]
	Mem475[sp_453 - 0x00000010:word32] = r4_457 + 857
	Mem478[sp_453 - 0x00000014:word32] = r2_455 + 1515
	word32 r11_1096
	word32 sp_482
	word32 r8_483
	word32 r2_484
	word32 r0_485
	word32 r4_486
	word32 r6_487
	word32 r3_488
	word32 r7_490
	word32 r5_491
	word32 fp_492
	call r7_461 + 2 (retsize: 4;)
		uses: ap:ap_460,fp:fp_463,r0:r0_456,r11:r11_1095,r2:r2_455,r3:r3_459,r4:r4_457,r5:r5_462,r6:r6_458,r7:r7_461,r8:r8_454,sp:sp_453 - 0x00000014,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_492,r0:r0_485,r11:r11_1096,r2:r2_484,r3:r3_488,r4:r4_486,r5:r5_491,r6:r6_487,r7:r7_490,r8:r8_483,sp:sp_482
	Mem495[sp_482 - 0x00000004:word32] = r0_485
	Mem498[sp_482 - 0x00000008:word32] = r2_484 + 1515
	Mem500[sp_482 - 0x0000000C:word32] = r2_484
	word32 ap_501 = Mem500[r2_484 + 0x0000C839:word32]
	call ap_501 + 2 (retsize: 4;)
		uses: ap:ap_501,fp:fp_492,r0:r0_485,r11:r11_1096,r2:r2_484,r3:r3_488,r4:r4_486,r5:r5_491,r6:r6_487,r7:r7_490,r8:r8_483,sp:sp_482 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_512,fp:fp_515,r0:r0_508,r2:r2_507,r3:r3_511,r4:r4_509,r5:r5_514,r6:r6_510,r7:r7_513,r8:r8_506,sp:sp_505
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012B2D:
	word32 r3_529
	Mem518[sp_290 - 0x00000004:word32] = 0x00000000
	Mem521[sp_290 - 0x00000008:word32] = Mem518[r2_292 + 0x0000C68A:word32]
	Mem524[sp_290 - 0x0000000C:word32] = Mem521[r2_292 + 0x0000C68A:word32]
	word32 r0_525 = (uint32) Mem524[r2_292 + 0x0000C688:word16]
	branch r0_525 != 0x00000001 l00012B50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012B50:
	r3_529 = r5_299 + 2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012B47:
	r3_529 = r5_299 + 10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012B54:
	Mem540[sp_290 - 0x00000010:word32] = r3_529
	Mem543[sp_290 - 0x00000014:word32] = r0_525
	Mem547[sp_290 - 0x00000018:word32] = r4_294 + 332
	Mem551[sp_290 - 0x0000001C:word32] = r2_292 + 1515
	word32 r11_1098
	word32 sp_556
	word32 r8_558
	word32 r2_559
	word32 r0_560
	word32 r4_561
	word32 r6_563
	word32 r3_564
	word32 r7_567
	word32 r5_569
	word32 fp_571
	call r7_298 + 2 (retsize: 4;)
		uses: ap:ap_297,fp:fp_300,r0:r0_525,r11:r11,r2:r2_292,r3:r3_539,r4:r4_294,r5:r5_299,r6:r6_302,r7:r7_298,r8:r8_291,sp:sp_290 - 0x0000001C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_571,r0:r0_560,r11:r11_1098,r2:r2_559,r3:r3_564,r4:r4_561,r5:r5_569,r6:r6_563,r7:r7_567,r8:r8_558,sp:sp_556
	Mem574[sp_556 - 0x00000004:word32] = r0_560
	Mem577[sp_556 - 0x00000008:word32] = r2_559 + 1515
	Mem579[sp_556 - 0x0000000C:word32] = r2_559
	word32 ap_580 = Mem579[r2_559 + 0x0000C839:word32]
	word32 r11_1105
	word32 sp_584
	word32 r8_585
	word32 r2_586
	word32 r0_587
	word32 r4_588
	word32 r6_589
	word32 r3_590
	word32 ap_591
	word32 r7_592
	word32 r5_593
	word32 fp_594
	call ap_580 + 2 (retsize: 4;)
		uses: ap:ap_580,fp:fp_571,r0:r0_560,r11:r11_1098,r2:r2_559,r3:r3_564,r4:r4_561,r5:r5_569,r6:r6_563,r7:r7_567,r8:r8_558,sp:sp_556 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_591,fp:fp_594,r0:r0_587,r11:r11_1105,r2:r2_586,r3:r3_590,r4:r4_588,r5:r5_593,r6:r6_589,r7:r7_592,r8:r8_585,sp:sp_584
	Mem597[sp_584 - 0x00000004:word32] = 0x00000000
	Mem600[sp_584 - 0x00000008:word32] = Mem597[r2_586 + 0x0000C68E:word32]
	Mem603[sp_584 - 0x0000000C:word32] = Mem600[r2_586 + 0x0000C68E:word32]
	Mem606[sp_584 - 0x00000010:word32] = r4_588 + 537
	Mem609[sp_584 - 0x00000014:word32] = r2_586 + 1515
	word32 r11_1106
	word32 sp_613
	word32 r8_614
	word32 r2_615
	word32 r0_616
	word32 r4_617
	word32 r6_618
	word32 r3_619
	word32 r7_621
	word32 r5_622
	word32 fp_623
	call r7_592 + 2 (retsize: 4;)
		uses: ap:ap_591,fp:fp_594,r0:r0_587,r11:r11_1105,r2:r2_586,r3:r3_590,r4:r4_588,r5:r5_593,r6:r6_589,r7:r7_592,r8:r8_585,sp:sp_584 - 0x00000014,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_623,r0:r0_616,r11:r11_1106,r2:r2_615,r3:r3_619,r4:r4_617,r5:r5_622,r6:r6_618,r7:r7_621,r8:r8_614,sp:sp_613
	Mem626[sp_613 - 0x00000004:word32] = r0_616
	Mem629[sp_613 - 0x00000008:word32] = r2_615 + 1515
	Mem631[sp_613 - 0x0000000C:word32] = r2_615
	word32 ap_632 = Mem631[r2_615 + 0x0000C839:word32]
	call ap_632 + 2 (retsize: 4;)
		uses: ap:ap_632,fp:fp_623,r0:r0_616,r11:r11_1106,r2:r2_615,r3:r3_619,r4:r4_617,r5:r5_622,r6:r6_618,r7:r7_621,r8:r8_614,sp:sp_613 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_643,fp:fp_646,r0:r0_639,r2:r2_638,r3:r3_642,r4:r4_640,r5:r5_645,r6:r6_641,r7:r7_644,r8:r8_637,sp:sp_636
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012C5C:
	branch Mem649[r2_507 + 0x0000C692:word16] != 0x0000 l00012C8C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012C8C:
	word32 sp_655 = sp_505 - 0x00000004
	Mem656[sp_655:word32] = 0x00000000
	Mem659[sp_655 - 0x00000004:uint32] = (uint32) Mem656[r2_507 + 0x0000C692:word16]
	Mem663[sp_655 - 0x00000008:word32] = r4_509 + 958
	Mem666[sp_655 - 0x0000000C:word32] = r2_507 + 1515
	word32 r3_667 = Mem666[0x000192D0:word32]
	word32 r11_1108
	word32 sp_671
	word32 r8_673
	word32 r2_674
	word32 r0_676
	word32 r4_677
	word32 r6_679
	word32 r3_680
	word32 r7_684
	word32 r5_686
	word32 fp_688
	call r3_667 + 2 (retsize: 4;)
		uses: ap:ap_681,fp:fp_687,r0:r0_675,r11:r11_770,r2:r2_648,r3:r3_667,r4:r4_661,r5:r5_685,r6:r6_678,r7:r7_683,r8:r8_672,sp:sp_655 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_688,r0:r0_676,r11:r11_1108,r2:r2_674,r3:r3_680,r4:r4_677,r5:r5_686,r6:r6_679,r7:r7_684,r8:r8_673,sp:sp_671
	Mem691[sp_671 - 0x00000004:word32] = r0_676
	Mem694[sp_671 - 0x00000008:word32] = r2_674 + 1515
	Mem696[sp_671 - 0x0000000C:word32] = r2_674
	word32 ap_697 = Mem696[r2_674 + 0x0000C839:word32]
	word32 sp_701
	word32 r8_702
	word32 r2_703
	word32 r0_704
	word32 r4_705
	word32 r6_706
	word32 r3_707
	word32 ap_708
	word32 r7_709
	word32 r5_710
	word32 fp_711
	word32 r11_1115
	call ap_697 + 2 (retsize: 4;)
		uses: ap:ap_697,fp:fp_688,r0:r0_676,r11:r11_1108,r2:r2_674,r3:r3_680,r4:r4_677,r5:r5_686,r6:r6_679,r7:r7_684,r8:r8_673,sp:sp_671 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_708,fp:fp_711,r0:r0_704,r11:r11_1115,r2:r2_703,r3:r3_707,r4:r4_705,r5:r5_710,r6:r6_706,r7:r7_709,r8:r8_702,sp:sp_701
	Mem714[sp_701 - 0x00000004:word32] = 0x00000000
	Mem717[sp_701 - 0x00000008:word32] = r4_705 + 1032
	Mem720[sp_701 - 0x0000000C:word32] = r2_703 + 1515
	word32 sp_724
	word32 r8_725
	word32 r2_726
	word32 r0_727
	word32 r4_728
	word32 r6_729
	word32 r3_730
	word32 r7_732
	word32 r5_733
	word32 fp_734
	word32 r11_1116
	call r3_707 + 2 (retsize: 4;)
		uses: ap:ap_708,fp:fp_711,r0:r0_704,r11:r11_1115,r2:r2_703,r3:r3_707,r4:r4_705,r5:r5_710,r6:r6_706,r7:r7_709,r8:r8_702,sp:sp_701 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_734,r0:r0_727,r11:r11_1116,r2:r2_726,r3:r3_730,r4:r4_728,r5:r5_733,r6:r6_729,r7:r7_732,r8:r8_725,sp:sp_724
	Mem737[sp_724 - 0x00000004:word32] = r0_727
	Mem740[sp_724 - 0x00000008:word32] = r2_726 + 1515
	Mem742[sp_724 - 0x0000000C:word32] = r2_726
	word32 ap_743 = Mem742[r2_726 + 0x0000C839:word32]
	word32 sp_747
	word32 r2_749
	word32 r4_751
	word32 r6_752
	word32 r3_753
	word32 ap_754
	word32 r7_755
	word32 r5_756
	word32 fp_757
	word32 r8_748
	call ap_743 + 2 (retsize: 4;)
		uses: ap:ap_743,fp:fp_734,r0:r0_727,r11:r11_1116,r2:r2_726,r3:r3_730,r4:r4_728,r5:r5_733,r6:r6_729,r7:r7_732,r8:r8_725,sp:sp_724 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_754,fp:fp_757,r2:r2_749,r3:r3_753,r4:r4_751,r5:r5_756,r6:r6_752,r7:r7_755,r8:r8_748,sp:sp_747
	Mem760[sp_747 - 0x00000004:word32] = 0x00000001
	Mem763[sp_747 - 0x00000008:uint32] = (uint32) Mem760[r2_749 + 0x0000C692:word16]
	word32 ap_767
	word32 fp_768
	word32 r11_770
	word32 sp_771
	word32 r0_769 = fn0000DC76(ap_754, fp_757, out r11_770, out ap_767, out fp_768, out sp_771)
	branch r0_769 == 0x00000000 l00012CEF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012CEC:
	r8_748 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012CEF:
	Mem786[sp_771 - 0x00000004:word32] = 0x00000000
	Mem790[sp_771 - 0x00000008:word32] = r4_751 + 1108
	Mem794[sp_771 - 0x0000000C:word32] = r2_749 + 1515
	word32 sp_799
	word32 r8_801
	word32 r2_802
	word32 r0_804
	word32 r4_805
	word32 r6_807
	word32 r3_808
	word32 r7_812
	word32 r5_814
	word32 fp_816
	word32 r11_818
	call r3_753 + 2 (retsize: 4;)
		uses: ap:ap_767,fp:fp_768,r0:r0_769,r11:r11_770,r2:r2_749,r3:r3_753,r4:r4_751,r5:r5_756,r6:r6_752,r7:r7_755,r8:r8_800,sp:sp_771 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_816,r0:r0_804,r11:r11_818,r2:r2_802,r3:r3_808,r4:r4_805,r5:r5_814,r6:r6_807,r7:r7_812,r8:r8_801,sp:sp_799
	Mem821[sp_799 - 0x00000004:word32] = r0_804
	Mem824[sp_799 - 0x00000008:word32] = r2_802 + 1515
	Mem826[sp_799 - 0x0000000C:word32] = r2_802
	word32 ap_827 = Mem826[r2_802 + 0x0000C839:word32]
	word32 sp_831
	word32 r0_834
	word32 ap_838
	call ap_827 + 2 (retsize: 4;)
		uses: ap:ap_827,fp:fp_816,r0:r0_804,r11:r11_818,r2:r2_802,r3:r3_808,r4:r4_805,r5:r5_814,r6:r6_807,r7:r7_812,r8:r8_801,sp:sp_799 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_838,fp:fp_841,r0:r0_834,r11:r11_842,r2:r2_833,r3:r3_837,r4:r4_835,r5:r5_840,r6:r6_836,r7:r7_839,r8:r8_832,sp:sp_831
	branch r8_1032 == 0x00000000 l00012D7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012D12:
	Mem849[sp_831 - 0x00000004:word32] = 0x00000000
	Mem852[sp_831 - 0x00000008:word32] = r4 + 1184
	Mem855[sp_831 - 0x0000000C:word32] = r2 + 1515
	word32 sp_859
	word32 r8_860
	word32 r2_861
	word32 r0_862
	word32 r4_863
	word32 r6_864
	word32 r3_865
	word32 r7_867
	word32 r5_868
	word32 fp_869
	word32 r11_870
	call r3 + 2 (retsize: 4;)
		uses: ap:ap_838,fp:fp_841,r0:r0_834,r11:r11_842,r2:r2_833,r3:r3_837,r4:r4_835,r5:r5_840,r6:r6_836,r7:r7_839,r8:r8_832,sp:sp_831 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_869,r0:r0_862,r11:r11_870,r2:r2_861,r3:r3_865,r4:r4_863,r5:r5_868,r6:r6_864,r7:r7_867,r8:r8_860,sp:sp_859
	Mem873[sp_859 - 0x00000004:word32] = r0_862
	Mem876[sp_859 - 0x00000008:word32] = r2_861 + 1515
	Mem878[sp_859 - 0x0000000C:word32] = r2_861
	word32 ap_879 = Mem878[r2_861 + 0x0000C839:word32]
	call ap_879 + 2 (retsize: 4;)
		uses: ap:ap_879,fp:fp_869,r0:r0_862,r11:r11_870,r2:r2_861,r3:r3_865,r4:r4_863,r5:r5_868,r6:r6_864,r7:r7_867,r8:r8_860,sp:sp_859 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_893,r11:r11_894,r2:r2_885,r3:r3_889,r4:r4_887,r5:r5_892,r6:r6_888,r7:r7_891,r8:r8_884
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012C64:
	word32 sp_896 = sp_505 - 0x00000004
	Mem897[sp_896:word32] = 0x00000000
	Mem900[sp_896 - 0x00000004:word32] = r4_509 + 926
	Mem903[sp_896 - 0x00000008:word32] = r2_507 + 1515
	word32 sp_907
	word32 r8_908
	word32 r2_909
	word32 r0_910
	word32 r4_911
	word32 r6_912
	word32 r3_914
	word32 r7_916
	word32 r5_917
	word32 fp_918
	word32 r11_927
	call Mem903[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_681,fp:fp_687,r0:r0_675,r11:r11,r2:r2_648,r3:r3_913,r4:r4_661,r5:r5_685,r6:r6_678,r7:r7_683,r8:r8_672,sp:sp_896 - 0x00000008,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_918,r0:r0_910,r11:r11_927,r2:r2_909,r3:r3_914,r4:r4_911,r5:r5_917,r6:r6_912,r7:r7_916,r8:r8_908,sp:sp_907
	Mem930[sp_907 - 0x00000004:word32] = r0_910
	Mem933[sp_907 - 0x00000008:word32] = r2_909 + 1515
	Mem935[sp_907 - 0x0000000C:word32] = r2_909
	word32 ap_936 = Mem935[r2_909 + 0x0000C839:word32]
	call ap_936 + 2 (retsize: 4;)
		uses: ap:ap_936,fp:fp_918,r0:r0_910,r11:r11_927,r2:r2_909,r3:r3_914,r4:r4_911,r5:r5_917,r6:r6_912,r7:r7_916,r8:r8_908,sp:sp_907 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_950,r11:r11_951,r2:r2_942,r3:r3_946,r4:r4_944,r5:r5_949,r6:r6_945,r7:r7_948,r8:r8_941
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012AB1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012D34:
	branch Mem136[r2 + 92:word32] == 0x00000000 l00012D7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012D39:
	branch Mem136[r2 + 0x0000C692:word16] == 0x0000 l00012D7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012D41:
	word32 sp_961 = sp_123 - 0x00000004
	Mem962[sp_961:word32] = 0x00000001
	Mem965[sp_961 - 0x00000004:uint32] = (uint32) Mem962[r2 + 0x0000C692:word16]
	word32 ap_969
	word32 sp_973
	word32 r0_971 = fn0000DC76(ap, fp, out r11, out ap_969, out fp, out sp_973)
	branch r0_971 == 0x00000000 l00012D7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012D55:
	Mem984[sp_973 - 0x00000004:uint32] = 0x00000401
	Mem987[sp_973 - 0x00000008:word32] = r4 + 1222
	Mem990[sp_973 - 0x0000000C:word32] = r2 + 1515
	word32 sp_994
	word32 r8_995
	word32 r2_996
	word32 r0_997
	word32 r4_998
	word32 r6_999
	word32 r3_1000
	word32 r7_1003
	word32 r5_1004
	word32 fp_1005
	word32 r11_1006
	call Mem990[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_969,fp:fp_970,r0:r0_971,r11:r11_972,r2:r2_135,r3:r3_165,r4:r4_144,r5:r5_170,r6:r6_162,r7:r7_1002,r8:r8_155,sp:sp_973 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_1005,r0:r0_997,r11:r11_1006,r2:r2_996,r3:r3_1000,r4:r4_998,r5:r5_1004,r6:r6_999,r7:r7_1003,r8:r8_995,sp:sp_994
	Mem1009[sp_994 - 0x00000004:word32] = r0_997
	Mem1012[sp_994 - 0x00000008:word32] = r2_996 + 1515
	Mem1014[sp_994 - 0x0000000C:word32] = r2_996
	word32 ap_1015 = Mem1014[r2_996 + 0x0000C839:word32]
	call ap_1015 + 2 (retsize: 4;)
		uses: ap:ap_1015,fp:fp_1005,r0:r0_997,r11:r11_1006,r2:r2_996,r3:r3_1000,r4:r4_998,r5:r5_1004,r6:r6_999,r7:r7_1003,r8:r8_995,sp:sp_994 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_1029,r11:r11_1030,r2:r2_1021,r3:r3_1025,r4:r4_1023,r5:r5_1028,r6:r6_1024,r7:r7_1027
	r8_1032 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012D7E:
	word32 sp_1042 = fp - 0x00000004
	word32 fp_1044 = Mem1043[sp_1042 + 0x00000010:word32]
	word32 ap_1045 = Mem1043[sp_1042 + 0x0000000C:word32]
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8_1032
	r11Out = r11
	apOut = ap_1045
	fpOut = fp_1044
	spOut = sp_1042
	return r8_1032
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00012A2A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00012D86(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r8, word32 r9, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00012D86_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012D86:
	word32 sp_167 = fp - 0x00000014
	word32 r5_182 = 0x00000000
	word32 r10_214 = 0x00000000
	word32 r6_181 = 0x00000000
	word32 r7_25 = 0x00000000
	branch Mem10[r3 + 100:word32] <= 0x00000000 l00012DCB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012DA8:
	word32 v17_16 = Mem10[r3 + 100:word32] << 2
	call Mem17[0x000192B4:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r1:r1,r10:0x00000000,r2:r2,r3:r3,r4:r4,r5:0x00000000,r6:0x00000000,r7:0x00000000,r8:r8,r9:r9,sp:fp - 0x00000018,Stack +0004:v17_16,Stack +000A:0x0000,Stack +000C:0x0000000000000000
		defs: ap:ap_39,fp:fp_35,r0:r0_29,r10:r10_22,r2:r2_31,r3:r3_27,r4:r4_33,r5:r5_21,r7:r7_26,r8:r8_41,r9:r9_37,sp:sp_20
	dwLoc18 = v17_16
	r6_181 = r0
	branch r0 == 0x00000000 l00012DCB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012DB9:
	r2 = 0x00000000
	branch Mem17[r3 + 100:word32] <= 0x00000000 l00012DCB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012DC0:
	Mem54[r0:word32] = 0x00000000
	r2 = r2 + 0x00000001
	branch r2 < Mem54[r3 + 100:word32] l00012DC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012DCB:
	branch Mem62[r3 + 104:word32] <= 0x00000000 l00012DF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012DD0:
	word32 sp_68 = sp_167 - 0x00000004
	Mem70[sp_68:word32] = Mem62[r3 + 104:word32] << 2
	call Mem70[0x000192B4:word32] + 2 (retsize: 4;)
		uses: ap:ap_100,fp:fp_94,r0:r0_86,r1:r1,r10:r10_77,r2:r2_89,r3:r3_61,r4:r4_91,r5:r5_74,r6:r6_80,r7:r7_82,r8:r8_103,r9:r9_97,sp:sp_68,Stack +FFFFFFEC:dwLoc18_995,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
		defs: ap:ap_102,fp:fp_96,r0:r0_88,r10:r10_79,r3:r3_85,r4:r4_93,r5:r5_76,r6:r6_81,r8:r8_105,sp:sp_73
	branch r0 == 0x00000000 l00012DF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012DE1:
	word32 r2_112 = 0x00000000
	branch Mem70[r3 + 104:word32] <= 0x00000000 l00012DF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012DE8:
	Mem118[r0:word32] = 0x00000000
	r2_112 = r2_112 + 0x00000001
	branch r2_112 < Mem118[r3 + 104:word32] l00012DE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012DF3:
	word32 r4_139
	Mem127[r3 + 40:word32] = 0x00000000
	Mem129[r3 + 1511:word32] = r3 + 167
	word32 r2_130 = Mem129[r3 + 1511:word32]
	Mem132[r2_130 + 20:byte] = Mem129[r2_130 + 20:byte] & ~0x08
	branch Mem132[r3 + 0x0000C67E:word32] != 0x00000004 l00012E14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E14:
	r4_139 = DPB(r4, 0x00, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E0F:
	r4_139 = DPB(r4, 0x04, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E16:
	Mem154[fp + -8:int32] = (int32) (int8) r4_139
	word32 r9_155 = 0x00000000
	branch (uint32) Mem154[r3 + 0x0000C688:word16] > 0x00000000 l00012E2B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E2B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E3C:
	word32 sp_168 = sp_167 - 0x00000004
	Mem169[sp_168:word32] = 0x00000004
	Mem173[sp_168 - 0x00000004:word32] = r3 + 152
	word32 ap_183
	word32 fp_184
	word32 r2_186
	word32 r3_187
	word32 r4_188
	word32 r5_189
	word32 r6_190
	word32 r7_191
	word32 sp_192
	word32 r0_185 = fn0000D5BE(r0, r3, r4_139, r5_182, r6_181, ap, fp, out r2_186, out r3_187, out r4_188, out r5_189, out r6_190, out r7_191, out ap_183, out fp_184, out sp_192)
	branch r0_185 != 0x00000000 l00012E51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E51:
	Mem202[sp_192 - 0x00000004:word32] = 0x00000004
	Mem205[sp_192 - 0x00000008:word32] = r3_187 + 0x0000C634
	Mem208[sp_192 - 0x0000000C:word32] = r3_187 + 152
	word32 sp_212
	word32 r5_213
	word32 r10_215
	word32 r6_216
	word32 r3_218
	word32 r0_219
	word32 r4_221
	word32 fp_222
	word32 r9_224
	word32 ap_225
	word32 r8_227
	call Mem208[0x000192D8:word32] + 2 (retsize: 4;)
		uses: ap:ap_183,fp:fp_184,r0:r0_185,r1:r1_233,r10:r10_214,r2:r2_186,r3:r3_187,r4:r4_188,r5:r5_189,r6:r6_190,r7:r7_191,r8:r8_226,r9:r9_223,sp:sp_192 - 0x0000000C,Stack +FFFFFFEC:dwLoc18_995,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
		defs: ap:ap_225,fp:fp_222,r0:r0_219,r10:r10_215,r3:r3_218,r4:r4_221,r5:r5_213,r6:r6_216,r8:r8_227,r9:r9_224,sp:sp_212
	branch r0_219 == 0x00000000 l00012E96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E96:
	word32 ap_234
	word32 fp_235
	word32 r1_237
	word32 r2_238
	word32 r3_239
	word32 r4_240
	word32 r5_241
	word32 r6_242
	word32 r7_243
	word32 sp_244
	word32 r0_236 = fn00011C0A(r0_219, r1, r3_218, r4_221, r5_213, r6_216, ap_225, fp_222, out r1_237, out r2_238, out r3_239, out r4_240, out r5_241, out r6_242, out r7_243, out ap_234, out fp_235, out sp_244)
	branch r0_236 == 0x00000000 l00012EA2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012EA2:
	Mem254[sp_244 - 0x00000004:word32] = 0x00000002
	Mem257[sp_244 - 0x00000008:uint32] = (uint32) Mem254[r3_239 + 0x0000C670:word16]
	word32 r7_265
	word32 r2_268
	word32 r9_271
	call r8_227 + 2 (retsize: 4;)
		uses: ap:ap_234,fp:fp_235,r0:r0_236,r1:r1_237,r10:r10_215,r2:r2_238,r3:r3_239,r4:r4_240,r5:r5_241,r6:r6_242,r7:r7_243,r8:r8_227,r9:r9_224,sp:sp_244 - 0x00000008,Stack +FFFFFFEC:dwLoc18_995,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
		defs: ap:ap_272,fp:fp_270,r0:r0_267,r1:r1_274,r10:r10_263,r2:r2_268,r3:r3_266,r4:r4_269,r5:r5_262,r6:r6_264,r7:r7_265,r8:r8_273,r9:r9_271,sp:sp_261
	branch r0 == 0x00000000 l00012EBB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012EB2:
	r10_214 = r0
	branch r0 <= 0x00000001 l00012EBB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012EBB:
	branch Mem257[r3 + 108:word32] != 0x00000000 l00012F3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012EC0:
	ap = Mem257[r3 + 144:word32] - 0x00000004
	r5_182 = 0x00000000
	r2_268 = ap + 0x00000004
	branch Mem257[ap + 0x00000004:word32] == 0x00000000 l00012EFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012ED0:
	word32 sp_298 = sp_167 - 0x00000004
	Mem302[sp_298:word32] = Mem300[r3 + 16:word32]
	Mem306[sp_298 - 0x00000004:word32] = Mem302[r2_268:word32]
	Mem309[sp_298 - 0x00000008:word32] = r3 + 0x0000C701
	call r4_139 + 2 (retsize: 4;)
		uses: ap:ap_332,fp:fp_328,r0:r0_324,r1:r1_336,r10:r10_317,r2:r2_304,r3:r3_299,r4:r4_313,r5:r5_315,r6:r6_319,r7:r7_321,r8:r8_334,r9:r9_330,sp:sp_298 - 0x00000008,Stack +FFFFFFEC:dwLoc18_995,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
		defs: ap:ap_333,fp:fp_329,r0:r0_325,r1:r1_337,r10:r10_318,r2:r2_326,r3:r3_323,r4:r4_327,r5:r5_316,r6:r6_320,r7:r7_322,r8:r8_335,r9:r9_331,sp:sp_314
	branch r0 == 0x00000000 l00012EF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012EF8:
	r2_268 = r2_268 + 0x00000004
	branch Mem309[r2_268 + 0x00000004:word32] != 0x00000000 l00012ED0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012EE2:
	r5_182 = 0x00000001
	branch r6_181 == 0x00000000 l00012EFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012EE9:
	ap = (r2_268 - Mem309[r3 + 144:word32]) / 0x00000004
	Mem356[r6_181:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012EFF:
	branch r5_182 == 0x00000000 l00012F3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F03:
	word32 r2_367 = Mem366[r3 + 148:word32] - 0x00000004
	r2_268 = r2_367 + 0x00000004
	branch Mem366[r2_367 + 0x00000004:word32] == 0x00000000 l00012F3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F10:
	word32 sp_374 = sp_167 - 0x00000004
	Mem378[sp_374:word32] = Mem376[r3 + 16:word32]
	Mem382[sp_374 - 0x00000004:word32] = Mem378[r2_268:word32]
	Mem385[sp_374 - 0x00000008:word32] = r3 + 0x0000C701
	call r4_139 + 2 (retsize: 4;)
		uses: ap:ap_408,fp:fp_404,r0:r0_400,r1:r1_412,r10:r10_393,r2:r2_380,r3:r3_375,r4:r4_389,r5:r5_391,r6:r6_395,r7:r7_397,r8:r8_410,r9:r9_406,sp:sp_374 - 0x00000008,Stack +FFFFFFEC:dwLoc18_995,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
		defs: ap:ap_409,fp:fp_405,r0:r0_401,r1:r1_413,r10:r10_394,r2:r2_402,r3:r3_399,r4:r4_403,r5:r5_392,r6:r6_396,r7:r7_398,r8:r8_411,r9:r9_407,sp:sp_390
	branch r0 == 0x00000000 l00012F38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F38:
	r2_268 = r2_268 + 0x00000004
	branch Mem385[r2_268 + 0x00000004:word32] != 0x00000000 l00012F10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F22:
	r5_182 = 0x00000000
	branch r7_265 == 0x00000000 l00012F3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F28:
	ap = (r2_268 - Mem385[r3 + 148:word32]) / 0x00000004
	Mem432[r7_265:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F3F:
	branch Mem437[r3 + 108:word32] != 0x00000000 l00012F4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F44:
	branch r5_182 != 0x00000000 l00012F4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F4B:
	word32 r0_450 = Mem437[r3 + 36:word32]
	branch r0_450 > 0x0000000A l00012F65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F65:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F4F_1:
	call 0x00012F53 + (r0_450 - 0x00000001) * 0x00000002 (retsize: 4;)
		uses: ap:ap_500,fp:fp_490,r0:r0_450,r1:r1_510,r10:r10_463,r2:r2_480,r3:r3_436,r4:r4_485,r5:r5_442,r6:r6_468,r7:r7_473,r8:r8_505,r9:r9_495,sp:sp_456,Stack +FFFFFFEC:dwLoc18_995,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F48:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001307C:
	branch Mem437[r3 + 0x0000C672:word16] == 0x0000 l0001309D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013084:
	word32 sp_519 = sp_167 - 0x00000004
	Mem520[sp_519:word32] = 0x00000000
	Mem523[sp_519 - 0x00000004:uint32] = (uint32) Mem520[r3 + 0x0000C672:word16]
	call r8 + 2 (retsize: 4;)
		uses: ap:ap_500,fp:fp_490,r0:r0_533,r1:r1_510,r10:r10_463,r2:r2_480,r3:r3_436,r4:r4_485,r5:r5_442,r6:r6_468,r7:r7_473,r8:r8_505,r9:r9_495,sp:sp_519 - 0x00000004,Stack +FFFFFFEC:dwLoc18_995,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
		defs: ap:ap_541,fp:fp_539,r0:r0_536,r1:r1_543,r10:r10_529,r2:r2_537,r3:r3_532,r4:r4_538,r5:r5_528,r6:r6_530,r7:r7_531,r8:r8_542,r9:r9_540,sp:sp_527
	branch r0 == 0x00000000 l0001309D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013094:
	r10_214 = r0
	branch r0 <= 0x00000001 l0001309D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001309D:
	branch Mem554[r3 + 0x0000C674:word16] == 0x0000 l000130BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130A5:
	word32 sp_560 = sp_167 - 0x00000004
	Mem561[sp_560:word32] = 0x00000000
	Mem564[sp_560 - 0x00000004:uint32] = (uint32) Mem561[r3 + 0x0000C674:word16]
	call r8 + 2 (retsize: 4;)
		uses: ap:ap_589,fp:fp_585,r0:r0_579,r1:r1_592,r10:r10_572,r2:r2_581,r3:r3_553,r4:r4_583,r5:r5_570,r6:r6_574,r7:r7_576,r8:r8_568,r9:r9_587,sp:sp_560 - 0x00000004,Stack +FFFFFFEC:dwLoc18_995,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
		defs: ap:ap_590,fp:fp_586,r0:r0_580,r1:r1_593,r10:r10_573,r3:r3_578,r4:r4_584,r5:r5_571,r6:r6_575,r8:r8_591,r9:r9_588,sp:sp_569
	branch r0 == 0x00000000 l000130BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130B5:
	r10_214 = r0
	branch r0 <= 0x00000001 l000130BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130BE:
	r9_155 = r9_271 + 0x00000001
	branch r9_155 >= (uint32) Mem606[r3 + 0x0000C688:word16] l000130CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130CC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130BD:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001309C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012EBA:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012EA1:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E68:
	Mem625[sp_212 - 0x00000004:uint32] = 0x00000401
	Mem627[sp_212 - 0x00000008:word32] = r9_224
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E4D:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E28:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130CF:
	word32 sp_643 = sp_167 - 0x00000004
	Mem644[sp_643:word32] = 0x00000004
	Mem648[sp_643 - 0x00000004:word32] = r3 + 152
	word32 ap_673
	word32 fp_674
	word32 r2_676
	word32 r3_677
	word32 r4_678
	word32 r5_679
	word32 r6_680
	word32 r7_681
	word32 sp_682
	word32 r0_675 = fn0000D5BE(r0, r3, r4_139, r5_182, r6_181, ap, fp, out r2_676, out r3_677, out r4_678, out r5_679, out r6_680, out r7_681, out ap_673, out fp_674, out sp_682)
	branch r0_675 != 0x00000000 l000130E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130E4:
	Mem692[sp_682 - 0x00000004:word32] = 0x00000004
	Mem695[sp_682 - 0x00000008:word32] = r3_677 + 0x0000C639
	Mem698[sp_682 - 0x0000000C:word32] = r3_677 + 152
	word32 ap_719
	word32 r7_711
	word32 r3_712
	word32 r0_713
	word32 r5_703
	word32 r6_710
	word32 r2_714
	word32 r4_715
	word32 fp_716
	word32 r9_718
	word32 r8_725
	word32 r1_734
	word32 sp_702
	word32 r10_709
	call Mem698[0x000192D8:word32] + 2 (retsize: 4;)
		uses: ap:ap_673,fp:fp_674,r0:r0_675,r1:r1_726,r10:r10_704,r2:r2_676,r3:r3_677,r4:r4_678,r5:r5_679,r6:r6_680,r7:r7_681,r8:r8_720,r9:r9_717,sp:sp_682 - 0x0000000C,Stack +FFFFFFEC:dwLoc18_995,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
		defs: ap:ap_719,fp:fp_716,r0:r0_713,r1:r1_734,r10:r10_709,r2:r2_714,r3:r3_712,r4:r4_715,r5:r5_703,r6:r6_710,r7:r7_711,r8:r8_725,r9:r9_718,sp:sp_702
	branch r0_713 == 0x00000000 l00013126
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013126:
	branch Mem698[r3_712 + 68:word32] == 0x00000000 l000131A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131A4:
	branch r6_710 == 0x00000000 l000131F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131A8:
	word32 ap_748 = 0x00000000
	branch Mem698[r3_712 + 100:word32] <= 0x00000000 l000131ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131AF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131B0:
	branch Mem698[r6_710 + ap_748 * 4:word32] != 0x00000000 l000131E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131E5:
	ap_748 = ap_748 + 0x00000001
	branch ap_748 < Mem698[r3_712 + 100:word32] l000131B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131ED:
	Mem768[sp_702 - 0x00000004:word32] = r6_710
	call Mem768[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_800,fp:fp_716,r0:r0_713,r1:r1_734,r10:r10_709,r2:r2_714,r3:r3_712,r4:r4_715,r5:r5_703,r6:r6_710,r7:r7_711,r8:r8_725,r9:r9_718,sp:sp_702 - 0x00000004,Stack +FFFFFFEC:dwLoc18_995,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
		defs: fp:fp_796,r0:r0_787,r1:r1_807,r10:r10_778,r2:r2_790,r3:r3_784,r4:r4_793,r5:r5_775,r6:r6_779,r7:r7_782,r8:r8_804,r9:r9_799,sp:sp_772
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131F6:
	branch r7_711 == 0x00000000 l0001324A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131FA:
	word32 ap_814 = 0x00000000
	branch Mem816[r3_712 + 104:word32] <= 0x00000000 l00013241
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013201:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013204:
	branch Mem816[r7_711 + ap_814 * 4:word32] != 0x00000000 l00013239
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013239:
	ap_814 = ap_814 + 0x00000001
	branch ap_814 < Mem816[r3_712 + 104:word32] l00013204
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013241:
	word32 sp_839 = sp_702 - 0x00000004
	Mem841[sp_839:word32] = r7_711
	call Mem841[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_880,fp:fp_873,r0:r0_820,r1:r1_887,r10:r10_851,r2:r2_865,r3:r3_815,r4:r4_869,r5:r5_847,r6:r6_855,r7:r7_809,r8:r8_883,r9:r9_877,sp:sp_839,Stack +FFFFFFEC:dwLoc18_995,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
		defs: r10:r10_853,sp:sp_845
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001324A:
	branch (uint32) Mem892[sp_702 + 2:word16] != 0x00000000 l00013258
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013250:
	branch r10_709 > 0x00000001 l00013258
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013255:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013258:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013209:
	word32 sp_917 = sp_702 - 0x00000004
	Mem919[sp_917:uint32] = 0x00000401
	Mem923[sp_917 - 0x00000004:word32] = Mem919[Mem919[r3_712 + 148:word32] + ap_814 * 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131B5:
	Mem929[sp_702 - 0x00000004:uint32] = 0x00000401
	Mem933[sp_702 - 0x00000008:word32] = Mem929[Mem929[r3_712 + 144:word32] + ap_748 * 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001312B:
	Mem939[sp_702 - 0x00000004:word32] = Mem698[sp_702 + 0x00000004:word32]
	Mem942[sp_702 - 0x00000008:word32] = Mem939[sp_702:word32]
	word32 sp_955
	branch fn00017662(ap_719, fp_716, out sp_955) >= 0x00000000 l0001314E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013144:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001314E:
	Mem969[sp_955 - 0x00000004:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130FB:
	Mem975[sp_702 - 0x00000004:uint32] = 0x00000401
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130E0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00012D86_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0001325E(word32 r0, word32 r1, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0001325E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001325E:
	word32 sp_3 = fp + -236
	word32 r2_7 = Mem5[Mem5[ap + 4:word32]:word32]
	branch Mem5[r5 + 0x0000C67E:word32] == r2_7 l000132B7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013288:
	branch r2_7 == 0x00000000 l000132B7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001328C:
	word32 v13_19 = Mem17[r5 + 0x0000C67E:word32] - r2_7
	word32 sp_31
	word32 ap_32
	word32 r5_34
	word32 r6_35
	word32 r0_37
	word32 r3_39
	word32 fp_41
	word32 r4_43
	word32 r9_45
	word32 r10_47
	word32 r8_49
	word32 r7_51
	word32 r1_53
	word32 r11_55
	call Mem27[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r1:r1,r10:r10,r11:r11,r2:r2_7,r3:r3,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9,sp:fp + 0xFFFFFF04,Stack +0004:r5 + 1515,Stack +0008:r6 + 1743,Stack +000C:v13_19,Stack +0010:0x00000000,Stack +001C:0x00000000
		defs: ap:ap_32,fp:fp_41,r0:r0_37,r1:r1_53,r10:r10_47,r11:r11_55,r3:r3_39,r4:r4_43,r5:r5_34,r6:r6_35,r7:r7_51,r8:r8_49,r9:r9_45,sp:sp_31
	Mem58[sp_31 - 0x00000004:word32] = r0_37
	Mem61[sp_31 - 0x00000008:word32] = r5_34 + 1515
	Mem63[sp_31 - 0x0000000C:word32] = r5_34
	word32 r2_64 = Mem63[r5_34 + 0x0000C839:word32]
	call r2_64 + 2 (retsize: 4;)
		uses: ap:ap_32,fp:fp_41,r0:r0_37,r1:r1_53,r10:r10_47,r11:r11_55,r2:r2_64,r3:r3_39,r4:r4_43,r5:r5_34,r6:r6_35,r7:r7_51,r8:r8_49,r9:r9_45,sp:sp_31 - 0x0000000C,Stack +FFFFFF08:r5 + 1515,Stack +FFFFFF0C:r6 + 1743,Stack +FFFFFF10:v13_19,Stack +FFFFFF14:0x00000000,Stack +FFFFFF20:0x00000000
		defs: ap:ap_69,fp:fp_75,r1:r1_81,r10:r10_78,r4:r4_76,r5:r5_71,r6:r6_72,r7:r7_80,r8:r8_79,r9:r9_77,sp:sp_68
	dwLocF0 = 0x00000000
	dwLocF4 = v13_19
	dwLocF8 = r6 + 1743
	dwLocFC = r5 + 1515
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000132B7:
	word32 r2_91 = (uint32) Mem85[r5 + 0x0000C674:word16]
	word32 r3_138 = Mem85[r5 + 0x0000C67E:word32] + 0x0000001E + (uint32) Mem85[r5 + 0x0000C670:word16] + (uint32) Mem85[r5 + 0x0000C672:word16] + r2_91
	Mem95[Mem85[ap + 4:word32]:word32] = r3_138 + Mem85[r5 + 0x0000C668:word32]
	word32 sp_97 = sp_3 - 0x00000004
	Mem98[sp_97:word32] = 0x00000003
	Mem101[sp_97 - 0x00000004:uint32] = (uint32) Mem98[r5 + 0x0000C672:word16]
	word32 sp_110
	word32 fp_107
	word32 ap_106
	word32 r11_109
	word32 r0_108 = fn0000DC76(ap, fp, out r11_109, out ap_106, out fp_107, out sp_110)
	Mem116[sp_110 + 4:word32] = r0_108
	branch r0_108 == 0x00000000 l0001331C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000132FC:
	branch Mem116[r5 + 0x0000C627:word32] == 0x00000000 l00013317
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013304:
	Mem127[sp_110 - 0x00000004:word32] = Mem116[r5 + 0x0000C627:word32]
	call Mem127[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_106,fp:fp_107,r0:r0_108,r1:r1_150,r10:r10_144,r11:r11_109,r2:r2_91,r3:r3_92,r4:r4_140,r5:r5_84,r6:r6_135,r7:r7_148,r8:r8_146,r9:r9_142,sp:sp_110 - 0x00000004,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_132,fp:fp_139,r0:r0_137,r1:r1_151,r10:r10_145,r11:r11_152,r3:r3_138,r4:r4_141,r5:r5_134,r6:r6_136,r7:r7_149,r8:r8_147,r9:r9_143,sp:sp_131
	Mem155[r5 + 0x0000C627:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013317:
	Mem163[sp_110 + 8:word32] = Mem161[sp_110 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001331C:
	word32 r4_185
	Mem173[sp_110 + 2:word16] = Mem169[Mem169[r5 + 1511:word32] + 12:word16]
	Mem177[fp_107 + -6:uint16] = (uint16) Mem173[r5 + 0x0000C658:byte]
	branch (uint32) Mem177[r5 + 0x0000C65B:byte] >=u 0x00000012 l00013344
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013344:
	r4_185 = DPB(r4, 0x12, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001333A:
	r4_185 = DPB(r4, Mem177[r5 + 0x0000C65B:byte], 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013347:
	word32 r3_215
	word32 r9_199 = DPB(r9, (uint16) (byte) r4_185, 0)
	word32 r10_206 = DPB(r10, (uint16) Mem177[r5 + 0x0000C65A:byte], 0)
	branch (uint32) Mem177[r5 + 0x0000C65E:word16] >=u 0x0000000B l00013368
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013368:
	r3_215 = DPB(r3_138, 0x000B, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001335D:
	r3_215 = DPB(r3_138, Mem177[r5 + 0x0000C65E:word16], 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001336B:
	word32 r4_366
	Mem228[sp_110 + 16:word16] = (word16) r3_215
	word32 sp_229 = sp_110 - 0x00000004
	Mem230[sp_229:word32] = 0x00000000
	Mem232[sp_229 - 0x00000004:word32] = 0x00000002
	Mem239[sp_229 - 0x00000008:word32] = r8 + 42
	Mem242[sp_229 - 0x0000000C:word32] = r5
	word32 r2_243 = Mem242[r5 + 0x0000C839:word32]
	word32 ap_252
	word32 r2_253
	word32 r5_254
	word32 r6_259
	word32 fp_268
	word32 r4_270
	word32 r9_272
	word32 r10_274
	word32 r8_275
	word32 r7_280
	word32 r1_285
	word32 r11_290
	call r2_243 + 2 (retsize: 4;)
		uses: ap:ap_250,fp:fp_175,r0:r0_262,r1:r1_283,r10:r10_206,r11:r11_288,r2:r2_243,r3:r3_224,r4:r4_194,r5:r5_167,r6:r6_257,r7:r7_278,r8:r8_236,r9:r9_199,sp:sp_229 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_252,fp:fp_268,r1:r1_285,r10:r10_274,r11:r11_290,r2:r2_253,r4:r4_270,r5:r5_254,r6:r6_259,r7:r7_280,r8:r8_275,r9:r9_272
	word32 ap_292
	word32 fp_293
	word32 r2_295
	word32 r3_296
	word32 sp_297
	word32 r0_294 = fn00017772(r2_253, ap_252, fp_268, out r2_295, out r3_296, out ap_292, out fp_293, out sp_297)
	Mem303[sp_297 - 0x00000004:word32] = 0x00000000
	Mem306[sp_297 - 0x00000008:word32] = Mem303[r5_254 + 0x0000C67E:word32]
	Mem309[sp_297 - 0x0000000C:word32] = Mem306[r5_254 + 0x0000C67E:word32]
	Mem312[sp_297 - 0x00000010:word32] = r6_259 + 1810
	Mem315[sp_297 - 0x00000014:word32] = r5_254 + 1515
	word32 sp_319
	word32 ap_320
	word32 r5_322
	word32 r6_323
	word32 r0_324
	word32 r3_325
	word32 fp_326
	word32 r4_327
	word32 r9_328
	word32 r10_329
	word32 r8_330
	word32 r7_331
	word32 r1_332
	word32 r11_333
	call Mem315[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_292,fp:fp_293,r0:r0_294,r1:r1_285,r10:r10_274,r11:r11_290,r2:r2_295,r3:r3_296,r4:r4_270,r5:r5_254,r6:r6_259,r7:r7_280,r8:r8_275,r9:r9_272,sp:sp_297 - 0x00000014,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_320,fp:fp_326,r0:r0_324,r1:r1_332,r10:r10_329,r11:r11_333,r3:r3_325,r4:r4_327,r5:r5_322,r6:r6_323,r7:r7_331,r8:r8_330,r9:r9_328,sp:sp_319
	Mem336[sp_319 - 0x00000004:word32] = r0_324
	Mem339[sp_319 - 0x00000008:word32] = r5_322 + 1515
	Mem341[sp_319 - 0x0000000C:word32] = r5_322
	word32 r2_342 = Mem341[r5_322 + 0x0000C839:word32]
	word32 r4_354
	word32 r7_358
	word32 sp_346
	word32 r6_350
	word32 r5_349
	word32 ap_347
	word32 r2_348
	word32 r0_351
	word32 fp_353
	word32 r9_355
	word32 r10_356
	word32 r8_357
	word32 r1_359
	word32 r11_360
	call r2_342 + 2 (retsize: 4;)
		uses: ap:ap_320,fp:fp_326,r0:r0_324,r1:r1_332,r10:r10_329,r11:r11_333,r2:r2_342,r3:r3_325,r4:r4_327,r5:r5_322,r6:r6_323,r7:r7_331,r8:r8_330,r9:r9_328,sp:sp_319 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_347,fp:fp_353,r0:r0_351,r1:r1_359,r10:r10_356,r11:r11_360,r2:r2_348,r4:r4_354,r5:r5_349,r6:r6_350,r7:r7_358,r8:r8_357,r9:r9_355,sp:sp_346
	word32 r3_362 = (uint32) Mem341[sp_346 + 2:word16]
	branch r3_362 <u 0x00000012 l000133DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000133DC:
	r4_366 = Mem341[r6_350 + 5188 + r3_362 * 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000133C1:
	Mem372[sp_346 - 0x00000004:uint32] = (uint32) Mem341[r5_349 + 0x0000C659:byte]
	Mem375[sp_346 - 0x00000008:word32] = r6_350 + 1797
	Mem378[sp_346 - 0x0000000C:word32] = fp_353 + -58
	call Mem378[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_347,fp:fp_353,r0:r0_351,r1:r1_359,r10:r10_356,r11:r11_360,r2:r2_348,r3:r3_362,r4:r4_354,r5:r5_349,r6:r6_350,r7:r7_358,r8:r8_357,r9:r9_355,sp:sp_346 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_383,fp:fp_389,r0:r0_387,r1:r1_395,r10:r10_392,r11:r11_396,r2:r2_384,r3:r3_388,r5:r5_385,r6:r6_386,r8:r8_393,r9:r9_391,sp:sp_382
	r4_366 = fp_353 + -58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000133E2:
	word32 sp_403 = sp_346 - 0x00000004
	Mem404[sp_403:word32] = 0x00000000
	Mem407[sp_403 - 0x00000004:word32] = r4_366
	Mem411[sp_403 - 0x00000008:word32] = r6_350 + 1883
	Mem415[sp_403 - 0x0000000C:word32] = r5_349 + 1515
	word32 r7_416 = Mem415[0x000192D0:word32]
	word32 sp_420
	word32 ap_422
	word32 r5_425
	word32 r6_426
	word32 r0_428
	word32 r3_430
	word32 fp_432
	word32 r4_433
	word32 r9_435
	word32 r10_437
	word32 r8_439
	word32 r7_440
	word32 r1_442
	word32 r11_444
	call r7_416 + 2 (retsize: 4;)
		uses: ap:ap_421,fp:fp_431,r0:r0_427,r1:r1_441,r10:r10_436,r11:r11_443,r2:r2_423,r3:r3_429,r4:r4_406,r5:r5_413,r6:r6_409,r7:r7_416,r8:r8_438,r9:r9_434,sp:sp_403 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_422,fp:fp_432,r0:r0_428,r1:r1_442,r10:r10_437,r11:r11_444,r3:r3_430,r4:r4_433,r5:r5_425,r6:r6_426,r7:r7_440,r8:r8_439,r9:r9_435,sp:sp_420
	Mem447[sp_420 - 0x00000004:word32] = r0_428
	Mem450[sp_420 - 0x00000008:word32] = r5_425 + 1515
	Mem452[sp_420 - 0x0000000C:word32] = r5_425
	word32 r2_453 = Mem452[r5_425 + 0x0000C839:word32]
	word32 sp_457
	word32 ap_458
	word32 r5_460
	word32 r6_461
	word32 r3_463
	word32 fp_464
	word32 r4_465
	word32 r9_466
	word32 r10_467
	word32 r8_468
	word32 r7_469
	word32 r11_471
	call r2_453 + 2 (retsize: 4;)
		uses: ap:ap_422,fp:fp_432,r0:r0_428,r1:r1_442,r10:r10_437,r11:r11_444,r2:r2_453,r3:r3_430,r4:r4_433,r5:r5_425,r6:r6_426,r7:r7_440,r8:r8_439,r9:r9_435,sp:sp_420 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_458,fp:fp_464,r10:r10_467,r11:r11_471,r3:r3_463,r4:r4_465,r5:r5_460,r6:r6_461,r7:r7_469,r8:r8_468,r9:r9_466,sp:sp_457
	Mem474[sp_457 - 0x00000004:word32] = 0x00000000
	word32 r1_475 = 0x00000000
	word32 r0_476 = (uint32) Mem474[fp_464 + -6:word16]
	branch 0x0000000A == 0x00000000 l00013430
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013417:
	branch 0x00000009 == 0x00000000 l00013435
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001341C:
	branch true l00013430
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013430:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001341E:
	branch r0_476 == 0x0000000A l00013435
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013423:
	branch r0_476 <u 0x0000000A l00013428
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013425:
	r1_475 = 0xFFFFFFF6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013428:
	r1_475 = r1_475 + r0_476
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013435:
	Mem501[sp_457 - 0x00000008:uint32] = (uint32) (word16) r1_475
	word32 r2_504 = (uint32) Mem501[fp_464 + -6:word16]
	word32 r1_505 = 0x00000000
	branch true l00013450
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013450:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013446:
	branch r2_504 <u 0x0000000A l00013455
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001344B:
	r1_505 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013455:
	word32 r4_610
	Mem520[sp_457 - 0x0000000C:word32] = r1_505
	Mem526[sp_457 - 0x00000010:word32] = r6_461 + 1939
	Mem532[sp_457 - 0x00000014:word32] = r5_460 + 1515
	word32 sp_539
	word32 ap_543
	word32 r5_546
	word32 r6_547
	word32 r0_549
	word32 r3_553
	word32 fp_555
	word32 r4_559
	word32 r9_563
	word32 r10_567
	word32 r8_571
	word32 r7_572
	word32 r1_573
	word32 r11_577
	call r7_469 + 2 (retsize: 4;)
		uses: ap:ap_458,fp:fp_464,r0:r2_504,r1:r1_519,r10:r10_467,r11:r11_471,r2:0x0000000A,r3:r3_463,r4:r4_465,r5:r5_460,r6:r6_461,r7:r7_469,r8:r8_468,r9:r9_466,sp:sp_457 - 0x00000014,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_543,fp:fp_555,r0:r0_549,r1:r1_573,r10:r10_567,r11:r11_577,r3:r3_553,r4:r4_559,r5:r5_546,r6:r6_547,r7:r7_572,r8:r8_571,r9:r9_563,sp:sp_539
	Mem580[sp_539 - 0x00000004:word32] = r0_549
	Mem583[sp_539 - 0x00000008:word32] = r5_546 + 1515
	Mem585[sp_539 - 0x0000000C:word32] = r5_546
	word32 r2_586 = Mem585[r5_546 + 0x0000C839:word32]
	word32 r4_598
	word32 r7_602
	word32 sp_590
	word32 r6_594
	word32 r5_593
	word32 ap_591
	word32 r2_592
	word32 r0_595
	word32 fp_597
	word32 r9_599
	word32 r10_600
	word32 r8_601
	word32 r1_603
	word32 r11_604
	call r2_586 + 2 (retsize: 4;)
		uses: ap:ap_543,fp:fp_555,r0:r0_549,r1:r1_573,r10:r10_567,r11:r11_577,r2:r2_586,r3:r3_553,r4:r4_559,r5:r5_546,r6:r6_547,r7:r7_572,r8:r8_571,r9:r9_563,sp:sp_539 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_591,fp:fp_597,r0:r0_595,r1:r1_603,r10:r10_600,r11:r11_604,r2:r2_592,r4:r4_598,r5:r5_593,r6:r6_594,r7:r7_602,r8:r8_601,r9:r9_599,sp:sp_590
	word32 r3_606 = (uint32) (word16) r9_599
	branch r3_606 <u 0x00000012 l00013494
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013494:
	r4_610 = Mem585[r6_594 + 5188 + r3_606 * 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001347C:
	Mem616[sp_590 - 0x00000004:uint32] = (uint32) Mem585[r5_593 + 0x0000C65B:byte]
	Mem619[sp_590 - 0x00000008:word32] = r6_594 + 1797
	Mem622[sp_590 - 0x0000000C:word32] = fp_597 + -58
	call r7_602 + 2 (retsize: 4;)
		uses: ap:ap_591,fp:fp_597,r0:r0_595,r1:r1_603,r10:r10_600,r11:r11_604,r2:r2_592,r3:r3_606,r4:r4_598,r5:r5_593,r6:r6_594,r7:r7_602,r8:r8_601,r9:r9_599,sp:sp_590 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_627,fp:fp_633,r0:r0_631,r1:r1_639,r10:r10_636,r11:r11_640,r2:r2_628,r3:r3_632,r5:r5_629,r6:r6_630,r8:r8_637,r9:r9_635,sp:sp_626
	r4_610 = fp_597 + -58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001349A:
	word32 sp_647 = sp_590 - 0x00000004
	Mem648[sp_647:word32] = 0x00000000
	Mem651[sp_647 - 0x00000004:word32] = r4_610
	Mem655[sp_647 - 0x00000008:word32] = r6_594 + 1998
	Mem659[sp_647 - 0x0000000C:word32] = r5_593 + 1515
	word32 r7_660 = Mem659[0x000192D0:word32]
	word32 sp_664
	word32 ap_666
	word32 r5_669
	word32 r6_670
	word32 r0_672
	word32 r3_674
	word32 fp_676
	word32 r4_677
	word32 r9_679
	word32 r10_681
	word32 r8_683
	word32 r7_684
	word32 r1_686
	word32 r11_688
	call r7_660 + 2 (retsize: 4;)
		uses: ap:ap_665,fp:fp_675,r0:r0_671,r1:r1_685,r10:r10_680,r11:r11_687,r2:r2_667,r3:r3_673,r4:r4_650,r5:r5_657,r6:r6_653,r7:r7_660,r8:r8_682,r9:r9_678,sp:sp_647 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_666,fp:fp_676,r0:r0_672,r1:r1_686,r10:r10_681,r11:r11_688,r3:r3_674,r4:r4_677,r5:r5_669,r6:r6_670,r7:r7_684,r8:r8_683,r9:r9_679,sp:sp_664
	Mem691[sp_664 - 0x00000004:word32] = r0_672
	Mem694[sp_664 - 0x00000008:word32] = r5_669 + 1515
	Mem696[sp_664 - 0x0000000C:word32] = r5_669
	word32 r2_697 = Mem696[r5_669 + 0x0000C839:word32]
	word32 sp_701
	word32 ap_702
	word32 r5_704
	word32 r6_705
	word32 r3_707
	word32 fp_708
	word32 r4_709
	word32 r9_710
	word32 r10_711
	word32 r8_712
	word32 r7_713
	word32 r11_715
	call r2_697 + 2 (retsize: 4;)
		uses: ap:ap_666,fp:fp_676,r0:r0_672,r1:r1_686,r10:r10_681,r11:r11_688,r2:r2_697,r3:r3_674,r4:r4_677,r5:r5_669,r6:r6_670,r7:r7_684,r8:r8_683,r9:r9_679,sp:sp_664 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_702,fp:fp_708,r10:r10_711,r11:r11_715,r3:r3_707,r4:r4_709,r5:r5_704,r6:r6_705,r7:r7_713,r8:r8_712,r9:r9_710,sp:sp_701
	Mem718[sp_701 - 0x00000004:word32] = 0x00000000
	word32 r1_719 = 0x00000000
	word32 r0_720 = (uint32) (word16) r10_711
	branch 0x0000000A == 0x00000000 l000134E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000134CE:
	branch 0x00000009 == 0x00000000 l000134E9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000134D3:
	branch true l000134E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000134E4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000134D5:
	branch r0_720 == 0x0000000A l000134E9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000134DA:
	branch r0_720 <u 0x0000000A l000134DF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000134DC:
	r1_719 = 0xFFFFFFF6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000134DF:
	r1_719 = r1_719 + r0_720
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000134E9:
	Mem745[sp_701 - 0x00000008:uint32] = (uint32) (word16) r1_719
	word32 r2_748 = (uint32) (word16) r10_711
	word32 r1_749 = 0x00000000
	branch true l00013504
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013504:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000134F9:
	branch r2_748 <u 0x0000000A l00013509
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000134FE:
	r1_749 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013509:
	word32 r4_854
	Mem764[sp_701 - 0x0000000C:word32] = r1_749
	Mem770[sp_701 - 0x00000010:word32] = r6_705 + 2054
	Mem776[sp_701 - 0x00000014:word32] = r5_704 + 1515
	word32 sp_783
	word32 ap_787
	word32 r5_790
	word32 r6_791
	word32 r0_793
	word32 r3_797
	word32 fp_801
	word32 r4_805
	word32 r9_809
	word32 r10_811
	word32 r8_815
	word32 r7_816
	word32 r1_817
	word32 r11_821
	call r7_713 + 2 (retsize: 4;)
		uses: ap:ap_702,fp:fp_708,r0:r2_748,r1:r1_763,r10:r10_711,r11:r11_715,r2:0x0000000A,r3:r3_707,r4:r4_709,r5:r5_704,r6:r6_705,r7:r7_713,r8:r8_712,r9:r9_710,sp:sp_701 - 0x00000014,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_787,fp:fp_801,r0:r0_793,r1:r1_817,r10:r10_811,r11:r11_821,r3:r3_797,r4:r4_805,r5:r5_790,r6:r6_791,r7:r7_816,r8:r8_815,r9:r9_809,sp:sp_783
	Mem824[sp_783 - 0x00000004:word32] = r0_793
	Mem827[sp_783 - 0x00000008:word32] = r5_790 + 1515
	Mem829[sp_783 - 0x0000000C:word32] = r5_790
	word32 r2_830 = Mem829[r5_790 + 0x0000C839:word32]
	word32 r4_842
	word32 r7_846
	word32 sp_834
	word32 r6_838
	word32 r5_837
	word32 ap_835
	word32 r2_836
	word32 r0_839
	word32 fp_841
	word32 r9_843
	word32 r10_844
	word32 r8_845
	word32 r1_847
	word32 r11_848
	call r2_830 + 2 (retsize: 4;)
		uses: ap:ap_787,fp:fp_801,r0:r0_793,r1:r1_817,r10:r10_811,r11:r11_821,r2:r2_830,r3:r3_797,r4:r4_805,r5:r5_790,r6:r6_791,r7:r7_816,r8:r8_815,r9:r9_809,sp:sp_783 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_835,fp:fp_841,r0:r0_839,r1:r1_847,r10:r10_844,r11:r11_848,r2:r2_836,r4:r4_842,r5:r5_837,r6:r6_838,r7:r7_846,r8:r8_845,r9:r9_843,sp:sp_834
	word32 r3_850 = (uint32) Mem829[sp_834 + 16:word16]
	branch r3_850 <u 0x0000000B l00013548
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013548:
	r4_854 = Mem829[r6_838 + 5260 + r3_850 * 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013531:
	Mem860[sp_834 - 0x00000004:uint32] = (uint32) Mem829[r5_837 + 0x0000C65E:word16]
	Mem863[sp_834 - 0x00000008:word32] = r6_838 + 1797
	Mem866[sp_834 - 0x0000000C:word32] = fp_841 + -58
	call r7_846 + 2 (retsize: 4;)
		uses: ap:ap_835,fp:fp_841,r0:r0_839,r1:r1_847,r10:r10_844,r11:r11_848,r2:r2_836,r3:r3_850,r4:r4_842,r5:r5_837,r6:r6_838,r7:r7_846,r8:r8_845,r9:r9_843,sp:sp_834 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_871,fp:fp_877,r0:r0_875,r1:r1_883,r10:r10_880,r11:r11_884,r2:r2_872,r3:r3_876,r5:r5_873,r6:r6_874,r8:r8_881,r9:r9_879,sp:sp_870
	r4_854 = fp_841 + -58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001354E:
	word32 sp_891 = sp_834 - 0x00000004
	Mem892[sp_891:word32] = 0x00000000
	Mem895[sp_891 - 0x00000004:word32] = r4_854
	Mem899[sp_891 - 0x00000008:word32] = r6_838 + 2113
	Mem903[sp_891 - 0x0000000C:word32] = r5_837 + 1515
	word32 r7_904 = Mem903[0x000192D0:word32]
	word32 sp_908
	word32 ap_910
	word32 r5_913
	word32 r6_914
	word32 r0_916
	word32 r3_918
	word32 fp_920
	word32 r4_921
	word32 r9_923
	word32 r10_925
	word32 r8_927
	word32 r7_928
	word32 r1_930
	word32 r11_932
	call r7_904 + 2 (retsize: 4;)
		uses: ap:ap_909,fp:fp_919,r0:r0_915,r1:r1_929,r10:r10_924,r11:r11_931,r2:r2_911,r3:r3_917,r4:r4_894,r5:r5_901,r6:r6_897,r7:r7_904,r8:r8_926,r9:r9_922,sp:sp_891 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_910,fp:fp_920,r0:r0_916,r1:r1_930,r10:r10_925,r11:r11_932,r3:r3_918,r4:r4_921,r5:r5_913,r6:r6_914,r7:r7_928,r8:r8_927,r9:r9_923,sp:sp_908
	Mem935[sp_908 - 0x00000004:word32] = r0_916
	Mem938[sp_908 - 0x00000008:word32] = r5_913 + 1515
	Mem940[sp_908 - 0x0000000C:word32] = r5_913
	word32 r2_941 = Mem940[r5_913 + 0x0000C839:word32]
	word32 r3_951
	word32 sp_1015
	word32 r5_1018
	word32 r8_1026
	word32 r6_1019
	word32 ap_1016
	word32 r0_1020
	word32 fp_1022
	word32 r9_1024
	word32 r10_1025
	word32 r7_1027
	word32 r1_1028
	word32 r11_1029
	call r2_941 + 2 (retsize: 4;)
		uses: ap:ap_910,fp:fp_920,r0:r0_916,r1:r1_930,r10:r10_925,r11:r11_932,r2:r2_941,r3:r3_918,r4:r4_921,r5:r5_913,r6:r6_914,r7:r7_928,r8:r8_927,r9:r9_923,sp:sp_908 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_946,fp:fp_952,r0:r0_950,r1:r1_958,r10:r10_955,r11:r11_959,r3:r3_951,r5:r5_948,r6:r6_949,r7:r7_957,r8:r8_956,r9:r9_954,sp:sp_945
	word32 r4_961 = (uint32) Mem940[sp_1015 + 16:word16]
	branch r4_961 != 0x00000006 l000135F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000135F4:
	branch r4_961 != 0x00000008 l00013638
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000135F9:
	Mem972[fp_1022 + -8:int16] = (int16) ((uint32) Mem940[r5_1018 + 0x0000C65C:word16] >> 1 & ~0xFFFFFFFC)
	Mem974[sp_1015 - 0x00000004:word32] = 0x00000000
	word32 r2_975 = (uint32) Mem974[fp_1022 + -8:word16]
	Mem978[sp_1015 - 0x00000008:word32] = Mem974[r6_1019 + 5304 + r2_975 * 4:word32]
	Mem981[sp_1015 - 0x0000000C:word32] = r6_1019 + 2282
	Mem984[sp_1015 - 0x00000010:word32] = r5_1018 + 1515
	word32 sp_988
	word32 ap_989
	word32 r5_991
	word32 r6_992
	word32 r0_993
	word32 r3_994
	word32 fp_995
	word32 r4_996
	word32 r9_997
	word32 r10_998
	word32 r8_999
	word32 r7_1000
	word32 r1_1001
	word32 r11_1002
	call r7_1027 + 2 (retsize: 4;)
		uses: ap:ap_946,fp:fp_952,r0:r0_950,r1:r1_958,r10:r10_955,r11:r11_959,r2:r2_975,r3:r3_951,r4:r4_961,r5:r5_948,r6:r6_949,r7:r7_957,r8:r8_956,r9:r9_954,sp:sp_945 - 0x00000010,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_989,fp:fp_995,r0:r0_993,r1:r1_1001,r10:r10_998,r11:r11_1002,r3:r3_994,r4:r4_996,r5:r5_991,r6:r6_992,r7:r7_1000,r8:r8_999,r9:r9_997,sp:sp_988
	Mem1005[sp_988 - 0x00000004:word32] = r0_993
	Mem1008[sp_988 - 0x00000008:word32] = r5_991 + 1515
	Mem1010[sp_988 - 0x0000000C:word32] = r5_991
	word32 r2_1011 = Mem1010[r5_991 + 0x0000C839:word32]
	call r2_1011 + 2 (retsize: 4;)
		uses: ap:ap_989,fp:fp_995,r0:r0_993,r1:r1_1001,r10:r10_998,r11:r11_1002,r2:r2_1011,r3:r3_994,r4:r4_996,r5:r5_991,r6:r6_992,r7:r7_1000,r8:r8_999,r9:r9_997,sp:sp_988 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1016,fp:fp_1022,r0:r0_1020,r1:r1_1028,r10:r10_1025,r11:r11_1029,r5:r5_1018,r6:r6_1019,r7:r7_1027,r8:r8_1026,r9:r9_1024,sp:sp_1015
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001357F:
	word32 r3_1038
	Mem1032[sp_1015 - 0x00000004:word32] = 0x00000000
	word32 r2_1033 = (uint32) Mem1032[r5_1018 + 0x0000C65C:word16]
	branch (r2_1033 & 0x00000002) == 0x00000000 l00013594
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013594:
	r3_1038 = DPB(r3_951, 0x34, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001358C:
	r3_1038 = DPB(r3_951, 0x38, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013597:
	word32 r3_1124
	Mem1051[sp_1015 - 0x00000008:int32] = (int32) (int8) r3_1038
	Mem1055[sp_1015 - 0x0000000C:word32] = r6_1019 + 2169
	Mem1059[sp_1015 - 0x00000010:word32] = r5_1018 + 1515
	word32 sp_1064
	word32 ap_1066
	word32 r5_1069
	word32 r6_1070
	word32 r0_1072
	word32 r3_1073
	word32 fp_1075
	word32 r4_1077
	word32 r9_1079
	word32 r10_1081
	word32 r8_1083
	word32 r7_1084
	word32 r1_1086
	word32 r11_1088
	call r7_1027 + 2 (retsize: 4;)
		uses: ap:ap_946,fp:fp_952,r0:r0_950,r1:r1_958,r10:r10_955,r11:r11_959,r2:r2_1033,r3:r3_1049,r4:r4_961,r5:r5_948,r6:r6_949,r7:r7_957,r8:r8_956,r9:r9_954,sp:sp_945 - 0x00000010,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1066,fp:fp_1075,r0:r0_1072,r1:r1_1086,r10:r10_1081,r11:r11_1088,r3:r3_1073,r4:r4_1077,r5:r5_1069,r6:r6_1070,r7:r7_1084,r8:r8_1083,r9:r9_1079,sp:sp_1064
	Mem1091[sp_1064 - 0x00000004:word32] = r0_1072
	Mem1094[sp_1064 - 0x00000008:word32] = r5_1069 + 1515
	Mem1096[sp_1064 - 0x0000000C:word32] = r5_1069
	word32 r2_1097 = Mem1096[r5_1069 + 0x0000C839:word32]
	word32 sp_1101
	word32 ap_1102
	word32 r5_1104
	word32 r6_1105
	word32 r0_1106
	word32 r3_1107
	word32 fp_1108
	word32 r4_1109
	word32 r9_1110
	word32 r10_1111
	word32 r8_1112
	word32 r7_1113
	word32 r1_1114
	word32 r11_1115
	call r2_1097 + 2 (retsize: 4;)
		uses: ap:ap_1066,fp:fp_1075,r0:r0_1072,r1:r1_1086,r10:r10_1081,r11:r11_1088,r2:r2_1097,r3:r3_1073,r4:r4_1077,r5:r5_1069,r6:r6_1070,r7:r7_1084,r8:r8_1083,r9:r9_1079,sp:sp_1064 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1102,fp:fp_1108,r0:r0_1106,r1:r1_1114,r10:r10_1111,r11:r11_1115,r3:r3_1107,r4:r4_1109,r5:r5_1104,r6:r6_1105,r7:r7_1113,r8:r8_1112,r9:r9_1110,sp:sp_1101
	Mem1118[sp_1101 - 0x00000004:word32] = 0x00000000
	word32 r2_1119 = (uint32) Mem1118[r5_1104 + 0x0000C65C:word16]
	branch (r2_1119 & 0x00000004) == 0x00000000 l000135CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000135CC:
	r3_1124 = DPB(r3_1107, 0x32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000135C4:
	r3_1124 = DPB(r3_1107, 0x33, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000135CF:
	Mem1137[sp_1101 - 0x00000008:int32] = (int32) (int8) r3_1124
	Mem1141[sp_1101 - 0x0000000C:word32] = r6_1105 + 2226
	Mem1145[sp_1101 - 0x00000010:word32] = r5_1104 + 1515
	word32 sp_1150
	word32 ap_1152
	word32 r5_1155
	word32 r6_1156
	word32 r0_1158
	word32 r3_1159
	word32 fp_1161
	word32 r4_1163
	word32 r9_1165
	word32 r10_1167
	word32 r8_1169
	word32 r7_1170
	word32 r1_1172
	word32 r11_1174
	call r7_1113 + 2 (retsize: 4;)
		uses: ap:ap_1102,fp:fp_1108,r0:r0_1106,r1:r1_1114,r10:r10_1111,r11:r11_1115,r2:r2_1119,r3:r3_1135,r4:r4_1109,r5:r5_1104,r6:r6_1105,r7:r7_1113,r8:r8_1112,r9:r9_1110,sp:sp_1101 - 0x00000010,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1152,fp:fp_1161,r0:r0_1158,r1:r1_1172,r10:r10_1167,r11:r11_1174,r3:r3_1159,r4:r4_1163,r5:r5_1155,r6:r6_1156,r7:r7_1170,r8:r8_1169,r9:r9_1165,sp:sp_1150
	Mem1177[sp_1150 - 0x00000004:word32] = r0_1158
	Mem1180[sp_1150 - 0x00000008:word32] = r5_1155 + 1515
	Mem1182[sp_1150 - 0x0000000C:word32] = r5_1155
	word32 r2_1183 = Mem1182[r5_1155 + 0x0000C839:word32]
	call r2_1183 + 2 (retsize: 4;)
		uses: ap:ap_1152,fp:fp_1161,r0:r0_1158,r1:r1_1172,r10:r10_1167,r11:r11_1174,r2:r2_1183,r3:r3_1159,r4:r4_1163,r5:r5_1155,r6:r6_1156,r7:r7_1170,r8:r8_1169,r9:r9_1165,sp:sp_1150 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1188,fp:fp_1194,r0:r0_1192,r1:r1_1200,r10:r10_1197,r11:r11_1201,r5:r5_1190,r6:r6_1191,r7:r7_1199,r8:r8_1198,r9:r9_1196,sp:sp_1187
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013638:
	word32 r3_1212
	word32 sp_1204 = sp_1015 - 0x00000004
	Mem1205[sp_1204:word32] = 0x00000000
	word32 r2_1207 = (uint32) Mem1205[r5_1018 + 0x0000C65C:word16]
	branch (r2_1207 & 0x00000001) == 0x00000000 l0001364C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001364C:
	r3_1212 = r8_1026 + 45
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013644:
	r3_1212 = r6_1019
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013650:
	word32 r3_1304
	Mem1224[sp_1204 - 0x00000004:word32] = r3_1212
	Mem1228[sp_1204 - 0x00000008:word32] = r6_1019 + 2338
	Mem1232[sp_1204 - 0x0000000C:word32] = r5_1018 + 1515
	word32 r4_1233 = Mem1232[0x000192D0:word32]
	word32 sp_1237
	word32 ap_1240
	word32 r5_1243
	word32 r6_1244
	word32 r0_1247
	word32 r3_1248
	word32 fp_1251
	word32 r4_1252
	word32 r9_1255
	word32 r10_1258
	word32 r8_1260
	word32 r7_1263
	word32 r1_1266
	word32 r11_1269
	call r4_1233 + 2 (retsize: 4;)
		uses: ap:ap_1239,fp:fp_1250,r0:r0_1246,r1:r1_1265,r10:r10_1257,r11:r11_1268,r2:r2_1207,r3:r3_1223,r4:r4_1233,r5:r5_1206,r6:r6_1216,r7:r7_1262,r8:r8_1211,r9:r9_1254,sp:sp_1204 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1240,fp:fp_1251,r0:r0_1247,r1:r1_1266,r10:r10_1258,r11:r11_1269,r3:r3_1248,r4:r4_1252,r5:r5_1243,r6:r6_1244,r7:r7_1263,r8:r8_1260,r9:r9_1255,sp:sp_1237
	Mem1272[sp_1237 - 0x00000004:word32] = r0_1247
	Mem1275[sp_1237 - 0x00000008:word32] = r5_1243 + 1515
	Mem1277[sp_1237 - 0x0000000C:word32] = r5_1243
	word32 r2_1278 = Mem1277[r5_1243 + 0x0000C839:word32]
	word32 sp_1282
	word32 ap_1283
	word32 r5_1285
	word32 r6_1286
	word32 r0_1287
	word32 fp_1289
	word32 r4_1290
	word32 r9_1291
	word32 r10_1292
	word32 r8_1293
	word32 r7_1294
	word32 r1_1295
	word32 r11_1296
	call r2_1278 + 2 (retsize: 4;)
		uses: ap:ap_1240,fp:fp_1251,r0:r0_1247,r1:r1_1266,r10:r10_1258,r11:r11_1269,r2:r2_1278,r3:r3_1248,r4:r4_1252,r5:r5_1243,r6:r6_1244,r7:r7_1263,r8:r8_1260,r9:r9_1255,sp:sp_1237 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1283,fp:fp_1289,r0:r0_1287,r1:r1_1295,r10:r10_1292,r11:r11_1296,r4:r4_1290,r5:r5_1285,r6:r6_1286,r7:r7_1294,r8:r8_1293,r9:r9_1291,sp:sp_1282
	Mem1299[sp_1282 - 0x00000004:word32] = 0x00000000
	word32 r2_1300 = (uint32) Mem1299[r5_1285 + 0x0000C65C:word16]
	branch (r2_1300 & 0x00000008) == 0x00000000 l0001368C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001368C:
	r3_1304 = r8_1293 + 50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013683:
	r3_1304 = r8_1293 + 53
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013690:
	word32 r4_1886
	Mem1315[sp_1282 - 0x00000008:word32] = r3_1304
	Mem1319[sp_1282 - 0x0000000C:word32] = r6_1286 + 2403
	Mem1323[sp_1282 - 0x00000010:word32] = r5_1285 + 1515
	word32 sp_1328
	word32 ap_1330
	word32 r5_1333
	word32 r6_1334
	word32 r0_1336
	word32 r3_1337
	word32 fp_1339
	word32 r4_1340
	word32 r9_1342
	word32 r10_1344
	word32 r8_1346
	word32 r7_1348
	word32 r1_1350
	word32 r11_1352
	call r4_1290 + 2 (retsize: 4;)
		uses: ap:ap_1283,fp:fp_1289,r0:r0_1287,r1:r1_1295,r10:r10_1292,r11:r11_1296,r2:r2_1300,r3:r3_1314,r4:r4_1290,r5:r5_1285,r6:r6_1286,r7:r7_1294,r8:r8_1293,r9:r9_1291,sp:sp_1282 - 0x00000010,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1330,fp:fp_1339,r0:r0_1336,r1:r1_1350,r10:r10_1344,r11:r11_1352,r3:r3_1337,r4:r4_1340,r5:r5_1333,r6:r6_1334,r7:r7_1348,r8:r8_1346,r9:r9_1342,sp:sp_1328
	Mem1355[sp_1328 - 0x00000004:word32] = r0_1336
	Mem1358[sp_1328 - 0x00000008:word32] = r5_1333 + 1515
	Mem1360[sp_1328 - 0x0000000C:word32] = r5_1333
	word32 r2_1361 = Mem1360[r5_1333 + 0x0000C839:word32]
	word32 sp_1365
	word32 ap_1366
	word32 r5_1368
	word32 r6_1369
	word32 r3_1371
	word32 fp_1372
	word32 r4_1373
	word32 r9_1374
	word32 r10_1375
	word32 r8_1376
	word32 r7_1377
	word32 r11_1379
	call r2_1361 + 2 (retsize: 4;)
		uses: ap:ap_1330,fp:fp_1339,r0:r0_1336,r1:r1_1350,r10:r10_1344,r11:r11_1352,r2:r2_1361,r3:r3_1337,r4:r4_1340,r5:r5_1333,r6:r6_1334,r7:r7_1348,r8:r8_1346,r9:r9_1342,sp:sp_1328 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1366,fp:fp_1372,r10:r10_1375,r11:r11_1379,r3:r3_1371,r4:r4_1373,r5:r5_1368,r6:r6_1369,r7:r7_1377,r8:r8_1376,r9:r9_1374,sp:sp_1365
	Mem1383[sp_1365 - 0x00000004:word32] = fp_1372 + -42
	Mem1385[sp_1365 - 0x00000008:word32] = 0x00000000
	Mem1388[sp_1365 - 0x0000000C:word32] = r5_1368 + 0x0000C660
	Mem1391[sp_1365 - 0x00000010:word32] = r5_1368 + 0x0000C662
	word32 ap_1395
	word32 fp_1396
	word32 r1_1398
	word32 r10_1399
	word32 r11_1400
	word32 r2_1401
	word32 r3_1402
	word32 r4_1403
	word32 r5_1404
	word32 r6_1405
	word32 r7_1406
	word32 r8_1407
	word32 r9_1408
	word32 sp_1409
	word32 r0_1397 = fn00015106(r3_1371, r4_1373, r5_1368, r6_1369, r7_1377, r8_1376, r9_1374, r10_1375, r11_1379, ap_1366, fp_1372, out r1_1398, out r2_1401, out r3_1402, out r4_1403, out r5_1404, out r6_1405, out r7_1406, out r8_1407, out r9_1408, out r10_1399, out r11_1400, out ap_1395, out fp_1396, out sp_1409)
	Mem1415[sp_1409 - 0x00000004:word32] = 0x00000000
	Mem1418[sp_1409 - 0x00000008:word32] = fp_1396 + -42
	Mem1421[sp_1409 - 0x0000000C:word32] = r6_1405 + 2459
	Mem1424[sp_1409 - 0x00000010:word32] = r5_1404 + 1515
	word32 sp_1428
	word32 ap_1429
	word32 r5_1431
	word32 r6_1432
	word32 r0_1433
	word32 r3_1434
	word32 fp_1435
	word32 r4_1436
	word32 r9_1437
	word32 r10_1438
	word32 r8_1439
	word32 r7_1440
	word32 r1_1441
	word32 r11_1442
	call r4_1403 + 2 (retsize: 4;)
		uses: ap:ap_1395,fp:fp_1396,r0:r0_1397,r1:r1_1398,r10:r10_1399,r11:r11_1400,r2:r2_1401,r3:r3_1402,r4:r4_1403,r5:r5_1404,r6:r6_1405,r7:r7_1406,r8:r8_1407,r9:r9_1408,sp:sp_1409 - 0x00000010,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1429,fp:fp_1435,r0:r0_1433,r1:r1_1441,r10:r10_1438,r11:r11_1442,r3:r3_1434,r4:r4_1436,r5:r5_1431,r6:r6_1432,r7:r7_1440,r8:r8_1439,r9:r9_1437,sp:sp_1428
	Mem1445[sp_1428 - 0x00000004:word32] = r0_1433
	Mem1448[sp_1428 - 0x00000008:word32] = r5_1431 + 1515
	Mem1450[sp_1428 - 0x0000000C:word32] = r5_1431
	word32 r2_1451 = Mem1450[r5_1431 + 0x0000C839:word32]
	word32 sp_1455
	word32 ap_1456
	word32 r2_1457
	word32 r5_1458
	word32 r6_1459
	word32 r0_1460
	word32 r3_1461
	word32 fp_1462
	word32 r4_1463
	word32 r9_1464
	word32 r10_1465
	word32 r8_1466
	word32 r7_1467
	word32 r1_1468
	word32 r11_1469
	call r2_1451 + 2 (retsize: 4;)
		uses: ap:ap_1429,fp:fp_1435,r0:r0_1433,r1:r1_1441,r10:r10_1438,r11:r11_1442,r2:r2_1451,r3:r3_1434,r4:r4_1436,r5:r5_1431,r6:r6_1432,r7:r7_1440,r8:r8_1439,r9:r9_1437,sp:sp_1428 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1456,fp:fp_1462,r0:r0_1460,r1:r1_1468,r10:r10_1465,r11:r11_1469,r2:r2_1457,r3:r3_1461,r4:r4_1463,r5:r5_1458,r6:r6_1459,r7:r7_1467,r8:r8_1466,r9:r9_1464,sp:sp_1455
	Mem1472[sp_1455 - 0x00000004:word32] = 0x00000000
	Mem1475[sp_1455 - 0x00000008:word32] = Mem1472[r5_1458 + 0x0000C664:word32]
	Mem1478[sp_1455 - 0x0000000C:word32] = r6_1459 + 2515
	Mem1481[sp_1455 - 0x00000010:word32] = r5_1458 + 1515
	word32 sp_1485
	word32 ap_1486
	word32 r5_1488
	word32 r6_1489
	word32 r0_1490
	word32 r3_1491
	word32 fp_1492
	word32 r4_1493
	word32 r9_1494
	word32 r10_1495
	word32 r8_1496
	word32 r7_1497
	word32 r1_1498
	word32 r11_1499
	call r4_1463 + 2 (retsize: 4;)
		uses: ap:ap_1456,fp:fp_1462,r0:r0_1460,r1:r1_1468,r10:r10_1465,r11:r11_1469,r2:r2_1457,r3:r3_1461,r4:r4_1463,r5:r5_1458,r6:r6_1459,r7:r7_1467,r8:r8_1466,r9:r9_1464,sp:sp_1455 - 0x00000010,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1486,fp:fp_1492,r0:r0_1490,r1:r1_1498,r10:r10_1495,r11:r11_1499,r3:r3_1491,r4:r4_1493,r5:r5_1488,r6:r6_1489,r7:r7_1497,r8:r8_1496,r9:r9_1494,sp:sp_1485
	Mem1502[sp_1485 - 0x00000004:word32] = r0_1490
	Mem1505[sp_1485 - 0x00000008:word32] = r5_1488 + 1515
	Mem1507[sp_1485 - 0x0000000C:word32] = r5_1488
	word32 r2_1508 = Mem1507[r5_1488 + 0x0000C839:word32]
	word32 sp_1512
	word32 ap_1513
	word32 r2_1514
	word32 r5_1515
	word32 r6_1516
	word32 r0_1517
	word32 r3_1518
	word32 fp_1519
	word32 r4_1520
	word32 r9_1521
	word32 r10_1522
	word32 r8_1523
	word32 r7_1524
	word32 r1_1525
	word32 r11_1526
	call r2_1508 + 2 (retsize: 4;)
		uses: ap:ap_1486,fp:fp_1492,r0:r0_1490,r1:r1_1498,r10:r10_1495,r11:r11_1499,r2:r2_1508,r3:r3_1491,r4:r4_1493,r5:r5_1488,r6:r6_1489,r7:r7_1497,r8:r8_1496,r9:r9_1494,sp:sp_1485 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1513,fp:fp_1519,r0:r0_1517,r1:r1_1525,r10:r10_1522,r11:r11_1526,r2:r2_1514,r3:r3_1518,r4:r4_1520,r5:r5_1515,r6:r6_1516,r7:r7_1524,r8:r8_1523,r9:r9_1521,sp:sp_1512
	Mem1529[sp_1512 - 0x00000004:word32] = 0x00000000
	Mem1532[sp_1512 - 0x00000008:word32] = Mem1529[r5_1515 + 0x0000C668:word32]
	Mem1535[sp_1512 - 0x0000000C:word32] = r6_1516 + 2574
	Mem1538[sp_1512 - 0x00000010:word32] = r5_1515 + 1515
	word32 sp_1542
	word32 ap_1543
	word32 r5_1545
	word32 r6_1546
	word32 r0_1547
	word32 r3_1548
	word32 fp_1549
	word32 r4_1550
	word32 r9_1551
	word32 r10_1552
	word32 r8_1553
	word32 r7_1554
	word32 r1_1555
	word32 r11_1556
	call r4_1520 + 2 (retsize: 4;)
		uses: ap:ap_1513,fp:fp_1519,r0:r0_1517,r1:r1_1525,r10:r10_1522,r11:r11_1526,r2:r2_1514,r3:r3_1518,r4:r4_1520,r5:r5_1515,r6:r6_1516,r7:r7_1524,r8:r8_1523,r9:r9_1521,sp:sp_1512 - 0x00000010,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1543,fp:fp_1549,r0:r0_1547,r1:r1_1555,r10:r10_1552,r11:r11_1556,r3:r3_1548,r4:r4_1550,r5:r5_1545,r6:r6_1546,r7:r7_1554,r8:r8_1553,r9:r9_1551,sp:sp_1542
	Mem1559[sp_1542 - 0x00000004:word32] = r0_1547
	Mem1562[sp_1542 - 0x00000008:word32] = r5_1545 + 1515
	Mem1564[sp_1542 - 0x0000000C:word32] = r5_1545
	word32 r2_1565 = Mem1564[r5_1545 + 0x0000C839:word32]
	word32 sp_1569
	word32 ap_1570
	word32 r2_1571
	word32 r5_1572
	word32 r6_1573
	word32 r0_1574
	word32 r3_1575
	word32 fp_1576
	word32 r4_1577
	word32 r9_1578
	word32 r10_1579
	word32 r8_1580
	word32 r7_1581
	word32 r1_1582
	word32 r11_1583
	call r2_1565 + 2 (retsize: 4;)
		uses: ap:ap_1543,fp:fp_1549,r0:r0_1547,r1:r1_1555,r10:r10_1552,r11:r11_1556,r2:r2_1565,r3:r3_1548,r4:r4_1550,r5:r5_1545,r6:r6_1546,r7:r7_1554,r8:r8_1553,r9:r9_1551,sp:sp_1542 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1570,fp:fp_1576,r0:r0_1574,r1:r1_1582,r10:r10_1579,r11:r11_1583,r2:r2_1571,r3:r3_1575,r4:r4_1577,r5:r5_1572,r6:r6_1573,r7:r7_1581,r8:r8_1580,r9:r9_1578,sp:sp_1569
	Mem1586[sp_1569 - 0x00000004:word32] = 0x00000000
	Mem1589[sp_1569 - 0x00000008:word32] = Mem1586[r5_1572 + 0x0000C66C:word32]
	Mem1592[sp_1569 - 0x0000000C:word32] = r6_1573 + 2637
	Mem1595[sp_1569 - 0x00000010:word32] = r5_1572 + 1515
	word32 sp_1599
	word32 ap_1600
	word32 r5_1602
	word32 r6_1603
	word32 r0_1604
	word32 r3_1605
	word32 fp_1606
	word32 r4_1607
	word32 r9_1608
	word32 r10_1609
	word32 r8_1610
	word32 r7_1611
	word32 r1_1612
	word32 r11_1613
	call r4_1577 + 2 (retsize: 4;)
		uses: ap:ap_1570,fp:fp_1576,r0:r0_1574,r1:r1_1582,r10:r10_1579,r11:r11_1583,r2:r2_1571,r3:r3_1575,r4:r4_1577,r5:r5_1572,r6:r6_1573,r7:r7_1581,r8:r8_1580,r9:r9_1578,sp:sp_1569 - 0x00000010,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1600,fp:fp_1606,r0:r0_1604,r1:r1_1612,r10:r10_1609,r11:r11_1613,r3:r3_1605,r4:r4_1607,r5:r5_1602,r6:r6_1603,r7:r7_1611,r8:r8_1610,r9:r9_1608,sp:sp_1599
	Mem1616[sp_1599 - 0x00000004:word32] = r0_1604
	Mem1619[sp_1599 - 0x00000008:word32] = r5_1602 + 1515
	Mem1621[sp_1599 - 0x0000000C:word32] = r5_1602
	word32 r2_1622 = Mem1621[r5_1602 + 0x0000C839:word32]
	word32 sp_1626
	word32 ap_1627
	word32 r2_1628
	word32 r5_1629
	word32 r6_1630
	word32 r0_1631
	word32 r3_1632
	word32 fp_1633
	word32 r4_1634
	word32 r9_1635
	word32 r10_1636
	word32 r8_1637
	word32 r7_1638
	word32 r1_1639
	word32 r11_1640
	call r2_1622 + 2 (retsize: 4;)
		uses: ap:ap_1600,fp:fp_1606,r0:r0_1604,r1:r1_1612,r10:r10_1609,r11:r11_1613,r2:r2_1622,r3:r3_1605,r4:r4_1607,r5:r5_1602,r6:r6_1603,r7:r7_1611,r8:r8_1610,r9:r9_1608,sp:sp_1599 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1627,fp:fp_1633,r0:r0_1631,r1:r1_1639,r10:r10_1636,r11:r11_1640,r2:r2_1628,r3:r3_1632,r4:r4_1634,r5:r5_1629,r6:r6_1630,r7:r7_1638,r8:r8_1637,r9:r9_1635,sp:sp_1626
	Mem1643[sp_1626 - 0x00000004:word32] = 0x00000000
	Mem1646[sp_1626 - 0x00000008:uint32] = (uint32) Mem1643[r5_1629 + 0x0000C670:word16]
	Mem1649[sp_1626 - 0x0000000C:word32] = r6_1630 + 2700
	Mem1652[sp_1626 - 0x00000010:word32] = r5_1629 + 1515
	word32 sp_1656
	word32 ap_1657
	word32 r5_1659
	word32 r6_1660
	word32 r0_1661
	word32 r3_1662
	word32 fp_1663
	word32 r4_1664
	word32 r9_1665
	word32 r10_1666
	word32 r8_1667
	word32 r7_1668
	word32 r1_1669
	word32 r11_1670
	call r4_1634 + 2 (retsize: 4;)
		uses: ap:ap_1627,fp:fp_1633,r0:r0_1631,r1:r1_1639,r10:r10_1636,r11:r11_1640,r2:r2_1628,r3:r3_1632,r4:r4_1634,r5:r5_1629,r6:r6_1630,r7:r7_1638,r8:r8_1637,r9:r9_1635,sp:sp_1626 - 0x00000010,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1657,fp:fp_1663,r0:r0_1661,r1:r1_1669,r10:r10_1666,r11:r11_1670,r3:r3_1662,r4:r4_1664,r5:r5_1659,r6:r6_1660,r7:r7_1668,r8:r8_1667,r9:r9_1665,sp:sp_1656
	Mem1673[sp_1656 - 0x00000004:word32] = r0_1661
	Mem1676[sp_1656 - 0x00000008:word32] = r5_1659 + 1515
	Mem1678[sp_1656 - 0x0000000C:word32] = r5_1659
	word32 r2_1679 = Mem1678[r5_1659 + 0x0000C839:word32]
	word32 sp_1683
	word32 ap_1684
	word32 r2_1685
	word32 r5_1686
	word32 r6_1687
	word32 r0_1688
	word32 r3_1689
	word32 fp_1690
	word32 r4_1691
	word32 r9_1692
	word32 r10_1693
	word32 r8_1694
	word32 r7_1695
	word32 r1_1696
	word32 r11_1697
	call r2_1679 + 2 (retsize: 4;)
		uses: ap:ap_1657,fp:fp_1663,r0:r0_1661,r1:r1_1669,r10:r10_1666,r11:r11_1670,r2:r2_1679,r3:r3_1662,r4:r4_1664,r5:r5_1659,r6:r6_1660,r7:r7_1668,r8:r8_1667,r9:r9_1665,sp:sp_1656 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1684,fp:fp_1690,r0:r0_1688,r1:r1_1696,r10:r10_1693,r11:r11_1697,r2:r2_1685,r3:r3_1689,r4:r4_1691,r5:r5_1686,r6:r6_1687,r7:r7_1695,r8:r8_1694,r9:r9_1692,sp:sp_1683
	Mem1700[sp_1683 - 0x00000004:word32] = 0x00000000
	Mem1703[sp_1683 - 0x00000008:uint32] = (uint32) Mem1700[r5_1686 + 0x0000C672:word16]
	Mem1706[sp_1683 - 0x0000000C:word32] = r6_1687 + 2767
	Mem1709[sp_1683 - 0x00000010:word32] = r5_1686 + 1515
	word32 sp_1713
	word32 ap_1714
	word32 r5_1716
	word32 r6_1717
	word32 r0_1718
	word32 r3_1719
	word32 fp_1720
	word32 r4_1721
	word32 r9_1722
	word32 r10_1723
	word32 r8_1724
	word32 r7_1725
	word32 r1_1726
	word32 r11_1727
	call r4_1691 + 2 (retsize: 4;)
		uses: ap:ap_1684,fp:fp_1690,r0:r0_1688,r1:r1_1696,r10:r10_1693,r11:r11_1697,r2:r2_1685,r3:r3_1689,r4:r4_1691,r5:r5_1686,r6:r6_1687,r7:r7_1695,r8:r8_1694,r9:r9_1692,sp:sp_1683 - 0x00000010,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1714,fp:fp_1720,r0:r0_1718,r1:r1_1726,r10:r10_1723,r11:r11_1727,r3:r3_1719,r4:r4_1721,r5:r5_1716,r6:r6_1717,r7:r7_1725,r8:r8_1724,r9:r9_1722,sp:sp_1713
	Mem1730[sp_1713 - 0x00000004:word32] = r0_1718
	Mem1733[sp_1713 - 0x00000008:word32] = r5_1716 + 1515
	Mem1735[sp_1713 - 0x0000000C:word32] = r5_1716
	word32 r2_1736 = Mem1735[r5_1716 + 0x0000C839:word32]
	word32 sp_1740
	word32 ap_1741
	word32 r2_1742
	word32 r5_1743
	word32 r6_1744
	word32 r0_1745
	word32 r3_1746
	word32 fp_1747
	word32 r4_1748
	word32 r9_1749
	word32 r10_1750
	word32 r8_1751
	word32 r7_1752
	word32 r1_1753
	word32 r11_1754
	call r2_1736 + 2 (retsize: 4;)
		uses: ap:ap_1714,fp:fp_1720,r0:r0_1718,r1:r1_1726,r10:r10_1723,r11:r11_1727,r2:r2_1736,r3:r3_1719,r4:r4_1721,r5:r5_1716,r6:r6_1717,r7:r7_1725,r8:r8_1724,r9:r9_1722,sp:sp_1713 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1741,fp:fp_1747,r0:r0_1745,r1:r1_1753,r10:r10_1750,r11:r11_1754,r2:r2_1742,r3:r3_1746,r4:r4_1748,r5:r5_1743,r6:r6_1744,r7:r7_1752,r8:r8_1751,r9:r9_1749,sp:sp_1740
	Mem1757[sp_1740 - 0x00000004:word32] = 0x00000000
	Mem1760[sp_1740 - 0x00000008:uint32] = (uint32) Mem1757[r5_1743 + 0x0000C674:word16]
	Mem1763[sp_1740 - 0x0000000C:word32] = r6_1744 + 2829
	Mem1766[sp_1740 - 0x00000010:word32] = r5_1743 + 1515
	word32 sp_1770
	word32 ap_1771
	word32 r5_1773
	word32 r6_1774
	word32 r0_1775
	word32 r3_1776
	word32 fp_1777
	word32 r4_1778
	word32 r9_1779
	word32 r10_1780
	word32 r8_1781
	word32 r7_1782
	word32 r1_1783
	word32 r11_1784
	call r4_1748 + 2 (retsize: 4;)
		uses: ap:ap_1741,fp:fp_1747,r0:r0_1745,r1:r1_1753,r10:r10_1750,r11:r11_1754,r2:r2_1742,r3:r3_1746,r4:r4_1748,r5:r5_1743,r6:r6_1744,r7:r7_1752,r8:r8_1751,r9:r9_1749,sp:sp_1740 - 0x00000010,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1771,fp:fp_1777,r0:r0_1775,r1:r1_1783,r10:r10_1780,r11:r11_1784,r3:r3_1776,r4:r4_1778,r5:r5_1773,r6:r6_1774,r7:r7_1782,r8:r8_1781,r9:r9_1779,sp:sp_1770
	Mem1787[sp_1770 - 0x00000004:word32] = r0_1775
	Mem1790[sp_1770 - 0x00000008:word32] = r5_1773 + 1515
	Mem1792[sp_1770 - 0x0000000C:word32] = r5_1773
	word32 r2_1793 = Mem1792[r5_1773 + 0x0000C839:word32]
	word32 sp_1797
	word32 ap_1798
	word32 r5_1800
	word32 r6_1801
	word32 r0_1802
	word32 r3_1803
	word32 fp_1804
	word32 r4_1805
	word32 r9_1806
	word32 r10_1807
	word32 r8_1808
	word32 r7_1809
	word32 r1_1810
	word32 r11_1811
	call r2_1793 + 2 (retsize: 4;)
		uses: ap:ap_1771,fp:fp_1777,r0:r0_1775,r1:r1_1783,r10:r10_1780,r11:r11_1784,r2:r2_1793,r3:r3_1776,r4:r4_1778,r5:r5_1773,r6:r6_1774,r7:r7_1782,r8:r8_1781,r9:r9_1779,sp:sp_1770 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1798,fp:fp_1804,r0:r0_1802,r1:r1_1810,r10:r10_1807,r11:r11_1811,r3:r3_1803,r4:r4_1805,r5:r5_1800,r6:r6_1801,r7:r7_1809,r8:r8_1808,r9:r9_1806,sp:sp_1797
	Mem1814[sp_1797 - 0x00000004:word32] = 0x00000000
	word32 r2_1815 = (uint32) Mem1814[r5_1800 + 0x0000C676:word16]
	Mem1818[sp_1797 - 0x00000008:word32] = r2_1815 + 0x00000001
	Mem1821[sp_1797 - 0x0000000C:word32] = r6_1801 + 2896
	Mem1824[sp_1797 - 0x00000010:word32] = r5_1800 + 1515
	word32 sp_1828
	word32 ap_1829
	word32 r5_1831
	word32 r6_1832
	word32 r0_1833
	word32 r3_1834
	word32 fp_1835
	word32 r4_1836
	word32 r9_1837
	word32 r10_1838
	word32 r8_1839
	word32 r7_1840
	word32 r1_1841
	word32 r11_1842
	call r4_1805 + 2 (retsize: 4;)
		uses: ap:ap_1798,fp:fp_1804,r0:r0_1802,r1:r1_1810,r10:r10_1807,r11:r11_1811,r2:r2_1815 + 0x00000001,r3:r3_1803,r4:r4_1805,r5:r5_1800,r6:r6_1801,r7:r7_1809,r8:r8_1808,r9:r9_1806,sp:sp_1797 - 0x00000010,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1829,fp:fp_1835,r0:r0_1833,r1:r1_1841,r10:r10_1838,r11:r11_1842,r3:r3_1834,r4:r4_1836,r5:r5_1831,r6:r6_1832,r7:r7_1840,r8:r8_1839,r9:r9_1837,sp:sp_1828
	Mem1845[sp_1828 - 0x00000004:word32] = r0_1833
	Mem1848[sp_1828 - 0x00000008:word32] = r5_1831 + 1515
	Mem1850[sp_1828 - 0x0000000C:word32] = r5_1831
	word32 r2_1851 = Mem1850[r5_1831 + 0x0000C839:word32]
	word32 sp_1855
	word32 ap_1856
	word32 r2_1857
	word32 r5_1858
	word32 r6_1859
	word32 r0_1860
	word32 fp_1862
	word32 r9_1864
	word32 r10_1865
	word32 r8_1866
	word32 r7_1867
	word32 r1_1868
	word32 r11_1869
	call r2_1851 + 2 (retsize: 4;)
		uses: ap:ap_1829,fp:fp_1835,r0:r0_1833,r1:r1_1841,r10:r10_1838,r11:r11_1842,r2:r2_1851,r3:r3_1834,r4:r4_1836,r5:r5_1831,r6:r6_1832,r7:r7_1840,r8:r8_1839,r9:r9_1837,sp:sp_1828 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1856,fp:fp_1862,r0:r0_1860,r1:r1_1868,r10:r10_1865,r11:r11_1869,r2:r2_1857,r5:r5_1858,r6:r6_1859,r7:r7_1867,r8:r8_1866,r9:r9_1864,sp:sp_1855
	Mem1872[sp_1855 - 0x00000004:word32] = 0x00000000
	word32 r3_1873 = (uint32) Mem1872[r5_1858 + 0x0000C678:word16]
	branch (r3_1873 & 0x00000001) == 0x00000000 l00013804
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013804:
	branch (r3_1873 & 0x00000002) == 0x00000000 l00013810
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013810:
	r3_1873 = r8_1866 + 57
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013808:
	r3_1873 = r8_1866 + 64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013814:
	r4_1886 = r3_1873
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000137FE:
	r4_1886 = r8_1866 + 71
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013817:
	word32 r7_2392
	word32 r10_2390
	word32 r9_2389
	word32 r4_2388
	word32 r11_2394
	word32 r1_2393
	word32 r0_2385
	word32 r2_2382
	word32 ap_2381
	word32 fp_2387
	word32 r8_2391
	word32 r6_2384
	word32 sp_2380
	word32 r5_2383
	Mem1898[sp_1855 - 0x00000008:word32] = r4_1886
	Mem1903[sp_1855 - 0x0000000C:word32] = r6_1859 + 2957
	Mem1908[sp_1855 - 0x00000010:word32] = r5_1858 + 1515
	word32 sp_1912
	word32 ap_1915
	word32 r5_1919
	word32 r6_1920
	word32 r0_1923
	word32 r3_1925
	word32 fp_1928
	word32 r4_1929
	word32 r9_1932
	word32 r10_1935
	word32 r8_1938
	word32 r7_1941
	word32 r1_1944
	word32 r11_1947
	call Mem1908[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1856,fp:fp_1862,r0:r0_1860,r1:r1_1868,r10:r10_1865,r11:r11_1869,r2:r2_1857,r3:r3_1924,r4:r4_1897,r5:r5_1858,r6:r6_1859,r7:r7_1867,r8:r8_1866,r9:r9_1864,sp:sp_1855 - 0x00000010,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1915,fp:fp_1928,r0:r0_1923,r1:r1_1944,r10:r10_1935,r11:r11_1947,r3:r3_1925,r4:r4_1929,r5:r5_1919,r6:r6_1920,r7:r7_1941,r8:r8_1938,r9:r9_1932,sp:sp_1912
	Mem1950[sp_1912 - 0x00000004:word32] = r0_1923
	Mem1953[sp_1912 - 0x00000008:word32] = r5_1919 + 1515
	Mem1955[sp_1912 - 0x0000000C:word32] = r5_1919
	word32 r2_1956 = Mem1955[r5_1919 + 0x0000C839:word32]
	word32 sp_1960
	word32 ap_1961
	word32 r5_1963
	word32 r6_1964
	word32 r0_1965
	word32 r3_1966
	word32 fp_1967
	word32 r4_1968
	word32 r10_1970
	word32 r8_1971
	word32 r7_1972
	word32 r11_1974
	word32 r1_1973
	call r2_1956 + 2 (retsize: 4;)
		uses: ap:ap_1915,fp:fp_1928,r0:r0_1923,r1:r1_1944,r10:r10_1935,r11:r11_1947,r2:r2_1956,r3:r3_1925,r4:r4_1929,r5:r5_1919,r6:r6_1920,r7:r7_1941,r8:r8_1938,r9:r9_1932,sp:sp_1912 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1961,fp:fp_1967,r0:r0_1965,r1:r1_1973,r10:r10_1970,r11:r11_1974,r3:r3_1966,r4:r4_1968,r5:r5_1963,r6:r6_1964,r7:r7_1972,r8:r8_1971,sp:sp_1960
	Mem1978[sp_1960 + 14:word16] = (word16) (uint32) Mem1955[r5_1963 + 0x0000C67C:word16] & ~0x0000
	word32 r9_1979 = (uint32) Mem1978[sp_1960 + 2:word16]
	branch r9_1979 == 0x00000002 l00013854
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013854:
	word32 r4_1985 = fp_1967 + 0xFFFFFFD7
	word32 r0_1986 = 0x00000000
	word32 r2_1987 = fp_1967 + -20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013868:
	Mem1993[r2_1987:byte] = 0x00
	r2_1987 = r2_1987 + 0x00000001
	r0_1986 = r0_1986 + 0x00000001
	branch r0_1986 <= 0x0000000B l00013868
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013870:
	word32 r7_1999 = (uint32) Mem1993[sp_1960 + 14:word16]
	branch (r7_1999 & 0x00000100) == 0x00000000 l0001387D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013878:
	Mem2005[fp_1967 + -20:byte] = 0x52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001387D:
	branch (r7_1999 & 0x00000080) == 0x00000000 l0001388B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013881:
	Mem2012[fp_1967 + -19:byte] = 0x57
	Mem2014[fp_1967 + -17:byte] = 0x44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001388B:
	branch (r7_1999 & 0x00000040) == 0x00000000 l00013894
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001388F:
	Mem2021[fp_1967 + -18:byte] = 0x45
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013894:
	branch (r7_1999 & 0x00000020) == 0x00000000 l0001389D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013898:
	Mem2028[fp_1967 + -16:byte] = 0x52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001389D:
	branch (r7_1999 & 0x00000010) == 0x00000000 l000138AB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138A1:
	Mem2035[fp_1967 + -15:byte] = 0x57
	Mem2037[fp_1967 + -13:byte] = 0x44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138AB:
	branch (r7_1999 & 0x00000008) == 0x00000000 l000138B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138AF:
	Mem2044[fp_1967 + -14:byte] = 0x45
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138B4:
	branch (r7_1999 & 0x00000004) == 0x00000000 l000138BD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138B8:
	Mem2051[fp_1967 + -12:byte] = 0x52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138BD:
	branch (r7_1999 & 0x00000002) == 0x00000000 l000138CB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138C1:
	Mem2058[fp_1967 + -11:byte] = 0x57
	Mem2060[fp_1967 + -9:byte] = 0x44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138CB:
	branch (r7_1999 & 0x00000001) == 0x00000000 l000138D3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138CE:
	Mem2067[fp_1967 + -10:byte] = 0x45
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138D3:
	Mem2082[fp_1967 + -42:byte] = 0x28
	word32 r3_2083 = fp_1967 + 0xFFFFFFD7
	word32 r7_2084 = 0x00000000
	word32 r2_2085 = 0x00000000
	branch false l00013920
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138DF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138E0:
	r1_1973 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138E4:
	branch Mem2096[fp_1967 + -20 + r2_2085:byte] == 0x00 l000138EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138EA:
	Mem2103[r3_2083:byte] = Mem2096[fp_1967 + -20 + r2_2085:byte]
	r3_2083 = r3_2083 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138EF:
	r1_1973 = r1_1973 + 0x00000001
	r2_2085 = r2_2085 + 0x00000001
	branch r1_1973 < 0x00000004 l000138E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138F8:
	Mem2118[r3_2083:byte] = 0x2C
	r3_2083 = r3_2083 + 0x00000001
	branch r7_2084 != 0x00000000 l00013919
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138FF:
	Mem2135[r3_2083:byte] = Mem2118[r4_1985:byte]
	r1_1973 = r3_2083
	r3_2083 = r3_2083 + 0x00000001
	r4_1985 = r4_1985 + 0x00000001
	branch Mem2135[r3_2083:byte] == 0x2C l00013919
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001390C:
	Mem2147[r3_6976:byte] = Mem2145[r4_1985:byte]
	r1_1973 = r3_6976
	r3_2083 = r3_6976 + 0x00000001
	r4_1985 = r4_1985 + 0x00000001
	r3_6976 = r3_2083
	branch Mem2147[r3_6976:byte] != 0x2C l0001390C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013919:
	r7_2084 = r7_2084 + 0x00000001
	branch r7_2084 < 0x00000003 l000138E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013920:
	Mem2162[r3_2083:byte] = 0x00
	word32 r3_2160 = r3_2083 - 0x00000001
	Mem2164[r3_2160:byte] = 0x29
	Mem2181[sp_1960 - 0x00000004:word32] = 0x00000000
	Mem2189[sp_1960 - 0x00000008:word32] = fp_1967 + -42
	Mem2192[sp_1960 - 0x0000000C:uint32] = (uint32) Mem2189[sp_1960 + 0x0000000A:word16]
	Mem2211[sp_1960 - 0x00000010:word32] = r6_1964 + 3013
	Mem2230[sp_1960 - 0x00000014:word32] = r5_1963 + 1515
	word32 sp_2234
	word32 ap_2251
	word32 r5_2253
	word32 r6_2254
	word32 r0_2269
	word32 r3_2270
	word32 fp_2271
	word32 r4_2284
	word32 r9_2301
	word32 r10_2318
	word32 r8_2335
	word32 r7_2337
	word32 r1_2350
	word32 r11_2367
	call Mem2230[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1961,fp:fp_1967,r0:r0_1996,r1:r1_2338,r10:r10_1970,r11:r11_1974,r2:r3_2157,r3:r3_2160,r4:r4_2272,r5:r5_1963,r6:r6_1964,r7:r7_2336,r8:r8_1971,r9:r9_1979,sp:sp_1960 - 0x00000014,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_2251,fp:fp_2271,r0:r0_2269,r1:r1_2350,r10:r10_2318,r11:r11_2367,r3:r3_2270,r4:r4_2284,r5:r5_2253,r6:r6_2254,r7:r7_2337,r8:r8_2335,r9:r9_2301,sp:sp_2234
	Mem2370[sp_2234 - 0x00000004:word32] = r0_2269
	Mem2373[sp_2234 - 0x00000008:word32] = r5_2253 + 1515
	Mem2375[sp_2234 - 0x0000000C:word32] = r5_2253
	word32 r2_2376 = Mem2375[r5_2253 + 0x0000C839:word32]
	call r2_2376 + 2 (retsize: 4;)
		uses: ap:ap_2251,fp:fp_2271,r0:r0_2269,r1:r1_2350,r10:r10_2318,r11:r11_2367,r2:r2_2376,r3:r3_2270,r4:r4_2284,r5:r5_2253,r6:r6_2254,r7:r7_2337,r8:r8_2335,r9:r9_2301,sp:sp_2234 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_2381,fp:fp_2387,r0:r0_2385,r1:r1_2393,r10:r10_2390,r11:r11_2394,r2:r2_2382,r4:r4_2388,r5:r5_2383,r6:r6_2384,r7:r7_2392,r8:r8_2391,r9:r9_2389,sp:sp_2380
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013851:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013958:
	branch r9_1979 == 0x00000001 l00013960
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013960:
	word32 r2_2400 = (uint32) Mem1978[sp_1960 + 14:word16] & ~0xFFFFF3FF
	branch r2_2400 < 0x00000400 l00013990
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013974:
	branch r2_2400 == 0x00000400 l00013988
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013988:
	Mem2406[fp_1967 + -42:byte] = 0x2D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013976:
	branch r2_2400 != 0x00000800 l00013990
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013990:
	Mem2415[fp_1967 + -42:byte] = 0x3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001397F:
	Mem2420[fp_1967 + -42:byte] = 0x64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013994:
	word32 r3_2434
	word32 r7_2427 = (uint32) Mem2426[sp_1960 + 14:word16]
	branch (r7_2427 & 0x00000080) == 0x00000000 l000139A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139A4:
	r3_2434 = DPB(r3_1966, 0x2D, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001399C:
	r3_2434 = DPB(r3_1966, 0x68, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139A7:
	word32 r4_2456
	Mem2447[fp_1967 + -41:byte] = (byte) r3_2434
	branch (r7_2427 & 0x00000040) == 0x00000000 l000139B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139B8:
	r4_2456 = DPB(r4_1968, 0x2D, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139AF:
	r4_2456 = DPB(r4_1968, 0x73, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139BB:
	word32 r3_2475
	Mem2468[fp_1967 + -40:byte] = (byte) r4_2456
	branch (r7_2427 & 0x00000020) == 0x00000000 l000139CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139CC:
	r3_2475 = DPB(r3_2434, 0x2D, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139C3:
	r3_2475 = DPB(r3_2434, 0x70, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139CF:
	word32 r4_2494
	Mem2487[fp_1967 + -39:byte] = (byte) r3_2475
	branch (r7_2427 & 0x00000010) == 0x00000000 l000139E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139E0:
	r4_2494 = DPB(r4_2456, 0x2D, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139D7:
	r4_2494 = DPB(r4_2456, 0x61, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139E3:
	word32 r3_2513
	Mem2506[fp_1967 + -38:byte] = (byte) r4_2494
	branch (r7_2427 & 0x00000008) == 0x00000000 l000139F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139F4:
	r3_2513 = DPB(r3_2475, 0x2D, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139EB:
	r3_2513 = DPB(r3_2475, 0x72, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139F7:
	word32 r4_2532
	Mem2525[fp_1967 + -37:byte] = (byte) r3_2513
	branch (r7_2427 & 0x00000004) == 0x00000000 l00013A08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A08:
	r4_2532 = DPB(r4_2494, 0x2D, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139FF:
	r4_2532 = DPB(r4_2494, 0x77, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A0B:
	word32 r3_2551
	Mem2544[fp_1967 + -36:byte] = (byte) r4_2532
	branch (r7_2427 & 0x00000002) == 0x00000000 l00013A1C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A1C:
	r3_2551 = DPB(r3_2513, 0x2D, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A13:
	r3_2551 = DPB(r3_2513, 0x65, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A1F:
	word32 r4_2570
	Mem2563[fp_1967 + -35:byte] = (byte) r3_2551
	branch (r7_2427 & 0x00000001) == 0x00000000 l00013A2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A2C:
	r4_2570 = DPB(r4_2532, 0x2D, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A26:
	r4_2570 = DPB(r4_2532, 0x64, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A2F:
	Mem2582[fp_1967 + -34:byte] = (byte) r4_2570
	Mem2584[fp_1967 + -33:byte] = 0x00
	Mem2594[sp_1960 - 0x00000004:word32] = 0x00000000
	Mem2597[sp_1960 - 0x00000008:word32] = fp_1967 + -42
	Mem2600[sp_1960 - 0x0000000C:word32] = r7_2427
	Mem2613[sp_1960 - 0x00000010:word32] = r6_1964 + 3067
	Mem2626[sp_1960 - 0x00000014:word32] = r5_1963 + 1515
	word32 sp_2630
	word32 ap_2641
	word32 r5_2653
	word32 r6_2654
	word32 r0_2665
	word32 r3_2667
	word32 fp_2668
	word32 r4_2669
	word32 r9_2680
	word32 r10_2691
	word32 r8_2702
	word32 r7_2703
	word32 r1_2714
	word32 r11_2725
	call Mem2626[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1961,fp:fp_1967,r0:r0_1965,r1:r1_1973,r10:r10_1970,r11:r11_1974,r2:r2_2400,r3:r3_2560,r4:r4_2579,r5:r5_1963,r6:r6_1964,r7:r7_2427,r8:r8_1971,r9:r9_1979,sp:sp_1960 - 0x00000014,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_2641,fp:fp_2668,r0:r0_2665,r1:r1_2714,r10:r10_2691,r11:r11_2725,r3:r3_2667,r4:r4_2669,r5:r5_2653,r6:r6_2654,r7:r7_2703,r8:r8_2702,r9:r9_2680,sp:sp_2630
	Mem2728[sp_2630 - 0x00000004:word32] = r0_2665
	Mem2731[sp_2630 - 0x00000008:word32] = r5_2653 + 1515
	Mem2733[sp_2630 - 0x0000000C:word32] = r5_2653
	word32 r2_2734 = Mem2733[r5_2653 + 0x0000C839:word32]
	call r2_2734 + 2 (retsize: 4;)
		uses: ap:ap_2641,fp:fp_2668,r0:r0_2665,r1:r1_2714,r10:r10_2691,r11:r11_2725,r2:r2_2734,r3:r3_2667,r4:r4_2669,r5:r5_2653,r6:r6_2654,r7:r7_2703,r8:r8_2702,r9:r9_2680,sp:sp_2630 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_2739,fp:fp_2745,r0:r0_2743,r1:r1_2751,r10:r10_2748,r11:r11_2752,r2:r2_2740,r4:r4_2746,r5:r5_2741,r6:r6_2742,r7:r7_2750,r8:r8_2749,r9:r9_2747,sp:sp_2738
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001395D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A64:
	branch r9_1979 != 0x00000000 l00013A6B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A6B:
	branch r9_1979 != 0x00000006 l00013A73
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A73:
	branch r9_1979 != 0x0000000B l00013A7B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A7B:
	branch r9_1979 != 0x0000000E l00013A83
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A83:
	branch r9_1979 != 0x0000000D l00013A8B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A8B:
	branch r9_1979 != 0x00000004 l00013A93
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A93:
	branch r9_1979 != 0x0000000F l00013A9B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A9B:
	word32 r2_2777 = (uint32) Mem1978[sp_1960 + 14:word16] & ~0xFFFF0FFF
	branch r2_2777 < 0x00001000 l00013B2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AAF:
	branch r2_2777 == 0x00001000 l00013B1C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B1C:
	Mem2783[fp_1967 + -42:byte] = 0x70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AB1:
	branch r2_2777 < 0x00002000 l00013B2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013ABA:
	branch r2_2777 == 0x00002000 l00013B14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B14:
	Mem2792[fp_1967 + -42:byte] = 0x63
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013ABC:
	branch r2_2777 < 0x00004000 l00013B2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AC5:
	branch r2_2777 == 0x00004000 l00013AF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AF4:
	Mem2801[fp_1967 + -42:byte] = 0x64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AC7:
	branch r2_2777 < 0x00006000 l00013B2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AD0:
	branch r2_2777 == 0x00006000 l00013B0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B0C:
	Mem2810[fp_1967 + -42:byte] = 0x62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AD2:
	branch r2_2777 < 0x00008000 l00013B2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013ADB:
	branch r2_2777 == 0x00008000 l00013AFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AFC:
	Mem2819[fp_1967 + -42:byte] = 0x2D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013ADD:
	branch r2_2777 < 0x0000A000 l00013B2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AE6:
	branch r2_2777 == 0x0000A000 l00013B04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B04:
	Mem2828[fp_1967 + -42:byte] = 0x6C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AE8:
	branch r2_2777 == 0x0000C000 l00013B24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B24:
	Mem2836[fp_1967 + -42:byte] = 0x73
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AF1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B2C:
	Mem2842[fp_1967 + -42:byte] = 0x3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B30:
	word32 r3_2856
	word32 r7_2849 = (uint32) Mem2848[sp_1960 + 14:word16]
	branch (r7_2849 & 0x00000100) == 0x00000000 l00013B40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B40:
	r3_2856 = DPB(r3_1966, 0x2D, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B38:
	r3_2856 = DPB(r3_1966, 0x72, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B43:
	word32 r4_2878
	Mem2869[fp_1967 + -41:byte] = (byte) r3_2856
	branch (r7_2849 & 0x00000020) == 0x00000000 l00013B54
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B54:
	r4_2878 = DPB(r4_1968, 0x2D, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B4B:
	r4_2878 = DPB(r4_1968, 0x72, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B57:
	word32 r3_2897
	Mem2890[fp_1967 + -38:byte] = (byte) r4_2878
	branch (r7_2849 & 0x00000004) == 0x00000000 l00013B68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B68:
	r3_2897 = DPB(r3_2856, 0x2D, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B5F:
	r3_2897 = DPB(r3_2856, 0x72, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B6B:
	word32 r4_2916
	Mem2909[fp_1967 + -35:byte] = (byte) r3_2897
	branch (r7_2849 & 0x00000080) == 0x00000000 l00013B7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B7C:
	r4_2916 = DPB(r4_2878, 0x2D, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B73:
	r4_2916 = DPB(r4_2878, 0x77, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B7F:
	word32 r3_2935
	Mem2928[fp_1967 + -40:byte] = (byte) r4_2916
	branch (r7_2849 & 0x00000010) == 0x00000000 l00013B90
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B90:
	r3_2935 = DPB(r3_2897, 0x2D, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B87:
	r3_2935 = DPB(r3_2897, 0x77, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B93:
	word32 r4_2954
	Mem2947[fp_1967 + -37:byte] = (byte) r3_2935
	branch (r7_2849 & 0x00000002) == 0x00000000 l00013BA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BA4:
	r4_2954 = DPB(r4_2916, 0x2D, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B9B:
	r4_2954 = DPB(r4_2916, 0x77, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BA7:
	word32 r2_2980
	Mem2966[fp_1967 + -34:byte] = (byte) r4_2954
	branch (r7_2849 & 0x00000040) == 0x00000000 l00013BC8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BC8:
	branch (r7_2849 & 0x00000800) == 0x00000000 l00013BD4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BD4:
	r2_2980 = DPB(r2_2777, 0x2D, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BCC:
	r2_2980 = DPB(r2_2777, 0x53, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BD7:
	Mem2992[fp_1967 + -39:byte] = (byte) r2_2980
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BAF:
	branch (r7_2849 & 0x00000800) == 0x00000000 l00013BBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BBC:
	r2_2980 = DPB(r2_2777, 0x78, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BB3:
	r2_2980 = DPB(r2_2777, 0x73, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BC0:
	Mem3009[fp_1967 + -39:byte] = (byte) r2_2980
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BDB:
	word32 r2_3029
	word32 r3_3023 = (uint32) Mem3022[sp_1960 + 14:word16]
	branch (r3_3023 & 0x00000008) == 0x00000000 l00013BFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BFC:
	branch (r3_3023 & 0x00000400) == 0x00000000 l00013C08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C08:
	r2_3029 = DPB(r2_2980, 0x2D, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C00:
	r2_3029 = DPB(r2_2980, 0x6C, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C0B:
	Mem3042[fp_1967 + -36:byte] = (byte) r2_3029
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BE3:
	branch (r3_3023 & 0x00000400) == 0x00000000 l00013BF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BF0:
	r2_3029 = DPB(r2_2980, 0x78, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BE7:
	r2_3029 = DPB(r2_2980, 0x73, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BF4:
	Mem3059[fp_1967 + -36:byte] = (byte) r2_3029
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C0F:
	word32 r2_3073
	word32 r3_3067 = (uint32) Mem3066[sp_1960 + 14:word16]
	branch (r3_3067 & 0x00000001) == 0x00000000 l00013C2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C2C:
	branch (r3_3067 & 0x00000200) == 0x00000000 l00013C38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C38:
	r2_3073 = DPB(r2_3029, 0x2D, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C30:
	r2_3073 = DPB(r2_3029, 0x54, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C3B:
	Mem3086[fp_1967 + -33:byte] = (byte) r2_3073
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C16:
	branch (r3_3067 & 0x00000200) == 0x00000000 l00013C20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C20:
	r2_3073 = DPB(r2_3029, 0x78, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C1A:
	r2_3073 = DPB(r2_3029, 0x74, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C24:
	Mem3103[fp_1967 + -33:byte] = (byte) r2_3073
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C3F:
	Mem3109[fp_1967 + -32:byte] = 0x00
	Mem3114[sp_1960 - 0x00000004:word32] = 0x00000000
	Mem3117[sp_1960 - 0x00000008:word32] = fp_1967 + -42
	Mem3120[sp_1960 - 0x0000000C:uint32] = (uint32) Mem3117[sp_1960 + 0x0000000A:word16]
	Mem3140[sp_1960 - 0x00000010:word32] = r6_1964 + 3121
	Mem3160[sp_1960 - 0x00000014:word32] = r5_1963 + 1515
	word32 sp_3164
	word32 ap_3182
	word32 r5_3185
	word32 r6_3186
	word32 r0_3204
	word32 r3_3208
	word32 fp_3209
	word32 r4_3219
	word32 r9_3237
	word32 r10_3255
	word32 r8_3273
	word32 r7_3283
	word32 r1_3301
	word32 r11_3319
	call Mem3160[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1961,fp:fp_1967,r0:r0_1965,r1:r1_1973,r10:r10_1970,r11:r11_1974,r2:r2_3183,r3:r3_3067,r4:r4_2963,r5:r5_1963,r6:r6_1964,r7:r7_2849,r8:r8_1971,r9:r9_1979,sp:sp_1960 - 0x00000014,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3182,fp:fp_3209,r0:r0_3204,r1:r1_3301,r10:r10_3255,r11:r11_3319,r3:r3_3208,r4:r4_3219,r5:r5_3185,r6:r6_3186,r7:r7_3283,r8:r8_3273,r9:r9_3237,sp:sp_3164
	Mem3322[sp_3164 - 0x00000004:word32] = r0_3204
	Mem3325[sp_3164 - 0x00000008:word32] = r5_3185 + 1515
	Mem3327[sp_3164 - 0x0000000C:word32] = r5_3185
	word32 r2_3328 = Mem3327[r5_3185 + 0x0000C839:word32]
	call r2_3328 + 2 (retsize: 4;)
		uses: ap:ap_3182,fp:fp_3209,r0:r0_3204,r1:r1_3301,r10:r10_3255,r11:r11_3319,r2:r2_3328,r3:r3_3208,r4:r4_3219,r5:r5_3185,r6:r6_3186,r7:r7_3283,r8:r8_3273,r9:r9_3237,sp:sp_3164 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3333,fp:fp_3339,r0:r0_3337,r1:r1_3345,r10:r10_3342,r11:r11_3346,r2:r2_3334,r4:r4_3340,r5:r5_3335,r6:r6_3336,r7:r7_3344,r8:r8_3343,r9:r9_3341,sp:sp_3332
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A98:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A90:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A88:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A80:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A78:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A70:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A68:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C70:
	Mem3350[sp_1960 - 0x00000004:word32] = 0x00000000
	word32 r2_3352 = (uint32) Mem3350[r5_1963 + 0x0000C67B:ui24]
	Mem3354[sp_1960 - 0x00000008:word32] = r2_3352
	Mem3358[sp_1960 - 0x0000000C:word32] = r6_1964 + 3175
	Mem3361[sp_1960 - 0x00000010:word32] = r5_1963 + 1515
	word32 sp_3365
	word32 ap_3367
	word32 r5_3369
	word32 r6_3370
	word32 r0_3372
	word32 r3_3374
	word32 fp_3376
	word32 r4_3378
	word32 r9_3380
	word32 r10_3382
	word32 r8_3384
	word32 r7_3386
	word32 r1_3388
	word32 r11_3390
	call Mem3361[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1961,fp:fp_1967,r0:r0_1965,r1:r1_1973,r10:r10_1970,r11:r11_1974,r2:r2_3352,r3:r3_1966,r4:r4_1968,r5:r5_1963,r6:r6_1964,r7:r7_1972,r8:r8_1971,r9:r9_1979,sp:sp_1960 - 0x00000010,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3367,fp:fp_3376,r0:r0_3372,r1:r1_3388,r10:r10_3382,r11:r11_3390,r3:r3_3374,r4:r4_3378,r5:r5_3369,r6:r6_3370,r7:r7_3386,r8:r8_3384,r9:r9_3380,sp:sp_3365
	Mem3393[sp_3365 - 0x00000004:word32] = r0_3372
	Mem3396[sp_3365 - 0x00000008:word32] = r5_3369 + 1515
	Mem3398[sp_3365 - 0x0000000C:word32] = r5_3369
	word32 r2_3399 = Mem3398[r5_3369 + 0x0000C839:word32]
	call r2_3399 + 2 (retsize: 4;)
		uses: ap:ap_3367,fp:fp_3376,r0:r0_3372,r1:r1_3388,r10:r10_3382,r11:r11_3390,r2:r2_3399,r3:r3_3374,r4:r4_3378,r5:r5_3369,r6:r6_3370,r7:r7_3386,r8:r8_3384,r9:r9_3380,sp:sp_3365 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3404,fp:fp_3410,r0:r0_3408,r1:r1_3416,r10:r10_3413,r11:r11_3417,r2:r2_3405,r4:r4_3411,r5:r5_3406,r6:r6_3407,r7:r7_3415,r8:r8_3414,r9:r9_3412,sp:sp_3403
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C9E:
	word32 r11_3664
	word32 r1_3663
	word32 r7_3662
	word32 r8_3661
	word32 r10_3660
	word32 r4_3658
	word32 fp_3657
	word32 r3_3656
	word32 r0_3655
	word32 ap_3651
	word32 r6_3654
	word32 sp_3650
	word32 r5_3653
	word32 r9_3659
	Mem3423[sp_2380 + 14:word16] = Mem3420[r5_2383 + 0x0000C67A:word16] & ~0xFF00
	word32 r3_3424 = (uint32) Mem3423[sp_2380 + 14:word16]
	branch r3_3424 != 0x00000000 l00013CD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013CD8:
	branch r3_3424 != 0x00000001 l00013D08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D08:
	word32 r10_3438
	word32 sp_3432 = sp_2380 - 0x00000004
	Mem3433[sp_3432:word32] = 0x00000000
	branch (r3_3424 & 0x00000020) == 0x00000000 l00013D14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D14:
	r10_3438 = r6_2384
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D0E:
	r10_3438 = r8_2391 + 101
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D17:
	word32 r9_3456
	Mem3450[sp_3432 - 0x00000004:word32] = r10_3438
	branch (r3_3424 & 0x00000010) == 0x00000000 l00013D24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D24:
	r9_3456 = r6_2384
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D1D:
	r9_3456 = r8_2391 + 96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D27:
	word32 r7_3474
	Mem3468[sp_3432 - 0x00000008:word32] = r9_3456
	branch (r3_3424 & 0x00000008) == 0x00000000 l00013D34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D34:
	r7_3474 = r6_2384
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D2D:
	r7_3474 = r8_2391 + 91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D37:
	word32 r4_3492
	Mem3486[sp_3432 - 0x0000000C:word32] = r7_3474
	branch (r3_3424 & 0x00000004) == 0x00000000 l00013D44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D44:
	r4_3492 = r6_2384
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D3D:
	r4_3492 = r8_2391 + 86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D47:
	Mem3504[sp_3432 - 0x00000010:word32] = r4_3492
	branch (r3_3424 & 0x00000002) == 0x00000000 l00013D54
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D54:
	Mem3516[fp_2387 + -62:word32] = r6_2384
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D4D:
	Mem3522[fp_2387 + -62:word32] = r8_2391 + 81
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D58:
	Mem3531[sp_3432 - 0x00000014:word32] = Mem3529[fp_2387 + -62:word32]
	branch (r3_3424 & 0x00000001) == 0x00000000 l00013D68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D68:
	Mem3538[fp_2387 + -66:word32] = r6_2384
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D5E:
	Mem3544[fp_2387 + -66:word32] = r8_2391 + 76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D6C:
	Mem3553[sp_3432 - 0x00000018:word32] = Mem3551[fp_2387 + -66:word32]
	Mem3556[sp_3432 - 0x0000001C:word32] = r3_3424
	Mem3560[sp_3432 - 0x00000020:word32] = r6_2384 + 3363
	Mem3569[sp_3432 - 0x00000024:word32] = r5_2383 + 1515
	word32 sp_3573
	word32 ap_3581
	word32 r5_3590
	word32 r6_3591
	word32 r0_3599
	word32 r3_3600
	word32 fp_3601
	word32 r4_3604
	word32 r9_3609
	word32 r10_3615
	word32 r8_3617
	word32 r7_3621
	word32 r1_3629
	word32 r11_3637
	call Mem3569[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_3580,fp:fp_3515,r0:r0_3598,r1:r1_3628,r10:r10_3449,r11:r11_3636,r2:r2_3588,r3:r3_3424,r4:r4_3503,r5:r5_3419,r6:r6_3437,r7:r7_3485,r8:r8_3442,r9:r9_3467,sp:sp_3432 - 0x00000024,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3581,fp:fp_3601,r0:r0_3599,r1:r1_3629,r10:r10_3615,r11:r11_3637,r3:r3_3600,r4:r4_3604,r5:r5_3590,r6:r6_3591,r7:r7_3621,r8:r8_3617,r9:r9_3609,sp:sp_3573
	Mem3640[sp_3573 - 0x00000004:word32] = r0_3599
	Mem3643[sp_3573 - 0x00000008:word32] = r5_3590 + 1515
	Mem3645[sp_3573 - 0x0000000C:word32] = r5_3590
	word32 r2_3646 = Mem3645[r5_3590 + 0x0000C839:word32]
	call r2_3646 + 2 (retsize: 4;)
		uses: ap:ap_3581,fp:fp_3601,r0:r0_3599,r1:r1_3629,r10:r10_3615,r11:r11_3637,r2:r2_3646,r3:r3_3600,r4:r4_3604,r5:r5_3590,r6:r6_3591,r7:r7_3621,r8:r8_3617,r9:r9_3609,sp:sp_3573 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3651,fp:fp_3657,r0:r0_3655,r1:r1_3663,r10:r10_3660,r11:r11_3664,r3:r3_3656,r4:r4_3658,r5:r5_3653,r6:r6_3654,r7:r7_3662,r8:r8_3661,r9:r9_3659,sp:sp_3650
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013CDD:
	word32 sp_3666 = sp_2380 - 0x00000004
	Mem3667[sp_3666:word32] = 0x00000000
	Mem3669[sp_3666 - 0x00000004:word32] = r3_3424
	Mem3672[sp_3666 - 0x00000008:word32] = r6_2384 + 3298
	Mem3675[sp_3666 - 0x0000000C:word32] = r5_2383 + 1515
	word32 sp_3679
	word32 ap_3680
	word32 r5_3682
	word32 r6_3683
	word32 r0_3684
	word32 r3_3685
	word32 fp_3686
	word32 r4_3688
	word32 r9_3690
	word32 r10_3692
	word32 r8_3693
	word32 r7_3695
	word32 r1_3696
	word32 r11_3697
	call Mem3675[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_3580,fp:fp_3515,r0:r0_3598,r1:r1_3628,r10:r10_3691,r11:r11_3636,r2:r2_3588,r3:r3_3424,r4:r4_3687,r5:r5_3419,r6:r6_3437,r7:r7_3694,r8:r8_3442,r9:r9_3689,sp:sp_3666 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3680,fp:fp_3686,r0:r0_3684,r1:r1_3696,r10:r10_3692,r11:r11_3697,r3:r3_3685,r4:r4_3688,r5:r5_3682,r6:r6_3683,r7:r7_3695,r8:r8_3693,r9:r9_3690,sp:sp_3679
	Mem3700[sp_3679 - 0x00000004:word32] = r0_3684
	Mem3703[sp_3679 - 0x00000008:word32] = r5_3682 + 1515
	Mem3705[sp_3679 - 0x0000000C:word32] = r5_3682
	word32 r2_3706 = Mem3705[r5_3682 + 0x0000C839:word32]
	call r2_3706 + 2 (retsize: 4;)
		uses: ap:ap_3680,fp:fp_3686,r0:r0_3684,r1:r1_3696,r10:r10_3692,r11:r11_3697,r2:r2_3706,r3:r3_3685,r4:r4_3688,r5:r5_3682,r6:r6_3683,r7:r7_3695,r8:r8_3693,r9:r9_3690,sp:sp_3679 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3711,fp:fp_3717,r0:r0_3715,r1:r1_3723,r10:r10_3720,r11:r11_3724,r3:r3_3716,r4:r4_3718,r5:r5_3713,r6:r6_3714,r7:r7_3722,r8:r8_3721,r9:r9_3719,sp:sp_3710
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013CAF:
	word32 sp_3726 = sp_2380 - 0x00000004
	Mem3727[sp_3726:word32] = 0x00000000
	Mem3729[sp_3726 - 0x00000004:word32] = r3_3424
	Mem3732[sp_3726 - 0x00000008:word32] = r6_2384 + 3238
	Mem3735[sp_3726 - 0x0000000C:word32] = r5_2383 + 1515
	word32 sp_3739
	word32 ap_3740
	word32 r5_3742
	word32 r6_3743
	word32 r0_3744
	word32 r3_3745
	word32 fp_3746
	word32 r4_3747
	word32 r9_3748
	word32 r10_3749
	word32 r8_3750
	word32 r7_3751
	word32 r1_3752
	word32 r11_3753
	call Mem3735[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_3580,fp:fp_3515,r0:r0_3598,r1:r1_3628,r10:r10_3691,r11:r11_3636,r2:r2_3588,r3:r3_3424,r4:r4_3687,r5:r5_3419,r6:r6_3437,r7:r7_3694,r8:r8_3442,r9:r9_3689,sp:sp_3726 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3740,fp:fp_3746,r0:r0_3744,r1:r1_3752,r10:r10_3749,r11:r11_3753,r3:r3_3745,r4:r4_3747,r5:r5_3742,r6:r6_3743,r7:r7_3751,r8:r8_3750,r9:r9_3748,sp:sp_3739
	Mem3756[sp_3739 - 0x00000004:word32] = r0_3744
	Mem3759[sp_3739 - 0x00000008:word32] = r5_3742 + 1515
	Mem3761[sp_3739 - 0x0000000C:word32] = r5_3742
	word32 r2_3762 = Mem3761[r5_3742 + 0x0000C839:word32]
	call r2_3762 + 2 (retsize: 4;)
		uses: ap:ap_3740,fp:fp_3746,r0:r0_3744,r1:r1_3752,r10:r10_3749,r11:r11_3753,r2:r2_3762,r3:r3_3745,r4:r4_3747,r5:r5_3742,r6:r6_3743,r7:r7_3751,r8:r8_3750,r9:r9_3748,sp:sp_3739 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3767,fp:fp_3773,r0:r0_3771,r1:r1_3779,r10:r10_3776,r11:r11_3780,r3:r3_3772,r4:r4_3774,r5:r5_3769,r6:r6_3770,r7:r7_3778,r8:r8_3777,r9:r9_3775,sp:sp_3766
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D92:
	word32 r2_3784 = (uint32) Mem3783[r5_3653 + 0x0000C672:word16]
	branch r2_3784 != 0x00000000 l00013D9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D9E:
	word32 r7_3789 = Mem3783[r5_3653 + 0x0000C627:word32]
	Mem3792[sp_3650 + 42:word16] = Mem3783[r5_3653 + 0x0000C672:word16]
	branch Mem3792[sp_3650 + 8:word32] <= 0x00000001 l00013DB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013DB8:
	branch Mem3792[r5_3653 + 0x0000C627:word32] != 0x00000000 l00013DC4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013DC4:
	word32 sp_3800 = sp_3650 - 0x00000004
	Mem3801[sp_3800:word32] = 0x00000000
	Mem3805[sp_3800 - 0x00000004:word32] = r6_3654 + 3560
	Mem3808[sp_3800 - 0x00000008:word32] = r5_3653 + 1515
	word32 sp_3812
	word32 ap_3814
	word32 r5_3816
	word32 r6_3817
	word32 r0_3819
	word32 r3_3821
	word32 fp_3823
	word32 r4_3825
	word32 r9_3827
	word32 r10_3829
	word32 r8_3831
	word32 r7_3832
	word32 r1_3834
	word32 r11_3836
	call Mem3808[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_3813,fp:fp_3822,r0:r0_3818,r1:r1_3833,r10:r10_3828,r11:r11_3835,r2:r2_3784,r3:r3_3820,r4:r4_3824,r5:r5_3782,r6:r6_3803,r7:r7_3789,r8:r8_3830,r9:r9_3826,sp:sp_3800 - 0x00000008,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3814,fp:fp_3823,r0:r0_3819,r1:r1_3834,r10:r10_3829,r11:r11_3836,r3:r3_3821,r4:r4_3825,r5:r5_3816,r6:r6_3817,r7:r7_3832,r8:r8_3831,r9:r9_3827,sp:sp_3812
	Mem3839[sp_3812 - 0x00000004:word32] = r0_3819
	Mem3842[sp_3812 - 0x00000008:word32] = r5_3816 + 1515
	Mem3844[sp_3812 - 0x0000000C:word32] = r5_3816
	word32 r2_3845 = Mem3844[r5_3816 + 0x0000C839:word32]
	word32 sp_3849
	word32 r8_3860
	word32 r5_3852
	word32 ap_3850
	word32 r6_3853
	word32 r0_3854
	word32 r3_3855
	word32 fp_3856
	word32 r4_3857
	word32 r9_3858
	word32 r10_3859
	word32 r7_3861
	word32 r1_3862
	word32 r11_3863
	call r2_3845 + 2 (retsize: 4;)
		uses: ap:ap_3814,fp:fp_3823,r0:r0_3819,r1:r1_3834,r10:r10_3829,r11:r11_3836,r2:r2_3845,r3:r3_3821,r4:r4_3825,r5:r5_3816,r6:r6_3817,r7:r7_3832,r8:r8_3831,r9:r9_3827,sp:sp_3812 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3850,fp:fp_3856,r0:r0_3854,r1:r1_3862,r10:r10_3859,r11:r11_3863,r3:r3_3855,r4:r4_3857,r5:r5_3852,r6:r6_3853,r7:r7_3861,r8:r8_3860,r9:r9_3858,sp:sp_3849
	word32 r2_3865 = (uint32) Mem3844[sp_3849 + 42:word16]
	branch r2_3865 >=u 0x00000004 l00013DF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013DF3:
	r9_3858 = Mem3844[0x000192D0:word32]
	Mem3871[sp_3849 + 44:word32] = Mem3844[0x000192D8:word32]
	Mem3873[sp_3849 + 24:word32] = Mem3871[0x000192BC:word32]
	Mem3875[sp_3849 + 20:word32] = Mem3873[0x000192C4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E24:
	word32 sp_3880 = sp_3849 - 0x00000004
	Mem3882[sp_3880:word32] = r7_3861
	word32 sp_3886
	word32 ap_3888
	word32 r2_3890
	word32 r5_3892
	word32 r6_3894
	word32 r0_3896
	word32 r3_3898
	word32 fp_3900
	word32 r4_3902
	word32 r9_3904
	word32 r10_3906
	word32 r8_3908
	word32 r7_3909
	word32 r1_3911
	word32 r11_3913
	call fn00000002 (retsize: 4;)
		uses: ap:ap_3887,fp:fp_3899,r0:r0_3895,r1:r1_3910,r10:r10_3905,r11:r11_3912,r2:r2_3889,r3:r3_3897,r4:r4_3901,r5:r5_3891,r6:r6_3893,r7:r7_3881,r8:r8_3907,r9:r9_3903,sp:sp_3880,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3888,fp:fp_3900,r0:r0_3896,r1:r1_3911,r10:r10_3906,r11:r11_3913,r2:r2_3890,r3:r3_3898,r4:r4_3902,r5:r5_3892,r6:r6_3894,r7:r7_3909,r8:r8_3908,r9:r9_3904,sp:sp_3886
	Mem3916[sp_3886 + 18:word16] = (word16) r0_3896
	Mem3919[sp_3886 - 0x00000004:word32] = r7_3909 + 2
	word32 r2_3925
	word32 r0_3928
	word32 r7_3935
	word32 sp_3923
	word32 ap_3924
	word32 r5_3926
	word32 r6_3927
	word32 r3_3929
	word32 fp_3930
	word32 r4_3931
	word32 r9_3932
	word32 r10_3933
	word32 r8_3934
	word32 r1_3936
	word32 r11_3937
	call Mem3919[sp_3886 + 0x00000020:word32] + 2 (retsize: 4;)
		uses: ap:ap_3888,fp:fp_3900,r0:r0_3896,r1:r1_3911,r10:r10_3906,r11:r11_3913,r2:r2_3890,r3:r3_3898,r4:r4_3902,r5:r5_3892,r6:r6_3894,r7:r7_3909,r8:r8_3908,r9:r9_3904,sp:sp_3886 - 0x00000004,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3924,fp:fp_3930,r0:r0_3928,r1:r1_3936,r10:r10_3933,r11:r11_3937,r2:r2_3925,r3:r3_3929,r4:r4_3931,r5:r5_3926,r6:r6_3927,r7:r7_3935,r8:r8_3934,r9:r9_3932,sp:sp_3923
	Mem3940[sp_3923 + 40:word16] = (word16) r0_3928
	word32 r0_3942 = (uint32) Mem3940[sp_3923 + 42:word16]
	Mem3945[sp_3923 + 42:int16] = (int16) (r0_3942 - 0x00000004)
	word32 r7_3941 = r7_3935 + 0x00000004
	word32 r0_3943 = r0_3942 - 0x00000004
	branch Mem3945[sp_3923 + 40:word16] <=u Mem3945[sp_3923 + 42:word16] l00013E81
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E4E:
	Mem3951[sp_3923 - 0x00000004:uint32] = 0x00000421
	Mem3954[sp_3923 - 0x00000008:uint32] = (uint32) Mem3951[sp_3923 + 0x00000026:word16]
	Mem3957[sp_3923 - 0x0000000C:uint32] = (uint32) Mem3954[sp_3923 + 0x00000024:word16]
	Mem3960[sp_3923 - 0x00000010:uint32] = (uint32) Mem3957[sp_3923 + 0x0000000E:word16]
	Mem3963[sp_3923 - 0x00000014:word32] = r6_3927 + 3431
	Mem3966[sp_3923 - 0x00000018:word32] = r5_3926 + 1515
	word32 sp_3970
	word32 ap_3971
	word32 r5_3973
	word32 r6_3974
	word32 r0_3975
	word32 r3_3976
	word32 fp_3977
	word32 r4_3978
	word32 r9_3979
	word32 r10_3980
	word32 r8_3981
	word32 r7_3982
	word32 r1_3983
	word32 r11_3984
	call r9_3932 + 2 (retsize: 4;)
		uses: ap:ap_3924,fp:fp_3930,r0:r0_3942 - 0x00000004,r1:r1_3936,r10:r10_3933,r11:r11_3937,r2:r2_3925,r3:r3_3929,r4:r4_3931,r5:r5_3926,r6:r6_3927,r7:r7_3935 + 0x00000004,r8:r8_3934,r9:r9_3932,sp:sp_3923 - 0x00000018,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3971,fp:fp_3977,r0:r0_3975,r1:r1_3983,r10:r10_3980,r11:r11_3984,r3:r3_3976,r4:r4_3978,r5:r5_3973,r6:r6_3974,r7:r7_3982,r8:r8_3981,r9:r9_3979,sp:sp_3970
	Mem3987[sp_3970 - 0x00000004:word32] = r0_3975
	Mem3990[sp_3970 - 0x00000008:word32] = r5_3973 + 1515
	Mem3992[sp_3970 - 0x0000000C:word32] = r5_3973
	word32 r2_3993 = Mem3992[r5_3973 + 0x0000C839:word32]
	call r2_3993 + 2 (retsize: 4;)
		uses: ap:ap_3971,fp:fp_3977,r0:r0_3975,r1:r1_3983,r10:r10_3980,r11:r11_3984,r2:r2_3993,r3:r3_3976,r4:r4_3978,r5:r5_3973,r6:r6_3974,r7:r7_3982,r8:r8_3981,r9:r9_3979,sp:sp_3970 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3998,fp:fp_4004,r0:r0_4002,r1:r1_4010,r10:r10_4007,r11:r11_4011,r3:r3_4003,r4:r4_4005,r5:r5_4000,r6:r6_4001,r7:r7_4009,r8:r8_4008,r9:r9_4006,sp:sp_3997
	Mem4014[sp_3923 + 40:word16] = Mem3992[sp_3923 + 42:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E81:
	word32 r2_4020 = (uint32) Mem4019[sp_3923 + 18:word16]
	branch r2_4020 >= 0x00000007 l00013E8D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E8D:
	branch r2_4020 > 0x0000000D l00013EA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013EA0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E90_1:
	call 0x00013E94 + (r2_4020 - 0x00000007) * 0x00000002 (retsize: 4;)
		uses: ap:ap_4030,fp:fp_4040,r0:r2_4020,r1:r1_4052,r10:r10_4046,r11:r11_4054,r2:r2_4020,r3:r3_4038,r4:r4_4042,r5:r5_4033,r6:r6_4035,r7:r7_4050,r8:r8_4048,r9:r9_4044,sp:sp_4018,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E8A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014080:
	word32 sp_4058 = sp_3923 - 0x00000004
	Mem4059[sp_4058:word32] = 0x00000000
	Mem4062[sp_4058 - 0x00000004:uint32] = (uint32) Mem4059[sp_4058 + 0x00000028:word16]
	word32 r3_4057 = r6_3927 + 3904
	Mem4064[sp_4058 - 0x00000008:word32] = r3_4057
	word32 r4_4065 = (uint32) Mem4064[sp_4058 + 0x00000016:word16]
	Mem4067[sp_4058 - 0x0000000C:word32] = r4_4065
	Mem4070[sp_4058 - 0x00000010:word32] = r6_3927 + 3607
	Mem4073[sp_4058 - 0x00000014:word32] = r5_3926 + 1515
	word32 sp_4077
	word32 ap_4078
	word32 r5_4080
	word32 r6_4081
	word32 r0_4083
	word32 r3_4084
	word32 fp_4085
	word32 r4_4086
	word32 r9_4087
	word32 r10_4088
	word32 r8_4089
	word32 r7_4090
	word32 r1_4091
	word32 r11_4092
	call r9_3932 + 2 (retsize: 4;)
		uses: ap:ap_4030,fp:fp_4040,r0:r0_4082,r1:r1_4052,r10:r10_4046,r11:r11_4054,r2:r2_4020,r3:r3_4057,r4:r4_4065,r5:r5_4033,r6:r6_4035,r7:r7_4050,r8:r8_4048,r9:r9_4044,sp:sp_4058 - 0x00000014,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4078,fp:fp_4085,r0:r0_4083,r1:r1_4091,r10:r10_4088,r11:r11_4092,r3:r3_4084,r4:r4_4086,r5:r5_4080,r6:r6_4081,r7:r7_4090,r8:r8_4089,r9:r9_4087,sp:sp_4077
	Mem4095[sp_4077 - 0x00000004:word32] = r0_4083
	Mem4098[sp_4077 - 0x00000008:word32] = r5_4080 + 1515
	Mem4100[sp_4077 - 0x0000000C:word32] = r5_4080
	word32 r2_4101 = Mem4100[r5_4080 + 0x0000C839:word32]
	word32 sp_4105
	word32 r8_4116
	word32 r5_4108
	word32 ap_4106
	word32 r6_4109
	word32 r0_4110
	word32 r3_4111
	word32 fp_4112
	word32 r4_4113
	word32 r9_4114
	word32 r10_4115
	word32 r7_4117
	word32 r1_4118
	word32 r11_4119
	call r2_4101 + 2 (retsize: 4;)
		uses: ap:ap_4078,fp:fp_4085,r0:r0_4083,r1:r1_4091,r10:r10_4088,r11:r11_4092,r2:r2_4101,r3:r3_4084,r4:r4_4086,r5:r5_4080,r6:r6_4081,r7:r7_4090,r8:r8_4089,r9:r9_4087,sp:sp_4077 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4106,fp:fp_4112,r0:r0_4110,r1:r1_4118,r10:r10_4115,r11:r11_4119,r3:r3_4111,r4:r4_4113,r5:r5_4108,r6:r6_4109,r7:r7_4117,r8:r8_4116,r9:r9_4114,sp:sp_4105
	branch r4_4113 >= 0x00000009 l000140BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140BB:
	branch r4_4113 != 0x00000009 l000140C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140C0:
	branch r4_4113 >= 0x00002605 l000140CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140CC:
	branch r4_4113 != 0x00002605 l000140D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140D1:
	branch r4_4113 >= 0x00004453 l000140DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140DD:
	branch r4_4113 != 0x00004453 l000140E2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140E2:
	branch r4_4113 >= 0x00004B46 l000140EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140EE:
	branch r4_4113 != 0x00004B46 l000140F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140F3:
	branch r4_4113 >= 0x00004C41 l000140FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140FF:
	branch r4_4113 == 0x00004C41 l00014154
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014101:
	branch r4_4113 >= 0x00004D49 l0001410D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001410D:
	branch r4_4113 != 0x00004D49 l00014112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014112:
	branch r4_4113 >= 0x00005356 l0001411E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001411E:
	branch r4_4113 != 0x00005356 l00014123
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014123:
	branch r4_4113 >= 0x00005455 l0001412F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001412F:
	branch r4_4113 != 0x00005455 l00014134
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014134:
	branch r4_4113 >= 0x00006542 l00014140
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014140:
	branch r4_4113 != 0x00006542 l00014145
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014145:
	branch r4_4113 != 0x0000FB4A l00014151
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014151:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001414E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014504:
	r0_4110 = (uint32) Mem4100[sp_4105 + 40:word16]
	branch r0_4110 >=u 0x00000004 l00014510
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014510:
	Mem4166[sp_4105 - 0x00000004:word32] = 0x00000000
	Mem4169[sp_4105 - 0x00000008:uint32] = (uint32) Mem4166[r7_4117 + 3:byte]
	Mem4172[sp_4105 - 0x0000000C:uint32] = (uint32) Mem4169[r7_4117 + 2:byte]
	Mem4175[sp_4105 - 0x00000010:uint32] = (uint32) Mem4172[r7_4117 + 1:byte]
	Mem4178[sp_4105 - 0x00000014:uint32] = (uint32) Mem4175[r7_4117:byte]
	Mem4181[sp_4105 - 0x00000018:word32] = r6_4109 + 4591
	Mem4184[sp_4105 - 0x0000001C:word32] = r5_4108 + 1515
	word32 sp_4188
	word32 ap_4189
	word32 r5_4191
	word32 r6_4192
	word32 r0_4193
	word32 r3_4194
	word32 fp_4195
	word32 r4_4196
	word32 r9_4197
	word32 r10_4198
	word32 r8_4199
	word32 r7_4200
	word32 r1_4201
	word32 r11_4202
	call r9_4114 + 2 (retsize: 4;)
		uses: ap:ap_4106,fp:fp_4112,r0:r0_4161,r1:r1_4118,r10:r10_4115,r11:r11_4119,r2:r4_4113,r3:r3_4111,r4:r4_4113,r5:r5_4108,r6:r6_4109,r7:r7_4117,r8:r8_4116,r9:r9_4114,sp:sp_4105 - 0x0000001C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4189,fp:fp_4195,r0:r0_4193,r1:r1_4201,r10:r10_4198,r11:r11_4202,r3:r3_4194,r4:r4_4196,r5:r5_4191,r6:r6_4192,r7:r7_4200,r8:r8_4199,r9:r9_4197,sp:sp_4188
	Mem4205[sp_4188 - 0x00000004:word32] = r0_4193
	Mem4208[sp_4188 - 0x00000008:word32] = r5_4191 + 1515
	Mem4210[sp_4188 - 0x0000000C:word32] = r5_4191
	word32 r2_4211 = Mem4210[r5_4191 + 0x0000C839:word32]
	call r2_4211 + 2 (retsize: 4;)
		uses: ap:ap_4189,fp:fp_4195,r0:r0_4193,r1:r1_4201,r10:r10_4198,r11:r11_4202,r2:r2_4211,r3:r3_4194,r4:r4_4196,r5:r5_4191,r6:r6_4192,r7:r7_4200,r8:r8_4199,r9:r9_4197,sp:sp_4188 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4216,fp:fp_4222,r0:r0_4220,r1:r1_4228,r10:r10_4225,r11:r11_4229,r3:r3_4221,r4:r4_4223,r5:r5_4218,r6:r6_4219,r7:r7_4227,r8:r8_4226,r9:r9_4224,sp:sp_4215
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001450D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014142:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000144AC:
	r0_4110 = (uint32) Mem4100[sp_4105 + 40:word16]
	branch r0_4110 >=u 0x00000005 l000144B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000144B8:
	word32 r3_4241
	Mem4236[sp_4105 - 0x00000004:word32] = 0x00000000
	word32 r2_4237 = (uint32) Mem4236[r7_4117 + 4:byte]
	branch (r2_4237 & 0x00000001) == 0x00000000 l000144C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000144C8:
	r3_4241 = r6_4109
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000144C1:
	r3_4241 = r8_4116 + 214
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000144CB:
	Mem4252[sp_4105 - 0x00000008:word32] = r3_4241
	Mem4255[sp_4105 - 0x0000000C:word32] = r7_4117
	word32 sp_4259
	word32 ap_4261
	word32 r2_4263
	word32 r5_4265
	word32 r6_4267
	word32 r0_4269
	word32 r3_4270
	word32 fp_4272
	word32 r4_4274
	word32 r9_4276
	word32 r10_4278
	word32 r8_4280
	word32 r7_4281
	word32 r1_4283
	word32 r11_4285
	call Mem4255[sp_4105 + 0x0000001C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4106,fp:fp_4112,r0:r0_4231,r1:r1_4118,r10:r10_4115,r11:r11_4119,r2:r2_4237,r3:r3_4251,r4:r4_4113,r5:r5_4108,r6:r6_4109,r7:r7_4117,r8:r8_4116,r9:r9_4114,sp:sp_4105 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4261,fp:fp_4272,r0:r0_4269,r1:r1_4283,r10:r10_4278,r11:r11_4285,r2:r2_4263,r3:r3_4270,r4:r4_4274,r5:r5_4265,r6:r6_4267,r7:r7_4281,r8:r8_4280,r9:r9_4276,sp:sp_4259
	Mem4288[sp_4259 - 0x00000004:word32] = r0_4269
	Mem4291[sp_4259 - 0x00000008:word32] = r6_4267 + 4512
	Mem4294[sp_4259 - 0x0000000C:word32] = r5_4265 + 1515
	word32 sp_4298
	word32 ap_4299
	word32 r5_4301
	word32 r6_4302
	word32 r0_4303
	word32 r3_4304
	word32 fp_4305
	word32 r4_4306
	word32 r9_4307
	word32 r10_4308
	word32 r8_4309
	word32 r7_4310
	word32 r1_4311
	word32 r11_4312
	call r9_4276 + 2 (retsize: 4;)
		uses: ap:ap_4261,fp:fp_4272,r0:r0_4269,r1:r1_4283,r10:r10_4278,r11:r11_4285,r2:r2_4263,r3:r3_4270,r4:r4_4274,r5:r5_4265,r6:r6_4267,r7:r7_4281,r8:r8_4280,r9:r9_4276,sp:sp_4259 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4299,fp:fp_4305,r0:r0_4303,r1:r1_4311,r10:r10_4308,r11:r11_4312,r3:r3_4304,r4:r4_4306,r5:r5_4301,r6:r6_4302,r7:r7_4310,r8:r8_4309,r9:r9_4307,sp:sp_4298
	Mem4315[sp_4298 - 0x00000004:word32] = r0_4303
	Mem4318[sp_4298 - 0x00000008:word32] = r5_4301 + 1515
	Mem4320[sp_4298 - 0x0000000C:word32] = r5_4301
	word32 r2_4321 = Mem4320[r5_4301 + 0x0000C839:word32]
	call r2_4321 + 2 (retsize: 4;)
		uses: ap:ap_4299,fp:fp_4305,r0:r0_4303,r1:r1_4311,r10:r10_4308,r11:r11_4312,r2:r2_4321,r3:r3_4304,r4:r4_4306,r5:r5_4301,r6:r6_4302,r7:r7_4310,r8:r8_4309,r9:r9_4307,sp:sp_4298 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4326,fp:fp_4332,r0:r0_4330,r1:r1_4338,r10:r10_4335,r11:r11_4339,r3:r3_4331,r4:r4_4333,r5:r5_4328,r6:r6_4329,r7:r7_4337,r8:r8_4336,r9:r9_4334,sp:sp_4325
	branch ((uint32) Mem4320[r7_4117 + 4:byte] & 0x00000001) == 0x00000000 l000144FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000144FC:
	Mem4346[Mem4320[ap_4106 + 4:word32]:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000144F9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000144B5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001413D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014131:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001432C:
	r0_4110 = (uint32) Mem4100[sp_4105 + 40:word16]
	branch r0_4110 >=u 0x00000001 l00014338
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014338:
	Mem4358[fp_4112 + -154:byte] = 0x00
	r4_4113 = 0x00000000
	word32 r2_4359 = (uint32) Mem4358[r7_4117:byte]
	branch (r2_4359 & 0x00000001) == 0x00000000 l00014355
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014347:
	Mem4365[sp_4105 - 0x00000004:word32] = r6_4109 + 4380
	Mem4368[sp_4105 - 0x00000008:word32] = fp_4112 + -154
	word32 r4_4380
	call Mem4368[sp_4105 + 0x00000018:word32] + 2 (retsize: 4;)
		uses: ap:ap_4106,fp:fp_4112,r0:r0_4351,r1:r1_4118,r10:r10_4115,r11:r11_4119,r2:r2_4359,r3:r3_4111,r4:0x00000000,r5:r5_4108,r6:r6_4109,r7:r7_4117,r8:r8_4116,r9:r9_4114,sp:sp_4105 - 0x00000008,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4373,fp:fp_4379,r0:r0_4377,r1:r1_4385,r10:r10_4382,r11:r11_4386,r3:r3_4378,r4:r4_4380,r5:r5_4375,r6:r6_4376,r7:r7_4384,r8:r8_4383,r9:r9_4381,sp:sp_4372
	r4_4113 = r4_4380 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014355:
	word32 r2_4392 = (uint32) Mem4391[r7_4117:byte]
	branch (r2_4392 & 0x00000002) == 0x00000000 l0001438D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001435C:
	word32 sp_4397 = sp_4105 - 0x00000004
	Mem4400[sp_4397:word32] = fp_4112 + -154
	word32 sp_4404
	word32 ap_4406
	word32 r5_4409
	word32 r6_4411
	word32 r0_4413
	word32 fp_4416
	word32 r4_4418
	word32 r9_4420
	word32 r10_4422
	word32 r8_4424
	word32 r7_4425
	word32 r1_4427
	word32 r11_4429
	call Mem4400[sp_4397 + 24:word32] + 2 (retsize: 4;)
		uses: ap:ap_4405,fp:fp_4398,r0:r0_4412,r1:r1_4426,r10:r10_4421,r11:r11_4428,r2:r2_4392,r3:r3_4414,r4:r4_4417,r5:r5_4408,r6:r6_4410,r7:r7_4390,r8:r8_4423,r9:r9_4419,sp:sp_4397,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4406,fp:fp_4416,r0:r0_4413,r1:r1_4427,r10:r10_4422,r11:r11_4429,r4:r4_4418,r5:r5_4409,r6:r6_4411,r7:r7_4425,r8:r8_4424,r9:r9_4420,sp:sp_4404
	word32 r3_4431 = r0_4413
	branch r4_4418 == 0x00000000 l00014376
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001436B:
	Mem4439[fp_4416 + -154:byte] = 0x2F
	r3_4431 = r0_4413 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014376:
	Mem4447[sp_4404 - 0x00000004:word32] = r6_4411 + 4393
	Mem4453[sp_4404 - 0x00000008:word32] = fp_4416 + -154 + r3_4431
	word32 r4_4467
	call Mem4453[sp_4404 + 0x00000018:word32] + 2 (retsize: 4;)
		uses: ap:ap_4406,fp:fp_4416,r0:r0_4413,r1:r1_4427,r10:r10_4422,r11:r11_4429,r2:fp_4416 + -154,r3:r3_4451,r4:r4_4418,r5:r5_4409,r6:r6_4411,r7:r7_4425,r8:r8_4424,r9:r9_4420,sp:sp_4404 - 0x00000008,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4457,fp:fp_4465,r0:r0_4463,r1:r1_4477,r10:r10_4471,r11:r11_4479,r3:r3_4464,r4:r4_4467,r5:r5_4460,r6:r6_4461,r7:r7_4475,r8:r8_4473,r9:r9_4469,sp:sp_4455
	Mem4483[Mem4453[ap_4106 + 4:word32]:word32] = Mem4453[ap_4106 + 4:word32] + 0x00000004
	r4_4113 = r4_4467 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001438D:
	word32 r2_4487 = (uint32) Mem4486[r7_4117:byte]
	branch (r2_4487 & 0x00000004) == 0x00000000 l000143C5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014394:
	word32 sp_4492 = sp_4105 - 0x00000004
	Mem4495[sp_4492:word32] = fp_4112 + -154
	word32 sp_4499
	word32 ap_4501
	word32 r5_4504
	word32 r6_4506
	word32 r0_4508
	word32 fp_4511
	word32 r4_4513
	word32 r9_4515
	word32 r10_4517
	word32 r8_4519
	word32 r7_4520
	word32 r1_4522
	word32 r11_4524
	call Mem4495[sp_4492 + 24:word32] + 2 (retsize: 4;)
		uses: ap:ap_4500,fp:fp_4493,r0:r0_4507,r1:r1_4521,r10:r10_4516,r11:r11_4523,r2:r2_4487,r3:r3_4509,r4:r4_4512,r5:r5_4503,r6:r6_4505,r7:r7_4485,r8:r8_4518,r9:r9_4514,sp:sp_4492,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4501,fp:fp_4511,r0:r0_4508,r1:r1_4522,r10:r10_4517,r11:r11_4524,r4:r4_4513,r5:r5_4504,r6:r6_4506,r7:r7_4520,r8:r8_4519,r9:r9_4515,sp:sp_4499
	word32 r3_4526 = r0_4508
	branch r4_4513 == 0x00000000 l000143AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000143A3:
	Mem4534[fp_4511 + -154:byte] = 0x2F
	r3_4526 = r0_4508 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000143AE:
	Mem4542[sp_4499 - 0x00000004:word32] = r6_4506 + 4400
	Mem4548[sp_4499 - 0x00000008:word32] = fp_4511 + -154 + r3_4526
	word32 r4_4562
	call Mem4548[sp_4499 + 0x00000018:word32] + 2 (retsize: 4;)
		uses: ap:ap_4501,fp:fp_4511,r0:r0_4508,r1:r1_4522,r10:r10_4517,r11:r11_4524,r2:fp_4511 + -154,r3:r3_4546,r4:r4_4513,r5:r5_4504,r6:r6_4506,r7:r7_4520,r8:r8_4519,r9:r9_4515,sp:sp_4499 - 0x00000008,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4552,fp:fp_4560,r0:r0_4558,r1:r1_4572,r10:r10_4566,r11:r11_4574,r2:r2_4553,r3:r3_4559,r4:r4_4562,r5:r5_4555,r6:r6_4556,r7:r7_4570,r8:r8_4568,r9:r9_4564,sp:sp_4550
	Mem4578[Mem4548[ap_4106 + 4:word32]:word32] = Mem4548[ap_4106 + 4:word32] + 0x00000004
	r4_4113 = r4_4562 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000143C5:
	branch r4_4113 > 0x00000000 l000143CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000143CC:
	word32 r3_4591
	word32 sp_4585 = sp_4105 - 0x00000004
	Mem4586[sp_4585:word32] = 0x00000000
	branch r4_4113 != 0x00000001 l000143D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000143D8:
	r3_4591 = r8_4116 + 207
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000143D3:
	r3_4591 = r6_4109
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000143DD:
	Mem4603[sp_4585 - 0x00000004:word32] = r3_4591
	Mem4608[sp_4585 - 0x00000008:word32] = fp_4112 + -154
	Mem4612[sp_4585 - 0x0000000C:word32] = r6_4109 + 4330
	Mem4617[sp_4585 - 0x00000010:word32] = r5_4108 + 1515
	word32 sp_4623
	word32 ap_4626
	word32 r5_4630
	word32 r6_4631
	word32 r0_4634
	word32 r3_4635
	word32 fp_4636
	word32 r4_4638
	word32 r9_4639
	word32 r10_4642
	word32 r8_4644
	word32 r7_4647
	word32 r1_4650
	word32 r11_4653
	call r9_4114 + 2 (retsize: 4;)
		uses: ap:ap_4625,fp:fp_4606,r0:r0_4633,r1:r1_4649,r10:r10_4641,r11:r11_4652,r2:r2_4628,r3:r3_4602,r4:r4_4580,r5:r5_4615,r6:r6_4595,r7:r7_4646,r8:r8_4590,r9:r9_4622,sp:sp_4585 - 0x00000010,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4626,fp:fp_4636,r0:r0_4634,r1:r1_4650,r10:r10_4642,r11:r11_4653,r3:r3_4635,r4:r4_4638,r5:r5_4630,r6:r6_4631,r7:r7_4647,r8:r8_4644,r9:r9_4639,sp:sp_4623
	Mem4656[sp_4623 - 0x00000004:word32] = r0_4634
	Mem4659[sp_4623 - 0x00000008:word32] = r5_4630 + 1515
	Mem4661[sp_4623 - 0x0000000C:word32] = r5_4630
	word32 r2_4662 = Mem4661[r5_4630 + 0x0000C839:word32]
	call r2_4662 + 2 (retsize: 4;)
		uses: ap:ap_4626,fp:fp_4636,r0:r0_4634,r1:r1_4650,r10:r10_4642,r11:r11_4653,r2:r2_4662,r3:r3_4635,r4:r4_4638,r5:r5_4630,r6:r6_4631,r7:r7_4647,r8:r8_4644,r9:r9_4639,sp:sp_4623 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4667,fp:fp_4673,r0:r0_4671,r1:r1_4679,r10:r10_4676,r11:r11_4680,r3:r3_4672,r4:r4_4674,r5:r5_4669,r6:r6_4670,r7:r7_4678,r8:r8_4677,r9:r9_4675,sp:sp_4666
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000143C9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014335:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001412C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014120:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014544:
	r0_4110 = (uint32) Mem4100[sp_4105 + 40:word16]
	branch r0_4110 >=u 0x00000005 l00014550
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014550:
	Mem4687[sp_4105 - 0x00000004:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001454D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001411B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001410F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000141DC:
	r10_4115 = (uint32) Mem4100[sp_4105 + 40:word16]
	branch r10_4115 >=u 0x00000008 l000141E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000141E8:
	Mem4698[sp_4105 - 0x00000004:word32] = r7_4117 + 0x00000004
	word32 sp_4700
	word32 ap_4701
	word32 r5_4703
	word32 r6_4704
	word32 r0_4705
	word32 r3_4706
	word32 fp_4707
	word32 r9_4709
	word32 r10_4710
	word32 r8_4711
	word32 r7_4712
	word32 r1_4713
	word32 r11_4714
	call Mem4698[sp_4105 + 0x00000020:word32] + 2 (retsize: 4;)
		uses: ap:ap_4106,fp:fp_4112,r0:r0_4110,r1:r1_4118,r10:r10_4692,r11:r11_4119,r2:r4_4113,r3:r3_4111,r4:r4_4113,r5:r5_4108,r6:r6_4109,r7:r7_4117,r8:r8_4116,r9:r9_4114,sp:sp_4105 - 0x00000004,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4701,fp:fp_4707,r0:r0_4705,r1:r1_4713,r10:r10_4710,r11:r11_4714,r3:r3_4706,r5:r5_4703,r6:r6_4704,r7:r7_4712,r8:r8_4711,r9:r9_4709,sp:sp_4700
	Mem4720[fp_4707 + -74:byte] = 0x00
	word32 r4_4717 = (uint32) (word16) r0_4705 & ~0xFFFFFFF8
	branch r4_4717 <= 0x00000003 l00014209
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014206:
	r4_4717 = 0x00000003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014209:
	word32 r3_4983
	Mem4730[sp_4700 - 0x00000004:word32] = 0x00000004
	Mem4734[sp_4700 - 0x00000008:word32] = r8_4711 + 105
	Mem4737[sp_4700 - 0x0000000C:word32] = r7_4712
	word32 r3_4753
	word32 sp_4741
	word32 fp_4755
	word32 r7_4763
	word32 ap_4743
	word32 r2_4745
	word32 r5_4747
	word32 r6_4749
	word32 r0_4751
	word32 r4_4757
	word32 r9_4759
	word32 r10_4761
	word32 r8_4762
	word32 r1_4765
	word32 r11_4767
	call Mem4737[sp_4700 + 0x0000002C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4701,fp:fp_4707,r0:r0_4705,r1:r1_4713,r10:r10_4710,r11:r11_4714,r2:fp_4707 + -74,r3:r3_4706,r4:r4_4756,r5:r5_4703,r6:r6_4704,r7:r7_4712,r8:r8_4711,r9:r9_4709,sp:sp_4700 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4743,fp:fp_4755,r0:r0_4751,r1:r1_4765,r10:r10_4761,r11:r11_4767,r2:r2_4745,r3:r3_4753,r4:r4_4757,r5:r5_4747,r6:r6_4749,r7:r7_4763,r8:r8_4762,r9:r9_4759,sp:sp_4741
	branch r0_4751 != 0x00000000 l00014220
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014220:
	Mem4774[sp_4741 - 0x00000004:word32] = 0x00000004
	Mem4777[sp_4741 - 0x00000008:word32] = r8_4762 + 114
	Mem4779[sp_4741 - 0x0000000C:word32] = r7_4763
	word32 r3_4789
	call Mem4779[sp_4741 + 0x0000002C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4743,fp:fp_4755,r0:r0_4751,r1:r1_4765,r10:r10_4761,r11:r11_4767,r2:r2_4745,r3:r3_4753,r4:r4_4757,r5:r5_4747,r6:r6_4749,r7:r7_4763,r8:r8_4762,r9:r9_4759,sp:sp_4741 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4784,fp:fp_4790,r0:r0_4788,r1:r1_4796,r10:r10_4793,r11:r11_4797,r2:r2_4785,r3:r3_4789,r4:r4_4791,r5:r5_4786,r6:r6_4787,r7:r7_4795,r8:r8_4794,r9:r9_4792,sp:sp_4783
	branch r0_4751 != 0x00000000 l00014238
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014238:
	Mem4804[sp_4741 - 0x00000004:word32] = 0x00000004
	Mem4807[sp_4741 - 0x00000008:word32] = r8_4762 + 126
	Mem4809[sp_4741 - 0x0000000C:word32] = r7_4763
	word32 r3_4819
	call Mem4809[sp_4741 + 0x0000002C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4784,fp:fp_4790,r0:r0_4788,r1:r1_4796,r10:r10_4793,r11:r11_4797,r2:r2_4785,r3:r3_4789,r4:r4_4791,r5:r5_4786,r6:r6_4787,r7:r7_4795,r8:r8_4794,r9:r9_4792,sp:sp_4783 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4814,fp:fp_4820,r0:r0_4818,r1:r1_4826,r10:r10_4823,r11:r11_4827,r2:r2_4815,r3:r3_4819,r4:r4_4821,r5:r5_4816,r6:r6_4817,r7:r7_4825,r8:r8_4824,r9:r9_4822,sp:sp_4813
	branch r0_4751 != 0x00000000 l00014250
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014250:
	Mem4834[sp_4741 - 0x00000004:word32] = 0x00000004
	Mem4837[sp_4741 - 0x00000008:word32] = r8_4762 + 138
	Mem4839[sp_4741 - 0x0000000C:word32] = r7_4763
	word32 r3_4849
	call Mem4839[sp_4741 + 0x0000002C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4814,fp:fp_4820,r0:r0_4818,r1:r1_4826,r10:r10_4823,r11:r11_4827,r2:r2_4815,r3:r3_4819,r4:r4_4821,r5:r5_4816,r6:r6_4817,r7:r7_4825,r8:r8_4824,r9:r9_4822,sp:sp_4813 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4844,fp:fp_4850,r0:r0_4848,r1:r1_4856,r10:r10_4853,r11:r11_4857,r2:r2_4845,r3:r3_4849,r4:r4_4851,r5:r5_4846,r6:r6_4847,r7:r7_4855,r8:r8_4854,r9:r9_4852,sp:sp_4843
	branch r0_4751 != 0x00000000 l00014268
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014268:
	Mem4864[sp_4741 - 0x00000004:word32] = 0x00000004
	Mem4867[sp_4741 - 0x00000008:word32] = r8_4762 + 150
	Mem4869[sp_4741 - 0x0000000C:word32] = r7_4763
	word32 r3_4879
	call Mem4869[sp_4741 + 0x0000002C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4844,fp:fp_4850,r0:r0_4848,r1:r1_4856,r10:r10_4853,r11:r11_4857,r2:r2_4845,r3:r3_4849,r4:r4_4851,r5:r5_4846,r6:r6_4847,r7:r7_4855,r8:r8_4854,r9:r9_4852,sp:sp_4843 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4874,fp:fp_4880,r0:r0_4878,r1:r1_4886,r10:r10_4883,r11:r11_4887,r2:r2_4875,r3:r3_4879,r4:r4_4881,r5:r5_4876,r6:r6_4877,r7:r7_4885,r8:r8_4884,r9:r9_4882,sp:sp_4873
	branch r0_4751 != 0x00000000 l00014280
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014280:
	Mem4894[sp_4741 - 0x00000004:word32] = 0x00000004
	Mem4897[sp_4741 - 0x00000008:word32] = r8_4762 + 162
	Mem4899[sp_4741 - 0x0000000C:word32] = r7_4763
	word32 r3_4909
	call Mem4899[sp_4741 + 0x0000002C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4874,fp:fp_4880,r0:r0_4878,r1:r1_4886,r10:r10_4883,r11:r11_4887,r2:r2_4875,r3:r3_4879,r4:r4_4881,r5:r5_4876,r6:r6_4877,r7:r7_4885,r8:r8_4884,r9:r9_4882,sp:sp_4873 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4904,fp:fp_4910,r0:r0_4908,r1:r1_4916,r10:r10_4913,r11:r11_4917,r2:r2_4905,r3:r3_4909,r4:r4_4911,r5:r5_4906,r6:r6_4907,r7:r7_4915,r8:r8_4914,r9:r9_4912,sp:sp_4903
	branch r0_4751 != 0x00000000 l00014298
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014298:
	Mem4924[sp_4741 - 0x00000004:word32] = 0x00000004
	Mem4927[sp_4741 - 0x00000008:word32] = r8_4762 + 174
	Mem4929[sp_4741 - 0x0000000C:word32] = r7_4763
	word32 r3_4939
	call Mem4929[sp_4741 + 0x0000002C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4904,fp:fp_4910,r0:r0_4908,r1:r1_4916,r10:r10_4913,r11:r11_4917,r2:r2_4905,r3:r3_4909,r4:r4_4911,r5:r5_4906,r6:r6_4907,r7:r7_4915,r8:r8_4914,r9:r9_4912,sp:sp_4903 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4934,fp:fp_4940,r0:r0_4938,r1:r1_4946,r10:r10_4943,r11:r11_4947,r2:r2_4935,r3:r3_4939,r4:r4_4941,r5:r5_4936,r6:r6_4937,r7:r7_4945,r8:r8_4944,r9:r9_4942,sp:sp_4933
	branch r0_4751 != 0x00000000 l000142B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000142B0:
	Mem4954[sp_4741 - 0x00000004:word32] = 0x00000004
	Mem4957[sp_4741 - 0x00000008:word32] = r8_4762 + 186
	Mem4959[sp_4741 - 0x0000000C:word32] = r7_4763
	call Mem4959[sp_4741 + 0x0000002C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4934,fp:fp_4940,r0:r0_4938,r1:r1_4946,r10:r10_4943,r11:r11_4947,r2:r2_4935,r3:r3_4939,r4:r4_4941,r5:r5_4936,r6:r6_4937,r7:r7_4945,r8:r8_4944,r9:r9_4942,sp:sp_4933 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4964,fp:fp_4970,r0:r0_4968,r1:r1_4976,r10:r10_4973,r11:r11_4977,r2:r2_4965,r4:r4_4971,r5:r5_4966,r6:r6_4967,r7:r7_4975,r8:r8_4974,r9:r9_4972,sp:sp_4963
	branch r0_4751 != 0x00000000 l000142F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000142F0:
	r3_4983 = r8_4762 + 199
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000142C0:
	r3_4983 = r8_4762 + 191
	branch r10_4761 <u 0x00000010 l000142F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000142CA:
	Mem4992[fp_4755 + -74:byte] = 0x20
	Mem4994[fp_4755 + -73:byte] = 0x28
	Mem4996[sp_4741 - 0x00000004:word32] = 0x00000004
	Mem4999[sp_4741 - 0x00000008:word32] = r7_4763 + 0x0000000C
	Mem5003[sp_4741 - 0x0000000C:word32] = fp_4755 + 0xFFFFFFB8
	call Mem5003[0x000192C0:word32] + 2 (retsize: 4;)
		uses: ap:ap_4964,fp:fp_4970,r0:r0_4968,r1:r1_4976,r10:r10_4973,r11:r11_4977,r2:fp_4970 + -74,r3:r8_4974 + 191,r4:r4_4971,r5:r5_4966,r6:r6_4967,r7:r7_4975,r8:r8_4974,r9:r9_4972,sp:sp_4963 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5006,fp:fp_5012,r0:r0_5010,r1:r1_5018,r10:r10_5015,r11:r11_5019,r2:r2_5007,r3:r3_5011,r4:r4_5013,r5:r5_5008,r6:r6_5009,r7:r7_5017,r8:r8_5016,r9:r9_5014,sp:sp_5005
	Mem5022[fp_4755 + -68:byte] = 0x29
	Mem5024[fp_4755 + -67:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000142A8:
	r3_4983 = r8_4762 + 179
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014290:
	r3_4983 = r8_4762 + 167
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014278:
	r3_4983 = r8_4762 + 155
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014260:
	r3_4983 = r8_4762 + 143
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014247:
	r3_4983 = r8_4762 + 131
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001422F:
	r3_4983 = r8_4762 + 119
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014218:
	r3_4983 = r8_4762 + 110
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000142F5:
	word32 sp_5058 = sp_4741 - 0x00000004
	Mem5059[sp_5058:word32] = 0x00000000
	Mem5063[sp_5058 - 0x00000004:word32] = fp_4755 + -74
	Mem5066[sp_5058 - 0x00000008:word32] = r3_4983
	Mem5070[sp_5058 - 0x0000000C:word32] = r7_4763 + 0x00000006
	word32 sp_5072
	word32 ap_5074
	word32 r2_5076
	word32 r5_5078
	word32 r6_5080
	word32 r0_5082
	word32 r3_5083
	word32 fp_5084
	word32 r4_5086
	word32 r9_5088
	word32 r10_5090
	word32 r8_5092
	word32 r7_5093
	word32 r1_5095
	word32 r11_5097
	call Mem5070[sp_5058 + 0x00000024:word32] + 2 (retsize: 4;)
		uses: ap:ap_5073,fp:fp_5061,r0:r0_5081,r1:r1_5094,r10:r10_5089,r11:r11_5096,r2:r2_5075,r3:r3_5065,r4:r4_5085,r5:r5_5077,r6:r6_5079,r7:r7_5068,r8:r8_5091,r9:r9_5087,sp:sp_5058 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5074,fp:fp_5084,r0:r0_5082,r1:r1_5095,r10:r10_5090,r11:r11_5097,r2:r2_5076,r3:r3_5083,r4:r4_5086,r5:r5_5078,r6:r6_5080,r7:r7_5093,r8:r8_5092,r9:r9_5088,sp:sp_5072
	Mem5101[sp_5072 - 0x00000004:uint32] = (uint32) (word16) r0_5082
	Mem5104[sp_5072 - 0x00000008:word32] = Mem5101[r6_5080 + 4164 + r4_5086 * 4:word32]
	Mem5107[sp_5072 - 0x0000000C:word32] = r6_5080 + 4043
	Mem5110[sp_5072 - 0x00000010:word32] = r5_5078 + 1515
	word32 sp_5114
	word32 ap_5115
	word32 r5_5117
	word32 r6_5118
	word32 r0_5119
	word32 r3_5120
	word32 fp_5121
	word32 r4_5122
	word32 r9_5123
	word32 r10_5124
	word32 r8_5125
	word32 r7_5126
	word32 r1_5127
	word32 r11_5128
	call r9_5088 + 2 (retsize: 4;)
		uses: ap:ap_5074,fp:fp_5084,r0:r0_5082,r1:r1_5095,r10:r10_5090,r11:r11_5097,r2:r2_5076,r3:r3_5083,r4:r4_5086,r5:r5_5078,r6:r6_5080,r7:r7_5093,r8:r8_5092,r9:r9_5088,sp:sp_5072 - 0x00000010,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5115,fp:fp_5121,r0:r0_5119,r1:r1_5127,r10:r10_5124,r11:r11_5128,r3:r3_5120,r4:r4_5122,r5:r5_5117,r6:r6_5118,r7:r7_5126,r8:r8_5125,r9:r9_5123,sp:sp_5114
	Mem5131[sp_5114 - 0x00000004:word32] = r0_5119
	Mem5134[sp_5114 - 0x00000008:word32] = r5_5117 + 1515
	Mem5136[sp_5114 - 0x0000000C:word32] = r5_5117
	word32 r2_5137 = Mem5136[r5_5117 + 0x0000C839:word32]
	call r2_5137 + 2 (retsize: 4;)
		uses: ap:ap_5115,fp:fp_5121,r0:r0_5119,r1:r1_5127,r10:r10_5124,r11:r11_5128,r2:r2_5137,r3:r3_5120,r4:r4_5122,r5:r5_5117,r6:r6_5118,r7:r7_5126,r8:r8_5125,r9:r9_5123,sp:sp_5114 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5142,fp:fp_5148,r0:r0_5146,r1:r1_5154,r10:r10_5151,r11:r11_5155,r3:r3_5147,r4:r4_5149,r5:r5_5144,r6:r6_5145,r7:r7_5153,r8:r8_5152,r9:r9_5150,sp:sp_5141
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000141E5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001410A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140FC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140F0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014588:
	r0_4110 = (uint32) Mem4100[sp_4105 + 40:word16]
	branch r0_4110 <u 0x00000013 l000145DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014591:
	word32 r2_5161 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014594:
	word32 sp_5169 = sp_4105 - 0x00000004
	Mem5173[sp_5169:uint32] = (uint32) Mem5171[r7_4117 + (0x0000000F - r2_5161):byte]
	Mem5177[sp_5169 - 0x00000004:word32] = r8_4116 + 217
	word32 r0_5178 = r2_5161 << 1
	Mem5182[sp_5169 - 0x00000008:word32] = fp_4112 + -188 + r0_5178 * 4
	word32 r2_5190
	word32 r0_5195
	call r9_4114 + 2 (retsize: 4;)
		uses: ap:ap_5188,fp:fp_5180,r0:r0_5178,r1:r1_5206,r10:r10_5202,r11:r11_5208,r2:r2_5166,r3:r3_5196,r4:r4_5199,r5:r5_5191,r6:r6_5193,r7:r7_5170,r8:r8_5175,r9:r9_5186,sp:sp_5169 - 0x00000008,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5189,fp:fp_5198,r0:r0_5195,r1:r1_5207,r10:r10_5203,r11:r11_5209,r2:r2_5190,r3:r3_5197,r4:r4_5200,r5:r5_5192,r6:r6_5194,r7:r7_5205,r8:r8_5204,r9:r9_5201,sp:sp_5187
	r2_5161 = r2_5190 + 0x00000001
	branch r2_5190 <= 0xFFFFFFF2 l00014594
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000145B0:
	Mem5214[fp_4112 + -156:byte] = 0x00
	Mem5216[sp_4105 - 0x00000004:word32] = 0x00000000
	Mem5219[sp_4105 - 0x00000008:word32] = fp_4112 + -188
	Mem5222[sp_4105 - 0x0000000C:word32] = r6_4109 + 4687
	Mem5225[sp_4105 - 0x00000010:word32] = r5_4108 + 1515
	word32 sp_5229
	word32 ap_5230
	word32 r5_5232
	word32 r6_5233
	word32 r0_5234
	word32 r3_5235
	word32 fp_5236
	word32 r4_5237
	word32 r9_5238
	word32 r10_5239
	word32 r8_5240
	word32 r7_5241
	word32 r1_5242
	word32 r11_5243
	call r9_4114 + 2 (retsize: 4;)
		uses: ap:ap_5189,fp:fp_5198,r0:r0_5195,r1:r1_5207,r10:r10_5203,r11:r11_5209,r2:r2_5190 + 0x00000001,r3:r3_5197,r4:r4_5200,r5:r5_5192,r6:r6_5194,r7:r7_5205,r8:r8_5204,r9:r9_5201,sp:sp_5187 - 0x00000010,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5230,fp:fp_5236,r0:r0_5234,r1:r1_5242,r10:r10_5239,r11:r11_5243,r3:r3_5235,r4:r4_5237,r5:r5_5232,r6:r6_5233,r7:r7_5241,r8:r8_5240,r9:r9_5238,sp:sp_5229
	Mem5246[sp_5229 - 0x00000004:word32] = r0_5234
	Mem5249[sp_5229 - 0x00000008:word32] = r5_5232 + 1515
	Mem5251[sp_5229 - 0x0000000C:word32] = r5_5232
	word32 r2_5252 = Mem5251[r5_5232 + 0x0000C839:word32]
	call r2_5252 + 2 (retsize: 4;)
		uses: ap:ap_5230,fp:fp_5236,r0:r0_5234,r1:r1_5242,r10:r10_5239,r11:r11_5243,r2:r2_5252,r3:r3_5235,r4:r4_5237,r5:r5_5232,r6:r6_5233,r7:r7_5241,r8:r8_5240,r9:r9_5238,sp:sp_5229 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5257,fp:fp_5263,r0:r0_5261,r1:r1_5269,r10:r10_5266,r11:r11_5270,r3:r3_5262,r4:r4_5264,r5:r5_5259,r6:r6_5260,r7:r7_5268,r8:r8_5267,r9:r9_5265,sp:sp_5256
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140EB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140DF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000141A0:
	r0_4110 = (uint32) Mem4100[sp_4105 + 40:word16]
	branch r0_4110 >=u 0x00000004 l000141AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000141AC:
	Mem5277[sp_4105 - 0x00000004:word32] = 0x00000000
	Mem5279[sp_4105 - 0x00000008:word32] = r7_4117
	word32 sp_5283
	word32 ap_5284
	word32 r2_5285
	word32 r5_5286
	word32 r6_5287
	word32 r0_5288
	word32 r3_5289
	word32 fp_5290
	word32 r4_5291
	word32 r9_5292
	word32 r10_5293
	word32 r8_5294
	word32 r7_5295
	word32 r1_5296
	word32 r11_5297
	call Mem5279[sp_4105 + 0x0000001C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4106,fp:fp_4112,r0:r0_5272,r1:r1_4118,r10:r10_4115,r11:r11_4119,r2:r4_4113,r3:r3_4111,r4:r4_4113,r5:r5_4108,r6:r6_4109,r7:r7_4117,r8:r8_4116,r9:r9_4114,sp:sp_4105 - 0x00000008,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5284,fp:fp_5290,r0:r0_5288,r1:r1_5296,r10:r10_5293,r11:r11_5297,r2:r2_5285,r3:r3_5289,r4:r4_5291,r5:r5_5286,r6:r6_5287,r7:r7_5295,r8:r8_5294,r9:r9_5292,sp:sp_5283
	Mem5300[sp_5283 - 0x00000004:word32] = r0_5288
	Mem5303[sp_5283 - 0x00000008:word32] = r6_5287 + 4257
	Mem5306[sp_5283 - 0x0000000C:word32] = r5_5286 + 1515
	word32 sp_5310
	word32 ap_5311
	word32 r5_5313
	word32 r6_5314
	word32 r0_5315
	word32 r3_5316
	word32 fp_5317
	word32 r4_5318
	word32 r9_5319
	word32 r10_5320
	word32 r8_5321
	word32 r7_5322
	word32 r1_5323
	word32 r11_5324
	call r9_5292 + 2 (retsize: 4;)
		uses: ap:ap_5284,fp:fp_5290,r0:r0_5288,r1:r1_5296,r10:r10_5293,r11:r11_5297,r2:r2_5285,r3:r3_5289,r4:r4_5291,r5:r5_5286,r6:r6_5287,r7:r7_5295,r8:r8_5294,r9:r9_5292,sp:sp_5283 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5311,fp:fp_5317,r0:r0_5315,r1:r1_5323,r10:r10_5320,r11:r11_5324,r3:r3_5316,r4:r4_5318,r5:r5_5313,r6:r6_5314,r7:r7_5322,r8:r8_5321,r9:r9_5319,sp:sp_5310
	Mem5327[sp_5310 - 0x00000004:word32] = r0_5315
	Mem5330[sp_5310 - 0x00000008:word32] = r5_5313 + 1515
	Mem5332[sp_5310 - 0x0000000C:word32] = r5_5313
	word32 r2_5333 = Mem5332[r5_5313 + 0x0000C839:word32]
	call r2_5333 + 2 (retsize: 4;)
		uses: ap:ap_5311,fp:fp_5317,r0:r0_5315,r1:r1_5323,r10:r10_5320,r11:r11_5324,r2:r2_5333,r3:r3_5316,r4:r4_5318,r5:r5_5313,r6:r6_5314,r7:r7_5322,r8:r8_5321,r9:r9_5319,sp:sp_5310 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5338,fp:fp_5344,r0:r0_5342,r1:r1_5350,r10:r10_5347,r11:r11_5351,r3:r3_5343,r4:r4_5345,r5:r5_5340,r6:r6_5341,r7:r7_5349,r8:r8_5348,r9:r9_5346,sp:sp_5337
	Mem5354[Mem5332[ap_4106 + 4:word32]:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000141A9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140DA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140CE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014404:
	r3_4111 = (uint32) Mem4100[sp_4105 + 40:word16]
	branch r3_4111 >=u 0x00000005 l00014410
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014410:
	Mem5364[sp_4105 - 0x00000004:word32] = 0x00000004
	Mem5367[sp_4105 - 0x00000008:word32] = r8_4116 + 209
	Mem5369[sp_4105 - 0x0000000C:word32] = r7_4117
	call fn00000002 (retsize: 4;)
		uses: ap:ap_4106,fp:fp_4112,r0:r0_4110,r1:r1_4118,r10:r10_4115,r11:r11_4119,r2:r4_4113,r3:r3_5359,r4:r4_4113,r5:r5_4108,r6:r6_4109,r7:r7_4117,r8:r8_4116,r9:r9_4114,sp:sp_4105 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5374,fp:fp_5380,r0:r0_5378,r1:r1_5386,r10:r10_5383,r11:r11_5387,r3:r3_5379,r4:r4_5381,r5:r5_5376,r6:r6_5377,r7:r7_5385,r8:r8_5384,r9:r9_5382,sp:sp_5373
	branch r0_4110 == 0x00000000 l00014423
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014423:
	r4_4113 = (uint32) Mem5369[r7_4117 + 4:byte]
	branch r3_4111 >=u r4_4113 + 0x0000000D l00014433
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014433:
	word32 r0_5399 = (uint32) Mem5369[r7_4117 + (r4_4113 + 0x00000005):byte]
	Mem5401[fp_4112 + -155:int8] = (int8) r0_5399
	Mem5403[r7_4117:byte] = 0x00
	Mem5405[sp_4105 - 0x00000004:word32] = 0x00000000
	Mem5409[sp_4105 - 0x00000008:uint32] = (uint32) Mem5405[r7_4117 + (r4_4113 + 0x0000000C):byte]
	Mem5413[sp_4105 - 0x0000000C:uint32] = (uint32) Mem5409[r7_4117 + (r4_4113 + 0x0000000B):byte]
	Mem5417[sp_4105 - 0x00000010:uint32] = (uint32) Mem5413[r7_4117 + (r4_4113 + 0x0000000A):byte]
	Mem5421[sp_4105 - 0x00000014:uint32] = (uint32) Mem5417[r7_4117 + (r4_4113 + 0x00000009):byte]
	Mem5425[sp_4105 - 0x00000018:uint32] = (uint32) Mem5421[r7_4117 + (r4_4113 + 0x00000008):byte]
	Mem5429[sp_4105 - 0x0000001C:uint32] = (uint32) Mem5425[r7_4117 + (r4_4113 + 0x00000007):byte]
	Mem5433[sp_4105 - 0x00000020:uint32] = (uint32) Mem5429[r7_4117 + (r4_4113 + 0x00000006):byte]
	Mem5436[sp_4105 - 0x00000024:int32] = (int32) Mem5433[fp_4112 + -155:int8]
	Mem5439[sp_4105 - 0x00000028:word32] = r7_4117 + 0x00000005
	Mem5442[sp_4105 - 0x0000002C:word32] = r6_4109 + 4409
	Mem5445[sp_4105 - 0x00000030:word32] = r5_4108 + 1515
	word32 sp_5449
	word32 ap_5450
	word32 r5_5452
	word32 r6_5453
	word32 r0_5454
	word32 r3_5455
	word32 fp_5456
	word32 r4_5457
	word32 r9_5458
	word32 r10_5459
	word32 r8_5460
	word32 r7_5461
	word32 r1_5462
	word32 r11_5463
	call r9_4114 + 2 (retsize: 4;)
		uses: ap:ap_5374,fp:fp_5380,r0:r0_5399,r1:r1_5386,r10:r10_5383,r11:r11_5387,r2:r4_5393 + 0x00000007,r3:r4_5393 + 0x00000005,r4:r4_5393 + 0x00000006,r5:r5_5376,r6:r6_5377,r7:r7_5385,r8:r8_5384,r9:r9_5382,sp:sp_5373 - 0x00000030,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5450,fp:fp_5456,r0:r0_5454,r1:r1_5462,r10:r10_5459,r11:r11_5463,r3:r3_5455,r4:r4_5457,r5:r5_5452,r6:r6_5453,r7:r7_5461,r8:r8_5460,r9:r9_5458,sp:sp_5449
	Mem5466[sp_5449 - 0x00000004:word32] = r0_5454
	Mem5469[sp_5449 - 0x00000008:word32] = r5_5452 + 1515
	Mem5471[sp_5449 - 0x0000000C:word32] = r5_5452
	word32 r2_5472 = Mem5471[r5_5452 + 0x0000C839:word32]
	call r2_5472 + 2 (retsize: 4;)
		uses: ap:ap_5450,fp:fp_5456,r0:r0_5454,r1:r1_5462,r10:r10_5459,r11:r11_5463,r2:r2_5472,r3:r3_5455,r4:r4_5457,r5:r5_5452,r6:r6_5453,r7:r7_5461,r8:r8_5460,r9:r9_5458,sp:sp_5449 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5477,fp:fp_5483,r0:r0_5481,r1:r1_5489,r10:r10_5486,r11:r11_5490,r3:r3_5482,r4:r4_5484,r5:r5_5479,r6:r6_5480,r7:r7_5488,r8:r8_5487,r9:r9_5485,sp:sp_5476
	Mem5493[r7_4117:byte] = Mem5471[fp_4112 + -155:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014430:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014420:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001440D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140C9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140BD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014154:
	r0_4110 = (uint32) Mem4100[sp_4105 + 40:word16]
	branch r0_4110 >=u 0x00000004 l00014160
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014160:
	word32 r3_5508
	word32 r0_5503 = (uint32) Mem4100[sp_4105 + 18:word16]
	branch r0_5503 != 0x00000009 l00014170
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014170:
	r3_5508 = r6_4109 + 4180
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014169:
	r3_5508 = r6_4109 + 3912
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014175:
	Mem5518[sp_4105 - 0x00000004:word32] = 0x00000000
	Mem5522[sp_4105 - 0x00000008:word32] = r7_4117
	word32 sp_5526
	word32 ap_5529
	word32 r2_5532
	word32 r5_5535
	word32 r6_5537
	word32 r0_5539
	word32 r3_5541
	word32 fp_5544
	word32 r4_5547
	word32 r9_5550
	word32 r10_5553
	word32 r8_5556
	word32 r7_5557
	word32 r1_5560
	word32 r11_5563
	call Mem5522[sp_4105 + 0x0000001C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4106,fp:fp_4112,r0:r0_5503,r1:r1_4118,r10:r10_4115,r11:r11_4119,r2:r4_4113,r3:r3_5540,r4:r4_4113,r5:r5_4108,r6:r6_4109,r7:r7_4117,r8:r8_4116,r9:r9_4114,sp:sp_4105 - 0x00000008,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5529,fp:fp_5544,r0:r0_5539,r1:r1_5560,r10:r10_5553,r11:r11_5563,r2:r2_5532,r3:r3_5541,r4:r4_5547,r5:r5_5535,r6:r6_5537,r7:r7_5557,r8:r8_5556,r9:r9_5550,sp:sp_5526
	Mem5566[sp_5526 - 0x00000004:word32] = r0_5539
	Mem5568[sp_5526 - 0x00000008:word32] = r3_5541
	Mem5571[sp_5526 - 0x0000000C:word32] = r5_5535 + 1515
	word32 sp_5575
	word32 ap_5576
	word32 r5_5578
	word32 r6_5579
	word32 r0_5580
	word32 r3_5581
	word32 fp_5582
	word32 r4_5583
	word32 r9_5584
	word32 r10_5585
	word32 r8_5586
	word32 r7_5587
	word32 r1_5588
	word32 r11_5589
	call r9_5550 + 2 (retsize: 4;)
		uses: ap:ap_5529,fp:fp_5544,r0:r0_5539,r1:r1_5560,r10:r10_5553,r11:r11_5563,r2:r2_5532,r3:r3_5541,r4:r4_5547,r5:r5_5535,r6:r6_5537,r7:r7_5557,r8:r8_5556,r9:r9_5550,sp:sp_5526 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5576,fp:fp_5582,r0:r0_5580,r1:r1_5588,r10:r10_5585,r11:r11_5589,r3:r3_5581,r4:r4_5583,r5:r5_5578,r6:r6_5579,r7:r7_5587,r8:r8_5586,r9:r9_5584,sp:sp_5575
	Mem5592[sp_5575 - 0x00000004:word32] = r0_5580
	Mem5595[sp_5575 - 0x00000008:word32] = r5_5578 + 1515
	Mem5597[sp_5575 - 0x0000000C:word32] = r5_5578
	word32 r2_5598 = Mem5597[r5_5578 + 0x0000C839:word32]
	call r2_5598 + 2 (retsize: 4;)
		uses: ap:ap_5576,fp:fp_5582,r0:r0_5580,r1:r1_5588,r10:r10_5585,r11:r11_5589,r2:r2_5598,r3:r3_5581,r4:r4_5583,r5:r5_5578,r6:r6_5579,r7:r7_5587,r8:r8_5586,r9:r9_5584,sp:sp_5575 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5603,fp:fp_5609,r0:r0_5607,r1:r1_5615,r10:r10_5612,r11:r11_5616,r3:r3_5608,r4:r4_5610,r5:r5_5605,r6:r6_5606,r7:r7_5614,r8:r8_5613,r9:r9_5611,sp:sp_5602
	Mem5619[Mem5597[ap_4106 + 4:word32]:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001415D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140B8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000145DC:
	word32 r2_5626 = (uint32) Mem4100[sp_4105 + 40:word16]
	branch r2_5626 != 0x00000000 l000145E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000145E5:
	word32 r2_5687
	word32 r11_5699
	branch r2_5626 >u 0x00000018 l00014610
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014610:
	Mem5635[sp_4105 - 0x00000004:word32] = 0x00000000
	Mem5639[sp_4105 - 0x00000008:word32] = r6_4109 + 4725
	Mem5643[sp_4105 - 0x0000000C:word32] = r5_4108 + 1515
	word32 sp_5648
	word32 ap_5650
	word32 r5_5652
	word32 r6_5653
	word32 r0_5655
	word32 r3_5657
	word32 fp_5659
	word32 r4_5661
	word32 r9_5662
	word32 r10_5664
	word32 r8_5666
	word32 r7_5668
	word32 r1_5670
	word32 r11_5672
	call r9_4114 + 2 (retsize: 4;)
		uses: ap:ap_4106,fp:fp_4112,r0:r0_5654,r1:r1_4118,r10:r10_4115,r11:r11_4119,r2:r2_5626,r3:r3_4111,r4:r4_4113,r5:r5_4108,r6:r6_4109,r7:r7_4117,r8:r8_4116,r9:r9_4114,sp:sp_4105 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5650,fp:fp_5659,r0:r0_5655,r1:r1_5670,r10:r10_5664,r11:r11_5672,r3:r3_5657,r4:r4_5661,r5:r5_5652,r6:r6_5653,r7:r7_5668,r8:r8_5666,r9:r9_5662,sp:sp_5648
	Mem5675[sp_5648 - 0x00000004:word32] = r0_5655
	Mem5678[sp_5648 - 0x00000008:word32] = r5_5652 + 1515
	Mem5680[sp_5648 - 0x0000000C:word32] = r5_5652
	word32 r2_5681 = Mem5680[r5_5652 + 0x0000C839:word32]
	call r2_5681 + 2 (retsize: 4;)
		uses: ap:ap_5650,fp:fp_5659,r0:r0_5655,r1:r1_5670,r10:r10_5664,r11:r11_5672,r2:r2_5681,r3:r3_5657,r4:r4_5661,r5:r5_5652,r6:r6_5653,r7:r7_5668,r8:r8_5666,r9:r9_5662,sp:sp_5648 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5686,fp:fp_5692,r0:r0_5690,r1:r1_5698,r10:r10_5695,r11:r11_5699,r2:r2_5687,r3:r3_5691,r4:r4_5693,r5:r5_5688,r6:r6_5689,r7:r7_5697,r8:r8_5696,r9:r9_5694,sp:sp_5685
	Mem5702[sp_4105 + 38:word16] = 0x0014
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000145EA:
	Mem5707[sp_4105 - 0x00000004:word32] = 0x00000000
	Mem5710[sp_4105 - 0x00000008:word32] = r6_4109 + 4752
	Mem5713[sp_4105 - 0x0000000C:word32] = r5_4108 + 1515
	word32 sp_5717
	word32 ap_5718
	word32 r5_5720
	word32 r6_5721
	word32 r0_5722
	word32 r3_5723
	word32 fp_5724
	word32 r4_5725
	word32 r9_5726
	word32 r10_5727
	word32 r8_5728
	word32 r7_5729
	word32 r1_5730
	word32 r11_5731
	call r9_4114 + 2 (retsize: 4;)
		uses: ap:ap_4106,fp:fp_4112,r0:r0_5654,r1:r1_4118,r10:r10_4115,r11:r11_4119,r2:r2_5626,r3:r3_4111,r4:r4_4113,r5:r5_4108,r6:r6_4109,r7:r7_4117,r8:r8_4116,r9:r9_4114,sp:sp_4105 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5718,fp:fp_5724,r0:r0_5722,r1:r1_5730,r10:r10_5727,r11:r11_5731,r3:r3_5723,r4:r4_5725,r5:r5_5720,r6:r6_5721,r7:r7_5729,r8:r8_5728,r9:r9_5726,sp:sp_5717
	Mem5734[sp_5717 - 0x00000004:word32] = r0_5722
	Mem5737[sp_5717 - 0x00000008:word32] = r5_5720 + 1515
	Mem5739[sp_5717 - 0x0000000C:word32] = r5_5720
	word32 r2_5740 = Mem5739[r5_5720 + 0x0000C839:word32]
	call r2_5740 + 2 (retsize: 4;)
		uses: ap:ap_5718,fp:fp_5724,r0:r0_5722,r1:r1_5730,r10:r10_5727,r11:r11_5731,r2:r2_5740,r3:r3_5723,r4:r4_5725,r5:r5_5720,r6:r6_5721,r7:r7_5729,r8:r8_5728,r9:r9_5726,sp:sp_5717 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5745,fp:fp_5751,r0:r0_5749,r1:r1_5757,r10:r10_5754,r11:r11_5758,r2:r2_5746,r3:r3_5750,r4:r4_5752,r5:r5_5747,r6:r6_5748,r7:r7_5756,r8:r8_5755,r9:r9_5753,sp:sp_5744
	Mem5761[sp_4105 + 38:word16] = Mem5739[sp_4105 + 40:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014633:
	r11_4119 = DPB(r11_5699, 0x0000, 0)
	branch Mem5769[sp_4105 + 38:word16] == 0x0000 l0001466A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001463A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001463C:
	word32 sp_5779 = sp_4105 - 0x00000004
	Mem5780[sp_5779:word32] = 0x00000000
	word32 r0_5782 = (uint32) (word16) r11_4119
	Mem5786[sp_5779 - 0x00000004:uint32] = (uint32) Mem5780[r7_4117 + r0_5782:byte]
	Mem5790[sp_5779 - 0x00000008:word32] = r6_4109 + 4758
	Mem5794[sp_5779 - 0x0000000C:word32] = r5_4108 + 1515
	word32 sp_5799
	word32 ap_5801
	word32 r2_5803
	word32 r5_5804
	word32 r6_5805
	word32 r0_5806
	word32 r3_5808
	word32 fp_5810
	word32 r4_5812
	word32 r9_5813
	word32 r10_5815
	word32 r8_5817
	word32 r7_5818
	word32 r1_5820
	word32 r11_5821
	call r9_4114 + 2 (retsize: 4;)
		uses: ap:ap_5800,fp:fp_5809,r0:r0_5782,r1:r1_5819,r10:r10_5814,r11:r11_5781,r2:r2_5802,r3:r3_5807,r4:r4_5811,r5:r5_5792,r6:r6_5788,r7:r7_5784,r8:r8_5816,r9:r9_5798,sp:sp_5779 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5801,fp:fp_5810,r0:r0_5806,r1:r1_5820,r10:r10_5815,r11:r11_5821,r2:r2_5803,r3:r3_5808,r4:r4_5812,r5:r5_5804,r6:r6_5805,r7:r7_5818,r8:r8_5817,r9:r9_5813,sp:sp_5799
	Mem5824[sp_5799 - 0x00000004:word32] = r0_5806
	Mem5827[sp_5799 - 0x00000008:word32] = r5_5804 + 1515
	Mem5829[sp_5799 - 0x0000000C:word32] = r5_5804
	word32 r0_5830 = Mem5829[r5_5804 + 0x0000C839:word32]
	word32 r11_5848
	call r0_5830 + 2 (retsize: 4;)
		uses: ap:ap_5801,fp:fp_5810,r0:r0_5830,r1:r1_5820,r10:r10_5815,r11:r11_5821,r2:r2_5803,r3:r3_5808,r4:r4_5812,r5:r5_5804,r6:r6_5805,r7:r7_5818,r8:r8_5817,r9:r9_5813,sp:sp_5799 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5835,fp:fp_5841,r0:r0_5839,r1:r1_5847,r10:r10_5844,r11:r11_5848,r2:r2_5836,r3:r3_5840,r4:r4_5842,r5:r5_5837,r6:r6_5838,r7:r7_5846,r8:r8_5845,r9:r9_5843,sp:sp_5834
	word16 v264_5850 = (word16) r11_5848 + 0x0001
	r11_4119 = DPB(r11_5848, v264_5850, 0)
	branch v264_5850 <u Mem5829[sp_4105 + 38:word16] l0001463C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000145E2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001466A:
	word32 sp_5856 = sp_4105 - 0x00000004
	Mem5857[sp_5856:word32] = 0x00000000
	Mem5859[sp_5856 - 0x00000004:word32] = 0x00000001
	Mem5864[sp_5856 - 0x00000008:word32] = r8_4116 + 222
	Mem5868[sp_5856 - 0x0000000C:word32] = r5_4108
	word32 r2_5869 = Mem5868[r5_4108 + 0x0000C839:word32]
	word32 r7_5904
	call r2_5869 + 2 (retsize: 4;)
		uses: ap:ap_5874,fp:fp_5889,r0:r0_5882,r1:r1_5905,r10:r10_5898,r11:r11_5908,r2:r2_5869,r3:r3_5884,r4:r4_5892,r5:r5_5866,r6:r6_5879,r7:r7_5902,r8:r8_5861,r9:r9_5895,sp:sp_5856 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5876,fp:fp_5891,r1:r1_5907,r10:r10_5900,r11:r11_5909,r3:r3_5888,r4:r4_5894,r5:r5_5878,r6:r6_5881,r7:r7_5904,r8:r8_5901,r9:r9_5897,sp:sp_5873
	word32 r0_5911 = (uint32) Mem5868[sp_3849 + 40:word16]
	r2_3865 = (uint32) Mem5868[sp_3849 + 42:word16]
	word32 r0_5914 = r2_3865 - r0_5911
	Mem5916[sp_3849 + 42:int16] = (int16) r0_5914
	r7_3861 = r7_5904 + r0_5911
	r0_3854 = (uint32) (word16) r0_5914
	branch r0_3854 <u 0x00000004 l0001469C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014699:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013DF0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001469C:
	word32 sp_5922 = sp_3849 - 0x00000004
	Mem5923[sp_5922:word32] = 0x00000000
	Mem5925[sp_5922 - 0x00000004:word32] = 0x00000001
	Mem5929[sp_5922 - 0x00000008:word32] = r8_3860 + 224
	Mem5932[sp_5922 - 0x0000000C:word32] = r5_3852
	word32 r2_5933 = Mem5932[r5_3852 + 0x0000C839:word32]
	call r2_5933 + 2 (retsize: 4;)
		uses: ap:ap_5938,fp:fp_5948,r0:r0_5944,r1:r1_5959,r10:r10_5954,r11:r11_5961,r2:r2_5933,r3:r3_5946,r4:r4_5950,r5:r5_5931,r6:r6_5942,r7:r7_5957,r8:r8_5927,r9:r9_5952,sp:sp_5922 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5939,fp:fp_5949,r0:r0_5945,r1:r1_5960,r10:r10_5955,r11:r11_5962,r3:r3_5947,r4:r4_5951,r5:r5_5941,r6:r6_5943,r7:r7_5958,r8:r8_5956,sp:sp_5937
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013DC0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013DB3:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D9B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146B0:
	word32 r2_5981 = (uint32) SLICE(Mem5979[r5_3653 + 0x0000C67A:word32] & ~0xFFFF3FFF, ui20, 12)
	Mem5984[sp_3650 + 14:int16] = (int16) r2_5981
	word32 r9_5985 = (uint32) (word16) r2_5981
	branch (r9_5985 & 0x00000008) != 0x00000000 l000146CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146CF:
	r7_3662 = (uint32) Mem5984[sp_3650 + 2:word16]
	branch r7_3662 == 0x00000003 l000146E2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146D8:
	branch r7_3662 == 0x00000006 l000146E2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146DD:
	branch r7_3662 != 0x0000000B l00014738
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014738:
	branch r7_3662 != 0x00000000 l00014776
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001473C:
	branch (r9_5985 & 0x00000004) != 0x00000000 l00014776
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014740:
	word32 sp_6003 = sp_3650 - 0x00000004
	Mem6004[sp_6003:word32] = 0x00000000
	Mem6008[sp_6003 - 0x00000004:word32] = r6_3654 + 4890
	Mem6010[sp_6003 - 0x00000008:word32] = 0x00000008
	Mem6013[sp_6003 - 0x0000000C:word32] = r6_3654 + 3712
	Mem6016[sp_6003 - 0x00000010:uint32] = 0x00005855
	Mem6020[sp_6003 - 0x00000014:word32] = r8_3661 + 229
	Mem6023[sp_6003 - 0x00000018:word32] = r6_3654 + 4764
	Mem6026[sp_6003 - 0x0000001C:word32] = r5_3653 + 1515
	word32 sp_6030
	word32 ap_6032
	word32 r5_6034
	word32 r6_6035
	word32 r0_6037
	word32 r3_6039
	word32 fp_6041
	word32 r4_6043
	word32 r9_6044
	word32 r10_6046
	word32 r8_6047
	word32 r7_6048
	word32 r1_6050
	word32 r11_6052
	call Mem6026[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_6031,fp:fp_6040,r0:r0_6036,r1:r1_6049,r10:r10_6045,r11:r11_6051,r2:r2_5981,r3:r3_6038,r4:r4_6042,r5:r5_5978,r6:r6_6006,r7:r7_5989,r8:r8_6018,r9:r9_5985,sp:sp_6003 - 0x0000001C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_6032,fp:fp_6041,r0:r0_6037,r1:r1_6050,r10:r10_6046,r11:r11_6052,r3:r3_6039,r4:r4_6043,r5:r5_6034,r6:r6_6035,r7:r7_6048,r8:r8_6047,r9:r9_6044,sp:sp_6030
	Mem6055[sp_6030 - 0x00000004:word32] = r0_6037
	Mem6058[sp_6030 - 0x00000008:word32] = r5_6034 + 1515
	Mem6060[sp_6030 - 0x0000000C:word32] = r5_6034
	word32 r2_6061 = Mem6060[r5_6034 + 0x0000C839:word32]
	call r2_6061 + 2 (retsize: 4;)
		uses: ap:ap_6032,fp:fp_6041,r0:r0_6037,r1:r1_6050,r10:r10_6046,r11:r11_6052,r2:r2_6061,r3:r3_6039,r4:r4_6043,r5:r5_6034,r6:r6_6035,r7:r7_6048,r8:r8_6047,r9:r9_6044,sp:sp_6030 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_6066,fp:fp_6072,r0:r0_6070,r1:r1_6078,r10:r10_6075,r11:r11_6079,r2:r2_6067,r3:r3_6071,r4:r4_6073,r5:r5_6068,r6:r6_6069,r7:r7_6077,r8:r8_6076,r9:r9_6074,sp:sp_6065
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146E2:
	word32 r4_6089
	word32 sp_6082 = sp_3650 - 0x00000004
	Mem6083[sp_6082:word32] = 0x00000000
	word32 r3_6084 = (uint32) Mem6083[sp_6082 + 18:word16]
	branch (r3_6084 & 0x00000004) == 0x00000000 l000146F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146F4:
	r4_6089 = r6_3654 + 4890
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146EC:
	r4_6089 = r6_3654 + 4843
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146F9:
	Mem6100[sp_6082 - 0x00000004:word32] = r4_6089
	word32 r3_6102 = r3_6084 & ~0xFFFFFFF3
	Mem6104[sp_6082 - 0x00000008:word32] = r3_6102
	Mem6108[sp_6082 - 0x0000000C:word32] = r6_3654 + 3712
	Mem6111[sp_6082 - 0x00000010:uint32] = 0x00005855
	Mem6116[sp_6082 - 0x00000014:word32] = r8_3661 + 226
	Mem6119[sp_6082 - 0x00000018:word32] = r6_3654 + 4764
	Mem6124[sp_6082 - 0x0000001C:word32] = r5_3653 + 1515
	word32 sp_6128
	word32 ap_6131
	word32 r5_6135
	word32 r6_6136
	word32 r0_6139
	word32 r3_6140
	word32 fp_6143
	word32 r4_6144
	word32 r9_6147
	word32 r10_6150
	word32 r8_6151
	word32 r7_6154
	word32 r1_6157
	word32 r11_6160
	call Mem6124[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_6031,fp:fp_6040,r0:r0_6036,r1:r1_6049,r10:r10_6045,r11:r11_6051,r2:r2_5981,r3:r3_6102,r4:r4_6099,r5:r5_5978,r6:r6_6006,r7:r7_5989,r8:r8_6018,r9:r9_5985,sp:sp_6082 - 0x0000001C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_6131,fp:fp_6143,r0:r0_6139,r1:r1_6157,r10:r10_6150,r11:r11_6160,r3:r3_6140,r4:r4_6144,r5:r5_6135,r6:r6_6136,r7:r7_6154,r8:r8_6151,r9:r9_6147,sp:sp_6128
	Mem6163[sp_6128 - 0x00000004:word32] = r0_6139
	Mem6166[sp_6128 - 0x00000008:word32] = r5_6135 + 1515
	Mem6168[sp_6128 - 0x0000000C:word32] = r5_6135
	word32 r2_6169 = Mem6168[r5_6135 + 0x0000C839:word32]
	call r2_6169 + 2 (retsize: 4;)
		uses: ap:ap_6131,fp:fp_6143,r0:r0_6139,r1:r1_6157,r10:r10_6150,r11:r11_6160,r2:r2_6169,r3:r3_6140,r4:r4_6144,r5:r5_6135,r6:r6_6136,r7:r7_6154,r8:r8_6151,r9:r9_6147,sp:sp_6128 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_6174,fp:fp_6180,r0:r0_6178,r1:r1_6186,r10:r10_6183,r11:r11_6187,r2:r2_6175,r3:r3_6179,r4:r4_6181,r5:r5_6176,r6:r6_6177,r7:r7_6185,r8:r8_6184,r9:r9_6182,sp:sp_6173
	Mem6190[Mem6168[ap_3651 + 4:word32]:word32] = Mem6168[ap_3651 + 4:word32] + r3_3656
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146CC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014776:
	branch Mem6193[r5_3653 + 0x0000C674:word16] != 0x0000 l000147A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000147A4:
	word32 sp_6199 = sp_3650 - 0x00000004
	Mem6200[sp_6199:word32] = 0x00000000
	Mem6204[sp_6199 - 0x00000004:word32] = r6_3654 + 4955
	Mem6207[sp_6199 - 0x00000008:word32] = r5_3653 + 1515
	word32 sp_6211
	word32 ap_6213
	word32 r5_6216
	word32 r6_6217
	word32 r0_6219
	word32 r3_6221
	word32 fp_6223
	word32 r4_6225
	word32 r9_6227
	word32 r10_6229
	word32 r8_6231
	word32 r7_6235
	word32 r1_6237
	word32 r11_6239
	call Mem6207[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_6212,fp:fp_6222,r0:r0_6218,r1:r1_6236,r10:r10_6228,r11:r11_6238,r2:r2_6214,r3:r3_6220,r4:r4_6224,r5:r5_6192,r6:r6_6202,r7:r7_6232,r8:r8_6230,r9:r9_6226,sp:sp_6199 - 0x00000008,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_6213,fp:fp_6223,r0:r0_6219,r1:r1_6237,r10:r10_6229,r11:r11_6239,r3:r3_6221,r4:r4_6225,r5:r5_6216,r6:r6_6217,r7:r7_6235,r8:r8_6231,r9:r9_6227,sp:sp_6211
	Mem6242[sp_6211 - 0x00000004:word32] = r0_6219
	Mem6245[sp_6211 - 0x00000008:word32] = r5_6216 + 1515
	Mem6247[sp_6211 - 0x0000000C:word32] = r5_6216
	word32 r2_6248 = Mem6247[r5_6216 + 0x0000C839:word32]
	word32 sp_6252
	word32 ap_6253
	word32 r2_6254
	word32 r5_6255
	word32 r6_6256
	word32 r3_6258
	word32 fp_6259
	word32 r4_6260
	word32 r9_6261
	word32 r10_6262
	word32 r8_6263
	word32 r7_6264
	word32 r1_6265
	call r2_6248 + 2 (retsize: 4;)
		uses: ap:ap_6213,fp:fp_6223,r0:r0_6219,r1:r1_6237,r10:r10_6229,r11:r11_6239,r2:r2_6248,r3:r3_6221,r4:r4_6225,r5:r5_6216,r6:r6_6217,r7:r7_6235,r8:r8_6231,r9:r9_6227,sp:sp_6211 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_6253,fp:fp_6259,r1:r1_6265,r10:r10_6262,r2:r2_6254,r3:r3_6258,r4:r4_6260,r5:r5_6255,r6:r6_6256,r7:r7_6264,r8:r8_6263,r9:r9_6261,sp:sp_6252
	Mem6269[sp_6252 - 0x00000004:word32] = 0x00000005
	Mem6272[sp_6252 - 0x00000008:uint32] = (uint32) Mem6269[r5_6255 + 0x0000C674:word16]
	word32 ap_6276
	word32 fp_6277
	word32 r11_6279
	word32 sp_6280
	word32 r0_6278 = fn0000DC76(ap_6253, fp_6259, out r11_6279, out ap_6276, out fp_6277, out sp_6280)
	branch r0_6278 == 0x00000000 l000147E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000147DB:
	Mem6290[sp_6280 + 8:word32] = r0_6278
	branch r0_6278 <= 0x00000001 l000147E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000147E5:
	Mem6296[sp_6280 - 0x00000004:word32] = 0x00000000
	Mem6300[sp_6280 - 0x00000008:word32] = r6_6256 + 5032
	Mem6304[sp_6280 - 0x0000000C:word32] = r5_6255 + 1515
	word32 sp_6308
	word32 ap_6310
	word32 r5_6313
	word32 r6_6314
	word32 r0_6316
	word32 r3_6318
	word32 fp_6320
	word32 r4_6322
	word32 r9_6324
	word32 r10_6326
	word32 r8_6328
	word32 r7_6330
	word32 r1_6332
	word32 r11_6334
	call Mem6304[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_6276,fp:fp_6277,r0:r0_6278,r1:r1_6265,r10:r10_6262,r11:r11_6279,r2:r2_6254,r3:r3_6258,r4:r4_6260,r5:r5_6255,r6:r6_6256,r7:r7_6264,r8:r8_6263,r9:r9_6261,sp:sp_6280 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_6310,fp:fp_6320,r0:r0_6316,r1:r1_6332,r10:r10_6326,r11:r11_6334,r3:r3_6318,r4:r4_6322,r5:r5_6313,r6:r6_6314,r7:r7_6330,r8:r8_6328,r9:r9_6324,sp:sp_6308
	Mem6337[sp_6308 - 0x00000004:word32] = r0_6316
	Mem6340[sp_6308 - 0x00000008:word32] = r5_6313 + 1515
	Mem6342[sp_6308 - 0x0000000C:word32] = r5_6313
	word32 r2_6343 = Mem6342[r5_6313 + 0x0000C839:word32]
	call r2_6343 + 2 (retsize: 4;)
		uses: ap:ap_6310,fp:fp_6320,r0:r0_6316,r1:r1_6332,r10:r10_6326,r11:r11_6334,r2:r2_6343,r3:r3_6318,r4:r4_6322,r5:r5_6313,r6:r6_6314,r7:r7_6330,r8:r8_6328,r9:r9_6324,sp:sp_6308 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000147E4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001477E:
	word32 sp_6366 = sp_3650 - 0x00000004
	Mem6367[sp_6366:word32] = 0x00000000
	Mem6370[sp_6366 - 0x00000004:word32] = r6_3654 + 4925
	Mem6373[sp_6366 - 0x00000008:word32] = r5_3653 + 1515
	word32 sp_6377
	word32 ap_6378
	word32 r5_6380
	word32 r6_6381
	word32 r0_6382
	word32 r3_6383
	word32 fp_6384
	word32 r4_6385
	word32 r9_6386
	word32 r10_6387
	word32 r8_6388
	word32 r7_6389
	word32 r1_6390
	word32 r11_6391
	call Mem6373[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_6212,fp:fp_6222,r0:r0_6218,r1:r1_6236,r10:r10_6228,r11:r11_6238,r2:r2_6214,r3:r3_6220,r4:r4_6224,r5:r5_6192,r6:r6_6202,r7:r7_6232,r8:r8_6230,r9:r9_6226,sp:sp_6366 - 0x00000008,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
		defs: ap:ap_6378,fp:fp_6384,r0:r0_6382,r1:r1_6390,r10:r10_6387,r11:r11_6391,r3:r3_6383,r4:r4_6385,r5:r5_6380,r6:r6_6381,r7:r7_6389,r8:r8_6388,r9:r9_6386,sp:sp_6377
	Mem6394[sp_6377 - 0x00000004:word32] = r0_6382
	Mem6397[sp_6377 - 0x00000008:word32] = r5_6380 + 1515
	Mem6399[sp_6377 - 0x0000000C:word32] = r5_6380
	word32 r2_6400 = Mem6399[r5_6380 + 0x0000C839:word32]
	call r2_6400 + 2 (retsize: 4;)
		uses: ap:ap_6378,fp:fp_6384,r0:r0_6382,r1:r1_6390,r10:r10_6387,r11:r11_6391,r2:r2_6400,r3:r3_6383,r4:r4_6385,r5:r5_6380,r6:r6_6381,r7:r7_6389,r8:r8_6388,r9:r9_6386,sp:sp_6377 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6451,Stack +FFFFFF0C:dwLocF8_6449,Stack +FFFFFF10:dwLocF4_6447,Stack +FFFFFF14:dwLocF0_6445,Stack +FFFFFF20:0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014808:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0001325E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00014812(word32 r0, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp:[0..31] r0:[0..31] r10:[16..31] r3:[16..31] r4:[0..31] r5:[0..31] r6:[16..31] r7:[0..31] r8:[0..31] r9:[16..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00014812_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014812:
	word32 r3_13
	branch (uint32) Mem0[r4 + 0x0000C65E:word16] >=u 0x0000000B l00014844
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014844:
	r3_13 = DPB(r3, 0x000B, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014838:
	r3_13 = DPB(r3, Mem0[r4 + 0x0000C65E:word16], 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014847:
	word16 v17_23 = (word16) r3_13
	word32 ap_38 = (uint32) v17_23
	word32 v24_44 = r8 + 5401 + ap_38 * 0x00000014
	word32 r2_58
	word32 ap_63
	word32 r0_71
	word32 fp_107
	word32 r4_178
	word32 r7_108
	word32 r10_103
	word32 sp_197
	word32 r11_202
	word32 r3_101
	word32 r6_102
	word32 r9_104
	word32 r8_106
	word32 r5_110
	call Mem50[0x000192BC:word32] + 2 (retsize: 4;)
		uses: ap:ap_38,fp:fp,r0:r0,r10:DPB(r10, Mem0[Mem0[r4 + 1511:word32] + 12:word16], 0),r11:0x00000000,r2:ap_38 * 0x00000005,r3:r3_22,r4:r4,r5:r5,r6:DPB(r6, v17_23, 0),r7:r7,r8:r8,r9:DPB(r9, (uint16) Mem0[r4 + 0x0000C658:byte], 0),sp:fp - 0x00000030,Stack +0004:fp + -37,Stack +0008:v24_44
		defs: ap:ap_63,fp:fp_65,r0:r0_71,r10:r10_61,r11:r11_56,r2:r2_58,r3:r3_59,r4:r4_57,r5:r5_74,r6:r6_60,r7:r7_68,r8:r8_64,r9:r9_62,sp:sp_54
	branch ap_63 != 0x00000006 l000148AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148AC:
	branch ap_63 != 0x00000008 l000148D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148D0:
	branch ap_63 <u 0x0000000B l000148EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148D5:
	Mem87[sp_197 - 0x00000004:uint32] = (uint32) Mem50[r4_178 + 0x0000C65E:word16]
	Mem90[sp_197 - 0x00000008:word32] = r5_110 + 236
	Mem93[sp_197 - 0x0000000C:word32] = fp_107 + -36
	call Mem93[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_63,fp:fp_65,r0:r0_71,r10:r10_61,r11:r11_56,r2:r2_58,r3:r3_59,r4:r4_57,r5:r5_74,r6:r6_60,r7:r7_68,r8:r8_64,r9:r9_62,sp:sp_54 - 0x0000000C,Stack +FFFFFFD4:fp + -37,Stack +FFFFFFD8:v24_44
		defs: fp:fp_107,r10:r10_103,r11:r11_98,r3:r3_101,r4:r4_99,r5:r5_110,r6:r6_102,r7:r7_108,r8:r8_106,r9:r9_104,sp:sp_97
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148B1:
	Mem117[fp_107 + -34:byte] = Mem50[r8_106 + 5320 + (uint32) ((word16) ((uint32) Mem50[r4_178 + 0x0000C65C:word16] >> 1 & ~0xFFFFFFFC)):byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014875:
	branch ((uint32) Mem50[r4_178 + 0x0000C65C:word16] & 0x00000002) == 0x00000000 l00014888
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014888:
	r3_101 = DPB(r3_101, 0x34, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014880:
	r3_101 = DPB(r3_101, 0x38, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001488B:
	word32 r2_145
	Mem138[fp_107 + -36:byte] = (byte) r3_101
	word32 r2_140 = (uint32) Mem138[r4_178 + 0x0000C65C:word16]
	branch (r2_140 & 0x00000004) == 0x00000000 l000148A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148A0:
	r2_145 = DPB(r2_140, 0x32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001489A:
	r2_145 = DPB(r2_140, 0x33, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148A3:
	Mem157[fp_107 + -34:byte] = (byte) r2_145
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148EA:
	word32 ap_161 = 0x00000000
	word32 r2_163 = fp_107 + -32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148F0:
	Mem169[r2_163:byte] = 0x20
	r2_163 = r2_163 + 0x00000001
	ap_161 = ap_161 + 0x00000001
	branch ap_161 <= 0x0000000E l000148F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148F9:
	Mem176[fp_107 + -17:byte] = 0x00
	word32 r2_180 = (uint32) Mem176[r4_178 + 0x0000C67C:word16]
	word32 r7_186 = DPB(r7_108, (word16) r2_180 & ~0x0000, 0)
	word32 r0_191 = (uint32) (word16) r10_103
	branch r0_191 > 0x0000000F l0001492E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001492E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001490C_1:
	call 0x00014910 + r0_191 * 0x00000002 (retsize: 4;)
		uses: ap:ap_172,fp:fp_162,r0:r0_191,r10:r10_188,r11:r11_202,r2:r2_180,r3:r3_209,r4:r4_178,r5:r5_233,r6:r6_213,r7:r7_186,r8:r8_225,r9:r9_219,sp:sp_197,Stack +FFFFFFD4:fp + -37,Stack +FFFFFFD8:v24_44
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00014812_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00015106(word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r10:[16..31] r11:[16..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[16..31] r7:[16..31] r8:[16..31] r9:[16..31]
// LiveOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00015106_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015106:
	word32 r2_245
	word32 r5_100
	word32 r1_7 = (uint32) Mem0[Mem0[ap + 4:word32]:word16]
	word32 r2_24 = (uint32) Mem0[Mem0[ap + 8:word32]:word16]
	int16 v15_17 = (int16) (r1_7 >> 5 & ~0xFFFFFFF0)
	word32 r0_32 = r2_24 >> 5 & ~0xFFFFFFC0
	word32 sp_113 = fp - 0x00000008
	word32 r11_123 = DPB(r11, (int16) ((r1_7 >> 9 & ~0xFFFFFF80) + 0x00000050), 0)
	word32 r10_188 = DPB(r10, v15_17, 0)
	word32 r9_157 = DPB(r9, (word16) r1_7 & ~0xFFE0, 0)
	word32 r1_243 = r2_24
	word32 r8_119 = DPB(r8, (int16) (r2_24 >> 11 & ~0xFFFFFFE0), 0)
	word32 r7_115 = DPB(r7, (int16) r0_32, 0)
	word32 r6_199 = DPB(r6, (word16) ((r2_24 & ~0xFFFFFFE0) * 0x00000002), 0)
	word32 r2_40 = (uint32) v15_17
	branch r2_40 == 0x00000000 l00015189
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015184:
	branch r2_40 <=u 0x0000000C l000151A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000151A0:
	r2_245 = r2_40 - 0x00000001 << 2
	r5_100 = r3 + 5461 + r2_245
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015189:
	call Mem67[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0_32,r1:r2_24,r10:r10_19,r11:r11_14,r2:r2_40,r3:r3,r4:r4,r5:r5,r6:r6_39,r7:r7_35,r8:r8_30,r9:r9_22,sp:fp - 0x00000014,Stack +0004:fp + -8,Stack +0008:r3 + 5108,Stack +000C:r2_40
		defs: ap:ap_73,fp:fp_92,r1:r1_77,r10:r10_82,r11:r11_80,r2:r2_78,r3:r3_91,r4:r4_98,r6:r6_90,r7:r7_88,r8:r8_86,r9:r9_84,sp:sp_71
	dwLoc0C = r2_40
	dwLoc10 = r3 + 5108
	dwLoc14 = fp + -8
	r5_100 = fp + -8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000151AC:
	word32 fp_206
	word32 ap_177
	word32 r2_183
	word32 r10_190
	word32 r3_202
	word32 r11_186
	word32 r4_210
	word32 r1_180
	word32 r5_207
	word32 r7_197
	word32 r6_201
	word32 r9_191
	word32 r8_194
	branch Mem105[r4 + 36:word32] <= 0x00000009 l000151DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000151DC:
	branch Mem105[r4 + 72:word32] == 0x00000000 l0001520C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001520C:
	word32 sp_114 = sp_113 - 0x00000004
	Mem117[sp_114:uint32] = (uint32) (word16) r7_115
	Mem121[sp_114 - 0x00000004:uint32] = (uint32) (word16) r8_119
	word32 r1_122 = 0x00000000
	word32 r0_124 = (uint32) (word16) r11_123
	branch 0x00000064 == 0x00000000 l00015234
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001521E:
	branch 0x00000063 == 0x00000000 l00015239
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015223:
	branch true l00015234
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015234:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015225:
	branch r0_124 == 0x00000064 l00015239
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001522A:
	branch r0_124 <u 0x00000064 l0001522F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001522C:
	r1_122 = 0xFFFFFF9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001522F:
	r1_122 = r1_122 + r0_124
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015239:
	Mem149[sp_114 - 0x00000008:uint32] = (uint32) (word16) r1_122
	Mem154[sp_114 - 0x0000000C:word32] = r5_100
	Mem160[sp_114 - 0x00000010:uint32] = (uint32) (word16) r9_157
	Mem166[sp_114 - 0x00000014:word32] = r3 + 5113
	Mem172[sp_114 - 0x00000018:word32] = Mem166[ap + 16:word32]
	call Mem172[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_169,fp:fp_204,r0:r0_124,r1:r1_147,r10:r10_188,r11:r11_123,r2:0x00000064,r3:r3_163,r4:r4_104,r5:r5_152,r6:r6_199,r7:r7_115,r8:r8_119,r9:r9_157,sp:sp_114 - 0x00000018,Stack +FFFFFFF0:dwLoc14_323,Stack +FFFFFFF4:dwLoc10_319,Stack +FFFFFFF8:dwLoc0C_315
		defs: ap:ap_177,fp:fp_206,r1:r1_180,r10:r10_190,r11:r11_186,r2:r2_183,r3:r3_202,r4:r4_210,r5:r5_207,r6:r6_201,r7:r7_197,r8:r8_194,r9:r9_191
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000151E1:
	word32 sp_212 = sp_113 - 0x00000004
	Mem214[sp_212:uint32] = (uint32) (word16) r6_199
	Mem217[sp_212 - 0x00000004:uint32] = (uint32) (word16) r7_115
	Mem220[sp_212 - 0x00000008:uint32] = (uint32) (word16) r8_119
	Mem223[sp_212 - 0x0000000C:uint32] = (uint32) (word16) r9_157
	Mem226[sp_212 - 0x00000010:uint32] = (uint32) (word16) r10_188
	word32 r0_227 = (uint32) (word16) r11_123
	Mem230[sp_212 - 0x00000014:word32] = r0_227 + 0x0000076C
	Mem233[sp_212 - 0x00000018:word32] = r3 + 5159
	Mem236[sp_212 - 0x0000001C:word32] = Mem233[ap + 16:word32]
	call Mem236[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_169,fp:fp_204,r0:r0_227,r1:r1_243,r10:r10_188,r11:r11_123,r2:r2_245,r3:r3_163,r4:r4_104,r5:r5_152,r6:r6_199,r7:r7_115,r8:r8_119,r9:r9_157,sp:sp_212 - 0x0000001C,Stack +FFFFFFF0:dwLoc14_323,Stack +FFFFFFF4:dwLoc10_319,Stack +FFFFFFF8:dwLoc0C_315
		defs: ap:ap_241,fp:fp_254,r1:r1_244,r10:r10_248,r11:r11_247,r2:r2_246,r3:r3_253,r4:r4_256,r5:r5_255,r6:r6_252,r7:r7_251,r8:r8_250,r9:r9_249
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000151B2:
	word32 sp_258 = sp_113 - 0x00000004
	Mem260[sp_258:uint32] = (uint32) (word16) r6_199
	Mem263[sp_258 - 0x00000004:uint32] = (uint32) (word16) r7_115
	Mem266[sp_258 - 0x00000008:uint32] = (uint32) (word16) r8_119
	Mem269[sp_258 - 0x0000000C:uint32] = (uint32) (word16) r9_157
	Mem271[sp_258 - 0x00000010:word32] = r5_100
	word32 r0_272 = (uint32) (word16) r11_123
	Mem275[sp_258 - 0x00000014:word32] = r0_272 + 0x0000076C
	Mem278[sp_258 - 0x00000018:word32] = r3 + 5135
	Mem281[sp_258 - 0x0000001C:word32] = Mem278[ap + 16:word32]
	call Mem281[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_169,fp:fp_204,r0:r0_272,r1:r1_243,r10:r10_188,r11:r11_123,r2:r2_245,r3:r3_163,r4:r4_104,r5:r5_152,r6:r6_199,r7:r7_115,r8:r8_119,r9:r9_157,sp:sp_258 - 0x0000001C,Stack +FFFFFFF0:dwLoc14_323,Stack +FFFFFFF4:dwLoc10_319,Stack +FFFFFFF8:dwLoc0C_315
		defs: ap:ap_286,fp:fp_297,r1:r1_288,r10:r10_291,r11:r11_290,r2:r2_289,r3:r3_296,r4:r4_299,r5:r5_298,r6:r6_295,r7:r7_294,r8:r8_293,r9:r9_292
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001524F:
	word32 sp_308 = fp_206 - 0x00000004
	word32 r0_303 = Mem302[ap_177 + 16:word32]
	word32 fp_309 = Mem302[sp_308 + 0x00000010:word32]
	word32 ap_310 = Mem302[sp_308 + 0x0000000C:word32]
	r1Out = r1_180
	r2Out = r2_183
	r3Out = r3_202
	r4Out = r4_210
	r5Out = r5_207
	r6Out = r6_201
	r7Out = r7_197
	r8Out = r8_194
	r9Out = r9_191
	r10Out = r10_190
	r11Out = r11_186
	apOut = ap_310
	fpOut = fp_309
	spOut = sp_308
	return r0_303
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00015106_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00015256(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 ap, word32 fp, word32 pc, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut, ptr32 & pcOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: ap fp pc r0 r1 r2 r4 r5 r6 r7 sp
// Trashed: CVZN ap fp pc r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved:
fn00015256_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015256:
	word32 r0_112
	word32 r5_34
	word32 v8_6 = Mem0[r2 + 0x0000C5FB:word32] - 0x00000001
	Mem7[r2 + 0x0000C5FB:word32] = v8_6
	branch v8_6 < 0x00000000 l0001527C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001527C:
	r0_112 = fn0000D69A(r0, r1, r2, r3, r4, r5, r6, ap, fp, pc, out r1, out r2, out r3, out r4_214, out r5_215, out r6, out ap, out fp, out sp_216, out pc)
	r5_34 = r0_112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015268:
	r0_112 = Mem7[r2 + 0x0000C5F7:word32]
	Mem40[r2 + 0x0000C5F7:word32] = Mem7[r2 + 0x0000C5F7:word32] + 0x00000001
	r5_34 = (uint32) Mem40[r0_112:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015286:
	word32 r7_124 = r5_34 + 0x00000001
	word32 r4_100 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001528C:
	word32 v16_54 = Mem53[r2 + 0x0000C5FB:word32] - 0x00000001
	Mem55[r2 + 0x0000C5FB:word32] = v16_54
	branch v16_54 < 0x00000000 l000152A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152A8:
	r5_34 = fn0000D69A(r0_112, r1, r2, r3, r4_100, r5_34, r6, ap, fp, pc, out r1, out r2, out r3_217, out r4_100, out r5_218, out r6_219, out ap, out fp, out sp_220, out pc)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015294:
	word32 r0_86 = Mem55[r2 + 0x0000C5F7:word32]
	Mem88[r2 + 0x0000C5F7:word32] = Mem55[r2 + 0x0000C5F7:word32] + 0x00000001
	r5_34 = (uint32) Mem88[r0_86:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152B2:
	word32 r6_95 = r5_34 & ~0xFFFFFFF0
	word32 r0_98 = (uint32) SLICE(r5_34 & ~0xFFFFFF0F, ui28, 4)
	r6 = r6_95 + 0x00000001
	r3 = r0_98 + 0x00000001
	branch r0_98 + 0x00000001 + r4_100 <=u Mem103[ap + 8:word32] l000152DE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152DE:
	r1 = Mem103[ap + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152E4:
	Mem117[r1:word32] = r6_95 + 0x00000001
	r0_112 = r4_100
	r4_100 = r4_100 + 0x00000001
	r3 = r3 - 0x00000001
	branch r3 != 0x00000000 l000152E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152F1:
	r7_124 = r7_124 - 0x00000001
	branch r7_124 != 0x00000000 l0001528C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152F5:
	word32 r3_133
	branch r4_100 == Mem117[ap + 8:word32] l00015300
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015300:
	r3_133 = DPB(r3, 0x00, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152FB:
	r3_133 = DPB(r3, 0x04, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015302:
	word32 sp_150 = fp - 0x00000004
	word32 fp_152 = Mem117[sp_150 + 0x00000010:word32]
	word32 ap_153 = Mem117[sp_150 + 0x0000000C:word32]
	r1Out = r1
	r2Out = <invalid>
	r4Out = r4_100
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = r7_124
	apOut = ap_153
	fpOut = fp_152
	spOut = sp_150
	pcOut = <invalid>
	return (int32) (int8) r3_133
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152DA:
	word32 sp_158 = fp - 0x00000004
	word32 fp_159 = Mem103[sp_158 + 0x00000010:word32]
	word32 ap_160 = Mem103[sp_158 + 0x0000000C:word32]
	r1Out = r1
	r2Out = <invalid>
	r4Out = r4_100
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = r7_124
	apOut = ap_160
	fpOut = fp_159
	spOut = sp_158
	pcOut = <invalid>
	return 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00015256_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0001530A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0001530A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0001530A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001530A:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00015896()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn00015896_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00015896_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015896:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00015E22()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn00015E22_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00015E22_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E22:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000162E6()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn000162E6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000162E6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000162E6:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000167AA(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r8, word32 r9, word32 r10, word32 r11, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
l0001698D:
	Mem442[sp - 0x00000004:word32] = Mem0[fp + -16:word32]
	call ap + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc,r0:r0,r1:r1,r10:r10,r11:r11,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9,sp:sp - 0x00000004,Stack +FFFFFBE0:dwLoc0424,Stack +FFFFFBE4:dwLoc0420
		defs: ap:ap_450,fp:fp_448,pc:pc_456,r0:r0_451,r1:r1_457,r10:r10_461,r11:r11_460,r2:r2_453,r3:r3_452,r4:r4_449,r5:r5_454,r6:r6_455,r7:r7_459,r8:r8_463,r9:r9_462,sp:sp_447
	Mem467[sp_447 - 0x00000004:word32] = Mem442[fp_448 + -12:word32]
	call ap_450 + 2 (retsize: 4;)
		uses: ap:ap_450,fp:fp_448,pc:pc_456,r0:r0_451,r1:r1_457,r10:r10_461,r11:r11_460,r2:r2_453,r3:r3_452,r4:r4_449,r5:r5_454,r6:r6_455,r7:r7_459,r8:r8_463,r9:r9_462,sp:sp_447 - 0x00000004,Stack +FFFFFBE0:dwLoc0424,Stack +FFFFFBE4:dwLoc0420
		defs: ap:ap_474,fp:fp_472,pc:pc_480,r0:r0_475,r1:r1_481,r10:r10_484,r11:r11_483,r2:r2_477,r3:r3_476,r4:r4_473,r5:r5_478,r6:r6_479,r7:r7_482,r8:r8_486,r9:r9_485,sp:sp_471
	Mem490[sp_471 - 0x00000004:word32] = Mem467[fp_472 + -8:word32]
	call ap_474 + 2 (retsize: 4;)
		uses: ap:ap_474,fp:fp_472,pc:pc_480,r0:r0_475,r1:r1_481,r10:r10_484,r11:r11_483,r2:r2_477,r3:r3_476,r4:r4_473,r5:r5_478,r6:r6_479,r7:r7_482,r8:r8_486,r9:r9_485,sp:sp_471 - 0x00000004,Stack +FFFFFBE0:dwLoc0424,Stack +FFFFFBE4:dwLoc0420
	def sp
	def Mem0
	def ap
	def r7
	def dwLoc0420
	def dwLoc0424
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AC5:
	Mem951[sp - 0x00000004:word32] = Mem0[fp + -16:word32]
	r0_957 = fn00018BF6(r0, ap, fp, out r3_1260, out ap_955, out fp_956, out sp_959)
	Mem967[sp_959 - 0x00000004:word32] = Mem951[fp_956 + -12:word32]
	fn00018BF6(r0_957, ap_955, fp_956, out r3_976, out ap_1261, out fp_972, out sp_1262)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AD9:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000167AA_entry:
	def fp
	def r4
	def r0
	def r2
	def r3
	def r5
	def r6
	def pc
	def r1
	def r11
	def r10
	def r9
	def r8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167AA:
	Mem6[fp + -24:word32] = 0x00000007
	branch Mem6[r4 + 0x0000C5FB:word32] + Mem6[r4 + 132:word32] <= 0x00030D40 l000167DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167DC:
	r0_14 = DPB(r0, 0x07, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167D4:
	r0_19 = DPB(r0, 0x08, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167DF:
	r0_23 = PHI((r0_19, l000167D4), (r0_14, l000167DC))
	Mem26[fp + -28:int32] = (int32) (int8) r0_23
	Mem29[r4 + 0x0000C819:word32] = 0x00000000
	ap_30 = (uint32) Mem29[r4 + 0x0000C640:word16]
	branch (ap_30 & 0x00000004) != 0x00000000 l000167F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167F7:
	Mem35[fp + -20:word32] = 0x00000009
	r0_61 = fn00015256(r0_23, r1, r2, r3, r4, r5, r6, ap_30, fp, pc, out r1_62, out r2_1216, out r4_65, out r5_66, out r6_67, out r7_68, out ap_58, out fp_59, out sp_69, out pc_60)
	branch r0_61 == 0x00000000 l00016812
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016812:
	Mem81[sp_69 - 0x00000004:word32] = fp_59 + -20
	Mem84[sp_69 - 0x00000008:word32] = fp_59 + -8
	Mem87[sp_69 - 0x00000010:word64] = 0x0000000000000000
	Mem90[sp_69 - 0x00000014:uint32] = 0x00000100
	Mem93[sp_69 - 0x00000018:uint32] = 0x00000100
	Mem96[sp_69 - 0x0000001C:word32] = fp_59 + -1052
	r0_110 = fn0001878E(r0_61, r4_65, r5_66, r6_67, r7_68, r8, r9, r10, r11, ap_58, fp_59, out r2_113, out r3_1217, out r4_115, out r5_116, out r6_117, out r7_1218, out r8_119, out r9_120, out r10_111, out r11_112, out ap_108, out fp_109, out sp_121)
	branch r0_110 == 0x00000000 l00016847
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016847:
	Mem133[sp_121 - 0x00000004:uint32] = 0x00000040
	Mem136[sp_121 - 0x00000008:word32] = fp_109 + -1052
	r0_143 = fn00015256(r0_110, r1_62, r2_113, r0_110, r4_115, r5_116, r6_117, ap_108, fp_109, pc_60, out r1_144, out r2_145, out r4_147, out r5_148, out r6_149, out r7_150, out ap_140, out fp_141, out sp_151, out pc_142)
	branch r0_143 == 0x00000000 l0001685D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001685D:
	Mem163[sp_151 - 0x00000004:word32] = fp_141 + -24
	Mem166[sp_151 - 0x00000008:word32] = fp_141 + -12
	Mem169[sp_151 - 0x0000000C:word32] = r2_145 + 256
	Mem172[sp_151 - 0x00000010:word32] = r2_145 + 128
	Mem174[sp_151 - 0x00000014:word32] = 0x00000000
	Mem177[sp_151 - 0x00000018:uint32] = 0x00000040
	Mem180[sp_151 - 0x0000001C:word32] = fp_141 + -1052
	r0_186 = fn0001878E(r0_143, r4_147, r5_148, r6_149, r7_150, r8_119, r9_120, r10_111, r11_112, ap_140, fp_141, out r2_189, out r3_1232, out r4_191, out r5_192, out r6_193, out r7_1233, out r8_195, out r9_196, out r10_187, out r11_188, out ap_184, out fp_185, out sp_197)
	branch r0_186 == 0x00000000 l0001689E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001689E:
	Mem209[sp_197 - 0x00000004:uint32] = 0x00000040
	Mem212[sp_197 - 0x00000008:word32] = fp_185 + -1052
	r0_219 = fn00015256(r0_186, r1_144, r2_189, r0_186, r4_191, r5_192, r6_193, ap_184, fp_185, pc_142, out r1_1263, out r2_221, out r4_223, out r5_224, out r6_225, out r7_226, out ap_1264, out fp_217, out sp_227, out pc_1265)
	branch r0_219 == 0x00000000 l000168B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168B4:
	ap_237 = (uint32) Mem212[r4_223 + 0x0000C640:word16]
	branch (ap_237 & 0x00000002) == 0x00000000 l00016928
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016928:
	Mem243[sp_227 - 0x00000004:word32] = fp_217 + -28
	Mem246[sp_227 - 0x00000008:word32] = fp_217 + -16
	Mem249[sp_227 - 0x0000000C:word32] = r2_221 + 256
	Mem252[sp_227 - 0x00000010:word32] = r2_221 + 384
	Mem254[sp_227 - 0x00000014:word32] = 0x00000000
	Mem257[sp_227 - 0x00000018:uint32] = 0x00000040
	Mem260[sp_227 - 0x0000001C:word32] = fp_217 + -1052
	r0_266 = fn0001878E(r0_219, r4_223, r5_224, r6_225, r7_226, r8_195, r9_196, r10_187, r11_188, ap_237, fp_217, out r2_1269, out r3_1270, out r4_1271, out r5_1272, out r6_1273, out r7_1274, out r8_1275, out r9_1276, out r10_1277, out r11_1278, out ap_264, out fp_265, out sp_277)
	branch r0_266 == 0x00000000 l00016973
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016973:
	Mem289[sp_277 - 0x00000004:word32] = Mem260[fp_265 + -28:word32]
	Mem292[sp_277 - 0x00000008:word32] = Mem289[fp_265 + -24:word32]
	Mem295[sp_277 - 0x0000000C:word32] = Mem292[fp_265 + -20:word32]
	Mem298[sp_277 - 0x00000010:word32] = Mem295[fp_265 + -16:word32]
	Mem301[sp_277 - 0x00000014:word32] = Mem298[fp_265 + -12:word32]
	Mem304[sp_277 - 0x00000018:word32] = Mem301[fp_265 + -8:word32]
	fn00015896()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001694C:
	branch r0_266 != 0x00000001 l0001695B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016951:
	Mem313[sp_277 - 0x00000004:word32] = Mem260[fp_265 + -16:word32]
	r0_319 = fn00018BF6(r0_266, ap_264, fp_265, out r3_1296, out ap_317, out fp_318, out sp_321)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001695B:
	r0_337 = PHI((r0_266, l0001694C), (r0_319, l00016951))
	ap_336 = PHI((ap_264, l0001694C), (ap_317, l00016951))
	Mem330 = PHI((Mem260, l0001694C), (Mem313, l00016951))
	fp_329 = PHI((fp_265, l0001694C), (fp_318, l00016951))
	sp_327 = PHI((sp_277, l0001694C), (sp_321, l00016951))
	Mem332[sp_327 - 0x00000004:word32] = Mem330[fp_329 + -12:word32]
	r0_340 = fn00018BF6(r0_337, ap_336, fp_329, out r3_1293, out ap_338, out fp_339, out sp_342)
	Mem350[sp_342 - 0x00000004:word32] = Mem332[fp_339 + -8:word32]
	fn00018BF6(r0_340, ap_338, fp_339, out r3_359, out ap_1294, out fp_355, out sp_1295)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168BF:
	Mem373[sp_227 - 0x00000004:word32] = fp_217 + -28
	Mem376[sp_227 - 0x00000008:word32] = fp_217 + -16
	Mem379[sp_227 - 0x0000000C:word32] = r2_221 + 256
	Mem382[sp_227 - 0x00000010:word32] = r2_221 + 512
	Mem384[sp_227 - 0x00000014:word32] = 0x00000000
	Mem387[sp_227 - 0x00000018:uint32] = 0x00000040
	Mem390[sp_227 - 0x0000001C:word32] = fp_217 + -1052
	r0_396 = fn0001878E(r0_219, r4_223, r5_224, r6_225, r7_226, r8_195, r9_196, r10_187, r11_188, ap_237, fp_217, out r2_1279, out r3_1280, out r4_1281, out r5_1282, out r6_1283, out r7_1284, out r8_1285, out r9_1286, out r10_1287, out r11_1288, out ap_394, out fp_395, out sp_407)
	branch r0_396 == 0x00000000 l0001690A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001690A:
	Mem419[sp_407 - 0x00000004:word32] = Mem390[fp_395 + -28:word32]
	Mem422[sp_407 - 0x00000008:word32] = Mem419[fp_395 + -24:word32]
	Mem425[sp_407 - 0x0000000C:word32] = Mem422[fp_395 + -20:word32]
	Mem428[sp_407 - 0x00000010:word32] = Mem425[fp_395 + -16:word32]
	Mem431[sp_407 - 0x00000014:word32] = Mem428[fp_395 + -12:word32]
	Mem434[sp_407 - 0x00000018:word32] = Mem431[fp_395 + -8:word32]
	fn0001530A()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168E3:
	branch r0_396 != 0x00000001 l000168F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168E8:
	Mem516[sp_407 - 0x00000004:word32] = Mem390[fp_395 + -16:word32]
	r0_522 = fn00018BF6(r0_396, ap_394, fp_395, out r3_1292, out ap_520, out fp_521, out sp_524)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168F2:
	r0_540 = PHI((r0_396, l000168E3), (r0_522, l000168E8))
	ap_539 = PHI((ap_394, l000168E3), (ap_520, l000168E8))
	Mem533 = PHI((Mem390, l000168E3), (Mem516, l000168E8))
	fp_532 = PHI((fp_395, l000168E3), (fp_521, l000168E8))
	sp_530 = PHI((sp_407, l000168E3), (sp_524, l000168E8))
	Mem535[sp_530 - 0x00000004:word32] = Mem533[fp_532 + -12:word32]
	r0_543 = fn00018BF6(r0_540, ap_539, fp_532, out r3_1289, out ap_541, out fp_542, out sp_545)
	Mem553[sp_545 - 0x00000004:word32] = Mem535[fp_542 + -8:word32]
	fn00018BF6(r0_543, ap_541, fp_542, out r3_562, out ap_1290, out fp_558, out sp_1291)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168B0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016881:
	branch r0_186 != 0x00000001 l00016890
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016886:
	Mem586[sp_197 - 0x00000004:word32] = Mem180[fp_185 + -12:word32]
	r0_592 = fn00018BF6(r0_186, ap_184, fp_185, out r3_1268, out ap_590, out fp_591, out sp_594)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016890:
	r0_610 = PHI((r0_186, l00016881), (r0_592, l00016886))
	ap_609 = PHI((ap_184, l00016881), (ap_590, l00016886))
	Mem603 = PHI((Mem180, l00016881), (Mem586, l00016886))
	fp_602 = PHI((fp_185, l00016881), (fp_591, l00016886))
	sp_600 = PHI((sp_197, l00016881), (sp_594, l00016886))
	Mem605[sp_600 - 0x00000004:word32] = Mem603[fp_602 + -8:word32]
	fn00018BF6(r0_610, ap_609, fp_602, out r3_616, out ap_1266, out fp_612, out sp_1267)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016859:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016834:
	branch r0_110 != 0x00000001 l00016843
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016839:
	Mem640[sp_121 - 0x00000004:word32] = Mem96[fp_109 + -8:word32]
	fn00018BF6(r0_110, ap_108, fp_109, out r3_1221, out ap_1222, out fp_1223, out sp_1224)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016843:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001680E:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167F4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000169AC:
	r0_683 = fn00015256(r0_23, r1, r2, r3, r4, r5, r6, ap_30, fp, pc, out r1_684, out r2_685, out r4_687, out r5_688, out r6_689, out r7_690, out ap_680, out fp_681, out sp_691, out pc_682)
	branch r0_683 == 0x00000000 l000169C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000169C2:
	Mem703[sp_691 - 0x00000004:word32] = fp_681 + -24
	Mem706[sp_691 - 0x00000008:word32] = fp_681 + -12
	Mem709[sp_691 - 0x0000000C:word32] = r2_685 + 256
	Mem711[sp_691 - 0x00000010:word32] = r2_685
	Mem713[sp_691 - 0x00000014:word32] = 0x00000000
	Mem716[sp_691 - 0x00000018:uint32] = 0x00000040
	Mem719[sp_691 - 0x0000001C:word32] = fp_681 + -1052
	r0_725 = fn0001878E(r0_683, r4_687, r5_688, r6_689, r7_690, r8, r9, r10, r11, ap_680, fp_681, out r2_728, out r3_1219, out r4_730, out r5_731, out r6_732, out r7_1220, out r8_734, out r9_735, out r10_726, out r11_727, out ap_723, out fp_724, out sp_736)
	branch r0_725 == 0x00000000 l000169F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000169F7:
	Mem748[sp_736 - 0x00000004:uint32] = 0x00000040
	Mem751[sp_736 - 0x00000008:word32] = fp_724 + -1052
	r0_758 = fn00015256(r0_725, r1_684, r2_728, r0_725, r4_730, r5_731, r6_732, ap_723, fp_724, pc_682, out r1_1225, out r2_760, out r4_762, out r5_763, out r6_764, out r7_765, out ap_1226, out fp_756, out sp_766, out pc_1227)
	branch r0_758 == 0x00000000 l00016A0D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A0D:
	ap_776 = (uint32) Mem751[r4_762 + 0x0000C640:word16]
	branch (ap_776 & 0x00000002) == 0x00000000 l00016A70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A70:
	Mem782[sp_766 - 0x00000004:word32] = fp_756 + -28
	Mem785[sp_766 - 0x00000008:word32] = fp_756 + -16
	Mem788[sp_766 - 0x0000000C:word32] = r2_760 + 256
	Mem791[sp_766 - 0x00000010:word32] = r2_760 + 384
	Mem793[sp_766 - 0x00000014:word32] = 0x00000000
	Mem796[sp_766 - 0x00000018:uint32] = 0x00000040
	Mem799[sp_766 - 0x0000001C:word32] = fp_756 + -1052
	r0_805 = fn0001878E(r0_758, r4_762, r5_763, r6_764, r7_765, r8_734, r9_735, r10_726, r11_727, ap_776, fp_756, out r2_1234, out r3_1235, out r4_1236, out r5_1237, out r6_1238, out r7_1239, out r8_1240, out r9_1241, out r10_1242, out r11_1243, out ap_803, out fp_804, out sp_816)
	branch r0_805 == 0x00000000 l00016AB1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AB1:
	Mem828[sp_816 - 0x00000004:word32] = Mem799[fp_804 + -28:word32]
	Mem831[sp_816 - 0x00000008:word32] = Mem828[fp_804 + -24:word32]
	Mem834[sp_816 - 0x0000000C:word32] = Mem831[fp_804 + -16:word32]
	Mem837[sp_816 - 0x00000010:word32] = Mem834[fp_804 + -12:word32]
	fn000162E6()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A94:
	branch r0_805 != 0x00000001 l00016AA3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A99:
	Mem846[sp_816 - 0x00000004:word32] = Mem799[fp_804 + -16:word32]
	r0_852 = fn00018BF6(r0_805, ap_803, fp_804, out r3_1259, out ap_850, out fp_851, out sp_854)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AA3:
	r0_870 = PHI((r0_805, l00016A94), (r0_852, l00016A99))
	ap_869 = PHI((ap_803, l00016A94), (ap_850, l00016A99))
	Mem863 = PHI((Mem799, l00016A94), (Mem846, l00016A99))
	fp_862 = PHI((fp_804, l00016A94), (fp_851, l00016A99))
	sp_860 = PHI((sp_816, l00016A94), (sp_854, l00016A99))
	Mem865[sp_860 - 0x00000004:word32] = Mem863[fp_862 + -12:word32]
	fn00018BF6(r0_870, ap_869, fp_862, out r3_876, out ap_1257, out fp_872, out sp_1258)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A18:
	Mem890[sp_766 - 0x00000004:word32] = fp_756 + -28
	Mem893[sp_766 - 0x00000008:word32] = fp_756 + -16
	Mem896[sp_766 - 0x0000000C:word32] = r2_760 + 256
	Mem899[sp_766 - 0x00000010:word32] = r2_760 + 512
	Mem901[sp_766 - 0x00000014:word32] = 0x00000000
	Mem904[sp_766 - 0x00000018:uint32] = 0x00000040
	Mem907[sp_766 - 0x0000001C:word32] = fp_756 + -1052
	r0_913 = fn0001878E(r0_758, r4_762, r5_763, r6_764, r7_765, r8_734, r9_735, r10_726, r11_727, ap_776, fp_756, out r2_1244, out r3_1245, out r4_1246, out r5_1247, out r6_1248, out r7_1249, out r8_1250, out r9_1251, out r10_1252, out r11_1253, out ap_911, out fp_912, out sp_924)
	branch r0_913 == 0x00000000 l00016A59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A59:
	Mem936[sp_924 - 0x00000004:word32] = Mem907[fp_912 + -28:word32]
	Mem939[sp_924 - 0x00000008:word32] = Mem936[fp_912 + -24:word32]
	Mem942[sp_924 - 0x0000000C:word32] = Mem939[fp_912 + -16:word32]
	Mem945[sp_924 - 0x00000010:word32] = Mem942[fp_912 + -12:word32]
	fn00015E22()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A3C:
	branch r0_913 != 0x00000001 l00016A4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A41:
	Mem996[sp_924 - 0x00000004:word32] = Mem907[fp_912 + -16:word32]
	r0_1002 = fn00018BF6(r0_913, ap_911, fp_912, out r3_1256, out ap_1000, out fp_1001, out sp_1004)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A4B:
	r0_1020 = PHI((r0_913, l00016A3C), (r0_1002, l00016A41))
	ap_1019 = PHI((ap_911, l00016A3C), (ap_1000, l00016A41))
	Mem1013 = PHI((Mem907, l00016A3C), (Mem996, l00016A41))
	fp_1012 = PHI((fp_912, l00016A3C), (fp_1001, l00016A41))
	sp_1010 = PHI((sp_924, l00016A3C), (sp_1004, l00016A41))
	Mem1015[sp_1010 - 0x00000004:word32] = Mem1013[fp_1012 + -12:word32]
	fn00018BF6(r0_1020, ap_1019, fp_1012, out r3_1026, out ap_1254, out fp_1022, out sp_1255)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A09:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000169E4:
	branch r0_725 != 0x00000001 l000169F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000169E9:
	Mem1050[sp_736 - 0x00000004:word32] = Mem719[fp_724 + -12:word32]
	fn00018BF6(r0_725, ap_723, fp_724, out r3_1228, out ap_1229, out fp_1230, out sp_1231)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000169F3:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000169BE:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000167AA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000173CA(word32 r0, word32 r1, word32 r3, word32 r4, word32 r5, word32 r9, word32 r10, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000173CA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000173CA:
	Mem9[Mem0[ap + 4:word32]:word32] = 0x00000000
	Mem11[Mem9[ap + 8:word32]:word32] = 0x00000000
	Mem15[r3 + 1511:word32] = fp + -25
	word32 sp_204 = fp - 0x0000001C
	word32 r6_206 = 0x00000000
	word32 r11_208 = 0x00000000
	word32 r8_16 = 0x00000000
	branch (uint32) Mem15[r3 + 0x0000C688:word16] >u 0x00000000 l00017403
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017403:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017414:
	word32 sp_26 = sp_204 - 0x00000004
	Mem27[sp_26:word32] = 0x00000004
	Mem31[sp_26 - 0x00000004:word32] = r3 + 152
	word32 ap_41
	word32 fp_42
	word32 r2_44
	word32 r3_45
	word32 r4_46
	word32 r5_47
	word32 r6_48
	word32 r7_49
	word32 sp_50
	word32 r0_43 = fn0000D5BE(r0, r3, r4, r5, r6_206, ap, fp, out r2_44, out r3_45, out r4_46, out r5_47, out r6_48, out r7_49, out ap_41, out fp_42, out sp_50)
	branch r0_43 != 0x00000000 l00017429
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017429:
	Mem60[sp_50 - 0x00000004:word32] = 0x00000004
	Mem63[sp_50 - 0x00000008:word32] = r3_45 + 0x0000C634
	Mem66[sp_50 - 0x0000000C:word32] = r3_45 + 152
	word32 sp_70
	word32 r6_71
	word32 r11_73
	word32 ap_74
	word32 fp_75
	word32 r3_76
	word32 r8_78
	word32 r2_79
	word32 r0_80
	word32 r7_81
	word32 r10_83
	word32 r9_85
	word32 r5_86
	word32 r4_87
	call Mem66[0x000192D8:word32] + 2 (retsize: 4;)
		uses: ap:ap_41,fp:fp_42,r0:r0_43,r1:r1_93,r10:r10_82,r11:r11_72,r2:r2_44,r3:r3_45,r4:r4_46,r5:r5_47,r6:r6_48,r7:r7_49,r8:r8_77,r9:r9_84,sp:sp_50 - 0x0000000C
		defs: ap:ap_74,fp:fp_75,r0:r0_80,r10:r10_83,r11:r11_73,r2:r2_79,r3:r3_76,r4:r4_87,r5:r5_86,r6:r6_71,r7:r7_81,r8:r8_78,r9:r9_85,sp:sp_70
	branch r0_80 == 0x00000000 l0001748E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001748E:
	word32 ap_94
	word32 fp_95
	word32 r1_97
	word32 r2_98
	word32 r3_99
	word32 r4_100
	word32 r5_101
	word32 r6_102
	word32 r7_103
	word32 sp_104
	word32 r0_96 = fn00011C0A(r0_80, r1, r3_76, r4_87, r5_86, r6_71, ap_74, fp_75, out r1_97, out r2_98, out r3_99, out r4_100, out r5_101, out r6_102, out r7_103, out ap_94, out fp_95, out sp_104)
	branch r0_96 == 0x00000000 l0001749A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001749A:
	Mem114[sp_104 - 0x00000004:word32] = 0x00000002
	Mem117[sp_104 - 0x00000008:uint32] = (uint32) Mem114[r3_99 + 0x0000C670:word16]
	word32 sp_121
	word32 r3_126
	word32 r9_132
	word32 r6_122
	word32 r11_123
	word32 ap_124
	word32 fp_125
	word32 r8_127
	word32 r2_128
	word32 r0_129
	word32 r7_130
	word32 r10_131
	word32 r5_133
	word32 r4_134
	word32 r1_135
	call r9_85 + 2 (retsize: 4;)
		uses: ap:ap_94,fp:fp_95,r0:r0_96,r1:r1_97,r10:r10_83,r11:r11_73,r2:r2_98,r3:r3_99,r4:r4_100,r5:r5_101,r6:r6_102,r7:r7_103,r8:r8_78,r9:r9_85,sp:sp_104 - 0x00000008
		defs: ap:ap_124,fp:fp_125,r0:r0_129,r1:r1_135,r10:r10_131,r11:r11_123,r2:r2_128,r3:r3_126,r4:r4_134,r5:r5_133,r6:r6_122,r7:r7_130,r8:r8_127,r9:r9_132,sp:sp_121
	branch r0_129 == 0x00000000 l000174B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000174AA:
	r11_123 = r0_129
	branch r0_129 <= 0x00000001 l000174B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000174B3:
	branch Mem117[r3_126 + 0x0000C627:word32] == 0x00000000 l000174CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000174BB:
	Mem154[sp_121 - 0x00000004:word32] = Mem117[r3_126 + 0x0000C627:word32]
	call Mem154[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_124,fp:fp_125,r0:r0_129,r1:r1_135,r10:r10_131,r11:r11_161,r2:r2_128,r3:r3_126,r4:r4_134,r5:r5_133,r6:r6_122,r7:r7_130,r8:r8_127,r9:r9_132,sp:sp_121 - 0x00000004
		defs: ap:ap_164,fp:fp_166,r0:r0_173,r1:r1_185,r10:r10_177,r11:r11_162,r2:r2_171,r3:r3_167,r4:r4_183,r5:r5_181,r6:r6_160,r7:r7_175,r8:r8_169,r9:r9_179,sp:sp_158
	Mem188[r3_126 + 0x0000C627:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000174CE:
	word32 sp_194 = sp_121 - 0x00000004
	Mem195[sp_194:word32] = 0x00000003
	Mem199[sp_194 - 0x00000004:uint32] = (uint32) Mem195[r3_126 + 0x0000C672:word16]
	word32 r2_217
	word32 r7_221
	word32 r8_215
	call r9_132 + 2 (retsize: 4;)
		uses: ap:ap_209,fp:fp_211,r0:r0_218,r1:r1_229,r10:r10_222,r11:r11_207,r2:r2_216,r3:r3_197,r4:r4_227,r5:r5_225,r6:r6_205,r7:r7_220,r8:r8_214,r9:r9_203,sp:sp_194 - 0x00000004
		defs: ap:ap_210,fp:fp_212,r0:r0_219,r1:r1_230,r10:r10_223,r11:r11_208,r2:r2_217,r3:r3_213,r4:r4_228,r5:r5_226,r6:r6_206,r7:r7_221,r8:r8_215,r9:r9_224,sp:sp_204
	branch r0 == 0x00000000 l000174E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000174DE:
	r11_208 = r0
	branch r0 <= 0x00000001 l000174E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000174E7:
	branch Mem199[r3 + 108:word32] != 0x00000000 l0001754B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000174EC:
	r0 = Mem199[r3 + 144:word32] - 0x00000004
	r6_206 = 0x00000000
	r2_217 = r0 + 0x00000004
	branch Mem199[r0 + 0x00000004:word32] == 0x00000000 l0001751B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000174FC:
	word32 sp_254 = sp_204 - 0x00000004
	Mem258[sp_254:word32] = Mem256[r3 + 16:word32]
	Mem262[sp_254 - 0x00000004:word32] = Mem258[r2_217:word32]
	Mem265[sp_254 - 0x00000008:word32] = r3 + 0x0000C701
	call r5 + 2 (retsize: 4;)
		uses: ap:ap_275,fp:fp_277,r0:r0_283,r1:r1_294,r10:r10_287,r11:r11_273,r2:r2_260,r3:r3_255,r4:r4_292,r5:r5_269,r6:r6_271,r7:r7_285,r8:r8_280,r9:r9_289,sp:sp_254 - 0x00000008
		defs: ap:ap_276,fp:fp_278,r0:r0_284,r1:r1_295,r10:r10_288,r11:r11_274,r2:r2_282,r3:r3_279,r4:r4_293,r5:r5_291,r6:r6_272,r7:r7_286,r8:r8_281,r9:r9_290,sp:sp_270
	branch r0 == 0x00000000 l00017514
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017514:
	r2_217 = r2_217 + 0x00000004
	branch Mem265[r2_217 + 0x00000004:word32] != 0x00000000 l000174FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001750E:
	r6_206 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001751B:
	branch r6_206 == 0x00000000 l0001754B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001751F:
	word32 r2_317 = Mem316[r3 + 148:word32] - 0x00000004
	r2_217 = r2_317 + 0x00000004
	branch Mem316[r2_317 + 0x00000004:word32] == 0x00000000 l0001754B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001752C:
	word32 sp_324 = sp_204 - 0x00000004
	Mem328[sp_324:word32] = Mem326[r3 + 16:word32]
	Mem332[sp_324 - 0x00000004:word32] = Mem328[r2_217:word32]
	Mem335[sp_324 - 0x00000008:word32] = r3 + 0x0000C701
	call r5 + 2 (retsize: 4;)
		uses: ap:ap_345,fp:fp_347,r0:r0_353,r1:r1_364,r10:r10_357,r11:r11_343,r2:r2_330,r3:r3_325,r4:r4_362,r5:r5_339,r6:r6_341,r7:r7_355,r8:r8_350,r9:r9_359,sp:sp_324 - 0x00000008
		defs: ap:ap_346,fp:fp_348,r0:r0_354,r1:r1_365,r10:r10_358,r11:r11_344,r2:r2_352,r3:r3_349,r4:r4_363,r5:r5_361,r6:r6_342,r7:r7_356,r8:r8_351,r9:r9_360,sp:sp_340
	branch r0 == 0x00000000 l00017544
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017544:
	r2_217 = r2_217 + 0x00000004
	branch Mem335[r2_217 + 0x00000004:word32] != 0x00000000 l0001752C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001753E:
	r6_206 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001754B:
	branch Mem382[r3 + 108:word32] != 0x00000000 l00017554
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017550:
	branch r6_206 == 0x00000000 l000175C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017554:
	word32 sp_397 = sp_204 - 0x00000004
	Mem400[sp_397:word32] = r3 + 0x0000C701
	word32 r2_432
	word32 r4_462
	call Mem400[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap_413,fp:fp_418,r0:r0_434,r1:r1_464,r10:r10_444,r11:r11_408,r2:r2_429,r3:r3_381,r4:r4_459,r5:r5_454,r6:r6_387,r7:r7_439,r8:r8_424,r9:r9_449,sp:sp_397
		defs: ap:ap_416,fp:fp_421,r0:r0_437,r1:r1_467,r10:r10_447,r11:r11_411,r2:r2_432,r3:r3_422,r4:r4_462,r5:r5_457,r6:r6_406,r7:r7_442,r8:r8_427,r9:r9_452,sp:sp_404
	r4 = DPB(r4_462, 0x00, 0)
	branch r0 == 0x00000000 l0001759B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017567:
	byte v48_476 = Mem400[r3 + 0x0000C701 + (r0 - 0x00000001):byte]
	r0 = r0 - 0x00000001
	word32 r2_477 = DPB(r2_432, v48_476, 0)
	branch v48_476 == 0x2F l00017599
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017576:
	r0 = Mem400[r3 + 1511:word32]
	branch Mem400[r0 + 12:word32] != 0x00000000 l0001759B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017580:
	Mem487[sp_204 - 0x00000004:word32] = 0x0000002F
	Mem490[sp_204 - 0x00000008:word32] = r3 + 0x0000C701
	word32 r2_501
	call Mem490[0x00019260:word32] + 2 (retsize: 4;)
		uses: ap:ap_416,fp:fp_421,r0:r0_481,r1:r1_467,r10:r10_447,r11:r11_411,r2:r2_477,r3:r3_422,r4:r4_470,r5:r5_457,r6:r6_406,r7:r7_442,r8:r8_427,r9:r9_452,sp:sp_404 - 0x00000008
		defs: ap:ap_497,fp:fp_498,r0:r0_502,r1:r1_508,r10:r10_504,r11:r11_496,r2:r2_501,r3:r3_499,r4:r4_507,r5:r5_506,r6:r6_495,r7:r7_503,r8:r8_500,r9:r9_505,sp:sp_494
	branch r0 != 0x00000000 l0001759B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017593:
	branch (byte) r2_501 != 0x5C l0001759B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017599:
	r4 = DPB(r4, (byte) r4 + 0x01, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001759B:
	r2_217 = (int32) (int8) r4
	branch r2_217 != 0x00000000 l000175C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000175A0:
	word32 sp_528 = sp_204 - 0x00000004
	Mem534[sp_528:uint32] = (uint32) Mem531[r3 + 0x0000C660:word16]
	Mem537[sp_528 - 0x00000004:uint32] = (uint32) Mem534[r3 + 0x0000C662:word16]
	r0 = fn0000BC8A(r0, r1, r2_217, r4, r5, ap, fp, out r1, out r3, out r4, out r5, out r6_206, out r7_221, out r8_215, out r9, out ap, out fp, out sp_204)
	r2_217 = Mem537[ap + 4:word32]
	branch Mem537[r2_217:word32] >=u r0 l000175C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000175BE:
	Mem573[r2_217:word32] = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000175C1:
	Mem580[Mem578[ap + 8:word32]:word32] = Mem578[ap + 8:word32] + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000175C4:
	branch Mem584[r3 + 0x0000C674:word16] == 0x0000 l000175E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000175CC:
	word32 sp_591 = sp_204 - 0x00000004
	Mem592[sp_591:word32] = 0x00000000
	Mem595[sp_591 - 0x00000004:uint32] = (uint32) Mem592[r3 + 0x0000C674:word16]
	call r9 + 2 (retsize: 4;)
		uses: ap:ap_614,fp:fp_616,r0:r0_628,r1:r1_648,r10:r10_636,r11:r11_609,r2:r2_625,r3:r3_582,r4:r4_645,r5:r5_642,r6:r6_604,r7:r7_631,r8:r8_620,r9:r9_599,sp:sp_591 - 0x00000004
		defs: ap:ap_615,fp:fp_618,r0:r0_630,r1:r1_650,r10:r10_640,r11:r11_613,r3:r3_619,r4:r4_647,r5:r5_644,r6:r6_608,r8:r8_624,r9:r9_641,sp:sp_603
	branch r0 == 0x00000000 l000175E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000175DC:
	r11_208 = r0
	branch r0 <= 0x00000001 l000175E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000175E5:
	r8_16 = r8_215 + 0x00000001
	branch r8_16 >=u (uint32) Mem663[r3 + 0x0000C688:word16] l000175F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000175F3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000175E4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000174E6:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000174B2:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017499:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017440:
	Mem682[sp_70 - 0x00000004:uint32] = 0x00000401
	Mem684[sp_70 - 0x00000008:word32] = r8_78
	Mem686[sp_70 - 0x0000000C:word32] = r7_81
	Mem689[sp_70 - 0x00000010:word32] = r3_76 + 1515
	word32 sp_693
	word32 r6_694
	word32 r11_695
	word32 ap_696
	word32 fp_697
	word32 r3_698
	word32 r8_699
	word32 r0_701
	word32 r7_702
	word32 r10_703
	word32 r9_704
	word32 r5_705
	word32 r4_706
	word32 r1_707
	call Mem689[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_74,fp:fp_75,r0:r0_80,r1:r1_93,r10:r10_83,r11:r11_73,r2:r2_79,r3:r3_76,r4:r4_87,r5:r5_86,r6:r6_71,r7:r7_81,r8:r8_78,r9:r9_85,sp:sp_70 - 0x00000010
		defs: ap:ap_696,fp:fp_697,r0:r0_701,r1:r1_707,r10:r10_703,r11:r11_695,r3:r3_698,r4:r4_706,r5:r5_705,r6:r6_694,r7:r7_702,r8:r8_699,r9:r9_704,sp:sp_693
	Mem710[sp_693 - 0x00000004:word32] = r0_701
	Mem713[sp_693 - 0x00000008:word32] = r3_698 + 1515
	Mem715[sp_693 - 0x0000000C:word32] = r3_698
	word32 r2_716 = Mem715[r3_698 + 0x0000C839:word32]
	word32 sp_720
	word32 r6_721
	word32 r11_722
	word32 ap_723
	word32 fp_724
	word32 r3_725
	word32 r8_726
	word32 r2_727
	word32 r0_728
	word32 r7_729
	word32 r10_730
	word32 r9_731
	word32 r5_732
	word32 r4_733
	word32 r1_734
	call r2_716 + 2 (retsize: 4;)
		uses: ap:ap_696,fp:fp_697,r0:r0_701,r1:r1_707,r10:r10_703,r11:r11_695,r2:r2_716,r3:r3_698,r4:r4_706,r5:r5_705,r6:r6_694,r7:r7_702,r8:r8_699,r9:r9_704,sp:sp_693 - 0x0000000C
		defs: ap:ap_723,fp:fp_724,r0:r0_728,r1:r1_734,r10:r10_730,r11:r11_722,r2:r2_727,r3:r3_725,r4:r4_733,r5:r5_732,r6:r6_721,r7:r7_729,r8:r8_726,r9:r9_731,sp:sp_720
	Mem738[sp_720 - 0x00000004:uint32] = 0x00000401
	Mem740[sp_720 - 0x00000008:word32] = r10_730
	Mem743[sp_720 - 0x0000000C:word32] = r3_725 + 1515
	word32 sp_747
	word32 r6_748
	word32 r11_749
	word32 ap_750
	word32 fp_751
	word32 r3_752
	word32 r8_753
	word32 r0_755
	word32 r7_756
	word32 r10_757
	word32 r9_758
	word32 r5_759
	word32 r4_760
	word32 r1_761
	call Mem743[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_723,fp:fp_724,r0:r0_728,r1:r1_734,r10:r10_730,r11:r11_722,r2:r2_727,r3:r3_725,r4:r4_733,r5:r5_732,r6:r6_721,r7:r7_729,r8:r8_726,r9:r9_731,sp:sp_720 - 0x0000000C
		defs: ap:ap_750,fp:fp_751,r0:r0_755,r1:r1_761,r10:r10_757,r11:r11_749,r3:r3_752,r4:r4_760,r5:r5_759,r6:r6_748,r7:r7_756,r8:r8_753,r9:r9_758,sp:sp_747
	Mem764[sp_747 - 0x00000004:word32] = r0_755
	Mem767[sp_747 - 0x00000008:word32] = r3_752 + 1515
	Mem769[sp_747 - 0x0000000C:word32] = r3_752
	word32 r2_770 = Mem769[r3_752 + 0x0000C839:word32]
	call r2_770 + 2 (retsize: 4;)
		uses: ap:ap_750,fp:fp_751,r0:r0_755,r1:r1_761,r10:r10_757,r11:r11_749,r2:r2_770,r3:r3_752,r4:r4_760,r5:r5_759,r6:r6_748,r7:r7_756,r8:r8_753,r9:r9_758,sp:sp_747 - 0x0000000C
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017425:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017400:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000175F6:
	word32 sp_806 = sp_204 - 0x00000004
	Mem807[sp_806:word32] = 0x00000004
	Mem811[sp_806 - 0x00000004:word32] = r3 + 152
	word32 ap_829
	word32 fp_830
	word32 r2_832
	word32 r3_833
	word32 r4_834
	word32 r5_835
	word32 r6_836
	word32 r7_837
	word32 sp_838
	word32 r0_831 = fn0000D5BE(r0, r3, r4, r5, r6_206, ap, fp, out r2_832, out r3_833, out r4_834, out r5_835, out r6_836, out r7_837, out ap_829, out fp_830, out sp_838)
	branch r0_831 != 0x00000000 l0001760B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001760B:
	Mem848[sp_838 - 0x00000004:word32] = 0x00000004
	Mem851[sp_838 - 0x00000008:word32] = r3_833 + 0x0000C639
	Mem854[sp_838 - 0x0000000C:word32] = r3_833 + 152
	word32 sp_858
	word32 r11_862
	word32 ap_863
	word32 r0_869
	call Mem854[0x000192D8:word32] + 2 (retsize: 4;)
		uses: ap:ap_829,fp:fp_830,r0:r0_831,r1:r1_881,r10:r10_871,r11:r11_860,r2:r2_832,r3:r3_833,r4:r4_834,r5:r5_835,r6:r6_836,r7:r7_837,r8:r8_866,r9:r9_875,sp:sp_838 - 0x0000000C
		defs: ap:ap_863,r0:r0_869,r11:r11_862,sp:sp_858
	branch r0_869 == 0x00000000 l0001764D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001764D:
	branch Mem854[Mem854[ap_863 + 8:word32]:word32] != 0x00000000 l0001765A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017652:
	branch r11_862 > 0x00000001 l0001765A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017657:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001765A:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017622:
	Mem913[sp_858 - 0x00000004:uint32] = 0x00000401
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017607:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000173CA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00017662(word32 ap, word32 fp, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31]
// LiveOut: r0 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn00017662_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017662:
	branch Mem0[ap + 4:word32] != 0x00000000 l0001766D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001766D:
	word32 r4_10 = Mem0[ap + 4:word32]
	branch r4_10 >u 0x001E8480 l0001767D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001767D:
	word32 r1_14 = 0x00000000
	branch true l00017694
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017694:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001768B:
	branch r4_10 <u 0x000003E8 l00017699
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017690:
	r1_14 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017699:
	word32 r5_51
	word32 r3_30 = Mem0[ap + 8:word32]
	branch r4_10 <u r3_30 l000176D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176D0:
	word32 r3_37 = r3_30 - r4_10 + (uint32) SLICE(r1_14, ui31, 1)
	word32 r1_38 = 0x00000000
	branch r1_14 >= 0x00000000 l000176F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176F0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176E5:
	branch r1_14 >u r3_37 l000176F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176EA:
	r1_38 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176F5:
	r5_51 = -r1_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176A5:
	word32 r2_55 = r4_10 - r3_30 + (uint32) SLICE(r1_14, ui31, 1)
	word32 r1_56 = 0x00000000
	branch r1_14 >= 0x00000000 l000176C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176C4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176BB:
	branch r1_14 >u r2_55 l000176C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176C0:
	r1_56 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176C9:
	r5_51 = r1_56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176F8:
	spOut = <invalid>
	return r5_51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001767A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176FC:
	word32 r5_111
	word32 r3_90 = Mem0[ap + 8:word32]
	branch r4_10 <u r3_90 l0001773C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001773C:
	word32 r3_97 = (r3_90 - r4_10) * 0x000003E8 + (uint32) SLICE(r4_10, ui31, 1)
	word32 r1_108 = 0x00000000
	branch r4_10 >= 0x00000000 l00017764
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017764:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017758:
	branch r4_10 >u r3_97 l00017769
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001775D:
	r1_108 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017769:
	r5_111 = -r1_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017708:
	word32 r2_116 = (r4_10 - r3_90) * 0x000003E8 + (uint32) SLICE(r4_10, ui31, 1)
	word32 r1_117 = 0x00000000
	branch r4_10 >= 0x00000000 l00017730
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017730:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017725:
	branch r4_10 >u r2_116 l00017735
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001772A:
	r1_117 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017735:
	r5_111 = r1_117
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001776C:
	spOut = <invalid>
	return r5_111
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001766A:
	spOut = <invalid>
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00017662_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00017772(word32 r2, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r2:[0..31]
// LiveOut: ap fp r0 r2 r3 sp
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn00017772_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017772:
	word32 fp_17
	word32 r2_19
	word32 r3_20
	word32 sp_21
	word32 r0_18 = fn00010892(ap, fp, out r2_19, out r3_20, out ap_92, out fp_17, out sp_21)
	Mem28[sp_21 - 0x00000004:word32] = 0x00000000
	Mem30[sp_21 - 0x00000008:word32] = r0_18
	word32 sp_34
	word32 r2_35
	word32 r0_36
	word32 ap_37
	word32 r3_38
	word32 fp_39
	call Mem30[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:r0_18,fp:fp_17,r0:r0_18,r2:r2_19,r3:r3_20,sp:sp_21 - 0x00000008,Stack +FFFFFFF8:r2 + 0x0000C701,Stack +FFFFFFFC:r2 + 1515
		defs: ap:ap_37,fp:fp_39,r0:r0_36,r2:r2_35,r3:r3_38,sp:sp_34
	Mem42[sp_34 - 0x00000004:word32] = r0_36
	Mem44[sp_34 - 0x00000008:word32] = ap_37
	Mem46[sp_34 - 0x0000000C:word32] = r2_35
	word32 ap_47 = Mem46[r2_35 + 0x0000C839:word32]
	word32 sp_51
	word32 r2_52
	word32 r0_53
	word32 r3_55
	word32 fp_56
	call ap_47 + 2 (retsize: 4;)
		uses: ap:ap_47,fp:fp_39,r0:r0_36,r2:r2_35,r3:r3_38,sp:sp_34 - 0x0000000C,Stack +FFFFFFF8:r2 + 0x0000C701,Stack +FFFFFFFC:r2 + 1515
		defs: fp:fp_56,r0:r0_53,r2:r2_52,r3:r3_55,sp:sp_51
	Mem59[sp_51 - 0x00000004:word32] = 0x00000000
	Mem61[sp_51 - 0x00000008:word32] = 0x00000001
	Mem64[sp_51 - 0x0000000C:word32] = r3_55 + 18
	Mem66[sp_51 - 0x00000010:word32] = r2_52
	word32 ap_67 = Mem66[r2_52 + 0x0000C839:word32]
	word32 r2_72
	word32 r0_73
	word32 r3_75
	word32 fp_76
	call ap_67 + 2 (retsize: 4;)
		uses: ap:ap_67,fp:fp_56,r0:r0_53,r2:r2_52,r3:r3_55,sp:sp_51 - 0x00000010,Stack +FFFFFFF8:r2 + 0x0000C701,Stack +FFFFFFFC:r2 + 1515
		defs: fp:fp_76,r0:r0_73,r2:r2_72,r3:r3_75
	word32 fp_79 = Mem66[fp_76 + 0x0000000C:word32]
	word32 ap_80 = Mem66[fp_76 + 0x00000008:word32]
	r2Out = r2_72
	r3Out = r3_75
	apOut = ap_80
	fpOut = fp_79
	spOut = fp_76 - 0x00000004
	return r0_73
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00017772_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000177CA()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn000177CA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000177CA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000177CA:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00017C2E()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn00017C2E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00017C2E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017C2E:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00017DEE(word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r10:[0..31] r11:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: CVZN ap fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
l00017F44:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017F46:
	word32 fp_367 = Mem0[fp + 0x0000000C:word32]
	r2Out = r2 + 0x00000001
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	fpOut = fp_367
	return r2 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00017DEE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017DEE:
	word32 sp_264 = fp + -1160
	branch Mem0[r3 + 0x0000C81D:word32] == 0x00000000 l00017E0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E0C:
	word32 r0_10 = 0x00000000
	word32 r2_12 = fp + -1156
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E14:
	Mem18[r2_12:word32] = 0x00000008
	r2_12 = r2_12 + 0x00000004
	r0_10 = r0_10 + 0x00000001
	branch r0_10 <= 0x0000008F l00017E14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E22:
	branch r0_10 >= 0x00000100 l00017E3D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E2B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E2C:
	Mem28[fp + -1156:word32] = 0x00000009
	r0_10 = r0_10 + 0x00000001
	branch r0_10 < 0x00000100 l00017E2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E3D:
	branch r0_10 >= 0x00000118 l00017E59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E46:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E48:
	Mem43[fp + -1156:word32] = 0x00000007
	r0_10 = r0_10 + 0x00000001
	branch r0_10 < 0x00000118 l00017E48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E59:
	branch r0_10 >= 0x00000120 l00017E75
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E62:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E64:
	Mem58[fp + -1156:word32] = 0x00000008
	r0_10 = r0_10 + 0x00000001
	branch r0_10 < 0x00000120 l00017E64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E75:
	Mem72[r3 + 0x0000C825:word32] = 0x00000007
	word32 ap_181
	word32 fp_182
	word32 r10_184
	word32 r11_185
	word32 r2_186
	word32 r3_187
	word32 r4_188
	word32 r5_189
	word32 r6_190
	word32 r7_191
	word32 r8_192
	word32 r9_193
	word32 sp_194
	word32 r0_183 = fn0001878E(r0_10, r4, r5, r6, r7, r8, r9, r10, r11, ap, fp, out r2_186, out r3_187, out r4_188, out r5_189, out r6_190, out r7_191, out r8_192, out r9_193, out r10_184, out r11_185, out ap_181, out fp_182, out sp_194)
	branch r0_183 == 0x00000000 l00017EAF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017EAF:
	word32 r0_203 = 0x00000000
	word32 r2_204 = fp_182 + 0xFFFFFB7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017EB8:
	Mem210[r2_204:word32] = 0x00000005
	r2_204 = r2_204 + 0x00000004
	r0_203 = r0_203 + 0x00000001
	branch r0_203 <= 0x0000001D l00017EB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017EC2:
	Mem217[r3_187 + 0x0000C829:word32] = 0x00000005
	Mem221[sp_194 - 0x00000004:word32] = r3_187 + 0x0000C829
	Mem224[sp_194 - 0x00000008:word32] = r3_187 + 0x0000C821
	Mem228[sp_194 - 0x0000000C:word32] = r5_189 + 260
	Mem231[sp_194 - 0x00000010:word32] = r5_189 + 200
	Mem233[sp_194 - 0x00000014:word32] = 0x00000000
	Mem235[sp_194 - 0x00000018:word32] = 0x0000001E
	Mem239[sp_194 - 0x0000001C:word32] = fp_182 + -1156
	word32 r2_256
	word32 r5_259
	word32 r11_255
	word32 r10_254
	word32 r9_263
	word32 r8_262
	word32 r7_261
	word32 fp_252
	word32 r0_253 = fn0001878E(r0_203, r4_188, r5_189, r6_190, r7_191, r8_192, r9_193, r10_184, r11_185, ap_181, fp_182, out r2_256, out r3, out r4_431, out r5_259, out r6_432, out r7_261, out r8_262, out r9_263, out r10_254, out r11_255, out ap_433, out fp_252, out sp_264)
	word32 r6_269 = r0_253
	branch r0_253 <= 0x00000001 l00017F1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017EF4:
	word32 r4_273 = Mem239[r3 + 0x0000C81D:word32]
	word32 ap_274 = r4_273
	branch r4_273 == 0x00000000 l00017F15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017F00:
	word32 ap_280 = ap_274 - 0x00000006
	word32 r2_282 = Mem281[ap_280 + 2:word32]
	word32 sp_284 = sp_264 - 0x00000004
	Mem285[sp_284:word32] = ap_280
	call Mem285[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_280,fp:fp_294,r0:r0_292,r10:r10_306,r11:r11_304,r2:r2_282,r3:r3_290,r4:r4_302,r5:r5_297,r6:r6_300,r7:r7_312,r8:r8_310,r9:r9_308,sp:sp_284,Stack +FFFFFB60:fp + -1156,Stack +FFFFFB64:0x00000120,Stack +FFFFFB68:0x00000101,Stack +FFFFFB6C:r5 + 76,Stack +FFFFFB70:r5 + 138,Stack +FFFFFB74:r3 + 0x0000C81D,Stack +FFFFFB78:r3 + 0x0000C825
		defs: fp:fp_295,r0:r0_293,r10:r10_307,r11:r11_305,r2:r2_296,r3:r3_291,r4:r4_303,r5:r5_298,r6:r6_301,r7:r7_313,r8:r8_311,r9:r9_309,sp:sp_289
	ap_274 = r2_256
	branch r2_256 != 0x00000000 l00017F00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017F15:
	Mem322[r3 + 0x0000C81D:word32] = 0x00000000
	word32 fp_330 = Mem322[fp_252 + 0x0000000C:word32]
	r2Out = r2_256
	r3Out = r3
	r4Out = r4_273
	r5Out = r5_259
	r6Out = r6_269
	r7Out = r7_261
	r8Out = r8_262
	r9Out = r9_263
	r10Out = r10_254
	r11Out = r11_255
	fpOut = fp_330
	return r6_269
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017EA8:
	Mem333[r3_187 + 0x0000C81D:word32] = 0x00000000
	word32 fp_339 = Mem333[fp_182 + 0x0000000C:word32]
	r2Out = r2_186
	r3Out = r3_187
	r4Out = r4_188
	r5Out = r5_189
	r6Out = r6_190
	r7Out = r7_191
	r8Out = r8_192
	r9Out = r9_193
	r10Out = r10_184
	r11Out = r11_185
	fpOut = fp_339
	return r0_183
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00017DEE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E09:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017F1F:
	word32 sp_342 = sp_264 - 0x00000004
	Mem346[sp_342:word32] = Mem344[r3 + 0x0000C829:word32]
	Mem349[sp_342 - 0x00000004:word32] = Mem346[r3 + 0x0000C825:word32]
	Mem352[sp_342 - 0x00000008:word32] = Mem349[r3 + 0x0000C821:word32]
	Mem355[sp_342 - 0x0000000C:word32] = Mem352[r3 + 0x0000C81D:word32]
	fn000177CA()
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00017F4E(word32 r0, word32 r1, word32 r4, word32 r5, word32 r6, word32 r9, word32 r10, word32 r11, word32 ap, word32 fp, word32 pc, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & fpOut, ptr32 & pcOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r9:[0..31]
// LiveOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: CVZN ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00017F4E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017F4E:
	word32 sp_103 = fp + -1344
	word32 r3_22 = Mem0[r5 + 0x0000C831:word32]
	word32 r2_21 = Mem0[r5 + 0x0000C835:word32]
	branch r2_21 >=u 0x00000005 l00017FB9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017F74:
	word32 v10_13 = Mem12[r5 + 0x0000C5FB:word32] - 0x00000001
	Mem14[r5 + 0x0000C5FB:word32] = v10_13
	branch v10_13 < 0x00000000 l00017F90
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017F90:
	r0 = fn0000D69A(r0, r1, r2_21, r3_22, r4, r5, r6, ap, fp, pc, out r1, out r2_21, out r3_22, out r4_740, out r5, out r6_741, out ap, out fp, out sp_103, out pc)
	r6 = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017F7C:
	word32 r4_45 = Mem14[r5 + 0x0000C5F7:word32]
	Mem47[r5 + 0x0000C5F7:word32] = Mem14[r5 + 0x0000C5F7:word32] + 0x00000001
	r6 = (uint32) Mem47[r4_45:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017F9A:
	branch r6 != 0xFFFFFFFF l00017FAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017FAA:
	r4 = __ashift(r6, r2_21)
	r3_22 = r3_22 | r4
	r2_21 = r2_21 + 0x00000008
	branch r2_21 <u 0x00000005 l00017F74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017FB9:
	word32 r4_125 = r3_22 & ~0xFFFFFFE0
	Mem71[sp_103 + 32:word32] = r4_125 + 0x00000101
	word32 r3_126 = (uint32) SLICE(r3_22, ui27, 5)
	word32 r2_124 = r2_21 - 0x00000005
	branch r2_124 >=u 0x00000005 l0001801D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017FD7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017FD8:
	word32 v17_80 = Mem79[r5 + 0x0000C5FB:word32] - 0x00000001
	Mem81[r5 + 0x0000C5FB:word32] = v17_80
	branch v17_80 < 0x00000000 l00017FF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017FF4:
	r0 = fn0000D69A(r0, r1, r2_124, r3_126, r4_125, r5, r6, ap, fp, pc, out r1, out r2_124, out r3_126, out r4_742, out r5, out r6_743, out ap, out fp, out sp_103, out pc)
	r6 = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017FE0:
	word32 r4_112 = Mem81[r5 + 0x0000C5F7:word32]
	Mem114[r5 + 0x0000C5F7:word32] = Mem81[r5 + 0x0000C5F7:word32] + 0x00000001
	r6 = (uint32) Mem114[r4_112:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017FFE:
	branch r6 != 0xFFFFFFFF l0001800E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001800E:
	r4_125 = __ashift(r6, r2_124)
	r3_126 = r3_126 | r4_125
	r2_124 = r2_124 + 0x00000008
	branch r2_124 <u 0x00000005 l00017FD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001801D:
	word32 r4_133 = r3_126 & ~0xFFFFFFE0
	Mem138[sp_103 + 28:word32] = r4_133 + 0x00000001
	word32 r3_139 = (uint32) SLICE(r3_126, ui27, 5)
	word32 r2_141 = r2_124 - 0x00000005
	branch r2_141 >=u 0x00000004 l0001807D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018037:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018038:
	word32 v25_147 = Mem146[r5 + 0x0000C5FB:word32] - 0x00000001
	Mem148[r5 + 0x0000C5FB:word32] = v25_147
	branch v25_147 < 0x00000000 l00018054
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018054:
	r0 = fn0000D69A(r0, r1, r2_141, r3_139, r4_133, r5, r6, ap, fp, pc, out r1, out r2_141, out r3_139, out r4_744, out r5, out r6_745, out ap, out fp, out sp_103, out pc)
	r6 = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018040:
	word32 r4_179 = Mem148[r5 + 0x0000C5F7:word32]
	Mem181[r5 + 0x0000C5F7:word32] = Mem148[r5 + 0x0000C5F7:word32] + 0x00000001
	r6 = (uint32) Mem181[r4_179:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001805E:
	branch r6 != 0xFFFFFFFF l0001806E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001806E:
	r4_133 = __ashift(r6, r2_141)
	r3_139 = r3_139 | r4_133
	r2_141 = r2_141 + 0x00000008
	branch r2_141 <u 0x00000004 l00018038
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001807D:
	word32 r8_200 = r3_139 & ~0xFFFFFFF0
	word32 r8_201 = r8_200 + 0x00000004
	word32 r3_202 = (uint32) SLICE(r3_139, ui28, 4)
	word32 r2_204 = r2_141 - 0x00000004
	branch Mem208[sp_103 + 32:word32] >u 0x00000120 l000180A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001809A:
	branch Mem208[sp_103 + 28:word32] <=u 0x00000020 l000180A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180A4:
	word32 r7_216 = 0x00000000
	branch r8_200 == 0x00000004 l0001811B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180AA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180B4:
	branch r2_204 >=u 0x00000003 l000180FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180B9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180BC:
	word32 v30_241 = Mem240[r5 + 0x0000C5FB:word32] - 0x00000001
	Mem242[r5 + 0x0000C5FB:word32] = v30_241
	branch v30_241 < 0x00000000 l000180D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180D8:
	call r6 + 2 (retsize: 4;)
		uses: ap:ap_260,fp:fp_258,pc:pc_270,r0:r0_256,r1:r1_272,r10:r10_268,r11:r11_266,r2:r2_251,r3:r3_249,r4:r4_253,r5:r5_239,r6:r6_245,r7:r7_264,r8:r8_262,r9:r9,sp:sp_246
		defs: fp:fp_259,pc:pc_271,r0:r0_257,r1:r1_273,r10:r10_269,r11:r11_267,r2:r2_252,r3:r3_250,r5:r5_248,r6:r6_255,r7:r7_265,r8:r8_263,sp:sp_247
	r4_133 = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180C4:
	word32 ap_279 = Mem242[r5 + 0x0000C5F7:word32]
	Mem281[r5 + 0x0000C5F7:word32] = Mem242[r5 + 0x0000C5F7:word32] + 0x00000001
	r4_133 = (uint32) Mem281[ap_279:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180DE:
	branch r4_133 != 0xFFFFFFFF l000180EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180EE:
	ap = __ashift(r4_133, r2_204)
	r3_202 = r3_202 | ap
	r2_204 = r2_204 + 0x00000008
	branch r2_204 <u 0x00000003 l000180BC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180FD:
	r4_133 = Mem305[r11 + r7_216 * 4:word32]
	Mem315[fp + -1300:word32] = r3_202 & ~0xFFFFFFF8
	r3_202 = (uint32) SLICE(r3_202, ui29, 3)
	r2_204 = r2_204 - 0x00000003
	r7_216 = r7_216 + 0x00000001
	branch r7_216 <u r8_201 l000180B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001811B:
	branch r7_216 >=u 0x00000013 l00018130
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018120:
	r4_133 = Mem332[r11 + r7_216 * 4:word32]
	Mem336[fp + -1300:word32] = 0x00000000
	r7_216 = r7_216 + 0x00000001
	branch r7_216 <u 0x00000013 l00018120
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018130:
	Mem351[fp + -16:word32] = 0x00000007
	word32 sp_358 = sp_103 - 0x00000004
	Mem360[sp_358:word32] = fp + -16
	Mem363[sp_358 - 0x00000004:word32] = fp + -8
	Mem366[sp_358 - 0x0000000C:word64] = 0x0000000000000000
	Mem368[sp_358 - 0x00000010:word32] = 0x00000013
	Mem370[sp_358 - 0x00000014:word32] = 0x00000013
	Mem373[sp_358 - 0x00000018:word32] = fp + -1300
	word32 r4_475
	word32 sp_481
	word32 r5_476
	word32 r3_474
	word32 r2_473
	word32 r6_477
	word32 r7_478
	word32 r11_472
	word32 r10_471
	word32 r9_480
	word32 fp_469
	word32 r0_470 = fn0001878E(r0, r4_133, r5, r6, r7_216, r8_201, r9, r10, r11, ap, fp, out r2_473, out r3_474, out r4_475, out r5_476, out r6_477, out r7_478, out r8_746, out r9_480, out r10_471, out r11_472, out ap_747, out fp_469, out sp_481)
	word32 r8_486 = r0_470
	branch Mem373[fp_469 + -16:word32] != 0x00000000 l00018156
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018153:
	r8_486 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018156:
	branch r8_486 == 0x00000000 l00018181
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018181:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001815A:
	branch r8_486 != 0x00000001 l0001817D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001815F:
	r6_477 = Mem373[fp_469 + -8:word32]
	word32 ap_512 = r6_477
	branch r6_477 == 0x00000000 l0001817D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018168:
	word32 ap_518 = ap_512 - 0x00000006
	word32 r4_520 = Mem519[ap_518 + 2:word32]
	word32 sp_522 = sp_481 - 0x00000004
	Mem523[sp_522:word32] = ap_518
	call Mem523[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_518,fp:fp_539,pc:pc_550,r0:r0_537,r1:r1_552,r10:r10_548,r11:r11_546,r2:r2_532,r3:r3_530,r4:r4_520,r5:r5_528,r6:r6_535,r7:r7_544,r8:r8_542,r9:r9_554,sp:sp_522
		defs: fp:fp_540,pc:pc_551,r0:r0_538,r1:r1_553,r10:r10_549,r11:r11_547,r2:r2_533,r3:r3_531,r4:r4_534,r5:r5_529,r6:r6_536,r7:r7_545,r8:r8_543,r9:r9_555,sp:sp_527
	ap_512 = r4_475
	branch r4_475 != 0x00000000 l00018168
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001817D:
	word32 fp_570 = Mem569[fp_469 + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_473
	r3Out = r3_474
	r4Out = r4_475
	r5Out = r5_476
	r6Out = r6_477
	r7Out = r7_478
	r8Out = r8_486
	r9Out = r9_480
	r10Out = r10_471
	r11Out = r11_472
	fpOut = fp_570
	pcOut = pc
	return r8_486
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180EA:
	word32 fp_577 = Mem306[fp + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_204
	r3Out = r3_202
	r4Out = r4_133
	r5Out = r5
	r6Out = r6
	r7Out = r7_216
	r8Out = r8_201
	r9Out = r9
	r10Out = r10
	r11Out = r11
	fpOut = fp_577
	pcOut = pc
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180A0:
	word32 fp_586 = Mem208[fp + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_204
	r3Out = r3_202
	r4Out = r4_133
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8_200 + 0x00000004
	r9Out = r9
	r10Out = r10
	r11Out = r11
	fpOut = fp_586
	pcOut = pc
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001806A:
	word32 fp_593 = Mem209[fp + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_141
	r3Out = r3_139
	r4Out = r6
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	fpOut = fp_593
	pcOut = pc
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001800A:
	word32 fp_601 = Mem600[fp + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_124
	r3Out = r3_126
	r4Out = r6
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	fpOut = fp_601
	pcOut = pc
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017FA6:
	word32 fp_609 = Mem608[fp + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_21
	r3Out = r3_22
	r4Out = r6
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	fpOut = fp_609
	pcOut = pc
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00017F4E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn000185AE(word32 r0, word32 r1, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 ap, word32 fp, word32 pc, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut, ptr32 & pcOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000185AE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000185AE:
	word32 r3_21 = Mem0[r4 + 0x0000C831:word32]
	word32 r2_20 = Mem0[r4 + 0x0000C835:word32]
	branch r2_20 >=u 0x00000001 l00018611
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000185CB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000185CC:
	word32 v11_13 = Mem12[r4 + 0x0000C5FB:word32] - 0x00000001
	Mem14[r4 + 0x0000C5FB:word32] = v11_13
	branch v11_13 < 0x00000000 l000185E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000185E8:
	r5 = fn0000D69A(r0, r1, r2_20, r3_21, r4, r5, r6, ap, fp, pc, out r1, out r2_20, out r3_21, out r4, out r5_328, out r6, out ap, out fp, out sp_329, out pc)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000185D4:
	word32 r0_45 = Mem14[r4 + 0x0000C5F7:word32]
	Mem47[r4 + 0x0000C5F7:word32] = Mem14[r4 + 0x0000C5F7:word32] + 0x00000001
	r5 = (uint32) Mem47[r0_45:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000185F2:
	branch r5 != 0xFFFFFFFF l00018602
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018602:
	r0 = __ashift(r5, r2_20)
	r3_21 = r3_21 | r0
	r2_20 = r2_20 + 0x00000008
	branch r2_20 <u 0x00000001 l000185CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018611:
	Mem72[Mem70[ap + 4:word32]:word32] = r3_21 & ~0xFFFFFFFE
	word32 r3_105 = (uint32) SLICE(r3_21, ui31, 1)
	word32 r2_104 = r2_20 - 0x00000001
	branch r2_104 >=u 0x00000002 l0001866D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018626:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018628:
	word32 v18_86 = Mem85[r4 + 0x0000C5FB:word32] - 0x00000001
	Mem87[r4 + 0x0000C5FB:word32] = v18_86
	branch v18_86 < 0x00000000 l00018644
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018644:
	r5 = fn0000D69A(r0, r1, r2_104, r3_105, r4, r5, r6, ap, fp, pc, out r1, out r2_104, out r3_105, out r4, out r5_330, out r6, out ap, out fp, out sp_331, out pc)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018630:
	word32 r0_118 = Mem87[r4 + 0x0000C5F7:word32]
	Mem120[r4 + 0x0000C5F7:word32] = Mem87[r4 + 0x0000C5F7:word32] + 0x00000001
	r5 = (uint32) Mem120[r0_118:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001864E:
	branch r5 != 0xFFFFFFFF l0001865E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001865E:
	r0 = __ashift(r5, r2_104)
	r3_105 = r3_105 | r0
	r2_104 = r2_104 + 0x00000008
	branch r2_104 <u 0x00000002 l00018628
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001866D:
	word32 r3_140 = (uint32) SLICE(r3_105, ui30, 2)
	Mem148[r4 + 0x0000C831:word32] = r3_140
	word32 r2_142 = r2_104 - 0x00000002
	Mem150[r4 + 0x0000C835:word32] = r2_142
	word32 r6_139 = r3_105 & ~0xFFFFFFFC
	branch r6_139 != 0x00000002 l00018696
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018696:
	branch r6_139 != 0x00000000 l000186A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186A0:
	branch r6_139 != 0x00000001 l000186AB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186AB:
	word32 sp_169 = fp - 0x00000004
	word32 fp_170 = Mem150[sp_169 + 0x00000010:word32]
	word32 ap_171 = Mem150[sp_169 + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_142
	r3Out = r3_140
	r4Out = r4
	r5Out = r5
	r6Out = r6_139
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	apOut = ap_171
	fpOut = fp_170
	spOut = sp_169
	pcOut = pc
	return 2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186A5:
	word32 fp_213
	word32 r10_215
	word32 r11_216
	word32 r2_217
	word32 r3_218
	word32 r4_219
	word32 r5_220
	word32 r6_221
	word32 r7_222
	word32 r8_223
	word32 r9_224
	word32 r0_214 = fn00017DEE(r3_140, r4, r5, r6_139, r7, r8, r9, r10, r11, ap, fp, out r2_217, out r3_218, out r4_219, out r5_220, out r6_221, out r7_222, out r8_223, out r9_224, out r10_215, out r11_216, out fp_213)
	word32 fp_231 = Mem150[fp_213 + 0x0000000C:word32]
	word32 ap_232 = Mem150[fp_213 + 0x00000008:word32]
	r1Out = r1
	r2Out = r2_217
	r3Out = r3_218
	r4Out = r4_219
	r5Out = r5_220
	r6Out = r6_221
	r7Out = r7_222
	r8Out = r8_223
	r9Out = r9_224
	r10Out = r10_215
	r11Out = r11_216
	apOut = ap_232
	fpOut = fp_231
	spOut = fp_213 - 0x00000004
	pcOut = pc
	return r0_214
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001869A:
	fn00017C2E()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018690:
	word32 fp_245
	word32 r2_247
	word32 r3_248
	word32 r4_249
	word32 r8_250
	word32 r10_252
	word32 r11_253
	word32 r5_254
	word32 r6_255
	word32 r7_256
	word32 r9_257
	word32 pc_258
	word32 r1_259
	word32 r0_246 = fn00017F4E(r0, r1, r4, r5, r6_139, r9, r10, r11, ap, fp, pc, out r1_259, out r2_247, out r3_248, out r4_249, out r5_254, out r6_255, out r7_256, out r8_250, out r9_257, out r10_252, out r11_253, out fp_245, out pc_258)
	word32 fp_265 = Mem150[fp_245 + 0x0000000C:word32]
	word32 ap_266 = Mem150[fp_245 + 0x00000008:word32]
	r1Out = r1_259
	r2Out = r2_247
	r3Out = r3_248
	r4Out = r4_249
	r5Out = r5_254
	r6Out = r6_255
	r7Out = r7_256
	r8Out = r8_250
	r9Out = r9_257
	r10Out = r10_252
	r11Out = r11_253
	apOut = ap_266
	fpOut = fp_265
	spOut = fp_245 - 0x00000004
	pcOut = pc_258
	return r0_246
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001865A:
	word32 sp_271 = fp - 0x00000004
	word32 fp_273 = Mem272[sp_271 + 0x00000010:word32]
	word32 ap_274 = Mem272[sp_271 + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_104
	r3Out = r3_105
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	apOut = ap_274
	fpOut = fp_273
	spOut = sp_271
	pcOut = pc
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000185FE:
	word32 sp_279 = fp - 0x00000004
	word32 fp_280 = Mem71[sp_279 + 0x00000010:word32]
	word32 ap_281 = Mem71[sp_279 + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_20
	r3Out = r3_21
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	apOut = ap_281
	fpOut = fp_280
	spOut = sp_279
	pcOut = pc
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000185AE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000186B2(word32 r0, word32 r1, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000186B2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186B2:
	Mem6[r2 + 0x0000C82D:word32] = 0x00000000
	Mem8[r2 + 0x0000C831:word64] = 0x0000000000000000
	word32 sp_17 = fp - 0x00000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186CC:
	Mem16[r2 + 0x0000C819:word32] = 0x00000000
	Mem21[sp_17 - 0x00000004:word32] = fp + -8
	word32 r3_41
	r0 = fn000185AE(r0, r1, r4, r5, r6, r7, r8, r9, r10, r11, ap, fp, pc, out r1, out r2, out r3_41, out r4, out r5, out r6, out r7, out r8, out r9, out r10, out r11, out ap, out fp, out sp_17, out pc)
	branch r0 == 0x00000000 l000186DF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186DF:
	branch Mem21[r2 + 0x0000C819:word32] <=u r3_41 l000186EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186E8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186EF:
	branch Mem21[fp + -8:word32] == 0x00000000 l000186CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186F4:
	branch Mem21[r2 + 0x0000C6C5:word32] == 0x00000000 l00018710
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018710:
	Mem81[sp_17 - 0x00000004:word32] = 0x00000000
	Mem84[sp_17 - 0x00000008:word32] = Mem81[r2 + 0x0000C82D:word32]
	Mem87[sp_17 - 0x0000000C:word32] = r2 + 1515
	fn0000B072(r0, r1, r2, r4, r5, r6, ap, fp)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186FC:
	Mem113[sp_17 - 0x00000004:word32] = Mem21[r2 + 0x0000C82D:word32]
	Mem116[sp_17 - 0x00000008:word32] = r2 + 1515
	fn0001084A(r0, r2, ap, fp)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018723:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186DE:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000186B2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0001872A(word32 r0, word32 r3, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp:[0..31] r0:[0..31] r3:[0..31]
// LiveOut: ap fp r0 r2 r3 r4 sp
// Trashed: CVZN ap fp r0 r2 r3 r4 sp
// Preserved:
fn0001872A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001872A:
	word32 sp_103 = fp - 0x0000000C
	branch Mem0[r3 + 0x0000C81D:word32] == 0x00000000 l00018787
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001873C:
	word32 r4_10 = Mem0[r3 + 0x0000C821:word32]
	word32 ap_11 = r4_10
	branch r4_10 == 0x00000000 l0001875D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018748:
	word32 ap_17 = ap_11 - 0x00000006
	word32 r2_19 = Mem18[ap_17 + 2:word32]
	word32 sp_21 = sp_103 - 0x00000004
	Mem22[sp_21:word32] = ap_17
	call Mem22[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_17,fp:fp_35,r0:r0_33,r2:r2_19,r3:r3_27,r4:r4_29,sp:sp_21
		defs: fp:fp_36,r0:r0_34,r2:r2_32,r3:r3_28,r4:r4_30,sp:sp_26
	ap_11 = r2
	branch r2 != 0x00000000 l00018748
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001875D:
	r4 = Mem44[r3 + 0x0000C81D:word32]
	word32 ap_46 = r4
	branch r4 == 0x00000000 l00018781
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018769:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001876C:
	word32 ap_57 = ap_46 - 0x00000006
	word32 r2_59 = Mem58[ap_57 + 2:word32]
	word32 sp_61 = sp_103 - 0x00000004
	Mem62[sp_61:word32] = ap_57
	call Mem62[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_57,fp:fp_75,r0:r0_73,r2:r2_59,r3:r3_67,r4:r4_69,sp:sp_61
		defs: fp:fp_76,r0:r0_74,r2:r2_72,r3:r3_68,r4:r4_70,sp:sp_66
	ap_46 = r2
	branch r2 != 0x00000000 l0001876C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018781:
	Mem85[r3 + 0x0000C81D:word64] = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018787:
	word32 sp_99 = fp - 0x00000004
	word32 fp_101 = Mem100[sp_99 + 0x00000010:word32]
	word32 ap_102 = Mem100[sp_99 + 0x0000000C:word32]
	r2Out = r2
	r3Out = r3
	r4Out = r4
	apOut = ap_102
	fpOut = fp_101
	spOut = sp_99
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0001872A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0001878E(word32 r0, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r10:[0..31] r11:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0001878E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001878E:
	word32 r3_12
	word32 r2_16 = fp + -140
	branch Mem7[ap + 8:word32] <=u 0x00000100 l000187B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000187B4:
	r3_12 = 0x00000010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000187A7:
	r2_16 = Mem7[ap + 4:word32]
	r3_12 = Mem7[r2_16 + 1024:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000187B7:
	word32 sp_37
	word32 fp_38
	word32 ap_42
	word32 r0_49
	word32 r10_52
	word32 r9_55
	word32 r5_58
	word32 r8_61
	word32 r6_64
	word32 r7_67
	word32 r4_70
	call Mem33[0x0001927C:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r10:r10,r11:r11,r2:r2_39,r3:r3_21,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9,sp:fp + 0xFFFFFA24,Stack +0004:fp + -72,Stack +0008:0x00000000,Stack +000C:0x00000044,Stack +002C:r3_21,Stack +0034:fp + 0xFFFFFF78
		defs: ap:ap_42,fp:fp_38,r0:r0_49,r10:r10_52,r4:r4_70,r5:r5_58,r6:r6_64,r7:r7_67,r8:r8_61,r9:r9_55,sp:sp_37
	word32 r2_72 = Mem33[ap_42 + 4:word32]
	word32 r11_73 = Mem33[ap_42 + 8:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000187D4:
	word32 r3_79 = Mem78[r2_72:word32]
	Mem82[fp_38 + -72:word32] = Mem78[fp_38 + -72:word32] + 0x00000001
	r2_72 = r2_72 + 0x00000004
	r11_73 = r11_73 - 0x00000001
	branch r11_73 != 0x00000000 l000187D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000187E2:
	branch Mem82[fp_38 + -72:word32] != Mem82[ap_42 + 8:word32] l000187F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000187F2:
	word32 r10_102 = 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000187F8:
	branch Mem82[fp_38 + -72 + r10_102 * 4:word32] != 0x00000000 l00018805
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000187FE:
	r10_102 = r10_102 + 0x00000001
	branch r10_102 <=u 0x00000010 l000187F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018805:
	word32 r2_111 = Mem82[ap_42 + 28:word32]
	branch Mem82[r2_111:word32] >=u r10_102 l00018814
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018811:
	Mem116[r2_111:word32] = r10_102
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018814:
	word32 r11_120 = 0x00000010
	branch 0x00000010 == 0x00000000 l00018826
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018819:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001881C:
	branch Mem824[fp_38 + -72 + r11_120 * 4:word32] != 0x00000000 l00018826
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018822:
	r11_120 = r11_120 - 0x00000001
	branch r11_120 != 0x00000000 l0001881C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018826:
	Mem150[sp_37 + 12:word32] = r11_120
	word32 r2_154 = Mem150[ap_42 + 28:word32]
	branch Mem150[r2_154:word32] <=u r11_120 l00018836
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018833:
	Mem159[r2_154:word32] = r11_120
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018836:
	word32 r10_177
	Mem169[sp_37 + 4:word32] = __ashift(0x00000001, r10_102)
	r10_177 = r10_102
	r10_177 = r10_102
	branch r10_102 >=u r11_120 l00018859
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018840:
	word32 v31_178 = Mem175[sp_37 + 4:word32] - Mem175[(fp_38 + -72) + r10_177 * 4:word32]
	Mem179[sp_37 + 4:word32] = v31_178
	branch v31_178 >= 0x00000000 l0001884C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001884C:
	Mem184[sp_37 + 4:word32] = Mem179[sp_37 + 4:word32] << 1
	r10_177 = r10_177 + 0x00000001
	branch r10_177 <u r11_120 l00018840
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018859:
	word32 v32_197 = Mem190[sp_37 + 4:word32] - Mem190[(fp_38 + -72) + r11_120 * 4:word32]
	Mem198[sp_37 + 4:word32] = v32_197
	branch v32_197 >= 0x00000000 l00018865
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018865:
	Mem202[fp_38 + -72:word32] = Mem198[fp_38 + -72:word32] + Mem198[sp_37 + 4:word32]
	Mem205[fp_38 + -1420:word32] = 0x00000000
	word32 r10_203 = 0x00000000
	word32 r2_207 = fp_38 + 0xFFFFFFBC
	word32 r5_209 = fp_38 + 0xFFFFFA78
	word32 r11_210 = r11_120 - 0x00000001
	branch r11_210 == 0x00000000 l00018892
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018886:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018888:
	r10_203 = r10_203 + Mem225[r2_207:word32]
	Mem229[r5_209:word32] = r10_203
	r2_207 = r2_207 + 0x00000004
	r5_209 = r5_209 + 0x00000004
	r11_210 = r11_210 - 0x00000001
	branch r11_210 != 0x00000000 l00018888
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018892:
	Mem239[sp_37 - 0x00000004:uint32] = 0x00000480
	Mem241[sp_37 - 0x00000008:word32] = 0x00000000
	Mem246[sp_37 - 0x0000000C:word32] = fp_38 + -1356
	word32 r4_328
	word32 r0_267
	word32 r9_1011
	word32 fp_251
	word32 sp_250
	word32 ap_259
	word32 r5_280
	word32 r3_262
	call Mem246[0x0001927C:word32] + 2 (retsize: 4;)
		uses: ap:ap_42,fp:fp_38,r0:r0_49,r10:r10_268,r11:r11_263,r2:r2_252,r3:fp_38 + -1424,r4:r4_70,r5:r5_279,r6:r6_64,r7:r7_67,r8:r8_61,r9:r10_106,sp:sp_37 - 0x0000000C,Stack +FFFFFA28:fp + -72,Stack +FFFFFA2C:0x00000000,Stack +FFFFFA30:0x00000044,Stack +FFFFFA50:r3_21,Stack +FFFFFA58:fp + 0xFFFFFF78
		defs: ap:ap_259,fp:fp_251,r0:r0_267,r3:r3_262,r4:r4_328,r5:r5_280,r9:r9_278,sp:sp_250
	word32 r2_330 = Mem246[ap_259 + 4:word32]
	word32 r11_331 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000188AC:
	r2_330 = r2_330 + 0x00000004
	word32 r10_340 = Mem339[r2_330:word32]
	branch r10_340 == 0x00000000 l000188C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000188B1:
	r3_262 = Mem339[fp_251 + -1424 + r10_340 * 4:word32]
	Mem348[fp_251 + -1424:word32] = Mem339[fp_251 + -1424:word32] + 0x00000001
	Mem351[fp_251 + -1356:word32] = r11_331
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000188C2:
	r11_331 = r11_331 + 0x00000001
	branch r11_331 <u Mem359[ap_259 + 8:word32] l000188AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000188CA:
	Mem366[sp_250 + 8:word32] = ap_259 + 8
	Mem370[Mem366[sp_250 + 8:word32]:word32] = Mem366[fp_251 + -1424 + Mem366[sp_250 + 12:word32] * 4:word32]
	Mem373[fp_251 + -1424:word32] = 0x00000000
	Mem376[sp_250 + 48:word32] = -0x00000001
	word32 r2_377 = Mem376[sp_250 + 36:word32]
	Mem379[r2_377 + -4:word32] = 0x00000000
	Mem382[fp_251 + -204:word32] = 0x00000000
	Mem385[sp_250 + 44:word32] = 0x00000000
	word32 r11_371 = 0x00000000
	word32 r8_1006 = fp_251 + -1356
	word32 r6_380 = 0x00000000
	word32 r7_383 = 0x00000000
	branch r9_1011 <= Mem385[sp_250 + 12:word32] l00018904
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018904:
	Mem392[sp_250 + 40:word32] = ap_259 + 28
	Mem394[sp_250 + 0x00000018:word32] = Mem392[0x000192B4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018914:
	Mem403[sp_250 + 16:word32] = Mem400[fp_251 + -72 + r9_1011 * 4:word32]
	r2_377 = Mem403[sp_250 + 16:word32]
	Mem406[sp_250 + 16:word32] = Mem403[sp_250 + 16:word32] - 0x00000001
	branch r2_377 != 0x00000000 l00018928
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018928:
	branch r9_1011 > Mem406[Mem406[(sp_250 + 36) + Mem406[sp_250 + 48:word32] * 4:word32]:word32] l0001893A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001893A:
	Mem418[sp_250 + 32:word32] = Mem406[sp_250 + 16:word32] + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018940:
	word32 r4_434
	word32 r2_422 = Mem421[sp_250 + 48:word32]
	Mem424[sp_250 + 48:word32] = Mem421[sp_250 + 48:word32] + 0x00000001
	word32 r6_426 = r6_380 + Mem424[Mem424[(sp_250 + 36) + r2_422 * 4:word32]:word32]
	Mem428[sp_250 + 44:word32] = Mem424[sp_250 + 12:word32] - r6_426
	word32 r3_430 = Mem428[sp_250 + 40:word32]
	branch Mem428[sp_250 + 44:word32] <=u Mem428[Mem428[r3_430:word32]:word32] l00018968
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018968:
	r4_434 = Mem428[sp_250 + 44:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018960:
	r4_434 = Mem428[Mem428[r3_430:word32]:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001896C:
	Mem445[sp_250 + 44:word32] = r4_434
	word32 r10_449 = r9_1011 - r6_426
	Mem452[sp_250 + 52:word32] = __ashift(0x00000001, r10_449)
	branch Mem452[sp_250 + 52:word32] <=u Mem452[sp_250 + 32:word32] l000189C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018986:
	Mem459[sp_250 + 52:word32] = Mem452[sp_250 + 52:word32] - (Mem452[sp_250 + 16:word32] + 0x00000001)
	r4_434 = fp_251 + -72
	r3_430 = (r9_1011 << 2) + r4_434
	r10_449 = r10_449 + 0x00000001
	branch r10_449 + 0x00000001 >=u Mem459[sp_250 + 44:word32] l000189C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000189A2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000189A4:
	Mem477[sp_250 + 52:word32] = Mem475[sp_250 + 52:word32] << 1
	r3_430 = r3_430 + 0x00000004
	branch Mem477[sp_250 + 52:word32] <=u Mem477[r3_430:word32] l000189C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000189B6:
	Mem485[sp_250 + 52:word32] = Mem477[sp_250 + 52:word32] - Mem477[r3_430:word32]
	r10_449 = r10_449 + 0x00000001
	branch r10_449 <u Mem485[sp_250 + 44:word32] l000189A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000189C2:
	branch r6_426 + r10_449 <=u Mem496[sp_250 + 28:word32] l000189D7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000189CC:
	branch r6_426 >=u Mem496[sp_250 + 28:word32] l000189D7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000189D2:
	r10_449 = Mem496[sp_250 + 28:word32] - r6_426
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000189D7:
	Mem508[sp_250 + 44:word32] = __ashift(0x00000001, r10_449)
	Mem511[Mem508[sp_250 + 36:word32]:word32] = r10_449
	word32 r2_512 = Mem511[sp_250 + 44:word32] + 0x00000001
	word32 sp_513 = sp_250 - 0x00000004
	Mem515[sp_513:word32] = r2_512 * 0x00000006
	word32 r3_532
	word32 r2_522
	word32 r10_543
	word32 r4_571
	call Mem515[sp_513 + 28:word32] + 2 (retsize: 4;)
		uses: ap:ap_526,fp:fp_461,r0:r0_470,r10:r10_505,r11:r11_536,r2:r2_512,r3:r3_530,r4:r4_569,r5:r5_551,r6:r6_426,r7:r7_565,r8:r8_557,r9:r9_447,sp:sp_513,Stack +FFFFFA28:fp + -72,Stack +FFFFFA2C:0x00000000,Stack +FFFFFA30:0x00000044,Stack +FFFFFA50:r3_21,Stack +FFFFFA58:fp + 0xFFFFFF78
		defs: ap:ap_528,fp:fp_521,r0:r0_542,r10:r10_543,r11:r11_538,r2:r2_522,r3:r3_532,r4:r4_571,r5:r5_553,r6:r6_561,r8:r8_559,r9:r9_547,sp:sp_517
	word32 r7_1002 = r0_267
	branch r0_267 != 0x00000000 l00018A21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018A21:
	Mem581[r2_522:word32] = Mem515[sp_250 + 44:word32] + 0x00000001 + 0x00007BE9
	Mem583[Mem581[ap_259 + 24:word32]:word32] = r0_267 + 0x00000006
	Mem585[ap_259 + 24:word32] = r0_267 + 2
	Mem587[Mem585[ap_259 + 24:word32]:word32] = 0x00000000
	word32 r2_589 = Mem587[sp_250 + 48:word32]
	Mem591[fp_251 + -204:word32] = r0_267 + 0x00000006
	r7_383 = r0_267 + 0x00000006
	branch r2_589 == 0x00000000 l00018AA3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018AA3:
	branch r9_1011 <= r6_380 + Mem591[Mem591[(sp_250 + 36) + Mem591[sp_250 + 48:word32] * 4:word32]:word32] l00018AB5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018AB2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018A55:
	Mem602[fp_251 + -1424:word32] = r11_371
	Mem606[fp_251 + -1429:byte] = Mem602[Mem602[sp_250 + 36 + (Mem602[sp_250 + 48:word32] - 0x00000001) * 4:word32]:byte]
	Mem609[fp_251 + -1430:int8] = (int8) (r10_543 + 0x00000010)
	Mem611[fp_251 + -1428:word32] = r0_267 + 0x00000006
	__ashift(0x00000001, r6_380)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000189F7:
	branch Mem515[sp_250 + 48:word32] == 0x00000000 l00018A1D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000189FC:
	r4_571 = Mem515[fp_251 + -204:word32]
	r2_522 = r4_571
	branch r4_571 == 0x00000000 l00018A1D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018A06:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018A08:
	word32 r2_635 = r2_522 - 0x00000006
	word32 r3_637 = Mem636[r2_635 + 2:word32]
	word32 sp_639 = sp_250 - 0x00000004
	Mem640[sp_639:word32] = r2_635
	call Mem640[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_648,fp:fp_645,r0:r0_653,r10:r10_655,r11:r11_651,r2:r2_635,r3:r3_637,r4:r4_667,r5:r5_659,r6:r6_663,r7:r7_665,r8:r8_661,r9:r9_657,sp:sp_639,Stack +FFFFFA28:fp + -72,Stack +FFFFFA2C:0x00000000,Stack +FFFFFA30:0x00000044,Stack +FFFFFA50:r3_21,Stack +FFFFFA58:fp + 0xFFFFFF78
		defs: ap:ap_649,fp:fp_646,r0:r0_654,r10:r10_656,r11:r11_652,r3:r3_650,r4:r4_668,r5:r5_660,r6:r6_664,r7:r7_666,r8:r8_662,r9:r9_658,sp:sp_644
	r2_522 = r3_532
	branch r3_532 != 0x00000000 l00018A08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018A1D:
	word32 sp_680 = fp_251 - 0x00000004
	word32 fp_682 = Mem681[sp_680 + 0x00000010:word32]
	word32 ap_683 = Mem681[sp_680 + 0x0000000C:word32]
	r2Out = r2_522
	r3Out = r3_532
	r4Out = r4_571
	r5Out = r5_280
	r6Out = r6_380
	r7Out = r7_1002
	r8Out = r8_1006
	r9Out = r9_1011
	r10Out = r10_543
	r11Out = r11_371
	apOut = ap_683
	fpOut = fp_682
	spOut = sp_680
	return 0x00000003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018937:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018AB5:
	Mem689[fp_251 + -1429:int8] = (int8) (r9_1011 - r6_380)
	branch r8_1006 <u (fp_251 + -1356) + (Mem689[Mem689[sp_250 + 8:word32]:word32] << 2) l00018AD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018AD8:
	word32 r4_699 = Mem689[r8_1006:word32]
	word32 r0_702 = Mem689[ap_259 + 12:word32]
	branch r4_699 >=u r0_702 l00018B0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018B0C:
	Mem710[fp_251 + -1430:byte] = Mem689[Mem689[ap_259 + 20:word32] + (r4_699 - r0_702) * 2:byte]
	Mem716[fp_251 + -1428:word16] = Mem710[Mem710[ap_259 + 16:word32] + (Mem710[r8_1006:word32] - r0_702) * 2:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018AE4:
	word32 r5_726
	branch r4_699 >=u 0x00000100 l00018AF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018AF4:
	r5_726 = DPB(r5_280, 0x0F, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018AED:
	r5_726 = DPB(r5_280, 0x10, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018AF7:
	Mem738[fp_251 + -1430:byte] = (byte) r5_726
	Mem743[fp_251 + -1428:word16] = Mem738[r8_1006:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018AD0:
	Mem748[fp_251 + -1430:byte] = 0x63
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018B2A:
	Mem760[sp_250 + 52:word32] = __ashift(0x00000001, r9_1011 - r6_380)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018925:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018BCF:
	r9_1011 = r9_1011 + 0x00000001
	branch r9_1011 > Mem406[sp_250 + 12:word32] l00018BDA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018BD7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018901:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018BDA:
	Mem771[Mem768[ap_259 + 28:word32]:word32] = Mem768[Mem768[sp_250 + 36:word32]:word32]
	word32 r3_777 = DPB(r3_262, 0x00, 0)
	branch Mem771[sp_250 + 4:word32] == 0x00000000 l00018BEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018BE6:
	branch Mem771[sp_250 + 12:word32] == 0x00000001 l00018BEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018BEC:
	r3_777 = DPB(r3_262, 0x01, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018BEE:
	word32 fp_796 = Mem771[fp_251 + 0x0000000C:word32]
	word32 ap_797 = Mem771[fp_251 + 0x00000008:word32]
	r2Out = r2_377
	r3Out = r3_777
	r4Out = r4_328
	r5Out = r5_280
	r6Out = 0x00000000
	r7Out = 0x00000000
	r8Out = fp_251 + -1356
	r9Out = r9_1011
	r10Out = r10_340
	r11Out = 0x00000000
	apOut = ap_797
	fpOut = fp_796
	spOut = fp_251 - 0x00000004
	return (int32) (int8) r3_777
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018861:
	word32 fp_803 = Mem198[fp_38 + 0x0000000C:word32]
	word32 ap_804 = Mem198[fp_38 + 0x00000008:word32]
	r2Out = r2_154
	r3Out = r3_79
	r4Out = r4_70
	r5Out = r5_58
	r6Out = r6_64
	r7Out = r7_67
	r8Out = r8_61
	r9Out = r10_102
	r10Out = r10_177
	r11Out = r11_120
	apOut = ap_804
	fpOut = fp_803
	spOut = fp_38 - 0x00000004
	return 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018848:
	word32 fp_810 = Mem179[fp_38 + 0x0000000C:word32]
	word32 ap_811 = Mem179[fp_38 + 0x00000008:word32]
	r2Out = r2_154
	r3Out = r3_79
	r4Out = r4_70
	r5Out = r5_58
	r6Out = r6_64
	r7Out = r7_67
	r8Out = r8_61
	r9Out = r10_102
	r10Out = r10_177
	r11Out = r11_120
	apOut = ap_811
	fpOut = fp_810
	spOut = fp_38 - 0x00000004
	return 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000187E9:
	Mem813[Mem82[ap_42 + 24:word32]:word32] = 0x00000000
	Mem815[Mem813[ap_42 + 28:word32]:word32] = 0x00000000
	word32 fp_822 = Mem815[fp_38 + 0x0000000C:word32]
	word32 ap_823 = Mem815[fp_38 + 0x00000008:word32]
	r2Out = r2_72
	r3Out = r3_79
	r4Out = r4_70
	r5Out = r5_58
	r6Out = r6_64
	r7Out = r7_67
	r8Out = r8_61
	r9Out = r9_55
	r10Out = r10_52
	r11Out = r11_73
	apOut = ap_823
	fpOut = fp_822
	spOut = fp_38 - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0001878E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00018BF6(word32 r0, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31]
// LiveOut: ap fp r0 r3 sp
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn00018BF6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018BF6:
	word32 sp_15 = fp - 0x00000004
	word32 r2_11 = Mem0[ap + 4:word32]
	branch r2_11 == 0x00000000 l00018C15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018BFF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C00:
	word32 r2_12 = r2_11 - 0x00000006
	word32 r3_14 = Mem13[r2_12 + 2:word32]
	word32 sp_16 = sp_15 - 0x00000004
	Mem17[sp_16:word32] = r2_12
	call Mem17[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_22,fp:fp_28,r0:r0_26,r2:r2_12,r3:r3_14,sp:sp_16
		defs: ap:ap_23,fp:fp_29,r0:r0_27,r3:r3_25,sp:sp_21
	r2_11 = r3
	branch r3 != 0x00000000 l00018C00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C15:
	word32 sp_43 = fp - 0x00000004
	word32 fp_45 = Mem44[sp_43 + 0x00000010:word32]
	word32 ap_46 = Mem44[sp_43 + 0x0000000C:word32]
	r3Out = r3
	apOut = ap_46
	fpOut = fp_45
	spOut = sp_43
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00018BF6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00018C3A(word32 r0, word32 r1, word32 r3, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r11, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r3Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r3:[0..31] r5:[8..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: ap fp r0 r1 r11 r3 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00018C3A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C3A:
	word32 r10_168 = Mem0[0x0001934C:word32]
	word32 r2_7 = Mem0[ap + 4:word32]
	Mem9[ap + 4:word32] = Mem0[ap + 4:word32] + 0x00000001
	word32 sp_178 = fp - 0x00000004
	word32 r4_10 = (uint32) Mem9[r2_7:byte]
	branch r4_10 != 0x00000000 l00018C60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C60:
	branch r4_10 != 0x0000003F l00018C86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C86:
	branch r4_10 != 0x0000002A l00018CBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CBE:
	branch r4_10 == 0x0000005B l00018CCA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CCA:
	branch (uint32) Mem9[Mem9[ap + 8:word32]:byte] != 0x00000000 l00018CD3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CD3:
	word32 r5_29 = Mem9[ap + 4:word32]
	word32 r6_1117 = DPB(r6, 0x01, 0)
	word32 r2_33 = (uint32) Mem9[r5_29:byte]
	branch r2_33 == 0x00000021 l00018CED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CE2:
	branch r2_33 == 0x0000005E l00018CED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CEB:
	r6_1117 = DPB(r6, 0x00, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CED:
	word32 r8_1131 = (int32) (int8) r6_1117
	Mem51[ap + 4:word32] = r8_1131 + r5_29
	word32 r7_1124 = Mem51[ap + 4:word32]
	word32 r3_1033 = 0x00000000
	branch Mem51[r7_1124:byte] == 0x00 l00018D2B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CFF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D00:
	branch r3_1033 == 0x00000000 l00018D08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D08:
	word32 r2_65 = (uint32) Mem51[r7_1124:byte]
	branch r2_65 != 0x0000005C l00018D1C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D1C:
	branch r2_65 == 0x0000005D l00018D2B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D14:
	r3_1033 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D04:
	r3_1033 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D25:
	r7_1124 = r7_1124 + 0x00000001
	branch Mem51[r7_1124:byte] != 0x00 l00018D00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D2B:
	branch (uint32) Mem51[r7_1124:byte] == 0x0000005D l00018D3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D3A:
	word32 r5_1110 = Mem51[ap + 4:word32]
	word32 r4_193 = 0x00000000
	word32 r3_100 = 0x00000000
	branch (uint32) Mem51[r5_1110:byte] != 0x0000002D l00018D4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D4A:
	r3_100 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D4C:
	word32 r9_1035 = r3_100
	branch r5_1110 <u r7_1124 l00018D57
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D57:
	r11 = ap + 12
	r6_1117 = Mem51[0x00019298:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D64:
	branch r9_1035 != 0x00000000 l00018D7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D68:
	branch (uint32) Mem126[Mem126[ap + 4:word32]:byte] != 0x0000005C l00018D7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D7C:
	branch r9_1035 != 0x00000000 l00018D94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D80:
	r0 = Mem126[ap + 4:word32]
	branch (uint32) Mem126[r0:byte] != 0x0000002D l00018D94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D94:
	branch Mem126[r11:word32] == 0x00000000 l00018DC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DC0:
	r3_100 = DPB(r3_100, Mem126[Mem126[ap + 8:word32]:byte], 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D98:
	word32 r1_173
	word32 r3_161 = (uint32) Mem126[Mem126[ap + 8:word32]:byte]
	word32 r2_162 = r3_161 & ~0xFFFFFF80
	branch (Mem126[r10_168 + r2_162 * 4:word32] & 0x00000001) == 0x00000000 l00018DB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DB8:
	r1_173 = DPB(r1, (int8) r3_161, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DAC:
	word32 sp_179 = sp_178 - 0x00000004
	Mem181[sp_179:int32] = (int32) (int8) r3_161
	word32 r1_220
	call r6_1117 + 2 (retsize: 4;)
		uses: ap:ap_125,fp:fp_202,r0:r0_196,r1:r1_172,r10:r10_168,r11:r11_145,r2:r2_162,r3:r3_161,r4:r4_193,r5:r5_206,r6:r6_186,r7:r7_215,r8:r8_211,r9:r9_120,sp:sp_179,Stack +FFFFFFF4:dwLoc10,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_189,fp:fp_203,r0:r0_199,r1:r1_220,r10:r10_188,r11:r11_219,r3:r3_195,r4:r4_194,r6:r6_208,r7:r7_216,r8:r8_212,r9:r9_218,sp:sp_187
	r1_173 = DPB(r1_220, (int8) r0, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DBB:
	r3_100 = DPB(r3_161, (byte) r1_173, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DC4:
	r1 = Mem237[ap + 4:word32]
	r5_1110 = (uint32) (byte) r3_100
	branch (uint32) Mem237[r1 + 0x00000001:byte] == 0x0000002D l00018E4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DD7:
	branch r4_193 == 0x00000000 l00018DE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DE0:
	r0 = (uint32) Mem237[r1:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DDB:
	r0 = r4_193
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DE3:
	word32 r4_260 = r0
	word32 r2_263 = (uint32) Mem237[r1:byte]
	branch r0 >u r2_263 l00018E4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DEE:
	r3_100 = Mem237[r11:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DF4:
	branch r3_100 == 0x00000000 l00018E18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E18:
	r1 = r4_260
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DF8:
	r0 = r4_260 & ~0xFFFFFF80
	branch (Mem289[r10_168 + r0 * 4:word32] & 0x00000001) == 0x00000000 l00018E10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E10:
	r2_263 = DPB(r2_263, (int8) r4_260, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E05:
	word32 sp_296 = sp_178 - 0x00000004
	Mem298[sp_296:int32] = (int32) (int8) r4_260
	word32 r2_306
	call r6_1117 + 2 (retsize: 4;)
		uses: ap:ap_304,fp:fp_310,r0:r0_284,r1:r1_323,r10:r10_288,r11:r11_321,r2:r2_291,r3:r3_274,r4:r4_279,r5:r5_312,r6:r6_301,r7:r7_317,r8:r8_315,r9:r9_319,sp:sp_296,Stack +FFFFFFF4:dwLoc10,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_305,fp:fp_311,r0:r0_309,r10:r10_303,r11:r11_322,r2:r2_306,r3:r3_308,r4:r4_307,r5:r5_313,r6:r6_314,r7:r7_318,r8:r8_316,r9:r9_320,sp:sp_302
	r2_263 = DPB(r2_306, (int8) r0, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E13:
	r1 = (int32) (int8) r2_263
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E1B:
	branch r1 != r5_1110 l00018E40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E40:
	r4_260 = r4_260 + 0x00000001
	r0 = (uint32) Mem345[Mem345[ap + 4:word32]:byte]
	branch r4_260 <=u r0 l00018DF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E4B:
	r9_1035 = 0x00000000
	r4_193 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E20:
	word32 r2_409
	branch r8_1131 == 0x00000000 l00018E28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E28:
	word32 sp_365 = sp_178 - 0x00000004
	Mem367[sp_365:word32] = Mem345[ap + 12:word32]
	Mem370[sp_365 - 0x00000004:word32] = Mem367[ap + 8:word32] + 0x00000001
	Mem375[sp_365 - 0x00000008:word32] = r7_1124 + 0x00000001
	r2_409 = fn00018C3A(r0, r1, r3_100, r5_1110, r6_1117, r7_1124, r8_1131, r9_1035, r11, ap, fp, out r1, out r3_100, out r5_1110, out r6_1117, out r7_1124, out r8_1131, out r9_1035, out r11, out ap_1238, out fp, out sp_1239)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E24:
	r2_409 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E3C:
	word32 sp_424 = fp - 0x00000004
	word32 fp_426 = Mem425[sp_424 + 0x00000010:word32]
	word32 ap_427 = Mem425[sp_424 + 0x0000000C:word32]
	r1Out = r1
	r3Out = r3_100
	r5Out = r5_1110
	r6Out = r6_1117
	r7Out = r7_1124
	r8Out = r8_1131
	r9Out = r9_1035
	r11Out = r11
	apOut = ap_427
	fpOut = fp_426
	spOut = sp_424
	return r2_409
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D8C:
	r0 = r0 - 0x00000001
	r4_193 = (uint32) Mem126[r0 - 0x00000001:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D75:
	r9_1035 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E4F:
	Mem443[ap + 4:word32] = Mem440[ap + 4:word32] + 0x00000001
	branch Mem443[ap + 4:word32] >=u r7_1124 l00018E5B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E58:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D54:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E5B:
	word32 r2_466
	branch r8_1131 == 0x00000000 l00018E78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E78:
	r2_466 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E5F:
	word32 sp_482 = sp_178 - 0x00000004
	Mem486[sp_482:word32] = Mem484[ap + 12:word32]
	Mem489[sp_482 - 0x00000004:word32] = Mem486[ap + 8:word32] + 0x00000001
	Mem493[sp_482 - 0x00000008:word32] = r7_1124 + 0x00000001
	r2_466 = fn00018C3A(r0, r1, r3_100, r5_1110, r6_1117, r7_1124, r8_1131, r9_1035, r11, ap, fp, out r1, out r3_100, out r5_1110, out r6_1117, out r7_1124, out r8_1131, out r9_1035, out r11, out ap_1236, out fp, out sp_1237)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E7A:
	word32 sp_600 = fp - 0x00000004
	word32 fp_602 = Mem601[sp_600 + 0x00000010:word32]
	word32 ap_603 = Mem601[sp_600 + 0x0000000C:word32]
	r1Out = r1
	r3Out = r3_100
	r5Out = r5_1110
	r6Out = r6_1117
	r7Out = r7_1124
	r8Out = r8_1131
	r9Out = r9_1035
	r11Out = r11
	apOut = ap_603
	fpOut = fp_602
	spOut = sp_600
	return r2_466
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D37:
	word32 fp_610 = Mem51[fp + 0x0000000C:word32]
	word32 ap_611 = Mem51[fp + 0x00000008:word32]
	r1Out = r1
	r3Out = r3_1033
	r5Out = r5_29
	r6Out = r6_1117
	r7Out = r7_1124
	r8Out = r8_1131
	r9Out = r9
	r11Out = r11
	apOut = ap_611
	fpOut = fp_610
	spOut = fp - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CD0:
	word32 fp_618 = Mem9[fp + 0x0000000C:word32]
	word32 ap_619 = Mem9[fp + 0x00000008:word32]
	r1Out = r1
	r3Out = r3
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_619
	fpOut = fp_618
	spOut = fp - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CC7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E7E:
	branch r4_10 != 0x0000005C l00018E96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E87:
	word32 r2_623 = Mem9[ap + 4:word32]
	Mem625[ap + 4:word32] = Mem9[ap + 4:word32] + 0x00000001
	r4_10 = (uint32) Mem625[r2_623:byte]
	branch r4_10 != 0x00000000 l00018E96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E96:
	word32 r5_1109
	branch Mem632[ap + 12:word32] == 0x00000000 l00018EC4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018EC4:
	r5_1109 = DPB(r5, (byte) r4_10, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E9B:
	word32 r5_645 = (uint32) (byte) r4_10
	word32 r2_646 = r5_645 & ~0xFFFFFF80
	branch (Mem632[r10_168 + r2_646 * 4:word32] & 0x00000001) == 0x00000000 l00018EBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018EBC:
	r3 = DPB(r3, (int8) r5_645, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018EAB:
	int32 v29_659 = (int32) (int8) r5_645
	word32 r3_668
	call Mem660[0x00019298:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r1:r1,r10:r10_5,r11:r11,r2:r2_646,r3:r3,r4:r4_637,r5:r5_645,r6:r6,r7:r7,r8:r8,r9:r9,sp:fp - 0x00000008,Stack +0000:dwLoc0C,Stack +0004:v29_659,Stack +FFFFFFFC:dwLoc10
		defs: ap:ap_665,fp:fp_672,r0:r0_670,r1:r1_688,r10:r10_664,r11:r11_686,r3:r3_668,r4:r4_667,r5:r5_673,r6:r6_675,r7:r7_681,r8:r8_678,r9:r9_684,sp:sp_663
	dwLoc08 = v29_659
	r3 = DPB(r3_668, (int8) r0, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018EBF:
	r5_1109 = DPB(r5_645, (byte) r3, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018EC7:
	word32 r4_712
	branch Mem703[ap + 12:word32] == 0x00000000 l00018EF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018EF8:
	r4_712 = DPB(r4_10, Mem703[Mem703[ap + 8:word32]:byte], 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018ECC:
	word32 r4_717 = (uint32) Mem703[Mem703[ap + 8:word32]:byte]
	word32 r2_718 = r4_717 & ~0xFFFFFF80
	branch (Mem703[r10_168 + r2_718 * 4:word32] & 0x00000001) == 0x00000000 l00018EF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018EF0:
	r3 = DPB(r3, (int8) r4_717, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018EE0:
	word32 sp_731 = sp_178 - 0x00000004
	Mem733[sp_731:int32] = (int32) (int8) r4_717
	word32 r3_741
	call Mem733[0x00019298:word32] + 2 (retsize: 4;)
		uses: ap:ap_701,fp:fp_745,r0:r0_742,r1:r1_765,r10:r10_722,r11:r11_762,r2:r2_718,r3:r3_725,r4:r4_717,r5:r5_748,r6:r6_750,r7:r7_756,r8:r8_753,r9:r9_759,sp:sp_731,Stack +FFFFFFF4:dwLoc10,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08_1038
		defs: ap:ap_738,fp:fp_747,r0:r0_744,r1:r1_767,r11:r11_764,r3:r3_741,r4:r4_740,r5:r5_749,r6:r6_752,r7:r7_758,r8:r8_755,r9:r9_761,sp:sp_736
	r3 = DPB(r3_741, (int8) r0, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018EF3:
	r4_712 = DPB(r4_717, (byte) r3, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018EFC:
	word32 r2_786
	branch (byte) (r5_1109 - r4_712) != 0x00 l00018F18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F18:
	r2_786 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F01:
	word32 sp_793 = sp_178 - 0x00000004
	Mem799[sp_793:word32] = Mem796[ap + 12:word32]
	Mem801[ap + 8:word32] = Mem799[ap + 8:word32] + 0x00000001
	Mem804[sp_793 - 0x00000004:word32] = Mem801[ap + 8:word32]
	Mem807[sp_793 - 0x00000008:word32] = Mem804[ap + 4:word32]
	r2_786 = fn00018C3A(r0, r1, r3, r5_1109, r6, r7, r8, r9, r11, ap, fp, out r1, out r3, out r5_1109, out r6, out r7, out r8, out r9, out r11, out ap_1234, out fp, out sp_1235)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F1A:
	word32 sp_861 = fp - 0x00000004
	word32 fp_863 = Mem862[sp_861 + 0x00000010:word32]
	word32 ap_864 = Mem862[sp_861 + 0x0000000C:word32]
	r1Out = r1
	r3Out = r3
	r5Out = r5_1109
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_864
	fpOut = fp_863
	spOut = sp_861
	return r2_786
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E93:
	word32 fp_871 = Mem625[fp + 0x0000000C:word32]
	word32 ap_872 = Mem625[fp + 0x00000008:word32]
	r1Out = r1
	r3Out = r3
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_872
	fpOut = fp_871
	spOut = fp - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C8B:
	branch (uint32) Mem9[Mem9[ap + 4:word32]:byte] != 0x00000000 l00018C95
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C95:
	branch Mem9[Mem9[ap + 8:word32]:byte] == 0x00 l00018CBA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C9A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C9C:
	word32 sp_886 = sp_178 - 0x00000004
	Mem890[sp_886:word32] = Mem888[ap + 12:word32]
	Mem893[sp_886 - 0x00000004:word32] = Mem890[ap + 8:word32]
	Mem896[sp_886 - 0x00000008:word32] = Mem893[ap + 4:word32]
	r0 = fn00018C3A(r0, r1, r3, r5, r6, r7, r8, r9, r11, ap, fp, out r1, out r3, out r5, out r6, out r7, out r8, out r9, out r11, out ap, out fp, out sp_178)
	branch r0 == 0x00000000 l00018CB2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CB2:
	Mem935[ap + 8:word32] = Mem896[ap + 8:word32] + 0x00000001
	branch Mem935[Mem935[ap + 8:word32]:byte] != 0x00 l00018C9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CBA:
	word32 sp_945 = fp - 0x00000004
	word32 fp_947 = Mem946[sp_945 + 0x00000010:word32]
	word32 ap_948 = Mem946[sp_945 + 0x0000000C:word32]
	r1Out = r1
	r3Out = r3
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_948
	fpOut = fp_947
	spOut = sp_945
	return 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CAE:
	word32 fp_954 = Mem896[fp + 0x0000000C:word32]
	word32 ap_955 = Mem896[fp + 0x00000008:word32]
	r1Out = r1
	r3Out = r3
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_955
	fpOut = fp_954
	spOut = fp - 0x00000004
	return r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C91:
	word32 fp_961 = Mem9[fp + 0x0000000C:word32]
	word32 ap_962 = Mem9[fp + 0x00000008:word32]
	r1Out = r1
	r3Out = r3
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_962
	fpOut = fp_961
	spOut = fp - 0x00000004
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C65:
	word32 r2_1001
	branch Mem9[Mem9[ap + 8:word32]:byte] == 0x00 l00018C80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C80:
	r2_1001 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C6D:
	r2_1001 = fn00018C3A(r0, r1, r3, r5, r6, r7, r8, r9, r11, ap, fp, out r1, out r3, out r5, out r6, out r7, out r8, out r9, out r11, out ap_1232, out fp, out sp_1233)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C82:
	word32 sp_1011 = fp - 0x00000004
	word32 fp_1013 = Mem1012[sp_1011 + 0x00000010:word32]
	word32 ap_1014 = Mem1012[sp_1011 + 0x0000000C:word32]
	r1Out = r1
	r3Out = r3
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_1014
	fpOut = fp_1013
	spOut = sp_1011
	return r2_1001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C50:
	word32 r3_1016 = 0x00000000
	branch (uint32) Mem9[Mem9[ap + 8:word32]:byte] != 0x00000000 l00018C5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C5A:
	r3_1016 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C5C:
	word32 fp_1031 = Mem9[fp + 0x0000000C:word32]
	word32 ap_1032 = Mem9[fp + 0x00000008:word32]
	r1Out = r1
	r3Out = r3_1016
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_1032
	fpOut = fp_1031
	spOut = fp - 0x00000004
	return r3_1016
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00018C3A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00018F22(word32 ap, word32 fp, ptr32 & r1Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31]
// LiveOut: ap fp r0 r1 sp
// Trashed: CVZN ap fp r0 r1 sp
// Preserved:
fn00018F22_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F22:
	branch Mem0[Mem0[ap + 4:word32]:byte] == 0x00 l00018F5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F2A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F2C:
	word32 r0_16 = Mem15[ap + 4:word32]
	byte v11_17 = Mem15[r0_16:byte]
	r1 = DPB(r1, v11_17, 0)
	branch v11_17 != 0x5C l00018F48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F39:
	branch Mem15[r0_16 + 0x00000001:byte] == 0x00 l00018F48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F48:
	branch v11_17 == 0x25 l00018F52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F4D:
	branch v11_17 != 0x2A l00018F56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F52:
	word32 fp_45 = Mem15[fp + 0x0000000C:word32]
	word32 ap_46 = Mem15[fp + 0x00000008:word32]
	r1Out = r1
	apOut = ap_46
	fpOut = fp_45
	spOut = <invalid>
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F3F:
	Mem48[ap + 4:word32] = r0_16 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F56:
	Mem56[ap + 4:word32] = Mem54[ap + 4:word32] + 0x00000001
	branch Mem56[Mem56[ap + 4:word32]:byte] != 0x00 l00018F2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F5E:
	word32 fp_71 = Mem70[fp + 0x0000000C:word32]
	word32 ap_72 = Mem70[fp + 0x00000008:word32]
	r1Out = r1
	apOut = ap_72
	fpOut = fp_71
	spOut = <invalid>
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00018F22_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00018F66()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn00018F66_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00018F66_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F66:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00018FA9()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn00018FA9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00018FA9_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018FA9:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0001902B()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001902B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0001902B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001902B:
// DataOut:
// DataOut (flags):
// SymbolicIn:



