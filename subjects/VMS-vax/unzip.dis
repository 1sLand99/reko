void fn0000802E(word32 r0, word32 r2, word32 r4, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r2:[0..31] r4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
l00008098:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000809C:
	Mem95[sp - 0x00000004:uint32] = 0x0000005D
	Mem98[sp - 0x00000008:word32] = Mem95[Mem95[ap + 8:word32]:word32]
	call Mem98[0x000192DC:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r2:r2,r3:r3,r4:r4,sp:sp - 0x00000008,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: r0:r0_108,sp:sp_102
	branch r0_108 != 0x00000000 l000080B8
	def sp
	def r3
	def dwLoc08
	def dwLoc0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000080B8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000080AF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000080BA:
	Mem124[sp_102 - 0x00000004:word32] = 0x00000007
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000802E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000802E_entry:
	def fp
	def r4
	def ap
	def r2
	def r0
	def fp
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000802E:
	r3_9 = Mem8[0x000192E0:word32]
	call r3_9 + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r2:r2,r3:r3_9,r4:r4,sp:fp - 0x0000000C,Stack +0004:0x00000002,Stack +0008:r4
		defs: ap:ap_17,fp:fp_23,r0:r0_21,r2:r2_19,r3:r3_15,r4:r4_14,sp:sp_13
	Mem26[sp_13 - 0x00000004:word32] = r4_14
	Mem28[sp_13 - 0x00000008:word32] = 0x0000000F
	call r3_15 + 2 (retsize: 4;)
		uses: ap:ap_17,fp:fp_23,r0:r0_21,r2:r2_19,r3:r3_15,r4:r4_14,sp:sp_13 - 0x00000008,Stack +FFFFFFF8:0x00000002,Stack +FFFFFFFC:r4
		defs: ap:ap_35,fp:fp_38,r0:r0_37,r2:r2_36,r3:r3_34,r4:r4_33,sp:sp_32
	Mem41[sp_32 - 0x00000004:word32] = r4_33
	Mem43[sp_32 - 0x00000008:word32] = 0x0000000A
	call r3_34 + 2 (retsize: 4;)
		uses: ap:ap_35,fp:fp_38,r0:r0_37,r2:r2_36,r3:r3_34,r4:r4_33,sp:sp_32 - 0x00000008,Stack +FFFFFFF8:0x00000002,Stack +FFFFFFFC:r4
		defs: ap:ap_50,fp:fp_53,r0:r0_52,r2:r2_51,r3:r3_49,r4:r4_48,sp:sp_47
	Mem56[sp_47 - 0x00000004:word32] = r4_48
	Mem58[sp_47 - 0x00000008:word32] = 0x0000000B
	call r3_49 + 2 (retsize: 4;)
		uses: ap:ap_50,fp:fp_53,r0:r0_52,r2:r2_51,r3:r3_49,r4:r4_48,sp:sp_47 - 0x00000008,Stack +FFFFFFF8:0x00000002,Stack +FFFFFFFC:r4
		defs: ap:ap_65,fp:fp_68,r2:r2_66,sp:sp_62
	r3_70 = 0x00000000
	branch Mem58[ap_65 + 4:word32] != 0x00000001 l00008081
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000807F:
	r3_74 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008081:
	r3_76 = PHI((r3_70, l0000802E), (r3_74, l0000807F))
	Mem79[r2_66 + 96:word32] = r3_76
	Mem84[sp_62 - 0x00000004:word32] = ap_65 + 8
	Mem87[sp_62 - 0x00000008:word32] = ap_65 + 4
	fn00008EC2(fp_68)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00008CCE(word32 r2, word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] r2:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn00008CCE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00008CCE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008CCE:
	branch Mem0[ap + 4:word32] == 0x00000000 l00008CF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008CF4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008CEC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008CF6:
	branch Mem0[r2:word32] != 0x00000000 l00008D00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008D00:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008CFD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008DAC:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00008EC2(word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn00008EC2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00008EC2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00008EC2:
	Mem6[fp + -280:word16] = 0x0000
	Mem8[fp + -278:byte] = 0x0E
	Mem10[fp + -277:byte] = 0x02
	Mem12[fp + -276:word32] = 0x00000000
	Mem14[fp + -288:word16] = 0x0000
	Mem16[fp + -286:byte] = 0x0E
	Mem18[fp + -285:byte] = 0x02
	Mem20[fp + -284:word32] = 0x00000000
	Mem22[fp + -296:word16] = 0x0000
	Mem24[fp + -294:byte] = 0x0E
	Mem26[fp + -293:byte] = 0x02
	Mem28[fp + -292:word32] = 0x00000000
	Mem30[fp + -304:word16] = 0x0000
	Mem32[fp + -302:byte] = 0x0E
	Mem34[fp + -301:byte] = 0x02
	Mem36[fp + -300:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00009A52()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn00009A52_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00009A52_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009A52:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00009B0A(word32 r0, word32 r1, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00009B0A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009B0A:
	word32 ap_20
	word32 fp_21
	word32 r10_23
	word32 r11_24
	word32 r2_25
	word32 r3_26
	word32 r4_27
	word32 r5_28
	word32 r6_29
	word32 r7_30
	word32 r8_31
	word32 r9_32
	word32 sp_33
	word32 r1_34
	word32 r0_22 = fn0000AA6A(r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, ap, fp, out r1_34, out r2_25, out r3_26, out r4_27, out r5_28, out r6_29, out r7_30, out r8_31, out r9_32, out r10_23, out r11_24, out ap_20, out fp_21, out sp_33)
	Mem40[ap_20 + 0x0001019C:word32] = r0_22
	branch r0_22 > 0x00000002 l00009B2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009B2A:
	branch Test(UGE,false) l00009B2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009B2C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009B38:
	word32 fp_50
	word32 r2_52
	word32 r3_53
	word32 r5_54
	word32 r0_51 = fn00009C8A(r3_26, r6_29, r7_30, fp_21, out r2_52, out r3_53, out r5_54, out fp_50)
	word32 fp_62 = Mem40[fp_50 + 0x0000000C:word32]
	word32 ap_63 = Mem40[fp_50 + 0x00000008:word32]
	r1Out = r1_34
	r2Out = r2_52
	r3Out = r3_53
	r4Out = r4_27
	r5Out = r5_54
	r6Out = r6_29
	r7Out = r7_30
	r8Out = r8_31
	r9Out = r9_32
	r10Out = r10_23
	r11Out = r11_24
	apOut = ap_63
	fpOut = fp_62
	return r0_51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009B22_1:
	word32 r0_65
	word32 ap_66
	word32 fp_67
	word32 r10_68
	word32 r8_69
	word32 r11_70
	word32 r2_71
	word32 r6_72
	word32 r9_73
	word32 r7_74
	word32 r5_75
	word32 r4_76
	word32 r1_77
	word32 r3_78
	call 0x00009B26 + r0_22 * 0x00000002 (retsize: 4;)
		uses: ap:ap_20,fp:fp_21,r0:r0_22,r1:r1_34,r10:r10_23,r11:r11_24,r2:r2_25,r3:r3_26,r4:r4_27,r5:r5_28,r6:r6_29,r7:r7_30,r8:r8_31,r9:r9_32,sp:sp_33
		defs: ap:ap_66,fp:fp_67,r0:r0_65,r1:r1_77,r10:r10_68,r11:r11_70,r2:r2_71,r3:r3_78,r4:r4_76,r5:r5_75,r6:r6_72,r7:r7_74,r8:r8_69,r9:r9_73
	r1Out = r1_77
	r2Out = r2_71
	r3Out = r3_78
	r4Out = r4_76
	r5Out = r5_75
	r6Out = r6_72
	r7Out = r7_74
	r8Out = r8_69
	r9Out = r9_73
	r10Out = r10_68
	r11Out = r11_70
	apOut = ap_66
	fpOut = fp_67
	return r0_65
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00009B0A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00009BAE()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn00009BAE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00009BAE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009BAE:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00009C8A(word32 r3, word32 r6, word32 r7, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r5Out, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp:[0..31] r3:[8..31] r6:[0..31] r7:[0..31]
// LiveOut: fp r0 r2 r3 r5
// Trashed: CVZN ap fp r0 r2 r3 r5 sp
// Preserved: r4
fn00009C8A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009C8A:
	word24 v8_6 = SLICE(r3, word24, 8)
	word32 r3_117 = SEQ(v8_6, 0x01)
	word32 r2_10 = Mem0[r7 + 1511:word32]
	branch (Mem0[r2_10 + 20:word32] & 0x00000008) != 0x00000000 l00009CB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CB1:
	branch Mem0[r7 + 12:word32] != 0x00000000 l00009CB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CB6:
	r3_117 = SEQ(v8_6, 0x00)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CB8:
	word32 r5_60
	int32 v16_26 = (int32) (int8) r3_117
	Mem29[r6 + 352:int32] = v16_26
	branch v16_26 != 0x00000000 l00009CC4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CBF:
	branch Mem29[r7 + 8:word32] != 0x00000000 l00009CC8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CC8:
	word32 r4_51
	branch Mem29[r7 + 8:word32] == 0x00000001 l00009CD4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CD4:
	r2_10 = (uint32) Mem29[Mem29[r7 + 1511:word32] + 0x00000014:ui1]
	r3_117 = 0x00000000
	branch r2_10 != 0x00000000 l00009CE7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CE5:
	r3_117 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CE7:
	r4_51 = r3_117
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CCE:
	r4_51 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CEA:
	r5_60 = r4_51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CC4:
	r5_60 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CED:
	Mem75[r6 + 356:word32] = r5_60
	Mem77[r6 + 360:byte] = 0x05
	branch Mem77[r7 + 12:word32] == 0x00000000 l00009CFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CFF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009CFC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00009FFD:
	Mem87[r6 + 0x00010170:word32] = r6 + 361
	Mem89[r6 + 0x0001016C:word32] = 0x00000000
	Mem91[r6 + 0x00010179:word32] = r6 + 361
	Mem93[r6 + 0x0001017D:word32] = 0x00000000
	Mem95[r6 + 0x00010175:word32] = r6 + 0x00010181
	Mem97[r6 + 0x00010185:word32] = r6 + 0x00008169
	Mem99[r6 + 0x00010189:word32] = 0x00000000
	Mem101[r6 + 0x00010181:word32] = r6 + 0x00010175
	Mem103[r6 + 0x00010190:word32] = r6 + 0x00010175
	branch Mem103[r6 + 352:word32] == 0x00000000 l0000A060
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A060:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A053:
	Mem112[r6 + 0x00010174:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A065:
	Mem122[r6 + 0x00010194:word32] = r3_117
	word32 fp_136 = Mem122[fp + 0x0000000C:word32]
	r2Out = r2_10
	r3Out = r3_117
	r5Out = r5_60
	fpOut = fp_136
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00009C8A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000A07A(word32 r0, word32 r3, word32 r6, word32 r7, word32 r8, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r3:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r2 r3 r6 r7 r8 sp
// Preserved:
fn0000A07A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A07A:
	Mem8[r6 + 352:word32] = Mem0[r7 + 12:word32]
	Mem11[r6 + 360:byte] = Mem8[Mem8[r6 + 308:word32] + 31:byte]
	branch Mem11[r7 + 12:word32] != 0x00000000 l0000A0AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0AD:
	word32 r2_16 = (uint32) Mem11[r6 + 360:byte]
	branch r2_16 != 0x00000002 l0000A0BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0BA:
	branch r2_16 != 0x00000005 l0000A0C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0C2:
	branch r2_16 != 0x00000006 l0000A0CA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0CA:
	branch r2_16 != 0x00000004 l0000A0D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0D2:
	word32 sp_44
	word32 r7_45
	word32 r6_46
	word32 r0_49
	word32 fp_51
	word32 ap_53
	word32 r8_54
	word32 r3_56
	call Mem40[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r2:r2_16,r3:r3,r6:r6,r7:r7,r8:r8,sp:fp + 0xFFFFFDEC,Stack +0004:r7 + 1515,Stack +0008:r8 + 399,Stack +000C:r7 + 0x0000C701,Stack +0010:0x00000001
		defs: ap:ap_53,fp:fp_51,r0:r0_49,r3:r3_56,r6:r6_46,r7:r7_45,r8:r8_54,sp:sp_44
	Mem59[sp_44 - 0x00000004:word32] = r0_49
	Mem62[sp_44 - 0x00000008:word32] = r7_45 + 1515
	Mem64[sp_44 - 0x0000000C:word32] = r7_45
	word32 r2_65 = Mem64[r7_45 + 0x0000C839:word32]
	word32 r2_116
	word32 r3_126
	word32 r6_115
	word32 sp_105
	word32 r7_113
	word32 r0_118
	word32 fp_120
	word32 ap_122
	word32 r8_124
	call r2_65 + 2 (retsize: 4;)
		uses: ap:ap_53,fp:fp_51,r0:r0_49,r2:r2_65,r3:r3_56,r6:r6_46,r7:r7_45,r8:r8_54,sp:sp_44 - 0x0000000C,Stack +FFFFFDF0:r7 + 1515,Stack +FFFFFDF4:r8 + 399,Stack +FFFFFDF8:r7 + 0x0000C701,Stack +FFFFFDFC:0x00000001
		defs: ap:ap_75,fp:fp_74,r0:r0_73,r2:r2_72,r3:r3_77,r6:r6_71,r7:r7_70,r8:r8_76,sp:sp_69
	branch Mem64[r6_115 + 320:word32] == 0x00000000 l0000A10C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A101:
	Mem85[sp_105 - 0x00000004:word32] = Mem64[r6_115 + 320:word32]
	call Mem85[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_75,fp:fp_74,r0:r0_73,r2:r2_72,r3:r3_77,r6:r6_71,r7:r7_70,r8:r8_76,sp:sp_69 - 0x00000004,Stack +FFFFFDF0:r7 + 1515,Stack +FFFFFDF4:r8 + 399,Stack +FFFFFDF8:r7 + 0x0000C701,Stack +FFFFFDFC:0x00000001
		defs: ap:ap_95,fp:fp_94,r0:r0_93,r2:r2_92,r3:r3_97,r6:r6_91,r7:r7_90,r8:r8_96,sp:sp_89
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A10C:
	branch Mem100[r6_115 + 328:word32] == 0x00000000 l0000A11D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A112:
	word32 sp_106 = sp_105 - 0x00000004
	Mem108[sp_106:word32] = Mem100[r6_115 + 328:word32]
	call Mem108[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_122,fp:fp_120,r0:r0_118,r2:r2_116,r3:r3_126,r6:r6_99,r7:r7_113,r8:r8_124,sp:sp_106,Stack +FFFFFDF0:r7 + 1515,Stack +FFFFFDF4:r8 + 399,Stack +FFFFFDF8:r7 + 0x0000C701,Stack +FFFFFDFC:0x00000001
		defs: ap:ap_123,fp:fp_121,r0:r0_119,r2:r2_117,r3:r3_127,r6:r6_115,r7:r7_114,r8:r8_125,sp:sp_112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A11D:
	branch Mem130[r6_115 + 324:word32] == 0x00000000 l0000A12E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A123:
	word32 sp_136 = sp_105 - 0x00000004
	Mem138[sp_136:word32] = Mem130[r6_115 + 324:word32]
	call Mem138[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_152,fp:fp_150,r0:r0_148,r2:r2_146,r3:r3_156,r6:r6_129,r7:r7_143,r8:r8_154,sp:sp_136,Stack +FFFFFDF0:r7 + 1515,Stack +FFFFFDF4:r8 + 399,Stack +FFFFFDF8:r7 + 0x0000C701,Stack +FFFFFDFC:0x00000001
		defs: ap:ap_153,fp:fp_151,r0:r0_149,r2:r2_147,r3:r3_157,r6:r6_145,r7:r7_144,r8:r8_155,sp:sp_142
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A12E:
	branch Mem160[r6_115 + 316:word32] == 0x00000000 l0000A13F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A134:
	word32 sp_166 = sp_105 - 0x00000004
	Mem168[sp_166:word32] = Mem160[r6_115 + 316:word32]
	call Mem168[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_182,fp:fp_180,r0:r0_178,r2:r2_176,r3:r3_186,r6:r6_159,r7:r7_173,r8:r8_184,sp:sp_166,Stack +FFFFFDF0:r7 + 1515,Stack +FFFFFDF4:r8 + 399,Stack +FFFFFDF8:r7 + 0x0000C701,Stack +FFFFFDFC:0x00000001
		defs: ap:ap_183,fp:fp_181,r0:r0_179,r6:r6_175,r7:r7_174,r8:r8_185,sp:sp_172
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A13F:
	branch Mem190[r6_115 + 340:word32] == 0x00000000 l0000A161
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A145:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A148:
	word32 r2_201 = Mem200[r6_115 + 340:word32]
	word32 r3_202 = Mem200[r2_201 + 4:word32]
	word32 sp_204 = sp_105 - 0x00000004
	Mem205[sp_204:word32] = r2_201
	word32 r3_222
	call Mem205[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_218,fp:fp_216,r0:r0_214,r2:r2_201,r3:r3_202,r6:r6_199,r7:r7_210,r8:r8_220,sp:sp_204,Stack +FFFFFDF0:r7 + 1515,Stack +FFFFFDF4:r8 + 399,Stack +FFFFFDF8:r7 + 0x0000C701,Stack +FFFFFDFC:0x00000001
		defs: ap:ap_219,fp:fp_217,r0:r0_215,r3:r3_222,r6:r6_212,r7:r7_211,r8:r8_221,sp:sp_209
	Mem225[r6_115 + 340:word32] = r3_222
	branch r3_222 != 0x00000000 l0000A148
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A161:
	word32 r3_232 = Mem231[r6_115 + 308:word32]
	branch r3_232 == 0x00000000 l0000A179
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A168:
	branch r3_232 == r6_115 l0000A179
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A170:
	word32 sp_243 = sp_105 - 0x00000004
	Mem244[sp_243:word32] = r3_232
	call Mem244[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_259,fp:fp_256,r0:r0_254,r2:r6_230,r3:r3_232,r6:r6_230,r7:r7_249,r8:r8_262,sp:sp_243,Stack +FFFFFDF0:r7 + 1515,Stack +FFFFFDF4:r8 + 399,Stack +FFFFFDF8:r7 + 0x0000C701,Stack +FFFFFDFC:0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A179:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0CF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0C7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0BF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0B7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A4F9:
	Mem278[r6 + 0x00010170:word32] = r6 + 361
	Mem280[r6 + 0x0001016C:word32] = 0x00000000
	Mem282[r6 + 0x00010179:word32] = r6 + 361
	Mem284[r6 + 0x0001017D:word32] = 0x00000000
	Mem286[r6 + 0x00010175:word32] = r6 + 0x00010181
	Mem288[r6 + 0x00010185:word32] = r6 + 0x00008169
	Mem290[r6 + 0x00010189:word32] = 0x00000000
	Mem292[r6 + 0x00010181:word32] = r6 + 0x00010175
	Mem294[r6 + 0x00010190:word32] = r6 + 0x00010175
	branch Mem294[r6 + 352:word32] == 0x00000000 l0000A598
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A598:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A54F:
	word32 r0_308 = (uint32) Mem294[r6 + 360:byte]
	branch r0_308 > 0x00000006 l0000A560
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A560:
	vax_addp4(0x0000, 0x11, 0x0028, 0x17)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A554_1:
	call 0x0000A558 + (r0_308 - 0x00000002) * 0x00000002 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0_308,r2:r2_16,r3:r3,r6:r6,r7:r7,r8:r8,sp:fp + -516,Stack +0000:dwLoc0208,Stack +FFFFFFF4:dwLoc0214,Stack +FFFFFFF8:dwLoc0210,Stack +FFFFFFFC:dwLoc020C
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000A07A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A0AA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A17D:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000A5B2(word32 r0, word32 r2, word32 r5, word32 r6, word32 r7, word32 r8, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r2:[8..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r2 r3 r5 r6 r7 r8 sp
// Preserved:
fn0000A5B2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A5B2:
	branch Mem0[r7 + 12:word32] != 0x00000000 l0000A5D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A5D2:
	word32 r2_14 = SEQ(SLICE(r2, word24, 8), Mem0[r6 + 0x000102F4:byte] & ~0xF0)
	word32 r3_15 = (uint32) (byte) r2_14
	branch r3_15 == 0x00000002 l0000A61F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A5E3:
	branch r3_15 == 0x00000005 l0000A61F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A5E8:
	branch r3_15 == 0x00000006 l0000A61F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A5ED:
	branch r3_15 == 0x00000004 l0000A61F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A61F:
	Mem30[r6 + 0x00010170:word32] = r6 + 361
	Mem32[r6 + 0x0001016C:word32] = 0x00000000
	Mem34[r6 + 0x00010179:word32] = r6 + 361
	Mem36[r6 + 0x0001017D:word32] = 0x00000000
	Mem38[r6 + 0x00010175:word32] = r6 + 0x00010181
	Mem40[r6 + 0x00010185:word32] = r6 + 0x00008169
	Mem42[r6 + 0x00010189:word32] = 0x00000000
	Mem44[r6 + 0x00010181:word32] = r6 + 0x00010175
	Mem46[r6 + 0x00010190:word32] = r6 + 0x00010175
	branch r3_15 > 0x00000006 l0000A67E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A67E:
	vax_subp4(0x0000, 0x11, 0x002A, Mem46[Mem46[r5 + 5968:word32]:ptr32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A672_1:
	call 0x0000A676 + (r3_15 - 0x00000002) * 0x00000002 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r3_15,r2:r2_14,r3:r3_15,r5:r5,r6:r6,r7:r7,r8:r8,sp:fp - 0x00000004,Stack +0000:dwLoc08,Stack +FFFFFFF4:dwLoc14,Stack +FFFFFFF8:dwLoc10,Stack +FFFFFFFC:dwLoc0C
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A5F2:
	word32 sp_91
	word32 r7_92
	word32 r6_93
	word32 r3_95
	word32 r8_96
	word32 r0_98
	word32 fp_99
	word32 ap_100
	word32 r5_101
	call Mem87[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r2:r2_14,r3:r3_15,r5:r5,r6:r6,r7:r7,r8:r8,sp:fp - 0x00000014,Stack +0004:r7 + 1515,Stack +0008:r8 + 556,Stack +000C:r7 + 0x0000C701,Stack +0010:0x00000001
		defs: ap:ap_100,fp:fp_99,r0:r0_98,r3:r3_95,r5:r5_101,r6:r6_93,r7:r7_92,r8:r8_96,sp:sp_91
	Mem104[sp_91 - 0x00000004:word32] = r0_98
	Mem107[sp_91 - 0x00000008:word32] = r7_92 + 1515
	Mem109[sp_91 - 0x0000000C:word32] = r7_92
	word32 r2_110 = Mem109[r7_92 + 0x0000C839:word32]
	call r2_110 + 2 (retsize: 4;)
		uses: ap:ap_100,fp:fp_99,r0:r0_98,r2:r2_110,r3:r3_95,r5:r5_101,r6:r6_93,r7:r7_92,r8:r8_96,sp:sp_91 - 0x0000000C,Stack +FFFFFFF0:r7 + 1515,Stack +FFFFFFF4:r8 + 556,Stack +FFFFFFF8:r7 + 0x0000C701,Stack +FFFFFFFC:0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000A5B2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A5CF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A6C4:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000A8D6(word32 r0, word32 r2, word32 r3, word32 r6, word32 r7, word32 r9, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp:[0..31] r0:[0..31] r2:[0..31] r3:[0..31] r6:[0..31] r7:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CVZN fp r0 r10 r2 r3 r6 r7 r8 r9
// Preserved: sp
fn0000A8D6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A8D6:
	word32 sp_102 = fp + -112
	word32 r10_103 = Mem0[0x0001934C:word32]
	word32 r8_104 = Mem0[0x00019350:word32]
	branch Mem0[r9 + 348:byte] == 0x00 l0000A906
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A906:
	r3 = Mem0[0x00019298:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A910:
	word32 sp_18 = sp_102 - 0x00000004
	Mem19[sp_18:word32] = 0x00000001
	Mem23[sp_18 - 0x00000004:word32] = r7 + 0x0000C701
	Mem27[sp_18 - 0x00000008:word32] = r6 + 718
	Mem30[sp_18 - 0x0000000C:word32] = r7 + 1515
	word32 sp_34
	word32 r10_36
	word32 r8_38
	word32 r9_40
	word32 r3_42
	word32 r0_44
	word32 r7_45
	word32 r6_46
	word32 fp_50
	call Mem30[0x000192D0:word32] + 2 (retsize: 4;)
		uses: fp:fp_49,r0:r0_43,r10:r10_35,r2:r2_47,r3:r3_41,r6:r6_25,r7:r7_21,r8:r8_37,r9:r9_39,sp:sp_18 - 0x0000000C
		defs: fp:fp_50,r0:r0_44,r10:r10_36,r3:r3_42,r6:r6_46,r7:r7_45,r8:r8_38,r9:r9_40,sp:sp_34
	Mem53[sp_34 - 0x00000004:word32] = r0_44
	Mem56[sp_34 - 0x00000008:word32] = r7_45 + 1515
	Mem58[sp_34 - 0x0000000C:word32] = r7_45
	word32 r2_59 = Mem58[r7_45 + 0x0000C839:word32]
	word32 sp_63
	word32 r10_64
	word32 r8_65
	word32 r9_66
	word32 r3_67
	word32 r0_68
	word32 r7_69
	word32 r6_70
	word32 r2_71
	word32 fp_72
	call r2_59 + 2 (retsize: 4;)
		uses: fp:fp_50,r0:r0_44,r10:r10_36,r2:r2_59,r3:r3_42,r6:r6_46,r7:r7_45,r8:r8_38,r9:r9_40,sp:sp_34 - 0x0000000C
		defs: fp:fp_72,r0:r0_68,r10:r10_64,r2:r2_71,r3:r3_67,r6:r6_70,r7:r7_69,r8:r8_65,r9:r9_66,sp:sp_63
	Mem76[sp_63 - 0x00000004:word32] = Mem58[r8_65:word32]
	word32 sp_80
	word32 r10_81
	word32 r8_82
	word32 r9_83
	word32 r3_84
	word32 r0_85
	word32 r7_86
	word32 r6_87
	word32 r2_88
	word32 fp_89
	call Mem76[0x00019294:word32] + 2 (retsize: 4;)
		uses: fp:fp_72,r0:r0_68,r10:r10_64,r2:r2_71,r3:r3_67,r6:r6_70,r7:r7_69,r8:r8_65,r9:r9_66,sp:sp_63 - 0x00000004
		defs: fp:fp_89,r0:r0_85,r10:r10_81,r2:r2_88,r3:r3_84,r6:r6_87,r7:r7_86,r8:r8_82,r9:r9_83,sp:sp_80
	Mem93[sp_80 - 0x00000004:word32] = Mem76[r8_82:word32]
	Mem95[sp_80 - 0x00000008:word32] = 0x00000009
	Mem98[sp_80 - 0x0000000C:word32] = fp_89 + -14
	call Mem98[0x00019290:word32] + 2 (retsize: 4;)
		uses: fp:fp_89,r0:r0_85,r10:r10_81,r2:r2_88,r3:r3_84,r6:r6_87,r7:r7_86,r8:r8_82,r9:r9_83,sp:sp_80 - 0x0000000C
		defs: fp:fp_111,r0:r0_107,r10:r10_103,r2:r2_110,r3:r3_106,r6:r6_109,r7:r7_108,r8:r8_104,r9:r9_105,sp:sp_102
	branch r0 != 0x00000000 l0000A998
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A954:
	word32 r2_120 = (int32) (int8) SEQ(SLICE(r2, word24, 8), Mem98[fp + -14:byte] & ~0x80)
	byte v26_121 = Mem98[r10_103 + r2_120:byte] & ~0xFC
	r2 = SEQ(SLICE(r2_120, word24, 8), v26_121)
	branch v26_121 != 0x00 l0000A998
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A965:
	Mem130[sp_102 - 0x00000004:int32] = (int32) Mem98[fp + -14:int8]
	call r3 + 2 (retsize: 4;)
		uses: fp:fp_111,r0:r0_107,r10:r10_103,r2:r2_123,r3:r3_106,r6:r6_109,r7:r7_108,r8:r8_104,r9:r9_105,sp:sp_102 - 0x00000004
		defs: fp:fp_142,r0:r0_138,r10:r10_134,r2:r2_141,r3:r3_137,r6:r6_140,r7:r7_139,r8:r8_135,r9:r9_136,sp:sp_133
	branch r0 == 0x0000006F l0000A998
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A975:
	Mem149[sp_102 - 0x00000004:int32] = (int32) Mem130[fp + -14:int8]
	call r3 + 2 (retsize: 4;)
		uses: fp:fp_142,r0:r0_138,r10:r10_134,r2:r2_141,r3:r3_137,r6:r6_140,r7:r7_139,r8:r8_135,r9:r9_136,sp:sp_133 - 0x00000004
		defs: fp:fp_161,r0:r0_157,r10:r10_153,r2:r2_160,r3:r3_156,r6:r6_159,r7:r7_158,r8:r8_154,r9:r9_155,sp:sp_152
	branch r0 == 0x00000076 l0000A998
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A985:
	Mem168[sp_102 - 0x00000004:int32] = (int32) Mem149[fp + -14:int8]
	call r3 + 2 (retsize: 4;)
		uses: fp:fp_161,r0:r0_157,r10:r10_153,r2:r2_160,r3:r3_156,r6:r6_159,r7:r7_158,r8:r8_154,r9:r9_155,sp:sp_152 - 0x00000004
		defs: fp:fp_180,r0:r0_176,r10:r10_172,r2:r2_179,r3:r3_175,r6:r6_178,r7:r7_177,r8:r8_173,r9:r9_174,sp:sp_171
	branch r0 == 0x0000006E l0000A998
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A998:
	r2 = (int32) (int8) SEQ(SLICE(r2, word24, 8), Mem186[fp + -14:byte] & ~0x80)
	branch (Mem186[r10_103 + r2 * 4:word32] & 0x00000001) == 0x00000000 l0000A9C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A9A6:
	word32 sp_196 = sp_102 - 0x00000004
	Mem198[sp_196:int32] = (int32) Mem186[fp + -14:int8]
	word32 r0_210
	call Mem198[0x00019298:word32] + 2 (retsize: 4;)
		uses: fp:fp_185,r0:r0_209,r10:r10_194,r2:r2_191,r3:r3_207,r6:r6_213,r7:r7_211,r8:r8_203,r9:r9_205,sp:sp_196
		defs: fp:fp_216,r0:r0_210,r10:r10_202,r2:r2_215,r3:r3_208,r6:r6_214,r7:r7_212,r8:r8_204,r9:r9_206,sp:sp_201
	Mem219[fp + -14:int8] = (int8) r0_210
	Mem221[r9 + 348:byte] = (byte) r0_210
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A995:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A903:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A9BC:
	Mem227[fp + -14:byte] = Mem0[r9 + 348:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A9C2:
	word32 r0_233 = (int32) Mem232[fp + -14:int8]
	branch r0_233 > 0x00000076 l0000A9DE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A9DE:
	vax_subp4(0x0000, 0x31, Mem232[r0_233:word16], 0x00)
	call fn40009A48 (retsize: 4;)
		uses: fp:fp_231,r0:r0_233 + 0x00000002,r10:r10_243,r2:r2_259,r3:r3_249,r6:r6_256,r7:r7_253,r8:r8_245,r9:r9_247,sp:sp_241
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000A9C6_1:
	call 0x0000A9CE + (r0_233 - 0x0000006E) * 0x00000002 (retsize: 4;)
		uses: fp:fp_231,r0:r0_233,r10:r10_243,r2:r2_259,r3:r3_249,r6:r6_256,r7:r7_253,r8:r8_245,r9:r9_247,sp:sp_241
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000A8D6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000AA6A(word32 r0, word32 r1, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000AA6A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AA6A:
	word32 v8_6 = Mem0[r10 + 0x0000C627:word32]
	Mem12[r8 + 308:word32] = 0x00000000
	Mem14[r8 + 316:word64] = 0x0000000000000000
	Mem16[r8 + 324:word64] = 0x0000000000000000
	Mem18[r8 + 340:word64] = 0x0000000000000000
	word32 sp_118 = fp - 0x00000018
	branch v8_6 != 0x00000000 l0000AAA5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AAA5:
	uint32 v20_23 = (uint32) Mem18[r10 + 0x0000C656:word16]
	branch v20_23 > 0x00000000 l0000AAB2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AAB2:
	word32 v21_28 = Mem24[0x000192D0:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AABC:
	Mem36[sp_118 + 16:word32] = Mem34[sp_118 + 8:word32]
	branch Mem36[Mem36[sp_118 + 16:word32]:word16] == Mem36[r11 + 831:word16] l0000AACC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AACC:
	Mem42[sp_118 + 4:word32] = 0x00000001
	r3 = Mem42[sp_118 + 16:word32]
	r5 = r3 + 4
	r4 = Mem42[r3 + 4:word32]
	branch r4 != Mem42[r11 + 834:word32] l0000AB00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB00:
	branch r4 != Mem42[r11 + 839:word32] l0000AB4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB4C:
	branch r4 != Mem42[r11 + 844:word32] l0000AB98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB98:
	branch r4 != Mem42[r11 + 849:word32] l0000ABC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ABC0:
	branch r4 != Mem42[r11 + 854:word32] l0000ABE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ABE8:
	branch r4 != Mem42[r11 + 859:word32] l0000AC10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AC10:
	branch r4 != Mem42[r11 + 864:word32] l0000AC38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AC38:
	branch r4 != Mem42[r11 + 869:word32] l0000AC42
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AC42:
	word32 sp_70 = sp_118 - 0x00000004
	Mem71[sp_70:word32] = 0x00000001
	Mem73[sp_70 - 0x00000004:word32] = r3 + 4
	Mem76[sp_70 - 0x00000008:word32] = r11 + 874
	Mem80[sp_70 - 0x0000000C:word32] = r10 + 1515
	word32 sp_84
	word32 r10_85
	word32 r8_87
	word32 r0_89
	word32 fp_91
	word32 ap_93
	word32 r11_94
	word32 r3_97
	word32 r6_99
	word32 r9_101
	word32 r7_103
	word32 r5_104
	word32 r4_105
	word32 r1_750
	call fn00000003 (retsize: 4;)
		uses: ap:ap_92,fp:fp_90,r0:r0_88,r1:r1_438,r10:r10_78,r11:r11_37,r2:r2_95,r3:r3_43,r4:r4_45,r5:r3_43 + 4,r6:r6_98,r7:r7_102,r8:r8_86,r9:r9_100,sp:sp_70 - 0x0000000C,Stack +FFFFFFEC:v21_28,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:v8_6,Stack +FFFFFFF8:v20_23
		defs: ap:ap_93,fp:fp_91,r0:r0_89,r1:r1_750,r10:r10_85,r11:r11_94,r3:r3_97,r4:r4_105,r5:r5_104,r6:r6_99,r7:r7_103,r8:r8_87,r9:r9_101,sp:sp_84
	Mem108[sp_84 - 0x00000004:word32] = r0_89
	Mem111[sp_84 - 0x00000008:word32] = r10_85 + 1515
	Mem113[sp_84 - 0x0000000C:word32] = r10_85
	word32 r2_114 = Mem113[r10_85 + 0x0000C839:word32]
	call r2_114 + 2 (retsize: 4;)
		uses: ap:ap_93,fp:fp_91,r0:r0_89,r1:r1_750,r10:r10_85,r11:r11_94,r2:r2_114,r3:r3_97,r4:r4_105,r5:r5_104,r6:r6_99,r7:r7_103,r8:r8_87,r9:r9_101,sp:sp_84 - 0x0000000C,Stack +FFFFFFEC:v21_28,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:v8_6,Stack +FFFFFFF8:v20_23
		defs: ap:ap_123,fp:fp_122,r0:r0_121,r10:r10_119,r11:r11_124,r3:r3_126,r4:r4_131,r5:r5_130,r6:r6_127,r7:r7_129,r8:r8_120,r9:r9_128,sp:sp_118
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AC3F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AC17:
	word32 sp_133 = sp_118 - 0x00000004
	Mem135[sp_133:uint32] = (uint32) Mem42[Mem42[0x0001936C:word32]:byte]
	Mem138[sp_133 - 0x00000004:word32] = Mem135[0x000192F4:word32]
	Mem140[sp_133 - 0x00000008:word32] = 0x00000000
	Mem142[sp_133 - 0x0000000C:word32] = r3
	r0 = fn0000AEF2(r3, ap, fp, out r1, out r3, out r4, out r5, out r6, out ap, out fp, out sp_118)
	Mem161[r8 + 328:word32] = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ABEF:
	word32 sp_165 = sp_118 - 0x00000004
	Mem167[sp_165:uint32] = (uint32) Mem42[Mem42[0x00019368:word32]:byte]
	Mem170[sp_165 - 0x00000004:word32] = Mem167[0x000192F0:word32]
	Mem172[sp_165 - 0x00000008:word32] = 0x00000000
	Mem174[sp_165 - 0x0000000C:word32] = r3
	r0 = fn0000AEF2(r3, ap, fp, out r1, out r3, out r4, out r5, out r6, out ap, out fp, out sp_118)
	Mem193[r8 + 324:word32] = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ABC7:
	word32 sp_197 = sp_118 - 0x00000004
	Mem199[sp_197:uint32] = (uint32) Mem42[Mem42[0x00019364:word32]:byte]
	Mem202[sp_197 - 0x00000004:word32] = Mem199[0x00019300:word32]
	Mem204[sp_197 - 0x00000008:word32] = 0x00000000
	Mem206[sp_197 - 0x0000000C:word32] = r3
	r0 = fn0000AEF2(r3, ap, fp, out r1, out r3, out r4, out r5, out r6, out ap, out fp, out sp_118)
	Mem225[r8 + 320:word32] = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB9F:
	word32 sp_229 = sp_118 - 0x00000004
	Mem231[sp_229:uint32] = (uint32) Mem42[Mem42[0x00019360:word32]:byte]
	Mem234[sp_229 - 0x00000004:word32] = Mem231[0x000192FC:word32]
	Mem236[sp_229 - 0x00000008:word32] = 0x00000000
	Mem238[sp_229 - 0x0000000C:word32] = r3
	r0 = fn0000AEF2(r3, ap, fp, out r1, out r3, out r4, out r5, out r6, out ap, out fp, out sp_118)
	Mem257[r8 + 316:word32] = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB53:
	word32 sp_261 = sp_118 - 0x00000004
	Mem263[sp_261:uint32] = (uint32) Mem42[Mem42[0x0001935C:word32]:byte]
	Mem266[sp_261 - 0x00000004:word32] = Mem263[0x000192F8:word32]
	Mem268[sp_261 - 0x00000008:word32] = 0x00000000
	Mem270[sp_261 - 0x0000000C:word32] = r3
	r0 = fn0000AEF2(r3, ap, fp, out r1, out r3, out r4, out r5, out r6, out ap, out fp, out sp_118)
	Mem289[r8 + 332:word32] = r0
	branch Mem289[r8 + 340:word32] != 0x00000000 l0000AB7B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB74:
	Mem295[r8 + 340:word32] = Mem289[r8 + 332:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB7B:
	word32 r2_301 = Mem300[r8 + 344:word32]
	branch r2_301 == 0x00000000 l0000AB88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB82:
	Mem307[r2_301 + 4:word32] = Mem300[r8 + 332:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB88:
	word32 r2_313 = Mem312[r8 + 332:word32]
	Mem315[r8 + 344:word32] = r2_313
	Mem317[r2_313 + 4:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB07:
	word32 sp_322 = sp_118 - 0x00000004
	Mem324[sp_322:uint32] = (uint32) Mem42[Mem42[0x00019358:word32]:byte]
	Mem327[sp_322 - 0x00000004:word32] = Mem324[0x00019304:word32]
	Mem329[sp_322 - 0x00000008:word32] = 0x00000000
	Mem331[sp_322 - 0x0000000C:word32] = r3
	r0 = fn0000AEF2(r3, ap, fp, out r1, out r3, out r4, out r5, out r6, out ap, out fp, out sp_118)
	Mem350[r8 + 336:word32] = r0
	branch Mem350[r8 + 340:word32] != 0x00000000 l0000AB2F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB28:
	Mem356[r8 + 340:word32] = Mem350[r8 + 336:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB2F:
	word32 r2_362 = Mem361[r8 + 344:word32]
	branch r2_362 == 0x00000000 l0000AB3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB36:
	Mem368[r2_362 + 4:word32] = Mem361[r8 + 336:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AB3C:
	word32 r2_374 = Mem373[r8 + 336:word32]
	Mem376[r8 + 344:word32] = r2_374
	Mem378[r2_374 + 4:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AAE2:
	word32 sp_383 = sp_118 - 0x00000004
	Mem385[sp_383:uint32] = (uint32) Mem42[Mem42[0x00019354:word32]:byte]
	Mem388[sp_383 - 0x00000004:word32] = Mem385[0x0001930C:word32]
	Mem390[sp_383 - 0x00000008:word32] = 0x00000000
	Mem392[sp_383 - 0x0000000C:word32] = r3
	r0 = fn0000AEF2(r3, ap, fp, out r1, out r3, out r4, out r5, out r6, out ap, out fp, out sp_118)
	Mem411[r8 + 308:word32] = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AAC9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AC68:
	branch (uint32) Mem36[Mem36[sp_118 + 16:word32]:word16] == 0x0000000C l0000AC74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AC74:
	Mem420[sp_118 + 4:word32] = 0x00000002
	word32 r3_421 = Mem420[sp_118 + 16:word32]
	word32 r2_422 = (uint32) Mem420[r3_421 + 2:word16]
	Mem426[r8 + 0x000102EC:word32] = 0x00000000
	word32 sp_427 = sp_118 - 0x00000004
	Mem428[sp_427:word32] = r2_422 - 0x00000004
	Mem430[sp_427 - 0x00000004:word32] = r3_421 + 8
	Mem432[sp_427 - 0x00000008:word32] = 0x00000000
	word32 r2_443
	r0 = fn0000CFBA(r0, r1, r4, r5, r3_421 + 8, r2_422 - 0x00000004, fp, out r1, out r2_443, out r3, out r4, out r5, out r6, out ap, out fp, out sp_118)
	branch Mem432[r3 + 4:word32] == r0 l0000ACC6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ACA1:
	Mem457[sp_118 - 0x00000004:word32] = 0x00000001
	Mem460[sp_118 - 0x00000008:word32] = r11 + 915
	Mem463[sp_118 - 0x0000000C:word32] = r10 + 1515
	word32 sp_467
	word32 r10_468
	word32 r8_469
	word32 r0_470
	word32 fp_471
	word32 ap_472
	word32 r11_473
	word32 r3_475
	word32 r6_476
	word32 r9_477
	word32 r7_478
	word32 r5_479
	word32 r4_480
	word32 r1_481
	call fn00000003 (retsize: 4;)
		uses: ap:ap_439,fp:fp_440,r0:r0_441,r1:r1_442,r10:r10_78,r11:r11_37,r2:r2_443,r3:r3_444,r4:r4_445,r5:r5_446,r6:r6_447,r7:r7_102,r8:r8_86,r9:r9_100,sp:sp_448 - 0x0000000C,Stack +FFFFFFEC:v21_28,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:v8_6,Stack +FFFFFFF8:v20_23
		defs: ap:ap_472,fp:fp_471,r0:r0_470,r1:r1_481,r10:r10_468,r11:r11_473,r3:r3_475,r4:r4_480,r5:r5_479,r6:r6_476,r7:r7_478,r8:r8_469,r9:r9_477,sp:sp_467
	Mem484[sp_467 - 0x00000004:word32] = r0_470
	Mem487[sp_467 - 0x00000008:word32] = r10_468 + 1515
	Mem489[sp_467 - 0x0000000C:word32] = r10_468
	word32 r2_490 = Mem489[r10_468 + 0x0000C839:word32]
	call r2_490 + 2 (retsize: 4;)
		uses: ap:ap_472,fp:fp_471,r0:r0_470,r1:r1_481,r10:r10_468,r11:r11_473,r2:r2_490,r3:r3_475,r4:r4_480,r5:r5_479,r6:r6_476,r7:r7_478,r8:r8_469,r9:r9_477,sp:sp_467 - 0x0000000C,Stack +FFFFFFEC:v21_28,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:v8_6,Stack +FFFFFFF8:v20_23
		defs: fp:fp_498,r0:r0_497,r1:r1_508,r10:r10_495,r11:r11_500,r2:r2_501,r3:r3_502,r4:r4_507,r5:r5_506,r6:r6_503,r7:r7_505,r8:r8_496,r9:r9_504,sp:sp_494
	Mem512[sp_118 + 4:word32] = 0x00000000
	ap = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ACC6:
	branch ap > 0x00000004 l0000ACCE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ACCE:
	word32 r0_525 = (uint32) Mem524[r6:word16]
	branch r0_525 > 0x0000001F l0000AD14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AD14:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ACD8_1:
	word32 r10_533
	word32 r8_535
	word32 r0_536
	word32 fp_538
	word32 ap_539
	word32 r11_541
	word32 r2_543
	word32 r3_545
	word32 r6_546
	word32 r9_547
	word32 r7_548
	word32 r5_550
	word32 r4_552
	word32 r1_554
	call 0x0000ACDC + (r0_525 - 0x00000003) * 0x00000002 (retsize: 4;)
		uses: ap:ap_517,fp:fp_537,r0:r0_525,r1:r1_553,r10:r10_532,r11:r11_540,r2:r2_542,r3:r3_544,r4:r4_551,r5:r5_549,r6:r6_522,r7:r6_522,r8:r8_534,r9:0x00000000,sp:sp_530,Stack +FFFFFFEC:v21_28,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:v8_6,Stack +FFFFFFF8:v20_23
		defs: ap:ap_539,fp:fp_538,r0:r0_536,r1:r1_554,r10:r10_533,r11:r11_541,r2:r2_543,r3:r3_545,r4:r4_552,r5:r5_550,r6:r6_546,r7:r7_548,r8:r8_535,r9:r9_547
	r1Out = r1_554
	r2Out = r2_543
	r3Out = r3_545
	r4Out = r4_552
	r5Out = r5_550
	r6Out = r6_546
	r7Out = r7_548
	r8Out = r8_535
	r9Out = r9_547
	r10Out = r10_533
	r11Out = r11_541
	apOut = ap_539
	fpOut = fp_538
	spOut = fp
	return r0_536
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ACCB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ADA1:
	Mem559[r8 + 0x0001024C + (Mem524[r8 + 0x000102EC:word32] << 3):word16] = 0x0000
	Mem563[r8 + 0x0001024E + (Mem559[r8 + 0x000102EC:word32] << 3):word16] = 0x0000
	Mem567[r8 + 0x00010250 + (Mem563[r8 + 0x000102EC:word32] << 3):word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AC71:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ADD7:
	word32 r2_579 = (uint32) Mem577[Mem577[sp_118 + 16:word32] + 2:word16]
	Mem582[sp_118 + 12:word32] = Mem577[sp_118 + 12:word32] - (r2_579 + 0x00000004)
	Mem584[sp_118 + 8:word32] = Mem582[sp_118 + 8:word32] + (r2_579 + 0x00000004)
	r2 = r2_579 + 0x00000004
	branch Mem584[sp_118 + 12:word32] <= 0x00000000 l0000ADF2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ADEF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AAAF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ADF2:
	branch Mem589[sp_118 + 4:word32] != 0x00000001 l0000AE5F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ADF8:
	r2 = Mem589[r8 + 308:word32]
	branch r2 == 0x00000000 l0000AE5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AE5C:
	Mem601[sp_118 + 4:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000ADFF:
	Mem607[r2 + 36:word32] = 0x00000000
	word32 r3_608 = Mem607[r8 + 316:word32]
	branch r3_608 == 0x00000000 l0000AE1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AE09:
	Mem615[r3_608 + 4:word32] = Mem607[Mem607[r8 + 308:word32] + 36:word32]
	r2 = Mem615[r8 + 308:word32]
	Mem618[r2 + 36:word32] = Mem615[r8 + 316:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AE1E:
	r3 = Mem623[r8 + 320:word32]
	branch r3 == 0x00000000 l0000AE3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AE25:
	Mem631[r3 + 4:word32] = Mem623[Mem623[r8 + 308:word32] + 36:word32]
	r2 = Mem631[r8 + 308:word32]
	Mem634[r2 + 36:word32] = Mem631[r8 + 320:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AE3A:
	branch Mem639[r8 + 340:word32] == 0x00000000 l0000AE5F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AE40:
	r3 = Mem639[r8 + 344:word32]
	Mem647[r3 + 4:word32] = Mem639[Mem639[r8 + 308:word32] + 36:word32]
	r2 = Mem647[r8 + 308:word32]
	Mem650[r2 + 36:word32] = Mem647[r8 + 340:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AE5F:
	word32 sp_672 = fp - 0x00000004
	word32 r0_658 = Mem657[sp_118 + 4:word32]
	word32 fp_673 = Mem657[sp_672 + 0x00000010:word32]
	word32 ap_674 = Mem657[sp_672 + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	apOut = ap_674
	fpOut = fp_673
	spOut = sp_672
	return r0_658
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AAA2:
	word32 fp_681 = Mem18[fp + 0x0000000C:word32]
	word32 ap_682 = Mem18[fp + 0x00000008:word32]
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	apOut = ap_682
	fpOut = fp_681
	spOut = fp - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000AA6A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000AEF2(word32 r3, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r3:[0..31]
// LiveOut: ap fp r0 r1 r3 r4 r5 r6 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn0000AEF2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AEF2:
	word32 r2_15
	word32 r1_6 = Mem0[ap + 4:word32]
	word32 r6_8 = (uint32) Mem0[r1_6 + 8:word16] & ~0xFFFFFFF8
	word32 r5_9 = (uint32) Mem0[r1_6 + 2:word16]
	branch r6_8 != 0x00000000 l0000AF18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF18:
	r2_15 = (uint32) Mem0[r1_6 + 10:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF10:
	r2_15 = r5_9 - 0x0000000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF1C:
	branch Mem0[ap + 16:word32] != 0x00000000 l0000AF28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF24:
	Mem32[ap + 16:word32] = r2_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF28:
	word32 r0_38 = Mem37[ap + 8:word32]
	branch r0_38 == 0x00000000 l0000AF31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF2E:
	Mem45[r0_38:word32] = r2_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF31:
	word32 r2_56
	word32 r0_51 = Mem50[ap + 16:word32]
	branch r0_51 <= r2_15 l0000AF40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF40:
	r2_56 = r2_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF3A:
	r2_56 = r0_51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF43:
	word32 r0_83
	word32 r6_137
	word32 sp_133
	word32 ap_134
	word32 r1_135
	word32 r5_138
	word32 r2_139
	word32 r4_140
	word32 fp_108
	call Mem70[0x000192B4:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0_51,r1:r1_6,r2:r2_69,r3:r3,r4:r2_23,r5:r5_9 - 0x0000000C,r6:r6_8,sp:fp - 0x00000008,Stack +0004:r2_69
		defs: ap:ap_76,fp:fp_108,r0:r0_83,r1:r1_81,r2:r2_94,r4:r4_96,r5:r5_93,r6:r6_88,sp:sp_74
	word32 r3_110 = r0_83
	branch r0_83 != 0x00000000 l0000AF54
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF54:
	branch Mem70[ap_134 + 12:word32] == 0x00000000 l0000AF6E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF59:
	branch r4_140 >= Mem70[ap_134 + 16:word32] l0000AF6E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF5F:
	Mem124[sp_133 - 0x00000004:word32] = Mem70[ap_134 + 16:word32]
	Mem127[sp_133 - 0x00000008:word32] = Mem124[ap_134 + 12:word32]
	Mem129[sp_133 - 0x0000000C:word32] = r0_83
	call Mem129[0x0001929C:word32] + 2 (retsize: 4;)
		uses: ap:ap_76,fp:fp_108,r0:r0_83,r1:r1_81,r2:r2_94,r3:r0_83,r4:r4_96,r5:r5_93,r6:r6_88,sp:sp_74 - 0x0000000C,Stack +FFFFFFFC:r2_69
		defs: ap:ap_134,fp:fp_142,r1:r1_135,r2:r2_139,r3:r3_141,r4:r4_140,r5:r5_138,r6:r6_137,sp:sp_133
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF6E:
	branch r6_137 > 0x00000002 l0000AF79
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF79:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF71_1:
	word32 ap_153
	word32 r1_155
	word32 r0_156
	word32 r6_157
	word32 r5_159
	word32 r4_163
	word32 r3_165
	word32 fp_167
	call 0x0000AF75 + r6_137 * 0x00000002 (retsize: 4;)
		uses: ap:ap_152,fp:fp_166,r0:r6_144,r1:r1_154,r2:r2_160,r3:r3_164,r4:r4_162,r5:r5_158,r6:r6_144,sp:sp_150,Stack +FFFFFFFC:r2_69
		defs: ap:ap_153,fp:fp_167,r0:r0_156,r1:r1_155,r3:r3_165,r4:r4_163,r5:r5_159,r6:r6_157
	r1Out = r1_155
	r3Out = r3_165
	r4Out = r4_163
	r5Out = r5_159
	r6Out = r6_157
	apOut = ap_153
	fpOut = fp_167
	spOut = fp
	return r0_156
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AF51:
	word32 fp_175 = Mem70[fp_108 + 0x0000000C:word32]
	word32 ap_176 = Mem70[fp_108 + 0x00000008:word32]
	r1Out = r1_135
	r3Out = r0_83
	r4Out = r4_140
	r5Out = r5_138
	r6Out = r6_137
	apOut = ap_176
	fpOut = fp_175
	spOut = fp_108 - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000AEF2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000AFDA(word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 sp
// Preserved:
fn0000AFDA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AFDA:
	word32 r0_7 = Mem0[ap + 8:word32]
	Mem9[ap + 8:word32] = Mem0[ap + 8:word32] - 0x00000001
	word32 r2_104 = 0x00000000
	word32 r3_106 = 0x00000000
	branch r0_7 != 0x00000000 l0000AFED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AFED:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AFF0:
	branch r2_104 > 0x00000000 l0000B011
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AFF4:
	word32 r1_21 = r2_104 + 0x00000008
	branch r1_21 > 0x00000020 l0000B011
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AFFD:
	word32 r0_27 = Mem26[ap + 12:word32]
	Mem29[ap + 12:word32] = Mem26[ap + 12:word32] + 0x00000001
	r3_106 = r3_106 | __ashift((uint32) Mem29[r0_27:byte], r2_104)
	r2_104 = r1_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B011:
	branch (r3_106 & 0x00000001) == 0x00000000 l0000B054
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B054:
	word32 r0_41 = Mem40[ap + 4:word32]
	Mem43[ap + 4:word32] = Mem40[ap + 4:word32] + 0x00000001
	Mem45[r0_41:byte] = 0x00
	r2_104 = r2_104 - 0x00000001
	r3_106 = (uint32) SLICE(r3_106, ui31, 1)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B014:
	word32 r3_52 = (uint32) SLICE(r3_106, ui31, 1)
	word32 r2_53 = r2_104 - 0x00000001
	branch r2_53 >= 0x00000008 l0000B03D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B020:
	branch r2_53 > 0x00000018 l0000B03D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B029:
	word32 r0_61 = Mem40[ap + 12:word32]
	Mem63[ap + 12:word32] = Mem40[ap + 12:word32] + 0x00000001
	r3_52 = r3_52 | __ashift((uint32) Mem63[r0_61:byte], r2_53)
	r2_53 = r2_53 + 0x00000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B03D:
	word32 r0_73 = Mem72[ap + 4:word32]
	Mem75[ap + 4:word32] = Mem72[ap + 4:word32] + 0x00000001
	Mem78[r0_73:byte] = (byte) r3_52
	r2_104 = r2_53 - 0x00000008
	r3_106 = (uint32) SLICE(r3_52, ui24, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B064:
	word32 r0_87 = Mem86[ap + 8:word32]
	Mem89[ap + 8:word32] = Mem86[ap + 8:word32] - 0x00000001
	branch r0_87 != 0x00000000 l0000AFF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000AFEA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B06F:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000AFDA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000B072(word32 r0, word32 r1, word32 r2, word32 r4, word32 r5, word32 r6, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: fp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn0000B072_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B072:
	word32 v8_7 = Mem0[ap + 8:word32]
	word32 v9_10 = Mem8[ap + 4:word32]
	word32 v11_14 = Mem11[r2 + 0x0000C5EF:word32]
	word32 ap_25
	word32 fp_26
	word32 r1_28
	word32 r2_29
	word32 r3_30
	word32 r4_31
	word32 r5_32
	word32 r6_33
	word32 sp_34
	word32 r0_27 = fn0000CFBA(r0, r1, r4, r5, r6, ap, fp, out r1_28, out r2_29, out r3_30, out r4_31, out r5_32, out r6_33, out ap_25, out fp_26, out sp_34)
	Mem40[r2_29 + 0x0000C5EF:word32] = r0_27
	branch Mem40[r2_29 + 68:word32] == 0x00000000 l0000B0A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B0A5:
	Mem46[sp_34 - 0x00000004:word32] = 0x00000000
	Mem49[sp_34 - 0x00000008:word32] = Mem46[ap_25 + 8:word32]
	Mem52[sp_34 - 0x0000000C:word32] = Mem49[ap_25 + 0x00000004:word32]
	word32 fp_60
	call Mem52[r3_30 + 0x00010194:word32] + 2 (retsize: 4;)
		uses: ap:ap_25,fp:fp_26,r0:r0_27,r1:r1_28,r2:r2_29,r3:r3_30,r4:r4_31,r5:r5_32,r6:r6_33,sp:sp_34 - 0x0000000C,Stack +FFFFFFF4:v11_14,Stack +FFFFFFF8:v9_10,Stack +FFFFFFFC:v8_7
		defs: fp:fp_60
	return Mem52[fp_60 + 0x0000000C:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B0A2:
	return Mem40[fp_26 + 0x0000000C:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000B072_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000B192(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 r2 r3 r4 sp
// Preserved:
fn0000B192_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B192:
	word32 sp_21 = fp - 0x00000004
	branch Mem0[r2 + 0x000101F4:word32] == 0x00000000 l0000B1DF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B1AB:
	word32 r3_27
	call Mem14[pc:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc + 0x00000004,r0:r0,r1:r1,r2:r2,r3:r3,r4:r4,sp:fp - 0x0000000C,Stack +0004:0x00000000,Stack +0008:r2 + 0x000101FC
		defs: ap:ap_31,fp:fp_35,pc:pc_23,r0:r0_29,r1:r1_33,r2:r2_22,r3:r3_27,r4:r4_25,sp:sp_21
	dwLoc08 = r2 + 0x000101FC
	dwLoc0C = 0x00000000
	r3 = r3_27 + Mem14[r4 + 0x50D07FFE:real32]
	branch (r0 & 0x00000001) == 0x00000000 l0000B1C7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B1C0:
	r3 = (int32) Mem14[r2 + 0x000101FC:int16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B1C7:
	branch (r3 & 0x00000001) != 0x00000000 l0000B1D9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B1D9:
	Mem47[r2 + 0x000101F4:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B1DF:
	word32 sp_54 = sp_21 - 0x00000008
	Mem56[sp_54:word64] = 0x0000000000000000
	Mem58[sp_54 - 0x00000004:word32] = 0x00000000
	Mem62[sp_54 - 0x00000008:word32] = Mem58[r2 + 0x000101F8:word32]
	Mem67[sp_54 - 0x0000000C:word32] = Mem62[ap + 8:word32]
	Mem70[sp_54 - 0x00000010:word32] = Mem67[ap + 4:word32]
	Mem73[sp_54 - 0x00000018:word64] = 0x0000000000000000
	Mem76[sp_54 - 0x0000001C:word32] = r2 + 0x000101FC
	Mem78[sp_54 - 0x00000020:word32] = 0x00000030
	Mem81[sp_54 - 0x00000024:word32] = Mem78[r2 + 0x000101F0:word32]
	Mem83[sp_54 - 0x00000028:word32] = 0x00000000
	word32 sp_91
	word32 r2_92
	word32 r4_96
	word32 r3_98
	word32 r0_101
	word32 ap_102
	word32 r1_105
	word32 fp_108
	call Mem83[pc:word32] + 2 (retsize: 4;)
		uses: ap:ap_64,fp:fp_106,pc:pc_87 + 0x00000004,r0:r0_99,r1:r1_103,r2:r2_60,r3:r3_97,r4:r4_94,sp:sp_54 - 0x00000028,Stack +FFFFFFF8:dwLoc0C_185,Stack +FFFFFFFC:dwLoc08_182
		defs: ap:ap_102,fp:fp_108,r0:r0_101,r1:r1_105,r2:r2_92,r3:r3_98,r4:r4_96,sp:sp_91
	Mem111[Mem83[r0_101 + 20816:word32]:word32] = Mem83[r0_101 + 20816:word32] | Mem83[Mem83[0x00013206:word32]:word32]
	branch (r0_101 & 0x00000001) != 0x00000000 l0000B21D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B21D:
	Mem116[r2_92 + 0x000101F4:word32] = 0x00000001
	Mem119[r2_92 + 0x000101F8:word32] = Mem116[r2_92 + 0x000101F8:word32] + (uint32) Mem116[ap_102 + 0x00000009:ui23]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B20E:
	Mem129[sp_91 - 0x00000004:word32] = r1_105
	Mem132[sp_91 - 0x00000008:word32] = r4_96 + 1011
	fn0000C022(r0_101, r2_92, r3_98, r4_96, ap_102, fp_108, out r3_205, out r4_206, out ap_207, out fp_137, out sp_208)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B1CA:
	Mem155[sp_21 - 0x00000004:word32] = r3
	Mem158[sp_21 - 0x00000008:word32] = r4 + 968
	fn0000C022(r0, r2, r3, r4, ap, fp, out r3_209, out r4_210, out ap_211, out fp_163, out sp_212)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000B192_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000B86E(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 r2 r3 r4 sp
// Preserved:
fn0000B86E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B86E:
	word32 v8_7 = Mem0[r2 + 312:word32]
	word32 pc_17
	word32 r1_19
	word32 r0_21
	word32 r2_16
	word32 ap_25
	word32 sp_15
	word32 r3_101
	word32 fp_104
	call Mem8[pc:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc + 0x00000004,r0:r0,r1:r1,r2:r2,r3:r3,r4:r4,sp:fp - 0x00000008,Stack +0004:v8_7
		defs: ap:ap_25,fp:fp_27,pc:pc_17,r0:r0_21,r1:r1_19,r2:r2_16,r3:r3_23,sp:sp_15
	word32 r1_31 = SEQ(SLICE(r1_19, word16, 16), (word16) r1_19 | Mem8[r1_19 + 0x50D07FFE:word16])
	branch (r0_21 & 0x00000001) != 0x00000000 l0000B8AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B890:
	Mem36[sp_15 - 0x00000004:word32] = r1_31
	Mem39[sp_15 - 0x00000008:word32] = r3_101 + 1188
	word32 ap_44
	word32 fp_45
	word32 r3_48
	word32 r4_49
	word32 sp_50
	word32 r2_47 = fn0000C022(r0_21, r2_16, r3_101, r4, ap_25, fp_104, out r3_48, out r4_49, out ap_44, out fp_45, out sp_50)
	word32 r0_55 = Mem39[r2_47 + 312:word32]
	Mem58[sp_50 - 0x00000004:word32] = Mem39[r0_55 + 12:word32]
	Mem61[sp_50 - 0x00000008:word32] = r3_48 + 1222
	r2_16 = fn0000C022(r0_55, r2_47, r3_48, r4_49, ap_44, fp_45, out r3_101, out r4, out ap_25, out fp_104, out sp_15)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B8AC:
	Mem81[Mem77[r2_16 + 312:word32] + 34:word16] = Mem77[ap_25 + 8:word16]
	word32 r0_82 = Mem81[r2_16 + 312:word32]
	Mem84[r0_82 + 40:word32] = Mem81[ap_25 + 4:word32]
	word32 sp_86 = sp_15 - 0x00000004
	Mem88[sp_86:word32] = Mem84[r2_16 + 312:word32]
	word32 sp_95
	word32 r2_96
	word32 r1_99
	word32 r0_100
	word32 r3_102
	word32 ap_103
	word32 fp_105
	word32 r4_107
	call Mem88[pc_17:word32] + 2 (retsize: 4;)
		uses: ap:ap_79,fp:fp_104,pc:pc_17 + 0x00000004,r0:r0_82,r1:r1_31,r2:r2_76,r3:r3_101,r4:r4_106,sp:sp_86,Stack +FFFFFFFC:v8_7
		defs: ap:ap_103,fp:fp_105,r0:r0_100,r1:r1_99,r2:r2_96,r3:r3_102,r4:r4_107,sp:sp_95
	word32 r1_111 = SEQ(SLICE(r1_99, word16, 16), Mem88[r1_99 + 0x50D07FFE:word16])
	branch (r0_100 & 0x00000001) != 0x00000000 l0000B8F1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B8F1:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B8D1:
	Mem124[sp_95 - 0x00000004:word32] = r1_111
	Mem127[sp_95 - 0x00000008:word32] = r3_102 + 1223
	word32 ap_131
	word32 fp_132
	word32 r3_135
	word32 r4_136
	word32 sp_137
	word32 r2_134 = fn0000C022(r0_100, r2_96, r3_102, r4_107, ap_103, fp_105, out r3_135, out r4_136, out ap_131, out fp_132, out sp_137)
	word32 r0_142 = Mem127[r2_134 + 312:word32]
	Mem145[sp_137 - 0x00000004:word32] = Mem127[r0_142 + 12:word32]
	Mem148[sp_137 - 0x00000008:word32] = r3_135 + 1258
	fn0000C022(r0_142, r2_134, r3_135, r4_136, ap_131, fp_132, out r3_188, out r4_189, out ap_190, out fp_153, out sp_191)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000B86E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000B8F6(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 r2 r3 r4 sp
// Preserved:
fn0000B8F6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B8F6:
	branch Mem0[r2 + 12:word32] == 0x00000000 l0000B940
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B940:
	word32 v16_12 = Mem0[r3 + 312:word32]
	word32 r0_25
	word32 pc_29
	word32 r1_31
	word32 r3_28
	word32 ap_23
	word32 sp_20
	word32 r2_101
	word32 r4_105
	word32 fp_111
	call Mem13[pc:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc + 0x00000004,r0:r0,r1:r1,r2:r2,r3:r3,r4:r4,sp:fp - 0x00000008,Stack +0000:dwLoc0C,Stack +0004:v16_12,Stack +FFFFFFF8:dwLoc14,Stack +FFFFFFFC:dwLoc10
		defs: ap:ap_23,fp:fp_33,pc:pc_29,r0:r0_25,r1:r1_31,r2:r2_21,r3:r3_28,r4:r4_27,sp:sp_20
	word32 r1_37 = SEQ(SLICE(r1_31, word16, 16), (word16) r1_31 | Mem13[r1_31 + 0x50D07FFE:word16])
	branch (r0_25 & 0x00000001) != 0x00000000 l0000B96D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B951:
	Mem42[sp_20 - 0x00000004:word32] = r1_37
	Mem45[sp_20 - 0x00000008:word32] = r4_105 + 1261
	word32 ap_49
	word32 fp_50
	word32 r3_53
	word32 r4_54
	word32 sp_55
	word32 r2_52 = fn0000C022(r0_25, r2_101, r3_28, r4_105, ap_23, fp_111, out r3_53, out r4_54, out ap_49, out fp_50, out sp_55)
	word32 r0_60 = Mem45[r3_53 + 312:word32]
	Mem63[sp_55 - 0x00000004:word32] = Mem45[r0_60 + 12:word32]
	Mem66[sp_55 - 0x00000008:word32] = r4_54 + 1295
	r2_101 = fn0000C022(r0_60, r2_52, r3_53, r4_54, ap_49, fp_50, out r3_28, out r4_105, out ap_23, out fp_111, out sp_20)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B96D:
	Mem86[Mem82[r3_28 + 312:word32] + 34:word16] = Mem82[ap_23 + 8:word16]
	word32 r0_87 = Mem86[r3_28 + 312:word32]
	Mem89[r0_87 + 40:word32] = Mem86[ap_23 + 4:word32]
	word32 sp_91 = sp_20 - 0x00000004
	Mem93[sp_91:word32] = Mem89[r3_28 + 312:word32]
	word32 sp_100
	word32 r2_102
	word32 ap_103
	word32 r0_104
	word32 r4_106
	word32 r3_107
	word32 r1_110
	word32 fp_112
	call Mem93[pc_29:word32] + 2 (retsize: 4;)
		uses: ap:ap_84,fp:fp_111,pc:pc_29 + 0x00000004,r0:r0_87,r1:r1_37,r2:r2_101,r3:r3_81,r4:r4_105,sp:sp_91,Stack +FFFFFFF0:dwLoc14,Stack +FFFFFFF4:dwLoc10,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:v16_12
		defs: ap:ap_103,fp:fp_112,r0:r0_104,r1:r1_110,r2:r2_102,r3:r3_107,r4:r4_106,sp:sp_100
	word32 r1_116 = SEQ(SLICE(r1_110, word24, 8), (byte) r1_110 | Mem93[r1_110 + 0x50D07FFE:byte])
	branch (r0_104 & 0x00000001) != 0x00000000 l0000B9B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B992:
	Mem121[sp_100 - 0x00000004:word32] = r1_116
	Mem124[sp_100 - 0x00000008:word32] = r4_106 + 1296
	word32 ap_128
	word32 fp_129
	word32 r3_132
	word32 r4_133
	word32 sp_134
	word32 r2_131 = fn0000C022(r0_104, r2_102, r3_107, r4_106, ap_103, fp_112, out r3_132, out r4_133, out ap_128, out fp_129, out sp_134)
	word32 r0_139 = Mem124[r3_132 + 312:word32]
	Mem142[sp_134 - 0x00000004:word32] = Mem124[r0_139 + 12:word32]
	Mem145[sp_134 - 0x00000008:word32] = r4_133 + 1329
	fn0000C022(r0_139, r2_131, r3_132, r4_133, ap_128, fp_129, out r3_256, out r4_257, out ap_258, out fp_150, out sp_259)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B913:
	word32 v10_170 = Mem168[ap + 8:word32]
	word32 v11_173 = Mem171[ap + 4:word32]
	word32 r0_177 = Mem176[r2 + 0x0000C839:word32]
	word32 sp_181
	word32 r2_182
	word32 ap_183
	word32 r4_185
	word32 r3_186
	word32 pc_187
	word32 r1_188
	word32 fp_189
	call r0_177 + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc,r0:r0_177,r1:r1,r2:r2,r3:r3,r4:r4,sp:fp - 0x00000014,Stack +0004:r2,Stack +0008:v11_173,Stack +000C:v10_170,Stack +0010:0x00000000
		defs: ap:ap_183,fp:fp_189,pc:pc_187,r1:r1_188,r2:r2_182,r3:r3_186,r4:r4_185,sp:sp_181
	Mem192[sp_181 - 0x00000004:word32] = 0x00000000
	Mem194[sp_181 - 0x00000008:word32] = 0x00000001
	Mem197[sp_181 - 0x0000000C:word32] = r4_185 + 1259
	Mem199[sp_181 - 0x00000010:word32] = r2_182
	word32 r0_200 = Mem199[r2_182 + 0x0000C839:word32]
	call r0_200 + 2 (retsize: 4;)
		uses: ap:ap_183,fp:fp_189,pc:pc_187,r0:r0_200,r1:r1_188,r2:r2_182,r3:r3_186,r4:r4_185,sp:sp_181 - 0x00000010,Stack +FFFFFFF0:r2,Stack +FFFFFFF4:v11_173,Stack +FFFFFFF8:v10_170,Stack +FFFFFFFC:0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B9B2:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000B8F6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000B9BA(word32 r0, word32 r2, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r2:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r2 sp
// Preserved:
fn0000B9BA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B9BA:
	word32 sp_14
	word32 ap_15
	word32 r0_17
	word32 fp_19
	word32 r2_21
	call Mem8[ap + 0x00010194:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r2:r2,sp:fp - 0x00000010,Stack +0004:0x0000000000000000,Stack +000C:0x00000001
		defs: ap:ap_15,fp:fp_19,r0:r0_17,r2:r2_21,sp:sp_14
	branch r0_17 == 0x00000000 l0000B9DB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B9DB:
	branch Mem8[r2_21 + 12:word32] == 0x00000000 l0000B9E1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B9E1:
	call Mem8[ap_15 + 0x00010198:word32] + 2 (retsize: 4;)
		uses: ap:ap_15,fp:fp_19,r0:r0_17,r2:r2_21,sp:sp_14,Stack +FFFFFFF4:0x0000000000000000,Stack +FFFFFFFC:0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B9E0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000B9DA:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000B9BA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000BBB2(word32 r5, word32 r9, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r5:[0..31] r9:[8..31]
// LiveOut: ap fp r0 r1 r2 r3 r4 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r6 r7 r8 r9 sp
// Preserved:
fn0000BBB2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BBB2:
	word32 r2_6 = Mem0[ap + 4:word32]
	word32 r3_7 = Mem0[r2_6 + 20:word32] + 0xFFFFFFBA
	word32 r1_14 = Mem0[r2_6 + 12:word32] - 0x00000001 + r3_7 * 0x0000016D
	word32 r0_8 = Mem0[r2_6 + 16:word32]
	word32 r7_10 = Mem0[r2_6 + 8:word32]
	word32 r8_11 = Mem0[r2_6 + 4:word32]
	word32 r6_12 = Mem0[r2_6:word32]
	word32 r4_26 = (r3_7 + 0x00000001) / 0x00000004 - (r3_7 + 0x00000045) / 0x00000064 + (r3_7 + 0x00000171) / 0x00000190 + r1_14 + (int32) Mem0[(r5 + 0x0001052A) + r0_8 * 2:int16]
	word32 r9_30 = SEQ(SLICE(r9, word24, 8), 0x00)
	branch r0_8 <= 0x00000001 l0000BC63
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BC63:
	word32 r2_34 = (int32) (int8) r9_30
	word32 fp_45 = Mem0[fp + 0x0000000C:word32]
	word32 ap_46 = Mem0[fp + 0x00000008:word32]
	r1Out = r1_14
	r2Out = r2_34
	r3Out = r3_7
	word32 r4_38 = (r4_26 + r2_34) * 0x00015180 + r7_10 * 0x00000E10
	r4Out = r4_38
	word32 r6_40 = r6_12 + r8_11 * 0x0000003C
	r6Out = r6_40
	r7Out = r7_10 * 0x00000E10
	r8Out = r8_11 * 0x0000003C
	r9Out = r9_30
	apOut = ap_46
	fpOut = fp_45
	spOut = fp - 0x00000004
	return r6_40 + r4_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000BBB2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BC28:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000BC8A(word32 r0, word32 r1, word32 r2, word32 r4, word32 r5, word32 r9, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & apOut, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r9:[0..31]
// LiveOut: ap fp r0 r1 r3 r4 r5 r6 r7 r8 r9
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000BC8A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BC8A:
	word32 sp_9
	word32 r0_11
	word32 fp_13
	word32 r1_15
	word32 ap_17
	word32 r2_19
	word32 r4_21
	word32 r5_109
	word32 r9_110
	word32 r3_111
	word32 r6_112
	word32 r7_113
	word32 r8_114
	call Mem5[0x000192A0:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r1:r1,r2:r2,r3:r3_73,r4:r4,r5:r5,r6:r6_75,r7:r7_76,r8:r8_77,r9:r9_78,sp:fp - 0x0000000C,Stack +0004:0x00000000
		defs: ap:ap_17,fp:fp_13,r0:r0_11,r1:r1_15,r2:r2_19,r3:r3_111,r4:r4_21,r5:r5_109,r6:r6_112,r7:r7_113,r8:r8_114,r9:r9_110,sp:sp_9
	Mem24[fp_13 + -8:word32] = r0_11
	Mem27[sp_9 - 0x00000004:word32] = fp_13 + -8
	word32 sp_31
	word32 r0_32
	word32 fp_33
	word32 ap_35
	call Mem27[0x000192A4:word32] + 2 (retsize: 4;)
		uses: ap:ap_17,fp:fp_13,r0:r0_11,r1:r1_15,r2:r2_19,r3:r3_111,r4:r4_21,r5:r5_109,r6:r6_112,r7:r7_113,r8:r8_114,r9:r9_110,sp:sp_9 - 0x00000004,Stack +FFFFFFF8:0x00000000
		defs: ap:ap_35,fp:fp_33,r0:r0_32,sp:sp_31
	word32 r2_40 = Mem27[ap_35 + 4:word32]
	Mem44[r0_32 + 20:word32] = ((uint32) SLICE(r2_40, ui23, 9) & ~0xFFFFFF80) + 0x00000050
	Mem48[r0_32 + 16:word32] = ((uint32) SLICE(r2_40, ui27, 5) & ~0xFFFFFFF0) - 0x00000001
	Mem50[r0_32 + 12:word32] = Mem48[ap_35 + 4:word32] & ~0xFFFFFFE0
	word32 r2_51 = Mem50[ap_35 + 8:word32]
	Mem54[r0_32 + 8:word32] = (uint32) SLICE(r2_51, ui21, 11) & ~0xFFFFFFE0
	Mem57[r0_32 + 4:word32] = (uint32) SLICE(r2_51, ui27, 5) & ~0xFFFFFFC0
	Mem60[r0_32:word32] = Mem57[ap_35 + 8:word32] << 1 & ~0xFFFFFFC1
	Mem62[sp_31 - 0x00000004:word32] = r0_32
	word32 ap_68
	word32 fp_69
	word32 r3_73
	word32 r6_75
	word32 r7_76
	word32 r8_77
	word32 r9_78
	word32 r0_70 = fn0000BBB2(r5, r9, ap_35, fp_33, out r1_131, out r2_132, out r3_73, out r4_133, out r6_75, out r7_76, out r8_77, out r9_78, out ap_68, out fp_69, out sp_134)
	Mem87[fp_69 + 0xFFFFFFF8:word32] = r0_70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BD15_thunk_fn0000BD1C:
	word32 ap_91
	word32 fp_92
	word32 r1_94
	word32 r3_96
	word32 r4_97
	word32 r5_98
	word32 r6_99
	word32 r7_100
	word32 r8_101
	word32 r9_102
	word32 r0_93 = fn0000BD1C(r0_70, 0x00000003, r0_70, r5, r9_78, ap_68, fp_69, out r1_94, out r3_96, out r4_97, out r5_98, out r6_99, out r7_100, out r8_101, out r9_102, out ap_91, out fp_92)
	r1Out = r1_94
	r3Out = r3_96
	r4Out = r4_97
	r5Out = r5_98
	r6Out = r6_99
	r7Out = r7_100
	r8Out = r8_101
	r9Out = r9_102
	apOut = ap_91
	fpOut = fp_92
	return r0_93
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000BC8A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000BD08(word32 r5, word32 r9, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r5:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000BD08_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BD08:
	word32 ap_13
	word32 fp_14
	word32 r9_23
	word32 r0_15 = fn0000BBB2(r5, r9, ap, fp, out r1_54, out r2_55, out r3_56, out r4_57, out r6_58, out r7_59, out r8_60, out r9_23, out ap_13, out fp_14, out sp_61)
	Mem32[fp_14 + 0xFFFFFFF8:word32] = r0_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BD15_thunk_fn0000BD1C:
	fn0000BD1C(r0_15, 0x00000003, r0_15, r5, r9_23, ap_13, fp_14, out r1_62, out r3_63, out r4_64, out r5_65, out r6_66, out r7_67, out r8_68, out r9_69, out ap_70, out fp_71)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000BD08_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000BD1C(word32 r0, word32 r2, word32 r4, word32 r5, word32 r9, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & apOut, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r9:[0..31]
// LiveOut: ap fp r0 r1 r3 r4 r5 r6 r7 r8 r9
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000BD1C_entry:
	word32 sp_2 = fp
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BD1C:
	word32 sp_4 = sp_2 - 0x00000004
	Mem7[sp_4:word32] = fp + -8
	word32 sp_11
	word32 fp_12
	word32 r0_14
	word32 ap_20
	word32 r3_84
	word32 r1_83
	word32 r6_85
	word32 r7_86
	word32 r8_87
	call Mem7[0x000192A4:word32] + 2 (retsize: 4;)
		uses: ap:ap_19,fp:fp_5,r0:r0_13,r1:r1_32,r2:r2_17,r3:r3_34,r4:r4_15,r5:r5,r6:r6_36,r7:r7_37,r8:r8_38,r9:r9_39,sp:sp_4
		defs: ap:ap_20,fp:fp_12,r0:r0_14,r1:r1_83,r3:r3_84,r5:r5_81,r6:r6_85,r7:r7_86,r8:r8_87,r9:r9_82,sp:sp_11
	Mem23[sp_11 - 0x00000004:word32] = r0_14
	word32 r1_32
	word32 r2_33
	word32 r3_34
	word32 r6_36
	word32 r7_37
	word32 r8_38
	r0 = r4 - fn0000BBB2(r5, r9, ap_20, fp_12, out r1_32, out r2_33, out r3_34, out r4, out r6_36, out r7_37, out r8_38, out r9, out ap, out fp, out sp_2)
	branch r0 == 0x00000000 l0000BD3B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BD33:
	Mem49[fp + -8:word32] = Mem23[fp + -8:word32] + r0
	r2 = r2_33 - 0x00000001
	branch r2_33 > 0x00000001 l0000BD1C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BD3B:
	branch Mem54[ap + 4:word32] <u 0x00007432 l0000BD53
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BD45:
	branch Mem54[fp + -8:word32] >=u 0x70000000 l0000BD53
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BD4F:
	Mem63[fp + -8:word32] = -0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BD53:
	word32 r0_67 = Mem66[fp + -8:word32]
	word32 fp_72 = Mem66[fp + 0x0000000C:word32]
	word32 ap_73 = Mem66[fp + 0x00000008:word32]
	r1Out = r1_83
	r3Out = r3_84
	r4Out = r4
	r5Out = r5
	r6Out = r6_85
	r7Out = r7_86
	r8Out = r8_87
	r9Out = r9
	apOut = ap_73
	fpOut = fp_72
	return r0_67
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000BD1C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000BDC2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0000BDC2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000BDC2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000BDC2:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000C022(word32 r0, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & r4Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r2:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: ap fp r2 r3 r4 sp
// Trashed: CVZN ap fp r0 r2 r3 r4 sp
// Preserved:
fn0000C022_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C022:
	Mem6[fp + -16:uint16] = 0x00FF
	Mem8[fp + -14:byte] = 0x0E
	Mem10[fp + -13:byte] = 0x01
	Mem13[fp + -12:word32] = r3 + 0x000105C5
	Mem15[fp + -8:word32] = 0x00000000
	word32 sp_32
	word32 fp_33
	word32 r3_34
	word32 ap_35
	word32 r0_37
	word32 r4_39
	word32 r2_41
	call Mem28[0x0001932C:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r2:r2,r3:r3,r4:r4,sp:fp - 0x00000024,Stack +0004:ap + 8,Stack +0008:fp + -8,Stack +000C:fp + -16,Stack +0010:0x0000000000000000
		defs: ap:ap_35,fp:fp_33,r0:r0_37,r2:r2_41,r3:r3_34,r4:r4_39,sp:sp_32
	branch (r0_37 & 0x00000001) != 0x00000000 l0000C094
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C094:
	word32 r0_43 = Mem28[fp_33 + -8:word32]
	Mem45[r3_34 + 0x000105C5:byte] = 0x00
	Mem47[sp_32 - 0x00000004:word32] = 0x00000001
	Mem50[sp_32 - 0x00000008:word32] = r3_34 + 0x000105C5
	Mem53[sp_32 - 0x0000000C:word32] = Mem50[ap_35 + 4:word32]
	Mem56[sp_32 - 0x00000010:word32] = r4_39 + 1642
	Mem59[sp_32 - 0x00000014:word32] = r2_41 + 1515
	word32 sp_63
	word32 fp_64
	word32 r3_65
	word32 ap_66
	word32 r0_67
	word32 r4_68
	word32 r2_69
	call Mem59[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_35,fp:fp_33,r0:r0_43,r2:r2_41,r3:r3_34,r4:r4_39,sp:sp_32 - 0x00000014,Stack +FFFFFFE0:ap + 8,Stack +FFFFFFE4:fp + -8,Stack +FFFFFFE8:fp + -16,Stack +FFFFFFEC:0x0000000000000000
		defs: ap:ap_66,fp:fp_64,r0:r0_67,r2:r2_69,r3:r3_65,r4:r4_68,sp:sp_63
	Mem72[sp_63 - 0x00000004:word32] = r0_67
	Mem75[sp_63 - 0x00000008:word32] = r2_69 + 1515
	Mem77[sp_63 - 0x0000000C:word32] = r2_69
	word32 r0_78 = Mem77[r2_69 + 0x0000C839:word32]
	word32 fp_83
	word32 r3_84
	word32 r4_87
	word32 r2_88
	call r0_78 + 2 (retsize: 4;)
		uses: ap:ap_66,fp:fp_64,r0:r0_78,r2:r2_69,r3:r3_65,r4:r4_68,sp:sp_63 - 0x0000000C,Stack +FFFFFFE0:ap + 8,Stack +FFFFFFE4:fp + -8,Stack +FFFFFFE8:fp + -16,Stack +FFFFFFEC:0x0000000000000000
		defs: fp:fp_83,r2:r2_88,r3:r3_84,r4:r4_87
	word32 fp_91 = Mem77[fp_83 + 0x0000000C:word32]
	word32 ap_92 = Mem77[fp_83 + 0x00000008:word32]
	r3Out = r3_84
	r4Out = r4_87
	apOut = ap_92
	fpOut = fp_91
	spOut = fp_83 - 0x00000004
	return r2_88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C067:
	Mem94[sp_32 - 0x00000004:word32] = 0x00000001
	Mem97[sp_32 - 0x00000008:word32] = Mem94[ap_35 + 8:word32]
	Mem100[sp_32 - 0x0000000C:word32] = Mem97[ap_35 + 4:word32]
	Mem103[sp_32 - 0x00000010:word32] = r4_39 + 1619
	Mem106[sp_32 - 0x00000014:word32] = r2_41 + 1515
	word32 sp_110
	word32 fp_111
	word32 r3_112
	word32 ap_113
	word32 r0_114
	word32 r4_115
	word32 r2_116
	call Mem106[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_35,fp:fp_33,r0:r0_37,r2:r2_41,r3:r3_34,r4:r4_39,sp:sp_32 - 0x00000014,Stack +FFFFFFE0:ap + 8,Stack +FFFFFFE4:fp + -8,Stack +FFFFFFE8:fp + -16,Stack +FFFFFFEC:0x0000000000000000
		defs: ap:ap_113,fp:fp_111,r0:r0_114,r2:r2_116,r3:r3_112,r4:r4_115,sp:sp_110
	Mem119[sp_110 - 0x00000004:word32] = r0_114
	Mem122[sp_110 - 0x00000008:word32] = r2_116 + 1515
	Mem124[sp_110 - 0x0000000C:word32] = r2_116
	word32 r0_125 = Mem124[r2_116 + 0x0000C839:word32]
	word32 fp_130
	word32 r3_131
	word32 r4_134
	word32 r2_135
	call r0_125 + 2 (retsize: 4;)
		uses: ap:ap_113,fp:fp_111,r0:r0_125,r2:r2_116,r3:r3_112,r4:r4_115,sp:sp_110 - 0x0000000C,Stack +FFFFFFE0:ap + 8,Stack +FFFFFFE4:fp + -8,Stack +FFFFFFE8:fp + -16,Stack +FFFFFFEC:0x0000000000000000
		defs: fp:fp_130,r2:r2_135,r3:r3_131,r4:r4_134
	word32 fp_138 = Mem124[fp_130 + 0x0000000C:word32]
	word32 ap_139 = Mem124[fp_130 + 0x00000008:word32]
	r3Out = r3_131
	r4Out = r4_134
	apOut = ap_139
	fpOut = fp_138
	spOut = fp_130 - 0x00000004
	return r2_135
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000C022_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000C0CE(word32 r0, word32 r6, word32 ap, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] pc:[0..31] r0:[0..31] r6:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0000C0CE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000C0CE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C0CE:
	word32 sp_20 = fp - 0x00000004
	branch Mem0[r6 + 0x00010A78:word32] != 0x00000000 l0000C0F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C0E0:
	word32 v11_15 = Mem12[ap + 4:word32]
	call Mem16[0x000192D4:word32] + 2 (retsize: 4;)
		uses: ap:ap,pc:pc,r0:r0,r6:r6,sp:fp - 0x0000000C,Stack +0004:v11_15,Stack +0008:r6 + 0x000108C5
		defs: ap:ap_22,pc:pc_26,r0:r0_24,r6:r6_21,sp:sp_20
	dwLoc08 = r6 + 0x000108C5
	dwLoc0C = v11_15
	branch r0 != 0x00000000 l0000C0F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C0F7:
	word32 sp_33 = sp_20 - 0x00000004
	Mem37[sp_33:word32] = Mem35[ap + 4:word32]
	Mem41[sp_33 - 0x00000004:word32] = r6 + 0x000108C5
	word32 r6_46
	call Mem41[0x000192BC:word32] + 2 (retsize: 4;)
		uses: ap:ap_34,pc:pc_50,r0:r0_48,r6:r6_39,sp:sp_33 - 0x00000004,Stack +FFFFFFF8:dwLoc0C_76,Stack +FFFFFFFC:dwLoc08_74
		defs: r6:r6_46
	Mem54[r6_46 + 0x00010A78:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C0F4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C1CB:
	Mem60[sp_20 - 0x00000004:word32] = r6 + 0x000109C5
	call Mem60[pc:word32] + 2 (retsize: 4;)
		uses: ap:ap_22,pc:pc_26 + 0x00000004,r0:r0_24,r6:r6_21,sp:sp_20 - 0x00000004,Stack +FFFFFFF8:v11_15,Stack +FFFFFFFC:r6 + 0x000108C5
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000C1FE(word32 r0, word32 r2, word32 r3, word32 r5, word32 r11, word32 ap, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] pc:[0..31] r0:[0..31] r11:[0..31] r2:[0..31] r3:[0..31] r5:[0..31]
// LiveOut:
// Trashed: CVZN ap pc r0 r11 r2 r3 r4 r5
// Preserved: sp
fn0000C1FE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C1FE:
	word32 r4_6 = Mem0[r3 + 0x0000C67A:word32]
	branch Mem0[r2 + 0x00010AA4:word32] == 0xFFFFFFFF l0000C226
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C226:
	Mem12[r2 + 0x00010AA4:word32] = 0x00000000
	word32 r2_27
	word32 r11_30
	call Mem17[pc:word32] + 2 (retsize: 4;)
		uses: ap:ap,pc:pc + 0x00000004,r0:r0,r11:r11,r2:r2,r3:r3,r4:r4_6,r5:r5,sp:fp - 0x0000000C,Stack +0004:0x00000000,Stack +0008:r2 + 0x00010AA4
		defs: r11:r11_30,r2:r2_27
	Mem39[r11_30 + -3953:word16] = atomic_fetch_add(Mem17[r11_30 + -3953:word16], Mem17[r2_27 + 0x50E97FFE:word16])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C223:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C327:
	word32 ap_41 = Mem0[r3 + 1511:word32]
	word32 r0_42 = Mem0[ap_41 + 12:word32]
	branch r0_42 > 0x00000010 l0000C354
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C354:
	fn0000F457()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C330_1:
	call 0x0000C334 + r0_42 * 0x00000002 (retsize: 4;)
		uses: ap:ap_41,pc:pc,r0:r0_42,r11:r11,r2:r2,r3:r3,r4:r4_6,r5:r5,sp:fp - 0x00000004,Stack +0000:dwLoc08,Stack +FFFFFFFC:dwLoc0C
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000C1FE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000C6FA(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 ap, word32 fp, word32 pc, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut, ptr32 & pcOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: ap fp pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000C6FA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C6FA:
	word32 r10_414 = Mem0[0x00019370:word32]
	word32 r9_7 = Mem0[ap + 8:word32] & ~0xFFFFFFF8
	branch r9_7 == 0x00000000 l0000C729
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C729:
	Mem14[fp + -40:word16] = 0x0000
	Mem16[fp + -38:word16] = 0x0003
	Mem18[fp + -36:word32] = 0x00000000
	Mem20[fp + -32:word16] = 0x0000
	Mem22[fp + -30:word16] = 0x0004
	Mem24[fp + -28:word32] = 0x00000000
	Mem26[fp + -24:word16] = 0x0000
	Mem28[fp + -22:word16] = 0x0005
	Mem30[fp + -20:word64] = 0x0000000000000000
	Mem32[fp + -12:word64] = 0x0000000000000000
	Mem35[r6 + 0x00010CEC:word32] = r6 + 0x00010ABC
	Mem37[r6 + 0x00010CC4:word32] = Mem35[r6 + 0x00010CEC:word32]
	Mem39[r6 + 0x00010CC0:word32] = Mem37[r6 + 0x00010CC4:word32]
	Mem41[r6 + 0x00010CDC:word32] = Mem39[r6 + 0x00010CC0:word32]
	Mem43[r6 + 0x00010CE8:word32] = 0x00000000
	Mem45[r6 + 0x00010CCC:word64] = 0x0000000000000000
	Mem47[fp + -44:word32] = Mem45[ap + 4:word32]
	word32 v30_49 = Mem47[ap + 4:word32]
	word32 sp_54
	word32 r10_55
	word32 ap_56
	word32 r9_57
	word32 fp_58
	word32 r6_59
	word32 r0_61
	word32 pc_65
	word32 r7_67
	word32 r3_69
	word32 r8_71
	word32 r4_786
	word32 r1_785
	word32 r5_784
	call Mem50[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc,r0:r0,r1:r1,r10:r10_5,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9_7,sp:fp + 0xFFFFFF1C,Stack +0000:dwLocE8,Stack +0004:v30_49,Stack +FFFFFFFC:dwLocEC
		defs: ap:ap_56,fp:fp_58,pc:pc_65,r0:r0_61,r1:r1_785,r10:r10_55,r3:r3_69,r4:r4_786,r5:r5_784,r6:r6_59,r7:r7_67,r8:r8_71,r9:r9_57,sp:sp_54
	Mem74[fp_58 + -48:word16] = (word16) r0_61
	word32 r2_75 = (uint32) (word16) r0_61
	branch r2_75 <=u 0x000000FF l0000C7A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C7A5:
	Mem81[sp_54 - 0x00000004:word32] = fp_58 + -8
	Mem84[sp_54 - 0x00000008:word32] = fp_58 + -40
	Mem87[sp_54 - 0x0000000C:word32] = fp_58 + -48
	word32 r10_94
	word32 r9_96
	word32 fp_97
	word32 r6_98
	word32 r0_99
	word32 r2_100
	word32 pc_101
	word32 r7_102
	word32 r3_103
	word32 r8_104
	word32 r4_789
	word32 r1_788
	word32 r5_787
	call Mem87[pc_65:word32] + 2 (retsize: 4;)
		uses: ap:ap_56,fp:fp_58,pc:pc_65 + 0x00000004,r0:r0_61,r1:r1_785,r10:r10_55,r2:r2_75,r3:r3_69,r4:r4_786,r5:r5_784,r6:r6_59,r7:r7_67,r8:r8_71,r9:r9_57,sp:sp_54 - 0x0000000C,Stack +FFFFFF18:dwLocEC,Stack +FFFFFF1C:dwLocE8,Stack +FFFFFF20:v30_49
		defs: fp:fp_97,pc:pc_101,r0:r0_99,r1:r1_788,r10:r10_94,r2:r2_100,r3:r3_103,r4:r4_789,r5:r5_787,r6:r6_98,r7:r7_102,r8:r8_104,r9:r9_96
	Mem107[Mem87[r0_99 + 20483:word32]:word32] = __ashift(0x00000004, Mem87[r2_100 + 0x50E87FFE:word32])
	word32 fp_111 = Mem107[fp_97 + 0x0000000C:word32]
	word32 ap_112 = Mem107[fp_97 + 0x00000008:word32]
	r1Out = r1_788
	r2Out = r2_100
	r3Out = r3_103
	r4Out = r4_789
	r5Out = r5_787
	r6Out = r6_98
	r7Out = r7_102
	r8Out = r8_104
	r9Out = r9_96
	r10Out = r10_94
	apOut = ap_112
	fpOut = fp_111
	spOut = fp_97 - 0x00000004
	pcOut = pc_101
	return r0_99
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C7A1:
	word32 fp_118 = Mem74[fp_58 + 0x0000000C:word32]
	word32 ap_119 = Mem74[fp_58 + 0x00000008:word32]
	r1Out = r1_785
	r2Out = r2_75
	r3Out = r3_69
	r4Out = r4_786
	r5Out = r5_784
	r6Out = r6_59
	r7Out = r7_67
	r8Out = r8_71
	r9Out = r9_57
	r10Out = r10_55
	apOut = ap_119
	fpOut = fp_118
	spOut = fp_58 - 0x00000004
	pcOut = pc_65
	return 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C726:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C919:
	branch r9_7 == 0x00000001 l0000C921
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C921:
	word32 r10_130
	word32 r9_132
	word32 fp_133
	word32 r6_134
	word32 r0_135
	word32 r2_136
	word32 pc_137
	word32 r7_138
	word32 r3_139
	word32 r8_140
	word32 r4_793
	word32 r1_792
	word32 r5_791
	call Mem125[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc,r0:r0,r1:r1,r10:r10_5,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9_7,sp:fp + 0xFFFFFF1C,Stack +0000:dwLocE8,Stack +0004:r7 + 0x0000C701,Stack +FFFFFFFC:dwLocEC
		defs: fp:fp_133,pc:pc_137,r0:r0_135,r1:r1_792,r10:r10_130,r2:r2_136,r3:r3_139,r4:r4_793,r5:r5_791,r6:r6_134,r7:r7_138,r8:r8_140,r9:r9_132
	branch r0_135 + Mem125[r6_134 + 0x00010CE8:word32] <=u 0x000000F2 l0000C945
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C945:
	branch Mem125[r6_134 + 0x00010CE8:word32] != 0x00000000 l0000C974
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C94D:
	Mem152[r6_134 + 0x00010CEC:word32] = r6_134 + 0x00010ABC
	Mem154[r6_134 + 0x00010CC4:word32] = Mem152[r6_134 + 0x00010CEC:word32]
	Mem156[r6_134 + 0x00010CC0:word32] = Mem154[r6_134 + 0x00010CC4:word32]
	Mem158[r6_134 + 0x00010CCC:word64] = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C974:
	Mem166[r6_134 + 0x00010CDC:word32] = Mem164[r6_134 + 0x00010CEC:word32]
	word32 r2_167 = 0x00000000
	branch Mem166[r6_134 + 0x00010CE4:word32] != 0x00000000 l0000C98B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C989:
	r2_167 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C98B:
	Mem177[r6_134 + 0x00010CE0:word32] = r2_167
	word32 v65_178 = Mem177[r6_134 + 0x00010CD8:word32]
	Mem179[r6_134 + 0x00010CD0:word32] = v65_178
	branch v65_178 == 0x00000000 l0000C9AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C99F:
	r2_167 = Mem179[r6_134 + 0x00010CDC:word32]
	Mem186[r2_167 + -1:byte] = 0x2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C9AA:
	Mem193[Mem192[r6_134 + 0x00010CDC:word32]:byte] = 0x00
	word32 fp_203 = Mem193[fp_133 + 0x0000000C:word32]
	word32 ap_204 = Mem193[fp_133 + 0x00000008:word32]
	r1Out = r1_792
	r2Out = r2_167
	r3Out = r3_139
	r4Out = r4_793
	r5Out = r5_791
	r6Out = r6_134
	r7Out = r7_138
	r8Out = r8_140
	r9Out = r9_132
	r10Out = r10_130
	apOut = ap_204
	fpOut = fp_203
	spOut = fp_133 - 0x00000004
	pcOut = pc_137
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C941:
	word32 fp_210 = Mem125[fp_133 + 0x0000000C:word32]
	word32 ap_211 = Mem125[fp_133 + 0x00000008:word32]
	r1Out = r1_792
	r2Out = r2_136
	r3Out = r3_139
	r4Out = r4_793
	r5Out = r5_791
	r6Out = r6_134
	r7Out = r7_138
	r8Out = r8_140
	r9Out = r9_132
	r10Out = r10_130
	apOut = ap_211
	fpOut = fp_210
	spOut = fp_133 - 0x00000004
	pcOut = pc_137
	return 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C91E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C9B3:
	branch r9_7 == 0x00000002 l0000C9BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C9BB:
	word32 v46_216 = Mem0[ap + 4:word32]
	word32 sp_221
	word32 ap_223
	word32 r0_227
	word32 r10_222
	word32 r1_796
	word32 pc_229
	word32 r6_226
	word32 fp_225
	word32 r4_797
	word32 r5_795
	word32 r7_230
	word32 r8_232
	word32 r9_224
	call Mem217[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc,r0:r0,r1:r1,r10:r10_5,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9_7,sp:fp + 0xFFFFFF1C,Stack +0000:dwLocE8,Stack +0004:v46_216,Stack +FFFFFFFC:dwLocEC
		defs: ap:ap_223,fp:fp_225,pc:pc_229,r0:r0_227,r1:r1_796,r10:r10_222,r4:r4_797,r5:r5_795,r6:r6_226,r7:r7_230,r8:r8_232,r9:r9_224,sp:sp_221
	word32 r3_234 = r0_227
	branch Mem217[r6_226 + 0x00010CE0:word32] == 0x00000000 l0000C9FB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C9D0:
	word32 r2_239 = Mem217[r6_226 + 0x00010CDC:word32]
	Mem241[r6_226 + 0x00010CDC:word32] = Mem217[r6_226 + 0x00010CDC:word32] + 0x00000001
	Mem243[r2_239:byte] = 0x5B
	branch r0_227 == 0x00000000 l0000C9F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C9E5:
	word32 r2_248 = Mem243[r6_226 + 0x00010CDC:word32]
	Mem250[r6_226 + 0x00010CDC:word32] = Mem243[r6_226 + 0x00010CDC:word32] + 0x00000001
	Mem252[r2_248:byte] = 0x2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C9F5:
	Mem258[r6_226 + 0x00010CE0:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C9FB:
	branch r0_227 != 0x00000001 l0000CA06
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA00:
	branch Mem270[Mem270[ap_223 + 4:word32]:byte] == 0x2E l0000CA7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA06:
	branch r0_227 != 0x00000002 l0000CA3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA0B:
	word32 r2_280 = Mem270[ap_223 + 4:word32]
	branch Mem270[r2_280:byte] != 0x2E l0000CA3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA14:
	branch Mem270[r2_280 + 1:byte] != 0x2E l0000CA3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA3C:
	word32 r2_293 = Mem270[r6_226 + 0x00010CDC:word32] - Mem270[r6_226 + 0x00010CBC:word32] + r0_227
	branch r2_293 <= 0x000000FF l0000CA58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA58:
	Mem304[sp_221 - 0x00000004:word32] = Mem270[ap_223 + 4:word32]
	Mem307[sp_221 - 0x00000008:word32] = Mem304[r6_226 + 0x00010CDC:word32]
	call Mem307[0x000192BC:word32] + 2 (retsize: 4;)
		uses: ap:ap_223,fp:fp_225,pc:pc_229,r0:r0_227,r1:r1_796,r10:r10_222,r2:r2_293,r3:r0_227,r4:r4_797,r5:r5_795,r6:r6_226,r7:r7_230,r8:r8_232,r9:r9_224,sp:sp_221 - 0x00000008,Stack +FFFFFF18:dwLocEC,Stack +FFFFFF1C:dwLocE8,Stack +FFFFFF20:v46_216
		defs: fp:fp_327,pc:pc_339,r1:r1_807,r10:r10_316,r3:r3_345,r4:r4_812,r5:r5_802,r6:r6_328,r7:r7_344,r8:r8_350,r9:r9_322
	Mem353[r6_226 + 0x00010CDC:word32] = Mem307[r6_226 + 0x00010CDC:word32] + r3_234
	Mem355[Mem353[r6_226 + 0x00010CDC:word32]:byte] = 0x2E
	Mem357[r6_226 + 0x00010CDC:word32] = Mem355[r6_226 + 0x00010CDC:word32] + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA54:
	word32 fp_364 = Mem270[fp_225 + 0x0000000C:word32]
	word32 ap_365 = Mem270[fp_225 + 0x00000008:word32]
	r1Out = r1_796
	r2Out = r2_293
	r3Out = r0_227
	r4Out = r4_797
	r5Out = r5_795
	r6Out = r6_226
	r7Out = r7_230
	r8Out = r8_232
	r9Out = r9_224
	r10Out = r10_222
	apOut = ap_365
	fpOut = fp_364
	spOut = fp_225 - 0x00000004
	pcOut = pc_229
	return 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA1A:
	word32 r2_366 = Mem270[r6_226 + 0x00010CDC:word32]
	Mem368[r6_226 + 0x00010CDC:word32] = Mem270[r6_226 + 0x00010CDC:word32] + 0x00000001
	Mem370[r2_366:byte] = 0x2D
	word32 r2_371 = Mem370[r6_226 + 0x00010CDC:word32]
	Mem373[r6_226 + 0x00010CDC:word32] = Mem370[r6_226 + 0x00010CDC:word32] + 0x00000001
	Mem375[r2_371:byte] = 0x2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA7C:
	word32 r2_381 = Mem380[r6_226 + 0x00010CDC:word32]
	Mem383[r6_226 + 0x00010CD0:word32] = r2_381 - Mem380[r6_226 + 0x00010CC4:word32]
	Mem385[r2_381:byte] = 0x00
	word32 sp_392 = fp_225 - 0x00000004
	word32 fp_393 = Mem385[sp_392 + 0x00000010:word32]
	word32 ap_394 = Mem385[sp_392 + 0x0000000C:word32]
	r1Out = r1_796
	r2Out = r2_381
	r3Out = r3_234
	r4Out = r4_797
	r5Out = r5_795
	r6Out = r6_226
	r7Out = r7_230
	r8Out = r8_232
	r9Out = r9_224
	r10Out = r10_222
	apOut = ap_394
	fpOut = fp_393
	spOut = sp_392
	pcOut = pc_229
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000C9B8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA94:
	branch r9_7 == 0x00000003 l0000CA9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA9C:
	branch (Mem0[ap + 8:word32] & 0x00000008) != 0x00000000 l0000CAA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CAA4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CAA1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CB5C:
	word32 r8_424
	word32 r3_423
	word32 r7_422
	word32 r2_420
	word32 r0_419
	word32 r6_418
	word32 fp_417
	word32 r9_416
	word32 ap_415
	word32 sp_413
	word32 dwLocE8_818
	word32 dwLocE4_817
	Mem399[Mem0[r6 + 0x00010CDC:word32]:byte] = 0x00
	branch Mem399[r6 + 0x00010CD0:word32] == 0x00000000 l0000CBE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CBE0:
	call Mem409[0x000192D4:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc,r0:r0,r1:r1,r10:r10_5,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9_7,sp:fp + 0xFFFFFF18,Stack +0000:dwLocEC,Stack +0004:r6 + 0x00010BBC,Stack +0008:r8 + 1705
		defs: ap:ap_415,fp:fp_417,pc:pc_421,r0:r0_419,r10:r10_414,r2:r2_420,r3:r3_423,r6:r6_418,r7:r7_422,r8:r8_424,r9:r9_416,sp:sp_413
	dwLocE4_817 = r8 + 1705
	dwLocE8_818 = r6 + 0x00010BBC
	branch r0_419 == 0x00000000 l0000CC2B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CBF5:
	Mem432[sp_413 - 0x00000004:word32] = r8_424 + 1717
	Mem435[sp_413 - 0x00000008:word32] = r6_418 + 0x00010BBC
	word32 r5_822
	word32 r1_823
	word32 r4_824
	word32 sp_439
	word32 r10_440
	word32 ap_441
	word32 r9_442
	word32 fp_443
	word32 r6_444
	word32 r0_445
	word32 r2_446
	word32 pc_447
	word32 r7_448
	word32 r3_449
	word32 r8_450
	call Mem435[0x000192BC:word32] + 2 (retsize: 4;)
		uses: ap:ap_415,fp:fp_417,pc:pc_421,r0:r0_419,r1:r1,r10:r10_414,r2:r2_420,r3:r3_423,r4:r4,r5:r5,r6:r6_418,r7:r7_422,r8:r8_424,r9:r9_416,sp:sp_413 - 0x00000008,Stack +FFFFFF18:dwLocEC,Stack +FFFFFF1C:r6 + 0x00010BBC,Stack +FFFFFF20:r8 + 1705
		defs: ap:ap_441,fp:fp_443,pc:pc_447,r0:r0_445,r1:r1_823,r10:r10_440,r2:r2_446,r3:r3_449,r4:r4_824,r5:r5_822,r6:r6_444,r7:r7_448,r8:r8_450,r9:r9_442,sp:sp_439
	Mem453[r6_444 + 0x00010CF0:word32] = 0x00000000
	Mem455[sp_439 - 0x00000004:word32] = 0x00000000
	Mem458[sp_439 - 0x00000008:word32] = r6_444 + 0x00010BBC
	call Mem458[0x00019284:word32] + 2 (retsize: 4;)
		uses: ap:ap_441,fp:fp_443,pc:pc_447,r0:r0_445,r1:r1_823,r10:r10_440,r2:r2_446,r3:r3_449,r4:r4_824,r5:r5_822,r6:r6_444,r7:r7_448,r8:r8_450,r9:r9_442,sp:sp_439 - 0x00000008,Stack +FFFFFF18:dwLocEC,Stack +FFFFFF1C:r6 + 0x00010BBC,Stack +FFFFFF20:r8 + 1705
		defs: ap:ap_464,fp:fp_466,pc:pc_470,r0:r0_468,r10:r10_463,r2:r2_469,r3:r3_472,r6:r6_467,r7:r7_471,r8:r8_473,r9:r9_465,sp:sp_462
	branch r0_419 == 0x00000000 l0000CC2B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CC1F:
	branch Mem458[r10_414:word32] == 0x00000011 l0000CC2B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CC24:
	Mem483[r6_418 + 0x00010CF0:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CB6A:
	Mem489[Mem399[r6 + 0x00010CC4:word32]:byte] = 0x5D
	dwLocE4_817 = 0x7FFFFFFF
	dwLocE8_818 = r6 + 0x00010ABC
	dwLocEC = r6 + 0x00010BBC
	r0_419 = fn0000E2EA(r1, r5, r7, ap, fp, out r1, out r2_420, out r3_423, out r4, out r5, out r6_418, out r7_422, out r8_424, out r9_416, out ap_415, out fp_417, out sp_413)
	branch r0_419 != 0x00000000 l0000CB9B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CB9B:
	Mem525[r6_418 + 0x00010CF0:word32] = 0x00000000
	Mem527[sp_413 - 0x00000004:word32] = 0x00000000
	Mem530[sp_413 - 0x00000008:word32] = r6_418 + 0x00010ABC
	word32 sp_534
	word32 r10_535
	word32 ap_536
	word32 r9_537
	word32 fp_538
	word32 r6_539
	word32 r0_540
	word32 r2_541
	word32 pc_542
	word32 r7_543
	word32 r3_544
	word32 r8_545
	word32 r5_546
	word32 r1_547
	word32 r4_548
	call Mem530[0x00019284:word32] + 2 (retsize: 4;)
		uses: ap:ap_503,fp:fp_504,pc:pc,r0:r0_505,r1:r1_506,r10:r10_5,r2:r2_507,r3:r3_508,r4:r4_509,r5:r5_510,r6:r6_511,r7:r7_512,r8:r8_513,r9:r9_514,sp:sp_515 - 0x00000008,Stack +FFFFFF18:r6 + 0x00010BBC,Stack +FFFFFF1C:r6 + 0x00010ABC,Stack +FFFFFF20:0x7FFFFFFF
		defs: ap:ap_536,fp:fp_538,pc:pc_542,r0:r0_540,r1:r1_547,r10:r10_535,r2:r2_541,r3:r3_544,r4:r4_548,r5:r5_546,r6:r6_539,r7:r7_543,r8:r8_545,r9:r9_537,sp:sp_534
	branch r0_540 == 0x00000000 l0000CBC4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CBC4:
	Mem555[r6_539 + 0x00010AB8:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CBB4:
	branch Mem530[r10_535:word32] == 0x00000011 l0000CBCB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CBB9:
	Mem563[r6_539 + 0x00010CF0:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CBCB:
	Mem571[sp_534 - 0x00000004:word32] = r6_539 + 0x00010ABC
	Mem574[sp_534 - 0x00000008:word32] = r6_539 + 0x00010BBC
	call Mem574[0x000192BC:word32] + 2 (retsize: 4;)
		uses: ap:ap_536,fp:fp_538,pc:pc_542,r0:r0_540,r1:r1_547,r10:r10_535,r2:r2_541,r3:r3_544,r4:r4_548,r5:r5_546,r6:r6_539,r7:r7_543,r8:r8_545,r9:r9_537,sp:sp_534 - 0x00000008,Stack +FFFFFF18:r6 + 0x00010BBC,Stack +FFFFFF1C:r6 + 0x00010ABC,Stack +FFFFFF20:0x7FFFFFFF
		defs: ap:ap_582,fp:fp_586,pc:pc_593,r0:r0_589,r1:r1_603,r10:r10_580,r2:r2_591,r3:r3_597,r4:r4_605,r5:r5_601,r6:r6_587,r7:r7_595,r8:r8_599,r9:r9_584,sp:sp_578
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CB98:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CC2B:
	word32 sp_608 = sp_413 - 0x00000004
	Mem612[sp_608:word32] = Mem610[ap_415 + 4:word32]
	word32 sp_616
	word32 r10_618
	word32 ap_619
	word32 r9_621
	word32 fp_623
	word32 r6_625
	word32 r0_627
	word32 pc_631
	word32 r7_633
	word32 r3_635
	word32 r8_637
	word32 r5_639
	word32 r1_641
	word32 r4_644
	call Mem612[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap_609,fp:fp_622,pc:pc_630,r0:r0_626,r1:r1_640,r10:r10_617,r2:r2_628,r3:r3_634,r4:r4_642,r5:r5_638,r6:r6_624,r7:r7_632,r8:r8_636,r9:r9_620,sp:sp_608,Stack +FFFFFF18:dwLocEC_836,Stack +FFFFFF1C:dwLocE8_835,Stack +FFFFFF20:dwLocE4_834
		defs: ap:ap_619,fp:fp_623,pc:pc_631,r0:r0_627,r1:r1_641,r10:r10_618,r3:r3_635,r4:r4_644,r5:r5_639,r6:r6_625,r7:r7_633,r8:r8_637,r9:r9_621,sp:sp_616
	word32 r2_647 = Mem612[r6_625 + 0x00010CDC:word32] - (r6_625 + 0x00010ABC)
	word32 r0_648 = r0_627 + r2_647
	branch r0_648 <=u 0x000000FF l0000CC54
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CC54:
	Mem654[sp_616 - 0x00000004:word32] = Mem612[ap_619 + 4:word32]
	Mem657[sp_616 - 0x00000008:word32] = Mem654[r6_625 + 0x00010CDC:word32]
	word32 sp_661
	word32 r10_662
	word32 ap_663
	word32 r9_664
	word32 fp_665
	word32 r6_666
	word32 r0_667
	word32 r2_668
	word32 pc_669
	word32 r7_670
	word32 r3_671
	word32 r8_672
	word32 r5_673
	word32 r1_674
	word32 r4_675
	call Mem657[0x000192BC:word32] + 2 (retsize: 4;)
		uses: ap:ap_619,fp:fp_623,pc:pc_631,r0:r0_648,r1:r1_641,r10:r10_618,r2:r2_647,r3:r3_635,r4:r4_644,r5:r5_639,r6:r6_625,r7:r7_633,r8:r8_637,r9:r9_621,sp:sp_616 - 0x00000008,Stack +FFFFFF18:dwLocEC_836,Stack +FFFFFF1C:dwLocE8_835,Stack +FFFFFF20:dwLocE4_834
		defs: ap:ap_663,fp:fp_665,pc:pc_669,r0:r0_667,r1:r1_674,r10:r10_662,r2:r2_668,r3:r3_671,r4:r4_675,r5:r5_673,r6:r6_666,r7:r7_670,r8:r8_672,r9:r9_664,sp:sp_661
	Mem679[sp_661 - 0x00000004:word32] = Mem657[ap_663 + 4:word32]
	word32 r10_684
	word32 r9_686
	word32 fp_687
	word32 r6_688
	word32 r0_689
	word32 r2_690
	word32 pc_691
	word32 r7_692
	word32 r3_693
	word32 r8_694
	word32 r5_695
	word32 r1_696
	word32 r4_697
	call Mem679[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap_663,fp:fp_665,pc:pc_669,r0:r0_667,r1:r1_674,r10:r10_662,r2:r2_668,r3:r3_671,r4:r4_675,r5:r5_673,r6:r6_666,r7:r7_670,r8:r8_672,r9:r9_664,sp:sp_661 - 0x00000004,Stack +FFFFFF18:dwLocEC_836,Stack +FFFFFF1C:dwLocE8_835,Stack +FFFFFF20:dwLocE4_834
		defs: fp:fp_687,pc:pc_691,r0:r0_689,r1:r1_696,r10:r10_684,r2:r2_690,r3:r3_693,r4:r4_697,r5:r5_695,r6:r6_688,r7:r7_692,r8:r8_694,r9:r9_686
	Mem700[r6_688 + 0x00010CDC:word32] = Mem679[r6_688 + 0x00010CDC:word32] + r0_689
	word32 fp_707 = Mem700[fp_687 + 0x0000000C:word32]
	word32 ap_708 = Mem700[fp_687 + 0x00000008:word32]
	r1Out = r1_696
	r2Out = r2_690
	r3Out = r3_693
	r4Out = r4_697
	r5Out = r5_695
	r6Out = r6_688
	r7Out = r7_692
	r8Out = r8_694
	r9Out = r9_686
	r10Out = r10_684
	apOut = ap_708
	fpOut = fp_707
	spOut = fp_687 - 0x00000004
	pcOut = pc_691
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CC50:
	word32 fp_714 = Mem612[fp_623 + 0x0000000C:word32]
	word32 ap_715 = Mem612[fp_623 + 0x00000008:word32]
	r1Out = r1_641
	r2Out = r2_647
	r3Out = r3_635
	r4Out = r4_644
	r5Out = r5_639
	r6Out = r6_625
	r7Out = r7_633
	r8Out = r8_637
	r9Out = r9_621
	r10Out = r10_618
	apOut = ap_715
	fpOut = fp_714
	spOut = fp_623 - 0x00000004
	pcOut = pc_631
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CA99:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CC78:
	branch r9_7 != 0x00000004 l0000CCA2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CCA2:
	branch r9_7 != 0x00000005 l0000CCAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CCAA:
	word32 fp_727 = Mem0[fp + 0x0000000C:word32]
	word32 ap_728 = Mem0[fp + 0x00000008:word32]
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9_7
	r10Out = r10_414
	apOut = ap_728
	fpOut = fp_727
	spOut = fp - 0x00000004
	pcOut = pc
	return 0x00000063
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CCA7:
	word32 fp_735 = Mem0[fp + 0x0000000C:word32]
	word32 ap_736 = Mem0[fp + 0x00000008:word32]
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9_7
	r10Out = r10_414
	apOut = ap_736
	fpOut = fp_735
	spOut = fp - 0x00000004
	pcOut = pc
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CC7D:
	branch Mem0[r6 + 0x00010CF0:word32] == 0x00000000 l0000CC89
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CC89:
	Mem742[Mem0[r6 + 0x00010CDC:word32]:byte] = 0x00
	word32 r10_753
	word32 r9_755
	word32 fp_756
	word32 r6_757
	word32 r2_759
	word32 pc_760
	word32 r7_761
	word32 r3_762
	word32 r8_763
	word32 r5_764
	word32 r1_765
	word32 r4_766
	call Mem748[0x000192BC:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc,r0:r0,r1:r1,r10:r10_5,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9_7,sp:fp + 0xFFFFFF18,Stack +0000:dwLocEC,Stack +0004:Mem745[ap + 4:word32],Stack +0008:r6 + 0x00010ABC
		defs: fp:fp_756,pc:pc_760,r1:r1_765,r10:r10_753,r2:r2_759,r3:r3_762,r4:r4_766,r5:r5_764,r6:r6_757,r7:r7_761,r8:r8_763,r9:r9_755
	word32 fp_774 = Mem748[fp_756 + 0x0000000C:word32]
	word32 ap_775 = Mem748[fp_756 + 0x00000008:word32]
	r1Out = r1_765
	r2Out = r2_759
	r3Out = r3_762
	r4Out = r4_766
	r5Out = r5_764
	r6Out = r6_757
	r7Out = r7_761
	r8Out = r8_763
	r9Out = r9_755
	r10Out = r10_753
	apOut = ap_775
	fpOut = fp_774
	spOut = fp_756 - 0x00000004
	pcOut = pc_760
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CC85:
	word32 fp_781 = Mem0[fp + 0x0000000C:word32]
	word32 ap_782 = Mem0[fp + 0x00000008:word32]
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9_7
	r10Out = r10_414
	apOut = ap_782
	fpOut = fp_781
	spOut = fp - 0x00000004
	pcOut = pc
	return 0x00000003
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000C6FA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000CE52(word32 r3, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r3:[8..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 sp
// Preserved:
fn0000CE52_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE52:
	word32 r3_48
	word32 r0_100 = Mem0[ap + 4:word32]
	branch r0_100 != 0x00000001 l0000CE64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE64:
	branch r0_100 == 0x00000002 l0000CE85
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE69:
	branch r0_100 < 0x00000009 l0000CE73
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE6E:
	branch r0_100 <= 0x0000000B l0000CE85
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE73:
	branch r0_100 < 0x00000050 l0000CE8C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE7C:
	branch r0_100 > 0x00000052 l0000CE8C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE8C:
	r0_100 = SEQ(SLICE(r0_100, word24, 8), 0x04)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE85:
	r0_100 = SEQ(SLICE(r0_100, word24, 8), 0x02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE8F:
	r3_48 = SEQ(SLICE(r3, word24, 8), (byte) r0_100)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE5E:
	r3_48 = SEQ(SLICE(r3, word24, 8), 0x01)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE92:
	word32 r2_76
	word32 r1_59 = (int32) (int8) r3_48
	branch Mem0[ap + 4:word32] != 0x00000000 l0000CEA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CEA0:
	word32 r0_74 = Mem0[ap + 4:word32] << 4
	r0_100 = r0_74 | 0x7FFF0000
	r2_76 = r0_74 | 0x7FFF0000 | r1_59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CE9A:
	r2_76 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CEB0:
	call Mem92[0x0001928C:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0_99,r1:r1_59,r2:r2_91,r3:r3_58,sp:fp - 0x00000008,Stack +0004:r2_91
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000CE52_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000CEBE(word32 r0, word32 r1, word32 r2, word32 r3, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31]
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 r2 r3 sp
// Preserved:
fn0000CEBE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CEBE:
	branch Mem0[r2 + 0x00010CF4:word32] >= 0x00000000 l0000CF36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CED0:
	word32 sp_26
	word32 r2_27
	word32 fp_28
	word32 pc_29
	word32 r0_31
	word32 ap_33
	word32 r3_35
	word32 r1_37
	call Mem19[pc:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc + 0x00000004,r0:r0,r1:r1,r2:r2,r3:r3,sp:fp - 0x00000028,Stack +0004:r2 + 0x00010CF8,Stack +0008:fp + -6,Stack +000C:0x0000000000000000
		defs: ap:ap_33,fp:fp_28,pc:pc_29,r0:r0_31,r1:r1_37,r2:r2_27,r3:r3_35,sp:sp_26
	Mem40[Mem19[r0_31 + 21328:word32]:real32] = Mem19[Mem19[sp_26 + 32766:word32]:real32]
	branch (r0_31 & 0x00000001) == 0x00000000 l0000CF13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF13:
	word32 r1_51
	branch (r3_35 & 0x00000001) == 0x00000000 l0000CF2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF16:
	branch ((int32) Mem40[fp_28 + -14:int16] & 0x00000001) == 0x00000000 l0000CF2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF1D:
	word32 r0_47 = (uint32) Mem40[fp_28 + -15:byte]
	branch r0_47 <u 0x00000005 l0000CF2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF2C:
	r1_51 = 0x00000018
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF26:
	r1_51 = r0_47
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF2F:
	Mem63[r2_27 + 0x00010CF4:word32] = r1_51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF36:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000CEBE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CEE8:
	Mem81[sp_26 - 0x00000008:word64] = 0x0000000000000000
	Mem84[sp_26 - 0x00000010:word64] = 0x0000000000000000
	Mem86[sp_26 - 0x00000014:word32] = 0x00000008
	Mem89[sp_26 - 0x00000018:word32] = fp_28 + -22
	Mem92[sp_26 - 0x00000020:word64] = 0x0000000000000000
	Mem95[sp_26 - 0x00000024:word32] = fp_28 + -14
	Mem97[sp_26 - 0x00000028:word32] = 0x00000027
	Mem100[sp_26 - 0x0000002C:int32] = (int32) Mem97[fp_28 + -6:int16]
	Mem102[sp_26 - 0x00000030:word32] = 0x00000000
	call Mem102[pc_29:word32] + 2 (retsize: 4;)
		uses: ap:ap_33,fp:fp_28,pc:pc_29 + 0x00000004,r0:r0_31,r1:r1_37,r2:r2_27,r3:r3_35,sp:sp_26 - 0x00000030,Stack +FFFFFFDC:r2 + 0x00010CF8,Stack +FFFFFFE0:fp + -6,Stack +FFFFFFE4:0x0000000000000000
	__halt()
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000CF42(word32 r2, word32 r4, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp:[0..31] r2:[0..31] r4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0000CF42_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000CF42_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF42:
	word32 r4_36
	word32 sp_24
	word32 r2_25
	word32 fp_26
	call Mem20[0x000192D0:word32] + 2 (retsize: 4;)
		uses: fp:fp,r2:r2,r4:r4,sp:fp - 0x00000040,Stack +0004:fp + -44,Stack +0008:r2 + 1767,Stack +000C:r2 + 1783,Stack +0010:r2 + 1791,Stack +0014:r2 + 1796
		defs: fp:fp_26,r2:r2_25,sp:sp_24
	Mem32[sp_24 - 0x00000004:word32] = fp_26 + -44
	branch Mem32[r2_25 + 1748:byte] < 0x36 l0000CF80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF80:
	r4_36 = r2_25 + 1755
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF77:
	r4_36 = r2_25 + 1759
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CF85:
	Mem47[sp_24 - 0x00000008:word32] = r4_36
	Mem51[sp_24 - 0x0000000C:word32] = r2_25 + 1746
	Mem54[sp_24 - 0x00000010:word32] = r2_25 + 1740
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000CFBA(word32 r0, word32 r1, word32 r4, word32 r5, word32 r6, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn0000CFBA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CFBA:
	word32 r3_6 = Mem0[ap + 4:word32]
	word32 r2_7 = Mem0[ap + 8:word32]
	branch r2_7 != 0x00000000 l0000CFCA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CFCA:
	word32 ap_18
	word32 fp_19
	word32 r3_24
	word32 r6_27
	word32 r1_118
	word32 r2_110
	word32 r4_117
	word32 r0_20 = fn0000D39E(r0, r1, r2_7, r3_6, r4, r5, r6, ap, fp, out r1_118, out r2_110, out r3_24, out r4_117, out r5_187, out r6_27, out ap_18, out fp_19, out sp_188)
	word32 r3_115 = r3_24 ^ 0xFFFFFFFF
	branch Mem0[ap_18 + 12:word32] >=u 0x00000008 l0000CFE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CFE4:
	word32 r2_39 = r2_110 + 0x00000001
	word32 r3_47 = (uint32) SLICE(r3_115, ui24, 8) ^ Mem40[r0_20 + (((uint32) Mem40[r2_110:byte] ^ r3_115) & ~0xFFFFFF00) * 4:word32]
	word32 r3_54 = (uint32) SLICE(r3_47, ui24, 8) ^ Mem40[r0_20 + (((uint32) Mem40[r2_39:byte] ^ r3_47) & ~0xFFFFFF00) * 4:word32]
	word32 r3_61 = (uint32) SLICE(r3_54, ui24, 8) ^ Mem40[r0_20 + (((uint32) Mem40[r2_39 + 0x00000001:byte] ^ r3_54) & ~0xFFFFFF00) * 4:word32]
	word32 r3_68 = (uint32) SLICE(r3_61, ui24, 8) ^ Mem40[r0_20 + (((uint32) Mem40[r2_39 + 0x00000002:byte] ^ r3_61) & ~0xFFFFFF00) * 4:word32]
	word32 r3_75 = (uint32) SLICE(r3_68, ui24, 8) ^ Mem40[r0_20 + (((uint32) Mem40[r2_39 + 0x00000003:byte] ^ r3_68) & ~0xFFFFFF00) * 4:word32]
	word32 r3_82 = (uint32) SLICE(r3_75, ui24, 8) ^ Mem40[r0_20 + (((uint32) Mem40[r2_39 + 0x00000004:byte] ^ r3_75) & ~0xFFFFFF00) * 4:word32]
	word32 r3_89 = (uint32) SLICE(r3_82, ui24, 8) ^ Mem40[r0_20 + (((uint32) Mem40[r2_39 + 0x00000005:byte] ^ r3_82) & ~0xFFFFFF00) * 4:word32]
	r4_117 = ((uint32) Mem40[r2_39 + 0x00000006:byte] ^ r3_89) & ~0xFFFFFF00
	r1_118 = (uint32) SLICE(r3_89, ui24, 8)
	r3_115 = r1_118 ^ Mem40[r0_20 + r4_117 * 4:word32]
	Mem99[ap_18 + 12:word32] = Mem40[ap_18 + 12:word32] - 0x00000008
	r2_110 = r2_39 + 0x00000007
	branch Mem99[ap_18 + 12:word32] <u 0x00000008 l0000D0A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D0A4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CFE1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D0A7:
	branch Mem105[ap_18 + 12:word32] == 0x00000000 l0000D0C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D0AC:
	r4_117 = ((uint32) Mem113[r2_110:byte] ^ r3_115) & ~0xFFFFFF00
	r1_118 = (uint32) SLICE(r3_115, ui24, 8)
	r3_115 = r1_118 ^ Mem113[r0_20 + r4_117 * 4:word32]
	word32 v28_122 = Mem113[ap_18 + 12:word32] - 0x00000001
	Mem123[ap_18 + 12:word32] = v28_122
	r2_110 = r2_110 + 0x00000001
	branch v28_122 != 0x00000000 l0000D0AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D0C8:
	word32 fp_138 = Mem137[fp_19 + 0x0000000C:word32]
	word32 ap_139 = Mem137[fp_19 + 0x00000008:word32]
	r1Out = r1_118
	r2Out = r2_110
	r3Out = r3_115
	r4Out = r4_117
	r5Out = ap_18 + 12
	r6Out = r6_27
	apOut = ap_139
	fpOut = fp_138
	spOut = fp_19 - 0x00000004
	return r3_115 ^ 0xFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000CFC7:
	word32 fp_146 = Mem0[fp + 0x0000000C:word32]
	word32 ap_147 = Mem0[fp + 0x00000008:word32]
	r1Out = r1
	r2Out = r2_7
	r3Out = r3_6
	r4Out = r4
	r5Out = r5
	r6Out = r6
	apOut = ap_147
	fpOut = fp_146
	spOut = fp - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000CFBA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000D0D6(word32 r0, word32 r1, word32 r2, word32 r3, word32 r5, word32 r6, word32 r7, word32 r8, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
fn0000D0D6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D0D6:
	word32 v9_8 = Mem0[ap + 12:word32]
	word32 sp_13
	word32 r4_14
	word32 ap_15
	word32 r0_134
	word32 r2_127
	word32 fp_170
	word32 r3_101
	word32 r6_105
	word32 r1_109
	word32 r7_113
	word32 r8_117
	call Mem9[0x000192CC:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r1:r1,r2:r2,r3:r3,r4:Mem0[0x0001934C:word32],r5:r5,r6:r6,r7:r7,r8:r8,sp:fp - 0x00000008,Stack +0004:v9_8
		defs: ap:ap_15,fp:fp_23,r0:r0_17,r1:r1_29,r2:r2_21,r3:r3_25,r4:r4_14,r6:r6_27,r7:r7_31,r8:r8_33,sp:sp_13
	word32 r5_119 = r0_134
	branch r0_134 == 0x00000000 l0000D10B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D0EF:
	r2_127 = (int32) (int8) SEQ(SLICE(r2_127, word24, 8), Mem9[r0_134:byte] & ~0x80)
	branch (Mem9[r4_14 + r2_127 * 4:word32] & 0x00000008) == 0x00000000 l0000D10B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D0FC:
	r5_119 = r5_119 + 0x00000001
	r0_134 = (int32) (int8) SEQ(SLICE(r0_134, word24, 8), Mem9[r5_119:byte] & ~0x80)
	branch (Mem9[r4_14 + r0_134 * 4:word32] & 0x00000008) != 0x00000000 l0000D0FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D10B:
	branch r5_119 == 0x00000000 l0000D113
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D10F:
	branch Mem9[r5_119:byte] != 0x00 l0000D13F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D113:
	Mem76[sp_13 - 0x00000004:word32] = Mem9[ap_15 + 16:word32]
	call Mem76[0x000192CC:word32] + 2 (retsize: 4;)
		uses: ap:ap_15,fp:fp_23,r0:r0_86,r1:r1_29,r2:r2_91,r3:r3_25,r4:r4_14,r5:r5_57,r6:r6_27,r7:r7_31,r8:r8_33,sp:sp_13 - 0x00000004,Stack +FFFFFFFC:v9_8
		defs: ap:ap_84,fp:fp_97,r0:r0_87,r1:r1_109,r2:r2_93,r3:r3_101,r4:r4_83,r6:r6_105,r7:r7_113,r8:r8_117,sp:sp_80
	r5_119 = r0_134
	branch r0_134 == 0x00000000 l0000D13F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D122:
	r2_127 = (int32) (int8) SEQ(SLICE(r2_127, word24, 8), Mem76[r0_134:byte] & ~0x80)
	branch (Mem76[r4_14 + r2_127 * 4:word32] & 0x00000008) == 0x00000000 l0000D13F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D12F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D130:
	r5_119 = r5_119 + 0x00000001
	r0_134 = (int32) (int8) SEQ(SLICE(r0_134, word24, 8), Mem76[r5_119:byte] & ~0x80)
	branch (Mem76[r4_14 + r0_134 * 4:word32] & 0x00000008) != 0x00000000 l0000D130
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D13F:
	branch r5_119 == 0x00000000 l0000D147
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D143:
	branch Mem146[r5_119:byte] != 0x00 l0000D148
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D148:
	word32 sp_153 = sp_13 - 0x00000004
	Mem154[sp_153:word32] = r5_119
	word32 sp_158
	word32 r4_160
	word32 ap_163
	word32 r0_165
	word32 r5_166
	word32 r2_169
	word32 fp_172
	word32 r3_175
	word32 r6_178
	word32 r1_181
	word32 r7_184
	word32 r8_187
	call Mem154[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap_161,fp:fp_170,r0:r0_164,r1:r1_179,r2:r2_167,r3:r3_173,r4:r4_159,r5:r5_141,r6:r6_176,r7:r7_182,r8:r8_185,sp:sp_153,Stack +FFFFFFFC:v9_8
		defs: ap:ap_163,fp:fp_172,r0:r0_165,r1:r1_181,r2:r2_169,r3:r3_175,r4:r4_160,r5:r5_166,r6:r6_178,r7:r7_184,r8:r8_187,sp:sp_158
	Mem191[sp_158 - 0x00000004:word32] = r0_165 + 0x00000001
	word32 sp_195
	word32 r4_196
	word32 ap_197
	word32 r0_198
	word32 r5_199
	word32 r2_200
	word32 fp_201
	word32 r6_203
	word32 r1_204
	word32 r7_205
	word32 r8_206
	call Mem191[0x000192B4:word32] + 2 (retsize: 4;)
		uses: ap:ap_163,fp:fp_172,r0:r0_165 + 0x00000001,r1:r1_181,r2:r2_169,r3:r3_175,r4:r4_160,r5:r5_166,r6:r6_178,r7:r7_184,r8:r8_187,sp:sp_158 - 0x00000004,Stack +FFFFFFFC:v9_8
		defs: ap:ap_197,fp:fp_201,r0:r0_198,r1:r1_204,r2:r2_200,r4:r4_196,r5:r5_199,r6:r6_203,r7:r7_205,r8:r8_206,sp:sp_195
	branch r0_198 != 0x00000000 l0000D177
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D177:
	Mem214[sp_195 - 0x00000004:word32] = r5_199
	Mem216[sp_195 - 0x00000008:word32] = r0_198
	word32 sp_220
	word32 r4_221
	word32 ap_222
	word32 r5_224
	word32 fp_226
	word32 r3_227
	word32 r8_231
	word32 r1_229
	word32 r0_223
	call Mem216[0x000192BC:word32] + 2 (retsize: 4;)
		uses: ap:ap_197,fp:fp_201,r0:r0_198,r1:r1_204,r2:r2_200,r3:r0_198,r4:r4_196,r5:r5_199,r6:r6_203,r7:r7_205,r8:r8_206,sp:sp_195 - 0x00000008,Stack +FFFFFFFC:v9_8
		defs: ap:ap_222,fp:fp_226,r0:r0_223,r1:r1_229,r3:r3_227,r4:r4_221,r5:r5_224,r8:r8_231,sp:sp_220
	word32 r2_233 = r3_227
	word32 r6_234 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D188:
	byte v28_243 = Mem216[r2_233:byte]
	word24 v29_245 = SLICE(r0_223, word24, 8)
	r6_234 = r6_234 + 0x00000001
	r0_223 = SEQ(v29_245, v28_243)
	branch v28_243 == 0x00 l0000D1AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D18F:
	r0_223 = (int32) (int8) SEQ(v29_245, (byte) r0_223 & ~0x80)
	branch (Mem216[r4_221 + r0_223 * 4:word32] & 0x00000008) != 0x00000000 l0000D1AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D19B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D19C:
	r2_233 = r2_233 + 0x00000001
	byte v32_261 = Mem216[r2_233:byte]
	word24 v33_263 = SLICE(r0_223, word24, 8)
	r0_223 = SEQ(v33_263, v32_261)
	branch v32_261 == 0x00 l0000D1AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D1A3:
	r0_223 = (int32) (int8) SEQ(v33_263, (byte) r0_223 & ~0x80)
	branch (Mem216[r4_221 + r0_223 * 4:word32] & 0x00000008) == 0x00000000 l0000D19C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D1AF:
	byte v37_278 = Mem216[r2_233:byte]
	r1_229 = SEQ(SLICE(r1_229, word24, 8), v37_278)
	branch v37_278 == 0x00 l0000D1D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D1B4:
	r0_223 = (int32) (int8) SEQ(SLICE(r0_223, word24, 8), (byte) r1_229 & ~0x80)
	branch (Mem216[r4_221 + r0_223 * 4:word32] & 0x00000008) == 0x00000000 l0000D1D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D1C1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D1C4:
	r2_233 = r2_233 + 0x00000001
	byte v41_302 = Mem216[r2_233:byte]
	r1_229 = SEQ(SLICE(r1_229, word24, 8), v41_302)
	branch v41_302 == 0x00 l0000D1D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D1CB:
	r0_223 = (int32) (int8) SEQ(SLICE(r0_223, word24, 8), (byte) r1_229 & ~0x80)
	branch (Mem216[r4_221 + r0_223 * 4:word32] & 0x00000008) != 0x00000000 l0000D1C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D1D8:
	branch (byte) r1_229 != 0x00 l0000D188
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D1DC:
	word32 r2_334 = r6_234 + Mem216[Mem216[ap_222 + 4:word32]:word32]
	Mem343[sp_220 - 0x00000004:word32] = r2_334 + 0x00000001 << 2
	word32 sp_346
	word32 r4_348
	word32 ap_349
	word32 r0_351
	word32 r5_357
	word32 r2_358
	word32 fp_364
	word32 r1_372
	word32 r7_373
	word32 r8_379
	word32 r3_370
	call Mem343[0x000192B4:word32] + 2 (retsize: 4;)
		uses: ap:ap_222,fp:fp_226,r0:r0_350,r1:r1_318,r2:r2_334 + 0x00000001,r3:r3_227,r4:r4_221,r5:r5_224,r6:r6_240,r7:r6_240,r8:r8_231,sp:sp_220 - 0x00000004,Stack +FFFFFFFC:v9_8
		defs: ap:ap_349,fp:fp_364,r0:r0_351,r1:r1_372,r2:r2_358,r3:r3_370,r4:r4_348,r5:r5_357,r7:r7_373,r8:r8_379,sp:sp_346
	branch r0_351 != 0x00000000 l0000D215
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D215:
	word32 r5_389 = Mem343[ap_349 + 8:word32]
	word32 r2_390 = Mem343[r5_389:word32]
	Mem392[r5_389:word32] = Mem343[r5_389:word32] + 0x00000004
	Mem394[r0_351:word32] = Mem392[r2_390:word32]
	word32 r6_388 = r0_351 + 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D22C:
	Mem401[r6_388:word32] = r3_370
	r6_388 = r6_388 + 0x00000004
	word32 r0_403 = (int32) Mem401[r3_370:int8]
	branch r0_403 == 0x00000000 l0000D258
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D234:
	branch (Mem401[r4_348 + (r0_403 & ~0xFFFFFF80) * 4:word32] & 0x00000008) != 0x00000000 l0000D258
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D241:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D244:
	r3_370 = r3_370 + 0x00000001
	r0_403 = (int32) Mem401[r3_370:int8]
	branch r0_403 == 0x00000000 l0000D258
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D24B:
	branch (Mem401[r4_348 + (r0_403 & ~0xFFFFFF80) * 4:word32] & 0x00000008) == 0x00000000 l0000D244
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D258:
	branch r0_403 == 0x00000000 l0000D25E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D25C:
	Mem434[r3_370:byte] = 0x00
	r3_370 = r3_370 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D25E:
	word32 r0_443 = (int32) Mem441[r3_370:int8]
	branch r0_443 == 0x00000000 l0000D284
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D263:
	branch (Mem441[r4_348 + (r0_443 & ~0xFFFFFF80) * 4:word32] & 0x00000008) == 0x00000000 l0000D284
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D270:
	r3_370 = r3_370 + 0x00000001
	r0_443 = (int32) Mem441[r3_370:int8]
	branch r0_443 == 0x00000000 l0000D284
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D277:
	branch (Mem441[r4_348 + (r0_443 & ~0xFFFFFF80) * 4:word32] & 0x00000008) != 0x00000000 l0000D270
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D284:
	branch r0_443 != 0x00000000 l0000D22C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D288:
	word32 r7_484 = r7_373 + Mem441[Mem441[ap_349 + 4:word32]:word32]
	word32 v52_485 = Mem441[ap_349 + 4:word32] - 0x00000001
	Mem486[Mem441[ap_349 + 4:word32]:word32] = v52_485
	branch v52_485 == 0x00000000 l0000D2AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D295:
	word32 r3_489 = Mem486[ap_349 + 0x00000008:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D29C:
	word32 r2_495 = Mem494[r3_489:word32]
	Mem497[r3_489:word32] = Mem494[r3_489:word32] + 0x00000004
	Mem500[r6_388:word32] = Mem497[r2_495:word32]
	word32 v55_503 = Mem500[ap_349 + 4:word32] - 0x00000001
	Mem504[Mem500[ap_349 + 4:word32]:word32] = v55_503
	r6_388 = r6_388 + 0x00000004
	branch v55_503 != 0x00000000 l0000D29C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D2AA:
	Mem514[r6_388:word32] = 0x00000000
	Mem526[Mem514[ap_349 + 8:word32]:word32] = r0_351
	Mem530[Mem526[ap_349 + 0x00000004:word32]:word32] = r7_484
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D1F6:
	Mem546[sp_346 - 0x00000004:word32] = r3_370
	call Mem546[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_349,fp:fp_364,r0:r0_351,r1:r1_372,r2:r2_358,r3:r3_370,r4:r4_348,r5:r5_357,r6:r0_351,r7:r7_373,r8:r8_379,sp:sp_346 - 0x00000004,Stack +FFFFFFFC:v9_8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D161:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D147:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000D0D6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000D39E(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn0000D39E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D39E:
	branch Mem0[r6:word32] != 0x00000000 l0000D3FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D3AC:
	word32 r0_19
	call Mem12[0x000192B4:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r1:r1,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,sp:fp - 0x00000008,Stack +0004:0x00000400
		defs: fp:fp_33,r0:r0_19,r1:r1_29,r2:r2_27,r3:r3_25,r4:r4_23,r6:r6_17
	r5 = r0_19
	branch r0_19 == 0x00000000 l0000D3FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D3BD:
	r4 = 0x00000000
	r3 = r0_19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D3C4:
	r2 = r4
	r1 = 0x00000008
	branch 0x00000008 == 0x00000000 l0000D3EC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D3CC:
	word32 r0_53
	branch (r2 & 0x00000001) == 0x00000000 l0000D3E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D3E0:
	r0_53 = (uint32) SLICE(r2, ui31, 1)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D3CF:
	r0_53 = (uint32) SLICE(r2, ui31, 1) ^ 0xEDB88320
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D3E5:
	r2 = r0_53
	r1 = r1 - 0x00000001
	branch r1 != 0x00000000 l0000D3CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D3EC:
	Mem74[r3:word32] = r2
	r3 = r3 + 0x00000004
	r4 = r4 + 0x00000001
	branch r4 <= 0x000000FF l0000D3C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D3FA:
	Mem90[r6:word32] = r0_19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D3FD:
	word32 sp_105 = fp - 0x00000004
	word32 r0_96 = Mem95[r6:word32]
	word32 fp_106 = Mem95[sp_105 + 0x00000010:word32]
	word32 ap_107 = Mem95[sp_105 + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	apOut = ap_107
	fpOut = fp_106
	spOut = sp_105
	return r0_96
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000D39E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000D406(word32 ap, word32 fp, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31]
// LiveOut: ap fp sp
// Trashed: CVZN ap fp sp
// Preserved:
fn0000D406_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D406:
	branch Mem0[ap:word32] == 0x00000000 l0000D41F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D414:
	word32 ap_17
	call Mem12[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,sp:fp - 0x00000008,Stack +0004:Mem0[ap:word32]
		defs: ap:ap_17,fp:fp_19
	Mem22[ap_17:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D41F:
	word32 sp_28 = fp - 0x00000004
	word32 ap_31 = Mem29[sp_28 + 0x0000000C:word32]
	fpOut = Mem29[sp_28 + 0x00000010:word32]
	spOut = sp_28
	return ap_31
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000D406_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000D422(word32 r0, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r2:[0..31] r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r2 r3 r4 sp
// Preserved:
fn0000D422_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D422:
	word32 r2_16
	word32 r4_18
	word32 r3_20
	call Mem11[0x0001927C:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r2:r2,r3:r3,r4:r4,sp:fp - 0x00000010,Stack +0004:r2,Stack +0008:0x00000000,Stack +000C:0x0000C851
		defs: r2:r2_16,r3:r3_20,r4:r4_18
	Mem29[r2_16 + 36:word32] = -0x00000001
	Mem31[r2_16 + 0x0000C60F:word32] = r4_18 + 2
	Mem33[r2_16 + 144:word32] = r3_20
	Mem35[r2_16 + 148:word32] = r3_20 + 4
	Mem37[r2_16 + 1511:word32] = r2_16 + 167
	Mem39[r2_16 + 0x0000C6E5:word32] = 0x00000001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000D422_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000D4A2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0000D4A2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000D4A2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D4A2:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000D50E(word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31]
// LiveOut:
// Trashed: CVZN ap fp sp
// Preserved:
fn0000D50E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D50E:
	branch Mem0[ap + 0x0000C5FB:word32] <= 0x00000000 l0000D529
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D520:
	Mem10[ap + 132:word32] = Mem0[ap + 132:word32] + Mem0[ap + 0x0000C5FB:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D529:
	branch Mem13[ap + 0x0000C849:word32] <= 0x00000000 l0000D554
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D554:
	branch Mem13[ap + 0x0000C5FB:word32] >= 0x00000000 l0000D562
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D55C:
	Mem22[ap + 0x0000C5FB:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D562:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D531:
	Mem35[ap + 0x0000C5FB:word32] = Mem13[ap + 132:word32] + Mem13[ap + 0x0000C849:word32]
	Mem37[ap + 0x0000C5F7:word32] = Mem35[ap + 0x0000C84D:word32] - Mem35[ap + 132:word32]
	Mem39[ap + 0x0000C849:word32] = 0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000D50E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000D566(word32 ap, word32 fp, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31]
// LiveOut: ap fp sp
// Trashed: CVZN ap fp sp
// Preserved:
fn0000D566_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D566:
	branch Mem0[ap + 0x0000C5FB:word32] <= Mem0[ap + 132:word32] l0000D5AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D5AC:
	Mem10[ap + 0x0000C849:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D57B:
	branch Mem0[ap + 132:word32] >= 0x00000000 l0000D585
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D581:
	Mem20[ap + 132:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D585:
	Mem28[ap + 0x0000C84D:word32] = Mem26[ap + 132:word32] + Mem26[ap + 0x0000C5F7:word32]
	Mem30[ap + 0x0000C849:word32] = Mem28[ap + 0x0000C5FB:word32] - Mem28[ap + 132:word32]
	Mem32[ap + 0x0000C5FB:word32] = Mem30[ap + 132:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D5B2:
	Mem39[ap + 132:word32] = Mem37[ap + 132:word32] - Mem37[ap + 0x0000C5FB:word32]
	word32 ap_46 = Mem39[fp + 0x00000008:word32]
	fpOut = Mem39[fp + 0x0000000C:word32]
	spOut = fp - 0x00000004
	return ap_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000D566_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000D5BE(word32 r0, word32 r3, word32 r4, word32 r5, word32 r6, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: ap fp r0 r2 r3 r4 r5 r6 r7 sp
// Trashed: CVZN ap fp r0 r2 r3 r4 r5 r6 r7 sp
// Preserved:
fn0000D5BE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D5BE:
	word32 r2_128 = Mem0[ap + 8:word32]
	word32 sp_103 = fp - 0x00000004
	word32 r7_108 = r2_128
	branch r2_128 != 0x00000000 l0000D5DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D5DD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D5E0:
	branch Mem17[r4 + 0x0000C5FB:word32] > 0x00000000 l0000D64F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D5E8:
	word32 sp_22 = sp_103 - 0x00000004
	Mem24[sp_22:uint32] = 0x00002000
	Mem27[sp_22 - 0x00000004:word32] = Mem24[r4 + 0x0000C5F3:word32]
	Mem30[sp_22 - 0x00000008:word32] = Mem27[r4 + 0x0000C617:word32]
	word32 r0_42
	word32 r5_49
	word32 r3_51
	call Mem30[0x00019270:word32] + 2 (retsize: 4;)
		uses: ap:ap_35,fp:fp_44,r0:r0_41,r2:r2_37,r3:r3_50,r4:r4_16,r5:r5_48,r6:r6_46,r7:r7_39,sp:sp_22 - 0x00000008
		defs: ap:ap_36,fp:fp_45,r0:r0_42,r2:r2_38,r3:r3_51,r4:r4_43,r5:r5_49,r6:r6_47,r7:r7_40,sp:sp_34
	Mem54[r4 + 0x0000C5FB:word32] = r0_42
	branch r0_42 != 0x00000000 l0000D60E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D60E:
	branch Mem54[r4 + 0x0000C5FB:word32] >= 0x00000000 l0000D639
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D639:
	Mem64[r4 + 0x0000C61F:word32] = Mem54[r4 + 0x0000C61F:word32] + 0x00002000
	Mem66[r4 + 0x0000C5F7:word32] = Mem64[r4 + 0x0000C5F3:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D64F:
	word32 r5_77
	word32 r0_72 = Mem71[r4 + 0x0000C5FB:word32]
	branch r2_128 >=u r0_72 l0000D660
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D660:
	r5_77 = r0_72
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D65B:
	r5_77 = r2_128
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D663:
	word32 sp_89 = sp_103 - 0x00000004
	Mem90[sp_89:word32] = r5_77
	Mem94[sp_89 - 0x00000004:word32] = Mem90[r4 + 0x0000C5F7:word32]
	Mem99[sp_89 - 0x00000008:word32] = Mem94[ap + 4:word32]
	word32 r2_106
	call Mem99[0x0001929C:word32] + 2 (retsize: 4;)
		uses: ap:ap_97,fp:fp_114,r0:r0_72,r2:r2_73,r3:r5_85,r4:r4_70,r5:r5_85,r6:r6_117,r7:r7_108,sp:sp_89 - 0x00000008
		defs: ap:ap_104,fp:fp_115,r0:r0_111,r2:r2_106,r3:r3_120,r4:r4_112,r5:r5_119,r6:r6_118,r7:r7_109,sp:sp_103
	Mem123[ap + 4:word32] = Mem99[ap + 4:word32] + r3
	Mem125[r4 + 0x0000C5F7:word32] = Mem123[r4 + 0x0000C5F7:word32] + r3
	Mem127[r4 + 0x0000C5FB:word32] = Mem125[r4 + 0x0000C5FB:word32] - r3
	r2_128 = r2_106 - r3
	branch r2_128 == 0x00000000 l0000D692
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D68F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D616:
	Mem133[sp_103 - 0x00000004:uint32] = 0x00000401
	Mem136[sp_103 - 0x00000008:word32] = r6 + 36
	word32 sp_140
	word32 ap_141
	word32 r2_142
	word32 r7_143
	word32 r0_144
	word32 r4_145
	word32 fp_146
	word32 r6_147
	word32 r5_148
	word32 r3_149
	call Mem136[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap_36,fp:fp_45,r0:r0_42,r2:r2_38,r3:r3_51,r4:r4_43,r5:r5_49,r6:r6_47,r7:r7_40,sp:sp_34 - 0x00000008
		defs: ap:ap_141,fp:fp_146,r0:r0_144,r2:r2_142,r3:r3_149,r4:r4_145,r5:r5_148,r6:r6_147,r7:r7_143,sp:sp_140
	Mem152[sp_140 - 0x00000004:word32] = r0_144
	Mem155[sp_140 - 0x00000008:word32] = r6_147 + 36
	Mem157[sp_140 - 0x0000000C:word32] = r4_145
	word32 r0_158 = Mem157[r4_145 + 0x0000C839:word32]
	word32 r2_164
	word32 r7_165
	word32 r4_167
	word32 fp_168
	word32 r6_169
	word32 r5_170
	word32 r3_171
	call r0_158 + 2 (retsize: 4;)
		uses: ap:ap_141,fp:fp_146,r0:r0_158,r2:r2_142,r3:r3_149,r4:r4_145,r5:r5_148,r6:r6_147,r7:r7_143,sp:sp_140 - 0x0000000C
		defs: fp:fp_168,r2:r2_164,r3:r3_171,r4:r4_167,r5:r5_170,r6:r6_169,r7:r7_165
	word32 fp_179 = Mem157[fp_168 + 0x0000000C:word32]
	word32 ap_180 = Mem157[fp_168 + 0x00000008:word32]
	r2Out = r2_164
	r3Out = r3_171
	r4Out = r4_167
	r5Out = r5_170
	r6Out = r6_169
	r7Out = r7_165
	apOut = ap_180
	fpOut = fp_179
	spOut = fp_168 - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D609:
	word32 fp_184 = Mem54[fp + 0x0000000C:word32]
	word32 ap_185 = Mem54[fp + 0x00000008:word32]
	r2Out = r2_128
	r3Out = r3_51
	r4Out = r4
	r5Out = r5_49
	r6Out = r6
	r7Out = r7_108
	apOut = ap_185
	fpOut = fp_184
	spOut = fp - 0x00000004
	return r7_108 - r2_128
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D5DA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D692:
	word32 sp_193 = fp - 0x00000004
	word32 fp_195 = Mem194[sp_193 + 0x00000010:word32]
	word32 ap_196 = Mem194[sp_193 + 0x0000000C:word32]
	r2Out = r2_128
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7_108
	apOut = ap_196
	fpOut = fp_195
	spOut = sp_193
	return r7_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000D5BE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000D69A(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 ap, word32 fp, word32 pc, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut, ptr32 & pcOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: ap fp pc r0 r1 r2 r3 r4 r5 r6 sp
// Trashed: CVZN ap fp pc r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn0000D69A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D69A:
	branch Mem0[r4 + 0x0000C6C5:word32] == 0x00000000 l0000D6B7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D6B7:
	branch Mem0[r4 + 132:word32] > 0x00000000 l0000D6CB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D6CB:
	branch Mem0[r4 + 0x0000C5FB:word32] <= 0x00000000 l0000D6D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D6D6:
	word32 v16_20 = Mem18[r4 + 0x0000C5F3:word32]
	word32 v17_23 = Mem21[r4 + 0x0000C617:word32]
	word32 sp_28
	word32 ap_35
	word32 r2_37
	word32 pc_247
	call Mem24[0x00019270:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc,r0:r0,r1:r1,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,sp:fp - 0x00000010,Stack +0004:v17_23,Stack +0008:v16_20,Stack +000C:0x00002000
		defs: ap:ap_35,fp:fp_33,pc:pc_247,r0:r0_31,r1:r1_249,r2:r2_37,r3:r3_39,r4:r4_29,r5:r5_41,r6:r6_43,sp:sp_28
	Mem46[r4 + 0x0000C5FB:word32] = r0
	branch r0 != 0x00000000 l0000D701
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D701:
	branch Mem46[r4 + 0x0000C5FB:word32] >= 0x00000000 l0000D73B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D73B:
	Mem102[r4 + 0x0000C61F:word32] = Mem46[r4 + 0x0000C61F:word32] + 0x00002000
	Mem104[r4 + 0x0000C5F7:word32] = Mem102[r4 + 0x0000C5F3:word32]
	branch Mem104[r4 + 0x0000C5FB:word32] <= Mem104[r4 + 132:word32] l0000D790
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D790:
	Mem109[r4 + 0x0000C849:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D75C:
	branch Mem104[r4 + 132:word32] >= 0x00000000 l0000D766
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D762:
	Mem119[r4 + 132:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D766:
	Mem127[r4 + 0x0000C84D:word32] = Mem125[r4 + 132:word32] + Mem125[r4 + 0x0000C5F7:word32]
	Mem129[r4 + 0x0000C849:word32] = Mem127[r4 + 0x0000C5FB:word32] - Mem127[r4 + 132:word32]
	Mem131[r4 + 0x0000C5FB:word32] = Mem129[r4 + 132:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D796:
	Mem138[r4 + 132:word32] = Mem136[r4 + 132:word32] - Mem136[r4 + 0x0000C5FB:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D709:
	Mem57[sp_28 - 0x00000004:uint32] = 0x00000401
	Mem60[sp_28 - 0x00000008:word32] = r6 + 36
	word32 sp_64
	word32 r4_65
	word32 r0_66
	word32 fp_67
	word32 ap_68
	word32 r3_70
	word32 r5_71
	word32 r6_72
	word32 r1_251
	word32 pc_250
	call Mem60[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap_35,fp:fp_33,pc:pc,r0:r0_31,r1:r1_249,r2:r2_37,r3:r3_39,r4:r4_29,r5:r5_41,r6:r6_43,sp:sp_28 - 0x00000008,Stack +FFFFFFF4:v17_23,Stack +FFFFFFF8:v16_20,Stack +FFFFFFFC:0x00002000
		defs: ap:ap_68,fp:fp_67,pc:pc_250,r0:r0_66,r1:r1_251,r3:r3_70,r4:r4_65,r5:r5_71,r6:r6_72,sp:sp_64
	Mem75[sp_64 - 0x00000004:word32] = r0_66
	Mem78[sp_64 - 0x00000008:word32] = r6_72 + 36
	Mem80[sp_64 - 0x0000000C:word32] = r4_65
	word32 r2_81 = Mem80[r4_65 + 0x0000C839:word32]
	word32 sp_85
	word32 r0_87
	word32 ap_89
	word32 r2_90
	call r2_81 + 2 (retsize: 4;)
		uses: ap:ap_68,fp:fp_67,pc:pc_250,r0:r0_66,r1:r1_251,r2:r2_81,r3:r3_70,r4:r4_65,r5:r5_71,r6:r6_72,sp:sp_64 - 0x0000000C,Stack +FFFFFFF4:v17_23,Stack +FFFFFFF8:v16_20,Stack +FFFFFFFC:0x00002000
		defs: ap:ap_89,r0:r0_87,r2:r2_90,sp:sp_85
	Mem96[sp_85 - 0x00000004:word32] = 0x00000001
	fn000124FE(r0_87, r2_90, ap_89, pc)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D6F7:
	Mem141[r4 + 0x0000C5FB:word32] = 0x00000000
	word32 fp_145 = Mem141[fp + 0x0000000C:word32]
	word32 ap_146 = Mem141[fp + 0x00000008:word32]
	r1Out = r1
	r2Out = r2_37
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	apOut = ap_146
	fpOut = fp_145
	spOut = fp - 0x00000004
	pcOut = pc_247
	return -0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D6D3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D79F:
	branch (Mem148[Mem148[r4 + 1511:word32] + 20:word32] & 0x00000001) == 0x00000000 l0000D7EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D7A9:
	word32 r2_153 = Mem148[r4 + 0x0000C5FB:word32]
	r3 = Mem148[r4 + 0x0000C5F7:word32]
	r5 = r2_153 - 0x00000001
	branch r2_153 == 0x00000000 l0000D7EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D7C2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D7C4:
	word32 r2_169 = (uint32) Mem168[r3:byte]
	word32 fp_176
	word32 sp_179
	word32 r0_177 = fn00011ED6(r0, fp, out fp_176, out sp_179)
	Mem186[r3:byte] = (byte) r2_169 ^ (byte) r0_177
	Mem189[sp_179 - 0x00000004:uint32] = (uint32) Mem186[r3:byte]
	word32 r3_197
	r0 = fn00011F06(r2_169, r0_177, fp_176, out r1, out r3_197, out fp)
	r3 = r3_197 + 0x00000001
	r5 = r5_315 - 0x00000001
	r5_315 = r5
	branch r5_315 != 0x00000000 l0000D7C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D7EA:
	Mem215[r4 + 0x0000C5FB:word32] = Mem213[r4 + 0x0000C5FB:word32] - 0x00000001
	word32 r2_216 = Mem215[r4 + 0x0000C5F7:word32]
	Mem218[r4 + 0x0000C5F7:word32] = Mem215[r4 + 0x0000C5F7:word32] + 0x00000001
	word32 sp_227 = fp - 0x00000004
	word32 r0_219 = (uint32) Mem218[r2_216:byte]
	word32 fp_228 = Mem218[sp_227 + 0x00000010:word32]
	word32 ap_229 = Mem218[sp_227 + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_216
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	apOut = ap_229
	fpOut = fp_228
	spOut = sp_227
	pcOut = pc
	return r0_219
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D6BD:
	Mem231[r4 + 132:word32] = Mem0[r4 + 132:word32] - 0x00000001
	Mem233[r4 + 0x0000C5FB:word32] = 0x00000000
	word32 fp_237 = Mem233[fp + 0x0000000C:word32]
	word32 ap_238 = Mem233[fp + 0x00000008:word32]
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	apOut = ap_238
	fpOut = fp_237
	spOut = fp - 0x00000004
	pcOut = pc
	return -0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000D6B3:
	word32 fp_242 = Mem0[fp + 0x0000000C:word32]
	word32 ap_243 = Mem0[fp + 0x00000008:word32]
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	apOut = ap_243
	fpOut = fp_242
	spOut = fp - 0x00000004
	pcOut = pc
	return -0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000D69A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000DC76(word32 ap, word32 fp, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31]
// LiveOut: ap fp r0 r11 sp
// Trashed: CVZN ap fp r0 r11 sp
// Preserved:
fn0000DC76_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000DC76:
	word32 r11_5 = Mem0[0x0001934C:word32]
	branch Mem7[ap + 4:word32] != 0x00000000 l0000DC9F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000DC9F:
	word32 r0_13 = Mem7[ap + 8:word32]
	branch r0_13 > 0x00000005 l0000DCB1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000DCB1:
	branch r0_13 < 0x00000000 l0000DCB3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000DCB3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E253:
	word32 fp_28 = Mem7[fp + 0x0000000C:word32]
	word32 ap_29 = Mem7[fp + 0x00000008:word32]
	r11Out = r11_5
	apOut = ap_29
	fpOut = fp_28
	spOut = fp - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000DCA3_1:
	word32 r11_31
	word32 ap_32
	word32 r0_33
	word32 fp_34
	call 0x0000DCA7 + r0_13 * 0x00000002 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0_13,r11:r11_5,sp:fp - 0x0000000C,Stack +0004:0x00000000
		defs: ap:ap_32,fp:fp_34,r0:r0_33,r11:r11_31
	r11Out = r11_31
	apOut = ap_32
	fpOut = fp_34
	spOut = fp
	return r0_33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000DC9C:
	word32 fp_42 = Mem7[fp + 0x0000000C:word32]
	word32 ap_43 = Mem7[fp + 0x00000008:word32]
	r11Out = r11_5
	apOut = ap_43
	fpOut = fp_42
	spOut = fp - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000DC76_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000E25A(word32 ap, word32 fp, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31]
// LiveOut: ap fp r0 sp
// Trashed: CVZN ap fp r0 r1 r2 sp
// Preserved:
fn0000E25A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E25A:
	word32 r2_6 = Mem0[ap + 4:word32]
	word32 r0_7 = (uint32) Mem0[r2_6 + 1:byte]
	word32 r0_13 = (uint32) (word16) SEQ(SLICE(r0_7 << 8, word16, 16), (word16) (r0_7 << 8) | (word16) ((uint32) Mem0[r2_6:byte]))
	word32 fp_19 = Mem0[fp + 0x0000000C:word32]
	apOut = Mem0[fp + 0x00000008:word32]
	fpOut = fp_19
	spOut = fp - 0x00000004
	return r0_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000E25A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000E276(word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31]
// LiveOut: ap fp r0 r1 r2 sp
// Trashed: CVZN ap fp r0 r1 r2 sp
// Preserved:
fn0000E276_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E276:
	word32 r1_6 = Mem0[ap + 4:word32]
	word32 r2_14 = ((uint32) Mem0[r1_6 + 3:byte] << 24) + ((uint32) Mem0[r1_6 + 2:byte] << 16) + ((uint32) Mem0[r1_6 + 1:byte] << 8)
	word32 r0_16 = (uint32) Mem0[r1_6:byte] + r2_14
	word32 fp_20 = Mem0[fp + 0x0000000C:word32]
	word32 ap_21 = Mem0[fp + 0x00000008:word32]
	r1Out = r1_6
	r2Out = r2_14
	apOut = ap_21
	fpOut = fp_20
	spOut = fp - 0x00000004
	return r0_16
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000E276_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000E2A6(word32 r2, word32 r5, word32 r7, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r2:[8..31] r5:[8..31] r7:[0..31]
// LiveOut: ap fp r0 r1 r2 r5 r6 sp
// Trashed: CVZN ap fp r0 r1 r2 r4 r5 r6 sp
// Preserved: r3
fn0000E2A6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E2A6:
	word32 r0_11 = Mem0[ap + 8:word32]
	word32 r1_19 = Mem0[ap + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E2B8:
	r2 = SEQ(SLICE(r2, word24, 8), Mem14[r0_11:byte])
	r0_11 = r0_11 + 0x00000001
	r1_19 = r1_81 + 0x00000001
	word32 r4_22 = (uint32) (byte) r2
	branch (r4_22 & 0x00000080) == 0x00000000 l0000E2D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E2D8:
	r5 = SEQ(SLICE(r5, word24, 8), (byte) r2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E2C7:
	r5 = SEQ(SLICE(r5, word24, 8), Mem14[r7 + (r4_22 & ~0xFFFFFF80):byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E2DB:
	Mem44[r1_81:byte] = (byte) r5
	r1_81 = r1_19
	branch r4_22 != 0x00000000 l0000E2B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E2E2:
	word32 r0_52 = Mem44[ap + 4:word32]
	word32 fp_60 = Mem44[fp + 0x0000000C:word32]
	word32 ap_61 = Mem44[fp + 0x00000008:word32]
	r1Out = r1_19
	r2Out = r2
	r5Out = r5
	r6Out = r1_81
	apOut = ap_61
	fpOut = fp_60
	spOut = fp - 0x00000004
	return r0_52
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000E2A6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000E2EA(word32 r1, word32 r5, word32 r7, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r1:[0..31] r5:[8..31] r7:[0..31]
// LiveOut: ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000E2EA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E2EA:
	word32 sp_162 = fp - 0x00000004
	word32 r8_157 = Mem0[0x0001934C:word32]
	word32 r2_124 = Mem0[ap + 4:word32]
	word32 r3_133 = Mem0[ap + 8:word32]
	word32 r4_100 = Mem0[ap + 12:word32]
	branch r4_100 != 0x00000000 l0000E305
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E305:
	r9 = Mem0[0x00019298:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E30C:
	word32 r1_30
	word32 r5_23 = SEQ(SLICE(r5, word24, 8), Mem19[r2_124:byte])
	word32 r6_24 = (int32) (int8) r5_23
	word32 r0_25 = r6_24 & ~0xFFFFFF80
	branch (Mem19[r8_157 + r0_25 * 4:word32] & 0x00000001) == 0x00000000 l0000E32C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E32C:
	r1_30 = r6_24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E31F:
	word32 sp_35 = sp_162 - 0x00000004
	Mem37[sp_35:int32] = (int32) (int8) r5_23
	word32 r0_53
	call r9 + 2 (retsize: 4;)
		uses: ap:ap_43,fp:fp_56,r0:r0_25,r1:r1_54,r2:r2_18,r3:r3_46,r4:r4_48,r5:r5_23,r6:r6_24,r7:r7_58,r8:r8_29,r9:r9_40,sp:sp_35
		defs: ap:ap_44,fp:fp_57,r0:r0_53,r2:r2_45,r3:r3_47,r4:r4_49,r5:r5_51,r7:r7_59,r8:r8_42,r9:r9_50,sp:sp_41
	r1_30 = r0_53
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E32F:
	r5 = SEQ(SLICE(r5_23, word24, 8), Mem71[r3_133:byte])
	r6 = (int32) (int8) r5
	r7 = SEQ(SLICE(r7, word24, 8), (int8) r1_30)
	word32 r0_105 = r6 & ~0xFFFFFF80
	branch (Mem71[r8_157 + r0_105 * 4:word32] & 0x00000001) == 0x00000000 l0000E350
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E350:
	r1 = r6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E345:
	word32 sp_87 = sp_162 - 0x00000004
	Mem89[sp_87:int32] = (int32) (int8) r5
	call r9 + 2 (retsize: 4;)
		uses: ap:ap_95,fp:fp_107,r0:r0_77,r1:r1_65,r2:r2_97,r3:r3_70,r4:r4_100,r5:r5_75,r6:r6_76,r7:r7_69,r8:r8_81,r9:r9_92,sp:sp_87
		defs: ap:ap_96,fp:fp_108,r0:r0_105,r2:r2_98,r3:r3_99,r4:r4_101,r5:r5_103,r6:r6_104,r7:r7_109,r8:r8_94,r9:r9_102,sp:sp_93
	r1 = r0_105
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E353:
	branch (byte) (r7 - SEQ(SLICE(r0_105, word24, 8), (int8) r1)) == 0x00 l0000E3BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E3BF:
	branch Mem125[r2_124:byte] != 0x00 l0000E3C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E3C6:
	r4_100 = r4_100 - 0x00000001
	r2_124 = r2_124 + 0x00000001
	r3_133 = r3_133 + 0x00000001
	branch r4_100 == 0x00000000 l0000E3D3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E3D0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E3C3:
	word32 sp_145 = fp - 0x00000004
	word32 fp_146 = Mem125[sp_145 + 0x00000010:word32]
	word32 ap_147 = Mem125[sp_145 + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_124
	r3Out = r3_133
	r4Out = r4_100
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8_157
	r9Out = r9
	apOut = ap_147
	fpOut = fp_146
	spOut = sp_145
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E35B:
	word32 r1_158
	word32 r5_151 = SEQ(SLICE(r5, word24, 8), Mem125[r2_124:byte])
	word32 r6_152 = (int32) (int8) r5_151
	word32 r0_153 = r6_152 & ~0xFFFFFF80
	branch (Mem125[r8_157 + r0_153 * 4:word32] & 0x00000001) == 0x00000000 l0000E380
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E380:
	r1_158 = r6_152
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E36E:
	word32 sp_163 = sp_162 - 0x00000004
	Mem165[sp_163:int32] = (int32) (int8) r5_151
	word32 r0_179
	call Mem165[0x00019298:word32] + 2 (retsize: 4;)
		uses: ap:ap_170,fp:fp_144,r0:r0_153,r1:r1_115,r2:r2_124,r3:r3_133,r4:r4_130,r5:r5_151,r6:r6_152,r7:r7_120,r8:r8_157,r9:r9_175,sp:sp_163
		defs: ap:ap_171,fp:fp_181,r0:r0_179,r2:r2_172,r3:r3_173,r4:r4_174,r5:r5_177,r7:r7_182,r8:r8_169,r9:r9_176,sp:sp_168
	r1_158 = r0_179
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E383:
	word32 r5_205
	word32 r5_198 = SEQ(SLICE(r5_151, word24, 8), Mem194[r3_133:byte])
	word32 r6_199 = (int32) (int8) r5_198
	word32 r7_192 = SEQ(SLICE(r7, word24, 8), (int8) r1_158)
	word32 r0_200 = r6_199 & ~0xFFFFFF80
	branch (Mem194[r8_157 + r0_200 * 4:word32] & 0x00000001) == 0x00000000 l0000E3A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E3A8:
	r5_205 = r6_199
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E399:
	word32 sp_210 = sp_162 - 0x00000004
	Mem212[sp_210:int32] = (int32) (int8) r5_198
	call Mem212[0x00019298:word32] + 2 (retsize: 4;)
		uses: ap:ap_217,fp:fp_230,r0:r0_200,r1:r1_188,r2:r2_219,r3:r3_193,r4:r4_222,r5:r5_198,r6:r6_199,r7:r7_192,r8:r8_204,r9:r9_224,sp:sp_210
		defs: fp:fp_231,r0:r0_228,r1:r1_229,r2:r2_220,r3:r3_221,r4:r4_223,r6:r6_227,r7:r7_232,r8:r8_216,r9:r9_225
	r5_205 = r0_200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E3AB:
	word32 r1_250
	branch (byte) (r7_192 - SEQ(SLICE(r0_200, word24, 8), (int8) r5_205)) >= 0x00 l0000E3B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E3B8:
	r1_250 = SEQ(SLICE(r1_158, word24, 8), 0x01)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E3B3:
	r1_250 = SEQ(SLICE(r1_158, word24, 8), -0x01)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E3BB:
	word32 sp_264 = fp - 0x00000004
	word32 fp_267 = Mem266[sp_264 + 0x00000010:word32]
	word32 ap_268 = Mem266[sp_264 + 0x0000000C:word32]
	r1Out = r1_250
	r2Out = r2_124
	r3Out = r3_133
	r4Out = r4_100
	r5Out = r5_205
	r6Out = r6_199
	r7Out = r7_192
	r8Out = r8_157
	r9Out = r9
	apOut = ap_268
	fpOut = fp_267
	spOut = sp_264
	return (int32) (int8) r1_250
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E302:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000E3D3:
	word32 sp_276 = fp - 0x00000004
	word32 fp_278 = Mem277[sp_276 + 0x00000010:word32]
	word32 ap_279 = Mem277[sp_276 + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_124
	r3Out = r3_133
	r4Out = r4_100
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8_157
	r9Out = r9
	apOut = ap_279
	fpOut = fp_278
	spOut = sp_276
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000E2EA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000F457()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0000F457_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000F457_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F457:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000F816(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000F816_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F816:
	word32 r5_175
	Mem12[r3 + 0x0000C5FF:word64] = 0x0000000000000000
	Mem14[r3 + 0x0000C607:word32] = 0x00000000
	Mem16[r3 + 0x0000C6D9:word32] = 0x00000001
	Mem18[r3 + 0x0000C5EF:word32] = 0x00000000
	word32 r9_176 = r5 + 69
	word32 r11_177 = r5 + 78
	word32 r10_178 = 0x00000000
	branch Mem18[r3 + 68:word32] == 0x00000000 l0000F8AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F8AC:
	branch Mem18[r3 + 12:word32] == 0x00000000 l0000F8CB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F8CB:
	branch fn00009B0A(r0, r1, r2, r4, r5, r6, r7, r8, r5 + 69, 0x00000000, r5 + 78, ap, fp, out r1, out r2, out r3, out r4, out r5_175, out r6, out r7, out r8, out r9_176, out r10_178, out r11_177, out ap, out fp) == 0x00000000 l0000F8DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F8D6:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F8B1:
	Mem67[r3 + 0x0000C6ED:word32] = Mem18[Mem18[0x00019374:word32]:word32]
	branch fn00009B0A(r0, r1, r2, r4, r5, r6, r7, r8, r5 + 69, 0x00000000, r5 + 78, ap, fp, out r1, out r2, out r3, out r4, out r5_175, out r6, out r7, out r8, out r9_176, out r10_178, out r11_177, out ap, out fp) == 0x00000000 l0000F8DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F8C7:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F85A:
	r5_175 = r5
	branch Mem18[r3 + 64:word32] != 0x00000000 l0000F8DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F85F:
	word32 ap_123
	word32 fp_124
	word32 r2_126
	word32 r3_127
	word32 sp_128
	word32 r0_125 = fn00010892(ap, fp, out r2_126, out r3_127, out ap_123, out fp_124, out sp_128)
	Mem134[sp_128 - 0x00000004:word32] = r0_125
	Mem137[sp_128 - 0x00000008:word32] = r5 + 96
	Mem140[sp_128 - 0x0000000C:word32] = r6 + 387
	Mem143[sp_128 - 0x00000010:word32] = r3_127 + 1515
	word32 sp_147
	word32 r5_148
	word32 r9_149
	word32 r11_150
	word32 r10_151
	word32 r3_152
	word32 r2_153
	word32 r0_154
	word32 r6_155
	word32 fp_157
	word32 r8_158
	word32 r7_159
	word32 r4_160
	word32 r1_161
	call Mem143[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_123,fp:fp_124,r0:r0_125,r1:r1,r10:0x00000000,r11:r5 + 78,r2:r2_126,r3:r3_127,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r5 + 69,sp:sp_128 - 0x00000010,Stack +FFFFFFE8:r3 + 0x0000C701,Stack +FFFFFFEC:r3 + 0x000045EB,Stack +FFFFFFF0:r5 + 101,Stack +FFFFFFF4:r5 + 102,Stack +FFFFFFF8:0x00000000,Stack +FFFFFFFC:r5 + 87
		defs: fp:fp_157,r0:r0_154,r1:r1_161,r10:r10_151,r11:r11_150,r2:r2_153,r3:r3_152,r4:r4_160,r5:r5_148,r6:r6_155,r7:r7_159,r8:r8_158,r9:r9_149,sp:sp_147
	Mem164[sp_147 - 0x00000004:word32] = r0_154
	Mem167[sp_147 - 0x00000008:word32] = r3_152 + 1515
	Mem169[sp_147 - 0x0000000C:word32] = r3_152
	word32 ap_170 = Mem169[r3_152 + 0x0000C839:word32]
	call ap_170 + 2 (retsize: 4;)
		uses: ap:ap_170,fp:fp_157,r0:r0_154,r1:r1_161,r10:r10_151,r11:r11_150,r2:r2_153,r3:r3_152,r4:r4_160,r5:r5_148,r6:r6_155,r7:r7_159,r8:r8_158,r9:r9_149,sp:sp_147 - 0x0000000C,Stack +FFFFFFE8:r3 + 0x0000C701,Stack +FFFFFFEC:r3 + 0x000045EB,Stack +FFFFFFF0:r5 + 101,Stack +FFFFFFF4:r5 + 102,Stack +FFFFFFF8:0x00000000,Stack +FFFFFFFC:r5 + 87
		defs: ap:ap_183,fp:fp_184,r1:r1_188,r10:r10_178,r11:r11_177,r2:r2_180,r3:r3_179,r4:r4_187,r5:r5_175,r6:r6_182,r7:r7_186,r8:r8_185,r9:r9_176
	dwLoc0C = 0x00000000
	dwLoc10 = r5 + 102
	dwLoc14 = r5 + 101
	dwLoc18 = r3 + 0x000045EB
	dwLoc1C = r3 + 0x0000C701
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F8DA:
	word32 fp_193
	word32 sp_194
	word32 ap_192 = fn0000D566(ap, fp, out fp_193, out sp_194)
	word32 r0_201 = (uint32) Mem200[r3 + 0x0000C642:word16]
	branch r0_201 > 0x00000008 l0000F8FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F8FC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000F8E8_1:
	call 0x0000F8EC + r0_201 * 0x00000002 (retsize: 4;)
		uses: ap:ap_192,fp:fp_193,r0:r0_201,r1:r1_229,r10:r10_213,r11:r11_211,r2:r2_216,r3:r3_199,r4:r4_227,r5:r5_207,r6:r6_219,r7:r7_225,r8:r8_223,r9:r9_209,sp:sp_194,Stack +FFFFFFE8:dwLoc1C_247,Stack +FFFFFFEC:dwLoc18_245,Stack +FFFFFFF0:dwLoc14_243,Stack +FFFFFFF4:dwLoc10_241,Stack +FFFFFFF8:dwLoc0C_239,Stack +FFFFFFFC:r5 + 87
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000F816_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000100C2(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r10, word32 r11, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000100C2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000100C2:
	word32 sp_13 = fp - 0x00000008
	word32 r9_160 = ap + 8
	branch Mem0[ap + 8:word32] >=u 0x00000004 l000100ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000100ED:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000100F4:
	word32 sp_14 = sp_13 - 0x00000004
	Mem18[sp_14:word32] = Mem16[ap + 4:word32]
	word32 sp_23
	word32 ap_24
	word32 r9_26
	word32 r11_27
	word32 r0_29
	word32 r8_31
	word32 r2_33
	word32 r7_35
	word32 r3_37
	word32 r5_39
	word32 fp_41
	word32 r1_43
	word32 r4_45
	word32 r6_47
	word32 r10_812
	call r11 + 2 (retsize: 4;)
		uses: ap:ap_15,fp:fp_40,r0:r0_28,r1:r1_42,r10:r10_147,r11:r11_22,r2:r2_32,r3:r3_36,r4:r4_44,r5:r5_38,r6:r6_46,r7:r7_34,r8:r8_30,r9:r9_25,sp:sp_14
		defs: ap:ap_24,fp:fp_41,r0:r0_29,r1:r1_43,r10:r10_812,r11:r11_27,r2:r2_33,r3:r3_37,r4:r4_45,r5:r5_39,r6:r6_47,r7:r7_35,r8:r8_31,r9:r9_26,sp:sp_23
	Mem50[sp_23 + 2:word16] = (word16) r0_29
	Mem53[sp_23 - 0x00000004:word32] = Mem50[ap_24 + 4:word32] + 0x00000002
	word32 r0_59
	word32 r1_617
	call r11_27 + 2 (retsize: 4;)
		uses: ap:ap_24,fp:fp_41,r0:r0_29,r1:r1_43,r10:r10_812,r11:r11_27,r2:r2_33,r3:r3_37,r4:r4_45,r5:r5_39,r6:r6_47,r7:r7_35,r8:r8_31,r9:r9_26,sp:sp_23 - 0x00000004
		defs: ap:ap_56,fp:fp_65,r0:r0_59,r1:r1_66,r11:r11_58,r2:r2_61,r3:r3_63,r4:r4_67,r5:r5_64,r6:r6_68,r7:r7_62,r9:r9_57,sp:sp_55
	r8 = (uint32) (word16) r0_59
	r0 = Mem53[r9_160:word32] - 0x00000004
	branch r8 <=u r0 l00010184
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010184:
	word32 r1_130 = (uint32) Mem53[sp_13 + 2:word16]
	branch r1_130 >= 0x00000007 l00010190
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010190:
	r0 = r1_130
	branch r1_130 > 0x0000000C l000101A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101A1:
	branch r1_130 >u 0x00000000 l000101A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101A7:
	call fn4000E3D8 (retsize: 4;)
		uses: ap:ap_56,fp:fp_65,r0:r1_75,r1:r1_75,r10:r10_147,r11:r11_58,r2:r2_61,r3:r3_63,r4:r4_67,r5:r5_64,r6:r6_68,r7:r7_62,r8:r8_70,r9:r9_57,sp:sp_55
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101A3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101B0:
	branch r1_130 > 0x00004341 l000101BC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101BC:
	branch r1_130 >= 0x00004453 l000101C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101C8:
	branch r1_130 != 0x00004453 l000101CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101CD:
	branch r1_130 >= 0x00004704 l000101D9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101D9:
	branch r1_130 > 0x0000470F l000101F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101F7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101D9_1:
	call 0x000101E1 + (r1_130 - 0x00004704) * 0x00000002 (retsize: 4;)
		uses: ap:ap_56,fp:fp_65,r0:r1_75,r1:r1_75,r10:r10_147,r11:r11_58,r2:r2_61,r3:r3_63,r4:r4_67,r5:r5_64,r6:r6_68,r7:r7_62,r8:r8_70,r9:r9_57,sp:sp_55
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101D6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101CA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000103A9:
	branch r8 >=u 0x00000005 l000103B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000103B4:
	r1_130 = Mem53[ap + 4:word32]
	r0 = (uint32) Mem53[r1_130 + 8:byte]
	branch r0 == 0x00000000 l000103C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000103C8:
	Mem137[sp_13 - 0x00000004:word32] = 0x00000000
	Mem139[sp_13 - 0x00000008:word32] = 0x00000005
	Mem141[sp_13 - 0x0000000C:word32] = r8
	Mem143[sp_13 - 0x00000010:word32] = r1_130
	r0 = fn000105F2(r3, r6, r7, r8, r9_160, r10, ap, fp, out r1_130, out r2, out r7, out r8, out r9_160, out r10, out ap, out fp, out sp_13)
	r3 = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000103BE:
	r3 = 0x00004001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000103D8:
	r4 = r3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000103AE:
	r4 = 0x0000004F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000103DB:
	r6 = r4
	branch r4 != 0x00000000 l000103E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000103E3:
	branch Mem190[r2 + 64:word32] == 0x00000000 l00010427
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000103E8:
	word32 sp_198 = sp_13 - 0x00000004
	Mem199[sp_198:word32] = 0x00000001
	Mem203[sp_198 - 0x00000004:word32] = r2 + 0x000045EB
	Mem206[sp_198 - 0x00000008:word32] = r2 + 0x0000C701
	word32 ap_214
	word32 fp_215
	word32 r2_217
	word32 r3_218
	word32 sp_219
	word32 r0_216 = fn00010892(ap, fp, out r2_217, out r3_218, out ap_214, out fp_215, out sp_219)
	Mem225[sp_219 - 0x00000004:word32] = r0_216
	Mem230[sp_219 - 0x00000008:word32] = r7 + 215
	Mem233[sp_219 - 0x0000000C:word32] = r2_217 + 1515
	word32 sp_237
	word32 ap_238
	word32 r9_241
	word32 r11_244
	word32 r0_245
	word32 r8_248
	word32 r2_249
	word32 r7_250
	word32 r3_251
	word32 r5_254
	word32 fp_255
	word32 r1_258
	word32 r4_259
	word32 r6_260
	word32 r10_263
	call Mem233[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_214,fp:fp_215,r0:r0_216,r1:r1_256,r10:r10_261,r11:r11_58,r2:r2_217,r3:r3_218,r4:r4_182,r5:r5_64,r6:r4_182,r7:r7_227,r8:r8_246,r9:r9_239,sp:sp_219 - 0x0000000C
		defs: ap:ap_238,fp:fp_255,r0:r0_245,r1:r1_258,r10:r10_263,r11:r11_244,r2:r2_249,r3:r3_251,r4:r4_259,r5:r5_254,r6:r6_260,r7:r7_250,r8:r8_248,r9:r9_241,sp:sp_237
	Mem266[sp_237 - 0x00000004:word32] = r0_245
	Mem269[sp_237 - 0x00000008:word32] = r2_249 + 1515
	Mem271[sp_237 - 0x0000000C:word32] = r2_249
	word32 r0_272 = Mem271[r2_249 + 0x0000C839:word32]
	call r0_272 + 2 (retsize: 4;)
		uses: ap:ap_238,fp:fp_255,r0:r0_272,r1:r1_258,r10:r10_263,r11:r11_244,r2:r2_249,r3:r3_251,r4:r4_259,r5:r5_254,r6:r6_260,r7:r7_250,r8:r8_248,r9:r9_241,sp:sp_237 - 0x0000000C
		defs: ap:ap_277,fp:fp_286,r1:r1_287,r10:r10_290,r11:r11_279,r2:r2_282,r3:r3_284,r4:r4_288,r5:r5_285,r6:r6_289,r7:r7_283,r8:r8_281,r9:r9_278,sp:sp_276
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010427:
	branch r6 >= 0x00000002 l0001042F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001042F:
	word32 v48_300 = r6 - 0x00000002
	branch v48_300 > 0x00000005 l00010440
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010440:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010432_1:
	call 0x00010436 + v48_300 * 0x00000002 (retsize: 4;)
		uses: ap:ap_303,fp:fp_321,r0:r6_292,r1:r1_323,r10:r10_328,r11:r11_307,r2:r2_312,r3:r3_316,r4:r4_325,r5:r5_319,r6:r6_292,r7:r7_314,r8:r8_310,r9:r9_305,sp:sp_301
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001042C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010520:
	word32 r0_331 = r6 & ~0xFFFFFF00
	branch r0_331 == 0x00000002 l00010554
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010554:
	word32 r0_335 = r6 >> 8
	word32 r3_336 = (uint32) (word16) r0_335
	branch r3_336 != 0x00000008 l00010588
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010588:
	word32 sp_340 = sp_13 - 0x00000004
	Mem341[sp_340:word32] = 0x00000001
	Mem343[sp_340 - 0x00000004:word32] = r3_336
	Mem346[sp_340 - 0x00000008:word32] = r5 + 1655
	Mem349[sp_340 - 0x0000000C:word32] = r2 + 1515
	word32 sp_353
	word32 ap_354
	word32 r9_355
	word32 r11_356
	word32 r0_357
	word32 r8_358
	word32 r2_359
	word32 r7_360
	word32 r3_361
	word32 r5_362
	word32 fp_363
	word32 r1_364
	word32 r4_365
	word32 r6_366
	word32 r10_367
	call Mem349[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_303,fp:fp_321,r0:r0_335,r1:r1_323,r10:r10_328,r11:r11_307,r2:r2_312,r3:r3_336,r4:r4_325,r5:r5_319,r6:r6_292,r7:r7_314,r8:r8_310,r9:r9_305,sp:sp_340 - 0x0000000C
		defs: ap:ap_354,fp:fp_363,r0:r0_357,r1:r1_364,r10:r10_367,r11:r11_356,r2:r2_359,r3:r3_361,r4:r4_365,r5:r5_362,r6:r6_366,r7:r7_360,r8:r8_358,r9:r9_355,sp:sp_353
	Mem370[sp_353 - 0x00000004:word32] = r0_357
	Mem373[sp_353 - 0x00000008:word32] = r2_359 + 1515
	Mem375[sp_353 - 0x0000000C:word32] = r2_359
	word32 r0_376 = Mem375[r2_359 + 0x0000C839:word32]
	call r0_376 + 2 (retsize: 4;)
		uses: ap:ap_354,fp:fp_363,r0:r0_376,r1:r1_364,r10:r10_367,r11:r11_356,r2:r2_359,r3:r3_361,r4:r4_365,r5:r5_362,r6:r6_366,r7:r7_360,r8:r8_358,r9:r9_355,sp:sp_353 - 0x0000000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010561:
	word32 sp_396 = sp_13 - 0x00000004
	Mem397[sp_396:word32] = 0x00000001
	Mem400[sp_396 - 0x00000004:word32] = r5 + 1621
	Mem403[sp_396 - 0x00000008:word32] = r2 + 1515
	word32 sp_407
	word32 ap_408
	word32 r9_409
	word32 r11_410
	word32 r0_411
	word32 r8_412
	word32 r2_413
	word32 r7_414
	word32 r3_415
	word32 r5_416
	word32 fp_417
	word32 r1_418
	word32 r4_419
	word32 r6_420
	word32 r10_421
	call Mem403[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_303,fp:fp_321,r0:r0_335,r1:r1_323,r10:r10_328,r11:r11_307,r2:r2_312,r3:r3_336,r4:r4_325,r5:r5_319,r6:r6_292,r7:r7_314,r8:r8_310,r9:r9_305,sp:sp_396 - 0x00000008
		defs: ap:ap_408,fp:fp_417,r0:r0_411,r1:r1_418,r10:r10_421,r11:r11_410,r2:r2_413,r3:r3_415,r4:r4_419,r5:r5_416,r6:r6_420,r7:r7_414,r8:r8_412,r9:r9_409,sp:sp_407
	Mem424[sp_407 - 0x00000004:word32] = r0_411
	Mem427[sp_407 - 0x00000008:word32] = r2_413 + 1515
	Mem429[sp_407 - 0x0000000C:word32] = r2_413
	word32 r0_430 = Mem429[r2_413 + 0x0000C839:word32]
	call r0_430 + 2 (retsize: 4;)
		uses: ap:ap_408,fp:fp_417,r0:r0_430,r1:r1_418,r10:r10_421,r11:r11_410,r2:r2_413,r3:r3_415,r4:r4_419,r5:r5_416,r6:r6_420,r7:r7_414,r8:r8_412,r9:r9_409,sp:sp_407 - 0x0000000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001052D:
	word32 sp_450 = sp_13 - 0x00000004
	Mem451[sp_450:word32] = 0x00000001
	Mem454[sp_450 - 0x00000004:word32] = r5 + 1733
	Mem457[sp_450 - 0x00000008:word32] = r2 + 1515
	word32 sp_461
	word32 ap_462
	word32 r9_463
	word32 r11_464
	word32 r0_465
	word32 r8_466
	word32 r2_467
	word32 r7_468
	word32 r3_469
	word32 r5_470
	word32 fp_471
	word32 r1_472
	word32 r4_473
	word32 r6_474
	word32 r10_475
	call Mem457[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_303,fp:fp_321,r0:r0_331,r1:r1_323,r10:r10_328,r11:r11_307,r2:r2_312,r3:r3_316,r4:r4_325,r5:r5_319,r6:r6_292,r7:r7_314,r8:r8_310,r9:r9_305,sp:sp_450 - 0x00000008
		defs: ap:ap_462,fp:fp_471,r0:r0_465,r1:r1_472,r10:r10_475,r11:r11_464,r2:r2_467,r3:r3_469,r4:r4_473,r5:r5_470,r6:r6_474,r7:r7_468,r8:r8_466,r9:r9_463,sp:sp_461
	Mem478[sp_461 - 0x00000004:word32] = r0_465
	Mem481[sp_461 - 0x00000008:word32] = r2_467 + 1515
	Mem483[sp_461 - 0x0000000C:word32] = r2_467
	word32 r0_484 = Mem483[r2_467 + 0x0000C839:word32]
	call r0_484 + 2 (retsize: 4;)
		uses: ap:ap_462,fp:fp_471,r0:r0_484,r1:r1_472,r10:r10_475,r11:r11_464,r2:r2_467,r3:r3_469,r4:r4_473,r5:r5_470,r6:r6_474,r7:r7_468,r8:r8_466,r9:r9_463,sp:sp_461 - 0x0000000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000105AD:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000103E0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101C5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000101B9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010193_1:
	call 0x00010197 + (r1_130 - 0x00000007) * 0x00000002 (retsize: 4;)
		uses: ap:ap_56,fp:fp_65,r0:r1_75,r1:r1_75,r10:r10_147,r11:r11_58,r2:r2_61,r3:r3_63,r4:r4_67,r5:r5_64,r6:r6_68,r7:r7_62,r8:r8_70,r9:r9_57,sp:sp_55
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001018D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000105B1:
	r1 = r8 + 0x00000004
	Mem535[r9_160:word32] = Mem533[r9_160:word32] - r1
	Mem538[ap + 4:word32] = Mem535[ap + 4:word32] + r1
	branch Mem538[r9_160:word32] <u 0x00000004 l000105C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000105C1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010112:
	branch Mem53[r2 + 64:word32] == 0x00000000 l00010156
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010117:
	Mem547[sp_13 - 0x00000004:word32] = 0x00000001
	Mem551[sp_13 - 0x00000008:word32] = r2 + 0x000045EB
	Mem554[sp_13 - 0x0000000C:word32] = r2 + 0x0000C701
	word32 ap_558
	word32 fp_559
	word32 r2_561
	word32 r3_562
	word32 sp_563
	word32 r0_560 = fn00010892(ap, fp, out r2_561, out r3_562, out ap_558, out fp_559, out sp_563)
	Mem569[sp_563 - 0x00000004:word32] = r0_560
	Mem572[sp_563 - 0x00000008:word32] = r7 + 199
	Mem575[sp_563 - 0x0000000C:word32] = r2_561 + 1515
	word32 sp_579
	word32 ap_580
	word32 r9_581
	word32 r11_582
	word32 r0_583
	word32 r8_584
	word32 r2_585
	word32 r7_586
	word32 r3_587
	word32 r5_588
	word32 fp_589
	word32 r1_590
	word32 r4_591
	word32 r6_592
	word32 r10_593
	call Mem575[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_558,fp:fp_559,r0:r0_560,r1:r1_66,r10:r10_147,r11:r11_58,r2:r2_561,r3:r3_562,r4:r4_67,r5:r5_64,r6:r6_68,r7:r7_62,r8:r8_70,r9:r9_57,sp:sp_563 - 0x0000000C
		defs: ap:ap_580,fp:fp_589,r0:r0_583,r1:r1_590,r10:r10_593,r11:r11_582,r2:r2_585,r3:r3_587,r4:r4_591,r5:r5_588,r6:r6_592,r7:r7_586,r8:r8_584,r9:r9_581,sp:sp_579
	Mem596[sp_579 - 0x00000004:word32] = r0_583
	Mem599[sp_579 - 0x00000008:word32] = r2_585 + 1515
	Mem601[sp_579 - 0x0000000C:word32] = r2_585
	word32 r0_602 = Mem601[r2_585 + 0x0000C839:word32]
	call r0_602 + 2 (retsize: 4;)
		uses: ap:ap_580,fp:fp_589,r0:r0_602,r1:r1_590,r10:r10_593,r11:r11_582,r2:r2_585,r3:r3_587,r4:r4_591,r5:r5_588,r6:r6_592,r7:r7_586,r8:r8_584,r9:r9_581,sp:sp_579 - 0x0000000C
		defs: ap:ap_607,fp:fp_616,r0:r0_610,r1:r1_617,r10:r10_620,r11:r11_609,r2:r2_612,r3:r3_614,r4:r4_618,r5:r5_615,r6:r6_619,r7:r7_613,r8:r8_611,r9:r9_608,sp:sp_606
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010156:
	word32 sp_623 = sp_13 - 0x00000004
	Mem624[sp_623:word32] = 0x00000001
	Mem628[sp_623 - 0x00000004:word32] = Mem624[ap + 8:word32] - 0x00000004
	Mem631[sp_623 - 0x00000008:word32] = r8
	Mem635[sp_623 - 0x0000000C:word32] = r5 + 1459
	Mem639[sp_623 - 0x00000010:word32] = r2 + 1515
	word32 sp_643
	word32 ap_644
	word32 r9_646
	word32 r11_648
	word32 r0_650
	word32 r8_651
	word32 r2_652
	word32 r7_654
	word32 r3_656
	word32 r5_657
	word32 fp_659
	word32 r1_661
	word32 r4_663
	word32 r6_665
	word32 r10_667
	call Mem639[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_626,fp:fp_658,r0:r0_649,r1:r1_660,r10:r10_666,r11:r11_647,r2:r2_637,r3:r3_655,r4:r4_662,r5:r5_633,r6:r6_664,r7:r7_653,r8:r8_630,r9:r9_645,sp:sp_623 - 0x00000010
		defs: ap:ap_644,fp:fp_659,r0:r0_650,r1:r1_661,r10:r10_667,r11:r11_648,r2:r2_652,r3:r3_656,r4:r4_663,r5:r5_657,r6:r6_665,r7:r7_654,r8:r8_651,r9:r9_646,sp:sp_643
	Mem670[sp_643 - 0x00000004:word32] = r0_650
	Mem673[sp_643 - 0x00000008:word32] = r2_652 + 1515
	Mem675[sp_643 - 0x0000000C:word32] = r2_652
	word32 r0_676 = Mem675[r2_652 + 0x0000C839:word32]
	call r0_676 + 2 (retsize: 4;)
		uses: ap:ap_644,fp:fp_659,r0:r0_676,r1:r1_661,r10:r10_667,r11:r11_648,r2:r2_652,r3:r3_656,r4:r4_663,r5:r5_657,r6:r6_665,r7:r7_654,r8:r8_651,r9:r9_646,sp:sp_643 - 0x0000000C
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000100EA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000105C4:
	branch Mem706[r2 + 64:word32] != 0x00000000 l000105EC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000105C9:
	word32 sp_713 = sp_13 - 0x00000004
	Mem714[sp_713:word32] = 0x00000000
	Mem720[sp_713 - 0x00000004:word32] = r7 + 224
	Mem723[sp_713 - 0x00000008:word32] = r2 + 1515
	word32 sp_727
	word32 ap_729
	word32 r9_731
	word32 r11_735
	word32 r0_741
	word32 r8_744
	word32 r2_745
	word32 r7_746
	word32 r5_754
	word32 fp_758
	word32 r1_761
	word32 r4_765
	word32 r6_769
	word32 r10_773
	call Mem723[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_728,fp:fp_755,r0:r0_736,r1:r1_759,r10:r10_770,r11:r11_732,r2:r2_703,r3:r3_747,r4:r4_762,r5:r5_751,r6:r6_766,r7:r7_716,r8:r8_742,r9:r9_730,sp:sp_713 - 0x00000008
		defs: ap:ap_729,fp:fp_758,r0:r0_741,r1:r1_761,r10:r10_773,r11:r11_735,r2:r2_745,r4:r4_765,r5:r5_754,r6:r6_769,r7:r7_746,r8:r8_744,r9:r9_731,sp:sp_727
	Mem776[sp_727 - 0x00000004:word32] = r0_741
	Mem779[sp_727 - 0x00000008:word32] = r2_745 + 1515
	Mem781[sp_727 - 0x0000000C:word32] = r2_745
	word32 r3_782 = Mem781[r2_745 + 0x0000C839:word32]
	call r3_782 + 2 (retsize: 4;)
		uses: ap:ap_729,fp:fp_758,r0:r0_741,r1:r1_761,r10:r10_773,r11:r11_735,r2:r2_745,r3:r3_782,r4:r4_765,r5:r5_754,r6:r6_769,r7:r7_746,r8:r8_744,r9:r9_731,sp:sp_727 - 0x0000000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000105EC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000100C2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn000105F2(word32 r3, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r10:[0..31] r3:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: ap fp r0 r1 r10 r2 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r10 r2 r3 r4 r6 r7 r8 r9 sp
// Preserved:
fn000105F2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000105F2:
	branch Mem0[ap + 8:word32] <u 0x00000004 l00010617
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000105FB:
	word32 r0_29
	word32 v8_10 = Mem0[ap + 4:word32] + 0x00000004
	word32 ap_14
	word32 sp_19
	word32 r0_16 = fn0000E276(ap, fp, out r1, out r2, out ap_14, out fp, out sp_19)
	r0_29 = r0_16
	branch r0_16 == 0x00000000 l0001061C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001060C:
	r0_29 = Mem11[ap_14 + 12:word32] + 0x00000006
	branch Mem11[ap_14 + 8:word32] >u r0_29 l0001061C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001061C:
	Mem36[sp_19 - 0x00000004:word32] = r0_16
	word32 sp_40
	word32 ap_42
	word32 r0_44
	word32 r4_45
	word32 r10_193
	word32 fp_47
	word32 r2_52
	word32 r7_190
	word32 r1_54
	word32 r8_199
	word32 r9_202
	call Mem36[0x000192B4:word32] + 2 (retsize: 4;)
		uses: ap:ap_14,fp:fp_15,r0:r0_43,r1:r1_17,r10:r10,r2:r2_18,r3:r3,r4:r0_16,r6:r6,r7:r7,r8:r8,r9:r9,sp:sp_19 - 0x00000004,Stack +FFFFFFFC:v8_10
		defs: ap:ap_42,fp:fp_47,r0:r0_44,r1:r1_54,r10:r10_193,r2:r2_52,r4:r4_45,r7:r7_190,r8:r8_199,r9:r9_202,sp:sp_40
	branch r0_44 != 0x00000000 l0001062E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001062E:
	Mem63[sp_40 - 0x00000004:word32] = Mem36[ap_42 + 8:word32] - Mem36[ap_42 + 12:word32]
	Mem67[sp_40 - 0x00000008:word32] = Mem63[ap_42 + 12:word32] + 0x00000004 + Mem63[ap_42 + 4:word32]
	Mem69[sp_40 - 0x0000000C:word32] = r4_45
	Mem71[sp_40 - 0x00000010:word32] = r0_44
	word32 r3_121
	word32 ap_117
	word32 r4_119
	word32 fp_120
	word32 r1_123
	word32 r7_124
	word32 r10_125
	word32 r6_126
	word32 r8_127
	word32 r9_128
	word32 r0_118 = fn00010676(r2_52, r4_45, r7, ap_42, fp_47, out r1_123, out r3_121, out r4_119, out r6_126, out r7_124, out r8_127, out r9_128, out r10_125, out ap_117, out fp_120)
	word32 sp_116 = sp_40 - 0x00000010
	word32 r2_130 = r0_118
	branch r0_118 != 0x00000000 l00010664
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001064E:
	r0_118 = Mem71[ap_117 + 16:word32]
	branch r0_118 == 0x00000000 l00010664
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010654:
	Mem104[sp_40 - 0x00000014:word32] = r4_119
	Mem106[sp_40 - 0x00000018:word32] = r3_121
	Mem109[sp_40 - 0x0000001C:word32] = Mem106[ap_117 + 8:word32]
	Mem112[sp_40 - 0x00000020:word32] = Mem109[ap_117 + 4:word32]
	call r0_118 + 2 (retsize: 4;)
		uses: ap:ap_77,fp:fp_78,r0:r0_98,r1:r1_80,r10:r10_81,r2:r0_79,r3:r3_83,r4:r4_84,r6:r6_85,r7:r7_86,r8:r8_87,r9:r9_88,sp:sp_40 - 0x00000020,Stack +FFFFFFFC:v8_10
		defs: ap:ap_117,fp:fp_120,r0:r0_118,r1:r1_123,r10:r10_125,r3:r3_121,r4:r4_119,r6:r6_126,r7:r7_124,r8:r8_127,r9:r9_128,sp:sp_116
	r2_130 = r0_118
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010664:
	word32 sp_135 = sp_116 - 0x00000004
	Mem137[sp_135:word32] = r3_121
	word32 fp_149
	word32 r2_152
	word32 r1_154
	word32 r7_156
	word32 r10_158
	word32 r8_162
	word32 r9_164
	call Mem137[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_142,fp:fp_148,r0:r0_144,r1:r1_153,r10:r10_157,r2:r2_151,r3:r3_136,r4:r4_146,r6:r6_159,r7:r7_155,r8:r8_161,r9:r9_163,sp:sp_135,Stack +FFFFFFFC:v8_10
		defs: fp:fp_149,r1:r1_154,r10:r10_158,r2:r2_152,r7:r7_156,r8:r8_162,r9:r9_164
	word32 fp_171 = Mem137[fp_149 + 0x0000000C:word32]
	word32 ap_172 = Mem137[fp_149 + 0x00000008:word32]
	r1Out = r1_154
	r2Out = r2_152
	r7Out = r7_156
	r8Out = r8_162
	r9Out = r9_164
	r10Out = r10_158
	apOut = ap_172
	fpOut = fp_171
	spOut = fp_149 - 0x00000004
	return r2_152
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001062A:
	word32 fp_178 = Mem36[fp_47 + 0x0000000C:word32]
	word32 ap_179 = Mem36[fp_47 + 0x00000008:word32]
	r1Out = r1_54
	r2Out = r2_52
	r7Out = r7_190
	r8Out = r8_199
	r9Out = r9_202
	r10Out = r10_193
	apOut = ap_179
	fpOut = fp_178
	spOut = fp_47 - 0x00000004
	return 0x00000007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010617:
	word32 sp_185 = fp - 0x00000004
	word32 fp_187 = Mem186[sp_185 + 0x00000010:word32]
	word32 ap_188 = Mem186[sp_185 + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	apOut = ap_188
	fpOut = fp_187
	spOut = sp_185
	return 0x0000004F
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000105F2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00010676(word32 r2, word32 r4, word32 r7, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & apOut, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r2:[0..31] r4:[0..31] r7:[16..31]
// LiveOut: ap fp r0 r1 r10 r3 r4 r6 r7 r8 r9
// Trashed: CVZN ap fp r0 r1 r10 r2 r3 r4 r6 r7 r8 r9
// Preserved: sp
fn00010676_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010676:
	word32 r8_6 = Mem0[r2 + 0x0000C5F7:word32]
	word32 r9_7 = Mem0[r2 + 0x0000C5FB:word32]
	word32 r3_10 = Mem0[ap + 12:word32]
	word32 ap_17
	word32 fp_18
	word32 sp_22
	word32 r7_30 = SEQ(SLICE(r7, word16, 16), (word16) fn0000E25A(ap, fp, out ap_17, out fp_18, out sp_22))
	Mem33[sp_22 - 0x00000004:word32] = r3_10 + 0x00000002
	word32 ap_35
	word32 fp_36
	word32 r1_38
	word32 r2_39
	word32 sp_40
	word32 r0_37 = fn0000E276(ap_17, fp_18, out r1_38, out r2_39, out ap_35, out fp_36, out sp_40)
	Mem47[r2_39 + 0x0000C5F7:word32] = r3_10 + 0x00000006
	Mem49[r2_39 + 132:word32] = Mem47[ap_35 + 16:word32] - 0x00000006
	Mem51[r2_39 + 0x0000C5FB:word32] = Mem49[r2_39 + 132:word32]
	Mem53[r2_39 + 0x0000C6C5:word32] = 0x00000001
	Mem55[r2_39 + 0x0000C6C9:word32] = Mem53[ap_35 + 4:word32]
	Mem57[r2_39 + 0x0000C6CD:word32] = Mem55[ap_35 + 8:word32]
	word32 r0_58 = (uint32) (word16) r7_30
	branch r0_58 > 0x00000008 l000106FB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000106FB:
	Mem65[Mem57[r4:word32]:real32] = 0.5F + 36.0F
	__halt()
	word32 r8_72
	word32 r9_73
	word32 r6_74
	word32 ap_75
	word32 r3_76
	word32 r0_77
	word32 r7_78
	word32 r10_79
	word32 r4_80
	word32 fp_81
	word32 r1_82
	call fn4000E3D8 (retsize: 4;)
		uses: ap:ap_35,fp:fp_36,r0:r0_58,r1:r1_38,r10:r0_37,r2:r2_39,r3:r3_10,r4:r4 + 0x00000004,r6:0x00000000,r7:r7_30,r8:r8_6,r9:r9_7,sp:sp_40,Stack +FFFFFFFC:r3_10
		defs: ap:ap_75,fp:fp_81,r0:r0_77,r1:r1_82,r10:r10_79,r3:r3_76,r4:r4_80,r6:r6_74,r7:r7_78,r8:r8_72,r9:r9_73
	r1Out = r1_82
	r3Out = r3_76
	r4Out = r4_80
	r6Out = r6_74
	r7Out = r7_78
	r8Out = r8_72
	r9Out = r9_73
	r10Out = r10_79
	apOut = ap_75
	fpOut = fp_81
	return r0_77
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000106E7_1:
	word32 r8_86
	word32 r9_87
	word32 r6_88
	word32 ap_89
	word32 r3_90
	word32 r0_91
	word32 r7_92
	word32 r10_93
	word32 r4_94
	word32 fp_95
	word32 r1_96
	call 0x000106EB + r0_58 * 0x00000002 (retsize: 4;)
		uses: ap:ap_35,fp:fp_36,r0:r0_58,r1:r1_38,r10:r0_37,r2:r2_39,r3:r3_10,r4:r4,r6:0x00000000,r7:r7_30,r8:r8_6,r9:r9_7,sp:sp_40,Stack +FFFFFFFC:r3_10
		defs: ap:ap_89,fp:fp_95,r0:r0_91,r1:r1_96,r10:r10_93,r3:r3_90,r4:r4_94,r6:r6_88,r7:r7_92,r8:r8_86,r9:r9_87
	r1Out = r1_96
	r3Out = r3_90
	r4Out = r4_94
	r6Out = r6_88
	r7Out = r7_92
	r8Out = r8_86
	r9Out = r9_87
	r10Out = r10_93
	apOut = ap_89
	fpOut = fp_95
	return r0_91
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00010676_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0001084A(word32 r0, word32 r2, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r2:[0..31]
// LiveOut: fp
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn0001084A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001084A:
	branch Mem0[ap + 8:word32] <=u Mem0[r2 + 0x0000C6CD:word32] l00010862
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010862:
	word32 r3_10 = Mem0[ap + 8:word32]
	word32 r2_24
	word32 fp_28
	word32 r3_29
	call Mem18[0x0001929C:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r2:r2,r3:r3_10,sp:fp - 0x00000010,Stack +0004:Mem15[r2 + 0x0000C6C9:word32],Stack +0008:Mem12[ap + 4:word32],Stack +000C:r3_10
		defs: fp:fp_28,r2:r2_24,r3:r3_29
	Mem32[r2_24 + 0x0000C6C9:word32] = Mem18[r2_24 + 0x0000C6C9:word32] + r3_29
	Mem34[r2_24 + 0x0000C6CD:word32] = Mem32[r2_24 + 0x0000C6CD:word32] - r3_29
	Mem36[r2_24 + 0x0000C6FD:word32] = Mem34[r2_24 + 0x0000C6FD:word32] + r3_29
	return Mem36[fp_28 + 0x0000000C:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001085E:
	return Mem0[fp + 0x0000000C:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0001084A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00010892(word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31]
// LiveOut: ap fp r0 r2 r3 sp
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn00010892_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010892:
	word32 r3_16 = Mem0[ap + 4:word32]
	word32 r2_25 = Mem0[ap + 8:word32]
	branch Mem0[r3_16:byte] == 0x00 l000108C7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000108A1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000108A4:
	branch (uint32) Mem17[r3_16:byte] >=u 0x00000020 l000108C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000108C0:
	Mem26[r2_25:byte] = Mem17[r3_16:byte]
	r3_16 = r3_16 + 0x00000001
	r2_25 = r2_25 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000108AC:
	Mem32[r2_25:byte] = 0x5E
	word32 r2_33 = r2_25 + 0x00000001
	Mem39[r2_33:int8] = (int8) ((uint32) Mem32[r3_16:byte] + 0x00000040)
	r3_16 = r3_16 + 0x00000001
	r2_25 = r2_33 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000108C3:
	branch Mem44[r3_16:byte] != 0x00 l000108A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000108C7:
	Mem52[r2_25:byte] = 0x00
	word32 r0_56 = Mem52[ap + 8:word32]
	word32 fp_65 = Mem52[fp + 0x0000000C:word32]
	word32 ap_66 = Mem52[fp + 0x00000008:word32]
	r2Out = r2_25
	r3Out = r3_16
	apOut = ap_66
	fpOut = fp_65
	spOut = fp - 0x00000004
	return r0_56
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00010892_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000108D2(word32 r0, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r10:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
l00010A95:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000109EC:
	def r11
	def sp
	def Mem0
	def r1
	def r3
	def dwLoc08
	def dwLoc0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A98:
	ap_347 = r6 + r8 + r7
	branch ap_347 == 0x00000000 l00010AA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AA4:
	ap_350 = r4 + r9
	branch ap_350 == 0x00000001 l00010AB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AB0:
	branch r11 != 0x00000000 l00010AB7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AB7:
	branch Mem0[sp:word32] != 0x00000009 l00010AC2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AC0:
	Mem367[sp:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AC2:
	Mem375 = PHI((Mem0, l00010AB7), (Mem367, l00010AC0))
	Mem377[sp - 0x00000004:word32] = Mem375[r2 + 0x0000C60F:word32]
	r0_387 = fn00018F22(r1, ap_350, fp, out r1_389, out ap_385, out fp_386, out sp_388)
	branch r0_387 == 0x00000000 l00010B18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B18:
	Mem400[sp_388 - 0x00000004:word32] = r11
	call Mem400[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap_385,fp:fp_386,pc:pc,r0:r0_387,r1:r1_389,r10:r10,r11:r11,r2:r2,r3:r3,r4:0x00000000,r5:r5,r6:r6,r7:r7,r8:r8,r9:0x00000000,sp:sp_388 - 0x00000004,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_413,fp:fp_414,pc:pc_428,r0:r0_409,r1:r1_429,r10:r10_412,r11:r11_405,r2:r2_410,r3:r3_408,r4:r4_418,r5:r5_416,r6:r6_420,r7:r7_422,r8:r8_424,r9:r9_426,sp:sp_404
	Mem433[r2_410 + 0x0000C613:word32] = r11_405
	Mem436[sp_404 - 0x00000004:word32] = r5_416 + 11
	r0_431 = r0_409 + r11_405
	Mem438[sp_404 - 0x00000008:word32] = r0_431
	call Mem438[0x000192BC:word32] + 2 (retsize: 4;)
		uses: ap:ap_413,fp:fp_414,pc:pc_428,r0:r0_431,r1:r1_429,r10:r10_412,r11:r11_405,r2:r2_410,r3:r3_408,r4:r4_418,r5:r5_416,r6:r6_420,r7:r7_422,r8:r8_424,r9:r9_426,sp:sp_404 - 0x00000008,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_448,fp:fp_449,pc:pc_456,r1:r1_457,r10:r10_447,r2:r2_446,r3:r3_444,r4:r4_451,r6:r6_452,r7:r7_453,r9:r9_455,sp:sp_442
	Mem460[sp_442 - 0x00000004:word32] = 0x00000001
	r0_466 = fn00010E6A(r1_457, r2_446, r3_444, r4_451, r6_452, r7_453, r9_455, ap_448, fp_449, out r1_467, out r2_469, out r3_470, out r4_471, out r5_472, out r6_473, out r7_474, out r8_475, out r9_476, out r11_468, out ap_464, out fp_465, out sp_477)
	branch r0_466 != 0x00000001 l00010B48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B48:
	branch r0_466 != 0x0000004C l00010B58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B58:
	branch r0_466 == 0x00000009 l00010B6A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B5D:
	branch r0_466 == 0x00000000 l00010B68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B68:
	r8_495 = r8_475 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B61:
	r7_497 = r7_474 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B51:
	r9_499 = r9_476 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B43:
	r6_501 = r6_473 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B6A:
	r9_768 = PHI((r9_476, l00010B43), (r9_499, l00010B51), (r9_476, l00010B58), (r9_476, l00010B61), (r9_476, l00010B68))
	r8_662 = PHI((r8_475, l00010B43), (r8_475, l00010B51), (r8_475, l00010B58), (r8_475, l00010B61), (r8_495, l00010B68))
	r6_656 = PHI((r6_501, l00010B43), (r6_473, l00010B51), (r6_473, l00010B58), (r6_473, l00010B61), (r6_473, l00010B68))
	r7_652 = PHI((r7_474, l00010B43), (r7_474, l00010B51), (r7_474, l00010B58), (r7_497, l00010B61), (r7_474, l00010B68))
	branch r0_466 <= Mem460[sp_477:word32] l00010B72
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B6F:
	Mem510[sp_477:word32] = r0_466
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AD3:
	Mem516[sp_388 - 0x00000004:uint32] = 0x00000401
	Mem519[sp_388 - 0x00000008:word32] = Mem516[r2 + 0x0000C60F:word32]
	branch Mem519[r2:word32] == 0x00000000 l00010AEC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AEC:
	r3_524 = r10 + 456
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AE2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AF1:
	r3_533 = PHI((r3, l00010AE2), (r3_524, l00010AEC))
	Mem534[sp_388 - 0x0000000C:word32] = r3_533
	Mem538[sp_388 - 0x00000010:word32] = r10 + 277
	Mem542[sp_388 - 0x00000014:word32] = r2 + 1515
	call Mem542[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_385,fp:fp_386,pc:pc,r0:r0_387,r1:r1_389,r10:r10,r11:r11,r2:r2,r3:r3_533,r4:0x00000000,r5:r5,r6:r6,r7:r7,r8:r8,r9:0x00000000,sp:sp_388 - 0x00000014,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_557,pc:pc_571,r0:r0_551,r1:r1_573,r10:r10_553,r11:r11_548,r2:r2_552,r3:r3_549,r4:r4_561,r5:r5_559,r6:r6_563,r7:r7_565,r8:r8_567,r9:r9_569,sp:sp_546
	Mem576[sp_546 - 0x00000004:word32] = r0_551
	Mem579[sp_546 - 0x00000008:word32] = r2_552 + 1515
	Mem581[sp_546 - 0x0000000C:word32] = r2_552
	ap_582 = Mem581[r2_552 + 0x0000C839:word32]
	call ap_582 + 2 (retsize: 4;)
		uses: ap:ap_582,fp:fp_557,pc:pc_571,r0:r0_551,r1:r1_573,r10:r10_553,r11:r11_548,r2:r2_552,r3:r3_549,r4:r4_561,r5:r5_559,r6:r6_563,r7:r7_565,r8:r8_567,r9:r9_569,sp:sp_546 - 0x0000000C,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_592,fp:fp_593,pc:pc_600,r1:r1_601,r10:r10_591,r11:r11_587,r2:r2_590,r3:r3_588,r4:r4_595,r5:r5_594,r6:r6_596,r7:r7_597,r8:r8_598,r9:r9_599,sp:sp_586
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AB4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AAD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010AA1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B72:
	pc_774 = PHI((pc, l00010AA1), (pc, l00010AAD), (pc, l00010AB4), (pc_600, l00010AF1), (pc_456, l00010B6A), (pc_456, l00010B6F))
	r9_767 = PHI((r9, l00010AA1), (r9, l00010AAD), (r9, l00010AB4), (r9_599, l00010AF1), (r9_768, l00010B6A), (r9_768, l00010B6F))
	r10_737 = PHI((r10, l00010AA1), (r10, l00010AAD), (r10, l00010AB4), (r10_591, l00010AF1), (r10_447, l00010B6A), (r10_447, l00010B6F))
	r3_724 = PHI((r3, l00010AA1), (r3, l00010AAD), (r3, l00010AB4), (r3_588, l00010AF1), (r3_470, l00010B6A), (r3_470, l00010B6F))
	r11_717 = PHI((r11, l00010AA1), (r11, l00010AAD), (r11, l00010AB4), (r11_587, l00010AF1), (r11_468, l00010B6A), (r11_468, l00010B6F))
	r5_701 = PHI((r5, l00010AA1), (r5, l00010AAD), (r5, l00010AB4), (r5_594, l00010AF1), (r5_472, l00010B6A), (r5_472, l00010B6F))
	r8_661 = PHI((r8, l00010AA1), (r8, l00010AAD), (r8, l00010AB4), (r8_598, l00010AF1), (r8_662, l00010B6A), (r8_662, l00010B6F))
	r6_655 = PHI((r6, l00010AA1), (r6, l00010AAD), (r6, l00010AB4), (r6_596, l00010AF1), (r6_656, l00010B6A), (r6_656, l00010B6F))
	r7_651 = PHI((r7, l00010AA1), (r7, l00010AAD), (r7, l00010AB4), (r7_597, l00010AF1), (r7_652, l00010B6A), (r7_652, l00010B6F))
	r4_648 = PHI((r4, l00010AA1), (r4, l00010AAD), (r4, l00010AB4), (r4_595, l00010AF1), (r4_471, l00010B6A), (r4_471, l00010B6F))
	r1_617 = PHI((r1, l00010AA1), (r1, l00010AAD), (r1, l00010AB4), (r1_601, l00010AF1), (r1_467, l00010B6A), (r1_467, l00010B6F))
	fp_615 = PHI((fp, l00010AA1), (fp, l00010AAD), (fp, l00010AB4), (fp_593, l00010AF1), (fp_465, l00010B6A), (fp_465, l00010B6F))
	ap_613 = PHI((ap_347, l00010AA1), (ap_350, l00010AAD), (ap_350, l00010AB4), (ap_592, l00010AF1), (ap_464, l00010B6A), (ap_464, l00010B6F))
	Mem607 = PHI((Mem0, l00010AA1), (Mem0, l00010AAD), (Mem0, l00010AB4), (Mem581, l00010AF1), (Mem460, l00010B6A), (Mem510, l00010B6F))
	r2_605 = PHI((r2, l00010AA1), (r2, l00010AAD), (r2, l00010AB4), (r2_590, l00010AF1), (r2_469, l00010B6A), (r2_469, l00010B6F))
	sp_603 = PHI((sp, l00010AA1), (sp, l00010AAD), (sp, l00010AB4), (sp_586, l00010AF1), (sp_477, l00010B6A), (sp_477, l00010B6F))
	Mem609[sp_603 - 0x00000004:word32] = Mem607[r2_605 + 0x0000C60F:word32]
	r0_621 = fn00018F22(r1_617, ap_613, fp_615, out r1_623, out ap_1854, out fp_620, out sp_622)
	branch r0_621 != 0x00000000 l00010B86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B86:
	branch Mem609[r2_605 + 64:word32] < 0x00000003 l00010B8F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B8F:
	branch Mem609[r2_605 + 72:word32] == 0x00000000 l00010BA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B94:
	branch Mem609[r2_605 + 64:word32] == 0x00000000 l00010BA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B99:
	branch Mem609[r2_605:word32] != 0x00000000 l00010BA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BA0:
	ap_657 = r4_648 + r7_651 + r6_655
	branch ap_657 > 0x00000000 l00010BAE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BA9:
	branch r8_661 == 0x00000001 l00010BD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BAE:
	branch Mem609[r2_605 + 72:word32] == 0x00000000 l00010BB7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BB3:
	branch Mem609[r2_605:word32] == 0x00000000 l00010BD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BB7:
	branch Mem609[r2_605 + 68:word32] == 0x00000000 l00010BC2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BBC:
	branch Mem609[r2_605 + 64:word32] > 0x00000001 l00010BD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BC2:
	Mem693[sp_622 - 0x00000004:uint32] = 0x00000401
	Mem695[sp_622 - 0x00000008:word32] = 0x00000001
	Mem704[sp_622 - 0x0000000C:word32] = r5_701 + 16
	Mem707[sp_622 - 0x00000010:word32] = r2_605
	ap_708 = Mem707[r2_605 + 0x0000C839:word32]
	call ap_708 + 2 (retsize: 4;)
		uses: ap:ap_708,fp:fp_620,pc:pc_774,r0:r0_621,r1:r1_623,r10:r10_737,r11:r11_717,r2:r2_605,r3:r3_724,r4:r4_648,r5:r5_701,r6:r6_655,r7:r7_651,r8:r8_661,r9:r9_767,sp:sp_622 - 0x00000010,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_740,fp:fp_745,pc:pc_776,r0:r0_731,r1:r1_781,r10:r10_739,r11:r11_719,r2:r2_732,r3:r3_726,r4:r4_750,r5:r5_746,r6:r6_754,r7:r7_758,r8:r8_762,r9:r9_769,sp:sp_712
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BD8:
	r3_1261 = PHI((r3_724, l00010BA9), (r3_724, l00010BB3), (r3_724, l00010BBC), (r3_726, l00010BC2))
	r1_881 = PHI((r1_623, l00010BA9), (r1_623, l00010BB3), (r1_623, l00010BBC), (r1_781, l00010BC2))
	pc_877 = PHI((pc_774, l00010BA9), (pc_774, l00010BB3), (pc_774, l00010BBC), (pc_776, l00010BC2))
	fp_858 = PHI((fp_620, l00010BA9), (fp_620, l00010BB3), (fp_620, l00010BBC), (fp_745, l00010BC2))
	ap_852 = PHI((ap_657, l00010BA9), (ap_657, l00010BB3), (ap_657, l00010BBC), (ap_740, l00010BC2))
	r0_846 = PHI((r0_621, l00010BA9), (r0_621, l00010BB3), (r0_621, l00010BBC), (r0_731, l00010BC2))
	r11_841 = PHI((r11_717, l00010BA9), (r11_717, l00010BB3), (r11_717, l00010BBC), (r11_719, l00010BC2))
	r2_832 = PHI((r2_605, l00010BA9), (r2_605, l00010BB3), (r2_605, l00010BBC), (r2_732, l00010BC2))
	r10_826 = PHI((r10_737, l00010BA9), (r10_737, l00010BB3), (r10_737, l00010BBC), (r10_739, l00010BC2))
	r5_807 = PHI((r5_701, l00010BA9), (r5_701, l00010BB3), (r5_701, l00010BBC), (r5_746, l00010BC2))
	sp_798 = PHI((sp_622, l00010BA9), (sp_622, l00010BB3), (sp_622, l00010BBC), (sp_712, l00010BC2))
	r6_793 = PHI((r6_655, l00010BA9), (r6_655, l00010BB3), (r6_655, l00010BBC), (r6_754, l00010BC2))
	r7_791 = PHI((r7_651, l00010BA9), (r7_651, l00010BB3), (r7_651, l00010BBC), (r7_758, l00010BC2))
	r9_789 = PHI((r9_767, l00010BA9), (r9_767, l00010BB3), (r9_767, l00010BBC), (r9_769, l00010BC2))
	r4_788 = PHI((r4_648, l00010BA9), (r4_648, l00010BB3), (r4_648, l00010BBC), (r4_750, l00010BC2))
	r8_783 = PHI((r8_661, l00010BA9), (r8_661, l00010BB3), (r8_661, l00010BBC), (r8_762, l00010BC2))
	branch r8_783 > 0x00000001 l00010BEB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BDD:
	branch r8_783 != 0x00000001 l00010C24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BDF:
	ap_794 = r4_788 + r9_789 + r7_791 + r6_793
	branch ap_794 <= 0x00000000 l00010C24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BEB:
	ap_851 = PHI((ap_852, l00010BD8), (ap_794, l00010BDF))
	sp_799 = sp_798 - 0x00000004
	Mem801[sp_799:uint32] = 0x00000401
	branch r8_783 != 0x00000001 l00010BFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BFC:
	r3_808 = r5_807 + 18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010BF5:
	r3_812 = r5_807 + 25
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C00:
	r3_818 = PHI((r3_812, l00010BF5), (r3_808, l00010BFC))
	Mem819[sp_799 - 0x00000004:word32] = r3_818
	Mem822[sp_799 - 0x00000008:word32] = r8_783
	Mem828[sp_799 - 0x0000000C:word32] = r10_826 + 39
	Mem834[sp_799 - 0x00000010:word32] = r2_832 + 1515
	call Mem834[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_851,fp:fp_858,pc:pc_877,r0:r0_846,r1:r1_881,r10:r10_826,r11:r11_841,r2:r2_832,r3:r3_818,r4:r4_788,r5:r5_807,r6:r6_793,r7:r7_791,r8:r8_783,r9:r9_789,sp:sp_799 - 0x00000010,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_859,pc:pc_878,r0:r0_847,r1:r1_882,r10:r10_849,r11:r11_842,r2:r2_848,r3:r3_843,r4:r4_864,r5:r5_861,r6:r6_867,r7:r7_870,r8:r8_871,r9:r9_874,sp:sp_838
	Mem885[sp_838 - 0x00000004:word32] = r0_847
	Mem888[sp_838 - 0x00000008:word32] = r2_848 + 1515
	Mem890[sp_838 - 0x0000000C:word32] = r2_848
	ap_891 = Mem890[r2_848 + 0x0000C839:word32]
	call ap_891 + 2 (retsize: 4;)
		uses: ap:ap_891,fp:fp_859,pc:pc_878,r0:r0_847,r1:r1_882,r10:r10_849,r11:r11_842,r2:r2_848,r3:r3_843,r4:r4_864,r5:r5_861,r6:r6_867,r7:r7_870,r8:r8_871,r9:r9_874,sp:sp_838 - 0x0000000C,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_901,fp:fp_902,pc:pc_909,r0:r0_898,r1:r1_910,r10:r10_900,r11:r11_896,r2:r2_899,r3:r3_897,r4:r4_904,r5:r5_903,r6:r6_905,r7:r7_906,r8:r8_907,r9:r9_908,sp:sp_895
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C24:
	r3_1260 = PHI((r3_1261, l00010BDD), (r3_1261, l00010BDF), (r3_897, l00010C00))
	r1_987 = PHI((r1_881, l00010BDD), (r1_881, l00010BDF), (r1_910, l00010C00))
	pc_984 = PHI((pc_877, l00010BDD), (pc_877, l00010BDF), (pc_909, l00010C00))
	r9_981 = PHI((r9_789, l00010BDD), (r9_789, l00010BDF), (r9_908, l00010C00))
	r8_978 = PHI((r8_783, l00010BDD), (r8_783, l00010BDF), (r8_907, l00010C00))
	r7_975 = PHI((r7_791, l00010BDD), (r7_791, l00010BDF), (r7_906, l00010C00))
	r4_971 = PHI((r4_788, l00010BDD), (r4_788, l00010BDF), (r4_904, l00010C00))
	fp_966 = PHI((fp_858, l00010BDD), (fp_858, l00010BDF), (fp_902, l00010C00))
	ap_963 = PHI((ap_852, l00010BDD), (ap_794, l00010BDF), (ap_901, l00010C00))
	r0_958 = PHI((r0_846, l00010BDD), (r0_846, l00010BDF), (r0_898, l00010C00))
	r11_954 = PHI((r11_841, l00010BDD), (r11_841, l00010BDF), (r11_896, l00010C00))
	r2_946 = PHI((r2_832, l00010BDD), (r2_832, l00010BDF), (r2_899, l00010C00))
	r10_941 = PHI((r10_826, l00010BDD), (r10_826, l00010BDF), (r10_900, l00010C00))
	r5_923 = PHI((r5_807, l00010BDD), (r5_807, l00010BDF), (r5_903, l00010C00))
	sp_916 = PHI((sp_798, l00010BDD), (sp_798, l00010BDF), (sp_895, l00010C00))
	r6_912 = PHI((r6_793, l00010BDD), (r6_793, l00010BDF), (r6_905, l00010C00))
	branch r6_912 <= 0x00000000 l00010C60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C28:
	sp_917 = sp_916 - 0x00000004
	Mem919[sp_917:uint32] = 0x00000401
	branch r6_912 != 0x00000001 l00010C38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C38:
	r3_924 = r5_923 + 30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C32:
	r3_928 = r5_923 + 32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C3C:
	r3_934 = PHI((r3_928, l00010C32), (r3_924, l00010C38))
	Mem935[sp_917 - 0x00000004:word32] = r3_934
	Mem938[sp_917 - 0x00000008:word32] = r6_912
	Mem943[sp_917 - 0x0000000C:word32] = r10_941 + 77
	Mem948[sp_917 - 0x00000010:word32] = r2_946 + 1515
	call Mem948[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_963,fp:fp_966,pc:pc_984,r0:r0_958,r1:r1_987,r10:r10_941,r11:r11_954,r2:r2_946,r3:r3_934,r4:r4_971,r5:r5_923,r6:r6_912,r7:r7_975,r8:r8_978,r9:r9_981,sp:sp_917 - 0x00000010,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_967,pc:pc_985,r0:r0_959,r1:r1_988,r10:r10_961,r11:r11_955,r2:r2_960,r3:r3_956,r4:r4_972,r5:r5_969,r6:r6_973,r7:r7_976,r8:r8_979,r9:r9_982,sp:sp_952
	Mem991[sp_952 - 0x00000004:word32] = r0_959
	Mem994[sp_952 - 0x00000008:word32] = r2_960 + 1515
	Mem996[sp_952 - 0x0000000C:word32] = r2_960
	ap_997 = Mem996[r2_960 + 0x0000C839:word32]
	call ap_997 + 2 (retsize: 4;)
		uses: ap:ap_997,fp:fp_967,pc:pc_985,r0:r0_959,r1:r1_988,r10:r10_961,r11:r11_955,r2:r2_960,r3:r3_956,r4:r4_972,r5:r5_969,r6:r6_973,r7:r7_976,r8:r8_979,r9:r9_982,sp:sp_952 - 0x0000000C,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_1007,fp:fp_1008,pc:pc_1015,r0:r0_1004,r1:r1_1016,r10:r10_1006,r11:r11_1002,r2:r2_1005,r3:r3_1003,r4:r4_1010,r5:r5_1009,r6:r6_1011,r7:r7_1012,r8:r8_1013,r9:r9_1014,sp:sp_1001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C60:
	r3_1259 = PHI((r3_1260, l00010C24), (r3_1003, l00010C3C))
	r1_1093 = PHI((r1_987, l00010C24), (r1_1016, l00010C3C))
	pc_1090 = PHI((pc_984, l00010C24), (pc_1015, l00010C3C))
	r9_1087 = PHI((r9_981, l00010C24), (r9_1014, l00010C3C))
	r8_1084 = PHI((r8_978, l00010C24), (r8_1013, l00010C3C))
	r6_1080 = PHI((r6_912, l00010C24), (r6_1011, l00010C3C))
	r4_1077 = PHI((r4_971, l00010C24), (r4_1010, l00010C3C))
	fp_1072 = PHI((fp_966, l00010C24), (fp_1008, l00010C3C))
	ap_1069 = PHI((ap_963, l00010C24), (ap_1007, l00010C3C))
	r0_1064 = PHI((r0_958, l00010C24), (r0_1004, l00010C3C))
	r11_1060 = PHI((r11_954, l00010C24), (r11_1002, l00010C3C))
	r2_1052 = PHI((r2_946, l00010C24), (r2_1005, l00010C3C))
	r10_1047 = PHI((r10_941, l00010C24), (r10_1006, l00010C3C))
	r5_1029 = PHI((r5_923, l00010C24), (r5_1009, l00010C3C))
	sp_1022 = PHI((sp_916, l00010C24), (sp_1001, l00010C3C))
	r7_1018 = PHI((r7_975, l00010C24), (r7_1012, l00010C3C))
	branch r7_1018 <= 0x00000000 l00010C9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C64:
	sp_1023 = sp_1022 - 0x00000004
	Mem1025[sp_1023:uint32] = 0x00000401
	branch r7_1018 != 0x00000001 l00010C74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C74:
	r3_1030 = r5_1029 + 33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C6E:
	r3_1034 = r5_1029 + 35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C78:
	r3_1040 = PHI((r3_1034, l00010C6E), (r3_1030, l00010C74))
	Mem1041[sp_1023 - 0x00000004:word32] = r3_1040
	Mem1044[sp_1023 - 0x00000008:word32] = r7_1018
	Mem1049[sp_1023 - 0x0000000C:word32] = r10_1047 + 125
	Mem1054[sp_1023 - 0x00000010:word32] = r2_1052 + 1515
	call Mem1054[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1069,fp:fp_1072,pc:pc_1090,r0:r0_1064,r1:r1_1093,r10:r10_1047,r11:r11_1060,r2:r2_1052,r3:r3_1040,r4:r4_1077,r5:r5_1029,r6:r6_1080,r7:r7_1018,r8:r8_1084,r9:r9_1087,sp:sp_1023 - 0x00000010,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_1073,pc:pc_1091,r0:r0_1065,r1:r1_1094,r10:r10_1067,r11:r11_1061,r2:r2_1066,r3:r3_1062,r4:r4_1078,r5:r5_1075,r6:r6_1081,r7:r7_1082,r8:r8_1085,r9:r9_1088,sp:sp_1058
	Mem1097[sp_1058 - 0x00000004:word32] = r0_1065
	Mem1100[sp_1058 - 0x00000008:word32] = r2_1066 + 1515
	Mem1102[sp_1058 - 0x0000000C:word32] = r2_1066
	ap_1103 = Mem1102[r2_1066 + 0x0000C839:word32]
	call ap_1103 + 2 (retsize: 4;)
		uses: ap:ap_1103,fp:fp_1073,pc:pc_1091,r0:r0_1065,r1:r1_1094,r10:r10_1067,r11:r11_1061,r2:r2_1066,r3:r3_1062,r4:r4_1078,r5:r5_1075,r6:r6_1081,r7:r7_1082,r8:r8_1085,r9:r9_1088,sp:sp_1058 - 0x0000000C,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_1113,fp:fp_1114,pc:pc_1121,r0:r0_1110,r1:r1_1122,r10:r10_1112,r11:r11_1108,r2:r2_1111,r3:r3_1109,r4:r4_1116,r5:r5_1115,r6:r6_1117,r7:r7_1118,r8:r8_1119,r9:r9_1120,sp:sp_1107
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010C9C:
	r3_1258 = PHI((r3_1259, l00010C60), (r3_1109, l00010C78))
	r1_1199 = PHI((r1_1093, l00010C60), (r1_1122, l00010C78))
	pc_1196 = PHI((pc_1090, l00010C60), (pc_1121, l00010C78))
	r9_1193 = PHI((r9_1087, l00010C60), (r9_1120, l00010C78))
	r8_1190 = PHI((r8_1084, l00010C60), (r8_1119, l00010C78))
	r7_1187 = PHI((r7_1018, l00010C60), (r7_1118, l00010C78))
	r6_1184 = PHI((r6_1080, l00010C60), (r6_1117, l00010C78))
	fp_1178 = PHI((fp_1072, l00010C60), (fp_1114, l00010C78))
	ap_1175 = PHI((ap_1069, l00010C60), (ap_1113, l00010C78))
	r0_1170 = PHI((r0_1064, l00010C60), (r0_1110, l00010C78))
	r11_1166 = PHI((r11_1060, l00010C60), (r11_1108, l00010C78))
	r2_1158 = PHI((r2_1052, l00010C60), (r2_1111, l00010C78))
	r10_1153 = PHI((r10_1047, l00010C60), (r10_1112, l00010C78))
	r5_1135 = PHI((r5_1029, l00010C60), (r5_1115, l00010C78))
	sp_1128 = PHI((sp_1022, l00010C60), (sp_1107, l00010C78))
	r4_1124 = PHI((r4_1077, l00010C60), (r4_1116, l00010C78))
	branch r4_1124 <= 0x00000000 l00010CD9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010CA0:
	sp_1129 = sp_1128 - 0x00000004
	Mem1131[sp_1129:uint32] = 0x00000401
	branch r4_1124 != 0x00000001 l00010CB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010CB0:
	r3_1136 = r5_1135 + 36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010CAA:
	r3_1140 = r5_1135 + 38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010CB4:
	r3_1146 = PHI((r3_1140, l00010CAA), (r3_1136, l00010CB0))
	Mem1147[sp_1129 - 0x00000004:word32] = r3_1146
	Mem1150[sp_1129 - 0x00000008:word32] = r4_1124
	Mem1155[sp_1129 - 0x0000000C:word32] = r10_1153 + 157
	Mem1160[sp_1129 - 0x00000010:word32] = r2_1158 + 1515
	call Mem1160[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1175,fp:fp_1178,pc:pc_1196,r0:r0_1170,r1:r1_1199,r10:r10_1153,r11:r11_1166,r2:r2_1158,r3:r3_1146,r4:r4_1124,r5:r5_1135,r6:r6_1184,r7:r7_1187,r8:r8_1190,r9:r9_1193,sp:sp_1129 - 0x00000010,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_1179,pc:pc_1197,r0:r0_1171,r1:r1_1200,r10:r10_1173,r11:r11_1167,r2:r2_1172,r3:r3_1168,r4:r4_1182,r5:r5_1181,r6:r6_1185,r7:r7_1188,r8:r8_1191,r9:r9_1194,sp:sp_1164
	Mem1203[sp_1164 - 0x00000004:word32] = r0_1171
	Mem1206[sp_1164 - 0x00000008:word32] = r2_1172 + 1515
	Mem1208[sp_1164 - 0x0000000C:word32] = r2_1172
	ap_1209 = Mem1208[r2_1172 + 0x0000C839:word32]
	call ap_1209 + 2 (retsize: 4;)
		uses: ap:ap_1209,fp:fp_1179,pc:pc_1197,r0:r0_1171,r1:r1_1200,r10:r10_1173,r11:r11_1167,r2:r2_1172,r3:r3_1168,r4:r4_1182,r5:r5_1181,r6:r6_1185,r7:r7_1188,r8:r8_1191,r9:r9_1194,sp:sp_1164 - 0x0000000C,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_1219,fp:fp_1220,pc:pc_1227,r0:r0_1216,r1:r1_1228,r10:r10_1218,r11:r11_1214,r2:r2_1217,r3:r3_1215,r4:r4_1222,r5:r5_1221,r6:r6_1223,r7:r7_1224,r8:r8_1225,r9:r9_1226,sp:sp_1213
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010CD9:
	r1_1284 = PHI((r1_1199, l00010C9C), (r1_1228, l00010CB4))
	pc_1282 = PHI((pc_1196, l00010C9C), (pc_1227, l00010CB4))
	r8_1279 = PHI((r8_1190, l00010C9C), (r8_1225, l00010CB4))
	r7_1277 = PHI((r7_1187, l00010C9C), (r7_1224, l00010CB4))
	r6_1275 = PHI((r6_1184, l00010C9C), (r6_1223, l00010CB4))
	r4_1273 = PHI((r4_1124, l00010C9C), (r4_1222, l00010CB4))
	r5_1271 = PHI((r5_1135, l00010C9C), (r5_1221, l00010CB4))
	fp_1269 = PHI((fp_1178, l00010C9C), (fp_1220, l00010CB4))
	ap_1267 = PHI((ap_1175, l00010C9C), (ap_1219, l00010CB4))
	r0_1263 = PHI((r0_1170, l00010C9C), (r0_1216, l00010CB4))
	r3_1257 = PHI((r3_1258, l00010C9C), (r3_1215, l00010CB4))
	r11_1255 = PHI((r11_1166, l00010C9C), (r11_1214, l00010CB4))
	r2_1248 = PHI((r2_1158, l00010C9C), (r2_1217, l00010CB4))
	r10_1244 = PHI((r10_1153, l00010C9C), (r10_1218, l00010CB4))
	sp_1237 = PHI((sp_1128, l00010C9C), (sp_1213, l00010CB4))
	r9_1230 = PHI((r9_1193, l00010C9C), (r9_1226, l00010CB4))
	branch r9_1230 != 0x00000001 l00010D08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010D08:
	branch r9_1230 <= 0x00000000 l00010D34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010D0C:
	sp_1238 = sp_1237 - 0x00000004
	Mem1240[sp_1238:uint32] = 0x00000401
	Mem1242[sp_1238 - 0x00000004:word32] = r9_1230
	Mem1246[sp_1238 - 0x00000008:word32] = r10_1244 + 224
	Mem1250[sp_1238 - 0x0000000C:word32] = r2_1248 + 1515
	call Mem1250[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1267,fp:fp_1269,pc:pc_1282,r0:r0_1263,r1:r1_1284,r10:r10_1244,r11:r11_1255,r2:r2_1248,r3:r3_1257,r4:r4_1273,r5:r5_1271,r6:r6_1275,r7:r7_1277,r8:r8_1279,r9:r9_1230,sp:sp_1238 - 0x0000000C,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_1270,pc:pc_1283,r0:r0_1264,r1:r1_1285,r10:r10_1266,r11:r11_1256,r2:r2_1265,r3:r3_1262,r4:r4_1274,r5:r5_1272,r6:r6_1276,r7:r7_1278,r8:r8_1280,r9:r9_1281,sp:sp_1254
	Mem1288[sp_1254 - 0x00000004:word32] = r0_1264
	Mem1291[sp_1254 - 0x00000008:word32] = r2_1265 + 1515
	Mem1293[sp_1254 - 0x0000000C:word32] = r2_1265
	ap_1294 = Mem1293[r2_1265 + 0x0000C839:word32]
	call ap_1294 + 2 (retsize: 4;)
		uses: ap:ap_1294,fp:fp_1270,pc:pc_1283,r0:r0_1264,r1:r1_1285,r10:r10_1266,r11:r11_1256,r2:r2_1265,r3:r3_1262,r4:r4_1274,r5:r5_1272,r6:r6_1276,r7:r7_1278,r8:r8_1280,r9:r9_1281,sp:sp_1254 - 0x0000000C,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_1305,pc:pc_1312,r0:r0_1301,r1:r1_1313,r10:r10_1303,r11:r11_1299,r2:r2_1302,r3:r3_1300,r4:r4_1307,r5:r5_1306,r6:r6_1308,r7:r7_1309,r8:r8_1310,r9:r9_1311,sp:sp_1298
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010CDE:
	sp_1315 = sp_1237 - 0x00000004
	Mem1317[sp_1315:uint32] = 0x00000401
	Mem1320[sp_1315 - 0x00000004:word32] = r10_1244 + 194
	Mem1323[sp_1315 - 0x00000008:word32] = r2_1248 + 1515
	call Mem1323[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1267,fp:fp_1269,pc:pc_1282,r0:r0_1263,r1:r1_1284,r10:r10_1244,r11:r11_1255,r2:r2_1248,r3:r3_1257,r4:r4_1273,r5:r5_1271,r6:r6_1275,r7:r7_1277,r8:r8_1279,r9:r9_1230,sp:sp_1315 - 0x00000008,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_1334,pc:pc_1341,r0:r0_1330,r1:r1_1342,r10:r10_1332,r11:r11_1328,r2:r2_1331,r3:r3_1329,r4:r4_1336,r5:r5_1335,r6:r6_1337,r7:r7_1338,r8:r8_1339,r9:r9_1340,sp:sp_1327
	Mem1345[sp_1327 - 0x00000004:word32] = r0_1330
	Mem1348[sp_1327 - 0x00000008:word32] = r2_1331 + 1515
	Mem1350[sp_1327 - 0x0000000C:word32] = r2_1331
	ap_1351 = Mem1350[r2_1331 + 0x0000C839:word32]
	call ap_1351 + 2 (retsize: 4;)
		uses: ap:ap_1351,fp:fp_1334,pc:pc_1341,r0:r0_1330,r1:r1_1342,r10:r10_1332,r11:r11_1328,r2:r2_1331,r3:r3_1329,r4:r4_1336,r5:r5_1335,r6:r6_1337,r7:r7_1338,r8:r8_1339,r9:r9_1340,sp:sp_1327 - 0x0000000C,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_1362,pc:pc_1369,r0:r0_1358,r1:r1_1370,r10:r10_1360,r11:r11_1356,r2:r2_1359,r3:r3_1357,r4:r4_1364,r5:r5_1363,r6:r6_1365,r7:r7_1366,r8:r8_1367,r9:r9_1368,sp:sp_1355
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010D34:
	r1_1417 = PHI((r1_1370, l00010CDE), (r1_1284, l00010D08), (r1_1313, l00010D0C))
	pc_1415 = PHI((pc_1369, l00010CDE), (pc_1282, l00010D08), (pc_1312, l00010D0C))
	r9_1413 = PHI((r9_1368, l00010CDE), (r9_1230, l00010D08), (r9_1311, l00010D0C))
	r4_1408 = PHI((r4_1364, l00010CDE), (r4_1273, l00010D08), (r4_1307, l00010D0C))
	r5_1406 = PHI((r5_1363, l00010CDE), (r5_1271, l00010D08), (r5_1306, l00010D0C))
	fp_1404 = PHI((fp_1362, l00010CDE), (fp_1269, l00010D08), (fp_1305, l00010D0C))
	r0_1399 = PHI((r0_1358, l00010CDE), (r0_1263, l00010D08), (r0_1301, l00010D0C))
	r3_1397 = PHI((r3_1357, l00010CDE), (r3_1257, l00010D08), (r3_1300, l00010D0C))
	r11_1395 = PHI((r11_1356, l00010CDE), (r11_1255, l00010D08), (r11_1299, l00010D0C))
	r2_1388 = PHI((r2_1359, l00010CDE), (r2_1248, l00010D08), (r2_1302, l00010D0C))
	r10_1384 = PHI((r10_1360, l00010CDE), (r10_1244, l00010D08), (r10_1303, l00010D0C))
	sp_1379 = PHI((sp_1355, l00010CDE), (sp_1237, l00010D08), (sp_1298, l00010D0C))
	r6_1375 = PHI((r6_1365, l00010CDE), (r6_1275, l00010D08), (r6_1308, l00010D0C))
	r8_1373 = PHI((r8_1367, l00010CDE), (r8_1279, l00010D08), (r8_1310, l00010D0C))
	r7_1372 = PHI((r7_1366, l00010CDE), (r7_1277, l00010D08), (r7_1309, l00010D0C))
	ap_1376 = r7_1372 + r8_1373 + r6_1375
	branch ap_1376 != 0x00000000 l00010D63
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010D3D:
	sp_1380 = sp_1379 - 0x00000004
	Mem1382[sp_1380:uint32] = 0x00000401
	Mem1386[sp_1380 - 0x00000004:word32] = r10_1384 + 257
	Mem1390[sp_1380 - 0x00000008:word32] = r2_1388 + 1515
	call Mem1390[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1376,fp:fp_1404,pc:pc_1415,r0:r0_1399,r1:r1_1417,r10:r10_1384,r11:r11_1395,r2:r2_1388,r3:r3_1397,r4:r4_1408,r5:r5_1406,r6:r6_1375,r7:r7_1372,r8:r8_1373,r9:r9_1413,sp:sp_1380 - 0x00000008,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_1405,pc:pc_1416,r0:r0_1400,r1:r1_1418,r10:r10_1402,r11:r11_1396,r2:r2_1401,r3:r3_1398,r4:r4_1409,r5:r5_1407,r6:r6_1410,r7:r7_1411,r8:r8_1412,r9:r9_1414,sp:sp_1394
	Mem1421[sp_1394 - 0x00000004:word32] = r0_1400
	Mem1424[sp_1394 - 0x00000008:word32] = r2_1401 + 1515
	Mem1426[sp_1394 - 0x0000000C:word32] = r2_1401
	ap_1427 = Mem1426[r2_1401 + 0x0000C839:word32]
	call ap_1427 + 2 (retsize: 4;)
		uses: ap:ap_1427,fp:fp_1405,pc:pc_1416,r0:r0_1400,r1:r1_1418,r10:r10_1402,r11:r11_1396,r2:r2_1401,r3:r3_1398,r4:r4_1409,r5:r5_1407,r6:r6_1410,r7:r7_1411,r8:r8_1412,r9:r9_1414,sp:sp_1394 - 0x0000000C,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: fp:fp_1438,pc:pc_1445,r0:r0_1434,r1:r1_1446,r11:r11_1432,r3:r3_1433,r5:r5_1439,r6:r6_1441,r7:r7_1442,r8:r8_1443
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B9D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B8C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010B83:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010D63:
	r11_1526 = PHI((r11_717, l00010B83), (r11_717, l00010B8C), (r11_717, l00010B9D), (r11_1395, l00010D34), (r11_1432, l00010D3D))
	r1_1474 = PHI((r1_623, l00010B83), (r1_623, l00010B8C), (r1_623, l00010B9D), (r1_1417, l00010D34), (r1_1446, l00010D3D))
	r5_1473 = PHI((r5_701, l00010B83), (r5_701, l00010B8C), (r5_701, l00010B9D), (r5_1406, l00010D34), (r5_1439, l00010D3D))
	r8_1472 = PHI((r8_661, l00010B83), (r8_661, l00010B8C), (r8_661, l00010B9D), (r8_1373, l00010D34), (r8_1443, l00010D3D))
	r7_1471 = PHI((r7_651, l00010B83), (r7_651, l00010B8C), (r7_651, l00010B9D), (r7_1372, l00010D34), (r7_1442, l00010D3D))
	pc_1470 = PHI((pc_774, l00010B83), (pc_774, l00010B8C), (pc_774, l00010B9D), (pc_1415, l00010D34), (pc_1445, l00010D3D))
	r6_1469 = PHI((r6_655, l00010B83), (r6_655, l00010B8C), (r6_655, l00010B9D), (r6_1375, l00010D34), (r6_1441, l00010D3D))
	fp_1450 = PHI((fp_620, l00010B83), (fp_620, l00010B8C), (fp_620, l00010B9D), (fp_1404, l00010D34), (fp_1438, l00010D3D))
	r0_1449 = PHI((r0_621, l00010B83), (r0_621, l00010B8C), (r0_621, l00010B9D), (r0_1399, l00010D34), (r0_1434, l00010D3D))
	r3_1448 = PHI((r3_724, l00010B83), (r3_724, l00010B8C), (r3_724, l00010B9D), (r3_1397, l00010D34), (r3_1433, l00010D3D))
	r0_1453 = fn0001872A(r0_1449, r3_1448, fp_1450, out r2_1456, out r3_1457, out r4_1455, out ap_1451, out fp_1452, out sp_1454)
	Mem1463[sp_1454 - 0x00000004:word32] = 0x00000005
	Mem1465[sp_1454 - 0x00000008:word32] = 0x00000000
	r0_1478 = fn0000C6FA(r0_1453, r1_1474, r2_1456, r3_1457, r4_1455, r5_1473, r6_1469, r7_1471, r8_1472, ap_1451, fp_1452, pc_1470, out r1_1479, out r2_1481, out r3_1482, out r4_1483, out r5_1484, out r6_1485, out r7_1486, out r8_1487, out r9_1488, out r10_1480, out ap_1475, out fp_1476, out sp_1489, out pc_1477)
	branch Mem1465[r2_1481 + 0x0000C5EB:word32] == 0x00000000 l00010D8A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010D7D:
	ap_1498 = fn0000D406(ap_1475, fp_1476, out fp_1499, out sp_1500)
	Mem1506[r2_1481 + 0x0000C5EB:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010D8A:
	fp_1537 = PHI((fp_1476, l00010D63), (fp_1499, l00010D7D))
	ap_1535 = PHI((ap_1475, l00010D63), (ap_1498, l00010D7D))
	sp_1517 = PHI((sp_1489, l00010D63), (sp_1500, l00010D7D))
	Mem1512 = PHI((Mem1465, l00010D63), (Mem1506, l00010D7D))
	branch Mem1512[r2_1481 + 0x0000C815:word32] == 0x00000000 l00010DA5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010D92:
	sp_1518 = sp_1517 - 0x00000004
	Mem1520[sp_1518:word32] = Mem1512[r2_1481 + 0x0000C815:word32]
	call Mem1520[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1535,fp:fp_1537,pc:pc_1477,r0:r0_1478,r1:r1_1479,r10:r10_1480,r11:r11_1526,r2:r2_1481,r3:r3_1482,r4:r4_1483,r5:r5_1484,r6:r6_1485,r7:r7_1486,r8:r8_1487,r9:r9_1488,sp:sp_1518,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_1536,fp:fp_1538,pc:pc_1552,r0:r0_1531,r1:r1_1554,r10:r10_1534,r11:r11_1527,r2:r2_1532,r3:r3_1529,r4:r4_1542,r5:r5_1540,r6:r6_1544,r7:r7_1546,r8:r8_1548,r9:r9_1550,sp:sp_1524
	Mem1557[r2_1532 + 0x0000C815:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010DA5:
	r1_1603 = PHI((r1_1479, l00010D8A), (r1_1554, l00010D92))
	pc_1601 = PHI((pc_1477, l00010D8A), (pc_1552, l00010D92))
	r9_1599 = PHI((r9_1488, l00010D8A), (r9_1550, l00010D92))
	r8_1597 = PHI((r8_1487, l00010D8A), (r8_1548, l00010D92))
	r7_1595 = PHI((r7_1486, l00010D8A), (r7_1546, l00010D92))
	r6_1593 = PHI((r6_1485, l00010D8A), (r6_1544, l00010D92))
	r4_1591 = PHI((r4_1483, l00010D8A), (r4_1542, l00010D92))
	r5_1589 = PHI((r5_1484, l00010D8A), (r5_1540, l00010D92))
	fp_1587 = PHI((fp_1537, l00010D8A), (fp_1538, l00010D92))
	ap_1585 = PHI((ap_1535, l00010D8A), (ap_1536, l00010D92))
	r10_1583 = PHI((r10_1480, l00010D8A), (r10_1534, l00010D92))
	r0_1580 = PHI((r0_1478, l00010D8A), (r0_1531, l00010D92))
	r3_1578 = PHI((r3_1482, l00010D8A), (r3_1529, l00010D92))
	r11_1576 = PHI((r11_1526, l00010D8A), (r11_1527, l00010D92))
	sp_1568 = PHI((sp_1517, l00010D8A), (sp_1524, l00010D92))
	Mem1563 = PHI((Mem1512, l00010D8A), (Mem1557, l00010D92))
	r2_1562 = PHI((r2_1481, l00010D8A), (r2_1532, l00010D92))
	branch Mem1563[r2_1562 + 0x0000C6F1:word32] == 0x00000000 l00010DBA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010DAD:
	sp_1569 = sp_1568 - 0x00000004
	Mem1571[sp_1569:word32] = Mem1563[r2_1562 + 0x0000C6F1:word32]
	call Mem1571[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1585,fp:fp_1587,pc:pc_1601,r0:r0_1580,r1:r1_1603,r10:r10_1583,r11:r11_1576,r2:r2_1562,r3:r3_1578,r4:r4_1591,r5:r5_1589,r6:r6_1593,r7:r7_1595,r8:r8_1597,r9:r9_1599,sp:sp_1569,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_1586,fp:fp_1588,pc:pc_1602,r0:r0_1581,r1:r1_1604,r10:r10_1584,r11:r11_1577,r2:r2_1582,r3:r3_1579,r4:r4_1592,r5:r5_1590,r6:r6_1594,r7:r7_1596,r8:r8_1598,r9:r9_1600,sp:sp_1575
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010DBA:
	r1_1647 = PHI((r1_1603, l00010DA5), (r1_1604, l00010DAD))
	pc_1645 = PHI((pc_1601, l00010DA5), (pc_1602, l00010DAD))
	r9_1643 = PHI((r9_1599, l00010DA5), (r9_1600, l00010DAD))
	r8_1641 = PHI((r8_1597, l00010DA5), (r8_1598, l00010DAD))
	r7_1639 = PHI((r7_1595, l00010DA5), (r7_1596, l00010DAD))
	r6_1637 = PHI((r6_1593, l00010DA5), (r6_1594, l00010DAD))
	r4_1635 = PHI((r4_1591, l00010DA5), (r4_1592, l00010DAD))
	r5_1633 = PHI((r5_1589, l00010DA5), (r5_1590, l00010DAD))
	fp_1631 = PHI((fp_1587, l00010DA5), (fp_1588, l00010DAD))
	ap_1629 = PHI((ap_1585, l00010DA5), (ap_1586, l00010DAD))
	r10_1627 = PHI((r10_1583, l00010DA5), (r10_1584, l00010DAD))
	r0_1624 = PHI((r0_1580, l00010DA5), (r0_1581, l00010DAD))
	r3_1622 = PHI((r3_1578, l00010DA5), (r3_1579, l00010DAD))
	r11_1620 = PHI((r11_1576, l00010DA5), (r11_1577, l00010DAD))
	sp_1612 = PHI((sp_1568, l00010DA5), (sp_1575, l00010DAD))
	Mem1607 = PHI((Mem1563, l00010DA5), (Mem1571, l00010DAD))
	r2_1606 = PHI((r2_1562, l00010DA5), (r2_1582, l00010DAD))
	branch Mem1607[r2_1606 + 0x0000C5F3:word32] == 0x00000000 l00010DCF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010DC2:
	sp_1613 = sp_1612 - 0x00000004
	Mem1615[sp_1613:word32] = Mem1607[r2_1606 + 0x0000C5F3:word32]
	call Mem1615[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1629,fp:fp_1631,pc:pc_1645,r0:r0_1624,r1:r1_1647,r10:r10_1627,r11:r11_1620,r2:r2_1606,r3:r3_1622,r4:r4_1635,r5:r5_1633,r6:r6_1637,r7:r7_1639,r8:r8_1641,r9:r9_1643,sp:sp_1613,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: r2:r2_1626
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010DCF:
	r2_1651 = PHI((r2_1606, l00010DBA), (r2_1626, l00010DC2))
	Mem1652[r2_1651 + 0x0000C6F1:word32] = 0x00000000
	Mem1654[r2_1651 + 0x0000C5F3:word32] = 0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000109EF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000109F0:
	r11_174 = Mem0[r2 + 0x0000C613:word32]
	branch Mem0[r2 + 64:word32] != 0x00000000 l00010A32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000109FC:
	branch r3 == 0x00000009 l00010A32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A01:
	branch r3 == 0x0000004C l00010A32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A0A:
	branch Mem0[r2 + 72:word32] == 0x00000000 l00010A13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A0F:
	branch Mem0[r2:word32] == 0x00000000 l00010A32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A13:
	ap_204 = r7 + r8 + r6 + r4
	branch ap_204 <= 0x00000000 l00010A32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A1F:
	Mem210[sp - 0x00000004:word32] = 0x00000000
	Mem212[sp - 0x00000008:word32] = 0x00000001
	Mem217[sp - 0x0000000C:word32] = r5 + 9
	Mem220[sp - 0x00000010:word32] = r2
	ap_221 = Mem220[r2 + 0x0000C839:word32]
	call ap_221 + 2 (retsize: 4;)
		uses: ap:ap_221,fp:fp,pc:pc,r0:r0,r1:r1,r10:r10,r11:r11_174,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9,sp:sp - 0x00000010,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_237,fp:fp_240,pc:pc_251,r2:r2_233,r3:r3_229,r4:r4_242,r6:r6_243,r7:r7_244,r9:r9_248,sp:sp_225
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A32:
	pc_345 = PHI((pc, l000109FC), (pc, l00010A01), (pc, l00010A0F), (pc, l00010A13), (pc_251, l00010A1F), (pc, l000109F0))
	r9_270 = PHI((r9, l000109FC), (r9, l00010A01), (r9, l00010A0F), (r9, l00010A13), (r9_248, l00010A1F), (r9, l000109F0))
	r6_269 = PHI((r6, l000109FC), (r6, l00010A01), (r6, l00010A0F), (r6, l00010A13), (r6_243, l00010A1F), (r6, l000109F0))
	r4_268 = PHI((r4, l000109FC), (r4, l00010A01), (r4, l00010A0F), (r4, l00010A13), (r4_242, l00010A1F), (r4, l000109F0))
	r7_267 = PHI((r7, l000109FC), (r7, l00010A01), (r7, l00010A0F), (r7, l00010A13), (r7_244, l00010A1F), (r7, l000109F0))
	r3_266 = PHI((r3, l000109FC), (r3, l00010A01), (r3, l00010A0F), (r3, l00010A13), (r3_229, l00010A1F), (r3, l000109F0))
	fp_262 = PHI((fp, l000109FC), (fp, l00010A01), (fp, l00010A0F), (fp, l00010A13), (fp_240, l00010A1F), (fp, l000109F0))
	ap_260 = PHI((ap, l000109FC), (ap, l00010A01), (ap, l00010A0F), (ap_204, l00010A13), (ap_237, l00010A1F), (ap, l000109F0))
	r2_259 = PHI((r2, l000109FC), (r2, l00010A01), (r2, l00010A0F), (r2, l00010A13), (r2_233, l00010A1F), (r2, l000109F0))
	sp_253 = PHI((sp, l000109FC), (sp, l00010A01), (sp, l00010A0F), (sp, l00010A13), (sp_225, l00010A1F), (sp, l000109F0))
	Mem255[sp_253 - 0x00000004:word32] = 0x00000000
	r0_273 = fn00010E6A(r1, r2_259, r3_266, r4_268, r6_269, r7_267, r9_270, ap_260, fp_262, out r1_1845, out r2_276, out r3_1846, out r4_1847, out r5_1848, out r6_280, out r7_1849, out r8_1850, out r9_1851, out r11_1852, out ap_271, out fp_1853, out sp_284)
	branch r0_273 != 0x00000001 l00010A48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A48:
	branch r0_273 != 0x0000004C l00010A58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A58:
	branch r0_273 != 0x00000009 l00010A64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A64:
	branch r0_273 == 0x00000000 l00010A6C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A6C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A68:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A5D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A51:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A41:
	r6_311 = r6_280 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A6E:
	r6_338 = PHI((r6_311, l00010A41), (r6_280, l00010A51), (r6_280, l00010A5D), (r6_280, l00010A68), (r6_280, l00010A6C))
	branch r0_273 == 0x0000004C l00010A7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A77:
	branch r0_273 <= Mem255[sp_284:word32] l00010A7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A7C:
	Mem323[sp_284:word32] = r0_273
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010A7F:
	Mem331 = PHI((Mem255, l00010A6E), (Mem255, l00010A77), (Mem323, l00010A7C))
	Mem333[sp_284 - 0x00000004:word32] = Mem331[r2_276 + 0x0000C60F:word32]
	fn0000C0CE(r0_273, r6_338, ap_271, pc_345)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000108D2_entry:
	def fp
	def r0
	def r2
	def r10
	def ap
	def fp
	def r5
	def r4
	def r6
	def r7
	def r8
	def r9
	def pc
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000108D2:
	call Mem10[0x000192B4:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc,r0:r0,r1:r1,r10:r10,r11:0x00000000,r2:r2,r3:0x00000000,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9,sp:fp - 0x0000000C,Stack +0004:0x00002004,Stack +0008:0x00000000
		defs: ap:ap_24,fp:fp_26,pc:pc_1746,r0:r0_18,r1:r1_1747,r10:r10_22,r11:r11_15,r2:r2_20,r3:r3_16,r4:r4_30,r5:r5_28,r6:r6_32,r7:r7_34,r8:r8_36,r9:r9_38,sp:sp_14
	Mem41[r2_20 + 0x0000C5F3:word32] = r0_18
	Mem44[sp_14 - 0x00000004:uint32] = 0x00008001
	call Mem44[0x000192B4:word32] + 2 (retsize: 4;)
		uses: ap:ap_24,fp:fp_26,pc:pc_1746,r0:r0_18,r1:r1_1747,r10:r10_22,r11:r11_15,r2:r2_20,r3:r3_16,r4:r4_30,r5:r5_28,r6:r6_32,r7:r7_34,r8:r8_36,r9:r9_38,sp:sp_14 - 0x00000004,Stack +FFFFFFF8:0x00002004,Stack +FFFFFFFC:0x00000000
		defs: ap:ap_54,fp:fp_55,r0:r0_51,r10:r10_53,r11:r11_49,r2:r2_52,r3:r3_50,r4:r4_57,r5:r5_56,r6:r6_58,r7:r7_59,r8:r8_60,r9:r9_61,sp:sp_48
	Mem64[r2_52 + 0x0000C6F1:word32] = r0_51
	Mem66[r2_52 + 0x0000C6F5:word32] = r0_51
	branch Mem66[r2_52 + 0x0000C5F3:word32] == 0x00000000 l0001092D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010925:
	branch Mem66[r2_52 + 0x0000C6F1:word32] != 0x00000000 l00010955
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010955:
	Mem76[r2_52 + 0x0000C62B:word32] = Mem66[r2_52 + 0x0000C5F3:word32] + 0x00002000
	Mem78[r2_52 + 0x0000C62F:byte] = 0x50
	Mem80[r2_52 + 0x0000C639:byte] = 0x50
	Mem82[r2_52 + 0x0000C634:byte] = 0x50
	Mem84[r2_52 + 0x0000C630:byte] = 0x4B
	Mem86[r2_52 + 0x0000C63A:byte] = 0x4B
	Mem88[r2_52 + 0x0000C635:byte] = 0x4B
	Mem90[sp_48 - 0x00000004:word32] = r5_56
	Mem94[sp_48 - 0x00000008:word32] = r2_52 + 0x0000C631
	r4_95 = Mem94[0x000192BC:word32]
	call r4_95 + 2 (retsize: 4;)
		uses: ap:r2_52 + 0x0000C62F,fp:fp_55,pc:pc,r0:r0_51,r1:r1,r10:r10_53,r11:r11_49,r2:r2_52,r3:r3_50,r4:r4_95,r5:r5_56,r6:r6_58,r7:r7_59,r8:r8_60,r9:r9_61,sp:sp_48 - 0x00000008,Stack +FFFFFFF8:0x00002004,Stack +FFFFFFFC:0x00000000
		defs: fp:fp_106,pc:pc_1750,r0:r0_102,r1:r1_1751,r10:r10_104,r11:r11_100,r2:r2_103,r3:r3_101,r4:r4_108,r5:r5_107,r6:r6_109,r7:r7_110,r8:r8_111,r9:r9_112,sp:sp_99
	Mem116[sp_99 - 0x00000004:word32] = r5_107 + 3
	Mem120[sp_99 - 0x00000008:word32] = r2_103 + 0x0000C636
	call r4_108 + 2 (retsize: 4;)
		uses: ap:r2_103 + 0x0000C634,fp:fp_106,pc:pc_1750,r0:r0_102,r1:r1_1751,r10:r10_104,r11:r11_100,r2:r2_103,r3:r3_101,r4:r4_108,r5:r5_107,r6:r6_109,r7:r7_110,r8:r8_111,r9:r9_112,sp:sp_99 - 0x00000008,Stack +FFFFFFF8:0x00002004,Stack +FFFFFFFC:0x00000000
		defs: fp:fp_129,pc:pc_1752,r0:r0_125,r1:r1_1753,r10:r10_127,r11:r11_123,r2:r2_126,r3:r3_124,r4:r4_131,r5:r5_130,r6:r6_132,r7:r7_133,r8:r8_134,r9:r9_135,sp:sp_122
	Mem139[sp_122 - 0x00000004:word32] = r5_130 + 6
	Mem143[sp_122 - 0x00000008:word32] = r2_126 + 0x0000C63B
	call r4_131 + 2 (retsize: 4;)
		uses: ap:r2_126 + 0x0000C639,fp:fp_129,pc:pc_1752,r0:r0_125,r1:r1_1753,r10:r10_127,r11:r11_123,r2:r2_126,r3:r3_124,r4:r4_131,r5:r5_130,r6:r6_132,r7:r7_133,r8:r8_134,r9:r9_135,sp:sp_122 - 0x00000008,Stack +FFFFFFF8:0x00002004,Stack +FFFFFFFC:0x00000000
		defs: ap:ap_151,r0:r0_148,r2:r2_149,sp:sp_145
	Mem166[sp_145 - 0x00000004:word32] = Mem143[r2_149 + 0x0000C60F:word32]
	fn0000C0CE(r0_148, 0x00000000, ap_151, pc)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001092D:
	Mem1667[sp_48 - 0x00000004:uint32] = 0x00000401
	Mem1670[sp_48 - 0x00000008:word32] = r10_53
	Mem1674[sp_48 - 0x0000000C:word32] = r2_52 + 1515
	call Mem1674[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_54,fp:fp_55,pc:pc,r0:r0_51,r1:r1,r10:r10_53,r11:r11_49,r2:r2_52,r3:r3_50,r4:r4_57,r5:r5_56,r6:r6_58,r7:r7_59,r8:r8_60,r9:r9_61,sp:sp_48 - 0x0000000C,Stack +FFFFFFF8:0x00002004,Stack +FFFFFFFC:0x00000000
		defs: fp:fp_1690,pc:pc_1704,r0:r0_1684,r1:r1_1706,r10:r10_1686,r11:r11_1680,r2:r2_1685,r3:r3_1682,r4:r4_1694,r5:r5_1692,r6:r6_1696,r7:r7_1698,r8:r8_1700,r9:r9_1702,sp:sp_1678
	Mem1709[sp_1678 - 0x00000004:word32] = r0_1684
	Mem1712[sp_1678 - 0x00000008:word32] = r2_1685 + 1515
	Mem1714[sp_1678 - 0x0000000C:word32] = r2_1685
	ap_1715 = Mem1714[r2_1685 + 0x0000C839:word32]
	call ap_1715 + 2 (retsize: 4;)
		uses: ap:ap_1715,fp:fp_1690,pc:pc_1704,r0:r0_1684,r1:r1_1706,r10:r10_1686,r11:r11_1680,r2:r2_1685,r3:r3_1682,r4:r4_1694,r5:r5_1692,r6:r6_1696,r7:r7_1698,r8:r8_1700,r9:r9_1702,sp:sp_1678 - 0x0000000C,Stack +FFFFFFF8:0x00002004,Stack +FFFFFFFC:0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000108D2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00010E6A(word32 r1, word32 r2, word32 r3, word32 r4, word32 r6, word32 r7, word32 r9, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r6:[0..31] r7:[0..31] r9:[0..31]
// LiveOut: ap fp r0 r1 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
l00011771:
	Mem1524[sp - 0x00000004:uint32] = 0x00000201
	Mem1527[sp - 0x00000008:word32] = Mem1524[r2 + 0x0000C613:word32]
	Mem1530[sp - 0x0000000C:word32] = r7 + 85
	Mem1533[sp - 0x00000010:word32] = r2 + 1515
	call Mem1533[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r1:r1,r11:r11,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9,sp:sp - 0x00000010,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1543,fp:fp_1544,r0:r0_1541,r1:r1_1542,r11:r11_1550,r2:r2_1540,r3:r3_1545,r4:r4_1547,r5:r5_1539,r6:r6_1548,r7:r7_1546,r8:r8_1538,r9:r9_1549,sp:sp_1537
	Mem1553[sp_1537 - 0x00000004:word32] = r0_1541
	Mem1556[sp_1537 - 0x00000008:word32] = r2_1540 + 1515
	Mem1558[sp_1537 - 0x0000000C:word32] = r2_1540
	r0_1559 = Mem1558[r2_1540 + 0x0000C839:word32]
	call r0_1559 + 2 (retsize: 4;)
		uses: ap:ap_1543,fp:fp_1544,r0:r0_1559,r1:r1_1542,r11:r11_1550,r2:r2_1540,r3:r3_1545,r4:r4_1547,r5:r5_1539,r6:r6_1548,r7:r7_1546,r8:r8_1538,r9:r9_1549,sp:sp_1537 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: fp:fp_1570,r1:r1_1568,r11:r11_1576,r2:r2_1566,r3:r3_1571,r4:r4_1573,r5:r5_1565,r6:r6_1574,r7:r7_1572,r8:r8_1564,r9:r9_1575
	branch r9_1575 > 0x00000000 l000117A3
	def dwLoc10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000117A0:
	r9_1581 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010FD0:
	fp_1694 = Mem0[fp + 0x0000000C:word32]
	ap_1695 = Mem0[fp + 0x00000008:word32]
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_1695
	fpOut = fp_1694
	spOut = fp - 0x00000004
	return 0x00000009
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010FD4:
	branch Mem0[r2 + 0x0000C5EB:word32] != 0x00000000 l00010FF0
	def r0
	def r5
	def sp
	def r8
	def r11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010FDC:
	r0_346 = fn0000D39E(r0, r1, r2, r3, r4, r5, r6, ap, fp, out r1_348, out r2_349, out r3_350, out r4_351, out r5_352, out r6_353, out ap_344, out fp_345, out sp_347)
	Mem359[r2_349 + 0x0000C5EB:word32] = r0_346
	branch r0_346 != 0x00000000 l00010FF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010FF0:
	r6_418 = PHI((r6, l00010FD4), (r6_353, l00010FDC))
	r4_416 = PHI((r4, l00010FD4), (r4_351, l00010FDC))
	r3_413 = PHI((r3, l00010FD4), (r3_350, l00010FDC))
	fp_411 = PHI((fp, l00010FD4), (fp_345, l00010FDC))
	ap_409 = PHI((ap, l00010FD4), (ap_344, l00010FDC))
	r1_407 = PHI((r1, l00010FD4), (r1_348, l00010FDC))
	r0_405 = PHI((r0, l00010FD4), (r0_346, l00010FDC))
	r5_402 = PHI((r5, l00010FD4), (r5_352, l00010FDC))
	sp_381 = PHI((sp, l00010FD4), (sp_347, l00010FDC))
	r2_365 = PHI((r2, l00010FD4), (r2_349, l00010FDC))
	Mem366[r2_365 + 0x0000C61F:word32] = 0x00000000
	Mem368[r2_365 + 0x0000C5F7:word32] = Mem366[r2_365 + 0x0000C5F3:word32]
	branch Mem368[r2_365:word32] != 0x00000000 l00011037
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011005:
	branch Mem368[r2_365 + 64:word32] != 0x00000000 l00011037
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001100A:
	branch Mem368[r2_365 + 72:word32] != 0x00000000 l00011037
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001100F:
	sp_383 = sp_381 - 0x00000004
	Mem384[sp_383:word32] = 0x00000000
	Mem387[sp_383 - 0x00000004:word32] = Mem384[r2_365 + 0x0000C613:word32]
	Mem391[sp_383 - 0x00000008:word32] = r7 + 43
	Mem394[sp_383 - 0x0000000C:word32] = r2_365 + 1515
	call Mem394[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_409,fp:fp_411,r0:r0_405,r1:r1_407,r11:r11,r2:r2_365,r3:r3_413,r4:r4_416,r5:r5_402,r6:r6_418,r7:r7,r8:r8,r9:r9,sp:sp_383 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_410,fp:fp_412,r0:r0_406,r1:r1_408,r11:r11_1703,r2:r2_404,r3:r3_414,r4:r4_417,r5:r5_403,r6:r6_419,r7:r7_415,r8:r8_401,r9:r9_421,sp:sp_398
	Mem424[sp_398 - 0x00000004:word32] = r0_406
	Mem427[sp_398 - 0x00000008:word32] = r2_404 + 1515
	Mem429[sp_398 - 0x0000000C:word32] = r2_404
	r0_430 = Mem429[r2_404 + 0x0000C839:word32]
	call r0_430 + 2 (retsize: 4;)
		uses: ap:ap_410,fp:fp_412,r0:r0_430,r1:r1_408,r11:r11_1703,r2:r2_404,r3:r3_414,r4:r4_417,r5:r5_403,r6:r6_419,r7:r7_415,r8:r8_401,r9:r9_421,sp:sp_398 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_440,fp:fp_441,r0:r0_438,r1:r1_439,r2:r2_437,r3:r3_442,r4:r4_444,r5:r5_436,r6:r6_445,r7:r7_443,r8:r8_435,r9:r9_446,sp:sp_434
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011037:
	r4_1613 = PHI((r4_416, l00010FF0), (r4_416, l00011005), (r4_416, l0001100A), (r4_444, l0001100F))
	r5_775 = PHI((r5_402, l00010FF0), (r5_402, l00011005), (r5_402, l0001100A), (r5_436, l0001100F))
	r1_469 = PHI((r1_407, l00010FF0), (r1_407, l00011005), (r1_407, l0001100A), (r1_439, l0001100F))
	r7_468 = PHI((r7, l00010FF0), (r7, l00011005), (r7, l0001100A), (r7_443, l0001100F))
	r6_467 = PHI((r6_418, l00010FF0), (r6_418, l00011005), (r6_418, l0001100A), (r6_445, l0001100F))
	r9_466 = PHI((r9, l00010FF0), (r9, l00011005), (r9, l0001100A), (r9_446, l0001100F))
	ap_465 = PHI((ap_409, l00010FF0), (ap_409, l00011005), (ap_409, l0001100A), (ap_440, l0001100F))
	fp_464 = PHI((fp_411, l00010FF0), (fp_411, l00011005), (fp_411, l0001100A), (fp_441, l0001100F))
	r3_463 = PHI((r3_413, l00010FF0), (r3_413, l00011005), (r3_413, l0001100A), (r3_442, l0001100F))
	r8_462 = PHI((r8, l00010FF0), (r8, l00011005), (r8, l0001100A), (r8_435, l0001100F))
	r0_461 = PHI((r0_405, l00010FF0), (r0_405, l00011005), (r0_405, l0001100A), (r0_438, l0001100F))
	sp_454 = PHI((sp_381, l00010FF0), (sp_381, l00011005), (sp_381, l0001100A), (sp_434, l0001100F))
	Mem449 = PHI((Mem368, l00010FF0), (Mem368, l00011005), (Mem368, l0001100A), (Mem429, l0001100F))
	r2_448 = PHI((r2_365, l00010FF0), (r2_365, l00011005), (r2_365, l0001100A), (r2_437, l0001100F))
	branch Mem449[r2_448:word32] == 0x00000000 l00011060
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001103B:
	Mem457[sp_454 - 0x00000004:word32] = Mem449[r2_448 + 0x0000C61B:word32]
	r0_472 = fn000117AA(r0_461, r1_469, r2_448, r3_463, r6_467, r7_468, r8_462, r9_466, ap_465, fp_464, out r1_482, out r2_473, out r3_474, out r4_475, out r5_476, out r6_477, out r7_478, out r8_479, out ap_470, out fp_471, out sp_481)
	r9_487 = r0_472
	branch r0_472 == 0x00000000 l0001104E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001104E:
	r0_497 = fn00012A2A(r0_472, r2_473, r3_474, r4_475, r5_476, r6_477, r7_478, r11, ap_470, fp_471, out r2_499, out r3_500, out r4_501, out r5_502, out r6_503, out r7_504, out r8_505, out r11_498, out ap_495, out fp_496, out sp_506)
	r9_511 = r0_497
	branch r0_497 <= 0x00000001 l00011060
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011060:
	r4_1612 = PHI((r4_1613, l00011037), (r4_501, l0001104E))
	r11_815 = PHI((r11, l00011037), (r11_498, l0001104E))
	r0_782 = PHI((r0_461, l00011037), (r0_497, l0001104E))
	r5_774 = PHI((r5_775, l00011037), (r5_502, l0001104E))
	r3_705 = PHI((r3_463, l00011037), (r3_500, l0001104E))
	r1_556 = PHI((r1_469, l00011037), (r1_482, l0001104E))
	r7_554 = PHI((r7_468, l00011037), (r7_504, l0001104E))
	r6_552 = PHI((r6_467, l00011037), (r6_503, l0001104E))
	r9_550 = PHI((r9_466, l00011037), (r9_511, l0001104E))
	ap_548 = PHI((ap_465, l00011037), (ap_495, l0001104E))
	fp_546 = PHI((fp_464, l00011037), (fp_496, l0001104E))
	r8_544 = PHI((r8_462, l00011037), (r8_505, l0001104E))
	sp_534 = PHI((sp_454, l00011037), (sp_506, l0001104E))
	Mem516 = PHI((Mem449, l00011037), (Mem457, l0001104E))
	r2_515 = PHI((r2_448, l00011037), (r2_499, l0001104E))
	branch Mem516[r2_515:word32] == 0x00000000 l00011067
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011067:
	r0_521 = Mem516[r2_515 + 0x0000C61B:word32]
	branch r0_521 >= 0x000101D0 l0001107C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001107C:
	r3_525 = 0x000101D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011077:
	r3_529 = r0_521
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011083:
	r3_536 = PHI((r3_529, l00011077), (r3_525, l0001107C))
	Mem537[sp_534 - 0x00000004:word32] = r3_536
	r0_559 = fn000117AA(r0_521, r1_556, r2_515, r3_536, r6_552, r7_554, r8_544, r9_550, ap_548, fp_546, out r1_569, out r2_560, out r3_561, out r4_562, out r5_563, out r6_564, out r7_565, out r8_566, out ap_557, out fp_558, out sp_568)
	r9_574 = r0_559
	branch r0_559 != 0x00000000 l000110EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001108F:
	r4_579 = 0x00000000
	branch Mem537[r2_560 + 0x0000C692:word16] == 0x0000 l000110E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011099:
	branch Mem537[r2_560 + 92:word32] > 0x00000000 l000110AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001109E:
	branch Mem537[r2_560 + 92:word32] != 0x00000000 l000110E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000110A0:
	branch Mem537[r2_560 + 72:word32] != 0x00000000 l000110E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000110A5:
	branch Mem537[r2_560 + 64:word32] != 0x00000000 l000110E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000110AA:
	Mem598[sp_568 - 0x00000004:word32] = 0x00000001
	Mem602[sp_568 - 0x00000008:uint32] = (uint32) Mem598[r2_560 + 0x0000C692:word16]
	r0_610 = fn0000DC76(ap_557, fp_558, out r11_611, out ap_608, out fp_609, out sp_612)
	branch r0_610 == 0x00000000 l000110E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000110BE:
	Mem623[sp_612 - 0x00000004:uint32] = 0x00000401
	Mem627[sp_612 - 0x00000008:word32] = r6_564 + 1864
	Mem630[sp_612 - 0x0000000C:word32] = r2_560 + 1515
	call Mem630[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_608,fp:fp_609,r0:r0_610,r1:r1_569,r11:r11_611,r2:r2_560,r3:r3_561,r4:0x00000000,r5:r5_563,r6:r6_564,r7:r7_565,r8:r8_566,r9:r0_559,sp:sp_612 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_643,fp:fp_644,r0:r0_640,r1:r1_642,r11:r11_654,r2:r2_639,r3:r3_646,r4:r4_650,r5:r5_638,r6:r6_651,r7:r7_648,r8:r8_636,r9:r9_653,sp:sp_634
	Mem657[sp_634 - 0x00000004:word32] = r0_640
	Mem660[sp_634 - 0x00000008:word32] = r2_639 + 1515
	Mem662[sp_634 - 0x0000000C:word32] = r2_639
	r0_663 = Mem662[r2_639 + 0x0000C839:word32]
	call r0_663 + 2 (retsize: 4;)
		uses: ap:ap_643,fp:fp_644,r0:r0_663,r1:r1_642,r11:r11_654,r2:r2_639,r3:r3_646,r4:r4_650,r5:r5_638,r6:r6_651,r7:r7_648,r8:r8_636,r9:r9_653,sp:sp_634 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_673,fp:fp_674,r0:r0_671,r1:r1_672,r11:r11_680,r2:r2_670,r3:r3_675,r5:r5_669,r6:r6_678,r7:r7_676,r8:r8_668,sp:sp_667
	r4_682 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000110E7:
	r11_816 = PHI((r11_815, l0001108F), (r11_815, l0001109E), (r11_815, l000110A0), (r11_815, l000110A5), (r11_611, l000110AA), (r11_680, l000110BE))
	r7_804 = PHI((r7_565, l0001108F), (r7_565, l0001109E), (r7_565, l000110A0), (r7_565, l000110A5), (r7_565, l000110AA), (r7_676, l000110BE))
	fp_798 = PHI((fp_558, l0001108F), (fp_558, l0001109E), (fp_558, l000110A0), (fp_558, l000110A5), (fp_609, l000110AA), (fp_674, l000110BE))
	ap_793 = PHI((ap_557, l0001108F), (ap_557, l0001109E), (ap_557, l000110A0), (ap_557, l000110A5), (ap_608, l000110AA), (ap_673, l000110BE))
	r1_788 = PHI((r1_569, l0001108F), (r1_569, l0001109E), (r1_569, l000110A0), (r1_569, l000110A5), (r1_569, l000110AA), (r1_672, l000110BE))
	r0_783 = PHI((r0_559, l0001108F), (r0_559, l0001109E), (r0_559, l000110A0), (r0_559, l000110A5), (r0_610, l000110AA), (r0_671, l000110BE))
	r5_776 = PHI((r5_563, l0001108F), (r5_563, l0001109E), (r5_563, l000110A0), (r5_563, l000110A5), (r5_563, l000110AA), (r5_669, l000110BE))
	r8_769 = PHI((r8_566, l0001108F), (r8_566, l0001109E), (r8_566, l000110A0), (r8_566, l000110A5), (r8_566, l000110AA), (r8_668, l000110BE))
	r6_756 = PHI((r6_564, l0001108F), (r6_564, l0001109E), (r6_564, l000110A0), (r6_564, l000110A5), (r6_564, l000110AA), (r6_678, l000110BE))
	sp_739 = PHI((sp_568, l0001108F), (sp_568, l0001109E), (sp_568, l000110A0), (sp_568, l000110A5), (sp_612, l000110AA), (sp_667, l000110BE))
	r3_706 = PHI((r3_561, l0001108F), (r3_561, l0001109E), (r3_561, l000110A0), (r3_561, l000110A5), (r3_561, l000110AA), (r3_675, l000110BE))
	Mem694 = PHI((Mem537, l0001108F), (Mem537, l0001109E), (Mem537, l000110A0), (Mem537, l000110A5), (Mem602, l000110AA), (Mem662, l000110BE))
	r2_692 = PHI((r2_560, l0001108F), (r2_560, l0001109E), (r2_560, l000110A0), (r2_560, l000110A5), (r2_560, l000110AA), (r2_670, l000110BE))
	r4_686 = PHI((r4_579, l0001108F), (r4_579, l0001109E), (r4_579, l000110A0), (r4_579, l000110A5), (r4_579, l000110AA), (r4_682, l000110BE))
	r9_687 = r4_686
	branch r4_686 <= 0x00000001 l00011110
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011064:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011110:
	r4_1611 = PHI((r4_1612, l00011064), (r4_686, l000110E7))
	r11_814 = PHI((r11_815, l00011064), (r11_816, l000110E7))
	r9_810 = PHI((r9_550, l00011064), (r9_687, l000110E7))
	r7_803 = PHI((r7_554, l00011064), (r7_804, l000110E7))
	fp_797 = PHI((fp_546, l00011064), (fp_798, l000110E7))
	ap_792 = PHI((ap_548, l00011064), (ap_793, l000110E7))
	r1_787 = PHI((r1_556, l00011064), (r1_788, l000110E7))
	r0_781 = PHI((r0_782, l00011064), (r0_783, l000110E7))
	r5_773 = PHI((r5_774, l00011064), (r5_776, l000110E7))
	r8_768 = PHI((r8_544, l00011064), (r8_769, l000110E7))
	r6_755 = PHI((r6_552, l00011064), (r6_756, l000110E7))
	sp_738 = PHI((sp_534, l00011064), (sp_739, l000110E7))
	r3_704 = PHI((r3_705, l00011064), (r3_706, l000110E7))
	Mem693 = PHI((Mem516, l00011064), (Mem694, l000110E7))
	r2_691 = PHI((r2_515, l00011064), (r2_692, l000110E7))
	branch Mem693[r2_691 + 92:word32] <= 0x00000000 l0001112A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011115:
	branch Mem693[r2_691:word32] != 0x00000000 l0001112A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001112A:
	v60_707 = SLICE(r3_704, word24, 8)
	r3_708 = SEQ(v60_707, 0x00)
	branch Mem693[r2_691:word32] != 0x00000000 l0001113B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011130:
	r0_715 = (uint32) Mem693[r2_691 + 0x0000C682:word16]
	branch r0_715 == 0x00000000 l0001113B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011139:
	r3_722 = SEQ(v60_707, (byte) r3_708 + 0x01)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001113B:
	r0_779 = PHI((r0_781, l0001112A), (r0_715, l00011130), (r0_715, l00011139))
	r3_724 = PHI((r3_708, l0001112A), (r3_708, l00011130), (r3_722, l00011139))
	r4_725 = (int32) (int8) r3_724
	branch Mem693[r2_691:word32] != 0x00000000 l00011145
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011145:
	branch Mem693[r2_691 + 0x0000C682:word16] != Mem693[r2_691 + 0x0000C684:word16] l00011155
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011155:
	branch Mem693[r2_691 + 0x0000C682:word16] <=u Mem693[r2_691 + 0x0000C684:word16] l0001119C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001119C:
	sp_740 = sp_738 - 0x00000004
	Mem742[sp_740:uint32] = 0x00000401
	Mem745[sp_740 - 0x00000004:uint32] = (uint32) Mem742[r2_691 + 0x0000C684:word16]
	Mem748[sp_740 - 0x00000008:uint32] = (uint32) Mem745[r2_691 + 0x0000C682:word16]
	Mem751[sp_740 - 0x0000000C:word32] = Mem748[r2_691 + 0x0000C613:word32]
	Mem758[sp_740 - 0x00000010:word32] = r6_755 + 662
	Mem761[sp_740 - 0x00000014:word32] = r2_691 + 1515
	call Mem761[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_792,fp:fp_797,r0:r0_779,r1:r1_787,r11:r11_814,r2:r2_691,r3:r3_724,r4:r4_725,r5:r5_773,r6:r6_755,r7:r7_803,r8:r8_768,r9:r9_810,sp:sp_740 - 0x00000014,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_794,fp:fp_799,r0:r0_784,r1:r1_789,r11:r11_818,r2:r2_778,r3:r3_800,r4:r4_806,r5:r5_777,r6:r6_807,r7:r7_805,r8:r8_770,r9:r9_811,sp:sp_765
	Mem821[sp_765 - 0x00000004:word32] = r0_784
	Mem824[sp_765 - 0x00000008:word32] = r2_778 + 1515
	Mem826[sp_765 - 0x0000000C:word32] = r2_778
	r0_827 = Mem826[r2_778 + 0x0000C839:word32]
	call r0_827 + 2 (retsize: 4;)
		uses: ap:ap_794,fp:fp_799,r0:r0_827,r1:r1_789,r11:r11_818,r2:r2_778,r3:r3_800,r4:r4_806,r5:r5_777,r6:r6_807,r7:r7_805,r8:r8_770,r9:r9_811,sp:sp_765 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_837,fp:fp_838,r0:r0_835,r1:r1_836,r11:r11_844,r2:r2_834,r3:r3_839,r4:r4_841,r5:r5_833,r6:r6_842,r7:r7_840,r8:r8_832,sp:sp_831
	r9_846 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011157:
	sp_850 = sp_738 - 0x00000004
	Mem852[sp_850:uint32] = 0x00000401
	Mem855[sp_850 - 0x00000004:uint32] = (uint32) Mem852[r2_691 + 0x0000C684:word16]
	Mem858[sp_850 - 0x00000008:uint32] = (uint32) Mem855[r2_691 + 0x0000C682:word16]
	Mem861[sp_850 - 0x0000000C:word32] = Mem858[r2_691 + 0x0000C613:word32]
	Mem864[sp_850 - 0x00000010:word32] = r6_755 + 515
	Mem867[sp_850 - 0x00000014:word32] = r2_691 + 1515
	call Mem867[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_792,fp:fp_797,r0:r0_779,r1:r1_787,r11:r11_814,r2:r2_691,r3:r3_724,r4:r4_725,r5:r5_773,r6:r6_755,r7:r7_803,r8:r8_768,r9:r9_810,sp:sp_850 - 0x00000014,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_877,fp:fp_878,r0:r0_875,r1:r1_876,r11:r11_884,r2:r2_874,r3:r3_879,r4:r4_881,r5:r5_873,r6:r6_882,r7:r7_880,r8:r8_872,r9:r9_883,sp:sp_871
	Mem887[sp_871 - 0x00000004:word32] = r0_875
	Mem890[sp_871 - 0x00000008:word32] = r2_874 + 1515
	Mem892[sp_871 - 0x0000000C:word32] = r2_874
	r0_893 = Mem892[r2_874 + 0x0000C839:word32]
	call r0_893 + 2 (retsize: 4;)
		uses: ap:ap_877,fp:fp_878,r0:r0_893,r1:r1_876,r11:r11_884,r2:r2_874,r3:r3_879,r4:r4_881,r5:r5_873,r6:r6_882,r7:r7_880,r8:r8_872,r9:r9_883,sp:sp_871 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_903,fp:fp_904,r0:r0_901,r1:r1_902,r11:r11_910,r2:r2_900,r3:r3_905,r4:r4_907,r5:r5_899,r6:r6_908,r7:r7_906,sp:sp_897
	r9_912 = 0x0000000B
	r8_913 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011152:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011142:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000111D9:
	Mem1001 = PHI((Mem693, l00011142), (Mem693, l00011152), (Mem892, l00011157), (Mem826, l0001119C))
	r11_966 = PHI((r11_814, l00011142), (r11_814, l00011152), (r11_910, l00011157), (r11_844, l0001119C))
	r9_964 = PHI((r9_810, l00011142), (r9_810, l00011152), (r9_912, l00011157), (r9_846, l0001119C))
	r7_960 = PHI((r7_803, l00011142), (r7_803, l00011152), (r7_906, l00011157), (r7_840, l0001119C))
	r3_958 = PHI((r3_724, l00011142), (r3_724, l00011152), (r3_905, l00011157), (r3_839, l0001119C))
	fp_956 = PHI((fp_797, l00011142), (fp_797, l00011152), (fp_904, l00011157), (fp_838, l0001119C))
	ap_954 = PHI((ap_792, l00011142), (ap_792, l00011152), (ap_903, l00011157), (ap_837, l0001119C))
	r1_952 = PHI((r1_787, l00011142), (r1_787, l00011152), (r1_902, l00011157), (r1_836, l0001119C))
	r0_950 = PHI((r0_779, l00011142), (r0_779, l00011152), (r0_901, l00011157), (r0_835, l0001119C))
	r5_947 = PHI((r5_773, l00011142), (r5_773, l00011152), (r5_899, l00011157), (r5_833, l0001119C))
	r6_936 = PHI((r6_755, l00011142), (r6_755, l00011152), (r6_908, l00011157), (r6_842, l0001119C))
	r2_932 = PHI((r2_691, l00011142), (r2_691, l00011152), (r2_900, l00011157), (r2_834, l0001119C))
	sp_927 = PHI((sp_738, l00011142), (sp_738, l00011152), (sp_897, l00011157), (sp_831, l0001119C))
	r4_922 = PHI((r4_725, l00011142), (r4_725, l00011152), (r4_907, l00011157), (r4_841, l0001119C))
	r8_917 = PHI((r8_768, l00011142), (r8_768, l00011152), (r8_913, l00011157), (r8_832, l0001119C))
	branch r8_917 == 0x00000000 l000111E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000111E0:
	branch r4_922 == 0x00000000 l00011213
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000111E4:
	sp_928 = sp_927 - 0x00000004
	Mem930[sp_928:uint32] = 0x00000401
	Mem934[sp_928 - 0x00000004:word32] = Mem930[r2_932 + 0x0000C613:word32]
	Mem938[sp_928 - 0x00000008:word32] = r6_936 + 844
	Mem941[sp_928 - 0x0000000C:word32] = r2_932 + 1515
	call Mem941[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_954,fp:fp_956,r0:r0_950,r1:r1_952,r11:r11_966,r2:r2_932,r3:r3_958,r4:r4_922,r5:r5_947,r6:r6_936,r7:r7_960,r8:r8_917,r9:r9_964,sp:sp_928 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_955,fp:fp_957,r0:r0_951,r1:r1_953,r11:r11_967,r2:r2_949,r3:r3_959,r4:r4_962,r5:r5_948,r6:r6_963,r7:r7_961,r8:r8_946,r9:r9_965,sp:sp_945
	Mem970[sp_945 - 0x00000004:word32] = r0_951
	Mem973[sp_945 - 0x00000008:word32] = r2_949 + 1515
	Mem975[sp_945 - 0x0000000C:word32] = r2_949
	r0_976 = Mem975[r2_949 + 0x0000C839:word32]
	call r0_976 + 2 (retsize: 4;)
		uses: ap:ap_955,fp:fp_957,r0:r0_976,r1:r1_953,r11:r11_967,r2:r2_949,r3:r3_959,r4:r4_962,r5:r5_948,r6:r6_963,r7:r7_961,r8:r8_946,r9:r9_965,sp:sp_945 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_986,fp:fp_987,r0:r0_984,r1:r1_985,r11:r11_993,r2:r2_983,r3:r3_988,r5:r5_982,r6:r6_991,r7:r7_989,r8:r8_981,sp:sp_980
	r9_995 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011213:
	r3_1156 = PHI((r3_958, l000111E0), (r3_988, l000111E4))
	r11_1100 = PHI((r11_966, l000111E0), (r11_993, l000111E4))
	r9_1096 = PHI((r9_964, l000111E0), (r9_995, l000111E4))
	fp_1087 = PHI((fp_956, l000111E0), (fp_987, l000111E4))
	ap_1083 = PHI((ap_954, l000111E0), (ap_986, l000111E4))
	r1_1079 = PHI((r1_952, l000111E0), (r1_985, l000111E4))
	r0_1075 = PHI((r0_950, l000111E0), (r0_984, l000111E4))
	r5_1070 = PHI((r5_947, l000111E0), (r5_982, l000111E4))
	r8_1066 = PHI((r8_917, l000111E0), (r8_981, l000111E4))
	r6_1054 = PHI((r6_936, l000111E0), (r6_991, l000111E4))
	r7_1030 = PHI((r7_960, l000111E0), (r7_989, l000111E4))
	sp_1021 = PHI((sp_927, l000111E0), (sp_980, l000111E4))
	Mem1000 = PHI((Mem1001, l000111E0), (Mem975, l000111E4))
	r2_999 = PHI((r2_932, l000111E0), (r2_983, l000111E4))
	Mem1003[r2_999 + 0x0000C623:word32] = Mem1000[r2_999 + 124:word32] - Mem1000[r2_999 + 128:word32]
	r4_1004 = Mem1003[r2_999 + 0x0000C623:word32]
	branch r4_1004 >= 0x00000000 l0001125C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001125C:
	branch r4_1004 > 0x00000000 l00011263
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011263:
	branch Mem1003[r2_999 + 0x0000C68E:word32] != 0x00000000 l000112B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001126B:
	branch Mem1003[r2_999 + 0x0000C68A:word32] == 0x00000000 l000112B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000112B8:
	sp_1022 = sp_1021 - 0x00000004
	Mem1024[sp_1022:uint32] = 0x00000401
	branch r4_1004 != 0x00000001 l000112C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000112C8:
	r3_1031 = r7_1030 + 57
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000112C2:
	r3_1035 = r7_1030 + 59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000112CC:
	r3_1041 = PHI((r3_1035, l000112C2), (r3_1031, l000112C8))
	Mem1042[sp_1022 - 0x00000004:word32] = r3_1041
	Mem1045[sp_1022 - 0x00000008:word32] = r4_1004
	Mem1050[sp_1022 - 0x0000000C:word32] = Mem1045[r2_999 + 0x0000C613:word32]
	Mem1056[sp_1022 - 0x00000010:word32] = r6_1054 + 1102
	Mem1059[sp_1022 - 0x00000014:word32] = r2_999 + 1515
	call Mem1059[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1083,fp:fp_1087,r0:r0_1075,r1:r1_1079,r11:r11_1100,r2:r2_999,r3:r3_1041,r4:r4_1004,r5:r5_1070,r6:r6_1054,r7:r7_1030,r8:r8_1066,r9:r9_1096,sp:sp_1022 - 0x00000014,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1084,fp:fp_1088,r0:r0_1076,r1:r1_1080,r11:r11_1101,r2:r2_1072,r3:r3_1089,r4:r4_1092,r5:r5_1071,r6:r6_1093,r7:r7_1091,r8:r8_1067,r9:r9_1097,sp:sp_1063
	Mem1104[sp_1063 - 0x00000004:word32] = r0_1076
	Mem1107[sp_1063 - 0x00000008:word32] = r2_1072 + 1515
	Mem1109[sp_1063 - 0x0000000C:word32] = r2_1072
	r0_1110 = Mem1109[r2_1072 + 0x0000C839:word32]
	call r0_1110 + 2 (retsize: 4;)
		uses: ap:ap_1084,fp:fp_1088,r0:r0_1110,r1:r1_1080,r11:r11_1101,r2:r2_1072,r3:r3_1089,r4:r4_1092,r5:r5_1071,r6:r6_1093,r7:r7_1091,r8:r8_1067,r9:r9_1097,sp:sp_1063 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1120,fp:fp_1121,r0:r0_1118,r1:r1_1119,r11:r11_1127,r2:r2_1117,r3:r3_1122,r4:r4_1124,r5:r5_1116,r6:r6_1125,r7:r7_1123,r8:r8_1115,sp:sp_1114
	r9_1129 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011273:
	sp_1133 = sp_1021 - 0x00000004
	Mem1135[sp_1133:uint32] = 0x00000401
	Mem1138[sp_1133 - 0x00000004:word32] = Mem1135[r2_999 + 0x0000C613:word32]
	Mem1141[sp_1133 - 0x00000008:word32] = r6_1054 + 1275
	Mem1144[sp_1133 - 0x0000000C:word32] = r2_999 + 1515
	call Mem1144[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1083,fp:fp_1087,r0:r0_1075,r1:r1_1079,r11:r11_1100,r2:r2_999,r3:r3_1156,r4:r4_1004,r5:r5_1070,r6:r6_1054,r7:r7_1030,r8:r8_1066,r9:r9_1096,sp:sp_1133 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1154,fp:fp_1155,r0:r0_1152,r1:r1_1153,r11:r11_1162,r2:r2_1151,r3:r3_1157,r4:r4_1159,r5:r5_1150,r6:r6_1160,r7:r7_1158,r8:r8_1149,r9:r9_1161,sp:sp_1148
	Mem1165[sp_1148 - 0x00000004:word32] = r0_1152
	Mem1168[sp_1148 - 0x00000008:word32] = r2_1151 + 1515
	Mem1170[sp_1148 - 0x0000000C:word32] = r2_1151
	r0_1171 = Mem1170[r2_1151 + 0x0000C839:word32]
	call r0_1171 + 2 (retsize: 4;)
		uses: ap:ap_1154,fp:fp_1155,r0:r0_1171,r1:r1_1153,r11:r11_1162,r2:r2_1151,r3:r3_1157,r4:r4_1159,r5:r5_1150,r6:r6_1160,r7:r7_1158,r8:r8_1149,r9:r9_1161,sp:sp_1148 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1181,fp:fp_1182,r0:r0_1179,r1:r1_1180,r11:r11_1188,r2:r2_1178,r3:r3_1183,r4:r4_1185,r5:r5_1177,r6:r6_1186,r7:r7_1184,r8:r8_1176,sp:sp_1175
	Mem1191[r2_1178 + 0x0000C68E:word32] = Mem1170[r2_1178 + 0x0000C623:word32]
	Mem1193[r2_1178 + 0x0000C623:word32] = 0x00000000
	r9_1194 = 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011260:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011227:
	sp_1198 = sp_1021 - 0x00000004
	Mem1200[sp_1198:uint32] = 0x00000401
	Mem1203[sp_1198 - 0x00000004:word32] = -r4_1004
	Mem1206[sp_1198 - 0x00000008:word32] = Mem1203[r2_999 + 0x0000C613:word32]
	Mem1209[sp_1198 - 0x0000000C:word32] = r6_1054 + 1199
	Mem1212[sp_1198 - 0x00000010:word32] = r2_999 + 1515
	call Mem1212[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1083,fp:fp_1087,r0:r0_1075,r1:r1_1079,r11:r11_1100,r2:r2_999,r3:r3_1156,r4:r4_1004,r5:r5_1070,r6:r6_1054,r7:r7_1030,r8:r8_1066,r9:r9_1096,sp:sp_1198 - 0x00000010,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1222,fp:fp_1223,r0:r0_1220,r1:r1_1221,r11:r11_1229,r2:r2_1219,r3:r3_1224,r4:r4_1226,r5:r5_1218,r6:r6_1227,r7:r7_1225,r8:r8_1217,r9:r9_1228,sp:sp_1216
	Mem1232[sp_1216 - 0x00000004:word32] = r0_1220
	Mem1235[sp_1216 - 0x00000008:word32] = r2_1219 + 1515
	Mem1237[sp_1216 - 0x0000000C:word32] = r2_1219
	r0_1238 = Mem1237[r2_1219 + 0x0000C839:word32]
	call r0_1238 + 2 (retsize: 4;)
		uses: ap:ap_1222,fp:fp_1223,r0:r0_1238,r1:r1_1221,r11:r11_1229,r2:r2_1219,r3:r3_1224,r4:r4_1226,r5:r5_1218,r6:r6_1227,r7:r7_1225,r8:r8_1217,r9:r9_1228,sp:sp_1216 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1248,fp:fp_1249,r0:r0_1246,r1:r1_1247,r11:r11_1255,r2:r2_1245,r3:r3_1250,r4:r4_1252,r5:r5_1244,r6:r6_1253,r7:r7_1251,r8:r8_1243,sp:sp_1242
	r9_1257 = 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000112FA:
	r11_1315 = PHI((r11_1255, l00011227), (r11_1100, l00011260), (r11_1188, l00011273), (r11_1127, l000112CC))
	r9_1313 = PHI((r9_1257, l00011227), (r9_1096, l00011260), (r9_1194, l00011273), (r9_1129, l000112CC))
	r4_1310 = PHI((r4_1252, l00011227), (r4_1004, l00011260), (r4_1185, l00011273), (r4_1124, l000112CC))
	r7_1308 = PHI((r7_1251, l00011227), (r7_1030, l00011260), (r7_1184, l00011273), (r7_1123, l000112CC))
	r3_1306 = PHI((r3_1250, l00011227), (r3_1156, l00011260), (r3_1183, l00011273), (r3_1122, l000112CC))
	fp_1304 = PHI((fp_1249, l00011227), (fp_1087, l00011260), (fp_1182, l00011273), (fp_1121, l000112CC))
	ap_1302 = PHI((ap_1248, l00011227), (ap_1083, l00011260), (ap_1181, l00011273), (ap_1120, l000112CC))
	r1_1300 = PHI((r1_1247, l00011227), (r1_1079, l00011260), (r1_1180, l00011273), (r1_1119, l000112CC))
	r0_1298 = PHI((r0_1246, l00011227), (r0_1075, l00011260), (r0_1179, l00011273), (r0_1118, l000112CC))
	r5_1295 = PHI((r5_1244, l00011227), (r5_1070, l00011260), (r5_1177, l00011273), (r5_1116, l000112CC))
	r8_1293 = PHI((r8_1243, l00011227), (r8_1066, l00011260), (r8_1176, l00011273), (r8_1115, l000112CC))
	r6_1283 = PHI((r6_1253, l00011227), (r6_1054, l00011260), (r6_1186, l00011273), (r6_1125, l000112CC))
	sp_1275 = PHI((sp_1242, l00011227), (sp_1021, l00011260), (sp_1175, l00011273), (sp_1114, l000112CC))
	Mem1262 = PHI((Mem1237, l00011227), (Mem1003, l00011260), (Mem1193, l00011273), (Mem1109, l000112CC))
	r2_1261 = PHI((r2_1245, l00011227), (r2_999, l00011260), (r2_1178, l00011273), (r2_1117, l000112CC))
	branch Mem1262[r2_1261 + 128:word32] == 0x00000000 l00011303
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011303:
	branch Mem1262[r2_1261 + 0x0000C68A:word32] == 0x00000000 l0001130E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001130E:
	branch Mem1262[r2_1261:word32] == 0x00000000 l00011348
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011348:
	sp_1276 = sp_1275 - 0x00000004
	Mem1278[sp_1276:uint32] = 0x00000401
	Mem1281[sp_1276 - 0x00000004:word32] = Mem1278[r2_1261 + 0x0000C613:word32]
	Mem1285[sp_1276 - 0x00000008:word32] = r6_1283 + 1352
	Mem1288[sp_1276 - 0x0000000C:word32] = r2_1261 + 1515
	call Mem1288[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1302,fp:fp_1304,r0:r0_1298,r1:r1_1300,r11:r11_1315,r2:r2_1261,r3:r3_1306,r4:r4_1310,r5:r5_1295,r6:r6_1283,r7:r7_1308,r8:r8_1293,r9:r9_1313,sp:sp_1276 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1303,fp:fp_1305,r0:r0_1299,r1:r1_1301,r11:r11_1316,r2:r2_1297,r3:r3_1307,r4:r4_1311,r5:r5_1296,r6:r6_1312,r7:r7_1309,r8:r8_1294,r9:r9_1314,sp:sp_1292
	Mem1319[sp_1292 - 0x00000004:word32] = r0_1299
	Mem1322[sp_1292 - 0x00000008:word32] = r2_1297 + 1515
	Mem1324[sp_1292 - 0x0000000C:word32] = r2_1297
	r0_1325 = Mem1324[r2_1297 + 0x0000C839:word32]
	call r0_1325 + 2 (retsize: 4;)
		uses: ap:ap_1303,fp:fp_1305,r0:r0_1325,r1:r1_1301,r11:r11_1316,r2:r2_1297,r3:r3_1307,r4:r4_1311,r5:r5_1296,r6:r6_1312,r7:r7_1309,r8:r8_1294,r9:r9_1314,sp:sp_1292 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1335,fp:fp_1336,r0:r0_1333,r1:r1_1334,r11:r11_1342,r2:r2_1332,r3:r3_1337,r4:r4_1339,r5:r5_1331,r6:r6_1340,r7:r7_1338,r8:r8_1330,r9:r9_1341,sp:sp_1329
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011312:
	sp_1344 = sp_1275 - 0x00000004
	Mem1345[sp_1344:word32] = 0x00000000
	branch Mem1345[r2_1261 + 36:word32] <= 0x00000009 l00011320
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011320:
	r3_1349 = r7_1308 + 78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001131A:
	r3_1353 = r7_1308 + 79
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011324:
	r3_1359 = PHI((r3_1353, l0001131A), (r3_1349, l00011320))
	Mem1360[sp_1344 - 0x00000004:word32] = r3_1359
	Mem1364[sp_1344 - 0x00000008:word32] = r7_1308 + 60
	Mem1368[sp_1344 - 0x0000000C:word32] = r2_1261 + 1515
	call Mem1368[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1302,fp:fp_1304,r0:r0_1298,r1:r1_1300,r11:r11_1315,r2:r2_1261,r3:r3_1359,r4:r4_1310,r5:r5_1295,r6:r6_1283,r7:r7_1308,r8:r8_1293,r9:r9_1313,sp:sp_1344 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1383,fp:fp_1385,r0:r0_1379,r1:r1_1381,r11:r11_1395,r2:r2_1377,r3:r3_1386,r4:r4_1389,r5:r5_1376,r6:r6_1391,r7:r7_1387,r8:r8_1374,r9:r9_1393,sp:sp_1372
	Mem1398[sp_1372 - 0x00000004:word32] = r0_1379
	Mem1401[sp_1372 - 0x00000008:word32] = r2_1377 + 1515
	Mem1403[sp_1372 - 0x0000000C:word32] = r2_1377
	r0_1404 = Mem1403[r2_1377 + 0x0000C839:word32]
	call r0_1404 + 2 (retsize: 4;)
		uses: ap:ap_1383,fp:fp_1385,r0:r0_1404,r1:r1_1381,r11:r11_1395,r2:r2_1377,r3:r3_1386,r4:r4_1389,r5:r5_1376,r6:r6_1391,r7:r7_1387,r8:r8_1374,r9:r9_1393,sp:sp_1372 - 0x0000000C,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1414,fp:fp_1415,r0:r0_1412,r1:r1_1413,r11:r11_1421,r2:r2_1411,r3:r3_1416,r4:r4_1418,r5:r5_1410,r6:r6_1419,r7:r7_1417,r8:r8_1409,r9:r9_1420,sp:sp_1408
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011374:
	r11_1456 = PHI((r11_1421, l00011324), (r11_1342, l00011348))
	r9_1454 = PHI((r9_1420, l00011324), (r9_1341, l00011348))
	r6_1452 = PHI((r6_1419, l00011324), (r6_1340, l00011348))
	r4_1450 = PHI((r4_1418, l00011324), (r4_1339, l00011348))
	r7_1448 = PHI((r7_1417, l00011324), (r7_1338, l00011348))
	r3_1446 = PHI((r3_1416, l00011324), (r3_1337, l00011348))
	fp_1444 = PHI((fp_1415, l00011324), (fp_1336, l00011348))
	ap_1442 = PHI((ap_1414, l00011324), (ap_1335, l00011348))
	r1_1440 = PHI((r1_1413, l00011324), (r1_1334, l00011348))
	r0_1438 = PHI((r0_1412, l00011324), (r0_1333, l00011348))
	r5_1435 = PHI((r5_1410, l00011324), (r5_1331, l00011348))
	r8_1433 = PHI((r8_1409, l00011324), (r8_1330, l00011348))
	Mem1426 = PHI((Mem1403, l00011324), (Mem1324, l00011348))
	r2_1425 = PHI((r2_1411, l00011324), (r2_1332, l00011348))
	sp_1423 = PHI((sp_1408, l00011324), (sp_1329, l00011348))
	sp_1424 = sp_1423 - 0x00000004
	Mem1428[sp_1424:word32] = Mem1426[r2_1425 + 0x0000C617:word32]
	call Mem1428[0x0001925C:word32] + 2 (retsize: 4;)
		uses: ap:ap_1442,fp:fp_1444,r0:r0_1438,r1:r1_1440,r11:r11_1456,r2:r2_1425,r3:r3_1446,r4:r4_1450,r5:r5_1435,r6:r6_1452,r7:r7_1448,r8:r8_1433,r9:r9_1454,sp:sp_1424,Stack +FFFFFFF4:dwLoc10
		defs: fp:fp_1445,r1:r1_1441,r11:r11_1457,r2:r2_1437,r3:r3_1447,r4:r4_1451,r5:r5_1436,r6:r6_1453,r7:r7_1449,r8:r8_1434,r9:r9_1455
	branch r9_1455 <= 0x00000001 l0001138C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001138C:
	fp_1467 = Mem1428[fp_1445 + 0x0000000C:word32]
	ap_1468 = Mem1428[fp_1445 + 0x00000008:word32]
	r1Out = r1_1441
	r2Out = r2_1437
	r3Out = r3_1447
	r4Out = r4_1451
	r5Out = r5_1436
	r6Out = r6_1453
	r7Out = r7_1449
	r8Out = r8_1434
	r9Out = r9_1455
	r11Out = r11_1457
	apOut = ap_1468
	fpOut = fp_1467
	spOut = fp_1445 - 0x00000004
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011386:
	fp_1474 = Mem1428[fp_1445 + 0x0000000C:word32]
	ap_1475 = Mem1428[fp_1445 + 0x00000008:word32]
	r1Out = r1_1441
	r2Out = r2_1437
	r3Out = r3_1447
	r4Out = r4_1451
	r5Out = r5_1436
	r6Out = r6_1453
	r7Out = r7_1449
	r8Out = r8_1434
	r9Out = r9_1455
	r11Out = r11_1457
	apOut = ap_1475
	fpOut = fp_1474
	spOut = fp_1445 - 0x00000004
	return r9_1455
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001130B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011300:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011390:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000111DD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011742:
	sp_1480 = sp_927 - 0x00000004
	Mem1482[sp_1480:word32] = Mem1001[r2_932 + 0x0000C617:word32]
	call Mem1482[0x0001925C:word32] + 2 (retsize: 4;)
		uses: ap:ap_954,fp:fp_956,r0:r0_950,r1:r1_952,r11:r11_966,r2:r2_932,r3:r3_958,r4:r4_922,r5:r5_947,r6:r6_936,r7:r7_960,r8:r8_917,r9:r9_964,sp:sp_1480,Stack +FFFFFFF4:dwLoc10
		defs: fp:fp_1493,r1:r1_1491,r11:r11_1499,r2:r2_1489,r3:r3_1494,r4:r4_1496,r5:r5_1488,r6:r6_1497,r7:r7_1495,r8:r8_1487,r9:r9_1498,sp:sp_1486
	branch Mem1482[r2_1489 + 72:word32] == 0x00000000 l000117A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011754:
	branch Mem1482[r2_1489:word32] != 0x00000000 l000117A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011758:
	branch Mem1482[fp_1493 + -12:word32] == 0x00000000 l000117A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000117A3:
	r8_1768 = PHI((r8_1487, l00011742), (r8_1487, l00011754), (r8_1487, l00011758), (r8_1564, l00011771), (r8_1564, l000117A0))
	r7_1764 = PHI((r7_1495, l00011742), (r7_1495, l00011754), (r7_1495, l00011758), (r7_1572, l00011771), (r7_1572, l000117A0))
	r6_1760 = PHI((r6_1497, l00011742), (r6_1497, l00011754), (r6_1497, l00011758), (r6_1574, l00011771), (r6_1574, l000117A0))
	r5_1756 = PHI((r5_1488, l00011742), (r5_1488, l00011754), (r5_1488, l00011758), (r5_1565, l00011771), (r5_1565, l000117A0))
	r4_1753 = PHI((r4_1496, l00011742), (r4_1496, l00011754), (r4_1496, l00011758), (r4_1573, l00011771), (r4_1573, l000117A0))
	r3_1749 = PHI((r3_1494, l00011742), (r3_1494, l00011754), (r3_1494, l00011758), (r3_1571, l00011771), (r3_1571, l000117A0))
	r2_1745 = PHI((r2_1489, l00011742), (r2_1489, l00011754), (r2_1489, l00011758), (r2_1566, l00011771), (r2_1566, l000117A0))
	r11_1741 = PHI((r11_1499, l00011742), (r11_1499, l00011754), (r11_1499, l00011758), (r11_1576, l00011771), (r11_1576, l000117A0))
	r1_1737 = PHI((r1_1491, l00011742), (r1_1491, l00011754), (r1_1491, l00011758), (r1_1568, l00011771), (r1_1568, l000117A0))
	Mem1592 = PHI((Mem1482, l00011742), (Mem1482, l00011754), (Mem1482, l00011758), (Mem1558, l00011771), (Mem1558, l000117A0))
	fp_1590 = PHI((fp_1493, l00011742), (fp_1493, l00011754), (fp_1493, l00011758), (fp_1570, l00011771), (fp_1570, l000117A0))
	r9_1585 = PHI((r9_1498, l00011742), (r9_1498, l00011754), (r9_1498, l00011758), (r9_1575, l00011771), (r9_1581, l000117A0))
	sp_1591 = fp_1590 - 0x00000004
	fp_1593 = Mem1592[sp_1591 + 0x00000010:word32]
	ap_1594 = Mem1592[sp_1591 + 0x0000000C:word32]
	r1Out = r1_1737
	r2Out = r2_1745
	r3Out = r3_1749
	r4Out = r4_1753
	r5Out = r5_1756
	r6Out = r6_1760
	r7Out = r7_1764
	r8Out = r8_1768
	r9Out = r9_1585
	r11Out = r11_1741
	apOut = ap_1594
	fpOut = fp_1593
	spOut = sp_1591
	return r9_1585
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001175D:
	Mem1515[sp_1486 - 0x00000004:word32] = Mem1482[fp_1493 + -8:word32]
	Mem1518[sp_1486 - 0x00000008:word32] = Mem1515[r2_1489 + 0x0000C613:word32]
	fn0000BDC2()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011119:
	sp_1595 = sp_738 - 0x00000004
	Mem1597[sp_1595:word32] = Mem693[r2_691 + 0x0000C617:word32]
	call Mem1597[0x0001925C:word32] + 2 (retsize: 4;)
		uses: ap:ap_792,fp:fp_797,r0:r0_781,r1:r1_787,r11:r11_814,r2:r2_691,r3:r3_704,r4:r4_1611,r5:r5_773,r6:r6_755,r7:r7_803,r8:r8_768,r9:r9_810,sp:sp_1595,Stack +FFFFFFF4:dwLoc10
		defs: fp:fp_1608,r1:r1_1606,r11:r11_1617,r2:r2_1604,r3:r3_1609,r4:r4_1614,r5:r5_1603,r6:r6_1615,r7:r7_1610,r8:r8_1602,r9:r9_1616
	fp_1624 = Mem1597[fp_1608 + 0x0000000C:word32]
	ap_1625 = Mem1597[fp_1608 + 0x00000008:word32]
	r1Out = r1_1606
	r2Out = r2_1604
	r3Out = r3_1609
	r4Out = r4_1614
	r5Out = r5_1603
	r6Out = r6_1615
	r7Out = r7_1610
	r8Out = r8_1602
	r9Out = r9_1616
	r11Out = r11_1617
	apOut = ap_1625
	fpOut = fp_1624
	spOut = fp_1608 - 0x00000004
	return r9_1616
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001105D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001104B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000110EF:
	r11_1659 = PHI((r11, l0001104B), (r11_498, l0001105D), (r11_815, l00011083), (r11_816, l000110E7))
	r9_1657 = PHI((r9_487, l0001104B), (r9_511, l0001105D), (r9_574, l00011083), (r9_687, l000110E7))
	r6_1655 = PHI((r6_477, l0001104B), (r6_503, l0001105D), (r6_564, l00011083), (r6_756, l000110E7))
	r4_1653 = PHI((r4_475, l0001104B), (r4_501, l0001105D), (r4_562, l00011083), (r4_686, l000110E7))
	r7_1651 = PHI((r7_478, l0001104B), (r7_504, l0001105D), (r7_565, l00011083), (r7_804, l000110E7))
	r3_1649 = PHI((r3_474, l0001104B), (r3_500, l0001105D), (r3_561, l00011083), (r3_706, l000110E7))
	fp_1647 = PHI((fp_471, l0001104B), (fp_496, l0001105D), (fp_558, l00011083), (fp_798, l000110E7))
	ap_1645 = PHI((ap_470, l0001104B), (ap_495, l0001105D), (ap_557, l00011083), (ap_793, l000110E7))
	r1_1643 = PHI((r1_482, l0001104B), (r1_482, l0001105D), (r1_569, l00011083), (r1_788, l000110E7))
	r0_1641 = PHI((r0_472, l0001104B), (r0_497, l0001105D), (r0_559, l00011083), (r0_783, l000110E7))
	r5_1638 = PHI((r5_476, l0001104B), (r5_502, l0001105D), (r5_563, l00011083), (r5_776, l000110E7))
	r8_1636 = PHI((r8_479, l0001104B), (r8_505, l0001105D), (r8_566, l00011083), (r8_769, l000110E7))
	Mem1629 = PHI((Mem457, l0001104B), (Mem457, l0001105D), (Mem537, l00011083), (Mem694, l000110E7))
	r2_1628 = PHI((r2_473, l0001104B), (r2_499, l0001105D), (r2_560, l00011083), (r2_692, l000110E7))
	sp_1626 = PHI((sp_481, l0001104B), (sp_506, l0001105D), (sp_568, l00011083), (sp_739, l000110E7))
	sp_1627 = sp_1626 - 0x00000004
	Mem1631[sp_1627:word32] = Mem1629[r2_1628 + 0x0000C617:word32]
	call Mem1631[0x0001925C:word32] + 2 (retsize: 4;)
		uses: ap:ap_1645,fp:fp_1647,r0:r0_1641,r1:r1_1643,r11:r11_1659,r2:r2_1628,r3:r3_1649,r4:r4_1653,r5:r5_1638,r6:r6_1655,r7:r7_1651,r8:r8_1636,r9:r9_1657,sp:sp_1627,Stack +FFFFFFF4:dwLoc10
		defs: ap:ap_1646,fp:fp_1648,r1:r1_1644,r11:r11_1660,r2:r2_1640,r3:r3_1650,r4:r4_1654,r5:r5_1639,r6:r6_1656,r7:r7_1652,r8:r8_1637,r9:r9_1658
	branch Mem1631[ap_1646 + 4:word32] == 0x00000000 l00011105
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011105:
	Mem1667[r2_1640 + 0x0000C6E9:word32] = 0x00000001
	fp_1673 = Mem1667[fp_1648 + 0x0000000C:word32]
	ap_1674 = Mem1667[fp_1648 + 0x00000008:word32]
	r1Out = r1_1644
	r2Out = r2_1640
	r3Out = r3_1650
	r4Out = r4_1654
	r5Out = r5_1639
	r6Out = r6_1656
	r7Out = r7_1652
	r8Out = r8_1637
	r9Out = r9_1658
	r11Out = r11_1660
	apOut = ap_1674
	fpOut = fp_1673
	spOut = fp_1648 - 0x00000004
	return 0x00000009
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011101:
	fp_1680 = Mem1631[fp_1648 + 0x0000000C:word32]
	ap_1681 = Mem1631[fp_1648 + 0x00000008:word32]
	r1Out = r1_1644
	r2Out = r2_1640
	r3Out = r3_1650
	r4Out = r4_1654
	r5Out = r5_1639
	r6Out = r6_1656
	r7Out = r7_1652
	r8Out = r8_1637
	r9Out = r9_1658
	r11Out = r11_1660
	apOut = ap_1681
	fpOut = fp_1680
	spOut = fp_1648 - 0x00000004
	return r9_1658
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010FEC:
	fp_1687 = Mem359[fp_345 + 0x0000000C:word32]
	ap_1688 = Mem359[fp_345 + 0x00000008:word32]
	r1Out = r1_348
	r2Out = r2_349
	r3Out = r3_350
	r4Out = r4_351
	r5Out = r5_352
	r6Out = r6_353
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_1688
	fpOut = fp_1687
	spOut = fp_345 - 0x00000004
	return 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010FC1:
	fp_1701 = Mem0[fp + 0x0000000C:word32]
	ap_1702 = Mem0[fp + 0x00000008:word32]
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_1702
	fpOut = fp_1701
	spOut = fp - 0x00000004
	return 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010FC5:
	fn0000D4A2()
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00010E6A_entry:
	def r2
	def Mem0
	def ap
	def fp
	def r1
	def r3
	def r7
	def r4
	def r6
	def r9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010E6A:
	v12_9 = Mem0[r2 + 0x0000C613:word32]
	r8_4 = 0x00000000
	r5_5 = 0x00000000
	r0_19 = fn00018F22(r1, ap, fp, out r1_21, out ap_17, out fp_18, out sp_20)
	branch r0_19 != 0x00000000 l00010EDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010EA5:
	Mem32[sp_20 - 0x00000004:word32] = r2 + 0x0000C694
	Mem35[sp_20 - 0x00000008:word32] = Mem32[r2 + 0x0000C613:word32]
	call Mem35[0x000192A8:word32] + 2 (retsize: 4;)
		uses: ap:ap_17,fp:fp_18,r0:r0_19,r1:r1_21,r11:r11,r2:r2,r3:r3,r4:r4,r5:0x00000000,r6:r6,r7:r7,r8:0x00000000,r9:r9,sp:sp_20 - 0x00000008,Stack +FFFFFFF4:v12_9
		defs: ap:ap_45,fp:fp_46,r0:r0_43,r1:r1_44,r11:r11_1706,r2:r2_42,r3:r3_48,r4:r4_52,r5:r5_41,r6:r6_54,r7:r7_50,r8:r8_40,r9:r9_56,sp:sp_39
	branch r0_43 != 0x00000000 l00010EDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010EBC:
	r0_63 = (uint32) Mem35[r2_42 + 0x0000C69E:word16] & ~0xFFFF0FFF
	r1_64 = 0x00000000
	branch r0_63 != 0x00004000 l00010ED7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010ED5:
	r1_68 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010ED7:
	r1_70 = PHI((r1_64, l00010EBC), (r1_68, l00010ED5))
	r5_71 = r1_70
	branch r1_70 != 0x00000000 l00010EDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010EDF:
	r11_1708 = PHI((r11, l00010E6A), (r11_1706, l00010EA5), (r11_1706, l00010ED7))
	r9_164 = PHI((r9, l00010E6A), (r9_56, l00010EA5), (r9_56, l00010ED7))
	r4_159 = PHI((r4, l00010E6A), (r4_52, l00010EA5), (r4_52, l00010ED7))
	r7_155 = PHI((r7, l00010E6A), (r7_50, l00010EA5), (r7_50, l00010ED7))
	fp_150 = PHI((fp_18, l00010E6A), (fp_46, l00010EA5), (fp_46, l00010ED7))
	r1_145 = PHI((r1_21, l00010E6A), (r1_44, l00010EA5), (r1_70, l00010ED7))
	r0_141 = PHI((r0_19, l00010E6A), (r0_43, l00010EA5), (r0_63, l00010ED7))
	r5_137 = PHI((r5_5, l00010E6A), (r5_41, l00010EA5), (r5_71, l00010ED7))
	r8_133 = PHI((r8_4, l00010E6A), (r8_40, l00010EA5), (r8_40, l00010ED7))
	r3_117 = PHI((r3, l00010E6A), (r3_48, l00010EA5), (r3_48, l00010ED7))
	r6_105 = PHI((r6, l00010E6A), (r6_54, l00010EA5), (r6_54, l00010ED7))
	sp_90 = PHI((sp_20, l00010E6A), (sp_39, l00010EA5), (sp_39, l00010ED7))
	r2_84 = PHI((r2, l00010E6A), (r2_42, l00010EA5), (r2_42, l00010ED7))
	Mem78 = PHI((Mem10, l00010E6A), (Mem35, l00010EA5), (Mem35, l00010ED7))
	ap_76 = PHI((ap_17, l00010E6A), (ap_45, l00010EA5), (ap_45, l00010ED7))
	branch Mem78[ap_76 + 4:word32] != 0x00000000 l00010EE7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010EE7:
	branch Mem78[r2_84 + 0x0000C6E9:word32] == 0x00000000 l00010F50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F50:
	sp_92 = sp_90 - 0x00000004
	Mem94[sp_92:uint32] = 0x00000401
	Mem97[sp_92 - 0x00000004:word32] = Mem94[r2_84 + 0x0000C613:word32]
	Mem100[sp_92 - 0x00000008:word32] = Mem97[r2_84 + 0x0000C60F:word32]
	branch Mem100[r2_84:word32] == 0x00000000 l00010F70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F70:
	r3_107 = r6_105 + 456
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F65:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F75:
	r3_116 = PHI((r3_117, l00010F65), (r3_107, l00010F70))
	Mem119[sp_92 - 0x0000000C:word32] = r3_116
	Mem123[sp_92 - 0x00000010:word32] = r6_105 + 421
	Mem127[sp_92 - 0x00000014:word32] = r2_84 + 1515
	call Mem127[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_76,fp:fp_150,r0:r0_141,r1:r1_145,r11:r11_1708,r2:r2_84,r3:r3_116,r4:r4_159,r5:r5_137,r6:r6_105,r7:r7_155,r8:r8_133,r9:r9_164,sp:sp_92 - 0x00000014,Stack +FFFFFFF4:v12_9
		defs: ap:ap_148,fp:fp_152,r0:r0_143,r1:r1_146,r11:r11_1710,r2:r2_139,r3:r3_153,r4:r4_161,r5:r5_138,r6:r6_162,r7:r7_157,r8:r8_135,r9:r9_166,sp:sp_131
	Mem169[sp_131 - 0x00000004:word32] = r0_143
	Mem172[sp_131 - 0x00000008:word32] = r2_139 + 1515
	Mem174[sp_131 - 0x0000000C:word32] = r2_139
	r0_175 = Mem174[r2_139 + 0x0000C839:word32]
	call r0_175 + 2 (retsize: 4;)
		uses: ap:ap_148,fp:fp_152,r0:r0_175,r1:r1_146,r11:r11_1710,r2:r2_139,r3:r3_153,r4:r4_161,r5:r5_138,r6:r6_162,r7:r7_157,r8:r8_135,r9:r9_166,sp:sp_131 - 0x0000000C,Stack +FFFFFFF4:v12_9
		defs: fp:fp_186,r1:r1_184,r11:r11_1714,r2:r2_182,r3:r3_187,r4:r4_189,r5:r5_181,r6:r6_190,r7:r7_188,r8:r8_180,r9:r9_191
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010EEF:
	sp_193 = sp_90 - 0x00000004
	Mem195[sp_193:uint32] = 0x00000401
	Mem198[sp_193 - 0x00000004:word32] = Mem195[r2_84 + 0x0000C613:word32]
	r3_199 = Mem198[r2_84:word32]
	branch r3_199 == 0x00000000 l00010F08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F08:
	r4_204 = r7_155 + 39
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010EFF:
	r4_208 = r7_155 + 40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F0C:
	r4_214 = PHI((r4_208, l00010EFF), (r4_204, l00010F08))
	Mem215[sp_193 - 0x00000008:word32] = r4_214
	Mem219[sp_193 - 0x0000000C:word32] = Mem215[r2_84 + 0x0000C60F:word32]
	branch r3_199 == 0x00000000 l00010F24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F24:
	r3_226 = r6_105 + 456
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F18:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F29:
	r3_235 = PHI((r3_199, l00010F18), (r3_226, l00010F24))
	Mem236[sp_193 - 0x00000010:word32] = r3_235
	Mem240[sp_193 - 0x00000014:word32] = r6_105 + 340
	Mem244[sp_193 - 0x00000018:word32] = r2_84 + 1515
	call Mem244[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_76,fp:fp_150,r0:r0_141,r1:r1_145,r11:r11_1708,r2:r2_84,r3:r3_235,r4:r4_214,r5:r5_137,r6:r6_105,r7:r7_155,r8:r8_133,r9:r9_164,sp:sp_193 - 0x00000018,Stack +FFFFFFF4:v12_9
		defs: ap:ap_264,fp:fp_267,r0:r0_258,r1:r1_261,r11:r11_1717,r2:r2_255,r3:r3_268,r4:r4_273,r5:r5_254,r6:r6_274,r7:r7_271,r8:r8_251,r9:r9_277,sp:sp_248
	Mem280[sp_248 - 0x00000004:word32] = r0_258
	Mem283[sp_248 - 0x00000008:word32] = r2_255 + 1515
	Mem285[sp_248 - 0x0000000C:word32] = r2_255
	r0_286 = Mem285[r2_255 + 0x0000C839:word32]
	call r0_286 + 2 (retsize: 4;)
		uses: ap:ap_264,fp:fp_267,r0:r0_286,r1:r1_261,r11:r11_1717,r2:r2_255,r3:r3_268,r4:r4_273,r5:r5_254,r6:r6_274,r7:r7_271,r8:r8_251,r9:r9_277,sp:sp_248 - 0x0000000C,Stack +FFFFFFF4:v12_9
		defs: fp:fp_297,r1:r1_295,r11:r11_1720,r2:r2_293,r3:r3_298,r4:r4_300,r5:r5_292,r6:r6_301,r7:r7_299,r8:r8_291,r9:r9_302
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010EE4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F98:
	r9_1771 = PHI((r9_164, l00010EE4), (r9_191, l00010F75), (r9_302, l00010F29))
	r8_1767 = PHI((r8_133, l00010EE4), (r8_180, l00010F75), (r8_291, l00010F29))
	r7_1763 = PHI((r7_155, l00010EE4), (r7_188, l00010F75), (r7_299, l00010F29))
	r6_1759 = PHI((r6_105, l00010EE4), (r6_190, l00010F75), (r6_301, l00010F29))
	r4_1752 = PHI((r4_159, l00010EE4), (r4_189, l00010F75), (r4_300, l00010F29))
	r3_1748 = PHI((r3_117, l00010EE4), (r3_187, l00010F75), (r3_298, l00010F29))
	r2_1744 = PHI((r2_84, l00010EE4), (r2_182, l00010F75), (r2_293, l00010F29))
	r11_1740 = PHI((r11_1708, l00010EE4), (r11_1714, l00010F75), (r11_1720, l00010F29))
	Mem330 = PHI((Mem78, l00010EE4), (Mem174, l00010F75), (Mem285, l00010F29))
	fp_327 = PHI((fp_150, l00010EE4), (fp_186, l00010F75), (fp_297, l00010F29))
	r1_310 = PHI((r1_145, l00010EE4), (r1_184, l00010F75), (r1_295, l00010F29))
	r5_304 = PHI((r5_137, l00010EE4), (r5_181, l00010F75), (r5_292, l00010F29))
	branch r5_304 == 0x00000000 l00010FA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010FA4:
	r1_312 = SEQ(SLICE(r1_310, word24, 8), 0x09)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010F9C:
	r1_318 = SEQ(SLICE(r1_310, word24, 8), 0x4C)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010FA7:
	r1_322 = PHI((r1_318, l00010F9C), (r1_312, l00010FA4))
	sp_328 = fp_327 - 0x00000004
	fp_331 = Mem330[sp_328 + 0x00000010:word32]
	ap_332 = Mem330[sp_328 + 0x0000000C:word32]
	r1Out = r1_322
	r2Out = r2_1744
	r3Out = r3_1748
	r4Out = r4_1752
	r5Out = r5_304
	r6Out = r6_1759
	r7Out = r7_1763
	r8Out = r8_1767
	r9Out = r9_1771
	r11Out = r11_1740
	apOut = ap_332
	fpOut = fp_331
	spOut = sp_328
	return (int32) (int8) r1_322
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00010E6A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010EDC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00010FAB:
	Mem334[r2_42 + 0x0000C61B:word32] = Mem35[r2_42 + 0x0000C6AE:word32]
	fn00009A52()
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn000117AA(word32 r0, word32 r1, word32 r2, word32 r3, word32 r6, word32 r7, word32 r8, word32 r9, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000117AA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000117AA:
	word32 r5_7 = Mem0[r2 + 0x0000C61B:word32]
	branch r5_7 <= 0x00002000 l000117D7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000117D7:
	word32 v14_15 = Mem13[r2 + 0x0000C617:word32]
	word32 sp_20
	word32 r4_21
	word32 r2_22
	word32 r5_23
	word32 r0_25
	word32 r8_27
	word32 r3_29
	word32 fp_31
	word32 ap_33
	word32 r9_35
	word32 r1_501
	word32 r6_499
	word32 r7_500
	call Mem16[0x0001926C:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r1:r1,r2:r2,r3:r3,r4:0x00000000,r5:r5_7,r6:r6,r7:r7,r8:r8,r9:r9,sp:fp - 0x00000028,Stack +0004:v14_15,Stack +0008:0x0000000000000000
		defs: ap:ap_33,fp:fp_31,r0:r0_25,r1:r1_501,r2:r2_22,r3:r3_29,r4:r4_21,r5:r5_23,r6:r6_499,r7:r7_500,r8:r8_27,r9:r9_35,sp:sp_20
	Mem39[sp_20 - 0x00000004:word32] = Mem16[r2_22 + 0x0000C61B:word32]
	Mem42[sp_20 - 0x00000008:word32] = Mem39[r2_22 + 0x0000C5F3:word32]
	Mem45[sp_20 - 0x0000000C:word32] = Mem42[r2_22 + 0x0000C617:word32]
	word32 sp_138
	word32 r9_106
	word32 r2_113
	word32 r4_123
	word32 r5_158
	word32 r0_120
	word32 r8_100
	word32 r3_101
	word32 fp_102
	word32 ap_104
	call Mem45[0x00019270:word32] + 2 (retsize: 4;)
		uses: ap:ap_33,fp:fp_31,r0:r0_25,r1:r1_501,r2:r2_22,r3:r3_29,r4:r4_21,r5:r5_23,r6:r6_499,r7:r7_500,r8:r8_27,r9:r9_35,sp:sp_20 - 0x0000000C,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: ap:ap_57,fp:fp_56,r0:r0_53,r2:r2_51,r3:r3_55,r4:r4_50,r5:r5_52,r8:r8_54,r9:r9_58,sp:sp_49
	Mem61[r2_113 + 0x0000C5FB:word32] = r0_120
	branch Mem61[r2_113 + 0x0000C5FB:word32] == Mem61[r2_113 + 0x0000C61B:word32] l00011816
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011816:
	r3_101 = Mem61[r2_113 + 0x0000C61B:word32] + Mem61[r2_113 + 0x0000C5F3:word32]
	Mem67[r2_113 + 0x0000C5F7:word32] = r3_101 - 0x00000016
	branch Mem67[r2_113 + 0x0000C5F7:word32] >=u Mem67[r2_113 + 0x0000C5F3:word32] l0001183A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001183A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001183C:
	r3_101 = Mem75[r2_113 + 0x0000C5F7:word32]
	r0_120 = (uint32) Mem75[r3_101:byte]
	branch r0_120 != 0x00000050 l00011880
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001184F:
	word32 sp_82 = sp_138 - 0x00000004
	Mem83[sp_82:word32] = 0x00000004
	Mem86[sp_82 - 0x00000004:word32] = r2_113 + 0x0000C639
	Mem88[sp_82 - 0x00000008:word32] = r3_101
	call Mem88[0x000192D8:word32] + 2 (retsize: 4;)
		uses: ap:ap_104,fp:fp_102,r0:r0_77,r1:r1,r2:r2_74,r3:r3_76,r4:r4_93,r5:r5_96,r6:r6,r7:r7,r8:r8_99,r9:r9_106,sp:sp_82 - 0x00000008,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: ap:ap_105,fp:fp_103,r0:r0_98,r2:r2_95,r3:r3_101,r4:r4_94,r5:r5_97,r8:r8_100,r9:r9_107,sp:sp_92
	branch r0_120 != 0x00000000 l00011880
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011880:
	Mem116[r2_113 + 0x0000C5F7:word32] = Mem114[r2_113 + 0x0000C5F7:word32] - 0x00000001
	branch Mem116[r2_113 + 0x0000C5F7:word32] >=u Mem116[r2_113 + 0x0000C5F3:word32] l0001183C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011893:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011864:
	r0_120 = Mem88[r2_113 + 0x0000C5F7:word32] - Mem88[r2_113 + 0x0000C5F3:word32]
	Mem122[r2_113 + 0x0000C5FB:word32] = Mem88[r2_113 + 0x0000C5FB:word32] - r0_120
	r4_123 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011837:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011813:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A92:
	branch r4_123 != 0x00000000 l00011AF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011AF4:
	word32 r3_135 = Mem134[r2_113 + 0x0000C5F7:word32] - Mem134[r2_113 + 0x0000C5F3:word32]
	Mem137[r2_113 + 124:word32] = r3_135 + Mem134[r2_113 + 0x0000C61F:word32]
	word32 sp_140 = sp_138 - 0x00000004
	Mem141[sp_140:word32] = 0x00000016
	Mem146[sp_140 - 0x00000004:word32] = fp_102 + -26
	word32 ap_160
	word32 fp_161
	word32 r2_163
	word32 r3_164
	word32 r4_165
	word32 r5_166
	word32 r6_167
	word32 r7_168
	word32 sp_169
	word32 r0_162 = fn0000D5BE(r0_120, r3_135, r4_123, r5_158, r6, ap_104, fp_102, out r2_163, out r3_164, out r4_165, out r5_166, out r6_167, out r7_168, out ap_160, out fp_161, out sp_169)
	branch r0_162 != 0x00000000 l00011B1D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011B1D:
	Mem180[sp_169 - 0x00000004:word32] = fp_161 + -22
	word32 sp_184
	word32 r4_185
	word32 r2_186
	word32 r5_187
	word32 r0_188
	word32 r8_191
	word32 r3_192
	word32 fp_193
	word32 ap_194
	word32 r9_197
	word32 r6_198
	word32 r7_199
	word32 r1_510
	call fn00000002 (retsize: 4;)
		uses: ap:ap_160,fp:fp_161,r0:r0_162,r1:r1_320,r2:r2_163,r3:r3_164,r4:r4_165,r5:r5_166,r6:r6_167,r7:r7_168,r8:r8_189,r9:r9_195,sp:sp_169 - 0x00000004,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: ap:ap_194,fp:fp_193,r0:r0_188,r1:r1_510,r2:r2_186,r3:r3_192,r4:r4_185,r5:r5_187,r6:r6_198,r7:r7_199,r8:r8_191,r9:r9_197,sp:sp_184
	Mem202[r2_186 + 0x0000C682:word16] = (word16) r0_188
	Mem205[sp_184 - 0x00000004:word32] = fp_193 + -20
	word32 sp_209
	word32 r4_210
	word32 r2_211
	word32 r5_212
	word32 r0_213
	word32 r8_214
	word32 r3_215
	word32 fp_216
	word32 ap_217
	word32 r9_218
	word32 r6_219
	word32 r7_220
	word32 r1_515
	call fn00000002 (retsize: 4;)
		uses: ap:ap_194,fp:fp_193,r0:r0_188,r1:r1_510,r2:r2_186,r3:r3_192,r4:r4_185,r5:r5_187,r6:r6_198,r7:r7_199,r8:r8_191,r9:r9_197,sp:sp_184 - 0x00000004,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: ap:ap_217,fp:fp_216,r0:r0_213,r1:r1_515,r2:r2_211,r3:r3_215,r4:r4_210,r5:r5_212,r6:r6_219,r7:r7_220,r8:r8_214,r9:r9_218,sp:sp_209
	Mem223[r2_211 + 0x0000C684:word16] = (word16) r0_213
	Mem226[sp_209 - 0x00000004:word32] = fp_216 + -18
	word32 r1_516
	word32 sp_230
	word32 r4_231
	word32 r2_232
	word32 r5_233
	word32 r0_234
	word32 r8_235
	word32 r3_236
	word32 fp_237
	word32 ap_238
	word32 r9_239
	word32 r6_240
	word32 r7_241
	call fn00000002 (retsize: 4;)
		uses: ap:ap_217,fp:fp_216,r0:r0_213,r1:r1_515,r2:r2_211,r3:r3_215,r4:r4_210,r5:r5_212,r6:r6_219,r7:r7_220,r8:r8_214,r9:r9_218,sp:sp_209 - 0x00000004,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: ap:ap_238,fp:fp_237,r0:r0_234,r1:r1_516,r2:r2_232,r3:r3_236,r4:r4_231,r5:r5_233,r6:r6_240,r7:r7_241,r8:r8_235,r9:r9_239,sp:sp_230
	Mem244[r2_232 + 0x0000C686:word16] = (word16) r0_234
	Mem247[sp_230 - 0x00000004:word32] = fp_237 + -16
	word32 r1_517
	word32 sp_251
	word32 r4_252
	word32 r2_253
	word32 r5_254
	word32 r0_255
	word32 r8_256
	word32 r3_257
	word32 fp_258
	word32 ap_259
	word32 r9_260
	word32 r6_261
	word32 r7_262
	call fn00000002 (retsize: 4;)
		uses: ap:ap_238,fp:fp_237,r0:r0_234,r1:r1_516,r2:r2_232,r3:r3_236,r4:r4_231,r5:r5_233,r6:r6_240,r7:r7_241,r8:r8_235,r9:r9_239,sp:sp_230 - 0x00000004,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: ap:ap_259,fp:fp_258,r0:r0_255,r1:r1_517,r2:r2_253,r3:r3_257,r4:r4_252,r5:r5_254,r6:r6_261,r7:r7_262,r8:r8_256,r9:r9_260,sp:sp_251
	Mem265[r2_253 + 0x0000C688:word16] = (word16) r0_255
	Mem268[sp_251 - 0x00000004:word32] = fp_258 + -14
	word32 ap_272
	word32 fp_273
	word32 r2_276
	word32 sp_277
	Mem283[r2_276 + 0x0000C68A:word32] = fn0000E276(ap_259, fp_258, out r1_554, out r2_276, out ap_272, out fp_273, out sp_277)
	Mem286[sp_277 - 0x00000004:word32] = fp_273 + -10
	word32 ap_290
	word32 fp_291
	word32 r1_293
	word32 r2_294
	word32 sp_295
	word32 r0_292 = fn0000E276(ap_272, fp_273, out r1_293, out r2_294, out ap_290, out fp_291, out sp_295)
	Mem301[r2_294 + 0x0000C68E:word32] = r0_292
	Mem304[sp_295 - 0x00000004:word32] = fp_291 + -6
	word32 r4_309
	word32 r2_310
	word32 r5_311
	word32 r0_312
	word32 r8_313
	word32 r3_314
	word32 fp_315
	word32 r6_318
	word32 r7_319
	word32 r1_320
	call fn00000002 (retsize: 4;)
		uses: ap:ap_290,fp:fp_291,r0:r0_292,r1:r1_293,r2:r2_294,r3:r3_257,r4:r4_252,r5:r5_254,r6:r6_261,r7:r7_262,r8:r8_256,r9:r9_260,sp:sp_295 - 0x00000004,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: fp:fp_315,r0:r0_312,r1:r1_320,r2:r2_310,r3:r3_314,r4:r4_309,r5:r5_311,r6:r6_318,r7:r7_319,r8:r8_313
	Mem323[r2_310 + 0x0000C692:word16] = (word16) r0_312
	Mem325[r2_310 + 128:word32] = Mem323[r2_310 + 0x0000C68A:word32] + Mem323[r2_310 + 0x0000C68E:word32]
	word32 fp_332 = Mem325[fp_315 + 0x0000000C:word32]
	word32 ap_333 = Mem325[fp_315 + 0x00000008:word32]
	r1Out = r1_517
	r2Out = r2_310
	r3Out = r3_314
	r4Out = r4_309
	r5Out = r5_311
	r6Out = r6_318
	r7Out = r7_319
	r8Out = r8_313
	apOut = ap_333
	fpOut = fp_332
	spOut = fp_315 - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011B19:
	word32 fp_339 = Mem146[fp_161 + 0x0000000C:word32]
	word32 ap_340 = Mem146[fp_161 + 0x00000008:word32]
	r1Out = r1
	r2Out = r2_163
	r3Out = r3_164
	r4Out = r4_165
	r5Out = r5_166
	r6Out = r6_167
	r7Out = r7_168
	r8Out = r8_100
	apOut = ap_340
	fpOut = fp_339
	spOut = fp_161 - 0x00000004
	return 0x00000033
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A96:
	branch Mem134[r2_113 + 64:word32] != 0x00000000 l00011A9F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A9B:
	branch Mem134[r2_113:word32] == 0x00000000 l00011ACA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011A9F:
	word32 sp_350 = sp_138 - 0x00000004
	Mem352[sp_350:uint32] = 0x00000401
	Mem356[sp_350 - 0x00000004:word32] = Mem352[r2_113 + 0x0000C613:word32]
	Mem360[sp_350 - 0x00000008:word32] = r8_100 + 119
	Mem363[sp_350 - 0x0000000C:word32] = r2_113 + 1515
	word32 sp_367
	word32 r4_369
	word32 r2_370
	word32 r5_372
	word32 r0_374
	word32 r8_375
	word32 fp_381
	word32 ap_383
	word32 r9_385
	word32 r6_387
	word32 r7_393
	word32 r1_399
	call Mem363[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_150,fp:fp_143,r0:r0_152,r1:r1,r2:r2_133,r3:r3_377,r4:r4_127,r5:r5_158,r6:r6,r7:r7,r8:r8_189,r9:r9_195,sp:sp_350 - 0x0000000C,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: ap:ap_383,fp:fp_381,r0:r0_374,r1:r1_399,r2:r2_370,r4:r4_369,r5:r5_372,r6:r6_387,r7:r7_393,r8:r8_375,r9:r9_385,sp:sp_367
	Mem402[sp_367 - 0x00000004:word32] = r0_374
	Mem405[sp_367 - 0x00000008:word32] = r2_370 + 1515
	Mem407[sp_367 - 0x0000000C:word32] = r2_370
	word32 r3_408 = Mem407[r2_370 + 0x0000C839:word32]
	call r3_408 + 2 (retsize: 4;)
		uses: ap:ap_383,fp:fp_381,r0:r0_374,r1:r1_399,r2:r2_370,r3:r3_408,r4:r4_369,r5:r5_372,r6:r6_387,r7:r7_393,r8:r8_375,r9:r9_385,sp:sp_367 - 0x0000000C,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: ap:ap_420,fp:fp_419,r0:r0_416,r1:r1_424,r2:r2_414,r3:r3_418,r4:r4_413,r5:r5_415,r6:r6_422,r7:r7_423,r8:r8_417,r9:r9_421,sp:sp_412
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011ACA:
	word32 sp_427 = sp_138 - 0x00000004
	Mem429[sp_427:uint32] = 0x00000401
	Mem433[sp_427 - 0x00000004:word32] = r9_106 + 1608
	Mem437[sp_427 - 0x00000008:word32] = r2_113 + 1515
	word32 sp_441
	word32 r4_443
	word32 r2_444
	word32 r5_446
	word32 r0_448
	word32 r8_450
	word32 fp_454
	word32 ap_456
	word32 r9_457
	word32 r6_459
	word32 r7_461
	word32 r1_463
	call Mem437[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_455,fp:fp_453,r0:r0_447,r1:r1_462,r2:r2_435,r3:r3_451,r4:r4_442,r5:r5_445,r6:r6_458,r7:r7_460,r8:r8_449,r9:r9_431,sp:sp_427 - 0x00000008,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: ap:ap_456,fp:fp_454,r0:r0_448,r1:r1_463,r2:r2_444,r4:r4_443,r5:r5_446,r6:r6_459,r7:r7_461,r8:r8_450,r9:r9_457,sp:sp_441
	Mem466[sp_441 - 0x00000004:word32] = r0_448
	Mem469[sp_441 - 0x00000008:word32] = r2_444 + 1515
	Mem471[sp_441 - 0x0000000C:word32] = r2_444
	word32 r3_472 = Mem471[r2_444 + 0x0000C839:word32]
	word32 r4_477
	word32 r2_478
	word32 r5_479
	word32 r8_481
	word32 r3_482
	word32 fp_483
	word32 r6_486
	word32 r7_487
	word32 r1_488
	call r3_472 + 2 (retsize: 4;)
		uses: ap:ap_456,fp:fp_454,r0:r0_448,r1:r1_463,r2:r2_444,r3:r3_472,r4:r4_443,r5:r5_446,r6:r6_459,r7:r7_461,r8:r8_450,r9:r9_457,sp:sp_441 - 0x0000000C,Stack +FFFFFFDC:v14_15,Stack +FFFFFFE0:0x0000000000000000
		defs: fp:fp_483,r1:r1_488,r2:r2_478,r3:r3_482,r4:r4_477,r5:r5_479,r6:r6_486,r7:r7_487,r8:r8_481
	word32 fp_495 = Mem471[fp_483 + 0x0000000C:word32]
	word32 ap_496 = Mem471[fp_483 + 0x00000008:word32]
	r1Out = r1_488
	r2Out = r2_478
	r3Out = r3_482
	r4Out = r4_477
	r5Out = r5_479
	r6Out = r6_486
	r7Out = r7_487
	r8Out = r8_481
	apOut = ap_496
	fpOut = fp_495
	spOut = fp_483 - 0x00000004
	return 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000117AA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000117D4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011898:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00011C0A(word32 r0, word32 r1, word32 r3, word32 r4, word32 r5, word32 r6, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[8..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: ap fp r0 r1 r2 r3 r4 r5 r6 r7 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved:
fn00011C0A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C0A:
	word32 fp_15
	word32 r2_17
	word32 r3_18
	word32 r4_19
	word32 r5_20
	word32 r6_21
	word32 r7_22
	word32 sp_23
	word32 r0_16 = fn00011CDA(r0, r3, r4, r5, r6, ap, fp, out r2_17, out r3_18, out r4_19, out r5_20, out r6_21, out r7_22, out fp_15, out sp_23)
	branch r0_16 == 0x00000000 l00011C20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C20:
	word32 r1_41
	word32 r0_33 = Mem0[r2_17 + 1511:word32]
	branch (uint32) Mem0[r2_17 + 0x0000C659:byte] >=u 0x00000012 l00011C3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C3C:
	r1_41 = SEQ(SLICE(r1, word24, 8), 0x12)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C31:
	r1_41 = SEQ(SLICE(r1, word24, 8), Mem0[r2_17 + 0x0000C659:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C3F:
	Mem54[r0_33 + 12:uint32] = (uint32) (byte) r1_41
	word32 ap_56 = Mem54[r2_17 + 1511:word32]
	Mem58[ap_56 + 20:byte] = Mem54[ap_56 + 20:byte] & ~0x10
	branch Mem58[r2_17 + 40:word32] == 0x00000000 l00011C95
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C95:
	branch (Mem58[r2_17 + 0x0000C67A:word32] & 0x00000008) == 0x00000000 l00011CCC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C9D:
	word32 ap_64 = Mem58[Mem58[r2_17 + 1511:word32] + 12:word32]
	branch ap_64 == 0x00000000 l00011CB7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CA8:
	branch ap_64 == 0x00000006 l00011CB7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CAD:
	branch ap_64 == 0x0000000B l00011CB7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CB2:
	branch ap_64 != 0x00000005 l00011CCC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CCC:
	word32 ap_80 = Mem58[r2_17 + 1511:word32]
	Mem82[ap_80 + 20:byte] = Mem58[ap_80 + 20:byte] & ~0x20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CB7:
	word32 ap_88 = Mem58[r2_17 + 1511:word32]
	Mem90[ap_88 + 20:byte] = Mem58[ap_88 + 20:byte] | 0x20
	word32 ap_91 = Mem90[r2_17 + 1511:word32]
	Mem93[ap_91 + 20:byte] = Mem90[ap_91 + 20:byte] & ~0x10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CD5:
	word32 fp_108 = Mem107[fp_15 + 0x0000000C:word32]
	word32 ap_109 = Mem107[fp_15 + 0x00000008:word32]
	r1Out = r1_41
	r2Out = r2_17
	r3Out = r3_18
	r4Out = r4_19
	r5Out = r5_20
	r6Out = r6_21
	r7Out = r7_22
	apOut = ap_109
	fpOut = fp_108
	spOut = fp_15 - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C51:
	word32 ap_110 = Mem58[r2_17 + 1511:word32]
	word32 r0_111 = Mem58[ap_110 + 12:word32]
	branch r0_111 > 0x00000011 l00011C80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C80:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C5A_1:
	word32 r0_118
	word32 fp_119
	word32 ap_120
	word32 r2_121
	word32 r1_122
	word32 r4_124
	word32 r6_126
	word32 r5_128
	word32 r3_130
	word32 r7_132
	call 0x00011C5E + r0_111 * 0x00000002 (retsize: 4;)
		uses: ap:ap_110,fp:fp_15,r0:r0_111,r1:r1_51,r2:r2_17,r3:r3_18,r4:r4_19,r5:r5_20,r6:r6_21,r7:r7_22,sp:sp_23
		defs: ap:ap_120,fp:fp_119,r0:r0_118,r1:r1_122,r2:r2_121,r3:r3_130,r4:r4_124,r5:r5_128,r6:r6_126,r7:r7_132
	r1Out = r1_122
	r2Out = r2_121
	r3Out = r3_130
	r4Out = r4_124
	r5Out = r5_128
	r6Out = r6_126
	r7Out = r7_132
	apOut = ap_120
	fpOut = fp_119
	spOut = fp
	return r0_118
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011C1F:
	word32 fp_135 = Mem0[fp_15 + 0x0000000C:word32]
	word32 ap_136 = Mem0[fp_15 + 0x00000008:word32]
	r1Out = r1
	r2Out = r2_17
	r3Out = r3_18
	r4Out = r4_19
	r5Out = r5_20
	r6Out = r6_21
	r7Out = r7_22
	apOut = ap_136
	fpOut = fp_135
	spOut = fp_15 - 0x00000004
	return r0_16
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00011C0A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00011CDA(word32 r0, word32 r3, word32 r4, word32 r5, word32 r6, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: fp r0 r2 r3 r4 r5 r6 r7 sp
// Trashed: CVZN ap fp r0 r2 r3 r4 r5 r6 r7 sp
// Preserved:
fn00011CDA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CDA:
	word32 ap_19
	word32 fp_20
	word32 r2_22
	word32 r3_23
	word32 r4_24
	word32 r5_25
	word32 r6_26
	word32 r7_27
	word32 sp_28
	word32 r0_21 = fn0000D5BE(r0, r3, r4, r5, r6, ap, fp, out r2_22, out r3_23, out r4_24, out r5_25, out r6_26, out r7_27, out ap_19, out fp_20, out sp_28)
	branch r0_21 != 0x00000000 l00011CF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CF8:
	Mem38[r2_22 + 0x0000C658:byte] = Mem9[fp_20 + -46:byte]
	Mem40[r2_22 + 0x0000C659:byte] = Mem38[fp_20 + -45:byte]
	Mem42[r2_22 + 0x0000C65A:byte] = Mem40[fp_20 + -44:byte]
	Mem44[r2_22 + 0x0000C65B:byte] = Mem42[fp_20 + -43:byte]
	Mem47[sp_28 - 0x00000004:word32] = fp_20 + -42
	word32 sp_51
	word32 fp_52
	word32 r0_53
	word32 ap_54
	word32 r2_55
	word32 r3_56
	word32 r4_57
	word32 r6_58
	word32 r5_59
	word32 r7_60
	call r3_23 + 2 (retsize: 4;)
		uses: ap:ap_19,fp:fp_20,r0:r0_21,r2:r2_22,r3:r3_23,r4:r4_24,r5:r5_25,r6:r6_26,r7:r7_27,sp:sp_28 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_54,fp:fp_52,r0:r0_53,r2:r2_55,r3:r3_56,r4:r4_57,r5:r5_59,r6:r6_58,r7:r7_60,sp:sp_51
	Mem63[r2_55 + 0x0000C65C:word16] = (word16) r0_53
	Mem66[sp_51 - 0x00000004:word32] = fp_52 + -40
	word32 sp_70
	word32 fp_71
	word32 r0_72
	word32 ap_73
	word32 r2_74
	word32 r3_75
	word32 r4_76
	word32 r6_77
	word32 r5_78
	word32 r7_79
	call r3_56 + 2 (retsize: 4;)
		uses: ap:ap_54,fp:fp_52,r0:r0_53,r2:r2_55,r3:r3_56,r4:r4_57,r5:r5_59,r6:r6_58,r7:r7_60,sp:sp_51 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_73,fp:fp_71,r0:r0_72,r2:r2_74,r3:r3_75,r4:r4_76,r5:r5_78,r6:r6_77,r7:r7_79,sp:sp_70
	Mem82[r2_74 + 0x0000C65E:word16] = (word16) r0_72
	Mem85[sp_70 - 0x00000004:word32] = fp_71 + -38
	word32 sp_89
	word32 fp_90
	word32 r0_91
	word32 ap_92
	word32 r2_93
	word32 r3_94
	word32 r4_95
	word32 r6_96
	word32 r5_97
	word32 r7_98
	call r3_75 + 2 (retsize: 4;)
		uses: ap:ap_73,fp:fp_71,r0:r0_72,r2:r2_74,r3:r3_75,r4:r4_76,r5:r5_78,r6:r6_77,r7:r7_79,sp:sp_70 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_92,fp:fp_90,r0:r0_91,r2:r2_93,r3:r3_94,r4:r4_95,r5:r5_97,r6:r6_96,r7:r7_98,sp:sp_89
	Mem101[r2_93 + 0x0000C660:word16] = (word16) r0_91
	Mem104[sp_89 - 0x00000004:word32] = fp_90 + -36
	word32 sp_108
	word32 fp_109
	word32 r0_110
	word32 ap_111
	word32 r2_112
	word32 r3_113
	word32 r4_114
	word32 r6_115
	word32 r5_116
	word32 r7_117
	call r3_94 + 2 (retsize: 4;)
		uses: ap:ap_92,fp:fp_90,r0:r0_91,r2:r2_93,r3:r3_94,r4:r4_95,r5:r5_97,r6:r6_96,r7:r7_98,sp:sp_89 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_111,fp:fp_109,r0:r0_110,r2:r2_112,r3:r3_113,r4:r4_114,r5:r5_116,r6:r6_115,r7:r7_117,sp:sp_108
	Mem120[r2_112 + 0x0000C662:word16] = (word16) r0_110
	Mem123[sp_108 - 0x00000004:word32] = fp_109 + -34
	word32 sp_127
	word32 fp_128
	word32 r0_129
	word32 ap_130
	word32 r2_131
	word32 r3_132
	word32 r4_133
	word32 r6_134
	word32 r5_135
	word32 r7_136
	call r4_114 + 2 (retsize: 4;)
		uses: ap:ap_111,fp:fp_109,r0:r0_110,r2:r2_112,r3:r3_113,r4:r4_114,r5:r5_116,r6:r6_115,r7:r7_117,sp:sp_108 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_130,fp:fp_128,r0:r0_129,r2:r2_131,r3:r3_132,r4:r4_133,r5:r5_135,r6:r6_134,r7:r7_136,sp:sp_127
	Mem139[r2_131 + 0x0000C664:word32] = r0_129
	Mem142[sp_127 - 0x00000004:word32] = fp_128 + -30
	word32 sp_146
	word32 fp_147
	word32 r0_148
	word32 ap_149
	word32 r2_150
	word32 r3_151
	word32 r4_152
	word32 r6_153
	word32 r5_154
	word32 r7_155
	call r4_133 + 2 (retsize: 4;)
		uses: ap:ap_130,fp:fp_128,r0:r0_129,r2:r2_131,r3:r3_132,r4:r4_133,r5:r5_135,r6:r6_134,r7:r7_136,sp:sp_127 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_149,fp:fp_147,r0:r0_148,r2:r2_150,r3:r3_151,r4:r4_152,r5:r5_154,r6:r6_153,r7:r7_155,sp:sp_146
	Mem158[r2_150 + 0x0000C668:word32] = r0_148
	Mem161[sp_146 - 0x00000004:word32] = fp_147 + -26
	word32 sp_165
	word32 fp_166
	word32 r0_167
	word32 ap_168
	word32 r2_169
	word32 r3_170
	word32 r4_171
	word32 r6_172
	word32 r5_173
	word32 r7_174
	call r4_152 + 2 (retsize: 4;)
		uses: ap:ap_149,fp:fp_147,r0:r0_148,r2:r2_150,r3:r3_151,r4:r4_152,r5:r5_154,r6:r6_153,r7:r7_155,sp:sp_146 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_168,fp:fp_166,r0:r0_167,r2:r2_169,r3:r3_170,r4:r4_171,r5:r5_173,r6:r6_172,r7:r7_174,sp:sp_165
	Mem177[r2_169 + 0x0000C66C:word32] = r0_167
	Mem180[sp_165 - 0x00000004:word32] = fp_166 + -22
	word32 sp_184
	word32 fp_185
	word32 r0_186
	word32 ap_187
	word32 r2_188
	word32 r3_189
	word32 r4_190
	word32 r6_191
	word32 r5_192
	word32 r7_193
	call r3_170 + 2 (retsize: 4;)
		uses: ap:ap_168,fp:fp_166,r0:r0_167,r2:r2_169,r3:r3_170,r4:r4_171,r5:r5_173,r6:r6_172,r7:r7_174,sp:sp_165 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_187,fp:fp_185,r0:r0_186,r2:r2_188,r3:r3_189,r4:r4_190,r5:r5_192,r6:r6_191,r7:r7_193,sp:sp_184
	Mem196[r2_188 + 0x0000C670:word16] = (word16) r0_186
	Mem199[sp_184 - 0x00000004:word32] = fp_185 + -20
	word32 sp_203
	word32 fp_204
	word32 r0_205
	word32 ap_206
	word32 r2_207
	word32 r3_208
	word32 r4_209
	word32 r6_210
	word32 r5_211
	word32 r7_212
	call r3_189 + 2 (retsize: 4;)
		uses: ap:ap_187,fp:fp_185,r0:r0_186,r2:r2_188,r3:r3_189,r4:r4_190,r5:r5_192,r6:r6_191,r7:r7_193,sp:sp_184 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_206,fp:fp_204,r0:r0_205,r2:r2_207,r3:r3_208,r4:r4_209,r5:r5_211,r6:r6_210,r7:r7_212,sp:sp_203
	Mem215[r2_207 + 0x0000C672:word16] = (word16) r0_205
	Mem218[sp_203 - 0x00000004:word32] = fp_204 + -18
	word32 sp_222
	word32 fp_223
	word32 r0_224
	word32 ap_225
	word32 r2_226
	word32 r3_227
	word32 r4_228
	word32 r6_229
	word32 r5_230
	word32 r7_231
	call r3_208 + 2 (retsize: 4;)
		uses: ap:ap_206,fp:fp_204,r0:r0_205,r2:r2_207,r3:r3_208,r4:r4_209,r5:r5_211,r6:r6_210,r7:r7_212,sp:sp_203 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_225,fp:fp_223,r0:r0_224,r2:r2_226,r3:r3_227,r4:r4_228,r5:r5_230,r6:r6_229,r7:r7_231,sp:sp_222
	Mem234[r2_226 + 0x0000C674:word16] = (word16) r0_224
	Mem237[sp_222 - 0x00000004:word32] = fp_223 + -16
	word32 sp_241
	word32 fp_242
	word32 r0_243
	word32 ap_244
	word32 r2_245
	word32 r3_246
	word32 r4_247
	word32 r6_248
	word32 r5_249
	word32 r7_250
	call r3_227 + 2 (retsize: 4;)
		uses: ap:ap_225,fp:fp_223,r0:r0_224,r2:r2_226,r3:r3_227,r4:r4_228,r5:r5_230,r6:r6_229,r7:r7_231,sp:sp_222 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_244,fp:fp_242,r0:r0_243,r2:r2_245,r3:r3_246,r4:r4_247,r5:r5_249,r6:r6_248,r7:r7_250,sp:sp_241
	Mem253[r2_245 + 0x0000C676:word16] = (word16) r0_243
	Mem256[sp_241 - 0x00000004:word32] = fp_242 + -14
	word32 sp_260
	word32 fp_261
	word32 r0_262
	word32 ap_263
	word32 r2_264
	word32 r3_265
	word32 r4_266
	word32 r6_267
	word32 r5_268
	word32 r7_269
	call r3_246 + 2 (retsize: 4;)
		uses: ap:ap_244,fp:fp_242,r0:r0_243,r2:r2_245,r3:r3_246,r4:r4_247,r5:r5_249,r6:r6_248,r7:r7_250,sp:sp_241 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_263,fp:fp_261,r0:r0_262,r2:r2_264,r3:r3_265,r4:r4_266,r5:r5_268,r6:r6_267,r7:r7_269,sp:sp_260
	Mem272[r2_264 + 0x0000C678:word16] = (word16) r0_262
	Mem275[sp_260 - 0x00000004:word32] = fp_261 + -12
	word32 sp_279
	word32 fp_280
	word32 r0_281
	word32 ap_282
	word32 r2_283
	word32 r3_284
	word32 r4_285
	word32 r6_286
	word32 r5_287
	word32 r7_288
	call r4_266 + 2 (retsize: 4;)
		uses: ap:ap_263,fp:fp_261,r0:r0_262,r2:r2_264,r3:r3_265,r4:r4_266,r5:r5_268,r6:r6_267,r7:r7_269,sp:sp_260 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: ap:ap_282,fp:fp_280,r0:r0_281,r2:r2_283,r3:r3_284,r4:r4_285,r5:r5_287,r6:r6_286,r7:r7_288,sp:sp_279
	Mem291[r2_283 + 0x0000C67A:word32] = r0_281
	Mem294[sp_279 - 0x00000004:word32] = fp_280 + -8
	word32 fp_299
	word32 r0_300
	word32 r2_302
	word32 r3_303
	word32 r4_304
	word32 r6_305
	word32 r5_306
	word32 r7_307
	call r4_285 + 2 (retsize: 4;)
		uses: ap:ap_282,fp:fp_280,r0:r0_281,r2:r2_283,r3:r3_284,r4:r4_285,r5:r5_287,r6:r6_286,r7:r7_288,sp:sp_279 - 0x00000004,Stack +FFFFFFCC:fp + -46,Stack +FFFFFFD0:0x0000002A
		defs: fp:fp_299,r0:r0_300,r2:r2_302,r3:r3_303,r4:r4_304,r5:r5_306,r6:r6_305,r7:r7_307
	Mem310[r2_302 + 0x0000C67E:word32] = r0_300
	word32 fp_317 = Mem310[fp_299 + 0x0000000C:word32]
	r2Out = r2_302
	r3Out = r3_303
	r4Out = r4_304
	r5Out = r5_306
	r6Out = r6_305
	r7Out = r7_307
	fpOut = fp_317
	spOut = fp_299 - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011CF4:
	word32 fp_324 = Mem9[fp_20 + 0x0000000C:word32]
	r2Out = r2_22
	r3Out = r3_23
	r4Out = r4_24
	r5Out = r5_25
	r6Out = r6_26
	r7Out = r7_27
	fpOut = fp_324
	spOut = fp_20 - 0x00000004
	return 0x00000033
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00011CDA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00011ED6(word32 r0, word32 fp, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp:[0..31] r0:[0..31]
// LiveOut: fp r0 sp
// Trashed: CVZN ap fp r0 r1 sp
// Preserved:
fn00011ED6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011ED6:
	word32 r1_6 = Mem0[r0 + 0x0000C811:word32] & ~0xFFFF0000
	fpOut = Mem0[fp + 0x0000000C:word32]
	spOut = fp - 0x00000004
	return (uint32) SLICE(((r1_6 | 0x00000002) ^ 0x00000001) * (r1_6 | 0x00000002), ui24, 8) & ~0xFFFFFF00
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00011ED6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00011F06(word32 r2, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r3Out, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r2:[0..31]
// LiveOut: fp r0 r1 r3
// Trashed: CVZN ap fp r0 r1 r3 sp
// Preserved:
fn00011F06_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00011F06:
	Mem12[r2 + 0x0000C809:word32] = (uint32) Mem0[r2 + 0x0000C80A:ui24] ^ Mem0[Mem0[r2 + 0x0000C5EB:word32] + ((Mem0[ap + 4:word32] ^ Mem0[r2 + 0x0000C809:word32]) & ~0xFFFFFF00) * 4:word32]
	Mem15[r2 + 0x0000C80D:word32] = Mem12[r2 + 0x0000C80D:word32] + (Mem12[r2 + 0x0000C809:word32] & ~0xFFFFFF00)
	Mem19[r2 + 0x0000C80D:word32] = Mem15[r2 + 0x0000C80D:word32] * 0x08088405 + 0x00000001
	word32 r3_23 = Mem19[r2 + 0x0000C5EB:word32]
	word32 r1_24 = (uint32) Mem19[r2 + 0x0000C812:ui24]
	Mem26[r2 + 0x0000C811:word32] = r1_24 ^ Mem19[r3_23 + (((uint32) Mem19[r2 + 0x0000C810:byte] ^ Mem19[r2 + 0x0000C811:word32]) & ~0xFFFFFF00) * 4:word32]
	word32 r0_27 = Mem26[ap + 4:word32]
	word32 fp_33 = Mem26[fp + 0x0000000C:word32]
	r1Out = r1_24
	r3Out = r3_23
	fpOut = fp_33
	return r0_27
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00011F06_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000121EA(word32 r0, word32 r1, word32 r2, word32 r3, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000121EA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000121EA:
	word32 v8_7 = Mem0[r3 + 0x0000C815:word32]
	word32 v10_11 = Mem8[ap + 4:word32]
	word32 ap_25
	word32 fp_26
	word32 r1_28
	word32 r2_29
	word32 r3_30
	word32 r5_32
	word32 r6_33
	word32 r7_34
	word32 r8_35
	word32 r9_36
	word32 sp_37
	word32 r0_27 = fn00012252(r0, r1, r2, r3, r5, r6, r7, r8, r9, ap, fp, out r1_28, out r2_29, out r3_30, out r5_32, out r6_33, out r7_34, out r8_35, out r9_36, out ap_25, out fp_26, out sp_37)
	branch r0_27 == 0x00000000 l0001224B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012206:
	Mem49[sp_37 - 0x00000004:word32] = Mem12[r3_30 + 0x0000C815:word32]
	word32 sp_53
	word32 r3_54
	word32 ap_55
	word32 r0_56
	word32 r4_57
	word32 r2_58
	word32 fp_59
	word32 r5_60
	word32 r1_61
	word32 r7_62
	word32 r6_63
	word32 r9_64
	word32 r8_65
	call Mem49[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap_25,fp:fp_26,r0:r0_27,r1:r1_28,r2:r2_29,r3:r3_30,r4:r0_27,r5:r5_32,r6:r6_33,r7:r7_34,r8:r8_35,r9:r9_36,sp:sp_37 - 0x00000004,Stack +FFFFFFF8:v10_11,Stack +FFFFFFFC:v8_7
		defs: ap:ap_55,fp:fp_59,r0:r0_56,r1:r1_61,r2:r2_58,r3:r3_54,r4:r4_57,r5:r5_60,r6:r6_63,r7:r7_62,r8:r8_65,r9:r9_64,sp:sp_53
	Mem69[sp_53 - 0x00000004:word32] = r0_56 + 0x00000001
	word32 sp_73
	word32 r3_74
	word32 ap_75
	word32 r0_76
	word32 fp_79
	word32 r5_80
	word32 r7_82
	word32 r9_84
	word32 r8_85
	call Mem69[0x000192B4:word32] + 2 (retsize: 4;)
		uses: ap:ap_55,fp:fp_59,r0:r0_56 + 0x00000001,r1:r1_61,r2:r2_58,r3:r3_54,r4:r4_57,r5:r5_60,r6:r6_63,r7:r7_62,r8:r8_65,r9:r9_64,sp:sp_53 - 0x00000004,Stack +FFFFFFF8:v10_11,Stack +FFFFFFFC:v8_7
		defs: ap:ap_75,fp:fp_79,r0:r0_76,r3:r3_74,r5:r5_80,r7:r7_82,r8:r8_85,r9:r9_84,sp:sp_73
	branch r0_76 != 0x00000000 l00012227
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012227:
	Mem94[sp_73 - 0x00000004:word32] = Mem69[r3_74 + 0x0000C815:word32]
	Mem96[sp_73 - 0x00000008:word32] = r0_76
	word32 ap_100
	word32 fp_101
	word32 r1_103
	word32 r2_104
	word32 r5_106
	word32 r6_107
	word32 sp_108
	word32 r0_102 = fn0000E2A6(r0_76, r5_80, r7_82, ap_75, fp_79, out r1_103, out r2_104, out r5_106, out r6_107, out ap_100, out fp_101, out sp_108)
	Mem114[sp_108 - 0x00000004:word32] = r0_102
	Mem117[sp_108 - 0x00000008:word32] = Mem114[ap_100 + 4:word32]
	word32 ap_121
	word32 fp_122
	word32 r1_124
	word32 r2_125
	word32 r3_126
	word32 r5_128
	word32 r6_129
	word32 r7_130
	word32 r8_131
	word32 r9_132
	word32 sp_133
	word32 r0_123 = fn00012252(r0_102, r1_103, r2_104, r3_74, r5_106, r6_107, r7_82, r8_85, r9_84, ap_100, fp_101, out r1_124, out r2_125, out r3_126, out r5_128, out r6_129, out r7_130, out r8_131, out r9_132, out ap_121, out fp_122, out sp_133)
	Mem140[sp_133 - 0x00000004:word32] = r2_125
	call Mem140[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_121,fp:fp_122,r0:r0_123,r1:r1_124,r2:r2_125,r3:r3_126,r4:r0_123,r5:r5_128,r6:r6_129,r7:r7_130,r8:r8_131,r9:r9_132,sp:sp_133 - 0x00000004,Stack +FFFFFFF8:v10_11,Stack +FFFFFFFC:v8_7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001224B:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012223:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000121EA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00012252(word32 r0, word32 r1, word32 r2, word32 r3, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: ap fp r0 r1 r2 r3 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00012252_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012252:
	word32 r4_18 = Mem0[ap + 8:word32]
	Mem9[r2 + 0x0000C809:word32] = 0x12345678
	Mem11[r2 + 0x0000C80D:word32] = 0x23456789
	Mem13[r2 + 0x0000C811:word32] = 0x34567890
	branch Mem13[r4_18:byte] != 0x00 l00012288
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012288:
	r5 = (int32) Mem19[r4_18:int8]
	Mem27[r2 + 0x0000C809:word32] = (uint32) Mem19[r2 + 0x0000C80A:ui24] ^ Mem19[Mem19[r2 + 0x0000C5EB:word32] + ((r5 ^ Mem19[r2 + 0x0000C809:word32]) & ~0xFFFFFF00) * 4:word32]
	Mem30[r2 + 0x0000C80D:word32] = Mem27[r2 + 0x0000C80D:word32] + (Mem27[r2 + 0x0000C809:word32] & ~0xFFFFFF00)
	Mem34[r2 + 0x0000C80D:word32] = Mem30[r2 + 0x0000C80D:word32] * 0x08088405 + 0x00000001
	r0 = ((uint32) Mem34[r2 + 0x0000C810:byte] ^ Mem34[r2 + 0x0000C811:word32]) & ~0xFFFFFF00
	r3 = Mem34[r2 + 0x0000C5EB:word32]
	r1 = (uint32) Mem34[r2 + 0x0000C812:ui24]
	Mem41[r2 + 0x0000C811:word32] = r1 ^ Mem34[r3 + r0 * 4:word32]
	r4_18 = r4_18 + 0x00000001
	branch Mem41[r4_18:byte] == 0x00 l00012312
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001230F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012285:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012312:
	word32 r2_70
	word32 fp_83
	word32 r9_95
	word32 r8_198
	call Mem61[0x0001929C:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0_74,r1:r1_80,r2:r2,r3:r3_77,r4:r4_67,r5:r5_71,r6:r6,r7:r7,r8:r8,r9:r9,sp:fp - 0x0000002C,Stack +0004:fp + -16,Stack +0008:Mem50[ap + 4:word32],Stack +000C:0x0000000C
		defs: fp:fp_83,r2:r2_70,r8:r8_99,r9:r9_95
	word32 r7_101 = 0x00000000
	word32 r4_102 = fp_83 + -16
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012328:
	word32 r6_110 = Mem107[r2_70 + 0x0000C811:word32] & ~0xFFFF0000
	Mem117[r4_102:byte] = (byte) (uint32) Mem107[r4_102:byte] ^ (byte) ((uint32) SLICE(((r6_110 | 0x00000002) ^ 0x00000001) * (r6_110 | 0x00000002), ui24, 8) & ~0xFFFFFF00)
	Mem124[r2_70 + 0x0000C809:word32] = (uint32) Mem117[r2_70 + 0x0000C80A:ui24] ^ Mem117[Mem117[r2_70 + 0x0000C5EB:word32] + (((uint32) Mem117[r4_102:byte] ^ Mem117[r2_70 + 0x0000C809:word32]) & ~0xFFFFFF00) * 4:word32]
	Mem127[r2_70 + 0x0000C80D:word32] = Mem124[r2_70 + 0x0000C80D:word32] + (Mem124[r2_70 + 0x0000C809:word32] & ~0xFFFFFF00)
	Mem131[r2_70 + 0x0000C80D:word32] = Mem127[r2_70 + 0x0000C80D:word32] * 0x08088405 + 0x00000001
	word32 r3_135 = Mem131[r2_70 + 0x0000C5EB:word32]
	word32 r1_136 = (uint32) Mem131[r2_70 + 0x0000C812:ui24]
	Mem138[r2_70 + 0x0000C811:word32] = r1_136 ^ Mem131[r3_135 + (((uint32) Mem131[r2_70 + 0x0000C810:byte] ^ Mem131[r2_70 + 0x0000C811:word32]) & ~0xFFFFFF00) * 4:word32]
	r4_102 = r4_102 + 0x00000001
	r7_101 = r7_101 + 0x00000001
	branch r7_101 <= 0x0000000B l00012328
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000123DA:
	word32 r4_154
	word32 r5_149 = (uint32) (word16) SEQ(SLICE(r9_95, word16, 16), (uint16) Mem138[fp_83 + -5:byte])
	branch (Mem138[Mem138[r2_70 + 1511:word32] + 20:word32] & 0x00000002) == 0x00000000 l000123FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000123FC:
	r4_154 = (uint32) Mem138[r2_70 + 0x0000C64B:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000123EB:
	r3_135 = (uint32) Mem138[r2_70 + 0x0000C644:word16]
	r4_154 = r3_135 >> 8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012403:
	branch r5_149 == r4_154 l0001240C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001240C:
	word32 r1_174
	word32 r4_169 = Mem138[r2_70 + 0x0000C5FB:word32]
	word32 r3_170 = Mem138[r2_70 + 132:word32]
	branch r4_169 <= r3_170 l00012424
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012424:
	r1_174 = r4_169
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001241D:
	r1_174 = r3_170
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012427:
	word32 r3_183 = r1_174
	word32 r5_186 = Mem138[r2_70 + 0x0000C5F7:word32]
	word32 r6_188 = r1_174 - 0x00000001
	branch r1_174 != 0x00000000 l0001243F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001243F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012440:
	word32 r8_197 = Mem194[r2_70 + 0x0000C811:word32] & ~0xFFFF0000
	Mem204[r5_186:byte] = (byte) (uint32) Mem194[r5_186:byte] ^ (byte) ((uint32) SLICE(((r8_197 | 0x00000002) ^ 0x00000001) * (r8_197 | 0x00000002), ui24, 8) & ~0xFFFFFF00)
	Mem211[r2_70 + 0x0000C809:word32] = (uint32) Mem204[r2_70 + 0x0000C80A:ui24] ^ Mem204[Mem204[r2_70 + 0x0000C5EB:word32] + (((uint32) Mem204[r5_186:byte] ^ Mem204[r2_70 + 0x0000C809:word32]) & ~0xFFFFFF00) * 4:word32]
	Mem214[r2_70 + 0x0000C80D:word32] = Mem211[r2_70 + 0x0000C80D:word32] + (Mem211[r2_70 + 0x0000C809:word32] & ~0xFFFFFF00)
	Mem218[r2_70 + 0x0000C80D:word32] = Mem214[r2_70 + 0x0000C80D:word32] * 0x08088405 + 0x00000001
	r3_183 = Mem218[r2_70 + 0x0000C5EB:word32]
	r1_174 = (uint32) Mem218[r2_70 + 0x0000C812:ui24]
	Mem225[r2_70 + 0x0000C811:word32] = r1_174 ^ Mem218[r3_183 + (((uint32) Mem218[r2_70 + 0x0000C810:byte] ^ Mem218[r2_70 + 0x0000C811:word32]) & ~0xFFFFFF00) * 4:word32]
	r8_198 = r8_197 | 0x00000002
	r5_186 = r5_186 + 0x00000001
	r6_188 = r6_188 - 0x00000001
	branch r6_188 == 0x00000000 l000124F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000124F5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001243C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000124F8:
	word32 fp_245 = Mem244[fp_83 + 0x0000000C:word32]
	word32 ap_246 = Mem244[fp_83 + 0x00000008:word32]
	r1Out = r1_174
	r2Out = <invalid>
	r3Out = r3_183
	r5Out = r5_186
	r6Out = r6_188
	r7Out = <invalid>
	r8Out = r8_198
	r9Out = <invalid>
	apOut = ap_246
	fpOut = fp_245
	spOut = <invalid>
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012408:
	word32 fp_250 = Mem138[fp_83 + 0x0000000C:word32]
	word32 ap_251 = Mem138[fp_83 + 0x00000008:word32]
	r1Out = r1_136
	r2Out = <invalid>
	r3Out = r3_135
	r5Out = r5_149
	r6Out = r6_110 | 0x00000002
	r7Out = <invalid>
	r8Out = r8_198
	r9Out = <invalid>
	apOut = ap_251
	fpOut = fp_250
	spOut = <invalid>
	return -0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00012252_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000124FE(word32 r0, word32 r2, word32 ap, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] pc:[0..31] r0:[0..31] r2:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn000124FE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000124FE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000124FE:
	word32 sp_23 = fp - 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012503:
	word32 sp_8 = sp_23 - 0x00000008
	Mem10[sp_8:word64] = 0x0000000000000000
	Mem14[sp_8 - 0x00000004:word32] = r2 + 8
	Mem16[sp_8 - 0x00000008:word32] = r2
	call Mem16[pc:word32] + 2 (retsize: 4;)
		uses: ap:ap_28,pc:pc_20 + 0x00000004,r0:r0_26,r2:r2_12,sp:sp_8 - 0x00000008
		defs: ap:ap_29,pc:pc_25,r0:r0_27,r2:r2_24,sp:sp_23
	real32 v15_31 = Mem16[Mem16[sp_23 + 32766:word32]:real32]
	Mem32[Mem16[r0 + -23984:word32]:real32] = v15_31
	branch v15_31 > 0.0F l00012503
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001251B:
	Mem37[Mem32[r0 + 5282:word32]:real32] = 0.8125F
	Mem40[ap - 0x00000004:real32] = 0.75F
	Mem44[sp_23 - 0x00000004:word32] = ap - 0x0000000C
	Mem46[sp_23 - 0x00000008:word32] = 0x00000008
	Mem49[sp_23 - 0x0000000C:word32] = r2 + 24
	Mem52[sp_23 - 0x00000014:word64] = 0x0000000000000000
	Mem55[sp_23 - 0x00000018:word32] = r2 + 10
	Mem57[sp_23 - 0x0000001C:word32] = 0x00000027
	Mem60[sp_23 - 0x00000020:int32] = (int32) Mem57[r2 + 8:int16]
	Mem62[sp_23 - 0x00000024:word32] = 0x00000000
	call Mem62[pc:word32] + 2 (retsize: 4;)
		uses: ap:ap_29 - 0x0000000C,pc:pc_25 + 0x00000004,r0:r0_27,r2:r2_24,sp:sp_23 - 0x00000024
	__halt()
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000125CA(word32 r0, word32 r2, word32 ap, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] pc:[0..31] r0:[0..31] r2:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
l000125EE:
	def sp
	def fp
	def dwLoc0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000125F0:
	pc_37 = PHI((pc, l000125EE), (pc_38, l000125F0))
	r0_35 = PHI((r0, l000125EE), (r0_36, l000125F0))
	ap_32 = PHI((ap, l000125EE), (ap_33, l000125F0))
	r2_24 = PHI((r2, l000125EE), (r2_34, l000125F0))
	fp_20 = PHI((fp, l000125EE), (fp_31, l000125F0))
	sp_16 = PHI((sp, l000125EE), (sp_30, l000125F0))
	sp_17 = sp_16 - 0x00000004
	Mem18[sp_17:word32] = 0x00000001
	Mem22[sp_17 - 0x00000004:word32] = fp_20 + -6
	Mem26[sp_17 - 0x00000008:word32] = Mem22[r2_24:word32]
	call Mem26[0x00019270:word32] + 2 (retsize: 4;)
		uses: ap:ap_32,fp:fp_20,pc:pc_37,r0:r0_35,r2:r2_24,sp:sp_17 - 0x00000008,Stack +FFFFFFF8:dwLoc0C
		defs: ap:ap_33,fp:fp_31,pc:pc_38,r0:r0_36,r2:r2_34,sp:sp_30
	branch Mem26[fp_31 + -6:byte] != 0x0A l000125F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012604:
	Mem44[sp_30 - 0x00000004:word32] = 0x00000001
	fn000124FE(r0_36, r2_34, ap_33, pc_38)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000125CA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000125CA_entry:
	def r2
	def pc
	def r0
	def ap
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000125CA:
	fn000124FE(r0, r2, ap, pc)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00012616(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r8, word32 r9, word32 r10, word32 r11, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00012616_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012616:
	word32 sp_15
	word32 r7_16
	word32 r8_17
	word32 r0_19
	word32 r6_21
	word32 fp_23
	word32 ap_25
	word32 r9_27
	word32 r11_29
	word32 r5_31
	word32 r4_33
	word32 r3_35
	word32 r2_37
	word32 r10_39
	word32 r1_41
	call Mem11[0x00019248:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r1:r1,r10:r10,r11:r11,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,r7:Mem0[0x00019350:word32],r8:r8,r9:r9,sp:fp - 0x00000014,Stack +0004:0x00000000,Stack +0008:r8 + 12
		defs: ap:ap_25,fp:fp_23,r0:r0_19,r1:r1_41,r10:r10_39,r11:r11_29,r2:r2_37,r3:r3_35,r4:r4_33,r5:r5_31,r6:r6_21,r7:r7_16,r8:r8_17,r9:r9_27,sp:sp_15
	Mem44[sp_15 - 0x00000004:word32] = r0_19
	word32 sp_48
	word32 r7_49
	word32 r8_50
	word32 r0_51
	word32 fp_53
	word32 ap_54
	word32 r9_55
	word32 r11_56
	word32 r5_57
	word32 r4_58
	word32 r3_59
	word32 r2_60
	word32 r10_61
	word32 r1_62
	call Mem44[0x0001924C:word32] + 2 (retsize: 4;)
		uses: ap:ap_25,fp:fp_23,r0:r0_19,r1:r1_41,r10:r10_39,r11:r11_29,r2:r2_37,r3:r3_35,r4:r4_33,r5:r5_31,r6:r6_21,r7:r7_16,r8:r8_17,r9:r9_27,sp:sp_15 - 0x00000004,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
		defs: ap:ap_54,fp:fp_53,r0:r0_51,r1:r1_62,r10:r10_61,r11:r11_56,r2:r2_60,r3:r3_59,r4:r4_58,r5:r5_57,r7:r7_49,r8:r8_50,r9:r9_55,sp:sp_48
	branch r0_51 != 0x00000000 l00012644
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012644:
	Mem71[sp_48 - 0x00000004:word32] = Mem44[Mem44[0x00019374:word32]:word32]
	word32 sp_109
	word32 r7_111
	word32 ap_129
	word32 r8_121
	word32 r0_123
	word32 r6_125
	word32 fp_127
	word32 r2_140
	word32 r10_142
	word32 r1_144
	call Mem71[0x00019294:word32] + 2 (retsize: 4;)
		uses: ap:ap_54,fp:fp_53,r0:r0_51,r1:r1_62,r10:r10_61,r11:r11_56,r2:r2_60,r3:r3_59,r4:r4_58,r5:r5_57,r6:r0_51,r7:r7_49,r8:r8_50,r9:r9_55,sp:sp_48 - 0x00000004,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
		defs: ap:ap_81,fp:fp_80,r0:r0_78,r1:r1_89,r10:r10_88,r2:r2_87,r6:r6_79,r7:r7_76,r8:r8_77,sp:sp_75
	Mem93[sp_109 + 4:word32] = Mem71[0x00019258:word32]
	word32 r11_132 = Mem93[0x00019294:word32]
	word32 r5_134 = Mem93[0x00019254:word32]
	word32 r4_136 = Mem93[ap_129 + 12:word32]
	Mem99[sp_109:word32] = Mem93[ap_129 + 8:word32]
	word32 r9_103 = r8_121 + 14
	word32 r3_138 = ap_129 + 8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012680:
	branch Mem104[r9_103:byte] == 0x00 l0001268C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012684:
	word32 sp_110 = sp_109 - 0x00000004
	Mem113[sp_110:word32] = Mem104[r7_111:word32]
	Mem115[sp_110 - 0x00000004:word32] = r9_103
	call Mem115[sp_110 + 0x00000008:word32] + 2 (retsize: 4;)
		uses: ap:ap_129,fp:fp_127,r0:r0_123,r1:r1_144,r10:r10_142,r11:r11_132,r2:r2_140,r3:r3_138,r4:r4_136,r5:r5_134,r6:r6_125,r7:r7_111,r8:r8_121,r9:r9_103,sp:sp_110 - 0x00000004,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
		defs: ap:ap_130,fp:fp_128,r0:r0_124,r1:r1_145,r10:r10_143,r11:r11_133,r2:r2_141,r3:r3_139,r4:r4_137,r5:r5_135,r6:r6_126,r7:r7_120,r8:r8_122,r9:r9_131,sp:sp_119
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001268C:
	word32 sp_148 = sp_109 - 0x00000004
	Mem152[sp_148:word32] = Mem150[r7_111:word32]
	Mem156[sp_148 - 0x00000004:word32] = Mem152[ap_129 + 4:word32]
	word32 sp_160
	word32 r7_161
	word32 r8_163
	word32 r0_165
	word32 r6_167
	word32 fp_169
	word32 ap_170
	word32 r9_172
	word32 r11_174
	word32 r5_176
	word32 r4_178
	word32 r3_180
	word32 r2_182
	word32 r10_184
	word32 r1_186
	call Mem156[sp_148 + 0x00000008:word32] + 2 (retsize: 4;)
		uses: ap:ap_154,fp:fp_168,r0:r0_164,r1:r1_185,r10:r10_183,r11:r11_173,r2:r2_181,r3:r3_179,r4:r4_177,r5:r5_175,r6:r6_166,r7:r7_149,r8:r8_162,r9:r9_171,sp:sp_148 - 0x00000004,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
		defs: ap:ap_170,fp:fp_169,r0:r0_165,r1:r1_186,r10:r10_184,r11:r11_174,r2:r2_182,r3:r3_180,r4:r4_178,r5:r5_176,r6:r6_167,r7:r7_161,r8:r8_163,r9:r9_172,sp:sp_160
	Mem190[sp_160 - 0x00000004:word32] = Mem156[r7_161:word32]
	word32 sp_194
	word32 r7_195
	word32 r8_196
	word32 r0_197
	word32 r6_198
	word32 fp_199
	word32 ap_200
	word32 r9_201
	word32 r11_202
	word32 r5_203
	word32 r4_204
	word32 r3_205
	word32 r10_207
	word32 r1_208
	call r11_174 + 2 (retsize: 4;)
		uses: ap:ap_170,fp:fp_169,r0:r0_165,r1:r1_186,r10:r10_184,r11:r11_174,r2:r2_182,r3:r3_180,r4:r4_178,r5:r5_176,r6:r6_167,r7:r7_161,r8:r8_163,r9:r9_172,sp:sp_160 - 0x00000004,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
		defs: ap:ap_200,fp:fp_199,r0:r0_197,r1:r1_208,r10:r10_207,r11:r11_202,r3:r3_205,r4:r4_204,r5:r5_203,r6:r6_198,r7:r7_195,r8:r8_196,r9:r9_201,sp:sp_194
	Mem212[sp_194 - 0x00000004:word32] = 0x00000000
	word32 sp_216
	word32 r6_220
	word32 r5_225
	word32 r7_217
	word32 r8_218
	word32 fp_221
	word32 ap_222
	word32 r9_223
	word32 r11_224
	word32 r4_226
	word32 r3_227
	word32 r10_229
	word32 r1_230
	word32 r0_219
	word32 r2_228
	call r10_207 + 2 (retsize: 4;)
		uses: ap:ap_200,fp:fp_199,r0:r0_197,r1:r1_208,r10:r10_207,r11:r11_202,r2:0x00000000,r3:r3_205,r4:r4_204,r5:r5_203,r6:r6_198,r7:r7_195,r8:r8_196,r9:r9_201,sp:sp_194 - 0x00000004,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
		defs: ap:ap_222,fp:fp_221,r0:r0_219,r1:r1_230,r10:r10_229,r11:r11_224,r2:r2_228,r3:r3_227,r4:r4_226,r5:r5_225,r6:r6_220,r7:r7_217,r8:r8_218,r9:r9_223,sp:sp_216
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000126A4:
	word32 sp_233 = sp_216 - 0x00000004
	Mem235[sp_233:word32] = r6_220
	word32 r1_266
	call r5_225 + 2 (retsize: 4;)
		uses: ap:ap_250,fp:fp_248,r0:r0_245,r1:r1_265,r10:r10_263,r11:r11_254,r2:r2_261,r3:r3_259,r4:r4_257,r5:r5_239,r6:r6_234,r7:r7_241,r8:r8_243,r9:r9_252,sp:sp_233,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
		defs: ap:ap_251,fp:fp_249,r0:r0_246,r1:r1_266,r10:r10_264,r11:r11_255,r2:r2_262,r3:r3_260,r4:r4_258,r5:r5_256,r6:r6_247,r7:r7_242,r8:r8_244,r9:r9_253,sp:sp_240
	word24 v32_269 = SLICE(r1_266, word24, 8)
	r1_230 = SEQ(v32_269, (int8) r0_219)
	branch (byte) r1_230 != 0x0D l000126B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000126B1:
	r1_230 = SEQ(v32_269, 0x0A)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000126B4:
	branch r2_228 >= r4_226 l000126C3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000126B9:
	Mem291[Mem235[r3_227:word32]:byte] = (byte) r1_230
	r0_219 = r2_228
	r2_228 = r2_228 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000126C3:
	branch (byte) r1_230 != 0x0A l000126A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000126C8:
	Mem302[sp_216 - 0x00000004:word32] = 0x00000001
	word32 sp_308
	word32 r7_311
	word32 r8_314
	word32 r0_317
	word32 r6_320
	word32 fp_323
	word32 ap_326
	word32 r9_329
	word32 r11_332
	word32 r5_335
	word32 r4_337
	word32 r3_339
	word32 r2_341
	word32 r10_342
	word32 r1_343
	call r10_229 + 2 (retsize: 4;)
		uses: ap:ap_251,fp:fp_249,r0:r0_315,r1:r1_287,r10:r10_264,r11:r11_255,r2:r2_340,r3:r3_260,r4:r4_258,r5:r5_256,r6:r6_247,r7:r7_242,r8:r8_244,r9:r9_253,sp:sp_240 - 0x00000004,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
		defs: ap:ap_326,fp:fp_323,r0:r0_317,r1:r1_343,r10:r10_342,r11:r11_332,r2:r2_341,r3:r3_339,r4:r4_337,r5:r5_335,r6:r6_320,r7:r7_311,r8:r8_314,r9:r9_329,sp:sp_308
	Mem347[sp_308 - 0x00000004:word32] = Mem302[r7_311:word32]
	Mem349[sp_308 - 0x00000008:word32] = 0x0000000A
	word32 sp_353
	word32 r7_354
	word32 r8_355
	word32 r0_356
	word32 r6_357
	word32 fp_358
	word32 ap_359
	word32 r9_360
	word32 r11_361
	word32 r5_362
	word32 r4_363
	word32 r3_364
	word32 r2_365
	word32 r10_366
	word32 r1_367
	call Mem349[0x00019268:word32] + 2 (retsize: 4;)
		uses: ap:ap_326,fp:fp_323,r0:r0_317,r1:r1_343,r10:r10_342,r11:r11_332,r2:r2_341,r3:r3_339,r4:r4_337,r5:r5_335,r6:r6_320,r7:r7_311,r8:r8_314,r9:r9_329,sp:sp_308 - 0x00000008,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
		defs: ap:ap_359,fp:fp_358,r0:r0_356,r1:r1_367,r10:r10_366,r11:r11_361,r2:r2_365,r3:r3_364,r4:r4_363,r5:r5_362,r6:r6_357,r7:r7_354,r8:r8_355,r9:r9_360,sp:sp_353
	Mem371[sp_353 - 0x00000004:word32] = Mem349[r7_354:word32]
	call r11_361 + 2 (retsize: 4;)
		uses: ap:ap_359,fp:fp_358,r0:r0_356,r1:r1_367,r10:r10_366,r11:r11_361,r2:r2_365,r3:r3_364,r4:r4_363,r5:r5_362,r6:r6_357,r7:r7_354,r8:r8_355,r9:r9_360,sp:sp_353 - 0x00000004,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
		defs: ap:ap_381,fp:fp_380,r1:r1_389,r10:r10_388,r11:r11_383,r2:r2_387,r3:r3_386,r4:r4_385,r5:r5_384,r6:r6_379,r7:r7_376,r8:r8_377,sp:sp_375
	r9_103 = r8_121 + 15
	r0_123 = r2_140 - 0x00000001
	branch Mem371[Mem371[sp_109 + (r2_140 - 0x00000001):word32]:byte] != 0x0A l00012680
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000126EC:
	word32 r3_396 = Mem371[ap_129 + 8:word32]
	Mem398[r3_396:byte] = 0x00
	Mem400[sp_109 - 0x00000004:word32] = r6_125
	call Mem400[0x00019250:word32] + 2 (retsize: 4;)
		uses: ap:ap_381,fp:fp_380,r0:r2_387 - 0x00000001,r1:r1_389,r10:r10_388,r11:r11_383,r2:r2_387,r3:r3_396,r4:r4_385,r5:r5_384,r6:r6_379,r7:r7_376,r8:r8_377,r9:r8_377 + 15,sp:sp_375 - 0x00000004,Stack +FFFFFFF0:0x00000000,Stack +FFFFFFF4:r8 + 12
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012641:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00012616_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00012702(word32 r0, word32 r2, word32 r5, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r2:[0..31] r5:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00012702_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012702:
	Mem14[r2 + 116:word32] = 0x00000000
	word32 v22_17 = Mem14[Mem14[ap + 8:word32]:word32]
	word32 r4_122 = Mem14[Mem14[ap + 4:word32]:word32]
	word32 sp_102 = fp - 0x00000010
	word32 r1_104 = 0x00000000
	word32 r7_106 = 0x00000001
	word32 r8_108 = 0x00000000
	word32 r6_110 = 0x00000001
	word32 r11_10 = 0x00000000
	word32 r9_114 = 0x00000000
	word32 r10_117 = 0x00000000
	word32 dwLoc0C_241 = v22_17
	word32 dwLoc10_242 = r4_122 - 0x00000001
	branch r4_122 > 0x00000001 l00012732
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012732:
	dwLoc0C_241 = v22_17 + 0x00000004
	branch Mem24[Mem24[v22_17 + 0x00000004:word32]:byte] == 0x2D l00012743
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012743:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012744:
	r0 = Mem30[dwLoc0C_241:word32] + 0x00000001
	r5 = r0 + 0x00000001
	r4_122 = (int32) Mem30[r0:int8]
	branch r4_122 != 0x00000000 l00012758
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012758:
	branch r4_122 > 0x0000007A l000127FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000127FD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001275B_1:
	call 0x00012763 + (r4_122 - 0x0000002D) * 0x00000002 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r4_34,r1:0x00000000,r10:0x00000000,r11:0x00000000,r2:r2,r3:r0_31,r4:r4_34,r5:r0_31 + 0x00000001,r6:0x00000001,r7:0x00000001,r8:0x00000000,r9:0x00000000,sp:fp - 0x00000010,Stack +0000:dwLoc14,Stack +0004:dwLoc10_246,Stack +0008:dwLoc0C_244,Stack +000C:0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012755:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012948:
	word32 v37_69 = dwLoc10_242 - 0x00000001
	dwLoc10_242 = v37_69
	branch v37_69 <= 0x00000000 l0001295D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001294C:
	word32 v38_73 = dwLoc0C_241 + 0x00000004
	dwLoc0C_241 = v38_73
	branch Mem74[Mem74[v38_73:word32]:byte] != 0x2D l0001295D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001295A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012740:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001272F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001295D:
	word32 r3_124 = dwLoc10_242
	word32 v27_82 = dwLoc10_242 - 0x00000001
	branch dwLoc10_242 == 0x00000000 l0001296B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012966:
	branch 0x00000000 == 0x00000000 l0001297F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001297F:
	branch Mem83[r2 + 44:word32] == 0x00000000 l00012994
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012984:
	word32 r0_130
	call Mem98[0x000192E4:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0_128,r1:0x00000000,r10:0x00000000,r11:0x00000000,r2:r2,r3:dwLoc10_249,r4:r4_122,r5:r5_131,r6:0x00000001,r7:0x00000001,r8:0x00000000,r9:0x00000000,sp:fp - 0x00000014,Stack +0004:0x00000001,Stack +0008:v27_82,Stack +000C:dwLoc0C_253,Stack +0010:0x00000000
		defs: ap:ap_121,fp:fp_127,r0:r0_130,r1:r1_104,r10:r10_118,r11:r11_112,r2:r2_119,r3:r3_124,r4:r4_123,r5:r5_133,r6:r6_110,r7:r7_106,r8:r8_108,r9:r9_115,sp:sp_102
	dwLoc14 = 0x00000001
	branch r0_130 != 0x00000000 l00012994
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012991:
	Mem140[r2 + 44:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012994:
	branch Mem146[r2 + 36:word32] < 0x00000000 l000129A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012999:
	branch Mem146[sp_102:word32] <= 0x00000000 l000129A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001299D:
	branch Mem146[r2 + 36:word32] != 0x00000000 l000129A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000129A2:
	Mem161[r2 + 36:word32] = 0x00000003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000129A6:
	word32 r0_167 = Mem166[r2 + 36:word32]
	branch r0_167 > 0x0000000A l000129C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000129C2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000129AA_1:
	call 0x000129AE + r0_167 * 0x00000002 (retsize: 4;)
		uses: ap:ap_205,fp:fp_217,r0:r0_167,r1:r1_176,r10:r10_200,r11:r11_192,r2:r2_145,r3:r3_213,r4:r4_209,r5:r5_222,r6:r6_188,r7:r7_180,r8:r8_184,r9:r9_196,sp:sp_151,Stack +FFFFFFF0:dwLoc14_264,Stack +FFFFFFF4:v27_82,Stack +FFFFFFF8:dwLoc0C_253,Stack +FFFFFFFC:0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00012702_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001296B:
	Mem230[Mem83[ap + 4:word32]:word32] = v27_82
	Mem232[Mem230[ap + 8:word32]:word32] = dwLoc0C_241
	fn00008CCE(r2, ap)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00012A2A(word32 r0, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r11, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r11:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// Trashed: CVZN ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
fn00012A2A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A2A:
	word32 sp_123 = fp - 0x00000004
	word32 r8_1032 = 0x00000000
	branch Mem0[r2 + 28:word32] == 0x00000000 l00012AAB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A49:
	word32 r6_18
	dwLoc08 = 0x00000000
	word32 r0_13 = (uint32) Mem12[r2 + 0x0000C688:word16]
	branch r0_13 != 0x00000001 l00012A5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A5C:
	r6_18 = r5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A57:
	r6_18 = r4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A5F:
	word32 r3_73
	word32 v15_36 = Mem33[r2 + 0x0000C61B:word32]
	word32 v16_39 = Mem37[r2 + 0x0000C613:word32]
	word32 v17_42 = Mem40[r2 + 0x0000C613:word32]
	word32 sp_47
	word32 r8_49
	word32 r2_50
	word32 r0_51
	word32 r4_53
	word32 r6_54
	word32 ap_60
	word32 r7_63
	word32 r5_65
	word32 fp_68
	call Mem43[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0_13,r11:r11,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6_29,r7:r7,r8:0x00000000,sp:fp - 0x0000001C,Stack +0004:v17_42,Stack +0008:v16_39,Stack +000C:v15_36,Stack +0010:r0_13,Stack +0014:r6_29,Stack +0018:0x00000000
		defs: ap:ap_60,fp:fp_68,r0:r0_51,r2:r2_50,r4:r4_53,r5:r5_65,r6:r6_54,r7:r7_63,r8:r8_49,sp:sp_47
	dwLoc0C = r6_18
	dwLoc10 = r0_13
	dwLoc14 = v15_36
	dwLoc18 = v16_39
	dwLoc1C = v17_42
	branch r0_51 >= 0x00000027 l00012A88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A88:
	r3_73 = r4_53 + 39
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A81:
	r3_73 = r4_53 + 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012A8C:
	Mem84[sp_47 - 0x00000004:word32] = r3_73
	Mem88[sp_47 - 0x00000008:word32] = r2_50 + 1515
	word32 sp_92
	word32 r8_94
	word32 r2_95
	word32 r0_97
	word32 r4_99
	word32 r6_101
	word32 r3_102
	word32 r7_106
	word32 r5_108
	word32 fp_110
	word32 r11_1054
	call Mem88[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_60,fp:fp_68,r0:r0_51,r11:r11,r2:r2_50,r3:r3_83,r4:r4_53,r5:r5_65,r6:r6_54,r7:r7_63,r8:r8_49,sp:sp_47 - 0x00000008,Stack +FFFFFFE8:v17_42,Stack +FFFFFFEC:v16_39,Stack +FFFFFFF0:v15_36,Stack +FFFFFFF4:r0_13,Stack +FFFFFFF8:r6_29,Stack +FFFFFFFC:0x00000000
		defs: fp:fp_110,r0:r0_97,r11:r11_1054,r2:r2_95,r3:r3_102,r4:r4_99,r5:r5_108,r6:r6_101,r7:r7_106,r8:r8_94,sp:sp_92
	Mem113[sp_92 - 0x00000004:word32] = r0_97
	Mem116[sp_92 - 0x00000008:word32] = r2_95 + 1515
	Mem118[sp_92 - 0x0000000C:word32] = r2_95
	word32 ap_119 = Mem118[r2_95 + 0x0000C839:word32]
	call ap_119 + 2 (retsize: 4;)
		uses: ap:ap_119,fp:fp_110,r0:r0_97,r11:r11_1054,r2:r2_95,r3:r3_102,r4:r4_99,r5:r5_108,r6:r6_101,r7:r7_106,r8:r8_94,sp:sp_92 - 0x0000000C,Stack +FFFFFFE8:v17_42,Stack +FFFFFFEC:v16_39,Stack +FFFFFFF0:v15_36,Stack +FFFFFFF4:r0_13,Stack +FFFFFFF8:r6_29,Stack +FFFFFFFC:0x00000000
		defs: ap:ap_130,fp:fp_133,r0:r0_126,r2:r2_125,r3:r3_129,r4:r4_127,r5:r5_132,r6:r6_128,r7:r7_131,r8:r8_124,sp:sp_123
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012AAB:
	branch Mem136[r2 + 36:word32] > 0x00000009 l00012AB4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012AB4:
	word32 r3_511
	word32 fp_515
	word32 r5_514
	word32 r7_513
	word32 ap_512
	word32 r6_510
	word32 r0_508
	word32 r8_506
	word32 r4_509
	word32 sp_505
	word32 r2_507
	word32 sp_141 = sp_123 - 0x00000004
	Mem142[sp_141:word32] = 0x00000000
	Mem146[sp_141 - 0x00000004:word32] = r4 + 64
	Mem149[sp_141 - 0x00000008:word32] = r2 + 1515
	word32 r7_150 = Mem149[0x000192D0:word32]
	word32 sp_154
	word32 r8_156
	word32 r2_157
	word32 r0_160
	word32 r4_161
	word32 r6_164
	word32 r3_166
	word32 r7_169
	word32 r5_171
	word32 fp_173
	word32 r11_1062
	call r7_150 + 2 (retsize: 4;)
		uses: ap:ap_167,fp:fp_172,r0:r0_158,r11:r11,r2:r2_135,r3:r3_165,r4:r4_144,r5:r5_170,r6:r6_162,r7:r7_150,r8:r8_155,sp:sp_141 - 0x00000008,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_173,r0:r0_160,r11:r11_1062,r2:r2_157,r3:r3_166,r4:r4_161,r5:r5_171,r6:r6_164,r7:r7_169,r8:r8_156,sp:sp_154
	Mem176[sp_154 - 0x00000004:word32] = r0_160
	Mem179[sp_154 - 0x00000008:word32] = r2_157 + 1515
	Mem181[sp_154 - 0x0000000C:word32] = r2_157
	word32 ap_182 = Mem181[r2_157 + 0x0000C839:word32]
	word32 sp_186
	word32 r8_187
	word32 r2_188
	word32 r0_189
	word32 r4_190
	word32 r6_191
	word32 r3_192
	word32 ap_193
	word32 r7_194
	word32 r5_195
	word32 fp_196
	word32 r11_1075
	call ap_182 + 2 (retsize: 4;)
		uses: ap:ap_182,fp:fp_173,r0:r0_160,r11:r11_1062,r2:r2_157,r3:r3_166,r4:r4_161,r5:r5_171,r6:r6_164,r7:r7_169,r8:r8_156,sp:sp_154 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_193,fp:fp_196,r0:r0_189,r11:r11_1075,r2:r2_188,r3:r3_192,r4:r4_190,r5:r5_195,r6:r6_191,r7:r7_194,r8:r8_187,sp:sp_186
	Mem199[sp_186 - 0x00000004:word32] = 0x00000000
	Mem202[sp_186 - 0x00000008:word32] = r4_190 + 99
	Mem205[sp_186 - 0x0000000C:word32] = r2_188 + 1515
	word32 sp_209
	word32 r8_210
	word32 r2_211
	word32 r0_212
	word32 r4_213
	word32 r6_214
	word32 r3_215
	word32 r7_217
	word32 r5_218
	word32 fp_219
	word32 r11_1076
	call r7_194 + 2 (retsize: 4;)
		uses: ap:ap_193,fp:fp_196,r0:r0_189,r11:r11_1075,r2:r2_188,r3:r3_192,r4:r4_190,r5:r5_195,r6:r6_191,r7:r7_194,r8:r8_187,sp:sp_186 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_219,r0:r0_212,r11:r11_1076,r2:r2_211,r3:r3_215,r4:r4_213,r5:r5_218,r6:r6_214,r7:r7_217,r8:r8_210,sp:sp_209
	Mem222[sp_209 - 0x00000004:word32] = r0_212
	Mem225[sp_209 - 0x00000008:word32] = r2_211 + 1515
	Mem227[sp_209 - 0x0000000C:word32] = r2_211
	word32 ap_228 = Mem227[r2_211 + 0x0000C839:word32]
	word32 sp_232
	word32 r8_233
	word32 r2_234
	word32 r0_235
	word32 r4_236
	word32 r6_237
	word32 r3_238
	word32 ap_239
	word32 r7_240
	word32 r5_241
	word32 fp_242
	word32 r11_1077
	call ap_228 + 2 (retsize: 4;)
		uses: ap:ap_228,fp:fp_219,r0:r0_212,r11:r11_1076,r2:r2_211,r3:r3_215,r4:r4_213,r5:r5_218,r6:r6_214,r7:r7_217,r8:r8_210,sp:sp_209 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_239,fp:fp_242,r0:r0_235,r11:r11_1077,r2:r2_234,r3:r3_238,r4:r4_236,r5:r5_241,r6:r6_237,r7:r7_240,r8:r8_233,sp:sp_232
	Mem245[sp_232 - 0x00000004:word32] = 0x00000000
	Mem248[sp_232 - 0x00000008:word32] = Mem245[r2_234 + 128:word32]
	Mem251[sp_232 - 0x0000000C:word32] = Mem248[r2_234 + 128:word32]
	Mem254[sp_232 - 0x00000010:word32] = Mem251[r2_234 + 124:word32]
	Mem257[sp_232 - 0x00000014:word32] = Mem254[r2_234 + 124:word32]
	Mem260[sp_232 - 0x00000018:word32] = r4_236 + 133
	Mem263[sp_232 - 0x0000001C:word32] = r2_234 + 1515
	word32 sp_267
	word32 r8_268
	word32 r2_269
	word32 r0_270
	word32 r4_271
	word32 r6_272
	word32 r3_273
	word32 r7_275
	word32 r5_276
	word32 fp_277
	word32 r11_1078
	call r7_240 + 2 (retsize: 4;)
		uses: ap:ap_239,fp:fp_242,r0:r0_235,r11:r11_1077,r2:r2_234,r3:r3_238,r4:r4_236,r5:r5_241,r6:r6_237,r7:r7_240,r8:r8_233,sp:sp_232 - 0x0000001C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_277,r0:r0_270,r11:r11_1078,r2:r2_269,r3:r3_273,r4:r4_271,r5:r5_276,r6:r6_272,r7:r7_275,r8:r8_268,sp:sp_267
	Mem280[sp_267 - 0x00000004:word32] = r0_270
	Mem283[sp_267 - 0x00000008:word32] = r2_269 + 1515
	Mem285[sp_267 - 0x0000000C:word32] = r2_269
	word32 ap_286 = Mem285[r2_269 + 0x0000C839:word32]
	word32 sp_290
	word32 r8_291
	word32 r2_292
	word32 r4_294
	word32 ap_297
	word32 r7_298
	word32 r5_299
	word32 fp_300
	call ap_286 + 2 (retsize: 4;)
		uses: ap:ap_286,fp:fp_277,r0:r0_270,r11:r11_1078,r2:r2_269,r3:r3_273,r4:r4_271,r5:r5_276,r6:r6_272,r7:r7_275,r8:r8_268,sp:sp_267 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_297,fp:fp_300,r2:r2_292,r4:r4_294,r5:r5_299,r7:r7_298,r8:r8_291,sp:sp_290
	word32 r6_302 = (uint32) Mem285[r2_292 + 0x0000C682:word16]
	branch r6_302 != 0x00000000 l00012BA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012BA4:
	word32 r3_313
	Mem308[sp_290 - 0x00000004:word32] = 0x00000000
	word32 r0_309 = (uint32) Mem308[r2_292 + 0x0000C686:word16]
	branch r0_309 != 0x00000001 l00012BB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012BB8:
	r3_313 = r5_299 + 16
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012BB2:
	r3_313 = r5_299 + 20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012BBC:
	word32 r3_398
	Mem324[sp_290 - 0x00000008:word32] = r3_313
	Mem327[sp_290 - 0x0000000C:word32] = r0_309
	word32 ap_329 = (uint32) Mem327[r2_292 + 0x0000C684:word16]
	Mem332[sp_290 - 0x00000010:word32] = ap_329 + 0x00000001
	Mem336[sp_290 - 0x00000014:word32] = r6_302 + 0x00000001
	Mem340[sp_290 - 0x00000018:word32] = r4_294 + 583
	Mem343[sp_290 - 0x0000001C:word32] = r2_292 + 1515
	word32 sp_348
	word32 r8_350
	word32 r2_351
	word32 r0_352
	word32 r4_353
	word32 r6_354
	word32 r3_355
	word32 r7_357
	word32 r5_359
	word32 fp_361
	word32 r11_1080
	call r7_298 + 2 (retsize: 4;)
		uses: ap:ap_329 + 0x00000001,fp:fp_300,r0:r0_309,r11:r11,r2:r2_292,r3:r3_323,r4:r4_294,r5:r5_299,r6:r6_302 + 0x00000001,r7:r7_298,r8:r8_291,sp:sp_290 - 0x0000001C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_361,r0:r0_352,r11:r11_1080,r2:r2_351,r3:r3_355,r4:r4_353,r5:r5_359,r6:r6_354,r7:r7_357,r8:r8_350,sp:sp_348
	Mem364[sp_348 - 0x00000004:word32] = r0_352
	Mem367[sp_348 - 0x00000008:word32] = r2_351 + 1515
	Mem369[sp_348 - 0x0000000C:word32] = r2_351
	word32 ap_370 = Mem369[r2_351 + 0x0000C839:word32]
	word32 sp_374
	word32 r8_375
	word32 r2_376
	word32 r4_378
	word32 r6_379
	word32 ap_381
	word32 r7_382
	word32 r5_383
	word32 fp_384
	call ap_370 + 2 (retsize: 4;)
		uses: ap:ap_370,fp:fp_361,r0:r0_352,r11:r11_1080,r2:r2_351,r3:r3_355,r4:r4_353,r5:r5_359,r6:r6_354,r7:r7_357,r8:r8_350,sp:sp_348 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_381,fp:fp_384,r2:r2_376,r4:r4_378,r5:r5_383,r6:r6_379,r7:r7_382,r8:r8_375,sp:sp_374
	Mem387[sp_374 - 0x00000004:word32] = 0x00000000
	Mem390[sp_374 - 0x00000008:word32] = Mem387[r2_376 + 0x0000C68A:word32]
	Mem393[sp_374 - 0x0000000C:word32] = Mem390[r2_376 + 0x0000C68A:word32]
	word32 r0_394 = (uint32) Mem393[r2_376 + 0x0000C688:word16]
	branch r0_394 != 0x00000001 l00012C0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012C0C:
	r3_398 = r5_383 + 23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012C06:
	r3_398 = r5_383 + 31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012C10:
	Mem409[sp_374 - 0x00000010:word32] = r3_398
	Mem412[sp_374 - 0x00000014:word32] = r0_394
	Mem416[sp_374 - 0x00000018:word32] = r4_378 + 726
	Mem420[sp_374 - 0x0000001C:word32] = r2_376 + 1515
	word32 r11_1088
	word32 sp_425
	word32 r8_427
	word32 r2_428
	word32 r0_429
	word32 r4_430
	word32 r6_432
	word32 r3_433
	word32 r7_436
	word32 r5_438
	word32 fp_440
	call r7_382 + 2 (retsize: 4;)
		uses: ap:ap_381,fp:fp_384,r0:r0_394,r11:r11,r2:r2_376,r3:r3_408,r4:r4_378,r5:r5_383,r6:r6_379,r7:r7_382,r8:r8_375,sp:sp_374 - 0x0000001C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_440,r0:r0_429,r11:r11_1088,r2:r2_428,r3:r3_433,r4:r4_430,r5:r5_438,r6:r6_432,r7:r7_436,r8:r8_427,sp:sp_425
	Mem443[sp_425 - 0x00000004:word32] = r0_429
	Mem446[sp_425 - 0x00000008:word32] = r2_428 + 1515
	Mem448[sp_425 - 0x0000000C:word32] = r2_428
	word32 ap_449 = Mem448[r2_428 + 0x0000C839:word32]
	word32 r11_1095
	word32 sp_453
	word32 r8_454
	word32 r2_455
	word32 r0_456
	word32 r4_457
	word32 r6_458
	word32 r3_459
	word32 ap_460
	word32 r7_461
	word32 r5_462
	word32 fp_463
	call ap_449 + 2 (retsize: 4;)
		uses: ap:ap_449,fp:fp_440,r0:r0_429,r11:r11_1088,r2:r2_428,r3:r3_433,r4:r4_430,r5:r5_438,r6:r6_432,r7:r7_436,r8:r8_427,sp:sp_425 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_460,fp:fp_463,r0:r0_456,r11:r11_1095,r2:r2_455,r3:r3_459,r4:r4_457,r5:r5_462,r6:r6_458,r7:r7_461,r8:r8_454,sp:sp_453
	Mem466[sp_453 - 0x00000004:word32] = 0x00000000
	Mem469[sp_453 - 0x00000008:word32] = Mem466[r2_455 + 0x0000C68E:word32]
	Mem472[sp_453 - 0x0000000C:word32] = Mem469[r2_455 + 0x0000C68E:word32]
	Mem475[sp_453 - 0x00000010:word32] = r4_457 + 857
	Mem478[sp_453 - 0x00000014:word32] = r2_455 + 1515
	word32 r11_1096
	word32 sp_482
	word32 r8_483
	word32 r2_484
	word32 r0_485
	word32 r4_486
	word32 r6_487
	word32 r3_488
	word32 r7_490
	word32 r5_491
	word32 fp_492
	call r7_461 + 2 (retsize: 4;)
		uses: ap:ap_460,fp:fp_463,r0:r0_456,r11:r11_1095,r2:r2_455,r3:r3_459,r4:r4_457,r5:r5_462,r6:r6_458,r7:r7_461,r8:r8_454,sp:sp_453 - 0x00000014,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_492,r0:r0_485,r11:r11_1096,r2:r2_484,r3:r3_488,r4:r4_486,r5:r5_491,r6:r6_487,r7:r7_490,r8:r8_483,sp:sp_482
	Mem495[sp_482 - 0x00000004:word32] = r0_485
	Mem498[sp_482 - 0x00000008:word32] = r2_484 + 1515
	Mem500[sp_482 - 0x0000000C:word32] = r2_484
	word32 ap_501 = Mem500[r2_484 + 0x0000C839:word32]
	call ap_501 + 2 (retsize: 4;)
		uses: ap:ap_501,fp:fp_492,r0:r0_485,r11:r11_1096,r2:r2_484,r3:r3_488,r4:r4_486,r5:r5_491,r6:r6_487,r7:r7_490,r8:r8_483,sp:sp_482 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_512,fp:fp_515,r0:r0_508,r2:r2_507,r3:r3_511,r4:r4_509,r5:r5_514,r6:r6_510,r7:r7_513,r8:r8_506,sp:sp_505
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012B2D:
	word32 r3_529
	Mem518[sp_290 - 0x00000004:word32] = 0x00000000
	Mem521[sp_290 - 0x00000008:word32] = Mem518[r2_292 + 0x0000C68A:word32]
	Mem524[sp_290 - 0x0000000C:word32] = Mem521[r2_292 + 0x0000C68A:word32]
	word32 r0_525 = (uint32) Mem524[r2_292 + 0x0000C688:word16]
	branch r0_525 != 0x00000001 l00012B50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012B50:
	r3_529 = r5_299 + 2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012B47:
	r3_529 = r5_299 + 10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012B54:
	Mem540[sp_290 - 0x00000010:word32] = r3_529
	Mem543[sp_290 - 0x00000014:word32] = r0_525
	Mem547[sp_290 - 0x00000018:word32] = r4_294 + 332
	Mem551[sp_290 - 0x0000001C:word32] = r2_292 + 1515
	word32 r11_1098
	word32 sp_556
	word32 r8_558
	word32 r2_559
	word32 r0_560
	word32 r4_561
	word32 r6_563
	word32 r3_564
	word32 r7_567
	word32 r5_569
	word32 fp_571
	call r7_298 + 2 (retsize: 4;)
		uses: ap:ap_297,fp:fp_300,r0:r0_525,r11:r11,r2:r2_292,r3:r3_539,r4:r4_294,r5:r5_299,r6:r6_302,r7:r7_298,r8:r8_291,sp:sp_290 - 0x0000001C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_571,r0:r0_560,r11:r11_1098,r2:r2_559,r3:r3_564,r4:r4_561,r5:r5_569,r6:r6_563,r7:r7_567,r8:r8_558,sp:sp_556
	Mem574[sp_556 - 0x00000004:word32] = r0_560
	Mem577[sp_556 - 0x00000008:word32] = r2_559 + 1515
	Mem579[sp_556 - 0x0000000C:word32] = r2_559
	word32 ap_580 = Mem579[r2_559 + 0x0000C839:word32]
	word32 r11_1105
	word32 sp_584
	word32 r8_585
	word32 r2_586
	word32 r0_587
	word32 r4_588
	word32 r6_589
	word32 r3_590
	word32 ap_591
	word32 r7_592
	word32 r5_593
	word32 fp_594
	call ap_580 + 2 (retsize: 4;)
		uses: ap:ap_580,fp:fp_571,r0:r0_560,r11:r11_1098,r2:r2_559,r3:r3_564,r4:r4_561,r5:r5_569,r6:r6_563,r7:r7_567,r8:r8_558,sp:sp_556 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_591,fp:fp_594,r0:r0_587,r11:r11_1105,r2:r2_586,r3:r3_590,r4:r4_588,r5:r5_593,r6:r6_589,r7:r7_592,r8:r8_585,sp:sp_584
	Mem597[sp_584 - 0x00000004:word32] = 0x00000000
	Mem600[sp_584 - 0x00000008:word32] = Mem597[r2_586 + 0x0000C68E:word32]
	Mem603[sp_584 - 0x0000000C:word32] = Mem600[r2_586 + 0x0000C68E:word32]
	Mem606[sp_584 - 0x00000010:word32] = r4_588 + 537
	Mem609[sp_584 - 0x00000014:word32] = r2_586 + 1515
	word32 r11_1106
	word32 sp_613
	word32 r8_614
	word32 r2_615
	word32 r0_616
	word32 r4_617
	word32 r6_618
	word32 r3_619
	word32 r7_621
	word32 r5_622
	word32 fp_623
	call r7_592 + 2 (retsize: 4;)
		uses: ap:ap_591,fp:fp_594,r0:r0_587,r11:r11_1105,r2:r2_586,r3:r3_590,r4:r4_588,r5:r5_593,r6:r6_589,r7:r7_592,r8:r8_585,sp:sp_584 - 0x00000014,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_623,r0:r0_616,r11:r11_1106,r2:r2_615,r3:r3_619,r4:r4_617,r5:r5_622,r6:r6_618,r7:r7_621,r8:r8_614,sp:sp_613
	Mem626[sp_613 - 0x00000004:word32] = r0_616
	Mem629[sp_613 - 0x00000008:word32] = r2_615 + 1515
	Mem631[sp_613 - 0x0000000C:word32] = r2_615
	word32 ap_632 = Mem631[r2_615 + 0x0000C839:word32]
	call ap_632 + 2 (retsize: 4;)
		uses: ap:ap_632,fp:fp_623,r0:r0_616,r11:r11_1106,r2:r2_615,r3:r3_619,r4:r4_617,r5:r5_622,r6:r6_618,r7:r7_621,r8:r8_614,sp:sp_613 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_643,fp:fp_646,r0:r0_639,r2:r2_638,r3:r3_642,r4:r4_640,r5:r5_645,r6:r6_641,r7:r7_644,r8:r8_637,sp:sp_636
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012C5C:
	branch Mem649[r2_507 + 0x0000C692:word16] != 0x0000 l00012C8C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012C8C:
	word32 sp_655 = sp_505 - 0x00000004
	Mem656[sp_655:word32] = 0x00000000
	Mem659[sp_655 - 0x00000004:uint32] = (uint32) Mem656[r2_507 + 0x0000C692:word16]
	Mem663[sp_655 - 0x00000008:word32] = r4_509 + 958
	Mem666[sp_655 - 0x0000000C:word32] = r2_507 + 1515
	word32 r3_667 = Mem666[0x000192D0:word32]
	word32 r11_1108
	word32 sp_671
	word32 r8_673
	word32 r2_674
	word32 r0_676
	word32 r4_677
	word32 r6_679
	word32 r3_680
	word32 r7_684
	word32 r5_686
	word32 fp_688
	call r3_667 + 2 (retsize: 4;)
		uses: ap:ap_681,fp:fp_687,r0:r0_675,r11:r11_770,r2:r2_648,r3:r3_667,r4:r4_661,r5:r5_685,r6:r6_678,r7:r7_683,r8:r8_672,sp:sp_655 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_688,r0:r0_676,r11:r11_1108,r2:r2_674,r3:r3_680,r4:r4_677,r5:r5_686,r6:r6_679,r7:r7_684,r8:r8_673,sp:sp_671
	Mem691[sp_671 - 0x00000004:word32] = r0_676
	Mem694[sp_671 - 0x00000008:word32] = r2_674 + 1515
	Mem696[sp_671 - 0x0000000C:word32] = r2_674
	word32 ap_697 = Mem696[r2_674 + 0x0000C839:word32]
	word32 sp_701
	word32 r8_702
	word32 r2_703
	word32 r0_704
	word32 r4_705
	word32 r6_706
	word32 r3_707
	word32 ap_708
	word32 r7_709
	word32 r5_710
	word32 fp_711
	word32 r11_1115
	call ap_697 + 2 (retsize: 4;)
		uses: ap:ap_697,fp:fp_688,r0:r0_676,r11:r11_1108,r2:r2_674,r3:r3_680,r4:r4_677,r5:r5_686,r6:r6_679,r7:r7_684,r8:r8_673,sp:sp_671 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_708,fp:fp_711,r0:r0_704,r11:r11_1115,r2:r2_703,r3:r3_707,r4:r4_705,r5:r5_710,r6:r6_706,r7:r7_709,r8:r8_702,sp:sp_701
	Mem714[sp_701 - 0x00000004:word32] = 0x00000000
	Mem717[sp_701 - 0x00000008:word32] = r4_705 + 1032
	Mem720[sp_701 - 0x0000000C:word32] = r2_703 + 1515
	word32 sp_724
	word32 r8_725
	word32 r2_726
	word32 r0_727
	word32 r4_728
	word32 r6_729
	word32 r3_730
	word32 r7_732
	word32 r5_733
	word32 fp_734
	word32 r11_1116
	call r3_707 + 2 (retsize: 4;)
		uses: ap:ap_708,fp:fp_711,r0:r0_704,r11:r11_1115,r2:r2_703,r3:r3_707,r4:r4_705,r5:r5_710,r6:r6_706,r7:r7_709,r8:r8_702,sp:sp_701 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_734,r0:r0_727,r11:r11_1116,r2:r2_726,r3:r3_730,r4:r4_728,r5:r5_733,r6:r6_729,r7:r7_732,r8:r8_725,sp:sp_724
	Mem737[sp_724 - 0x00000004:word32] = r0_727
	Mem740[sp_724 - 0x00000008:word32] = r2_726 + 1515
	Mem742[sp_724 - 0x0000000C:word32] = r2_726
	word32 ap_743 = Mem742[r2_726 + 0x0000C839:word32]
	word32 sp_747
	word32 r2_749
	word32 r4_751
	word32 r6_752
	word32 r3_753
	word32 ap_754
	word32 r7_755
	word32 r5_756
	word32 fp_757
	word32 r8_748
	call ap_743 + 2 (retsize: 4;)
		uses: ap:ap_743,fp:fp_734,r0:r0_727,r11:r11_1116,r2:r2_726,r3:r3_730,r4:r4_728,r5:r5_733,r6:r6_729,r7:r7_732,r8:r8_725,sp:sp_724 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_754,fp:fp_757,r2:r2_749,r3:r3_753,r4:r4_751,r5:r5_756,r6:r6_752,r7:r7_755,r8:r8_748,sp:sp_747
	Mem760[sp_747 - 0x00000004:word32] = 0x00000001
	Mem763[sp_747 - 0x00000008:uint32] = (uint32) Mem760[r2_749 + 0x0000C692:word16]
	word32 ap_767
	word32 fp_768
	word32 r11_770
	word32 sp_771
	word32 r0_769 = fn0000DC76(ap_754, fp_757, out r11_770, out ap_767, out fp_768, out sp_771)
	branch r0_769 == 0x00000000 l00012CEF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012CEC:
	r8_748 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012CEF:
	Mem786[sp_771 - 0x00000004:word32] = 0x00000000
	Mem790[sp_771 - 0x00000008:word32] = r4_751 + 1108
	Mem794[sp_771 - 0x0000000C:word32] = r2_749 + 1515
	word32 sp_799
	word32 r8_801
	word32 r2_802
	word32 r0_804
	word32 r4_805
	word32 r6_807
	word32 r3_808
	word32 r7_812
	word32 r5_814
	word32 fp_816
	word32 r11_818
	call r3_753 + 2 (retsize: 4;)
		uses: ap:ap_767,fp:fp_768,r0:r0_769,r11:r11_770,r2:r2_749,r3:r3_753,r4:r4_751,r5:r5_756,r6:r6_752,r7:r7_755,r8:r8_800,sp:sp_771 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_816,r0:r0_804,r11:r11_818,r2:r2_802,r3:r3_808,r4:r4_805,r5:r5_814,r6:r6_807,r7:r7_812,r8:r8_801,sp:sp_799
	Mem821[sp_799 - 0x00000004:word32] = r0_804
	Mem824[sp_799 - 0x00000008:word32] = r2_802 + 1515
	Mem826[sp_799 - 0x0000000C:word32] = r2_802
	word32 ap_827 = Mem826[r2_802 + 0x0000C839:word32]
	word32 sp_831
	word32 r0_834
	word32 ap_838
	call ap_827 + 2 (retsize: 4;)
		uses: ap:ap_827,fp:fp_816,r0:r0_804,r11:r11_818,r2:r2_802,r3:r3_808,r4:r4_805,r5:r5_814,r6:r6_807,r7:r7_812,r8:r8_801,sp:sp_799 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: ap:ap_838,fp:fp_841,r0:r0_834,r11:r11_842,r2:r2_833,r3:r3_837,r4:r4_835,r5:r5_840,r6:r6_836,r7:r7_839,r8:r8_832,sp:sp_831
	branch r8_1032 == 0x00000000 l00012D7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012D12:
	Mem849[sp_831 - 0x00000004:word32] = 0x00000000
	Mem852[sp_831 - 0x00000008:word32] = r4 + 1184
	Mem855[sp_831 - 0x0000000C:word32] = r2 + 1515
	word32 sp_859
	word32 r8_860
	word32 r2_861
	word32 r0_862
	word32 r4_863
	word32 r6_864
	word32 r3_865
	word32 r7_867
	word32 r5_868
	word32 fp_869
	word32 r11_870
	call r3 + 2 (retsize: 4;)
		uses: ap:ap_838,fp:fp_841,r0:r0_834,r11:r11_842,r2:r2_833,r3:r3_837,r4:r4_835,r5:r5_840,r6:r6_836,r7:r7_839,r8:r8_832,sp:sp_831 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_869,r0:r0_862,r11:r11_870,r2:r2_861,r3:r3_865,r4:r4_863,r5:r5_868,r6:r6_864,r7:r7_867,r8:r8_860,sp:sp_859
	Mem873[sp_859 - 0x00000004:word32] = r0_862
	Mem876[sp_859 - 0x00000008:word32] = r2_861 + 1515
	Mem878[sp_859 - 0x0000000C:word32] = r2_861
	word32 ap_879 = Mem878[r2_861 + 0x0000C839:word32]
	call ap_879 + 2 (retsize: 4;)
		uses: ap:ap_879,fp:fp_869,r0:r0_862,r11:r11_870,r2:r2_861,r3:r3_865,r4:r4_863,r5:r5_868,r6:r6_864,r7:r7_867,r8:r8_860,sp:sp_859 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_893,r11:r11_894,r2:r2_885,r3:r3_889,r4:r4_887,r5:r5_892,r6:r6_888,r7:r7_891,r8:r8_884
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012C64:
	word32 sp_896 = sp_505 - 0x00000004
	Mem897[sp_896:word32] = 0x00000000
	Mem900[sp_896 - 0x00000004:word32] = r4_509 + 926
	Mem903[sp_896 - 0x00000008:word32] = r2_507 + 1515
	word32 sp_907
	word32 r8_908
	word32 r2_909
	word32 r0_910
	word32 r4_911
	word32 r6_912
	word32 r3_914
	word32 r7_916
	word32 r5_917
	word32 fp_918
	word32 r11_927
	call Mem903[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_681,fp:fp_687,r0:r0_675,r11:r11,r2:r2_648,r3:r3_913,r4:r4_661,r5:r5_685,r6:r6_678,r7:r7_683,r8:r8_672,sp:sp_896 - 0x00000008,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_918,r0:r0_910,r11:r11_927,r2:r2_909,r3:r3_914,r4:r4_911,r5:r5_917,r6:r6_912,r7:r7_916,r8:r8_908,sp:sp_907
	Mem930[sp_907 - 0x00000004:word32] = r0_910
	Mem933[sp_907 - 0x00000008:word32] = r2_909 + 1515
	Mem935[sp_907 - 0x0000000C:word32] = r2_909
	word32 ap_936 = Mem935[r2_909 + 0x0000C839:word32]
	call ap_936 + 2 (retsize: 4;)
		uses: ap:ap_936,fp:fp_918,r0:r0_910,r11:r11_927,r2:r2_909,r3:r3_914,r4:r4_911,r5:r5_917,r6:r6_912,r7:r7_916,r8:r8_908,sp:sp_907 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_950,r11:r11_951,r2:r2_942,r3:r3_946,r4:r4_944,r5:r5_949,r6:r6_945,r7:r7_948,r8:r8_941
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012AB1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012D34:
	branch Mem136[r2 + 92:word32] == 0x00000000 l00012D7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012D39:
	branch Mem136[r2 + 0x0000C692:word16] == 0x0000 l00012D7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012D41:
	word32 sp_961 = sp_123 - 0x00000004
	Mem962[sp_961:word32] = 0x00000001
	Mem965[sp_961 - 0x00000004:uint32] = (uint32) Mem962[r2 + 0x0000C692:word16]
	word32 ap_969
	word32 sp_973
	word32 r0_971 = fn0000DC76(ap, fp, out r11, out ap_969, out fp, out sp_973)
	branch r0_971 == 0x00000000 l00012D7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012D55:
	Mem984[sp_973 - 0x00000004:uint32] = 0x00000401
	Mem987[sp_973 - 0x00000008:word32] = r4 + 1222
	Mem990[sp_973 - 0x0000000C:word32] = r2 + 1515
	word32 sp_994
	word32 r8_995
	word32 r2_996
	word32 r0_997
	word32 r4_998
	word32 r6_999
	word32 r3_1000
	word32 r7_1003
	word32 r5_1004
	word32 fp_1005
	word32 r11_1006
	call Mem990[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_969,fp:fp_970,r0:r0_971,r11:r11_972,r2:r2_135,r3:r3_165,r4:r4_144,r5:r5_170,r6:r6_162,r7:r7_1002,r8:r8_155,sp:sp_973 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_1005,r0:r0_997,r11:r11_1006,r2:r2_996,r3:r3_1000,r4:r4_998,r5:r5_1004,r6:r6_999,r7:r7_1003,r8:r8_995,sp:sp_994
	Mem1009[sp_994 - 0x00000004:word32] = r0_997
	Mem1012[sp_994 - 0x00000008:word32] = r2_996 + 1515
	Mem1014[sp_994 - 0x0000000C:word32] = r2_996
	word32 ap_1015 = Mem1014[r2_996 + 0x0000C839:word32]
	call ap_1015 + 2 (retsize: 4;)
		uses: ap:ap_1015,fp:fp_1005,r0:r0_997,r11:r11_1006,r2:r2_996,r3:r3_1000,r4:r4_998,r5:r5_1004,r6:r6_999,r7:r7_1003,r8:r8_995,sp:sp_994 - 0x0000000C,Stack +FFFFFFE8:dwLoc1C_1073,Stack +FFFFFFEC:dwLoc18_1071,Stack +FFFFFFF0:dwLoc14_1069,Stack +FFFFFFF4:dwLoc10_1067,Stack +FFFFFFF8:dwLoc0C_1065,Stack +FFFFFFFC:dwLoc08_1063
		defs: fp:fp_1029,r11:r11_1030,r2:r2_1021,r3:r3_1025,r4:r4_1023,r5:r5_1028,r6:r6_1024,r7:r7_1027
	r8_1032 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012D7E:
	word32 sp_1042 = fp - 0x00000004
	word32 fp_1044 = Mem1043[sp_1042 + 0x00000010:word32]
	word32 ap_1045 = Mem1043[sp_1042 + 0x0000000C:word32]
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8_1032
	r11Out = r11
	apOut = ap_1045
	fpOut = fp_1044
	spOut = sp_1042
	return r8_1032
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00012A2A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00012D86(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r8, word32 r9, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00012D86_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012D86:
	word32 sp_169 = fp - 0x00000014
	word32 r5_184 = 0x00000000
	word32 r10_216 = 0x00000000
	word32 r6_183 = 0x00000000
	word32 r7_25 = 0x00000000
	branch Mem10[r3 + 100:word32] <= 0x00000000 l00012DCB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012DA8:
	word32 v17_16 = Mem10[r3 + 100:word32] << 2
	call Mem17[0x000192B4:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r1:r1,r10:0x00000000,r2:r2,r3:r3,r4:r4,r5:0x00000000,r6:0x00000000,r7:0x00000000,r8:r8,r9:r9,sp:fp - 0x00000018,Stack +0004:v17_16,Stack +000A:0x0000,Stack +000C:0x0000000000000000
		defs: ap:ap_39,fp:fp_35,r0:r0_29,r10:r10_22,r2:r2_31,r3:r3_27,r4:r4_33,r5:r5_21,r7:r7_26,r8:r8_41,r9:r9_37,sp:sp_20
	dwLoc18 = v17_16
	r6_183 = r0
	branch r0 == 0x00000000 l00012DCB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012DB9:
	r2 = 0x00000000
	branch Mem17[r3 + 100:word32] <= 0x00000000 l00012DCB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012DC0:
	Mem54[r0:word32] = 0x00000000
	r2 = r2 + 0x00000001
	branch r2 < Mem54[r3 + 100:word32] l00012DC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012DCB:
	branch Mem62[r3 + 104:word32] <= 0x00000000 l00012DF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012DD0:
	word32 sp_68 = sp_169 - 0x00000004
	Mem70[sp_68:word32] = Mem62[r3 + 104:word32] << 2
	call Mem70[0x000192B4:word32] + 2 (retsize: 4;)
		uses: ap:ap_100,fp:fp_94,r0:r0_86,r1:r1,r10:r10_77,r2:r2_89,r3:r3_61,r4:r4_91,r5:r5_74,r6:r6_80,r7:r7_82,r8:r8_103,r9:r9_97,sp:sp_68,Stack +FFFFFFEC:dwLoc18_997,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
		defs: ap:ap_102,fp:fp_96,r0:r0_88,r10:r10_79,r3:r3_85,r4:r4_93,r5:r5_76,r6:r6_81,r8:r8_105,sp:sp_73
	branch r0 == 0x00000000 l00012DF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012DE1:
	word32 r2_112 = 0x00000000
	branch Mem70[r3 + 104:word32] <= 0x00000000 l00012DF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012DE8:
	Mem118[r0:word32] = 0x00000000
	r2_112 = r2_112 + 0x00000001
	branch r2_112 < Mem118[r3 + 104:word32] l00012DE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012DF3:
	word32 r4_140
	Mem127[r3 + 40:word32] = 0x00000000
	Mem129[r3 + 1511:word32] = r3 + 167
	word32 r2_130 = Mem129[r3 + 1511:word32]
	Mem132[r2_130 + 20:byte] = Mem129[r2_130 + 20:byte] & ~0x08
	branch Mem132[r3 + 0x0000C67E:word32] != 0x00000004 l00012E14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E14:
	r4_140 = SEQ(SLICE(r4, word24, 8), 0x00)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E0F:
	r4_140 = SEQ(SLICE(r4, word24, 8), 0x04)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E16:
	Mem156[fp + -8:int32] = (int32) (int8) r4_140
	word32 r9_157 = 0x00000000
	branch (uint32) Mem156[r3 + 0x0000C688:word16] > 0x00000000 l00012E2B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E2B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E3C:
	word32 sp_170 = sp_169 - 0x00000004
	Mem171[sp_170:word32] = 0x00000004
	Mem175[sp_170 - 0x00000004:word32] = r3 + 152
	word32 ap_185
	word32 fp_186
	word32 r2_188
	word32 r3_189
	word32 r4_190
	word32 r5_191
	word32 r6_192
	word32 r7_193
	word32 sp_194
	word32 r0_187 = fn0000D5BE(r0, r3, r4_140, r5_184, r6_183, ap, fp, out r2_188, out r3_189, out r4_190, out r5_191, out r6_192, out r7_193, out ap_185, out fp_186, out sp_194)
	branch r0_187 != 0x00000000 l00012E51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E51:
	Mem204[sp_194 - 0x00000004:word32] = 0x00000004
	Mem207[sp_194 - 0x00000008:word32] = r3_189 + 0x0000C634
	Mem210[sp_194 - 0x0000000C:word32] = r3_189 + 152
	word32 sp_214
	word32 r5_215
	word32 r10_217
	word32 r6_218
	word32 r3_220
	word32 r0_221
	word32 r4_223
	word32 fp_224
	word32 r9_226
	word32 ap_227
	word32 r8_229
	call Mem210[0x000192D8:word32] + 2 (retsize: 4;)
		uses: ap:ap_185,fp:fp_186,r0:r0_187,r1:r1_235,r10:r10_216,r2:r2_188,r3:r3_189,r4:r4_190,r5:r5_191,r6:r6_192,r7:r7_193,r8:r8_228,r9:r9_225,sp:sp_194 - 0x0000000C,Stack +FFFFFFEC:dwLoc18_997,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
		defs: ap:ap_227,fp:fp_224,r0:r0_221,r10:r10_217,r3:r3_220,r4:r4_223,r5:r5_215,r6:r6_218,r8:r8_229,r9:r9_226,sp:sp_214
	branch r0_221 == 0x00000000 l00012E96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E96:
	word32 ap_236
	word32 fp_237
	word32 r1_239
	word32 r2_240
	word32 r3_241
	word32 r4_242
	word32 r5_243
	word32 r6_244
	word32 r7_245
	word32 sp_246
	word32 r0_238 = fn00011C0A(r0_221, r1, r3_220, r4_223, r5_215, r6_218, ap_227, fp_224, out r1_239, out r2_240, out r3_241, out r4_242, out r5_243, out r6_244, out r7_245, out ap_236, out fp_237, out sp_246)
	branch r0_238 == 0x00000000 l00012EA2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012EA2:
	Mem256[sp_246 - 0x00000004:word32] = 0x00000002
	Mem259[sp_246 - 0x00000008:uint32] = (uint32) Mem256[r3_241 + 0x0000C670:word16]
	word32 r7_267
	word32 r2_270
	word32 r9_273
	call r8_229 + 2 (retsize: 4;)
		uses: ap:ap_236,fp:fp_237,r0:r0_238,r1:r1_239,r10:r10_217,r2:r2_240,r3:r3_241,r4:r4_242,r5:r5_243,r6:r6_244,r7:r7_245,r8:r8_229,r9:r9_226,sp:sp_246 - 0x00000008,Stack +FFFFFFEC:dwLoc18_997,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
		defs: ap:ap_274,fp:fp_272,r0:r0_269,r1:r1_276,r10:r10_265,r2:r2_270,r3:r3_268,r4:r4_271,r5:r5_264,r6:r6_266,r7:r7_267,r8:r8_275,r9:r9_273,sp:sp_263
	branch r0 == 0x00000000 l00012EBB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012EB2:
	r10_216 = r0
	branch r0 <= 0x00000001 l00012EBB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012EBB:
	branch Mem259[r3 + 108:word32] != 0x00000000 l00012F3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012EC0:
	ap = Mem259[r3 + 144:word32] - 0x00000004
	r5_184 = 0x00000000
	r2_270 = ap + 0x00000004
	branch Mem259[ap + 0x00000004:word32] == 0x00000000 l00012EFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012ED0:
	word32 sp_300 = sp_169 - 0x00000004
	Mem304[sp_300:word32] = Mem302[r3 + 16:word32]
	Mem308[sp_300 - 0x00000004:word32] = Mem304[r2_270:word32]
	Mem311[sp_300 - 0x00000008:word32] = r3 + 0x0000C701
	call r4_140 + 2 (retsize: 4;)
		uses: ap:ap_334,fp:fp_330,r0:r0_326,r1:r1_338,r10:r10_319,r2:r2_306,r3:r3_301,r4:r4_315,r5:r5_317,r6:r6_321,r7:r7_323,r8:r8_336,r9:r9_332,sp:sp_300 - 0x00000008,Stack +FFFFFFEC:dwLoc18_997,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
		defs: ap:ap_335,fp:fp_331,r0:r0_327,r1:r1_339,r10:r10_320,r2:r2_328,r3:r3_325,r4:r4_329,r5:r5_318,r6:r6_322,r7:r7_324,r8:r8_337,r9:r9_333,sp:sp_316
	branch r0 == 0x00000000 l00012EF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012EF8:
	r2_270 = r2_270 + 0x00000004
	branch Mem311[r2_270 + 0x00000004:word32] != 0x00000000 l00012ED0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012EE2:
	r5_184 = 0x00000001
	branch r6_183 == 0x00000000 l00012EFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012EE9:
	ap = (r2_270 - Mem311[r3 + 144:word32]) / 0x00000004
	Mem358[r6_183:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012EFF:
	branch r5_184 == 0x00000000 l00012F3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F03:
	word32 r2_369 = Mem368[r3 + 148:word32] - 0x00000004
	r2_270 = r2_369 + 0x00000004
	branch Mem368[r2_369 + 0x00000004:word32] == 0x00000000 l00012F3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F10:
	word32 sp_376 = sp_169 - 0x00000004
	Mem380[sp_376:word32] = Mem378[r3 + 16:word32]
	Mem384[sp_376 - 0x00000004:word32] = Mem380[r2_270:word32]
	Mem387[sp_376 - 0x00000008:word32] = r3 + 0x0000C701
	call r4_140 + 2 (retsize: 4;)
		uses: ap:ap_410,fp:fp_406,r0:r0_402,r1:r1_414,r10:r10_395,r2:r2_382,r3:r3_377,r4:r4_391,r5:r5_393,r6:r6_397,r7:r7_399,r8:r8_412,r9:r9_408,sp:sp_376 - 0x00000008,Stack +FFFFFFEC:dwLoc18_997,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
		defs: ap:ap_411,fp:fp_407,r0:r0_403,r1:r1_415,r10:r10_396,r2:r2_404,r3:r3_401,r4:r4_405,r5:r5_394,r6:r6_398,r7:r7_400,r8:r8_413,r9:r9_409,sp:sp_392
	branch r0 == 0x00000000 l00012F38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F38:
	r2_270 = r2_270 + 0x00000004
	branch Mem387[r2_270 + 0x00000004:word32] != 0x00000000 l00012F10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F22:
	r5_184 = 0x00000000
	branch r7_267 == 0x00000000 l00012F3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F28:
	ap = (r2_270 - Mem387[r3 + 148:word32]) / 0x00000004
	Mem434[r7_267:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F3F:
	branch Mem439[r3 + 108:word32] != 0x00000000 l00012F4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F44:
	branch r5_184 != 0x00000000 l00012F4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F4B:
	word32 r0_452 = Mem439[r3 + 36:word32]
	branch r0_452 > 0x0000000A l00012F65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F65:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F4F_1:
	call 0x00012F53 + (r0_452 - 0x00000001) * 0x00000002 (retsize: 4;)
		uses: ap:ap_502,fp:fp_492,r0:r0_452,r1:r1_512,r10:r10_465,r2:r2_482,r3:r3_438,r4:r4_487,r5:r5_444,r6:r6_470,r7:r7_475,r8:r8_507,r9:r9_497,sp:sp_458,Stack +FFFFFFEC:dwLoc18_997,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012F48:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001307C:
	branch Mem439[r3 + 0x0000C672:word16] == 0x0000 l0001309D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013084:
	word32 sp_521 = sp_169 - 0x00000004
	Mem522[sp_521:word32] = 0x00000000
	Mem525[sp_521 - 0x00000004:uint32] = (uint32) Mem522[r3 + 0x0000C672:word16]
	call r8 + 2 (retsize: 4;)
		uses: ap:ap_502,fp:fp_492,r0:r0_535,r1:r1_512,r10:r10_465,r2:r2_482,r3:r3_438,r4:r4_487,r5:r5_444,r6:r6_470,r7:r7_475,r8:r8_507,r9:r9_497,sp:sp_521 - 0x00000004,Stack +FFFFFFEC:dwLoc18_997,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
		defs: ap:ap_543,fp:fp_541,r0:r0_538,r1:r1_545,r10:r10_531,r2:r2_539,r3:r3_534,r4:r4_540,r5:r5_530,r6:r6_532,r7:r7_533,r8:r8_544,r9:r9_542,sp:sp_529
	branch r0 == 0x00000000 l0001309D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013094:
	r10_216 = r0
	branch r0 <= 0x00000001 l0001309D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001309D:
	branch Mem556[r3 + 0x0000C674:word16] == 0x0000 l000130BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130A5:
	word32 sp_562 = sp_169 - 0x00000004
	Mem563[sp_562:word32] = 0x00000000
	Mem566[sp_562 - 0x00000004:uint32] = (uint32) Mem563[r3 + 0x0000C674:word16]
	call r8 + 2 (retsize: 4;)
		uses: ap:ap_591,fp:fp_587,r0:r0_581,r1:r1_594,r10:r10_574,r2:r2_583,r3:r3_555,r4:r4_585,r5:r5_572,r6:r6_576,r7:r7_578,r8:r8_570,r9:r9_589,sp:sp_562 - 0x00000004,Stack +FFFFFFEC:dwLoc18_997,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
		defs: ap:ap_592,fp:fp_588,r0:r0_582,r1:r1_595,r10:r10_575,r3:r3_580,r4:r4_586,r5:r5_573,r6:r6_577,r8:r8_593,r9:r9_590,sp:sp_571
	branch r0 == 0x00000000 l000130BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130B5:
	r10_216 = r0
	branch r0 <= 0x00000001 l000130BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130BE:
	r9_157 = r9_273 + 0x00000001
	branch r9_157 >= (uint32) Mem608[r3 + 0x0000C688:word16] l000130CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130CC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130BD:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001309C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012EBA:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012EA1:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E68:
	Mem627[sp_214 - 0x00000004:uint32] = 0x00000401
	Mem629[sp_214 - 0x00000008:word32] = r9_226
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E4D:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00012E28:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130CF:
	word32 sp_645 = sp_169 - 0x00000004
	Mem646[sp_645:word32] = 0x00000004
	Mem650[sp_645 - 0x00000004:word32] = r3 + 152
	word32 ap_675
	word32 fp_676
	word32 r2_678
	word32 r3_679
	word32 r4_680
	word32 r5_681
	word32 r6_682
	word32 r7_683
	word32 sp_684
	word32 r0_677 = fn0000D5BE(r0, r3, r4_140, r5_184, r6_183, ap, fp, out r2_678, out r3_679, out r4_680, out r5_681, out r6_682, out r7_683, out ap_675, out fp_676, out sp_684)
	branch r0_677 != 0x00000000 l000130E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130E4:
	Mem694[sp_684 - 0x00000004:word32] = 0x00000004
	Mem697[sp_684 - 0x00000008:word32] = r3_679 + 0x0000C639
	Mem700[sp_684 - 0x0000000C:word32] = r3_679 + 152
	word32 ap_721
	word32 r7_713
	word32 r3_714
	word32 r0_715
	word32 r5_705
	word32 r6_712
	word32 r2_716
	word32 r4_717
	word32 fp_718
	word32 r9_720
	word32 r8_727
	word32 r1_736
	word32 sp_704
	word32 r10_711
	call Mem700[0x000192D8:word32] + 2 (retsize: 4;)
		uses: ap:ap_675,fp:fp_676,r0:r0_677,r1:r1_728,r10:r10_706,r2:r2_678,r3:r3_679,r4:r4_680,r5:r5_681,r6:r6_682,r7:r7_683,r8:r8_722,r9:r9_719,sp:sp_684 - 0x0000000C,Stack +FFFFFFEC:dwLoc18_997,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
		defs: ap:ap_721,fp:fp_718,r0:r0_715,r1:r1_736,r10:r10_711,r2:r2_716,r3:r3_714,r4:r4_717,r5:r5_705,r6:r6_712,r7:r7_713,r8:r8_727,r9:r9_720,sp:sp_704
	branch r0_715 == 0x00000000 l00013126
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013126:
	branch Mem700[r3_714 + 68:word32] == 0x00000000 l000131A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131A4:
	branch r6_712 == 0x00000000 l000131F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131A8:
	word32 ap_750 = 0x00000000
	branch Mem700[r3_714 + 100:word32] <= 0x00000000 l000131ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131AF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131B0:
	branch Mem700[r6_712 + ap_750 * 4:word32] != 0x00000000 l000131E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131E5:
	ap_750 = ap_750 + 0x00000001
	branch ap_750 < Mem700[r3_714 + 100:word32] l000131B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131ED:
	Mem770[sp_704 - 0x00000004:word32] = r6_712
	call Mem770[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_802,fp:fp_718,r0:r0_715,r1:r1_736,r10:r10_711,r2:r2_716,r3:r3_714,r4:r4_717,r5:r5_705,r6:r6_712,r7:r7_713,r8:r8_727,r9:r9_720,sp:sp_704 - 0x00000004,Stack +FFFFFFEC:dwLoc18_997,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
		defs: fp:fp_798,r0:r0_789,r1:r1_809,r10:r10_780,r2:r2_792,r3:r3_786,r4:r4_795,r5:r5_777,r6:r6_781,r7:r7_784,r8:r8_806,r9:r9_801,sp:sp_774
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131F6:
	branch r7_713 == 0x00000000 l0001324A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131FA:
	word32 ap_816 = 0x00000000
	branch Mem818[r3_714 + 104:word32] <= 0x00000000 l00013241
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013201:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013204:
	branch Mem818[r7_713 + ap_816 * 4:word32] != 0x00000000 l00013239
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013239:
	ap_816 = ap_816 + 0x00000001
	branch ap_816 < Mem818[r3_714 + 104:word32] l00013204
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013241:
	word32 sp_841 = sp_704 - 0x00000004
	Mem843[sp_841:word32] = r7_713
	call Mem843[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_882,fp:fp_875,r0:r0_822,r1:r1_889,r10:r10_853,r2:r2_867,r3:r3_817,r4:r4_871,r5:r5_849,r6:r6_857,r7:r7_811,r8:r8_885,r9:r9_879,sp:sp_841,Stack +FFFFFFEC:dwLoc18_997,Stack +FFFFFFF2:0x0000,Stack +FFFFFFF4:0x0000000000000000
		defs: r10:r10_855,sp:sp_847
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001324A:
	branch (uint32) Mem894[sp_704 + 2:word16] != 0x00000000 l00013258
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013250:
	branch r10_711 > 0x00000001 l00013258
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013255:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013258:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013209:
	word32 sp_919 = sp_704 - 0x00000004
	Mem921[sp_919:uint32] = 0x00000401
	Mem925[sp_919 - 0x00000004:word32] = Mem921[Mem921[r3_714 + 148:word32] + ap_816 * 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000131B5:
	Mem931[sp_704 - 0x00000004:uint32] = 0x00000401
	Mem935[sp_704 - 0x00000008:word32] = Mem931[Mem931[r3_714 + 144:word32] + ap_750 * 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001312B:
	Mem941[sp_704 - 0x00000004:word32] = Mem700[sp_704 + 0x00000004:word32]
	Mem944[sp_704 - 0x00000008:word32] = Mem941[sp_704:word32]
	word32 sp_957
	branch fn00017662(ap_721, fp_718, out sp_957) >= 0x00000000 l0001314E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013144:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001314E:
	Mem971[sp_957 - 0x00000004:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130FB:
	Mem977[sp_704 - 0x00000004:uint32] = 0x00000401
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000130E0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00012D86_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0001325E(word32 r0, word32 r1, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0001325E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001325E:
	word32 sp_3 = fp + -236
	word32 r2_7 = Mem5[Mem5[ap + 4:word32]:word32]
	branch Mem5[r5 + 0x0000C67E:word32] == r2_7 l000132B7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013288:
	branch r2_7 == 0x00000000 l000132B7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001328C:
	word32 v13_19 = Mem17[r5 + 0x0000C67E:word32] - r2_7
	word32 sp_31
	word32 ap_32
	word32 r5_34
	word32 r6_35
	word32 r0_37
	word32 r3_39
	word32 fp_41
	word32 r4_43
	word32 r9_45
	word32 r10_47
	word32 r8_49
	word32 r7_51
	word32 r1_53
	word32 r11_55
	call Mem27[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r1:r1,r10:r10,r11:r11,r2:r2_7,r3:r3,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9,sp:fp + 0xFFFFFF04,Stack +0004:r5 + 1515,Stack +0008:r6 + 1743,Stack +000C:v13_19,Stack +0010:0x00000000,Stack +001C:0x00000000
		defs: ap:ap_32,fp:fp_41,r0:r0_37,r1:r1_53,r10:r10_47,r11:r11_55,r3:r3_39,r4:r4_43,r5:r5_34,r6:r6_35,r7:r7_51,r8:r8_49,r9:r9_45,sp:sp_31
	Mem58[sp_31 - 0x00000004:word32] = r0_37
	Mem61[sp_31 - 0x00000008:word32] = r5_34 + 1515
	Mem63[sp_31 - 0x0000000C:word32] = r5_34
	word32 r2_64 = Mem63[r5_34 + 0x0000C839:word32]
	call r2_64 + 2 (retsize: 4;)
		uses: ap:ap_32,fp:fp_41,r0:r0_37,r1:r1_53,r10:r10_47,r11:r11_55,r2:r2_64,r3:r3_39,r4:r4_43,r5:r5_34,r6:r6_35,r7:r7_51,r8:r8_49,r9:r9_45,sp:sp_31 - 0x0000000C,Stack +FFFFFF08:r5 + 1515,Stack +FFFFFF0C:r6 + 1743,Stack +FFFFFF10:v13_19,Stack +FFFFFF14:0x00000000,Stack +FFFFFF20:0x00000000
		defs: ap:ap_69,fp:fp_75,r1:r1_81,r10:r10_78,r4:r4_76,r5:r5_71,r6:r6_72,r7:r7_80,r8:r8_79,r9:r9_77,sp:sp_68
	dwLocF0 = 0x00000000
	dwLocF4 = v13_19
	dwLocF8 = r6 + 1743
	dwLocFC = r5 + 1515
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000132B7:
	word32 r2_91 = (uint32) Mem85[r5 + 0x0000C674:word16]
	word32 r3_138 = Mem85[r5 + 0x0000C67E:word32] + 0x0000001E + (uint32) Mem85[r5 + 0x0000C670:word16] + (uint32) Mem85[r5 + 0x0000C672:word16] + r2_91
	Mem95[Mem85[ap + 4:word32]:word32] = r3_138 + Mem85[r5 + 0x0000C668:word32]
	word32 sp_97 = sp_3 - 0x00000004
	Mem98[sp_97:word32] = 0x00000003
	Mem101[sp_97 - 0x00000004:uint32] = (uint32) Mem98[r5 + 0x0000C672:word16]
	word32 sp_110
	word32 fp_107
	word32 ap_106
	word32 r11_109
	word32 r0_108 = fn0000DC76(ap, fp, out r11_109, out ap_106, out fp_107, out sp_110)
	Mem116[sp_110 + 4:word32] = r0_108
	branch r0_108 == 0x00000000 l0001331C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000132FC:
	branch Mem116[r5 + 0x0000C627:word32] == 0x00000000 l00013317
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013304:
	Mem127[sp_110 - 0x00000004:word32] = Mem116[r5 + 0x0000C627:word32]
	call Mem127[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_106,fp:fp_107,r0:r0_108,r1:r1_150,r10:r10_144,r11:r11_109,r2:r2_91,r3:r3_92,r4:r4_140,r5:r5_84,r6:r6_135,r7:r7_148,r8:r8_146,r9:r9_142,sp:sp_110 - 0x00000004,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_132,fp:fp_139,r0:r0_137,r1:r1_151,r10:r10_145,r11:r11_152,r3:r3_138,r4:r4_141,r5:r5_134,r6:r6_136,r7:r7_149,r8:r8_147,r9:r9_143,sp:sp_131
	Mem155[r5 + 0x0000C627:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013317:
	Mem163[sp_110 + 8:word32] = Mem161[sp_110 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001331C:
	word32 r4_186
	Mem173[sp_110 + 2:word16] = Mem169[Mem169[r5 + 1511:word32] + 12:word16]
	Mem177[fp_107 + -6:uint16] = (uint16) Mem173[r5 + 0x0000C658:byte]
	branch (uint32) Mem177[r5 + 0x0000C65B:byte] >=u 0x00000012 l00013344
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013344:
	r4_186 = SEQ(SLICE(r4, word24, 8), 0x12)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001333A:
	r4_186 = SEQ(SLICE(r4, word24, 8), Mem177[r5 + 0x0000C65B:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013347:
	word32 r3_220
	word32 r9_202 = SEQ(SLICE(r9, word16, 16), (uint16) (byte) r4_186)
	word32 r10_210 = SEQ(SLICE(r10, word16, 16), (uint16) Mem177[r5 + 0x0000C65A:byte])
	branch (uint32) Mem177[r5 + 0x0000C65E:word16] >=u 0x0000000B l00013368
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013368:
	r3_220 = SEQ(SLICE(r3_138, word16, 16), 0x000B)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001335D:
	r3_220 = SEQ(SLICE(r3_138, word16, 16), Mem177[r5 + 0x0000C65E:word16])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001336B:
	word32 r4_372
	Mem234[sp_110 + 16:word16] = (word16) r3_220
	word32 sp_235 = sp_110 - 0x00000004
	Mem236[sp_235:word32] = 0x00000000
	Mem238[sp_235 - 0x00000004:word32] = 0x00000002
	Mem245[sp_235 - 0x00000008:word32] = r8 + 42
	Mem248[sp_235 - 0x0000000C:word32] = r5
	word32 r2_249 = Mem248[r5 + 0x0000C839:word32]
	word32 ap_258
	word32 r2_259
	word32 r5_260
	word32 r6_265
	word32 fp_274
	word32 r4_276
	word32 r9_278
	word32 r10_280
	word32 r8_281
	word32 r7_286
	word32 r1_291
	word32 r11_296
	call r2_249 + 2 (retsize: 4;)
		uses: ap:ap_256,fp:fp_175,r0:r0_268,r1:r1_289,r10:r10_210,r11:r11_294,r2:r2_249,r3:r3_230,r4:r4_196,r5:r5_167,r6:r6_263,r7:r7_284,r8:r8_242,r9:r9_202,sp:sp_235 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_258,fp:fp_274,r1:r1_291,r10:r10_280,r11:r11_296,r2:r2_259,r4:r4_276,r5:r5_260,r6:r6_265,r7:r7_286,r8:r8_281,r9:r9_278
	word32 ap_298
	word32 fp_299
	word32 r2_301
	word32 r3_302
	word32 sp_303
	word32 r0_300 = fn00017772(r2_259, ap_258, fp_274, out r2_301, out r3_302, out ap_298, out fp_299, out sp_303)
	Mem309[sp_303 - 0x00000004:word32] = 0x00000000
	Mem312[sp_303 - 0x00000008:word32] = Mem309[r5_260 + 0x0000C67E:word32]
	Mem315[sp_303 - 0x0000000C:word32] = Mem312[r5_260 + 0x0000C67E:word32]
	Mem318[sp_303 - 0x00000010:word32] = r6_265 + 1810
	Mem321[sp_303 - 0x00000014:word32] = r5_260 + 1515
	word32 sp_325
	word32 ap_326
	word32 r5_328
	word32 r6_329
	word32 r0_330
	word32 r3_331
	word32 fp_332
	word32 r4_333
	word32 r9_334
	word32 r10_335
	word32 r8_336
	word32 r7_337
	word32 r1_338
	word32 r11_339
	call Mem321[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_298,fp:fp_299,r0:r0_300,r1:r1_291,r10:r10_280,r11:r11_296,r2:r2_301,r3:r3_302,r4:r4_276,r5:r5_260,r6:r6_265,r7:r7_286,r8:r8_281,r9:r9_278,sp:sp_303 - 0x00000014,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_326,fp:fp_332,r0:r0_330,r1:r1_338,r10:r10_335,r11:r11_339,r3:r3_331,r4:r4_333,r5:r5_328,r6:r6_329,r7:r7_337,r8:r8_336,r9:r9_334,sp:sp_325
	Mem342[sp_325 - 0x00000004:word32] = r0_330
	Mem345[sp_325 - 0x00000008:word32] = r5_328 + 1515
	Mem347[sp_325 - 0x0000000C:word32] = r5_328
	word32 r2_348 = Mem347[r5_328 + 0x0000C839:word32]
	word32 r4_360
	word32 r7_364
	word32 sp_352
	word32 r6_356
	word32 r5_355
	word32 ap_353
	word32 r2_354
	word32 r0_357
	word32 fp_359
	word32 r9_361
	word32 r10_362
	word32 r8_363
	word32 r1_365
	word32 r11_366
	call r2_348 + 2 (retsize: 4;)
		uses: ap:ap_326,fp:fp_332,r0:r0_330,r1:r1_338,r10:r10_335,r11:r11_339,r2:r2_348,r3:r3_331,r4:r4_333,r5:r5_328,r6:r6_329,r7:r7_337,r8:r8_336,r9:r9_334,sp:sp_325 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_353,fp:fp_359,r0:r0_357,r1:r1_365,r10:r10_362,r11:r11_366,r2:r2_354,r4:r4_360,r5:r5_355,r6:r6_356,r7:r7_364,r8:r8_363,r9:r9_361,sp:sp_352
	word32 r3_368 = (uint32) Mem347[sp_352 + 2:word16]
	branch r3_368 <u 0x00000012 l000133DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000133DC:
	r4_372 = Mem347[r6_356 + 5188 + r3_368 * 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000133C1:
	Mem378[sp_352 - 0x00000004:uint32] = (uint32) Mem347[r5_355 + 0x0000C659:byte]
	Mem381[sp_352 - 0x00000008:word32] = r6_356 + 1797
	Mem384[sp_352 - 0x0000000C:word32] = fp_359 + -58
	call Mem384[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_353,fp:fp_359,r0:r0_357,r1:r1_365,r10:r10_362,r11:r11_366,r2:r2_354,r3:r3_368,r4:r4_360,r5:r5_355,r6:r6_356,r7:r7_364,r8:r8_363,r9:r9_361,sp:sp_352 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_389,fp:fp_395,r0:r0_393,r1:r1_401,r10:r10_398,r11:r11_402,r2:r2_390,r3:r3_394,r5:r5_391,r6:r6_392,r8:r8_399,r9:r9_397,sp:sp_388
	r4_372 = fp_359 + -58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000133E2:
	word32 sp_409 = sp_352 - 0x00000004
	Mem410[sp_409:word32] = 0x00000000
	Mem413[sp_409 - 0x00000004:word32] = r4_372
	Mem417[sp_409 - 0x00000008:word32] = r6_356 + 1883
	Mem421[sp_409 - 0x0000000C:word32] = r5_355 + 1515
	word32 r7_422 = Mem421[0x000192D0:word32]
	word32 sp_426
	word32 ap_428
	word32 r5_431
	word32 r6_432
	word32 r0_434
	word32 r3_436
	word32 fp_438
	word32 r4_439
	word32 r9_441
	word32 r10_443
	word32 r8_445
	word32 r7_446
	word32 r1_448
	word32 r11_450
	call r7_422 + 2 (retsize: 4;)
		uses: ap:ap_427,fp:fp_437,r0:r0_433,r1:r1_447,r10:r10_442,r11:r11_449,r2:r2_429,r3:r3_435,r4:r4_412,r5:r5_419,r6:r6_415,r7:r7_422,r8:r8_444,r9:r9_440,sp:sp_409 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_428,fp:fp_438,r0:r0_434,r1:r1_448,r10:r10_443,r11:r11_450,r3:r3_436,r4:r4_439,r5:r5_431,r6:r6_432,r7:r7_446,r8:r8_445,r9:r9_441,sp:sp_426
	Mem453[sp_426 - 0x00000004:word32] = r0_434
	Mem456[sp_426 - 0x00000008:word32] = r5_431 + 1515
	Mem458[sp_426 - 0x0000000C:word32] = r5_431
	word32 r2_459 = Mem458[r5_431 + 0x0000C839:word32]
	word32 sp_463
	word32 ap_464
	word32 r5_466
	word32 r6_467
	word32 r3_469
	word32 fp_470
	word32 r4_471
	word32 r9_472
	word32 r10_473
	word32 r8_474
	word32 r7_475
	word32 r11_477
	call r2_459 + 2 (retsize: 4;)
		uses: ap:ap_428,fp:fp_438,r0:r0_434,r1:r1_448,r10:r10_443,r11:r11_450,r2:r2_459,r3:r3_436,r4:r4_439,r5:r5_431,r6:r6_432,r7:r7_446,r8:r8_445,r9:r9_441,sp:sp_426 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_464,fp:fp_470,r10:r10_473,r11:r11_477,r3:r3_469,r4:r4_471,r5:r5_466,r6:r6_467,r7:r7_475,r8:r8_474,r9:r9_472,sp:sp_463
	Mem480[sp_463 - 0x00000004:word32] = 0x00000000
	word32 r1_481 = 0x00000000
	word32 r0_482 = (uint32) Mem480[fp_470 + -6:word16]
	branch 0x0000000A == 0x00000000 l00013430
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013417:
	branch 0x00000009 == 0x00000000 l00013435
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001341C:
	branch true l00013430
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013430:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001341E:
	branch r0_482 == 0x0000000A l00013435
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013423:
	branch r0_482 <u 0x0000000A l00013428
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013425:
	r1_481 = 0xFFFFFFF6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013428:
	r1_481 = r1_481 + r0_482
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013435:
	Mem507[sp_463 - 0x00000008:uint32] = (uint32) (word16) r1_481
	word32 r2_510 = (uint32) Mem507[fp_470 + -6:word16]
	word32 r1_511 = 0x00000000
	branch true l00013450
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013450:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013446:
	branch r2_510 <u 0x0000000A l00013455
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001344B:
	r1_511 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013455:
	word32 r4_616
	Mem526[sp_463 - 0x0000000C:word32] = r1_511
	Mem532[sp_463 - 0x00000010:word32] = r6_467 + 1939
	Mem538[sp_463 - 0x00000014:word32] = r5_466 + 1515
	word32 sp_545
	word32 ap_549
	word32 r5_552
	word32 r6_553
	word32 r0_555
	word32 r3_559
	word32 fp_561
	word32 r4_565
	word32 r9_569
	word32 r10_573
	word32 r8_577
	word32 r7_578
	word32 r1_579
	word32 r11_583
	call r7_475 + 2 (retsize: 4;)
		uses: ap:ap_464,fp:fp_470,r0:r2_510,r1:r1_525,r10:r10_473,r11:r11_477,r2:0x0000000A,r3:r3_469,r4:r4_471,r5:r5_466,r6:r6_467,r7:r7_475,r8:r8_474,r9:r9_472,sp:sp_463 - 0x00000014,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_549,fp:fp_561,r0:r0_555,r1:r1_579,r10:r10_573,r11:r11_583,r3:r3_559,r4:r4_565,r5:r5_552,r6:r6_553,r7:r7_578,r8:r8_577,r9:r9_569,sp:sp_545
	Mem586[sp_545 - 0x00000004:word32] = r0_555
	Mem589[sp_545 - 0x00000008:word32] = r5_552 + 1515
	Mem591[sp_545 - 0x0000000C:word32] = r5_552
	word32 r2_592 = Mem591[r5_552 + 0x0000C839:word32]
	word32 r4_604
	word32 r7_608
	word32 sp_596
	word32 r6_600
	word32 r5_599
	word32 ap_597
	word32 r2_598
	word32 r0_601
	word32 fp_603
	word32 r9_605
	word32 r10_606
	word32 r8_607
	word32 r1_609
	word32 r11_610
	call r2_592 + 2 (retsize: 4;)
		uses: ap:ap_549,fp:fp_561,r0:r0_555,r1:r1_579,r10:r10_573,r11:r11_583,r2:r2_592,r3:r3_559,r4:r4_565,r5:r5_552,r6:r6_553,r7:r7_578,r8:r8_577,r9:r9_569,sp:sp_545 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_597,fp:fp_603,r0:r0_601,r1:r1_609,r10:r10_606,r11:r11_610,r2:r2_598,r4:r4_604,r5:r5_599,r6:r6_600,r7:r7_608,r8:r8_607,r9:r9_605,sp:sp_596
	word32 r3_612 = (uint32) (word16) r9_605
	branch r3_612 <u 0x00000012 l00013494
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013494:
	r4_616 = Mem591[r6_600 + 5188 + r3_612 * 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001347C:
	Mem622[sp_596 - 0x00000004:uint32] = (uint32) Mem591[r5_599 + 0x0000C65B:byte]
	Mem625[sp_596 - 0x00000008:word32] = r6_600 + 1797
	Mem628[sp_596 - 0x0000000C:word32] = fp_603 + -58
	call r7_608 + 2 (retsize: 4;)
		uses: ap:ap_597,fp:fp_603,r0:r0_601,r1:r1_609,r10:r10_606,r11:r11_610,r2:r2_598,r3:r3_612,r4:r4_604,r5:r5_599,r6:r6_600,r7:r7_608,r8:r8_607,r9:r9_605,sp:sp_596 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_633,fp:fp_639,r0:r0_637,r1:r1_645,r10:r10_642,r11:r11_646,r2:r2_634,r3:r3_638,r5:r5_635,r6:r6_636,r8:r8_643,r9:r9_641,sp:sp_632
	r4_616 = fp_603 + -58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001349A:
	word32 sp_653 = sp_596 - 0x00000004
	Mem654[sp_653:word32] = 0x00000000
	Mem657[sp_653 - 0x00000004:word32] = r4_616
	Mem661[sp_653 - 0x00000008:word32] = r6_600 + 1998
	Mem665[sp_653 - 0x0000000C:word32] = r5_599 + 1515
	word32 r7_666 = Mem665[0x000192D0:word32]
	word32 sp_670
	word32 ap_672
	word32 r5_675
	word32 r6_676
	word32 r0_678
	word32 r3_680
	word32 fp_682
	word32 r4_683
	word32 r9_685
	word32 r10_687
	word32 r8_689
	word32 r7_690
	word32 r1_692
	word32 r11_694
	call r7_666 + 2 (retsize: 4;)
		uses: ap:ap_671,fp:fp_681,r0:r0_677,r1:r1_691,r10:r10_686,r11:r11_693,r2:r2_673,r3:r3_679,r4:r4_656,r5:r5_663,r6:r6_659,r7:r7_666,r8:r8_688,r9:r9_684,sp:sp_653 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_672,fp:fp_682,r0:r0_678,r1:r1_692,r10:r10_687,r11:r11_694,r3:r3_680,r4:r4_683,r5:r5_675,r6:r6_676,r7:r7_690,r8:r8_689,r9:r9_685,sp:sp_670
	Mem697[sp_670 - 0x00000004:word32] = r0_678
	Mem700[sp_670 - 0x00000008:word32] = r5_675 + 1515
	Mem702[sp_670 - 0x0000000C:word32] = r5_675
	word32 r2_703 = Mem702[r5_675 + 0x0000C839:word32]
	word32 sp_707
	word32 ap_708
	word32 r5_710
	word32 r6_711
	word32 r3_713
	word32 fp_714
	word32 r4_715
	word32 r9_716
	word32 r10_717
	word32 r8_718
	word32 r7_719
	word32 r11_721
	call r2_703 + 2 (retsize: 4;)
		uses: ap:ap_672,fp:fp_682,r0:r0_678,r1:r1_692,r10:r10_687,r11:r11_694,r2:r2_703,r3:r3_680,r4:r4_683,r5:r5_675,r6:r6_676,r7:r7_690,r8:r8_689,r9:r9_685,sp:sp_670 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_708,fp:fp_714,r10:r10_717,r11:r11_721,r3:r3_713,r4:r4_715,r5:r5_710,r6:r6_711,r7:r7_719,r8:r8_718,r9:r9_716,sp:sp_707
	Mem724[sp_707 - 0x00000004:word32] = 0x00000000
	word32 r1_725 = 0x00000000
	word32 r0_726 = (uint32) (word16) r10_717
	branch 0x0000000A == 0x00000000 l000134E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000134CE:
	branch 0x00000009 == 0x00000000 l000134E9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000134D3:
	branch true l000134E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000134E4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000134D5:
	branch r0_726 == 0x0000000A l000134E9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000134DA:
	branch r0_726 <u 0x0000000A l000134DF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000134DC:
	r1_725 = 0xFFFFFFF6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000134DF:
	r1_725 = r1_725 + r0_726
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000134E9:
	Mem751[sp_707 - 0x00000008:uint32] = (uint32) (word16) r1_725
	word32 r2_754 = (uint32) (word16) r10_717
	word32 r1_755 = 0x00000000
	branch true l00013504
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013504:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000134F9:
	branch r2_754 <u 0x0000000A l00013509
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000134FE:
	r1_755 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013509:
	word32 r4_860
	Mem770[sp_707 - 0x0000000C:word32] = r1_755
	Mem776[sp_707 - 0x00000010:word32] = r6_711 + 2054
	Mem782[sp_707 - 0x00000014:word32] = r5_710 + 1515
	word32 sp_789
	word32 ap_793
	word32 r5_796
	word32 r6_797
	word32 r0_799
	word32 r3_803
	word32 fp_807
	word32 r4_811
	word32 r9_815
	word32 r10_817
	word32 r8_821
	word32 r7_822
	word32 r1_823
	word32 r11_827
	call r7_719 + 2 (retsize: 4;)
		uses: ap:ap_708,fp:fp_714,r0:r2_754,r1:r1_769,r10:r10_717,r11:r11_721,r2:0x0000000A,r3:r3_713,r4:r4_715,r5:r5_710,r6:r6_711,r7:r7_719,r8:r8_718,r9:r9_716,sp:sp_707 - 0x00000014,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_793,fp:fp_807,r0:r0_799,r1:r1_823,r10:r10_817,r11:r11_827,r3:r3_803,r4:r4_811,r5:r5_796,r6:r6_797,r7:r7_822,r8:r8_821,r9:r9_815,sp:sp_789
	Mem830[sp_789 - 0x00000004:word32] = r0_799
	Mem833[sp_789 - 0x00000008:word32] = r5_796 + 1515
	Mem835[sp_789 - 0x0000000C:word32] = r5_796
	word32 r2_836 = Mem835[r5_796 + 0x0000C839:word32]
	word32 r4_848
	word32 r7_852
	word32 sp_840
	word32 r6_844
	word32 r5_843
	word32 ap_841
	word32 r2_842
	word32 r0_845
	word32 fp_847
	word32 r9_849
	word32 r10_850
	word32 r8_851
	word32 r1_853
	word32 r11_854
	call r2_836 + 2 (retsize: 4;)
		uses: ap:ap_793,fp:fp_807,r0:r0_799,r1:r1_823,r10:r10_817,r11:r11_827,r2:r2_836,r3:r3_803,r4:r4_811,r5:r5_796,r6:r6_797,r7:r7_822,r8:r8_821,r9:r9_815,sp:sp_789 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_841,fp:fp_847,r0:r0_845,r1:r1_853,r10:r10_850,r11:r11_854,r2:r2_842,r4:r4_848,r5:r5_843,r6:r6_844,r7:r7_852,r8:r8_851,r9:r9_849,sp:sp_840
	word32 r3_856 = (uint32) Mem835[sp_840 + 16:word16]
	branch r3_856 <u 0x0000000B l00013548
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013548:
	r4_860 = Mem835[r6_844 + 5260 + r3_856 * 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013531:
	Mem866[sp_840 - 0x00000004:uint32] = (uint32) Mem835[r5_843 + 0x0000C65E:word16]
	Mem869[sp_840 - 0x00000008:word32] = r6_844 + 1797
	Mem872[sp_840 - 0x0000000C:word32] = fp_847 + -58
	call r7_852 + 2 (retsize: 4;)
		uses: ap:ap_841,fp:fp_847,r0:r0_845,r1:r1_853,r10:r10_850,r11:r11_854,r2:r2_842,r3:r3_856,r4:r4_848,r5:r5_843,r6:r6_844,r7:r7_852,r8:r8_851,r9:r9_849,sp:sp_840 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_877,fp:fp_883,r0:r0_881,r1:r1_889,r10:r10_886,r11:r11_890,r2:r2_878,r3:r3_882,r5:r5_879,r6:r6_880,r8:r8_887,r9:r9_885,sp:sp_876
	r4_860 = fp_847 + -58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001354E:
	word32 sp_897 = sp_840 - 0x00000004
	Mem898[sp_897:word32] = 0x00000000
	Mem901[sp_897 - 0x00000004:word32] = r4_860
	Mem905[sp_897 - 0x00000008:word32] = r6_844 + 2113
	Mem909[sp_897 - 0x0000000C:word32] = r5_843 + 1515
	word32 r7_910 = Mem909[0x000192D0:word32]
	word32 sp_914
	word32 ap_916
	word32 r5_919
	word32 r6_920
	word32 r0_922
	word32 r3_924
	word32 fp_926
	word32 r4_927
	word32 r9_929
	word32 r10_931
	word32 r8_933
	word32 r7_934
	word32 r1_936
	word32 r11_938
	call r7_910 + 2 (retsize: 4;)
		uses: ap:ap_915,fp:fp_925,r0:r0_921,r1:r1_935,r10:r10_930,r11:r11_937,r2:r2_917,r3:r3_923,r4:r4_900,r5:r5_907,r6:r6_903,r7:r7_910,r8:r8_932,r9:r9_928,sp:sp_897 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_916,fp:fp_926,r0:r0_922,r1:r1_936,r10:r10_931,r11:r11_938,r3:r3_924,r4:r4_927,r5:r5_919,r6:r6_920,r7:r7_934,r8:r8_933,r9:r9_929,sp:sp_914
	Mem941[sp_914 - 0x00000004:word32] = r0_922
	Mem944[sp_914 - 0x00000008:word32] = r5_919 + 1515
	Mem946[sp_914 - 0x0000000C:word32] = r5_919
	word32 r2_947 = Mem946[r5_919 + 0x0000C839:word32]
	word32 r3_957
	word32 sp_1021
	word32 r5_1024
	word32 r8_1032
	word32 r6_1025
	word32 ap_1022
	word32 r0_1026
	word32 fp_1028
	word32 r9_1030
	word32 r10_1031
	word32 r7_1033
	word32 r1_1034
	word32 r11_1035
	call r2_947 + 2 (retsize: 4;)
		uses: ap:ap_916,fp:fp_926,r0:r0_922,r1:r1_936,r10:r10_931,r11:r11_938,r2:r2_947,r3:r3_924,r4:r4_927,r5:r5_919,r6:r6_920,r7:r7_934,r8:r8_933,r9:r9_929,sp:sp_914 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_952,fp:fp_958,r0:r0_956,r1:r1_964,r10:r10_961,r11:r11_965,r3:r3_957,r5:r5_954,r6:r6_955,r7:r7_963,r8:r8_962,r9:r9_960,sp:sp_951
	word32 r4_967 = (uint32) Mem946[sp_1021 + 16:word16]
	branch r4_967 != 0x00000006 l000135F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000135F4:
	branch r4_967 != 0x00000008 l00013638
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000135F9:
	Mem978[fp_1028 + -8:int16] = (int16) ((uint32) Mem946[r5_1024 + 0x0000C65C:word16] >> 1 & ~0xFFFFFFFC)
	Mem980[sp_1021 - 0x00000004:word32] = 0x00000000
	word32 r2_981 = (uint32) Mem980[fp_1028 + -8:word16]
	Mem984[sp_1021 - 0x00000008:word32] = Mem980[r6_1025 + 5304 + r2_981 * 4:word32]
	Mem987[sp_1021 - 0x0000000C:word32] = r6_1025 + 2282
	Mem990[sp_1021 - 0x00000010:word32] = r5_1024 + 1515
	word32 sp_994
	word32 ap_995
	word32 r5_997
	word32 r6_998
	word32 r0_999
	word32 r3_1000
	word32 fp_1001
	word32 r4_1002
	word32 r9_1003
	word32 r10_1004
	word32 r8_1005
	word32 r7_1006
	word32 r1_1007
	word32 r11_1008
	call r7_1033 + 2 (retsize: 4;)
		uses: ap:ap_952,fp:fp_958,r0:r0_956,r1:r1_964,r10:r10_961,r11:r11_965,r2:r2_981,r3:r3_957,r4:r4_967,r5:r5_954,r6:r6_955,r7:r7_963,r8:r8_962,r9:r9_960,sp:sp_951 - 0x00000010,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_995,fp:fp_1001,r0:r0_999,r1:r1_1007,r10:r10_1004,r11:r11_1008,r3:r3_1000,r4:r4_1002,r5:r5_997,r6:r6_998,r7:r7_1006,r8:r8_1005,r9:r9_1003,sp:sp_994
	Mem1011[sp_994 - 0x00000004:word32] = r0_999
	Mem1014[sp_994 - 0x00000008:word32] = r5_997 + 1515
	Mem1016[sp_994 - 0x0000000C:word32] = r5_997
	word32 r2_1017 = Mem1016[r5_997 + 0x0000C839:word32]
	call r2_1017 + 2 (retsize: 4;)
		uses: ap:ap_995,fp:fp_1001,r0:r0_999,r1:r1_1007,r10:r10_1004,r11:r11_1008,r2:r2_1017,r3:r3_1000,r4:r4_1002,r5:r5_997,r6:r6_998,r7:r7_1006,r8:r8_1005,r9:r9_1003,sp:sp_994 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1022,fp:fp_1028,r0:r0_1026,r1:r1_1034,r10:r10_1031,r11:r11_1035,r5:r5_1024,r6:r6_1025,r7:r7_1033,r8:r8_1032,r9:r9_1030,sp:sp_1021
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001357F:
	word32 r3_1045
	Mem1038[sp_1021 - 0x00000004:word32] = 0x00000000
	word32 r2_1039 = (uint32) Mem1038[r5_1024 + 0x0000C65C:word16]
	branch (r2_1039 & 0x00000002) == 0x00000000 l00013594
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013594:
	r3_1045 = SEQ(SLICE(r3_957, word24, 8), 0x34)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001358C:
	r3_1045 = SEQ(SLICE(r3_957, word24, 8), 0x38)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013597:
	word32 r3_1133
	Mem1059[sp_1021 - 0x00000008:int32] = (int32) (int8) r3_1045
	Mem1063[sp_1021 - 0x0000000C:word32] = r6_1025 + 2169
	Mem1067[sp_1021 - 0x00000010:word32] = r5_1024 + 1515
	word32 sp_1072
	word32 ap_1074
	word32 r5_1077
	word32 r6_1078
	word32 r0_1080
	word32 r3_1081
	word32 fp_1083
	word32 r4_1085
	word32 r9_1087
	word32 r10_1089
	word32 r8_1091
	word32 r7_1092
	word32 r1_1094
	word32 r11_1096
	call r7_1033 + 2 (retsize: 4;)
		uses: ap:ap_952,fp:fp_958,r0:r0_956,r1:r1_964,r10:r10_961,r11:r11_965,r2:r2_1039,r3:r3_1057,r4:r4_967,r5:r5_954,r6:r6_955,r7:r7_963,r8:r8_962,r9:r9_960,sp:sp_951 - 0x00000010,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1074,fp:fp_1083,r0:r0_1080,r1:r1_1094,r10:r10_1089,r11:r11_1096,r3:r3_1081,r4:r4_1085,r5:r5_1077,r6:r6_1078,r7:r7_1092,r8:r8_1091,r9:r9_1087,sp:sp_1072
	Mem1099[sp_1072 - 0x00000004:word32] = r0_1080
	Mem1102[sp_1072 - 0x00000008:word32] = r5_1077 + 1515
	Mem1104[sp_1072 - 0x0000000C:word32] = r5_1077
	word32 r2_1105 = Mem1104[r5_1077 + 0x0000C839:word32]
	word32 sp_1109
	word32 ap_1110
	word32 r5_1112
	word32 r6_1113
	word32 r0_1114
	word32 r3_1115
	word32 fp_1116
	word32 r4_1117
	word32 r9_1118
	word32 r10_1119
	word32 r8_1120
	word32 r7_1121
	word32 r1_1122
	word32 r11_1123
	call r2_1105 + 2 (retsize: 4;)
		uses: ap:ap_1074,fp:fp_1083,r0:r0_1080,r1:r1_1094,r10:r10_1089,r11:r11_1096,r2:r2_1105,r3:r3_1081,r4:r4_1085,r5:r5_1077,r6:r6_1078,r7:r7_1092,r8:r8_1091,r9:r9_1087,sp:sp_1072 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1110,fp:fp_1116,r0:r0_1114,r1:r1_1122,r10:r10_1119,r11:r11_1123,r3:r3_1115,r4:r4_1117,r5:r5_1112,r6:r6_1113,r7:r7_1121,r8:r8_1120,r9:r9_1118,sp:sp_1109
	Mem1126[sp_1109 - 0x00000004:word32] = 0x00000000
	word32 r2_1127 = (uint32) Mem1126[r5_1112 + 0x0000C65C:word16]
	branch (r2_1127 & 0x00000004) == 0x00000000 l000135CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000135CC:
	r3_1133 = SEQ(SLICE(r3_1115, word24, 8), 0x32)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000135C4:
	r3_1133 = SEQ(SLICE(r3_1115, word24, 8), 0x33)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000135CF:
	Mem1147[sp_1109 - 0x00000008:int32] = (int32) (int8) r3_1133
	Mem1151[sp_1109 - 0x0000000C:word32] = r6_1113 + 2226
	Mem1155[sp_1109 - 0x00000010:word32] = r5_1112 + 1515
	word32 sp_1160
	word32 ap_1162
	word32 r5_1165
	word32 r6_1166
	word32 r0_1168
	word32 r3_1169
	word32 fp_1171
	word32 r4_1173
	word32 r9_1175
	word32 r10_1177
	word32 r8_1179
	word32 r7_1180
	word32 r1_1182
	word32 r11_1184
	call r7_1121 + 2 (retsize: 4;)
		uses: ap:ap_1110,fp:fp_1116,r0:r0_1114,r1:r1_1122,r10:r10_1119,r11:r11_1123,r2:r2_1127,r3:r3_1145,r4:r4_1117,r5:r5_1112,r6:r6_1113,r7:r7_1121,r8:r8_1120,r9:r9_1118,sp:sp_1109 - 0x00000010,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1162,fp:fp_1171,r0:r0_1168,r1:r1_1182,r10:r10_1177,r11:r11_1184,r3:r3_1169,r4:r4_1173,r5:r5_1165,r6:r6_1166,r7:r7_1180,r8:r8_1179,r9:r9_1175,sp:sp_1160
	Mem1187[sp_1160 - 0x00000004:word32] = r0_1168
	Mem1190[sp_1160 - 0x00000008:word32] = r5_1165 + 1515
	Mem1192[sp_1160 - 0x0000000C:word32] = r5_1165
	word32 r2_1193 = Mem1192[r5_1165 + 0x0000C839:word32]
	call r2_1193 + 2 (retsize: 4;)
		uses: ap:ap_1162,fp:fp_1171,r0:r0_1168,r1:r1_1182,r10:r10_1177,r11:r11_1184,r2:r2_1193,r3:r3_1169,r4:r4_1173,r5:r5_1165,r6:r6_1166,r7:r7_1180,r8:r8_1179,r9:r9_1175,sp:sp_1160 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1198,fp:fp_1204,r0:r0_1202,r1:r1_1210,r10:r10_1207,r11:r11_1211,r5:r5_1200,r6:r6_1201,r7:r7_1209,r8:r8_1208,r9:r9_1206,sp:sp_1197
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013638:
	word32 r3_1222
	word32 sp_1214 = sp_1021 - 0x00000004
	Mem1215[sp_1214:word32] = 0x00000000
	word32 r2_1217 = (uint32) Mem1215[r5_1024 + 0x0000C65C:word16]
	branch (r2_1217 & 0x00000001) == 0x00000000 l0001364C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001364C:
	r3_1222 = r8_1032 + 45
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013644:
	r3_1222 = r6_1025
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013650:
	word32 r3_1314
	Mem1234[sp_1214 - 0x00000004:word32] = r3_1222
	Mem1238[sp_1214 - 0x00000008:word32] = r6_1025 + 2338
	Mem1242[sp_1214 - 0x0000000C:word32] = r5_1024 + 1515
	word32 r4_1243 = Mem1242[0x000192D0:word32]
	word32 sp_1247
	word32 ap_1250
	word32 r5_1253
	word32 r6_1254
	word32 r0_1257
	word32 r3_1258
	word32 fp_1261
	word32 r4_1262
	word32 r9_1265
	word32 r10_1268
	word32 r8_1270
	word32 r7_1273
	word32 r1_1276
	word32 r11_1279
	call r4_1243 + 2 (retsize: 4;)
		uses: ap:ap_1249,fp:fp_1260,r0:r0_1256,r1:r1_1275,r10:r10_1267,r11:r11_1278,r2:r2_1217,r3:r3_1233,r4:r4_1243,r5:r5_1216,r6:r6_1226,r7:r7_1272,r8:r8_1221,r9:r9_1264,sp:sp_1214 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1250,fp:fp_1261,r0:r0_1257,r1:r1_1276,r10:r10_1268,r11:r11_1279,r3:r3_1258,r4:r4_1262,r5:r5_1253,r6:r6_1254,r7:r7_1273,r8:r8_1270,r9:r9_1265,sp:sp_1247
	Mem1282[sp_1247 - 0x00000004:word32] = r0_1257
	Mem1285[sp_1247 - 0x00000008:word32] = r5_1253 + 1515
	Mem1287[sp_1247 - 0x0000000C:word32] = r5_1253
	word32 r2_1288 = Mem1287[r5_1253 + 0x0000C839:word32]
	word32 sp_1292
	word32 ap_1293
	word32 r5_1295
	word32 r6_1296
	word32 r0_1297
	word32 fp_1299
	word32 r4_1300
	word32 r9_1301
	word32 r10_1302
	word32 r8_1303
	word32 r7_1304
	word32 r1_1305
	word32 r11_1306
	call r2_1288 + 2 (retsize: 4;)
		uses: ap:ap_1250,fp:fp_1261,r0:r0_1257,r1:r1_1276,r10:r10_1268,r11:r11_1279,r2:r2_1288,r3:r3_1258,r4:r4_1262,r5:r5_1253,r6:r6_1254,r7:r7_1273,r8:r8_1270,r9:r9_1265,sp:sp_1247 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1293,fp:fp_1299,r0:r0_1297,r1:r1_1305,r10:r10_1302,r11:r11_1306,r4:r4_1300,r5:r5_1295,r6:r6_1296,r7:r7_1304,r8:r8_1303,r9:r9_1301,sp:sp_1292
	Mem1309[sp_1292 - 0x00000004:word32] = 0x00000000
	word32 r2_1310 = (uint32) Mem1309[r5_1295 + 0x0000C65C:word16]
	branch (r2_1310 & 0x00000008) == 0x00000000 l0001368C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001368C:
	r3_1314 = r8_1303 + 50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013683:
	r3_1314 = r8_1303 + 53
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013690:
	word32 r4_1896
	Mem1325[sp_1292 - 0x00000008:word32] = r3_1314
	Mem1329[sp_1292 - 0x0000000C:word32] = r6_1296 + 2403
	Mem1333[sp_1292 - 0x00000010:word32] = r5_1295 + 1515
	word32 sp_1338
	word32 ap_1340
	word32 r5_1343
	word32 r6_1344
	word32 r0_1346
	word32 r3_1347
	word32 fp_1349
	word32 r4_1350
	word32 r9_1352
	word32 r10_1354
	word32 r8_1356
	word32 r7_1358
	word32 r1_1360
	word32 r11_1362
	call r4_1300 + 2 (retsize: 4;)
		uses: ap:ap_1293,fp:fp_1299,r0:r0_1297,r1:r1_1305,r10:r10_1302,r11:r11_1306,r2:r2_1310,r3:r3_1324,r4:r4_1300,r5:r5_1295,r6:r6_1296,r7:r7_1304,r8:r8_1303,r9:r9_1301,sp:sp_1292 - 0x00000010,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1340,fp:fp_1349,r0:r0_1346,r1:r1_1360,r10:r10_1354,r11:r11_1362,r3:r3_1347,r4:r4_1350,r5:r5_1343,r6:r6_1344,r7:r7_1358,r8:r8_1356,r9:r9_1352,sp:sp_1338
	Mem1365[sp_1338 - 0x00000004:word32] = r0_1346
	Mem1368[sp_1338 - 0x00000008:word32] = r5_1343 + 1515
	Mem1370[sp_1338 - 0x0000000C:word32] = r5_1343
	word32 r2_1371 = Mem1370[r5_1343 + 0x0000C839:word32]
	word32 sp_1375
	word32 ap_1376
	word32 r5_1378
	word32 r6_1379
	word32 r3_1381
	word32 fp_1382
	word32 r4_1383
	word32 r9_1384
	word32 r10_1385
	word32 r8_1386
	word32 r7_1387
	word32 r11_1389
	call r2_1371 + 2 (retsize: 4;)
		uses: ap:ap_1340,fp:fp_1349,r0:r0_1346,r1:r1_1360,r10:r10_1354,r11:r11_1362,r2:r2_1371,r3:r3_1347,r4:r4_1350,r5:r5_1343,r6:r6_1344,r7:r7_1358,r8:r8_1356,r9:r9_1352,sp:sp_1338 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1376,fp:fp_1382,r10:r10_1385,r11:r11_1389,r3:r3_1381,r4:r4_1383,r5:r5_1378,r6:r6_1379,r7:r7_1387,r8:r8_1386,r9:r9_1384,sp:sp_1375
	Mem1393[sp_1375 - 0x00000004:word32] = fp_1382 + -42
	Mem1395[sp_1375 - 0x00000008:word32] = 0x00000000
	Mem1398[sp_1375 - 0x0000000C:word32] = r5_1378 + 0x0000C660
	Mem1401[sp_1375 - 0x00000010:word32] = r5_1378 + 0x0000C662
	word32 ap_1405
	word32 fp_1406
	word32 r1_1408
	word32 r10_1409
	word32 r11_1410
	word32 r2_1411
	word32 r3_1412
	word32 r4_1413
	word32 r5_1414
	word32 r6_1415
	word32 r7_1416
	word32 r8_1417
	word32 r9_1418
	word32 sp_1419
	word32 r0_1407 = fn00015106(r3_1381, r4_1383, r5_1378, r6_1379, r7_1387, r8_1386, r9_1384, r10_1385, r11_1389, ap_1376, fp_1382, out r1_1408, out r2_1411, out r3_1412, out r4_1413, out r5_1414, out r6_1415, out r7_1416, out r8_1417, out r9_1418, out r10_1409, out r11_1410, out ap_1405, out fp_1406, out sp_1419)
	Mem1425[sp_1419 - 0x00000004:word32] = 0x00000000
	Mem1428[sp_1419 - 0x00000008:word32] = fp_1406 + -42
	Mem1431[sp_1419 - 0x0000000C:word32] = r6_1415 + 2459
	Mem1434[sp_1419 - 0x00000010:word32] = r5_1414 + 1515
	word32 sp_1438
	word32 ap_1439
	word32 r5_1441
	word32 r6_1442
	word32 r0_1443
	word32 r3_1444
	word32 fp_1445
	word32 r4_1446
	word32 r9_1447
	word32 r10_1448
	word32 r8_1449
	word32 r7_1450
	word32 r1_1451
	word32 r11_1452
	call r4_1413 + 2 (retsize: 4;)
		uses: ap:ap_1405,fp:fp_1406,r0:r0_1407,r1:r1_1408,r10:r10_1409,r11:r11_1410,r2:r2_1411,r3:r3_1412,r4:r4_1413,r5:r5_1414,r6:r6_1415,r7:r7_1416,r8:r8_1417,r9:r9_1418,sp:sp_1419 - 0x00000010,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1439,fp:fp_1445,r0:r0_1443,r1:r1_1451,r10:r10_1448,r11:r11_1452,r3:r3_1444,r4:r4_1446,r5:r5_1441,r6:r6_1442,r7:r7_1450,r8:r8_1449,r9:r9_1447,sp:sp_1438
	Mem1455[sp_1438 - 0x00000004:word32] = r0_1443
	Mem1458[sp_1438 - 0x00000008:word32] = r5_1441 + 1515
	Mem1460[sp_1438 - 0x0000000C:word32] = r5_1441
	word32 r2_1461 = Mem1460[r5_1441 + 0x0000C839:word32]
	word32 sp_1465
	word32 ap_1466
	word32 r2_1467
	word32 r5_1468
	word32 r6_1469
	word32 r0_1470
	word32 r3_1471
	word32 fp_1472
	word32 r4_1473
	word32 r9_1474
	word32 r10_1475
	word32 r8_1476
	word32 r7_1477
	word32 r1_1478
	word32 r11_1479
	call r2_1461 + 2 (retsize: 4;)
		uses: ap:ap_1439,fp:fp_1445,r0:r0_1443,r1:r1_1451,r10:r10_1448,r11:r11_1452,r2:r2_1461,r3:r3_1444,r4:r4_1446,r5:r5_1441,r6:r6_1442,r7:r7_1450,r8:r8_1449,r9:r9_1447,sp:sp_1438 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1466,fp:fp_1472,r0:r0_1470,r1:r1_1478,r10:r10_1475,r11:r11_1479,r2:r2_1467,r3:r3_1471,r4:r4_1473,r5:r5_1468,r6:r6_1469,r7:r7_1477,r8:r8_1476,r9:r9_1474,sp:sp_1465
	Mem1482[sp_1465 - 0x00000004:word32] = 0x00000000
	Mem1485[sp_1465 - 0x00000008:word32] = Mem1482[r5_1468 + 0x0000C664:word32]
	Mem1488[sp_1465 - 0x0000000C:word32] = r6_1469 + 2515
	Mem1491[sp_1465 - 0x00000010:word32] = r5_1468 + 1515
	word32 sp_1495
	word32 ap_1496
	word32 r5_1498
	word32 r6_1499
	word32 r0_1500
	word32 r3_1501
	word32 fp_1502
	word32 r4_1503
	word32 r9_1504
	word32 r10_1505
	word32 r8_1506
	word32 r7_1507
	word32 r1_1508
	word32 r11_1509
	call r4_1473 + 2 (retsize: 4;)
		uses: ap:ap_1466,fp:fp_1472,r0:r0_1470,r1:r1_1478,r10:r10_1475,r11:r11_1479,r2:r2_1467,r3:r3_1471,r4:r4_1473,r5:r5_1468,r6:r6_1469,r7:r7_1477,r8:r8_1476,r9:r9_1474,sp:sp_1465 - 0x00000010,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1496,fp:fp_1502,r0:r0_1500,r1:r1_1508,r10:r10_1505,r11:r11_1509,r3:r3_1501,r4:r4_1503,r5:r5_1498,r6:r6_1499,r7:r7_1507,r8:r8_1506,r9:r9_1504,sp:sp_1495
	Mem1512[sp_1495 - 0x00000004:word32] = r0_1500
	Mem1515[sp_1495 - 0x00000008:word32] = r5_1498 + 1515
	Mem1517[sp_1495 - 0x0000000C:word32] = r5_1498
	word32 r2_1518 = Mem1517[r5_1498 + 0x0000C839:word32]
	word32 sp_1522
	word32 ap_1523
	word32 r2_1524
	word32 r5_1525
	word32 r6_1526
	word32 r0_1527
	word32 r3_1528
	word32 fp_1529
	word32 r4_1530
	word32 r9_1531
	word32 r10_1532
	word32 r8_1533
	word32 r7_1534
	word32 r1_1535
	word32 r11_1536
	call r2_1518 + 2 (retsize: 4;)
		uses: ap:ap_1496,fp:fp_1502,r0:r0_1500,r1:r1_1508,r10:r10_1505,r11:r11_1509,r2:r2_1518,r3:r3_1501,r4:r4_1503,r5:r5_1498,r6:r6_1499,r7:r7_1507,r8:r8_1506,r9:r9_1504,sp:sp_1495 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1523,fp:fp_1529,r0:r0_1527,r1:r1_1535,r10:r10_1532,r11:r11_1536,r2:r2_1524,r3:r3_1528,r4:r4_1530,r5:r5_1525,r6:r6_1526,r7:r7_1534,r8:r8_1533,r9:r9_1531,sp:sp_1522
	Mem1539[sp_1522 - 0x00000004:word32] = 0x00000000
	Mem1542[sp_1522 - 0x00000008:word32] = Mem1539[r5_1525 + 0x0000C668:word32]
	Mem1545[sp_1522 - 0x0000000C:word32] = r6_1526 + 2574
	Mem1548[sp_1522 - 0x00000010:word32] = r5_1525 + 1515
	word32 sp_1552
	word32 ap_1553
	word32 r5_1555
	word32 r6_1556
	word32 r0_1557
	word32 r3_1558
	word32 fp_1559
	word32 r4_1560
	word32 r9_1561
	word32 r10_1562
	word32 r8_1563
	word32 r7_1564
	word32 r1_1565
	word32 r11_1566
	call r4_1530 + 2 (retsize: 4;)
		uses: ap:ap_1523,fp:fp_1529,r0:r0_1527,r1:r1_1535,r10:r10_1532,r11:r11_1536,r2:r2_1524,r3:r3_1528,r4:r4_1530,r5:r5_1525,r6:r6_1526,r7:r7_1534,r8:r8_1533,r9:r9_1531,sp:sp_1522 - 0x00000010,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1553,fp:fp_1559,r0:r0_1557,r1:r1_1565,r10:r10_1562,r11:r11_1566,r3:r3_1558,r4:r4_1560,r5:r5_1555,r6:r6_1556,r7:r7_1564,r8:r8_1563,r9:r9_1561,sp:sp_1552
	Mem1569[sp_1552 - 0x00000004:word32] = r0_1557
	Mem1572[sp_1552 - 0x00000008:word32] = r5_1555 + 1515
	Mem1574[sp_1552 - 0x0000000C:word32] = r5_1555
	word32 r2_1575 = Mem1574[r5_1555 + 0x0000C839:word32]
	word32 sp_1579
	word32 ap_1580
	word32 r2_1581
	word32 r5_1582
	word32 r6_1583
	word32 r0_1584
	word32 r3_1585
	word32 fp_1586
	word32 r4_1587
	word32 r9_1588
	word32 r10_1589
	word32 r8_1590
	word32 r7_1591
	word32 r1_1592
	word32 r11_1593
	call r2_1575 + 2 (retsize: 4;)
		uses: ap:ap_1553,fp:fp_1559,r0:r0_1557,r1:r1_1565,r10:r10_1562,r11:r11_1566,r2:r2_1575,r3:r3_1558,r4:r4_1560,r5:r5_1555,r6:r6_1556,r7:r7_1564,r8:r8_1563,r9:r9_1561,sp:sp_1552 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1580,fp:fp_1586,r0:r0_1584,r1:r1_1592,r10:r10_1589,r11:r11_1593,r2:r2_1581,r3:r3_1585,r4:r4_1587,r5:r5_1582,r6:r6_1583,r7:r7_1591,r8:r8_1590,r9:r9_1588,sp:sp_1579
	Mem1596[sp_1579 - 0x00000004:word32] = 0x00000000
	Mem1599[sp_1579 - 0x00000008:word32] = Mem1596[r5_1582 + 0x0000C66C:word32]
	Mem1602[sp_1579 - 0x0000000C:word32] = r6_1583 + 2637
	Mem1605[sp_1579 - 0x00000010:word32] = r5_1582 + 1515
	word32 sp_1609
	word32 ap_1610
	word32 r5_1612
	word32 r6_1613
	word32 r0_1614
	word32 r3_1615
	word32 fp_1616
	word32 r4_1617
	word32 r9_1618
	word32 r10_1619
	word32 r8_1620
	word32 r7_1621
	word32 r1_1622
	word32 r11_1623
	call r4_1587 + 2 (retsize: 4;)
		uses: ap:ap_1580,fp:fp_1586,r0:r0_1584,r1:r1_1592,r10:r10_1589,r11:r11_1593,r2:r2_1581,r3:r3_1585,r4:r4_1587,r5:r5_1582,r6:r6_1583,r7:r7_1591,r8:r8_1590,r9:r9_1588,sp:sp_1579 - 0x00000010,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1610,fp:fp_1616,r0:r0_1614,r1:r1_1622,r10:r10_1619,r11:r11_1623,r3:r3_1615,r4:r4_1617,r5:r5_1612,r6:r6_1613,r7:r7_1621,r8:r8_1620,r9:r9_1618,sp:sp_1609
	Mem1626[sp_1609 - 0x00000004:word32] = r0_1614
	Mem1629[sp_1609 - 0x00000008:word32] = r5_1612 + 1515
	Mem1631[sp_1609 - 0x0000000C:word32] = r5_1612
	word32 r2_1632 = Mem1631[r5_1612 + 0x0000C839:word32]
	word32 sp_1636
	word32 ap_1637
	word32 r2_1638
	word32 r5_1639
	word32 r6_1640
	word32 r0_1641
	word32 r3_1642
	word32 fp_1643
	word32 r4_1644
	word32 r9_1645
	word32 r10_1646
	word32 r8_1647
	word32 r7_1648
	word32 r1_1649
	word32 r11_1650
	call r2_1632 + 2 (retsize: 4;)
		uses: ap:ap_1610,fp:fp_1616,r0:r0_1614,r1:r1_1622,r10:r10_1619,r11:r11_1623,r2:r2_1632,r3:r3_1615,r4:r4_1617,r5:r5_1612,r6:r6_1613,r7:r7_1621,r8:r8_1620,r9:r9_1618,sp:sp_1609 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1637,fp:fp_1643,r0:r0_1641,r1:r1_1649,r10:r10_1646,r11:r11_1650,r2:r2_1638,r3:r3_1642,r4:r4_1644,r5:r5_1639,r6:r6_1640,r7:r7_1648,r8:r8_1647,r9:r9_1645,sp:sp_1636
	Mem1653[sp_1636 - 0x00000004:word32] = 0x00000000
	Mem1656[sp_1636 - 0x00000008:uint32] = (uint32) Mem1653[r5_1639 + 0x0000C670:word16]
	Mem1659[sp_1636 - 0x0000000C:word32] = r6_1640 + 2700
	Mem1662[sp_1636 - 0x00000010:word32] = r5_1639 + 1515
	word32 sp_1666
	word32 ap_1667
	word32 r5_1669
	word32 r6_1670
	word32 r0_1671
	word32 r3_1672
	word32 fp_1673
	word32 r4_1674
	word32 r9_1675
	word32 r10_1676
	word32 r8_1677
	word32 r7_1678
	word32 r1_1679
	word32 r11_1680
	call r4_1644 + 2 (retsize: 4;)
		uses: ap:ap_1637,fp:fp_1643,r0:r0_1641,r1:r1_1649,r10:r10_1646,r11:r11_1650,r2:r2_1638,r3:r3_1642,r4:r4_1644,r5:r5_1639,r6:r6_1640,r7:r7_1648,r8:r8_1647,r9:r9_1645,sp:sp_1636 - 0x00000010,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1667,fp:fp_1673,r0:r0_1671,r1:r1_1679,r10:r10_1676,r11:r11_1680,r3:r3_1672,r4:r4_1674,r5:r5_1669,r6:r6_1670,r7:r7_1678,r8:r8_1677,r9:r9_1675,sp:sp_1666
	Mem1683[sp_1666 - 0x00000004:word32] = r0_1671
	Mem1686[sp_1666 - 0x00000008:word32] = r5_1669 + 1515
	Mem1688[sp_1666 - 0x0000000C:word32] = r5_1669
	word32 r2_1689 = Mem1688[r5_1669 + 0x0000C839:word32]
	word32 sp_1693
	word32 ap_1694
	word32 r2_1695
	word32 r5_1696
	word32 r6_1697
	word32 r0_1698
	word32 r3_1699
	word32 fp_1700
	word32 r4_1701
	word32 r9_1702
	word32 r10_1703
	word32 r8_1704
	word32 r7_1705
	word32 r1_1706
	word32 r11_1707
	call r2_1689 + 2 (retsize: 4;)
		uses: ap:ap_1667,fp:fp_1673,r0:r0_1671,r1:r1_1679,r10:r10_1676,r11:r11_1680,r2:r2_1689,r3:r3_1672,r4:r4_1674,r5:r5_1669,r6:r6_1670,r7:r7_1678,r8:r8_1677,r9:r9_1675,sp:sp_1666 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1694,fp:fp_1700,r0:r0_1698,r1:r1_1706,r10:r10_1703,r11:r11_1707,r2:r2_1695,r3:r3_1699,r4:r4_1701,r5:r5_1696,r6:r6_1697,r7:r7_1705,r8:r8_1704,r9:r9_1702,sp:sp_1693
	Mem1710[sp_1693 - 0x00000004:word32] = 0x00000000
	Mem1713[sp_1693 - 0x00000008:uint32] = (uint32) Mem1710[r5_1696 + 0x0000C672:word16]
	Mem1716[sp_1693 - 0x0000000C:word32] = r6_1697 + 2767
	Mem1719[sp_1693 - 0x00000010:word32] = r5_1696 + 1515
	word32 sp_1723
	word32 ap_1724
	word32 r5_1726
	word32 r6_1727
	word32 r0_1728
	word32 r3_1729
	word32 fp_1730
	word32 r4_1731
	word32 r9_1732
	word32 r10_1733
	word32 r8_1734
	word32 r7_1735
	word32 r1_1736
	word32 r11_1737
	call r4_1701 + 2 (retsize: 4;)
		uses: ap:ap_1694,fp:fp_1700,r0:r0_1698,r1:r1_1706,r10:r10_1703,r11:r11_1707,r2:r2_1695,r3:r3_1699,r4:r4_1701,r5:r5_1696,r6:r6_1697,r7:r7_1705,r8:r8_1704,r9:r9_1702,sp:sp_1693 - 0x00000010,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1724,fp:fp_1730,r0:r0_1728,r1:r1_1736,r10:r10_1733,r11:r11_1737,r3:r3_1729,r4:r4_1731,r5:r5_1726,r6:r6_1727,r7:r7_1735,r8:r8_1734,r9:r9_1732,sp:sp_1723
	Mem1740[sp_1723 - 0x00000004:word32] = r0_1728
	Mem1743[sp_1723 - 0x00000008:word32] = r5_1726 + 1515
	Mem1745[sp_1723 - 0x0000000C:word32] = r5_1726
	word32 r2_1746 = Mem1745[r5_1726 + 0x0000C839:word32]
	word32 sp_1750
	word32 ap_1751
	word32 r2_1752
	word32 r5_1753
	word32 r6_1754
	word32 r0_1755
	word32 r3_1756
	word32 fp_1757
	word32 r4_1758
	word32 r9_1759
	word32 r10_1760
	word32 r8_1761
	word32 r7_1762
	word32 r1_1763
	word32 r11_1764
	call r2_1746 + 2 (retsize: 4;)
		uses: ap:ap_1724,fp:fp_1730,r0:r0_1728,r1:r1_1736,r10:r10_1733,r11:r11_1737,r2:r2_1746,r3:r3_1729,r4:r4_1731,r5:r5_1726,r6:r6_1727,r7:r7_1735,r8:r8_1734,r9:r9_1732,sp:sp_1723 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1751,fp:fp_1757,r0:r0_1755,r1:r1_1763,r10:r10_1760,r11:r11_1764,r2:r2_1752,r3:r3_1756,r4:r4_1758,r5:r5_1753,r6:r6_1754,r7:r7_1762,r8:r8_1761,r9:r9_1759,sp:sp_1750
	Mem1767[sp_1750 - 0x00000004:word32] = 0x00000000
	Mem1770[sp_1750 - 0x00000008:uint32] = (uint32) Mem1767[r5_1753 + 0x0000C674:word16]
	Mem1773[sp_1750 - 0x0000000C:word32] = r6_1754 + 2829
	Mem1776[sp_1750 - 0x00000010:word32] = r5_1753 + 1515
	word32 sp_1780
	word32 ap_1781
	word32 r5_1783
	word32 r6_1784
	word32 r0_1785
	word32 r3_1786
	word32 fp_1787
	word32 r4_1788
	word32 r9_1789
	word32 r10_1790
	word32 r8_1791
	word32 r7_1792
	word32 r1_1793
	word32 r11_1794
	call r4_1758 + 2 (retsize: 4;)
		uses: ap:ap_1751,fp:fp_1757,r0:r0_1755,r1:r1_1763,r10:r10_1760,r11:r11_1764,r2:r2_1752,r3:r3_1756,r4:r4_1758,r5:r5_1753,r6:r6_1754,r7:r7_1762,r8:r8_1761,r9:r9_1759,sp:sp_1750 - 0x00000010,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1781,fp:fp_1787,r0:r0_1785,r1:r1_1793,r10:r10_1790,r11:r11_1794,r3:r3_1786,r4:r4_1788,r5:r5_1783,r6:r6_1784,r7:r7_1792,r8:r8_1791,r9:r9_1789,sp:sp_1780
	Mem1797[sp_1780 - 0x00000004:word32] = r0_1785
	Mem1800[sp_1780 - 0x00000008:word32] = r5_1783 + 1515
	Mem1802[sp_1780 - 0x0000000C:word32] = r5_1783
	word32 r2_1803 = Mem1802[r5_1783 + 0x0000C839:word32]
	word32 sp_1807
	word32 ap_1808
	word32 r5_1810
	word32 r6_1811
	word32 r0_1812
	word32 r3_1813
	word32 fp_1814
	word32 r4_1815
	word32 r9_1816
	word32 r10_1817
	word32 r8_1818
	word32 r7_1819
	word32 r1_1820
	word32 r11_1821
	call r2_1803 + 2 (retsize: 4;)
		uses: ap:ap_1781,fp:fp_1787,r0:r0_1785,r1:r1_1793,r10:r10_1790,r11:r11_1794,r2:r2_1803,r3:r3_1786,r4:r4_1788,r5:r5_1783,r6:r6_1784,r7:r7_1792,r8:r8_1791,r9:r9_1789,sp:sp_1780 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1808,fp:fp_1814,r0:r0_1812,r1:r1_1820,r10:r10_1817,r11:r11_1821,r3:r3_1813,r4:r4_1815,r5:r5_1810,r6:r6_1811,r7:r7_1819,r8:r8_1818,r9:r9_1816,sp:sp_1807
	Mem1824[sp_1807 - 0x00000004:word32] = 0x00000000
	word32 r2_1825 = (uint32) Mem1824[r5_1810 + 0x0000C676:word16]
	Mem1828[sp_1807 - 0x00000008:word32] = r2_1825 + 0x00000001
	Mem1831[sp_1807 - 0x0000000C:word32] = r6_1811 + 2896
	Mem1834[sp_1807 - 0x00000010:word32] = r5_1810 + 1515
	word32 sp_1838
	word32 ap_1839
	word32 r5_1841
	word32 r6_1842
	word32 r0_1843
	word32 r3_1844
	word32 fp_1845
	word32 r4_1846
	word32 r9_1847
	word32 r10_1848
	word32 r8_1849
	word32 r7_1850
	word32 r1_1851
	word32 r11_1852
	call r4_1815 + 2 (retsize: 4;)
		uses: ap:ap_1808,fp:fp_1814,r0:r0_1812,r1:r1_1820,r10:r10_1817,r11:r11_1821,r2:r2_1825 + 0x00000001,r3:r3_1813,r4:r4_1815,r5:r5_1810,r6:r6_1811,r7:r7_1819,r8:r8_1818,r9:r9_1816,sp:sp_1807 - 0x00000010,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1839,fp:fp_1845,r0:r0_1843,r1:r1_1851,r10:r10_1848,r11:r11_1852,r3:r3_1844,r4:r4_1846,r5:r5_1841,r6:r6_1842,r7:r7_1850,r8:r8_1849,r9:r9_1847,sp:sp_1838
	Mem1855[sp_1838 - 0x00000004:word32] = r0_1843
	Mem1858[sp_1838 - 0x00000008:word32] = r5_1841 + 1515
	Mem1860[sp_1838 - 0x0000000C:word32] = r5_1841
	word32 r2_1861 = Mem1860[r5_1841 + 0x0000C839:word32]
	word32 sp_1865
	word32 ap_1866
	word32 r2_1867
	word32 r5_1868
	word32 r6_1869
	word32 r0_1870
	word32 fp_1872
	word32 r9_1874
	word32 r10_1875
	word32 r8_1876
	word32 r7_1877
	word32 r1_1878
	word32 r11_1879
	call r2_1861 + 2 (retsize: 4;)
		uses: ap:ap_1839,fp:fp_1845,r0:r0_1843,r1:r1_1851,r10:r10_1848,r11:r11_1852,r2:r2_1861,r3:r3_1844,r4:r4_1846,r5:r5_1841,r6:r6_1842,r7:r7_1850,r8:r8_1849,r9:r9_1847,sp:sp_1838 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1866,fp:fp_1872,r0:r0_1870,r1:r1_1878,r10:r10_1875,r11:r11_1879,r2:r2_1867,r5:r5_1868,r6:r6_1869,r7:r7_1877,r8:r8_1876,r9:r9_1874,sp:sp_1865
	Mem1882[sp_1865 - 0x00000004:word32] = 0x00000000
	word32 r3_1883 = (uint32) Mem1882[r5_1868 + 0x0000C678:word16]
	branch (r3_1883 & 0x00000001) == 0x00000000 l00013804
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013804:
	branch (r3_1883 & 0x00000002) == 0x00000000 l00013810
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013810:
	r3_1883 = r8_1876 + 57
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013808:
	r3_1883 = r8_1876 + 64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013814:
	r4_1896 = r3_1883
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000137FE:
	r4_1896 = r8_1876 + 71
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013817:
	word32 r7_2402
	word32 r10_2400
	word32 r9_2399
	word32 r4_2398
	word32 r11_2404
	word32 r1_2403
	word32 r0_2395
	word32 r2_2392
	word32 ap_2391
	word32 fp_2397
	word32 r8_2401
	word32 r6_2394
	word32 sp_2390
	word32 r5_2393
	Mem1908[sp_1865 - 0x00000008:word32] = r4_1896
	Mem1913[sp_1865 - 0x0000000C:word32] = r6_1869 + 2957
	Mem1918[sp_1865 - 0x00000010:word32] = r5_1868 + 1515
	word32 sp_1922
	word32 ap_1925
	word32 r5_1929
	word32 r6_1930
	word32 r0_1933
	word32 r3_1935
	word32 fp_1938
	word32 r4_1939
	word32 r9_1942
	word32 r10_1945
	word32 r8_1948
	word32 r7_1951
	word32 r1_1954
	word32 r11_1957
	call Mem1918[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1866,fp:fp_1872,r0:r0_1870,r1:r1_1878,r10:r10_1875,r11:r11_1879,r2:r2_1867,r3:r3_1934,r4:r4_1907,r5:r5_1868,r6:r6_1869,r7:r7_1877,r8:r8_1876,r9:r9_1874,sp:sp_1865 - 0x00000010,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1925,fp:fp_1938,r0:r0_1933,r1:r1_1954,r10:r10_1945,r11:r11_1957,r3:r3_1935,r4:r4_1939,r5:r5_1929,r6:r6_1930,r7:r7_1951,r8:r8_1948,r9:r9_1942,sp:sp_1922
	Mem1960[sp_1922 - 0x00000004:word32] = r0_1933
	Mem1963[sp_1922 - 0x00000008:word32] = r5_1929 + 1515
	Mem1965[sp_1922 - 0x0000000C:word32] = r5_1929
	word32 r2_1966 = Mem1965[r5_1929 + 0x0000C839:word32]
	word32 sp_1970
	word32 ap_1971
	word32 r5_1973
	word32 r6_1974
	word32 r0_1975
	word32 r3_1976
	word32 fp_1977
	word32 r4_1978
	word32 r10_1980
	word32 r8_1981
	word32 r7_1982
	word32 r11_1984
	word32 r1_1983
	call r2_1966 + 2 (retsize: 4;)
		uses: ap:ap_1925,fp:fp_1938,r0:r0_1933,r1:r1_1954,r10:r10_1945,r11:r11_1957,r2:r2_1966,r3:r3_1935,r4:r4_1939,r5:r5_1929,r6:r6_1930,r7:r7_1951,r8:r8_1948,r9:r9_1942,sp:sp_1922 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_1971,fp:fp_1977,r0:r0_1975,r1:r1_1983,r10:r10_1980,r11:r11_1984,r3:r3_1976,r4:r4_1978,r5:r5_1973,r6:r6_1974,r7:r7_1982,r8:r8_1981,sp:sp_1970
	Mem1988[sp_1970 + 14:word16] = (word16) (uint32) Mem1965[r5_1973 + 0x0000C67C:word16] & ~0x0000
	word32 r9_1989 = (uint32) Mem1988[sp_1970 + 2:word16]
	branch r9_1989 == 0x00000002 l00013854
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013854:
	word32 r4_1995 = fp_1977 + 0xFFFFFFD7
	word32 r0_1996 = 0x00000000
	word32 r2_1997 = fp_1977 + -20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013868:
	Mem2003[r2_1997:byte] = 0x00
	r2_1997 = r2_1997 + 0x00000001
	r0_1996 = r0_1996 + 0x00000001
	branch r0_1996 <= 0x0000000B l00013868
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013870:
	word32 r7_2009 = (uint32) Mem2003[sp_1970 + 14:word16]
	branch (r7_2009 & 0x00000100) == 0x00000000 l0001387D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013878:
	Mem2015[fp_1977 + -20:byte] = 0x52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001387D:
	branch (r7_2009 & 0x00000080) == 0x00000000 l0001388B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013881:
	Mem2022[fp_1977 + -19:byte] = 0x57
	Mem2024[fp_1977 + -17:byte] = 0x44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001388B:
	branch (r7_2009 & 0x00000040) == 0x00000000 l00013894
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001388F:
	Mem2031[fp_1977 + -18:byte] = 0x45
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013894:
	branch (r7_2009 & 0x00000020) == 0x00000000 l0001389D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013898:
	Mem2038[fp_1977 + -16:byte] = 0x52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001389D:
	branch (r7_2009 & 0x00000010) == 0x00000000 l000138AB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138A1:
	Mem2045[fp_1977 + -15:byte] = 0x57
	Mem2047[fp_1977 + -13:byte] = 0x44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138AB:
	branch (r7_2009 & 0x00000008) == 0x00000000 l000138B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138AF:
	Mem2054[fp_1977 + -14:byte] = 0x45
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138B4:
	branch (r7_2009 & 0x00000004) == 0x00000000 l000138BD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138B8:
	Mem2061[fp_1977 + -12:byte] = 0x52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138BD:
	branch (r7_2009 & 0x00000002) == 0x00000000 l000138CB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138C1:
	Mem2068[fp_1977 + -11:byte] = 0x57
	Mem2070[fp_1977 + -9:byte] = 0x44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138CB:
	branch (r7_2009 & 0x00000001) == 0x00000000 l000138D3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138CE:
	Mem2077[fp_1977 + -10:byte] = 0x45
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138D3:
	Mem2092[fp_1977 + -42:byte] = 0x28
	word32 r3_2093 = fp_1977 + 0xFFFFFFD7
	word32 r7_2094 = 0x00000000
	word32 r2_2095 = 0x00000000
	branch false l00013920
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138DF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138E0:
	r1_1983 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138E4:
	branch Mem2106[fp_1977 + -20 + r2_2095:byte] == 0x00 l000138EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138EA:
	Mem2113[r3_2093:byte] = Mem2106[fp_1977 + -20 + r2_2095:byte]
	r3_2093 = r3_2093 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138EF:
	r1_1983 = r1_1983 + 0x00000001
	r2_2095 = r2_2095 + 0x00000001
	branch r1_1983 < 0x00000004 l000138E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138F8:
	Mem2128[r3_2093:byte] = 0x2C
	r3_2093 = r3_2093 + 0x00000001
	branch r7_2094 != 0x00000000 l00013919
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000138FF:
	Mem2145[r3_2093:byte] = Mem2128[r4_1995:byte]
	r1_1983 = r3_2093
	r3_2093 = r3_2093 + 0x00000001
	r4_1995 = r4_1995 + 0x00000001
	branch Mem2145[r3_2093:byte] == 0x2C l00013919
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001390C:
	Mem2157[r3_7029:byte] = Mem2155[r4_1995:byte]
	r1_1983 = r3_7029
	r3_2093 = r3_7029 + 0x00000001
	r4_1995 = r4_1995 + 0x00000001
	r3_7029 = r3_2093
	branch Mem2157[r3_7029:byte] != 0x2C l0001390C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013919:
	r7_2094 = r7_2094 + 0x00000001
	branch r7_2094 < 0x00000003 l000138E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013920:
	Mem2172[r3_2093:byte] = 0x00
	word32 r3_2170 = r3_2093 - 0x00000001
	Mem2174[r3_2170:byte] = 0x29
	Mem2191[sp_1970 - 0x00000004:word32] = 0x00000000
	Mem2199[sp_1970 - 0x00000008:word32] = fp_1977 + -42
	Mem2202[sp_1970 - 0x0000000C:uint32] = (uint32) Mem2199[sp_1970 + 0x0000000A:word16]
	Mem2221[sp_1970 - 0x00000010:word32] = r6_1974 + 3013
	Mem2240[sp_1970 - 0x00000014:word32] = r5_1973 + 1515
	word32 sp_2244
	word32 ap_2261
	word32 r5_2263
	word32 r6_2264
	word32 r0_2279
	word32 r3_2280
	word32 fp_2281
	word32 r4_2294
	word32 r9_2311
	word32 r10_2328
	word32 r8_2345
	word32 r7_2347
	word32 r1_2360
	word32 r11_2377
	call Mem2240[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1971,fp:fp_1977,r0:r0_2006,r1:r1_2348,r10:r10_1980,r11:r11_1984,r2:r3_2167,r3:r3_2170,r4:r4_2282,r5:r5_1973,r6:r6_1974,r7:r7_2346,r8:r8_1981,r9:r9_1989,sp:sp_1970 - 0x00000014,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_2261,fp:fp_2281,r0:r0_2279,r1:r1_2360,r10:r10_2328,r11:r11_2377,r3:r3_2280,r4:r4_2294,r5:r5_2263,r6:r6_2264,r7:r7_2347,r8:r8_2345,r9:r9_2311,sp:sp_2244
	Mem2380[sp_2244 - 0x00000004:word32] = r0_2279
	Mem2383[sp_2244 - 0x00000008:word32] = r5_2263 + 1515
	Mem2385[sp_2244 - 0x0000000C:word32] = r5_2263
	word32 r2_2386 = Mem2385[r5_2263 + 0x0000C839:word32]
	call r2_2386 + 2 (retsize: 4;)
		uses: ap:ap_2261,fp:fp_2281,r0:r0_2279,r1:r1_2360,r10:r10_2328,r11:r11_2377,r2:r2_2386,r3:r3_2280,r4:r4_2294,r5:r5_2263,r6:r6_2264,r7:r7_2347,r8:r8_2345,r9:r9_2311,sp:sp_2244 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_2391,fp:fp_2397,r0:r0_2395,r1:r1_2403,r10:r10_2400,r11:r11_2404,r2:r2_2392,r4:r4_2398,r5:r5_2393,r6:r6_2394,r7:r7_2402,r8:r8_2401,r9:r9_2399,sp:sp_2390
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013851:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013958:
	branch r9_1989 == 0x00000001 l00013960
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013960:
	word32 r2_2410 = (uint32) Mem1988[sp_1970 + 14:word16] & ~0xFFFFF3FF
	branch r2_2410 < 0x00000400 l00013990
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013974:
	branch r2_2410 == 0x00000400 l00013988
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013988:
	Mem2416[fp_1977 + -42:byte] = 0x2D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013976:
	branch r2_2410 != 0x00000800 l00013990
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013990:
	Mem2425[fp_1977 + -42:byte] = 0x3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001397F:
	Mem2430[fp_1977 + -42:byte] = 0x64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013994:
	word32 r3_2445
	word32 r7_2437 = (uint32) Mem2436[sp_1970 + 14:word16]
	branch (r7_2437 & 0x00000080) == 0x00000000 l000139A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139A4:
	r3_2445 = SEQ(SLICE(r3_1976, word24, 8), 0x2D)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001399C:
	r3_2445 = SEQ(SLICE(r3_1976, word24, 8), 0x68)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139A7:
	word32 r4_2469
	Mem2459[fp_1977 + -41:byte] = (byte) r3_2445
	branch (r7_2437 & 0x00000040) == 0x00000000 l000139B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139B8:
	r4_2469 = SEQ(SLICE(r4_1978, word24, 8), 0x2D)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139AF:
	r4_2469 = SEQ(SLICE(r4_1978, word24, 8), 0x73)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139BB:
	word32 r3_2490
	Mem2482[fp_1977 + -40:byte] = (byte) r4_2469
	branch (r7_2437 & 0x00000020) == 0x00000000 l000139CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139CC:
	r3_2490 = SEQ(SLICE(r3_2445, word24, 8), 0x2D)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139C3:
	r3_2490 = SEQ(SLICE(r3_2445, word24, 8), 0x70)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139CF:
	word32 r4_2511
	Mem2503[fp_1977 + -39:byte] = (byte) r3_2490
	branch (r7_2437 & 0x00000010) == 0x00000000 l000139E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139E0:
	r4_2511 = SEQ(SLICE(r4_2469, word24, 8), 0x2D)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139D7:
	r4_2511 = SEQ(SLICE(r4_2469, word24, 8), 0x61)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139E3:
	word32 r3_2532
	Mem2524[fp_1977 + -38:byte] = (byte) r4_2511
	branch (r7_2437 & 0x00000008) == 0x00000000 l000139F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139F4:
	r3_2532 = SEQ(SLICE(r3_2490, word24, 8), 0x2D)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139EB:
	r3_2532 = SEQ(SLICE(r3_2490, word24, 8), 0x72)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139F7:
	word32 r4_2553
	Mem2545[fp_1977 + -37:byte] = (byte) r3_2532
	branch (r7_2437 & 0x00000004) == 0x00000000 l00013A08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A08:
	r4_2553 = SEQ(SLICE(r4_2511, word24, 8), 0x2D)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000139FF:
	r4_2553 = SEQ(SLICE(r4_2511, word24, 8), 0x77)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A0B:
	word32 r3_2574
	Mem2566[fp_1977 + -36:byte] = (byte) r4_2553
	branch (r7_2437 & 0x00000002) == 0x00000000 l00013A1C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A1C:
	r3_2574 = SEQ(SLICE(r3_2532, word24, 8), 0x2D)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A13:
	r3_2574 = SEQ(SLICE(r3_2532, word24, 8), 0x65)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A1F:
	word32 r4_2595
	Mem2587[fp_1977 + -35:byte] = (byte) r3_2574
	branch (r7_2437 & 0x00000001) == 0x00000000 l00013A2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A2C:
	r4_2595 = SEQ(SLICE(r4_2553, word24, 8), 0x2D)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A26:
	r4_2595 = SEQ(SLICE(r4_2553, word24, 8), 0x64)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A2F:
	Mem2608[fp_1977 + -34:byte] = (byte) r4_2595
	Mem2610[fp_1977 + -33:byte] = 0x00
	Mem2620[sp_1970 - 0x00000004:word32] = 0x00000000
	Mem2623[sp_1970 - 0x00000008:word32] = fp_1977 + -42
	Mem2626[sp_1970 - 0x0000000C:word32] = r7_2437
	Mem2639[sp_1970 - 0x00000010:word32] = r6_1974 + 3067
	Mem2652[sp_1970 - 0x00000014:word32] = r5_1973 + 1515
	word32 sp_2656
	word32 ap_2667
	word32 r5_2679
	word32 r6_2680
	word32 r0_2691
	word32 r3_2693
	word32 fp_2694
	word32 r4_2695
	word32 r9_2706
	word32 r10_2717
	word32 r8_2728
	word32 r7_2729
	word32 r1_2740
	word32 r11_2751
	call Mem2652[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1971,fp:fp_1977,r0:r0_1975,r1:r1_1983,r10:r10_1980,r11:r11_1984,r2:r2_2410,r3:r3_2584,r4:r4_2605,r5:r5_1973,r6:r6_1974,r7:r7_2437,r8:r8_1981,r9:r9_1989,sp:sp_1970 - 0x00000014,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_2667,fp:fp_2694,r0:r0_2691,r1:r1_2740,r10:r10_2717,r11:r11_2751,r3:r3_2693,r4:r4_2695,r5:r5_2679,r6:r6_2680,r7:r7_2729,r8:r8_2728,r9:r9_2706,sp:sp_2656
	Mem2754[sp_2656 - 0x00000004:word32] = r0_2691
	Mem2757[sp_2656 - 0x00000008:word32] = r5_2679 + 1515
	Mem2759[sp_2656 - 0x0000000C:word32] = r5_2679
	word32 r2_2760 = Mem2759[r5_2679 + 0x0000C839:word32]
	call r2_2760 + 2 (retsize: 4;)
		uses: ap:ap_2667,fp:fp_2694,r0:r0_2691,r1:r1_2740,r10:r10_2717,r11:r11_2751,r2:r2_2760,r3:r3_2693,r4:r4_2695,r5:r5_2679,r6:r6_2680,r7:r7_2729,r8:r8_2728,r9:r9_2706,sp:sp_2656 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_2765,fp:fp_2771,r0:r0_2769,r1:r1_2777,r10:r10_2774,r11:r11_2778,r2:r2_2766,r4:r4_2772,r5:r5_2767,r6:r6_2768,r7:r7_2776,r8:r8_2775,r9:r9_2773,sp:sp_2764
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001395D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A64:
	branch r9_1989 != 0x00000000 l00013A6B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A6B:
	branch r9_1989 != 0x00000006 l00013A73
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A73:
	branch r9_1989 != 0x0000000B l00013A7B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A7B:
	branch r9_1989 != 0x0000000E l00013A83
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A83:
	branch r9_1989 != 0x0000000D l00013A8B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A8B:
	branch r9_1989 != 0x00000004 l00013A93
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A93:
	branch r9_1989 != 0x0000000F l00013A9B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A9B:
	word32 r2_2803 = (uint32) Mem1988[sp_1970 + 14:word16] & ~0xFFFF0FFF
	branch r2_2803 < 0x00001000 l00013B2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AAF:
	branch r2_2803 == 0x00001000 l00013B1C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B1C:
	Mem2809[fp_1977 + -42:byte] = 0x70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AB1:
	branch r2_2803 < 0x00002000 l00013B2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013ABA:
	branch r2_2803 == 0x00002000 l00013B14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B14:
	Mem2818[fp_1977 + -42:byte] = 0x63
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013ABC:
	branch r2_2803 < 0x00004000 l00013B2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AC5:
	branch r2_2803 == 0x00004000 l00013AF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AF4:
	Mem2827[fp_1977 + -42:byte] = 0x64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AC7:
	branch r2_2803 < 0x00006000 l00013B2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AD0:
	branch r2_2803 == 0x00006000 l00013B0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B0C:
	Mem2836[fp_1977 + -42:byte] = 0x62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AD2:
	branch r2_2803 < 0x00008000 l00013B2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013ADB:
	branch r2_2803 == 0x00008000 l00013AFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AFC:
	Mem2845[fp_1977 + -42:byte] = 0x2D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013ADD:
	branch r2_2803 < 0x0000A000 l00013B2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AE6:
	branch r2_2803 == 0x0000A000 l00013B04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B04:
	Mem2854[fp_1977 + -42:byte] = 0x6C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AE8:
	branch r2_2803 == 0x0000C000 l00013B24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B24:
	Mem2862[fp_1977 + -42:byte] = 0x73
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013AF1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B2C:
	Mem2868[fp_1977 + -42:byte] = 0x3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B30:
	word32 r3_2883
	word32 r7_2875 = (uint32) Mem2874[sp_1970 + 14:word16]
	branch (r7_2875 & 0x00000100) == 0x00000000 l00013B40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B40:
	r3_2883 = SEQ(SLICE(r3_1976, word24, 8), 0x2D)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B38:
	r3_2883 = SEQ(SLICE(r3_1976, word24, 8), 0x72)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B43:
	word32 r4_2907
	Mem2897[fp_1977 + -41:byte] = (byte) r3_2883
	branch (r7_2875 & 0x00000020) == 0x00000000 l00013B54
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B54:
	r4_2907 = SEQ(SLICE(r4_1978, word24, 8), 0x2D)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B4B:
	r4_2907 = SEQ(SLICE(r4_1978, word24, 8), 0x72)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B57:
	word32 r3_2928
	Mem2920[fp_1977 + -38:byte] = (byte) r4_2907
	branch (r7_2875 & 0x00000004) == 0x00000000 l00013B68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B68:
	r3_2928 = SEQ(SLICE(r3_2883, word24, 8), 0x2D)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B5F:
	r3_2928 = SEQ(SLICE(r3_2883, word24, 8), 0x72)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B6B:
	word32 r4_2949
	Mem2941[fp_1977 + -35:byte] = (byte) r3_2928
	branch (r7_2875 & 0x00000080) == 0x00000000 l00013B7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B7C:
	r4_2949 = SEQ(SLICE(r4_2907, word24, 8), 0x2D)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B73:
	r4_2949 = SEQ(SLICE(r4_2907, word24, 8), 0x77)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B7F:
	word32 r3_2970
	Mem2962[fp_1977 + -40:byte] = (byte) r4_2949
	branch (r7_2875 & 0x00000010) == 0x00000000 l00013B90
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B90:
	r3_2970 = SEQ(SLICE(r3_2928, word24, 8), 0x2D)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B87:
	r3_2970 = SEQ(SLICE(r3_2928, word24, 8), 0x77)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B93:
	word32 r4_2991
	Mem2983[fp_1977 + -37:byte] = (byte) r3_2970
	branch (r7_2875 & 0x00000002) == 0x00000000 l00013BA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BA4:
	r4_2991 = SEQ(SLICE(r4_2949, word24, 8), 0x2D)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013B9B:
	r4_2991 = SEQ(SLICE(r4_2949, word24, 8), 0x77)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BA7:
	word32 r2_3019
	Mem3004[fp_1977 + -34:byte] = (byte) r4_2991
	branch (r7_2875 & 0x00000040) == 0x00000000 l00013BC8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BC8:
	branch (r7_2875 & 0x00000800) == 0x00000000 l00013BD4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BD4:
	r2_3019 = SEQ(SLICE(r2_2803, word24, 8), 0x2D)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BCC:
	r2_3019 = SEQ(SLICE(r2_2803, word24, 8), 0x53)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BD7:
	Mem3032[fp_1977 + -39:byte] = (byte) r2_3019
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BAF:
	branch (r7_2875 & 0x00000800) == 0x00000000 l00013BBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BBC:
	r2_3019 = SEQ(SLICE(r2_2803, word24, 8), 0x78)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BB3:
	r2_3019 = SEQ(SLICE(r2_2803, word24, 8), 0x73)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BC0:
	Mem3051[fp_1977 + -39:byte] = (byte) r2_3019
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BDB:
	word32 r2_3072
	word32 r3_3065 = (uint32) Mem3064[sp_1970 + 14:word16]
	branch (r3_3065 & 0x00000008) == 0x00000000 l00013BFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BFC:
	branch (r3_3065 & 0x00000400) == 0x00000000 l00013C08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C08:
	r2_3072 = SEQ(SLICE(r2_3019, word24, 8), 0x2D)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C00:
	r2_3072 = SEQ(SLICE(r2_3019, word24, 8), 0x6C)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C0B:
	Mem3086[fp_1977 + -36:byte] = (byte) r2_3072
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BE3:
	branch (r3_3065 & 0x00000400) == 0x00000000 l00013BF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BF0:
	r2_3072 = SEQ(SLICE(r2_3019, word24, 8), 0x78)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BE7:
	r2_3072 = SEQ(SLICE(r2_3019, word24, 8), 0x73)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013BF4:
	Mem3105[fp_1977 + -36:byte] = (byte) r2_3072
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C0F:
	word32 r2_3120
	word32 r3_3113 = (uint32) Mem3112[sp_1970 + 14:word16]
	branch (r3_3113 & 0x00000001) == 0x00000000 l00013C2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C2C:
	branch (r3_3113 & 0x00000200) == 0x00000000 l00013C38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C38:
	r2_3120 = SEQ(SLICE(r2_3072, word24, 8), 0x2D)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C30:
	r2_3120 = SEQ(SLICE(r2_3072, word24, 8), 0x54)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C3B:
	Mem3134[fp_1977 + -33:byte] = (byte) r2_3120
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C16:
	branch (r3_3113 & 0x00000200) == 0x00000000 l00013C20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C20:
	r2_3120 = SEQ(SLICE(r2_3072, word24, 8), 0x78)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C1A:
	r2_3120 = SEQ(SLICE(r2_3072, word24, 8), 0x74)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C24:
	Mem3153[fp_1977 + -33:byte] = (byte) r2_3120
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C3F:
	Mem3159[fp_1977 + -32:byte] = 0x00
	Mem3164[sp_1970 - 0x00000004:word32] = 0x00000000
	Mem3167[sp_1970 - 0x00000008:word32] = fp_1977 + -42
	Mem3170[sp_1970 - 0x0000000C:uint32] = (uint32) Mem3167[sp_1970 + 0x0000000A:word16]
	Mem3190[sp_1970 - 0x00000010:word32] = r6_1974 + 3121
	Mem3210[sp_1970 - 0x00000014:word32] = r5_1973 + 1515
	word32 sp_3214
	word32 ap_3232
	word32 r5_3235
	word32 r6_3236
	word32 r0_3254
	word32 r3_3258
	word32 fp_3259
	word32 r4_3269
	word32 r9_3287
	word32 r10_3305
	word32 r8_3323
	word32 r7_3333
	word32 r1_3351
	word32 r11_3369
	call Mem3210[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1971,fp:fp_1977,r0:r0_1975,r1:r1_1983,r10:r10_1980,r11:r11_1984,r2:r2_3233,r3:r3_3113,r4:r4_3001,r5:r5_1973,r6:r6_1974,r7:r7_2875,r8:r8_1981,r9:r9_1989,sp:sp_1970 - 0x00000014,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3232,fp:fp_3259,r0:r0_3254,r1:r1_3351,r10:r10_3305,r11:r11_3369,r3:r3_3258,r4:r4_3269,r5:r5_3235,r6:r6_3236,r7:r7_3333,r8:r8_3323,r9:r9_3287,sp:sp_3214
	Mem3372[sp_3214 - 0x00000004:word32] = r0_3254
	Mem3375[sp_3214 - 0x00000008:word32] = r5_3235 + 1515
	Mem3377[sp_3214 - 0x0000000C:word32] = r5_3235
	word32 r2_3378 = Mem3377[r5_3235 + 0x0000C839:word32]
	call r2_3378 + 2 (retsize: 4;)
		uses: ap:ap_3232,fp:fp_3259,r0:r0_3254,r1:r1_3351,r10:r10_3305,r11:r11_3369,r2:r2_3378,r3:r3_3258,r4:r4_3269,r5:r5_3235,r6:r6_3236,r7:r7_3333,r8:r8_3323,r9:r9_3287,sp:sp_3214 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3383,fp:fp_3389,r0:r0_3387,r1:r1_3395,r10:r10_3392,r11:r11_3396,r2:r2_3384,r4:r4_3390,r5:r5_3385,r6:r6_3386,r7:r7_3394,r8:r8_3393,r9:r9_3391,sp:sp_3382
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A98:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A90:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A88:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A80:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A78:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A70:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013A68:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C70:
	Mem3400[sp_1970 - 0x00000004:word32] = 0x00000000
	word32 r2_3402 = (uint32) Mem3400[r5_1973 + 0x0000C67B:ui24]
	Mem3404[sp_1970 - 0x00000008:word32] = r2_3402
	Mem3408[sp_1970 - 0x0000000C:word32] = r6_1974 + 3175
	Mem3411[sp_1970 - 0x00000010:word32] = r5_1973 + 1515
	word32 sp_3415
	word32 ap_3417
	word32 r5_3419
	word32 r6_3420
	word32 r0_3422
	word32 r3_3424
	word32 fp_3426
	word32 r4_3428
	word32 r9_3430
	word32 r10_3432
	word32 r8_3434
	word32 r7_3436
	word32 r1_3438
	word32 r11_3440
	call Mem3411[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_1971,fp:fp_1977,r0:r0_1975,r1:r1_1983,r10:r10_1980,r11:r11_1984,r2:r2_3402,r3:r3_1976,r4:r4_1978,r5:r5_1973,r6:r6_1974,r7:r7_1982,r8:r8_1981,r9:r9_1989,sp:sp_1970 - 0x00000010,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3417,fp:fp_3426,r0:r0_3422,r1:r1_3438,r10:r10_3432,r11:r11_3440,r3:r3_3424,r4:r4_3428,r5:r5_3419,r6:r6_3420,r7:r7_3436,r8:r8_3434,r9:r9_3430,sp:sp_3415
	Mem3443[sp_3415 - 0x00000004:word32] = r0_3422
	Mem3446[sp_3415 - 0x00000008:word32] = r5_3419 + 1515
	Mem3448[sp_3415 - 0x0000000C:word32] = r5_3419
	word32 r2_3449 = Mem3448[r5_3419 + 0x0000C839:word32]
	call r2_3449 + 2 (retsize: 4;)
		uses: ap:ap_3417,fp:fp_3426,r0:r0_3422,r1:r1_3438,r10:r10_3432,r11:r11_3440,r2:r2_3449,r3:r3_3424,r4:r4_3428,r5:r5_3419,r6:r6_3420,r7:r7_3436,r8:r8_3434,r9:r9_3430,sp:sp_3415 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3454,fp:fp_3460,r0:r0_3458,r1:r1_3466,r10:r10_3463,r11:r11_3467,r2:r2_3455,r4:r4_3461,r5:r5_3456,r6:r6_3457,r7:r7_3465,r8:r8_3464,r9:r9_3462,sp:sp_3453
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013C9E:
	word32 r11_3714
	word32 r1_3713
	word32 r7_3712
	word32 r8_3711
	word32 r10_3710
	word32 r4_3708
	word32 fp_3707
	word32 r3_3706
	word32 r0_3705
	word32 ap_3701
	word32 r6_3704
	word32 sp_3700
	word32 r5_3703
	word32 r9_3709
	Mem3473[sp_2390 + 14:word16] = Mem3470[r5_2393 + 0x0000C67A:word16] & ~0xFF00
	word32 r3_3474 = (uint32) Mem3473[sp_2390 + 14:word16]
	branch r3_3474 != 0x00000000 l00013CD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013CD8:
	branch r3_3474 != 0x00000001 l00013D08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D08:
	word32 r10_3488
	word32 sp_3482 = sp_2390 - 0x00000004
	Mem3483[sp_3482:word32] = 0x00000000
	branch (r3_3474 & 0x00000020) == 0x00000000 l00013D14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D14:
	r10_3488 = r6_2394
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D0E:
	r10_3488 = r8_2401 + 101
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D17:
	word32 r9_3506
	Mem3500[sp_3482 - 0x00000004:word32] = r10_3488
	branch (r3_3474 & 0x00000010) == 0x00000000 l00013D24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D24:
	r9_3506 = r6_2394
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D1D:
	r9_3506 = r8_2401 + 96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D27:
	word32 r7_3524
	Mem3518[sp_3482 - 0x00000008:word32] = r9_3506
	branch (r3_3474 & 0x00000008) == 0x00000000 l00013D34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D34:
	r7_3524 = r6_2394
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D2D:
	r7_3524 = r8_2401 + 91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D37:
	word32 r4_3542
	Mem3536[sp_3482 - 0x0000000C:word32] = r7_3524
	branch (r3_3474 & 0x00000004) == 0x00000000 l00013D44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D44:
	r4_3542 = r6_2394
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D3D:
	r4_3542 = r8_2401 + 86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D47:
	Mem3554[sp_3482 - 0x00000010:word32] = r4_3542
	branch (r3_3474 & 0x00000002) == 0x00000000 l00013D54
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D54:
	Mem3566[fp_2397 + -62:word32] = r6_2394
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D4D:
	Mem3572[fp_2397 + -62:word32] = r8_2401 + 81
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D58:
	Mem3581[sp_3482 - 0x00000014:word32] = Mem3579[fp_2397 + -62:word32]
	branch (r3_3474 & 0x00000001) == 0x00000000 l00013D68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D68:
	Mem3588[fp_2397 + -66:word32] = r6_2394
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D5E:
	Mem3594[fp_2397 + -66:word32] = r8_2401 + 76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D6C:
	Mem3603[sp_3482 - 0x00000018:word32] = Mem3601[fp_2397 + -66:word32]
	Mem3606[sp_3482 - 0x0000001C:word32] = r3_3474
	Mem3610[sp_3482 - 0x00000020:word32] = r6_2394 + 3363
	Mem3619[sp_3482 - 0x00000024:word32] = r5_2393 + 1515
	word32 sp_3623
	word32 ap_3631
	word32 r5_3640
	word32 r6_3641
	word32 r0_3649
	word32 r3_3650
	word32 fp_3651
	word32 r4_3654
	word32 r9_3659
	word32 r10_3665
	word32 r8_3667
	word32 r7_3671
	word32 r1_3679
	word32 r11_3687
	call Mem3619[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_3630,fp:fp_3565,r0:r0_3648,r1:r1_3678,r10:r10_3499,r11:r11_3686,r2:r2_3638,r3:r3_3474,r4:r4_3553,r5:r5_3469,r6:r6_3487,r7:r7_3535,r8:r8_3492,r9:r9_3517,sp:sp_3482 - 0x00000024,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3631,fp:fp_3651,r0:r0_3649,r1:r1_3679,r10:r10_3665,r11:r11_3687,r3:r3_3650,r4:r4_3654,r5:r5_3640,r6:r6_3641,r7:r7_3671,r8:r8_3667,r9:r9_3659,sp:sp_3623
	Mem3690[sp_3623 - 0x00000004:word32] = r0_3649
	Mem3693[sp_3623 - 0x00000008:word32] = r5_3640 + 1515
	Mem3695[sp_3623 - 0x0000000C:word32] = r5_3640
	word32 r2_3696 = Mem3695[r5_3640 + 0x0000C839:word32]
	call r2_3696 + 2 (retsize: 4;)
		uses: ap:ap_3631,fp:fp_3651,r0:r0_3649,r1:r1_3679,r10:r10_3665,r11:r11_3687,r2:r2_3696,r3:r3_3650,r4:r4_3654,r5:r5_3640,r6:r6_3641,r7:r7_3671,r8:r8_3667,r9:r9_3659,sp:sp_3623 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3701,fp:fp_3707,r0:r0_3705,r1:r1_3713,r10:r10_3710,r11:r11_3714,r3:r3_3706,r4:r4_3708,r5:r5_3703,r6:r6_3704,r7:r7_3712,r8:r8_3711,r9:r9_3709,sp:sp_3700
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013CDD:
	word32 sp_3716 = sp_2390 - 0x00000004
	Mem3717[sp_3716:word32] = 0x00000000
	Mem3719[sp_3716 - 0x00000004:word32] = r3_3474
	Mem3722[sp_3716 - 0x00000008:word32] = r6_2394 + 3298
	Mem3725[sp_3716 - 0x0000000C:word32] = r5_2393 + 1515
	word32 sp_3729
	word32 ap_3730
	word32 r5_3732
	word32 r6_3733
	word32 r0_3734
	word32 r3_3735
	word32 fp_3736
	word32 r4_3738
	word32 r9_3740
	word32 r10_3742
	word32 r8_3743
	word32 r7_3745
	word32 r1_3746
	word32 r11_3747
	call Mem3725[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_3630,fp:fp_3565,r0:r0_3648,r1:r1_3678,r10:r10_3741,r11:r11_3686,r2:r2_3638,r3:r3_3474,r4:r4_3737,r5:r5_3469,r6:r6_3487,r7:r7_3744,r8:r8_3492,r9:r9_3739,sp:sp_3716 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3730,fp:fp_3736,r0:r0_3734,r1:r1_3746,r10:r10_3742,r11:r11_3747,r3:r3_3735,r4:r4_3738,r5:r5_3732,r6:r6_3733,r7:r7_3745,r8:r8_3743,r9:r9_3740,sp:sp_3729
	Mem3750[sp_3729 - 0x00000004:word32] = r0_3734
	Mem3753[sp_3729 - 0x00000008:word32] = r5_3732 + 1515
	Mem3755[sp_3729 - 0x0000000C:word32] = r5_3732
	word32 r2_3756 = Mem3755[r5_3732 + 0x0000C839:word32]
	call r2_3756 + 2 (retsize: 4;)
		uses: ap:ap_3730,fp:fp_3736,r0:r0_3734,r1:r1_3746,r10:r10_3742,r11:r11_3747,r2:r2_3756,r3:r3_3735,r4:r4_3738,r5:r5_3732,r6:r6_3733,r7:r7_3745,r8:r8_3743,r9:r9_3740,sp:sp_3729 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3761,fp:fp_3767,r0:r0_3765,r1:r1_3773,r10:r10_3770,r11:r11_3774,r3:r3_3766,r4:r4_3768,r5:r5_3763,r6:r6_3764,r7:r7_3772,r8:r8_3771,r9:r9_3769,sp:sp_3760
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013CAF:
	word32 sp_3776 = sp_2390 - 0x00000004
	Mem3777[sp_3776:word32] = 0x00000000
	Mem3779[sp_3776 - 0x00000004:word32] = r3_3474
	Mem3782[sp_3776 - 0x00000008:word32] = r6_2394 + 3238
	Mem3785[sp_3776 - 0x0000000C:word32] = r5_2393 + 1515
	word32 sp_3789
	word32 ap_3790
	word32 r5_3792
	word32 r6_3793
	word32 r0_3794
	word32 r3_3795
	word32 fp_3796
	word32 r4_3797
	word32 r9_3798
	word32 r10_3799
	word32 r8_3800
	word32 r7_3801
	word32 r1_3802
	word32 r11_3803
	call Mem3785[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_3630,fp:fp_3565,r0:r0_3648,r1:r1_3678,r10:r10_3741,r11:r11_3686,r2:r2_3638,r3:r3_3474,r4:r4_3737,r5:r5_3469,r6:r6_3487,r7:r7_3744,r8:r8_3492,r9:r9_3739,sp:sp_3776 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3790,fp:fp_3796,r0:r0_3794,r1:r1_3802,r10:r10_3799,r11:r11_3803,r3:r3_3795,r4:r4_3797,r5:r5_3792,r6:r6_3793,r7:r7_3801,r8:r8_3800,r9:r9_3798,sp:sp_3789
	Mem3806[sp_3789 - 0x00000004:word32] = r0_3794
	Mem3809[sp_3789 - 0x00000008:word32] = r5_3792 + 1515
	Mem3811[sp_3789 - 0x0000000C:word32] = r5_3792
	word32 r2_3812 = Mem3811[r5_3792 + 0x0000C839:word32]
	call r2_3812 + 2 (retsize: 4;)
		uses: ap:ap_3790,fp:fp_3796,r0:r0_3794,r1:r1_3802,r10:r10_3799,r11:r11_3803,r2:r2_3812,r3:r3_3795,r4:r4_3797,r5:r5_3792,r6:r6_3793,r7:r7_3801,r8:r8_3800,r9:r9_3798,sp:sp_3789 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3817,fp:fp_3823,r0:r0_3821,r1:r1_3829,r10:r10_3826,r11:r11_3830,r3:r3_3822,r4:r4_3824,r5:r5_3819,r6:r6_3820,r7:r7_3828,r8:r8_3827,r9:r9_3825,sp:sp_3816
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D92:
	word32 r2_3834 = (uint32) Mem3833[r5_3703 + 0x0000C672:word16]
	branch r2_3834 != 0x00000000 l00013D9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D9E:
	word32 r7_3839 = Mem3833[r5_3703 + 0x0000C627:word32]
	Mem3842[sp_3700 + 42:word16] = Mem3833[r5_3703 + 0x0000C672:word16]
	branch Mem3842[sp_3700 + 8:word32] <= 0x00000001 l00013DB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013DB8:
	branch Mem3842[r5_3703 + 0x0000C627:word32] != 0x00000000 l00013DC4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013DC4:
	word32 sp_3850 = sp_3700 - 0x00000004
	Mem3851[sp_3850:word32] = 0x00000000
	Mem3855[sp_3850 - 0x00000004:word32] = r6_3704 + 3560
	Mem3858[sp_3850 - 0x00000008:word32] = r5_3703 + 1515
	word32 sp_3862
	word32 ap_3864
	word32 r5_3866
	word32 r6_3867
	word32 r0_3869
	word32 r3_3871
	word32 fp_3873
	word32 r4_3875
	word32 r9_3877
	word32 r10_3879
	word32 r8_3881
	word32 r7_3882
	word32 r1_3884
	word32 r11_3886
	call Mem3858[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_3863,fp:fp_3872,r0:r0_3868,r1:r1_3883,r10:r10_3878,r11:r11_3885,r2:r2_3834,r3:r3_3870,r4:r4_3874,r5:r5_3832,r6:r6_3853,r7:r7_3839,r8:r8_3880,r9:r9_3876,sp:sp_3850 - 0x00000008,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3864,fp:fp_3873,r0:r0_3869,r1:r1_3884,r10:r10_3879,r11:r11_3886,r3:r3_3871,r4:r4_3875,r5:r5_3866,r6:r6_3867,r7:r7_3882,r8:r8_3881,r9:r9_3877,sp:sp_3862
	Mem3889[sp_3862 - 0x00000004:word32] = r0_3869
	Mem3892[sp_3862 - 0x00000008:word32] = r5_3866 + 1515
	Mem3894[sp_3862 - 0x0000000C:word32] = r5_3866
	word32 r2_3895 = Mem3894[r5_3866 + 0x0000C839:word32]
	word32 sp_3899
	word32 r8_3910
	word32 r5_3902
	word32 ap_3900
	word32 r6_3903
	word32 r0_3904
	word32 r3_3905
	word32 fp_3906
	word32 r4_3907
	word32 r9_3908
	word32 r10_3909
	word32 r7_3911
	word32 r1_3912
	word32 r11_3913
	call r2_3895 + 2 (retsize: 4;)
		uses: ap:ap_3864,fp:fp_3873,r0:r0_3869,r1:r1_3884,r10:r10_3879,r11:r11_3886,r2:r2_3895,r3:r3_3871,r4:r4_3875,r5:r5_3866,r6:r6_3867,r7:r7_3882,r8:r8_3881,r9:r9_3877,sp:sp_3862 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3900,fp:fp_3906,r0:r0_3904,r1:r1_3912,r10:r10_3909,r11:r11_3913,r3:r3_3905,r4:r4_3907,r5:r5_3902,r6:r6_3903,r7:r7_3911,r8:r8_3910,r9:r9_3908,sp:sp_3899
	word32 r2_3915 = (uint32) Mem3894[sp_3899 + 42:word16]
	branch r2_3915 >=u 0x00000004 l00013DF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013DF3:
	r9_3908 = Mem3894[0x000192D0:word32]
	Mem3921[sp_3899 + 44:word32] = Mem3894[0x000192D8:word32]
	Mem3923[sp_3899 + 24:word32] = Mem3921[0x000192BC:word32]
	Mem3925[sp_3899 + 20:word32] = Mem3923[0x000192C4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E24:
	word32 sp_3930 = sp_3899 - 0x00000004
	Mem3932[sp_3930:word32] = r7_3911
	word32 sp_3936
	word32 ap_3938
	word32 r2_3940
	word32 r5_3942
	word32 r6_3944
	word32 r0_3946
	word32 r3_3948
	word32 fp_3950
	word32 r4_3952
	word32 r9_3954
	word32 r10_3956
	word32 r8_3958
	word32 r7_3959
	word32 r1_3961
	word32 r11_3963
	call fn00000002 (retsize: 4;)
		uses: ap:ap_3937,fp:fp_3949,r0:r0_3945,r1:r1_3960,r10:r10_3955,r11:r11_3962,r2:r2_3939,r3:r3_3947,r4:r4_3951,r5:r5_3941,r6:r6_3943,r7:r7_3931,r8:r8_3957,r9:r9_3953,sp:sp_3930,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3938,fp:fp_3950,r0:r0_3946,r1:r1_3961,r10:r10_3956,r11:r11_3963,r2:r2_3940,r3:r3_3948,r4:r4_3952,r5:r5_3942,r6:r6_3944,r7:r7_3959,r8:r8_3958,r9:r9_3954,sp:sp_3936
	Mem3966[sp_3936 + 18:word16] = (word16) r0_3946
	Mem3969[sp_3936 - 0x00000004:word32] = r7_3959 + 2
	word32 r2_3975
	word32 r0_3978
	word32 r7_3985
	word32 sp_3973
	word32 ap_3974
	word32 r5_3976
	word32 r6_3977
	word32 r3_3979
	word32 fp_3980
	word32 r4_3981
	word32 r9_3982
	word32 r10_3983
	word32 r8_3984
	word32 r1_3986
	word32 r11_3987
	call Mem3969[sp_3936 + 0x00000020:word32] + 2 (retsize: 4;)
		uses: ap:ap_3938,fp:fp_3950,r0:r0_3946,r1:r1_3961,r10:r10_3956,r11:r11_3963,r2:r2_3940,r3:r3_3948,r4:r4_3952,r5:r5_3942,r6:r6_3944,r7:r7_3959,r8:r8_3958,r9:r9_3954,sp:sp_3936 - 0x00000004,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_3974,fp:fp_3980,r0:r0_3978,r1:r1_3986,r10:r10_3983,r11:r11_3987,r2:r2_3975,r3:r3_3979,r4:r4_3981,r5:r5_3976,r6:r6_3977,r7:r7_3985,r8:r8_3984,r9:r9_3982,sp:sp_3973
	Mem3990[sp_3973 + 40:word16] = (word16) r0_3978
	word32 r0_3992 = (uint32) Mem3990[sp_3973 + 42:word16]
	Mem3995[sp_3973 + 42:int16] = (int16) (r0_3992 - 0x00000004)
	word32 r7_3991 = r7_3985 + 0x00000004
	word32 r0_3993 = r0_3992 - 0x00000004
	branch Mem3995[sp_3973 + 40:word16] <=u Mem3995[sp_3973 + 42:word16] l00013E81
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E4E:
	Mem4001[sp_3973 - 0x00000004:uint32] = 0x00000421
	Mem4004[sp_3973 - 0x00000008:uint32] = (uint32) Mem4001[sp_3973 + 0x00000026:word16]
	Mem4007[sp_3973 - 0x0000000C:uint32] = (uint32) Mem4004[sp_3973 + 0x00000024:word16]
	Mem4010[sp_3973 - 0x00000010:uint32] = (uint32) Mem4007[sp_3973 + 0x0000000E:word16]
	Mem4013[sp_3973 - 0x00000014:word32] = r6_3977 + 3431
	Mem4016[sp_3973 - 0x00000018:word32] = r5_3976 + 1515
	word32 sp_4020
	word32 ap_4021
	word32 r5_4023
	word32 r6_4024
	word32 r0_4025
	word32 r3_4026
	word32 fp_4027
	word32 r4_4028
	word32 r9_4029
	word32 r10_4030
	word32 r8_4031
	word32 r7_4032
	word32 r1_4033
	word32 r11_4034
	call r9_3982 + 2 (retsize: 4;)
		uses: ap:ap_3974,fp:fp_3980,r0:r0_3992 - 0x00000004,r1:r1_3986,r10:r10_3983,r11:r11_3987,r2:r2_3975,r3:r3_3979,r4:r4_3981,r5:r5_3976,r6:r6_3977,r7:r7_3985 + 0x00000004,r8:r8_3984,r9:r9_3982,sp:sp_3973 - 0x00000018,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4021,fp:fp_4027,r0:r0_4025,r1:r1_4033,r10:r10_4030,r11:r11_4034,r3:r3_4026,r4:r4_4028,r5:r5_4023,r6:r6_4024,r7:r7_4032,r8:r8_4031,r9:r9_4029,sp:sp_4020
	Mem4037[sp_4020 - 0x00000004:word32] = r0_4025
	Mem4040[sp_4020 - 0x00000008:word32] = r5_4023 + 1515
	Mem4042[sp_4020 - 0x0000000C:word32] = r5_4023
	word32 r2_4043 = Mem4042[r5_4023 + 0x0000C839:word32]
	call r2_4043 + 2 (retsize: 4;)
		uses: ap:ap_4021,fp:fp_4027,r0:r0_4025,r1:r1_4033,r10:r10_4030,r11:r11_4034,r2:r2_4043,r3:r3_4026,r4:r4_4028,r5:r5_4023,r6:r6_4024,r7:r7_4032,r8:r8_4031,r9:r9_4029,sp:sp_4020 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4048,fp:fp_4054,r0:r0_4052,r1:r1_4060,r10:r10_4057,r11:r11_4061,r3:r3_4053,r4:r4_4055,r5:r5_4050,r6:r6_4051,r7:r7_4059,r8:r8_4058,r9:r9_4056,sp:sp_4047
	Mem4064[sp_3973 + 40:word16] = Mem4042[sp_3973 + 42:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E81:
	word32 r2_4070 = (uint32) Mem4069[sp_3973 + 18:word16]
	branch r2_4070 >= 0x00000007 l00013E8D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E8D:
	branch r2_4070 > 0x0000000D l00013EA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013EA0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E90_1:
	call 0x00013E94 + (r2_4070 - 0x00000007) * 0x00000002 (retsize: 4;)
		uses: ap:ap_4080,fp:fp_4090,r0:r2_4070,r1:r1_4102,r10:r10_4096,r11:r11_4104,r2:r2_4070,r3:r3_4088,r4:r4_4092,r5:r5_4083,r6:r6_4085,r7:r7_4100,r8:r8_4098,r9:r9_4094,sp:sp_4068,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013E8A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014080:
	word32 sp_4108 = sp_3973 - 0x00000004
	Mem4109[sp_4108:word32] = 0x00000000
	Mem4112[sp_4108 - 0x00000004:uint32] = (uint32) Mem4109[sp_4108 + 0x00000028:word16]
	word32 r3_4107 = r6_3977 + 3904
	Mem4114[sp_4108 - 0x00000008:word32] = r3_4107
	word32 r4_4115 = (uint32) Mem4114[sp_4108 + 0x00000016:word16]
	Mem4117[sp_4108 - 0x0000000C:word32] = r4_4115
	Mem4120[sp_4108 - 0x00000010:word32] = r6_3977 + 3607
	Mem4123[sp_4108 - 0x00000014:word32] = r5_3976 + 1515
	word32 sp_4127
	word32 ap_4128
	word32 r5_4130
	word32 r6_4131
	word32 r0_4133
	word32 r3_4134
	word32 fp_4135
	word32 r4_4136
	word32 r9_4137
	word32 r10_4138
	word32 r8_4139
	word32 r7_4140
	word32 r1_4141
	word32 r11_4142
	call r9_3982 + 2 (retsize: 4;)
		uses: ap:ap_4080,fp:fp_4090,r0:r0_4132,r1:r1_4102,r10:r10_4096,r11:r11_4104,r2:r2_4070,r3:r3_4107,r4:r4_4115,r5:r5_4083,r6:r6_4085,r7:r7_4100,r8:r8_4098,r9:r9_4094,sp:sp_4108 - 0x00000014,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4128,fp:fp_4135,r0:r0_4133,r1:r1_4141,r10:r10_4138,r11:r11_4142,r3:r3_4134,r4:r4_4136,r5:r5_4130,r6:r6_4131,r7:r7_4140,r8:r8_4139,r9:r9_4137,sp:sp_4127
	Mem4145[sp_4127 - 0x00000004:word32] = r0_4133
	Mem4148[sp_4127 - 0x00000008:word32] = r5_4130 + 1515
	Mem4150[sp_4127 - 0x0000000C:word32] = r5_4130
	word32 r2_4151 = Mem4150[r5_4130 + 0x0000C839:word32]
	word32 sp_4155
	word32 r8_4166
	word32 r5_4158
	word32 ap_4156
	word32 r6_4159
	word32 r0_4160
	word32 r3_4161
	word32 fp_4162
	word32 r4_4163
	word32 r9_4164
	word32 r10_4165
	word32 r7_4167
	word32 r1_4168
	word32 r11_4169
	call r2_4151 + 2 (retsize: 4;)
		uses: ap:ap_4128,fp:fp_4135,r0:r0_4133,r1:r1_4141,r10:r10_4138,r11:r11_4142,r2:r2_4151,r3:r3_4134,r4:r4_4136,r5:r5_4130,r6:r6_4131,r7:r7_4140,r8:r8_4139,r9:r9_4137,sp:sp_4127 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4156,fp:fp_4162,r0:r0_4160,r1:r1_4168,r10:r10_4165,r11:r11_4169,r3:r3_4161,r4:r4_4163,r5:r5_4158,r6:r6_4159,r7:r7_4167,r8:r8_4166,r9:r9_4164,sp:sp_4155
	branch r4_4163 >= 0x00000009 l000140BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140BB:
	branch r4_4163 != 0x00000009 l000140C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140C0:
	branch r4_4163 >= 0x00002605 l000140CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140CC:
	branch r4_4163 != 0x00002605 l000140D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140D1:
	branch r4_4163 >= 0x00004453 l000140DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140DD:
	branch r4_4163 != 0x00004453 l000140E2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140E2:
	branch r4_4163 >= 0x00004B46 l000140EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140EE:
	branch r4_4163 != 0x00004B46 l000140F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140F3:
	branch r4_4163 >= 0x00004C41 l000140FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140FF:
	branch r4_4163 == 0x00004C41 l00014154
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014101:
	branch r4_4163 >= 0x00004D49 l0001410D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001410D:
	branch r4_4163 != 0x00004D49 l00014112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014112:
	branch r4_4163 >= 0x00005356 l0001411E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001411E:
	branch r4_4163 != 0x00005356 l00014123
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014123:
	branch r4_4163 >= 0x00005455 l0001412F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001412F:
	branch r4_4163 != 0x00005455 l00014134
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014134:
	branch r4_4163 >= 0x00006542 l00014140
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014140:
	branch r4_4163 != 0x00006542 l00014145
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014145:
	branch r4_4163 != 0x0000FB4A l00014151
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014151:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001414E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014504:
	r0_4160 = (uint32) Mem4150[sp_4155 + 40:word16]
	branch r0_4160 >=u 0x00000004 l00014510
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014510:
	Mem4216[sp_4155 - 0x00000004:word32] = 0x00000000
	Mem4219[sp_4155 - 0x00000008:uint32] = (uint32) Mem4216[r7_4167 + 3:byte]
	Mem4222[sp_4155 - 0x0000000C:uint32] = (uint32) Mem4219[r7_4167 + 2:byte]
	Mem4225[sp_4155 - 0x00000010:uint32] = (uint32) Mem4222[r7_4167 + 1:byte]
	Mem4228[sp_4155 - 0x00000014:uint32] = (uint32) Mem4225[r7_4167:byte]
	Mem4231[sp_4155 - 0x00000018:word32] = r6_4159 + 4591
	Mem4234[sp_4155 - 0x0000001C:word32] = r5_4158 + 1515
	word32 sp_4238
	word32 ap_4239
	word32 r5_4241
	word32 r6_4242
	word32 r0_4243
	word32 r3_4244
	word32 fp_4245
	word32 r4_4246
	word32 r9_4247
	word32 r10_4248
	word32 r8_4249
	word32 r7_4250
	word32 r1_4251
	word32 r11_4252
	call r9_4164 + 2 (retsize: 4;)
		uses: ap:ap_4156,fp:fp_4162,r0:r0_4211,r1:r1_4168,r10:r10_4165,r11:r11_4169,r2:r4_4163,r3:r3_4161,r4:r4_4163,r5:r5_4158,r6:r6_4159,r7:r7_4167,r8:r8_4166,r9:r9_4164,sp:sp_4155 - 0x0000001C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4239,fp:fp_4245,r0:r0_4243,r1:r1_4251,r10:r10_4248,r11:r11_4252,r3:r3_4244,r4:r4_4246,r5:r5_4241,r6:r6_4242,r7:r7_4250,r8:r8_4249,r9:r9_4247,sp:sp_4238
	Mem4255[sp_4238 - 0x00000004:word32] = r0_4243
	Mem4258[sp_4238 - 0x00000008:word32] = r5_4241 + 1515
	Mem4260[sp_4238 - 0x0000000C:word32] = r5_4241
	word32 r2_4261 = Mem4260[r5_4241 + 0x0000C839:word32]
	call r2_4261 + 2 (retsize: 4;)
		uses: ap:ap_4239,fp:fp_4245,r0:r0_4243,r1:r1_4251,r10:r10_4248,r11:r11_4252,r2:r2_4261,r3:r3_4244,r4:r4_4246,r5:r5_4241,r6:r6_4242,r7:r7_4250,r8:r8_4249,r9:r9_4247,sp:sp_4238 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4266,fp:fp_4272,r0:r0_4270,r1:r1_4278,r10:r10_4275,r11:r11_4279,r3:r3_4271,r4:r4_4273,r5:r5_4268,r6:r6_4269,r7:r7_4277,r8:r8_4276,r9:r9_4274,sp:sp_4265
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001450D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014142:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000144AC:
	r0_4160 = (uint32) Mem4150[sp_4155 + 40:word16]
	branch r0_4160 >=u 0x00000005 l000144B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000144B8:
	word32 r3_4291
	Mem4286[sp_4155 - 0x00000004:word32] = 0x00000000
	word32 r2_4287 = (uint32) Mem4286[r7_4167 + 4:byte]
	branch (r2_4287 & 0x00000001) == 0x00000000 l000144C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000144C8:
	r3_4291 = r6_4159
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000144C1:
	r3_4291 = r8_4166 + 214
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000144CB:
	Mem4302[sp_4155 - 0x00000008:word32] = r3_4291
	Mem4305[sp_4155 - 0x0000000C:word32] = r7_4167
	word32 sp_4309
	word32 ap_4311
	word32 r2_4313
	word32 r5_4315
	word32 r6_4317
	word32 r0_4319
	word32 r3_4320
	word32 fp_4322
	word32 r4_4324
	word32 r9_4326
	word32 r10_4328
	word32 r8_4330
	word32 r7_4331
	word32 r1_4333
	word32 r11_4335
	call Mem4305[sp_4155 + 0x0000001C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4156,fp:fp_4162,r0:r0_4281,r1:r1_4168,r10:r10_4165,r11:r11_4169,r2:r2_4287,r3:r3_4301,r4:r4_4163,r5:r5_4158,r6:r6_4159,r7:r7_4167,r8:r8_4166,r9:r9_4164,sp:sp_4155 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4311,fp:fp_4322,r0:r0_4319,r1:r1_4333,r10:r10_4328,r11:r11_4335,r2:r2_4313,r3:r3_4320,r4:r4_4324,r5:r5_4315,r6:r6_4317,r7:r7_4331,r8:r8_4330,r9:r9_4326,sp:sp_4309
	Mem4338[sp_4309 - 0x00000004:word32] = r0_4319
	Mem4341[sp_4309 - 0x00000008:word32] = r6_4317 + 4512
	Mem4344[sp_4309 - 0x0000000C:word32] = r5_4315 + 1515
	word32 sp_4348
	word32 ap_4349
	word32 r5_4351
	word32 r6_4352
	word32 r0_4353
	word32 r3_4354
	word32 fp_4355
	word32 r4_4356
	word32 r9_4357
	word32 r10_4358
	word32 r8_4359
	word32 r7_4360
	word32 r1_4361
	word32 r11_4362
	call r9_4326 + 2 (retsize: 4;)
		uses: ap:ap_4311,fp:fp_4322,r0:r0_4319,r1:r1_4333,r10:r10_4328,r11:r11_4335,r2:r2_4313,r3:r3_4320,r4:r4_4324,r5:r5_4315,r6:r6_4317,r7:r7_4331,r8:r8_4330,r9:r9_4326,sp:sp_4309 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4349,fp:fp_4355,r0:r0_4353,r1:r1_4361,r10:r10_4358,r11:r11_4362,r3:r3_4354,r4:r4_4356,r5:r5_4351,r6:r6_4352,r7:r7_4360,r8:r8_4359,r9:r9_4357,sp:sp_4348
	Mem4365[sp_4348 - 0x00000004:word32] = r0_4353
	Mem4368[sp_4348 - 0x00000008:word32] = r5_4351 + 1515
	Mem4370[sp_4348 - 0x0000000C:word32] = r5_4351
	word32 r2_4371 = Mem4370[r5_4351 + 0x0000C839:word32]
	call r2_4371 + 2 (retsize: 4;)
		uses: ap:ap_4349,fp:fp_4355,r0:r0_4353,r1:r1_4361,r10:r10_4358,r11:r11_4362,r2:r2_4371,r3:r3_4354,r4:r4_4356,r5:r5_4351,r6:r6_4352,r7:r7_4360,r8:r8_4359,r9:r9_4357,sp:sp_4348 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4376,fp:fp_4382,r0:r0_4380,r1:r1_4388,r10:r10_4385,r11:r11_4389,r3:r3_4381,r4:r4_4383,r5:r5_4378,r6:r6_4379,r7:r7_4387,r8:r8_4386,r9:r9_4384,sp:sp_4375
	branch ((uint32) Mem4370[r7_4167 + 4:byte] & 0x00000001) == 0x00000000 l000144FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000144FC:
	Mem4396[Mem4370[ap_4156 + 4:word32]:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000144F9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000144B5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001413D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014131:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001432C:
	r0_4160 = (uint32) Mem4150[sp_4155 + 40:word16]
	branch r0_4160 >=u 0x00000001 l00014338
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014338:
	Mem4408[fp_4162 + -154:byte] = 0x00
	r4_4163 = 0x00000000
	word32 r2_4409 = (uint32) Mem4408[r7_4167:byte]
	branch (r2_4409 & 0x00000001) == 0x00000000 l00014355
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014347:
	Mem4415[sp_4155 - 0x00000004:word32] = r6_4159 + 4380
	Mem4418[sp_4155 - 0x00000008:word32] = fp_4162 + -154
	word32 r4_4430
	call Mem4418[sp_4155 + 0x00000018:word32] + 2 (retsize: 4;)
		uses: ap:ap_4156,fp:fp_4162,r0:r0_4401,r1:r1_4168,r10:r10_4165,r11:r11_4169,r2:r2_4409,r3:r3_4161,r4:0x00000000,r5:r5_4158,r6:r6_4159,r7:r7_4167,r8:r8_4166,r9:r9_4164,sp:sp_4155 - 0x00000008,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4423,fp:fp_4429,r0:r0_4427,r1:r1_4435,r10:r10_4432,r11:r11_4436,r3:r3_4428,r4:r4_4430,r5:r5_4425,r6:r6_4426,r7:r7_4434,r8:r8_4433,r9:r9_4431,sp:sp_4422
	r4_4163 = r4_4430 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014355:
	word32 r2_4442 = (uint32) Mem4441[r7_4167:byte]
	branch (r2_4442 & 0x00000002) == 0x00000000 l0001438D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001435C:
	word32 sp_4447 = sp_4155 - 0x00000004
	Mem4450[sp_4447:word32] = fp_4162 + -154
	word32 sp_4454
	word32 ap_4456
	word32 r5_4459
	word32 r6_4461
	word32 r0_4463
	word32 fp_4466
	word32 r4_4468
	word32 r9_4470
	word32 r10_4472
	word32 r8_4474
	word32 r7_4475
	word32 r1_4477
	word32 r11_4479
	call Mem4450[sp_4447 + 24:word32] + 2 (retsize: 4;)
		uses: ap:ap_4455,fp:fp_4448,r0:r0_4462,r1:r1_4476,r10:r10_4471,r11:r11_4478,r2:r2_4442,r3:r3_4464,r4:r4_4467,r5:r5_4458,r6:r6_4460,r7:r7_4440,r8:r8_4473,r9:r9_4469,sp:sp_4447,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4456,fp:fp_4466,r0:r0_4463,r1:r1_4477,r10:r10_4472,r11:r11_4479,r4:r4_4468,r5:r5_4459,r6:r6_4461,r7:r7_4475,r8:r8_4474,r9:r9_4470,sp:sp_4454
	word32 r3_4481 = r0_4463
	branch r4_4468 == 0x00000000 l00014376
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001436B:
	Mem4489[fp_4466 + -154:byte] = 0x2F
	r3_4481 = r0_4463 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014376:
	Mem4497[sp_4454 - 0x00000004:word32] = r6_4461 + 4393
	Mem4503[sp_4454 - 0x00000008:word32] = fp_4466 + -154 + r3_4481
	word32 r4_4517
	call Mem4503[sp_4454 + 0x00000018:word32] + 2 (retsize: 4;)
		uses: ap:ap_4456,fp:fp_4466,r0:r0_4463,r1:r1_4477,r10:r10_4472,r11:r11_4479,r2:fp_4466 + -154,r3:r3_4501,r4:r4_4468,r5:r5_4459,r6:r6_4461,r7:r7_4475,r8:r8_4474,r9:r9_4470,sp:sp_4454 - 0x00000008,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4507,fp:fp_4515,r0:r0_4513,r1:r1_4527,r10:r10_4521,r11:r11_4529,r3:r3_4514,r4:r4_4517,r5:r5_4510,r6:r6_4511,r7:r7_4525,r8:r8_4523,r9:r9_4519,sp:sp_4505
	Mem4533[Mem4503[ap_4156 + 4:word32]:word32] = Mem4503[ap_4156 + 4:word32] + 0x00000004
	r4_4163 = r4_4517 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001438D:
	word32 r2_4537 = (uint32) Mem4536[r7_4167:byte]
	branch (r2_4537 & 0x00000004) == 0x00000000 l000143C5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014394:
	word32 sp_4542 = sp_4155 - 0x00000004
	Mem4545[sp_4542:word32] = fp_4162 + -154
	word32 sp_4549
	word32 ap_4551
	word32 r5_4554
	word32 r6_4556
	word32 r0_4558
	word32 fp_4561
	word32 r4_4563
	word32 r9_4565
	word32 r10_4567
	word32 r8_4569
	word32 r7_4570
	word32 r1_4572
	word32 r11_4574
	call Mem4545[sp_4542 + 24:word32] + 2 (retsize: 4;)
		uses: ap:ap_4550,fp:fp_4543,r0:r0_4557,r1:r1_4571,r10:r10_4566,r11:r11_4573,r2:r2_4537,r3:r3_4559,r4:r4_4562,r5:r5_4553,r6:r6_4555,r7:r7_4535,r8:r8_4568,r9:r9_4564,sp:sp_4542,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4551,fp:fp_4561,r0:r0_4558,r1:r1_4572,r10:r10_4567,r11:r11_4574,r4:r4_4563,r5:r5_4554,r6:r6_4556,r7:r7_4570,r8:r8_4569,r9:r9_4565,sp:sp_4549
	word32 r3_4576 = r0_4558
	branch r4_4563 == 0x00000000 l000143AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000143A3:
	Mem4584[fp_4561 + -154:byte] = 0x2F
	r3_4576 = r0_4558 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000143AE:
	Mem4592[sp_4549 - 0x00000004:word32] = r6_4556 + 4400
	Mem4598[sp_4549 - 0x00000008:word32] = fp_4561 + -154 + r3_4576
	word32 r4_4612
	call Mem4598[sp_4549 + 0x00000018:word32] + 2 (retsize: 4;)
		uses: ap:ap_4551,fp:fp_4561,r0:r0_4558,r1:r1_4572,r10:r10_4567,r11:r11_4574,r2:fp_4561 + -154,r3:r3_4596,r4:r4_4563,r5:r5_4554,r6:r6_4556,r7:r7_4570,r8:r8_4569,r9:r9_4565,sp:sp_4549 - 0x00000008,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4602,fp:fp_4610,r0:r0_4608,r1:r1_4622,r10:r10_4616,r11:r11_4624,r2:r2_4603,r3:r3_4609,r4:r4_4612,r5:r5_4605,r6:r6_4606,r7:r7_4620,r8:r8_4618,r9:r9_4614,sp:sp_4600
	Mem4628[Mem4598[ap_4156 + 4:word32]:word32] = Mem4598[ap_4156 + 4:word32] + 0x00000004
	r4_4163 = r4_4612 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000143C5:
	branch r4_4163 > 0x00000000 l000143CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000143CC:
	word32 r3_4641
	word32 sp_4635 = sp_4155 - 0x00000004
	Mem4636[sp_4635:word32] = 0x00000000
	branch r4_4163 != 0x00000001 l000143D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000143D8:
	r3_4641 = r8_4166 + 207
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000143D3:
	r3_4641 = r6_4159
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000143DD:
	Mem4653[sp_4635 - 0x00000004:word32] = r3_4641
	Mem4658[sp_4635 - 0x00000008:word32] = fp_4162 + -154
	Mem4662[sp_4635 - 0x0000000C:word32] = r6_4159 + 4330
	Mem4667[sp_4635 - 0x00000010:word32] = r5_4158 + 1515
	word32 sp_4673
	word32 ap_4676
	word32 r5_4680
	word32 r6_4681
	word32 r0_4684
	word32 r3_4685
	word32 fp_4686
	word32 r4_4688
	word32 r9_4689
	word32 r10_4692
	word32 r8_4694
	word32 r7_4697
	word32 r1_4700
	word32 r11_4703
	call r9_4164 + 2 (retsize: 4;)
		uses: ap:ap_4675,fp:fp_4656,r0:r0_4683,r1:r1_4699,r10:r10_4691,r11:r11_4702,r2:r2_4678,r3:r3_4652,r4:r4_4630,r5:r5_4665,r6:r6_4645,r7:r7_4696,r8:r8_4640,r9:r9_4672,sp:sp_4635 - 0x00000010,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4676,fp:fp_4686,r0:r0_4684,r1:r1_4700,r10:r10_4692,r11:r11_4703,r3:r3_4685,r4:r4_4688,r5:r5_4680,r6:r6_4681,r7:r7_4697,r8:r8_4694,r9:r9_4689,sp:sp_4673
	Mem4706[sp_4673 - 0x00000004:word32] = r0_4684
	Mem4709[sp_4673 - 0x00000008:word32] = r5_4680 + 1515
	Mem4711[sp_4673 - 0x0000000C:word32] = r5_4680
	word32 r2_4712 = Mem4711[r5_4680 + 0x0000C839:word32]
	call r2_4712 + 2 (retsize: 4;)
		uses: ap:ap_4676,fp:fp_4686,r0:r0_4684,r1:r1_4700,r10:r10_4692,r11:r11_4703,r2:r2_4712,r3:r3_4685,r4:r4_4688,r5:r5_4680,r6:r6_4681,r7:r7_4697,r8:r8_4694,r9:r9_4689,sp:sp_4673 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4717,fp:fp_4723,r0:r0_4721,r1:r1_4729,r10:r10_4726,r11:r11_4730,r3:r3_4722,r4:r4_4724,r5:r5_4719,r6:r6_4720,r7:r7_4728,r8:r8_4727,r9:r9_4725,sp:sp_4716
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000143C9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014335:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001412C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014120:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014544:
	r0_4160 = (uint32) Mem4150[sp_4155 + 40:word16]
	branch r0_4160 >=u 0x00000005 l00014550
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014550:
	Mem4737[sp_4155 - 0x00000004:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001454D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001411B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001410F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000141DC:
	r10_4165 = (uint32) Mem4150[sp_4155 + 40:word16]
	branch r10_4165 >=u 0x00000008 l000141E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000141E8:
	Mem4748[sp_4155 - 0x00000004:word32] = r7_4167 + 0x00000004
	word32 sp_4750
	word32 ap_4751
	word32 r5_4753
	word32 r6_4754
	word32 r0_4755
	word32 r3_4756
	word32 fp_4757
	word32 r9_4759
	word32 r10_4760
	word32 r8_4761
	word32 r7_4762
	word32 r1_4763
	word32 r11_4764
	call Mem4748[sp_4155 + 0x00000020:word32] + 2 (retsize: 4;)
		uses: ap:ap_4156,fp:fp_4162,r0:r0_4160,r1:r1_4168,r10:r10_4742,r11:r11_4169,r2:r4_4163,r3:r3_4161,r4:r4_4163,r5:r5_4158,r6:r6_4159,r7:r7_4167,r8:r8_4166,r9:r9_4164,sp:sp_4155 - 0x00000004,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4751,fp:fp_4757,r0:r0_4755,r1:r1_4763,r10:r10_4760,r11:r11_4764,r3:r3_4756,r5:r5_4753,r6:r6_4754,r7:r7_4762,r8:r8_4761,r9:r9_4759,sp:sp_4750
	Mem4770[fp_4757 + -74:byte] = 0x00
	word32 r4_4767 = (uint32) (word16) r0_4755 & ~0xFFFFFFF8
	branch r4_4767 <= 0x00000003 l00014209
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014206:
	r4_4767 = 0x00000003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014209:
	word32 r3_5033
	Mem4780[sp_4750 - 0x00000004:word32] = 0x00000004
	Mem4784[sp_4750 - 0x00000008:word32] = r8_4761 + 105
	Mem4787[sp_4750 - 0x0000000C:word32] = r7_4762
	word32 r3_4803
	word32 sp_4791
	word32 fp_4805
	word32 r7_4813
	word32 ap_4793
	word32 r2_4795
	word32 r5_4797
	word32 r6_4799
	word32 r0_4801
	word32 r4_4807
	word32 r9_4809
	word32 r10_4811
	word32 r8_4812
	word32 r1_4815
	word32 r11_4817
	call Mem4787[sp_4750 + 0x0000002C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4751,fp:fp_4757,r0:r0_4755,r1:r1_4763,r10:r10_4760,r11:r11_4764,r2:fp_4757 + -74,r3:r3_4756,r4:r4_4806,r5:r5_4753,r6:r6_4754,r7:r7_4762,r8:r8_4761,r9:r9_4759,sp:sp_4750 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4793,fp:fp_4805,r0:r0_4801,r1:r1_4815,r10:r10_4811,r11:r11_4817,r2:r2_4795,r3:r3_4803,r4:r4_4807,r5:r5_4797,r6:r6_4799,r7:r7_4813,r8:r8_4812,r9:r9_4809,sp:sp_4791
	branch r0_4801 != 0x00000000 l00014220
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014220:
	Mem4824[sp_4791 - 0x00000004:word32] = 0x00000004
	Mem4827[sp_4791 - 0x00000008:word32] = r8_4812 + 114
	Mem4829[sp_4791 - 0x0000000C:word32] = r7_4813
	word32 r3_4839
	call Mem4829[sp_4791 + 0x0000002C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4793,fp:fp_4805,r0:r0_4801,r1:r1_4815,r10:r10_4811,r11:r11_4817,r2:r2_4795,r3:r3_4803,r4:r4_4807,r5:r5_4797,r6:r6_4799,r7:r7_4813,r8:r8_4812,r9:r9_4809,sp:sp_4791 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4834,fp:fp_4840,r0:r0_4838,r1:r1_4846,r10:r10_4843,r11:r11_4847,r2:r2_4835,r3:r3_4839,r4:r4_4841,r5:r5_4836,r6:r6_4837,r7:r7_4845,r8:r8_4844,r9:r9_4842,sp:sp_4833
	branch r0_4801 != 0x00000000 l00014238
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014238:
	Mem4854[sp_4791 - 0x00000004:word32] = 0x00000004
	Mem4857[sp_4791 - 0x00000008:word32] = r8_4812 + 126
	Mem4859[sp_4791 - 0x0000000C:word32] = r7_4813
	word32 r3_4869
	call Mem4859[sp_4791 + 0x0000002C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4834,fp:fp_4840,r0:r0_4838,r1:r1_4846,r10:r10_4843,r11:r11_4847,r2:r2_4835,r3:r3_4839,r4:r4_4841,r5:r5_4836,r6:r6_4837,r7:r7_4845,r8:r8_4844,r9:r9_4842,sp:sp_4833 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4864,fp:fp_4870,r0:r0_4868,r1:r1_4876,r10:r10_4873,r11:r11_4877,r2:r2_4865,r3:r3_4869,r4:r4_4871,r5:r5_4866,r6:r6_4867,r7:r7_4875,r8:r8_4874,r9:r9_4872,sp:sp_4863
	branch r0_4801 != 0x00000000 l00014250
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014250:
	Mem4884[sp_4791 - 0x00000004:word32] = 0x00000004
	Mem4887[sp_4791 - 0x00000008:word32] = r8_4812 + 138
	Mem4889[sp_4791 - 0x0000000C:word32] = r7_4813
	word32 r3_4899
	call Mem4889[sp_4791 + 0x0000002C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4864,fp:fp_4870,r0:r0_4868,r1:r1_4876,r10:r10_4873,r11:r11_4877,r2:r2_4865,r3:r3_4869,r4:r4_4871,r5:r5_4866,r6:r6_4867,r7:r7_4875,r8:r8_4874,r9:r9_4872,sp:sp_4863 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4894,fp:fp_4900,r0:r0_4898,r1:r1_4906,r10:r10_4903,r11:r11_4907,r2:r2_4895,r3:r3_4899,r4:r4_4901,r5:r5_4896,r6:r6_4897,r7:r7_4905,r8:r8_4904,r9:r9_4902,sp:sp_4893
	branch r0_4801 != 0x00000000 l00014268
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014268:
	Mem4914[sp_4791 - 0x00000004:word32] = 0x00000004
	Mem4917[sp_4791 - 0x00000008:word32] = r8_4812 + 150
	Mem4919[sp_4791 - 0x0000000C:word32] = r7_4813
	word32 r3_4929
	call Mem4919[sp_4791 + 0x0000002C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4894,fp:fp_4900,r0:r0_4898,r1:r1_4906,r10:r10_4903,r11:r11_4907,r2:r2_4895,r3:r3_4899,r4:r4_4901,r5:r5_4896,r6:r6_4897,r7:r7_4905,r8:r8_4904,r9:r9_4902,sp:sp_4893 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4924,fp:fp_4930,r0:r0_4928,r1:r1_4936,r10:r10_4933,r11:r11_4937,r2:r2_4925,r3:r3_4929,r4:r4_4931,r5:r5_4926,r6:r6_4927,r7:r7_4935,r8:r8_4934,r9:r9_4932,sp:sp_4923
	branch r0_4801 != 0x00000000 l00014280
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014280:
	Mem4944[sp_4791 - 0x00000004:word32] = 0x00000004
	Mem4947[sp_4791 - 0x00000008:word32] = r8_4812 + 162
	Mem4949[sp_4791 - 0x0000000C:word32] = r7_4813
	word32 r3_4959
	call Mem4949[sp_4791 + 0x0000002C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4924,fp:fp_4930,r0:r0_4928,r1:r1_4936,r10:r10_4933,r11:r11_4937,r2:r2_4925,r3:r3_4929,r4:r4_4931,r5:r5_4926,r6:r6_4927,r7:r7_4935,r8:r8_4934,r9:r9_4932,sp:sp_4923 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4954,fp:fp_4960,r0:r0_4958,r1:r1_4966,r10:r10_4963,r11:r11_4967,r2:r2_4955,r3:r3_4959,r4:r4_4961,r5:r5_4956,r6:r6_4957,r7:r7_4965,r8:r8_4964,r9:r9_4962,sp:sp_4953
	branch r0_4801 != 0x00000000 l00014298
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014298:
	Mem4974[sp_4791 - 0x00000004:word32] = 0x00000004
	Mem4977[sp_4791 - 0x00000008:word32] = r8_4812 + 174
	Mem4979[sp_4791 - 0x0000000C:word32] = r7_4813
	word32 r3_4989
	call Mem4979[sp_4791 + 0x0000002C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4954,fp:fp_4960,r0:r0_4958,r1:r1_4966,r10:r10_4963,r11:r11_4967,r2:r2_4955,r3:r3_4959,r4:r4_4961,r5:r5_4956,r6:r6_4957,r7:r7_4965,r8:r8_4964,r9:r9_4962,sp:sp_4953 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_4984,fp:fp_4990,r0:r0_4988,r1:r1_4996,r10:r10_4993,r11:r11_4997,r2:r2_4985,r3:r3_4989,r4:r4_4991,r5:r5_4986,r6:r6_4987,r7:r7_4995,r8:r8_4994,r9:r9_4992,sp:sp_4983
	branch r0_4801 != 0x00000000 l000142B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000142B0:
	Mem5004[sp_4791 - 0x00000004:word32] = 0x00000004
	Mem5007[sp_4791 - 0x00000008:word32] = r8_4812 + 186
	Mem5009[sp_4791 - 0x0000000C:word32] = r7_4813
	call Mem5009[sp_4791 + 0x0000002C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4984,fp:fp_4990,r0:r0_4988,r1:r1_4996,r10:r10_4993,r11:r11_4997,r2:r2_4985,r3:r3_4989,r4:r4_4991,r5:r5_4986,r6:r6_4987,r7:r7_4995,r8:r8_4994,r9:r9_4992,sp:sp_4983 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5014,fp:fp_5020,r0:r0_5018,r1:r1_5026,r10:r10_5023,r11:r11_5027,r2:r2_5015,r4:r4_5021,r5:r5_5016,r6:r6_5017,r7:r7_5025,r8:r8_5024,r9:r9_5022,sp:sp_5013
	branch r0_4801 != 0x00000000 l000142F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000142F0:
	r3_5033 = r8_4812 + 199
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000142C0:
	r3_5033 = r8_4812 + 191
	branch r10_4811 <u 0x00000010 l000142F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000142CA:
	Mem5042[fp_4805 + -74:byte] = 0x20
	Mem5044[fp_4805 + -73:byte] = 0x28
	Mem5046[sp_4791 - 0x00000004:word32] = 0x00000004
	Mem5049[sp_4791 - 0x00000008:word32] = r7_4813 + 0x0000000C
	Mem5053[sp_4791 - 0x0000000C:word32] = fp_4805 + 0xFFFFFFB8
	call Mem5053[0x000192C0:word32] + 2 (retsize: 4;)
		uses: ap:ap_5014,fp:fp_5020,r0:r0_5018,r1:r1_5026,r10:r10_5023,r11:r11_5027,r2:fp_5020 + -74,r3:r8_5024 + 191,r4:r4_5021,r5:r5_5016,r6:r6_5017,r7:r7_5025,r8:r8_5024,r9:r9_5022,sp:sp_5013 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5056,fp:fp_5062,r0:r0_5060,r1:r1_5068,r10:r10_5065,r11:r11_5069,r2:r2_5057,r3:r3_5061,r4:r4_5063,r5:r5_5058,r6:r6_5059,r7:r7_5067,r8:r8_5066,r9:r9_5064,sp:sp_5055
	Mem5072[fp_4805 + -68:byte] = 0x29
	Mem5074[fp_4805 + -67:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000142A8:
	r3_5033 = r8_4812 + 179
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014290:
	r3_5033 = r8_4812 + 167
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014278:
	r3_5033 = r8_4812 + 155
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014260:
	r3_5033 = r8_4812 + 143
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014247:
	r3_5033 = r8_4812 + 131
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001422F:
	r3_5033 = r8_4812 + 119
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014218:
	r3_5033 = r8_4812 + 110
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000142F5:
	word32 sp_5108 = sp_4791 - 0x00000004
	Mem5109[sp_5108:word32] = 0x00000000
	Mem5113[sp_5108 - 0x00000004:word32] = fp_4805 + -74
	Mem5116[sp_5108 - 0x00000008:word32] = r3_5033
	Mem5120[sp_5108 - 0x0000000C:word32] = r7_4813 + 0x00000006
	word32 sp_5122
	word32 ap_5124
	word32 r2_5126
	word32 r5_5128
	word32 r6_5130
	word32 r0_5132
	word32 r3_5133
	word32 fp_5134
	word32 r4_5136
	word32 r9_5138
	word32 r10_5140
	word32 r8_5142
	word32 r7_5143
	word32 r1_5145
	word32 r11_5147
	call Mem5120[sp_5108 + 0x00000024:word32] + 2 (retsize: 4;)
		uses: ap:ap_5123,fp:fp_5111,r0:r0_5131,r1:r1_5144,r10:r10_5139,r11:r11_5146,r2:r2_5125,r3:r3_5115,r4:r4_5135,r5:r5_5127,r6:r6_5129,r7:r7_5118,r8:r8_5141,r9:r9_5137,sp:sp_5108 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5124,fp:fp_5134,r0:r0_5132,r1:r1_5145,r10:r10_5140,r11:r11_5147,r2:r2_5126,r3:r3_5133,r4:r4_5136,r5:r5_5128,r6:r6_5130,r7:r7_5143,r8:r8_5142,r9:r9_5138,sp:sp_5122
	Mem5151[sp_5122 - 0x00000004:uint32] = (uint32) (word16) r0_5132
	Mem5154[sp_5122 - 0x00000008:word32] = Mem5151[r6_5130 + 4164 + r4_5136 * 4:word32]
	Mem5157[sp_5122 - 0x0000000C:word32] = r6_5130 + 4043
	Mem5160[sp_5122 - 0x00000010:word32] = r5_5128 + 1515
	word32 sp_5164
	word32 ap_5165
	word32 r5_5167
	word32 r6_5168
	word32 r0_5169
	word32 r3_5170
	word32 fp_5171
	word32 r4_5172
	word32 r9_5173
	word32 r10_5174
	word32 r8_5175
	word32 r7_5176
	word32 r1_5177
	word32 r11_5178
	call r9_5138 + 2 (retsize: 4;)
		uses: ap:ap_5124,fp:fp_5134,r0:r0_5132,r1:r1_5145,r10:r10_5140,r11:r11_5147,r2:r2_5126,r3:r3_5133,r4:r4_5136,r5:r5_5128,r6:r6_5130,r7:r7_5143,r8:r8_5142,r9:r9_5138,sp:sp_5122 - 0x00000010,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5165,fp:fp_5171,r0:r0_5169,r1:r1_5177,r10:r10_5174,r11:r11_5178,r3:r3_5170,r4:r4_5172,r5:r5_5167,r6:r6_5168,r7:r7_5176,r8:r8_5175,r9:r9_5173,sp:sp_5164
	Mem5181[sp_5164 - 0x00000004:word32] = r0_5169
	Mem5184[sp_5164 - 0x00000008:word32] = r5_5167 + 1515
	Mem5186[sp_5164 - 0x0000000C:word32] = r5_5167
	word32 r2_5187 = Mem5186[r5_5167 + 0x0000C839:word32]
	call r2_5187 + 2 (retsize: 4;)
		uses: ap:ap_5165,fp:fp_5171,r0:r0_5169,r1:r1_5177,r10:r10_5174,r11:r11_5178,r2:r2_5187,r3:r3_5170,r4:r4_5172,r5:r5_5167,r6:r6_5168,r7:r7_5176,r8:r8_5175,r9:r9_5173,sp:sp_5164 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5192,fp:fp_5198,r0:r0_5196,r1:r1_5204,r10:r10_5201,r11:r11_5205,r3:r3_5197,r4:r4_5199,r5:r5_5194,r6:r6_5195,r7:r7_5203,r8:r8_5202,r9:r9_5200,sp:sp_5191
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000141E5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001410A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140FC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140F0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014588:
	r0_4160 = (uint32) Mem4150[sp_4155 + 40:word16]
	branch r0_4160 <u 0x00000013 l000145DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014591:
	word32 r2_5211 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014594:
	word32 sp_5219 = sp_4155 - 0x00000004
	Mem5223[sp_5219:uint32] = (uint32) Mem5221[r7_4167 + (0x0000000F - r2_5211):byte]
	Mem5227[sp_5219 - 0x00000004:word32] = r8_4166 + 217
	word32 r0_5228 = r2_5211 << 1
	Mem5232[sp_5219 - 0x00000008:word32] = fp_4162 + -188 + r0_5228 * 4
	word32 r2_5240
	word32 r0_5245
	call r9_4164 + 2 (retsize: 4;)
		uses: ap:ap_5238,fp:fp_5230,r0:r0_5228,r1:r1_5256,r10:r10_5252,r11:r11_5258,r2:r2_5216,r3:r3_5246,r4:r4_5249,r5:r5_5241,r6:r6_5243,r7:r7_5220,r8:r8_5225,r9:r9_5236,sp:sp_5219 - 0x00000008,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5239,fp:fp_5248,r0:r0_5245,r1:r1_5257,r10:r10_5253,r11:r11_5259,r2:r2_5240,r3:r3_5247,r4:r4_5250,r5:r5_5242,r6:r6_5244,r7:r7_5255,r8:r8_5254,r9:r9_5251,sp:sp_5237
	r2_5211 = r2_5240 + 0x00000001
	branch r2_5240 <= 0xFFFFFFF2 l00014594
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000145B0:
	Mem5264[fp_4162 + -156:byte] = 0x00
	Mem5266[sp_4155 - 0x00000004:word32] = 0x00000000
	Mem5269[sp_4155 - 0x00000008:word32] = fp_4162 + -188
	Mem5272[sp_4155 - 0x0000000C:word32] = r6_4159 + 4687
	Mem5275[sp_4155 - 0x00000010:word32] = r5_4158 + 1515
	word32 sp_5279
	word32 ap_5280
	word32 r5_5282
	word32 r6_5283
	word32 r0_5284
	word32 r3_5285
	word32 fp_5286
	word32 r4_5287
	word32 r9_5288
	word32 r10_5289
	word32 r8_5290
	word32 r7_5291
	word32 r1_5292
	word32 r11_5293
	call r9_4164 + 2 (retsize: 4;)
		uses: ap:ap_5239,fp:fp_5248,r0:r0_5245,r1:r1_5257,r10:r10_5253,r11:r11_5259,r2:r2_5240 + 0x00000001,r3:r3_5247,r4:r4_5250,r5:r5_5242,r6:r6_5244,r7:r7_5255,r8:r8_5254,r9:r9_5251,sp:sp_5237 - 0x00000010,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5280,fp:fp_5286,r0:r0_5284,r1:r1_5292,r10:r10_5289,r11:r11_5293,r3:r3_5285,r4:r4_5287,r5:r5_5282,r6:r6_5283,r7:r7_5291,r8:r8_5290,r9:r9_5288,sp:sp_5279
	Mem5296[sp_5279 - 0x00000004:word32] = r0_5284
	Mem5299[sp_5279 - 0x00000008:word32] = r5_5282 + 1515
	Mem5301[sp_5279 - 0x0000000C:word32] = r5_5282
	word32 r2_5302 = Mem5301[r5_5282 + 0x0000C839:word32]
	call r2_5302 + 2 (retsize: 4;)
		uses: ap:ap_5280,fp:fp_5286,r0:r0_5284,r1:r1_5292,r10:r10_5289,r11:r11_5293,r2:r2_5302,r3:r3_5285,r4:r4_5287,r5:r5_5282,r6:r6_5283,r7:r7_5291,r8:r8_5290,r9:r9_5288,sp:sp_5279 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5307,fp:fp_5313,r0:r0_5311,r1:r1_5319,r10:r10_5316,r11:r11_5320,r3:r3_5312,r4:r4_5314,r5:r5_5309,r6:r6_5310,r7:r7_5318,r8:r8_5317,r9:r9_5315,sp:sp_5306
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140EB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140DF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000141A0:
	r0_4160 = (uint32) Mem4150[sp_4155 + 40:word16]
	branch r0_4160 >=u 0x00000004 l000141AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000141AC:
	Mem5327[sp_4155 - 0x00000004:word32] = 0x00000000
	Mem5329[sp_4155 - 0x00000008:word32] = r7_4167
	word32 sp_5333
	word32 ap_5334
	word32 r2_5335
	word32 r5_5336
	word32 r6_5337
	word32 r0_5338
	word32 r3_5339
	word32 fp_5340
	word32 r4_5341
	word32 r9_5342
	word32 r10_5343
	word32 r8_5344
	word32 r7_5345
	word32 r1_5346
	word32 r11_5347
	call Mem5329[sp_4155 + 0x0000001C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4156,fp:fp_4162,r0:r0_5322,r1:r1_4168,r10:r10_4165,r11:r11_4169,r2:r4_4163,r3:r3_4161,r4:r4_4163,r5:r5_4158,r6:r6_4159,r7:r7_4167,r8:r8_4166,r9:r9_4164,sp:sp_4155 - 0x00000008,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5334,fp:fp_5340,r0:r0_5338,r1:r1_5346,r10:r10_5343,r11:r11_5347,r2:r2_5335,r3:r3_5339,r4:r4_5341,r5:r5_5336,r6:r6_5337,r7:r7_5345,r8:r8_5344,r9:r9_5342,sp:sp_5333
	Mem5350[sp_5333 - 0x00000004:word32] = r0_5338
	Mem5353[sp_5333 - 0x00000008:word32] = r6_5337 + 4257
	Mem5356[sp_5333 - 0x0000000C:word32] = r5_5336 + 1515
	word32 sp_5360
	word32 ap_5361
	word32 r5_5363
	word32 r6_5364
	word32 r0_5365
	word32 r3_5366
	word32 fp_5367
	word32 r4_5368
	word32 r9_5369
	word32 r10_5370
	word32 r8_5371
	word32 r7_5372
	word32 r1_5373
	word32 r11_5374
	call r9_5342 + 2 (retsize: 4;)
		uses: ap:ap_5334,fp:fp_5340,r0:r0_5338,r1:r1_5346,r10:r10_5343,r11:r11_5347,r2:r2_5335,r3:r3_5339,r4:r4_5341,r5:r5_5336,r6:r6_5337,r7:r7_5345,r8:r8_5344,r9:r9_5342,sp:sp_5333 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5361,fp:fp_5367,r0:r0_5365,r1:r1_5373,r10:r10_5370,r11:r11_5374,r3:r3_5366,r4:r4_5368,r5:r5_5363,r6:r6_5364,r7:r7_5372,r8:r8_5371,r9:r9_5369,sp:sp_5360
	Mem5377[sp_5360 - 0x00000004:word32] = r0_5365
	Mem5380[sp_5360 - 0x00000008:word32] = r5_5363 + 1515
	Mem5382[sp_5360 - 0x0000000C:word32] = r5_5363
	word32 r2_5383 = Mem5382[r5_5363 + 0x0000C839:word32]
	call r2_5383 + 2 (retsize: 4;)
		uses: ap:ap_5361,fp:fp_5367,r0:r0_5365,r1:r1_5373,r10:r10_5370,r11:r11_5374,r2:r2_5383,r3:r3_5366,r4:r4_5368,r5:r5_5363,r6:r6_5364,r7:r7_5372,r8:r8_5371,r9:r9_5369,sp:sp_5360 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5388,fp:fp_5394,r0:r0_5392,r1:r1_5400,r10:r10_5397,r11:r11_5401,r3:r3_5393,r4:r4_5395,r5:r5_5390,r6:r6_5391,r7:r7_5399,r8:r8_5398,r9:r9_5396,sp:sp_5387
	Mem5404[Mem5382[ap_4156 + 4:word32]:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000141A9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140DA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140CE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014404:
	r3_4161 = (uint32) Mem4150[sp_4155 + 40:word16]
	branch r3_4161 >=u 0x00000005 l00014410
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014410:
	Mem5414[sp_4155 - 0x00000004:word32] = 0x00000004
	Mem5417[sp_4155 - 0x00000008:word32] = r8_4166 + 209
	Mem5419[sp_4155 - 0x0000000C:word32] = r7_4167
	call fn00000002 (retsize: 4;)
		uses: ap:ap_4156,fp:fp_4162,r0:r0_4160,r1:r1_4168,r10:r10_4165,r11:r11_4169,r2:r4_4163,r3:r3_5409,r4:r4_4163,r5:r5_4158,r6:r6_4159,r7:r7_4167,r8:r8_4166,r9:r9_4164,sp:sp_4155 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5424,fp:fp_5430,r0:r0_5428,r1:r1_5436,r10:r10_5433,r11:r11_5437,r3:r3_5429,r4:r4_5431,r5:r5_5426,r6:r6_5427,r7:r7_5435,r8:r8_5434,r9:r9_5432,sp:sp_5423
	branch r0_4160 == 0x00000000 l00014423
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014423:
	r4_4163 = (uint32) Mem5419[r7_4167 + 4:byte]
	branch r3_4161 >=u r4_4163 + 0x0000000D l00014433
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014433:
	word32 r0_5449 = (uint32) Mem5419[r7_4167 + (r4_4163 + 0x00000005):byte]
	Mem5451[fp_4162 + -155:int8] = (int8) r0_5449
	Mem5453[r7_4167:byte] = 0x00
	Mem5455[sp_4155 - 0x00000004:word32] = 0x00000000
	Mem5459[sp_4155 - 0x00000008:uint32] = (uint32) Mem5455[r7_4167 + (r4_4163 + 0x0000000C):byte]
	Mem5463[sp_4155 - 0x0000000C:uint32] = (uint32) Mem5459[r7_4167 + (r4_4163 + 0x0000000B):byte]
	Mem5467[sp_4155 - 0x00000010:uint32] = (uint32) Mem5463[r7_4167 + (r4_4163 + 0x0000000A):byte]
	Mem5471[sp_4155 - 0x00000014:uint32] = (uint32) Mem5467[r7_4167 + (r4_4163 + 0x00000009):byte]
	Mem5475[sp_4155 - 0x00000018:uint32] = (uint32) Mem5471[r7_4167 + (r4_4163 + 0x00000008):byte]
	Mem5479[sp_4155 - 0x0000001C:uint32] = (uint32) Mem5475[r7_4167 + (r4_4163 + 0x00000007):byte]
	Mem5483[sp_4155 - 0x00000020:uint32] = (uint32) Mem5479[r7_4167 + (r4_4163 + 0x00000006):byte]
	Mem5486[sp_4155 - 0x00000024:int32] = (int32) Mem5483[fp_4162 + -155:int8]
	Mem5489[sp_4155 - 0x00000028:word32] = r7_4167 + 0x00000005
	Mem5492[sp_4155 - 0x0000002C:word32] = r6_4159 + 4409
	Mem5495[sp_4155 - 0x00000030:word32] = r5_4158 + 1515
	word32 sp_5499
	word32 ap_5500
	word32 r5_5502
	word32 r6_5503
	word32 r0_5504
	word32 r3_5505
	word32 fp_5506
	word32 r4_5507
	word32 r9_5508
	word32 r10_5509
	word32 r8_5510
	word32 r7_5511
	word32 r1_5512
	word32 r11_5513
	call r9_4164 + 2 (retsize: 4;)
		uses: ap:ap_5424,fp:fp_5430,r0:r0_5449,r1:r1_5436,r10:r10_5433,r11:r11_5437,r2:r4_5443 + 0x00000007,r3:r4_5443 + 0x00000005,r4:r4_5443 + 0x00000006,r5:r5_5426,r6:r6_5427,r7:r7_5435,r8:r8_5434,r9:r9_5432,sp:sp_5423 - 0x00000030,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5500,fp:fp_5506,r0:r0_5504,r1:r1_5512,r10:r10_5509,r11:r11_5513,r3:r3_5505,r4:r4_5507,r5:r5_5502,r6:r6_5503,r7:r7_5511,r8:r8_5510,r9:r9_5508,sp:sp_5499
	Mem5516[sp_5499 - 0x00000004:word32] = r0_5504
	Mem5519[sp_5499 - 0x00000008:word32] = r5_5502 + 1515
	Mem5521[sp_5499 - 0x0000000C:word32] = r5_5502
	word32 r2_5522 = Mem5521[r5_5502 + 0x0000C839:word32]
	call r2_5522 + 2 (retsize: 4;)
		uses: ap:ap_5500,fp:fp_5506,r0:r0_5504,r1:r1_5512,r10:r10_5509,r11:r11_5513,r2:r2_5522,r3:r3_5505,r4:r4_5507,r5:r5_5502,r6:r6_5503,r7:r7_5511,r8:r8_5510,r9:r9_5508,sp:sp_5499 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5527,fp:fp_5533,r0:r0_5531,r1:r1_5539,r10:r10_5536,r11:r11_5540,r3:r3_5532,r4:r4_5534,r5:r5_5529,r6:r6_5530,r7:r7_5538,r8:r8_5537,r9:r9_5535,sp:sp_5526
	Mem5543[r7_4167:byte] = Mem5521[fp_4162 + -155:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014430:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014420:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001440D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140C9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140BD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014154:
	r0_4160 = (uint32) Mem4150[sp_4155 + 40:word16]
	branch r0_4160 >=u 0x00000004 l00014160
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014160:
	word32 r3_5558
	word32 r0_5553 = (uint32) Mem4150[sp_4155 + 18:word16]
	branch r0_5553 != 0x00000009 l00014170
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014170:
	r3_5558 = r6_4159 + 4180
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014169:
	r3_5558 = r6_4159 + 3912
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014175:
	Mem5568[sp_4155 - 0x00000004:word32] = 0x00000000
	Mem5572[sp_4155 - 0x00000008:word32] = r7_4167
	word32 sp_5576
	word32 ap_5579
	word32 r2_5582
	word32 r5_5585
	word32 r6_5587
	word32 r0_5589
	word32 r3_5591
	word32 fp_5594
	word32 r4_5597
	word32 r9_5600
	word32 r10_5603
	word32 r8_5606
	word32 r7_5607
	word32 r1_5610
	word32 r11_5613
	call Mem5572[sp_4155 + 0x0000001C:word32] + 2 (retsize: 4;)
		uses: ap:ap_4156,fp:fp_4162,r0:r0_5553,r1:r1_4168,r10:r10_4165,r11:r11_4169,r2:r4_4163,r3:r3_5590,r4:r4_4163,r5:r5_4158,r6:r6_4159,r7:r7_4167,r8:r8_4166,r9:r9_4164,sp:sp_4155 - 0x00000008,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5579,fp:fp_5594,r0:r0_5589,r1:r1_5610,r10:r10_5603,r11:r11_5613,r2:r2_5582,r3:r3_5591,r4:r4_5597,r5:r5_5585,r6:r6_5587,r7:r7_5607,r8:r8_5606,r9:r9_5600,sp:sp_5576
	Mem5616[sp_5576 - 0x00000004:word32] = r0_5589
	Mem5618[sp_5576 - 0x00000008:word32] = r3_5591
	Mem5621[sp_5576 - 0x0000000C:word32] = r5_5585 + 1515
	word32 sp_5625
	word32 ap_5626
	word32 r5_5628
	word32 r6_5629
	word32 r0_5630
	word32 r3_5631
	word32 fp_5632
	word32 r4_5633
	word32 r9_5634
	word32 r10_5635
	word32 r8_5636
	word32 r7_5637
	word32 r1_5638
	word32 r11_5639
	call r9_5600 + 2 (retsize: 4;)
		uses: ap:ap_5579,fp:fp_5594,r0:r0_5589,r1:r1_5610,r10:r10_5603,r11:r11_5613,r2:r2_5582,r3:r3_5591,r4:r4_5597,r5:r5_5585,r6:r6_5587,r7:r7_5607,r8:r8_5606,r9:r9_5600,sp:sp_5576 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5626,fp:fp_5632,r0:r0_5630,r1:r1_5638,r10:r10_5635,r11:r11_5639,r3:r3_5631,r4:r4_5633,r5:r5_5628,r6:r6_5629,r7:r7_5637,r8:r8_5636,r9:r9_5634,sp:sp_5625
	Mem5642[sp_5625 - 0x00000004:word32] = r0_5630
	Mem5645[sp_5625 - 0x00000008:word32] = r5_5628 + 1515
	Mem5647[sp_5625 - 0x0000000C:word32] = r5_5628
	word32 r2_5648 = Mem5647[r5_5628 + 0x0000C839:word32]
	call r2_5648 + 2 (retsize: 4;)
		uses: ap:ap_5626,fp:fp_5632,r0:r0_5630,r1:r1_5638,r10:r10_5635,r11:r11_5639,r2:r2_5648,r3:r3_5631,r4:r4_5633,r5:r5_5628,r6:r6_5629,r7:r7_5637,r8:r8_5636,r9:r9_5634,sp:sp_5625 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5653,fp:fp_5659,r0:r0_5657,r1:r1_5665,r10:r10_5662,r11:r11_5666,r3:r3_5658,r4:r4_5660,r5:r5_5655,r6:r6_5656,r7:r7_5664,r8:r8_5663,r9:r9_5661,sp:sp_5652
	Mem5669[Mem5647[ap_4156 + 4:word32]:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001415D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000140B8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000145DC:
	word32 r2_5676 = (uint32) Mem4150[sp_4155 + 40:word16]
	branch r2_5676 != 0x00000000 l000145E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000145E5:
	word32 r2_5737
	word32 r11_5749
	branch r2_5676 >u 0x00000018 l00014610
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014610:
	Mem5685[sp_4155 - 0x00000004:word32] = 0x00000000
	Mem5689[sp_4155 - 0x00000008:word32] = r6_4159 + 4725
	Mem5693[sp_4155 - 0x0000000C:word32] = r5_4158 + 1515
	word32 sp_5698
	word32 ap_5700
	word32 r5_5702
	word32 r6_5703
	word32 r0_5705
	word32 r3_5707
	word32 fp_5709
	word32 r4_5711
	word32 r9_5712
	word32 r10_5714
	word32 r8_5716
	word32 r7_5718
	word32 r1_5720
	word32 r11_5722
	call r9_4164 + 2 (retsize: 4;)
		uses: ap:ap_4156,fp:fp_4162,r0:r0_5704,r1:r1_4168,r10:r10_4165,r11:r11_4169,r2:r2_5676,r3:r3_4161,r4:r4_4163,r5:r5_4158,r6:r6_4159,r7:r7_4167,r8:r8_4166,r9:r9_4164,sp:sp_4155 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5700,fp:fp_5709,r0:r0_5705,r1:r1_5720,r10:r10_5714,r11:r11_5722,r3:r3_5707,r4:r4_5711,r5:r5_5702,r6:r6_5703,r7:r7_5718,r8:r8_5716,r9:r9_5712,sp:sp_5698
	Mem5725[sp_5698 - 0x00000004:word32] = r0_5705
	Mem5728[sp_5698 - 0x00000008:word32] = r5_5702 + 1515
	Mem5730[sp_5698 - 0x0000000C:word32] = r5_5702
	word32 r2_5731 = Mem5730[r5_5702 + 0x0000C839:word32]
	call r2_5731 + 2 (retsize: 4;)
		uses: ap:ap_5700,fp:fp_5709,r0:r0_5705,r1:r1_5720,r10:r10_5714,r11:r11_5722,r2:r2_5731,r3:r3_5707,r4:r4_5711,r5:r5_5702,r6:r6_5703,r7:r7_5718,r8:r8_5716,r9:r9_5712,sp:sp_5698 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5736,fp:fp_5742,r0:r0_5740,r1:r1_5748,r10:r10_5745,r11:r11_5749,r2:r2_5737,r3:r3_5741,r4:r4_5743,r5:r5_5738,r6:r6_5739,r7:r7_5747,r8:r8_5746,r9:r9_5744,sp:sp_5735
	Mem5752[sp_4155 + 38:word16] = 0x0014
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000145EA:
	Mem5757[sp_4155 - 0x00000004:word32] = 0x00000000
	Mem5760[sp_4155 - 0x00000008:word32] = r6_4159 + 4752
	Mem5763[sp_4155 - 0x0000000C:word32] = r5_4158 + 1515
	word32 sp_5767
	word32 ap_5768
	word32 r5_5770
	word32 r6_5771
	word32 r0_5772
	word32 r3_5773
	word32 fp_5774
	word32 r4_5775
	word32 r9_5776
	word32 r10_5777
	word32 r8_5778
	word32 r7_5779
	word32 r1_5780
	word32 r11_5781
	call r9_4164 + 2 (retsize: 4;)
		uses: ap:ap_4156,fp:fp_4162,r0:r0_5704,r1:r1_4168,r10:r10_4165,r11:r11_4169,r2:r2_5676,r3:r3_4161,r4:r4_4163,r5:r5_4158,r6:r6_4159,r7:r7_4167,r8:r8_4166,r9:r9_4164,sp:sp_4155 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5768,fp:fp_5774,r0:r0_5772,r1:r1_5780,r10:r10_5777,r11:r11_5781,r3:r3_5773,r4:r4_5775,r5:r5_5770,r6:r6_5771,r7:r7_5779,r8:r8_5778,r9:r9_5776,sp:sp_5767
	Mem5784[sp_5767 - 0x00000004:word32] = r0_5772
	Mem5787[sp_5767 - 0x00000008:word32] = r5_5770 + 1515
	Mem5789[sp_5767 - 0x0000000C:word32] = r5_5770
	word32 r2_5790 = Mem5789[r5_5770 + 0x0000C839:word32]
	call r2_5790 + 2 (retsize: 4;)
		uses: ap:ap_5768,fp:fp_5774,r0:r0_5772,r1:r1_5780,r10:r10_5777,r11:r11_5781,r2:r2_5790,r3:r3_5773,r4:r4_5775,r5:r5_5770,r6:r6_5771,r7:r7_5779,r8:r8_5778,r9:r9_5776,sp:sp_5767 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5795,fp:fp_5801,r0:r0_5799,r1:r1_5807,r10:r10_5804,r11:r11_5808,r2:r2_5796,r3:r3_5800,r4:r4_5802,r5:r5_5797,r6:r6_5798,r7:r7_5806,r8:r8_5805,r9:r9_5803,sp:sp_5794
	Mem5811[sp_4155 + 38:word16] = Mem5789[sp_4155 + 40:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014633:
	r11_4169 = SEQ(SLICE(r11_5749, word16, 16), 0x0000)
	branch Mem5820[sp_4155 + 38:word16] == 0x0000 l0001466A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001463A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001463C:
	word32 sp_5830 = sp_4155 - 0x00000004
	Mem5831[sp_5830:word32] = 0x00000000
	word32 r0_5833 = (uint32) (word16) r11_4169
	Mem5837[sp_5830 - 0x00000004:uint32] = (uint32) Mem5831[r7_4167 + r0_5833:byte]
	Mem5841[sp_5830 - 0x00000008:word32] = r6_4159 + 4758
	Mem5845[sp_5830 - 0x0000000C:word32] = r5_4158 + 1515
	word32 sp_5850
	word32 ap_5852
	word32 r2_5854
	word32 r5_5855
	word32 r6_5856
	word32 r0_5857
	word32 r3_5859
	word32 fp_5861
	word32 r4_5863
	word32 r9_5864
	word32 r10_5866
	word32 r8_5868
	word32 r7_5869
	word32 r1_5871
	word32 r11_5872
	call r9_4164 + 2 (retsize: 4;)
		uses: ap:ap_5851,fp:fp_5860,r0:r0_5833,r1:r1_5870,r10:r10_5865,r11:r11_5832,r2:r2_5853,r3:r3_5858,r4:r4_5862,r5:r5_5843,r6:r6_5839,r7:r7_5835,r8:r8_5867,r9:r9_5849,sp:sp_5830 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5852,fp:fp_5861,r0:r0_5857,r1:r1_5871,r10:r10_5866,r11:r11_5872,r2:r2_5854,r3:r3_5859,r4:r4_5863,r5:r5_5855,r6:r6_5856,r7:r7_5869,r8:r8_5868,r9:r9_5864,sp:sp_5850
	Mem5875[sp_5850 - 0x00000004:word32] = r0_5857
	Mem5878[sp_5850 - 0x00000008:word32] = r5_5855 + 1515
	Mem5880[sp_5850 - 0x0000000C:word32] = r5_5855
	word32 r0_5881 = Mem5880[r5_5855 + 0x0000C839:word32]
	word32 r11_5899
	call r0_5881 + 2 (retsize: 4;)
		uses: ap:ap_5852,fp:fp_5861,r0:r0_5881,r1:r1_5871,r10:r10_5866,r11:r11_5872,r2:r2_5854,r3:r3_5859,r4:r4_5863,r5:r5_5855,r6:r6_5856,r7:r7_5869,r8:r8_5868,r9:r9_5864,sp:sp_5850 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5886,fp:fp_5892,r0:r0_5890,r1:r1_5898,r10:r10_5895,r11:r11_5899,r2:r2_5887,r3:r3_5891,r4:r4_5893,r5:r5_5888,r6:r6_5889,r7:r7_5897,r8:r8_5896,r9:r9_5894,sp:sp_5885
	r11_4169 = SEQ(SLICE(r11_5899, word16, 16), (word16) r11_5899 + 0x0001)
	branch (word16) r11_4169 <u Mem5880[sp_4155 + 38:word16] l0001463C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000145E2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001466A:
	word32 sp_5908 = sp_4155 - 0x00000004
	Mem5909[sp_5908:word32] = 0x00000000
	Mem5911[sp_5908 - 0x00000004:word32] = 0x00000001
	Mem5916[sp_5908 - 0x00000008:word32] = r8_4166 + 222
	Mem5920[sp_5908 - 0x0000000C:word32] = r5_4158
	word32 r2_5921 = Mem5920[r5_4158 + 0x0000C839:word32]
	word32 r7_5956
	call r2_5921 + 2 (retsize: 4;)
		uses: ap:ap_5926,fp:fp_5941,r0:r0_5934,r1:r1_5957,r10:r10_5950,r11:r11_5960,r2:r2_5921,r3:r3_5936,r4:r4_5944,r5:r5_5918,r6:r6_5931,r7:r7_5954,r8:r8_5913,r9:r9_5947,sp:sp_5908 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5928,fp:fp_5943,r1:r1_5959,r10:r10_5952,r11:r11_5961,r3:r3_5940,r4:r4_5946,r5:r5_5930,r6:r6_5933,r7:r7_5956,r8:r8_5953,r9:r9_5949,sp:sp_5925
	word32 r0_5963 = (uint32) Mem5920[sp_3899 + 40:word16]
	r2_3915 = (uint32) Mem5920[sp_3899 + 42:word16]
	word32 r0_5966 = r2_3915 - r0_5963
	Mem5968[sp_3899 + 42:int16] = (int16) r0_5966
	r7_3911 = r7_5956 + r0_5963
	r0_3904 = (uint32) (word16) r0_5966
	branch r0_3904 <u 0x00000004 l0001469C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014699:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013DF0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001469C:
	word32 sp_5974 = sp_3899 - 0x00000004
	Mem5975[sp_5974:word32] = 0x00000000
	Mem5977[sp_5974 - 0x00000004:word32] = 0x00000001
	Mem5981[sp_5974 - 0x00000008:word32] = r8_3910 + 224
	Mem5984[sp_5974 - 0x0000000C:word32] = r5_3902
	word32 r2_5985 = Mem5984[r5_3902 + 0x0000C839:word32]
	call r2_5985 + 2 (retsize: 4;)
		uses: ap:ap_5990,fp:fp_6000,r0:r0_5996,r1:r1_6011,r10:r10_6006,r11:r11_6013,r2:r2_5985,r3:r3_5998,r4:r4_6002,r5:r5_5983,r6:r6_5994,r7:r7_6009,r8:r8_5979,r9:r9_6004,sp:sp_5974 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_5991,fp:fp_6001,r0:r0_5997,r1:r1_6012,r10:r10_6007,r11:r11_6014,r3:r3_5999,r4:r4_6003,r5:r5_5993,r6:r6_5995,r7:r7_6010,r8:r8_6008,sp:sp_5989
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013DC0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013DB3:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00013D9B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146B0:
	word32 r2_6033 = (uint32) SLICE(Mem6031[r5_3703 + 0x0000C67A:word32] & ~0xFFFF3FFF, ui20, 12)
	Mem6036[sp_3700 + 14:int16] = (int16) r2_6033
	word32 r9_6037 = (uint32) (word16) r2_6033
	branch (r9_6037 & 0x00000008) != 0x00000000 l000146CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146CF:
	r7_3712 = (uint32) Mem6036[sp_3700 + 2:word16]
	branch r7_3712 == 0x00000003 l000146E2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146D8:
	branch r7_3712 == 0x00000006 l000146E2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146DD:
	branch r7_3712 != 0x0000000B l00014738
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014738:
	branch r7_3712 != 0x00000000 l00014776
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001473C:
	branch (r9_6037 & 0x00000004) != 0x00000000 l00014776
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014740:
	word32 sp_6055 = sp_3700 - 0x00000004
	Mem6056[sp_6055:word32] = 0x00000000
	Mem6060[sp_6055 - 0x00000004:word32] = r6_3704 + 4890
	Mem6062[sp_6055 - 0x00000008:word32] = 0x00000008
	Mem6065[sp_6055 - 0x0000000C:word32] = r6_3704 + 3712
	Mem6068[sp_6055 - 0x00000010:uint32] = 0x00005855
	Mem6072[sp_6055 - 0x00000014:word32] = r8_3711 + 229
	Mem6075[sp_6055 - 0x00000018:word32] = r6_3704 + 4764
	Mem6078[sp_6055 - 0x0000001C:word32] = r5_3703 + 1515
	word32 sp_6082
	word32 ap_6084
	word32 r5_6086
	word32 r6_6087
	word32 r0_6089
	word32 r3_6091
	word32 fp_6093
	word32 r4_6095
	word32 r9_6096
	word32 r10_6098
	word32 r8_6099
	word32 r7_6100
	word32 r1_6102
	word32 r11_6104
	call Mem6078[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_6083,fp:fp_6092,r0:r0_6088,r1:r1_6101,r10:r10_6097,r11:r11_6103,r2:r2_6033,r3:r3_6090,r4:r4_6094,r5:r5_6030,r6:r6_6058,r7:r7_6041,r8:r8_6070,r9:r9_6037,sp:sp_6055 - 0x0000001C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_6084,fp:fp_6093,r0:r0_6089,r1:r1_6102,r10:r10_6098,r11:r11_6104,r3:r3_6091,r4:r4_6095,r5:r5_6086,r6:r6_6087,r7:r7_6100,r8:r8_6099,r9:r9_6096,sp:sp_6082
	Mem6107[sp_6082 - 0x00000004:word32] = r0_6089
	Mem6110[sp_6082 - 0x00000008:word32] = r5_6086 + 1515
	Mem6112[sp_6082 - 0x0000000C:word32] = r5_6086
	word32 r2_6113 = Mem6112[r5_6086 + 0x0000C839:word32]
	call r2_6113 + 2 (retsize: 4;)
		uses: ap:ap_6084,fp:fp_6093,r0:r0_6089,r1:r1_6102,r10:r10_6098,r11:r11_6104,r2:r2_6113,r3:r3_6091,r4:r4_6095,r5:r5_6086,r6:r6_6087,r7:r7_6100,r8:r8_6099,r9:r9_6096,sp:sp_6082 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_6118,fp:fp_6124,r0:r0_6122,r1:r1_6130,r10:r10_6127,r11:r11_6131,r2:r2_6119,r3:r3_6123,r4:r4_6125,r5:r5_6120,r6:r6_6121,r7:r7_6129,r8:r8_6128,r9:r9_6126,sp:sp_6117
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146E2:
	word32 r4_6141
	word32 sp_6134 = sp_3700 - 0x00000004
	Mem6135[sp_6134:word32] = 0x00000000
	word32 r3_6136 = (uint32) Mem6135[sp_6134 + 18:word16]
	branch (r3_6136 & 0x00000004) == 0x00000000 l000146F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146F4:
	r4_6141 = r6_3704 + 4890
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146EC:
	r4_6141 = r6_3704 + 4843
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146F9:
	Mem6152[sp_6134 - 0x00000004:word32] = r4_6141
	word32 r3_6154 = r3_6136 & ~0xFFFFFFF3
	Mem6156[sp_6134 - 0x00000008:word32] = r3_6154
	Mem6160[sp_6134 - 0x0000000C:word32] = r6_3704 + 3712
	Mem6163[sp_6134 - 0x00000010:uint32] = 0x00005855
	Mem6168[sp_6134 - 0x00000014:word32] = r8_3711 + 226
	Mem6171[sp_6134 - 0x00000018:word32] = r6_3704 + 4764
	Mem6176[sp_6134 - 0x0000001C:word32] = r5_3703 + 1515
	word32 sp_6180
	word32 ap_6183
	word32 r5_6187
	word32 r6_6188
	word32 r0_6191
	word32 r3_6192
	word32 fp_6195
	word32 r4_6196
	word32 r9_6199
	word32 r10_6202
	word32 r8_6203
	word32 r7_6206
	word32 r1_6209
	word32 r11_6212
	call Mem6176[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_6083,fp:fp_6092,r0:r0_6088,r1:r1_6101,r10:r10_6097,r11:r11_6103,r2:r2_6033,r3:r3_6154,r4:r4_6151,r5:r5_6030,r6:r6_6058,r7:r7_6041,r8:r8_6070,r9:r9_6037,sp:sp_6134 - 0x0000001C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_6183,fp:fp_6195,r0:r0_6191,r1:r1_6209,r10:r10_6202,r11:r11_6212,r3:r3_6192,r4:r4_6196,r5:r5_6187,r6:r6_6188,r7:r7_6206,r8:r8_6203,r9:r9_6199,sp:sp_6180
	Mem6215[sp_6180 - 0x00000004:word32] = r0_6191
	Mem6218[sp_6180 - 0x00000008:word32] = r5_6187 + 1515
	Mem6220[sp_6180 - 0x0000000C:word32] = r5_6187
	word32 r2_6221 = Mem6220[r5_6187 + 0x0000C839:word32]
	call r2_6221 + 2 (retsize: 4;)
		uses: ap:ap_6183,fp:fp_6195,r0:r0_6191,r1:r1_6209,r10:r10_6202,r11:r11_6212,r2:r2_6221,r3:r3_6192,r4:r4_6196,r5:r5_6187,r6:r6_6188,r7:r7_6206,r8:r8_6203,r9:r9_6199,sp:sp_6180 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_6226,fp:fp_6232,r0:r0_6230,r1:r1_6238,r10:r10_6235,r11:r11_6239,r2:r2_6227,r3:r3_6231,r4:r4_6233,r5:r5_6228,r6:r6_6229,r7:r7_6237,r8:r8_6236,r9:r9_6234,sp:sp_6225
	Mem6242[Mem6220[ap_3701 + 4:word32]:word32] = Mem6220[ap_3701 + 4:word32] + r3_3706
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000146CC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014776:
	branch Mem6245[r5_3703 + 0x0000C674:word16] != 0x0000 l000147A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000147A4:
	word32 sp_6251 = sp_3700 - 0x00000004
	Mem6252[sp_6251:word32] = 0x00000000
	Mem6256[sp_6251 - 0x00000004:word32] = r6_3704 + 4955
	Mem6259[sp_6251 - 0x00000008:word32] = r5_3703 + 1515
	word32 sp_6263
	word32 ap_6265
	word32 r5_6268
	word32 r6_6269
	word32 r0_6271
	word32 r3_6273
	word32 fp_6275
	word32 r4_6277
	word32 r9_6279
	word32 r10_6281
	word32 r8_6283
	word32 r7_6287
	word32 r1_6289
	word32 r11_6291
	call Mem6259[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_6264,fp:fp_6274,r0:r0_6270,r1:r1_6288,r10:r10_6280,r11:r11_6290,r2:r2_6266,r3:r3_6272,r4:r4_6276,r5:r5_6244,r6:r6_6254,r7:r7_6284,r8:r8_6282,r9:r9_6278,sp:sp_6251 - 0x00000008,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_6265,fp:fp_6275,r0:r0_6271,r1:r1_6289,r10:r10_6281,r11:r11_6291,r3:r3_6273,r4:r4_6277,r5:r5_6268,r6:r6_6269,r7:r7_6287,r8:r8_6283,r9:r9_6279,sp:sp_6263
	Mem6294[sp_6263 - 0x00000004:word32] = r0_6271
	Mem6297[sp_6263 - 0x00000008:word32] = r5_6268 + 1515
	Mem6299[sp_6263 - 0x0000000C:word32] = r5_6268
	word32 r2_6300 = Mem6299[r5_6268 + 0x0000C839:word32]
	word32 sp_6304
	word32 ap_6305
	word32 r2_6306
	word32 r5_6307
	word32 r6_6308
	word32 r3_6310
	word32 fp_6311
	word32 r4_6312
	word32 r9_6313
	word32 r10_6314
	word32 r8_6315
	word32 r7_6316
	word32 r1_6317
	call r2_6300 + 2 (retsize: 4;)
		uses: ap:ap_6265,fp:fp_6275,r0:r0_6271,r1:r1_6289,r10:r10_6281,r11:r11_6291,r2:r2_6300,r3:r3_6273,r4:r4_6277,r5:r5_6268,r6:r6_6269,r7:r7_6287,r8:r8_6283,r9:r9_6279,sp:sp_6263 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_6305,fp:fp_6311,r1:r1_6317,r10:r10_6314,r2:r2_6306,r3:r3_6310,r4:r4_6312,r5:r5_6307,r6:r6_6308,r7:r7_6316,r8:r8_6315,r9:r9_6313,sp:sp_6304
	Mem6321[sp_6304 - 0x00000004:word32] = 0x00000005
	Mem6324[sp_6304 - 0x00000008:uint32] = (uint32) Mem6321[r5_6307 + 0x0000C674:word16]
	word32 ap_6328
	word32 fp_6329
	word32 r11_6331
	word32 sp_6332
	word32 r0_6330 = fn0000DC76(ap_6305, fp_6311, out r11_6331, out ap_6328, out fp_6329, out sp_6332)
	branch r0_6330 == 0x00000000 l000147E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000147DB:
	Mem6342[sp_6332 + 8:word32] = r0_6330
	branch r0_6330 <= 0x00000001 l000147E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000147E5:
	Mem6348[sp_6332 - 0x00000004:word32] = 0x00000000
	Mem6352[sp_6332 - 0x00000008:word32] = r6_6308 + 5032
	Mem6356[sp_6332 - 0x0000000C:word32] = r5_6307 + 1515
	word32 sp_6360
	word32 ap_6362
	word32 r5_6365
	word32 r6_6366
	word32 r0_6368
	word32 r3_6370
	word32 fp_6372
	word32 r4_6374
	word32 r9_6376
	word32 r10_6378
	word32 r8_6380
	word32 r7_6382
	word32 r1_6384
	word32 r11_6386
	call Mem6356[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_6328,fp:fp_6329,r0:r0_6330,r1:r1_6317,r10:r10_6314,r11:r11_6331,r2:r2_6306,r3:r3_6310,r4:r4_6312,r5:r5_6307,r6:r6_6308,r7:r7_6316,r8:r8_6315,r9:r9_6313,sp:sp_6332 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_6362,fp:fp_6372,r0:r0_6368,r1:r1_6384,r10:r10_6378,r11:r11_6386,r3:r3_6370,r4:r4_6374,r5:r5_6365,r6:r6_6366,r7:r7_6382,r8:r8_6380,r9:r9_6376,sp:sp_6360
	Mem6389[sp_6360 - 0x00000004:word32] = r0_6368
	Mem6392[sp_6360 - 0x00000008:word32] = r5_6365 + 1515
	Mem6394[sp_6360 - 0x0000000C:word32] = r5_6365
	word32 r2_6395 = Mem6394[r5_6365 + 0x0000C839:word32]
	call r2_6395 + 2 (retsize: 4;)
		uses: ap:ap_6362,fp:fp_6372,r0:r0_6368,r1:r1_6384,r10:r10_6378,r11:r11_6386,r2:r2_6395,r3:r3_6370,r4:r4_6374,r5:r5_6365,r6:r6_6366,r7:r7_6382,r8:r8_6380,r9:r9_6376,sp:sp_6360 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000147E4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001477E:
	word32 sp_6418 = sp_3700 - 0x00000004
	Mem6419[sp_6418:word32] = 0x00000000
	Mem6422[sp_6418 - 0x00000004:word32] = r6_3704 + 4925
	Mem6425[sp_6418 - 0x00000008:word32] = r5_3703 + 1515
	word32 sp_6429
	word32 ap_6430
	word32 r5_6432
	word32 r6_6433
	word32 r0_6434
	word32 r3_6435
	word32 fp_6436
	word32 r4_6437
	word32 r9_6438
	word32 r10_6439
	word32 r8_6440
	word32 r7_6441
	word32 r1_6442
	word32 r11_6443
	call Mem6425[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_6264,fp:fp_6274,r0:r0_6270,r1:r1_6288,r10:r10_6280,r11:r11_6290,r2:r2_6266,r3:r3_6272,r4:r4_6276,r5:r5_6244,r6:r6_6254,r7:r7_6284,r8:r8_6282,r9:r9_6278,sp:sp_6418 - 0x00000008,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
		defs: ap:ap_6430,fp:fp_6436,r0:r0_6434,r1:r1_6442,r10:r10_6439,r11:r11_6443,r3:r3_6435,r4:r4_6437,r5:r5_6432,r6:r6_6433,r7:r7_6441,r8:r8_6440,r9:r9_6438,sp:sp_6429
	Mem6446[sp_6429 - 0x00000004:word32] = r0_6434
	Mem6449[sp_6429 - 0x00000008:word32] = r5_6432 + 1515
	Mem6451[sp_6429 - 0x0000000C:word32] = r5_6432
	word32 r2_6452 = Mem6451[r5_6432 + 0x0000C839:word32]
	call r2_6452 + 2 (retsize: 4;)
		uses: ap:ap_6430,fp:fp_6436,r0:r0_6434,r1:r1_6442,r10:r10_6439,r11:r11_6443,r2:r2_6452,r3:r3_6435,r4:r4_6437,r5:r5_6432,r6:r6_6433,r7:r7_6441,r8:r8_6440,r9:r9_6438,sp:sp_6429 - 0x0000000C,Stack +FFFFFF08:dwLocFC_6503,Stack +FFFFFF0C:dwLocF8_6501,Stack +FFFFFF10:dwLocF4_6499,Stack +FFFFFF14:dwLocF0_6497,Stack +FFFFFF20:0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014808:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0001325E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00014812(word32 r0, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp:[0..31] r0:[0..31] r10:[16..31] r3:[16..31] r4:[0..31] r5:[0..31] r6:[16..31] r7:[0..31] r8:[0..31] r9:[16..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00014812_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014812:
	word32 r3_14
	branch (uint32) Mem0[r4 + 0x0000C65E:word16] >=u 0x0000000B l00014844
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014844:
	r3_14 = SEQ(SLICE(r3, word16, 16), 0x000B)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014838:
	r3_14 = SEQ(SLICE(r3, word16, 16), Mem0[r4 + 0x0000C65E:word16])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014847:
	word32 r6_29 = SEQ(SLICE(r6, word16, 16), (word16) r3_14)
	word32 ap_43 = (uint32) (word16) r6_29
	word32 v29_49 = r8 + 5401 + ap_43 * 0x00000014
	word32 r2_63
	word32 ap_68
	word32 r0_76
	word32 fp_112
	word32 r4_104
	word32 r7_113
	word32 r10_108
	word32 sp_102
	word32 r11_103
	word32 r3_106
	word32 r6_107
	word32 r9_109
	word32 r8_111
	word32 r5_115
	call Mem55[0x000192BC:word32] + 2 (retsize: 4;)
		uses: ap:ap_43,fp:fp,r0:r0,r10:SEQ(SLICE(r10, word16, 16), Mem0[Mem0[r4 + 1511:word32] + 12:word16]),r11:0x00000000,r2:ap_43 * 0x00000005,r3:r3_24,r4:r4,r5:r5,r6:r6_29,r7:r7,r8:r8,r9:SEQ(SLICE(r9, word16, 16), (uint16) Mem0[r4 + 0x0000C658:byte]),sp:fp - 0x00000030,Stack +0004:fp + -37,Stack +0008:v29_49
		defs: ap:ap_68,fp:fp_70,r0:r0_76,r10:r10_66,r11:r11_61,r2:r2_63,r3:r3_64,r4:r4_62,r5:r5_79,r6:r6_65,r7:r7_73,r8:r8_69,r9:r9_67,sp:sp_59
	branch ap_68 != 0x00000006 l000148AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148AC:
	branch ap_68 != 0x00000008 l000148D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148D0:
	branch ap_68 <u 0x0000000B l000148EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148D5:
	Mem92[sp_102 - 0x00000004:uint32] = (uint32) Mem55[r4_104 + 0x0000C65E:word16]
	Mem95[sp_102 - 0x00000008:word32] = r5_115 + 236
	Mem98[sp_102 - 0x0000000C:word32] = fp_112 + -36
	call Mem98[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_68,fp:fp_70,r0:r0_76,r10:r10_66,r11:r11_61,r2:r2_63,r3:r3_64,r4:r4_62,r5:r5_79,r6:r6_65,r7:r7_73,r8:r8_69,r9:r9_67,sp:sp_59 - 0x0000000C,Stack +FFFFFFD4:fp + -37,Stack +FFFFFFD8:v29_49
		defs: fp:fp_112,r10:r10_108,r11:r11_103,r3:r3_106,r4:r4_104,r5:r5_115,r6:r6_107,r7:r7_113,r8:r8_111,r9:r9_109,sp:sp_102
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148B1:
	Mem122[fp_112 + -34:byte] = Mem55[r8_111 + 5320 + (uint32) ((word16) ((uint32) Mem55[r4_104 + 0x0000C65C:word16] >> 1 & ~0xFFFFFFFC)):byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014875:
	branch ((uint32) Mem55[r4_104 + 0x0000C65C:word16] & 0x00000002) == 0x00000000 l00014888
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014888:
	r3_106 = SEQ(SLICE(r3_106, word24, 8), 0x34)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00014880:
	r3_106 = SEQ(SLICE(r3_106, word24, 8), 0x38)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001488B:
	word32 r2_153
	Mem145[fp_112 + -36:byte] = (byte) r3_106
	word32 r2_147 = (uint32) Mem145[r4_104 + 0x0000C65C:word16]
	branch (r2_147 & 0x00000004) == 0x00000000 l000148A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148A0:
	r2_153 = SEQ(SLICE(r2_147, word24, 8), 0x32)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001489A:
	r2_153 = SEQ(SLICE(r2_147, word24, 8), 0x33)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148A3:
	Mem166[fp_112 + -34:byte] = (byte) r2_153
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148EA:
	word32 ap_170 = 0x00000000
	word32 r2_172 = fp_112 + -32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148F0:
	Mem178[r2_172:byte] = 0x20
	r2_172 = r2_172 + 0x00000001
	ap_170 = ap_170 + 0x00000001
	branch ap_170 <= 0x0000000E l000148F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000148F9:
	Mem185[fp_112 + -17:byte] = 0x00
	word32 r2_189 = (uint32) Mem185[r4_104 + 0x0000C67C:word16]
	word32 r7_196 = SEQ(SLICE(r7_113, word16, 16), (word16) r2_189 & ~0x0000)
	word32 r0_201 = (uint32) (word16) r10_108
	branch r0_201 > 0x0000000F l0001492E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001492E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001490C_1:
	call 0x00014910 + r0_201 * 0x00000002 (retsize: 4;)
		uses: ap:ap_181,fp:fp_171,r0:r0_201,r10:r10_198,r11:r11_212,r2:r2_189,r3:r3_219,r4:r4_187,r5:r5_243,r6:r6_223,r7:r7_196,r8:r8_235,r9:r9_229,sp:sp_207,Stack +FFFFFFD4:fp + -37,Stack +FFFFFFD8:v29_49
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00014812_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00015106(word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r10:[16..31] r11:[16..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[16..31] r7:[16..31] r8:[16..31] r9:[16..31]
// LiveOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00015106_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015106:
	word32 r2_251
	word32 r5_106
	word32 r2_27 = (uint32) Mem0[Mem0[ap + 8:word32]:word16]
	word32 r1_7 = (uint32) Mem0[Mem0[ap + 4:word32]:word16]
	word32 r0_36 = r2_27 >> 5 & ~0xFFFFFFC0
	word32 r10_194 = SEQ(SLICE(r10, word16, 16), (int16) (r1_7 >> 5 & ~0xFFFFFFF0))
	word32 sp_119 = fp - 0x00000008
	word32 r11_129 = SEQ(SLICE(r11, word16, 16), (int16) ((r1_7 >> 9 & ~0xFFFFFF80) + 0x00000050))
	word32 r9_163 = SEQ(SLICE(r9, word16, 16), (word16) r1_7 & ~0xFFE0)
	word32 r1_249 = r2_27
	word32 r8_125 = SEQ(SLICE(r8, word16, 16), (int16) (r2_27 >> 11 & ~0xFFFFFFE0))
	word32 r7_121 = SEQ(SLICE(r7, word16, 16), (int16) r0_36)
	word32 r6_205 = SEQ(SLICE(r6, word16, 16), (word16) ((r2_27 & ~0xFFFFFFE0) * 0x00000002))
	word32 r2_46 = (uint32) (word16) r10_194
	branch r2_46 == 0x00000000 l00015189
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015184:
	branch r2_46 <=u 0x0000000C l000151A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000151A0:
	r2_251 = r2_46 - 0x00000001 << 2
	r5_106 = r3 + 5461 + r2_251
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015189:
	call Mem73[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0_36,r1:r2_27,r10:r10_21,r11:r11_15,r2:r2_46,r3:r3,r4:r4,r5:r5,r6:r6_45,r7:r7_40,r8:r8_34,r9:r9_25,sp:fp - 0x00000014,Stack +0004:fp + -8,Stack +0008:r3 + 5108,Stack +000C:r2_46
		defs: ap:ap_79,fp:fp_98,r1:r1_83,r10:r10_88,r11:r11_86,r2:r2_84,r3:r3_97,r4:r4_104,r6:r6_96,r7:r7_94,r8:r8_92,r9:r9_90,sp:sp_77
	dwLoc0C = r2_46
	dwLoc10 = r3 + 5108
	dwLoc14 = fp + -8
	r5_106 = fp + -8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000151AC:
	word32 fp_212
	word32 ap_183
	word32 r2_189
	word32 r10_196
	word32 r3_208
	word32 r11_192
	word32 r4_216
	word32 r1_186
	word32 r5_213
	word32 r7_203
	word32 r6_207
	word32 r9_197
	word32 r8_200
	branch Mem111[r4 + 36:word32] <= 0x00000009 l000151DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000151DC:
	branch Mem111[r4 + 72:word32] == 0x00000000 l0001520C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001520C:
	word32 sp_120 = sp_119 - 0x00000004
	Mem123[sp_120:uint32] = (uint32) (word16) r7_121
	Mem127[sp_120 - 0x00000004:uint32] = (uint32) (word16) r8_125
	word32 r1_128 = 0x00000000
	word32 r0_130 = (uint32) (word16) r11_129
	branch 0x00000064 == 0x00000000 l00015234
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001521E:
	branch 0x00000063 == 0x00000000 l00015239
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015223:
	branch true l00015234
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015234:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015225:
	branch r0_130 == 0x00000064 l00015239
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001522A:
	branch r0_130 <u 0x00000064 l0001522F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001522C:
	r1_128 = 0xFFFFFF9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001522F:
	r1_128 = r1_128 + r0_130
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015239:
	Mem155[sp_120 - 0x00000008:uint32] = (uint32) (word16) r1_128
	Mem160[sp_120 - 0x0000000C:word32] = r5_106
	Mem166[sp_120 - 0x00000010:uint32] = (uint32) (word16) r9_163
	Mem172[sp_120 - 0x00000014:word32] = r3 + 5113
	Mem178[sp_120 - 0x00000018:word32] = Mem172[ap + 16:word32]
	call Mem178[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_175,fp:fp_210,r0:r0_130,r1:r1_153,r10:r10_194,r11:r11_129,r2:0x00000064,r3:r3_169,r4:r4_110,r5:r5_158,r6:r6_205,r7:r7_121,r8:r8_125,r9:r9_163,sp:sp_120 - 0x00000018,Stack +FFFFFFF0:dwLoc14_329,Stack +FFFFFFF4:dwLoc10_325,Stack +FFFFFFF8:dwLoc0C_321
		defs: ap:ap_183,fp:fp_212,r1:r1_186,r10:r10_196,r11:r11_192,r2:r2_189,r3:r3_208,r4:r4_216,r5:r5_213,r6:r6_207,r7:r7_203,r8:r8_200,r9:r9_197
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000151E1:
	word32 sp_218 = sp_119 - 0x00000004
	Mem220[sp_218:uint32] = (uint32) (word16) r6_205
	Mem223[sp_218 - 0x00000004:uint32] = (uint32) (word16) r7_121
	Mem226[sp_218 - 0x00000008:uint32] = (uint32) (word16) r8_125
	Mem229[sp_218 - 0x0000000C:uint32] = (uint32) (word16) r9_163
	Mem232[sp_218 - 0x00000010:uint32] = (uint32) (word16) r10_194
	word32 r0_233 = (uint32) (word16) r11_129
	Mem236[sp_218 - 0x00000014:word32] = r0_233 + 0x0000076C
	Mem239[sp_218 - 0x00000018:word32] = r3 + 5159
	Mem242[sp_218 - 0x0000001C:word32] = Mem239[ap + 16:word32]
	call Mem242[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_175,fp:fp_210,r0:r0_233,r1:r1_249,r10:r10_194,r11:r11_129,r2:r2_251,r3:r3_169,r4:r4_110,r5:r5_158,r6:r6_205,r7:r7_121,r8:r8_125,r9:r9_163,sp:sp_218 - 0x0000001C,Stack +FFFFFFF0:dwLoc14_329,Stack +FFFFFFF4:dwLoc10_325,Stack +FFFFFFF8:dwLoc0C_321
		defs: ap:ap_247,fp:fp_260,r1:r1_250,r10:r10_254,r11:r11_253,r2:r2_252,r3:r3_259,r4:r4_262,r5:r5_261,r6:r6_258,r7:r7_257,r8:r8_256,r9:r9_255
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000151B2:
	word32 sp_264 = sp_119 - 0x00000004
	Mem266[sp_264:uint32] = (uint32) (word16) r6_205
	Mem269[sp_264 - 0x00000004:uint32] = (uint32) (word16) r7_121
	Mem272[sp_264 - 0x00000008:uint32] = (uint32) (word16) r8_125
	Mem275[sp_264 - 0x0000000C:uint32] = (uint32) (word16) r9_163
	Mem277[sp_264 - 0x00000010:word32] = r5_106
	word32 r0_278 = (uint32) (word16) r11_129
	Mem281[sp_264 - 0x00000014:word32] = r0_278 + 0x0000076C
	Mem284[sp_264 - 0x00000018:word32] = r3 + 5135
	Mem287[sp_264 - 0x0000001C:word32] = Mem284[ap + 16:word32]
	call Mem287[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_175,fp:fp_210,r0:r0_278,r1:r1_249,r10:r10_194,r11:r11_129,r2:r2_251,r3:r3_169,r4:r4_110,r5:r5_158,r6:r6_205,r7:r7_121,r8:r8_125,r9:r9_163,sp:sp_264 - 0x0000001C,Stack +FFFFFFF0:dwLoc14_329,Stack +FFFFFFF4:dwLoc10_325,Stack +FFFFFFF8:dwLoc0C_321
		defs: ap:ap_292,fp:fp_303,r1:r1_294,r10:r10_297,r11:r11_296,r2:r2_295,r3:r3_302,r4:r4_305,r5:r5_304,r6:r6_301,r7:r7_300,r8:r8_299,r9:r9_298
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001524F:
	word32 sp_314 = fp_212 - 0x00000004
	word32 r0_309 = Mem308[ap_183 + 16:word32]
	word32 fp_315 = Mem308[sp_314 + 0x00000010:word32]
	word32 ap_316 = Mem308[sp_314 + 0x0000000C:word32]
	r1Out = r1_186
	r2Out = r2_189
	r3Out = r3_208
	r4Out = r4_216
	r5Out = r5_213
	r6Out = r6_207
	r7Out = r7_203
	r8Out = r8_200
	r9Out = r9_197
	r10Out = r10_196
	r11Out = r11_192
	apOut = ap_316
	fpOut = fp_315
	spOut = sp_314
	return r0_309
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00015106_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00015256(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 ap, word32 fp, word32 pc, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut, ptr32 & pcOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: ap fp pc r0 r1 r2 r4 r5 r6 r7 sp
// Trashed: CVZN ap fp pc r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved:
fn00015256_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015256:
	word32 r0_112
	word32 r5_34
	word32 v8_6 = Mem0[r2 + 0x0000C5FB:word32] - 0x00000001
	Mem7[r2 + 0x0000C5FB:word32] = v8_6
	branch v8_6 < 0x00000000 l0001527C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001527C:
	r0_112 = fn0000D69A(r0, r1, r2, r3, r4, r5, r6, ap, fp, pc, out r1, out r2, out r3, out r4_216, out r5_217, out r6, out ap, out fp, out sp_218, out pc)
	r5_34 = r0_112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015268:
	r0_112 = Mem7[r2 + 0x0000C5F7:word32]
	Mem40[r2 + 0x0000C5F7:word32] = Mem7[r2 + 0x0000C5F7:word32] + 0x00000001
	r5_34 = (uint32) Mem40[r0_112:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015286:
	word32 r7_124 = r5_34 + 0x00000001
	word32 r4_100 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001528C:
	word32 v16_54 = Mem53[r2 + 0x0000C5FB:word32] - 0x00000001
	Mem55[r2 + 0x0000C5FB:word32] = v16_54
	branch v16_54 < 0x00000000 l000152A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152A8:
	r5_34 = fn0000D69A(r0_112, r1, r2, r3, r4_100, r5_34, r6, ap, fp, pc, out r1, out r2, out r3_219, out r4_100, out r5_220, out r6_221, out ap, out fp, out sp_222, out pc)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015294:
	word32 r0_86 = Mem55[r2 + 0x0000C5F7:word32]
	Mem88[r2 + 0x0000C5F7:word32] = Mem55[r2 + 0x0000C5F7:word32] + 0x00000001
	r5_34 = (uint32) Mem88[r0_86:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152B2:
	word32 r6_95 = r5_34 & ~0xFFFFFFF0
	word32 r0_98 = (uint32) SLICE(r5_34 & ~0xFFFFFF0F, ui28, 4)
	r6 = r6_95 + 0x00000001
	r3 = r0_98 + 0x00000001
	branch r0_98 + 0x00000001 + r4_100 <=u Mem103[ap + 8:word32] l000152DE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152DE:
	r1 = Mem103[ap + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152E4:
	Mem117[r1:word32] = r6_95 + 0x00000001
	r0_112 = r4_100
	r4_100 = r4_100 + 0x00000001
	r3 = r3 - 0x00000001
	branch r3 != 0x00000000 l000152E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152F1:
	r7_124 = r7_124 - 0x00000001
	branch r7_124 != 0x00000000 l0001528C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152F5:
	word32 r3_134
	branch r4_100 == Mem117[ap + 8:word32] l00015300
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015300:
	r3_134 = SEQ(SLICE(r3, word24, 8), 0x00)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152FB:
	r3_134 = SEQ(SLICE(r3, word24, 8), 0x04)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015302:
	word32 sp_152 = fp - 0x00000004
	word32 fp_154 = Mem117[sp_152 + 0x00000010:word32]
	word32 ap_155 = Mem117[sp_152 + 0x0000000C:word32]
	r1Out = r1
	r2Out = <invalid>
	r4Out = r4_100
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = r7_124
	apOut = ap_155
	fpOut = fp_154
	spOut = sp_152
	pcOut = <invalid>
	return (int32) (int8) r3_134
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000152DA:
	word32 sp_160 = fp - 0x00000004
	word32 fp_161 = Mem103[sp_160 + 0x00000010:word32]
	word32 ap_162 = Mem103[sp_160 + 0x0000000C:word32]
	r1Out = r1
	r2Out = <invalid>
	r4Out = r4_100
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = r7_124
	apOut = ap_162
	fpOut = fp_161
	spOut = sp_160
	pcOut = <invalid>
	return 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00015256_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0001530A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0001530A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0001530A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001530A:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00015896()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn00015896_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00015896_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015896:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00015E22()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn00015E22_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00015E22_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00015E22:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000162E6()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn000162E6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000162E6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000162E6:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000167AA(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r8, word32 r9, word32 r10, word32 r11, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
l0001698D:
	Mem444[sp - 0x00000004:word32] = Mem0[fp + -16:word32]
	call ap + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,pc:pc,r0:r0,r1:r1,r10:r10,r11:r11,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9,sp:sp - 0x00000004,Stack +FFFFFBE0:dwLoc0424,Stack +FFFFFBE4:dwLoc0420
		defs: ap:ap_452,fp:fp_450,pc:pc_458,r0:r0_453,r1:r1_459,r10:r10_463,r11:r11_462,r2:r2_455,r3:r3_454,r4:r4_451,r5:r5_456,r6:r6_457,r7:r7_461,r8:r8_465,r9:r9_464,sp:sp_449
	Mem469[sp_449 - 0x00000004:word32] = Mem444[fp_450 + -12:word32]
	call ap_452 + 2 (retsize: 4;)
		uses: ap:ap_452,fp:fp_450,pc:pc_458,r0:r0_453,r1:r1_459,r10:r10_463,r11:r11_462,r2:r2_455,r3:r3_454,r4:r4_451,r5:r5_456,r6:r6_457,r7:r7_461,r8:r8_465,r9:r9_464,sp:sp_449 - 0x00000004,Stack +FFFFFBE0:dwLoc0424,Stack +FFFFFBE4:dwLoc0420
		defs: ap:ap_476,fp:fp_474,pc:pc_482,r0:r0_477,r1:r1_483,r10:r10_486,r11:r11_485,r2:r2_479,r3:r3_478,r4:r4_475,r5:r5_480,r6:r6_481,r7:r7_484,r8:r8_488,r9:r9_487,sp:sp_473
	Mem492[sp_473 - 0x00000004:word32] = Mem469[fp_474 + -8:word32]
	call ap_476 + 2 (retsize: 4;)
		uses: ap:ap_476,fp:fp_474,pc:pc_482,r0:r0_477,r1:r1_483,r10:r10_486,r11:r11_485,r2:r2_479,r3:r3_478,r4:r4_475,r5:r5_480,r6:r6_481,r7:r7_484,r8:r8_488,r9:r9_487,sp:sp_473 - 0x00000004,Stack +FFFFFBE0:dwLoc0424,Stack +FFFFFBE4:dwLoc0420
	def sp
	def Mem0
	def ap
	def r7
	def dwLoc0420
	def dwLoc0424
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AC5:
	Mem953[sp - 0x00000004:word32] = Mem0[fp + -16:word32]
	r0_959 = fn00018BF6(r0, ap, fp, out r3_1262, out ap_957, out fp_958, out sp_961)
	Mem969[sp_961 - 0x00000004:word32] = Mem953[fp_958 + -12:word32]
	fn00018BF6(r0_959, ap_957, fp_958, out r3_978, out ap_1263, out fp_974, out sp_1264)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AD9:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000167AA_entry:
	def fp
	def r4
	def r0
	def r2
	def r3
	def r5
	def r6
	def pc
	def r1
	def r11
	def r10
	def r9
	def r8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167AA:
	Mem6[fp + -24:word32] = 0x00000007
	branch Mem6[r4 + 0x0000C5FB:word32] + Mem6[r4 + 132:word32] <= 0x00030D40 l000167DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167DC:
	r0_15 = SEQ(SLICE(r0, word24, 8), 0x07)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167D4:
	r0_21 = SEQ(SLICE(r0, word24, 8), 0x08)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167DF:
	r0_25 = PHI((r0_21, l000167D4), (r0_15, l000167DC))
	Mem28[fp + -28:int32] = (int32) (int8) r0_25
	Mem31[r4 + 0x0000C819:word32] = 0x00000000
	ap_32 = (uint32) Mem31[r4 + 0x0000C640:word16]
	branch (ap_32 & 0x00000004) != 0x00000000 l000167F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167F7:
	Mem37[fp + -20:word32] = 0x00000009
	r0_63 = fn00015256(r0_25, r1, r2, r3, r4, r5, r6, ap_32, fp, pc, out r1_64, out r2_1218, out r4_67, out r5_68, out r6_69, out r7_70, out ap_60, out fp_61, out sp_71, out pc_62)
	branch r0_63 == 0x00000000 l00016812
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016812:
	Mem83[sp_71 - 0x00000004:word32] = fp_61 + -20
	Mem86[sp_71 - 0x00000008:word32] = fp_61 + -8
	Mem89[sp_71 - 0x00000010:word64] = 0x0000000000000000
	Mem92[sp_71 - 0x00000014:uint32] = 0x00000100
	Mem95[sp_71 - 0x00000018:uint32] = 0x00000100
	Mem98[sp_71 - 0x0000001C:word32] = fp_61 + -1052
	r0_112 = fn0001878E(r0_63, r4_67, r5_68, r6_69, r7_70, r8, r9, r10, r11, ap_60, fp_61, out r2_115, out r3_1219, out r4_117, out r5_118, out r6_119, out r7_1220, out r8_121, out r9_122, out r10_113, out r11_114, out ap_110, out fp_111, out sp_123)
	branch r0_112 == 0x00000000 l00016847
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016847:
	Mem135[sp_123 - 0x00000004:uint32] = 0x00000040
	Mem138[sp_123 - 0x00000008:word32] = fp_111 + -1052
	r0_145 = fn00015256(r0_112, r1_64, r2_115, r0_112, r4_117, r5_118, r6_119, ap_110, fp_111, pc_62, out r1_146, out r2_147, out r4_149, out r5_150, out r6_151, out r7_152, out ap_142, out fp_143, out sp_153, out pc_144)
	branch r0_145 == 0x00000000 l0001685D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001685D:
	Mem165[sp_153 - 0x00000004:word32] = fp_143 + -24
	Mem168[sp_153 - 0x00000008:word32] = fp_143 + -12
	Mem171[sp_153 - 0x0000000C:word32] = r2_147 + 256
	Mem174[sp_153 - 0x00000010:word32] = r2_147 + 128
	Mem176[sp_153 - 0x00000014:word32] = 0x00000000
	Mem179[sp_153 - 0x00000018:uint32] = 0x00000040
	Mem182[sp_153 - 0x0000001C:word32] = fp_143 + -1052
	r0_188 = fn0001878E(r0_145, r4_149, r5_150, r6_151, r7_152, r8_121, r9_122, r10_113, r11_114, ap_142, fp_143, out r2_191, out r3_1234, out r4_193, out r5_194, out r6_195, out r7_1235, out r8_197, out r9_198, out r10_189, out r11_190, out ap_186, out fp_187, out sp_199)
	branch r0_188 == 0x00000000 l0001689E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001689E:
	Mem211[sp_199 - 0x00000004:uint32] = 0x00000040
	Mem214[sp_199 - 0x00000008:word32] = fp_187 + -1052
	r0_221 = fn00015256(r0_188, r1_146, r2_191, r0_188, r4_193, r5_194, r6_195, ap_186, fp_187, pc_144, out r1_1265, out r2_223, out r4_225, out r5_226, out r6_227, out r7_228, out ap_1266, out fp_219, out sp_229, out pc_1267)
	branch r0_221 == 0x00000000 l000168B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168B4:
	ap_239 = (uint32) Mem214[r4_225 + 0x0000C640:word16]
	branch (ap_239 & 0x00000002) == 0x00000000 l00016928
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016928:
	Mem245[sp_229 - 0x00000004:word32] = fp_219 + -28
	Mem248[sp_229 - 0x00000008:word32] = fp_219 + -16
	Mem251[sp_229 - 0x0000000C:word32] = r2_223 + 256
	Mem254[sp_229 - 0x00000010:word32] = r2_223 + 384
	Mem256[sp_229 - 0x00000014:word32] = 0x00000000
	Mem259[sp_229 - 0x00000018:uint32] = 0x00000040
	Mem262[sp_229 - 0x0000001C:word32] = fp_219 + -1052
	r0_268 = fn0001878E(r0_221, r4_225, r5_226, r6_227, r7_228, r8_197, r9_198, r10_189, r11_190, ap_239, fp_219, out r2_1271, out r3_1272, out r4_1273, out r5_1274, out r6_1275, out r7_1276, out r8_1277, out r9_1278, out r10_1279, out r11_1280, out ap_266, out fp_267, out sp_279)
	branch r0_268 == 0x00000000 l00016973
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016973:
	Mem291[sp_279 - 0x00000004:word32] = Mem262[fp_267 + -28:word32]
	Mem294[sp_279 - 0x00000008:word32] = Mem291[fp_267 + -24:word32]
	Mem297[sp_279 - 0x0000000C:word32] = Mem294[fp_267 + -20:word32]
	Mem300[sp_279 - 0x00000010:word32] = Mem297[fp_267 + -16:word32]
	Mem303[sp_279 - 0x00000014:word32] = Mem300[fp_267 + -12:word32]
	Mem306[sp_279 - 0x00000018:word32] = Mem303[fp_267 + -8:word32]
	fn00015896()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001694C:
	branch r0_268 != 0x00000001 l0001695B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016951:
	Mem315[sp_279 - 0x00000004:word32] = Mem262[fp_267 + -16:word32]
	r0_321 = fn00018BF6(r0_268, ap_266, fp_267, out r3_1298, out ap_319, out fp_320, out sp_323)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001695B:
	r0_339 = PHI((r0_268, l0001694C), (r0_321, l00016951))
	ap_338 = PHI((ap_266, l0001694C), (ap_319, l00016951))
	Mem332 = PHI((Mem262, l0001694C), (Mem315, l00016951))
	fp_331 = PHI((fp_267, l0001694C), (fp_320, l00016951))
	sp_329 = PHI((sp_279, l0001694C), (sp_323, l00016951))
	Mem334[sp_329 - 0x00000004:word32] = Mem332[fp_331 + -12:word32]
	r0_342 = fn00018BF6(r0_339, ap_338, fp_331, out r3_1295, out ap_340, out fp_341, out sp_344)
	Mem352[sp_344 - 0x00000004:word32] = Mem334[fp_341 + -8:word32]
	fn00018BF6(r0_342, ap_340, fp_341, out r3_361, out ap_1296, out fp_357, out sp_1297)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168BF:
	Mem375[sp_229 - 0x00000004:word32] = fp_219 + -28
	Mem378[sp_229 - 0x00000008:word32] = fp_219 + -16
	Mem381[sp_229 - 0x0000000C:word32] = r2_223 + 256
	Mem384[sp_229 - 0x00000010:word32] = r2_223 + 512
	Mem386[sp_229 - 0x00000014:word32] = 0x00000000
	Mem389[sp_229 - 0x00000018:uint32] = 0x00000040
	Mem392[sp_229 - 0x0000001C:word32] = fp_219 + -1052
	r0_398 = fn0001878E(r0_221, r4_225, r5_226, r6_227, r7_228, r8_197, r9_198, r10_189, r11_190, ap_239, fp_219, out r2_1281, out r3_1282, out r4_1283, out r5_1284, out r6_1285, out r7_1286, out r8_1287, out r9_1288, out r10_1289, out r11_1290, out ap_396, out fp_397, out sp_409)
	branch r0_398 == 0x00000000 l0001690A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001690A:
	Mem421[sp_409 - 0x00000004:word32] = Mem392[fp_397 + -28:word32]
	Mem424[sp_409 - 0x00000008:word32] = Mem421[fp_397 + -24:word32]
	Mem427[sp_409 - 0x0000000C:word32] = Mem424[fp_397 + -20:word32]
	Mem430[sp_409 - 0x00000010:word32] = Mem427[fp_397 + -16:word32]
	Mem433[sp_409 - 0x00000014:word32] = Mem430[fp_397 + -12:word32]
	Mem436[sp_409 - 0x00000018:word32] = Mem433[fp_397 + -8:word32]
	fn0001530A()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168E3:
	branch r0_398 != 0x00000001 l000168F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168E8:
	Mem518[sp_409 - 0x00000004:word32] = Mem392[fp_397 + -16:word32]
	r0_524 = fn00018BF6(r0_398, ap_396, fp_397, out r3_1294, out ap_522, out fp_523, out sp_526)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168F2:
	r0_542 = PHI((r0_398, l000168E3), (r0_524, l000168E8))
	ap_541 = PHI((ap_396, l000168E3), (ap_522, l000168E8))
	Mem535 = PHI((Mem392, l000168E3), (Mem518, l000168E8))
	fp_534 = PHI((fp_397, l000168E3), (fp_523, l000168E8))
	sp_532 = PHI((sp_409, l000168E3), (sp_526, l000168E8))
	Mem537[sp_532 - 0x00000004:word32] = Mem535[fp_534 + -12:word32]
	r0_545 = fn00018BF6(r0_542, ap_541, fp_534, out r3_1291, out ap_543, out fp_544, out sp_547)
	Mem555[sp_547 - 0x00000004:word32] = Mem537[fp_544 + -8:word32]
	fn00018BF6(r0_545, ap_543, fp_544, out r3_564, out ap_1292, out fp_560, out sp_1293)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000168B0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016881:
	branch r0_188 != 0x00000001 l00016890
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016886:
	Mem588[sp_199 - 0x00000004:word32] = Mem182[fp_187 + -12:word32]
	r0_594 = fn00018BF6(r0_188, ap_186, fp_187, out r3_1270, out ap_592, out fp_593, out sp_596)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016890:
	r0_612 = PHI((r0_188, l00016881), (r0_594, l00016886))
	ap_611 = PHI((ap_186, l00016881), (ap_592, l00016886))
	Mem605 = PHI((Mem182, l00016881), (Mem588, l00016886))
	fp_604 = PHI((fp_187, l00016881), (fp_593, l00016886))
	sp_602 = PHI((sp_199, l00016881), (sp_596, l00016886))
	Mem607[sp_602 - 0x00000004:word32] = Mem605[fp_604 + -8:word32]
	fn00018BF6(r0_612, ap_611, fp_604, out r3_618, out ap_1268, out fp_614, out sp_1269)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016859:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016834:
	branch r0_112 != 0x00000001 l00016843
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016839:
	Mem642[sp_123 - 0x00000004:word32] = Mem98[fp_111 + -8:word32]
	fn00018BF6(r0_112, ap_110, fp_111, out r3_1223, out ap_1224, out fp_1225, out sp_1226)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016843:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001680E:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000167F4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000169AC:
	r0_685 = fn00015256(r0_25, r1, r2, r3, r4, r5, r6, ap_32, fp, pc, out r1_686, out r2_687, out r4_689, out r5_690, out r6_691, out r7_692, out ap_682, out fp_683, out sp_693, out pc_684)
	branch r0_685 == 0x00000000 l000169C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000169C2:
	Mem705[sp_693 - 0x00000004:word32] = fp_683 + -24
	Mem708[sp_693 - 0x00000008:word32] = fp_683 + -12
	Mem711[sp_693 - 0x0000000C:word32] = r2_687 + 256
	Mem713[sp_693 - 0x00000010:word32] = r2_687
	Mem715[sp_693 - 0x00000014:word32] = 0x00000000
	Mem718[sp_693 - 0x00000018:uint32] = 0x00000040
	Mem721[sp_693 - 0x0000001C:word32] = fp_683 + -1052
	r0_727 = fn0001878E(r0_685, r4_689, r5_690, r6_691, r7_692, r8, r9, r10, r11, ap_682, fp_683, out r2_730, out r3_1221, out r4_732, out r5_733, out r6_734, out r7_1222, out r8_736, out r9_737, out r10_728, out r11_729, out ap_725, out fp_726, out sp_738)
	branch r0_727 == 0x00000000 l000169F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000169F7:
	Mem750[sp_738 - 0x00000004:uint32] = 0x00000040
	Mem753[sp_738 - 0x00000008:word32] = fp_726 + -1052
	r0_760 = fn00015256(r0_727, r1_686, r2_730, r0_727, r4_732, r5_733, r6_734, ap_725, fp_726, pc_684, out r1_1227, out r2_762, out r4_764, out r5_765, out r6_766, out r7_767, out ap_1228, out fp_758, out sp_768, out pc_1229)
	branch r0_760 == 0x00000000 l00016A0D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A0D:
	ap_778 = (uint32) Mem753[r4_764 + 0x0000C640:word16]
	branch (ap_778 & 0x00000002) == 0x00000000 l00016A70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A70:
	Mem784[sp_768 - 0x00000004:word32] = fp_758 + -28
	Mem787[sp_768 - 0x00000008:word32] = fp_758 + -16
	Mem790[sp_768 - 0x0000000C:word32] = r2_762 + 256
	Mem793[sp_768 - 0x00000010:word32] = r2_762 + 384
	Mem795[sp_768 - 0x00000014:word32] = 0x00000000
	Mem798[sp_768 - 0x00000018:uint32] = 0x00000040
	Mem801[sp_768 - 0x0000001C:word32] = fp_758 + -1052
	r0_807 = fn0001878E(r0_760, r4_764, r5_765, r6_766, r7_767, r8_736, r9_737, r10_728, r11_729, ap_778, fp_758, out r2_1236, out r3_1237, out r4_1238, out r5_1239, out r6_1240, out r7_1241, out r8_1242, out r9_1243, out r10_1244, out r11_1245, out ap_805, out fp_806, out sp_818)
	branch r0_807 == 0x00000000 l00016AB1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AB1:
	Mem830[sp_818 - 0x00000004:word32] = Mem801[fp_806 + -28:word32]
	Mem833[sp_818 - 0x00000008:word32] = Mem830[fp_806 + -24:word32]
	Mem836[sp_818 - 0x0000000C:word32] = Mem833[fp_806 + -16:word32]
	Mem839[sp_818 - 0x00000010:word32] = Mem836[fp_806 + -12:word32]
	fn000162E6()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A94:
	branch r0_807 != 0x00000001 l00016AA3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A99:
	Mem848[sp_818 - 0x00000004:word32] = Mem801[fp_806 + -16:word32]
	r0_854 = fn00018BF6(r0_807, ap_805, fp_806, out r3_1261, out ap_852, out fp_853, out sp_856)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016AA3:
	r0_872 = PHI((r0_807, l00016A94), (r0_854, l00016A99))
	ap_871 = PHI((ap_805, l00016A94), (ap_852, l00016A99))
	Mem865 = PHI((Mem801, l00016A94), (Mem848, l00016A99))
	fp_864 = PHI((fp_806, l00016A94), (fp_853, l00016A99))
	sp_862 = PHI((sp_818, l00016A94), (sp_856, l00016A99))
	Mem867[sp_862 - 0x00000004:word32] = Mem865[fp_864 + -12:word32]
	fn00018BF6(r0_872, ap_871, fp_864, out r3_878, out ap_1259, out fp_874, out sp_1260)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A18:
	Mem892[sp_768 - 0x00000004:word32] = fp_758 + -28
	Mem895[sp_768 - 0x00000008:word32] = fp_758 + -16
	Mem898[sp_768 - 0x0000000C:word32] = r2_762 + 256
	Mem901[sp_768 - 0x00000010:word32] = r2_762 + 512
	Mem903[sp_768 - 0x00000014:word32] = 0x00000000
	Mem906[sp_768 - 0x00000018:uint32] = 0x00000040
	Mem909[sp_768 - 0x0000001C:word32] = fp_758 + -1052
	r0_915 = fn0001878E(r0_760, r4_764, r5_765, r6_766, r7_767, r8_736, r9_737, r10_728, r11_729, ap_778, fp_758, out r2_1246, out r3_1247, out r4_1248, out r5_1249, out r6_1250, out r7_1251, out r8_1252, out r9_1253, out r10_1254, out r11_1255, out ap_913, out fp_914, out sp_926)
	branch r0_915 == 0x00000000 l00016A59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A59:
	Mem938[sp_926 - 0x00000004:word32] = Mem909[fp_914 + -28:word32]
	Mem941[sp_926 - 0x00000008:word32] = Mem938[fp_914 + -24:word32]
	Mem944[sp_926 - 0x0000000C:word32] = Mem941[fp_914 + -16:word32]
	Mem947[sp_926 - 0x00000010:word32] = Mem944[fp_914 + -12:word32]
	fn00015E22()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A3C:
	branch r0_915 != 0x00000001 l00016A4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A41:
	Mem998[sp_926 - 0x00000004:word32] = Mem909[fp_914 + -16:word32]
	r0_1004 = fn00018BF6(r0_915, ap_913, fp_914, out r3_1258, out ap_1002, out fp_1003, out sp_1006)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A4B:
	r0_1022 = PHI((r0_915, l00016A3C), (r0_1004, l00016A41))
	ap_1021 = PHI((ap_913, l00016A3C), (ap_1002, l00016A41))
	Mem1015 = PHI((Mem909, l00016A3C), (Mem998, l00016A41))
	fp_1014 = PHI((fp_914, l00016A3C), (fp_1003, l00016A41))
	sp_1012 = PHI((sp_926, l00016A3C), (sp_1006, l00016A41))
	Mem1017[sp_1012 - 0x00000004:word32] = Mem1015[fp_1014 + -12:word32]
	fn00018BF6(r0_1022, ap_1021, fp_1014, out r3_1028, out ap_1256, out fp_1024, out sp_1257)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00016A09:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000169E4:
	branch r0_727 != 0x00000001 l000169F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000169E9:
	Mem1052[sp_738 - 0x00000004:word32] = Mem721[fp_726 + -12:word32]
	fn00018BF6(r0_727, ap_725, fp_726, out r3_1230, out ap_1231, out fp_1232, out sp_1233)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000169F3:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000169BE:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000167AA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000173CA(word32 r0, word32 r1, word32 r3, word32 r4, word32 r5, word32 r9, word32 r10, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000173CA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000173CA:
	Mem9[Mem0[ap + 4:word32]:word32] = 0x00000000
	Mem11[Mem9[ap + 8:word32]:word32] = 0x00000000
	Mem15[r3 + 1511:word32] = fp + -25
	word32 sp_204 = fp - 0x0000001C
	word32 r6_206 = 0x00000000
	word32 r11_208 = 0x00000000
	word32 r8_16 = 0x00000000
	branch (uint32) Mem15[r3 + 0x0000C688:word16] >u 0x00000000 l00017403
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017403:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017414:
	word32 sp_26 = sp_204 - 0x00000004
	Mem27[sp_26:word32] = 0x00000004
	Mem31[sp_26 - 0x00000004:word32] = r3 + 152
	word32 ap_41
	word32 fp_42
	word32 r2_44
	word32 r3_45
	word32 r4_46
	word32 r5_47
	word32 r6_48
	word32 r7_49
	word32 sp_50
	word32 r0_43 = fn0000D5BE(r0, r3, r4, r5, r6_206, ap, fp, out r2_44, out r3_45, out r4_46, out r5_47, out r6_48, out r7_49, out ap_41, out fp_42, out sp_50)
	branch r0_43 != 0x00000000 l00017429
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017429:
	Mem60[sp_50 - 0x00000004:word32] = 0x00000004
	Mem63[sp_50 - 0x00000008:word32] = r3_45 + 0x0000C634
	Mem66[sp_50 - 0x0000000C:word32] = r3_45 + 152
	word32 sp_70
	word32 r6_71
	word32 r11_73
	word32 ap_74
	word32 fp_75
	word32 r3_76
	word32 r8_78
	word32 r2_79
	word32 r0_80
	word32 r7_81
	word32 r10_83
	word32 r9_85
	word32 r5_86
	word32 r4_87
	call Mem66[0x000192D8:word32] + 2 (retsize: 4;)
		uses: ap:ap_41,fp:fp_42,r0:r0_43,r1:r1_93,r10:r10_82,r11:r11_72,r2:r2_44,r3:r3_45,r4:r4_46,r5:r5_47,r6:r6_48,r7:r7_49,r8:r8_77,r9:r9_84,sp:sp_50 - 0x0000000C
		defs: ap:ap_74,fp:fp_75,r0:r0_80,r10:r10_83,r11:r11_73,r2:r2_79,r3:r3_76,r4:r4_87,r5:r5_86,r6:r6_71,r7:r7_81,r8:r8_78,r9:r9_85,sp:sp_70
	branch r0_80 == 0x00000000 l0001748E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001748E:
	word32 ap_94
	word32 fp_95
	word32 r1_97
	word32 r2_98
	word32 r3_99
	word32 r4_100
	word32 r5_101
	word32 r6_102
	word32 r7_103
	word32 sp_104
	word32 r0_96 = fn00011C0A(r0_80, r1, r3_76, r4_87, r5_86, r6_71, ap_74, fp_75, out r1_97, out r2_98, out r3_99, out r4_100, out r5_101, out r6_102, out r7_103, out ap_94, out fp_95, out sp_104)
	branch r0_96 == 0x00000000 l0001749A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001749A:
	Mem114[sp_104 - 0x00000004:word32] = 0x00000002
	Mem117[sp_104 - 0x00000008:uint32] = (uint32) Mem114[r3_99 + 0x0000C670:word16]
	word32 sp_121
	word32 r3_126
	word32 r9_132
	word32 r6_122
	word32 r11_123
	word32 ap_124
	word32 fp_125
	word32 r8_127
	word32 r2_128
	word32 r0_129
	word32 r7_130
	word32 r10_131
	word32 r5_133
	word32 r4_134
	word32 r1_135
	call r9_85 + 2 (retsize: 4;)
		uses: ap:ap_94,fp:fp_95,r0:r0_96,r1:r1_97,r10:r10_83,r11:r11_73,r2:r2_98,r3:r3_99,r4:r4_100,r5:r5_101,r6:r6_102,r7:r7_103,r8:r8_78,r9:r9_85,sp:sp_104 - 0x00000008
		defs: ap:ap_124,fp:fp_125,r0:r0_129,r1:r1_135,r10:r10_131,r11:r11_123,r2:r2_128,r3:r3_126,r4:r4_134,r5:r5_133,r6:r6_122,r7:r7_130,r8:r8_127,r9:r9_132,sp:sp_121
	branch r0_129 == 0x00000000 l000174B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000174AA:
	r11_123 = r0_129
	branch r0_129 <= 0x00000001 l000174B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000174B3:
	branch Mem117[r3_126 + 0x0000C627:word32] == 0x00000000 l000174CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000174BB:
	Mem154[sp_121 - 0x00000004:word32] = Mem117[r3_126 + 0x0000C627:word32]
	call Mem154[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_124,fp:fp_125,r0:r0_129,r1:r1_135,r10:r10_131,r11:r11_161,r2:r2_128,r3:r3_126,r4:r4_134,r5:r5_133,r6:r6_122,r7:r7_130,r8:r8_127,r9:r9_132,sp:sp_121 - 0x00000004
		defs: ap:ap_164,fp:fp_166,r0:r0_173,r1:r1_185,r10:r10_177,r11:r11_162,r2:r2_171,r3:r3_167,r4:r4_183,r5:r5_181,r6:r6_160,r7:r7_175,r8:r8_169,r9:r9_179,sp:sp_158
	Mem188[r3_126 + 0x0000C627:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000174CE:
	word32 sp_194 = sp_121 - 0x00000004
	Mem195[sp_194:word32] = 0x00000003
	Mem199[sp_194 - 0x00000004:uint32] = (uint32) Mem195[r3_126 + 0x0000C672:word16]
	word32 r2_217
	word32 r7_221
	word32 r8_215
	call r9_132 + 2 (retsize: 4;)
		uses: ap:ap_209,fp:fp_211,r0:r0_218,r1:r1_229,r10:r10_222,r11:r11_207,r2:r2_216,r3:r3_197,r4:r4_227,r5:r5_225,r6:r6_205,r7:r7_220,r8:r8_214,r9:r9_203,sp:sp_194 - 0x00000004
		defs: ap:ap_210,fp:fp_212,r0:r0_219,r1:r1_230,r10:r10_223,r11:r11_208,r2:r2_217,r3:r3_213,r4:r4_228,r5:r5_226,r6:r6_206,r7:r7_221,r8:r8_215,r9:r9_224,sp:sp_204
	branch r0 == 0x00000000 l000174E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000174DE:
	r11_208 = r0
	branch r0 <= 0x00000001 l000174E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000174E7:
	branch Mem199[r3 + 108:word32] != 0x00000000 l0001754B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000174EC:
	r0 = Mem199[r3 + 144:word32] - 0x00000004
	r6_206 = 0x00000000
	r2_217 = r0 + 0x00000004
	branch Mem199[r0 + 0x00000004:word32] == 0x00000000 l0001751B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000174FC:
	word32 sp_254 = sp_204 - 0x00000004
	Mem258[sp_254:word32] = Mem256[r3 + 16:word32]
	Mem262[sp_254 - 0x00000004:word32] = Mem258[r2_217:word32]
	Mem265[sp_254 - 0x00000008:word32] = r3 + 0x0000C701
	call r5 + 2 (retsize: 4;)
		uses: ap:ap_275,fp:fp_277,r0:r0_283,r1:r1_294,r10:r10_287,r11:r11_273,r2:r2_260,r3:r3_255,r4:r4_292,r5:r5_269,r6:r6_271,r7:r7_285,r8:r8_280,r9:r9_289,sp:sp_254 - 0x00000008
		defs: ap:ap_276,fp:fp_278,r0:r0_284,r1:r1_295,r10:r10_288,r11:r11_274,r2:r2_282,r3:r3_279,r4:r4_293,r5:r5_291,r6:r6_272,r7:r7_286,r8:r8_281,r9:r9_290,sp:sp_270
	branch r0 == 0x00000000 l00017514
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017514:
	r2_217 = r2_217 + 0x00000004
	branch Mem265[r2_217 + 0x00000004:word32] != 0x00000000 l000174FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001750E:
	r6_206 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001751B:
	branch r6_206 == 0x00000000 l0001754B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001751F:
	word32 r2_317 = Mem316[r3 + 148:word32] - 0x00000004
	r2_217 = r2_317 + 0x00000004
	branch Mem316[r2_317 + 0x00000004:word32] == 0x00000000 l0001754B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001752C:
	word32 sp_324 = sp_204 - 0x00000004
	Mem328[sp_324:word32] = Mem326[r3 + 16:word32]
	Mem332[sp_324 - 0x00000004:word32] = Mem328[r2_217:word32]
	Mem335[sp_324 - 0x00000008:word32] = r3 + 0x0000C701
	call r5 + 2 (retsize: 4;)
		uses: ap:ap_345,fp:fp_347,r0:r0_353,r1:r1_364,r10:r10_357,r11:r11_343,r2:r2_330,r3:r3_325,r4:r4_362,r5:r5_339,r6:r6_341,r7:r7_355,r8:r8_350,r9:r9_359,sp:sp_324 - 0x00000008
		defs: ap:ap_346,fp:fp_348,r0:r0_354,r1:r1_365,r10:r10_358,r11:r11_344,r2:r2_352,r3:r3_349,r4:r4_363,r5:r5_361,r6:r6_342,r7:r7_356,r8:r8_351,r9:r9_360,sp:sp_340
	branch r0 == 0x00000000 l00017544
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017544:
	r2_217 = r2_217 + 0x00000004
	branch Mem335[r2_217 + 0x00000004:word32] != 0x00000000 l0001752C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001753E:
	r6_206 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001754B:
	branch Mem382[r3 + 108:word32] != 0x00000000 l00017554
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017550:
	branch r6_206 == 0x00000000 l000175C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017554:
	word32 sp_397 = sp_204 - 0x00000004
	Mem400[sp_397:word32] = r3 + 0x0000C701
	word32 r2_432
	word32 r4_462
	call Mem400[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:ap_413,fp:fp_418,r0:r0_434,r1:r1_464,r10:r10_444,r11:r11_408,r2:r2_429,r3:r3_381,r4:r4_459,r5:r5_454,r6:r6_387,r7:r7_439,r8:r8_424,r9:r9_449,sp:sp_397
		defs: ap:ap_416,fp:fp_421,r0:r0_437,r1:r1_467,r10:r10_447,r11:r11_411,r2:r2_432,r3:r3_422,r4:r4_462,r5:r5_457,r6:r6_406,r7:r7_442,r8:r8_427,r9:r9_452,sp:sp_404
	r4 = SEQ(SLICE(r4_462, word24, 8), 0x00)
	branch r0 == 0x00000000 l0001759B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017567:
	r0 = r0 - 0x00000001
	word32 r2_479 = SEQ(SLICE(r2_432, word24, 8), Mem400[r3 + 0x0000C701 + (r0 - 0x00000001):byte])
	branch (byte) r2_479 == 0x2F l00017599
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017576:
	r0 = Mem400[r3 + 1511:word32]
	branch Mem400[r0 + 12:word32] != 0x00000000 l0001759B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017580:
	Mem489[sp_204 - 0x00000004:word32] = 0x0000002F
	Mem492[sp_204 - 0x00000008:word32] = r3 + 0x0000C701
	word32 r2_503
	call Mem492[0x00019260:word32] + 2 (retsize: 4;)
		uses: ap:ap_416,fp:fp_421,r0:r0_483,r1:r1_467,r10:r10_447,r11:r11_411,r2:r2_479,r3:r3_422,r4:r4_471,r5:r5_457,r6:r6_406,r7:r7_442,r8:r8_427,r9:r9_452,sp:sp_404 - 0x00000008
		defs: ap:ap_499,fp:fp_500,r0:r0_504,r1:r1_510,r10:r10_506,r11:r11_498,r2:r2_503,r3:r3_501,r4:r4_509,r5:r5_508,r6:r6_497,r7:r7_505,r8:r8_502,r9:r9_507,sp:sp_496
	branch r0 != 0x00000000 l0001759B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017593:
	branch (byte) r2_503 != 0x5C l0001759B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017599:
	r4 = SEQ(SLICE(r4, word24, 8), (byte) r4 + 0x01)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001759B:
	r2_217 = (int32) (int8) r4
	branch r2_217 != 0x00000000 l000175C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000175A0:
	word32 sp_531 = sp_204 - 0x00000004
	Mem537[sp_531:uint32] = (uint32) Mem534[r3 + 0x0000C660:word16]
	Mem540[sp_531 - 0x00000004:uint32] = (uint32) Mem537[r3 + 0x0000C662:word16]
	r0 = fn0000BC8A(r0, r1, r2_217, r4, r5, r9, ap, fp, out r1, out r3, out r4, out r5, out r6_206, out r7_221, out r8_215, out r9, out ap, out fp)
	sp_204 = sp_531 - 0x00000004
	r2_217 = Mem540[ap + 4:word32]
	branch Mem540[r2_217:word32] >=u r0 l000175C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000175BE:
	Mem577[r2_217:word32] = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000175C1:
	Mem584[Mem582[ap + 8:word32]:word32] = Mem582[ap + 8:word32] + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000175C4:
	branch Mem588[r3 + 0x0000C674:word16] == 0x0000 l000175E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000175CC:
	word32 sp_595 = sp_204 - 0x00000004
	Mem596[sp_595:word32] = 0x00000000
	Mem599[sp_595 - 0x00000004:uint32] = (uint32) Mem596[r3 + 0x0000C674:word16]
	call r9 + 2 (retsize: 4;)
		uses: ap:ap_616,fp:fp_618,r0:r0_630,r1:r1_650,r10:r10_638,r11:r11_611,r2:r2_627,r3:r3_586,r4:r4_647,r5:r5_644,r6:r6_606,r7:r7_633,r8:r8_622,r9:r9_603,sp:sp_595 - 0x00000004
		defs: ap:ap_617,fp:fp_620,r0:r0_632,r1:r1_652,r10:r10_642,r11:r11_615,r3:r3_621,r4:r4_649,r5:r5_646,r6:r6_610,r8:r8_626,r9:r9_643,sp:sp_605
	branch r0 == 0x00000000 l000175E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000175DC:
	r11_208 = r0
	branch r0 <= 0x00000001 l000175E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000175E5:
	r8_16 = r8_215 + 0x00000001
	branch r8_16 >=u (uint32) Mem665[r3 + 0x0000C688:word16] l000175F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000175F3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000175E4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000174E6:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000174B2:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017499:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017440:
	Mem684[sp_70 - 0x00000004:uint32] = 0x00000401
	Mem686[sp_70 - 0x00000008:word32] = r8_78
	Mem688[sp_70 - 0x0000000C:word32] = r7_81
	Mem691[sp_70 - 0x00000010:word32] = r3_76 + 1515
	word32 sp_695
	word32 r6_696
	word32 r11_697
	word32 ap_698
	word32 fp_699
	word32 r3_700
	word32 r8_701
	word32 r0_703
	word32 r7_704
	word32 r10_705
	word32 r9_706
	word32 r5_707
	word32 r4_708
	word32 r1_709
	call Mem691[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_74,fp:fp_75,r0:r0_80,r1:r1_93,r10:r10_83,r11:r11_73,r2:r2_79,r3:r3_76,r4:r4_87,r5:r5_86,r6:r6_71,r7:r7_81,r8:r8_78,r9:r9_85,sp:sp_70 - 0x00000010
		defs: ap:ap_698,fp:fp_699,r0:r0_703,r1:r1_709,r10:r10_705,r11:r11_697,r3:r3_700,r4:r4_708,r5:r5_707,r6:r6_696,r7:r7_704,r8:r8_701,r9:r9_706,sp:sp_695
	Mem712[sp_695 - 0x00000004:word32] = r0_703
	Mem715[sp_695 - 0x00000008:word32] = r3_700 + 1515
	Mem717[sp_695 - 0x0000000C:word32] = r3_700
	word32 r2_718 = Mem717[r3_700 + 0x0000C839:word32]
	word32 sp_722
	word32 r6_723
	word32 r11_724
	word32 ap_725
	word32 fp_726
	word32 r3_727
	word32 r8_728
	word32 r2_729
	word32 r0_730
	word32 r7_731
	word32 r10_732
	word32 r9_733
	word32 r5_734
	word32 r4_735
	word32 r1_736
	call r2_718 + 2 (retsize: 4;)
		uses: ap:ap_698,fp:fp_699,r0:r0_703,r1:r1_709,r10:r10_705,r11:r11_697,r2:r2_718,r3:r3_700,r4:r4_708,r5:r5_707,r6:r6_696,r7:r7_704,r8:r8_701,r9:r9_706,sp:sp_695 - 0x0000000C
		defs: ap:ap_725,fp:fp_726,r0:r0_730,r1:r1_736,r10:r10_732,r11:r11_724,r2:r2_729,r3:r3_727,r4:r4_735,r5:r5_734,r6:r6_723,r7:r7_731,r8:r8_728,r9:r9_733,sp:sp_722
	Mem740[sp_722 - 0x00000004:uint32] = 0x00000401
	Mem742[sp_722 - 0x00000008:word32] = r10_732
	Mem745[sp_722 - 0x0000000C:word32] = r3_727 + 1515
	word32 sp_749
	word32 r6_750
	word32 r11_751
	word32 ap_752
	word32 fp_753
	word32 r3_754
	word32 r8_755
	word32 r0_757
	word32 r7_758
	word32 r10_759
	word32 r9_760
	word32 r5_761
	word32 r4_762
	word32 r1_763
	call Mem745[0x000192D0:word32] + 2 (retsize: 4;)
		uses: ap:ap_725,fp:fp_726,r0:r0_730,r1:r1_736,r10:r10_732,r11:r11_724,r2:r2_729,r3:r3_727,r4:r4_735,r5:r5_734,r6:r6_723,r7:r7_731,r8:r8_728,r9:r9_733,sp:sp_722 - 0x0000000C
		defs: ap:ap_752,fp:fp_753,r0:r0_757,r1:r1_763,r10:r10_759,r11:r11_751,r3:r3_754,r4:r4_762,r5:r5_761,r6:r6_750,r7:r7_758,r8:r8_755,r9:r9_760,sp:sp_749
	Mem766[sp_749 - 0x00000004:word32] = r0_757
	Mem769[sp_749 - 0x00000008:word32] = r3_754 + 1515
	Mem771[sp_749 - 0x0000000C:word32] = r3_754
	word32 r2_772 = Mem771[r3_754 + 0x0000C839:word32]
	call r2_772 + 2 (retsize: 4;)
		uses: ap:ap_752,fp:fp_753,r0:r0_757,r1:r1_763,r10:r10_759,r11:r11_751,r2:r2_772,r3:r3_754,r4:r4_762,r5:r5_761,r6:r6_750,r7:r7_758,r8:r8_755,r9:r9_760,sp:sp_749 - 0x0000000C
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017425:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017400:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000175F6:
	word32 sp_808 = sp_204 - 0x00000004
	Mem809[sp_808:word32] = 0x00000004
	Mem813[sp_808 - 0x00000004:word32] = r3 + 152
	word32 ap_831
	word32 fp_832
	word32 r2_834
	word32 r3_835
	word32 r4_836
	word32 r5_837
	word32 r6_838
	word32 r7_839
	word32 sp_840
	word32 r0_833 = fn0000D5BE(r0, r3, r4, r5, r6_206, ap, fp, out r2_834, out r3_835, out r4_836, out r5_837, out r6_838, out r7_839, out ap_831, out fp_832, out sp_840)
	branch r0_833 != 0x00000000 l0001760B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001760B:
	Mem850[sp_840 - 0x00000004:word32] = 0x00000004
	Mem853[sp_840 - 0x00000008:word32] = r3_835 + 0x0000C639
	Mem856[sp_840 - 0x0000000C:word32] = r3_835 + 152
	word32 sp_860
	word32 r11_864
	word32 ap_865
	word32 r0_871
	call Mem856[0x000192D8:word32] + 2 (retsize: 4;)
		uses: ap:ap_831,fp:fp_832,r0:r0_833,r1:r1_883,r10:r10_873,r11:r11_862,r2:r2_834,r3:r3_835,r4:r4_836,r5:r5_837,r6:r6_838,r7:r7_839,r8:r8_868,r9:r9_877,sp:sp_840 - 0x0000000C
		defs: ap:ap_865,r0:r0_871,r11:r11_864,sp:sp_860
	branch r0_871 == 0x00000000 l0001764D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001764D:
	branch Mem856[Mem856[ap_865 + 8:word32]:word32] != 0x00000000 l0001765A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017652:
	branch r11_864 > 0x00000001 l0001765A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017657:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001765A:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017622:
	Mem915[sp_860 - 0x00000004:uint32] = 0x00000401
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017607:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000173CA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00017662(word32 ap, word32 fp, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31]
// LiveOut: r0 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn00017662_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017662:
	branch Mem0[ap + 4:word32] != 0x00000000 l0001766D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001766D:
	word32 r4_10 = Mem0[ap + 4:word32]
	branch r4_10 >u 0x001E8480 l0001767D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001767D:
	word32 r1_14 = 0x00000000
	branch true l00017694
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017694:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001768B:
	branch r4_10 <u 0x000003E8 l00017699
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017690:
	r1_14 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017699:
	word32 r5_51
	word32 r3_30 = Mem0[ap + 8:word32]
	branch r4_10 <u r3_30 l000176D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176D0:
	word32 r3_37 = r3_30 - r4_10 + (uint32) SLICE(r1_14, ui31, 1)
	word32 r1_38 = 0x00000000
	branch r1_14 >= 0x00000000 l000176F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176F0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176E5:
	branch r1_14 >u r3_37 l000176F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176EA:
	r1_38 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176F5:
	r5_51 = -r1_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176A5:
	word32 r2_55 = r4_10 - r3_30 + (uint32) SLICE(r1_14, ui31, 1)
	word32 r1_56 = 0x00000000
	branch r1_14 >= 0x00000000 l000176C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176C4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176BB:
	branch r1_14 >u r2_55 l000176C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176C0:
	r1_56 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176C9:
	r5_51 = r1_56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176F8:
	spOut = <invalid>
	return r5_51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001767A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000176FC:
	word32 r5_111
	word32 r3_90 = Mem0[ap + 8:word32]
	branch r4_10 <u r3_90 l0001773C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001773C:
	word32 r3_97 = (r3_90 - r4_10) * 0x000003E8 + (uint32) SLICE(r4_10, ui31, 1)
	word32 r1_108 = 0x00000000
	branch r4_10 >= 0x00000000 l00017764
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017764:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017758:
	branch r4_10 >u r3_97 l00017769
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001775D:
	r1_108 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017769:
	r5_111 = -r1_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017708:
	word32 r2_116 = (r4_10 - r3_90) * 0x000003E8 + (uint32) SLICE(r4_10, ui31, 1)
	word32 r1_117 = 0x00000000
	branch r4_10 >= 0x00000000 l00017730
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017730:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017725:
	branch r4_10 >u r2_116 l00017735
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001772A:
	r1_117 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017735:
	r5_111 = r1_117
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001776C:
	spOut = <invalid>
	return r5_111
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001766A:
	spOut = <invalid>
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00017662_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00017772(word32 r2, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r2:[0..31]
// LiveOut: ap fp r0 r2 r3 sp
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn00017772_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017772:
	word32 fp_17
	word32 r2_19
	word32 r3_20
	word32 sp_21
	word32 r0_18 = fn00010892(ap, fp, out r2_19, out r3_20, out ap_92, out fp_17, out sp_21)
	Mem28[sp_21 - 0x00000004:word32] = 0x00000000
	Mem30[sp_21 - 0x00000008:word32] = r0_18
	word32 sp_34
	word32 r2_35
	word32 r0_36
	word32 ap_37
	word32 r3_38
	word32 fp_39
	call Mem30[0x000192C4:word32] + 2 (retsize: 4;)
		uses: ap:r0_18,fp:fp_17,r0:r0_18,r2:r2_19,r3:r3_20,sp:sp_21 - 0x00000008,Stack +FFFFFFF8:r2 + 0x0000C701,Stack +FFFFFFFC:r2 + 1515
		defs: ap:ap_37,fp:fp_39,r0:r0_36,r2:r2_35,r3:r3_38,sp:sp_34
	Mem42[sp_34 - 0x00000004:word32] = r0_36
	Mem44[sp_34 - 0x00000008:word32] = ap_37
	Mem46[sp_34 - 0x0000000C:word32] = r2_35
	word32 ap_47 = Mem46[r2_35 + 0x0000C839:word32]
	word32 sp_51
	word32 r2_52
	word32 r0_53
	word32 r3_55
	word32 fp_56
	call ap_47 + 2 (retsize: 4;)
		uses: ap:ap_47,fp:fp_39,r0:r0_36,r2:r2_35,r3:r3_38,sp:sp_34 - 0x0000000C,Stack +FFFFFFF8:r2 + 0x0000C701,Stack +FFFFFFFC:r2 + 1515
		defs: fp:fp_56,r0:r0_53,r2:r2_52,r3:r3_55,sp:sp_51
	Mem59[sp_51 - 0x00000004:word32] = 0x00000000
	Mem61[sp_51 - 0x00000008:word32] = 0x00000001
	Mem64[sp_51 - 0x0000000C:word32] = r3_55 + 18
	Mem66[sp_51 - 0x00000010:word32] = r2_52
	word32 ap_67 = Mem66[r2_52 + 0x0000C839:word32]
	word32 r2_72
	word32 r0_73
	word32 r3_75
	word32 fp_76
	call ap_67 + 2 (retsize: 4;)
		uses: ap:ap_67,fp:fp_56,r0:r0_53,r2:r2_52,r3:r3_55,sp:sp_51 - 0x00000010,Stack +FFFFFFF8:r2 + 0x0000C701,Stack +FFFFFFFC:r2 + 1515
		defs: fp:fp_76,r0:r0_73,r2:r2_72,r3:r3_75
	word32 fp_79 = Mem66[fp_76 + 0x0000000C:word32]
	word32 ap_80 = Mem66[fp_76 + 0x00000008:word32]
	r2Out = r2_72
	r3Out = r3_75
	apOut = ap_80
	fpOut = fp_79
	spOut = fp_76 - 0x00000004
	return r0_73
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00017772_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000177CA()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn000177CA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000177CA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000177CA:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00017C2E()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn00017C2E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00017C2E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017C2E:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00017DEE(word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r10:[0..31] r11:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: CVZN ap fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
l00017F44:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017F46:
	word32 fp_367 = Mem0[fp + 0x0000000C:word32]
	r2Out = r2 + 0x00000001
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	fpOut = fp_367
	return r2 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00017DEE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017DEE:
	word32 sp_264 = fp + -1160
	branch Mem0[r3 + 0x0000C81D:word32] == 0x00000000 l00017E0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E0C:
	word32 r0_10 = 0x00000000
	word32 r2_12 = fp + -1156
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E14:
	Mem18[r2_12:word32] = 0x00000008
	r2_12 = r2_12 + 0x00000004
	r0_10 = r0_10 + 0x00000001
	branch r0_10 <= 0x0000008F l00017E14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E22:
	branch r0_10 >= 0x00000100 l00017E3D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E2B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E2C:
	Mem28[fp + -1156:word32] = 0x00000009
	r0_10 = r0_10 + 0x00000001
	branch r0_10 < 0x00000100 l00017E2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E3D:
	branch r0_10 >= 0x00000118 l00017E59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E46:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E48:
	Mem43[fp + -1156:word32] = 0x00000007
	r0_10 = r0_10 + 0x00000001
	branch r0_10 < 0x00000118 l00017E48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E59:
	branch r0_10 >= 0x00000120 l00017E75
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E62:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E64:
	Mem58[fp + -1156:word32] = 0x00000008
	r0_10 = r0_10 + 0x00000001
	branch r0_10 < 0x00000120 l00017E64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E75:
	Mem72[r3 + 0x0000C825:word32] = 0x00000007
	word32 ap_181
	word32 fp_182
	word32 r10_184
	word32 r11_185
	word32 r2_186
	word32 r3_187
	word32 r4_188
	word32 r5_189
	word32 r6_190
	word32 r7_191
	word32 r8_192
	word32 r9_193
	word32 sp_194
	word32 r0_183 = fn0001878E(r0_10, r4, r5, r6, r7, r8, r9, r10, r11, ap, fp, out r2_186, out r3_187, out r4_188, out r5_189, out r6_190, out r7_191, out r8_192, out r9_193, out r10_184, out r11_185, out ap_181, out fp_182, out sp_194)
	branch r0_183 == 0x00000000 l00017EAF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017EAF:
	word32 r0_203 = 0x00000000
	word32 r2_204 = fp_182 + 0xFFFFFB7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017EB8:
	Mem210[r2_204:word32] = 0x00000005
	r2_204 = r2_204 + 0x00000004
	r0_203 = r0_203 + 0x00000001
	branch r0_203 <= 0x0000001D l00017EB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017EC2:
	Mem217[r3_187 + 0x0000C829:word32] = 0x00000005
	Mem221[sp_194 - 0x00000004:word32] = r3_187 + 0x0000C829
	Mem224[sp_194 - 0x00000008:word32] = r3_187 + 0x0000C821
	Mem228[sp_194 - 0x0000000C:word32] = r5_189 + 260
	Mem231[sp_194 - 0x00000010:word32] = r5_189 + 200
	Mem233[sp_194 - 0x00000014:word32] = 0x00000000
	Mem235[sp_194 - 0x00000018:word32] = 0x0000001E
	Mem239[sp_194 - 0x0000001C:word32] = fp_182 + -1156
	word32 r2_256
	word32 r5_259
	word32 r11_255
	word32 r10_254
	word32 r9_263
	word32 r8_262
	word32 r7_261
	word32 fp_252
	word32 r0_253 = fn0001878E(r0_203, r4_188, r5_189, r6_190, r7_191, r8_192, r9_193, r10_184, r11_185, ap_181, fp_182, out r2_256, out r3, out r4_431, out r5_259, out r6_432, out r7_261, out r8_262, out r9_263, out r10_254, out r11_255, out ap_433, out fp_252, out sp_264)
	word32 r6_269 = r0_253
	branch r0_253 <= 0x00000001 l00017F1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017EF4:
	word32 r4_273 = Mem239[r3 + 0x0000C81D:word32]
	word32 ap_274 = r4_273
	branch r4_273 == 0x00000000 l00017F15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017F00:
	word32 ap_280 = ap_274 - 0x00000006
	word32 r2_282 = Mem281[ap_280 + 2:word32]
	word32 sp_284 = sp_264 - 0x00000004
	Mem285[sp_284:word32] = ap_280
	call Mem285[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_280,fp:fp_294,r0:r0_292,r10:r10_306,r11:r11_304,r2:r2_282,r3:r3_290,r4:r4_302,r5:r5_297,r6:r6_300,r7:r7_312,r8:r8_310,r9:r9_308,sp:sp_284,Stack +FFFFFB60:fp + -1156,Stack +FFFFFB64:0x00000120,Stack +FFFFFB68:0x00000101,Stack +FFFFFB6C:r5 + 76,Stack +FFFFFB70:r5 + 138,Stack +FFFFFB74:r3 + 0x0000C81D,Stack +FFFFFB78:r3 + 0x0000C825
		defs: fp:fp_295,r0:r0_293,r10:r10_307,r11:r11_305,r2:r2_296,r3:r3_291,r4:r4_303,r5:r5_298,r6:r6_301,r7:r7_313,r8:r8_311,r9:r9_309,sp:sp_289
	ap_274 = r2_256
	branch r2_256 != 0x00000000 l00017F00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017F15:
	Mem322[r3 + 0x0000C81D:word32] = 0x00000000
	word32 fp_330 = Mem322[fp_252 + 0x0000000C:word32]
	r2Out = r2_256
	r3Out = r3
	r4Out = r4_273
	r5Out = r5_259
	r6Out = r6_269
	r7Out = r7_261
	r8Out = r8_262
	r9Out = r9_263
	r10Out = r10_254
	r11Out = r11_255
	fpOut = fp_330
	return r6_269
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017EA8:
	Mem333[r3_187 + 0x0000C81D:word32] = 0x00000000
	word32 fp_339 = Mem333[fp_182 + 0x0000000C:word32]
	r2Out = r2_186
	r3Out = r3_187
	r4Out = r4_188
	r5Out = r5_189
	r6Out = r6_190
	r7Out = r7_191
	r8Out = r8_192
	r9Out = r9_193
	r10Out = r10_184
	r11Out = r11_185
	fpOut = fp_339
	return r0_183
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00017DEE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017E09:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017F1F:
	word32 sp_342 = sp_264 - 0x00000004
	Mem346[sp_342:word32] = Mem344[r3 + 0x0000C829:word32]
	Mem349[sp_342 - 0x00000004:word32] = Mem346[r3 + 0x0000C825:word32]
	Mem352[sp_342 - 0x00000008:word32] = Mem349[r3 + 0x0000C821:word32]
	Mem355[sp_342 - 0x0000000C:word32] = Mem352[r3 + 0x0000C81D:word32]
	fn000177CA()
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00017F4E(word32 r0, word32 r1, word32 r4, word32 r5, word32 r6, word32 r9, word32 r10, word32 r11, word32 ap, word32 fp, word32 pc, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & fpOut, ptr32 & pcOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r9:[0..31]
// LiveOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: CVZN ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00017F4E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017F4E:
	word32 sp_103 = fp + -1344
	word32 r3_22 = Mem0[r5 + 0x0000C831:word32]
	word32 r2_21 = Mem0[r5 + 0x0000C835:word32]
	branch r2_21 >=u 0x00000005 l00017FB9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017F74:
	word32 v10_13 = Mem12[r5 + 0x0000C5FB:word32] - 0x00000001
	Mem14[r5 + 0x0000C5FB:word32] = v10_13
	branch v10_13 < 0x00000000 l00017F90
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017F90:
	r0 = fn0000D69A(r0, r1, r2_21, r3_22, r4, r5, r6, ap, fp, pc, out r1, out r2_21, out r3_22, out r4_740, out r5, out r6_741, out ap, out fp, out sp_103, out pc)
	r6 = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017F7C:
	word32 r4_45 = Mem14[r5 + 0x0000C5F7:word32]
	Mem47[r5 + 0x0000C5F7:word32] = Mem14[r5 + 0x0000C5F7:word32] + 0x00000001
	r6 = (uint32) Mem47[r4_45:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017F9A:
	branch r6 != 0xFFFFFFFF l00017FAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017FAA:
	r4 = __ashift(r6, r2_21)
	r3_22 = r3_22 | r4
	r2_21 = r2_21 + 0x00000008
	branch r2_21 <u 0x00000005 l00017F74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017FB9:
	word32 r4_125 = r3_22 & ~0xFFFFFFE0
	Mem71[sp_103 + 32:word32] = r4_125 + 0x00000101
	word32 r3_126 = (uint32) SLICE(r3_22, ui27, 5)
	word32 r2_124 = r2_21 - 0x00000005
	branch r2_124 >=u 0x00000005 l0001801D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017FD7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017FD8:
	word32 v17_80 = Mem79[r5 + 0x0000C5FB:word32] - 0x00000001
	Mem81[r5 + 0x0000C5FB:word32] = v17_80
	branch v17_80 < 0x00000000 l00017FF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017FF4:
	r0 = fn0000D69A(r0, r1, r2_124, r3_126, r4_125, r5, r6, ap, fp, pc, out r1, out r2_124, out r3_126, out r4_742, out r5, out r6_743, out ap, out fp, out sp_103, out pc)
	r6 = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017FE0:
	word32 r4_112 = Mem81[r5 + 0x0000C5F7:word32]
	Mem114[r5 + 0x0000C5F7:word32] = Mem81[r5 + 0x0000C5F7:word32] + 0x00000001
	r6 = (uint32) Mem114[r4_112:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017FFE:
	branch r6 != 0xFFFFFFFF l0001800E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001800E:
	r4_125 = __ashift(r6, r2_124)
	r3_126 = r3_126 | r4_125
	r2_124 = r2_124 + 0x00000008
	branch r2_124 <u 0x00000005 l00017FD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001801D:
	word32 r4_133 = r3_126 & ~0xFFFFFFE0
	Mem138[sp_103 + 28:word32] = r4_133 + 0x00000001
	word32 r3_139 = (uint32) SLICE(r3_126, ui27, 5)
	word32 r2_141 = r2_124 - 0x00000005
	branch r2_141 >=u 0x00000004 l0001807D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018037:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018038:
	word32 v25_147 = Mem146[r5 + 0x0000C5FB:word32] - 0x00000001
	Mem148[r5 + 0x0000C5FB:word32] = v25_147
	branch v25_147 < 0x00000000 l00018054
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018054:
	r0 = fn0000D69A(r0, r1, r2_141, r3_139, r4_133, r5, r6, ap, fp, pc, out r1, out r2_141, out r3_139, out r4_744, out r5, out r6_745, out ap, out fp, out sp_103, out pc)
	r6 = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018040:
	word32 r4_179 = Mem148[r5 + 0x0000C5F7:word32]
	Mem181[r5 + 0x0000C5F7:word32] = Mem148[r5 + 0x0000C5F7:word32] + 0x00000001
	r6 = (uint32) Mem181[r4_179:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001805E:
	branch r6 != 0xFFFFFFFF l0001806E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001806E:
	r4_133 = __ashift(r6, r2_141)
	r3_139 = r3_139 | r4_133
	r2_141 = r2_141 + 0x00000008
	branch r2_141 <u 0x00000004 l00018038
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001807D:
	word32 r8_200 = r3_139 & ~0xFFFFFFF0
	word32 r8_201 = r8_200 + 0x00000004
	word32 r3_202 = (uint32) SLICE(r3_139, ui28, 4)
	word32 r2_204 = r2_141 - 0x00000004
	branch Mem208[sp_103 + 32:word32] >u 0x00000120 l000180A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001809A:
	branch Mem208[sp_103 + 28:word32] <=u 0x00000020 l000180A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180A4:
	word32 r7_216 = 0x00000000
	branch r8_200 == 0x00000004 l0001811B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180AA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180B4:
	branch r2_204 >=u 0x00000003 l000180FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180B9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180BC:
	word32 v30_241 = Mem240[r5 + 0x0000C5FB:word32] - 0x00000001
	Mem242[r5 + 0x0000C5FB:word32] = v30_241
	branch v30_241 < 0x00000000 l000180D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180D8:
	call r6 + 2 (retsize: 4;)
		uses: ap:ap_260,fp:fp_258,pc:pc_270,r0:r0_256,r1:r1_272,r10:r10_268,r11:r11_266,r2:r2_251,r3:r3_249,r4:r4_253,r5:r5_239,r6:r6_245,r7:r7_264,r8:r8_262,r9:r9,sp:sp_246
		defs: fp:fp_259,pc:pc_271,r0:r0_257,r1:r1_273,r10:r10_269,r11:r11_267,r2:r2_252,r3:r3_250,r5:r5_248,r6:r6_255,r7:r7_265,r8:r8_263,sp:sp_247
	r4_133 = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180C4:
	word32 ap_279 = Mem242[r5 + 0x0000C5F7:word32]
	Mem281[r5 + 0x0000C5F7:word32] = Mem242[r5 + 0x0000C5F7:word32] + 0x00000001
	r4_133 = (uint32) Mem281[ap_279:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180DE:
	branch r4_133 != 0xFFFFFFFF l000180EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180EE:
	ap = __ashift(r4_133, r2_204)
	r3_202 = r3_202 | ap
	r2_204 = r2_204 + 0x00000008
	branch r2_204 <u 0x00000003 l000180BC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180FD:
	r4_133 = Mem305[r11 + r7_216 * 4:word32]
	Mem315[fp + -1300:word32] = r3_202 & ~0xFFFFFFF8
	r3_202 = (uint32) SLICE(r3_202, ui29, 3)
	r2_204 = r2_204 - 0x00000003
	r7_216 = r7_216 + 0x00000001
	branch r7_216 <u r8_201 l000180B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001811B:
	branch r7_216 >=u 0x00000013 l00018130
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018120:
	r4_133 = Mem332[r11 + r7_216 * 4:word32]
	Mem336[fp + -1300:word32] = 0x00000000
	r7_216 = r7_216 + 0x00000001
	branch r7_216 <u 0x00000013 l00018120
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018130:
	Mem351[fp + -16:word32] = 0x00000007
	word32 sp_358 = sp_103 - 0x00000004
	Mem360[sp_358:word32] = fp + -16
	Mem363[sp_358 - 0x00000004:word32] = fp + -8
	Mem366[sp_358 - 0x0000000C:word64] = 0x0000000000000000
	Mem368[sp_358 - 0x00000010:word32] = 0x00000013
	Mem370[sp_358 - 0x00000014:word32] = 0x00000013
	Mem373[sp_358 - 0x00000018:word32] = fp + -1300
	word32 r4_475
	word32 sp_481
	word32 r5_476
	word32 r3_474
	word32 r2_473
	word32 r6_477
	word32 r7_478
	word32 r11_472
	word32 r10_471
	word32 r9_480
	word32 fp_469
	word32 r0_470 = fn0001878E(r0, r4_133, r5, r6, r7_216, r8_201, r9, r10, r11, ap, fp, out r2_473, out r3_474, out r4_475, out r5_476, out r6_477, out r7_478, out r8_746, out r9_480, out r10_471, out r11_472, out ap_747, out fp_469, out sp_481)
	word32 r8_486 = r0_470
	branch Mem373[fp_469 + -16:word32] != 0x00000000 l00018156
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018153:
	r8_486 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018156:
	branch r8_486 == 0x00000000 l00018181
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018181:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001815A:
	branch r8_486 != 0x00000001 l0001817D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001815F:
	r6_477 = Mem373[fp_469 + -8:word32]
	word32 ap_512 = r6_477
	branch r6_477 == 0x00000000 l0001817D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018168:
	word32 ap_518 = ap_512 - 0x00000006
	word32 r4_520 = Mem519[ap_518 + 2:word32]
	word32 sp_522 = sp_481 - 0x00000004
	Mem523[sp_522:word32] = ap_518
	call Mem523[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_518,fp:fp_539,pc:pc_550,r0:r0_537,r1:r1_552,r10:r10_548,r11:r11_546,r2:r2_532,r3:r3_530,r4:r4_520,r5:r5_528,r6:r6_535,r7:r7_544,r8:r8_542,r9:r9_554,sp:sp_522
		defs: fp:fp_540,pc:pc_551,r0:r0_538,r1:r1_553,r10:r10_549,r11:r11_547,r2:r2_533,r3:r3_531,r4:r4_534,r5:r5_529,r6:r6_536,r7:r7_545,r8:r8_543,r9:r9_555,sp:sp_527
	ap_512 = r4_475
	branch r4_475 != 0x00000000 l00018168
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001817D:
	word32 fp_570 = Mem569[fp_469 + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_473
	r3Out = r3_474
	r4Out = r4_475
	r5Out = r5_476
	r6Out = r6_477
	r7Out = r7_478
	r8Out = r8_486
	r9Out = r9_480
	r10Out = r10_471
	r11Out = r11_472
	fpOut = fp_570
	pcOut = pc
	return r8_486
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180EA:
	word32 fp_577 = Mem306[fp + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_204
	r3Out = r3_202
	r4Out = r4_133
	r5Out = r5
	r6Out = r6
	r7Out = r7_216
	r8Out = r8_201
	r9Out = r9
	r10Out = r10
	r11Out = r11
	fpOut = fp_577
	pcOut = pc
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000180A0:
	word32 fp_586 = Mem208[fp + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_204
	r3Out = r3_202
	r4Out = r4_133
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8_200 + 0x00000004
	r9Out = r9
	r10Out = r10
	r11Out = r11
	fpOut = fp_586
	pcOut = pc
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001806A:
	word32 fp_593 = Mem209[fp + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_141
	r3Out = r3_139
	r4Out = r6
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	fpOut = fp_593
	pcOut = pc
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001800A:
	word32 fp_601 = Mem600[fp + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_124
	r3Out = r3_126
	r4Out = r6
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	fpOut = fp_601
	pcOut = pc
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00017FA6:
	word32 fp_609 = Mem608[fp + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_21
	r3Out = r3_22
	r4Out = r6
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	fpOut = fp_609
	pcOut = pc
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00017F4E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn000185AE(word32 r0, word32 r1, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 ap, word32 fp, word32 pc, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut, ptr32 & pcOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000185AE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000185AE:
	word32 r3_21 = Mem0[r4 + 0x0000C831:word32]
	word32 r2_20 = Mem0[r4 + 0x0000C835:word32]
	branch r2_20 >=u 0x00000001 l00018611
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000185CB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000185CC:
	word32 v11_13 = Mem12[r4 + 0x0000C5FB:word32] - 0x00000001
	Mem14[r4 + 0x0000C5FB:word32] = v11_13
	branch v11_13 < 0x00000000 l000185E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000185E8:
	r5 = fn0000D69A(r0, r1, r2_20, r3_21, r4, r5, r6, ap, fp, pc, out r1, out r2_20, out r3_21, out r4, out r5_328, out r6, out ap, out fp, out sp_329, out pc)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000185D4:
	word32 r0_45 = Mem14[r4 + 0x0000C5F7:word32]
	Mem47[r4 + 0x0000C5F7:word32] = Mem14[r4 + 0x0000C5F7:word32] + 0x00000001
	r5 = (uint32) Mem47[r0_45:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000185F2:
	branch r5 != 0xFFFFFFFF l00018602
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018602:
	r0 = __ashift(r5, r2_20)
	r3_21 = r3_21 | r0
	r2_20 = r2_20 + 0x00000008
	branch r2_20 <u 0x00000001 l000185CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018611:
	Mem72[Mem70[ap + 4:word32]:word32] = r3_21 & ~0xFFFFFFFE
	word32 r3_105 = (uint32) SLICE(r3_21, ui31, 1)
	word32 r2_104 = r2_20 - 0x00000001
	branch r2_104 >=u 0x00000002 l0001866D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018626:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018628:
	word32 v18_86 = Mem85[r4 + 0x0000C5FB:word32] - 0x00000001
	Mem87[r4 + 0x0000C5FB:word32] = v18_86
	branch v18_86 < 0x00000000 l00018644
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018644:
	r5 = fn0000D69A(r0, r1, r2_104, r3_105, r4, r5, r6, ap, fp, pc, out r1, out r2_104, out r3_105, out r4, out r5_330, out r6, out ap, out fp, out sp_331, out pc)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018630:
	word32 r0_118 = Mem87[r4 + 0x0000C5F7:word32]
	Mem120[r4 + 0x0000C5F7:word32] = Mem87[r4 + 0x0000C5F7:word32] + 0x00000001
	r5 = (uint32) Mem120[r0_118:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001864E:
	branch r5 != 0xFFFFFFFF l0001865E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001865E:
	r0 = __ashift(r5, r2_104)
	r3_105 = r3_105 | r0
	r2_104 = r2_104 + 0x00000008
	branch r2_104 <u 0x00000002 l00018628
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001866D:
	word32 r3_140 = (uint32) SLICE(r3_105, ui30, 2)
	Mem148[r4 + 0x0000C831:word32] = r3_140
	word32 r2_142 = r2_104 - 0x00000002
	Mem150[r4 + 0x0000C835:word32] = r2_142
	word32 r6_139 = r3_105 & ~0xFFFFFFFC
	branch r6_139 != 0x00000002 l00018696
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018696:
	branch r6_139 != 0x00000000 l000186A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186A0:
	branch r6_139 != 0x00000001 l000186AB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186AB:
	word32 sp_169 = fp - 0x00000004
	word32 fp_170 = Mem150[sp_169 + 0x00000010:word32]
	word32 ap_171 = Mem150[sp_169 + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_142
	r3Out = r3_140
	r4Out = r4
	r5Out = r5
	r6Out = r6_139
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	apOut = ap_171
	fpOut = fp_170
	spOut = sp_169
	pcOut = pc
	return 2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186A5:
	word32 fp_213
	word32 r10_215
	word32 r11_216
	word32 r2_217
	word32 r3_218
	word32 r4_219
	word32 r5_220
	word32 r6_221
	word32 r7_222
	word32 r8_223
	word32 r9_224
	word32 r0_214 = fn00017DEE(r3_140, r4, r5, r6_139, r7, r8, r9, r10, r11, ap, fp, out r2_217, out r3_218, out r4_219, out r5_220, out r6_221, out r7_222, out r8_223, out r9_224, out r10_215, out r11_216, out fp_213)
	word32 fp_231 = Mem150[fp_213 + 0x0000000C:word32]
	word32 ap_232 = Mem150[fp_213 + 0x00000008:word32]
	r1Out = r1
	r2Out = r2_217
	r3Out = r3_218
	r4Out = r4_219
	r5Out = r5_220
	r6Out = r6_221
	r7Out = r7_222
	r8Out = r8_223
	r9Out = r9_224
	r10Out = r10_215
	r11Out = r11_216
	apOut = ap_232
	fpOut = fp_231
	spOut = fp_213 - 0x00000004
	pcOut = pc
	return r0_214
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001869A:
	fn00017C2E()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018690:
	word32 fp_245
	word32 r2_247
	word32 r3_248
	word32 r4_249
	word32 r8_250
	word32 r10_252
	word32 r11_253
	word32 r5_254
	word32 r6_255
	word32 r7_256
	word32 r9_257
	word32 pc_258
	word32 r1_259
	word32 r0_246 = fn00017F4E(r0, r1, r4, r5, r6_139, r9, r10, r11, ap, fp, pc, out r1_259, out r2_247, out r3_248, out r4_249, out r5_254, out r6_255, out r7_256, out r8_250, out r9_257, out r10_252, out r11_253, out fp_245, out pc_258)
	word32 fp_265 = Mem150[fp_245 + 0x0000000C:word32]
	word32 ap_266 = Mem150[fp_245 + 0x00000008:word32]
	r1Out = r1_259
	r2Out = r2_247
	r3Out = r3_248
	r4Out = r4_249
	r5Out = r5_254
	r6Out = r6_255
	r7Out = r7_256
	r8Out = r8_250
	r9Out = r9_257
	r10Out = r10_252
	r11Out = r11_253
	apOut = ap_266
	fpOut = fp_265
	spOut = fp_245 - 0x00000004
	pcOut = pc_258
	return r0_246
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001865A:
	word32 sp_271 = fp - 0x00000004
	word32 fp_273 = Mem272[sp_271 + 0x00000010:word32]
	word32 ap_274 = Mem272[sp_271 + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_104
	r3Out = r3_105
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	apOut = ap_274
	fpOut = fp_273
	spOut = sp_271
	pcOut = pc
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000185FE:
	word32 sp_279 = fp - 0x00000004
	word32 fp_280 = Mem71[sp_279 + 0x00000010:word32]
	word32 ap_281 = Mem71[sp_279 + 0x0000000C:word32]
	r1Out = r1
	r2Out = r2_20
	r3Out = r3_21
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	apOut = ap_281
	fpOut = fp_280
	spOut = sp_279
	pcOut = pc
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000185AE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000186B2(word32 r0, word32 r1, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000186B2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186B2:
	Mem6[r2 + 0x0000C82D:word32] = 0x00000000
	Mem8[r2 + 0x0000C831:word64] = 0x0000000000000000
	word32 sp_17 = fp - 0x00000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186CC:
	Mem16[r2 + 0x0000C819:word32] = 0x00000000
	Mem21[sp_17 - 0x00000004:word32] = fp + -8
	word32 r3_41
	r0 = fn000185AE(r0, r1, r4, r5, r6, r7, r8, r9, r10, r11, ap, fp, pc, out r1, out r2, out r3_41, out r4, out r5, out r6, out r7, out r8, out r9, out r10, out r11, out ap, out fp, out sp_17, out pc)
	branch r0 == 0x00000000 l000186DF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186DF:
	branch Mem21[r2 + 0x0000C819:word32] <=u r3_41 l000186EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186E8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186EF:
	branch Mem21[fp + -8:word32] == 0x00000000 l000186CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186F4:
	branch Mem21[r2 + 0x0000C6C5:word32] == 0x00000000 l00018710
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018710:
	Mem81[sp_17 - 0x00000004:word32] = 0x00000000
	Mem84[sp_17 - 0x00000008:word32] = Mem81[r2 + 0x0000C82D:word32]
	Mem87[sp_17 - 0x0000000C:word32] = r2 + 1515
	fn0000B072(r0, r1, r2, r4, r5, r6, ap, fp)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186FC:
	Mem113[sp_17 - 0x00000004:word32] = Mem21[r2 + 0x0000C82D:word32]
	Mem116[sp_17 - 0x00000008:word32] = r2 + 1515
	fn0001084A(r0, r2, ap, fp)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018723:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000186DE:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000186B2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0001872A(word32 r0, word32 r3, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp:[0..31] r0:[0..31] r3:[0..31]
// LiveOut: ap fp r0 r2 r3 r4 sp
// Trashed: CVZN ap fp r0 r2 r3 r4 sp
// Preserved:
fn0001872A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001872A:
	word32 sp_103 = fp - 0x0000000C
	branch Mem0[r3 + 0x0000C81D:word32] == 0x00000000 l00018787
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001873C:
	word32 r4_10 = Mem0[r3 + 0x0000C821:word32]
	word32 ap_11 = r4_10
	branch r4_10 == 0x00000000 l0001875D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018748:
	word32 ap_17 = ap_11 - 0x00000006
	word32 r2_19 = Mem18[ap_17 + 2:word32]
	word32 sp_21 = sp_103 - 0x00000004
	Mem22[sp_21:word32] = ap_17
	call Mem22[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_17,fp:fp_35,r0:r0_33,r2:r2_19,r3:r3_27,r4:r4_29,sp:sp_21
		defs: fp:fp_36,r0:r0_34,r2:r2_32,r3:r3_28,r4:r4_30,sp:sp_26
	ap_11 = r2
	branch r2 != 0x00000000 l00018748
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001875D:
	r4 = Mem44[r3 + 0x0000C81D:word32]
	word32 ap_46 = r4
	branch r4 == 0x00000000 l00018781
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018769:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001876C:
	word32 ap_57 = ap_46 - 0x00000006
	word32 r2_59 = Mem58[ap_57 + 2:word32]
	word32 sp_61 = sp_103 - 0x00000004
	Mem62[sp_61:word32] = ap_57
	call Mem62[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_57,fp:fp_75,r0:r0_73,r2:r2_59,r3:r3_67,r4:r4_69,sp:sp_61
		defs: fp:fp_76,r0:r0_74,r2:r2_72,r3:r3_68,r4:r4_70,sp:sp_66
	ap_46 = r2
	branch r2 != 0x00000000 l0001876C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018781:
	Mem85[r3 + 0x0000C81D:word64] = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018787:
	word32 sp_99 = fp - 0x00000004
	word32 fp_101 = Mem100[sp_99 + 0x00000010:word32]
	word32 ap_102 = Mem100[sp_99 + 0x0000000C:word32]
	r2Out = r2
	r3Out = r3
	r4Out = r4
	apOut = ap_102
	fpOut = fp_101
	spOut = sp_99
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0001872A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0001878E(word32 r0, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r10:[0..31] r11:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0001878E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001878E:
	word32 r3_12
	word32 r2_16 = fp + -140
	branch Mem7[ap + 8:word32] <=u 0x00000100 l000187B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000187B4:
	r3_12 = 0x00000010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000187A7:
	r2_16 = Mem7[ap + 4:word32]
	r3_12 = Mem7[r2_16 + 1024:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000187B7:
	word32 sp_37
	word32 fp_38
	word32 ap_42
	word32 r0_49
	word32 r10_52
	word32 r9_55
	word32 r5_58
	word32 r8_61
	word32 r6_64
	word32 r7_67
	word32 r4_70
	call Mem33[0x0001927C:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r10:r10,r11:r11,r2:r2_39,r3:r3_21,r4:r4,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9,sp:fp + 0xFFFFFA24,Stack +0004:fp + -72,Stack +0008:0x00000000,Stack +000C:0x00000044,Stack +002C:r3_21,Stack +0034:fp + 0xFFFFFF78
		defs: ap:ap_42,fp:fp_38,r0:r0_49,r10:r10_52,r4:r4_70,r5:r5_58,r6:r6_64,r7:r7_67,r8:r8_61,r9:r9_55,sp:sp_37
	word32 r2_72 = Mem33[ap_42 + 4:word32]
	word32 r11_73 = Mem33[ap_42 + 8:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000187D4:
	word32 r3_79 = Mem78[r2_72:word32]
	Mem82[fp_38 + -72:word32] = Mem78[fp_38 + -72:word32] + 0x00000001
	r2_72 = r2_72 + 0x00000004
	r11_73 = r11_73 - 0x00000001
	branch r11_73 != 0x00000000 l000187D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000187E2:
	branch Mem82[fp_38 + -72:word32] != Mem82[ap_42 + 8:word32] l000187F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000187F2:
	word32 r10_102 = 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000187F8:
	branch Mem82[fp_38 + -72 + r10_102 * 4:word32] != 0x00000000 l00018805
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000187FE:
	r10_102 = r10_102 + 0x00000001
	branch r10_102 <=u 0x00000010 l000187F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018805:
	word32 r2_111 = Mem82[ap_42 + 28:word32]
	branch Mem82[r2_111:word32] >=u r10_102 l00018814
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018811:
	Mem116[r2_111:word32] = r10_102
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018814:
	word32 r11_120 = 0x00000010
	branch 0x00000010 == 0x00000000 l00018826
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018819:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001881C:
	branch Mem828[fp_38 + -72 + r11_120 * 4:word32] != 0x00000000 l00018826
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018822:
	r11_120 = r11_120 - 0x00000001
	branch r11_120 != 0x00000000 l0001881C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018826:
	Mem150[sp_37 + 12:word32] = r11_120
	word32 r2_154 = Mem150[ap_42 + 28:word32]
	branch Mem150[r2_154:word32] <=u r11_120 l00018836
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018833:
	Mem159[r2_154:word32] = r11_120
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018836:
	word32 r10_177
	Mem169[sp_37 + 4:word32] = __ashift(0x00000001, r10_102)
	r10_177 = r10_102
	r10_177 = r10_102
	branch r10_102 >=u r11_120 l00018859
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018840:
	word32 v31_178 = Mem175[sp_37 + 4:word32] - Mem175[(fp_38 + -72) + r10_177 * 4:word32]
	Mem179[sp_37 + 4:word32] = v31_178
	branch v31_178 >= 0x00000000 l0001884C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001884C:
	Mem184[sp_37 + 4:word32] = Mem179[sp_37 + 4:word32] << 1
	r10_177 = r10_177 + 0x00000001
	branch r10_177 <u r11_120 l00018840
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018859:
	word32 v32_197 = Mem190[sp_37 + 4:word32] - Mem190[(fp_38 + -72) + r11_120 * 4:word32]
	Mem198[sp_37 + 4:word32] = v32_197
	branch v32_197 >= 0x00000000 l00018865
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018865:
	Mem202[fp_38 + -72:word32] = Mem198[fp_38 + -72:word32] + Mem198[sp_37 + 4:word32]
	Mem205[fp_38 + -1420:word32] = 0x00000000
	word32 r10_203 = 0x00000000
	word32 r2_207 = fp_38 + 0xFFFFFFBC
	word32 r5_209 = fp_38 + 0xFFFFFA78
	word32 r11_210 = r11_120 - 0x00000001
	branch r11_210 == 0x00000000 l00018892
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018886:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018888:
	r10_203 = r10_203 + Mem225[r2_207:word32]
	Mem229[r5_209:word32] = r10_203
	r2_207 = r2_207 + 0x00000004
	r5_209 = r5_209 + 0x00000004
	r11_210 = r11_210 - 0x00000001
	branch r11_210 != 0x00000000 l00018888
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018892:
	Mem239[sp_37 - 0x00000004:uint32] = 0x00000480
	Mem241[sp_37 - 0x00000008:word32] = 0x00000000
	Mem246[sp_37 - 0x0000000C:word32] = fp_38 + -1356
	word32 r4_328
	word32 r0_267
	word32 r9_1015
	word32 fp_251
	word32 sp_250
	word32 ap_259
	word32 r5_280
	word32 r3_262
	call Mem246[0x0001927C:word32] + 2 (retsize: 4;)
		uses: ap:ap_42,fp:fp_38,r0:r0_49,r10:r10_268,r11:r11_263,r2:r2_252,r3:fp_38 + -1424,r4:r4_70,r5:r5_279,r6:r6_64,r7:r7_67,r8:r8_61,r9:r10_106,sp:sp_37 - 0x0000000C,Stack +FFFFFA28:fp + -72,Stack +FFFFFA2C:0x00000000,Stack +FFFFFA30:0x00000044,Stack +FFFFFA50:r3_21,Stack +FFFFFA58:fp + 0xFFFFFF78
		defs: ap:ap_259,fp:fp_251,r0:r0_267,r3:r3_262,r4:r4_328,r5:r5_280,r9:r9_278,sp:sp_250
	word32 r2_330 = Mem246[ap_259 + 4:word32]
	word32 r11_331 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000188AC:
	r2_330 = r2_330 + 0x00000004
	word32 r10_340 = Mem339[r2_330:word32]
	branch r10_340 == 0x00000000 l000188C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000188B1:
	r3_262 = Mem339[fp_251 + -1424 + r10_340 * 4:word32]
	Mem348[fp_251 + -1424:word32] = Mem339[fp_251 + -1424:word32] + 0x00000001
	Mem351[fp_251 + -1356:word32] = r11_331
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000188C2:
	r11_331 = r11_331 + 0x00000001
	branch r11_331 <u Mem359[ap_259 + 8:word32] l000188AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000188CA:
	Mem366[sp_250 + 8:word32] = ap_259 + 8
	Mem370[Mem366[sp_250 + 8:word32]:word32] = Mem366[fp_251 + -1424 + Mem366[sp_250 + 12:word32] * 4:word32]
	Mem373[fp_251 + -1424:word32] = 0x00000000
	Mem376[sp_250 + 48:word32] = -0x00000001
	word32 r2_377 = Mem376[sp_250 + 36:word32]
	Mem379[r2_377 + -4:word32] = 0x00000000
	Mem382[fp_251 + -204:word32] = 0x00000000
	Mem385[sp_250 + 44:word32] = 0x00000000
	word32 r11_371 = 0x00000000
	word32 r8_1010 = fp_251 + -1356
	word32 r6_1002 = 0x00000000
	word32 r7_383 = 0x00000000
	branch r9_1015 <= Mem385[sp_250 + 12:word32] l00018904
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018904:
	Mem392[sp_250 + 40:word32] = ap_259 + 28
	Mem394[sp_250 + 0x00000018:word32] = Mem392[0x000192B4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018914:
	Mem403[sp_250 + 16:word32] = Mem400[fp_251 + -72 + r9_1015 * 4:word32]
	r2_377 = Mem403[sp_250 + 16:word32]
	Mem406[sp_250 + 16:word32] = Mem403[sp_250 + 16:word32] - 0x00000001
	branch r2_377 != 0x00000000 l00018928
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018928:
	branch r9_1015 > Mem406[Mem406[(sp_250 + 36) + Mem406[sp_250 + 48:word32] * 4:word32]:word32] l0001893A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001893A:
	Mem418[sp_250 + 32:word32] = Mem406[sp_250 + 16:word32] + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018940:
	word32 r4_434
	word32 r2_422 = Mem421[sp_250 + 48:word32]
	Mem424[sp_250 + 48:word32] = Mem421[sp_250 + 48:word32] + 0x00000001
	word32 r6_426 = r6_1002 + Mem424[Mem424[(sp_250 + 36) + r2_422 * 4:word32]:word32]
	Mem428[sp_250 + 44:word32] = Mem424[sp_250 + 12:word32] - r6_426
	word32 r3_430 = Mem428[sp_250 + 40:word32]
	branch Mem428[sp_250 + 44:word32] <=u Mem428[Mem428[r3_430:word32]:word32] l00018968
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018968:
	r4_434 = Mem428[sp_250 + 44:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018960:
	r4_434 = Mem428[Mem428[r3_430:word32]:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001896C:
	Mem445[sp_250 + 44:word32] = r4_434
	word32 r10_449 = r9_1015 - r6_426
	Mem452[sp_250 + 52:word32] = __ashift(0x00000001, r10_449)
	branch Mem452[sp_250 + 52:word32] <=u Mem452[sp_250 + 32:word32] l000189C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018986:
	Mem459[sp_250 + 52:word32] = Mem452[sp_250 + 52:word32] - (Mem452[sp_250 + 16:word32] + 0x00000001)
	r4_434 = fp_251 + -72
	r3_430 = (r9_1015 << 2) + r4_434
	r10_449 = r10_449 + 0x00000001
	branch r10_449 + 0x00000001 >=u Mem459[sp_250 + 44:word32] l000189C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000189A2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000189A4:
	Mem477[sp_250 + 52:word32] = Mem475[sp_250 + 52:word32] << 1
	r3_430 = r3_430 + 0x00000004
	branch Mem477[sp_250 + 52:word32] <=u Mem477[r3_430:word32] l000189C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000189B6:
	Mem485[sp_250 + 52:word32] = Mem477[sp_250 + 52:word32] - Mem477[r3_430:word32]
	r10_449 = r10_449 + 0x00000001
	branch r10_449 <u Mem485[sp_250 + 44:word32] l000189A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000189C2:
	branch r6_426 + r10_449 <=u Mem496[sp_250 + 28:word32] l000189D7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000189CC:
	branch r6_426 >=u Mem496[sp_250 + 28:word32] l000189D7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000189D2:
	r10_449 = Mem496[sp_250 + 28:word32] - r6_426
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000189D7:
	Mem508[sp_250 + 44:word32] = __ashift(0x00000001, r10_449)
	Mem511[Mem508[sp_250 + 36:word32]:word32] = r10_449
	word32 r2_512 = Mem511[sp_250 + 44:word32] + 0x00000001
	word32 sp_513 = sp_250 - 0x00000004
	Mem515[sp_513:word32] = r2_512 * 0x00000006
	word32 r3_532
	word32 r2_522
	word32 r10_543
	word32 r4_571
	call Mem515[sp_513 + 28:word32] + 2 (retsize: 4;)
		uses: ap:ap_526,fp:fp_461,r0:r0_470,r10:r10_505,r11:r11_536,r2:r2_512,r3:r3_530,r4:r4_569,r5:r5_551,r6:r6_426,r7:r7_565,r8:r8_557,r9:r9_447,sp:sp_513,Stack +FFFFFA28:fp + -72,Stack +FFFFFA2C:0x00000000,Stack +FFFFFA30:0x00000044,Stack +FFFFFA50:r3_21,Stack +FFFFFA58:fp + 0xFFFFFF78
		defs: ap:ap_528,fp:fp_521,r0:r0_542,r10:r10_543,r11:r11_538,r2:r2_522,r3:r3_532,r4:r4_571,r5:r5_553,r6:r6_561,r8:r8_559,r9:r9_547,sp:sp_517
	word32 r7_1006 = r0_267
	branch r0_267 != 0x00000000 l00018A21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018A21:
	Mem581[r2_522:word32] = Mem515[sp_250 + 44:word32] + 0x00000001 + 0x00007BE9
	Mem583[Mem581[ap_259 + 24:word32]:word32] = r0_267 + 0x00000006
	Mem585[ap_259 + 24:word32] = r0_267 + 2
	Mem587[Mem585[ap_259 + 24:word32]:word32] = 0x00000000
	word32 r2_589 = Mem587[sp_250 + 48:word32]
	Mem591[fp_251 + -204:word32] = r0_267 + 0x00000006
	r7_383 = r0_267 + 0x00000006
	branch r2_589 == 0x00000000 l00018AA3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018AA3:
	branch r9_1015 <= r6_1002 + Mem591[Mem591[(sp_250 + 36) + Mem591[sp_250 + 48:word32] * 4:word32]:word32] l00018AB5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018AB2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018A55:
	Mem602[fp_251 + -1424:word32] = r11_371
	Mem606[fp_251 + -1429:byte] = Mem602[Mem602[sp_250 + 36 + (Mem602[sp_250 + 48:word32] - 0x00000001) * 4:word32]:byte]
	Mem609[fp_251 + -1430:int8] = (int8) (r10_543 + 0x00000010)
	Mem611[fp_251 + -1428:word32] = r0_267 + 0x00000006
	__ashift(0x00000001, r6_1002)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000189F7:
	branch Mem515[sp_250 + 48:word32] == 0x00000000 l00018A1D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000189FC:
	r4_571 = Mem515[fp_251 + -204:word32]
	r2_522 = r4_571
	branch r4_571 == 0x00000000 l00018A1D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018A06:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018A08:
	word32 r2_635 = r2_522 - 0x00000006
	word32 r3_637 = Mem636[r2_635 + 2:word32]
	word32 sp_639 = sp_250 - 0x00000004
	Mem640[sp_639:word32] = r2_635
	call Mem640[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_648,fp:fp_645,r0:r0_653,r10:r10_655,r11:r11_651,r2:r2_635,r3:r3_637,r4:r4_667,r5:r5_659,r6:r6_663,r7:r7_665,r8:r8_661,r9:r9_657,sp:sp_639,Stack +FFFFFA28:fp + -72,Stack +FFFFFA2C:0x00000000,Stack +FFFFFA30:0x00000044,Stack +FFFFFA50:r3_21,Stack +FFFFFA58:fp + 0xFFFFFF78
		defs: ap:ap_649,fp:fp_646,r0:r0_654,r10:r10_656,r11:r11_652,r3:r3_650,r4:r4_668,r5:r5_660,r6:r6_664,r7:r7_666,r8:r8_662,r9:r9_658,sp:sp_644
	r2_522 = r3_532
	branch r3_532 != 0x00000000 l00018A08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018A1D:
	word32 sp_680 = fp_251 - 0x00000004
	word32 fp_682 = Mem681[sp_680 + 0x00000010:word32]
	word32 ap_683 = Mem681[sp_680 + 0x0000000C:word32]
	r2Out = r2_522
	r3Out = r3_532
	r4Out = r4_571
	r5Out = r5_280
	r6Out = r6_1002
	r7Out = r7_1006
	r8Out = r8_1010
	r9Out = r9_1015
	r10Out = r10_543
	r11Out = r11_371
	apOut = ap_683
	fpOut = fp_682
	spOut = sp_680
	return 0x00000003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018937:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018AB5:
	Mem689[fp_251 + -1429:int8] = (int8) (r9_1015 - r6_1002)
	branch r8_1010 <u (fp_251 + -1356) + (Mem689[Mem689[sp_250 + 8:word32]:word32] << 2) l00018AD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018AD8:
	word32 r4_699 = Mem689[r8_1010:word32]
	word32 r0_702 = Mem689[ap_259 + 12:word32]
	branch r4_699 >=u r0_702 l00018B0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018B0C:
	Mem710[fp_251 + -1430:byte] = Mem689[Mem689[ap_259 + 20:word32] + (r4_699 - r0_702) * 2:byte]
	Mem716[fp_251 + -1428:word16] = Mem710[Mem710[ap_259 + 16:word32] + (Mem710[r8_1010:word32] - r0_702) * 2:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018AE4:
	word32 r5_727
	branch r4_699 >=u 0x00000100 l00018AF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018AF4:
	r5_727 = SEQ(SLICE(r5_280, word24, 8), 0x0F)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018AED:
	r5_727 = SEQ(SLICE(r5_280, word24, 8), 0x10)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018AF7:
	Mem740[fp_251 + -1430:byte] = (byte) r5_727
	Mem745[fp_251 + -1428:word16] = Mem740[r8_1010:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018AD0:
	Mem750[fp_251 + -1430:byte] = 0x63
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018B2A:
	Mem762[sp_250 + 52:word32] = __ashift(0x00000001, r9_1015 - r6_1002)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018925:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018BCF:
	r9_1015 = r9_1015 + 0x00000001
	branch r9_1015 > Mem406[sp_250 + 12:word32] l00018BDA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018BD7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018901:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018BDA:
	Mem773[Mem770[ap_259 + 28:word32]:word32] = Mem770[Mem770[sp_250 + 36:word32]:word32]
	word24 v60_779 = SLICE(r3_262, word24, 8)
	word32 r3_780 = SEQ(v60_779, 0x00)
	branch Mem773[sp_250 + 4:word32] == 0x00000000 l00018BEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018BE6:
	branch Mem773[sp_250 + 12:word32] == 0x00000001 l00018BEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018BEC:
	r3_780 = SEQ(v60_779, (byte) r3_780 + 0x01)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018BEE:
	word32 fp_800 = Mem773[fp_251 + 0x0000000C:word32]
	word32 ap_801 = Mem773[fp_251 + 0x00000008:word32]
	r2Out = r2_377
	r3Out = r3_780
	r4Out = r4_328
	r5Out = r5_280
	r6Out = 0x00000000
	r7Out = 0x00000000
	r8Out = fp_251 + -1356
	r9Out = r9_1015
	r10Out = r10_340
	r11Out = 0x00000000
	apOut = ap_801
	fpOut = fp_800
	spOut = fp_251 - 0x00000004
	return (int32) (int8) r3_780
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018861:
	word32 fp_807 = Mem198[fp_38 + 0x0000000C:word32]
	word32 ap_808 = Mem198[fp_38 + 0x00000008:word32]
	r2Out = r2_154
	r3Out = r3_79
	r4Out = r4_70
	r5Out = r5_58
	r6Out = r6_64
	r7Out = r7_67
	r8Out = r8_61
	r9Out = r10_102
	r10Out = r10_177
	r11Out = r11_120
	apOut = ap_808
	fpOut = fp_807
	spOut = fp_38 - 0x00000004
	return 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018848:
	word32 fp_814 = Mem179[fp_38 + 0x0000000C:word32]
	word32 ap_815 = Mem179[fp_38 + 0x00000008:word32]
	r2Out = r2_154
	r3Out = r3_79
	r4Out = r4_70
	r5Out = r5_58
	r6Out = r6_64
	r7Out = r7_67
	r8Out = r8_61
	r9Out = r10_102
	r10Out = r10_177
	r11Out = r11_120
	apOut = ap_815
	fpOut = fp_814
	spOut = fp_38 - 0x00000004
	return 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000187E9:
	Mem817[Mem82[ap_42 + 24:word32]:word32] = 0x00000000
	Mem819[Mem817[ap_42 + 28:word32]:word32] = 0x00000000
	word32 fp_826 = Mem819[fp_38 + 0x0000000C:word32]
	word32 ap_827 = Mem819[fp_38 + 0x00000008:word32]
	r2Out = r2_72
	r3Out = r3_79
	r4Out = r4_70
	r5Out = r5_58
	r6Out = r6_64
	r7Out = r7_67
	r8Out = r8_61
	r9Out = r9_55
	r10Out = r10_52
	r11Out = r11_73
	apOut = ap_827
	fpOut = fp_826
	spOut = fp_38 - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0001878E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00018BF6(word32 r0, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31]
// LiveOut: ap fp r0 r3 sp
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn00018BF6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018BF6:
	word32 sp_15 = fp - 0x00000004
	word32 r2_11 = Mem0[ap + 4:word32]
	branch r2_11 == 0x00000000 l00018C15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018BFF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C00:
	word32 r2_12 = r2_11 - 0x00000006
	word32 r3_14 = Mem13[r2_12 + 2:word32]
	word32 sp_16 = sp_15 - 0x00000004
	Mem17[sp_16:word32] = r2_12
	call Mem17[0x000192B0:word32] + 2 (retsize: 4;)
		uses: ap:ap_22,fp:fp_28,r0:r0_26,r2:r2_12,r3:r3_14,sp:sp_16
		defs: ap:ap_23,fp:fp_29,r0:r0_27,r3:r3_25,sp:sp_21
	r2_11 = r3
	branch r3 != 0x00000000 l00018C00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C15:
	word32 sp_43 = fp - 0x00000004
	word32 fp_45 = Mem44[sp_43 + 0x00000010:word32]
	word32 ap_46 = Mem44[sp_43 + 0x0000000C:word32]
	r3Out = r3
	apOut = ap_46
	fpOut = fp_45
	spOut = sp_43
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00018BF6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00018C3A(word32 r0, word32 r1, word32 r3, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r11, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r3Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r3:[0..31] r5:[8..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: ap fp r0 r1 r11 r3 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00018C3A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C3A:
	word32 r10_171 = Mem0[0x0001934C:word32]
	word32 r2_7 = Mem0[ap + 4:word32]
	Mem9[ap + 4:word32] = Mem0[ap + 4:word32] + 0x00000001
	word32 sp_182 = fp - 0x00000004
	word32 r4_10 = (uint32) Mem9[r2_7:byte]
	branch r4_10 != 0x00000000 l00018C60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C60:
	branch r4_10 != 0x0000003F l00018C86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C86:
	branch r4_10 != 0x0000002A l00018CBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CBE:
	branch r4_10 == 0x0000005B l00018CCA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CCA:
	branch (uint32) Mem9[Mem9[ap + 8:word32]:byte] != 0x00000000 l00018CD3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CD3:
	word24 v28_32 = SLICE(r6, word24, 8)
	word32 r5_29 = Mem9[ap + 4:word32]
	word32 r6_1133 = SEQ(v28_32, 0x01)
	word32 r2_34 = (uint32) Mem9[r5_29:byte]
	branch r2_34 == 0x00000021 l00018CED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CE2:
	branch r2_34 == 0x0000005E l00018CED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CEB:
	r6_1133 = SEQ(v28_32, 0x00)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CED:
	word32 r8_1147 = (int32) (int8) r6_1133
	Mem53[ap + 4:word32] = r8_1147 + r5_29
	word32 r7_1140 = Mem53[ap + 4:word32]
	word32 r3_1049 = 0x00000000
	branch Mem53[r7_1140:byte] == 0x00 l00018D2B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CFF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D00:
	branch r3_1049 == 0x00000000 l00018D08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D08:
	word32 r2_67 = (uint32) Mem53[r7_1140:byte]
	branch r2_67 != 0x0000005C l00018D1C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D1C:
	branch r2_67 == 0x0000005D l00018D2B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D14:
	r3_1049 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D04:
	r3_1049 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D25:
	r7_1140 = r7_1140 + 0x00000001
	branch Mem53[r7_1140:byte] != 0x00 l00018D00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D2B:
	branch (uint32) Mem53[r7_1140:byte] == 0x0000005D l00018D3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D3A:
	word32 r5_100 = Mem53[ap + 4:word32]
	word32 r4_197 = 0x00000000
	word32 r3_102 = 0x00000000
	branch (uint32) Mem53[r5_100:byte] != 0x0000002D l00018D4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D4A:
	r3_102 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D4C:
	word32 r9_1051 = r3_102
	branch r5_100 <u r7_1140 l00018D57
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D57:
	r11 = ap + 12
	r6_1133 = Mem53[0x00019298:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D64:
	branch r9_1051 != 0x00000000 l00018D7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D68:
	branch (uint32) Mem128[Mem128[ap + 4:word32]:byte] != 0x0000005C l00018D7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D7C:
	branch r9_1051 != 0x00000000 l00018D94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D80:
	r0 = Mem128[ap + 4:word32]
	branch (uint32) Mem128[r0:byte] != 0x0000002D l00018D94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D94:
	branch Mem128[r11:word32] == 0x00000000 l00018DC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DC0:
	r3_102 = SEQ(SLICE(r3_102, word24, 8), Mem128[Mem128[ap + 8:word32]:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D98:
	word32 r1_177
	word32 r3_164 = (uint32) Mem128[Mem128[ap + 8:word32]:byte]
	word32 r2_165 = r3_164 & ~0xFFFFFF80
	branch (Mem128[r10_171 + r2_165 * 4:word32] & 0x00000001) == 0x00000000 l00018DB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DB8:
	r1_177 = SEQ(SLICE(r1, word24, 8), (int8) r3_164)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DAC:
	word32 sp_183 = sp_182 - 0x00000004
	Mem185[sp_183:int32] = (int32) (int8) r3_164
	word32 r1_224
	call r6_1133 + 2 (retsize: 4;)
		uses: ap:ap_127,fp:fp_206,r0:r0_200,r1:r1_175,r10:r10_171,r11:r11_147,r2:r2_165,r3:r3_164,r4:r4_197,r5:r5_210,r6:r6_190,r7:r7_219,r8:r8_215,r9:r9_122,sp:sp_183,Stack +FFFFFFF4:dwLoc10,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_193,fp:fp_207,r0:r0_203,r1:r1_224,r10:r10_192,r11:r11_223,r3:r3_199,r4:r4_198,r6:r6_212,r7:r7_220,r8:r8_216,r9:r9_222,sp:sp_191
	r1_177 = SEQ(SLICE(r1_224, word24, 8), (int8) r0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DBB:
	r3_102 = SEQ(SLICE(r3_164, word24, 8), (byte) r1_177)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DC4:
	r1 = Mem243[ap + 4:word32]
	r5_100 = (uint32) (byte) r3_102
	branch (uint32) Mem243[r1 + 0x00000001:byte] == 0x0000002D l00018E4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DD7:
	branch r4_197 == 0x00000000 l00018DE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DE0:
	r0 = (uint32) Mem243[r1:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DDB:
	r0 = r4_197
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DE3:
	word32 r4_266 = r0
	word32 r2_269 = (uint32) Mem243[r1:byte]
	branch r0 >u r2_269 l00018E4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DEE:
	r3_102 = Mem243[r11:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DF4:
	branch r3_102 == 0x00000000 l00018E18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E18:
	r1 = r4_266
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018DF8:
	r0 = r4_266 & ~0xFFFFFF80
	branch (Mem295[r10_171 + r0 * 4:word32] & 0x00000001) == 0x00000000 l00018E10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E10:
	r2_269 = SEQ(SLICE(r2_269, word24, 8), (int8) r4_266)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E05:
	word32 sp_303 = sp_182 - 0x00000004
	Mem305[sp_303:int32] = (int32) (int8) r4_266
	word32 r2_313
	call r6_1133 + 2 (retsize: 4;)
		uses: ap:ap_311,fp:fp_317,r0:r0_290,r1:r1_330,r10:r10_294,r11:r11_328,r2:r2_297,r3:r3_280,r4:r4_285,r5:r5_319,r6:r6_308,r7:r7_324,r8:r8_322,r9:r9_326,sp:sp_303,Stack +FFFFFFF4:dwLoc10,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08
		defs: ap:ap_312,fp:fp_318,r0:r0_316,r10:r10_310,r11:r11_329,r2:r2_313,r3:r3_315,r4:r4_314,r5:r5_320,r6:r6_321,r7:r7_325,r8:r8_323,r9:r9_327,sp:sp_309
	r2_269 = SEQ(SLICE(r2_313, word24, 8), (int8) r0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E13:
	r1 = (int32) (int8) r2_269
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E1B:
	branch r1 != r5_100 l00018E40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E40:
	r4_266 = r4_266 + 0x00000001
	r0 = (uint32) Mem353[Mem353[ap + 4:word32]:byte]
	branch r4_266 <=u r0 l00018DF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E4B:
	r9_1051 = 0x00000000
	r4_197 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E20:
	word32 r2_417
	branch r8_1147 == 0x00000000 l00018E28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E28:
	word32 sp_373 = sp_182 - 0x00000004
	Mem375[sp_373:word32] = Mem353[ap + 12:word32]
	Mem378[sp_373 - 0x00000004:word32] = Mem375[ap + 8:word32] + 0x00000001
	Mem383[sp_373 - 0x00000008:word32] = r7_1140 + 0x00000001
	r2_417 = fn00018C3A(r0, r1, r3_102, r5_100, r6_1133, r7_1140, r8_1147, r9_1051, r11, ap, fp, out r1, out r3_102, out r5_100, out r6_1133, out r7_1140, out r8_1147, out r9_1051, out r11, out ap_1254, out fp, out sp_1255)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E24:
	r2_417 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E3C:
	word32 sp_432 = fp - 0x00000004
	word32 fp_434 = Mem433[sp_432 + 0x00000010:word32]
	word32 ap_435 = Mem433[sp_432 + 0x0000000C:word32]
	r1Out = r1
	r3Out = r3_102
	r5Out = r5_100
	r6Out = r6_1133
	r7Out = r7_1140
	r8Out = r8_1147
	r9Out = r9_1051
	r11Out = r11
	apOut = ap_435
	fpOut = fp_434
	spOut = sp_432
	return r2_417
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D8C:
	r0 = r0 - 0x00000001
	r4_197 = (uint32) Mem128[r0 - 0x00000001:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D75:
	r9_1051 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E4F:
	Mem451[ap + 4:word32] = Mem448[ap + 4:word32] + 0x00000001
	branch Mem451[ap + 4:word32] >=u r7_1140 l00018E5B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E58:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D54:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E5B:
	word32 r2_474
	branch r8_1147 == 0x00000000 l00018E78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E78:
	r2_474 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E5F:
	word32 sp_490 = sp_182 - 0x00000004
	Mem494[sp_490:word32] = Mem492[ap + 12:word32]
	Mem497[sp_490 - 0x00000004:word32] = Mem494[ap + 8:word32] + 0x00000001
	Mem501[sp_490 - 0x00000008:word32] = r7_1140 + 0x00000001
	r2_474 = fn00018C3A(r0, r1, r3_102, r5_100, r6_1133, r7_1140, r8_1147, r9_1051, r11, ap, fp, out r1, out r3_102, out r5_100, out r6_1133, out r7_1140, out r8_1147, out r9_1051, out r11, out ap_1252, out fp, out sp_1253)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E7A:
	word32 sp_608 = fp - 0x00000004
	word32 fp_610 = Mem609[sp_608 + 0x00000010:word32]
	word32 ap_611 = Mem609[sp_608 + 0x0000000C:word32]
	r1Out = r1
	r3Out = r3_102
	r5Out = r5_100
	r6Out = r6_1133
	r7Out = r7_1140
	r8Out = r8_1147
	r9Out = r9_1051
	r11Out = r11
	apOut = ap_611
	fpOut = fp_610
	spOut = sp_608
	return r2_474
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018D37:
	word32 fp_618 = Mem53[fp + 0x0000000C:word32]
	word32 ap_619 = Mem53[fp + 0x00000008:word32]
	r1Out = r1
	r3Out = r3_1049
	r5Out = r5_29
	r6Out = r6_1133
	r7Out = r7_1140
	r8Out = r8_1147
	r9Out = r9
	r11Out = r11
	apOut = ap_619
	fpOut = fp_618
	spOut = fp - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CD0:
	word32 fp_626 = Mem9[fp + 0x0000000C:word32]
	word32 ap_627 = Mem9[fp + 0x00000008:word32]
	r1Out = r1
	r3Out = r3
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_627
	fpOut = fp_626
	spOut = fp - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CC7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E7E:
	branch r4_10 != 0x0000005C l00018E96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E87:
	word32 r2_631 = Mem9[ap + 4:word32]
	Mem633[ap + 4:word32] = Mem9[ap + 4:word32] + 0x00000001
	r4_10 = (uint32) Mem633[r2_631:byte]
	branch r4_10 != 0x00000000 l00018E96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E96:
	word32 r5_1125
	branch Mem640[ap + 12:word32] == 0x00000000 l00018EC4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018EC4:
	r5_1125 = SEQ(SLICE(r5, word24, 8), (byte) r4_10)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E9B:
	word32 r5_654 = (uint32) (byte) r4_10
	word32 r2_655 = r5_654 & ~0xFFFFFF80
	branch (Mem640[r10_171 + r2_655 * 4:word32] & 0x00000001) == 0x00000000 l00018EBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018EBC:
	r3 = SEQ(SLICE(r3, word24, 8), (int8) r5_654)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018EAB:
	int32 v31_669 = (int32) (int8) r5_654
	word32 r3_678
	call Mem670[0x00019298:word32] + 2 (retsize: 4;)
		uses: ap:ap,fp:fp,r0:r0,r1:r1,r10:r10_5,r11:r11,r2:r2_655,r3:r3,r4:r4_645,r5:r5_654,r6:r6,r7:r7,r8:r8,r9:r9,sp:fp - 0x00000008,Stack +0000:dwLoc0C,Stack +0004:v31_669,Stack +FFFFFFFC:dwLoc10
		defs: ap:ap_675,fp:fp_682,r0:r0_680,r1:r1_698,r10:r10_674,r11:r11_696,r3:r3_678,r4:r4_677,r5:r5_683,r6:r6_685,r7:r7_691,r8:r8_688,r9:r9_694,sp:sp_673
	dwLoc08 = v31_669
	r3 = SEQ(SLICE(r3_678, word24, 8), (int8) r0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018EBF:
	r5_1125 = SEQ(SLICE(r5_654, word24, 8), (byte) r3)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018EC7:
	word32 r4_725
	branch Mem715[ap + 12:word32] == 0x00000000 l00018EF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018EF8:
	r4_725 = SEQ(SLICE(r4_10, word24, 8), Mem715[Mem715[ap + 8:word32]:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018ECC:
	word32 r4_730 = (uint32) Mem715[Mem715[ap + 8:word32]:byte]
	word32 r2_731 = r4_730 & ~0xFFFFFF80
	branch (Mem715[r10_171 + r2_731 * 4:word32] & 0x00000001) == 0x00000000 l00018EF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018EF0:
	r3 = SEQ(SLICE(r3, word24, 8), (int8) r4_730)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018EE0:
	word32 sp_745 = sp_182 - 0x00000004
	Mem747[sp_745:int32] = (int32) (int8) r4_730
	word32 r3_755
	call Mem747[0x00019298:word32] + 2 (retsize: 4;)
		uses: ap:ap_713,fp:fp_759,r0:r0_756,r1:r1_779,r10:r10_735,r11:r11_776,r2:r2_731,r3:r3_738,r4:r4_730,r5:r5_762,r6:r6_764,r7:r7_770,r8:r8_767,r9:r9_773,sp:sp_745,Stack +FFFFFFF4:dwLoc10,Stack +FFFFFFF8:dwLoc0C,Stack +FFFFFFFC:dwLoc08_1054
		defs: ap:ap_752,fp:fp_761,r0:r0_758,r1:r1_781,r11:r11_778,r3:r3_755,r4:r4_754,r5:r5_763,r6:r6_766,r7:r7_772,r8:r8_769,r9:r9_775,sp:sp_750
	r3 = SEQ(SLICE(r3_755, word24, 8), (int8) r0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018EF3:
	r4_725 = SEQ(SLICE(r4_730, word24, 8), (byte) r3)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018EFC:
	word32 r2_802
	branch (byte) (r5_1125 - r4_725) != 0x00 l00018F18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F18:
	r2_802 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F01:
	word32 sp_809 = sp_182 - 0x00000004
	Mem815[sp_809:word32] = Mem812[ap + 12:word32]
	Mem817[ap + 8:word32] = Mem815[ap + 8:word32] + 0x00000001
	Mem820[sp_809 - 0x00000004:word32] = Mem817[ap + 8:word32]
	Mem823[sp_809 - 0x00000008:word32] = Mem820[ap + 4:word32]
	r2_802 = fn00018C3A(r0, r1, r3, r5_1125, r6, r7, r8, r9, r11, ap, fp, out r1, out r3, out r5_1125, out r6, out r7, out r8, out r9, out r11, out ap_1250, out fp, out sp_1251)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F1A:
	word32 sp_877 = fp - 0x00000004
	word32 fp_879 = Mem878[sp_877 + 0x00000010:word32]
	word32 ap_880 = Mem878[sp_877 + 0x0000000C:word32]
	r1Out = r1
	r3Out = r3
	r5Out = r5_1125
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_880
	fpOut = fp_879
	spOut = sp_877
	return r2_802
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018E93:
	word32 fp_887 = Mem633[fp + 0x0000000C:word32]
	word32 ap_888 = Mem633[fp + 0x00000008:word32]
	r1Out = r1
	r3Out = r3
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_888
	fpOut = fp_887
	spOut = fp - 0x00000004
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C8B:
	branch (uint32) Mem9[Mem9[ap + 4:word32]:byte] != 0x00000000 l00018C95
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C95:
	branch Mem9[Mem9[ap + 8:word32]:byte] == 0x00 l00018CBA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C9A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C9C:
	word32 sp_902 = sp_182 - 0x00000004
	Mem906[sp_902:word32] = Mem904[ap + 12:word32]
	Mem909[sp_902 - 0x00000004:word32] = Mem906[ap + 8:word32]
	Mem912[sp_902 - 0x00000008:word32] = Mem909[ap + 4:word32]
	r0 = fn00018C3A(r0, r1, r3, r5, r6, r7, r8, r9, r11, ap, fp, out r1, out r3, out r5, out r6, out r7, out r8, out r9, out r11, out ap, out fp, out sp_182)
	branch r0 == 0x00000000 l00018CB2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CB2:
	Mem951[ap + 8:word32] = Mem912[ap + 8:word32] + 0x00000001
	branch Mem951[Mem951[ap + 8:word32]:byte] != 0x00 l00018C9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CBA:
	word32 sp_961 = fp - 0x00000004
	word32 fp_963 = Mem962[sp_961 + 0x00000010:word32]
	word32 ap_964 = Mem962[sp_961 + 0x0000000C:word32]
	r1Out = r1
	r3Out = r3
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_964
	fpOut = fp_963
	spOut = sp_961
	return 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018CAE:
	word32 fp_970 = Mem912[fp + 0x0000000C:word32]
	word32 ap_971 = Mem912[fp + 0x00000008:word32]
	r1Out = r1
	r3Out = r3
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_971
	fpOut = fp_970
	spOut = fp - 0x00000004
	return r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C91:
	word32 fp_977 = Mem9[fp + 0x0000000C:word32]
	word32 ap_978 = Mem9[fp + 0x00000008:word32]
	r1Out = r1
	r3Out = r3
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_978
	fpOut = fp_977
	spOut = fp - 0x00000004
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C65:
	word32 r2_1017
	branch Mem9[Mem9[ap + 8:word32]:byte] == 0x00 l00018C80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C80:
	r2_1017 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C6D:
	r2_1017 = fn00018C3A(r0, r1, r3, r5, r6, r7, r8, r9, r11, ap, fp, out r1, out r3, out r5, out r6, out r7, out r8, out r9, out r11, out ap_1248, out fp, out sp_1249)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C82:
	word32 sp_1027 = fp - 0x00000004
	word32 fp_1029 = Mem1028[sp_1027 + 0x00000010:word32]
	word32 ap_1030 = Mem1028[sp_1027 + 0x0000000C:word32]
	r1Out = r1
	r3Out = r3
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_1030
	fpOut = fp_1029
	spOut = sp_1027
	return r2_1017
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C50:
	word32 r3_1032 = 0x00000000
	branch (uint32) Mem9[Mem9[ap + 8:word32]:byte] != 0x00000000 l00018C5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C5A:
	r3_1032 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018C5C:
	word32 fp_1047 = Mem9[fp + 0x0000000C:word32]
	word32 ap_1048 = Mem9[fp + 0x00000008:word32]
	r1Out = r1
	r3Out = r3_1032
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	apOut = ap_1048
	fpOut = fp_1047
	spOut = fp - 0x00000004
	return r3_1032
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00018C3A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00018F22(word32 r1, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap:[0..31] fp:[0..31] r1:[8..31]
// LiveOut: ap fp r0 r1 sp
// Trashed: CVZN ap fp r0 r1 sp
// Preserved:
fn00018F22_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F22:
	branch Mem0[Mem0[ap + 4:word32]:byte] == 0x00 l00018F5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F2A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F2C:
	word32 r0_16 = Mem15[ap + 4:word32]
	r1 = SEQ(SLICE(r1, word24, 8), Mem15[r0_16:byte])
	branch (byte) r1 != 0x5C l00018F48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F39:
	branch Mem15[r0_16 + 0x00000001:byte] == 0x00 l00018F48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F48:
	branch (byte) r1 == 0x25 l00018F52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F4D:
	branch (byte) r1 != 0x2A l00018F56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F52:
	word32 fp_46 = Mem15[fp + 0x0000000C:word32]
	word32 ap_47 = Mem15[fp + 0x00000008:word32]
	r1Out = r1
	apOut = ap_47
	fpOut = fp_46
	spOut = <invalid>
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F3F:
	Mem49[ap + 4:word32] = r0_16 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F56:
	Mem57[ap + 4:word32] = Mem55[ap + 4:word32] + 0x00000001
	branch Mem57[Mem57[ap + 4:word32]:byte] != 0x00 l00018F2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F5E:
	word32 fp_72 = Mem71[fp + 0x0000000C:word32]
	word32 ap_73 = Mem71[fp + 0x00000008:word32]
	r1Out = r1
	apOut = ap_73
	fpOut = fp_72
	spOut = <invalid>
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00018F22_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00018F66()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00018F66_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00018F66_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018F66:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00018FA9()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00018FA9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00018FA9_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00018FA9:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0001902B()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001902B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0001902B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0001902B:
// DataOut:
// DataOut (flags):
// SymbolicIn:



