void fn0000802E(word32 r0, word32 r2, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000802E_entry:
// DataOut: ap fp r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000802E:
	word32 r3_9 = Mem0[0x000192E0:word32]
	word32 sp_13
	byte CVZN_14
	byte ZN_15
	bool C_16
	bool V_17
	word32 r4_18
	word32 r3_19
	bool Z_20
	bool N_21
	word32 ap_22
	byte CZN_23
	word32 r2_24
	word32 r0_25
	word32 fp_26
	call r3_9 + 2 (retsize: 4; depth: 16)
		uses: C_11,dwLoc08_5,dwLoc0C_7,r3_9,r4,sp_6,V_12,ZN_10
		defs: ap_22,C_16,CVZN_14,CZN_23,fp_26,N_21,r0_25,r2_24,r3_19,r4_18,sp_13,V_17,Z_20,ZN_15
	word32 sp_34
	byte CVZN_35
	byte ZN_36
	bool C_37
	bool V_38
	word32 r4_39
	word32 r3_40
	bool Z_41
	bool N_42
	word32 ap_43
	byte CZN_44
	word32 r2_45
	word32 r0_46
	word32 fp_47
	call r3_19 + 2 (retsize: 4; depth: 24)
		uses: ap_22,C_32,CVZN_14,CZN_23,dwLoc08_5,dwLoc0C_7,dwLoc10_28,dwLoc14_30,fp_26,N_21,r0_25,r2_24,r3_19,r4_18,sp_29,V_33,Z_20,ZN_31
		defs: ap_43,C_37,CVZN_35,CZN_44,fp_47,N_42,r0_46,r2_45,r3_40,r4_39,sp_34,V_38,Z_41,ZN_36
	word32 sp_55
	byte CVZN_56
	byte ZN_57
	bool C_58
	bool V_59
	word32 r4_60
	word32 r3_61
	bool Z_62
	bool N_63
	word32 ap_64
	byte CZN_65
	word32 r2_66
	word32 r0_67
	word32 fp_68
	call r3_40 + 2 (retsize: 4; depth: 32)
		uses: ap_43,C_53,CVZN_35,CZN_44,dwLoc08_5,dwLoc0C_7,dwLoc10_28,dwLoc14_30,dwLoc18_49,dwLoc1C_51,fp_47,N_42,r0_46,r2_45,r3_40,r4_39,sp_50,V_54,Z_41,ZN_52
		defs: ap_64,C_58,CVZN_56,CZN_65,fp_68,N_63,r0_67,r2_66,r3_61,r4_60,sp_55,V_59,Z_62,ZN_57
	word32 sp_76
	byte CVZN_77
	byte ZN_78
	bool C_79
	bool V_80
	word32 r4_81
	word32 r3_82
	bool Z_83
	bool N_84
	word32 ap_85
	byte CZN_86
	word32 r2_87
	word32 r0_88
	word32 fp_89
	call r3_61 + 2 (retsize: 4; depth: 40)
		uses: ap_64,C_74,CVZN_56,CZN_65,dwLoc08_5,dwLoc0C_7,dwLoc10_28,dwLoc14_30,dwLoc18_49,dwLoc1C_51,dwLoc20_70,dwLoc24_72,fp_68,N_63,r0_67,r2_66,r3_61,r4_60,sp_71,V_75,Z_62,ZN_73
		defs: ap_85,C_79,CVZN_77,CZN_86,fp_89,N_84,r0_88,r2_87,r3_82,r4_81,sp_76,V_80,Z_83,ZN_78
	word32 r3_159 = 0x00000000
	branch Mem0[ap_85 + 4:word32] != 0x00000001 l00008081
// DataOut: ap fp r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000807F:
	r3_159 = 0x00000001
// DataOut: ap fp r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000024 r3:0x00000000 -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4
// LocalsOut: fp(32)

l00008081:
	Mem97[r2_87 + 96:word32] = r3_159
	fn00008EC2(fp_89)
	branch (r0_88 & 0x00000001) != 0x00000000 l0000809C
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000024 r3:<invalid> -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4
// Terminates process

l0000809C:
	Mem120[fp - 0x00000030:uint32] = 0x0000005D
	Mem123[fp - 0x00000034:word32] = Mem120[Mem120[ap_85 + 8:word32]:word32]
	word32 sp_127
	byte CVZN_128
	byte ZN_129
	bool C_130
	bool V_131
	word32 r4_132
	word32 r3_133
	bool Z_134
	bool N_135
	word32 ap_136
	byte CZN_137
	word32 r2_138
	word32 r0_139
	word32 fp_140
	call Mem123[0x000192DC:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_85,C_125,CVZN_95,CZN_91,dwLoc08_5,dwLoc0C_7,dwLoc10_28,dwLoc14_30,dwLoc18_49,dwLoc1C_51,dwLoc20_70,dwLoc24_72,dwLoc28_100,dwLoc2C_103,fp_89,N_84,r0_88,r2_87,r3_107,r4_81,sp_121,V_126,Z_92,ZN_124
		defs: ap_136,C_130,CVZN_128,CZN_137,fp_140,N_135,r0_139,r2_138,r3_133,r4_132,sp_127,V_131,Z_134,ZN_129
	branch r0_139 != 0x00000000 l000080B8
// DataOut: ap r4 sp
// DataOut (flags): 
// SymbolicIn: r3:r0 -44(fp):ap + 4 -40(fp):ap + 8 -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4

l000080B8:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: r3:r0 sp:sp - 0x0000000C r4:r0 -44(fp):ap + 4 -40(fp):ap + 8 -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4

l000080AF:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: r3:r0 sp:sp - 0x0000000C r4:r0 -44(fp):ap + 4 -40(fp):ap + 8 -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4

l000080BA:
	Mem149[sp_127 - 0x00000004:word32] = 0x00000007
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 sp:sp - 0x0000000C r4:<invalid> -44(fp):ap + 4 -40(fp):ap + 8 -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4

l00008098:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 -44(fp):ap + 4 -40(fp):ap + 8 -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4

fn0000802E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:r0 r0:r0 sp:fp - 0x00000004 fp:<invalid> ap:<invalid> -44(fp):ap + 4 -40(fp):ap + 8 -36(fp):0x0000000B -32(fp):r4 -28(fp):0x0000000A -24(fp):r4 -20(fp):0x0000000F -16(fp):r4 -12(fp):0x00000002 -8(fp):r4



void fn00008CCE(word32 r0, word32 r2, word32 r3, word32 r4, word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap r0 r2 r3 r4
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00008CCE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00008CCE_entry:
// DataOut: ap r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008CCE:
	branch Mem0[ap + 4:word32] == 0x00000000 l00008CF4
// DataOut: r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008CF4:
// DataOut: r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r7:<invalid>
// LocalsOut: fp(32)

l00008CEC:
// DataOut: r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r7:<invalid>
// LocalsOut: fp(32)

l00008CF6:
	branch Mem0[r2:word32] != 0x00000000 l00008D00
// DataOut: r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r7:<invalid> r0:<invalid>
// LocalsOut: fp(32)

l00008D00:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r7:<invalid> r0:<invalid> r6:<invalid>

l00008CFD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r7:<invalid> r0:<invalid> r6:<invalid>
// LocalsOut: fp(32)

l00008DAC:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r7:<invalid> r0:<invalid> r6:<invalid>



void fn00008EC2(word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00008EC2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00008EC2_entry:
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00008EC2:
	Mem4[fp + -280:word16] = 0x0000
	Mem7[fp + -278:byte] = 0x0E
	Mem9[fp + -277:byte] = 0x02
	Mem11[fp + -276:word32] = 0x00000000
	Mem13[fp + -288:word16] = 0x0000
	Mem15[fp + -286:byte] = 0x0E
	Mem17[fp + -285:byte] = 0x02
	Mem19[fp + -284:word32] = 0x00000000
	Mem21[fp + -296:word16] = 0x0000
	Mem23[fp + -294:byte] = 0x0E
	Mem25[fp + -293:byte] = 0x02
	Mem27[fp + -292:word32] = 0x00000000
	Mem29[fp + -304:word16] = 0x0000
	Mem31[fp + -302:byte] = 0x0E
	Mem33[fp + -301:byte] = 0x02
	Mem35[fp + -300:word32] = 0x00000000
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00009A52()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00009A52_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00009A52_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009A52:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word32 fn00009B0A(word32 r0, word32 r8, word32 r10, word32 r11, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & apOut, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r10 r11 r8
// LiveOut: ap fp r0 r3
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r9 sp
// Preserved:
fn00009B0A_entry:
// DataOut: ap fp r0 r10 r11 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009B0A:
	word32 r3_12
	word32 r6_13
	word32 r7_14
	word32 ap_15
	word32 fp_16
	word32 r0_17 = fn0000AA6A(r0, r8, r10, r11, ap, fp, out r3_12, out r6_13, out r7_14, out ap_15, out fp_16)
	Mem19[ap_15 + 0x0001019C:word32] = r0_17
	branch r0_17 > 0x00000002 l00009B2A
// DataOut: ap fp r0 r3 r6 r7
// DataOut (flags): C
// SymbolicIn: sp:fp

l00009B2A:
	branch false l00009B2C
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid>

l00009B2C:
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid>

l00009B38:
	word32 r3_57
	word32 fp_58
	word32 r0_59 = fn00009C8A(r3_12, r6_13, r7_14, fp_16, out r3_57, out fp_58)
	word32 fp_61
	*fpOut = Mem19[fp_58 + 0x0000000C:word32]
	word32 ap_62
	*apOut = Mem19[fp_58 + 0x00000008:word32]
	return r0_59
// DataOut: ap fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid>

l00009B22_1:
	word32 sp_43
	byte CVZN_44
	byte ZN_45
	bool C_46
	bool V_47
	word32 r0_48
	word32 ap_49
	word32 fp_50
	word32 r8_51
	word32 r10_52
	word32 r11_53
	word32 r3_54
	word32 r6_55
	word32 r7_56
	call 0x00009B26 + r0_17 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_15,C_21,CVZN_24,fp_16,r0_17,r10,r11,r3_12,r6_13,r7_14,r8,sp_2,V_22,ZN_20
		defs: ap_49,C_46,CVZN_44,fp_50,r0_48,r10_52,r11_53,r3_54,r6_55,r7_56,r8_51,sp_43,V_47,ZN_45
	return r0_48
// DataOut: ap fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid>

fn00009B0A_exit:
// DataOut: ap fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid>



void fn00009BAE(word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r7
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00009BAE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00009BAE_entry:
// DataOut: r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009BAE:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word32 fn00009C8A(word32 r3, word32 r6, word32 r7, word32 fp, ptr32 & r3Out, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r3 r6 r7
// LiveOut: fp r0 r3
// Trashed: CVZN ap fp r0 r2 r3 r4 r5 sp
// Preserved:
fn00009C8A_entry:
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00009C8A:
	word32 r3_100 = SEQ(SLICE(r3, word24, 8), 0x01)
	*r3Out = r3_100
	branch (Mem0[Mem0[r7 + 1511:word32] + 20:word32] & 0x00000008) != 0x00000000 l00009CB8
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

l00009CB1:
	branch Mem0[r7 + 12:word32] != 0x00000000 l00009CB8
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:SEQ(SLICE(r3, word24, 8), 0x01) r2:<invalid>

l00009CB6:
	*r3Out = SEQ(SLICE(r3_100, word24, 8), 0x00)
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:SEQ(SLICE(r3, word24, 8), 0x01) r2:<invalid>

l00009CB8:
	word32 r5_104
	int32 v16_18 = (int32) (int8) r3_100
	Mem19[r6 + 352:int32] = v16_18
	branch v16_18 != 0x00000000 l00009CC4
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid>

l00009CBF:
	branch Mem19[r7 + 8:word32] != 0x00000000 l00009CC8
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid>

l00009CC8:
	word32 r4_102
	branch Mem19[r7 + 8:word32] == 0x00000001 l00009CD4
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid>

l00009CD4:
	*r3Out = 0x00000000
	branch (uint32) Mem19[Mem19[r7 + 1511:word32] + 0x00000014:ui1] != 0x00000000 l00009CE7
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid>

l00009CE5:
	*r3Out = 0x00000001
// DataOut: fp r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:0x00000000 r2:<invalid>

l00009CE7:
	r4_102 = r3_100
// DataOut: fp r3 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid>

l00009CCE:
	r4_102 = 0x00000001
// DataOut: fp r3 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid>

l00009CEA:
	r5_104 = r4_102
// DataOut: fp r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r4:<invalid>

l00009CC4:
	r5_104 = 0x00000000
// DataOut: fp r3 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid>

l00009CED:
	Mem32[r6 + 356:word32] = r5_104
	Mem34[r6 + 360:byte] = 0x05
	branch Mem34[r7 + 12:word32] == 0x00000000 l00009CFF
// DataOut: fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>

l00009CFF:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>

l00009CFC:
// DataOut: fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>

l00009FFD:
	Mem40[r6 + 0x00010170:word32] = r6 + 361
	Mem42[r6 + 0x0001016C:word32] = 0x00000000
	Mem44[r6 + 0x00010179:word32] = r6 + 361
	Mem46[r6 + 0x0001017D:word32] = 0x00000000
	Mem48[r6 + 0x00010175:word32] = r6 + 0x00010181
	Mem50[r6 + 0x00010185:word32] = r6 + 0x00008169
	Mem52[r6 + 0x00010189:word32] = 0x00000000
	Mem54[r6 + 0x00010181:word32] = r6 + 0x00010175
	Mem56[r6 + 0x00010190:word32] = r6 + 0x00010175
	branch Mem56[r6 + 352:word32] == 0x00000000 l0000A060
// DataOut: fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>

l0000A060:
// DataOut: fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>

l0000A053:
	Mem76[r6 + 0x00010174:byte] = 0x00
// DataOut: fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>

l0000A065:
	Mem63[r6 + 0x00010194:word32] = r3_100
	word32 fp_71
	*fpOut = Mem63[fp + 0x0000000C:word32]
	return 0x00000000
// DataOut: fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp + -260 r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid>

fn00009C8A_exit:
// DataOut: fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid> r5:<invalid> r0:0x00000000 fp:<invalid> ap:<invalid> r4:<invalid>



void fn0000A07A(word32 r6, word32 r7, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r6 r7 r8
// LiveOut:
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn0000A07A_entry:
// DataOut: fp r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A07A:
	Mem6[r6 + 352:word32] = Mem0[r7 + 12:word32]
	Mem10[r6 + 360:byte] = Mem6[Mem6[r6 + 308:word32] + 31:byte]
	branch Mem10[r7 + 12:word32] != 0x00000000 l0000A0AD
// DataOut: fp r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A0AD:
	word32 r2_15 = (uint32) Mem10[r6 + 360:byte]
	branch r2_15 != 0x00000002 l0000A0BA
// DataOut: fp r2 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>
// LocalsOut: fp(32)

l0000A0BA:
	branch r2_15 != 0x00000005 l0000A0C2
// DataOut: fp r2 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>
// LocalsOut: fp(32)

l0000A0C2:
	branch r2_15 != 0x00000006 l0000A0CA
// DataOut: fp r2 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>
// LocalsOut: fp(32)

l0000A0CA:
	branch r2_15 != 0x00000004 l0000A0D2
// DataOut: fp r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>
// LocalsOut: fp(32)

l0000A0D2:
	word32 sp_135
	byte ZN_136
	bool C_137
	bool V_138
	word32 r7_139
	word32 r6_140
	word32 r2_141
	bool Z_142
	byte CZN_143
	bool N_144
	word32 r0_145
	word32 fp_146
	word32 ap_147
	byte VZN_148
	word32 r8_149
	word32 r3_150
	call Mem10[0x000192D0:word32] + 2 (retsize: 4; depth: 536)
		uses: ap,C_132,CZN_117,dwLoc0208_121,dwLoc020C_124,dwLoc0210_127,dwLoc0214_130,dwLoc0218,dwLoc021C,dwLoc0220,dwLoc0224,fp,N,r0,r2_15,r3,r6,r7,r8,sp_128,V_133,VZN,Z_118,ZN_131
		defs: ap_147,C_137,CZN_143,fp_146,N_144,r0_145,r2_141,r3_150,r6_140,r7_139,r8_149,sp_135,V_138,VZN_148,Z_142,ZN_136
	word32 r2_158 = Mem10[r7_139 + 0x0000C839:word32]
	byte ZN_163
	bool C_164
	bool V_165
	word32 r7_166
	word32 r2_168
	bool Z_169
	byte CZN_170
	bool N_171
	word32 r0_172
	word32 fp_173
	word32 ap_174
	byte VZN_175
	word32 r8_176
	word32 r3_177
	word32 r6_167
	word32 sp_162
	call r2_158 + 2 (retsize: 4; depth: 548)
		uses: ap_147,C_160,CZN_143,dwLoc0208_121,dwLoc020C_124,dwLoc0210_127,dwLoc0214_130,dwLoc0218_152,dwLoc021C_155,dwLoc0220_157,dwLoc0224,fp_146,N_144,r0_145,r2_158,r3_150,r6_140,r7_139,r8_149,sp_156,V_161,VZN_148,Z_142,ZN_159
		defs: ap_174,C_164,CZN_170,fp_173,N_171,r0_172,r2_168,r3_177,r6_167,r7_166,r8_176,sp_162,V_165,VZN_175,Z_169,ZN_163
	branch Mem10[r6_167 + 320:word32] == 0x00000000 l0000A10C
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>
// LocalsOut: fp(32)

l0000A101:
	byte ZN_412
	bool C_413
	bool V_414
	word32 r7_415
	word32 r2_417
	bool Z_418
	byte CZN_419
	bool N_420
	word32 r0_421
	word32 fp_422
	word32 ap_423
	byte VZN_424
	word32 r8_425
	word32 r3_426
	call Mem10[0x000192B0:word32] + 2 (retsize: 4; depth: 552)
		uses: ap_174,C_409,CZN_170,dwLoc0208_121,dwLoc020C_124,dwLoc0210_127,dwLoc0214_130,dwLoc0218_152,dwLoc021C_155,dwLoc0220_157,dwLoc0224_407,fp_173,N_171,r0_172,r2_168,r3_177,r6_167,r7_166,r8_176,sp_405,V_410,VZN_175,Z_179,ZN_408
		defs: ap_423,C_413,CZN_419,fp_422,N_420,r0_421,r2_417,r3_426,r6_416,r7_415,r8_425,sp_411,V_414,VZN_424,Z_418,ZN_412
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFDE0 r2:<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A10C:
	branch Mem10[r6_167 + 328:word32] == 0x00000000 l0000A11D
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A112:
	word32 sp_383 = sp_162 - 0x00000004
	Mem385[sp_383:word32] = Mem10[r6_167 + 328:word32]
	byte ZN_390
	bool C_391
	bool V_392
	word32 r7_393
	word32 r2_395
	bool Z_396
	byte CZN_397
	bool N_398
	word32 r0_399
	word32 fp_400
	word32 ap_401
	byte VZN_402
	word32 r8_403
	word32 r3_404
	call Mem385[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_186,C_387,CZN_190,dwLoc0208_121,dwLoc020C_124,dwLoc0210_127,dwLoc0214_130,dwLoc0218_152,dwLoc021C_155,dwLoc0220_157,dwLoc0224_182,fp_187,N_189,r0_188,r2_191,r3_183,r6_192,r7_193,r8_184,sp_383,V_388,VZN_185,Z_196,ZN_386
		defs: ap_401,C_391,CZN_397,fp_400,N_398,r0_399,r2_395,r3_404,r6_394,r7_393,r8_403,sp_389,V_392,VZN_402,Z_396,ZN_390
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A11D:
	branch Mem10[r6_167 + 324:word32] == 0x00000000 l0000A12E
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A123:
	word32 sp_361 = sp_162 - 0x00000004
	Mem363[sp_361:word32] = Mem10[r6_167 + 324:word32]
	byte ZN_368
	bool C_369
	bool V_370
	word32 r7_371
	word32 r2_373
	bool Z_374
	byte CZN_375
	bool N_376
	word32 r0_377
	word32 fp_378
	word32 ap_379
	byte VZN_380
	word32 r8_381
	word32 r3_382
	call Mem363[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_202,C_365,CZN_206,dwLoc0208_121,dwLoc020C_124,dwLoc0210_127,dwLoc0214_130,dwLoc0218_152,dwLoc021C_155,dwLoc0220_157,dwLoc0224_182,fp_203,N_205,r0_204,r2_207,r3_199,r6_208,r7_209,r8_200,sp_361,V_366,VZN_201,Z_212,ZN_364
		defs: ap_379,C_369,CZN_375,fp_378,N_376,r0_377,r2_373,r3_382,r6_372,r7_371,r8_381,sp_367,V_370,VZN_380,Z_374,ZN_368
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A12E:
	branch Mem10[r6_167 + 316:word32] == 0x00000000 l0000A13F
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A134:
	word32 sp_339 = sp_162 - 0x00000004
	Mem341[sp_339:word32] = Mem10[r6_167 + 316:word32]
	byte ZN_346
	bool C_347
	bool V_348
	word32 r7_349
	word32 r2_351
	bool Z_352
	byte CZN_353
	bool N_354
	word32 r0_355
	word32 fp_356
	word32 ap_357
	byte VZN_358
	word32 r8_359
	word32 r3_360
	call Mem341[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_218,C_343,CZN_222,dwLoc0208_121,dwLoc020C_124,dwLoc0210_127,dwLoc0214_130,dwLoc0218_152,dwLoc021C_155,dwLoc0220_157,dwLoc0224_182,fp_219,N_221,r0_220,r2_223,r3_215,r6_224,r7_225,r8_216,sp_339,V_344,VZN_217,Z_228,ZN_342
		defs: ap_357,C_347,CZN_353,fp_356,N_354,r0_355,r2_351,r3_360,r6_350,r7_349,r8_359,sp_345,V_348,VZN_358,Z_352,ZN_346
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A13F:
	branch Mem10[r6_167 + 340:word32] == 0x00000000 l0000A161
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A145:
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A148:
	word32 r2_310 = Mem10[r6_167 + 340:word32]
	word32 sp_312 = sp_162 - 0x00000004
	Mem313[sp_312:word32] = r2_310
	byte ZN_318
	bool C_319
	bool V_320
	word32 r7_321
	word32 r2_323
	bool Z_324
	byte CZN_325
	bool N_326
	word32 r0_327
	word32 fp_328
	word32 ap_329
	byte VZN_330
	word32 r8_331
	word32 r3_332
	call Mem313[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_234,C_315,CZN_238,dwLoc0208_121,dwLoc020C_124,dwLoc0210_127,dwLoc0214_130,dwLoc0218_152,dwLoc021C_155,dwLoc0220_157,dwLoc0224_182,fp_235,N_237,r0_236,r2_310,r3_311,r6_308,r7_241,r8_232,sp_312,V_316,VZN_233,Z_244,ZN_314
		defs: ap_329,C_319,CZN_325,fp_328,N_326,r0_327,r2_323,r3_332,r6_322,r7_321,r8_331,sp_317,V_320,VZN_330,Z_324,ZN_318
	Mem334[r6_167 + 340:word32] = r3_332
	branch r3_332 != 0x00000000 l0000A148
// DataOut: fp r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A161:
	word32 r3_258 = Mem10[r6_167 + 308:word32]
	branch r3_258 == 0x00000000 l0000A179
// DataOut: fp r3 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A168:
	branch r3_258 == r6_167 l0000A179
// DataOut: fp r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A170:
	word32 sp_284 = sp_162 - 0x00000004
	Mem285[sp_284:word32] = r3_258
	word32 sp_289
	byte ZN_290
	bool C_291
	bool V_292
	word32 r7_293
	word32 r6_294
	word32 r2_295
	bool Z_296
	byte CZN_297
	bool N_298
	word32 r0_299
	word32 fp_300
	word32 ap_301
	byte VZN_302
	word32 r8_303
	word32 r3_304
	call Mem285[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_249,C_287,CZN_281,dwLoc0208_121,dwLoc020C_124,dwLoc0210_127,dwLoc0214_130,dwLoc0218_152,dwLoc021C_155,dwLoc0220_157,dwLoc0224_182,fp_250,N_252,r0_251,r2_280,r3_258,r6_255,r7_256,r8_247,sp_284,V_288,VZN_248,Z_282,ZN_286
		defs: ap_301,C_291,CZN_297,fp_300,N_298,r0_299,r2_295,r3_304,r6_294,r7_293,r8_303,sp_289,V_292,VZN_302,Z_296,ZN_290
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:r6 r3:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A179:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A0CF:
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A0C7:
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A0BF:
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A0B7:
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A4F9:
	Mem45[r6 + 0x00010170:word32] = r6 + 361
	Mem47[r6 + 0x0001016C:word32] = 0x00000000
	Mem49[r6 + 0x00010179:word32] = r6 + 361
	Mem51[r6 + 0x0001017D:word32] = 0x00000000
	Mem53[r6 + 0x00010175:word32] = r6 + 0x00010181
	Mem55[r6 + 0x00010185:word32] = r6 + 0x00008169
	Mem57[r6 + 0x00010189:word32] = 0x00000000
	Mem59[r6 + 0x00010181:word32] = r6 + 0x00010175
	Mem61[r6 + 0x00010190:word32] = r6 + 0x00010175
	branch Mem61[r6 + 352:word32] == 0x00000000 l0000A598
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A598:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A54F:
	word32 r0_66 = (uint32) Mem61[r6 + 360:byte]
	branch r0_66 > 0x00000006 l0000A560
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A560:
	vax_addp4(0x0000, 0x11, 0x0028, 0x17)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid> r0:<invalid>

l0000A554_1:
	word32 sp_85
	byte ZN_86
	bool C_87
	bool V_88
	word32 r7_89
	word32 r6_90
	word32 r2_91
	bool Z_92
	byte CZN_93
	bool N_94
	word32 r0_95
	word32 fp_96
	word32 ap_97
	byte VZN_98
	word32 r8_99
	word32 r3_100
	call 0x0000A558 + (r0_66 - 0x00000002) * 0x00000002 (retsize: 4; depth: 520)
		uses: ap,C_68,CZN_43,dwLoc0208,dwLoc020C,dwLoc0210,dwLoc0214,dwLoc0218,dwLoc021C,dwLoc0220,dwLoc0224,fp,N,r0_66,r2_15,r3,r6,r7,r8,sp_2,V_69,VZN,Z_63,ZN_67
		defs: ap_97,C_87,CZN_93,fp_96,N_94,r0_95,r2_91,r3_100,r6_90,r7_89,r8_99,sp_85,V_88,VZN_98,Z_92,ZN_86
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid> r0:<invalid>

fn0000A07A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> -548(fp):<invalid> -544(fp):r7 -540(fp):r7 + 1515 -536(fp):r0 -532(fp):r7 + 1515 -528(fp):r8 + 399 -524(fp):r7 + 0x0000C701 -520(fp):0x00000001

l0000A0AA:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>

l0000A17D:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -516 r2:<invalid>



void fn0000A5B2(word32 r2, word32 r5, word32 r6, word32 r7, word32 r8, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r2 r5 r6 r7 r8
// LiveOut:
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn0000A5B2_entry:
// DataOut: fp r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A5B2:
	branch Mem0[r7 + 12:word32] != 0x00000000 l0000A5D2
// DataOut: fp r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A5D2:
	word32 r2_13 = SEQ(SLICE(r2, word24, 8), Mem0[r6 + 0x000102F4:byte] & ~0xF0)
	word32 r3_14 = (uint32) (byte) r2_13
	branch r3_14 == 0x00000002 l0000A61F
// DataOut: fp r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// LocalsOut: fp(32)

l0000A5E3:
	branch r3_14 == 0x00000005 l0000A61F
// DataOut: fp r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid>
// LocalsOut: fp(32)

l0000A5E8:
	branch r3_14 == 0x00000006 l0000A61F
// DataOut: fp r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid>
// LocalsOut: fp(32)

l0000A5ED:
	branch r3_14 == 0x00000004 l0000A61F
// DataOut: fp r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid>
// LocalsOut: fp(32)

l0000A61F:
	Mem46[r6 + 0x00010170:word32] = r6 + 361
	Mem48[r6 + 0x0001016C:word32] = 0x00000000
	Mem50[r6 + 0x00010179:word32] = r6 + 361
	Mem52[r6 + 0x0001017D:word32] = 0x00000000
	Mem54[r6 + 0x00010175:word32] = r6 + 0x00010181
	Mem56[r6 + 0x00010185:word32] = r6 + 0x00008169
	Mem58[r6 + 0x00010189:word32] = 0x00000000
	Mem60[r6 + 0x00010181:word32] = r6 + 0x00010175
	Mem62[r6 + 0x00010190:word32] = r6 + 0x00010175
	branch r3_14 > 0x00000006 l0000A67E
// DataOut: r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid>

l0000A67E:
	vax_subp4(0x0000, 0x11, 0x002A, Mem62[Mem62[r5 + 5968:word32]:ptr32])
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r0:<invalid>

l0000A672_1:
	word32 sp_82
	byte CVZN_83
	byte ZN_84
	bool C_85
	bool V_86
	word32 r7_87
	bool Z_88
	word32 r6_89
	word32 r2_90
	word32 r3_91
	byte CZN_92
	word32 r8_93
	word32 r0_94
	word32 fp_95
	word32 ap_96
	bool N_97
	word32 r5_98
	byte VZN_99
	call 0x0000A676 + (r3_14 - 0x00000002) * 0x00000002 (retsize: 4; depth: 8)
		uses: ap,C_65,CVZN,CZN_43,dwLoc08,dwLoc0C,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,fp,N,r0_63,r2_13,r3_14,r5,r6,r7,r8,sp_2,V_66,VZN,Z_44,ZN_64
		defs: ap_96,C_85,CVZN_83,CZN_92,fp_95,N_97,r0_94,r2_90,r3_91,r5_98,r6_89,r7_87,r8_93,sp_82,V_86,VZN_99,Z_88,ZN_84
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r0:<invalid>

l0000A5F2:
	word32 sp_126
	byte CVZN_127
	byte ZN_128
	bool C_129
	bool V_130
	word32 r7_131
	bool Z_132
	word32 r6_133
	word32 r2_134
	word32 r3_135
	byte CZN_136
	word32 r8_137
	word32 r0_138
	word32 fp_139
	word32 ap_140
	bool N_141
	word32 r5_142
	byte VZN_143
	call Mem0[0x000192D0:word32] + 2 (retsize: 4; depth: 24)
		uses: ap,C_123,CVZN,CZN_108,dwLoc08_112,dwLoc0C_115,dwLoc10_118,dwLoc14_121,dwLoc18,dwLoc1C,dwLoc20,fp,N,r0,r2_13,r3_14,r5,r6,r7,r8,sp_119,V_124,VZN,Z_109,ZN_122
		defs: ap_140,C_129,CVZN_127,CZN_136,fp_139,N_141,r0_138,r2_134,r3_135,r5_142,r6_133,r7_131,r8_137,sp_126,V_130,VZN_143,Z_132,ZN_128
	word32 r2_151 = Mem0[r7_131 + 0x0000C839:word32]
	word32 sp_155
	byte CVZN_156
	byte ZN_157
	bool C_158
	bool V_159
	word32 r7_160
	bool Z_161
	word32 r6_162
	word32 r2_163
	word32 r3_164
	byte CZN_165
	word32 r8_166
	word32 r0_167
	word32 fp_168
	word32 ap_169
	bool N_170
	word32 r5_171
	byte VZN_172
	call r2_151 + 2 (retsize: 4; depth: 36)
		uses: ap_140,C_153,CVZN_127,CZN_136,dwLoc08_112,dwLoc0C_115,dwLoc10_118,dwLoc14_121,dwLoc18_145,dwLoc1C_148,dwLoc20_150,fp_139,N_141,r0_138,r2_151,r3_135,r5_142,r6_133,r7_131,r8_137,sp_149,V_154,VZN_143,Z_132,ZN_152
		defs: ap_169,C_158,CVZN_156,CZN_165,fp_168,N_170,r0_167,r2_163,r3_164,r5_171,r6_162,r7_160,r8_166,sp_155,V_159,VZN_172,Z_161,ZN_157
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid>

fn0000A5B2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -32(fp):r7 -28(fp):r7 + 1515 -24(fp):r0 -20(fp):r7 + 1515 -16(fp):r8 + 556 -12(fp):r7 + 0x0000C701 -8(fp):0x00000001

l0000A5CF:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000A6C4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004



void fn0000A8D6(word32 r0, word32 r6, word32 r7, word32 r9, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r0 r6 r7 r9
// LiveOut:
// Trashed: CVZN r0 r10 r2 r3 r8 sp
// Preserved:
fn0000A8D6_entry:
// DataOut: fp r0 r6 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000A8D6:
	word32 sp_190 = fp + -112
	branch Mem0[r9 + 348:byte] == 0x00 l0000A906
// DataOut: fp r0 r10 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000A906:
// DataOut: fp r0 r10 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 r10:<invalid> r8:<invalid>

l0000A910:
	word32 sp_99 = sp_190 - 0x00000004
	Mem100[sp_99:word32] = 0x00000001
	Mem103[sp_99 - 0x00000004:word32] = r7 + 0x0000C701
	Mem106[sp_99 - 0x00000008:word32] = r6 + 718
	Mem109[sp_99 - 0x0000000C:word32] = r7 + 1515
	word32 sp_114
	byte ZN_115
	bool C_116
	bool V_117
	word32 r10_118
	word32 r8_119
	word32 r9_120
	bool Z_121
	word32 r3_122
	word32 r0_123
	word32 r7_124
	word32 r6_125
	word32 r2_126
	word32 fp_127
	byte VZN_128
	byte CZN_129
	call Mem109[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: C_111,CZN,fp,r0,r10_4,r2,r3_91,r6_96,r7_97,r8_5,r9,sp_107,V_112,VZN,Z_8,ZN_110
		defs: C_116,CZN_129,fp_127,r0_123,r10_118,r2_126,r3_122,r6_125,r7_124,r8_119,r9_120,sp_114,V_117,VZN_128,Z_121,ZN_115
	Mem131[sp_114 - 0x00000004:word32] = r0_123
	Mem134[sp_114 - 0x00000008:word32] = r7_124 + 1515
	Mem136[sp_114 - 0x0000000C:word32] = r7_124
	word32 r2_137 = Mem136[r7_124 + 0x0000C839:word32]
	word32 sp_141
	byte ZN_142
	bool C_143
	bool V_144
	word32 r10_145
	word32 r8_146
	word32 r9_147
	bool Z_148
	word32 r3_149
	word32 r0_150
	word32 r7_151
	word32 r6_152
	word32 r2_153
	word32 fp_154
	byte VZN_155
	byte CZN_156
	call r2_137 + 2 (retsize: 4; depth: 4)
		uses: C_139,CZN_129,fp_127,r0_123,r10_118,r2_137,r3_122,r6_125,r7_124,r8_119,r9_120,sp_135,V_140,VZN_128,Z_121,ZN_138
		defs: C_143,CZN_156,fp_154,r0_150,r10_145,r2_153,r3_149,r6_152,r7_151,r8_146,r9_147,sp_141,V_144,VZN_155,Z_148,ZN_142
	Mem159[sp_141 - 0x00000004:word32] = Mem136[r8_146:word32]
	word32 sp_163
	byte ZN_164
	bool C_165
	bool V_166
	word32 r10_167
	word32 r8_168
	word32 r9_169
	bool Z_170
	word32 r3_171
	word32 r0_172
	word32 r7_173
	word32 r6_174
	word32 r2_175
	word32 fp_176
	byte VZN_177
	byte CZN_178
	call Mem159[0x00019294:word32] + 2 (retsize: 4; depth: 4)
		uses: C_161,CZN_156,fp_154,r0_150,r10_145,r2_153,r3_149,r6_152,r7_151,r8_146,r9_147,sp_157,V_162,VZN_155,Z_148,ZN_160
		defs: C_165,CZN_178,fp_176,r0_172,r10_167,r2_175,r3_171,r6_174,r7_173,r8_168,r9_169,sp_163,V_166,VZN_177,Z_170,ZN_164
	Mem181[sp_163 - 0x00000004:word32] = Mem159[r8_168:word32]
	Mem183[sp_163 - 0x00000008:word32] = 0x00000009
	Mem186[sp_163 - 0x0000000C:word32] = fp_176 + -14
	byte ZN_191
	bool C_192
	bool V_193
	word32 r8_195
	word32 r9_196
	bool Z_197
	word32 r3_198
	word32 r0_199
	word32 r7_200
	word32 r6_201
	byte VZN_204
	byte CZN_205
	word32 r2_202
	word32 r10_194
	call Mem186[0x00019290:word32] + 2 (retsize: 4; depth: 4)
		uses: C_188,CZN_178,fp_176,r0_172,r10_167,r2_175,r3_171,r6_174,r7_173,r8_168,r9_169,sp_184,V_189,VZN_177,Z_170,ZN_187
		defs: C_192,CZN_205,fp_203,r0_199,r10_194,r2_202,r3_198,r6_201,r7_200,r8_195,r9_196,sp_190,V_193,VZN_204,Z_197,ZN_191
	branch r0_199 != 0x00000000 l0000A998
// DataOut: fp r0 r10 r2 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A954:
	word32 r2_261 = (int32) (int8) SEQ(SLICE(r2_202, word24, 8), Mem186[fp + -14:byte] & ~0x80)
	byte v26_262 = Mem186[r10_194 + r2_261:byte] & ~0xFC
	r2_202 = SEQ(SLICE(r2_261, word24, 8), v26_262)
	branch v26_262 != 0x00 l0000A998
// DataOut: fp r0 r10 r2 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A965:
	Mem271[sp_190 - 0x00000004:int32] = (int32) Mem186[fp + -14:int8]
	byte ZN_275
	bool C_276
	bool V_277
	word32 r8_279
	word32 r9_280
	bool Z_281
	word32 r3_282
	word32 r0_283
	word32 r7_284
	word32 r6_285
	byte VZN_288
	byte CZN_289
	call r3_198 + 2 (retsize: 4; depth: 4)
		uses: C_273,CZN_205,fp_203,r0_199,r10_194,r2_264,r3_198,r6_201,r7_200,r8_195,r9_196,sp_269,V_268,VZN_272,Z_266,ZN_265
		defs: C_276,CZN_289,fp_287,r0_283,r10_278,r2_286,r3_282,r6_285,r7_284,r8_279,r9_280,sp_274,V_277,VZN_288,Z_281,ZN_275
	branch r0_283 == 0x0000006F l0000A998
// DataOut: fp r0 r10 r2 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A975:
	Mem295[sp_190 - 0x00000004:int32] = (int32) Mem271[fp + -14:int8]
	byte ZN_299
	bool C_300
	bool V_301
	word32 r8_303
	word32 r9_304
	bool Z_305
	word32 r3_306
	word32 r0_307
	word32 r7_308
	word32 r6_309
	byte VZN_312
	byte CZN_313
	call r3_282 + 2 (retsize: 4; depth: 4)
		uses: C_297,CZN_290,fp_287,r0_283,r10_278,r2_286,r3_282,r6_285,r7_284,r8_279,r9_280,sp_293,V_292,VZN_296,Z_291,ZN_275
		defs: C_300,CZN_313,fp_311,r0_307,r10_302,r2_310,r3_306,r6_309,r7_308,r8_303,r9_304,sp_298,V_301,VZN_312,Z_305,ZN_299
	branch r0_307 == 0x00000076 l0000A998
// DataOut: fp r0 r10 r2 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A985:
	Mem319[sp_190 - 0x00000004:int32] = (int32) Mem295[fp + -14:int8]
	byte ZN_323
	bool C_324
	bool V_325
	word32 r8_327
	word32 r9_328
	bool Z_329
	word32 r3_330
	word32 r0_331
	byte VZN_336
	byte CZN_337
	call r3_306 + 2 (retsize: 4; depth: 4)
		uses: C_321,CZN_314,fp_311,r0_307,r10_302,r2_310,r3_306,r6_309,r7_308,r8_303,r9_304,sp_317,V_316,VZN_320,Z_315,ZN_299
		defs: C_324,CZN_337,fp_335,r0_331,r10_326,r2_334,r3_330,r6_333,r7_332,r8_327,r9_328,sp_322,V_325,VZN_336,Z_329,ZN_323
	branch r0_331 == 0x0000006E l0000A998
// DataOut: fp r0 r10 r2 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A998:
	word32 r2_227 = (int32) (int8) SEQ(SLICE(r2_202, word24, 8), Mem186[fp + -14:byte] & ~0x80)
	branch (Mem186[r10_194 + r2_227 * 4:word32] & 0x00000001) == 0x00000000 l0000A9C2
// DataOut: fp r0 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A9A6:
	word32 sp_230 = sp_190 - 0x00000004
	Mem232[sp_230:int32] = (int32) Mem186[fp + -14:int8]
	word32 sp_235
	byte ZN_236
	bool C_237
	bool V_238
	word32 r10_239
	word32 r8_240
	word32 r9_241
	bool Z_242
	word32 r3_243
	word32 r0_244
	word32 r7_245
	word32 r6_246
	word32 r2_247
	byte VZN_249
	byte CZN_250
	call Mem232[0x00019298:word32] + 2 (retsize: 4; depth: 4)
		uses: C_234,CZN_210,fp_211,r0_215,r10_220,r2_227,r3_216,r6_213,r7_214,r8_219,r9_218,sp_230,V_221,VZN_233,Z_217,ZN_222
		defs: C_237,CZN_250,fp_248,r0_244,r10_239,r2_247,r3_243,r6_246,r7_245,r8_240,r9_241,sp_235,V_238,VZN_249,Z_242,ZN_236
	Mem252[fp + -14:int8] = (int8) r0_244
	Mem254[r9_241 + 348:byte] = (byte) r0_244
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A995:
// DataOut: fp r0 r10 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A903:
// DataOut: fp r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 r10:<invalid> r8:<invalid>

l0000A9BC:
	Mem81[fp + -14:byte] = Mem0[r9 + 348:byte]
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 r10:<invalid> r8:<invalid>

l0000A9C2:
	word32 r0_24 = (int32) Mem0[fp + -14:int8]
	branch r0_24 > 0x00000076 l0000A9DE
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A9DE:
	byte VZN_62 = vax_subp4(0x0000, 0x31, Mem0[r0_24:word16], 0x00)
	word32 sp_64
	byte ZN_65
	bool C_66
	bool V_67
	word32 r10_68
	word32 r8_69
	word32 r9_70
	bool Z_71
	word32 r3_72
	word32 r0_73
	word32 r7_74
	word32 r6_75
	word32 r2_76
	word32 fp_77
	byte VZN_78
	byte CZN_79
	call fn40009A48 (retsize: 4; depth: 4)
		uses: C_63,CZN_11,fp_12,r0_61,r10_20,r2_13,r3_16,r6_14,r7_15,r8_19,r9_18,sp_23,V_21,VZN_62,Z_17,ZN_22
		defs: C_66,CZN_79,fp_77,r0_73,r10_68,r2_76,r3_72,r6_75,r7_74,r8_69,r9_70,sp_64,V_67,VZN_78,Z_71,ZN_65
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

l0000A9C6_1:
	word32 sp_44
	byte ZN_45
	bool C_46
	bool V_47
	word32 r10_48
	word32 r8_49
	word32 r9_50
	bool Z_51
	word32 r3_52
	word32 r0_53
	word32 r7_54
	word32 r6_55
	word32 r2_56
	word32 fp_57
	byte VZN_58
	byte CZN_59
	call 0x0000A9CE + (r0_24 - 0x0000006E) * 0x00000002 (retsize: 4; depth: 4)
		uses: C_26,CZN_11,fp_12,r0_24,r10_20,r2_13,r3_16,r6_14,r7_15,r8_19,r9_18,sp_23,V_21,VZN_25,Z_17,ZN_22
		defs: C_46,CZN_59,fp_57,r0_53,r10_48,r2_56,r3_52,r6_55,r7_54,r8_49,r9_50,sp_44,V_47,VZN_58,Z_51,ZN_45
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001

fn0000A8D6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r8:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp + -14 -152(fp):0x00000009 -148(fp):<invalid> -144(fp):<invalid> -140(fp):r7 -136(fp):r7 + 1515 -132(fp):r0 -128(fp):r7 + 1515 -124(fp):r6 + 718 -120(fp):r7 + 0x0000C701 -116(fp):0x00000001



word32 fn0000AA6A(word32 r0, word32 r8, word32 r10, word32 r11, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & apOut, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r10 r11 r8
// LiveOut: ap fp r0 r3 r6 r7
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r9 sp
// Preserved:
fn0000AA6A_entry:
	*r7Out = r7
	*r6Out = r6
	*r3Out = r3
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000AA6A:
	word32 v8_5 = Mem0[r10 + 0x0000C627:word32]
	Mem10[r8 + 308:word32] = 0x00000000
	Mem13[r8 + 316:word64] = 0x0000000000000000
	Mem15[r8 + 324:word64] = 0x0000000000000000
	Mem17[r8 + 340:word64] = 0x0000000000000000
	word32 sp_193 = fp - 0x00000018
	branch v8_5 != 0x00000000 l0000AAA5
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000AAA5:
	branch (uint32) Mem17[r10 + 0x0000C656:word16] > 0x00000000 l0000AAB2
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018 -20(fp):0x00000000 -16(fp):<invalid>

l0000AAB2:
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid>

l0000AABC:
	Mem197[sp_193 + 16:word32] = Mem17[sp_193 + 8:word32]
	branch Mem197[Mem197[sp_193 + 16:word32]:word16] == Mem197[r11 + 831:word16] l0000AACC
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AACC:
	Mem400[sp_193 + 4:word32] = 0x00000001
	word32 r3_401 = Mem400[sp_193 + 16:word32]
	*r3Out = r3_401
	word32 r4_403 = Mem400[r3_401 + 4:word32]
	branch r4_403 != Mem400[r11 + 834:word32] l0000AB00
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB00:
	branch r4_403 != Mem400[r11 + 839:word32] l0000AB4C
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB4C:
	branch r4_403 != Mem400[r11 + 844:word32] l0000AB98
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB98:
	branch r4_403 != Mem400[r11 + 849:word32] l0000ABC0
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ABC0:
	branch r4_403 != Mem400[r11 + 854:word32] l0000ABE8
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ABE8:
	branch r4_403 != Mem400[r11 + 859:word32] l0000AC10
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC10:
	branch r4_403 != Mem400[r11 + 864:word32] l0000AC38
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC38:
	branch r4_403 != Mem400[r11 + 869:word32] l0000AC42
// DataOut: ap fp r0 r10 r11 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC42:
	word32 sp_648 = sp_193 - 0x00000004
	Mem649[sp_648:word32] = 0x00000001
	Mem651[sp_648 - 0x00000004:word32] = r3_401 + 4
	Mem654[sp_648 - 0x00000008:word32] = r11 + 874
	Mem657[sp_648 - 0x0000000C:word32] = r10 + 1515
	word32 sp_661
	byte CVZN_662
	byte ZN_663
	bool C_664
	bool V_665
	word32 r10_666
	bool Z_667
	bool N_668
	word32 r8_669
	word32 r0_670
	word32 fp_671
	word32 ap_672
	word32 r11_673
	byte CZN_674
	word32 r2_675
	word32 r3_676
	word32 r6_677
	byte VZN_678
	word32 r9_679
	word32 r7_680
	word32 r5_681
	word32 r4_682
	call fn00000003 (retsize: 4; depth: 4)
		uses: ap_195,C_659,CVZN_186,CZN_645,dwLoc0C_74,dwLoc10_6,dwLoc14_8,dwLoc18_173,fp_194,N_191,r0_190,r10_185,r11_183,r2_188,r3_401,r4_403,r5_402,r6_182,r7_179,r8_184,r9_180,sp_655,V_660,VZN_181,Z_646,ZN_658
		defs: ap_672,C_664,CVZN_662,CZN_674,fp_671,N_668,r0_670,r10_666,r11_673,r2_675,r3_676,r4_682,r5_681,r6_677,r7_680,r8_669,r9_679,sp_661,V_665,VZN_678,Z_667,ZN_663
	Mem684[sp_661 - 0x00000004:word32] = r0_670
	Mem687[sp_661 - 0x00000008:word32] = r10_666 + 1515
	Mem689[sp_661 - 0x0000000C:word32] = r10_666
	word32 r2_690 = Mem689[r10_666 + 0x0000C839:word32]
	byte CVZN_695
	byte ZN_696
	bool C_697
	bool V_698
	bool Z_700
	bool N_701
	byte CZN_707
	word32 r2_708
	word32 r3_709
	word32 r6_710
	byte VZN_711
	word32 r9_712
	word32 r7_713
	word32 r5_714
	word32 r4_715
	call r2_690 + 2 (retsize: 4; depth: 4)
		uses: ap_672,C_692,CVZN_662,CZN_674,dwLoc0C_74,dwLoc10_6,dwLoc14_8,dwLoc18_173,fp_671,N_668,r0_670,r10_666,r11_673,r2_690,r3_676,r4_682,r5_681,r6_677,r7_680,r8_669,r9_679,sp_688,V_693,VZN_678,Z_667,ZN_691
		defs: ap_705,C_697,CVZN_695,CZN_707,fp_704,N_701,r0_703,r10_699,r11_706,r2_708,r3_709,r4_715,r5_714,r6_710,r7_713,r8_702,r9_712,sp_694,V_698,VZN_711,Z_700,ZN_696
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC3F:
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC17:
	word32 sp_621 = sp_193 - 0x00000004
	Mem623[sp_621:uint32] = (uint32) Mem400[Mem400[0x0001936C:word32]:byte]
	Mem626[sp_621 - 0x00000004:word32] = Mem623[0x000192F4:word32]
	Mem628[sp_621 - 0x00000008:word32] = 0x00000000
	Mem630[sp_621 - 0x0000000C:word32] = r3_401
	word32 r3_634
	word32 r6_635
	r0 = fn0000AEF2(ap, fp, out r3_634, out r6_635, out ap, out fp, out sp_193)
	Mem641[r8 + 328:word32] = r0
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ABEF:
	word32 sp_594 = sp_193 - 0x00000004
	Mem596[sp_594:uint32] = (uint32) Mem400[Mem400[0x00019368:word32]:byte]
	Mem599[sp_594 - 0x00000004:word32] = Mem596[0x000192F0:word32]
	Mem601[sp_594 - 0x00000008:word32] = 0x00000000
	Mem603[sp_594 - 0x0000000C:word32] = r3_401
	word32 r3_607
	word32 r6_608
	r0 = fn0000AEF2(ap, fp, out r3_607, out r6_608, out ap, out fp, out sp_193)
	Mem614[r8 + 324:word32] = r0
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ABC7:
	word32 sp_567 = sp_193 - 0x00000004
	Mem569[sp_567:uint32] = (uint32) Mem400[Mem400[0x00019364:word32]:byte]
	Mem572[sp_567 - 0x00000004:word32] = Mem569[0x00019300:word32]
	Mem574[sp_567 - 0x00000008:word32] = 0x00000000
	Mem576[sp_567 - 0x0000000C:word32] = r3_401
	word32 r3_580
	word32 r6_581
	r0 = fn0000AEF2(ap, fp, out r3_580, out r6_581, out ap, out fp, out sp_193)
	Mem587[r8 + 320:word32] = r0
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB9F:
	word32 sp_540 = sp_193 - 0x00000004
	Mem542[sp_540:uint32] = (uint32) Mem400[Mem400[0x00019360:word32]:byte]
	Mem545[sp_540 - 0x00000004:word32] = Mem542[0x000192FC:word32]
	Mem547[sp_540 - 0x00000008:word32] = 0x00000000
	Mem549[sp_540 - 0x0000000C:word32] = r3_401
	word32 r3_553
	word32 r6_554
	r0 = fn0000AEF2(ap, fp, out r3_553, out r6_554, out ap, out fp, out sp_193)
	Mem560[r8 + 316:word32] = r0
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB53:
	word32 sp_487 = sp_193 - 0x00000004
	Mem489[sp_487:uint32] = (uint32) Mem400[Mem400[0x0001935C:word32]:byte]
	Mem492[sp_487 - 0x00000004:word32] = Mem489[0x000192F8:word32]
	Mem494[sp_487 - 0x00000008:word32] = 0x00000000
	Mem496[sp_487 - 0x0000000C:word32] = r3_401
	word32 r3_500
	word32 r6_501
	r0 = fn0000AEF2(ap, fp, out r3_500, out r6_501, out ap, out fp, out sp_193)
	Mem507[r8 + 332:word32] = r0
	branch Mem507[r8 + 340:word32] != 0x00000000 l0000AB7B
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB74:
	Mem533[r8 + 340:word32] = Mem507[r8 + 332:word32]
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB7B:
	word32 r2_512 = Mem507[r8 + 344:word32]
	branch r2_512 == 0x00000000 l0000AB88
// DataOut: ap fp r0 r10 r11 r2 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB82:
	Mem528[r2_512 + 4:word32] = Mem507[r8 + 332:word32]
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB88:
	word32 r2_518 = Mem507[r8 + 332:word32]
	Mem520[r8 + 344:word32] = r2_518
	Mem522[r2_518 + 4:word32] = 0x00000000
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB07:
	word32 sp_434 = sp_193 - 0x00000004
	Mem436[sp_434:uint32] = (uint32) Mem400[Mem400[0x00019358:word32]:byte]
	Mem439[sp_434 - 0x00000004:word32] = Mem436[0x00019304:word32]
	Mem441[sp_434 - 0x00000008:word32] = 0x00000000
	Mem443[sp_434 - 0x0000000C:word32] = r3_401
	word32 r3_447
	word32 r6_448
	r0 = fn0000AEF2(ap, fp, out r3_447, out r6_448, out ap, out fp, out sp_193)
	Mem454[r8 + 336:word32] = r0
	branch Mem454[r8 + 340:word32] != 0x00000000 l0000AB2F
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB28:
	Mem480[r8 + 340:word32] = Mem454[r8 + 336:word32]
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB2F:
	word32 r2_459 = Mem454[r8 + 344:word32]
	branch r2_459 == 0x00000000 l0000AB3C
// DataOut: ap fp r0 r10 r11 r2 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB36:
	Mem475[r2_459 + 4:word32] = Mem454[r8 + 336:word32]
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AB3C:
	word32 r2_465 = Mem454[r8 + 336:word32]
	Mem467[r8 + 344:word32] = r2_465
	Mem469[r2_465 + 4:word32] = 0x00000000
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AAE2:
	word32 sp_407 = sp_193 - 0x00000004
	Mem409[sp_407:uint32] = (uint32) Mem400[Mem400[0x00019354:word32]:byte]
	Mem412[sp_407 - 0x00000004:word32] = Mem409[0x0001930C:word32]
	Mem414[sp_407 - 0x00000008:word32] = 0x00000000
	Mem416[sp_407 - 0x0000000C:word32] = r3_401
	word32 r3_420
	word32 r6_421
	r0 = fn0000AEF2(ap, fp, out r3_420, out r6_421, out ap, out fp, out sp_193)
	Mem427[r8 + 308:word32] = r0
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AAC9:
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC68:
	branch (uint32) Mem197[Mem197[sp_193 + 16:word32]:word16] == 0x0000000C l0000AC74
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC74:
	Mem234[sp_193 + 4:word32] = 0x00000002
	word32 r3_235 = Mem234[sp_193 + 16:word32]
	word32 r2_236 = (uint32) Mem234[r3_235 + 2:word16]
	Mem240[r8 + 0x000102EC:word32] = 0x00000000
	word32 sp_241 = sp_193 - 0x00000004
	Mem242[sp_241:word32] = r2_236 - 0x00000004
	Mem244[sp_241 - 0x00000004:word32] = r3_235 + 8
	Mem246[sp_241 - 0x00000008:word32] = 0x00000000
	word32 r6_238 = r3_235 + 8
	*r6Out = r6_238
	word32 r2_250
	word32 r3_251
	r0 = fn0000CFBA(r0, r3_235 + 8, r2_236 - 0x00000004, fp, out r2_250, out r3_251, out ap, out fp, out sp_193)
	branch Mem246[r3_251 + 4:word32] == r0 l0000ACC6
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ACA1:
	Mem327[sp_193 - 0x00000004:word32] = 0x00000001
	Mem330[sp_193 - 0x00000008:word32] = r11 + 915
	Mem333[sp_193 - 0x0000000C:word32] = r10 + 1515
	word32 sp_337
	byte CVZN_338
	byte ZN_339
	bool C_340
	bool V_341
	word32 r10_342
	bool Z_343
	bool N_344
	word32 r8_345
	word32 r0_346
	word32 fp_347
	word32 ap_348
	word32 r11_349
	byte CZN_350
	word32 r2_351
	word32 r3_352
	word32 r6_353
	byte VZN_354
	word32 r9_355
	word32 r7_356
	word32 r5_357
	word32 r4_358
	call fn00000003 (retsize: 4; depth: 4)
		uses: ap_252,C_335,CVZN_186,CZN_256,dwLoc0C_74,dwLoc10_6,dwLoc14_8,dwLoc18_173,fp_253,N_191,r0_255,r10_185,r11_183,r2_250,r3_251,r4_177,r5_178,r6_238,r7_179,r8_184,r9_180,sp_331,V_336,VZN_181,Z_257,ZN_334
		defs: ap_348,C_340,CVZN_338,CZN_350,fp_347,N_344,r0_346,r10_342,r11_349,r2_351,r3_352,r4_358,r5_357,r6_353,r7_356,r8_345,r9_355,sp_337,V_341,VZN_354,Z_343,ZN_339
	Mem360[sp_337 - 0x00000004:word32] = r0_346
	Mem363[sp_337 - 0x00000008:word32] = r10_342 + 1515
	Mem365[sp_337 - 0x0000000C:word32] = r10_342
	word32 r2_366 = Mem365[r10_342 + 0x0000C839:word32]
	byte CVZN_371
	byte ZN_372
	bool C_373
	bool V_374
	bool Z_376
	bool N_377
	word32 ap_381
	byte CZN_383
	word32 r2_384
	word32 r3_385
	byte VZN_387
	word32 r9_388
	word32 r7_389
	word32 r5_390
	word32 r4_391
	call r2_366 + 2 (retsize: 4; depth: 4)
		uses: ap_348,C_368,CVZN_338,CZN_350,dwLoc0C_74,dwLoc10_6,dwLoc14_8,dwLoc18_173,fp_347,N_344,r0_346,r10_342,r11_349,r2_366,r3_352,r4_358,r5_357,r6_353,r7_356,r8_345,r9_355,sp_364,V_369,VZN_354,Z_343,ZN_367
		defs: ap_381,C_373,CVZN_371,CZN_383,fp_380,N_377,r0_379,r10_375,r11_382,r2_384,r3_385,r4_391,r5_390,r6_386,r7_389,r8_378,r9_388,sp_370,V_374,VZN_387,Z_376,ZN_372
	Mem394[sp_193 + 4:word32] = 0x00000000
	ap = 0x00000000
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ACC6:
	branch ap > 0x00000004 l0000ACCE
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ACCE:
	word32 r0_299 = (uint32) Mem246[r6_238:word16]
	branch r0_299 > 0x0000001F l0000AD14
// DataOut: ap fp r0 r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AD14:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ACD8_1:
	word32 sp_304
	byte CVZN_305
	byte ZN_306
	bool C_307
	bool V_308
	word32 r10_309
	bool Z_310
	bool N_311
	word32 r8_312
	word32 r0_313
	word32 fp_314
	word32 ap_315
	word32 r11_316
	byte CZN_317
	word32 r2_318
	word32 r3_319
	word32 r6_320
	byte VZN_321
	word32 r9_322
	word32 r7_323
	word32 r5_324
	word32 r4_325
	call 0x0000ACDC + (r0_299 - 0x00000003) * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_277,C_301,CVZN_268,CZN_278,dwLoc0C_74,dwLoc10_6,dwLoc14_8,dwLoc18_173,fp_276,N_273,r0_299,r10_267,r11_265,r2_270,r3_269,r4_259,r5_260,r6_264,r7_298,r8_266,r9_297,sp_275,V_302,VZN_263,Z_272,ZN_300
		defs: ap_315,C_307,CVZN_305,CZN_317,fp_314,N_311,r0_313,r10_309,r11_316,r2_318,r3_319,r4_325,r5_324,r6_320,r7_323,r8_312,r9_322,sp_304,V_308,VZN_321,Z_310,ZN_306
	return r0_313
// DataOut: ap fp r0 r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ACCB:
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ADA1:
	Mem284[r8 + 0x0001024C + (Mem246[r8 + 0x000102EC:word32] << 3):word16] = 0x0000
	Mem288[r8 + 0x0001024E + (Mem284[r8 + 0x000102EC:word32] << 3):word16] = 0x0000
	Mem292[r8 + 0x00010250 + (Mem288[r8 + 0x000102EC:word32] << 3):word32] = 0x00000000
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AC71:
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ADD7:
	word32 r2_220 = (uint32) Mem197[Mem197[sp_193 + 16:word32] + 2:word16]
	Mem223[sp_193 + 12:word32] = Mem197[sp_193 + 12:word32] - (r2_220 + 0x00000004)
	Mem225[sp_193 + 8:word32] = Mem223[sp_193 + 8:word32] + (r2_220 + 0x00000004)
	branch Mem225[sp_193 + 12:word32] <= 0x00000000 l0000ADF2
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ADEF:
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AAAF:
// DataOut: fp r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid>

l0000ADF2:
	branch Mem17[sp_193 + 4:word32] != 0x00000001 l0000AE5F
// DataOut: fp r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ADF8:
	word32 r2_112 = Mem17[r8 + 308:word32]
	branch r2_112 == 0x00000000 l0000AE5C
// DataOut: fp r2 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r2:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AE5C:
	Mem164[sp_193 + 4:word32] = 0x00000000
// DataOut: fp r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000ADFF:
	Mem118[r2_112 + 36:word32] = 0x00000000
	word32 r3_119 = Mem118[r8 + 316:word32]
	branch r3_119 == 0x00000000 l0000AE1E
// DataOut: fp r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AE09:
	Mem156[r3_119 + 4:word32] = Mem118[Mem118[r8 + 308:word32] + 36:word32]
	Mem159[Mem156[r8 + 308:word32] + 36:word32] = Mem156[r8 + 316:word32]
// DataOut: fp r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AE1E:
	word32 r3_125 = Mem118[r8 + 320:word32]
	*r3Out = r3_125
	branch r3_125 == 0x00000000 l0000AE3A
// DataOut: fp r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AE25:
	Mem147[r3_125 + 4:word32] = Mem118[Mem118[r8 + 308:word32] + 36:word32]
	Mem150[Mem147[r8 + 308:word32] + 36:word32] = Mem147[r8 + 320:word32]
// DataOut: fp r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AE3A:
	branch Mem118[r8 + 340:word32] == 0x00000000 l0000AE5F
// DataOut: fp r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AE40:
	word32 r3_135 = Mem118[r8 + 344:word32]
	*r3Out = r3_135
	Mem138[r3_135 + 4:word32] = Mem118[Mem118[r8 + 308:word32] + 36:word32]
	Mem141[Mem138[r8 + 308:word32] + 36:word32] = Mem138[r8 + 340:word32]
// DataOut: fp r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AE5F:
	word32 sp_109 = fp - 0x00000004
	word32 fp_110
	*fpOut = Mem17[sp_109 + 0x00000010:word32]
	word32 ap_111
	*apOut = Mem17[sp_109 + 0x0000000C:word32]
	return Mem17[sp_193 + 4:word32]
// DataOut: ap fp r0 r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AAA2:
	word32 fp_58
	*fpOut = Mem17[fp + 0x0000000C:word32]
	word32 ap_59
	*apOut = Mem17[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018 -20(fp):0x00000000 -16(fp):<invalid>

fn0000AA6A_exit:
// DataOut: ap fp r0 r3 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r9:0x00000000 r7:<invalid> -52(fp):r10 -48(fp):r10 + 1515 -44(fp):r0 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



word32 fn0000AEF2(word32 ap, word32 fp, ptr32 & r3Out, ptr32 & r6Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp r0 r3 r6 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn0000AEF2_entry:
// DataOut: ap fp r10 r11 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000AEF2:
	word32 r2_14
	word32 r1_5 = Mem0[ap + 4:word32]
	word32 r6_7 = (uint32) Mem0[r1_5 + 8:word16] & ~0xFFFFFFF8
	word32 r5_8 = (uint32) Mem0[r1_5 + 2:word16]
	branch r6_7 != 0x00000000 l0000AF18
// DataOut: ap fp r1 r10 r11 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000AF18:
	r2_14 = (uint32) Mem0[r1_5 + 10:word16]
// DataOut: ap fp r10 r11 r2 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid>
// LocalsOut: fp(32)

l0000AF10:
	r2_14 = r5_8 - 0x0000000C
// DataOut: ap fp r10 r11 r2 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid>
// LocalsOut: fp(32)

l0000AF1C:
	branch Mem0[ap + 16:word32] != 0x00000000 l0000AF28
// DataOut: ap fp r10 r11 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l0000AF24:
	Mem181[ap + 16:word32] = r2_14
// DataOut: ap fp r10 r11 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l0000AF28:
	word32 r0_20 = Mem0[ap + 8:word32]
	branch r0_20 == 0x00000000 l0000AF31
// DataOut: ap fp r0 r10 r11 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l0000AF2E:
	Mem176[r0_20:word32] = r2_14
// DataOut: ap fp r10 r11 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l0000AF31:
	word32 r0_26 = Mem0[ap + 16:word32]
	branch r0_26 <= r2_14 l0000AF40
// DataOut: ap fp r0 r10 r11 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l0000AF40:
// DataOut: ap fp r0 r10 r11 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l0000AF3A:
// DataOut: ap fp r0 r10 r11 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l0000AF43:
	word32 sp_36
	byte CVZN_37
	word32 ap_38
	word32 r1_39
	byte ZN_40
	bool C_41
	bool V_42
	word32 r0_43
	word32 r5_45
	bool Z_46
	word32 r2_47
	word32 r4_48
	byte CZN_49
	word32 r3_50
	bool N_51
	word32 fp_52
	word32 r6_106
	call Mem0[0x000192B4:word32] + 2 (retsize: 4; depth: 12)
		uses: ap,C_34,CZN_27,dwLoc08_32,r0_26,r1_5,r2_30,r4_15,r5_9,r6_7,sp_31,V_35,Z_22,ZN_33
		defs: ap_38,C_41,CVZN_37,CZN_49,fp_52,N_51,r0_43,r1_39,r2_47,r3_50,r4_48,r5_45,r6_44,sp_36,V_42,Z_46,ZN_40
	word32 r3_53 = r0_43
	*r3Out = r3_53
	branch r0_43 != 0x00000000 l0000AF54
// DataOut: ap fp r10 r11 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l0000AF54:
	branch Mem0[ap_38 + 12:word32] == 0x00000000 l0000AF6E
// DataOut: ap fp r10 r11 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l0000AF59:
	branch r4_48 >= Mem0[ap_38 + 16:word32] l0000AF6E
// DataOut: ap fp r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l0000AF5F:
	word32 sp_150
	byte CVZN_151
	word32 ap_152
	word32 r1_153
	byte ZN_154
	bool C_155
	bool V_156
	word32 r0_157
	word32 r5_159
	bool Z_160
	word32 r2_161
	word32 r4_162
	byte CZN_163
	word32 r3_164
	bool N_165
	word32 fp_166
	call Mem0[0x0001929C:word32] + 2 (retsize: 4; depth: 24)
		uses: ap_38,C_148,CVZN_37,CZN_136,dwLoc08_32,dwLoc0C_141,dwLoc10_144,dwLoc14_146,fp_52,N_137,r0_43,r1_39,r2_47,r3_53,r4_48,r5_45,r6_44,sp_145,V_149,Z_95,ZN_147
		defs: ap_152,C_155,CVZN_151,CZN_163,fp_166,N_165,r0_157,r1_153,r2_161,r3_164,r4_162,r5_159,r6_158,sp_150,V_156,Z_160,ZN_154
// DataOut: ap fp r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> -8(fp):<invalid>

l0000AF6E:
	branch r6_106 > 0x00000002 l0000AF79
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AF79:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AF71_1:
	word32 sp_119
	byte CVZN_120
	word32 ap_121
	word32 r1_122
	byte ZN_123
	bool C_124
	bool V_125
	word32 r0_126
	word32 r6_127
	word32 r5_128
	bool Z_129
	word32 r2_130
	word32 r4_131
	byte CZN_132
	word32 r3_133
	bool N_134
	word32 fp_135
	call 0x0000AF75 + r6_106 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_113,C_116,CVZN_108,CZN_102,dwLoc08_32,dwLoc0C_98,dwLoc10_99,dwLoc14_100,fp_112,N_110,r0_114,r1_107,r2_104,r3_101,r4_103,r5_105,r6_106,sp_111,V_117,Z_109,ZN_115
		defs: ap_121,C_124,CVZN_120,CZN_132,fp_135,N_134,r0_126,r1_122,r2_130,r3_133,r4_131,r5_128,r6_127,sp_119,V_125,Z_129,ZN_123
	return r0_126
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000AF51:
	word32 sp_88
	*spOut = fp_52 - 0x00000004
	word32 fp_89
	*fpOut = Mem0[fp_52 + 0x0000000C:word32]
	word32 ap_90
	*apOut = Mem0[fp_52 + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 r10 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> -8(fp):<invalid>

fn0000AEF2_exit:
// DataOut: ap fp r0 r3 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r6:<invalid> r5:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



void fn0000AFDA(word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 sp
// Preserved:
fn0000AFDA_entry:
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000AFDA:
	word32 r0_8 = Mem0[ap + 8:word32]
	Mem10[ap + 8:word32] = Mem0[ap + 8:word32] - 0x00000001
	word32 r2_115 = 0x00000000
	word32 r3_117 = 0x00000000
	branch r0_8 != 0x00000000 l0000AFED
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000AFED:
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid>

l0000AFF0:
	branch r2_115 > 0x00000000 l0000B011
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid>

l0000AFF4:
	word32 r1_121 = r2_115 + 0x00000008
	branch r1_121 > 0x00000020 l0000B011
// DataOut: ap fp r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid>

l0000AFFD:
	word32 r0_125 = Mem10[ap + 12:word32]
	Mem127[ap + 12:word32] = Mem10[ap + 12:word32] + 0x00000001
	r3_117 = r3_117 | __ashift((uint32) Mem127[r0_125:byte], r2_115)
	r2_115 = r1_121
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid>

l0000B011:
	branch (r3_117 & 0x00000001) == 0x00000000 l0000B054
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid>

l0000B054:
	word32 r0_110 = Mem10[ap + 4:word32]
	Mem112[ap + 4:word32] = Mem10[ap + 4:word32] + 0x00000001
	Mem114[r0_110:byte] = 0x00
	r2_115 = r2_115 - 0x00000001
	r3_117 = (uint32) SLICE(r3_117, ui31, 1)
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid>

l0000B014:
	word32 r3_104 = (uint32) SLICE(r3_117, ui31, 1)
	word32 r2_105 = r2_115 - 0x00000001
	branch r2_105 >= 0x00000008 l0000B03D
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid>

l0000B020:
	branch r2_105 > 0xFFFFFFE8 l0000B03D
// DataOut: ap fp r1 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid>

l0000B029:
	word32 r0_99 = Mem10[ap + 12:word32]
	Mem101[ap + 12:word32] = Mem10[ap + 12:word32] + 0x00000001
	r3_104 = r3_104 | __ashift((uint32) Mem101[r0_99:byte], r2_105)
	r2_105 = r2_105 + 0x00000008
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid>

l0000B03D:
	word32 r0_84 = Mem10[ap + 4:word32]
	Mem86[ap + 4:word32] = Mem10[ap + 4:word32] + 0x00000001
	Mem88[r0_84:byte] = (byte) r3_104
	r2_115 = r2_105 - 0x00000008
	r3_117 = (uint32) SLICE(r3_104, ui24, 8)
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r3:<invalid> r2:<invalid>

l0000B064:
	word32 r0_66 = Mem10[ap + 8:word32]
	Mem68[ap + 8:word32] = Mem10[ap + 8:word32] - 0x00000001
	branch r0_66 != 0x00000000 l0000AFF0
// DataOut: ap fp r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid>

l0000AFEA:
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid>

l0000B06F:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> r1:<invalid> r2:<invalid> r3:<invalid>

fn0000AFDA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 Sequence r3:r2:0x0000000000000000 r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r2:<invalid> r3:<invalid>



word32 fn0000B072(word32 r0, word32 r2, word32 r6, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2 r6
// LiveOut: fp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn0000B072_entry:
// DataOut: ap fp r0 r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B072:
	word32 r2_21
	word32 r3_22
	word32 ap_23
	word32 fp_24
	word32 sp_25
	word32 r0_26 = fn0000CFBA(r0, r6, ap, fp, out r2_21, out r3_22, out ap_23, out fp_24, out sp_25)
	Mem28[r2_21 + 0x0000C5EF:word32] = r0_26
	branch Mem28[r2_21 + 68:word32] == 0x00000000 l0000B0A5
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000B0A5:
	Mem56[sp_25 - 0x00000004:word32] = 0x00000000
	Mem59[sp_25 - 0x00000008:word32] = Mem56[ap_23 + 8:word32]
	Mem62[sp_25 - 0x0000000C:word32] = Mem59[ap_23 + 0x00000004:word32]
	word32 sp_67
	byte CVZN_68
	byte ZN_69
	bool C_70
	bool V_71
	word32 ap_72
	word32 r2_73
	word32 r0_74
	bool Z_75
	bool N_76
	word32 fp_77
	word32 r3_78
	word32 r6_79
	call Mem62[r3_22 + 0x00010194:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_23,C_64,CVZN,dwLoc08_7,dwLoc0C_10,dwLoc10_14,fp_24,N,r0_26,r2_21,r3_22,r6,sp_60,V_65,Z_30,ZN_63
		defs: ap_72,C_70,CVZN_68,fp_77,N_76,r0_74,r2_73,r3_78,r6_79,sp_67,V_71,Z_75,ZN_69
	return Mem62[fp_77 + 0x0000000C:word32]
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000B0A2:
	return Mem28[fp_24 + 0x0000000C:word32]
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

fn0000B072_exit:
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



void fn0000B192(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r1 r2 r3 r4
// LiveOut:
// Trashed: CVZN ap fp pc r0 r3 sp
// Preserved:
fn0000B192_entry:
// DataOut: ap fp pc r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B192:
	word32 sp_143 = fp - 0x00000004
	branch Mem0[r2 + 0x000101F4:word32] == 0x00000000 l0000B1DF
// DataOut: ap fp pc r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B1AB:
	byte CVZN_144
	byte ZN_145
	bool C_146
	bool V_147
	bool Z_149
	word32 r4_151
	word32 r3_152
	word32 r0_153
	byte VZN_154
	bool N_155
	word32 r1_157
	word32 fp_158
	call Mem0[pc:word32] + 2 (retsize: 4; depth: 16)
		uses: ap,C_139,CVZN,dwLoc08_135,dwLoc0C_137,dwLoc10,dwLoc14,fp,N,pc_142,r0,r1,r2,r3,r4,sp_136,V_140,VZN,Z_6,ZN_138
		defs: ap_156,C_146,CVZN_144,fp_158,N_155,pc_150,r0_153,r1_157,r2_148,r3_152,r4_151,sp_143,V_147,VZN_154,Z_149,ZN_145
	word32 r3_159 = r3_152 + Mem0[r4_151 + 0x50D07FFE:real32]
	branch (r0_153 & 0x00000001) == 0x00000000 l0000B1C7
// DataOut: ap fp pc r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// LocalsOut: fp(32)

l0000B1C0:
	r3_159 = (int32) Mem0[r2 + 0x000101FC:int16]
// DataOut: ap fp pc r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C pc:pc + 0x00000004 r3:<invalid> -12(fp):0x00000000 -8(fp):r2 + 0x000101FC
// LocalsOut: fp(32)

l0000B1C7:
	branch (r3_159 & 0x00000001) != 0x00000000 l0000B1D9
// DataOut: ap fp pc r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C pc:pc + 0x00000004 r3:<invalid> -12(fp):0x00000000 -8(fp):r2 + 0x000101FC
// LocalsOut: fp(32)

l0000B1D9:
	Mem185[r2 + 0x000101F4:word32] = 0x00000000
// DataOut: ap fp pc r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C pc:pc + 0x00000004 r3:<invalid> -12(fp):0x00000000 -8(fp):r2 + 0x000101FC

l0000B1DF:
	word32 sp_39 = sp_143 - 0x00000008
	Mem41[sp_39:word64] = 0x0000000000000000
	Mem43[sp_39 - 0x00000004:word32] = 0x00000000
	Mem46[sp_39 - 0x00000008:word32] = Mem43[r2 + 0x000101F8:word32]
	Mem49[sp_39 - 0x0000000C:word32] = Mem46[ap + 8:word32]
	Mem52[sp_39 - 0x00000010:word32] = Mem49[ap + 4:word32]
	Mem55[sp_39 - 0x00000018:word64] = 0x0000000000000000
	Mem58[sp_39 - 0x0000001C:word32] = r2 + 0x000101FC
	Mem60[sp_39 - 0x00000020:word32] = 0x00000030
	Mem63[sp_39 - 0x00000024:word32] = Mem60[r2 + 0x000101F0:word32]
	Mem65[sp_39 - 0x00000028:word32] = 0x00000000
	word32 sp_81
	byte CVZN_82
	byte ZN_83
	bool C_84
	bool V_85
	word32 r2_86
	bool Z_87
	word32 pc_88
	word32 r4_89
	word32 r3_90
	word32 r0_91
	byte VZN_92
	bool N_93
	word32 ap_94
	word32 r1_95
	word32 fp_96
	call Mem65[pc:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_38,C_67,CVZN,dwLoc08_33,dwLoc0C_34,dwLoc10,dwLoc14,fp,N,pc_70,r0,r1,r2_36,r3,r4,sp_64,V_68,VZN,Z_6,ZN_66
		defs: ap_94,C_84,CVZN_82,fp_96,N_93,pc_88,r0_91,r1_95,r2_86,r3_90,r4_89,sp_81,V_85,VZN_92,Z_87,ZN_83
	Mem98[Mem98[r0_91 + 20816:word32]:word32] = Mem65[r0_91 + 20816:word32] | Mem65[Mem65[0x00013206:word32]:word32]
	branch (r0_91 & 0x00000001) != 0x00000000 l0000B21D
// DataOut: ap fp r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:pc + 0x00000004 r3:<invalid> -12(fp):0x00000000 -8(fp):r2 + 0x000101FC

l0000B21D:
	Mem121[r2_86 + 0x000101F4:word32] = 0x00000001
	Mem124[r2_86 + 0x000101F8:word32] = Mem121[r2_86 + 0x000101F8:word32] + (uint32) Mem121[ap_94 + 0x00000009:ui23]
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:<invalid> r3:<invalid> -52(fp):0x00000000 -48(fp):<invalid> -44(fp):0x00000030 -40(fp):r2 + 0x000101FC -36(fp):0x0000000000000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):0x00000000 -12(fp):0x0000000000000000 -8(fp):r2 + 0x000101FC

l0000B20E:
	Mem103[sp_81 - 0x00000004:word32] = r1_95
	Mem106[sp_81 - 0x00000008:word32] = r4_89 + 1011
	word32 fp_110
	word32 sp_111
	fn0000C022(r0_91, r2_86, r3_90, r4_89, ap_94, fp_96, out fp_110, out sp_111)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:<invalid> r3:<invalid> -52(fp):0x00000000 -48(fp):<invalid> -44(fp):0x00000030 -40(fp):r2 + 0x000101FC -36(fp):0x0000000000000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):0x00000000 -12(fp):0x0000000000000000 -8(fp):r2 + 0x000101FC

l0000B1CA:
	word32 fp_174
	word32 sp_175
	fn0000C022(r0_153, r2, r3_159, r4_151, ap, fp_158, out fp_174, out sp_175)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C pc:pc + 0x00000004 r3:<invalid> -12(fp):0x00000000 -8(fp):r2 + 0x000101FC

fn0000B192_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> -60(fp):r4 + 1011 -56(fp):r1 -52(fp):0x00000000 -48(fp):<invalid> -44(fp):0x00000030 -40(fp):r2 + 0x000101FC -36(fp):0x0000000000000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):0x0000000000000000 -8(fp):r2 + 0x000101FC



void fn0000B86E(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r1 r2 r3 r4
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 sp
// Preserved:
fn0000B86E_entry:
// DataOut: ap fp pc r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B86E:
	byte CVZN_15
	byte ZN_16
	bool C_17
	bool V_18
	word32 r2_19
	word32 pc_20
	word32 r1_21
	word32 r0_22
	word32 r3_23
	word32 fp_25
	bool Z_26
	bool N_27
	word32 r4_28
	word32 sp_14
	word32 ap_147
	call Mem0[pc:word32] + 2 (retsize: 4; depth: 12)
		uses: C_9,dwLoc08_7,pc_13,r2,sp_3,V_10,ZN_8
		defs: ap_24,C_17,CVZN_15,fp_25,N_27,pc_20,r0_22,r1_21,r2_19,r3_23,r4_28,sp_14,V_18,Z_26,ZN_16
	branch (r0_22 & 0x00000001) != 0x00000000 l0000B8AC
// DataOut: ap fp pc r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B890:
	word32 fp_132
	word32 sp_133
	word32 ap_134 = fn0000C022(r0_22, r2_19, r3_23, r4_28, ap_147, fp_25, out fp_132, out sp_133)
	word32 r0_135 = Mem0[r2_19 + 312:word32]
	Mem138[sp_133 - 0x00000004:word32] = Mem0[r0_135 + 12:word32]
	Mem141[sp_133 - 0x00000008:word32] = r3_23 + 1222
	word32 fp_145
	ap_147 = fn0000C022(r0_135, r2_19, r3_23, r4_28, ap_134, fp_132, out fp_145, out sp_14)
// DataOut: ap fp pc r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 pc:pc + 0x00000004 r1:<invalid> -8(fp):<invalid>

l0000B8AC:
	Mem43[Mem0[r2_19 + 312:word32] + 34:word16] = Mem0[ap_147 + 8:word16]
	word32 r0_44 = Mem43[r2_19 + 312:word32]
	Mem46[r0_44 + 40:word32] = Mem43[ap_147 + 4:word32]
	word32 sp_47 = sp_14 - 0x00000004
	Mem49[sp_47:word32] = Mem46[r2_19 + 312:word32]
	word32 sp_55
	byte CVZN_56
	byte ZN_57
	bool C_58
	bool V_59
	word32 r2_60
	word32 pc_61
	word32 r1_62
	word32 r0_63
	word32 r3_64
	word32 ap_65
	word32 fp_66
	bool Z_67
	bool N_68
	word32 r4_69
	call Mem49[pc_20:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_40,C_51,CVZN_15,dwLoc08_7,dwLoc0C_37,dwLoc10_38,fp_25,N_27,pc_54,r0_44,r1_31,r2_19,r3_23,r4_28,sp_47,V_52,Z_26,ZN_50
		defs: ap_65,C_58,CVZN_56,fp_66,N_68,pc_61,r0_63,r1_62,r2_60,r3_64,r4_69,sp_55,V_59,Z_67,ZN_57
	word32 r1_72 = SEQ(SLICE(r1_62, word16, 16), Mem49[r1_62 + 0x50D07FFE:word16])
	branch (r0_63 & 0x00000001) != 0x00000000 l0000B8F1
// DataOut: ap fp r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:pc + 0x00000004 r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -24(fp):r3 + 1222 -20(fp):<invalid> -16(fp):r3 + 1188 -12(fp):<invalid> -8(fp):<invalid>

l0000B8F1:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:pc + 0x0000000C r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -24(fp):r3 + 1222 -20(fp):<invalid> -16(fp):r3 + 1188 -12(fp):<invalid> -8(fp):<invalid>

l0000B8D1:
	Mem86[sp_55 - 0x00000004:word32] = r1_72
	Mem89[sp_55 - 0x00000008:word32] = r3_64 + 1223
	word32 fp_93
	word32 sp_94
	word32 ap_95 = fn0000C022(r0_63, r2_60, r3_64, r4_69, ap_65, fp_66, out fp_93, out sp_94)
	word32 r0_96 = Mem89[r2_60 + 312:word32]
	Mem99[sp_94 - 0x00000004:word32] = Mem89[r0_96 + 12:word32]
	Mem102[sp_94 - 0x00000008:word32] = r3_64 + 1258
	word32 fp_106
	word32 sp_107
	fn0000C022(r0_96, r2_60, r3_64, r4_69, ap_95, fp_93, out fp_106, out sp_107)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:pc + 0x0000000C r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -24(fp):r3 + 1222 -20(fp):<invalid> -16(fp):r3 + 1188 -12(fp):<invalid> -8(fp):<invalid>

fn0000B86E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:pc + 0x0000000C r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -24(fp):r3 + 1222 -20(fp):<invalid> -16(fp):r3 + 1188 -12(fp):<invalid> -8(fp):<invalid>



void fn0000B8F6(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r1 r2 r3 r4
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 sp
// Preserved:
fn0000B8F6_entry:
// DataOut: ap fp pc r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B8F6:
	branch Mem0[r2 + 12:word32] == 0x00000000 l0000B940
// DataOut: ap fp pc r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B940:
	byte CVZN_138
	byte ZN_139
	bool C_140
	bool V_141
	word32 r2_142
	bool Z_143
	word32 r0_145
	word32 r4_146
	word32 r3_147
	word32 pc_148
	word32 r1_149
	bool N_150
	word32 fp_151
	word32 sp_137
	word32 ap_144
	call Mem0[pc:word32] + 2 (retsize: 4; depth: 12)
		uses: ap,C_129,CVZN,dwLoc08_127,dwLoc0C,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,fp,N,pc_132,r0,r1,r2,r3,r4,sp_125,V_130,Z_6,ZN_128
		defs: ap_144,C_140,CVZN_138,fp_151,N_150,pc_148,r0_145,r1_149,r2_142,r3_147,r4_146,sp_137,V_141,Z_143,ZN_139
	branch (r0_145 & 0x00000001) != 0x00000000 l0000B96D
// DataOut: ap fp pc r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// LocalsOut: fp(32)

l0000B951:
	word32 fp_236
	word32 sp_237
	word32 ap_238 = fn0000C022(r0_145, r2_142, r3_147, r4_146, ap_144, fp_151, out fp_236, out sp_237)
	word32 r0_239 = Mem0[r3_147 + 312:word32]
	Mem242[sp_237 - 0x00000004:word32] = Mem0[r0_239 + 12:word32]
	Mem245[sp_237 - 0x00000008:word32] = r4_146 + 1295
	word32 fp_249
	ap_144 = fn0000C022(r0_239, r2_142, r3_147, r4_146, ap_238, fp_236, out fp_249, out sp_137)
// DataOut: ap fp pc r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 pc:pc + 0x00000004 r1:<invalid> -8(fp):<invalid>

l0000B96D:
	Mem164[Mem0[r3_147 + 312:word32] + 34:word16] = Mem0[ap_144 + 8:word16]
	word32 r0_165 = Mem164[r3_147 + 312:word32]
	Mem167[r0_165 + 40:word32] = Mem164[ap_144 + 4:word32]
	word32 sp_168 = sp_137 - 0x00000004
	Mem170[sp_168:word32] = Mem167[r3_147 + 312:word32]
	word32 sp_176
	byte CVZN_177
	byte ZN_178
	bool C_179
	bool V_180
	word32 r2_181
	bool Z_182
	word32 ap_183
	word32 r0_184
	word32 r4_185
	word32 r3_186
	word32 pc_187
	word32 r1_188
	bool N_189
	word32 fp_190
	call Mem170[pc_148:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_161,C_172,CVZN_138,dwLoc08_127,dwLoc0C_158,dwLoc10_159,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,fp_151,N_150,pc_175,r0_165,r1_154,r2_142,r3_147,r4_146,sp_168,V_173,Z_143,ZN_171
		defs: ap_183,C_179,CVZN_177,fp_190,N_189,pc_187,r0_184,r1_188,r2_181,r3_186,r4_185,sp_176,V_180,Z_182,ZN_178
	word32 r1_193 = SEQ(SLICE(r1_188, word24, 8), (byte) r1_188 | Mem170[r1_188 + 0x50D07FFE:byte])
	branch (r0_184 & 0x00000001) != 0x00000000 l0000B9B2
// DataOut: ap fp r0 r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:pc + 0x00000004 r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -24(fp):r4 + 1295 -20(fp):<invalid> -16(fp):r4 + 1261 -12(fp):<invalid> -8(fp):<invalid>

l0000B992:
	Mem198[sp_176 - 0x00000004:word32] = r1_193
	Mem201[sp_176 - 0x00000008:word32] = r4_185 + 1296
	word32 fp_205
	word32 sp_206
	word32 ap_207 = fn0000C022(r0_184, r2_181, r3_186, r4_185, ap_183, fp_190, out fp_205, out sp_206)
	word32 r0_208 = Mem201[r3_186 + 312:word32]
	Mem211[sp_206 - 0x00000004:word32] = Mem201[r0_208 + 12:word32]
	Mem214[sp_206 - 0x00000008:word32] = r4_185 + 1329
	word32 fp_218
	word32 sp_219
	fn0000C022(r0_208, r2_181, r3_186, r4_185, ap_207, fp_205, out fp_218, out sp_219)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:pc + 0x0000000C r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -24(fp):r4 + 1295 -20(fp):<invalid> -16(fp):r4 + 1261 -12(fp):<invalid> -8(fp):<invalid>

l0000B913:
	word32 r0_67 = Mem0[r2 + 0x0000C839:word32]
	word32 sp_82
	byte CVZN_83
	byte ZN_84
	bool C_85
	bool V_86
	word32 r2_87
	bool Z_88
	word32 ap_89
	word32 r0_90
	word32 r4_91
	word32 r3_92
	word32 pc_93
	word32 r1_94
	bool N_95
	word32 fp_96
	call r0_67 + 2 (retsize: 4; depth: 24)
		uses: ap,C_69,CVZN,dwLoc08_57,dwLoc0C_61,dwLoc10_64,dwLoc14_66,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,fp,N,pc,r0_67,r1,r2,r3,r4,sp_65,V_70,Z_6,ZN_68
		defs: ap_89,C_85,CVZN_83,fp_96,N_95,pc_93,r0_90,r1_94,r2_87,r3_92,r4_91,sp_82,V_86,Z_88,ZN_84
	word32 r0_106 = Mem0[r2_87 + 0x0000C839:word32]
	word32 sp_110
	byte CVZN_111
	byte ZN_112
	bool C_113
	bool V_114
	word32 r2_115
	bool Z_116
	word32 ap_117
	word32 r0_118
	word32 r4_119
	word32 r3_120
	word32 pc_121
	word32 r1_122
	bool N_123
	word32 fp_124
	call r0_106 + 2 (retsize: 4; depth: 40)
		uses: ap_89,C_108,CVZN_83,dwLoc08_57,dwLoc0C_61,dwLoc10_64,dwLoc14_66,dwLoc18_98,dwLoc1C_100,dwLoc20_103,dwLoc24_105,fp_96,N_95,pc_93,r0_106,r1_94,r2_87,r3_92,r4_91,sp_104,V_109,Z_88,ZN_107
		defs: ap_117,C_113,CVZN_111,fp_124,N_123,pc_121,r0_118,r1_122,r2_115,r3_120,r4_119,sp_110,V_114,Z_116,ZN_112
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000B9B2:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> pc:pc + 0x0000000C r1:<invalid> fp:<invalid> ap:<invalid> -36(fp):r2 -32(fp):r4 + 1259 -28(fp):0x00000001 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

fn0000B8F6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> pc:pc + 0x0000000C r1:<invalid> -36(fp):r2 -32(fp):r4 + 1259 -28(fp):0x00000001 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



void fn0000B9BA(word32 r0, word32 r2, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r0 r2
// LiveOut:
// Trashed: CVZN ap fp sp
// Preserved:
fn0000B9BA_entry:
// DataOut: fp r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000B9BA:
	word32 sp_14
	byte CVZN_15
	byte ZN_16
	bool C_17
	bool V_18
	bool Z_19
	bool N_20
	word32 ap_21
	word32 r0_22
	word32 fp_23
	word32 r2_24
	call Mem0[ap + 0x00010194:word32] + 2 (retsize: 4; depth: 20)
		uses: ap,C_10,dwLoc08_4,N_9,qwLoc10_7,sp_5,V_11,Z_8
		defs: ap_21,C_17,CVZN_15,fp_23,N_20,r0_22,r2_24,sp_14,V_18,Z_19,ZN_16
	branch r0_22 == 0x00000000 l0000B9DB
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000B9DB:
	branch Mem0[r2_24 + 12:word32] == 0x00000000 l0000B9E1
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 -16(fp):0x0000000000000000 -8(fp):0x00000001

l0000B9E1:
	word32 sp_50
	byte CVZN_51
	byte ZN_52
	bool C_53
	bool V_54
	bool Z_55
	bool N_56
	word32 ap_57
	word32 r0_58
	word32 fp_59
	word32 r2_60
	call Mem0[ap_21 + 0x00010198:word32] + 2 (retsize: 4; depth: 20)
		uses: ap_21,C_45,CVZN_15,dwLoc08_4,fp_23,N_20,qwLoc10_7,r0_22,r2_24,sp_14,V_46,Z_44,ZN_43
		defs: ap_57,C_53,CVZN_51,fp_59,N_56,r0_58,r2_60,sp_50,V_54,Z_55,ZN_52
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 -16(fp):0x0000000000000000 -8(fp):0x00000001

l0000B9E0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 -16(fp):0x0000000000000000 -8(fp):0x00000001

l0000B9DA:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 -16(fp):0x0000000000000000 -8(fp):0x00000001

fn0000B9BA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 fp:<invalid> ap:<invalid> -16(fp):0x0000000000000000 -8(fp):0x00000001



word32 fn0000BBB2(word32 r5, word32 r9, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r5 r9
// LiveOut: ap fp r0 r1 r2 r3 r4 r6 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r6 r7 r8 r9 sp
// Preserved:
fn0000BBB2_entry:
// DataOut: ap fp r10 r11 r5 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000BBB2:
	word32 r2_5 = Mem0[ap + 4:word32]
	word32 r3_6 = Mem0[r2_5 + 20:word32] + 0xFFFFFFBA
	*r3Out = r3_6
	word32 r1_13 = Mem0[r2_5 + 12:word32] - 0x00000001 + r3_6 * 0x0000016D
	*r1Out = r1_13
	word32 r0_7 = Mem0[r2_5 + 16:word32]
	word32 r7_9 = Mem0[r2_5 + 8:word32]
	word32 r8_10 = Mem0[r2_5 + 4:word32]
	word32 r6_11 = Mem0[r2_5:word32]
	word32 r4_25 = (r3_6 + 0x00000001) / 0x00000004 - (r3_6 + 0x00000045) / 0x00000064 + (r3_6 + 0x00000171) / 0x00000190 + r1_13 + (int32) Mem0[(r5 + 0x0001052A) + r0_7 * 2:int16]
	word32 r9_29 = SEQ(SLICE(r9, word24, 8), 0x00)
	*r9Out = r9_29
	branch r0_7 <= 0x00000001 l0000BC63
// DataOut: fp r1 r10 r11 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000BC63:
	word32 r2_35 = (int32) (int8) r9_29
	*r2Out = r2_35
	word32 r4_39 = (r4_25 + r2_35) * 0x00015180 + r7_9 * 0x00000E10
	*r4Out = r4_39
	word32 r6_41 = r6_11 + r8_10 * 0x0000003C
	*r6Out = r6_41
	word32 r8_40
	*r8Out = r8_10 * 0x0000003C
	word32 sp_45
	*spOut = fp - 0x00000004
	word32 fp_46
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_47
	*apOut = Mem0[fp + 0x00000008:word32]
	return r6_41 + r4_39
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:SEQ(SLICE(r9, word24, 8), 0x00)

fn0000BBB2_exit:
// DataOut: ap fp r0 r1 r2 r3 r4 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:SEQ(SLICE(r9, word24, 8), 0x00) fp:<invalid> ap:<invalid>

l0000BC28:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:SEQ(SLICE(r9, word24, 8), 0x00)



word32 fn0000BC8A(word32 r0, word32 r5, word32 r9, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r5 r9
// LiveOut: ap fp r0 r1 r3 r4 r6 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r6 r7 r8 r9 sp
// Preserved:
fn0000BC8A_entry:
// DataOut: ap fp r0 r10 r11 r5 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000BC8A:
	word32 sp_9
	byte CVZN_10
	byte ZN_11
	bool C_12
	bool V_13
	word32 r0_14
	word32 fp_15
	word32 r1_16
	word32 ap_17
	word32 r2_18
	byte VZN_19
	word32 r4_20
	bool Z_21
	byte CZN_22
	word32 r5_23
	word32 r9_24
	word32 r3_25
	word32 r6_26
	word32 r8_27
	call Mem0[0x000192A0:word32] + 2 (retsize: 4; depth: 16)
		uses: C_6,dwLoc0C_4,sp_3,V_7,ZN_5
		defs: ap_17,C_12,CVZN_10,CZN_22,fp_15,r0_14,r1_16,r2_18,r3_25,r4_20,r5_23,r6_26,r8_27,r9_24,sp_9,V_13,VZN_19,Z_21,ZN_11
	Mem29[fp_15 + -8:word32] = r0_14
	word32 sp_36
	byte CVZN_37
	byte ZN_38
	bool C_39
	bool V_40
	word32 r0_41
	word32 fp_42
	word32 r1_43
	word32 ap_44
	word32 r2_45
	byte VZN_46
	word32 r4_47
	bool Z_48
	byte CZN_49
	word32 r5_50
	word32 r9_51
	word32 r3_52
	word32 r6_53
	word32 r8_54
	call Mem29[0x000192A4:word32] + 2 (retsize: 4; depth: 20)
		uses: ap_17,C_34,CVZN_10,CZN_22,dwLoc0C_4,dwLoc10_32,fp_15,r0_14,r1_16,r2_18,r3_25,r4_20,r5_23,r6_26,r8_27,r9_24,sp_30,V_35,VZN_19,Z_21,ZN_33
		defs: ap_44,C_39,CVZN_37,CZN_49,fp_42,r0_41,r1_43,r2_45,r3_52,r4_47,r5_50,r6_53,r8_54,r9_51,sp_36,V_40,VZN_46,Z_48,ZN_38
	word32 r2_56 = Mem29[ap_44 + 4:word32]
	Mem60[r0_41 + 20:word32] = ((uint32) SLICE(r2_56, ui23, 9) & ~0xFFFFFF80) + 0x00000050
	Mem64[r0_41 + 16:word32] = ((uint32) SLICE(r2_56, ui27, 5) & ~0xFFFFFFF0) - 0x00000001
	Mem66[r0_41 + 12:word32] = Mem64[ap_44 + 4:word32] & ~0xFFFFFFE0
	word32 r2_67 = Mem66[ap_44 + 8:word32]
	Mem70[r0_41 + 8:word32] = (uint32) SLICE(r2_67, ui21, 11) & ~0xFFFFFFE0
	Mem73[r0_41 + 4:word32] = (uint32) SLICE(r2_67, ui27, 5) & ~0xFFFFFFC0
	Mem76[r0_41:word32] = Mem73[ap_44 + 8:word32] << 1 & ~0xFFFFFFC1
	word32 r1_82
	word32 r2_83
	word32 r3_84
	word32 r4_85
	word32 r6_86
	word32 r8_87
	word32 r9_88
	word32 ap_89
	word32 fp_90
	word32 sp_91
	word32 r0_92 = fn0000BBB2(r5_50, r9_51, ap_44, fp_42, out r1_82, out r2_83, out r3_84, out r4_85, out r6_86, out r8_87, out r9_88, out ap_89, out fp_90, out sp_91)
	Mem96[fp_90 + 0xFFFFFFF8:word32] = r0_92
// DataOut: ap fp r0 r10 r11 r5 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000BD15_thunk_fn0000BD1C:
	word32 r1_100
	word32 r3_101
	word32 r4_102
	word32 r6_103
	word32 r8_104
	word32 r9_105
	word32 ap_106
	word32 fp_107
	word32 sp_108
	return fn0000BD1C(r0_92, r5_50, r9_88, ap_89, fp_90, out r1_100, out r3_101, out r4_102, out r6_103, out r8_104, out r9_105, out ap_106, out fp_107, out sp_108)
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r2:0x00000003 r0:<invalid> r4:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -20(fp):r0 -16(fp):fp + -8 -12(fp):0x00000000

fn0000BC8A_exit:
// DataOut: ap fp r0 r1 r3 r4 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r2:<invalid> r0:<invalid> r4:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -20(fp):r0 -16(fp):fp + -8 -12(fp):0x00000000



void fn0000BD08(word32 r5, word32 r9, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r5 r9
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r6 r7 r8 r9 sp
// Preserved:
fn0000BD08_entry:
// DataOut: ap fp r5 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000BD08:
	word32 r1_12
	word32 r2_13
	word32 r3_14
	word32 r4_15
	word32 r6_16
	word32 r8_17
	word32 r9_18
	word32 ap_19
	word32 fp_20
	word32 sp_21
	word32 r0_22 = fn0000BBB2(r5, r9, ap, fp, out r1_12, out r2_13, out r3_14, out r4_15, out r6_16, out r8_17, out r9_18, out ap_19, out fp_20, out sp_21)
	Mem26[fp_20 + 0xFFFFFFF8:word32] = r0_22
// DataOut: ap fp r0 r5 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000BD15_thunk_fn0000BD1C:
	word32 r1_30
	word32 r3_31
	word32 r4_32
	word32 r6_33
	word32 r8_34
	word32 r9_35
	word32 ap_36
	word32 fp_37
	word32 sp_38
	fn0000BD1C(r0_22, r5, r9_18, ap_19, fp_20, out r1_30, out r3_31, out r4_32, out r6_33, out r8_34, out r9_35, out ap_36, out fp_37, out sp_38)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r2:0x00000003 r3:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -4(fp):r1

fn0000BD08_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -4(fp):r1



word32 fn0000BD1C(word32 r0, word32 r5, word32 r9, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r5 r9
// LiveOut: ap fp r0 r1 r3 r4 r6 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r6 r7 r8 r9 sp
// Preserved:
fn0000BD1C_entry:
	word32 sp_1 = fp
// DataOut: ap fp r0 r10 r11 r5 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000BD1C:
	word32 sp_5 = sp_1 - 0x00000004
	Mem7[sp_5:word32] = fp + -8
	word32 sp_11
	word32 fp_12
	byte ZN_13
	bool C_14
	bool V_15
	word32 r0_16
	word32 r4_17
	byte CVZN_18
	bool Z_19
	word32 r2_20
	word32 ap_21
	byte CZN_22
	word32 r5_23
	word32 r9_24
	word32 r1_25
	word32 r3_26
	word32 r6_27
	word32 r8_28
	call Mem7[0x000192A4:word32] + 2 (retsize: 4; depth: 4)
		uses: C_9,fp_4,sp_5,V_10,ZN_8
		defs: ap_21,C_14,CVZN_18,CZN_22,fp_12,r0_16,r1_25,r2_20,r3_26,r4_17,r5_23,r6_27,r8_28,r9_24,sp_11,V_15,Z_19,ZN_13
	Mem30[sp_11 - 0x00000004:word32] = r0_16
	word32 r1_34
	word32 r2_35
	word32 r3_36
	word32 r4_37
	word32 r6_38
	word32 r8_39
	word32 r9_40
	word32 ap_41
	word32 r0_44 = fn0000BBB2(r5_23, r9_24, ap_21, fp_12, out r1_34, out r2_35, out r3_36, out r4_37, out r6_38, out r8_39, out r9_40, out ap_41, out fp, out sp_1)
	word32 r0_45 = r4_37 - r0_44
	branch r0_45 == 0x00000000 l0000BD3B
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -8(fp):r0 -4(fp):fp + -8

l0000BD33:
	Mem79[fp + -8:word32] = Mem30[fp + -8:word32] + r0_45
	branch r2_35 > 0x00000001 l0000BD1C
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -8(fp):r0 -4(fp):fp + -8

l0000BD3B:
	branch Mem30[ap_41 + 4:word32] <u 0x00007432 l0000BD53
// DataOut: fp r1 r10 r11 r3 r4 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -8(fp):r0 -4(fp):fp + -8

l0000BD45:
	branch Mem30[fp + -8:word32] >=u 0x70000000 l0000BD53
// DataOut: fp r1 r10 r11 r3 r4 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -8(fp):r0 -4(fp):fp + -8

l0000BD4F:
	Mem76[fp + -8:word32] = -0x00000001
// DataOut: fp r1 r10 r11 r3 r4 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -8(fp):r0 -4(fp):fp + -8

l0000BD53:
	word32 sp_60
	*spOut = fp - 0x00000004
	word32 fp_61
	*fpOut = Mem30[fp + 0x0000000C:word32]
	word32 ap_62
	*apOut = Mem30[fp + 0x00000008:word32]
	return Mem30[fp + -8:word32]
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> -8(fp):r0 -4(fp):fp + -8

fn0000BD1C_exit:
// DataOut: ap fp r0 r1 r3 r4 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> r4:<invalid> r9:<invalid> -8(fp):r0 -4(fp):fp + -8



void fn0000BDC2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000BDC2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000BDC2_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000BDC2:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word32 fn0000C022(word32 r0, word32 r2, word32 r3, word32 r4, word32 ap, word32 fp, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2 r3 r4
// LiveOut: ap fp sp
// Trashed: CVZN ap fp r0 sp
// Preserved:
fn0000C022_entry:
// DataOut: ap fp pc r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C022:
	Mem4[fp + -16:uint16] = 0x00FF
	Mem7[fp + -14:byte] = 0x0E
	Mem9[fp + -13:byte] = 0x01
	Mem12[fp + -12:word32] = r3 + 0x000105C5
	Mem14[fp + -8:word32] = 0x00000000
	word32 sp_31
	byte CVZN_32
	byte ZN_33
	bool C_34
	bool V_35
	word32 fp_36
	word32 r3_37
	bool Z_38
	bool N_39
	word32 ap_40
	word32 r0_41
	word32 r4_42
	word32 r2_43
	call Mem14[0x0001932C:word32] + 2 (retsize: 4; depth: 40)
		uses: ap,C_29,dwLoc1C_20,dwLoc20_23,dwLoc24_27,fp,qwLoc18_17,r3,sp_24,V_30,ZN_28
		defs: ap_40,C_34,CVZN_32,fp_36,N_39,r0_41,r2_43,r3_37,r4_42,sp_31,V_35,Z_38,ZN_33
	branch (r0_41 & 0x00000001) != 0x00000000 l0000C094
// DataOut: ap fp pc r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C094:
	Mem129[r3_37 + 0x000105C5:byte] = 0x00
	word32 sp_147
	byte CVZN_148
	byte ZN_149
	bool C_150
	bool V_151
	word32 fp_152
	word32 r3_153
	bool Z_154
	bool N_155
	word32 ap_156
	word32 r0_157
	word32 r4_158
	word32 r2_159
	call Mem129[0x000192D0:word32] + 2 (retsize: 4; depth: 60)
		uses: ap_40,C_145,CVZN_32,dwLoc1C_20,dwLoc20_23,dwLoc24_27,dwLoc28_131,dwLoc2C_134,dwLoc30_137,dwLoc34_140,dwLoc38_143,dwLoc3C,dwLoc40,dwLoc44,fp_36,N_39,qwLoc18_17,r0_127,r2_43,r3_37,r4_42,sp_141,V_146,Z_38,ZN_144
		defs: ap_156,C_150,CVZN_148,fp_152,N_155,r0_157,r2_159,r3_153,r4_158,sp_147,V_151,Z_154,ZN_149
	word32 r0_167 = Mem129[r2_159 + 0x0000C839:word32]
	word32 sp_171
	byte CVZN_172
	byte ZN_173
	bool C_174
	bool V_175
	word32 fp_176
	word32 r3_177
	bool Z_178
	bool N_179
	word32 ap_180
	word32 r0_181
	word32 r4_182
	word32 r2_183
	call r0_167 + 2 (retsize: 4; depth: 72)
		uses: ap_156,C_169,CVZN_148,dwLoc1C_20,dwLoc20_23,dwLoc24_27,dwLoc28_131,dwLoc2C_134,dwLoc30_137,dwLoc34_140,dwLoc38_143,dwLoc3C_161,dwLoc40_164,dwLoc44_166,fp_152,N_155,qwLoc18_17,r0_167,r2_159,r3_153,r4_158,sp_165,V_170,Z_154,ZN_168
		defs: ap_180,C_174,CVZN_172,fp_176,N_179,r0_181,r2_183,r3_177,r4_182,sp_171,V_175,Z_178,ZN_173
	word32 sp_184
	*spOut = fp_176 - 0x00000004
	word32 fp_185
	*fpOut = Mem129[fp_176 + 0x0000000C:word32]
	return Mem129[fp_176 + 0x00000008:word32]
// DataOut: ap fp pc r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000024 -36(fp):ap + 8 -32(fp):fp + -8 -28(fp):fp + -16 -24(fp):0x0000000000000000

l0000C067:
	word32 sp_87
	byte CVZN_88
	byte ZN_89
	bool C_90
	bool V_91
	word32 fp_92
	word32 r3_93
	bool Z_94
	bool N_95
	word32 ap_96
	word32 r0_97
	word32 r4_98
	word32 r2_99
	call Mem14[0x000192D0:word32] + 2 (retsize: 4; depth: 60)
		uses: ap_40,C_82,CVZN_32,dwLoc1C_20,dwLoc20_23,dwLoc24_27,dwLoc28_68,dwLoc2C_71,dwLoc30_74,dwLoc34_77,dwLoc38_80,dwLoc3C,dwLoc40,dwLoc44,fp_36,N_39,qwLoc18_17,r0_41,r2_43,r3_37,r4_42,sp_78,V_83,Z_38,ZN_81
		defs: ap_96,C_90,CVZN_88,fp_92,N_95,r0_97,r2_99,r3_93,r4_98,sp_87,V_91,Z_94,ZN_89
	word32 r0_107 = Mem14[r2_99 + 0x0000C839:word32]
	word32 sp_111
	byte CVZN_112
	byte ZN_113
	bool C_114
	bool V_115
	word32 fp_116
	word32 r3_117
	bool Z_118
	bool N_119
	word32 ap_120
	word32 r0_121
	word32 r4_122
	word32 r2_123
	call r0_107 + 2 (retsize: 4; depth: 72)
		uses: ap_96,C_109,CVZN_88,dwLoc1C_20,dwLoc20_23,dwLoc24_27,dwLoc28_68,dwLoc2C_71,dwLoc30_74,dwLoc34_77,dwLoc38_80,dwLoc3C_101,dwLoc40_104,dwLoc44_106,fp_92,N_95,qwLoc18_17,r0_107,r2_99,r3_93,r4_98,sp_105,V_110,Z_94,ZN_108
		defs: ap_120,C_114,CVZN_112,fp_116,N_119,r0_121,r2_123,r3_117,r4_122,sp_111,V_115,Z_118,ZN_113
	word32 sp_124
	*spOut = fp_116 - 0x00000004
	word32 fp_125
	*fpOut = Mem14[fp_116 + 0x0000000C:word32]
	return Mem14[fp_116 + 0x00000008:word32]
// DataOut: ap fp pc r1 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000024 -36(fp):ap + 8 -32(fp):fp + -8 -28(fp):fp + -16 -24(fp):0x0000000000000000

fn0000C022_exit:
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> fp:<invalid> ap:<invalid> -68(fp):r2 -64(fp):r2 + 1515 -60(fp):<invalid> -56(fp):r2 + 1515 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):0x00000001 -36(fp):ap + 8 -32(fp):fp + -8 -28(fp):fp + -16 -24(fp):0x0000000000000000



void fn0000C0CE(word32 r0, word32 r6, word32 ap, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap pc r0 r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000C0CE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000C0CE_entry:
// DataOut: ap pc r0 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C0CE:
	word32 sp_16 = fp - 0x00000004
	branch Mem0[r6 + 0x00010A78:word32] != 0x00000000 l0000C0F7
// DataOut: ap pc r0 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C0E0:
	byte CVZN_54
	byte ZN_55
	bool C_56
	bool V_57
	bool Z_59
	word32 r0_61
	word32 pc_62
	call Mem0[0x000192D4:word32] + 2 (retsize: 4; depth: 16)
		uses: ap,C_48,CVZN,dwLoc08_43,dwLoc0C_46,pc,r0,r6,sp_44,V_49,Z_6,ZN_47
		defs: ap_60,C_56,CVZN_54,pc_62,r0_61,r6_58,sp_53,V_57,Z_59,ZN_55
	branch r0_61 != 0x00000000 l0000C0F7
// DataOut: ap pc r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// LocalsOut: fp(32)

l0000C0F7:
	word32 sp_17 = sp_16 - 0x00000004
	Mem19[sp_17:word32] = Mem0[ap + 4:word32]
	Mem22[sp_17 - 0x00000004:word32] = r6 + 0x000108C5
	word32 sp_26
	byte CVZN_27
	byte ZN_28
	bool C_29
	bool V_30
	word32 r6_31
	bool Z_32
	word32 ap_33
	word32 r0_34
	word32 pc_35
	call Mem22[0x000192BC:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_14,C_24,dwLoc08_12,dwLoc0C_13,r6_15,sp_20,V_25,Z_6,ZN_23
		defs: ap_33,C_29,CVZN_27,pc_35,r0_34,r6_31,sp_26,V_30,Z_32,ZN_28
	Mem37[r6_31 + 0x00010A78:word32] = 0x00000001
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> -12(fp):<invalid> -8(fp):r6 + 0x000108C5

l0000C0F4:
// DataOut: pc r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C -12(fp):<invalid> -8(fp):r6 + 0x000108C5
// LocalsOut: fp(32)

l0000C1CB:
	word32 sp_75
	byte CVZN_76
	byte ZN_77
	bool C_78
	bool V_79
	word32 r6_80
	bool Z_81
	word32 ap_82
	word32 r0_83
	word32 pc_84
	call Mem0[pc_62:word32] + 2 (retsize: 4; depth: 20)
		uses: ap_60,C_71,CVZN_54,dwLoc08_43,dwLoc0C_46,dwLoc10_69,pc_74,r0_61,r6_58,sp_67,V_72,Z_64,ZN_70
		defs: ap_82,C_78,CVZN_76,pc_84,r0_83,r6_80,sp_75,V_79,Z_81,ZN_77
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C -12(fp):<invalid> -8(fp):r6 + 0x000108C5



void fn0000C1FE(word32 r2, word32 r3, word32 r5, word32 r11, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r11 r2 r3 r5
// LiveOut:
// Trashed: CVZN ap r0 r4 sp
// Preserved:
fn0000C1FE_entry:
// DataOut: pc r11 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C1FE:
	branch Mem0[r2 + 0x00010AA4:word32] == 0xFFFFFFFF l0000C226
// DataOut: pc r11 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C226:
	Mem75[r2 + 0x00010AA4:word32] = 0x00000000
	word32 sp_88
	byte CVZN_89
	byte ZN_90
	bool C_91
	bool V_92
	word32 r3_93
	word32 r4_94
	word32 r2_95
	byte CZN_96
	bool Z_97
	bool N_98
	word32 pc_99
	word32 r11_100
	word32 ap_101
	word32 r0_102
	word32 r5_103
	call Mem75[pc:word32] + 2 (retsize: 4; depth: 16)
		uses: ap,C_82,CVZN,CZN_7,dwLoc08_78,dwLoc0C_80,N,pc_85,r0,r11,r2,r3,r4_5,r5,sp_79,V_83,Z_8,ZN_81
		defs: ap_101,C_91,CVZN_89,CZN_96,N_98,pc_99,r0_102,r11_100,r2_95,r3_93,r4_94,r5_103,sp_88,V_92,Z_97,ZN_90
	Mem105[r11_100 + -3953:word16] = atomic_fetch_add(Mem75[r11_100 + -3953:word16], Mem75[r2_95 + 0x50E97FFE:word16])
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid>

l0000C223:
// DataOut: r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid>

l0000C327:
	word32 ap_10 = Mem0[r3 + 1511:word32]
	word32 r0_11 = Mem0[ap_10 + 12:word32]
	branch r0_11 > 0x00000010 l0000C354
// DataOut: r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid>

l0000C354:
	fn0000F457()
	Mem54[Mem54[r5 + 336:word32]:uint16] = 0x0000
	word32 sp_58
	byte CVZN_59
	byte ZN_60
	bool C_61
	bool V_62
	word32 r3_63
	word32 r4_64
	word32 r2_65
	byte CZN_66
	bool Z_67
	bool N_68
	word32 pc_69
	word32 r11_70
	word32 ap_71
	word32 r0_72
	word32 r5_73
	call fn40009A48 (retsize: 4; depth: 8)
		uses: ap_10,C_56,CVZN,CZN_7,N,pc,r0_11,r11,r2,r3,r4_5,r5,sp_2,V_57,Z_8,ZN_55
		defs: ap_71,C_61,CVZN_59,CZN_66,N_68,pc_69,r0_72,r11_70,r2_65,r3_63,r4_64,r5_73,sp_58,V_62,Z_67,ZN_60
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> ap:<invalid> r0:<invalid>
// Terminates process

l0000C330_1:
	word32 sp_37
	byte CVZN_38
	byte ZN_39
	bool C_40
	bool V_41
	word32 r3_42
	word32 r4_43
	word32 r2_44
	byte CZN_45
	bool Z_46
	bool N_47
	word32 pc_48
	word32 r11_49
	word32 ap_50
	word32 r0_51
	word32 r5_52
	call 0x0000C334 + r0_11 * 0x00000002 (retsize: 4; depth: 8)
		uses: ap_10,C_13,CVZN,CZN_7,N,pc,r0_11,r11,r2,r3,r4_5,r5,sp_2,V_14,Z_8,ZN_12
		defs: ap_50,C_40,CVZN_38,CZN_45,N_47,pc_48,r0_51,r11_49,r2_44,r3_42,r4_43,r5_52,sp_37,V_41,Z_46,ZN_39
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> ap:<invalid> r0:<invalid>

fn0000C1FE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> ap:<invalid> r0:<invalid>



word32 fn0000C6FA(word32 r0, word32 r5, word32 r6, word32 r7, word32 r8, word32 ap, word32 fp, word32 pc, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r5 r6 r7 r8
// LiveOut: ap fp r2 sp
// Trashed: CVZN ap fp pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000C6FA_entry:
// DataOut: ap fp pc r0 r2 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C6FA:
	word32 r9_6 = Mem0[ap + 8:word32] & ~0xFFFFFFF8
	branch r9_6 == 0x00000000 l0000C729
// DataOut: ap fp pc r0 r10 r2 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000C729:
	Mem746[fp + -40:word16] = 0x0000
	Mem748[fp + -38:word16] = 0x0003
	Mem750[fp + -36:word32] = 0x00000000
	Mem752[fp + -32:word16] = 0x0000
	Mem754[fp + -30:word16] = 0x0004
	Mem756[fp + -28:word32] = 0x00000000
	Mem758[fp + -24:word16] = 0x0000
	Mem760[fp + -22:word16] = 0x0005
	Mem762[fp + -20:word64] = 0x0000000000000000
	Mem764[fp + -12:word64] = 0x0000000000000000
	Mem766[r6 + 0x00010CEC:word32] = r6 + 0x00010ABC
	Mem768[r6 + 0x00010CC4:word32] = Mem766[r6 + 0x00010CEC:word32]
	Mem770[r6 + 0x00010CC0:word32] = Mem768[r6 + 0x00010CC4:word32]
	Mem772[r6 + 0x00010CDC:word32] = Mem770[r6 + 0x00010CC0:word32]
	Mem774[r6 + 0x00010CE8:word32] = 0x00000000
	Mem776[r6 + 0x00010CCC:word64] = 0x0000000000000000
	Mem778[fp + -44:word32] = Mem776[ap + 4:word32]
	word32 sp_786
	byte ZN_787
	bool C_788
	bool V_789
	word32 r10_790
	word32 ap_791
	word32 r9_792
	bool Z_793
	word32 fp_794
	bool N_795
	word32 r6_796
	word32 r0_797
	word32 r2_798
	byte CZN_799
	byte CZ_800
	word32 pc_801
	byte VZN_802
	word32 r7_803
	byte CVZN_804
	word32 r3_805
	word32 r8_806
	word32 r5_807
	call Mem778[0x000192C4:word32] + 2 (retsize: 4; depth: 232)
		uses: ap,C_783,CVZN,CZ,CZN,dwLocE4_781,dwLocE8,dwLocEC,dwLocF0,dwLocF4,dwLocF8,fp,N,pc,r0,r10_4,r2,r3,r5,r6,r7,r8,r9_6,sp_779,V_784,VZN,Z_8,ZN_782
		defs: ap_791,C_788,CVZN_804,CZ_800,CZN_799,fp_794,N_795,pc_801,r0_797,r10_790,r2_798,r3_805,r5_807,r6_796,r7_803,r8_806,r9_792,sp_786,V_789,VZN_802,Z_793,ZN_787
	Mem809[fp_794 + -48:word16] = (word16) r0_797
	word32 r2_810 = (uint32) (word16) r0_797
	branch r2_810 <=u 0x000000FF l0000C7A5
// DataOut: fp pc r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000C7A5:
	word32 sp_835
	byte ZN_836
	bool C_837
	bool V_838
	word32 r10_839
	word32 ap_840
	word32 r9_841
	bool Z_842
	word32 fp_843
	bool N_844
	word32 r6_845
	word32 r0_846
	word32 r2_847
	byte CZN_848
	byte CZ_849
	word32 pc_850
	byte VZN_851
	word32 r7_852
	byte CVZN_853
	word32 r3_854
	word32 r8_855
	word32 r5_856
	call Mem809[pc_801:word32] + 2 (retsize: 4; depth: 244)
		uses: ap_791,C_831,CVZN_804,CZ_812,CZN_811,dwLocE4_781,dwLocE8_823,dwLocEC_826,dwLocF0_829,dwLocF4,dwLocF8,fp_794,N_795,pc_834,r0_797,r10_790,r2_810,r3_805,r5_807,r6_796,r7_803,r8_806,r9_792,sp_827,V_832,VZN_802,Z_793,ZN_830
		defs: ap_840,C_837,CVZN_853,CZ_849,CZN_848,fp_843,N_844,pc_850,r0_846,r10_839,r2_847,r3_854,r5_856,r6_845,r7_852,r8_855,r9_841,sp_835,V_838,VZN_851,Z_842,ZN_836
	Mem858[Mem858[r0_846 + 20483:word32]:word32] = __ashift(0x00000004, Mem809[r2_847 + 0x50E87FFE:word32])
	word32 sp_861
	*spOut = fp_843 - 0x00000004
	word32 fp_862
	*fpOut = Mem858[fp_843 + 0x0000000C:word32]
	word32 ap_863
	*apOut = Mem858[fp_843 + 0x00000008:word32]
	return r2_847
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r2:<invalid> -228(fp):<invalid>

l0000C7A1:
	word32 sp_818
	*spOut = fp_794 - 0x00000004
	word32 fp_819
	*fpOut = Mem809[fp_794 + 0x0000000C:word32]
	word32 ap_820
	*apOut = Mem809[fp_794 + 0x00000008:word32]
	return r2_810
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r2:<invalid> -228(fp):<invalid>

l0000C726:
// DataOut: ap fp r0 r10 r2 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000C919:
	branch r9_6 == 0x00000001 l0000C921
// DataOut: ap fp r0 r10 r2 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000C921:
	word32 sp_657
	byte ZN_658
	bool C_659
	bool V_660
	word32 r10_661
	word32 ap_662
	word32 r9_663
	bool Z_664
	word32 fp_665
	bool N_666
	word32 r6_667
	word32 r0_668
	word32 r2_669
	byte CZN_670
	byte CZ_671
	word32 pc_672
	byte VZN_673
	word32 r7_674
	byte CVZN_675
	word32 r3_676
	word32 r8_677
	word32 r5_678
	call Mem0[0x000192C4:word32] + 2 (retsize: 4; depth: 232)
		uses: ap,C_655,CVZN,CZ,CZN_42,dwLocE4_653,dwLocE8,dwLocEC,dwLocF0,dwLocF4,dwLocF8,fp,N,pc,r0,r10_4,r2,r3,r5,r6,r7,r8,r9_6,sp_651,V_656,VZN,Z_43,ZN_654
		defs: ap_662,C_659,CVZN_675,CZ_671,CZN_670,fp_665,N_666,pc_672,r0_668,r10_661,r2_669,r3_676,r5_678,r6_667,r7_674,r8_677,r9_663,sp_657,V_660,VZN_673,Z_664,ZN_658
	branch r0_668 + Mem0[r6_667 + 0x00010CE8:word32] <=u 0xFFFFFF0E l0000C945
// DataOut: fp r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>

l0000C945:
	branch Mem0[r6_667 + 0x00010CE8:word32] != 0x00000000 l0000C974
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r0:<invalid> -228(fp):r7 + 0x0000C701

l0000C94D:
	Mem734[r6_667 + 0x00010CEC:word32] = r6_667 + 0x00010ABC
	Mem736[r6_667 + 0x00010CC4:word32] = Mem734[r6_667 + 0x00010CEC:word32]
	Mem738[r6_667 + 0x00010CC0:word32] = Mem736[r6_667 + 0x00010CC4:word32]
	Mem740[r6_667 + 0x00010CCC:word64] = 0x0000000000000000
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r0:<invalid> -228(fp):r7 + 0x0000C701

l0000C974:
	Mem697[r6_667 + 0x00010CDC:word32] = Mem0[r6_667 + 0x00010CEC:word32]
	word32 r2_698 = 0x00000000
	branch Mem697[r6_667 + 0x00010CE4:word32] != 0x00000000 l0000C98B
// DataOut: fp r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r0:<invalid> -228(fp):r7 + 0x0000C701

l0000C989:
	r2_698 = 0x00000001
// DataOut: fp r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r0:<invalid> r2:0x00000000 -228(fp):r7 + 0x0000C701

l0000C98B:
	Mem706[r6_667 + 0x00010CE0:word32] = r2_698
	word32 v65_707 = Mem706[r6_667 + 0x00010CD8:word32]
	Mem708[r6_667 + 0x00010CD0:word32] = v65_707
	branch v65_707 == 0x00000000 l0000C9AA
// DataOut: fp r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r0:<invalid> r2:<invalid> -228(fp):r7 + 0x0000C701

l0000C99F:
	r2_698 = Mem708[r6_667 + 0x00010CDC:word32]
	Mem727[r2_698 + -1:byte] = 0x2E
// DataOut: fp r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r0:<invalid> r2:<invalid> -228(fp):r7 + 0x0000C701

l0000C9AA:
	Mem716[Mem716[r6_667 + 0x00010CDC:word32]:byte] = 0x00
	word32 sp_722
	*spOut = fp_665 - 0x00000004
	word32 fp_723
	*fpOut = Mem716[fp_665 + 0x0000000C:word32]
	word32 ap_724
	*apOut = Mem716[fp_665 + 0x00000008:word32]
	return r2_698
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r0:<invalid> r2:<invalid> -228(fp):r7 + 0x0000C701

l0000C941:
	word32 sp_688
	*spOut = fp_665 - 0x00000004
	word32 fp_689
	*fpOut = Mem0[fp_665 + 0x0000000C:word32]
	word32 ap_690
	*apOut = Mem0[fp_665 + 0x00000008:word32]
	return r2_669
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r0:<invalid> -228(fp):r7 + 0x0000C701

l0000C91E:
// DataOut: ap fp r0 r10 r2 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000C9B3:
	branch r9_6 == 0x00000002 l0000C9BB
// DataOut: ap fp r0 r10 r2 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000C9BB:
	word32 sp_486
	byte ZN_487
	bool C_488
	bool V_489
	word32 r10_490
	word32 ap_491
	word32 r9_492
	bool Z_493
	bool N_495
	word32 r0_497
	word32 r2_498
	byte CZN_499
	byte CZ_500
	word32 pc_501
	byte VZN_502
	word32 r7_503
	byte CVZN_504
	word32 r3_505
	word32 r8_506
	word32 r5_507
	word32 r6_496
	word32 fp_494
	call Mem0[0x000192C4:word32] + 2 (retsize: 4; depth: 232)
		uses: ap,C_484,CVZN,CZ,CZN_45,dwLocE4_482,dwLocE8,dwLocEC,dwLocF0,dwLocF4,dwLocF8,fp,N,pc,r0,r10_4,r2,r3,r5,r6,r7,r8,r9_6,sp_480,V_485,VZN,Z_46,ZN_483
		defs: ap_491,C_488,CVZN_504,CZ_500,CZN_499,fp_494,N_495,pc_501,r0_497,r10_490,r2_498,r3_505,r5_507,r6_496,r7_503,r8_506,r9_492,sp_486,V_489,VZN_502,Z_493,ZN_487
	branch Mem0[r6_496 + 0x00010CE0:word32] == 0x00000000 l0000C9FB
// DataOut: ap fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000C9D0:
	word32 r2_626 = Mem0[r6_496 + 0x00010CDC:word32]
	Mem628[r6_496 + 0x00010CDC:word32] = Mem0[r6_496 + 0x00010CDC:word32] + 0x00000001
	Mem630[r2_626:byte] = 0x5B
	branch r0_497 == 0x00000000 l0000C9F5
// DataOut: ap fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 -228(fp):<invalid>
// LocalsOut: fp(32)

l0000C9E5:
	word32 r2_643 = Mem630[r6_496 + 0x00010CDC:word32]
	Mem645[r6_496 + 0x00010CDC:word32] = Mem630[r6_496 + 0x00010CDC:word32] + 0x00000001
	Mem647[r2_643:byte] = 0x2E
// DataOut: ap fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>
// LocalsOut: fp(32)

l0000C9F5:
	Mem638[r6_496 + 0x00010CE0:word32] = 0x00000000
// DataOut: ap fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>
// LocalsOut: fp(32)

l0000C9FB:
	branch r0_497 != 0x00000001 l0000CA06
// DataOut: ap fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>
// LocalsOut: fp(32)

l0000CA00:
	branch Mem0[Mem0[ap_491 + 4:word32]:byte] == 0x2E l0000CA7C
// DataOut: ap fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>
// LocalsOut: fp(32)

l0000CA06:
	branch r0_497 != 0x00000002 l0000CA3C
// DataOut: ap fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>
// LocalsOut: fp(32)

l0000CA0B:
	word32 r2_603 = Mem0[ap_491 + 4:word32]
	branch Mem0[r2_603:byte] != 0x2E l0000CA3C
// DataOut: ap fp r2 r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>
// LocalsOut: fp(32)

l0000CA14:
	branch Mem0[r2_603 + 1:byte] != 0x2E l0000CA3C
// DataOut: ap fp r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>
// LocalsOut: fp(32)

l0000CA3C:
	word32 r2_554 = Mem0[r6_496 + 0x00010CDC:word32] - Mem0[r6_496 + 0x00010CBC:word32] + r0_497
	branch r2_554 <= 0x000000FF l0000CA58
// DataOut: ap fp r2 r3 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>
// LocalsOut: fp(32)

l0000CA58:
	word32 sp_574
	byte ZN_575
	bool C_576
	bool V_577
	word32 r10_578
	word32 ap_579
	word32 r9_580
	bool Z_581
	bool N_583
	word32 r0_585
	word32 r2_586
	byte CZN_587
	byte CZ_588
	word32 pc_589
	byte VZN_590
	word32 r7_591
	byte CVZN_592
	word32 r3_593
	word32 r8_594
	word32 r5_595
	call Mem0[0x000192BC:word32] + 2 (retsize: 4; depth: 240)
		uses: ap_491,C_572,CVZN_504,CZ_500,CZN_555,dwLocE4_482,dwLocE8_567,dwLocEC_570,dwLocF0,dwLocF4,dwLocF8,fp_494,N_514,pc_501,r0_497,r10_490,r2_554,r3_508,r5_507,r6_496,r7_503,r8_506,r9_492,sp_568,V_573,VZN_502,Z_552,ZN_571
		defs: ap_579,C_576,CVZN_592,CZ_588,CZN_587,fp_582,N_583,pc_589,r0_585,r10_578,r2_586,r3_593,r5_595,r6_584,r7_591,r8_594,r9_580,sp_574,V_577,VZN_590,Z_581,ZN_575
	Mem597[r6_496 + 0x00010CDC:word32] = Mem0[r6_496 + 0x00010CDC:word32] + r3_593
	Mem599[Mem599[r6_496 + 0x00010CDC:word32]:byte] = 0x2E
	Mem601[r6_496 + 0x00010CDC:word32] = Mem599[r6_496 + 0x00010CDC:word32] + 0x00000001
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>

l0000CA54:
	word32 sp_562
	*spOut = fp_494 - 0x00000004
	word32 fp_563
	*fpOut = Mem0[fp_494 + 0x0000000C:word32]
	word32 ap_564
	*apOut = Mem0[fp_494 + 0x00000008:word32]
	return r2_554
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>

l0000CA1A:
	word32 r2_610 = Mem0[r6_496 + 0x00010CDC:word32]
	Mem612[r6_496 + 0x00010CDC:word32] = Mem0[r6_496 + 0x00010CDC:word32] + 0x00000001
	Mem614[r2_610:byte] = 0x2D
	word32 r2_615 = Mem614[r6_496 + 0x00010CDC:word32]
	Mem617[r6_496 + 0x00010CDC:word32] = Mem614[r6_496 + 0x00010CDC:word32] + 0x00000001
	Mem619[r2_615:byte] = 0x2E
// DataOut: fp r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF1C r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -228(fp):<invalid>

l0000CA7C:
	word32 r2_536 = Mem0[r6_496 + 0x00010CDC:word32]
	Mem538[r6_496 + 0x00010CD0:word32] = r2_536 - Mem0[r6_496 + 0x00010CC4:word32]
	Mem540[r2_536:byte] = 0x00
	word32 sp_546 = fp_494 - 0x00000004
	*spOut = sp_546
	word32 fp_547
	*fpOut = Mem540[sp_546 + 0x00000010:word32]
	word32 ap_548
	*apOut = Mem540[sp_546 + 0x0000000C:word32]
	return r2_536
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r3:r0 r2:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid>

l0000C9B8:
// DataOut: ap fp r0 r10 r2 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000CA94:
	branch r9_6 == 0x00000003 l0000CA9C
// DataOut: ap fp r0 r10 r2 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000CA9C:
	branch (Mem0[ap + 8:word32] & 0x00000008) != 0x00000000 l0000CAA4
// DataOut: ap fp r0 r10 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000CAA4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>

l0000CAA1:
// DataOut: ap fp r0 r10 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000CB5C:
	word32 ap_156
	word32 sp_155
	Mem144[Mem144[r6 + 0x00010CDC:word32]:byte] = 0x00
	branch Mem144[r6 + 0x00010CD0:word32] == 0x00000000 l0000CBE0
// DataOut: ap fp r0 r10 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000CBE0:
	byte ZN_380
	bool C_381
	bool V_382
	word32 r10_383
	word32 r9_385
	bool Z_386
	word32 fp_387
	bool N_388
	word32 r6_389
	word32 r0_390
	word32 r2_391
	byte CZN_392
	byte CZ_393
	word32 pc_394
	byte VZN_395
	word32 r7_396
	byte CVZN_397
	word32 r3_398
	word32 r8_399
	word32 r5_400
	call Mem144[0x000192D4:word32] + 2 (retsize: 4; depth: 236)
		uses: ap,C_377,CVZN,CZ,CZN_48,dwLocE4_372,dwLocE8_375,dwLocEC,dwLocF0,dwLocF4,dwLocF8,fp,N,pc,r0,r10_4,r2,r3,r5,r6,r7,r8,r9_6,sp_373,V_378,VZN,Z_146,ZN_376
		defs: ap_384,C_381,CVZN_397,CZ_393,CZN_392,fp_387,N_388,pc_394,r0_390,r10_383,r2_391,r3_398,r5_400,r6_389,r7_396,r8_399,r9_385,sp_379,V_382,VZN_395,Z_386,ZN_380
	branch r0_390 == 0x00000000 l0000CC2B
// DataOut: ap fp r0 r10 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000CBF5:
	word32 sp_414
	byte ZN_415
	bool C_416
	bool V_417
	word32 r10_418
	word32 ap_419
	word32 r9_420
	bool Z_421
	word32 fp_422
	bool N_423
	word32 r6_424
	word32 r0_425
	word32 r2_426
	byte CZN_427
	byte CZ_428
	word32 pc_429
	byte VZN_430
	word32 r7_431
	byte CVZN_432
	word32 r3_433
	word32 r8_434
	word32 r5_435
	call Mem144[0x000192BC:word32] + 2 (retsize: 4; depth: 244)
		uses: ap_384,C_412,CVZN_397,CZ_393,CZN_392,dwLocE4_372,dwLocE8_375,dwLocEC_407,dwLocF0_410,dwLocF4,dwLocF8,fp_387,N_388,pc_394,r0_390,r10_383,r2_391,r3_398,r5_400,r6_389,r7_396,r8_399,r9_385,sp_408,V_413,VZN_395,Z_402,ZN_411
		defs: ap_419,C_416,CVZN_432,CZ_428,CZN_427,fp_422,N_423,pc_429,r0_425,r10_418,r2_426,r3_433,r5_435,r6_424,r7_431,r8_434,r9_420,sp_414,V_417,VZN_430,Z_421,ZN_415
	Mem437[r6_424 + 0x00010CF0:word32] = 0x00000000
	byte ZN_447
	bool C_448
	bool V_449
	word32 r10_450
	word32 r9_452
	bool Z_453
	word32 fp_454
	bool N_455
	word32 r6_456
	word32 r0_457
	word32 r2_458
	byte CZN_459
	byte CZ_460
	word32 pc_461
	byte VZN_462
	word32 r7_463
	byte CVZN_464
	word32 r3_465
	word32 r8_466
	word32 r5_467
	call Mem437[0x00019284:word32] + 2 (retsize: 4; depth: 252)
		uses: ap_419,C_444,CVZN_432,CZ_428,CZN_427,dwLocE4_372,dwLocE8_375,dwLocEC_407,dwLocF0_410,dwLocF4_439,dwLocF8_442,fp_422,N_423,pc_429,r0_425,r10_418,r2_426,r3_433,r5_435,r6_424,r7_431,r8_434,r9_420,sp_440,V_445,VZN_430,Z_421,ZN_443
		defs: ap_451,C_448,CVZN_464,CZ_460,CZN_459,fp_454,N_455,pc_461,r0_457,r10_450,r2_458,r3_465,r5_467,r6_456,r7_463,r8_466,r9_452,sp_446,V_449,VZN_462,Z_453,ZN_447
	branch r0_457 == 0x00000000 l0000CC2B
// DataOut: ap fp r0 r10 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF18 r10:<invalid> r9:<invalid> -232(fp):r6 + 0x00010BBC -228(fp):r8 + 1705

l0000CC1F:
	branch Mem437[r10_450:word32] == 0x00000011 l0000CC2B
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF08 r10:<invalid> r9:<invalid> -248(fp):r6 + 0x00010BBC -244(fp):0x00000000 -240(fp):r6 + 0x00010BBC -236(fp):r8 + 1717 -232(fp):r6 + 0x00010BBC -228(fp):r8 + 1705

l0000CC24:
	Mem476[r6_456 + 0x00010CF0:word32] = 0x00000001
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFF08 r10:<invalid> r9:<invalid> -248(fp):r6 + 0x00010BBC -244(fp):0x00000000 -240(fp):r6 + 0x00010BBC -236(fp):r8 + 1717 -232(fp):r6 + 0x00010BBC -228(fp):r8 + 1705

l0000CB6A:
	Mem269[Mem269[r6 + 0x00010CC4:word32]:byte] = 0x5D
	word32 r6_281
	word32 fp_283
	word32 r0_285 = fn0000E2EA(r5, r7, ap, fp, out r6_281, out ap_156, out fp_283, out sp_155)
	branch r0_285 != 0x00000000 l0000CB9B
// DataOut: ap fp r0 r10 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>

l0000CB9B:
	Mem291[r6_281 + 0x00010CF0:word32] = 0x00000000
	Mem293[sp_155 - 0x00000004:word32] = 0x00000000
	Mem296[sp_155 - 0x00000008:word32] = r6_281 + 0x00010ABC
	word32 sp_300
	byte ZN_301
	bool C_302
	bool V_303
	word32 r10_304
	word32 ap_305
	word32 r9_306
	bool Z_307
	word32 fp_308
	bool N_309
	word32 r6_310
	word32 r0_311
	word32 r2_312
	byte CZN_313
	byte CZ_314
	word32 pc_315
	byte VZN_316
	word32 r7_317
	byte CVZN_318
	word32 r3_319
	word32 r8_320
	word32 r5_321
	call Mem296[0x00019284:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_282,C_298,CVZN,CZ,CZN_48,dwLocE4_271,dwLocE8_274,dwLocEC_277,dwLocF0,dwLocF4,dwLocF8,fp_283,N,pc,r0_285,r10_4,r2_267,r3,r5,r6_281,r7,r8,r9_6,sp_294,V_299,VZN,Z_287,ZN_297
		defs: ap_305,C_302,CVZN_318,CZ_314,CZN_313,fp_308,N_309,pc_315,r0_311,r10_304,r2_312,r3_319,r5_321,r6_310,r7_317,r8_320,r9_306,sp_300,V_303,VZN_316,Z_307,ZN_301
	branch r0_311 == 0x00000000 l0000CBC4
// DataOut: ap fp r0 r10 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r2:<invalid> r8:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -236(fp):r6 + 0x00010BBC -232(fp):r6 + 0x00010ABC -228(fp):0x7FFFFFFF

l0000CBC4:
	Mem366[r6_310 + 0x00010AB8:word32] = 0x00000001
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r2:<invalid> r8:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -236(fp):r6 + 0x00010BBC -232(fp):r6 + 0x00010ABC -228(fp):0x7FFFFFFF

l0000CBB4:
	branch Mem296[r10_304:word32] == 0x00000011 l0000CBCB
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r2:<invalid> r8:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -236(fp):r6 + 0x00010BBC -232(fp):r6 + 0x00010ABC -228(fp):0x7FFFFFFF

l0000CBB9:
	Mem361[r6_310 + 0x00010CF0:word32] = 0x00000001
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r2:<invalid> r8:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -236(fp):r6 + 0x00010BBC -232(fp):r6 + 0x00010ABC -228(fp):0x7FFFFFFF

l0000CBCB:
	Mem328[sp_300 - 0x00000004:word32] = r6_310 + 0x00010ABC
	Mem331[sp_300 - 0x00000008:word32] = r6_310 + 0x00010BBC
	byte ZN_336
	bool C_337
	bool V_338
	word32 r10_339
	word32 r9_341
	bool Z_342
	word32 fp_343
	bool N_344
	word32 r6_345
	word32 r0_346
	word32 r2_347
	byte CZN_348
	byte CZ_349
	word32 pc_350
	byte VZN_351
	word32 r7_352
	byte CVZN_353
	word32 r3_354
	word32 r8_355
	word32 r5_356
	call Mem331[0x000192BC:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_305,C_333,CVZN_318,CZ_314,CZN_313,dwLocE4_271,dwLocE8_274,dwLocEC_277,dwLocF0,dwLocF4,dwLocF8,fp_308,N_309,pc_315,r0_311,r10_304,r2_312,r3_319,r5_321,r6_310,r7_317,r8_320,r9_306,sp_329,V_334,VZN_316,Z_323,ZN_332
		defs: ap_340,C_337,CVZN_353,CZ_349,CZN_348,fp_343,N_344,pc_350,r0_346,r10_339,r2_347,r3_354,r5_356,r6_345,r7_352,r8_355,r9_341,sp_335,V_338,VZN_351,Z_342,ZN_336
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r2:<invalid> r8:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -236(fp):r6 + 0x00010BBC -232(fp):r6 + 0x00010ABC -228(fp):0x7FFFFFFF

l0000CB98:
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r2:<invalid> r8:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -236(fp):r6 + 0x00010BBC -232(fp):r6 + 0x00010ABC -228(fp):0x7FFFFFFF

l0000CC2B:
	word32 sp_157 = sp_155 - 0x00000004
	Mem159[sp_157:word32] = Mem144[ap_156 + 4:word32]
	word32 sp_163
	byte ZN_164
	bool C_165
	bool V_166
	word32 r10_167
	word32 ap_168
	word32 r9_169
	bool Z_170
	word32 fp_171
	bool N_172
	word32 r6_173
	word32 r0_174
	word32 r2_175
	byte CZN_176
	byte CZ_177
	word32 pc_178
	byte VZN_179
	word32 r7_180
	byte CVZN_181
	word32 r3_182
	word32 r8_183
	word32 r5_184
	call Mem159[0x000192C4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_156,C_161,CVZN,CZ,CZN_48,dwLocE4_153,dwLocE8_154,dwLocEC_152,dwLocF0_149,dwLocF4_150,dwLocF8_151,fp,N,pc,r0,r10_4,r2,r3,r5,r6,r7,r8,r9_6,sp_157,V_162,VZN,Z_146,ZN_160
		defs: ap_168,C_165,CVZN_181,CZ_177,CZN_176,fp_171,N_172,pc_178,r0_174,r10_167,r2_175,r3_182,r5_184,r6_173,r7_180,r8_183,r9_169,sp_163,V_166,VZN_179,Z_170,ZN_164
	word32 r2_186 = Mem159[r6_173 + 0x00010CDC:word32] - (r6_173 + 0x00010ABC)
	word32 r0_187 = r0_174 + r2_186
	branch r0_187 <=u 0x000000FF l0000CC54
// DataOut: ap fp r0 r2 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r2:<invalid> r8:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -248(fp):r6 + 0x00010BBC -244(fp):0x00000000 -240(fp):r6 + 0x00010BBC -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid>

l0000CC54:
	Mem200[sp_163 - 0x00000004:word32] = Mem159[ap_168 + 4:word32]
	Mem203[sp_163 - 0x00000008:word32] = Mem200[r6_173 + 0x00010CDC:word32]
	word32 sp_207
	byte ZN_208
	bool C_209
	bool V_210
	word32 r10_211
	word32 ap_212
	word32 r9_213
	bool Z_214
	word32 fp_215
	bool N_216
	word32 r6_217
	word32 r0_218
	word32 r2_219
	byte CZN_220
	byte CZ_221
	word32 pc_222
	byte VZN_223
	word32 r7_224
	byte CVZN_225
	word32 r3_226
	word32 r8_227
	word32 r5_228
	call Mem203[0x000192BC:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_168,C_205,CVZN_181,CZ_189,CZN_188,dwLocE4_153,dwLocE8_154,dwLocEC_152,dwLocF0_149,dwLocF4_150,dwLocF8_151,fp_171,N_172,pc_178,r0_187,r10_167,r2_186,r3_182,r5_184,r6_173,r7_180,r8_183,r9_169,sp_201,V_206,VZN_179,Z_170,ZN_204
		defs: ap_212,C_209,CVZN_225,CZ_221,CZN_220,fp_215,N_216,pc_222,r0_218,r10_211,r2_219,r3_226,r5_228,r6_217,r7_224,r8_227,r9_213,sp_207,V_210,VZN_223,Z_214,ZN_208
	Mem231[sp_207 - 0x00000004:word32] = Mem203[ap_212 + 4:word32]
	word32 sp_235
	byte ZN_236
	bool C_237
	bool V_238
	word32 r10_239
	word32 ap_240
	word32 r9_241
	bool Z_242
	word32 fp_243
	bool N_244
	word32 r6_245
	word32 r0_246
	word32 r2_247
	byte CZN_248
	byte CZ_249
	word32 pc_250
	byte VZN_251
	word32 r7_252
	byte CVZN_253
	word32 r3_254
	word32 r8_255
	word32 r5_256
	call Mem231[0x000192C4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_212,C_233,CVZN_225,CZ_221,CZN_220,dwLocE4_153,dwLocE8_154,dwLocEC_152,dwLocF0_149,dwLocF4_150,dwLocF8_151,fp_215,N_216,pc_222,r0_218,r10_211,r2_219,r3_226,r5_228,r6_217,r7_224,r8_227,r9_213,sp_229,V_234,VZN_223,Z_214,ZN_232
		defs: ap_240,C_237,CVZN_253,CZ_249,CZN_248,fp_243,N_244,pc_250,r0_246,r10_239,r2_247,r3_254,r5_256,r6_245,r7_252,r8_255,r9_241,sp_235,V_238,VZN_251,Z_242,ZN_236
	Mem258[r6_245 + 0x00010CDC:word32] = Mem231[r6_245 + 0x00010CDC:word32] + r0_246
	word32 sp_264
	*spOut = fp_243 - 0x00000004
	word32 fp_265
	*fpOut = Mem258[fp_243 + 0x0000000C:word32]
	word32 ap_266
	*apOut = Mem258[fp_243 + 0x00000008:word32]
	return r2_247
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r2:<invalid> r8:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -248(fp):r6 + 0x00010BBC -244(fp):0x00000000 -240(fp):r6 + 0x00010BBC -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid>

l0000CC50:
	word32 sp_195
	*spOut = fp_171 - 0x00000004
	word32 fp_196
	*fpOut = Mem159[fp_171 + 0x0000000C:word32]
	word32 ap_197
	*apOut = Mem159[fp_171 + 0x00000008:word32]
	return r2_186
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r2:<invalid> r8:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -248(fp):r6 + 0x00010BBC -244(fp):0x00000000 -240(fp):r6 + 0x00010BBC -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid>

l0000CA99:
// DataOut: ap fp r2 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000CC78:
	branch r9_6 != 0x00000004 l0000CCA2
// DataOut: ap fp r2 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000CCA2:
	branch r9_6 != 0x00000005 l0000CCAA
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>

l0000CCAA:
	word32 sp_140
	*spOut = fp - 0x00000004
	word32 fp_141
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_142
	*apOut = Mem0[fp + 0x00000008:word32]
	return r2
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>

l0000CCA7:
	word32 sp_133
	*spOut = fp - 0x00000004
	word32 fp_134
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_135
	*apOut = Mem0[fp + 0x00000008:word32]
	return r2
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>

l0000CC7D:
	branch Mem0[r6 + 0x00010CF0:word32] == 0x00000000 l0000CC89
// DataOut: ap fp r2 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>
// LocalsOut: fp(32)

l0000CC89:
	Mem84[Mem84[r6 + 0x00010CDC:word32]:byte] = 0x00
	word32 sp_95
	byte ZN_96
	bool C_97
	bool V_98
	word32 r10_99
	word32 ap_100
	word32 r9_101
	bool Z_102
	word32 fp_103
	bool N_104
	word32 r6_105
	word32 r0_106
	word32 r2_107
	byte CZN_108
	byte CZ_109
	word32 pc_110
	byte VZN_111
	word32 r7_112
	byte CVZN_113
	word32 r3_114
	word32 r8_115
	word32 r5_116
	call Mem84[0x000192BC:word32] + 2 (retsize: 4; depth: 236)
		uses: ap,C_92,CVZN,CZ,CZN_51,dwLocE4_87,dwLocE8_90,dwLocEC,dwLocF0,dwLocF4,dwLocF8,fp,N,pc,r0,r10_4,r2,r3,r5,r6,r7,r8,r9_6,sp_88,V_93,VZN,Z_56,ZN_91
		defs: ap_100,C_97,CVZN_113,CZ_109,CZN_108,fp_103,N_104,pc_110,r0_106,r10_99,r2_107,r3_114,r5_116,r6_105,r7_112,r8_115,r9_101,sp_95,V_98,VZN_111,Z_102,ZN_96
	word32 sp_122
	*spOut = fp_103 - 0x00000004
	word32 fp_123
	*fpOut = Mem84[fp_103 + 0x0000000C:word32]
	word32 ap_124
	*apOut = Mem84[fp_103 + 0x00000008:word32]
	return r2_107
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>

l0000CC85:
	word32 sp_64
	*spOut = fp - 0x00000004
	word32 fp_65
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_66
	*apOut = Mem0[fp + 0x00000008:word32]
	return r2
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -224 r10:<invalid> r9:<invalid>

fn0000C6FA_exit:
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r9:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> pc:pc + 0x00000004 r3:<invalid> r8:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -248(fp):r6 + 0x00010BBC -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid>



word32 fn0000CE52(word32 r3, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r3
// LiveOut: fp r0 r3
// Trashed: CVZN ap fp r0 r1 r2 r3 sp
// Preserved:
fn0000CE52_entry:
// DataOut: ap fp pc r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000CE52:
	word32 r0_5 = Mem0[ap + 4:word32]
	branch r0_5 != 0x00000001 l0000CE64
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000CE64:
	branch r0_5 == 0x00000002 l0000CE85
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE69:
	branch r0_5 < 0x00000009 l0000CE73
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE6E:
	branch r0_5 <= 0x0000000B l0000CE85
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE73:
	branch r0_5 < 0x00000050 l0000CE8C
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE7C:
	branch r0_5 > 0x00000052 l0000CE8C
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE8C:
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE85:
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE8F:
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE5E:
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid>
// LocalsOut: fp(32)

l0000CE92:
	branch Mem0[ap + 4:word32] != 0x00000000 l0000CEA0
// DataOut: ap fp pc r0 r1 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r3:<invalid>
// LocalsOut: fp(32)

l0000CEA0:
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r3:<invalid> r1:<invalid>
// LocalsOut: fp(32)

l0000CE9A:
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r3:<invalid> r1:<invalid>
// LocalsOut: fp(32)

l0000CEB0:
	word32 sp_24
	byte CVZN_25
	word32 ap_26
	word32 r0_27
	byte ZN_28
	bool C_29
	bool V_30
	byte CZN_31
	bool Z_32
	word32 r3_33
	bool N_34
	word32 r1_35
	byte VZN_36
	word32 r2_37
	word32 fp_38
	call Mem0[0x0001928C:word32] + 2 (retsize: 4; depth: 12)
		uses: ap,C_22,CZN_11,dwLoc08_20,N_9,r0_12,r1_13,r2_18,r3_10,sp_19,V_23,Z_15,ZN_21
		defs: ap_26,C_29,CVZN_25,CZN_31,fp_38,N_34,r0_27,r1_35,r2_37,r3_33,sp_24,V_30,VZN_36,Z_32,ZN_28
	word32 fp_40
	*fpOut = Mem0[fp_38 + 0x0000000C:word32]
	return r0_27
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid>

fn0000CE52_exit:
// DataOut: fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -8(fp):<invalid>



void fn0000CEBE(word32 r0, word32 r2, word32 r3, word32 fp, word32 pc, word32 dwArg7FD6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp pc r0 r2 r3
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 sp
// Preserved:
// Stack args: Stack +7FD6(32)
fn0000CEBE_entry:
// DataOut: fp pc r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +7FD6(32)

l0000CEBE:
	branch Mem0[r2 + 0x00010CF4:word32] >= 0x00000000 l0000CF36
// DataOut: fp pc r0 r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +7FD6(32)

l0000CED0:
	word32 sp_56
	byte CVZN_57
	byte ZN_58
	bool C_59
	bool V_60
	word32 r2_61
	bool N_62
	bool Z_63
	word32 fp_64
	word32 pc_65
	word32 r0_66
	byte VZN_67
	word32 ap_68
	word32 r3_69
	byte CZN_70
	word32 r1_71
	call Mem0[pc:word32] + 2 (retsize: 4; depth: 44)
		uses: ap,C_50,CVZN,CZN,dwLoc24_45,dwLoc28_48,fp,N_6,pc_53,qwLoc20_42,r0,r1,r2,r3,sp_46,V_51,VZN,Z,ZN_49
		defs: ap_68,C_59,CVZN_57,CZN_70,fp_64,N_62,pc_65,r0_66,r1_71,r2_61,r3_69,sp_56,V_60,VZN_67,Z_63,ZN_58
	Mem74[Mem74[r0_66 + 21328:word32]:real32] = Mem0[dwArg7FD6:real32]
	branch (r0_66 & 0x00000001) == 0x00000000 l0000CF13
// DataOut: fp pc r2 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018
// LocalsOut: fp(32)

l0000CF13:
	word32 r1_123
	branch (r3_69 & 0x00000001) == 0x00000000 l0000CF2C
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 pc:pc + 0x00000004 -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

l0000CF16:
	branch ((int32) Mem74[fp_64 + -14:int16] & 0x00000001) == 0x00000000 l0000CF2C
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 pc:pc + 0x00000004 -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

l0000CF1D:
	word32 r0_142 = (uint32) Mem74[fp_64 + -15:byte]
	branch r0_142 <u 0x00000005 l0000CF2C
// DataOut: fp r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 pc:pc + 0x00000004 r0:<invalid> -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

l0000CF2C:
	r1_123 = 0x00000018
// DataOut: fp r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 pc:pc + 0x00000004 r0:<invalid> -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

l0000CF26:
	r1_123 = r0_142
// DataOut: fp r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 pc:pc + 0x00000004 r0:<invalid> -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

l0000CF2F:
	Mem128[r2_61 + 0x00010CF4:word32] = r1_123
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 pc:pc + 0x00000004 r0:<invalid> r1:<invalid> -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

l0000CF36:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:pc + 0x00000004 r0:<invalid> r1:<invalid> -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

fn0000CEBE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> fp:<invalid> ap:<invalid> pc:pc + 0x00000004 r1:<invalid> -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000

l0000CEE8:
	word32 sp_107
	byte CVZN_108
	byte ZN_109
	bool C_110
	bool V_111
	word32 r2_112
	bool N_113
	bool Z_114
	word32 fp_115
	word32 pc_116
	word32 r0_117
	byte VZN_118
	word32 ap_119
	word32 r3_120
	byte CZN_121
	word32 r1_122
	call Mem74[pc_65:word32] + 2 (retsize: 4; depth: 92)
		uses: ap_68,C_103,CVZN_57,CZN_70,dwLoc24_45,dwLoc28_48,dwLoc3C_85,dwLoc40_88,dwLoc4C_94,dwLoc50_96,dwLoc54_99,dwLoc58_101,fp_64,N_62,pc_106,qwLoc20_42,qwLoc30_80,qwLoc38_83,qwLoc48_91,r0_66,r1_71,r2_61,r3_69,sp_100,V_104,VZN_67,Z_63,ZN_102
		defs: ap_119,C_110,CVZN_108,CZN_121,fp_115,N_113,pc_116,r0_117,r1_122,r2_112,r3_120,sp_107,V_111,VZN_118,Z_114,ZN_109
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 pc:pc + 0x00000004 -40(fp):r2 + 0x00010CF8 -36(fp):fp + -6 -32(fp):0x0000000000000000



void fn0000CF42(word32 r2, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r2
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000CF42_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000CF42_entry:
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000CF42:
	word32 sp_24
	byte CVZN_25
	byte ZN_26
	bool C_27
	bool V_28
	word32 r2_29
	word32 fp_30
	byte CZN_31
	bool N_32
	word32 r4_33
	call Mem0[0x000192D0:word32] + 2 (retsize: 4; depth: 68)
		uses: C_21,dwLoc30_6,dwLoc34_9,dwLoc38_12,dwLoc3C_15,dwLoc40_19,fp,r2,sp_16,V_22,ZN_20
		defs: C_27,CVZN_25,CZN_31,fp_30,N_32,r2_29,r4_33,sp_24,V_28,ZN_26
	branch Mem0[r2_29 + 1748:byte] < 0x36 l0000CF80
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000CF80:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000044 -68(fp):fp + -44 -64(fp):fp + -44 -60(fp):r2 + 1767 -56(fp):r2 + 1783 -52(fp):r2 + 1791 -48(fp):r2 + 1796
// LocalsOut: fp(32)

l0000CF77:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000044 -68(fp):fp + -44 -64(fp):fp + -44 -60(fp):r2 + 1767 -56(fp):r2 + 1783 -52(fp):r2 + 1791 -48(fp):r2 + 1796
// LocalsOut: fp(32)

l0000CF85:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000044 r4:<invalid> -68(fp):fp + -44 -64(fp):fp + -44 -60(fp):r2 + 1767 -56(fp):r2 + 1783 -52(fp):r2 + 1791 -48(fp):r2 + 1796



word32 fn0000CFBA(word32 r0, word32 r6, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r6
// LiveOut: ap fp r0 r2 r3 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn0000CFBA_entry:
// DataOut: ap fp r0 r10 r11 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000CFBA:
	word32 r3_5
	*r3Out = Mem0[ap + 4:word32]
	word32 r2_6 = Mem0[ap + 8:word32]
	*r2Out = r2_6
	branch r2_6 != 0x00000000 l0000CFCA
// DataOut: fp r0 r10 r11 r2 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000CFCA:
	word32 r1_48
	word32 r3_50
	word32 r4_51
	word32 r5_52
	word32 ap_53
	word32 fp_54
	word32 sp_55
	word32 r2_150
	word32 r0_56 = fn0000D39E(r0, r6, fp, out r1_48, out r2_150, out r3_50, out r4_51, out r5_52, out ap_53, out fp_54, out sp_55)
	word32 r3_155 = r3_50 ^ 0xFFFFFFFF
	*r3Out = r3_155
	branch Mem0[ap_53 + 12:word32] >=u 0x00000008 l0000CFE4
// DataOut: ap fp r0 r10 r11 r2 r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid>

l0000CFE4:
	word32 r2_101 = r2_150 + 0x00000001
	word32 r3_106 = (uint32) SLICE(r3_155, ui24, 8) ^ Mem0[r0_56 + (((uint32) Mem0[r2_150:byte] ^ r3_155) & ~0xFFFFFF00) * 4:word32]
	word32 r3_113 = (uint32) SLICE(r3_106, ui24, 8) ^ Mem0[r0_56 + (((uint32) Mem0[r2_101:byte] ^ r3_106) & ~0xFFFFFF00) * 4:word32]
	word32 r3_120 = (uint32) SLICE(r3_113, ui24, 8) ^ Mem0[r0_56 + (((uint32) Mem0[r2_101 + 0x00000001:byte] ^ r3_113) & ~0xFFFFFF00) * 4:word32]
	word32 r3_127 = (uint32) SLICE(r3_120, ui24, 8) ^ Mem0[r0_56 + (((uint32) Mem0[r2_101 + 0x00000002:byte] ^ r3_120) & ~0xFFFFFF00) * 4:word32]
	word32 r3_134 = (uint32) SLICE(r3_127, ui24, 8) ^ Mem0[r0_56 + (((uint32) Mem0[r2_101 + 0x00000003:byte] ^ r3_127) & ~0xFFFFFF00) * 4:word32]
	word32 r3_141 = (uint32) SLICE(r3_134, ui24, 8) ^ Mem0[r0_56 + (((uint32) Mem0[r2_101 + 0x00000004:byte] ^ r3_134) & ~0xFFFFFF00) * 4:word32]
	word32 r3_148 = (uint32) SLICE(r3_141, ui24, 8) ^ Mem0[r0_56 + (((uint32) Mem0[r2_101 + 0x00000005:byte] ^ r3_141) & ~0xFFFFFF00) * 4:word32]
	r3_155 = (uint32) SLICE(r3_148, ui24, 8) ^ Mem0[r0_56 + (((uint32) Mem0[r2_101 + 0x00000006:byte] ^ r3_148) & ~0xFFFFFF00) * 4:word32]
	*r3Out = r3_155
	Mem157[ap_53 + 12:word32] = Mem0[ap_53 + 12:word32] - 0x00000008
	r2_150 = r2_101 + 0x00000007
	*r2Out = r2_150
	branch Mem157[ap_53 + 12:word32] <u 0x00000008 l0000D0A7
// DataOut: ap fp r0 r10 r11 r2 r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid>

l0000D0A4:
// DataOut: ap fp r0 r10 r11 r2 r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid>

l0000CFE1:
// DataOut: ap fp r0 r10 r11 r2 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r1:<invalid>

l0000D0A7:
	branch Mem0[ap_53 + 12:word32] == 0x00000000 l0000D0C8
// DataOut: ap fp r0 r10 r11 r2 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid>

l0000D0AC:
	r3_155 = (uint32) SLICE(r3_155, ui24, 8) ^ Mem0[r0_56 + (((uint32) Mem0[r2_150:byte] ^ r3_155) & ~0xFFFFFF00) * 4:word32]
	*r3Out = r3_155
	word32 v28_94 = Mem0[ap_53 + 12:word32] - 0x00000001
	Mem95[ap_53 + 12:word32] = v28_94
	r2_150 = r2_150 + 0x00000001
	*r2Out = r2_150
	branch v28_94 != 0x00000000 l0000D0AC
// DataOut: ap fp r0 r10 r11 r2 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid>

l0000D0C8:
	word32 sp_81
	*spOut = fp_54 - 0x00000004
	word32 fp_82
	*fpOut = Mem0[fp_54 + 0x0000000C:word32]
	word32 ap_83
	*apOut = Mem0[fp_54 + 0x00000008:word32]
	return r3_155 ^ 0xFFFFFFFF
// DataOut: ap fp r0 r10 r11 r2 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid>

l0000CFC7:
	word32 sp_38
	*spOut = fp - 0x00000004
	word32 fp_39
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_40
	*apOut = Mem0[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 r10 r11 r2 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid>

fn0000CFBA_exit:
// DataOut: ap fp r0 r2 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r4:<invalid> r1:<invalid>



void fn0000D0D6(word32 r0, word32 r1, word32 r2, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r1 r2
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 sp
// Preserved:
fn0000D0D6_entry:
// DataOut: ap fp r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D0D6:
	byte CVZN_13
	word32 r4_14
	byte ZN_15
	bool C_16
	bool V_17
	word32 ap_18
	word32 r5_20
	bool Z_21
	word32 r2_22
	byte VZN_23
	word32 fp_24
	word32 r3_25
	word32 r6_26
	bool N_27
	word32 r1_28
	word32 r7_29
	word32 r8_30
	word32 sp_12
	word32 r0_19
	call Mem0[0x000192CC:word32] + 2 (retsize: 4; depth: 12)
		uses: ap,C_10,dwLoc08_8,r4_4,sp_5,V_11,ZN_9
		defs: ap_18,C_16,CVZN_13,fp_24,N_27,r0_19,r1_28,r2_22,r3_25,r4_14,r5_20,r6_26,r7_29,r8_30,sp_12,V_17,VZN_23,Z_21,ZN_15
	word32 r5_31 = r0_19
	branch r0_19 == 0x00000000 l0000D10B
// DataOut: ap fp r0 r1 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D0EF:
	branch (Mem0[r4_14 + (int32) ((int8) SEQ(SLICE(r2_22, word24, 8), Mem0[r0_19:byte] & ~0x80)) * 4:word32] & 0x00000008) == 0x00000000 l0000D10B
// DataOut: ap fp r0 r1 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r4:<invalid> r5:r0 -8(fp):<invalid>
// LocalsOut: fp(32)

l0000D0FC:
	r5_31 = r5_31 + 0x00000001
	r0_19 = (int32) (int8) SEQ(SLICE(r0_19, word24, 8), Mem0[r5_31:byte] & ~0x80)
	branch (Mem0[r4_14 + r0_19 * 4:word32] & 0x00000008) != 0x00000000 l0000D0FC
// DataOut: ap fp r0 r1 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l0000D10B:
	branch r5_31 == 0x00000000 l0000D113
// DataOut: ap fp r0 r1 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l0000D10F:
	branch Mem0[r5_31:byte] != 0x00 l0000D13F
// DataOut: ap fp r0 r1 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -8(fp):<invalid>
// LocalsOut: fp(32)

l0000D113:
	byte CVZN_454
	word32 r4_455
	byte ZN_456
	bool C_457
	bool V_458
	word32 ap_459
	word32 r5_461
	bool Z_462
	word32 r2_463
	byte VZN_464
	word32 fp_465
	word32 r3_466
	word32 r6_467
	bool N_468
	word32 r1_469
	word32 r7_470
	word32 r8_471
	word32 r0_460
	call Mem0[0x000192CC:word32] + 2 (retsize: 4; depth: 16)
		uses: ap_18,C_451,CVZN_13,dwLoc08_8,dwLoc0C_449,fp_24,N_27,r0_39,r1_28,r2_37,r3_25,r4_14,r5_38,r6_26,r7_29,r8_30,sp_447,V_452,VZN_36,Z_41,ZN_450
		defs: ap_459,C_457,CVZN_454,fp_465,N_468,r0_460,r1_469,r2_463,r3_466,r4_455,r5_461,r6_467,r7_470,r8_471,sp_453,V_458,VZN_464,Z_462,ZN_456
	r5_31 = r0_460
	branch r0_460 == 0x00000000 l0000D13F
// DataOut: ap fp r0 r1 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -8(fp):<invalid>

l0000D122:
	branch (Mem0[r4_455 + (int32) ((int8) SEQ(SLICE(r2_463, word24, 8), Mem0[r0_460:byte] & ~0x80)) * 4:word32] & 0x00000008) == 0x00000000 l0000D13F
// DataOut: ap fp r0 r1 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D12F:
// DataOut: ap fp r0 r1 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D130:
	r5_31 = r5_31 + 0x00000001
	r0_460 = (int32) (int8) SEQ(SLICE(r0_460, word24, 8), Mem0[r5_31:byte] & ~0x80)
	branch (Mem0[r4_455 + r0_460 * 4:word32] & 0x00000008) != 0x00000000 l0000D130
// DataOut: ap fp r0 r1 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D13F:
	branch r5_31 == 0x00000000 l0000D147
// DataOut: ap fp r0 r1 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D143:
	branch Mem0[r5_31:byte] != 0x00 l0000D148
// DataOut: ap fp r0 r1 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D148:
	word32 sp_94 = sp_12 - 0x00000004
	Mem95[sp_94:word32] = r5_31
	word32 sp_99
	byte CVZN_100
	word32 r4_101
	byte ZN_102
	bool C_103
	bool V_104
	word32 ap_105
	word32 r0_106
	word32 r5_107
	bool Z_108
	word32 r2_109
	byte VZN_110
	word32 fp_111
	word32 r3_112
	word32 r6_113
	bool N_114
	word32 r1_115
	word32 r7_116
	word32 r8_117
	call Mem95[0x000192C4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_59,C_97,CVZN_56,dwLoc08_8,dwLoc0C_44,fp_58,N_48,r0_54,r1_47,r2_52,r3_50,r4_55,r5_53,r6_49,r7_46,r8_45,sp_94,V_98,VZN_51,Z_91,ZN_96
		defs: ap_105,C_103,CVZN_100,fp_111,N_114,r0_106,r1_115,r2_109,r3_112,r4_101,r5_107,r6_113,r7_116,r8_117,sp_99,V_104,VZN_110,Z_108,ZN_102
	Mem120[sp_99 - 0x00000004:word32] = r0_106 + 0x00000001
	word32 sp_124
	byte CVZN_125
	word32 r4_126
	byte ZN_127
	bool C_128
	bool V_129
	word32 ap_130
	word32 r0_131
	word32 r5_132
	bool Z_133
	word32 r2_134
	byte VZN_135
	word32 fp_136
	word32 r3_137
	word32 r6_138
	bool N_139
	word32 r1_140
	word32 r7_141
	word32 r8_142
	call Mem120[0x000192B4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_105,C_122,CVZN_100,dwLoc08_8,dwLoc0C_44,fp_111,N_114,r0_118,r1_115,r2_109,r3_112,r4_101,r5_107,r6_113,r7_116,r8_117,sp_119,V_123,VZN_110,Z_108,ZN_121
		defs: ap_130,C_128,CVZN_125,fp_136,N_139,r0_131,r1_140,r2_134,r3_137,r4_126,r5_132,r6_138,r7_141,r8_142,sp_124,V_129,VZN_135,Z_133,ZN_127
	branch r0_131 != 0x00000000 l0000D177
// DataOut: ap fp r0 r1 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D177:
	Mem149[sp_124 - 0x00000004:word32] = r5_132
	Mem151[sp_124 - 0x00000008:word32] = r0_131
	word32 sp_155
	byte CVZN_156
	word32 r4_157
	byte ZN_158
	bool C_159
	bool V_160
	word32 ap_161
	word32 r5_163
	bool Z_164
	word32 r2_165
	byte VZN_166
	word32 fp_167
	word32 r3_168
	word32 r6_169
	bool N_170
	word32 r7_172
	word32 r8_173
	word32 r1_171
	word32 r0_162
	call Mem151[0x000192BC:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_130,C_153,CVZN_125,dwLoc08_8,dwLoc0C_44,fp_136,N_139,r0_131,r1_140,r2_134,r3_143,r4_126,r5_132,r6_138,r7_141,r8_142,sp_150,V_154,VZN_135,Z_145,ZN_152
		defs: ap_161,C_159,CVZN_156,fp_167,N_170,r0_162,r1_171,r2_165,r3_168,r4_157,r5_163,r6_169,r7_172,r8_173,sp_155,V_160,VZN_166,Z_164,ZN_158
	word32 r2_174 = r3_168
	word32 r6_175 = 0x00000000
// DataOut: ap fp r0 r1 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D188:
	byte v28_186 = Mem151[r2_174:byte]
	r6_175 = r6_175 + 0x00000001
	r0_162 = SEQ(SLICE(r0_162, word24, 8), v28_186)
	branch v28_186 == 0x00 l0000D1AF
// DataOut: ap fp r0 r1 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D18F:
	r0_162 = (int32) (int8) SEQ(SLICE(r0_162, word24, 8), (byte) r0_162 & ~0x80)
	branch (Mem151[r4_157 + r0_162 * 4:word32] & 0x00000008) != 0x00000000 l0000D1AF
// DataOut: ap fp r0 r1 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D19B:
// DataOut: ap fp r0 r1 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D19C:
	r2_174 = r2_174 + 0x00000001
	byte v32_434 = Mem151[r2_174:byte]
	r0_162 = SEQ(SLICE(r0_162, word24, 8), v32_434)
	branch v32_434 == 0x00 l0000D1AF
// DataOut: ap fp r0 r1 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D1A3:
	r0_162 = (int32) (int8) SEQ(SLICE(r0_162, word24, 8), (byte) r0_162 & ~0x80)
	branch (Mem151[r4_157 + r0_162 * 4:word32] & 0x00000008) == 0x00000000 l0000D19C
// DataOut: ap fp r0 r1 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D1AF:
	byte v37_196 = Mem151[r2_174:byte]
	r1_171 = SEQ(SLICE(r1_171, word24, 8), v37_196)
	branch v37_196 == 0x00 l0000D1D8
// DataOut: ap fp r0 r1 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D1B4:
	r0_162 = (int32) (int8) SEQ(SLICE(r0_162, word24, 8), (byte) r1_171 & ~0x80)
	branch (Mem151[r4_157 + r0_162 * 4:word32] & 0x00000008) == 0x00000000 l0000D1D8
// DataOut: ap fp r0 r1 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D1C1:
// DataOut: ap fp r0 r1 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D1C4:
	r2_174 = r2_174 + 0x00000001
	byte v41_411 = Mem151[r2_174:byte]
	r1_171 = SEQ(SLICE(r1_171, word24, 8), v41_411)
	branch v41_411 == 0x00 l0000D1D8
// DataOut: ap fp r0 r1 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D1CB:
	r0_162 = (int32) (int8) SEQ(SLICE(r0_162, word24, 8), (byte) r1_171 & ~0x80)
	branch (Mem151[r4_157 + r0_162 * 4:word32] & 0x00000008) != 0x00000000 l0000D1C4
// DataOut: ap fp r0 r1 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D1D8:
	branch (byte) r1_171 != 0x00 l0000D188
// DataOut: ap fp r0 r1 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D1DC:
	Mem216[sp_155 - 0x00000004:word32] = r6_175 + Mem151[Mem151[ap_161 + 4:word32]:word32] + 0x00000001 << 2
	word32 sp_219
	byte CVZN_220
	word32 r4_221
	byte ZN_222
	bool C_223
	bool V_224
	word32 ap_225
	word32 r0_226
	word32 r5_227
	bool Z_228
	word32 r2_229
	byte VZN_230
	word32 fp_231
	word32 r6_233
	bool N_234
	word32 r1_235
	word32 r7_236
	word32 r8_237
	word32 r3_232
	call Mem216[0x000192B4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_161,C_218,CVZN_156,dwLoc08_8,dwLoc0C_44,fp_167,N_177,r0_206,r1_203,r2_213,r3_168,r4_157,r5_163,r6_185,r7_211,r8_173,sp_214,V_210,VZN_217,Z_208,ZN_207
		defs: ap_225,C_223,CVZN_220,fp_231,N_234,r0_226,r1_235,r2_229,r3_232,r4_221,r5_227,r6_233,r7_236,r8_237,sp_219,V_224,VZN_230,Z_228,ZN_222
	branch r0_226 != 0x00000000 l0000D215
// DataOut: ap fp r3 r4 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D215:
	word32 r5_270 = Mem216[ap_225 + 8:word32]
	word32 r2_271 = Mem216[r5_270:word32]
	Mem273[r5_270:word32] = Mem216[r5_270:word32] + 0x00000004
	Mem275[r0_226:word32] = Mem273[r2_271:word32]
	word32 r6_269 = r0_226 + 0x00000004
// DataOut: ap fp r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D22C:
	Mem286[r6_269:word32] = r3_232
	r6_269 = r6_269 + 0x00000004
	word32 r0_288 = (int32) Mem286[r3_232:int8]
	branch r0_288 == 0x00000000 l0000D258
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D234:
	branch (Mem286[r4_221 + (r0_288 & ~0xFFFFFF80) * 4:word32] & 0x00000008) != 0x00000000 l0000D258
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D241:
// DataOut: ap fp r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D244:
	r3_232 = r3_232 + 0x00000001
	r0_288 = (int32) Mem286[r3_232:int8]
	branch r0_288 == 0x00000000 l0000D258
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D24B:
	branch (Mem286[r4_221 + (r0_288 & ~0xFFFFFF80) * 4:word32] & 0x00000008) == 0x00000000 l0000D244
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D258:
	branch r0_288 == 0x00000000 l0000D25E
// DataOut: ap fp r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D25C:
	Mem371[r3_232:byte] = 0x00
	r3_232 = r3_232 + 0x00000001
// DataOut: ap fp r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D25E:
	word32 r0_303 = (int32) Mem286[r3_232:int8]
	branch r0_303 == 0x00000000 l0000D284
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D263:
	branch (Mem286[r4_221 + (r0_303 & ~0xFFFFFF80) * 4:word32] & 0x00000008) == 0x00000000 l0000D284
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D270:
	r3_232 = r3_232 + 0x00000001
	r0_303 = (int32) Mem286[r3_232:int8]
	branch r0_303 == 0x00000000 l0000D284
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D277:
	branch (Mem286[r4_221 + (r0_303 & ~0xFFFFFF80) * 4:word32] & 0x00000008) != 0x00000000 l0000D270
// DataOut: ap fp r0 r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D284:
	branch r0_303 != 0x00000000 l0000D22C
// DataOut: ap fp r3 r4 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D288:
	word32 r7_316 = r7_236 + Mem286[Mem286[ap_225 + 4:word32]:word32]
	word32 v52_317 = Mem286[ap_225 + 4:word32] - 0x00000001
	Mem318[Mem318[ap_225 + 4:word32]:word32] = v52_317
	branch v52_317 == 0x00000000 l0000D2AA
// DataOut: ap fp r0 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D295:
	word32 r3_338 = Mem318[ap_225 + 0x00000008:word32]
// DataOut: ap fp r0 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:ap + 4 r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D29C:
	word32 r2_343 = Mem318[r3_338:word32]
	Mem345[r3_338:word32] = Mem318[r3_338:word32] + 0x00000004
	Mem347[r6_269:word32] = Mem345[r2_343:word32]
	word32 v55_349 = Mem347[ap_225 + 4:word32] - 0x00000001
	Mem350[Mem350[ap_225 + 4:word32]:word32] = v55_349
	r6_269 = r6_269 + 0x00000004
	branch v55_349 != 0x00000000 l0000D29C
// DataOut: ap fp r0 r3 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:ap + 4 r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D2AA:
	Mem327[r6_269:word32] = 0x00000000
	Mem329[Mem329[ap_225 + 8:word32]:word32] = r0_226
	Mem331[Mem331[ap_225 + 0x00000004:word32]:word32] = r7_316
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:ap + 4 r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D1F6:
	Mem244[sp_219 - 0x00000004:word32] = r3_232
	word32 sp_248
	byte CVZN_249
	word32 r4_250
	byte ZN_251
	bool C_252
	bool V_253
	word32 ap_254
	word32 r0_255
	word32 r5_256
	bool Z_257
	word32 r2_258
	byte VZN_259
	word32 fp_260
	word32 r3_261
	word32 r6_262
	bool N_263
	word32 r1_264
	word32 r7_265
	word32 r8_266
	call Mem244[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_225,C_246,CVZN_220,dwLoc08_8,dwLoc0C_44,fp_231,N_234,r0_226,r1_235,r2_229,r3_232,r4_221,r5_227,r6_238,r7_236,r8_237,sp_243,V_247,VZN_230,Z_240,ZN_245
		defs: ap_254,C_252,CVZN_249,fp_260,N_263,r0_255,r1_264,r2_258,r3_261,r4_250,r5_256,r6_262,r7_265,r8_266,sp_248,V_253,VZN_259,Z_257,ZN_251
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D161:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D147:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> -12(fp):<invalid> -8(fp):<invalid>

fn0000D0D6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r5:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>



word32 fn0000D39E(word32 r0, word32 r6, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r0 r6
// LiveOut: ap fp r0 r1 r2 r3 r4 r5 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn0000D39E_entry:
	*r5Out = r5
	*r2Out = r2
	*r1Out = r1
	*r3Out = r3
	*r4Out = r4
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D39E:
	branch Mem0[r6:word32] != 0x00000000 l0000D3FD
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D3AC:
	word32 sp_52
	byte CVZN_53
	byte ZN_54
	bool C_55
	bool V_56
	bool Z_58
	word32 r0_59
	word32 r5_60
	word32 r4_61
	bool N_62
	word32 r3_63
	word32 r2_64
	word32 r1_65
	word32 ap_66
	call Mem0[0x000192B4:word32] + 2 (retsize: 4; depth: 12)
		uses: ap,C_48,CVZN,dwLoc08_46,fp,N,r0,r1,r2,r3,r4,r5,r6,sp_44,V_49,Z_6,ZN_47
		defs: ap_66,C_55,CVZN_53,fp_67,N_62,r0_59,r1_65,r2_64,r3_63,r4_61,r5_60,r6_57,sp_52,V_56,Z_58,ZN_54
	word32 r5_68
	*r5Out = r0_59
	branch r0_59 == 0x00000000 l0000D3FD
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D3BD:
	word32 r4_100 = 0x00000000
	word32 r3_74 = r0_59
// DataOut: fp pc r10 r11 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r5:r0 -8(fp):0x00000400

l0000D3C4:
	word32 r2_107 = r4_100
	*r2Out = r2_107
	word32 r1_108 = 0x00000008
	*r1Out = r1_108
	branch 0x00000008 == 0x00000000 l0000D3EC
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> ap:<invalid> r0:<invalid> -8(fp):0x00000400

l0000D3CC:
	word32 r0_116
	branch (r2_107 & 0x00000001) == 0x00000000 l0000D3E0
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> ap:<invalid> r0:<invalid> -8(fp):0x00000400

l0000D3E0:
	r0_116 = (uint32) SLICE(r2_107, ui31, 1)
// DataOut: fp pc r0 r1 r10 r11 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> ap:<invalid> r0:<invalid> -8(fp):0x00000400

l0000D3CF:
	r0_116 = (uint32) SLICE(r2_107, ui31, 1) ^ 0xEDB88320
// DataOut: fp pc r0 r1 r10 r11 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> ap:<invalid> r0:<invalid> -8(fp):0x00000400

l0000D3E5:
	r2_107 = r0_116
	*r2Out = r2_107
	r1_108 = r1_108 - 0x00000001
	*r1Out = r1_108
	branch r1_108 != 0x00000000 l0000D3CC
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> ap:<invalid> r0:<invalid> -8(fp):0x00000400

l0000D3EC:
	Mem98[r3_74:word32] = r2_107
	r3_74 = r3_74 + 0x00000004
	*r3Out = r3_74
	r4_100 = r4_100 + 0x00000001
	*r4Out = r4_100
	branch r4_100 <= 0x000000FF l0000D3C4
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> ap:<invalid> r0:<invalid> -8(fp):0x00000400

l0000D3FA:
	Mem103[r6:word32] = r0_59
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> ap:<invalid> r0:<invalid> -8(fp):0x00000400

l0000D3FD:
	word32 sp_33 = fp - 0x00000004
	*spOut = sp_33
	word32 fp_34
	*fpOut = Mem0[sp_33 + 0x00000010:word32]
	word32 ap_35
	*apOut = Mem0[sp_33 + 0x0000000C:word32]
	return Mem0[r6:word32]
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:r0 r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> ap:<invalid> r0:<invalid> -8(fp):0x00000400

fn0000D39E_exit:
// DataOut: ap fp r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r5:r0 r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -8(fp):0x00000400



word32 fn0000D406(word32 ap, word32 fp, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: fp sp
// Trashed: CVZN ap fp sp
// Preserved:
fn0000D406_entry:
// DataOut: ap fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D406:
	branch Mem0[ap:word32] == 0x00000000 l0000D41F
// DataOut: ap fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D414:
	word32 sp_31
	byte CVZN_32
	byte ZN_33
	bool C_34
	bool V_35
	word32 ap_36
	bool Z_37
	bool N_38
	call Mem0[0x000192B0:word32] + 2 (retsize: 4; depth: 12)
		uses: ap,C_29,CVZN,dwLoc08_27,fp,N,sp_25,V_30,Z_6,ZN_28
		defs: ap_36,C_34,CVZN_32,fp_39,N_38,sp_31,V_35,Z_37,ZN_33
	Mem41[ap_36:word32] = 0x00000000
// DataOut: fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D41F:
	word32 sp_21 = fp - 0x00000004
	*spOut = sp_21
	return Mem0[sp_21 + 0x00000010:word32]
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> -8(fp):<invalid>

fn0000D406_exit:
// DataOut: fp sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 fp:<invalid> ap:<invalid> -8(fp):<invalid>



void fn0000D422(word32 r2, word32 r3, word32 r4, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r2 r3 r4
// LiveOut:
// Trashed: CVZN ap fp r0 sp
// Preserved:
fn0000D422_entry:
// DataOut: fp r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D422:
	word32 sp_15
	byte CVZN_16
	byte ZN_17
	bool C_18
	bool V_19
	word32 r2_20
	word32 r4_21
	word32 r3_22
	word32 r0_23
	word32 fp_24
	word32 ap_25
	call Mem0[0x0001927C:word32] + 2 (retsize: 4; depth: 20)
		uses: C_12,dwLoc08_5,dwLoc0C_7,dwLoc10_10,r2,sp_8,V_13,ZN_11
		defs: ap_25,C_18,CVZN_16,fp_24,r0_23,r2_20,r3_22,r4_21,sp_15,V_19,ZN_17
	Mem27[r2_20 + 36:word32] = -0x00000001
	Mem29[r2_20 + 0x0000C60F:word32] = r4_21 + 2
	Mem31[r2_20 + 144:word32] = r3_22
	Mem33[r2_20 + 148:word32] = r3_22 + 4
	Mem35[r2_20 + 1511:word32] = r2_20 + 167
	Mem37[r2_20 + 0x0000C6E5:word32] = 0x00000001
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000D422_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:r2 fp:<invalid> ap:<invalid> -16(fp):r2 -12(fp):0x00000000 -8(fp):0x0000C851



void fn0000D4A2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000D4A2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000D4A2_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D4A2:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0000D50E(word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut:
// Trashed: CVZN ap fp sp
// Preserved:
fn0000D50E_entry:
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D50E:
	branch Mem0[ap + 0x0000C5FB:word32] <= 0x00000000 l0000D529
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000D520:
	Mem54[ap + 132:word32] = Mem0[ap + 132:word32] + Mem0[ap + 0x0000C5FB:word32]
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D529:
	branch Mem0[ap + 0x0000C849:word32] <= 0x00000000 l0000D554
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D554:
	branch Mem0[ap + 0x0000C5FB:word32] >= 0x00000000 l0000D562
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D55C:
	Mem48[ap + 0x0000C5FB:word32] = 0x00000000
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D562:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D531:
	Mem22[ap + 0x0000C5FB:word32] = Mem0[ap + 132:word32] + Mem0[ap + 0x0000C849:word32]
	Mem24[ap + 0x0000C5F7:word32] = Mem22[ap + 0x0000C84D:word32] - Mem22[ap + 132:word32]
	Mem26[ap + 0x0000C849:word32] = 0x00000000
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

fn0000D50E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 fp:<invalid> ap:<invalid>



void fn0000D566(word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut:
// Trashed: CVZN ap fp sp
// Preserved:
fn0000D566_entry:
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D566:
	branch Mem0[ap + 0x0000C5FB:word32] <= Mem0[ap + 132:word32] l0000D5AC
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000D5AC:
	Mem43[ap + 0x0000C849:word32] = 0x00000000
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D57B:
	branch Mem0[ap + 132:word32] >= 0x00000000 l0000D585
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D581:
	Mem37[ap + 132:word32] = 0x00000000
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D585:
	Mem28[ap + 0x0000C84D:word32] = Mem0[ap + 132:word32] + Mem0[ap + 0x0000C5F7:word32]
	Mem30[ap + 0x0000C849:word32] = Mem28[ap + 0x0000C5FB:word32] - Mem28[ap + 132:word32]
	Mem32[ap + 0x0000C5FB:word32] = Mem30[ap + 132:word32]
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D5B2:
	Mem14[ap + 132:word32] = Mem0[ap + 132:word32] - Mem0[ap + 0x0000C5FB:word32]
	return
// DataOut: r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

fn0000D566_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 fp:<invalid> ap:<invalid>



word32 fn0000D5BE(word32 r0, word32 r4, word32 r6, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r5Out, ptr32 & r7Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r4 r6
// LiveOut: ap fp r0 r2 r3 r5 r7 sp
// Trashed: CVZN ap fp r0 r2 r3 r5 r7 sp
// Preserved:
fn0000D5BE_entry:
	*r3Out = r3
	*r5Out = r5
// DataOut: ap fp pc r0 r1 r10 r11 r3 r4 r5 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D5BE:
	word32 r2_135 = Mem0[ap + 8:word32]
	*r2Out = r2_135
	word32 sp_112 = fp - 0x00000004
	word32 r7_119
	*r7Out = r2_135
	branch r2_135 != 0x00000000 l0000D5DD
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000D5DD:
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r7:<invalid>

l0000D5E0:
	branch Mem0[r4 + 0x0000C5FB:word32] > 0x00000000 l0000D64F
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D5E8:
	word32 sp_146 = sp_112 - 0x00000004
	Mem148[sp_146:uint32] = 0x00002000
	Mem151[sp_146 - 0x00000004:word32] = Mem148[r4 + 0x0000C5F3:word32]
	Mem154[sp_146 - 0x00000008:word32] = Mem151[r4 + 0x0000C617:word32]
	byte CVZN_159
	byte ZN_160
	bool C_161
	bool V_162
	word32 r7_165
	bool Z_166
	word32 r0_167
	word32 fp_169
	bool N_170
	word32 r6_171
	byte CZN_172
	word32 r5_173
	word32 r3_174
	call Mem154[0x00019270:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_78,C_156,CVZN_74,CZN_67,fp_77,N_73,r0_75,r2_71,r3_65,r4_69,r5_66,r6_68,r7_70,sp_152,V_157,Z_72,ZN_155
		defs: ap_163,C_161,CVZN_159,CZN_172,fp_169,N_170,r0_167,r2_164,r3_174,r4_168,r5_173,r6_171,r7_165,sp_158,V_162,Z_166,ZN_160
	Mem176[r4 + 0x0000C5FB:word32] = r0_167
	branch r0_167 != 0x00000000 l0000D60E
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D60E:
	branch Mem176[r4 + 0x0000C5FB:word32] >= 0x00000000 l0000D639
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D639:
	Mem253[r4 + 0x0000C61F:word32] = Mem176[r4 + 0x0000C61F:word32] + 0x00002000
	Mem255[r4 + 0x0000C5F7:word32] = Mem253[r4 + 0x0000C5F3:word32]
// DataOut: ap fp pc r1 r10 r11 r2 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D64F:
	word32 r5_138
	word32 r0_95 = Mem0[r4 + 0x0000C5FB:word32]
	branch r2_135 >=u r0_95 l0000D660
// DataOut: ap fp pc r0 r1 r10 r11 r2 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D660:
	r5_138 = r0_95
// DataOut: ap fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D65B:
	r5_138 = r2_135
// DataOut: ap fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D663:
	word32 sp_101 = sp_112 - 0x00000004
	Mem102[sp_101:word32] = r5_138
	Mem105[sp_101 - 0x00000004:word32] = Mem102[r4 + 0x0000C5F7:word32]
	Mem108[sp_101 - 0x00000008:word32] = Mem105[ap + 4:word32]
	byte CVZN_113
	byte ZN_114
	bool C_115
	bool V_116
	word32 r2_118
	bool Z_120
	word32 r0_121
	bool N_124
	word32 r6_125
	byte CZN_126
	word32 r5_127
	word32 r3_128
	call Mem108[0x0001929C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_94,C_110,CVZN_90,CZN_96,fp_93,N_89,r0_95,r2_87,r3_100,r4_85,r5_99,r6_84,r7_86,sp_106,V_111,Z_88,ZN_109
		defs: ap_117,C_115,CVZN_113,CZN_126,fp_123,N_124,r0_121,r2_118,r3_128,r4_122,r5_127,r6_125,r7_119,sp_112,V_116,Z_120,ZN_114
	Mem130[ap + 4:word32] = Mem108[ap + 4:word32] + r3_128
	Mem132[r4 + 0x0000C5F7:word32] = Mem130[r4 + 0x0000C5F7:word32] + r3_128
	Mem134[r4 + 0x0000C5FB:word32] = Mem132[r4 + 0x0000C5FB:word32] - r3_128
	r2_135 = r2_118 - r3_128
	*r2Out = r2_135
	branch r2_135 == 0x00000000 l0000D692
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D68F:
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D616:
	Mem192[sp_112 - 0x00000004:uint32] = 0x00000401
	Mem195[sp_112 - 0x00000008:word32] = r6_171 + 36
	word32 sp_199
	byte CVZN_200
	byte ZN_201
	bool C_202
	bool V_203
	word32 ap_204
	word32 r2_205
	word32 r7_206
	bool Z_207
	word32 r0_208
	word32 r4_209
	word32 fp_210
	bool N_211
	word32 r6_212
	byte CZN_213
	word32 r5_214
	word32 r3_215
	call Mem195[0x000192C4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_163,C_197,CVZN_159,CZN_172,fp_169,N_187,r0_167,r2_164,r3_174,r4_168,r5_173,r6_171,r7_165,sp_193,V_198,Z_178,ZN_196
		defs: ap_204,C_202,CVZN_200,CZN_213,fp_210,N_211,r0_208,r2_205,r3_215,r4_209,r5_214,r6_212,r7_206,sp_199,V_203,Z_207,ZN_201
	Mem217[sp_199 - 0x00000004:word32] = r0_208
	Mem220[sp_199 - 0x00000008:word32] = r6_212 + 36
	Mem222[sp_199 - 0x0000000C:word32] = r4_209
	word32 r0_223 = Mem222[r4_209 + 0x0000C839:word32]
	word32 sp_227
	byte CVZN_228
	byte ZN_229
	bool C_230
	bool V_231
	word32 ap_232
	word32 r2_233
	word32 r7_234
	bool Z_235
	word32 r0_236
	word32 r4_237
	word32 fp_238
	bool N_239
	word32 r6_240
	byte CZN_241
	word32 r5_242
	word32 r3_243
	call r0_223 + 2 (retsize: 4; depth: 4)
		uses: ap_204,C_225,CVZN_200,CZN_213,fp_210,N_211,r0_223,r2_205,r3_215,r4_209,r5_214,r6_212,r7_206,sp_221,V_226,Z_207,ZN_224
		defs: ap_232,C_230,CVZN_228,CZN_241,fp_238,N_239,r0_236,r2_233,r3_243,r4_237,r5_242,r6_240,r7_234,sp_227,V_231,Z_235,ZN_229
	word32 sp_249
	*spOut = fp_238 - 0x00000004
	word32 fp_250
	*fpOut = Mem222[fp_238 + 0x0000000C:word32]
	word32 ap_251
	*apOut = Mem222[fp_238 + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D609:
	word32 sp_183
	*spOut = fp_169 - 0x00000004
	word32 fp_184
	*fpOut = Mem176[fp_169 + 0x0000000C:word32]
	word32 ap_185
	*apOut = Mem176[fp_169 + 0x00000008:word32]
	return r7_165 - r2_135
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0000D5DA:
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r7:<invalid>

l0000D692:
	word32 sp_50 = fp - 0x00000004
	*spOut = sp_50
	word32 fp_51
	*fpOut = Mem0[sp_50 + 0x00000010:word32]
	word32 ap_52
	*apOut = Mem0[sp_50 + 0x0000000C:word32]
	return r7_119
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> r5:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

fn0000D5BE_exit:
// DataOut: ap fp r0 r2 r3 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



word32 fn0000D69A(word32 r0, word32 r3, word32 r4, word32 r6, word32 ap, word32 fp, word32 pc, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r5Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r3 r4 r6
// LiveOut: ap fp r0 r2 r3 r5 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r5 sp
// Preserved:
fn0000D69A_entry:
	*r3Out = r3
	*r5Out = r5
	*r2Out = r2
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D69A:
	branch Mem0[r4 + 0x0000C6C5:word32] == 0x00000000 l0000D6B7
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000D6B7:
	branch Mem0[r4 + 132:word32] > 0x00000000 l0000D6CB
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// LocalsOut: fp(32)

l0000D6CB:
	branch Mem0[r4 + 0x0000C5FB:word32] <= 0x00000000 l0000D6D6
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// LocalsOut: fp(32)

l0000D6D6:
	word32 sp_179
	byte CVZN_180
	byte ZN_181
	bool C_182
	bool V_183
	bool Z_185
	word32 ap_188
	bool N_189
	word32 r2_190
	word32 r3_191
	word32 r5_192
	word32 r6_193
	byte CZN_194
	word32 pc_195
	call Mem0[0x00019270:word32] + 2 (retsize: 4; depth: 20)
		uses: ap,C_177,CVZN,CZN,dwLoc08_169,dwLoc0C_172,dwLoc10_175,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,fp,N,pc,r0,r2,r3,r4,r5,r6,sp_173,V_178,Z_6,ZN_176
		defs: ap_188,C_182,CVZN_180,CZN_194,fp_187,N_189,pc_195,r0_186,r2_190,r3_191,r4_184,r5_192,r6_193,sp_179,V_183,Z_185,ZN_181
	Mem197[r4 + 0x0000C5FB:word32] = r0
	branch r0 != 0x00000000 l0000D701
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004
// LocalsOut: fp(32)

l0000D701:
	branch Mem197[r4 + 0x0000C5FB:word32] >= 0x00000000 l0000D73B
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000
// LocalsOut: fp(32)

l0000D709:
	word32 sp_285
	byte CVZN_286
	byte ZN_287
	bool C_288
	bool V_289
	word32 r4_290
	bool Z_291
	word32 r0_292
	word32 fp_293
	word32 ap_294
	bool N_295
	word32 r2_296
	word32 r3_297
	word32 r5_298
	word32 r6_299
	byte CZN_300
	word32 pc_301
	call Mem197[0x000192C4:word32] + 2 (retsize: 4; depth: 28)
		uses: ap_188,C_283,CVZN_180,CZN_194,dwLoc08_169,dwLoc0C_172,dwLoc10_175,dwLoc14_278,dwLoc18_281,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,fp_187,N_210,pc_195,r0_186,r2_190,r3_191,r4_184,r5_192,r6_193,sp_279,V_284,Z_199,ZN_282
		defs: ap_294,C_288,CVZN_286,CZN_300,fp_293,N_295,pc_301,r0_292,r2_296,r3_297,r4_290,r5_298,r6_299,sp_285,V_289,Z_291,ZN_287
	word32 r2_309 = Mem197[r4_290 + 0x0000C839:word32]
	word32 sp_313
	byte CVZN_314
	byte ZN_315
	bool C_316
	bool V_317
	bool Z_319
	word32 r0_320
	word32 fp_321
	word32 ap_322
	bool N_323
	word32 r2_324
	word32 r3_325
	word32 r5_326
	word32 r6_327
	byte CZN_328
	word32 pc_329
	call r2_309 + 2 (retsize: 4; depth: 40)
		uses: ap_294,C_311,CVZN_286,CZN_300,dwLoc08_169,dwLoc0C_172,dwLoc10_175,dwLoc14_278,dwLoc18_281,dwLoc1C_303,dwLoc20_306,dwLoc24_308,dwLoc28,dwLoc2C,fp_293,N_295,pc_301,r0_292,r2_309,r3_297,r4_290,r5_298,r6_299,sp_307,V_312,Z_291,ZN_310
		defs: ap_322,C_316,CVZN_314,CZN_328,fp_321,N_323,pc_329,r0_320,r2_324,r3_325,r4_318,r5_326,r6_327,sp_313,V_317,Z_319,ZN_315
	fn000124FE(r0_320, r2_324, ap_322, pc_329)
	word32 r3_340
	r0 = fn0000CE52(r3_325, ap_322, fp_321, out r3_340, out fp)
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000
// Terminates process

l0000D73B:
	Mem235[r4 + 0x0000C61F:word32] = Mem197[r4 + 0x0000C61F:word32] + 0x00002000
	Mem237[r4 + 0x0000C5F7:word32] = Mem235[r4 + 0x0000C5F3:word32]
	branch Mem237[r4 + 0x0000C5FB:word32] <= Mem237[r4 + 132:word32] l0000D790
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D790:
	Mem271[r4 + 0x0000C849:word32] = 0x00000000
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D75C:
	branch Mem237[r4 + 132:word32] >= 0x00000000 l0000D766
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D762:
	Mem265[r4 + 132:word32] = 0x00000000
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D766:
	Mem256[r4 + 0x0000C84D:word32] = Mem237[r4 + 132:word32] + Mem237[r4 + 0x0000C5F7:word32]
	Mem258[r4 + 0x0000C849:word32] = Mem256[r4 + 0x0000C5FB:word32] - Mem256[r4 + 132:word32]
	Mem260[r4 + 0x0000C5FB:word32] = Mem258[r4 + 132:word32]
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D796:
	Mem247[r4 + 132:word32] = Mem237[r4 + 132:word32] - Mem237[r4 + 0x0000C5FB:word32]
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D6F7:
	Mem203[r4 + 0x0000C5FB:word32] = 0x00000000
	word32 sp_206
	*spOut = fp - 0x00000004
	word32 fp_207
	*fpOut = Mem203[fp + 0x0000000C:word32]
	word32 ap_208
	*apOut = Mem203[fp + 0x00000008:word32]
	return -0x00000001
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D6D3:
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D79F:
	branch (Mem0[Mem0[r4 + 1511:word32] + 20:word32] & 0x00000001) == 0x00000000 l0000D7EA
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D7A9:
	word32 r2_123 = Mem0[r4 + 0x0000C5FB:word32]
	word32 r3_124 = Mem0[r4 + 0x0000C5F7:word32]
	*r3Out = r3_124
	word32 r5_126 = r2_123 - 0x00000001
	*r5Out = r5_126
	branch r2_123 == 0x00000000 l0000D7EA
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D7C2:
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D7C4:
	word32 r2_138 = (uint32) Mem0[r3_124:byte]
	word32 fp_142
	word32 sp_143
	word32 r0_144 = fn00011ED6(r0, fp, out fp_142, out sp_143)
	Mem147[r3_124:byte] = (byte) r2_138 ^ (byte) r0_144
	Mem150[sp_143 - 0x00000004:uint32] = (uint32) Mem147[r3_124:byte]
	word32 r3_154
	r0 = fn00011F06(r2_138, r0_144, fp_142, out r3_154, out fp)
	r3_124 = r3_154 + 0x00000001
	*r3Out = r3_124
	r5_126 = r5_343 - 0x00000001
	*r5Out = r5_126
	word32 r5_343 = r5_126
	branch r5_343 != 0x00000000 l0000D7C4
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D7EA:
	Mem112[r4 + 0x0000C5FB:word32] = Mem0[r4 + 0x0000C5FB:word32] - 0x00000001
	word32 r2_113 = Mem112[r4 + 0x0000C5F7:word32]
	*r2Out = r2_113
	Mem115[r4 + 0x0000C5F7:word32] = Mem112[r4 + 0x0000C5F7:word32] + 0x00000001
	word32 sp_120 = fp - 0x00000004
	*spOut = sp_120
	word32 fp_121
	*fpOut = Mem115[sp_120 + 0x00000010:word32]
	word32 ap_122
	*apOut = Mem115[sp_120 + 0x0000000C:word32]
	return (uint32) Mem115[r2_113:byte]
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000

l0000D6BD:
	Mem69[r4 + 132:word32] = Mem0[r4 + 132:word32] - 0x00000001
	Mem71[r4 + 0x0000C5FB:word32] = 0x00000000
	word32 sp_74
	*spOut = fp - 0x00000004
	word32 fp_75
	*fpOut = Mem71[fp + 0x0000000C:word32]
	word32 ap_76
	*apOut = Mem71[fp + 0x00000008:word32]
	return -0x00000001
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0000D6B3:
	word32 sp_45
	*spOut = fp - 0x00000004
	word32 fp_46
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_47
	*apOut = Mem0[fp + 0x00000008:word32]
	return -0x00000001
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

fn0000D69A_exit:
// DataOut: ap fp r0 r2 r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r5:<invalid> r1:<invalid> -40(fp):0x00000001 -36(fp):r4 -32(fp):r6 + 36 -28(fp):r0 -24(fp):r6 + 36 -20(fp):0x00000401 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00002000



word32 fn0000DC76(word32 ap, word32 fp, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp r0 r11 sp
// Trashed: CVZN ap fp r0 r11 sp
// Preserved:
fn0000DC76_entry:
// DataOut: ap fp pc r1 r10 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000DC76:
	word32 r11_4 = Mem0[0x0001934C:word32]
	*r11Out = r11_4
	branch Mem0[ap + 4:word32] != 0x00000000 l0000DC9F
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000DC9F:
	word32 r0_37 = Mem0[ap + 8:word32]
	branch r0_37 > 0x00000005 l0000DCB1
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): N
// SymbolicIn: sp:fp - 0x0000000C r11:<invalid> -12(fp):0x00000000

l0000DCB1:
	branch r0_37 < 0x00000000 l0000DCB3
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r11:<invalid> r0:<invalid> -12(fp):0x00000000

l0000DCB3:
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r11:<invalid> r0:<invalid> -12(fp):0x00000000

l0000E253:
	word32 sp_60
	*spOut = fp - 0x00000004
	word32 fp_61
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_62
	*apOut = Mem0[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r11:<invalid> r0:<invalid> -12(fp):0x00000000

l0000DCA3_1:
	word32 sp_45
	byte CVZN_46
	byte ZN_47
	bool C_48
	bool V_49
	word32 r11_50
	bool Z_51
	bool N_52
	word32 ap_53
	word32 r0_54
	word32 fp_55
	call 0x0000DCA7 + r0_37 * 0x00000002 (retsize: 4; depth: 16)
		uses: ap,C_41,CVZN_43,dwLoc0C_6,fp,N_40,r0_37,r11_4,sp_2,V_42,Z_39,ZN_38
		defs: ap_53,C_48,CVZN_46,fp_55,N_52,r0_54,r11_50,sp_45,V_49,Z_51,ZN_47
	return r0_54
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r11:<invalid> r0:<invalid> -12(fp):0x00000000

l0000DC9C:
	word32 sp_33
	*spOut = fp - 0x00000004
	word32 fp_34
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_35
	*apOut = Mem0[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C r11:<invalid> -12(fp):0x00000000

fn0000DC76_exit:
// DataOut: ap fp r0 r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -12(fp):0x00000000



word32 fn0000E25A(word32 ap, word32 fp, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp r0 sp
// Trashed: CVZN ap fp r0 r1 r2 sp
// Preserved:
fn0000E25A_entry:
// DataOut: ap fp r3 r4 r5 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000E25A:
	word32 r2_5 = Mem0[ap + 4:word32]
	word32 r0_6 = (uint32) Mem0[r2_5 + 1:byte]
	word32 sp_17
	*spOut = fp - 0x00000004
	word32 fp_18
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_19
	*apOut = Mem0[fp + 0x00000008:word32]
	return (uint32) (word16) SEQ(SLICE(r0_6 << 8, word16, 16), (word16) (r0_6 << 8) | (word16) ((uint32) Mem0[r2_5:byte]))
// DataOut: ap fp r0 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000E25A_exit:
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid>



word32 fn0000E276(word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp r0 r1 r2 sp
// Trashed: CVZN ap fp r0 r1 r2 sp
// Preserved:
fn0000E276_entry:
// DataOut: ap fp pc r10 r11 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000E276:
	word32 r1_5 = Mem0[ap + 4:word32]
	*r1Out = r1_5
	word32 r2_13 = ((uint32) Mem0[r1_5 + 3:byte] << 24) + ((uint32) Mem0[r1_5 + 2:byte] << 16) + ((uint32) Mem0[r1_5 + 1:byte] << 8)
	*r2Out = r2_13
	word32 sp_18
	*spOut = fp - 0x00000004
	word32 fp_19
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_20
	*apOut = Mem0[fp + 0x00000008:word32]
	return (uint32) Mem0[r1_5:byte] + r2_13
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000E276_exit:
// DataOut: ap fp r0 r1 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid>



word32 fn0000E2A6(word32 r2, word32 r5, word32 r7, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r2 r5 r7
// LiveOut: ap fp r0 r2 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn0000E2A6_entry:
// DataOut: ap fp r2 r5 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000E2A6:
	word32 r0_19 = Mem0[ap + 8:word32]
	word32 r1_15 = Mem0[ap + 4:word32]
// DataOut: ap fp r0 r1 r2 r5 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000E2B8:
	r2 = SEQ(SLICE(r2, word24, 8), Mem0[r0_19:byte])
	*r2Out = r2
	r0_19 = r0_19 + 0x00000001
	r1_15 = r1_15 + 0x00000001
	word32 r4_27 = (uint32) (byte) r2
	branch (r4_27 & 0x00000080) == 0x00000000 l0000E2D8
// DataOut: ap fp r0 r1 r2 r4 r5 r6 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid>

l0000E2D8:
	r5 = SEQ(SLICE(r5, word24, 8), (byte) r2)
// DataOut: ap fp r0 r1 r2 r4 r5 r6 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid>

l0000E2C7:
	r5 = SEQ(SLICE(r5, word24, 8), Mem0[r7 + (r4_27 & ~0xFFFFFF80):byte])
// DataOut: ap fp r0 r1 r2 r4 r5 r6 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid>

l0000E2DB:
	Mem34[r1_15:byte] = (byte) r5
	branch r4_27 != 0x00000000 l0000E2B8
// DataOut: ap fp r0 r1 r2 r5 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid>

l0000E2E2:
	word32 sp_44
	*spOut = fp - 0x00000004
	word32 fp_45
	*fpOut = Mem34[fp + 0x0000000C:word32]
	word32 ap_46
	*apOut = Mem34[fp + 0x00000008:word32]
	return Mem34[ap + 4:word32]
// DataOut: ap fp r0 r2 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid>

fn0000E2A6_exit:
// DataOut: ap fp r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid> r2:<invalid> r6:<invalid> r4:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> ap:<invalid>



word32 fn0000E2EA(word32 r5, word32 r7, word32 ap, word32 fp, ptr32 & r6Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r5 r7
// LiveOut: ap fp r0 r6 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000E2EA_entry:
	*r6Out = r6
// DataOut: ap fp r10 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000E2EA:
	word32 sp_111 = fp - 0x00000004
	word32 r8_103 = Mem0[0x0001934C:word32]
	word32 r2_102 = Mem0[ap + 4:word32]
	word32 r3_101 = Mem0[ap + 8:word32]
	word32 r4_100 = Mem0[ap + 12:word32]
	branch r4_100 != 0x00000000 l0000E305
// DataOut: fp r10 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000E305:
	word32 r9_127 = Mem0[0x00019298:word32]
// DataOut: fp r10 r2 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid>

l0000E30C:
	word32 r1_106
	word32 r5_104 = SEQ(SLICE(r5, word24, 8), Mem0[r2_102:byte])
	word32 r6_93 = (int32) (int8) r5_104
	word32 r0_94 = r6_93 & ~0xFFFFFF80
	branch (Mem0[r8_103 + r0_94 * 4:word32] & 0x00000001) == 0x00000000 l0000E32C
// DataOut: fp r0 r10 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E32C:
	r1_106 = r6_93
// DataOut: fp r1 r10 r2 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E31F:
	word32 sp_349 = sp_111 - 0x00000004
	Mem351[sp_349:int32] = (int32) (int8) r5_104
	byte CVZN_355
	byte ZN_357
	bool C_358
	bool V_359
	word32 ap_360
	bool Z_364
	word32 r6_367
	byte VZN_368
	word32 r0_369
	word32 r1_370
	bool N_371
	byte CZN_374
	call r9_127 + 2 (retsize: 4; depth: 4)
		uses: ap_89,C_353,CVZN_83,CZN_81,fp_88,N_86,r0_94,r1_82,r2_78,r3_77,r4_76,r5_92,r6_93,r7_74,r8_79,r9_75,sp_349,V_97,VZN_352,Z_85,ZN_95
		defs: ap_360,C_358,CVZN_355,CZN_374,fp_372,N_371,r0_369,r1_370,r2_361,r3_362,r4_363,r5_366,r6_367,r7_373,r8_356,r9_365,sp_354,V_359,VZN_368,Z_364,ZN_357
	r1_106 = r0_369
// DataOut: fp r1 r10 r2 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E32F:
	word32 r1_134
	r5 = SEQ(SLICE(r5_104, word24, 8), Mem0[r3_101:byte])
	word32 r6_120 = (int32) (int8) r5
	*r6Out = r6_120
	r7 = SEQ(SLICE(r7, word24, 8), (int8) r1_106)
	word32 r0_121 = r6_120 & ~0xFFFFFF80
	branch (Mem0[r8_103 + r0_121 * 4:word32] & 0x00000001) == 0x00000000 l0000E350
// DataOut: fp r0 r10 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E350:
	r1_134 = r6_120
// DataOut: fp r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E345:
	word32 sp_315 = sp_111 - 0x00000004
	Mem317[sp_315:int32] = (int32) (int8) r5
	byte CVZN_321
	byte ZN_323
	bool C_324
	bool V_325
	word32 ap_326
	bool Z_330
	word32 r6_333
	byte VZN_334
	word32 r1_336
	bool N_337
	byte CZN_340
	call r9_127 + 2 (retsize: 4; depth: 4)
		uses: ap_113,C_319,CVZN_107,CZN_105,fp_112,N_110,r0_121,r1_106,r2_102,r3_101,r4_100,r5_119,r6_120,r7_116,r8_103,r9_99,sp_315,V_124,VZN_318,Z_109,ZN_122
		defs: ap_326,C_324,CVZN_321,CZN_340,fp_338,N_337,r0_335,r1_336,r2_327,r3_328,r4_329,r5_332,r6_333,r7_339,r8_322,r9_331,sp_320,V_325,VZN_334,Z_330,ZN_323
	r1_134 = r0_121
// DataOut: fp r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E353:
	branch (byte) r7 == (byte) SEQ(SLICE(r0_121, word24, 8), (int8) r1_134) l0000E3BF
// DataOut: fp r10 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3BF:
	branch Mem0[r2_102:byte] != 0x00 l0000E3C6
// DataOut: fp r10 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3C6:
	r4_100 = r4_100 - 0x00000001
	r2_102 = r2_102 + 0x00000001
	r3_101 = r3_101 + 0x00000001
	branch r4_100 == 0x00000000 l0000E3D3
// DataOut: fp r10 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3D0:
// DataOut: fp r10 r2 r3 r4 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3C3:
	word32 sp_305 = fp - 0x00000004
	*spOut = sp_305
	word32 fp_306
	*fpOut = Mem0[sp_305 + 0x00000010:word32]
	word32 ap_307
	*apOut = Mem0[sp_305 + 0x0000000C:word32]
	return 0x00000000
// DataOut: ap fp r0 r10 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E35B:
	word32 r1_165
	word32 r5_151 = SEQ(SLICE(r5, word24, 8), Mem0[r2_102:byte])
	word32 r6_152 = (int32) (int8) r5_151
	word32 r0_153 = r6_152 & ~0xFFFFFF80
	branch (Mem0[r8_103 + r0_153 * 4:word32] & 0x00000001) == 0x00000000 l0000E380
// DataOut: fp r0 r10 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E380:
	r1_165 = r6_152
// DataOut: fp r1 r10 r3 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E36E:
	word32 sp_262 = sp_111 - 0x00000004
	Mem264[sp_262:int32] = (int32) (int8) r5_151
	byte CVZN_268
	byte ZN_270
	bool C_271
	bool V_272
	word32 ap_273
	word32 r2_274
	word32 r4_276
	bool Z_277
	word32 r9_278
	word32 r6_280
	byte VZN_281
	word32 r0_282
	word32 r1_283
	bool N_284
	byte CZN_287
	call Mem264[0x00019298:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_142,C_266,CVZN_135,CZN_146,fp_141,N_138,r0_153,r1_134,r2_130,r3_129,r4_128,r5_151,r6_152,r7_125,r8_131,r9_127,sp_262,V_156,VZN_265,Z_147,ZN_154
		defs: ap_273,C_271,CVZN_268,CZN_287,fp_285,N_284,r0_282,r1_283,r2_274,r3_275,r4_276,r5_279,r6_280,r7_286,r8_269,r9_278,sp_267,V_272,VZN_281,Z_277,ZN_270
	r1_165 = r0_282
// DataOut: fp r1 r10 r3 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E383:
	word32 r5_191
	word32 r5_178 = SEQ(SLICE(r5_151, word24, 8), Mem0[r3_101:byte])
	word32 r6_179 = (int32) (int8) r5_178
	*r6Out = r6_179
	word32 r7_175 = SEQ(SLICE(r7, word24, 8), (int8) r1_165)
	word32 r0_180 = r6_179 & ~0xFFFFFF80
	branch (Mem0[r8_103 + r0_180 * 4:word32] & 0x00000001) == 0x00000000 l0000E3A8
// DataOut: fp r0 r1 r10 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3A8:
	r5_191 = r6_179
// DataOut: fp r0 r1 r10 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E399:
	word32 sp_228 = sp_111 - 0x00000004
	Mem230[sp_228:int32] = (int32) (int8) r5_178
	word32 sp_233
	byte CVZN_234
	word32 r8_235
	byte ZN_236
	bool C_237
	bool V_238
	word32 ap_239
	word32 r2_240
	word32 r3_241
	word32 r4_242
	bool Z_243
	word32 r9_244
	word32 r5_245
	word32 r6_246
	byte VZN_247
	bool N_250
	byte CZN_253
	call Mem230[0x00019298:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_172,C_232,CVZN_166,CZN_164,fp_171,N_169,r0_180,r1_165,r2_161,r3_160,r4_159,r5_178,r6_179,r7_175,r8_162,r9_158,sp_228,V_183,VZN_231,Z_168,ZN_181
		defs: ap_239,C_237,CVZN_234,CZN_253,fp_251,N_250,r0_248,r1_249,r2_240,r3_241,r4_242,r5_245,r6_246,r7_252,r8_235,r9_244,sp_233,V_238,VZN_247,Z_243,ZN_236
	r5_191 = r0_180
// DataOut: fp r0 r1 r10 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3AB:
	word32 r1_209
	branch (byte) r7_175 >= (byte) SEQ(SLICE(r0_180, word24, 8), (int8) r5_191) l0000E3B8
// DataOut: fp r1 r10 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3B8:
	r1_209 = SEQ(SLICE(r1_165, word24, 8), 0x01)
// DataOut: fp r1 r10 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3B3:
	r1_209 = SEQ(SLICE(r1_165, word24, 8), -0x01)
// DataOut: fp r1 r10 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E3BB:
	word32 sp_215 = fp - 0x00000004
	*spOut = sp_215
	word32 fp_216
	*fpOut = Mem0[sp_215 + 0x00000010:word32]
	word32 ap_217
	*apOut = Mem0[sp_215 + 0x0000000C:word32]
	return (int32) (int8) r1_209
// DataOut: ap fp r0 r10 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

l0000E302:
// DataOut: fp r10 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid>

l0000E3D3:
	word32 sp_57 = fp - 0x00000004
	*spOut = sp_57
	word32 fp_58
	*fpOut = Mem0[sp_57 + 0x00000010:word32]
	word32 ap_59
	*apOut = Mem0[sp_57 + 0x0000000C:word32]
	return 0x00000000
// DataOut: ap fp r0 r10 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>

fn0000E2EA_exit:
// DataOut: ap fp r0 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r8:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -8(fp):<invalid>



void fn0000F457()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000F457_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000F457_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000F457:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0000F816(word32 r0, word32 r3, word32 r5, word32 r6, word32 r8, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r3 r5 r6 r8
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r9 sp
// Preserved:
fn0000F816_entry:
// DataOut: ap fp r0 r3 r5 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000F816:
	Mem10[r3 + 0x0000C5FF:word64] = 0x0000000000000000
	Mem13[r3 + 0x0000C607:word32] = 0x00000000
	Mem15[r3 + 0x0000C6D9:word32] = 0x00000001
	Mem17[r3 + 0x0000C5EF:word32] = 0x00000000
	branch Mem17[r3 + 68:word32] == 0x00000000 l0000F8AC
// DataOut: ap fp r0 r10 r11 r3 r5 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0000F8AC:
	branch Mem17[r3 + 12:word32] == 0x00000000 l0000F8CB
// DataOut: ap fp r0 r10 r11 r3 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:r5 + 69 r11:r5 + 78 r10:0x00000000 -8(fp):r5 + 87

l0000F8CB:
	branch fn00009B0A(r0, r8, 0x00000000, r5 + 78, ap, fp, out r3, out ap, out fp) == 0x00000000 l0000F8DA
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:r5 + 69 r11:r5 + 78 r10:0x00000000 -8(fp):r5 + 87

l0000F8D6:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r11:r5 + 78 r10:0x00000000 fp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -8(fp):r5 + 87

l0000F8B1:
	Mem193[r3 + 0x0000C6ED:word32] = Mem17[Mem17[0x00019374:word32]:word32]
	branch fn00009B0A(r0, r8, 0x00000000, r5 + 78, ap, fp, out r3, out ap, out fp) == 0x00000000 l0000F8DA
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:r5 + 69 r11:r5 + 78 r10:0x00000000 -8(fp):r5 + 87

l0000F8C7:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r11:r5 + 78 r10:0x00000000 fp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -8(fp):r5 + 87

l0000F85A:
	branch Mem17[r3 + 64:word32] != 0x00000000 l0000F8DA
// DataOut: ap fp r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:r5 + 69 r11:r5 + 78 r10:0x00000000 -8(fp):r5 + 87
// LocalsOut: fp(32)

l0000F85F:
	word32 r2_121
	word32 r3_122
	word32 ap_123
	word32 fp_124
	word32 sp_125
	word32 r0_126 = fn00010892(ap, fp, out r2_121, out r3_122, out ap_123, out fp_124, out sp_125)
	Mem128[sp_125 - 0x00000004:word32] = r0_126
	Mem131[sp_125 - 0x00000008:word32] = r5 + 96
	Mem134[sp_125 - 0x0000000C:word32] = r6 + 387
	Mem137[sp_125 - 0x00000010:word32] = r3_122 + 1515
	word32 sp_141
	byte CVZN_142
	byte ZN_143
	bool C_144
	bool V_145
	word32 r5_146
	word32 r9_147
	word32 r11_148
	word32 r10_149
	bool Z_150
	bool N_151
	word32 r3_152
	word32 r2_153
	word32 r0_154
	word32 r6_155
	word32 ap_156
	word32 fp_157
	word32 r8_158
	call Mem137[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_123,C_139,CVZN,dwLoc08_7,dwLoc0C_104,dwLoc10_107,dwLoc14_110,dwLoc18_114,dwLoc1C_117,fp_124,N,r0_126,r10_8,r11_5,r2_121,r3_122,r5,r6,r8,r9_4,sp_135,V_140,Z_88,ZN_138
		defs: ap_156,C_144,CVZN_142,fp_157,N_151,r0_154,r10_149,r11_148,r2_153,r3_152,r5_146,r6_155,r8_158,r9_147,sp_141,V_145,Z_150,ZN_143
	Mem160[sp_141 - 0x00000004:word32] = r0_154
	Mem163[sp_141 - 0x00000008:word32] = r3_152 + 1515
	Mem165[sp_141 - 0x0000000C:word32] = r3_152
	word32 ap_166 = Mem165[r3_152 + 0x0000C839:word32]
	word32 sp_170
	byte CVZN_171
	byte ZN_172
	bool C_173
	bool V_174
	word32 r5_175
	word32 r9_176
	word32 r11_177
	word32 r10_178
	bool Z_179
	bool N_180
	word32 r2_182
	word32 r0_183
	word32 r6_184
	word32 r8_187
	call ap_166 + 2 (retsize: 4; depth: 4)
		uses: ap_166,C_168,CVZN_142,dwLoc08_7,dwLoc0C_104,dwLoc10_107,dwLoc14_110,dwLoc18_114,dwLoc1C_117,fp_157,N_151,r0_154,r10_149,r11_148,r2_153,r3_152,r5_146,r6_155,r8_158,r9_147,sp_164,V_169,Z_150,ZN_167
		defs: ap_185,C_173,CVZN_171,fp_186,N_180,r0_183,r10_178,r11_177,r2_182,r3_181,r5_175,r6_184,r8_187,r9_176,sp_170,V_174,Z_179,ZN_172
// DataOut: ap fp r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:r5 + 69 r11:r5 + 78 r10:0x00000000 -8(fp):r5 + 87

l0000F8DA:
	fn0000D566(ap, fp)
	word32 r0_64 = (uint32) Mem17[r3 + 0x0000C642:word16]
	branch r0_64 > 0x00000008 l0000F8FC
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r11:r5 + 78 r10:0x00000000 r2:<invalid> ap:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -56(fp):r3 -52(fp):r3 + 1515 -48(fp):r0 -44(fp):r3 + 1515 -40(fp):r6 + 387 -36(fp):r5 + 96 -32(fp):r0 -28(fp):r3 + 0x0000C701 -24(fp):r3 + 0x000045EB -20(fp):r5 + 101 -16(fp):r5 + 102 -12(fp):0x00000000 -8(fp):r5 + 87

l0000F8FC:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r11:r5 + 78 r10:0x00000000 r2:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -56(fp):r3 -52(fp):r3 + 1515 -48(fp):r0 -44(fp):r3 + 1515 -40(fp):r6 + 387 -36(fp):r5 + 96 -32(fp):r0 -28(fp):r3 + 0x0000C701 -24(fp):r3 + 0x000045EB -20(fp):r5 + 101 -16(fp):r5 + 102 -12(fp):0x00000000 -8(fp):r5 + 87

l0000F8E8_1:
	word32 sp_69
	byte CVZN_70
	byte ZN_71
	bool C_72
	bool V_73
	word32 r5_74
	word32 r9_75
	word32 r11_76
	word32 r10_77
	bool Z_78
	bool N_79
	word32 r3_80
	word32 r2_81
	word32 r0_82
	word32 r6_83
	word32 ap_84
	word32 fp_85
	word32 r8_86
	call 0x0000F8EC + r0_64 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_52,C_66,CVZN_62,dwLoc08_7,dwLoc0C_45,dwLoc10_46,dwLoc14_47,dwLoc18_48,dwLoc1C_49,fp_51,N_56,r0_64,r10_58,r11_59,r2_54,r3_55,r5_61,r6_53,r8_50,r9_60,sp_63,V_67,Z_57,ZN_65
		defs: ap_84,C_72,CVZN_70,fp_85,N_79,r0_82,r10_77,r11_76,r2_81,r3_80,r5_74,r6_83,r8_86,r9_75,sp_69,V_73,Z_78,ZN_71
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r11:r5 + 78 r10:0x00000000 r2:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> fp:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -56(fp):r3 -52(fp):r3 + 1515 -48(fp):r0 -44(fp):r3 + 1515 -40(fp):r6 + 387 -36(fp):r5 + 96 -32(fp):r0 -28(fp):r3 + 0x0000C701 -24(fp):r3 + 0x000045EB -20(fp):r5 + 101 -16(fp):r5 + 102 -12(fp):0x00000000 -8(fp):r5 + 87

fn0000F816_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r11:r5 + 78 r10:0x00000000 r2:<invalid> ap:<invalid> r0:<invalid> fp:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r7:<invalid> -56(fp):r3 -52(fp):r3 + 1515 -48(fp):r0 -44(fp):r3 + 1515 -40(fp):r6 + 387 -36(fp):r5 + 96 -32(fp):r0 -28(fp):r3 + 0x0000C701 -24(fp):r3 + 0x000045EB -20(fp):r5 + 101 -16(fp):r5 + 102 -12(fp):0x00000000 -8(fp):r5 + 87



void fn000100C2(word32 r0, word32 r2, word32 r5, word32 r7, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2 r5 r7
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r2 r3 r4 r6 r7 r8 r9 sp
// Preserved:
fn000100C2_entry:
// DataOut: ap fp r0 r2 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000100C2:
	word32 sp_165 = fp - 0x00000008
	branch Mem0[ap + 8:word32] >=u 0x00000004 l000100ED
// DataOut: ap fp r0 r2 r5 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000100ED:
// DataOut: ap fp r0 r2 r5 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:ap + 8

l000100F4:
	word32 sp_167 = sp_165 - 0x00000004
	Mem169[sp_167:word32] = Mem0[ap + 4:word32]
	word32 sp_174
	byte CVZN_175
	byte ZN_176
	bool C_177
	bool V_178
	word32 ap_179
	word32 r9_180
	byte CZN_181
	word32 r11_182
	word32 r0_183
	word32 r8_184
	byte CZ_185
	word32 r2_186
	bool Z_187
	word32 r7_188
	word32 r3_189
	word32 r5_190
	word32 fp_191
	bool N_192
	word32 r1_193
	word32 r4_194
	word32 r6_195
	byte VZN_196
	call r11 + 2 (retsize: 4; depth: 4)
		uses: ap_166,C_171,CVZN,CZ,CZN_6,fp,N,r0,r1,r11,r2,r3,r4,r5,r6,r7,r8,r9_4,sp_167,V_172,VZN,Z,ZN_170
		defs: ap_179,C_177,CVZN_175,CZ_185,CZN_181,fp_191,N_192,r0_183,r1_193,r11_182,r2_186,r3_189,r4_194,r5_190,r6_195,r7_188,r8_184,r9_180,sp_174,V_178,VZN_196,Z_187,ZN_176
	Mem198[sp_174 + 2:word16] = (word16) r0_183
	Mem201[sp_174 - 0x00000004:word32] = Mem198[ap_179 + 4:word32] + 0x00000002
	byte CVZN_204
	byte ZN_205
	bool C_206
	bool V_207
	byte CZN_210
	word32 r11_211
	word32 r0_212
	word32 r8_213
	byte CZ_214
	bool Z_216
	word32 r3_218
	bool N_221
	word32 r1_222
	word32 r4_223
	word32 r6_224
	byte VZN_225
	word32 r5_219
	word32 r9_209
	word32 fp_220
	call r11_182 + 2 (retsize: 4; depth: 4)
		uses: ap_179,C_177,CVZN_202,CZ_185,CZN_181,fp_191,N_192,r0_183,r1_193,r11_182,r2_186,r3_189,r4_194,r5_190,r6_195,r7_188,r8_184,r9_180,sp_199,V_178,VZN_196,Z_187,ZN_176
		defs: ap_208,C_206,CVZN_204,CZ_214,CZN_210,fp_220,N_221,r0_212,r1_222,r11_211,r2_215,r3_218,r4_223,r5_219,r6_224,r7_217,r8_213,r9_209,sp_203,V_207,VZN_225,Z_216,ZN_205
	word32 r8_226 = (uint32) (word16) r0_212
	word32 r0_227 = Mem201[r9_209:word32] - 0x00000004
	byte CZN_228 = cond(r8_226 - r0_227)
	branch r8_226 <=u r0_227 l00010184
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010184:
	word32 r1_406 = (uint32) Mem201[sp_165 + 2:word16]
	branch r1_406 >= 0x00000007 l00010190
// DataOut: ap fp r0 r1 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010190:
	byte CZ_441 = DPB(CZN_228, false, 0)
	branch r1_406 > 0x0000000C l000101A1
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101A1:
	branch CZ_441 l000101A7
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101A7:
	word32 sp_957
	byte CVZN_958
	byte ZN_959
	bool C_960
	bool V_961
	word32 ap_962
	word32 r9_963
	byte CZN_964
	word32 r11_965
	word32 r0_966
	word32 r8_967
	byte CZ_968
	word32 r2_969
	bool Z_970
	word32 r7_971
	word32 r3_972
	word32 r5_973
	word32 fp_974
	bool N_975
	word32 r1_976
	word32 r4_977
	word32 r6_978
	byte VZN_979
	call fn4000E3D8 (retsize: 4; depth: 4)
		uses: ap_208,C_439,CVZN_443,CZ_441,CZN_440,fp_220,N_438,r0_435,r1_406,r11_211,r2_215,r3_218,r4_223,r5_219,r6_224,r7_217,r8_226,r9_209,sp_203,V_442,VZN_444,Z_437,ZN_436
		defs: ap_962,C_960,CVZN_958,CZ_968,CZN_964,fp_974,N_975,r0_966,r1_976,r11_965,r2_969,r3_972,r4_977,r5_973,r6_978,r7_971,r8_967,r9_963,sp_957,V_961,VZN_979,Z_970,ZN_959
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101A3:
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101B0:
	branch r1_406 > 0x00004341 l000101BC
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101BC:
	branch r1_406 >= 0x00004453 l000101C8
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101C8:
	branch r1_406 != 0x00004453 l000101CD
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101CD:
	branch r1_406 >= 0x00004704 l000101D9
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101D9:
	branch r1_406 > 0x0000470F l000101F7
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101F7:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101D9_1:
	word32 sp_934
	byte CVZN_935
	byte ZN_936
	bool C_937
	bool V_938
	word32 ap_939
	word32 r9_940
	byte CZN_941
	word32 r11_942
	word32 r0_943
	word32 r8_944
	byte CZ_945
	word32 r2_946
	bool Z_947
	word32 r7_948
	word32 r3_949
	word32 r5_950
	word32 fp_951
	bool N_952
	word32 r1_953
	word32 r4_954
	word32 r6_955
	byte VZN_956
	call 0x000101E1 + (r1_406 - 0x00004704) * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_208,C_473,CVZN_479,CZ_477,CZN_930,fp_220,N_931,r0_435,r1_406,r11_211,r2_215,r3_218,r4_223,r5_219,r6_224,r7_217,r8_226,r9_209,sp_203,V_932,VZN_480,Z_475,ZN_474
		defs: ap_939,C_937,CVZN_935,CZ_945,CZN_941,fp_951,N_952,r0_943,r1_953,r11_942,r2_946,r3_949,r4_954,r5_950,r6_955,r7_948,r8_944,r9_940,sp_934,V_938,VZN_956,Z_947,ZN_936
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101D6:
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101CA:
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000103A9:
	word32 r4_484
	branch r8_226 >=u 0x00000005 l000103B4
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000103B4:
	word32 r3_890
	word32 r1_884 = Mem201[ap + 4:word32]
	branch (uint32) Mem201[r1_884 + 8:byte] == 0x00000000 l000103C8
// DataOut: ap fp r0 r1 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000103C8:
	Mem908[sp_165 - 0x00000004:word32] = 0x00000000
	Mem910[sp_165 - 0x00000008:word32] = 0x00000005
	Mem912[sp_165 - 0x0000000C:word32] = r8_226
	Mem914[sp_165 - 0x00000010:word32] = r1_884
	r3_890 = fn000105F2(r7, ap, fp_220, out r2, out r7, out r8_226, out r9_209, out ap, out fp_220, out sp_165)
// DataOut: ap fp r0 r2 r3 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000103BE:
	r3_890 = 0x00004001
// DataOut: ap fp r0 r2 r3 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000103D8:
	r4_484 = r3_890
// DataOut: ap fp r0 r2 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000103AE:
	r4_484 = 0x0000004F
// DataOut: ap fp r0 r2 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000103DB:
	word32 r6_495 = r4_484
	branch r4_484 != 0x00000000 l000103E3
// DataOut: ap fp r0 r2 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000103E3:
	branch Mem201[r2 + 64:word32] == 0x00000000 l00010427
// DataOut: ap fp r2 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000103E8:
	word32 sp_794 = sp_165 - 0x00000004
	Mem795[sp_794:word32] = 0x00000001
	Mem799[sp_794 - 0x00000004:word32] = r2 + 0x000045EB
	Mem802[sp_794 - 0x00000008:word32] = r2 + 0x0000C701
	word32 r2_806
	word32 r3_807
	word32 ap_808
	word32 fp_809
	word32 sp_810
	word32 r0_811 = fn00010892(ap, fp_220, out r2_806, out r3_807, out ap_808, out fp_809, out sp_810)
	Mem813[sp_810 - 0x00000004:word32] = r0_811
	Mem816[sp_810 - 0x00000008:word32] = r7 + 215
	Mem819[sp_810 - 0x0000000C:word32] = r2_806 + 1515
	word32 sp_823
	byte CVZN_824
	byte ZN_825
	bool C_826
	bool V_827
	word32 ap_828
	word32 r9_829
	byte CZN_830
	word32 r11_831
	word32 r0_832
	word32 r8_833
	byte CZ_834
	word32 r2_835
	bool Z_836
	word32 r7_837
	word32 r3_838
	word32 r5_839
	word32 fp_840
	bool N_841
	word32 r1_842
	word32 r4_843
	word32 r6_844
	byte VZN_845
	call Mem819[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_808,C_821,CVZN_479,CZ_477,CZN_481,fp_809,N_476,r0_811,r1_485,r11_211,r2_806,r3_807,r4_484,r5_219,r6_495,r7_487,r8_489,r9_490,sp_817,V_822,VZN_480,Z_501,ZN_820
		defs: ap_828,C_826,CVZN_824,CZ_834,CZN_830,fp_840,N_841,r0_832,r1_842,r11_831,r2_835,r3_838,r4_843,r5_839,r6_844,r7_837,r8_833,r9_829,sp_823,V_827,VZN_845,Z_836,ZN_825
	Mem847[sp_823 - 0x00000004:word32] = r0_832
	Mem850[sp_823 - 0x00000008:word32] = r2_835 + 1515
	Mem852[sp_823 - 0x0000000C:word32] = r2_835
	word32 r0_853 = Mem852[r2_835 + 0x0000C839:word32]
	byte CVZN_858
	byte ZN_859
	bool C_860
	bool V_861
	word32 ap_862
	word32 r9_863
	byte CZN_864
	word32 r11_865
	word32 r0_866
	word32 r8_867
	byte CZ_868
	bool Z_870
	word32 r7_871
	word32 r3_872
	word32 fp_874
	bool N_875
	word32 r1_876
	word32 r4_877
	byte VZN_879
	call r0_853 + 2 (retsize: 4; depth: 4)
		uses: ap_828,C_855,CVZN_824,CZ_834,CZN_830,fp_840,N_841,r0_853,r1_842,r11_831,r2_835,r3_838,r4_843,r5_839,r6_844,r7_837,r8_833,r9_829,sp_851,V_856,VZN_845,Z_836,ZN_854
		defs: ap_862,C_860,CVZN_858,CZ_868,CZN_864,fp_874,N_875,r0_866,r1_876,r11_865,r2_869,r3_872,r4_877,r5_873,r6_878,r7_871,r8_867,r9_863,sp_857,V_861,VZN_879,Z_870,ZN_859
// DataOut: fp r2 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010427:
	branch r6_495 >= 0x00000002 l0001042F
// DataOut: fp r2 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l0001042F:
	word32 v48_770 = r6_495 - 0x00000002
	branch v48_770 > 0x00000005 l00010440
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010440:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010432_1:
	word32 sp_771
	byte CVZN_772
	byte ZN_773
	bool C_774
	bool V_775
	word32 ap_776
	word32 r9_777
	byte CZN_778
	word32 r11_779
	word32 r0_780
	word32 r8_781
	byte CZ_782
	word32 r2_783
	bool Z_784
	word32 r7_785
	word32 r3_786
	word32 r5_787
	word32 fp_788
	bool N_789
	word32 r1_790
	word32 r4_791
	word32 r6_792
	byte VZN_793
	call 0x00010436 + v48_770 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_523,C_768,CVZN_517,CZ_512,CZN_524,fp_522,N_525,r0_766,r1_507,r11_514,r2_511,r3_509,r4_506,r5_508,r6_505,r7_510,r8_513,r9_515,sp_521,V_769,VZN_504,Z_519,ZN_767
		defs: ap_776,C_774,CVZN_772,CZ_782,CZN_778,fp_788,N_789,r0_780,r1_790,r11_779,r2_783,r3_786,r4_791,r5_787,r6_792,r7_785,r8_781,r9_777,sp_771,V_775,VZN_793,Z_784,ZN_773
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l0001042C:
// DataOut: fp r2 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010520:
	word32 r0_527 = r6_495 & ~0xFFFFFF00
	branch r0_527 == 0x00000002 l00010554
// DataOut: fp r0 r2 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010554:
	word32 r0_623 = r6_495 >> 8
	word32 r3_624 = (uint32) (word16) r0_623
	branch r3_624 != 0x00000008 l00010588
// DataOut: fp r0 r2 r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010588:
	word32 sp_696 = sp_165 - 0x00000004
	Mem697[sp_696:word32] = 0x00000001
	Mem699[sp_696 - 0x00000004:word32] = r3_624
	Mem702[sp_696 - 0x00000008:word32] = r5_219 + 1655
	Mem705[sp_696 - 0x0000000C:word32] = r2 + 1515
	word32 sp_709
	byte CVZN_710
	byte ZN_711
	bool C_712
	bool V_713
	word32 ap_714
	word32 r9_715
	byte CZN_716
	word32 r11_717
	word32 r0_718
	word32 r8_719
	byte CZ_720
	word32 r2_721
	bool Z_722
	word32 r7_723
	word32 r3_724
	word32 r5_725
	word32 fp_726
	bool N_727
	word32 r1_728
	word32 r4_729
	word32 r6_730
	byte VZN_731
	call Mem705[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_523,C_707,CVZN_517,CZ_512,CZN_625,fp_522,N_525,r0_623,r1_507,r11_514,r2_511,r3_624,r4_506,r5_508,r6_505,r7_510,r8_513,r9_515,sp_703,V_708,VZN_504,Z_626,ZN_706
		defs: ap_714,C_712,CVZN_710,CZ_720,CZN_716,fp_726,N_727,r0_718,r1_728,r11_717,r2_721,r3_724,r4_729,r5_725,r6_730,r7_723,r8_719,r9_715,sp_709,V_713,VZN_731,Z_722,ZN_711
	Mem733[sp_709 - 0x00000004:word32] = r0_718
	Mem736[sp_709 - 0x00000008:word32] = r2_721 + 1515
	Mem738[sp_709 - 0x0000000C:word32] = r2_721
	word32 r0_739 = Mem738[r2_721 + 0x0000C839:word32]
	word32 sp_743
	byte CVZN_744
	byte ZN_745
	bool C_746
	bool V_747
	word32 ap_748
	word32 r9_749
	byte CZN_750
	word32 r11_751
	word32 r0_752
	word32 r8_753
	byte CZ_754
	word32 r2_755
	bool Z_756
	word32 r7_757
	word32 r3_758
	word32 r5_759
	word32 fp_760
	bool N_761
	word32 r1_762
	word32 r4_763
	word32 r6_764
	byte VZN_765
	call r0_739 + 2 (retsize: 4; depth: 4)
		uses: ap_714,C_741,CVZN_710,CZ_720,CZN_716,fp_726,N_727,r0_739,r1_728,r11_717,r2_721,r3_724,r4_729,r5_725,r6_730,r7_723,r8_719,r9_715,sp_737,V_742,VZN_731,Z_722,ZN_740
		defs: ap_748,C_746,CVZN_744,CZ_754,CZN_750,fp_760,N_761,r0_752,r1_762,r11_751,r2_755,r3_758,r4_763,r5_759,r6_764,r7_757,r8_753,r9_749,sp_743,V_747,VZN_765,Z_756,ZN_745
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010561:
	word32 sp_628 = sp_165 - 0x00000004
	Mem629[sp_628:word32] = 0x00000001
	Mem632[sp_628 - 0x00000004:word32] = r5_219 + 1621
	Mem635[sp_628 - 0x00000008:word32] = r2 + 1515
	word32 sp_639
	byte CVZN_640
	byte ZN_641
	bool C_642
	bool V_643
	word32 ap_644
	word32 r9_645
	byte CZN_646
	word32 r11_647
	word32 r0_648
	word32 r8_649
	byte CZ_650
	word32 r2_651
	bool Z_652
	word32 r7_653
	word32 r3_654
	word32 r5_655
	word32 fp_656
	bool N_657
	word32 r1_658
	word32 r4_659
	word32 r6_660
	byte VZN_661
	call Mem635[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_523,C_637,CVZN_517,CZ_512,CZN_625,fp_522,N_525,r0_623,r1_507,r11_514,r2_511,r3_624,r4_506,r5_508,r6_505,r7_510,r8_513,r9_515,sp_633,V_638,VZN_504,Z_626,ZN_636
		defs: ap_644,C_642,CVZN_640,CZ_650,CZN_646,fp_656,N_657,r0_648,r1_658,r11_647,r2_651,r3_654,r4_659,r5_655,r6_660,r7_653,r8_649,r9_645,sp_639,V_643,VZN_661,Z_652,ZN_641
	Mem663[sp_639 - 0x00000004:word32] = r0_648
	Mem666[sp_639 - 0x00000008:word32] = r2_651 + 1515
	Mem668[sp_639 - 0x0000000C:word32] = r2_651
	word32 r0_669 = Mem668[r2_651 + 0x0000C839:word32]
	word32 sp_673
	byte CVZN_674
	byte ZN_675
	bool C_676
	bool V_677
	word32 ap_678
	word32 r9_679
	byte CZN_680
	word32 r11_681
	word32 r0_682
	word32 r8_683
	byte CZ_684
	word32 r2_685
	bool Z_686
	word32 r7_687
	word32 r3_688
	word32 r5_689
	word32 fp_690
	bool N_691
	word32 r1_692
	word32 r4_693
	word32 r6_694
	byte VZN_695
	call r0_669 + 2 (retsize: 4; depth: 4)
		uses: ap_644,C_671,CVZN_640,CZ_650,CZN_646,fp_656,N_657,r0_669,r1_658,r11_647,r2_651,r3_654,r4_659,r5_655,r6_660,r7_653,r8_649,r9_645,sp_667,V_672,VZN_661,Z_652,ZN_670
		defs: ap_678,C_676,CVZN_674,CZ_684,CZN_680,fp_690,N_691,r0_682,r1_692,r11_681,r2_685,r3_688,r4_693,r5_689,r6_694,r7_687,r8_683,r9_679,sp_673,V_677,VZN_695,Z_686,ZN_675
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l0001052D:
	word32 sp_555 = sp_165 - 0x00000004
	Mem556[sp_555:word32] = 0x00000001
	Mem559[sp_555 - 0x00000004:word32] = r5_219 + 1733
	Mem562[sp_555 - 0x00000008:word32] = r2 + 1515
	word32 sp_566
	byte CVZN_567
	byte ZN_568
	bool C_569
	bool V_570
	word32 ap_571
	word32 r9_572
	byte CZN_573
	word32 r11_574
	word32 r0_575
	word32 r8_576
	byte CZ_577
	word32 r2_578
	bool Z_579
	word32 r7_580
	word32 r3_581
	word32 r5_582
	word32 fp_583
	bool N_584
	word32 r1_585
	word32 r4_586
	word32 r6_587
	byte VZN_588
	call Mem562[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_523,C_564,CVZN_517,CZ_512,CZN_528,fp_522,N_525,r0_527,r1_507,r11_514,r2_511,r3_509,r4_506,r5_508,r6_505,r7_510,r8_513,r9_515,sp_560,V_565,VZN_504,Z_529,ZN_563
		defs: ap_571,C_569,CVZN_567,CZ_577,CZN_573,fp_583,N_584,r0_575,r1_585,r11_574,r2_578,r3_581,r4_586,r5_582,r6_587,r7_580,r8_576,r9_572,sp_566,V_570,VZN_588,Z_579,ZN_568
	Mem590[sp_566 - 0x00000004:word32] = r0_575
	Mem593[sp_566 - 0x00000008:word32] = r2_578 + 1515
	Mem595[sp_566 - 0x0000000C:word32] = r2_578
	word32 r0_596 = Mem595[r2_578 + 0x0000C839:word32]
	word32 sp_600
	byte CVZN_601
	byte ZN_602
	bool C_603
	bool V_604
	word32 ap_605
	word32 r9_606
	byte CZN_607
	word32 r11_608
	word32 r0_609
	word32 r8_610
	byte CZ_611
	word32 r2_612
	bool Z_613
	word32 r7_614
	word32 r3_615
	word32 r5_616
	word32 fp_617
	bool N_618
	word32 r1_619
	word32 r4_620
	word32 r6_621
	byte VZN_622
	call r0_596 + 2 (retsize: 4; depth: 4)
		uses: ap_571,C_598,CVZN_567,CZ_577,CZN_573,fp_583,N_584,r0_596,r1_585,r11_574,r2_578,r3_581,r4_586,r5_582,r6_587,r7_580,r8_576,r9_572,sp_594,V_599,VZN_588,Z_579,ZN_597
		defs: ap_605,C_603,CVZN_601,CZ_611,CZN_607,fp_617,N_618,r0_609,r1_619,r11_608,r2_612,r3_615,r4_620,r5_616,r6_621,r7_614,r8_610,r9_606,sp_600,V_604,VZN_622,Z_613,ZN_602
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000105AD:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000103E0:
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101C5:
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000101B9:
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010193_1:
	word32 sp_446
	byte CVZN_447
	byte ZN_448
	bool C_449
	bool V_450
	word32 ap_451
	word32 r9_452
	byte CZN_453
	word32 r11_454
	word32 r0_455
	word32 r8_456
	byte CZ_457
	word32 r2_458
	bool Z_459
	word32 r7_460
	word32 r3_461
	word32 r5_462
	word32 fp_463
	bool N_464
	word32 r1_465
	word32 r4_466
	word32 r6_467
	byte VZN_468
	call 0x00010197 + (r1_406 - 0x00000007) * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_208,C_439,CVZN_443,CZ_441,CZN_440,fp_220,N_438,r0_435,r1_406,r11_211,r2_215,r3_218,r4_223,r5_219,r6_224,r7_217,r8_226,r9_209,sp_203,V_442,VZN_444,Z_437,ZN_436
		defs: ap_451,C_449,CVZN_447,CZ_457,CZN_453,fp_463,N_464,r0_455,r1_465,r11_454,r2_458,r3_461,r4_466,r5_462,r6_467,r7_460,r8_456,r9_452,sp_446,V_450,VZN_468,Z_459,ZN_448
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l0001018D:
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000105B1:
	word32 r1_427 = r8_226 + 0x00000004
	Mem429[r9_209:word32] = Mem201[r9_209:word32] - r1_427
	Mem431[ap + 4:word32] = Mem429[ap + 4:word32] + r1_427
	branch Mem431[r9_209:word32] <u 0x00000004 l000105C4
// DataOut: ap fp r0 r2 r5 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000105C1:
// DataOut: ap fp r0 r2 r5 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010112:
	branch Mem201[r2 + 64:word32] == 0x00000000 l00010156
// DataOut: ap fp r0 r2 r5 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010117:
	Mem321[sp_165 - 0x00000004:word32] = 0x00000001
	Mem325[sp_165 - 0x00000008:word32] = r2 + 0x000045EB
	Mem328[sp_165 - 0x0000000C:word32] = r2 + 0x0000C701
	word32 r2_332
	word32 r3_333
	word32 ap_334
	word32 fp_335
	word32 sp_336
	word32 r0_337 = fn00010892(ap, fp_220, out r2_332, out r3_333, out ap_334, out fp_335, out sp_336)
	Mem339[sp_336 - 0x00000004:word32] = r0_337
	Mem342[sp_336 - 0x00000008:word32] = r7 + 199
	Mem345[sp_336 - 0x0000000C:word32] = r2_332 + 1515
	word32 sp_349
	byte CVZN_350
	byte ZN_351
	bool C_352
	bool V_353
	word32 ap_354
	word32 r9_355
	byte CZN_356
	word32 r11_357
	word32 r0_358
	word32 r8_359
	byte CZ_360
	word32 r2_361
	bool Z_362
	word32 r7_363
	word32 r3_364
	word32 r5_365
	word32 fp_366
	bool N_367
	word32 r1_368
	word32 r4_369
	word32 r6_370
	byte VZN_371
	call Mem345[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_334,C_347,CVZN_204,CZ_229,CZN_228,fp_335,N_221,r0_337,r1_222,r11_211,r2_332,r3_333,r4_223,r5_219,r6_224,r7_217,r8_226,r9_209,sp_343,V_348,VZN_225,Z_232,ZN_346
		defs: ap_354,C_352,CVZN_350,CZ_360,CZN_356,fp_366,N_367,r0_358,r1_368,r11_357,r2_361,r3_364,r4_369,r5_365,r6_370,r7_363,r8_359,r9_355,sp_349,V_353,VZN_371,Z_362,ZN_351
	Mem373[sp_349 - 0x00000004:word32] = r0_358
	Mem376[sp_349 - 0x00000008:word32] = r2_361 + 1515
	Mem378[sp_349 - 0x0000000C:word32] = r2_361
	word32 r0_379 = Mem378[r2_361 + 0x0000C839:word32]
	byte CVZN_384
	byte ZN_385
	bool C_386
	bool V_387
	word32 r9_389
	byte CZN_390
	word32 r11_391
	word32 r0_392
	byte CZ_394
	bool Z_396
	word32 r7_397
	word32 r3_398
	word32 fp_400
	bool N_401
	word32 r1_402
	word32 r4_403
	word32 r6_404
	byte VZN_405
	call r0_379 + 2 (retsize: 4; depth: 4)
		uses: ap_354,C_381,CVZN_350,CZ_360,CZN_356,fp_366,N_367,r0_379,r1_368,r11_357,r2_361,r3_364,r4_369,r5_365,r6_370,r7_363,r8_359,r9_355,sp_377,V_382,VZN_371,Z_362,ZN_380
		defs: ap_388,C_386,CVZN_384,CZ_394,CZN_390,fp_400,N_401,r0_392,r1_402,r11_391,r2_395,r3_398,r4_403,r5_399,r6_404,r7_397,r8_393,r9_389,sp_383,V_387,VZN_405,Z_396,ZN_385
// DataOut: ap fp r0 r2 r5 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l00010156:
	word32 sp_240 = sp_165 - 0x00000004
	Mem241[sp_240:word32] = 0x00000001
	Mem244[sp_240 - 0x00000004:word32] = Mem241[ap + 8:word32] - 0x00000004
	Mem246[sp_240 - 0x00000008:word32] = r8_226
	Mem249[sp_240 - 0x0000000C:word32] = r5_219 + 1459
	Mem252[sp_240 - 0x00000010:word32] = r2 + 1515
	word32 sp_256
	byte CVZN_257
	byte ZN_258
	bool C_259
	bool V_260
	word32 ap_261
	word32 r9_262
	byte CZN_263
	word32 r11_264
	word32 r0_265
	word32 r8_266
	byte CZ_267
	word32 r2_268
	bool Z_269
	word32 r7_270
	word32 r3_271
	word32 r5_272
	word32 fp_273
	bool N_274
	word32 r1_275
	word32 r4_276
	word32 r6_277
	byte VZN_278
	call Mem252[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_239,C_254,CVZN_204,CZ_229,CZN_228,fp_220,N_221,r0_227,r1_222,r11_211,r2_236,r3_218,r4_223,r5_235,r6_224,r7_217,r8_237,r9_209,sp_250,V_255,VZN_225,Z_232,ZN_253
		defs: ap_261,C_259,CVZN_257,CZ_267,CZN_263,fp_273,N_274,r0_265,r1_275,r11_264,r2_268,r3_271,r4_276,r5_272,r6_277,r7_270,r8_266,r9_262,sp_256,V_260,VZN_278,Z_269,ZN_258
	Mem280[sp_256 - 0x00000004:word32] = r0_265
	Mem283[sp_256 - 0x00000008:word32] = r2_268 + 1515
	Mem285[sp_256 - 0x0000000C:word32] = r2_268
	word32 r0_286 = Mem285[r2_268 + 0x0000C839:word32]
	word32 sp_290
	byte CVZN_291
	byte ZN_292
	bool C_293
	bool V_294
	word32 ap_295
	word32 r9_296
	byte CZN_297
	word32 r11_298
	word32 r0_299
	word32 r8_300
	byte CZ_301
	word32 r2_302
	bool Z_303
	word32 r7_304
	word32 r3_305
	word32 r5_306
	word32 fp_307
	bool N_308
	word32 r1_309
	word32 r4_310
	word32 r6_311
	byte VZN_312
	call r0_286 + 2 (retsize: 4; depth: 4)
		uses: ap_261,C_288,CVZN_257,CZ_267,CZN_263,fp_273,N_274,r0_286,r1_275,r11_264,r2_268,r3_271,r4_276,r5_272,r6_277,r7_270,r8_266,r9_262,sp_284,V_289,VZN_278,Z_269,ZN_287
		defs: ap_295,C_293,CVZN_291,CZ_301,CZN_297,fp_307,N_308,r0_299,r1_309,r11_298,r2_302,r3_305,r4_310,r5_306,r6_311,r7_304,r8_300,r9_296,sp_290,V_294,VZN_312,Z_303,ZN_292
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000100EA:
// DataOut: fp r0 r2 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r9:ap + 8

l000105C4:
	branch Mem0[r2 + 64:word32] != 0x00000000 l000105EC
// DataOut: fp r0 r2 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000105C9:
	word32 sp_79 = sp_165 - 0x00000004
	Mem80[sp_79:word32] = 0x00000000
	Mem83[sp_79 - 0x00000004:word32] = r7 + 224
	Mem86[sp_79 - 0x00000008:word32] = r2 + 1515
	word32 sp_90
	byte CVZN_91
	byte ZN_92
	bool C_93
	bool V_94
	word32 ap_95
	word32 r9_96
	byte CZN_97
	word32 r11_98
	word32 r0_99
	word32 r8_100
	byte CZ_101
	word32 r2_102
	bool Z_103
	word32 r7_104
	word32 r3_105
	word32 r5_106
	word32 fp_107
	bool N_108
	word32 r1_109
	word32 r4_110
	word32 r6_111
	byte VZN_112
	call Mem86[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_50,C_88,CVZN_45,CZ_40,CZN_43,fp_49,N_47,r0_46,r1_35,r11_42,r2_39,r3_37,r4_34,r5_36,r6_33,r7_38,r8_41,r9_44,sp_84,V_89,VZN_32,Z_52,ZN_87
		defs: ap_95,C_93,CVZN_91,CZ_101,CZN_97,fp_107,N_108,r0_99,r1_109,r11_98,r2_102,r3_105,r4_110,r5_106,r6_111,r7_104,r8_100,r9_96,sp_90,V_94,VZN_112,Z_103,ZN_92
	Mem114[sp_90 - 0x00000004:word32] = r0_99
	Mem117[sp_90 - 0x00000008:word32] = r2_102 + 1515
	Mem119[sp_90 - 0x0000000C:word32] = r2_102
	word32 r3_120 = Mem119[r2_102 + 0x0000C839:word32]
	word32 sp_124
	byte CVZN_125
	byte ZN_126
	bool C_127
	bool V_128
	word32 ap_129
	word32 r9_130
	byte CZN_131
	word32 r11_132
	word32 r0_133
	word32 r8_134
	byte CZ_135
	word32 r2_136
	bool Z_137
	word32 r7_138
	word32 r3_139
	word32 r5_140
	word32 fp_141
	bool N_142
	word32 r1_143
	word32 r4_144
	word32 r6_145
	byte VZN_146
	call r3_120 + 2 (retsize: 4; depth: 4)
		uses: ap_95,C_122,CVZN_91,CZ_101,CZN_97,fp_107,N_108,r0_99,r1_109,r11_98,r2_102,r3_120,r4_110,r5_106,r6_111,r7_104,r8_100,r9_96,sp_118,V_123,VZN_112,Z_103,ZN_121
		defs: ap_129,C_127,CVZN_125,CZ_135,CZN_131,fp_141,N_142,r0_133,r1_143,r11_132,r2_136,r3_139,r4_144,r5_140,r6_145,r7_138,r8_134,r9_130,sp_124,V_128,VZN_146,Z_137,ZN_126
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000005 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

l000105EC:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0

fn000100C2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r9:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r2:<invalid> r1:<invalid> r4:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -10(fp):(word16) r0



word32 fn000105F2(word32 r7, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r7
// LiveOut: ap fp r0 r2 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r10 r2 r3 r4 r6 r7 r8 r9 sp
// Preserved:
fn000105F2_entry:
	*r2Out = r2
	*r9Out = r9
	*r8Out = r8
	*r7Out = r7
// DataOut: ap fp r2 r5 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000105F2:
	branch Mem0[ap + 8:word32] <u 0x00000004 l00010617
// DataOut: ap fp r2 r5 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000105FB:
	word32 r1_66
	word32 r2_67
	word32 ap_68
	word32 sp_70
	word32 r0_71 = fn0000E276(ap, fp, out r1_66, out r2_67, out ap_68, out fp, out sp_70)
	branch r0_71 == 0x00000000 l0001061C
// DataOut: ap fp r0 r2 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0001060C:
	branch Mem0[ap_68 + 8:word32] >u Mem0[ap_68 + 12:word32] + 0x00000006 l0001061C
// DataOut: ap fp r0 r2 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> -8(fp):<invalid>

l0001061C:
	Mem78[sp_70 - 0x00000004:word32] = r0_71
	word32 sp_82
	byte CVZN_83
	word32 ap_84
	byte CZN_85
	bool V_86
	bool C_87
	word32 r0_88
	word32 r4_89
	byte ZN_90
	bool Z_91
	byte CZ_92
	word32 fp_93
	word32 r3_94
	word32 r2_95
	word32 r7_96
	word32 r8_97
	word32 r9_98
	word32 r1_99
	call Mem78[0x000192B4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_68,C_80,CVZN_65,CZ,CZN_5,dwLoc08_64,fp_69,r0_71,r1_66,r2_67,r3,r4_72,r7,r8,r9,sp_77,V_81,Z_74,ZN_79
		defs: ap_84,C_87,CVZN_83,CZ_92,CZN_85,fp_93,r0_88,r1_99,r2_95,r3_94,r4_89,r7_96,r8_97,r9_98,sp_82,V_86,Z_91,ZN_90
	branch r0_88 != 0x00000000 l0001062E
// DataOut: ap fp r2 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> -8(fp):<invalid>

l0001062E:
	Mem114[sp_82 - 0x00000004:word32] = Mem78[ap_84 + 8:word32] - Mem78[ap_84 + 12:word32]
	Mem118[sp_82 - 0x00000008:word32] = Mem114[ap_84 + 12:word32] + 0x00000004 + Mem114[ap_84 + 4:word32]
	Mem120[sp_82 - 0x0000000C:word32] = r4_89
	Mem122[sp_82 - 0x00000010:word32] = r0_88
	word32 r4_127
	word32 r7_128
	word32 r8_129
	word32 r9_130
	word32 ap_131
	word32 fp_132
	word32 r3_126
	word32 sp_133
	word32 r0_134 = fn00010676(r2_95, r4_89, r7_96, ap_84, fp_93, out r3_126, out r4_127, out r7_128, out r8_129, out r9_130, out ap_131, out fp_132, out sp_133)
	branch r0_134 != 0x00000000 l00010664
// DataOut: ap fp r2 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> -8(fp):<invalid>

l0001064E:
	word32 r0_172 = Mem122[ap_131 + 16:word32]
	branch r0_172 == 0x00000000 l00010664
// DataOut: ap fp r0 r2 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r8:<invalid> r9:<invalid> r6:0x00000000 r7:<invalid> r10:<invalid> -8(fp):<invalid>

l00010654:
	Mem178[sp_133 - 0x00000004:word32] = r4_127
	Mem180[sp_133 - 0x00000008:word32] = r3_126
	Mem183[sp_133 - 0x0000000C:word32] = Mem180[ap_131 + 8:word32]
	Mem186[sp_133 - 0x00000010:word32] = Mem183[ap_131 + 4:word32]
	byte CVZN_191
	word32 ap_192
	byte CZN_193
	bool V_194
	bool C_195
	word32 r0_196
	word32 r4_197
	byte ZN_198
	bool Z_199
	byte CZ_200
	word32 fp_201
	word32 r2_203
	word32 r7_204
	word32 r8_205
	word32 r9_206
	word32 r1_207
	call r0_172 + 2 (retsize: 4; depth: 4)
		uses: ap_131,C_188,CVZN_83,CZ_92,CZN_85,dwLoc08_64,fp_132,r0_172,r1_99,r2_135,r3_126,r4_127,r7_128,r8_129,r9_130,sp_184,V_189,Z_174,ZN_187
		defs: ap_192,C_195,CVZN_191,CZ_200,CZN_193,fp_201,r0_196,r1_207,r2_203,r3_202,r4_197,r7_204,r8_205,r9_206,sp_190,V_194,Z_199,ZN_198
// DataOut: fp r2 r3 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r8:<invalid> r9:<invalid> r6:0x00000000 r7:<invalid> r10:<invalid> -8(fp):<invalid>

l00010664:
	word32 sp_142 = sp_133 - 0x00000004
	Mem143[sp_142:word32] = r3_126
	word32 sp_147
	byte CVZN_148
	word32 ap_149
	byte CZN_150
	bool V_151
	bool C_152
	word32 r0_153
	word32 r4_154
	byte ZN_155
	bool Z_156
	byte CZ_157
	word32 fp_158
	word32 r3_159
	word32 r2_160
	word32 r7_161
	word32 r8_162
	word32 r9_163
	word32 r1_164
	call Mem143[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_131,C_145,CVZN_83,CZ_92,CZN_85,dwLoc08_64,fp_132,r0_134,r1_99,r2_135,r3_140,r4_127,r7_128,r8_129,r9_130,sp_142,V_146,Z_137,ZN_144
		defs: ap_149,C_152,CVZN_148,CZ_157,CZN_150,fp_158,r0_153,r1_164,r2_160,r3_159,r4_154,r7_161,r8_162,r9_163,sp_147,V_151,Z_156,ZN_155
	word32 sp_169
	*spOut = fp_158 - 0x00000004
	word32 fp_170
	*fpOut = Mem143[fp_158 + 0x0000000C:word32]
	word32 ap_171
	*apOut = Mem143[fp_158 + 0x00000008:word32]
	return r2_160
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r8:<invalid> r9:<invalid> r6:0x00000000 r7:<invalid> r10:<invalid> -8(fp):<invalid>

l0001062A:
	word32 sp_109
	*spOut = fp_93 - 0x00000004
	word32 fp_110
	*fpOut = Mem78[fp_93 + 0x0000000C:word32]
	word32 ap_111
	*apOut = Mem78[fp_93 + 0x00000008:word32]
	return 0x00000007
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> -8(fp):<invalid>

l00010617:
	word32 sp_55 = fp - 0x00000004
	*spOut = sp_55
	word32 fp_56
	*fpOut = Mem0[sp_55 + 0x00000010:word32]
	word32 ap_57
	*apOut = Mem0[sp_55 + 0x0000000C:word32]
	return 0x0000004F
// DataOut: ap fp r0 r2 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> -8(fp):<invalid>

fn000105F2_exit:
// DataOut: ap fp r0 r2 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r8:<invalid> r9:<invalid> r6:0x00000000 r7:<invalid> r10:<invalid> -8(fp):<invalid>



word32 fn00010676(word32 r2, word32 r4, word32 r7, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r2 r4 r7
// LiveOut: ap fp r0 r3 r4 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r10 r2 r3 r4 r6 r7 r8 r9 sp
// Preserved:
fn00010676_entry:
// DataOut: ap fp r2 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00010676:
	word32 r3_9 = Mem0[ap + 12:word32]
	word32 ap_16
	word32 fp_17
	word32 sp_18
	word32 r7_23 = SEQ(SLICE(r7, word16, 16), (word16) fn0000E25A(ap, fp, out ap_16, out fp_17, out sp_18))
	Mem26[sp_18 - 0x00000004:word32] = r3_9 + 0x00000002
	word32 r1_28
	word32 r2_29
	word32 ap_30
	word32 fp_31
	word32 sp_32
	fn0000E276(ap_16, fp_17, out r1_28, out r2_29, out ap_30, out fp_31, out sp_32)
	Mem36[r2_29 + 0x0000C5F7:word32] = r3_9 + 0x00000006
	Mem38[r2_29 + 132:word32] = Mem36[ap_30 + 16:word32] - 0x00000006
	Mem40[r2_29 + 0x0000C5FB:word32] = Mem38[r2_29 + 132:word32]
	Mem42[r2_29 + 0x0000C6C5:word32] = 0x00000001
	Mem44[r2_29 + 0x0000C6C9:word32] = Mem42[ap_30 + 4:word32]
	Mem46[r2_29 + 0x0000C6CD:word32] = Mem44[ap_30 + 8:word32]
	word32 r0_47 = (uint32) (word16) r7_23
	branch r0_47 > 0x00000008 l000106FB
// DataOut: ap fp r0 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000106FB:
	Mem102[Mem102[r4:word32]:real32] = 0.5F + 36.0F
	__halt()
	word32 sp_107
	byte CVZN_108
	byte ZN_109
	bool C_110
	bool V_111
	word32 r2_112
	word32 r8_113
	word32 r9_114
	word32 r6_115
	bool Z_116
	bool N_117
	word32 ap_118
	word32 r3_119
	word32 r0_120
	word32 r7_121
	word32 r10_122
	word32 r4_123
	word32 fp_124
	word32 r1_125
	call fn4000E3D8 (retsize: 4; depth: 4)
		uses: ap_30,C_105,CVZN_27,dwLoc08_11,fp_31,N,r0_47,r1_28,r10_34,r2_29,r3_9,r4_103,r6_7,r7_23,r8_5,r9_6,sp_32,V_106,Z,ZN_104
		defs: ap_118,C_110,CVZN_108,fp_124,N_117,r0_120,r1_125,r10_122,r2_112,r3_119,r4_123,r6_115,r7_121,r8_113,r9_114,sp_107,V_111,Z_116,ZN_109
	return r0_120
// DataOut: ap fp r0 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r6:0x00000000 r3:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l000106E7_1:
	word32 sp_82
	byte CVZN_83
	byte ZN_84
	bool C_85
	bool V_86
	word32 r2_87
	word32 r8_88
	word32 r9_89
	word32 r6_90
	bool Z_91
	bool N_92
	word32 ap_93
	word32 r3_94
	word32 r0_95
	word32 r7_96
	word32 r10_97
	word32 r4_98
	word32 fp_99
	word32 r1_100
	call 0x000106EB + r0_47 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_30,C_49,CVZN_27,dwLoc08_11,fp_31,N,r0_47,r1_28,r10_34,r2_29,r3_9,r4,r6_7,r7_23,r8_5,r9_6,sp_32,V_50,Z,ZN_48
		defs: ap_93,C_85,CVZN_83,fp_99,N_92,r0_95,r1_100,r10_97,r2_87,r3_94,r4_98,r6_90,r7_96,r8_88,r9_89,sp_82,V_86,Z_91,ZN_84
	return r0_95
// DataOut: ap fp r0 r3 r4 r5 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r6:0x00000000 r3:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -12(fp):<invalid> -8(fp):<invalid>

fn00010676_exit:
// DataOut: ap fp r0 r3 r4 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r6:0x00000000 r3:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r4:r4 + 0x00000004 r2:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -12(fp):<invalid> -8(fp):<invalid>



word32 fn0001084A(word32 r2, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r2
// LiveOut: fp
// Trashed: CVZN ap fp r0 r3 sp
// Preserved:
fn0001084A_entry:
// DataOut: ap fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0001084A:
	branch Mem0[ap + 8:word32] <=u Mem0[r2 + 0x0000C6CD:word32] l00010862
// DataOut: ap fp r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00010862:
	word32 sp_54
	byte CVZN_55
	byte ZN_56
	bool C_57
	bool V_58
	word32 ap_59
	word32 r2_60
	byte CZN_61
	byte CZ_62
	word32 r0_63
	word32 fp_64
	word32 r3_65
	bool Z_66
	bool N_67
	call Mem0[0x0001929C:word32] + 2 (retsize: 4; depth: 20)
		uses: ap,C_51,CVZN,CZ_7,CZN_6,dwLoc08_43,dwLoc0C_46,dwLoc10_49,fp,N,r0,r2,r3_41,sp_47,V_52,Z,ZN_50
		defs: ap_59,C_57,CVZN_55,CZ_62,CZN_61,fp_64,N_67,r0_63,r2_60,r3_65,sp_54,V_58,Z_66,ZN_56
	Mem69[r2_60 + 0x0000C6C9:word32] = Mem0[r2_60 + 0x0000C6C9:word32] + r3_65
	Mem71[r2_60 + 0x0000C6CD:word32] = Mem69[r2_60 + 0x0000C6CD:word32] - r3_65
	Mem73[r2_60 + 0x0000C6FD:word32] = Mem71[r2_60 + 0x0000C6FD:word32] + r3_65
	return Mem73[fp_64 + 0x0000000C:word32]
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0001085E:
	return Mem0[fp + 0x0000000C:word32]
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

fn0001084A_exit:
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



word32 fn00010892(word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp r0 r2 r3 sp
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn00010892_entry:
// DataOut: ap fp r10 r11 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00010892:
	word32 r3_37 = Mem0[ap + 4:word32]
	*r3Out = r3_37
	word32 r2_15 = Mem0[ap + 8:word32]
	*r2Out = r2_15
	branch Mem0[r3_37:byte] == 0x00 l000108C7
// DataOut: ap fp r10 r11 r2 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l000108A1:
// DataOut: ap fp r10 r11 r2 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid>

l000108A4:
	branch (uint32) Mem0[r3_37:byte] >=u 0x00000020 l000108C0
// DataOut: ap fp r10 r11 r2 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid> r0:<invalid>

l000108C0:
	Mem69[r2_15:byte] = Mem0[r3_37:byte]
	*r3Out = r3_37 + 0x00000001
	*r2Out = r2_15 + 0x00000001
// DataOut: ap fp r10 r11 r2 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid> r0:<invalid>

l000108AC:
	Mem55[r2_15:byte] = 0x5E
	word32 r2_56 = r2_15 + 0x00000001
	Mem62[r2_56:int8] = (int8) ((uint32) Mem55[r3_37:byte] + 0x00000040)
	*r3Out = r3_37 + 0x00000001
	*r2Out = r2_56 + 0x00000001
// DataOut: ap fp r10 r11 r2 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid> r0:<invalid>

l000108C3:
	branch Mem0[r3_37:byte] != 0x00 l000108A4
// DataOut: ap fp r10 r11 r2 r3 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid> r0:<invalid>

l000108C7:
	Mem19[r2_15:byte] = 0x00
	word32 sp_25
	*spOut = fp - 0x00000004
	word32 fp_26
	*fpOut = Mem19[fp + 0x0000000C:word32]
	word32 ap_27
	*apOut = Mem19[fp + 0x00000008:word32]
	return Mem19[ap + 8:word32]
// DataOut: ap fp r0 r10 r11 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid> r0:<invalid>

fn00010892_exit:
// DataOut: ap fp r0 r2 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid>



void fn000108D2(word32 r0, word32 r1, word32 r2, word32 r5, word32 r10, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp pc r0 r1 r10 r2 r5
// LiveOut:
// Trashed: CVZN ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000108D2_entry:
// DataOut: fp pc r0 r1 r10 r2 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000108D2:
	word32 sp_14
	byte CVZN_15
	byte ZN_16
	bool C_17
	bool V_18
	word32 r11_19
	bool Z_20
	bool N_21
	word32 r3_22
	word32 r0_23
	word32 r2_24
	word32 r10_25
	word32 ap_26
	word32 fp_27
	word32 r5_28
	word32 r4_29
	word32 r6_30
	word32 r7_31
	word32 r8_32
	word32 r9_33
	byte CZN_34
	word32 r1_35
	word32 pc_36
	call Mem0[0x000192B4:word32] + 2 (retsize: 4; depth: 16)
		uses: C_11,dwLoc08_6,dwLoc0C_9,r11_3,r3_4,sp_7,V_12,ZN_10
		defs: ap_26,C_17,CVZN_15,CZN_34,fp_27,N_21,pc_36,r0_23,r1_35,r10_25,r11_19,r2_24,r3_22,r4_29,r5_28,r6_30,r7_31,r8_32,r9_33,sp_14,V_18,Z_20,ZN_16
	Mem38[r2_24 + 0x0000C5F3:word32] = r0_23
	word32 sp_45
	byte CVZN_46
	byte ZN_47
	bool C_48
	bool V_49
	word32 r11_50
	bool Z_51
	bool N_52
	word32 r3_53
	word32 r0_54
	word32 r2_55
	word32 r10_56
	word32 ap_57
	word32 fp_58
	word32 r5_59
	word32 r4_60
	word32 r6_61
	word32 r7_62
	word32 r8_63
	word32 r9_64
	byte CZN_65
	word32 r1_66
	word32 pc_67
	call Mem38[0x000192B4:word32] + 2 (retsize: 4; depth: 20)
		uses: ap_26,C_43,CVZN_15,CZN_34,dwLoc08_6,dwLoc0C_9,dwLoc10_41,fp_27,N_21,pc_36,r0_23,r1_35,r10_25,r11_19,r2_24,r3_22,r4_29,r5_28,r6_30,r7_31,r8_32,r9_33,sp_39,V_44,Z_20,ZN_42
		defs: ap_57,C_48,CVZN_46,CZN_65,fp_58,N_52,pc_67,r0_54,r1_66,r10_56,r11_50,r2_55,r3_53,r4_60,r5_59,r6_61,r7_62,r8_63,r9_64,sp_45,V_49,Z_51,ZN_47
	Mem69[r2_55 + 0x0000C6F1:word32] = r0_54
	Mem71[r2_55 + 0x0000C6F5:word32] = r0_54
	branch Mem71[r2_55 + 0x0000C5F3:word32] == 0x00000000 l0001092D
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00010925:
	branch Mem71[r2_55 + 0x0000C6F1:word32] != 0x00000000 l00010955
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r11:0x00000000 r3:0x00000000 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000
// LocalsOut: fp(32)

l00010955:
	Mem192[r2_55 + 0x0000C62B:word32] = Mem71[r2_55 + 0x0000C5F3:word32] + 0x00002000
	Mem194[r2_55 + 0x0000C62F:byte] = 0x50
	Mem196[r2_55 + 0x0000C639:byte] = 0x50
	Mem198[r2_55 + 0x0000C634:byte] = 0x50
	Mem200[r2_55 + 0x0000C630:byte] = 0x4B
	Mem202[r2_55 + 0x0000C63A:byte] = 0x4B
	Mem204[r2_55 + 0x0000C635:byte] = 0x4B
	word32 r4_211 = Mem204[0x000192BC:word32]
	word32 sp_216
	byte CVZN_217
	byte ZN_218
	bool C_219
	bool V_220
	word32 r11_221
	bool Z_222
	bool N_223
	word32 r3_224
	word32 r0_225
	word32 r2_226
	word32 r10_227
	word32 ap_228
	word32 fp_229
	word32 r5_230
	word32 r4_231
	word32 r6_232
	word32 r7_233
	word32 r8_234
	word32 r9_235
	byte CZN_236
	word32 r1_237
	word32 pc_238
	call r4_211 + 2 (retsize: 4; depth: 28)
		uses: ap_207,C_213,CVZN_46,CZN_65,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,fp_58,N_52,pc_67,r0_54,r1_66,r10_56,r11_50,r2_55,r3_53,r4_211,r5_59,r6_61,r7_62,r8_63,r9_64,sp_208,V_214,Z_188,ZN_212
		defs: ap_228,C_219,CVZN_217,CZN_236,fp_229,N_223,pc_238,r0_225,r1_237,r10_227,r11_221,r2_226,r3_224,r4_231,r5_230,r6_232,r7_233,r8_234,r9_235,sp_216,V_220,Z_222,ZN_218
	word32 sp_247
	byte CVZN_248
	byte ZN_249
	bool C_250
	bool V_251
	word32 r11_252
	bool Z_253
	bool N_254
	word32 r3_255
	word32 r0_256
	word32 r2_257
	word32 r10_258
	word32 ap_259
	word32 fp_260
	word32 r5_261
	word32 r4_262
	word32 r6_263
	word32 r7_264
	word32 r8_265
	word32 r9_266
	byte CZN_267
	word32 r1_268
	word32 pc_269
	call r4_231 + 2 (retsize: 4; depth: 36)
		uses: ap_242,C_219,CVZN_246,CZN_236,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24,dwLoc28,dwLoc2C,fp_229,N_223,pc_238,r0_225,r1_237,r10_227,r11_221,r2_226,r3_224,r4_231,r5_230,r6_232,r7_233,r8_234,r9_235,sp_243,V_220,Z_222,ZN_218
		defs: ap_259,C_250,CVZN_248,CZN_267,fp_260,N_254,pc_269,r0_256,r1_268,r10_258,r11_252,r2_257,r3_255,r4_262,r5_261,r6_263,r7_264,r8_265,r9_266,sp_247,V_251,Z_253,ZN_249
	word32 sp_278
	byte CVZN_279
	byte ZN_280
	bool C_281
	bool V_282
	bool Z_284
	bool N_285
	word32 r0_287
	word32 r4_293
	word32 r6_294
	word32 r7_295
	word32 r8_296
	word32 r9_297
	byte CZN_298
	word32 r11_1665
	word32 r5_1029
	word32 pc_1037
	word32 r1_1479
	word32 r10_1026
	word32 r2_1025
	word32 r3_1023
	word32 fp_1471
	word32 ap_1632
	call r4_262 + 2 (retsize: 4; depth: 44)
		uses: ap_273,C_250,CVZN_277,CZN_267,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C,fp_260,N_254,pc_269,r0_256,r1_268,r10_258,r11_252,r2_257,r3_255,r4_262,r5_261,r6_263,r7_264,r8_265,r9_266,sp_274,V_251,Z_253,ZN_249
		defs: ap_290,C_281,CVZN_279,CZN_298,fp_291,N_285,pc_300,r0_287,r1_299,r10_289,r11_283,r2_288,r3_286,r4_293,r5_292,r6_294,r7_295,r8_296,r9_297,sp_278,V_282,Z_284,ZN_280
	fn0000C0CE(r0_287, 0x00000000, ap_1632, pc_1037)
	Mem314[r2_1025 + 0x0000C613:word32] = r0_287
	word32 r6_1031 = 0x00000000
	word32 r7_1032 = 0x00000000
	word32 r8_1033 = 0x00000000
	word32 r4_1115 = 0x00000000
	word32 r9_1034 = 0x00000000
	word32 sp_1458 = fp - 0x0000002C
	branch r0_287 != 0x00000000 l000109EF
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r11:0x00000000 r3:0x00000000 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000
// Terminates process

l000109EF:
// DataOut: ap fp pc r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l000109F0:
	branch Mem314[r2_1025 + 64:word32] != 0x00000000 l00010A32
// DataOut: ap fp pc r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l000109FC:
	branch r3_1023 == 0x00000009 l00010A32
// DataOut: ap fp pc r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A01:
	branch r3_1023 == 0x0000004C l00010A32
// DataOut: ap fp pc r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A0A:
	branch Mem314[r2_1025 + 72:word32] == 0x00000000 l00010A13
// DataOut: ap fp pc r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A0F:
	branch Mem314[r2_1025:word32] == 0x00000000 l00010A32
// DataOut: ap fp pc r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A13:
	ap_1632 = r7_1032 + r8_1033 + r6_1031 + r4_1115
	branch ap_1632 <= 0x00000000 l00010A32
// DataOut: ap fp pc r1 r10 r2 r3 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A1F:
	word32 sp_1747 = sp_1458 - 0x00000004
	Mem1748[sp_1747:word32] = 0x00000000
	Mem1750[sp_1747 - 0x00000004:word32] = 0x00000001
	Mem1753[sp_1747 - 0x00000008:word32] = r5_1029 + 9
	Mem1755[sp_1747 - 0x0000000C:word32] = r2_1025
	word32 ap_1756 = Mem1755[r2_1025 + 0x0000C839:word32]
	byte CVZN_1761
	byte ZN_1762
	bool C_1763
	bool V_1764
	word32 r11_1765
	bool Z_1766
	bool N_1767
	word32 r0_1769
	word32 r5_1774
	word32 r4_1775
	word32 r8_1778
	byte CZN_1780
	call ap_1756 + 2 (retsize: 4; depth: 4)
		uses: ap_1756,C_1758,CVZN_1745,CZN_1732,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_1631,N_1627,pc_1615,r0_1629,r1_1616,r10_1624,r11_1633,r2_1625,r3_1626,r4_1622,r5_1623,r6_1621,r7_1620,r8_1619,r9_1618,sp_1754,V_1759,Z_1739,ZN_1757
		defs: ap_1772,C_1763,CVZN_1761,CZN_1780,fp_1773,N_1767,pc_1782,r0_1769,r1_1781,r10_1771,r11_1765,r2_1770,r3_1768,r4_1775,r5_1774,r6_1776,r7_1777,r8_1778,r9_1779,sp_1760,V_1764,Z_1766,ZN_1762
// DataOut: ap fp pc r1 r10 r2 r3 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> ap:r7 + r8 + r6 + r4 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A32:
	Mem1652[sp_1458 - 0x00000004:word32] = 0x00000000
	word32 r3_1658
	word32 sp_1668
	word32 r0_1669 = fn00010E6A(r1_1479, r2_1025, r3_1023, r6_1031, r7_1032, r9_1034, ap_1632, fp_1471, out r1_1479, out r2_1025, out r3_1658, out r4_1115, out r5_1029, out r6_1031, out r7_1032, out r8_1033, out r9_1034, out r11_1665, out ap_1632, out fp_1471, out sp_1668)
	r3_1023 = r0_1669
	branch r0_1669 != 0x00000001 l00010A48
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> ap:<invalid> sp:sp - 0x0000003C -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A48:
	branch r0_1669 != 0x0000004C l00010A58
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r7:<invalid> r9:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A58:
	branch r0_1669 != 0x00000009 l00010A64
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r7:<invalid> r9:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A64:
	branch r0_1669 == 0x00000000 l00010A6C
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r7:<invalid> r9:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A6C:
	r8_1033 = r8_1033 + 0x00000001
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r7:<invalid> r9:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A68:
	r7_1032 = r7_1032 + 0x00000001
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r7:<invalid> r9:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A5D:
	r4_1115 = r4_1115 + 0x00000001
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r7:<invalid> r9:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A51:
	r9_1034 = r9_1034 + 0x00000001
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r7:<invalid> r9:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A41:
	r6_1031 = r6_1031 + 0x00000001
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> r7:<invalid> r9:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A6E:
	branch r0_1669 == 0x0000004C l00010A7F
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r6:<invalid> r9:<invalid> r4:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r2:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A77:
	branch r0_1669 <= Mem1652[sp_1668:word32] l00010A7F
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r6:<invalid> r9:<invalid> r4:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r2:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A7C:
	Mem1703[sp_1668:word32] = r0_1669
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r6:<invalid> r9:<invalid> r4:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r2:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A7F:
	Mem1689[sp_1668 - 0x00000004:word32] = Mem1652[r2_1025 + 0x0000C60F:word32]
	fn0000C0CE(r0_1669, r6_1031, ap_1632, pc_1037)
	Mem1694[r2_1025 + 0x0000C613:word32] = r0_1669
	sp_1458 = sp_1668 - 0x00000004
	branch r0_1669 == 0x00000000 l00010A98
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: r11:<invalid> sp:<invalid> r3:<invalid> r6:<invalid> r9:<invalid> r4:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r2:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000
// Terminates process

l00010A95:
// DataOut: ap fp pc r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l000109EC:
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010A98:
	word32 ap_1373 = r6_1031 + r8_1033 + r7_1032
	branch ap_1373 == 0x00000000 l00010AA4
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AA4:
	ap_1373 = r4_1115 + r9_1034
	branch ap_1373 == 0x00000001 l00010AB0
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r6 + r8 + r7 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AB0:
	branch r11_1665 != 0x00000000 l00010AB7
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r4 + r9 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AB7:
	branch Mem314[sp_1458:word32] != 0x00000009 l00010AC2
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r4 + r9 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AC0:
	Mem1609[sp_1458:word32] = 0x00000000
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r4 + r9 r4:0x00000000 r9:0x00000000 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AC2:
	Mem1389[sp_1458 - 0x00000004:word32] = Mem314[r2_1025 + 0x0000C60F:word32]
	word32 r1_1393
	word32 ap_1394
	word32 fp_1395
	word32 sp_1396
	word32 r0_1397 = fn00018F22(r1_1479, ap_1373, fp_1471, out r1_1393, out ap_1394, out fp_1395, out sp_1396)
	branch r0_1397 == 0x00000000 l00010B18
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r4 + r9 r4:0x00000000 r9:0x00000000 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B18:
	Mem1489[sp_1396 - 0x00000004:word32] = r11_1665
	word32 sp_1493
	byte CVZN_1494
	byte ZN_1495
	bool C_1496
	bool V_1497
	word32 r11_1498
	bool Z_1499
	bool N_1500
	word32 r3_1501
	word32 r0_1502
	word32 r2_1503
	word32 r10_1504
	word32 ap_1505
	word32 fp_1506
	word32 r5_1507
	word32 r4_1508
	word32 r6_1509
	word32 r7_1510
	word32 r8_1511
	word32 r9_1512
	byte CZN_1513
	word32 r1_1514
	word32 pc_1515
	call Mem1489[0x000192C4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1394,C_1491,CVZN_342,CZN_1383,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_1395,N_1386,pc_320,r0_1397,r1_1393,r10_329,r11_333,r2_330,r3_331,r4_1381,r5_328,r6_326,r7_325,r8_324,r9_1382,sp_1488,V_1492,Z_1399,ZN_1490
		defs: ap_1505,C_1496,CVZN_1494,CZN_1513,fp_1506,N_1500,pc_1515,r0_1502,r1_1514,r10_1504,r11_1498,r2_1503,r3_1501,r4_1508,r5_1507,r6_1509,r7_1510,r8_1511,r9_1512,sp_1493,V_1497,Z_1499,ZN_1495
	Mem1518[r2_1503 + 0x0000C613:word32] = r11_1498
	Mem1521[sp_1493 - 0x00000004:word32] = r5_1507 + 11
	word32 r0_1516 = r0_1502 + r11_1498
	Mem1523[sp_1493 - 0x00000008:word32] = r0_1516
	word32 sp_1527
	byte CVZN_1528
	byte ZN_1529
	bool C_1530
	bool V_1531
	word32 r11_1532
	bool Z_1533
	bool N_1534
	word32 r3_1535
	word32 r0_1536
	word32 r2_1537
	word32 ap_1539
	word32 fp_1540
	word32 r5_1541
	word32 r4_1542
	word32 r6_1543
	word32 r7_1544
	word32 r8_1545
	word32 r9_1546
	byte CZN_1547
	word32 r1_1548
	call Mem1523[0x000192BC:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1505,C_1525,CVZN_1494,CZN_1513,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_1506,N_1500,pc_1515,r0_1516,r1_1514,r10_1504,r11_1498,r2_1503,r3_1501,r4_1508,r5_1507,r6_1509,r7_1510,r8_1511,r9_1512,sp_1522,V_1526,Z_1499,ZN_1524
		defs: ap_1539,C_1530,CVZN_1528,CZN_1547,fp_1540,N_1534,pc_1549,r0_1536,r1_1548,r10_1538,r11_1532,r2_1537,r3_1535,r4_1542,r5_1541,r6_1543,r7_1544,r8_1545,r9_1546,sp_1527,V_1531,Z_1533,ZN_1529
	Mem1551[sp_1527 - 0x00000004:word32] = 0x00000001
	word32 r11_1564
	word32 r0_1568 = fn00010E6A(r1_1548, r2_1537, r3_1535, r6_1543, r7_1544, r9_1546, ap_1539, fp_1540, out r1_1479, out r2_1025, out r3_1023, out r4_1115, out r5_1029, out r6_1031, out r7_1032, out r8_1033, out r9_1034, out r11_1564, out ap_1373, out fp_1471, out sp_1458)
	branch r0_1568 != 0x00000001 l00010B48
// DataOut: ap fp pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:0x00000000 r9:0x00000000 sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B48:
	branch r0_1568 != 0x0000004C l00010B58
// DataOut: ap fp pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B58:
	branch r0_1568 == 0x00000009 l00010B6A
// DataOut: ap fp pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B5D:
	branch r0_1568 == 0x00000000 l00010B68
// DataOut: ap fp pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B68:
	r8_1033 = r8_1033 + 0x00000001
// DataOut: ap fp pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B61:
	r7_1032 = r7_1032 + 0x00000001
// DataOut: ap fp pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B51:
	r9_1034 = r9_1034 + 0x00000001
// DataOut: ap fp pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B43:
	r6_1031 = r6_1031 + 0x00000001
// DataOut: ap fp pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> r6:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B6A:
	branch r0_1568 <= Mem1551[sp_1458:word32] l00010B72
// DataOut: ap fp pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B6F:
	Mem1584[sp_1458:word32] = r0_1568
// DataOut: ap fp pc r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AD3:
	Mem1404[sp_1396 - 0x00000004:uint32] = 0x00000401
	Mem1407[sp_1396 - 0x00000008:word32] = Mem1404[r2_1025 + 0x0000C60F:word32]
	branch Mem1407[r2_1025:word32] == 0x00000000 l00010AEC
// DataOut: fp pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:0x00000000 r9:0x00000000 sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AEC:
	r3_1023 = r10_1026 + 456
// DataOut: fp pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:0x00000000 r9:0x00000000 sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AE2:
// DataOut: fp pc r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:0x00000000 r9:0x00000000 sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AF1:
	Mem1414[sp_1396 - 0x0000000C:word32] = r3_1023
	Mem1417[sp_1396 - 0x00000010:word32] = r10_1026 + 277
	Mem1420[sp_1396 - 0x00000014:word32] = r2_1025 + 1515
	word32 sp_1424
	byte CVZN_1425
	byte ZN_1426
	bool C_1427
	bool V_1428
	word32 r11_1429
	bool Z_1430
	bool N_1431
	word32 r3_1432
	word32 r0_1433
	word32 r2_1434
	word32 r10_1435
	word32 ap_1436
	word32 fp_1437
	word32 r5_1438
	word32 r4_1439
	word32 r6_1440
	word32 r7_1441
	word32 r8_1442
	word32 r9_1443
	byte CZN_1444
	word32 r1_1445
	word32 pc_1446
	call Mem1420[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1394,C_1422,CVZN_342,CZN_1383,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_1395,N_1386,pc_320,r0_1397,r1_1393,r10_329,r11_333,r2_330,r3_1412,r4_1381,r5_328,r6_326,r7_325,r8_324,r9_1382,sp_1418,V_1423,Z_1409,ZN_1421
		defs: ap_1436,C_1427,CVZN_1425,CZN_1444,fp_1437,N_1431,pc_1446,r0_1433,r1_1445,r10_1435,r11_1429,r2_1434,r3_1432,r4_1439,r5_1438,r6_1440,r7_1441,r8_1442,r9_1443,sp_1424,V_1428,Z_1430,ZN_1426
	Mem1448[sp_1424 - 0x00000004:word32] = r0_1433
	Mem1451[sp_1424 - 0x00000008:word32] = r2_1434 + 1515
	Mem1453[sp_1424 - 0x0000000C:word32] = r2_1434
	word32 ap_1454 = Mem1453[r2_1434 + 0x0000C839:word32]
	byte CVZN_1459
	byte ZN_1460
	bool C_1461
	bool V_1462
	word32 r11_1463
	bool Z_1464
	bool N_1465
	word32 r0_1467
	byte CZN_1478
	call ap_1454 + 2 (retsize: 4; depth: 4)
		uses: ap_1454,C_1456,CVZN_1425,CZN_1444,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_1437,N_1431,pc_1446,r0_1433,r1_1445,r10_1435,r11_1429,r2_1434,r3_1432,r4_1439,r5_1438,r6_1440,r7_1441,r8_1442,r9_1443,sp_1452,V_1457,Z_1430,ZN_1455
		defs: ap_1470,C_1461,CVZN_1459,CZN_1478,fp_1471,N_1465,pc_1480,r0_1467,r1_1479,r10_1469,r11_1463,r2_1468,r3_1466,r4_1473,r5_1472,r6_1474,r7_1475,r8_1476,r9_1477,sp_1458,V_1462,Z_1464,ZN_1460
// DataOut: ap fp pc r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:0x00000000 r9:0x00000000 sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:r10 + 456 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AB4:
// DataOut: ap fp pc r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r4 + r9 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AAD:
// DataOut: ap fp pc r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r4 + r9 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010AA1:
// DataOut: ap fp pc r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:r6 + r8 + r7 -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B72:
	Mem365[sp_1458 - 0x00000004:word32] = Mem314[r2_1025 + 0x0000C60F:word32]
	word32 r1_369
	word32 ap_370
	word32 sp_1015
	word32 fp_1028
	word32 r0_373 = fn00018F22(r1_1479, ap_1373, fp_1471, out r1_369, out ap_370, out fp_1028, out sp_1015)
	branch r0_373 != 0x00000000 l00010B86
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> r4:<invalid> r9:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B86:
	branch Mem365[r2_1025 + 64:word32] < 0x00000003 l00010B8F
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B8F:
	branch Mem365[r2_1025 + 72:word32] == 0x00000000 l00010BA0
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B94:
	branch Mem365[r2_1025 + 64:word32] == 0x00000000 l00010BA0
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B99:
	branch Mem365[r2_1025:word32] != 0x00000000 l00010BA0
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BA0:
	branch r4_1115 + r7_1032 + r6_1031 > 0x00000000 l00010BAE
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BA9:
	branch r8_1033 == 0x00000001 l00010BD8
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BAE:
	branch Mem365[r2_1025 + 72:word32] == 0x00000000 l00010BB7
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BB3:
	branch Mem365[r2_1025:word32] == 0x00000000 l00010BD8
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BB7:
	branch Mem365[r2_1025 + 68:word32] == 0x00000000 l00010BC2
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BBC:
	branch Mem365[r2_1025 + 64:word32] > 0x00000001 l00010BD8
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BC2:
	Mem1320[sp_1015 - 0x00000004:uint32] = 0x00000401
	Mem1322[sp_1015 - 0x00000008:word32] = 0x00000001
	Mem1325[sp_1015 - 0x0000000C:word32] = r5_1029 + 16
	Mem1327[sp_1015 - 0x00000010:word32] = r2_1025
	word32 ap_1328 = Mem1327[r2_1025 + 0x0000C839:word32]
	byte CVZN_1333
	byte ZN_1334
	bool C_1335
	bool V_1336
	word32 r11_1337
	bool Z_1338
	bool N_1339
	word32 r0_1341
	word32 ap_1344
	byte CZN_1352
	word32 r1_1353
	call ap_1328 + 2 (retsize: 4; depth: 4)
		uses: ap_1328,C_1330,CVZN_607,CZN_1309,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_371,N_596,pc_345,r0_373,r1_369,r10_354,r11_358,r2_355,r3_356,r4_352,r5_353,r6_351,r7_350,r8_349,r9_348,sp_1326,V_1331,Z_1315,ZN_1329
		defs: ap_1344,C_1335,CVZN_1333,CZN_1352,fp_1345,N_1339,pc_1354,r0_1341,r1_1353,r10_1343,r11_1337,r2_1342,r3_1340,r4_1347,r5_1346,r6_1348,r7_1349,r8_1350,r9_1351,sp_1332,V_1336,Z_1338,ZN_1334
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BD8:
	branch r8_1033 > 0x00000001 l00010BEB
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): Z
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BDD:
	branch r8_1033 != 0x00000001 l00010C24
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BDF:
	branch r4_1115 + r9_1034 + r7_1032 + r6_1031 <= 0x00000000 l00010C24
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BEB:
	word32 r3_1225
	word32 sp_1219 = sp_1015 - 0x00000004
	Mem1221[sp_1219:uint32] = 0x00000401
	branch r8_1033 != 0x00000001 l00010BFC
// DataOut: fp pc r0 r10 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BFC:
	r3_1225 = r5_1029 + 18
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010BF5:
	r3_1225 = r5_1029 + 25
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C00:
	Mem1227[sp_1219 - 0x00000004:word32] = r3_1225
	Mem1229[sp_1219 - 0x00000008:word32] = r8_1033
	Mem1232[sp_1219 - 0x0000000C:word32] = r10_1026 + 39
	Mem1235[sp_1219 - 0x00000010:word32] = r2_1025 + 1515
	word32 sp_1239
	byte CVZN_1240
	byte ZN_1241
	bool C_1242
	bool V_1243
	word32 r11_1244
	bool Z_1245
	bool N_1246
	word32 r3_1247
	word32 r0_1248
	word32 r2_1249
	word32 r10_1250
	word32 ap_1251
	word32 fp_1252
	word32 r5_1253
	word32 r4_1254
	word32 r6_1255
	word32 r7_1256
	word32 r8_1257
	word32 r9_1258
	byte CZN_1259
	word32 r1_1260
	word32 pc_1261
	call Mem1235[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1218,C_1237,CVZN_1216,CZN_1222,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_624,N_630,pc_609,r0_622,r1_610,r10_617,r11_620,r2_618,r3_1225,r4_615,r5_616,r6_614,r7_613,r8_612,r9_611,sp_1233,V_1238,Z_1223,ZN_1236
		defs: ap_1251,C_1242,CVZN_1240,CZN_1259,fp_1252,N_1246,pc_1261,r0_1248,r1_1260,r10_1250,r11_1244,r2_1249,r3_1247,r4_1254,r5_1253,r6_1255,r7_1256,r8_1257,r9_1258,sp_1239,V_1243,Z_1245,ZN_1241
	Mem1263[sp_1239 - 0x00000004:word32] = r0_1248
	Mem1266[sp_1239 - 0x00000008:word32] = r2_1249 + 1515
	Mem1268[sp_1239 - 0x0000000C:word32] = r2_1249
	word32 ap_1269 = Mem1268[r2_1249 + 0x0000C839:word32]
	byte CVZN_1274
	byte ZN_1275
	bool C_1276
	bool V_1277
	word32 r11_1278
	bool Z_1279
	bool N_1280
	word32 r0_1282
	word32 ap_1285
	byte CZN_1293
	word32 r1_1294
	call ap_1269 + 2 (retsize: 4; depth: 4)
		uses: ap_1269,C_1271,CVZN_1240,CZN_1259,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_1252,N_1246,pc_1261,r0_1248,r1_1260,r10_1250,r11_1244,r2_1249,r3_1247,r4_1254,r5_1253,r6_1255,r7_1256,r8_1257,r9_1258,sp_1267,V_1272,Z_1245,ZN_1270
		defs: ap_1285,C_1276,CVZN_1274,CZN_1293,fp_1286,N_1280,pc_1295,r0_1282,r1_1294,r10_1284,r11_1278,r2_1283,r3_1281,r4_1288,r5_1287,r6_1289,r7_1290,r8_1291,r9_1292,sp_1273,V_1277,Z_1279,ZN_1275
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C24:
	branch r6_1031 <= 0x00000000 l00010C60
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C28:
	word32 r3_1137
	word32 sp_1131 = sp_1015 - 0x00000004
	Mem1133[sp_1131:uint32] = 0x00000401
	branch r6_1031 != 0x00000001 l00010C38
// DataOut: fp pc r0 r10 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C38:
	r3_1137 = r5_1029 + 30
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C32:
	r3_1137 = r5_1029 + 32
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C3C:
	Mem1139[sp_1131 - 0x00000004:word32] = r3_1137
	Mem1141[sp_1131 - 0x00000008:word32] = r6_1031
	Mem1144[sp_1131 - 0x0000000C:word32] = r10_1026 + 77
	Mem1147[sp_1131 - 0x00000010:word32] = r2_1025 + 1515
	word32 sp_1151
	byte CVZN_1152
	byte ZN_1153
	bool C_1154
	bool V_1155
	word32 r11_1156
	bool Z_1157
	bool N_1158
	word32 r3_1159
	word32 r0_1160
	word32 r2_1161
	word32 r10_1162
	word32 ap_1163
	word32 fp_1164
	word32 r5_1165
	word32 r4_1166
	word32 r6_1167
	word32 r7_1168
	word32 r8_1169
	word32 r9_1170
	byte CZN_1171
	word32 r1_1172
	word32 pc_1173
	call Mem1147[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_652,C_1149,CVZN_648,CZN_1134,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_651,N_645,pc_633,r0_649,r1_634,r10_642,r11_647,r2_643,r3_1137,r4_640,r5_641,r6_639,r7_638,r8_637,r9_636,sp_1145,V_1150,Z_1135,ZN_1148
		defs: ap_1163,C_1154,CVZN_1152,CZN_1171,fp_1164,N_1158,pc_1173,r0_1160,r1_1172,r10_1162,r11_1156,r2_1161,r3_1159,r4_1166,r5_1165,r6_1167,r7_1168,r8_1169,r9_1170,sp_1151,V_1155,Z_1157,ZN_1153
	Mem1175[sp_1151 - 0x00000004:word32] = r0_1160
	Mem1178[sp_1151 - 0x00000008:word32] = r2_1161 + 1515
	Mem1180[sp_1151 - 0x0000000C:word32] = r2_1161
	word32 ap_1181 = Mem1180[r2_1161 + 0x0000C839:word32]
	byte CVZN_1186
	byte ZN_1187
	bool C_1188
	bool V_1189
	word32 r11_1190
	bool Z_1191
	bool N_1192
	word32 r0_1194
	word32 ap_1197
	byte CZN_1205
	word32 r1_1206
	call ap_1181 + 2 (retsize: 4; depth: 4)
		uses: ap_1181,C_1183,CVZN_1152,CZN_1171,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_1164,N_1158,pc_1173,r0_1160,r1_1172,r10_1162,r11_1156,r2_1161,r3_1159,r4_1166,r5_1165,r6_1167,r7_1168,r8_1169,r9_1170,sp_1179,V_1184,Z_1157,ZN_1182
		defs: ap_1197,C_1188,CVZN_1186,CZN_1205,fp_1198,N_1192,pc_1207,r0_1194,r1_1206,r10_1196,r11_1190,r2_1195,r3_1193,r4_1200,r5_1199,r6_1201,r7_1202,r8_1203,r9_1204,sp_1185,V_1189,Z_1191,ZN_1187
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C60:
	branch r7_1032 <= 0x00000000 l00010C9C
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C64:
	word32 r3_1052
	word32 sp_1046 = sp_1015 - 0x00000004
	Mem1048[sp_1046:uint32] = 0x00000401
	branch r7_1032 != 0x00000001 l00010C74
// DataOut: fp pc r0 r10 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C74:
	r3_1052 = r5_1029 + 33
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C6E:
	r3_1052 = r5_1029 + 35
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C78:
	Mem1054[sp_1046 - 0x00000004:word32] = r3_1052
	Mem1056[sp_1046 - 0x00000008:word32] = r7_1032
	Mem1059[sp_1046 - 0x0000000C:word32] = r10_1026 + 125
	Mem1062[sp_1046 - 0x00000010:word32] = r2_1025 + 1515
	word32 sp_1066
	byte CVZN_1067
	byte ZN_1068
	bool C_1069
	bool V_1070
	word32 r11_1071
	bool Z_1072
	bool N_1073
	word32 r3_1074
	word32 r0_1075
	word32 r2_1076
	word32 r10_1077
	word32 ap_1078
	word32 fp_1079
	word32 r5_1080
	word32 r4_1081
	word32 r6_1082
	word32 r7_1083
	word32 r8_1084
	word32 r9_1085
	byte CZN_1086
	word32 r1_1087
	word32 pc_1088
	call Mem1062[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_675,C_1064,CVZN_671,CZN_1049,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_674,N_668,pc_656,r0_672,r1_657,r10_665,r11_670,r2_666,r3_1052,r4_663,r5_664,r6_662,r7_661,r8_660,r9_659,sp_1060,V_1065,Z_1050,ZN_1063
		defs: ap_1078,C_1069,CVZN_1067,CZN_1086,fp_1079,N_1073,pc_1088,r0_1075,r1_1087,r10_1077,r11_1071,r2_1076,r3_1074,r4_1081,r5_1080,r6_1082,r7_1083,r8_1084,r9_1085,sp_1066,V_1070,Z_1072,ZN_1068
	Mem1090[sp_1066 - 0x00000004:word32] = r0_1075
	Mem1093[sp_1066 - 0x00000008:word32] = r2_1076 + 1515
	Mem1095[sp_1066 - 0x0000000C:word32] = r2_1076
	word32 ap_1096 = Mem1095[r2_1076 + 0x0000C839:word32]
	byte CVZN_1101
	byte ZN_1102
	bool C_1103
	bool V_1104
	word32 r11_1105
	bool Z_1106
	bool N_1107
	word32 r0_1109
	word32 ap_1112
	byte CZN_1120
	word32 r1_1121
	call ap_1096 + 2 (retsize: 4; depth: 4)
		uses: ap_1096,C_1098,CVZN_1067,CZN_1086,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_1079,N_1073,pc_1088,r0_1075,r1_1087,r10_1077,r11_1071,r2_1076,r3_1074,r4_1081,r5_1080,r6_1082,r7_1083,r8_1084,r9_1085,sp_1094,V_1099,Z_1072,ZN_1097
		defs: ap_1112,C_1103,CVZN_1101,CZN_1120,fp_1113,N_1107,pc_1122,r0_1109,r1_1121,r10_1111,r11_1105,r2_1110,r3_1108,r4_1115,r5_1114,r6_1116,r7_1117,r8_1118,r9_1119,sp_1100,V_1104,Z_1106,ZN_1102
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010C9C:
	branch r4_1115 <= 0x00000000 l00010CD9
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010CA0:
	word32 r3_1038
	word32 sp_961 = sp_1015 - 0x00000004
	Mem963[sp_961:uint32] = 0x00000401
	branch r4_1115 != 0x00000001 l00010CB0
// DataOut: fp pc r0 r10 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010CB0:
	r3_1038 = r5_1029 + 36
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010CAA:
	r3_1038 = r5_1029 + 38
// DataOut: fp pc r0 r10 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010CB4:
	Mem969[sp_961 - 0x00000004:word32] = r3_1038
	Mem971[sp_961 - 0x00000008:word32] = r4_1115
	Mem974[sp_961 - 0x0000000C:word32] = r10_1026 + 157
	Mem977[sp_961 - 0x00000010:word32] = r2_1025 + 1515
	word32 sp_981
	byte CVZN_982
	byte ZN_983
	bool C_984
	bool V_985
	word32 r11_986
	bool Z_987
	bool N_988
	word32 r3_989
	word32 r0_990
	word32 r2_991
	word32 r10_992
	word32 ap_993
	word32 fp_994
	word32 r5_995
	word32 r4_996
	word32 r6_997
	word32 r7_998
	word32 r8_999
	word32 r9_1000
	byte CZN_1001
	word32 r1_1002
	word32 pc_1003
	call Mem977[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_698,C_979,CVZN_694,CZN_964,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_697,N_691,pc_679,r0_695,r1_680,r10_688,r11_693,r2_689,r3_967,r4_686,r5_687,r6_685,r7_684,r8_683,r9_682,sp_975,V_980,Z_965,ZN_978
		defs: ap_993,C_984,CVZN_982,CZN_1001,fp_994,N_988,pc_1003,r0_990,r1_1002,r10_992,r11_986,r2_991,r3_989,r4_996,r5_995,r6_997,r7_998,r8_999,r9_1000,sp_981,V_985,Z_987,ZN_983
	Mem1005[sp_981 - 0x00000004:word32] = r0_990
	Mem1008[sp_981 - 0x00000008:word32] = r2_991 + 1515
	Mem1010[sp_981 - 0x0000000C:word32] = r2_991
	word32 ap_1011 = Mem1010[r2_991 + 0x0000C839:word32]
	byte CVZN_1016
	byte ZN_1017
	bool C_1018
	bool V_1019
	word32 r11_1020
	bool Z_1021
	bool N_1022
	word32 r0_1024
	word32 ap_1027
	word32 r4_1030
	byte CZN_1035
	word32 r1_1036
	call ap_1011 + 2 (retsize: 4; depth: 4)
		uses: ap_1011,C_1013,CVZN_982,CZN_1001,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_994,N_988,pc_1003,r0_990,r1_1002,r10_992,r11_986,r2_991,r3_989,r4_996,r5_995,r6_997,r7_998,r8_999,r9_1000,sp_1009,V_1014,Z_987,ZN_1012
		defs: ap_1027,C_1018,CVZN_1016,CZN_1035,fp_1028,N_1022,pc_1037,r0_1024,r1_1036,r10_1026,r11_1020,r2_1025,r3_1023,r4_1030,r5_1029,r6_1031,r7_1032,r8_1033,r9_1034,sp_1015,V_1019,Z_1021,ZN_1017
// DataOut: fp pc r0 r10 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010CD9:
	branch r9_1034 != 0x00000001 l00010D08
// DataOut: fp pc r0 r10 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D08:
	branch r9_1034 <= 0x00000000 l00010D34
// DataOut: fp pc r0 r10 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D0C:
	word32 sp_890 = sp_1015 - 0x00000004
	Mem892[sp_890:uint32] = 0x00000401
	Mem894[sp_890 - 0x00000004:word32] = r9_1034
	Mem897[sp_890 - 0x00000008:word32] = r10_1026 + 224
	Mem900[sp_890 - 0x0000000C:word32] = r2_1025 + 1515
	word32 sp_904
	byte CVZN_905
	byte ZN_906
	bool C_907
	bool V_908
	word32 r11_909
	bool Z_910
	bool N_911
	word32 r3_912
	word32 r0_913
	word32 r2_914
	word32 r10_915
	word32 ap_916
	word32 fp_917
	word32 r5_918
	word32 r4_919
	word32 r6_920
	word32 r7_921
	word32 r8_922
	word32 r9_923
	byte CZN_924
	word32 r1_925
	word32 pc_926
	call Mem900[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_721,C_902,CVZN_715,CZN_722,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_720,N_713,pc_702,r0_716,r1_703,r10_710,r11_714,r2_711,r3_712,r4_708,r5_709,r6_707,r7_706,r8_705,r9_704,sp_898,V_903,Z_723,ZN_901
		defs: ap_916,C_907,CVZN_905,CZN_924,fp_917,N_911,pc_926,r0_913,r1_925,r10_915,r11_909,r2_914,r3_912,r4_919,r5_918,r6_920,r7_921,r8_922,r9_923,sp_904,V_908,Z_910,ZN_906
	Mem928[sp_904 - 0x00000004:word32] = r0_913
	Mem931[sp_904 - 0x00000008:word32] = r2_914 + 1515
	Mem933[sp_904 - 0x0000000C:word32] = r2_914
	word32 ap_934 = Mem933[r2_914 + 0x0000C839:word32]
	byte CVZN_939
	byte ZN_940
	bool C_941
	bool V_942
	word32 r11_943
	bool Z_944
	bool N_945
	word32 r0_947
	word32 ap_950
	word32 r4_953
	word32 r9_957
	byte CZN_958
	word32 r1_959
	call ap_934 + 2 (retsize: 4; depth: 4)
		uses: ap_934,C_936,CVZN_905,CZN_924,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_917,N_911,pc_926,r0_913,r1_925,r10_915,r11_909,r2_914,r3_912,r4_919,r5_918,r6_920,r7_921,r8_922,r9_923,sp_932,V_937,Z_910,ZN_935
		defs: ap_950,C_941,CVZN_939,CZN_958,fp_951,N_945,pc_960,r0_947,r1_959,r10_949,r11_943,r2_948,r3_946,r4_953,r5_952,r6_954,r7_955,r8_956,r9_957,sp_938,V_942,Z_944,ZN_940
// DataOut: fp pc r0 r10 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010CDE:
	word32 sp_818 = sp_1015 - 0x00000004
	Mem820[sp_818:uint32] = 0x00000401
	Mem823[sp_818 - 0x00000004:word32] = r10_1026 + 194
	Mem826[sp_818 - 0x00000008:word32] = r2_1025 + 1515
	word32 sp_830
	byte CVZN_831
	byte ZN_832
	bool C_833
	bool V_834
	word32 r11_835
	bool Z_836
	bool N_837
	word32 r3_838
	word32 r0_839
	word32 r2_840
	word32 r10_841
	word32 ap_842
	word32 fp_843
	word32 r5_844
	word32 r4_845
	word32 r6_846
	word32 r7_847
	word32 r8_848
	word32 r9_849
	byte CZN_850
	word32 r1_851
	word32 pc_852
	call Mem826[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_721,C_828,CVZN_715,CZN_722,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_720,N_713,pc_702,r0_716,r1_703,r10_710,r11_714,r2_711,r3_712,r4_708,r5_709,r6_707,r7_706,r8_705,r9_704,sp_824,V_829,Z_723,ZN_827
		defs: ap_842,C_833,CVZN_831,CZN_850,fp_843,N_837,pc_852,r0_839,r1_851,r10_841,r11_835,r2_840,r3_838,r4_845,r5_844,r6_846,r7_847,r8_848,r9_849,sp_830,V_834,Z_836,ZN_832
	Mem854[sp_830 - 0x00000004:word32] = r0_839
	Mem857[sp_830 - 0x00000008:word32] = r2_840 + 1515
	Mem859[sp_830 - 0x0000000C:word32] = r2_840
	word32 ap_860 = Mem859[r2_840 + 0x0000C839:word32]
	byte CVZN_865
	byte ZN_866
	bool C_867
	bool V_868
	word32 r11_869
	bool Z_870
	bool N_871
	word32 r0_873
	word32 ap_876
	word32 r4_879
	word32 r9_883
	byte CZN_884
	word32 r1_885
	call ap_860 + 2 (retsize: 4; depth: 4)
		uses: ap_860,C_862,CVZN_831,CZN_850,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_843,N_837,pc_852,r0_839,r1_851,r10_841,r11_835,r2_840,r3_838,r4_845,r5_844,r6_846,r7_847,r8_848,r9_849,sp_858,V_863,Z_836,ZN_861
		defs: ap_876,C_867,CVZN_865,CZN_884,fp_877,N_871,pc_886,r0_873,r1_885,r10_875,r11_869,r2_874,r3_872,r4_879,r5_878,r6_880,r7_881,r8_882,r9_883,sp_864,V_868,Z_870,ZN_866
// DataOut: fp pc r0 r10 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D34:
	word32 ap_746 = r7_1032 + r8_1033 + r6_1031
	branch ap_746 != 0x00000000 l00010D63
// DataOut: fp pc r0 r10 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D3D:
	word32 sp_749 = sp_1015 - 0x00000004
	Mem751[sp_749:uint32] = 0x00000401
	Mem754[sp_749 - 0x00000004:word32] = r10_1026 + 257
	Mem757[sp_749 - 0x00000008:word32] = r2_1025 + 1515
	word32 sp_761
	byte CVZN_762
	byte ZN_763
	bool C_764
	bool V_765
	word32 r11_766
	bool Z_767
	bool N_768
	word32 r3_769
	word32 r0_770
	word32 r2_771
	word32 r10_772
	word32 ap_773
	word32 fp_774
	word32 r5_775
	word32 r4_776
	word32 r6_777
	word32 r7_778
	word32 r8_779
	word32 r9_780
	byte CZN_781
	word32 r1_782
	word32 pc_783
	call Mem757[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_746,C_759,CVZN_747,CZN_727,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_744,N_737,pc_725,r0_739,r1_726,r10_734,r11_738,r2_735,r3_736,r4_732,r5_733,r6_731,r7_730,r8_729,r9_728,sp_755,V_760,Z_748,ZN_758
		defs: ap_773,C_764,CVZN_762,CZN_781,fp_774,N_768,pc_783,r0_770,r1_782,r10_772,r11_766,r2_771,r3_769,r4_776,r5_775,r6_777,r7_778,r8_779,r9_780,sp_761,V_765,Z_767,ZN_763
	Mem785[sp_761 - 0x00000004:word32] = r0_770
	Mem788[sp_761 - 0x00000008:word32] = r2_771 + 1515
	Mem790[sp_761 - 0x0000000C:word32] = r2_771
	word32 ap_791 = Mem790[r2_771 + 0x0000C839:word32]
	word32 sp_795
	byte CVZN_796
	byte ZN_797
	bool C_798
	bool V_799
	word32 r11_800
	bool Z_801
	bool N_802
	word32 r0_804
	word32 r2_805
	word32 r10_806
	word32 ap_807
	word32 r4_810
	word32 r9_814
	byte CZN_815
	word32 r1_816
	call ap_791 + 2 (retsize: 4; depth: 4)
		uses: ap_791,C_793,CVZN_762,CZN_781,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_774,N_768,pc_783,r0_770,r1_782,r10_772,r11_766,r2_771,r3_769,r4_776,r5_775,r6_777,r7_778,r8_779,r9_780,sp_789,V_794,Z_767,ZN_792
		defs: ap_807,C_798,CVZN_796,CZN_815,fp_808,N_802,pc_817,r0_804,r1_816,r10_806,r11_800,r2_805,r3_803,r4_810,r5_809,r6_811,r7_812,r8_813,r9_814,sp_795,V_799,Z_801,ZN_797
// DataOut: fp pc r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B9D:
// DataOut: fp pc r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B8C:
// DataOut: fp pc r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010B83:
// DataOut: fp pc r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D63:
	word32 ap_393
	word32 fp_394
	word32 sp_395
	word32 r0_396 = fn0001872A(r3_1023, fp_1028, out ap_393, out fp_394, out sp_395)
	Mem398[sp_395 - 0x00000004:word32] = 0x00000005
	Mem400[sp_395 - 0x00000008:word32] = 0x00000000
	word32 ap_404
	word32 fp_405
	word32 sp_406
	word32 r2_407 = fn0000C6FA(r0_396, r5_1029, r6_1031, r7_1032, r8_1033, ap_393, fp_394, pc_1037, out ap_404, out fp_405, out sp_406)
	branch Mem400[r2_407 + 0x0000C5EB:word32] == 0x00000000 l00010D8A
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r9:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r2:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D7D:
	fn0000D406(ap_404, fp_405, out sp_406)
	Mem590[r2_407 + 0x0000C5EB:word32] = 0x00000000
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> pc:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D8A:
	branch Mem400[r2_407 + 0x0000C815:word32] == 0x00000000 l00010DA5
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> pc:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010D92:
	word32 sp_552 = sp_406 - 0x00000004
	Mem554[sp_552:word32] = Mem400[r2_407 + 0x0000C815:word32]
	byte CVZN_559
	byte ZN_560
	bool C_561
	bool V_562
	word32 r11_563
	bool Z_564
	bool N_565
	word32 r3_566
	word32 r0_567
	word32 r10_569
	word32 ap_570
	word32 fp_571
	word32 r5_572
	word32 r4_573
	word32 r6_574
	word32 r7_575
	word32 r8_576
	word32 r9_577
	byte CZN_578
	word32 r1_579
	word32 pc_580
	call Mem554[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_404,C_556,CVZN_391,CZN_380,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_414,N_412,pc_378,r0_396,r1_379,r10_387,r11_390,r2_407,r3_388,r4_385,r5_386,r6_384,r7_383,r8_382,r9_381,sp_552,V_557,Z_416,ZN_555
		defs: ap_570,C_561,CVZN_559,CZN_578,fp_571,N_565,pc_580,r0_567,r1_579,r10_569,r11_563,r2_568,r3_566,r4_573,r5_572,r6_574,r7_575,r8_576,r9_577,sp_558,V_562,Z_564,ZN_560
	Mem582[r2_407 + 0x0000C815:word32] = 0x00000000
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> pc:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010DA5:
	branch Mem400[r2_407 + 0x0000C6F1:word32] == 0x00000000 l00010DBA
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> pc:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010DAD:
	word32 sp_523 = sp_406 - 0x00000004
	Mem525[sp_523:word32] = Mem400[r2_407 + 0x0000C6F1:word32]
	byte CVZN_530
	byte ZN_531
	bool C_532
	bool V_533
	word32 r11_534
	bool Z_535
	bool N_536
	word32 r3_537
	word32 r0_538
	word32 r10_540
	word32 ap_541
	word32 fp_542
	word32 r5_543
	word32 r4_544
	word32 r6_545
	word32 r7_546
	word32 r8_547
	word32 r9_548
	byte CZN_549
	word32 r1_550
	word32 pc_551
	call Mem525[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_437,C_527,CVZN_433,CZN_421,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_436,N_431,pc_419,r0_434,r1_420,r10_428,r11_432,r2_429,r3_430,r4_426,r5_427,r6_425,r7_424,r8_423,r9_422,sp_523,V_528,Z_439,ZN_526
		defs: ap_541,C_532,CVZN_530,CZN_549,fp_542,N_536,pc_551,r0_538,r1_550,r10_540,r11_534,r2_539,r3_537,r4_544,r5_543,r6_545,r7_546,r8_547,r9_548,sp_529,V_533,Z_535,ZN_531
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> pc:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010DBA:
	branch Mem400[r2_407 + 0x0000C5F3:word32] == 0x00000000 l00010DCF
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> pc:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010DC2:
	word32 sp_494 = sp_406 - 0x00000004
	Mem496[sp_494:word32] = Mem400[r2_407 + 0x0000C5F3:word32]
	word32 sp_500
	byte CVZN_501
	byte ZN_502
	bool C_503
	bool V_504
	word32 r11_505
	bool Z_506
	bool N_507
	word32 r3_508
	word32 r0_509
	word32 r10_511
	word32 ap_512
	word32 fp_513
	word32 r5_514
	word32 r4_515
	word32 r6_516
	word32 r7_517
	word32 r8_518
	word32 r9_519
	byte CZN_520
	word32 r1_521
	word32 pc_522
	call Mem496[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_460,C_498,CVZN_456,CZN_444,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_206,dwLoc18_210,dwLoc1C_241,dwLoc20_245,dwLoc24_272,dwLoc28_276,dwLoc2C_309,fp_459,N_454,pc_442,r0_457,r1_443,r10_451,r11_455,r2_452,r3_453,r4_449,r5_450,r6_448,r7_447,r8_446,r9_445,sp_494,V_499,Z_462,ZN_497
		defs: ap_512,C_503,CVZN_501,CZN_520,fp_513,N_507,pc_522,r0_509,r1_521,r10_511,r11_505,r2_510,r3_508,r4_515,r5_514,r6_516,r7_517,r8_518,r9_519,sp_500,V_504,Z_506,ZN_502
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> pc:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l00010DCF:
	Mem484[r2_407 + 0x0000C6F1:word32] = 0x00000000
	Mem486[r2_407 + 0x0000C5F3:word32] = 0x00000000
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: ap:<invalid> sp:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> pc:<invalid> r3:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> -44(fp):<invalid> -40(fp):r2 + 0x0000C63B -36(fp):r5 + 6 -32(fp):r2 + 0x0000C636 -28(fp):r5 + 3 -24(fp):r2 + 0x0000C631 -20(fp):r5 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

l0001092D:
	word32 sp_122
	byte CVZN_123
	byte ZN_124
	bool C_125
	bool V_126
	word32 r11_127
	bool Z_128
	bool N_129
	word32 r3_130
	word32 r0_131
	word32 r2_132
	word32 r10_133
	word32 ap_134
	word32 fp_135
	word32 r5_136
	word32 r4_137
	word32 r6_138
	word32 r7_139
	word32 r8_140
	word32 r9_141
	byte CZN_142
	word32 r1_143
	word32 pc_144
	call Mem71[0x000192D0:word32] + 2 (retsize: 4; depth: 32)
		uses: ap_57,C_116,CVZN_46,CZN_65,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_109,dwLoc18_111,dwLoc1C_114,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,fp_58,N_52,pc_67,r0_54,r1_66,r10_56,r11_50,r2_55,r3_53,r4_60,r5_59,r6_61,r7_62,r8_63,r9_64,sp_112,V_117,Z_73,ZN_115
		defs: ap_134,C_125,CVZN_123,CZN_142,fp_135,N_129,pc_144,r0_131,r1_143,r10_133,r11_127,r2_132,r3_130,r4_137,r5_136,r6_138,r7_139,r8_140,r9_141,sp_122,V_126,Z_128,ZN_124
	word32 ap_152 = Mem71[r2_132 + 0x0000C839:word32]
	word32 sp_156
	byte CVZN_157
	byte ZN_158
	bool C_159
	bool V_160
	word32 r11_161
	bool Z_162
	bool N_163
	word32 r3_164
	word32 r0_165
	word32 r2_166
	word32 r10_167
	word32 ap_168
	word32 fp_169
	word32 r5_170
	word32 r4_171
	word32 r6_172
	word32 r7_173
	word32 r8_174
	word32 r9_175
	byte CZN_176
	word32 r1_177
	word32 pc_178
	call ap_152 + 2 (retsize: 4; depth: 44)
		uses: ap_152,C_154,CVZN_123,CZN_142,dwLoc08_6,dwLoc0C_9,dwLoc10_41,dwLoc14_109,dwLoc18_111,dwLoc1C_114,dwLoc20_146,dwLoc24_149,dwLoc28_151,dwLoc2C,fp_135,N_129,pc_144,r0_131,r1_143,r10_133,r11_127,r2_132,r3_130,r4_137,r5_136,r6_138,r7_139,r8_140,r9_141,sp_150,V_155,Z_128,ZN_153
		defs: ap_168,C_159,CVZN_157,CZN_176,fp_169,N_163,pc_178,r0_165,r1_177,r10_167,r11_161,r2_166,r3_164,r4_171,r5_170,r6_172,r7_173,r8_174,r9_175,sp_156,V_160,Z_162,ZN_158
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r11:0x00000000 r3:0x00000000 -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000

fn000108D2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:<invalid> r3:<invalid> ap:<invalid> r0:<invalid> fp:<invalid> r1:<invalid> r4:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> pc:<invalid> r8:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):0x00008001 -12(fp):0x00002004 -8(fp):0x00000000



word32 fn00010E6A(word32 r1, word32 r2, word32 r3, word32 r6, word32 r7, word32 r9, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r1 r2 r3 r6 r7 r9
// LiveOut: ap fp r0 r1 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Trashed: CVZN ap fp r0 r1 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00010E6A_entry:
	*r2Out = r2
	*r11Out = r11
	*r9Out = r9
	*r6Out = r6
	*r4Out = r4
	*r7Out = r7
	*r3Out = r3
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r6 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00010E6A:
	word32 r8_3 = 0x00000000
	*r8Out = r8_3
	word32 r5_106 = 0x00000000
	*r5Out = r5_106
	word32 r1_104
	word32 fp_112
	word32 ap_17
	word32 sp_1065
	word32 r0_20 = fn00018F22(r1, ap, fp, out r1_104, out ap_17, out fp_112, out sp_1065)
	branch r0_20 != 0x00000000 l00010EDF
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00010EA5:
	Mem339[sp_1065 - 0x00000004:word32] = r2 + 0x0000C694
	Mem342[sp_1065 - 0x00000008:word32] = Mem339[r2 + 0x0000C613:word32]
	byte CVZN_347
	byte ZN_348
	bool C_349
	bool V_350
	bool Z_352
	bool N_353
	word32 r0_356
	byte CZN_358
	byte VZN_361
	word32 r4_364
	byte CZ_367
	word32 r11_368
	word32 r9_1854
	word32 r8_1839
	call Mem342[0x000192A8:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_17,C_344,CVZN,CZ,CZN,dwLoc10_9,fp_18,N,r0_20,r1_16,r11,r2,r3,r4,r5_4,r6,r7,r8_3,r9,sp_340,V_345,VZN,Z_22,ZN_343
		defs: ap_359,C_349,CVZN_347,CZ_367,CZN_358,fp_360,N_353,r0_356,r1_357,r11_368,r2_355,r3_362,r4_364,r5_354,r6_365,r7_363,r8_351,r9_366,sp_346,V_350,VZN_361,Z_352,ZN_348
	branch r0_356 != 0x00000000 l00010EDF
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:0x00000000 r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> -16(fp):<invalid>

l00010EBC:
	word32 r0_1844 = (uint32) Mem342[r2 + 0x0000C69E:word16] & ~0xFFFF0FFF
	*r1Out = 0x00000000
	branch r0_1844 != 0x00004000 l00010ED7
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:0x00000000 r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010ED5:
	*r1Out = 0x00000001
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:0x00000000 r0:<invalid> r1:0x00000000 fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010ED7:
	r5_106 = r1_104
	*r5Out = r5_106
	branch r1_104 != 0x00000000 l00010EDF
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:0x00000000 r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010EDF:
	branch Mem0[ap_17 + 4:word32] != 0x00000000 l00010EE7
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010EE7:
	branch Mem0[r2 + 0x0000C6E9:word32] == 0x00000000 l00010F50
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F50:
	word32 sp_248 = sp_1065 - 0x00000004
	Mem250[sp_248:uint32] = 0x00000401
	Mem253[sp_248 - 0x00000004:word32] = Mem250[r2 + 0x0000C613:word32]
	Mem256[sp_248 - 0x00000008:word32] = Mem253[r2 + 0x0000C60F:word32]
	branch Mem256[r2:word32] == 0x00000000 l00010F70
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F70:
	r3 = r6 + 456
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F65:
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F75:
	Mem263[sp_248 - 0x0000000C:word32] = r3
	Mem266[sp_248 - 0x00000010:word32] = r6 + 421
	Mem269[sp_248 - 0x00000014:word32] = r2 + 1515
	word32 sp_273
	byte CVZN_274
	byte ZN_275
	bool C_276
	bool V_277
	word32 r8_278
	bool Z_279
	bool N_280
	word32 r5_281
	word32 r2_282
	word32 r0_283
	word32 r1_284
	byte CZN_285
	word32 ap_286
	word32 fp_287
	byte VZN_288
	word32 r3_289
	word32 r7_290
	word32 r4_291
	word32 r6_292
	word32 r9_293
	byte CZ_294
	word32 r11_295
	call Mem269[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_90,C_271,CVZN_86,CZ_73,CZN_80,dwLoc10_9,fp_89,N_84,r0_87,r1_81,r11_72,r2_82,r3_261,r4_76,r5_83,r6_75,r7_77,r8_85,r9_74,sp_267,V_272,VZN_79,Z_258,ZN_270
		defs: ap_286,C_276,CVZN_274,CZ_294,CZN_285,fp_287,N_280,r0_283,r1_284,r11_295,r2_282,r3_289,r4_291,r5_281,r6_292,r7_290,r8_278,r9_293,sp_273,V_277,VZN_288,Z_279,ZN_275
	Mem297[sp_273 - 0x00000004:word32] = r0_283
	Mem300[sp_273 - 0x00000008:word32] = r2_282 + 1515
	Mem302[sp_273 - 0x0000000C:word32] = r2_282
	word32 r0_303 = Mem302[r2_282 + 0x0000C839:word32]
	word32 sp_307
	byte CVZN_308
	byte ZN_309
	bool C_310
	bool V_311
	word32 r8_312
	bool Z_313
	bool N_314
	word32 r2_316
	word32 r0_317
	byte CZN_319
	word32 ap_320
	byte VZN_322
	word32 r3_323
	word32 r7_324
	word32 r4_325
	word32 r6_326
	word32 r9_327
	byte CZ_328
	word32 r11_329
	call r0_303 + 2 (retsize: 4; depth: 4)
		uses: ap_286,C_305,CVZN_274,CZ_294,CZN_285,dwLoc10_9,fp_287,N_280,r0_303,r1_284,r11_295,r2_282,r3_289,r4_291,r5_281,r6_292,r7_290,r8_278,r9_293,sp_301,V_306,VZN_288,Z_279,ZN_304
		defs: ap_320,C_310,CVZN_308,CZ_328,CZN_319,fp_321,N_314,r0_317,r1_318,r11_329,r2_316,r3_323,r4_325,r5_315,r6_326,r7_324,r8_312,r9_327,sp_307,V_311,VZN_322,Z_313,ZN_309
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r3:r6 + 456 r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010EEF:
	word32 r4_154
	word32 sp_143 = sp_1065 - 0x00000004
	Mem145[sp_143:uint32] = 0x00000401
	Mem148[sp_143 - 0x00000004:word32] = Mem145[r2 + 0x0000C613:word32]
	word32 r3_149 = Mem148[r2:word32]
	branch r3_149 == 0x00000000 l00010F08
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F08:
	r4_154 = r7 + 39
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010EFF:
	r4_154 = r7 + 40
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F0C:
	Mem156[sp_143 - 0x00000008:word32] = r4_154
	Mem159[sp_143 - 0x0000000C:word32] = Mem156[r2 + 0x0000C60F:word32]
	branch r3_149 == 0x00000000 l00010F24
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F24:
	r3_149 = r6 + 456
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F18:
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F29:
	Mem166[sp_143 - 0x00000010:word32] = r3_149
	Mem169[sp_143 - 0x00000014:word32] = r6 + 340
	Mem172[sp_143 - 0x00000018:word32] = r2 + 1515
	word32 sp_176
	byte CVZN_177
	byte ZN_178
	bool C_179
	bool V_180
	word32 r8_181
	bool Z_182
	bool N_183
	word32 r5_184
	word32 r2_185
	word32 r0_186
	word32 r1_187
	byte CZN_188
	word32 ap_189
	word32 fp_190
	byte VZN_191
	word32 r3_192
	word32 r7_193
	word32 r4_194
	word32 r6_195
	word32 r9_196
	byte CZ_197
	word32 r11_198
	call Mem172[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_90,C_174,CVZN_86,CZ_73,CZN_80,dwLoc10_9,fp_89,N_84,r0_87,r1_81,r11_72,r2_82,r3_164,r4_154,r5_83,r6_75,r7_77,r8_85,r9_74,sp_170,V_175,VZN_79,Z_161,ZN_173
		defs: ap_189,C_179,CVZN_177,CZ_197,CZN_188,fp_190,N_183,r0_186,r1_187,r11_198,r2_185,r3_192,r4_194,r5_184,r6_195,r7_193,r8_181,r9_196,sp_176,V_180,VZN_191,Z_182,ZN_178
	Mem200[sp_176 - 0x00000004:word32] = r0_186
	Mem203[sp_176 - 0x00000008:word32] = r2_185 + 1515
	Mem205[sp_176 - 0x0000000C:word32] = r2_185
	word32 r0_206 = Mem205[r2_185 + 0x0000C839:word32]
	word32 sp_210
	byte CVZN_211
	byte ZN_212
	bool C_213
	bool V_214
	word32 r8_215
	bool Z_216
	bool N_217
	word32 r2_219
	word32 r0_220
	byte CZN_222
	word32 ap_223
	byte VZN_225
	word32 r3_226
	word32 r7_227
	word32 r4_228
	word32 r6_229
	word32 r9_230
	byte CZ_231
	word32 r11_232
	call r0_206 + 2 (retsize: 4; depth: 4)
		uses: ap_189,C_208,CVZN_177,CZ_197,CZN_188,dwLoc10_9,fp_190,N_183,r0_206,r1_187,r11_198,r2_185,r3_192,r4_194,r5_184,r6_195,r7_193,r8_181,r9_196,sp_204,V_209,VZN_191,Z_182,ZN_207
		defs: ap_223,C_213,CVZN_211,CZ_231,CZN_222,fp_224,N_217,r0_220,r1_221,r11_232,r2_219,r3_226,r4_228,r5_218,r6_229,r7_227,r8_215,r9_230,sp_210,V_214,VZN_225,Z_216,ZN_212
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010EE4:
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F98:
	word32 r1_118
	branch r5_106 == 0x00000000 l00010FA4
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r4:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FA4:
	*r1Out = SEQ(SLICE(r1_104, word24, 8), 0x09)
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r4:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010F9C:
	*r1Out = SEQ(SLICE(r1_104, word24, 8), 0x4C)
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r4:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FA7:
	word32 sp_124 = fp_112 - 0x00000004
	*spOut = sp_124
	word32 fp_125
	*fpOut = Mem0[sp_124 + 0x00000010:word32]
	word32 ap_126
	*apOut = Mem0[sp_124 + 0x0000000C:word32]
	return (int32) (int8) r1_118
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r4:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010EDC:
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FAB:
	Mem387[r2 + 0x0000C61B:word32] = Mem342[r2 + 0x0000C6AE:word32]
	fn00009A52()
	branch r0_1844 == 0x00000000 l00010FC5
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r5:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FC5:
	fn0000D4A2()
	branch r0_1844 == 0x00000000 l00010FD4
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>
// Terminates process

l00010FD4:
	branch Mem387[r2 + 0x0000C5EB:word32] != 0x00000000 l00010FF0
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FDC:
	word32 r1_1857
	word32 r4_1860
	word32 r5_1861
	r0_1844 = fn0000D39E(r0_1844, r6, fp_112, out r1_1857, out r2, out r3, out r4_1860, out r5_1861, out ap_17, out fp_112, out sp_1065)
	Mem1867[r2 + 0x0000C5EB:word32] = r0_1844
	branch r0_1844 != 0x00000000 l00010FF0
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FF0:
	Mem427[r2 + 0x0000C61F:word32] = 0x00000000
	Mem429[r2 + 0x0000C5F7:word32] = Mem427[r2 + 0x0000C5F3:word32]
	branch Mem429[r2:word32] != 0x00000000 l00011037
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011005:
	branch Mem429[r2 + 64:word32] != 0x00000000 l00011037
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001100A:
	branch Mem429[r2 + 72:word32] != 0x00000000 l00011037
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001100F:
	word32 sp_1786 = sp_1065 - 0x00000004
	Mem1787[sp_1786:word32] = 0x00000000
	Mem1790[sp_1786 - 0x00000004:word32] = Mem1787[r2 + 0x0000C613:word32]
	Mem1793[sp_1786 - 0x00000008:word32] = r7 + 43
	Mem1796[sp_1786 - 0x0000000C:word32] = r2 + 1515
	word32 sp_1800
	byte CVZN_1801
	byte ZN_1802
	bool C_1803
	bool V_1804
	word32 r8_1805
	bool Z_1806
	bool N_1807
	word32 r5_1808
	word32 r2_1809
	word32 r0_1810
	word32 r1_1811
	byte CZN_1812
	word32 ap_1813
	word32 fp_1814
	byte VZN_1815
	word32 r3_1816
	word32 r7_1817
	word32 r4_1818
	word32 r6_1819
	word32 r9_1820
	byte CZ_1821
	word32 r11_1822
	call Mem1796[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_425,C_1798,CVZN_380,CZ_367,CZN_376,dwLoc10_9,fp_424,N_353,r0_422,r1_419,r11_368,r2_420,r3_418,r4_417,r5_421,r6_365,r7_363,r8_351,r9_366,sp_1794,V_1799,VZN_361,Z_1783,ZN_1797
		defs: ap_1813,C_1803,CVZN_1801,CZ_1821,CZN_1812,fp_1814,N_1807,r0_1810,r1_1811,r11_1822,r2_1809,r3_1816,r4_1818,r5_1808,r6_1819,r7_1817,r8_1805,r9_1820,sp_1800,V_1804,VZN_1815,Z_1806,ZN_1802
	Mem1824[sp_1800 - 0x00000004:word32] = r0_1810
	Mem1827[sp_1800 - 0x00000008:word32] = r2_1809 + 1515
	Mem1829[sp_1800 - 0x0000000C:word32] = r2_1809
	word32 r0_1830 = Mem1829[r2_1809 + 0x0000C839:word32]
	byte CVZN_1835
	byte ZN_1836
	bool C_1837
	bool V_1838
	bool Z_1840
	bool N_1841
	word32 r5_1842
	word32 r1_1845
	byte CZN_1846
	byte VZN_1849
	word32 r4_1852
	byte CZ_1855
	word32 r11_1856
	call r0_1830 + 2 (retsize: 4; depth: 4)
		uses: ap_1813,C_1832,CVZN_1801,CZ_1821,CZN_1812,dwLoc10_9,fp_1814,N_1807,r0_1830,r1_1811,r11_1822,r2_1809,r3_1816,r4_1818,r5_1808,r6_1819,r7_1817,r8_1805,r9_1820,sp_1828,V_1833,VZN_1815,Z_1806,ZN_1831
		defs: ap_1847,C_1837,CVZN_1835,CZ_1855,CZN_1846,fp_1848,N_1841,r0_1844,r1_1845,r11_1856,r2_1843,r3_1850,r4_1852,r5_1842,r6_1853,r7_1851,r8_1839,r9_1854,sp_1834,V_1838,VZN_1849,Z_1840,ZN_1836
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011037:
	word32 r8_1441
	word32 r3_1588
	word32 r7_1082
	word32 r6_1084
	word32 ap_1770
	word32 fp_1771
	word32 r9_1774
	r9_1774 = r9_1854
	r6_1084 = r6
	r7_1082 = r7
	r3_1588 = r3
	r8_1441 = r8_1839
	fp_1771 = fp_112
	ap_1770 = ap_17
	branch Mem429[r2:word32] == 0x00000000 l00011060
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001103B:
	Mem1746[sp_1065 - 0x00000004:word32] = Mem429[r2 + 0x0000C61B:word32]
	word32 r1_1750
	word32 r3_1752
	word32 r4_1753
	word32 r5_1754
	word32 r7_1755
	word32 ap_1756
	word32 fp_1757
	word32 r0_1759 = fn000117AA(r0_1844, r2, r6, r8_1839, r9_1854, ap_17, fp_112, out r1_1750, out r2, out r3_1752, out r4_1753, out r5_1754, out r7_1755, out ap_1756, out fp_1757, out sp_1065)
	branch r0_1759 == 0x00000000 l0001104E
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001104E:
	word32 r11_1769
	word32 r0_1773 = fn00012A2A(r0_1759, r2, r4_1753, r5_1754, ap_1756, fp_1757, out r3_1588, out r6_1084, out r7_1082, out r8_1441, out r11_1769, out ap_1770, out fp_1771, out sp_1065)
	r9_1774 = r0_1773
	branch r0_1773 <= 0x00000001 l00011060
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011060:
	branch Mem429[r2:word32] == 0x00000000 l00011067
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011067:
	word32 r3_1580
	word32 r0_1576 = Mem429[r2 + 0x0000C61B:word32]
	branch r0_1576 >= 0x000101D0 l0001107C
// DataOut: ap fp pc r0 r10 r11 r2 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001107C:
	r3_1580 = 0x000101D0
// DataOut: ap fp pc r0 r10 r11 r2 r3 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011077:
	r3_1580 = r0_1576
// DataOut: ap fp pc r0 r10 r11 r2 r3 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011083:
	Mem1582[sp_1065 - 0x00000004:word32] = r3_1580
	word32 r1_1586
	word32 r4_1589
	word32 r5_1590
	word32 ap_1592
	word32 fp_1593
	branch fn000117AA(r0_1576, r2, r6_1084, r8_1441, r9_1774, ap_1770, fp_1771, out r1_1586, out r2, out r3_1588, out r4_1589, out r5_1590, out r7_1082, out ap_1592, out fp_1593, out sp_1065) != 0x00000000 l000110EF
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001108F:
	word32 r4_1601 = 0x00000000
	branch Mem1582[r2 + 0x0000C692:word16] == 0x0000 l000110E7
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011099:
	branch Mem1582[r2 + 92:word32] > 0x00000000 l000110AA
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:0x00000000 r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001109E:
	branch Mem1582[r2 + 92:word32] != 0x00000000 l000110E7
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:0x00000000 r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000110A0:
	branch Mem1582[r2 + 72:word32] != 0x00000000 l000110E7
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:0x00000000 r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000110A5:
	branch Mem1582[r2 + 64:word32] != 0x00000000 l000110E7
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:0x00000000 r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000110AA:
	Mem1639[sp_1065 - 0x00000004:word32] = 0x00000001
	Mem1642[sp_1065 - 0x00000008:uint32] = (uint32) Mem1639[r2 + 0x0000C692:word16]
	word32 r11_1646
	word32 ap_1647
	word32 fp_1648
	word32 r0_1650 = fn0000DC76(ap_1592, fp_1593, out r11_1646, out ap_1647, out fp_1648, out sp_1065)
	branch r0_1650 == 0x00000000 l000110E7
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:0x00000000 r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000110BE:
	Mem1657[sp_1065 - 0x00000004:uint32] = 0x00000401
	Mem1660[sp_1065 - 0x00000008:word32] = r6_1084 + 1864
	Mem1663[sp_1065 - 0x0000000C:word32] = r2 + 1515
	word32 sp_1667
	byte CVZN_1668
	byte ZN_1669
	bool C_1670
	bool V_1671
	word32 r8_1672
	bool Z_1673
	bool N_1674
	word32 r5_1675
	word32 r2_1676
	word32 r0_1677
	word32 r1_1678
	byte CZN_1679
	word32 ap_1680
	word32 fp_1681
	byte VZN_1682
	word32 r3_1683
	word32 r7_1684
	word32 r4_1685
	word32 r6_1686
	word32 r9_1687
	byte CZ_1688
	word32 r11_1689
	call Mem1663[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1647,C_1665,CVZN_1636,CZ_1634,CZN_1633,dwLoc10_9,fp_1648,N_1631,r0_1650,r1_1586,r11_1646,r2_1587,r3_1588,r4_1601,r5_1590,r6_510,r7_1591,r8_518,r9_1596,sp_1661,V_1666,VZN_1637,Z_1652,ZN_1664
		defs: ap_1680,C_1670,CVZN_1668,CZ_1688,CZN_1679,fp_1681,N_1674,r0_1677,r1_1678,r11_1689,r2_1676,r3_1683,r4_1685,r5_1675,r6_1686,r7_1684,r8_1672,r9_1687,sp_1667,V_1671,VZN_1682,Z_1673,ZN_1669
	Mem1691[sp_1667 - 0x00000004:word32] = r0_1677
	Mem1694[sp_1667 - 0x00000008:word32] = r2_1676 + 1515
	Mem1696[sp_1667 - 0x0000000C:word32] = r2_1676
	word32 r0_1697 = Mem1696[r2_1676 + 0x0000C839:word32]
	byte CVZN_1702
	byte ZN_1703
	bool C_1704
	bool V_1705
	bool Z_1707
	bool N_1708
	word32 r5_1709
	word32 r0_1711
	word32 r1_1712
	byte CZN_1713
	word32 ap_1714
	word32 fp_1715
	byte VZN_1716
	word32 r4_1719
	word32 r9_1721
	byte CZ_1722
	word32 r11_1723
	call r0_1697 + 2 (retsize: 4; depth: 4)
		uses: ap_1680,C_1699,CVZN_1668,CZ_1688,CZN_1679,dwLoc10_9,fp_1681,N_1674,r0_1697,r1_1678,r11_1689,r2_1676,r3_1683,r4_1685,r5_1675,r6_1686,r7_1684,r8_1672,r9_1687,sp_1695,V_1700,VZN_1682,Z_1673,ZN_1698
		defs: ap_1714,C_1704,CVZN_1702,CZ_1722,CZN_1713,fp_1715,N_1708,r0_1711,r1_1712,r11_1723,r2_1710,r3_1717,r4_1719,r5_1709,r6_1720,r7_1718,r8_1706,r9_1721,sp_1701,V_1705,VZN_1716,Z_1707,ZN_1703
	r4_1601 = 0x00000001
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:0x00000000 r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000110E7:
	branch r4_1601 <= 0x00000001 l00011110
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011064:
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011110:
	branch Mem429[r2 + 92:word32] <= 0x00000000 l0001112A
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011115:
	branch Mem429[r2:word32] != 0x00000000 l0001112A
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001112A:
	word32 r3_1534 = SEQ(SLICE(r3_1588, word24, 8), 0x00)
	branch Mem429[r2:word32] != 0x00000000 l0001113B
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011130:
	branch (uint32) Mem429[r2 + 0x0000C682:word16] == 0x00000000 l0001113B
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011139:
	r3_1534 = SEQ(SLICE(r3_1534, word24, 8), (byte) r3_1534 + 0x01)
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001113B:
	word32 r4_1435 = (int32) (int8) r3_1534
	branch Mem429[r2:word32] != 0x00000000 l00011145
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011145:
	branch Mem429[r2 + 0x0000C682:word16] != Mem429[r2 + 0x0000C684:word16] l00011155
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011155:
	branch Mem429[r2 + 0x0000C682:word16] <=u Mem429[r2 + 0x0000C684:word16] l0001119C
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001119C:
	word32 sp_1445 = sp_1065 - 0x00000004
	Mem1447[sp_1445:uint32] = 0x00000401
	Mem1450[sp_1445 - 0x00000004:uint32] = (uint32) Mem1447[r2 + 0x0000C684:word16]
	Mem1453[sp_1445 - 0x00000008:uint32] = (uint32) Mem1450[r2 + 0x0000C682:word16]
	Mem1456[sp_1445 - 0x0000000C:word32] = Mem1453[r2 + 0x0000C613:word32]
	Mem1459[sp_1445 - 0x00000010:word32] = r6_1084 + 662
	Mem1462[sp_1445 - 0x00000014:word32] = r2 + 1515
	word32 sp_1466
	byte CVZN_1467
	byte ZN_1468
	bool C_1469
	bool V_1470
	word32 r8_1471
	bool Z_1472
	bool N_1473
	word32 r5_1474
	word32 r2_1475
	word32 r0_1476
	word32 r1_1477
	byte CZN_1478
	word32 ap_1479
	word32 fp_1480
	byte VZN_1481
	word32 r3_1482
	word32 r7_1483
	word32 r4_1484
	word32 r6_1485
	word32 r9_1486
	byte CZ_1487
	word32 r11_1488
	call Mem1462[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_546,C_1464,CVZN_1360,CZ_1358,CZN_1353,dwLoc10_9,fp_545,N_1357,r0_559,r1_536,r11_527,r2_537,r3_557,r4_560,r5_538,r6_530,r7_532,r8_540,r9_529,sp_1460,V_1465,VZN_1361,Z_1356,ZN_1463
		defs: ap_1479,C_1469,CVZN_1467,CZ_1487,CZN_1478,fp_1480,N_1473,r0_1476,r1_1477,r11_1488,r2_1475,r3_1482,r4_1484,r5_1474,r6_1485,r7_1483,r8_1471,r9_1486,sp_1466,V_1470,VZN_1481,Z_1472,ZN_1468
	Mem1490[sp_1466 - 0x00000004:word32] = r0_1476
	Mem1493[sp_1466 - 0x00000008:word32] = r2_1475 + 1515
	Mem1495[sp_1466 - 0x0000000C:word32] = r2_1475
	word32 r0_1496 = Mem1495[r2_1475 + 0x0000C839:word32]
	byte CVZN_1501
	byte ZN_1502
	bool C_1503
	bool V_1504
	bool Z_1506
	bool N_1507
	word32 r5_1508
	word32 r0_1510
	word32 r1_1511
	byte CZN_1512
	word32 ap_1513
	word32 fp_1514
	byte VZN_1515
	word32 r3_1516
	word32 r9_1520
	byte CZ_1521
	word32 r11_1522
	call r0_1496 + 2 (retsize: 4; depth: 4)
		uses: ap_1479,C_1498,CVZN_1467,CZ_1487,CZN_1478,dwLoc10_9,fp_1480,N_1473,r0_1496,r1_1477,r11_1488,r2_1475,r3_1482,r4_1484,r5_1474,r6_1485,r7_1483,r8_1471,r9_1486,sp_1494,V_1499,VZN_1481,Z_1472,ZN_1497
		defs: ap_1513,C_1503,CVZN_1501,CZ_1521,CZN_1512,fp_1514,N_1507,r0_1510,r1_1511,r11_1522,r2_1509,r3_1516,r4_1518,r5_1508,r6_1519,r7_1517,r8_1505,r9_1520,sp_1500,V_1504,VZN_1515,Z_1506,ZN_1502
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011157:
	word32 sp_1362 = sp_1065 - 0x00000004
	Mem1364[sp_1362:uint32] = 0x00000401
	Mem1367[sp_1362 - 0x00000004:uint32] = (uint32) Mem1364[r2 + 0x0000C684:word16]
	Mem1370[sp_1362 - 0x00000008:uint32] = (uint32) Mem1367[r2 + 0x0000C682:word16]
	Mem1373[sp_1362 - 0x0000000C:word32] = Mem1370[r2 + 0x0000C613:word32]
	Mem1376[sp_1362 - 0x00000010:word32] = r6_1084 + 515
	Mem1379[sp_1362 - 0x00000014:word32] = r2 + 1515
	word32 sp_1383
	byte CVZN_1384
	byte ZN_1385
	bool C_1386
	bool V_1387
	word32 r8_1388
	bool Z_1389
	bool N_1390
	word32 r5_1391
	word32 r2_1392
	word32 r0_1393
	word32 r1_1394
	byte CZN_1395
	word32 ap_1396
	word32 fp_1397
	byte VZN_1398
	word32 r3_1399
	word32 r7_1400
	word32 r4_1401
	word32 r6_1402
	word32 r9_1403
	byte CZ_1404
	word32 r11_1405
	call Mem1379[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_546,C_1381,CVZN_1360,CZ_1358,CZN_1353,dwLoc10_9,fp_545,N_1357,r0_559,r1_536,r11_527,r2_537,r3_557,r4_560,r5_538,r6_530,r7_532,r8_540,r9_529,sp_1377,V_1382,VZN_1361,Z_1356,ZN_1380
		defs: ap_1396,C_1386,CVZN_1384,CZ_1404,CZN_1395,fp_1397,N_1390,r0_1393,r1_1394,r11_1405,r2_1392,r3_1399,r4_1401,r5_1391,r6_1402,r7_1400,r8_1388,r9_1403,sp_1383,V_1387,VZN_1398,Z_1389,ZN_1385
	Mem1407[sp_1383 - 0x00000004:word32] = r0_1393
	Mem1410[sp_1383 - 0x00000008:word32] = r2_1392 + 1515
	Mem1412[sp_1383 - 0x0000000C:word32] = r2_1392
	word32 r0_1413 = Mem1412[r2_1392 + 0x0000C839:word32]
	byte CVZN_1418
	byte ZN_1419
	bool C_1420
	bool V_1421
	word32 r8_1422
	bool Z_1423
	bool N_1424
	word32 r5_1425
	word32 r0_1427
	word32 r1_1428
	byte CZN_1429
	word32 ap_1430
	word32 fp_1431
	byte VZN_1432
	word32 r3_1433
	word32 r9_1437
	byte CZ_1438
	word32 r11_1439
	call r0_1413 + 2 (retsize: 4; depth: 4)
		uses: ap_1396,C_1415,CVZN_1384,CZ_1404,CZN_1395,dwLoc10_9,fp_1397,N_1390,r0_1413,r1_1394,r11_1405,r2_1392,r3_1399,r4_1401,r5_1391,r6_1402,r7_1400,r8_1388,r9_1403,sp_1411,V_1416,VZN_1398,Z_1389,ZN_1414
		defs: ap_1430,C_1420,CVZN_1418,CZ_1438,CZN_1429,fp_1431,N_1424,r0_1427,r1_1428,r11_1439,r2_1426,r3_1433,r4_1435,r5_1425,r6_1436,r7_1434,r8_1422,r9_1437,sp_1417,V_1421,VZN_1432,Z_1423,ZN_1419
	r8_1441 = 0x00000001
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011152:
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011142:
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000111D9:
	branch r8_1441 == 0x00000000 l000111E0
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000111E0:
	branch r4_1435 == 0x00000000 l00011213
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000111E4:
	word32 sp_1277 = sp_1065 - 0x00000004
	Mem1279[sp_1277:uint32] = 0x00000401
	Mem1282[sp_1277 - 0x00000004:word32] = Mem1279[r2 + 0x0000C613:word32]
	Mem1285[sp_1277 - 0x00000008:word32] = r6_1084 + 844
	Mem1288[sp_1277 - 0x0000000C:word32] = r2 + 1515
	word32 sp_1292
	byte CVZN_1293
	byte ZN_1294
	bool C_1295
	bool V_1296
	word32 r8_1297
	bool Z_1298
	bool N_1299
	word32 r5_1300
	word32 r2_1301
	word32 r0_1302
	word32 r1_1303
	byte CZN_1304
	word32 ap_1305
	word32 fp_1306
	byte VZN_1307
	word32 r3_1308
	word32 r7_1309
	word32 r4_1310
	word32 r6_1311
	word32 r9_1312
	byte CZ_1313
	word32 r11_1314
	call Mem1288[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_583,C_1290,CVZN_579,CZ_566,CZN_573,dwLoc10_9,fp_582,N_577,r0_580,r1_574,r11_565,r2_575,r3_571,r4_569,r5_576,r6_568,r7_570,r8_578,r9_567,sp_1286,V_1291,VZN_572,Z_746,ZN_1289
		defs: ap_1305,C_1295,CVZN_1293,CZ_1313,CZN_1304,fp_1306,N_1299,r0_1302,r1_1303,r11_1314,r2_1301,r3_1308,r4_1310,r5_1300,r6_1311,r7_1309,r8_1297,r9_1312,sp_1292,V_1296,VZN_1307,Z_1298,ZN_1294
	Mem1316[sp_1292 - 0x00000004:word32] = r0_1302
	Mem1319[sp_1292 - 0x00000008:word32] = r2_1301 + 1515
	Mem1321[sp_1292 - 0x0000000C:word32] = r2_1301
	word32 r0_1322 = Mem1321[r2_1301 + 0x0000C839:word32]
	byte CVZN_1327
	byte ZN_1328
	bool C_1329
	bool V_1330
	word32 r8_1331
	bool Z_1332
	bool N_1333
	word32 r5_1334
	word32 r0_1336
	word32 r1_1337
	byte CZN_1338
	word32 ap_1339
	word32 fp_1340
	byte VZN_1341
	word32 r3_1342
	word32 r4_1344
	word32 r9_1346
	byte CZ_1347
	word32 r11_1348
	call r0_1322 + 2 (retsize: 4; depth: 4)
		uses: ap_1305,C_1324,CVZN_1293,CZ_1313,CZN_1304,dwLoc10_9,fp_1306,N_1299,r0_1322,r1_1303,r11_1314,r2_1301,r3_1308,r4_1310,r5_1300,r6_1311,r7_1309,r8_1297,r9_1312,sp_1320,V_1325,VZN_1307,Z_1298,ZN_1323
		defs: ap_1339,C_1329,CVZN_1327,CZ_1347,CZN_1338,fp_1340,N_1333,r0_1336,r1_1337,r11_1348,r2_1335,r3_1342,r4_1344,r5_1334,r6_1345,r7_1343,r8_1331,r9_1346,sp_1326,V_1330,VZN_1341,Z_1332,ZN_1328
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011213:
	Mem768[r2 + 0x0000C623:word32] = Mem429[r2 + 124:word32] - Mem429[r2 + 128:word32]
	word32 r4_769 = Mem768[r2 + 0x0000C623:word32]
	branch r4_769 >= 0x00000000 l0001125C
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001125C:
	branch r4_769 > 0x00000000 l00011263
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011263:
	branch Mem768[r2 + 0x0000C68E:word32] != 0x00000000 l000112B8
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001126B:
	branch Mem768[r2 + 0x0000C68A:word32] == 0x00000000 l000112B8
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000112B8:
	word32 r3_1107
	word32 sp_1101 = sp_1065 - 0x00000004
	Mem1103[sp_1101:uint32] = 0x00000401
	branch r4_769 != 0x00000001 l000112C8
// DataOut: fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000112C8:
	r3_1107 = r7_1082 + 57
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000112C2:
	r3_1107 = r7_1082 + 59
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000112CC:
	Mem1109[sp_1101 - 0x00000004:word32] = r3_1107
	Mem1111[sp_1101 - 0x00000008:word32] = r4_769
	Mem1114[sp_1101 - 0x0000000C:word32] = Mem1111[r2 + 0x0000C613:word32]
	Mem1117[sp_1101 - 0x00000010:word32] = r6_1084 + 1102
	Mem1120[sp_1101 - 0x00000014:word32] = r2 + 1515
	word32 sp_1124
	byte CVZN_1125
	byte ZN_1126
	bool C_1127
	bool V_1128
	word32 r8_1129
	bool Z_1130
	bool N_1131
	word32 r5_1132
	word32 r2_1133
	word32 r0_1134
	word32 r1_1135
	byte CZN_1136
	word32 ap_1137
	word32 fp_1138
	byte VZN_1139
	word32 r3_1140
	word32 r7_1141
	word32 r4_1142
	word32 r6_1143
	word32 r9_1144
	byte CZ_1145
	word32 r11_1146
	call Mem1120[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_766,C_1122,CVZN_761,CZ_750,CZN_1104,dwLoc10_9,fp_765,N_771,r0_763,r1_757,r11_749,r2_758,r3_1107,r4_769,r5_759,r6_752,r7_753,r8_760,r9_751,sp_1118,V_1123,VZN_755,Z_1105,ZN_1121
		defs: ap_1137,C_1127,CVZN_1125,CZ_1145,CZN_1136,fp_1138,N_1131,r0_1134,r1_1135,r11_1146,r2_1133,r3_1140,r4_1142,r5_1132,r6_1143,r7_1141,r8_1129,r9_1144,sp_1124,V_1128,VZN_1139,Z_1130,ZN_1126
	Mem1148[sp_1124 - 0x00000004:word32] = r0_1134
	Mem1151[sp_1124 - 0x00000008:word32] = r2_1133 + 1515
	Mem1153[sp_1124 - 0x0000000C:word32] = r2_1133
	word32 r0_1154 = Mem1153[r2_1133 + 0x0000C839:word32]
	byte CVZN_1159
	byte ZN_1160
	bool C_1161
	bool V_1162
	word32 r8_1163
	bool Z_1164
	bool N_1165
	word32 r5_1166
	word32 r0_1168
	word32 r1_1169
	byte CZN_1170
	word32 ap_1171
	word32 fp_1172
	byte VZN_1173
	word32 r3_1174
	word32 r4_1176
	word32 r9_1178
	byte CZ_1179
	word32 r11_1180
	call r0_1154 + 2 (retsize: 4; depth: 4)
		uses: ap_1137,C_1156,CVZN_1125,CZ_1145,CZN_1136,dwLoc10_9,fp_1138,N_1131,r0_1154,r1_1135,r11_1146,r2_1133,r3_1140,r4_1142,r5_1132,r6_1143,r7_1141,r8_1129,r9_1144,sp_1152,V_1157,VZN_1139,Z_1130,ZN_1155
		defs: ap_1171,C_1161,CVZN_1159,CZ_1179,CZN_1170,fp_1172,N_1165,r0_1168,r1_1169,r11_1180,r2_1167,r3_1174,r4_1176,r5_1166,r6_1177,r7_1175,r8_1163,r9_1178,sp_1158,V_1162,VZN_1173,Z_1164,ZN_1160
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011273:
	word32 sp_1197 = sp_1065 - 0x00000004
	Mem1199[sp_1197:uint32] = 0x00000401
	Mem1202[sp_1197 - 0x00000004:word32] = Mem1199[r2 + 0x0000C613:word32]
	Mem1205[sp_1197 - 0x00000008:word32] = r6_1084 + 1275
	Mem1208[sp_1197 - 0x0000000C:word32] = r2 + 1515
	word32 sp_1212
	byte CVZN_1213
	byte ZN_1214
	bool C_1215
	bool V_1216
	word32 r8_1217
	bool Z_1218
	bool N_1219
	word32 r5_1220
	word32 r2_1221
	word32 r0_1222
	word32 r1_1223
	byte CZN_1224
	word32 ap_1225
	word32 fp_1226
	byte VZN_1227
	word32 r3_1228
	word32 r7_1229
	word32 r4_1230
	word32 r6_1231
	word32 r9_1232
	byte CZ_1233
	word32 r11_1234
	call Mem1208[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_766,C_1210,CVZN_761,CZ_750,CZN_756,dwLoc10_9,fp_765,N_771,r0_763,r1_757,r11_749,r2_758,r3_754,r4_769,r5_759,r6_752,r7_753,r8_760,r9_751,sp_1206,V_1211,VZN_755,Z_1194,ZN_1209
		defs: ap_1225,C_1215,CVZN_1213,CZ_1233,CZN_1224,fp_1226,N_1219,r0_1222,r1_1223,r11_1234,r2_1221,r3_1228,r4_1230,r5_1220,r6_1231,r7_1229,r8_1217,r9_1232,sp_1212,V_1216,VZN_1227,Z_1218,ZN_1214
	Mem1236[sp_1212 - 0x00000004:word32] = r0_1222
	Mem1239[sp_1212 - 0x00000008:word32] = r2_1221 + 1515
	Mem1241[sp_1212 - 0x0000000C:word32] = r2_1221
	word32 r0_1242 = Mem1241[r2_1221 + 0x0000C839:word32]
	byte CVZN_1247
	byte ZN_1248
	bool C_1249
	bool V_1250
	word32 r8_1251
	bool Z_1252
	bool N_1253
	word32 r5_1254
	word32 r0_1256
	word32 r1_1257
	byte CZN_1258
	word32 ap_1259
	word32 fp_1260
	byte VZN_1261
	word32 r3_1262
	word32 r4_1264
	word32 r9_1266
	byte CZ_1267
	word32 r11_1268
	call r0_1242 + 2 (retsize: 4; depth: 4)
		uses: ap_1225,C_1244,CVZN_1213,CZ_1233,CZN_1224,dwLoc10_9,fp_1226,N_1219,r0_1242,r1_1223,r11_1234,r2_1221,r3_1228,r4_1230,r5_1220,r6_1231,r7_1229,r8_1217,r9_1232,sp_1240,V_1245,VZN_1227,Z_1218,ZN_1243
		defs: ap_1259,C_1249,CVZN_1247,CZ_1267,CZN_1258,fp_1260,N_1253,r0_1256,r1_1257,r11_1268,r2_1255,r3_1262,r4_1264,r5_1254,r6_1265,r7_1263,r8_1251,r9_1266,sp_1246,V_1250,VZN_1261,Z_1252,ZN_1248
	Mem1270[r2 + 0x0000C68E:word32] = Mem1241[r2 + 0x0000C623:word32]
	Mem1272[r2 + 0x0000C623:word32] = 0x00000000
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011260:
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011227:
	word32 sp_1013 = sp_1065 - 0x00000004
	Mem1015[sp_1013:uint32] = 0x00000401
	Mem1018[sp_1013 - 0x00000004:word32] = -r4_769
	Mem1021[sp_1013 - 0x00000008:word32] = Mem1018[r2 + 0x0000C613:word32]
	Mem1024[sp_1013 - 0x0000000C:word32] = r6_1084 + 1199
	Mem1027[sp_1013 - 0x00000010:word32] = r2 + 1515
	word32 sp_1031
	byte CVZN_1032
	byte ZN_1033
	bool C_1034
	bool V_1035
	word32 r8_1036
	bool Z_1037
	bool N_1038
	word32 r5_1039
	word32 r2_1040
	word32 r0_1041
	word32 r1_1042
	byte CZN_1043
	word32 ap_1044
	word32 fp_1045
	byte VZN_1046
	word32 r3_1047
	word32 r7_1048
	word32 r4_1049
	word32 r6_1050
	word32 r9_1051
	byte CZ_1052
	word32 r11_1053
	call Mem1027[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_766,C_1029,CVZN_761,CZ_750,CZN_756,dwLoc10_9,fp_765,N_771,r0_763,r1_757,r11_749,r2_758,r3_754,r4_769,r5_759,r6_752,r7_753,r8_760,r9_751,sp_1025,V_1030,VZN_755,Z_762,ZN_1028
		defs: ap_1044,C_1034,CVZN_1032,CZ_1052,CZN_1043,fp_1045,N_1038,r0_1041,r1_1042,r11_1053,r2_1040,r3_1047,r4_1049,r5_1039,r6_1050,r7_1048,r8_1036,r9_1051,sp_1031,V_1035,VZN_1046,Z_1037,ZN_1033
	Mem1055[sp_1031 - 0x00000004:word32] = r0_1041
	Mem1058[sp_1031 - 0x00000008:word32] = r2_1040 + 1515
	Mem1060[sp_1031 - 0x0000000C:word32] = r2_1040
	word32 r0_1061 = Mem1060[r2_1040 + 0x0000C839:word32]
	byte CVZN_1066
	byte ZN_1067
	bool C_1068
	bool V_1069
	word32 r8_1070
	bool Z_1071
	bool N_1072
	word32 r5_1073
	word32 r0_1075
	word32 r1_1076
	byte CZN_1077
	word32 ap_1078
	word32 fp_1079
	byte VZN_1080
	word32 r3_1081
	word32 r4_1083
	word32 r9_1085
	byte CZ_1086
	word32 r11_1087
	call r0_1061 + 2 (retsize: 4; depth: 4)
		uses: ap_1044,C_1063,CVZN_1032,CZ_1052,CZN_1043,dwLoc10_9,fp_1045,N_1038,r0_1061,r1_1042,r11_1053,r2_1040,r3_1047,r4_1049,r5_1039,r6_1050,r7_1048,r8_1036,r9_1051,sp_1059,V_1064,VZN_1046,Z_1037,ZN_1062
		defs: ap_1078,C_1068,CVZN_1066,CZ_1086,CZN_1077,fp_1079,N_1072,r0_1075,r1_1076,r11_1087,r2_1074,r3_1081,r4_1083,r5_1073,r6_1084,r7_1082,r8_1070,r9_1085,sp_1065,V_1069,VZN_1080,Z_1071,ZN_1067
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000112FA:
	branch Mem768[r2 + 128:word32] == 0x00000000 l00011303
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011303:
	branch Mem768[r2 + 0x0000C68A:word32] == 0x00000000 l0001130E
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001130E:
	word32 sp_812
	word32 r2_811
	branch Mem768[r2:word32] == 0x00000000 l00011348
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011348:
	word32 sp_941 = sp_1065 - 0x00000004
	Mem943[sp_941:uint32] = 0x00000401
	Mem946[sp_941 - 0x00000004:word32] = Mem943[r2 + 0x0000C613:word32]
	Mem949[sp_941 - 0x00000008:word32] = r6_1084 + 1352
	Mem952[sp_941 - 0x0000000C:word32] = r2 + 1515
	word32 sp_956
	byte CVZN_957
	byte ZN_958
	bool C_959
	bool V_960
	word32 r8_961
	bool Z_962
	bool N_963
	word32 r5_964
	word32 r2_965
	word32 r0_966
	word32 r1_967
	byte CZN_968
	word32 ap_969
	word32 fp_970
	byte VZN_971
	word32 r3_972
	word32 r7_973
	word32 r4_974
	word32 r6_975
	word32 r9_976
	byte CZ_977
	word32 r11_978
	call Mem952[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_792,C_954,CVZN_788,CZ_775,CZN_782,dwLoc10_9,fp_791,N_786,r0_789,r1_783,r11_774,r2_784,r3_780,r4_778,r5_785,r6_777,r7_779,r8_787,r9_776,sp_950,V_955,VZN_781,Z_808,ZN_953
		defs: ap_969,C_959,CVZN_957,CZ_977,CZN_968,fp_970,N_963,r0_966,r1_967,r11_978,r2_965,r3_972,r4_974,r5_964,r6_975,r7_973,r8_961,r9_976,sp_956,V_960,VZN_971,Z_962,ZN_958
	Mem980[sp_956 - 0x00000004:word32] = r0_966
	Mem983[sp_956 - 0x00000008:word32] = r2_965 + 1515
	Mem985[sp_956 - 0x0000000C:word32] = r2_965
	word32 r0_986 = Mem985[r2_965 + 0x0000C839:word32]
	byte CVZN_991
	byte ZN_992
	bool C_993
	bool V_994
	word32 r8_995
	bool Z_996
	bool N_997
	word32 r5_998
	word32 r0_1000
	word32 r1_1001
	byte CZN_1002
	word32 ap_1003
	word32 fp_1004
	byte VZN_1005
	word32 r3_1006
	word32 r7_1007
	word32 r4_1008
	word32 r6_1009
	word32 r9_1010
	byte CZ_1011
	word32 r11_1012
	call r0_986 + 2 (retsize: 4; depth: 4)
		uses: ap_969,C_988,CVZN_957,CZ_977,CZN_968,dwLoc10_9,fp_970,N_963,r0_986,r1_967,r11_978,r2_965,r3_972,r4_974,r5_964,r6_975,r7_973,r8_961,r9_976,sp_984,V_989,VZN_971,Z_962,ZN_987
		defs: ap_1003,C_993,CVZN_991,CZ_1011,CZN_1002,fp_1004,N_997,r0_1000,r1_1001,r11_1012,r2_999,r3_1006,r4_1008,r5_998,r6_1009,r7_1007,r8_995,r9_1010,sp_990,V_994,VZN_1005,Z_996,ZN_992
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011312:
	word32 r3_864
	word32 sp_859 = sp_1065 - 0x00000004
	Mem860[sp_859:word32] = 0x00000000
	branch Mem860[r2 + 36:word32] <= 0x00000009 l00011320
// DataOut: fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011320:
	r3_864 = r7_1082 + 78
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001131A:
	r3_864 = r7_1082 + 79
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011324:
	Mem866[sp_859 - 0x00000004:word32] = r3_864
	Mem869[sp_859 - 0x00000008:word32] = r7_1082 + 60
	Mem872[sp_859 - 0x0000000C:word32] = r2 + 1515
	word32 sp_876
	byte CVZN_877
	byte ZN_878
	bool C_879
	bool V_880
	word32 r8_881
	bool Z_882
	bool N_883
	word32 r5_884
	word32 r2_885
	word32 r0_886
	word32 r1_887
	byte CZN_888
	word32 ap_889
	word32 fp_890
	byte VZN_891
	word32 r3_892
	word32 r7_893
	word32 r4_894
	word32 r6_895
	word32 r9_896
	byte CZ_897
	word32 r11_898
	call Mem872[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_792,C_874,CVZN_788,CZ_775,CZN_861,dwLoc10_9,fp_791,N_786,r0_789,r1_783,r11_774,r2_784,r3_864,r4_778,r5_785,r6_777,r7_779,r8_787,r9_776,sp_870,V_875,VZN_781,Z_808,ZN_873
		defs: ap_889,C_879,CVZN_877,CZ_897,CZN_888,fp_890,N_883,r0_886,r1_887,r11_898,r2_885,r3_892,r4_894,r5_884,r6_895,r7_893,r8_881,r9_896,sp_876,V_880,VZN_891,Z_882,ZN_878
	Mem900[sp_876 - 0x00000004:word32] = r0_886
	Mem903[sp_876 - 0x00000008:word32] = r2_885 + 1515
	Mem905[sp_876 - 0x0000000C:word32] = r2_885
	word32 r0_906 = Mem905[r2_885 + 0x0000C839:word32]
	byte CVZN_911
	byte ZN_912
	bool C_913
	bool V_914
	word32 r8_915
	bool Z_916
	bool N_917
	word32 r5_918
	word32 r0_920
	word32 r1_921
	byte CZN_922
	word32 ap_923
	word32 fp_924
	byte VZN_925
	word32 r3_926
	word32 r7_927
	word32 r4_928
	word32 r6_929
	word32 r9_930
	byte CZ_931
	word32 r11_932
	call r0_906 + 2 (retsize: 4; depth: 4)
		uses: ap_889,C_908,CVZN_877,CZ_897,CZN_888,dwLoc10_9,fp_890,N_883,r0_906,r1_887,r11_898,r2_885,r3_892,r4_894,r5_884,r6_895,r7_893,r8_881,r9_896,sp_904,V_909,VZN_891,Z_882,ZN_907
		defs: ap_923,C_913,CVZN_911,CZ_931,CZN_922,fp_924,N_917,r0_920,r1_921,r11_932,r2_919,r3_926,r4_928,r5_918,r6_929,r7_927,r8_915,r9_930,sp_910,V_914,VZN_925,Z_916,ZN_912
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011374:
	word32 sp_813 = sp_812 - 0x00000004
	Mem815[sp_813:word32] = Mem768[r2_811 + 0x0000C617:word32]
	word32 sp_819
	byte CVZN_820
	byte ZN_821
	bool C_822
	bool V_823
	word32 r8_824
	bool Z_825
	bool N_826
	word32 r5_827
	word32 r2_828
	word32 r0_829
	word32 r1_830
	byte CZN_831
	word32 ap_832
	word32 fp_833
	byte VZN_834
	word32 r3_835
	word32 r7_836
	word32 r4_837
	word32 r6_838
	word32 r9_839
	byte CZ_840
	word32 r11_841
	call Mem815[0x0001925C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_792,C_817,CVZN_788,CZ_775,CZN_782,dwLoc10_9,fp_791,N_786,r0_789,r1_783,r11_774,r2_811,r3_780,r4_778,r5_785,r6_777,r7_779,r8_787,r9_776,sp_813,V_818,VZN_781,Z_808,ZN_816
		defs: ap_832,C_822,CVZN_820,CZ_840,CZN_831,fp_833,N_826,r0_829,r1_830,r11_841,r2_828,r3_835,r4_837,r5_827,r6_838,r7_836,r8_824,r9_839,sp_819,V_823,VZN_834,Z_825,ZN_821
	branch r9_839 <= 0x00000001 l0001138C
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001138C:
	word32 sp_856
	*spOut = fp_833 - 0x00000004
	word32 fp_857
	*fpOut = Mem815[fp_833 + 0x0000000C:word32]
	word32 ap_858
	*apOut = Mem815[fp_833 + 0x00000008:word32]
	return 0x00000001
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011386:
	word32 sp_849
	*spOut = fp_833 - 0x00000004
	word32 fp_850
	*fpOut = Mem815[fp_833 + 0x0000000C:word32]
	word32 ap_851
	*apOut = Mem815[fp_833 + 0x00000008:word32]
	return r9_839
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001130B:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011300:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011390:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000111DD:
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011742:
	word32 sp_588 = sp_1065 - 0x00000004
	Mem590[sp_588:word32] = Mem429[r2 + 0x0000C617:word32]
	word32 sp_594
	byte CVZN_595
	byte ZN_596
	bool C_597
	bool V_598
	word32 r8_599
	bool Z_600
	bool N_601
	word32 r5_602
	word32 r2_603
	word32 r0_604
	word32 r1_605
	byte CZN_606
	word32 ap_607
	byte VZN_609
	word32 r3_610
	word32 r7_611
	word32 r4_612
	word32 r6_613
	byte CZ_615
	word32 r11_616
	word32 r9_614
	word32 fp_608
	call Mem590[0x0001925C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_583,C_592,CVZN_579,CZ_566,CZN_573,dwLoc10_9,fp_582,N_577,r0_580,r1_574,r11_565,r2_575,r3_571,r4_569,r5_576,r6_568,r7_570,r8_578,r9_567,sp_588,V_593,VZN_572,Z_585,ZN_591
		defs: ap_607,C_597,CVZN_595,CZ_615,CZN_606,fp_608,N_601,r0_604,r1_605,r11_616,r2_603,r3_610,r4_612,r5_602,r6_613,r7_611,r8_599,r9_614,sp_594,V_598,VZN_609,Z_600,ZN_596
	branch Mem590[r2_603 + 72:word32] == 0x00000000 l000117A3
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011754:
	branch Mem590[r2_603:word32] != 0x00000000 l000117A3
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011758:
	branch Mem590[fp_608 + -12:word32] == 0x00000000 l000117A3
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001175D:
	Mem655[sp_594 - 0x00000004:word32] = Mem590[fp_608 + -8:word32]
	Mem658[sp_594 - 0x00000008:word32] = Mem655[r2_603 + 0x0000C613:word32]
	fn0000BDC2()
	branch r0_604 == 0x00000000 l000117A3
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>
// Terminates process

l00011771:
	Mem668[sp_594 - 0x0000000C:uint32] = 0x00000201
	Mem671[sp_594 - 0x00000010:word32] = Mem668[r2_603 + 0x0000C613:word32]
	Mem674[sp_594 - 0x00000014:word32] = r7_611 + 85
	Mem677[sp_594 - 0x00000018:word32] = r2_603 + 1515
	word32 sp_681
	byte CVZN_682
	byte ZN_683
	bool C_684
	bool V_685
	word32 r8_686
	bool Z_687
	bool N_688
	word32 r5_689
	word32 r2_690
	word32 r0_691
	word32 r1_692
	byte CZN_693
	word32 ap_694
	word32 fp_695
	byte VZN_696
	word32 r3_697
	word32 r7_698
	word32 r4_699
	word32 r6_700
	word32 r9_701
	byte CZ_702
	word32 r11_703
	call Mem677[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_607,C_679,CVZN_595,CZ_615,CZN_606,dwLoc10_9,fp_608,N_601,r0_604,r1_605,r11_616,r2_603,r3_610,r4_612,r5_602,r6_613,r7_611,r8_599,r9_614,sp_675,V_680,VZN_609,Z_663,ZN_678
		defs: ap_694,C_684,CVZN_682,CZ_702,CZN_693,fp_695,N_688,r0_691,r1_692,r11_703,r2_690,r3_697,r4_699,r5_689,r6_700,r7_698,r8_686,r9_701,sp_681,V_685,VZN_696,Z_687,ZN_683
	Mem705[sp_681 - 0x00000004:word32] = r0_691
	Mem708[sp_681 - 0x00000008:word32] = r2_690 + 1515
	Mem710[sp_681 - 0x0000000C:word32] = r2_690
	word32 r0_711 = Mem710[r2_690 + 0x0000C839:word32]
	word32 sp_715
	byte CVZN_716
	byte ZN_717
	bool C_718
	bool V_719
	word32 r8_720
	bool Z_721
	bool N_722
	word32 r5_723
	word32 r2_724
	word32 r0_725
	word32 r1_726
	byte CZN_727
	word32 ap_728
	byte VZN_730
	word32 r3_731
	word32 r7_732
	word32 r4_733
	word32 r6_734
	byte CZ_736
	word32 r11_737
	call r0_711 + 2 (retsize: 4; depth: 4)
		uses: ap_694,C_713,CVZN_682,CZ_702,CZN_693,dwLoc10_9,fp_695,N_688,r0_711,r1_692,r11_703,r2_690,r3_697,r4_699,r5_689,r6_700,r7_698,r8_686,r9_701,sp_709,V_714,VZN_696,Z_687,ZN_712
		defs: ap_728,C_718,CVZN_716,CZ_736,CZN_727,fp_729,N_722,r0_725,r1_726,r11_737,r2_724,r3_731,r4_733,r5_723,r6_734,r7_732,r8_720,r9_735,sp_715,V_719,VZN_730,Z_721,ZN_717
	branch r9_614 > 0x00000000 l000117A3
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000117A0:
	*r9Out = 0x00000001
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x000001FC r0:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000117A3:
	word32 sp_642 = fp_608 - 0x00000004
	*spOut = sp_642
	word32 fp_643
	*fpOut = Mem590[sp_642 + 0x00000010:word32]
	word32 ap_644
	*apOut = Mem590[sp_642 + 0x0000000C:word32]
	return r9_614
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011119:
	word32 sp_1540 = sp_1065 - 0x00000004
	Mem1542[sp_1540:word32] = Mem429[r2 + 0x0000C617:word32]
	word32 sp_1546
	byte CVZN_1547
	byte ZN_1548
	bool C_1549
	bool V_1550
	word32 r8_1551
	bool Z_1552
	bool N_1553
	word32 r5_1554
	word32 r2_1555
	word32 r0_1556
	word32 r1_1557
	byte CZN_1558
	word32 ap_1559
	word32 fp_1560
	byte VZN_1561
	word32 r3_1562
	word32 r7_1563
	word32 r4_1564
	word32 r6_1565
	word32 r9_1566
	byte CZ_1567
	word32 r11_1568
	call Mem1542[0x0001925C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_546,C_1544,CVZN_541,CZ_528,CZN_535,dwLoc10_9,fp_545,N_539,r0_543,r1_536,r11_527,r2_537,r3_533,r4_531,r5_538,r6_530,r7_532,r8_540,r9_529,sp_1540,V_1545,VZN_534,Z_1537,ZN_1543
		defs: ap_1559,C_1549,CVZN_1547,CZ_1567,CZN_1558,fp_1560,N_1553,r0_1556,r1_1557,r11_1568,r2_1555,r3_1562,r4_1564,r5_1554,r6_1565,r7_1563,r8_1551,r9_1566,sp_1546,V_1550,VZN_1561,Z_1552,ZN_1548
	word32 sp_1573
	*spOut = fp_1560 - 0x00000004
	word32 fp_1574
	*fpOut = Mem1542[fp_1560 + 0x0000000C:word32]
	word32 ap_1575
	*apOut = Mem1542[fp_1560 + 0x00000008:word32]
	return r9_1566
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001105D:
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l0001104B:
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l000110EF:
	word32 sp_459 = sp_1065 - 0x00000004
	Mem461[sp_459:word32] = Mem429[r2 + 0x0000C617:word32]
	word32 sp_465
	byte CVZN_466
	byte ZN_467
	bool C_468
	bool V_469
	word32 r8_470
	bool Z_471
	bool N_472
	word32 r5_473
	word32 r2_474
	word32 r0_475
	word32 r1_476
	byte CZN_477
	word32 ap_478
	word32 fp_479
	byte VZN_480
	word32 r3_481
	word32 r7_482
	word32 r4_483
	word32 r6_484
	word32 r9_485
	byte CZ_486
	word32 r11_487
	call Mem461[0x0001925C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_452,C_463,CVZN_448,CZ_435,CZN_442,dwLoc10_9,fp_451,N_446,r0_449,r1_443,r11_434,r2_457,r3_440,r4_438,r5_445,r6_437,r7_439,r8_447,r9_436,sp_459,V_464,VZN_441,Z_454,ZN_462
		defs: ap_478,C_468,CVZN_466,CZ_486,CZN_477,fp_479,N_472,r0_475,r1_476,r11_487,r2_474,r3_481,r4_483,r5_473,r6_484,r7_482,r8_470,r9_485,sp_465,V_469,VZN_480,Z_471,ZN_467
	branch Mem461[ap_478 + 4:word32] == 0x00000000 l00011105
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011105:
	Mem500[r2_474 + 0x0000C6E9:word32] = 0x00000001
	word32 sp_505
	*spOut = fp_479 - 0x00000004
	word32 fp_506
	*fpOut = Mem500[fp_479 + 0x0000000C:word32]
	word32 ap_507
	*apOut = Mem500[fp_479 + 0x00000008:word32]
	return 0x00000009
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00011101:
	word32 sp_496
	*spOut = fp_479 - 0x00000004
	word32 fp_497
	*fpOut = Mem461[fp_479 + 0x0000000C:word32]
	word32 ap_498
	*apOut = Mem461[fp_479 + 0x00000008:word32]
	return r9_485
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FEC:
	word32 sp_1876
	*spOut = fp_112 - 0x00000004
	word32 fp_1877
	*fpOut = Mem1867[fp_112 + 0x0000000C:word32]
	word32 ap_1878
	*apOut = Mem1867[fp_112 + 0x00000008:word32]
	return 0x00000004
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FD0:
	word32 sp_410
	*spOut = fp_112 - 0x00000004
	word32 fp_411
	*fpOut = Mem387[fp_112 + 0x0000000C:word32]
	word32 ap_412
	*apOut = Mem387[fp_112 + 0x00000008:word32]
	return 0x00000009
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

l00010FC1:
	word32 sp_399
	*spOut = fp_112 - 0x00000004
	word32 fp_400
	*fpOut = Mem387[fp_112 + 0x0000000C:word32]
	word32 ap_401
	*apOut = Mem387[fp_112 + 0x00000008:word32]
	return 0x00000002
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>

fn00010E6A_exit:
// DataOut: ap fp r0 r1 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r5:<invalid> r1:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r4:<invalid> r2:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r6:<invalid> -24(fp):<invalid> -20(fp):r2 + 0x0000C694 -16(fp):<invalid>



word32 fn000117AA(word32 r0, word32 r2, word32 r6, word32 r8, word32 r9, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r7Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2 r6 r8 r9
// LiveOut: ap fp r0 r1 r2 r3 r4 r5 r7 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r7 sp
// Preserved:
fn000117AA_entry:
// DataOut: ap fp pc r0 r1 r10 r11 r2 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000117AA:
	word32 r5_6 = Mem0[r2 + 0x0000C61B:word32]
	branch r5_6 <= 0x00002000 l000117D7
// DataOut: ap fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000117D7:
	word32 sp_19
	byte CVZN_20
	byte ZN_21
	bool C_22
	bool V_23
	word32 r4_24
	bool Z_25
	bool N_26
	word32 r2_27
	word32 r5_28
	byte CZN_29
	word32 r0_30
	word32 r8_31
	word32 r3_32
	word32 fp_33
	word32 ap_34
	word32 r9_35
	word32 r6_36
	word32 r1_37
	word32 r7_38
	call Mem0[0x0001926C:word32] + 2 (retsize: 4; depth: 44)
		uses: C_17,CZN_7,dwLoc28_15,qwLoc24_12,r2,r4_3,r5_6,sp_13,V_18,ZN_16
		defs: ap_34,C_22,CVZN_20,CZN_29,fp_33,N_26,r0_30,r1_37,r2_27,r3_32,r4_24,r5_28,r6_36,r7_38,r8_31,r9_35,sp_19,V_23,Z_25,ZN_21
	byte CVZN_52
	byte ZN_53
	bool C_54
	bool V_55
	bool Z_57
	bool N_58
	word32 r5_60
	byte CZN_61
	word32 r3_64
	word32 r1_69
	word32 r7_70
	word32 r6_491
	word32 r9_129
	word32 r8_493
	word32 r2_130
	word32 r4_497
	word32 r0_505
	word32 sp_131
	word32 fp_502
	word32 ap_503
	call Mem0[0x00019270:word32] + 2 (retsize: 4; depth: 56)
		uses: ap_34,C_49,CVZN_20,CZN_29,dwLoc28_15,dwLoc2C_41,dwLoc30_44,dwLoc34_47,fp_33,N_26,qwLoc24_12,r0_30,r1_37,r2_27,r3_32,r4_24,r5_28,r6_36,r7_38,r8_31,r9_35,sp_45,V_50,Z_25,ZN_48
		defs: ap_66,C_54,CVZN_52,CZN_61,fp_65,N_58,r0_62,r1_69,r2_59,r3_64,r4_56,r5_60,r6_68,r7_70,r8_63,r9_67,sp_51,V_55,Z_57,ZN_53
	Mem72[r2_130 + 0x0000C5FB:word32] = r0_505
	branch Mem72[r2_130 + 0x0000C5FB:word32] == Mem72[r2_130 + 0x0000C61B:word32] l00011816
// DataOut: ap fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000001C r4:0x00000000 r5:<invalid>

l00011816:
	Mem482[r2_130 + 0x0000C5F7:word32] = Mem72[r2_130 + 0x0000C61B:word32] + Mem72[r2_130 + 0x0000C5F3:word32] - 0x00000016
	branch Mem482[r2_130 + 0x0000C5F7:word32] >=u Mem482[r2_130 + 0x0000C5F3:word32] l0001183A
// DataOut: ap fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000034 r4:0x00000000 r5:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l0001183A:
// DataOut: ap fp pc r1 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000034 r4:0x00000000 r5:<invalid> r3:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l0001183C:
	word32 r3_504 = Mem482[r2_130 + 0x0000C5F7:word32]
	r0_505 = (uint32) Mem482[r3_504:byte]
	branch r0_505 != 0x00000050 l00011880
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:0x00000000 r5:<invalid> r3:<invalid> r0:<invalid> -64(fp):<invalid> -60(fp):r2 + 0x0000C639 -56(fp):0x00000004 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l0001184F:
	word32 sp_531 = sp_131 - 0x00000004
	Mem532[sp_531:word32] = 0x00000004
	Mem535[sp_531 - 0x00000004:word32] = r2_130 + 0x0000C639
	Mem537[sp_531 - 0x00000008:word32] = r3_504
	byte CVZN_542
	byte ZN_543
	bool C_544
	bool V_545
	bool Z_547
	bool N_548
	word32 r5_550
	byte CZN_551
	word32 r3_554
	word32 r1_559
	word32 r7_560
	call Mem537[0x000192D8:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_503,C_539,CVZN_498,CZN_506,dwLoc28_15,dwLoc2C_41,dwLoc30_44,dwLoc34_47,fp_502,N_496,qwLoc24_12,r0_505,r1_490,r2_495,r3_504,r4_497,r5_494,r6_491,r7_489,r8_493,r9_492,sp_536,V_540,Z_507,ZN_538
		defs: ap_556,C_544,CVZN_542,CZN_551,fp_555,N_548,r0_552,r1_559,r2_549,r3_554,r4_546,r5_550,r6_558,r7_560,r8_553,r9_557,sp_541,V_545,Z_547,ZN_543
	branch r0_505 != 0x00000000 l00011880
// DataOut: ap fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:0x00000000 r5:<invalid> r3:<invalid> r0:<invalid> -64(fp):<invalid> -60(fp):r2 + 0x0000C639 -56(fp):0x00000004 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011880:
	Mem527[r2_130 + 0x0000C5F7:word32] = Mem482[r2_130 + 0x0000C5F7:word32] - 0x00000001
	branch Mem527[r2_130 + 0x0000C5F7:word32] >=u Mem527[r2_130 + 0x0000C5F3:word32] l0001183C
// DataOut: ap fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:0x00000000 r5:<invalid> r3:<invalid> r0:<invalid> -64(fp):<invalid> -60(fp):r2 + 0x0000C639 -56(fp):0x00000004 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011893:
// DataOut: ap fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:0x00000000 r5:<invalid> r3:<invalid> r0:<invalid> -64(fp):<invalid> -60(fp):r2 + 0x0000C639 -56(fp):0x00000004 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011864:
	r0_505 = Mem537[r2_130 + 0x0000C5F7:word32] - Mem537[r2_130 + 0x0000C5F3:word32]
	Mem567[r2_130 + 0x0000C5FB:word32] = Mem537[r2_130 + 0x0000C5FB:word32] - r0_505
	*r4Out = 0x00000001
// DataOut: ap fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:0x00000000 r5:<invalid> r3:<invalid> r0:<invalid> -64(fp):<invalid> -60(fp):r2 + 0x0000C639 -56(fp):0x00000004 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011837:
// DataOut: ap fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000034 r4:0x00000000 r5:<invalid> r3:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011813:
// DataOut: ap fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000034 r4:0x00000000 r5:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011A92:
	branch r4_497 != 0x00000000 l00011AF4
// DataOut: ap fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> -64(fp):<invalid> -60(fp):r2 + 0x0000C639 -56(fp):0x00000004 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011AF4:
	Mem274[r2_130 + 124:word32] = Mem72[r2_130 + 0x0000C5F7:word32] - Mem72[r2_130 + 0x0000C5F3:word32] + Mem72[r2_130 + 0x0000C61F:word32]
	word32 sp_275 = sp_131 - 0x00000004
	Mem276[sp_275:word32] = 0x00000016
	Mem279[sp_275 - 0x00000004:word32] = fp_502 + -26
	word32 r2_283
	word32 r3_284
	word32 r5_285
	word32 r7_286
	word32 ap_287
	word32 fp_288
	word32 sp_289
	word32 r0_290 = fn0000D5BE(r0_505, r4_497, r6_491, ap_503, fp_502, out r2_283, out r3_284, out r5_285, out r7_286, out ap_287, out fp_288, out sp_289)
	branch r0_290 != 0x00000000 l00011B1D
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> -64(fp):<invalid> -60(fp):r2 + 0x0000C639 -56(fp):0x00000004 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011B1D:
	Mem304[sp_289 - 0x00000004:word32] = fp_288 + -22
	word32 sp_308
	byte CVZN_309
	byte ZN_310
	bool C_311
	bool V_312
	word32 r4_313
	bool Z_314
	bool N_315
	word32 r2_316
	word32 r5_317
	byte CZN_318
	word32 r0_319
	word32 r8_320
	word32 r3_321
	word32 fp_322
	word32 ap_323
	word32 r9_324
	word32 r6_325
	word32 r1_326
	word32 r7_327
	call fn00000002 (retsize: 4; depth: 4)
		uses: ap_287,C_306,CVZN_87,CZN_82,dwLoc28_15,dwLoc2C_41,dwLoc30_44,dwLoc34_47,fp_288,N_85,qwLoc24_12,r0_290,r1_77,r2_283,r3_284,r4_86,r5_285,r6_78,r7_286,r8_81,r9_79,sp_302,V_307,Z_292,ZN_305
		defs: ap_323,C_311,CVZN_309,CZN_318,fp_322,N_315,r0_319,r1_326,r2_316,r3_321,r4_313,r5_317,r6_325,r7_327,r8_320,r9_324,sp_308,V_312,Z_314,ZN_310
	Mem329[r2_316 + 0x0000C682:word16] = (word16) r0_319
	Mem332[sp_308 - 0x00000004:word32] = fp_322 + -20
	word32 sp_336
	byte CVZN_337
	byte ZN_338
	bool C_339
	bool V_340
	word32 r4_341
	bool Z_342
	bool N_343
	word32 r2_344
	word32 r5_345
	byte CZN_346
	word32 r0_347
	word32 r8_348
	word32 r3_349
	word32 fp_350
	word32 ap_351
	word32 r9_352
	word32 r6_353
	word32 r1_354
	word32 r7_355
	call fn00000002 (retsize: 4; depth: 4)
		uses: ap_323,C_334,CVZN_309,CZN_318,dwLoc28_15,dwLoc2C_41,dwLoc30_44,dwLoc34_47,fp_322,N_315,qwLoc24_12,r0_319,r1_326,r2_316,r3_321,r4_313,r5_317,r6_325,r7_327,r8_320,r9_324,sp_330,V_335,Z_314,ZN_333
		defs: ap_351,C_339,CVZN_337,CZN_346,fp_350,N_343,r0_347,r1_354,r2_344,r3_349,r4_341,r5_345,r6_353,r7_355,r8_348,r9_352,sp_336,V_340,Z_342,ZN_338
	Mem357[r2_344 + 0x0000C684:word16] = (word16) r0_347
	Mem360[sp_336 - 0x00000004:word32] = fp_350 + -18
	word32 sp_364
	byte CVZN_365
	byte ZN_366
	bool C_367
	bool V_368
	word32 r4_369
	bool Z_370
	bool N_371
	word32 r2_372
	word32 r5_373
	byte CZN_374
	word32 r0_375
	word32 r8_376
	word32 r3_377
	word32 fp_378
	word32 ap_379
	word32 r9_380
	word32 r6_381
	word32 r1_382
	word32 r7_383
	call fn00000002 (retsize: 4; depth: 4)
		uses: ap_351,C_362,CVZN_337,CZN_346,dwLoc28_15,dwLoc2C_41,dwLoc30_44,dwLoc34_47,fp_350,N_343,qwLoc24_12,r0_347,r1_354,r2_344,r3_349,r4_341,r5_345,r6_353,r7_355,r8_348,r9_352,sp_358,V_363,Z_342,ZN_361
		defs: ap_379,C_367,CVZN_365,CZN_374,fp_378,N_371,r0_375,r1_382,r2_372,r3_377,r4_369,r5_373,r6_381,r7_383,r8_376,r9_380,sp_364,V_368,Z_370,ZN_366
	Mem385[r2_372 + 0x0000C686:word16] = (word16) r0_375
	Mem388[sp_364 - 0x00000004:word32] = fp_378 + -16
	word32 sp_392
	byte CVZN_393
	byte ZN_394
	bool C_395
	bool V_396
	word32 r4_397
	bool Z_398
	bool N_399
	word32 r2_400
	word32 r5_401
	byte CZN_402
	word32 r0_403
	word32 r8_404
	word32 r3_405
	word32 fp_406
	word32 ap_407
	word32 r9_408
	word32 r6_409
	word32 r1_410
	word32 r7_411
	call fn00000002 (retsize: 4; depth: 4)
		uses: ap_379,C_390,CVZN_365,CZN_374,dwLoc28_15,dwLoc2C_41,dwLoc30_44,dwLoc34_47,fp_378,N_371,qwLoc24_12,r0_375,r1_382,r2_372,r3_377,r4_369,r5_373,r6_381,r7_383,r8_376,r9_380,sp_386,V_391,Z_370,ZN_389
		defs: ap_407,C_395,CVZN_393,CZN_402,fp_406,N_399,r0_403,r1_410,r2_400,r3_405,r4_397,r5_401,r6_409,r7_411,r8_404,r9_408,sp_392,V_396,Z_398,ZN_394
	Mem413[r2_400 + 0x0000C688:word16] = (word16) r0_403
	Mem416[sp_392 - 0x00000004:word32] = fp_406 + -14
	word32 r1_420
	word32 r2_421
	word32 ap_422
	word32 fp_423
	word32 sp_424
	word32 r0_425 = fn0000E276(ap_407, fp_406, out r1_420, out r2_421, out ap_422, out fp_423, out sp_424)
	Mem427[r2_421 + 0x0000C68A:word32] = r0_425
	Mem430[sp_424 - 0x00000004:word32] = fp_423 + -10
	word32 r1_434
	word32 r2_435
	word32 ap_436
	word32 fp_437
	word32 sp_438
	word32 r0_439 = fn0000E276(ap_422, fp_423, out r1_434, out r2_435, out ap_436, out fp_437, out sp_438)
	Mem441[r2_435 + 0x0000C68E:word32] = r0_439
	Mem444[sp_438 - 0x00000004:word32] = fp_437 + -6
	word32 sp_448
	byte CVZN_449
	byte ZN_450
	bool C_451
	bool V_452
	word32 r4_453
	bool Z_454
	bool N_455
	word32 r2_456
	word32 r5_457
	byte CZN_458
	word32 r0_459
	word32 r8_460
	word32 r3_461
	word32 fp_462
	word32 ap_463
	word32 r9_464
	word32 r6_465
	word32 r1_466
	word32 r7_467
	call fn00000002 (retsize: 4; depth: 4)
		uses: ap_436,C_446,CVZN_393,CZN_402,dwLoc28_15,dwLoc2C_41,dwLoc30_44,dwLoc34_47,fp_437,N_399,qwLoc24_12,r0_439,r1_434,r2_435,r3_405,r4_397,r5_401,r6_409,r7_411,r8_404,r9_408,sp_442,V_447,Z_398,ZN_445
		defs: ap_463,C_451,CVZN_449,CZN_458,fp_462,N_455,r0_459,r1_466,r2_456,r3_461,r4_453,r5_457,r6_465,r7_467,r8_460,r9_464,sp_448,V_452,Z_454,ZN_450
	Mem469[r2_456 + 0x0000C692:word16] = (word16) r0_459
	Mem471[r2_456 + 128:word32] = Mem469[r2_456 + 0x0000C68A:word32] + Mem469[r2_456 + 0x0000C68E:word32]
	word32 sp_477
	*spOut = fp_462 - 0x00000004
	word32 fp_478
	*fpOut = Mem471[fp_462 + 0x0000000C:word32]
	word32 ap_479
	*apOut = Mem471[fp_462 + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011B19:
	word32 sp_299
	*spOut = fp_288 - 0x00000004
	word32 fp_300
	*fpOut = Mem279[fp_288 + 0x0000000C:word32]
	word32 ap_301
	*apOut = Mem279[fp_288 + 0x00000008:word32]
	return 0x00000033
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011A96:
	branch Mem72[r2_130 + 64:word32] != 0x00000000 l00011A9F
// DataOut: fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> -64(fp):<invalid> -60(fp):r2 + 0x0000C639 -56(fp):0x00000004 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011A9B:
	branch Mem72[r2_130:word32] == 0x00000000 l00011ACA
// DataOut: fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> -64(fp):<invalid> -60(fp):r2 + 0x0000C639 -56(fp):0x00000004 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011A9F:
	word32 sp_202 = sp_131 - 0x00000004
	Mem204[sp_202:uint32] = 0x00000401
	Mem207[sp_202 - 0x00000004:word32] = Mem204[r2_130 + 0x0000C613:word32]
	Mem210[sp_202 - 0x00000008:word32] = r8_493 + 119
	Mem213[sp_202 - 0x0000000C:word32] = r2_130 + 1515
	word32 sp_217
	byte CVZN_218
	byte ZN_219
	bool C_220
	bool V_221
	word32 r4_222
	bool Z_223
	bool N_224
	word32 r2_225
	word32 r5_226
	byte CZN_227
	word32 r0_228
	word32 r8_229
	word32 r3_230
	word32 fp_231
	word32 ap_232
	word32 r9_233
	word32 r6_234
	word32 r1_235
	word32 r7_236
	call Mem213[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_91,C_215,CVZN_87,CZN_82,dwLoc28_15,dwLoc2C_41,dwLoc30_44,dwLoc34_47,fp_90,N_85,qwLoc24_12,r0_88,r1_77,r2_84,r3_80,r4_86,r5_83,r6_78,r7_76,r8_81,r9_79,sp_211,V_216,Z_126,ZN_214
		defs: ap_232,C_220,CVZN_218,CZN_227,fp_231,N_224,r0_228,r1_235,r2_225,r3_230,r4_222,r5_226,r6_234,r7_236,r8_229,r9_233,sp_217,V_221,Z_223,ZN_219
	Mem238[sp_217 - 0x00000004:word32] = r0_228
	Mem241[sp_217 - 0x00000008:word32] = r2_225 + 1515
	Mem243[sp_217 - 0x0000000C:word32] = r2_225
	word32 r3_244 = Mem243[r2_225 + 0x0000C839:word32]
	byte CVZN_249
	byte ZN_250
	bool C_251
	bool V_252
	word32 r4_253
	bool Z_254
	bool N_255
	word32 r5_257
	byte CZN_258
	word32 r0_259
	word32 r8_260
	word32 r3_261
	word32 fp_262
	word32 ap_263
	word32 r6_265
	word32 r1_266
	word32 r7_267
	call r3_244 + 2 (retsize: 4; depth: 4)
		uses: ap_232,C_246,CVZN_218,CZN_227,dwLoc28_15,dwLoc2C_41,dwLoc30_44,dwLoc34_47,fp_231,N_224,qwLoc24_12,r0_228,r1_235,r2_225,r3_244,r4_222,r5_226,r6_234,r7_236,r8_229,r9_233,sp_242,V_247,Z_223,ZN_245
		defs: ap_263,C_251,CVZN_249,CZN_258,fp_262,N_255,r0_259,r1_266,r2_256,r3_261,r4_253,r5_257,r6_265,r7_267,r8_260,r9_264,sp_248,V_252,Z_254,ZN_250
// DataOut: fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> -64(fp):<invalid> -60(fp):r2 + 0x0000C639 -56(fp):0x00000004 -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l00011ACA:
	word32 sp_132 = sp_131 - 0x00000004
	Mem134[sp_132:uint32] = 0x00000401
	Mem137[sp_132 - 0x00000004:word32] = r9_129 + 1608
	Mem140[sp_132 - 0x00000008:word32] = r2_130 + 1515
	word32 sp_144
	byte CVZN_145
	byte ZN_146
	bool C_147
	bool V_148
	word32 r4_149
	bool Z_150
	bool N_151
	word32 r2_152
	word32 r5_153
	byte CZN_154
	word32 r0_155
	word32 r8_156
	word32 r3_157
	word32 fp_158
	word32 ap_159
	word32 r9_160
	word32 r6_161
	word32 r1_162
	word32 r7_163
	call Mem140[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_91,C_142,CVZN_87,CZN_82,dwLoc28_15,dwLoc2C_41,dwLoc30_44,dwLoc34_47,fp_90,N_85,qwLoc24_12,r0_88,r1_77,r2_130,r3_80,r4_86,r5_83,r6_78,r7_76,r8_81,r9_129,sp_138,V_143,Z_126,ZN_141
		defs: ap_159,C_147,CVZN_145,CZN_154,fp_158,N_151,r0_155,r1_162,r2_152,r3_157,r4_149,r5_153,r6_161,r7_163,r8_156,r9_160,sp_144,V_148,Z_150,ZN_146
	Mem165[sp_144 - 0x00000004:word32] = r0_155
	Mem168[sp_144 - 0x00000008:word32] = r2_152 + 1515
	Mem170[sp_144 - 0x0000000C:word32] = r2_152
	word32 r3_171 = Mem170[r2_152 + 0x0000C839:word32]
	word32 sp_175
	byte CVZN_176
	byte ZN_177
	bool C_178
	bool V_179
	word32 r4_180
	bool Z_181
	bool N_182
	word32 r2_183
	word32 r5_184
	byte CZN_185
	word32 r0_186
	word32 r8_187
	word32 r3_188
	word32 fp_189
	word32 ap_190
	word32 r9_191
	word32 r6_192
	word32 r1_193
	word32 r7_194
	call r3_171 + 2 (retsize: 4; depth: 4)
		uses: ap_159,C_173,CVZN_145,CZN_154,dwLoc28_15,dwLoc2C_41,dwLoc30_44,dwLoc34_47,fp_158,N_151,qwLoc24_12,r0_155,r1_162,r2_152,r3_171,r4_149,r5_153,r6_161,r7_163,r8_156,r9_160,sp_169,V_174,Z_150,ZN_172
		defs: ap_190,C_178,CVZN_176,CZN_185,fp_189,N_182,r0_186,r1_193,r2_183,r3_188,r4_180,r5_184,r6_192,r7_194,r8_187,r9_191,sp_175,V_179,Z_181,ZN_177
	word32 sp_199
	*spOut = fp_189 - 0x00000004
	word32 fp_200
	*fpOut = Mem170[fp_189 + 0x0000000C:word32]
	word32 ap_201
	*apOut = Mem170[fp_189 + 0x00000008:word32]
	return 0x00000002
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> -80(fp):r2 -76(fp):r2 + 1515 -72(fp):r0 -68(fp):r2 + 1515 -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

fn000117AA_exit:
// DataOut: ap fp r0 r1 r2 r3 r4 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> -80(fp):r2 -76(fp):r2 + 1515 -72(fp):r0 -68(fp):r2 + 1515 -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x0000000000000000

l000117D4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000001C r4:0x00000000 r5:<invalid>

l00011898:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000001C r4:0x00000000 r5:<invalid>



word32 fn00011C0A(word32 r0, word32 r1, word32 r4, word32 r6, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r5Out, ptr32 & r7Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r1 r4 r6
// LiveOut: ap fp r0 r1 r2 r3 r5 r7 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r5 r7 sp
// Preserved:
fn00011C0A_entry:
	*r1Out = r1
// DataOut: ap fp r0 r1 r10 r11 r4 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00011C0A:
	word32 r2_11
	word32 r3_12
	word32 r5_13
	word32 r7_14
	word32 fp_15
	word32 sp_16
	word32 r0_17 = fn00011CDA(r0, r4, r6, ap, fp, out r2_11, out r3_12, out r5_13, out r7_14, out fp_15, out sp_16)
	branch r0_17 == 0x00000000 l00011C20
// DataOut: fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00011C20:
	word32 r1_141
	word32 r0_56 = Mem0[r2_11 + 1511:word32]
	branch (uint32) Mem0[r2_11 + 0x0000C659:byte] >=u 0x00000012 l00011C3C
// DataOut: fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011C3C:
	*r1Out = SEQ(SLICE(r1, word24, 8), 0x12)
// DataOut: fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011C31:
	*r1Out = SEQ(SLICE(r1, word24, 8), Mem0[r2_11 + 0x0000C659:byte])
// DataOut: fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011C3F:
	Mem63[r0_56 + 12:uint32] = (uint32) (byte) r1_141
	word32 ap_64 = Mem63[r2_11 + 1511:word32]
	Mem66[ap_64 + 20:byte] = Mem63[ap_64 + 20:byte] & ~0x10
	branch Mem66[r2_11 + 40:word32] == 0x00000000 l00011C95
// DataOut: fp r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011C95:
	branch (Mem66[r2_11 + 0x0000C67A:word32] & 0x00000008) == 0x00000000 l00011CCC
// DataOut: fp r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011C9D:
	word32 ap_114 = Mem66[Mem66[r2_11 + 1511:word32] + 12:word32]
	branch ap_114 == 0x00000000 l00011CB7
// DataOut: ap fp r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011CA8:
	branch ap_114 == 0x00000006 l00011CB7
// DataOut: ap fp r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011CAD:
	branch ap_114 == 0x0000000B l00011CB7
// DataOut: ap fp r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011CB2:
	branch ap_114 != 0x00000005 l00011CCC
// DataOut: fp r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011CCC:
	word32 ap_107 = Mem66[r2_11 + 1511:word32]
	Mem109[ap_107 + 20:byte] = Mem66[ap_107 + 20:byte] & ~0x20
// DataOut: fp r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011CB7:
	word32 ap_121 = Mem66[r2_11 + 1511:word32]
	Mem123[ap_121 + 20:byte] = Mem66[ap_121 + 20:byte] | 0x20
	word32 ap_124 = Mem123[r2_11 + 1511:word32]
	Mem126[ap_124 + 20:byte] = Mem123[ap_124 + 20:byte] & ~0x10
// DataOut: fp r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011CD5:
	word32 sp_102
	*spOut = fp_15 - 0x00000004
	word32 fp_103
	*fpOut = Mem66[fp_15 + 0x0000000C:word32]
	word32 ap_104
	*apOut = Mem66[fp_15 + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011C51:
	word32 ap_71 = Mem66[r2_11 + 1511:word32]
	word32 r0_72 = Mem66[ap_71 + 12:word32]
	branch r0_72 > 0x00000011 l00011C80
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011C80:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011C5A_1:
	word32 sp_77
	byte CVZN_78
	byte ZN_79
	bool C_80
	bool V_81
	word32 r0_82
	bool Z_83
	word32 fp_84
	word32 ap_85
	word32 r2_86
	byte CZN_87
	word32 r1_88
	bool N_89
	word32 r4_90
	word32 r6_91
	word32 r3_92
	word32 r5_93
	word32 r7_94
	call 0x00011C5E + r0_72 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_71,C_74,CVZN,CZN_58,fp_15,N,r0_72,r1_61,r2_11,r3_12,r4,r5_13,r6,r7_14,sp_16,V_75,Z_68,ZN_73
		defs: ap_85,C_80,CVZN_78,CZN_87,fp_84,N_89,r0_82,r1_88,r2_86,r3_92,r4_90,r5_93,r6_91,r7_94,sp_77,V_81,Z_83,ZN_79
	return r0_82
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> ap:<invalid> r1:<invalid> fp:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

l00011C1F:
	word32 sp_48
	*spOut = fp_15 - 0x00000004
	word32 fp_50
	*fpOut = Mem0[fp_15 + 0x0000000C:word32]
	word32 ap_51
	*apOut = Mem0[fp_15 + 0x00000008:word32]
	return r0_17
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>

fn00011C0A_exit:
// DataOut: ap fp r0 r1 r2 r3 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid>



word32 fn00011CDA(word32 r0, word32 r4, word32 r6, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r5Out, ptr32 & r7Out, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r4 r6
// LiveOut: fp r0 r2 r3 r5 r7 sp
// Trashed: CVZN ap fp r0 r2 r3 r5 r7 sp
// Preserved:
fn00011CDA_entry:
// DataOut: ap fp r0 r1 r10 r11 r4 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00011CDA:
	word32 r2_16
	word32 r3_17
	word32 r5_18
	word32 r7_19
	word32 ap_20
	word32 fp_21
	word32 sp_22
	word32 r0_23 = fn0000D5BE(r0, r4, r6, ap, fp, out r2_16, out r3_17, out r5_18, out r7_19, out ap_20, out fp_21, out sp_22)
	branch r0_23 != 0x00000000 l00011CF8
// DataOut: fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00011CF8:
	Mem61[r2_16 + 0x0000C658:byte] = Mem0[fp_21 + -46:byte]
	Mem63[r2_16 + 0x0000C659:byte] = Mem61[fp_21 + -45:byte]
	Mem65[r2_16 + 0x0000C65A:byte] = Mem63[fp_21 + -44:byte]
	Mem67[r2_16 + 0x0000C65B:byte] = Mem65[fp_21 + -43:byte]
	Mem70[sp_22 - 0x00000004:word32] = fp_21 + -42
	word32 sp_74
	byte CVZN_75
	byte ZN_76
	bool C_77
	bool V_78
	word32 fp_79
	word32 r0_80
	bool Z_81
	word32 ap_82
	word32 r2_83
	word32 r3_84
	word32 r4_85
	bool N_86
	word32 r6_87
	word32 r5_88
	word32 r7_89
	call r3_17 + 2 (retsize: 4; depth: 4)
		uses: ap_20,C_72,CVZN,dwLoc34_4,dwLoc38_8,fp_21,N,r0_23,r2_16,r3_17,r4,r5_18,r6,r7_19,sp_68,V_73,Z_25,ZN_71
		defs: ap_82,C_77,CVZN_75,fp_79,N_86,r0_80,r2_83,r3_84,r4_85,r5_88,r6_87,r7_89,sp_74,V_78,Z_81,ZN_76
	Mem91[r2_83 + 0x0000C65C:word16] = (word16) r0_80
	Mem94[sp_74 - 0x00000004:word32] = fp_79 + -40
	word32 sp_98
	byte CVZN_99
	byte ZN_100
	bool C_101
	bool V_102
	word32 fp_103
	word32 r0_104
	bool Z_105
	word32 ap_106
	word32 r2_107
	word32 r3_108
	word32 r4_109
	bool N_110
	word32 r6_111
	word32 r5_112
	word32 r7_113
	call r3_84 + 2 (retsize: 4; depth: 4)
		uses: ap_82,C_96,CVZN_75,dwLoc34_4,dwLoc38_8,fp_79,N_86,r0_80,r2_83,r3_84,r4_85,r5_88,r6_87,r7_89,sp_92,V_97,Z_81,ZN_95
		defs: ap_106,C_101,CVZN_99,fp_103,N_110,r0_104,r2_107,r3_108,r4_109,r5_112,r6_111,r7_113,sp_98,V_102,Z_105,ZN_100
	Mem115[r2_107 + 0x0000C65E:word16] = (word16) r0_104
	Mem118[sp_98 - 0x00000004:word32] = fp_103 + -38
	word32 sp_122
	byte CVZN_123
	byte ZN_124
	bool C_125
	bool V_126
	word32 fp_127
	word32 r0_128
	bool Z_129
	word32 ap_130
	word32 r2_131
	word32 r3_132
	word32 r4_133
	bool N_134
	word32 r6_135
	word32 r5_136
	word32 r7_137
	call r3_108 + 2 (retsize: 4; depth: 4)
		uses: ap_106,C_120,CVZN_99,dwLoc34_4,dwLoc38_8,fp_103,N_110,r0_104,r2_107,r3_108,r4_109,r5_112,r6_111,r7_113,sp_116,V_121,Z_105,ZN_119
		defs: ap_130,C_125,CVZN_123,fp_127,N_134,r0_128,r2_131,r3_132,r4_133,r5_136,r6_135,r7_137,sp_122,V_126,Z_129,ZN_124
	Mem139[r2_131 + 0x0000C660:word16] = (word16) r0_128
	Mem142[sp_122 - 0x00000004:word32] = fp_127 + -36
	word32 sp_146
	byte CVZN_147
	byte ZN_148
	bool C_149
	bool V_150
	word32 fp_151
	word32 r0_152
	bool Z_153
	word32 ap_154
	word32 r2_155
	word32 r3_156
	word32 r4_157
	bool N_158
	word32 r6_159
	word32 r5_160
	word32 r7_161
	call r3_132 + 2 (retsize: 4; depth: 4)
		uses: ap_130,C_144,CVZN_123,dwLoc34_4,dwLoc38_8,fp_127,N_134,r0_128,r2_131,r3_132,r4_133,r5_136,r6_135,r7_137,sp_140,V_145,Z_129,ZN_143
		defs: ap_154,C_149,CVZN_147,fp_151,N_158,r0_152,r2_155,r3_156,r4_157,r5_160,r6_159,r7_161,sp_146,V_150,Z_153,ZN_148
	Mem163[r2_155 + 0x0000C662:word16] = (word16) r0_152
	Mem166[sp_146 - 0x00000004:word32] = fp_151 + -34
	word32 sp_170
	byte CVZN_171
	byte ZN_172
	bool C_173
	bool V_174
	word32 fp_175
	word32 r0_176
	bool Z_177
	word32 ap_178
	word32 r2_179
	word32 r3_180
	word32 r4_181
	bool N_182
	word32 r6_183
	word32 r5_184
	word32 r7_185
	call r4_157 + 2 (retsize: 4; depth: 4)
		uses: ap_154,C_168,CVZN_147,dwLoc34_4,dwLoc38_8,fp_151,N_158,r0_152,r2_155,r3_156,r4_157,r5_160,r6_159,r7_161,sp_164,V_169,Z_153,ZN_167
		defs: ap_178,C_173,CVZN_171,fp_175,N_182,r0_176,r2_179,r3_180,r4_181,r5_184,r6_183,r7_185,sp_170,V_174,Z_177,ZN_172
	Mem187[r2_179 + 0x0000C664:word32] = r0_176
	Mem190[sp_170 - 0x00000004:word32] = fp_175 + -30
	word32 sp_194
	byte CVZN_195
	byte ZN_196
	bool C_197
	bool V_198
	word32 fp_199
	word32 r0_200
	bool Z_201
	word32 ap_202
	word32 r2_203
	word32 r3_204
	word32 r4_205
	bool N_206
	word32 r6_207
	word32 r5_208
	word32 r7_209
	call r4_181 + 2 (retsize: 4; depth: 4)
		uses: ap_178,C_192,CVZN_171,dwLoc34_4,dwLoc38_8,fp_175,N_182,r0_176,r2_179,r3_180,r4_181,r5_184,r6_183,r7_185,sp_188,V_193,Z_177,ZN_191
		defs: ap_202,C_197,CVZN_195,fp_199,N_206,r0_200,r2_203,r3_204,r4_205,r5_208,r6_207,r7_209,sp_194,V_198,Z_201,ZN_196
	Mem211[r2_203 + 0x0000C668:word32] = r0_200
	Mem214[sp_194 - 0x00000004:word32] = fp_199 + -26
	word32 sp_218
	byte CVZN_219
	byte ZN_220
	bool C_221
	bool V_222
	word32 fp_223
	word32 r0_224
	bool Z_225
	word32 ap_226
	word32 r2_227
	word32 r3_228
	word32 r4_229
	bool N_230
	word32 r6_231
	word32 r5_232
	word32 r7_233
	call r4_205 + 2 (retsize: 4; depth: 4)
		uses: ap_202,C_216,CVZN_195,dwLoc34_4,dwLoc38_8,fp_199,N_206,r0_200,r2_203,r3_204,r4_205,r5_208,r6_207,r7_209,sp_212,V_217,Z_201,ZN_215
		defs: ap_226,C_221,CVZN_219,fp_223,N_230,r0_224,r2_227,r3_228,r4_229,r5_232,r6_231,r7_233,sp_218,V_222,Z_225,ZN_220
	Mem235[r2_227 + 0x0000C66C:word32] = r0_224
	Mem238[sp_218 - 0x00000004:word32] = fp_223 + -22
	word32 sp_242
	byte CVZN_243
	byte ZN_244
	bool C_245
	bool V_246
	word32 fp_247
	word32 r0_248
	bool Z_249
	word32 ap_250
	word32 r2_251
	word32 r3_252
	word32 r4_253
	bool N_254
	word32 r6_255
	word32 r5_256
	word32 r7_257
	call r3_228 + 2 (retsize: 4; depth: 4)
		uses: ap_226,C_240,CVZN_219,dwLoc34_4,dwLoc38_8,fp_223,N_230,r0_224,r2_227,r3_228,r4_229,r5_232,r6_231,r7_233,sp_236,V_241,Z_225,ZN_239
		defs: ap_250,C_245,CVZN_243,fp_247,N_254,r0_248,r2_251,r3_252,r4_253,r5_256,r6_255,r7_257,sp_242,V_246,Z_249,ZN_244
	Mem259[r2_251 + 0x0000C670:word16] = (word16) r0_248
	Mem262[sp_242 - 0x00000004:word32] = fp_247 + -20
	word32 sp_266
	byte CVZN_267
	byte ZN_268
	bool C_269
	bool V_270
	word32 fp_271
	word32 r0_272
	bool Z_273
	word32 ap_274
	word32 r2_275
	word32 r3_276
	word32 r4_277
	bool N_278
	word32 r6_279
	word32 r5_280
	word32 r7_281
	call r3_252 + 2 (retsize: 4; depth: 4)
		uses: ap_250,C_264,CVZN_243,dwLoc34_4,dwLoc38_8,fp_247,N_254,r0_248,r2_251,r3_252,r4_253,r5_256,r6_255,r7_257,sp_260,V_265,Z_249,ZN_263
		defs: ap_274,C_269,CVZN_267,fp_271,N_278,r0_272,r2_275,r3_276,r4_277,r5_280,r6_279,r7_281,sp_266,V_270,Z_273,ZN_268
	Mem283[r2_275 + 0x0000C672:word16] = (word16) r0_272
	Mem286[sp_266 - 0x00000004:word32] = fp_271 + -18
	word32 sp_290
	byte CVZN_291
	byte ZN_292
	bool C_293
	bool V_294
	word32 fp_295
	word32 r0_296
	bool Z_297
	word32 ap_298
	word32 r2_299
	word32 r3_300
	word32 r4_301
	bool N_302
	word32 r6_303
	word32 r5_304
	word32 r7_305
	call r3_276 + 2 (retsize: 4; depth: 4)
		uses: ap_274,C_288,CVZN_267,dwLoc34_4,dwLoc38_8,fp_271,N_278,r0_272,r2_275,r3_276,r4_277,r5_280,r6_279,r7_281,sp_284,V_289,Z_273,ZN_287
		defs: ap_298,C_293,CVZN_291,fp_295,N_302,r0_296,r2_299,r3_300,r4_301,r5_304,r6_303,r7_305,sp_290,V_294,Z_297,ZN_292
	Mem307[r2_299 + 0x0000C674:word16] = (word16) r0_296
	Mem310[sp_290 - 0x00000004:word32] = fp_295 + -16
	word32 sp_314
	byte CVZN_315
	byte ZN_316
	bool C_317
	bool V_318
	word32 fp_319
	word32 r0_320
	bool Z_321
	word32 ap_322
	word32 r2_323
	word32 r3_324
	word32 r4_325
	bool N_326
	word32 r6_327
	word32 r5_328
	word32 r7_329
	call r3_300 + 2 (retsize: 4; depth: 4)
		uses: ap_298,C_312,CVZN_291,dwLoc34_4,dwLoc38_8,fp_295,N_302,r0_296,r2_299,r3_300,r4_301,r5_304,r6_303,r7_305,sp_308,V_313,Z_297,ZN_311
		defs: ap_322,C_317,CVZN_315,fp_319,N_326,r0_320,r2_323,r3_324,r4_325,r5_328,r6_327,r7_329,sp_314,V_318,Z_321,ZN_316
	Mem331[r2_323 + 0x0000C676:word16] = (word16) r0_320
	Mem334[sp_314 - 0x00000004:word32] = fp_319 + -14
	word32 sp_338
	byte CVZN_339
	byte ZN_340
	bool C_341
	bool V_342
	word32 fp_343
	word32 r0_344
	bool Z_345
	word32 ap_346
	word32 r2_347
	word32 r3_348
	word32 r4_349
	bool N_350
	word32 r6_351
	word32 r5_352
	word32 r7_353
	call r3_324 + 2 (retsize: 4; depth: 4)
		uses: ap_322,C_336,CVZN_315,dwLoc34_4,dwLoc38_8,fp_319,N_326,r0_320,r2_323,r3_324,r4_325,r5_328,r6_327,r7_329,sp_332,V_337,Z_321,ZN_335
		defs: ap_346,C_341,CVZN_339,fp_343,N_350,r0_344,r2_347,r3_348,r4_349,r5_352,r6_351,r7_353,sp_338,V_342,Z_345,ZN_340
	Mem355[r2_347 + 0x0000C678:word16] = (word16) r0_344
	Mem358[sp_338 - 0x00000004:word32] = fp_343 + -12
	word32 sp_362
	byte CVZN_363
	byte ZN_364
	bool C_365
	bool V_366
	word32 fp_367
	word32 r0_368
	bool Z_369
	word32 ap_370
	word32 r2_371
	word32 r3_372
	word32 r4_373
	bool N_374
	word32 r6_375
	word32 r5_376
	word32 r7_377
	call r4_349 + 2 (retsize: 4; depth: 4)
		uses: ap_346,C_360,CVZN_339,dwLoc34_4,dwLoc38_8,fp_343,N_350,r0_344,r2_347,r3_348,r4_349,r5_352,r6_351,r7_353,sp_356,V_361,Z_345,ZN_359
		defs: ap_370,C_365,CVZN_363,fp_367,N_374,r0_368,r2_371,r3_372,r4_373,r5_376,r6_375,r7_377,sp_362,V_366,Z_369,ZN_364
	Mem379[r2_371 + 0x0000C67A:word32] = r0_368
	Mem382[sp_362 - 0x00000004:word32] = fp_367 + -8
	word32 sp_386
	byte CVZN_387
	byte ZN_388
	bool C_389
	bool V_390
	word32 fp_391
	word32 r0_392
	bool Z_393
	word32 ap_394
	word32 r2_395
	word32 r3_396
	word32 r4_397
	bool N_398
	word32 r6_399
	word32 r5_400
	word32 r7_401
	call r4_373 + 2 (retsize: 4; depth: 4)
		uses: ap_370,C_384,CVZN_363,dwLoc34_4,dwLoc38_8,fp_367,N_374,r0_368,r2_371,r3_372,r4_373,r5_376,r6_375,r7_377,sp_380,V_385,Z_369,ZN_383
		defs: ap_394,C_389,CVZN_387,fp_391,N_398,r0_392,r2_395,r3_396,r4_397,r5_400,r6_399,r7_401,sp_386,V_390,Z_393,ZN_388
	Mem403[r2_395 + 0x0000C67E:word32] = r0_392
	word32 sp_409
	*spOut = fp_391 - 0x00000004
	word32 fp_410
	*fpOut = Mem403[fp_391 + 0x0000000C:word32]
	return 0x00000000
// DataOut: fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> -56(fp):fp + -46 -52(fp):0x0000002A

l00011CF4:
	word32 sp_54
	*spOut = fp_21 - 0x00000004
	word32 fp_56
	*fpOut = Mem0[fp_21 + 0x0000000C:word32]
	return 0x00000033
// DataOut: fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> -56(fp):fp + -46 -52(fp):0x0000002A

fn00011CDA_exit:
// DataOut: fp r0 r2 r3 r5 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r7:<invalid> r5:<invalid> r3:<invalid> -112(fp):fp + -8 -108(fp):fp + -12 -104(fp):fp + -14 -100(fp):fp + -16 -96(fp):fp + -18 -92(fp):fp + -20 -88(fp):fp + -22 -84(fp):fp + -26 -80(fp):fp + -30 -76(fp):fp + -34 -72(fp):fp + -36 -68(fp):fp + -38 -64(fp):fp + -40 -60(fp):fp + -42 -56(fp):fp + -46 -52(fp):0x0000002A



word32 fn00011ED6(word32 r0, word32 fp, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r0
// LiveOut: fp r0 sp
// Trashed: CVZN ap fp r0 r1 sp
// Preserved:
fn00011ED6_entry:
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00011ED6:
	word32 r1_5 = Mem0[r0 + 0x0000C811:word32] & ~0xFFFF0000
	word32 sp_15
	*spOut = fp - 0x00000004
	word32 fp_16
	*fpOut = Mem0[fp + 0x0000000C:word32]
	return (uint32) SLICE(((r1_5 | 0x00000002) ^ 0x00000001) * (r1_5 | 0x00000002), ui24, 8) & ~0xFFFFFF00
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00011ED6_exit:
// DataOut: fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r1:<invalid> ap:<invalid> r0:<invalid> fp:<invalid>



word32 fn00011F06(word32 r2, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r2
// LiveOut: fp r0 r3
// Trashed: CVZN ap fp r0 r1 r3 sp
// Preserved:
fn00011F06_entry:
// DataOut: ap fp pc r11 r2 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00011F06:
	Mem11[r2 + 0x0000C809:word32] = (uint32) Mem0[r2 + 0x0000C80A:ui24] ^ Mem0[Mem0[r2 + 0x0000C5EB:word32] + ((Mem0[ap + 4:word32] ^ Mem0[r2 + 0x0000C809:word32]) & ~0xFFFFFF00) * 4:word32]
	Mem14[r2 + 0x0000C80D:word32] = Mem11[r2 + 0x0000C80D:word32] + (Mem11[r2 + 0x0000C809:word32] & ~0xFFFFFF00)
	Mem18[r2 + 0x0000C80D:word32] = Mem14[r2 + 0x0000C80D:word32] * 0x08088405 + 0x00000001
	word32 r3_22 = Mem18[r2 + 0x0000C5EB:word32]
	*r3Out = r3_22
	Mem25[r2 + 0x0000C811:word32] = (uint32) Mem18[r2 + 0x0000C812:ui24] ^ Mem18[r3_22 + (((uint32) Mem18[r2 + 0x0000C810:byte] ^ Mem18[r2 + 0x0000C811:word32]) & ~0xFFFFFF00) * 4:word32]
	word32 fp_32
	*fpOut = Mem25[fp + 0x0000000C:word32]
	return Mem25[ap + 4:word32]
// DataOut: fp pc r0 r11 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00011F06_exit:
// DataOut: fp r0 r3
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r3:<invalid> r1:<invalid> fp:<invalid> ap:<invalid>



void fn000121EA(word32 r2, word32 r3, word32 r9, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r2 r3 r9
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000121EA_entry:
// DataOut: ap fp r2 r3 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000121EA:
	word32 r3_18
	word32 r5_19
	word32 r7_20
	word32 r9_21
	word32 ap_22
	word32 fp_23
	word32 sp_24
	word32 r0_25 = fn00012252(r2, r9, ap, fp, out r3_18, out r5_19, out r7_20, out r9_21, out ap_22, out fp_23, out sp_24)
	branch r0_25 == 0x00000000 l0001224B
// DataOut: ap fp r0 r3 r5 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00012206:
	Mem65[sp_24 - 0x00000004:word32] = Mem0[r3_18 + 0x0000C815:word32]
	word32 sp_69
	byte CVZN_70
	byte ZN_71
	bool C_72
	bool V_73
	word32 r3_74
	word32 ap_75
	word32 r0_76
	word32 r4_77
	bool Z_78
	word32 r2_79
	word32 fp_80
	word32 r9_81
	word32 r5_82
	word32 r7_83
	call Mem65[0x000192C4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_22,C_67,CVZN,dwLoc08_7,dwLoc0C_11,fp_23,r0_25,r2,r3_18,r4_26,r5_19,r7_20,r9_21,sp_63,V_68,Z_28,ZN_66
		defs: ap_75,C_72,CVZN_70,fp_80,r0_76,r2_79,r3_74,r4_77,r5_82,r7_83,r9_81,sp_69,V_73,Z_78,ZN_71
	Mem86[sp_69 - 0x00000004:word32] = r0_76 + 0x00000001
	word32 sp_90
	byte CVZN_91
	byte ZN_92
	bool C_93
	bool V_94
	word32 r3_95
	word32 ap_96
	word32 r0_97
	word32 r4_98
	bool Z_99
	word32 r2_100
	word32 fp_101
	word32 r9_102
	word32 r5_103
	word32 r7_104
	call Mem86[0x000192B4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_75,C_88,CVZN_70,dwLoc08_7,dwLoc0C_11,fp_80,r0_84,r2_79,r3_74,r4_77,r5_82,r7_83,r9_81,sp_85,V_89,Z_78,ZN_87
		defs: ap_96,C_93,CVZN_91,fp_101,r0_97,r2_100,r3_95,r4_98,r5_103,r7_104,r9_102,sp_90,V_94,Z_99,ZN_92
	branch r0_97 != 0x00000000 l00012227
// DataOut: ap fp r2 r3 r5 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00012227:
	Mem117[sp_90 - 0x00000004:word32] = Mem86[r3_95 + 0x0000C815:word32]
	Mem119[sp_90 - 0x00000008:word32] = r0_97
	word32 r2_123
	word32 ap_124
	word32 fp_125
	word32 sp_126
	word32 r0_127 = fn0000E2A6(r0_97, r5_103, r7_104, ap_96, fp_101, out r2_123, out ap_124, out fp_125, out sp_126)
	Mem129[sp_126 - 0x00000004:word32] = r0_127
	Mem132[sp_126 - 0x00000008:word32] = Mem129[ap_124 + 4:word32]
	word32 r3_136
	word32 r5_137
	word32 r7_138
	word32 r9_139
	word32 ap_140
	word32 fp_141
	word32 sp_142
	word32 r0_143 = fn00012252(r2_123, r9_102, ap_124, fp_125, out r3_136, out r5_137, out r7_138, out r9_139, out ap_140, out fp_141, out sp_142)
	Mem146[sp_142 - 0x00000004:word32] = r2_123
	word32 sp_150
	byte CVZN_151
	byte ZN_152
	bool C_153
	bool V_154
	word32 r3_155
	word32 ap_156
	word32 r0_157
	word32 r4_158
	bool Z_159
	word32 r2_160
	word32 fp_161
	word32 r9_162
	word32 r5_163
	word32 r7_164
	call Mem146[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_140,C_148,CVZN_91,dwLoc08_7,dwLoc0C_11,fp_141,r0_143,r2_123,r3_136,r4_144,r5_137,r7_138,r9_139,sp_145,V_149,Z_107,ZN_147
		defs: ap_156,C_153,CVZN_151,fp_161,r0_157,r2_160,r3_155,r4_158,r5_163,r7_164,r9_162,sp_150,V_154,Z_159,ZN_152
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r5:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> -20(fp):r0 + 0x00000002 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l0001224B:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r1:<invalid> r6:<invalid> r3:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> -40(fp):r0 + 0x00000003 -36(fp):<invalid> -32(fp):r0 + 0x00000002 -28(fp):r0 + 0x00000003 -24(fp):<invalid> -20(fp):r0 + 0x00000002 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00012223:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> r2:<invalid> r5:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> -20(fp):r0 + 0x00000002 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

fn000121EA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r1:<invalid> r6:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r9:<invalid> r8:<invalid> -40(fp):r0 + 0x00000003 -36(fp):<invalid> -32(fp):r0 + 0x00000002 -28(fp):r0 + 0x00000003 -24(fp):<invalid> -20(fp):r0 + 0x00000002 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



word32 fn00012252(word32 r2, word32 r9, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & r5Out, ptr32 & r7Out, ptr32 & r9Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r2 r9
// LiveOut: ap fp r0 r3 r5 r7 r9 sp
// Trashed: CVZN ap fp r0 r1 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00012252_entry:
// DataOut: ap fp r2 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012252:
	word32 r4_5 = Mem0[ap + 8:word32]
	Mem7[r2 + 0x0000C809:word32] = 0x12345678
	Mem10[r2 + 0x0000C80D:word32] = 0x23456789
	Mem12[r2 + 0x0000C811:word32] = 0x34567890
	r4_220 = r4_5
	branch Mem12[r4_5:byte] != 0x00 l00012288
// DataOut: ap fp r2 r4 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012288:
	word32 r4_220
	Mem227[r2 + 0x0000C809:word32] = (uint32) Mem12[r2 + 0x0000C80A:ui24] ^ Mem12[Mem12[r2 + 0x0000C5EB:word32] + (((int32) Mem12[r4_220:int8] ^ Mem12[r2 + 0x0000C809:word32]) & ~0xFFFFFF00) * 4:word32]
	Mem230[r2 + 0x0000C80D:word32] = Mem227[r2 + 0x0000C80D:word32] + (Mem227[r2 + 0x0000C809:word32] & ~0xFFFFFF00)
	Mem234[r2 + 0x0000C80D:word32] = Mem230[r2 + 0x0000C80D:word32] * 0x08088405 + 0x00000001
	Mem241[r2 + 0x0000C811:word32] = (uint32) Mem234[r2 + 0x0000C812:ui24] ^ Mem234[Mem234[r2 + 0x0000C5EB:word32] + (((uint32) Mem234[r2 + 0x0000C810:byte] ^ Mem234[r2 + 0x0000C811:word32]) & ~0xFFFFFF00) * 4:word32]
	r4_220 = r4_220 + 0x00000001
	branch Mem241[r4_220:byte] == 0x00 l00012312
// DataOut: ap fp r2 r4 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000020 r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid>
// LocalsOut: fp(32)

l0001230F:
// DataOut: ap fp r2 r4 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000020 r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid>
// LocalsOut: fp(32)

l00012285:
// DataOut: ap fp r2 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000020 r4:<invalid>
// LocalsOut: fp(32)

l00012312:
	word32 sp_29
	byte CVZN_30
	byte ZN_31
	bool C_32
	bool V_33
	word32 ap_34
	word32 r4_35
	word32 r2_36
	bool Z_37
	word32 r5_38
	byte VZN_39
	word32 r0_40
	word32 r3_41
	word32 r1_42
	word32 fp_43
	word32 r7_44
	bool N_45
	word32 r6_46
	word32 r9_47
	byte CZN_48
	word32 r8_49
	call Mem12[0x0001929C:word32] + 2 (retsize: 4; depth: 48)
		uses: ap,C_27,dwLoc24_18,dwLoc28_21,dwLoc2C_25,fp,r2,r4_5,sp_22,V_28,Z_14,ZN_26
		defs: ap_34,C_32,CVZN_30,CZN_48,fp_43,N_45,r0_40,r1_42,r2_36,r3_41,r4_35,r5_38,r6_46,r7_44,r8_49,r9_47,sp_29,V_33,VZN_39,Z_37,ZN_31
	word32 r7_50 = 0x00000000
	word32 r4_51 = fp_43 + -16
// DataOut: fp r2 r4 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000020 r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid>

l00012328:
	word32 r6_58 = Mem12[r2_36 + 0x0000C811:word32] & ~0xFFFF0000
	Mem65[r4_51:byte] = (byte) (uint32) Mem12[r4_51:byte] ^ (byte) ((uint32) SLICE(((r6_58 | 0x00000002) ^ 0x00000001) * (r6_58 | 0x00000002), ui24, 8) & ~0xFFFFFF00)
	Mem72[r2_36 + 0x0000C809:word32] = (uint32) Mem65[r2_36 + 0x0000C80A:ui24] ^ Mem65[Mem65[r2_36 + 0x0000C5EB:word32] + (((uint32) Mem65[r4_51:byte] ^ Mem65[r2_36 + 0x0000C809:word32]) & ~0xFFFFFF00) * 4:word32]
	Mem75[r2_36 + 0x0000C80D:word32] = Mem72[r2_36 + 0x0000C80D:word32] + (Mem72[r2_36 + 0x0000C809:word32] & ~0xFFFFFF00)
	Mem79[r2_36 + 0x0000C80D:word32] = Mem75[r2_36 + 0x0000C80D:word32] * 0x08088405 + 0x00000001
	word32 r3_83 = Mem79[r2_36 + 0x0000C5EB:word32]
	*r3Out = r3_83
	Mem86[r2_36 + 0x0000C811:word32] = (uint32) Mem79[r2_36 + 0x0000C812:ui24] ^ Mem79[r3_83 + (((uint32) Mem79[r2_36 + 0x0000C810:byte] ^ Mem79[r2_36 + 0x0000C811:word32]) & ~0xFFFFFF00) * 4:word32]
	r4_51 = r4_51 + 0x00000001
	r7_50 = r7_50 + 0x00000001
	*r7Out = r7_50
	branch r7_50 <= 0x0000000B l00012328
// DataOut: fp r2 r3 r4 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l000123DA:
	word32 r4_100
	word32 r9_93 = SEQ(SLICE(r9_47, word16, 16), (uint16) Mem86[fp_43 + -5:byte])
	*r9Out = r9_93
	word32 r5_94 = (uint32) (word16) r9_93
	*r5Out = r5_94
	branch (Mem86[Mem86[r2_36 + 1511:word32] + 20:word32] & 0x00000002) == 0x00000000 l000123FC
// DataOut: fp r2 r3 r5 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l000123FC:
	r4_100 = (uint32) Mem86[r2_36 + 0x0000C64B:byte]
// DataOut: fp r2 r3 r4 r5 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l000123EB:
	word32 r3_212 = (uint32) Mem86[r2_36 + 0x0000C644:word16]
	*r3Out = r3_212
	r4_100 = r3_212 >> 8
// DataOut: fp r2 r3 r4 r5 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l00012403:
	branch r5_94 == r4_100 l0001240C
// DataOut: fp r2 r3 r5 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l0001240C:
	word32 r1_141
	word32 r4_136 = Mem86[r2_36 + 0x0000C5FB:word32]
	word32 r3_137 = Mem86[r2_36 + 132:word32]
	branch r4_136 <= r3_137 l00012424
// DataOut: fp r2 r3 r4 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l00012424:
	r1_141 = r4_136
// DataOut: fp r1 r2 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l0001241D:
	r1_141 = r3_137
// DataOut: fp r1 r2 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l00012427:
	word32 r3_142
	*r3Out = r1_141
	word32 r5_143 = Mem86[r2_36 + 0x0000C5F7:word32]
	*r5Out = r5_143
	word32 r6_145 = r1_141 - 0x00000001
	branch r1_141 != 0x00000000 l0001243F
// DataOut: fp r2 r3 r5 r6 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l0001243F:
// DataOut: fp r2 r5 r6 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l00012440:
	word32 r8_168 = Mem86[r2_36 + 0x0000C811:word32] & ~0xFFFF0000
	Mem175[r5_143:byte] = (byte) (uint32) Mem86[r5_143:byte] ^ (byte) ((uint32) SLICE(((r8_168 | 0x00000002) ^ 0x00000001) * (r8_168 | 0x00000002), ui24, 8) & ~0xFFFFFF00)
	Mem182[r2_36 + 0x0000C809:word32] = (uint32) Mem175[r2_36 + 0x0000C80A:ui24] ^ Mem175[Mem175[r2_36 + 0x0000C5EB:word32] + (((uint32) Mem175[r5_143:byte] ^ Mem175[r2_36 + 0x0000C809:word32]) & ~0xFFFFFF00) * 4:word32]
	Mem185[r2_36 + 0x0000C80D:word32] = Mem182[r2_36 + 0x0000C80D:word32] + (Mem182[r2_36 + 0x0000C809:word32] & ~0xFFFFFF00)
	Mem189[r2_36 + 0x0000C80D:word32] = Mem185[r2_36 + 0x0000C80D:word32] * 0x08088405 + 0x00000001
	word32 r3_193 = Mem189[r2_36 + 0x0000C5EB:word32]
	*r3Out = r3_193
	Mem196[r2_36 + 0x0000C811:word32] = (uint32) Mem189[r2_36 + 0x0000C812:ui24] ^ Mem189[r3_193 + (((uint32) Mem189[r2_36 + 0x0000C810:byte] ^ Mem189[r2_36 + 0x0000C811:word32]) & ~0xFFFFFF00) * 4:word32]
	r5_143 = r5_143 + 0x00000001
	*r5Out = r5_143
	r6_145 = r6_145 - 0x00000001
	branch r6_145 == 0x00000000 l000124F8
// DataOut: fp r2 r3 r5 r6 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> r8:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l000124F5:
// DataOut: fp r2 r5 r6 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> r8:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l0001243C:
// DataOut: fp r2 r3 r5 r7 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l000124F8:
	word32 fp_163
	*fpOut = Mem86[fp_43 + 0x0000000C:word32]
	word32 ap_164
	*apOut = Mem86[fp_43 + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 r2 r3 r5 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> r8:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

l00012408:
	word32 fp_134
	*fpOut = Mem86[fp_43 + 0x0000000C:word32]
	word32 ap_135
	*apOut = Mem86[fp_43 + 0x00000008:word32]
	return -0x00000001
// DataOut: ap fp r0 r2 r3 r5 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000002C r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C

fn00012252_exit:
// DataOut: ap fp r0 r3 r5 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r5:<invalid> r0:<invalid> r3:<invalid> r1:<invalid> r7:<invalid> r6:<invalid> r9:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> -44(fp):fp + -16 -40(fp):<invalid> -36(fp):0x0000000C



void fn000124FE(word32 r0, word32 r2, word32 ap, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap pc r0 r2
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000124FE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000124FE_entry:
// DataOut: ap pc r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000124FE:
	word32 sp_10 = fp - 0x00000004
// DataOut: ap pc r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00012503:
	word32 sp_11 = sp_10 - 0x00000008
	Mem13[sp_11:word64] = 0x0000000000000000
	Mem16[sp_11 - 0x00000004:word32] = r2 + 8
	Mem18[sp_11 - 0x00000008:word32] = r2
	byte CVZN_25
	byte ZN_26
	bool C_27
	bool V_28
	bool Z_29
	bool N_30
	word32 r0_33
	word32 ap_34
	byte VZN_35
	call Mem18[pc:word32] + 2 (retsize: 4; depth: 4)
		uses: C_20,pc_23,r2_9,sp_17,V_21,ZN_19
		defs: ap_34,C_27,CVZN_25,N_30,pc_32,r0_33,r2_31,sp_24,V_28,VZN_35,Z_29,ZN_26
	real32 v15_36 = Mem18[Mem18[sp_10 + 32766:word32]:real32]
	Mem37[Mem37[r0_33 + -23984:word32]:real32] = v15_36
	branch v15_36 > 0.0F l00012503
// DataOut: ap pc r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:<invalid> -20(fp):r2 -16(fp):r2 + 8 -12(fp):0x0000000000000000

l0001251B:
	Mem42[Mem42[r0_33 + 5282:word32]:real32] = 0.8125F
	Mem45[ap_34 - 0x00000004:real32] = 0.75F
	Mem49[sp_10 - 0x00000004:word32] = ap_34 - 0x0000000C
	Mem51[sp_10 - 0x00000008:word32] = 0x00000008
	Mem54[sp_10 - 0x0000000C:word32] = r2 + 24
	Mem57[sp_10 - 0x00000014:word64] = 0x0000000000000000
	Mem60[sp_10 - 0x00000018:word32] = r2 + 10
	Mem62[sp_10 - 0x0000001C:word32] = 0x00000027
	Mem65[sp_10 - 0x00000020:int32] = (int32) Mem62[r2 + 8:int16]
	Mem67[sp_10 - 0x00000024:word32] = 0x00000000
	word32 sp_73
	byte CVZN_74
	byte ZN_75
	bool C_76
	bool V_77
	bool Z_78
	bool N_79
	word32 r2_80
	word32 pc_81
	word32 r0_82
	word32 ap_83
	byte VZN_84
	call Mem67[pc:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_46,C_69,CVZN_25,N_30,pc_72,r0_33,r2_31,sp_66,V_70,VZN_35,Z_29,ZN_68
		defs: ap_83,C_76,CVZN_74,N_79,pc_81,r0_82,r2_80,sp_73,V_77,VZN_84,Z_78,ZN_75
	__halt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> pc:<invalid> -20(fp):r2 -16(fp):r2 + 8 -12(fp):0x0000000000000000



void fn000125CA(word32 r0, word32 r2, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r2
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000125CA_entry:
// DataOut: ap fp pc r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000125CA:
	fn000124FE(r0, r2, ap, pc)
	byte CVZN_27
	byte ZN_28
	bool C_29
	bool V_30
	byte CZN_34
	bool Z_35
	byte VZN_37
	word32 pc_38
	word32 r0_36
	word32 ap_32
	word32 r2_33
	word32 sp_26
	word32 fp_31
	call Mem0[0x00019270:word32] + 2 (retsize: 4; depth: 28)
		uses: ap,C_24,dwLoc0C_4,dwLoc10_13,dwLoc14_17,dwLoc18_22,fp,pc,r0,r2_18,sp_19,V_25,ZN_23
		defs: ap_32,C_29,CVZN_27,CZN_34,fp_31,pc_38,r0_36,r2_33,sp_26,V_30,VZN_37,Z_35,ZN_28
	branch Mem0[fp_31 + -5:byte] == 0x0A l00012604
// DataOut: ap fp pc r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000125EE:
// DataOut: ap fp pc r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:sp - 0x0000001C r2:ap + 4 -12(fp):0x00000000

l000125F0:
	word32 sp_68 = sp_26 - 0x00000004
	Mem69[sp_68:word32] = 0x00000001
	Mem72[sp_68 - 0x00000004:word32] = fp_31 + -6
	Mem75[sp_68 - 0x00000008:word32] = Mem72[r2_33:word32]
	byte CVZN_80
	byte ZN_81
	bool C_82
	bool V_83
	byte CZN_87
	bool Z_88
	byte VZN_90
	call Mem75[0x00019270:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_32,C_77,CVZN_27,CZN_39,dwLoc0C_4,dwLoc10_13,dwLoc14_17,dwLoc18_22,fp_67,pc_38,r0_36,r2_65,sp_73,V_78,VZN_37,Z_40,ZN_76
		defs: ap_85,C_82,CVZN_80,CZN_87,fp_84,pc_91,r0_89,r2_86,sp_79,V_83,VZN_90,Z_88,ZN_81
	branch Mem75[fp_31 + -6:byte] != 0x0A l000125F0
// DataOut: ap fp pc r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:ap + 4 -12(fp):0x00000000

l00012604:
	Mem52[sp_26 - 0x00000004:word32] = 0x00000001
	fn000124FE(r0_36, r2_33, ap_32, pc_38)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:ap + 4 -12(fp):0x00000000
// Terminates process

fn000125CA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: r0:<invalid> sp:fp - 0x00000004 fp:<invalid> ap:<invalid> -12(fp):0x00000000



void fn00012616(word32 r0, word32 r1, word32 r8, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r1 r8
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r11 r2 r3 r4 r5 r6 r7 r9 sp
// Preserved:
fn00012616_entry:
// DataOut: ap fp r0 r1 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012616:
	word32 sp_14
	byte CVZN_15
	byte ZN_16
	bool C_17
	bool V_18
	word32 r7_19
	word32 r8_20
	word32 r0_21
	word32 r6_22
	bool Z_23
	bool N_24
	word32 fp_25
	word32 ap_26
	word32 r9_27
	word32 r11_28
	word32 r5_29
	word32 r4_30
	word32 r3_31
	word32 r2_32
	word32 r10_33
	word32 r1_34
	byte VZN_35
	byte CZN_36
	call Mem0[0x00019248:word32] + 2 (retsize: 4; depth: 24)
		uses: C_12,dwLoc10_8,dwLoc14_10,r7_4,r8,sp_9,V_13,ZN_11
		defs: ap_26,C_17,CVZN_15,CZN_36,fp_25,N_24,r0_21,r1_34,r10_33,r11_28,r2_32,r3_31,r4_30,r5_29,r6_22,r7_19,r8_20,r9_27,sp_14,V_18,VZN_35,Z_23,ZN_16
	word32 sp_42
	byte CVZN_43
	byte ZN_44
	bool C_45
	bool V_46
	word32 r7_47
	word32 r8_48
	word32 r0_49
	word32 r6_50
	bool Z_51
	bool N_52
	word32 fp_53
	word32 ap_54
	word32 r9_55
	word32 r11_56
	word32 r5_57
	word32 r4_58
	word32 r3_59
	word32 r2_60
	word32 r10_61
	word32 r1_62
	byte VZN_63
	byte CZN_64
	call Mem0[0x0001924C:word32] + 2 (retsize: 4; depth: 28)
		uses: ap_26,C_40,CVZN_15,CZN_36,dwLoc10_8,dwLoc14_10,dwLoc18_38,fp_25,N_24,r0_21,r1_34,r10_33,r11_28,r2_32,r3_31,r4_30,r5_29,r6_22,r7_19,r8_20,r9_27,sp_37,V_41,VZN_35,Z_23,ZN_39
		defs: ap_54,C_45,CVZN_43,CZN_64,fp_53,N_52,r0_49,r1_62,r10_61,r11_56,r2_60,r3_59,r4_58,r5_57,r6_50,r7_47,r8_48,r9_55,sp_42,V_46,VZN_63,Z_51,ZN_44
	branch r0_49 != 0x00000000 l00012644
// DataOut: ap fp r0 r1 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012644:
	byte CVZN_111
	byte ZN_112
	bool C_113
	bool V_114
	word32 r8_116
	word32 r0_117
	word32 r6_118
	bool Z_119
	bool N_120
	word32 fp_121
	word32 r9_123
	word32 r11_124
	word32 r5_125
	word32 r4_126
	word32 r3_127
	word32 r2_128
	word32 r10_129
	word32 r1_130
	byte VZN_131
	byte CZN_132
	word32 r7_115
	word32 sp_110
	word32 ap_122
	call Mem0[0x00019294:word32] + 2 (retsize: 4; depth: 32)
		uses: ap_54,C_108,CVZN_43,CZN_64,dwLoc10_8,dwLoc14_10,dwLoc18_38,dwLoc1C_106,fp_53,N_52,r0_49,r1_62,r10_61,r11_56,r2_60,r3_59,r4_58,r5_57,r6_65,r7_47,r8_48,r9_55,sp_104,V_109,VZN_63,Z_67,ZN_107
		defs: ap_122,C_113,CVZN_111,CZN_132,fp_121,N_120,r0_117,r1_130,r10_129,r11_124,r2_128,r3_127,r4_126,r5_125,r6_118,r7_115,r8_116,r9_123,sp_110,V_114,VZN_131,Z_119,ZN_112
	word32 r9_133 = r8_116 + 14
// DataOut: ap fp r0 r1 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018 r7:<invalid> r6:r0 -24(fp):r0 -20(fp):0x00000000 -16(fp):r8 + 12

l00012680:
	branch Mem0[r9_133:byte] == 0x00 l0001268C
// DataOut: ap fp r0 r1 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:r0 r9:<invalid> r11:<invalid> r5:<invalid> r4:<invalid> r3:ap + 8 r2:<invalid> r1:<invalid> r0:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l00012684:
	word32 sp_454 = sp_110 - 0x00000004
	Mem456[sp_454:word32] = Mem0[r7_115:word32]
	Mem458[sp_454 - 0x00000004:word32] = r9_133
	byte CVZN_463
	byte ZN_464
	bool C_465
	bool V_466
	word32 r8_468
	word32 r0_469
	word32 r6_470
	bool Z_471
	bool N_472
	word32 fp_473
	word32 r9_475
	word32 r11_476
	word32 r5_477
	word32 r4_478
	word32 r3_479
	word32 r2_480
	word32 r10_481
	word32 r1_482
	byte VZN_483
	byte CZN_484
	call Mem458[sp_454 + 0x00000008:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_163,C_460,CVZN_158,CZN_145,dwLoc10_8,dwLoc14_10,dwLoc18_135,dwLoc1C_141,fp_162,N_160,r0_159,r1_147,r10_148,r11_153,r2_149,r3_150,r4_151,r5_152,r6_155,r7_157,r8_156,r9_154,sp_457,V_461,VZN_146,Z_165,ZN_459
		defs: ap_474,C_465,CVZN_463,CZN_484,fp_473,N_472,r0_469,r1_482,r10_481,r11_476,r2_480,r3_479,r4_478,r5_477,r6_470,r7_467,r8_468,r9_475,sp_462,V_466,VZN_483,Z_471,ZN_464
// DataOut: ap fp r0 r1 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:r0 r9:<invalid> r11:<invalid> r5:<invalid> r4:<invalid> r3:ap + 8 r2:<invalid> r1:<invalid> r0:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l0001268C:
	word32 sp_171 = sp_110 - 0x00000004
	Mem173[sp_171:word32] = Mem0[r7_115:word32]
	Mem176[sp_171 - 0x00000004:word32] = Mem173[ap_122 + 4:word32]
	word32 sp_180
	byte CVZN_181
	byte ZN_182
	bool C_183
	bool V_184
	word32 r7_185
	word32 r8_186
	word32 r0_187
	word32 r6_188
	bool Z_189
	bool N_190
	word32 fp_191
	word32 ap_192
	word32 r9_193
	word32 r11_194
	word32 r5_195
	word32 r4_196
	word32 r3_197
	word32 r2_198
	word32 r10_199
	word32 r1_200
	byte VZN_201
	byte CZN_202
	call Mem176[sp_171 + 0x00000008:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_170,C_178,CVZN_158,CZN_145,dwLoc10_8,dwLoc14_10,dwLoc18_135,dwLoc1C_141,fp_162,N_160,r0_159,r1_147,r10_148,r11_153,r2_149,r3_150,r4_151,r5_152,r6_155,r7_168,r8_156,r9_154,sp_174,V_179,VZN_146,Z_165,ZN_177
		defs: ap_192,C_183,CVZN_181,CZN_202,fp_191,N_190,r0_187,r1_200,r10_199,r11_194,r2_198,r3_197,r4_196,r5_195,r6_188,r7_185,r8_186,r9_193,sp_180,V_184,VZN_201,Z_189,ZN_182
	Mem205[sp_180 - 0x00000004:word32] = Mem176[r7_185:word32]
	word32 sp_209
	byte CVZN_210
	byte ZN_211
	bool C_212
	bool V_213
	word32 r7_214
	word32 r8_215
	word32 r0_216
	word32 r6_217
	bool Z_218
	bool N_219
	word32 fp_220
	word32 ap_221
	word32 r9_222
	word32 r11_223
	word32 r5_224
	word32 r4_225
	word32 r3_226
	word32 r2_227
	word32 r10_228
	word32 r1_229
	byte VZN_230
	byte CZN_231
	call r11_194 + 2 (retsize: 4; depth: 4)
		uses: ap_192,C_207,CVZN_181,CZN_202,dwLoc10_8,dwLoc14_10,dwLoc18_135,dwLoc1C_141,fp_191,N_190,r0_187,r1_200,r10_199,r11_194,r2_198,r3_197,r4_196,r5_195,r6_188,r7_185,r8_186,r9_193,sp_203,V_208,VZN_201,Z_189,ZN_206
		defs: ap_221,C_212,CVZN_210,CZN_231,fp_220,N_219,r0_216,r1_229,r10_228,r11_223,r2_227,r3_226,r4_225,r5_224,r6_217,r7_214,r8_215,r9_222,sp_209,V_213,VZN_230,Z_218,ZN_211
	Mem234[sp_209 - 0x00000004:word32] = 0x00000000
	byte CVZN_239
	byte ZN_240
	bool C_241
	bool V_242
	word32 r7_243
	word32 r8_244
	word32 r0_245
	bool Z_247
	bool N_248
	word32 fp_249
	word32 ap_250
	word32 r9_251
	word32 r11_252
	word32 r5_253
	word32 r4_254
	word32 r3_255
	word32 r2_256
	word32 r10_257
	word32 r1_258
	byte VZN_259
	byte CZN_260
	word32 r6_246
	word32 sp_238
	call r10_228 + 2 (retsize: 4; depth: 4)
		uses: ap_221,C_236,CVZN_210,CZN_231,dwLoc10_8,dwLoc14_10,dwLoc18_135,dwLoc1C_141,fp_220,N_219,r0_216,r1_229,r10_228,r11_223,r2_232,r3_226,r4_225,r5_224,r6_217,r7_214,r8_215,r9_222,sp_233,V_237,VZN_230,Z_218,ZN_235
		defs: ap_250,C_241,CVZN_239,CZN_260,fp_249,N_248,r0_245,r1_258,r10_257,r11_252,r2_256,r3_255,r4_254,r5_253,r6_246,r7_243,r8_244,r9_251,sp_238,V_242,VZN_259,Z_247,ZN_240
// DataOut: ap fp r0 r1 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:r0 r9:<invalid> r11:<invalid> r5:<invalid> r4:<invalid> r3:ap + 8 r2:<invalid> r1:<invalid> r0:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l000126A4:
	word32 sp_263 = sp_238 - 0x00000004
	Mem264[sp_263:word32] = r6_246
	byte CVZN_269
	byte ZN_270
	bool C_271
	bool V_272
	word32 r7_273
	word32 r8_274
	word32 r0_275
	bool Z_277
	bool N_278
	word32 fp_279
	word32 ap_280
	word32 r9_281
	word32 r11_282
	word32 r5_283
	word32 r4_284
	word32 r3_285
	word32 r2_286
	word32 r10_287
	word32 r1_288
	byte VZN_289
	byte CZN_290
	call r5_253 + 2 (retsize: 4; depth: 4)
		uses: ap_250,C_266,CVZN_239,CZN_260,dwLoc10_8,dwLoc14_10,dwLoc18_135,dwLoc1C_141,fp_249,N_248,r0_245,r1_258,r10_257,r11_252,r2_256,r3_255,r4_254,r5_253,r6_261,r7_243,r8_244,r9_251,sp_263,V_267,VZN_259,Z_247,ZN_265
		defs: ap_280,C_271,CVZN_269,CZN_290,fp_279,N_278,r0_275,r1_288,r10_287,r11_282,r2_286,r3_285,r4_284,r5_283,r6_276,r7_273,r8_274,r9_281,sp_268,V_272,VZN_289,Z_277,ZN_270
	word32 r1_293 = SEQ(SLICE(r1_288, word24, 8), (int8) r0_275)
	branch (byte) r1_293 != 0x0D l000126B4
// DataOut: ap fp r0 r1 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:r0 r9:<invalid> r11:<invalid> r5:<invalid> r4:<invalid> r3:ap + 8 r2:<invalid> r1:<invalid> r0:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l000126B1:
	r1_293 = SEQ(SLICE(r1_293, word24, 8), 0x0A)
// DataOut: ap fp r0 r1 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:r0 r9:<invalid> r11:<invalid> r5:<invalid> r4:<invalid> r3:ap + 8 r2:<invalid> r1:<invalid> r0:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l000126B4:
	branch r2_286 >= r4_284 l000126C3
// DataOut: ap fp r0 r1 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:r0 r9:<invalid> r11:<invalid> r5:<invalid> r4:<invalid> r3:ap + 8 r2:<invalid> r1:<invalid> r0:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l000126B9:
	Mem444[Mem444[r3_285:word32]:byte] = (byte) r1_293
// DataOut: ap fp r0 r1 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:r0 r9:<invalid> r11:<invalid> r5:<invalid> r4:<invalid> r3:ap + 8 r2:<invalid> r1:<invalid> r0:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l000126C3:
	branch (byte) r1_293 != 0x0A l000126A4
// DataOut: ap fp r0 r1 r2 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:r0 r9:<invalid> r11:<invalid> r5:<invalid> r4:<invalid> r3:ap + 8 r2:<invalid> r1:<invalid> r0:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l000126C8:
	Mem311[sp_238 - 0x00000004:word32] = 0x00000001
	word32 sp_315
	byte CVZN_316
	byte ZN_317
	bool C_318
	bool V_319
	word32 r7_320
	word32 r8_321
	word32 r0_322
	word32 r6_323
	bool Z_324
	bool N_325
	word32 fp_326
	word32 ap_327
	word32 r9_328
	word32 r11_329
	word32 r5_330
	word32 r4_331
	word32 r3_332
	word32 r2_333
	word32 r10_334
	word32 r1_335
	byte VZN_336
	byte CZN_337
	call r10_287 + 2 (retsize: 4; depth: 4)
		uses: ap_280,C_313,CVZN_269,CZN_307,dwLoc10_8,dwLoc14_10,dwLoc18_135,dwLoc1C_141,fp_279,N_301,r0_305,r1_297,r10_287,r11_282,r2_303,r3_285,r4_284,r5_283,r6_276,r7_273,r8_274,r9_281,sp_310,V_314,VZN_289,Z_308,ZN_312
		defs: ap_327,C_318,CVZN_316,CZN_337,fp_326,N_325,r0_322,r1_335,r10_334,r11_329,r2_333,r3_332,r4_331,r5_330,r6_323,r7_320,r8_321,r9_328,sp_315,V_319,VZN_336,Z_324,ZN_317
	Mem340[sp_315 - 0x00000004:word32] = Mem311[r7_320:word32]
	Mem342[sp_315 - 0x00000008:word32] = 0x0000000A
	word32 sp_346
	byte CVZN_347
	byte ZN_348
	bool C_349
	bool V_350
	word32 r7_351
	word32 r8_352
	word32 r0_353
	word32 r6_354
	bool Z_355
	bool N_356
	word32 fp_357
	word32 ap_358
	word32 r9_359
	word32 r11_360
	word32 r5_361
	word32 r4_362
	word32 r3_363
	word32 r2_364
	word32 r10_365
	word32 r1_366
	byte VZN_367
	byte CZN_368
	call Mem342[0x00019268:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_327,C_344,CVZN_316,CZN_337,dwLoc10_8,dwLoc14_10,dwLoc18_135,dwLoc1C_141,fp_326,N_325,r0_322,r1_335,r10_334,r11_329,r2_333,r3_332,r4_331,r5_330,r6_323,r7_320,r8_321,r9_328,sp_341,V_345,VZN_336,Z_324,ZN_343
		defs: ap_358,C_349,CVZN_347,CZN_368,fp_357,N_356,r0_353,r1_366,r10_365,r11_360,r2_364,r3_363,r4_362,r5_361,r6_354,r7_351,r8_352,r9_359,sp_346,V_350,VZN_367,Z_355,ZN_348
	Mem371[sp_346 - 0x00000004:word32] = Mem342[r7_351:word32]
	byte CVZN_376
	byte ZN_377
	bool C_378
	bool V_379
	word32 r8_381
	word32 r0_382
	word32 r6_383
	bool Z_384
	bool N_385
	word32 fp_386
	word32 r9_388
	word32 r11_389
	word32 r5_390
	word32 r4_391
	word32 r3_392
	word32 r2_393
	word32 r10_394
	word32 r1_395
	byte VZN_396
	byte CZN_397
	call r11_360 + 2 (retsize: 4; depth: 4)
		uses: ap_358,C_373,CVZN_347,CZN_368,dwLoc10_8,dwLoc14_10,dwLoc18_135,dwLoc1C_141,fp_357,N_356,r0_353,r1_366,r10_365,r11_360,r2_364,r3_363,r4_362,r5_361,r6_354,r7_351,r8_352,r9_359,sp_369,V_374,VZN_367,Z_355,ZN_372
		defs: ap_387,C_378,CVZN_376,CZN_397,fp_386,N_385,r0_382,r1_395,r10_394,r11_389,r2_393,r3_392,r4_391,r5_390,r6_383,r7_380,r8_381,r9_388,sp_375,V_379,VZN_396,Z_384,ZN_377
	r9_133 = r8_381 + 15
	branch Mem371[Mem371[sp_110 + (r2_393 - 0x00000001):word32]:byte] != 0x0A l00012680
// DataOut: ap fp r0 r1 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:r0 r9:<invalid> r11:<invalid> r5:<invalid> r4:<invalid> r3:ap + 8 r2:<invalid> r1:<invalid> r0:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l000126EC:
	word32 r3_403 = Mem371[ap_122 + 8:word32]
	Mem405[r3_403:byte] = 0x00
	Mem407[sp_110 - 0x00000004:word32] = r6_383
	word32 sp_411
	byte CVZN_412
	byte ZN_413
	bool C_414
	bool V_415
	word32 r7_416
	word32 r8_417
	word32 r0_418
	word32 r6_419
	bool Z_420
	bool N_421
	word32 fp_422
	word32 ap_423
	word32 r9_424
	word32 r11_425
	word32 r5_426
	word32 r4_427
	word32 r3_428
	word32 r2_429
	word32 r10_430
	word32 r1_431
	byte VZN_432
	byte CZN_433
	call Mem407[0x00019250:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_387,C_409,CVZN_376,CZN_400,dwLoc10_8,dwLoc14_10,dwLoc18_135,dwLoc1C_141,fp_386,N_385,r0_399,r1_395,r10_394,r11_389,r2_393,r3_403,r4_391,r5_390,r6_383,r7_380,r8_381,r9_398,sp_406,V_410,VZN_396,Z_401,ZN_408
		defs: ap_423,C_414,CVZN_412,CZN_433,fp_422,N_421,r0_418,r1_431,r10_430,r11_425,r2_429,r3_428,r4_427,r5_426,r6_419,r7_416,r8_417,r9_424,sp_411,V_415,VZN_432,Z_420,ZN_413
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r7:<invalid> r6:r0 r9:r8 + 15 r11:<invalid> r5:<invalid> r4:<invalid> r3:ap + 8 r2:<invalid> r1:<invalid> r0:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12

l00012641:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018 r7:<invalid> r6:r0 -24(fp):r0 -20(fp):0x00000000 -16(fp):r8 + 12

fn00012616_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r7:<invalid> r6:r0 r0:<invalid> fp:<invalid> ap:<invalid> r9:r8 + 15 r11:<invalid> r5:<invalid> r4:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> -36(fp):r8 + 14 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):r8 + 12



void fn00012702(word32 r0, word32 r2, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00012702_entry:
// DataOut: ap fp r0 r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012702:
	Mem12[r2 + 116:word32] = 0x00000000
	word32 v22_16 = Mem12[Mem12[ap + 8:word32]:word32]
	word32 r4_15 = Mem12[Mem12[ap + 4:word32]:word32]
	word32 sp_107 = fp - 0x00000010
	word32 dwLoc0C_17 = v22_16
	word32 dwLoc10_19 = r4_15 - 0x00000001
	branch r4_15 > 0x00000001 l00012732
// DataOut: ap fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l00012732:
	dwLoc0C_17 = v22_16 + 0x00000004
	branch Mem12[Mem12[v22_16 + 0x00000004:word32]:byte] == 0x2D l00012743
// DataOut: ap fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(0) Local -0010(32)

l00012743:
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(0) Local -0010(32)

l00012744:
	r0 = Mem12[dwLoc0C_17:word32] + 0x00000001
	r4_15 = (int32) Mem12[r0:int8]
	branch r4_15 != 0x00000000 l00012758
// DataOut: ap fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l00012758:
	branch r4_15 > 0x0000007A l000127FD
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l000127FD:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l0001275B_1:
	word32 sp_232
	byte CVZN_233
	byte ZN_234
	bool C_235
	bool V_236
	bool Z_237
	bool N_238
	word32 r1_239
	word32 r7_240
	word32 r8_241
	word32 r6_242
	word32 r11_243
	word32 r9_244
	word32 r10_245
	word32 r2_246
	word32 ap_247
	word32 r4_248
	word32 r3_249
	byte CZN_250
	word32 fp_251
	word32 r0_252
	word32 r5_253
	byte VZN_254
	call 0x00012763 + (r4_15 - 0x0000002D) * 0x00000002 (retsize: 4; depth: 20)
		uses: ap,C_229,CVZN_207,CZN_206,dwLoc08_4,dwLoc0C_204,dwLoc10_205,dwLoc14,fp,N,r0_227,r1_5,r10,r11_9,r2,r3_211,r4_213,r5_212,r6_8,r7_6,r8_7,r9,sp_2,V_230,VZN_214,Z_215,ZN_228
		defs: ap_247,C_235,CVZN_233,CZN_250,fp_251,N_238,r0_252,r1_239,r10_245,r11_243,r2_246,r3_249,r4_248,r5_253,r6_242,r7_240,r8_241,r9_244,sp_232,V_236,VZN_254,Z_237,ZN_234
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012755:
// DataOut: ap fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l00012948:
	word32 v37_217 = dwLoc10_19 - 0x00000001
	dwLoc10_19 = v37_217
	branch v37_217 <= 0x00000000 l0001295D
// DataOut: ap fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l0001294C:
	word32 v38_221 = dwLoc0C_17 + 0x00000004
	dwLoc0C_17 = v38_221
	branch Mem12[Mem12[v38_221:word32]:byte] != 0x2D l0001295D
// DataOut: ap fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l0001295A:
// DataOut: ap fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(0) Local -0010(32)

l00012740:
// DataOut: ap fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l0001272F:
// DataOut: ap fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l0001295D:
	word32 v27_57 = dwLoc10_19 - 0x00000001
	branch dwLoc10_19 == 0x00000000 l0001296B
// DataOut: ap fp r0 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l00012966:
	branch 0x00000000 == 0x00000000 l0001297F
// DataOut: ap fp r0 r2 r3 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l0001297F:
	branch Mem12[r2 + 44:word32] == 0x00000000 l00012994
// DataOut: r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32)

l00012984:
	byte CVZN_162
	byte ZN_163
	bool C_164
	bool V_165
	bool Z_166
	bool N_167
	word32 r1_168
	word32 r7_169
	word32 r8_170
	word32 r6_171
	word32 r11_172
	word32 r9_173
	word32 r10_174
	word32 ap_176
	word32 r4_177
	word32 r3_178
	byte CZN_179
	word32 fp_180
	word32 r0_181
	word32 r5_182
	byte VZN_183
	call Mem12[0x000192E4:word32] + 2 (retsize: 4; depth: 24)
		uses: ap,C_159,CVZN_55,CZN_53,dwLoc08_4,dwLoc0C_48,dwLoc10_58,dwLoc14_157,fp,N,r0_52,r1_5,r10,r11_9,r2,r3_56,r4_54,r5_51,r6_8,r7_6,r8_7,r9,sp_156,V_160,VZN_50,Z_86,ZN_158
		defs: ap_176,C_164,CVZN_162,CZN_179,fp_180,N_167,r0_181,r1_168,r10_174,r11_172,r2_175,r3_178,r4_177,r5_182,r6_171,r7_169,r8_170,r9_173,sp_161,V_165,VZN_183,Z_166,ZN_163
	branch r0_181 != 0x00000000 l00012994
// DataOut: r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012991:
	Mem189[r2 + 44:word32] = 0x00000000
// DataOut: r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000014 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012994:
	branch Mem12[r2 + 36:word32] < 0x00000000 l000129A2
// DataOut: r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012999:
	branch Mem12[sp_107:word32] <= 0x00000000 l000129A6
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l0001299D:
	branch Mem12[r2 + 36:word32] != 0x00000000 l000129A6
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l000129A2:
	Mem145[r2 + 36:word32] = 0x00000003
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l000129A6:
	word32 r0_115 = Mem12[r2 + 36:word32]
	branch r0_115 > 0x0000000A l000129C2
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l000129C2:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l000129AA_1:
	word32 sp_120
	byte CVZN_121
	byte ZN_122
	bool C_123
	bool V_124
	bool Z_125
	bool N_126
	word32 r1_127
	word32 r7_128
	word32 r8_129
	word32 r6_130
	word32 r11_131
	word32 r9_132
	word32 r10_133
	word32 r2_134
	word32 ap_135
	word32 r4_136
	word32 r3_137
	byte CZN_138
	word32 fp_139
	word32 r0_140
	word32 r5_141
	byte VZN_142
	call 0x000129AE + r0_115 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_109,C_117,CVZN_105,CZN_93,dwLoc08_4,dwLoc0C_48,dwLoc10_58,dwLoc14_106,fp_108,N_111,r0_115,r1_103,r10_97,r11_99,r2_96,r3_94,r4_95,r5_91,r6_100,r7_102,r8_101,r9_98,sp_107,V_118,VZN_90,Z_114,ZN_116
		defs: ap_135,C_123,CVZN_121,CZN_138,fp_139,N_126,r0_140,r1_127,r10_133,r11_131,r2_134,r3_137,r4_136,r5_141,r6_130,r7_128,r8_129,r9_132,sp_120,V_124,VZN_142,Z_125,ZN_122
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):0x00000001 -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l0001296B:
	Mem65[Mem65[ap + 4:word32]:word32] = v27_57
	Mem67[Mem67[ap + 8:word32]:word32] = dwLoc0C_17
	fn00008CCE(r0, r2, dwLoc10_19, r4_15, ap)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000010 r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

fn00012702_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> fp:<invalid> ap:<invalid> r1:0x00000000 r7:0x00000001 r8:0x00000000 r6:0x00000001 r11:0x00000000 Sequence r10:r9:0x0000000000000000 r4:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000



word32 fn00012A2A(word32 r0, word32 r2, word32 r4, word32 r5, word32 ap, word32 fp, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r2 r4 r5
// LiveOut: ap fp r0 r11 r3 r6 r7 r8 sp
// Trashed: CVZN ap fp r0 r11 r3 r6 r7 r8 sp
// Preserved:
fn00012A2A_entry:
	*r11Out = r11
	*r7Out = r7
	*r3Out = r3
	*r6Out = r6
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012A2A:
	word32 sp_1192 = fp - 0x00000004
	word32 r8_1197 = 0x00000000
	*r8Out = r8_1197
	branch Mem0[r2 + 28:word32] == 0x00000000 l00012AAB
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012A49:
	word32 r0_1110 = (uint32) Mem0[r2 + 0x0000C688:word16]
	branch r0_1110 != 0x00000001 l00012A5C
// DataOut: fp pc r0 r1 r10 r11 r2 r4 r5 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r8:0x00000000
// LocalsOut: fp(32)

l00012A5C:
// DataOut: fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:0x00000000 r0:<invalid> -8(fp):0x00000000
// LocalsOut: fp(32)

l00012A57:
// DataOut: fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:0x00000000 r0:<invalid> -8(fp):0x00000000
// LocalsOut: fp(32)

l00012A5F:
	word32 sp_1131
	byte CVZN_1132
	byte ZN_1133
	bool C_1134
	bool V_1135
	word32 r8_1136
	bool Z_1137
	bool N_1138
	word32 r2_1139
	word32 r0_1140
	byte CZN_1141
	word32 r4_1142
	word32 r6_1143
	word32 r3_1144
	word32 ap_1145
	word32 r7_1146
	word32 r5_1147
	word32 fp_1148
	word32 r11_1149
	call Mem0[0x000192C4:word32] + 2 (retsize: 4; depth: 32)
		uses: ap,C_1129,CVZN,CZN_1111,dwLoc08_1109,dwLoc0C_1116,dwLoc10_1118,dwLoc14_1121,dwLoc18_1124,dwLoc1C_1127,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc30,fp,N,r0_1110,r11,r2,r3,r4,r5,r6_1114,r7,r8_3,sp_1125,V_1130,Z_1112,ZN_1128
		defs: ap_1145,C_1134,CVZN_1132,CZN_1141,fp_1148,N_1138,r0_1140,r11_1149,r2_1139,r3_1144,r4_1142,r5_1147,r6_1143,r7_1146,r8_1136,sp_1131,V_1135,Z_1137,ZN_1133
	branch r0_1140 >= 0x00000027 l00012A88
// DataOut: fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r8:0x00000000 r0:<invalid> r6:<invalid> -8(fp):0x00000000
// LocalsOut: fp(32)

l00012A88:
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000001C r8:0x00000000 r0:<invalid> r6:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32)

l00012A81:
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000001C r8:0x00000000 r0:<invalid> r6:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000
// LocalsOut: fp(32)

l00012A8C:
	word32 sp_1162
	byte CVZN_1163
	byte ZN_1164
	bool C_1165
	bool V_1166
	word32 r8_1167
	bool Z_1168
	bool N_1169
	word32 r2_1170
	word32 r0_1171
	byte CZN_1172
	word32 r4_1173
	word32 r6_1174
	word32 r3_1175
	word32 ap_1176
	word32 r7_1177
	word32 r5_1178
	word32 fp_1179
	word32 r11_1180
	call Mem0[0x000192D0:word32] + 2 (retsize: 4; depth: 40)
		uses: ap_1145,C_1160,CVZN_1132,CZN_1150,dwLoc08_1109,dwLoc0C_1116,dwLoc10_1118,dwLoc14_1121,dwLoc18_1124,dwLoc1C_1127,dwLoc20_1155,dwLoc24_1158,dwLoc28,dwLoc2C,dwLoc30,fp_1148,N_1151,r0_1140,r11_1149,r2_1139,r3_1153,r4_1142,r5_1147,r6_1143,r7_1146,r8_1136,sp_1156,V_1161,Z_1137,ZN_1159
		defs: ap_1176,C_1165,CVZN_1163,CZN_1172,fp_1179,N_1169,r0_1171,r11_1180,r2_1170,r3_1175,r4_1173,r5_1178,r6_1174,r7_1177,r8_1167,sp_1162,V_1166,Z_1168,ZN_1164
	word32 ap_1188 = Mem0[r2_1170 + 0x0000C839:word32]
	byte CVZN_1193
	byte ZN_1194
	bool C_1195
	bool V_1196
	bool Z_1198
	bool N_1199
	word32 r0_1201
	byte CZN_1202
	word32 r6_1204
	word32 r3_1205
	word32 r7_1207
	word32 r5_1208
	word32 r11_1210
	call ap_1188 + 2 (retsize: 4; depth: 52)
		uses: ap_1188,C_1190,CVZN_1163,CZN_1172,dwLoc08_1109,dwLoc0C_1116,dwLoc10_1118,dwLoc14_1121,dwLoc18_1124,dwLoc1C_1127,dwLoc20_1155,dwLoc24_1158,dwLoc28_1182,dwLoc2C_1185,dwLoc30_1187,fp_1179,N_1169,r0_1171,r11_1180,r2_1170,r3_1175,r4_1173,r5_1178,r6_1174,r7_1177,r8_1167,sp_1186,V_1191,Z_1168,ZN_1189
		defs: ap_1206,C_1195,CVZN_1193,CZN_1202,fp_1209,N_1199,r0_1201,r11_1210,r2_1200,r3_1205,r4_1203,r5_1208,r6_1204,r7_1207,r8_1197,sp_1192,V_1196,Z_1198,ZN_1194
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000001C r8:0x00000000 r0:<invalid> r6:<invalid> r3:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012AAB:
	branch Mem0[r2 + 36:word32] > 0x00000009 l00012AB4
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r0:<invalid> r6:<invalid> r3:<invalid> ap:<invalid> -48(fp):r2 -44(fp):r2 + 1515 -40(fp):<invalid> -36(fp):r2 + 1515 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012AB4:
	word32 sp_1073
	word32 r2_1081
	word32 r4_1084
	word32 sp_180 = sp_1192 - 0x00000004
	Mem181[sp_180:word32] = 0x00000000
	Mem184[sp_180 - 0x00000004:word32] = r4 + 64
	Mem187[sp_180 - 0x00000008:word32] = r2 + 1515
	word32 r7_188 = Mem187[0x000192D0:word32]
	word32 sp_192
	byte CVZN_193
	byte ZN_194
	bool C_195
	bool V_196
	word32 r8_197
	bool Z_198
	bool N_199
	word32 r2_200
	word32 r0_201
	byte CZN_202
	word32 r4_203
	word32 r6_204
	word32 r3_205
	word32 ap_206
	word32 r7_207
	word32 r5_208
	word32 fp_209
	word32 r11_210
	call r7_188 + 2 (retsize: 4; depth: 4)
		uses: ap_58,C_190,CVZN_52,CZN_59,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_57,N_50,r0_54,r11_43,r2_49,r3_46,r4_48,r5_44,r6_47,r7_188,r8_53,sp_185,V_191,Z_51,ZN_189
		defs: ap_206,C_195,CVZN_193,CZN_202,fp_209,N_199,r0_201,r11_210,r2_200,r3_205,r4_203,r5_208,r6_204,r7_207,r8_197,sp_192,V_196,Z_198,ZN_194
	Mem212[sp_192 - 0x00000004:word32] = r0_201
	Mem215[sp_192 - 0x00000008:word32] = r2_200 + 1515
	Mem217[sp_192 - 0x0000000C:word32] = r2_200
	word32 ap_218 = Mem217[r2_200 + 0x0000C839:word32]
	word32 sp_222
	byte CVZN_223
	byte ZN_224
	bool C_225
	bool V_226
	word32 r8_227
	bool Z_228
	bool N_229
	word32 r2_230
	word32 r0_231
	byte CZN_232
	word32 r4_233
	word32 r6_234
	word32 r3_235
	word32 ap_236
	word32 r7_237
	word32 r5_238
	word32 fp_239
	word32 r11_240
	call ap_218 + 2 (retsize: 4; depth: 4)
		uses: ap_218,C_220,CVZN_193,CZN_202,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_209,N_199,r0_201,r11_210,r2_200,r3_205,r4_203,r5_208,r6_204,r7_207,r8_197,sp_216,V_221,Z_198,ZN_219
		defs: ap_236,C_225,CVZN_223,CZN_232,fp_239,N_229,r0_231,r11_240,r2_230,r3_235,r4_233,r5_238,r6_234,r7_237,r8_227,sp_222,V_226,Z_228,ZN_224
	Mem242[sp_222 - 0x00000004:word32] = 0x00000000
	Mem245[sp_222 - 0x00000008:word32] = r4_233 + 99
	Mem248[sp_222 - 0x0000000C:word32] = r2_230 + 1515
	word32 sp_252
	byte CVZN_253
	byte ZN_254
	bool C_255
	bool V_256
	word32 r8_257
	bool Z_258
	bool N_259
	word32 r2_260
	word32 r0_261
	byte CZN_262
	word32 r4_263
	word32 r6_264
	word32 r3_265
	word32 ap_266
	word32 r7_267
	word32 r5_268
	word32 fp_269
	word32 r11_270
	call r7_237 + 2 (retsize: 4; depth: 4)
		uses: ap_236,C_250,CVZN_223,CZN_232,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_239,N_229,r0_231,r11_240,r2_230,r3_235,r4_233,r5_238,r6_234,r7_237,r8_227,sp_246,V_251,Z_228,ZN_249
		defs: ap_266,C_255,CVZN_253,CZN_262,fp_269,N_259,r0_261,r11_270,r2_260,r3_265,r4_263,r5_268,r6_264,r7_267,r8_257,sp_252,V_256,Z_258,ZN_254
	Mem272[sp_252 - 0x00000004:word32] = r0_261
	Mem275[sp_252 - 0x00000008:word32] = r2_260 + 1515
	Mem277[sp_252 - 0x0000000C:word32] = r2_260
	word32 ap_278 = Mem277[r2_260 + 0x0000C839:word32]
	word32 sp_282
	byte CVZN_283
	byte ZN_284
	bool C_285
	bool V_286
	word32 r8_287
	bool Z_288
	bool N_289
	word32 r2_290
	word32 r0_291
	byte CZN_292
	word32 r4_293
	word32 r6_294
	word32 r3_295
	word32 ap_296
	word32 r7_297
	word32 r5_298
	word32 fp_299
	word32 r11_300
	call ap_278 + 2 (retsize: 4; depth: 4)
		uses: ap_278,C_280,CVZN_253,CZN_262,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_269,N_259,r0_261,r11_270,r2_260,r3_265,r4_263,r5_268,r6_264,r7_267,r8_257,sp_276,V_281,Z_258,ZN_279
		defs: ap_296,C_285,CVZN_283,CZN_292,fp_299,N_289,r0_291,r11_300,r2_290,r3_295,r4_293,r5_298,r6_294,r7_297,r8_287,sp_282,V_286,Z_288,ZN_284
	Mem302[sp_282 - 0x00000004:word32] = 0x00000000
	Mem305[sp_282 - 0x00000008:word32] = Mem302[r2_290 + 128:word32]
	Mem308[sp_282 - 0x0000000C:word32] = Mem305[r2_290 + 128:word32]
	Mem311[sp_282 - 0x00000010:word32] = Mem308[r2_290 + 124:word32]
	Mem314[sp_282 - 0x00000014:word32] = Mem311[r2_290 + 124:word32]
	Mem317[sp_282 - 0x00000018:word32] = r4_293 + 133
	Mem320[sp_282 - 0x0000001C:word32] = r2_290 + 1515
	word32 sp_324
	byte CVZN_325
	byte ZN_326
	bool C_327
	bool V_328
	word32 r8_329
	bool Z_330
	bool N_331
	word32 r2_332
	word32 r0_333
	byte CZN_334
	word32 r4_335
	word32 r6_336
	word32 r3_337
	word32 ap_338
	word32 r7_339
	word32 r5_340
	word32 fp_341
	word32 r11_342
	call r7_297 + 2 (retsize: 4; depth: 4)
		uses: ap_296,C_322,CVZN_283,CZN_292,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_299,N_289,r0_291,r11_300,r2_290,r3_295,r4_293,r5_298,r6_294,r7_297,r8_287,sp_318,V_323,Z_288,ZN_321
		defs: ap_338,C_327,CVZN_325,CZN_334,fp_341,N_331,r0_333,r11_342,r2_332,r3_337,r4_335,r5_340,r6_336,r7_339,r8_329,sp_324,V_328,Z_330,ZN_326
	Mem344[sp_324 - 0x00000004:word32] = r0_333
	Mem347[sp_324 - 0x00000008:word32] = r2_332 + 1515
	Mem349[sp_324 - 0x0000000C:word32] = r2_332
	word32 ap_350 = Mem349[r2_332 + 0x0000C839:word32]
	word32 sp_354
	byte CVZN_355
	byte ZN_356
	bool C_357
	bool V_358
	word32 r8_359
	bool Z_360
	bool N_361
	word32 r2_362
	word32 r0_363
	byte CZN_364
	word32 r4_365
	word32 r6_366
	word32 r3_367
	word32 ap_368
	word32 r7_369
	word32 r5_370
	word32 fp_371
	word32 r11_372
	call ap_350 + 2 (retsize: 4; depth: 4)
		uses: ap_350,C_352,CVZN_325,CZN_334,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_341,N_331,r0_333,r11_342,r2_332,r3_337,r4_335,r5_340,r6_336,r7_339,r8_329,sp_348,V_353,Z_330,ZN_351
		defs: ap_368,C_357,CVZN_355,CZN_364,fp_371,N_361,r0_363,r11_372,r2_362,r3_367,r4_365,r5_370,r6_366,r7_369,r8_359,sp_354,V_358,Z_360,ZN_356
	word32 r6_373 = (uint32) Mem349[r2_362 + 0x0000C682:word16]
	branch r6_373 != 0x00000000 l00012BA4
// DataOut: fp pc r1 r10 r11 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r0:<invalid> r6:<invalid> r3:<invalid> ap:<invalid> -48(fp):r2 -44(fp):r2 + 1515 -40(fp):<invalid> -36(fp):r2 + 1515 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012BA4:
	word32 r3_1100
	Mem876[sp_354 - 0x00000004:word32] = 0x00000000
	word32 r0_877 = (uint32) Mem876[r2_362 + 0x0000C686:word16]
	branch r0_877 != 0x00000001 l00012BB8
// DataOut: fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012BB8:
	r3_1100 = r5_370 + 16
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012BB2:
	r3_1100 = r5_370 + 20
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012BBC:
	word32 r3_1092
	Mem883[sp_354 - 0x00000008:word32] = r3_1100
	Mem885[sp_354 - 0x0000000C:word32] = r0_877
	Mem889[sp_354 - 0x00000010:word32] = (uint32) Mem885[r2_362 + 0x0000C684:word16] + 0x00000001
	Mem892[sp_354 - 0x00000014:word32] = r6_373 + 0x00000001
	Mem895[sp_354 - 0x00000018:word32] = r4_365 + 583
	Mem898[sp_354 - 0x0000001C:word32] = r2_362 + 1515
	word32 sp_902
	byte CVZN_903
	byte ZN_904
	bool C_905
	bool V_906
	word32 r8_907
	bool Z_908
	bool N_909
	word32 r2_910
	word32 r0_911
	byte CZN_912
	word32 r4_913
	word32 r6_914
	word32 r3_915
	word32 ap_916
	word32 r7_917
	word32 r5_918
	word32 fp_919
	word32 r11_920
	call r7_369 + 2 (retsize: 4; depth: 4)
		uses: ap_887,C_900,CVZN_355,CZN_878,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_371,N_361,r0_877,r11_372,r2_362,r3_881,r4_365,r5_370,r6_890,r7_369,r8_359,sp_896,V_901,Z_879,ZN_899
		defs: ap_916,C_905,CVZN_903,CZN_912,fp_919,N_909,r0_911,r11_920,r2_910,r3_915,r4_913,r5_918,r6_914,r7_917,r8_907,sp_902,V_906,Z_908,ZN_904
	Mem922[sp_902 - 0x00000004:word32] = r0_911
	Mem925[sp_902 - 0x00000008:word32] = r2_910 + 1515
	Mem927[sp_902 - 0x0000000C:word32] = r2_910
	word32 ap_928 = Mem927[r2_910 + 0x0000C839:word32]
	word32 sp_932
	byte CVZN_933
	byte ZN_934
	bool C_935
	bool V_936
	word32 r8_937
	bool Z_938
	bool N_939
	word32 r2_940
	word32 r0_941
	byte CZN_942
	word32 r4_943
	word32 r6_944
	word32 r3_945
	word32 ap_946
	word32 r7_947
	word32 r5_948
	word32 fp_949
	word32 r11_950
	call ap_928 + 2 (retsize: 4; depth: 4)
		uses: ap_928,C_930,CVZN_903,CZN_912,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_919,N_909,r0_911,r11_920,r2_910,r3_915,r4_913,r5_918,r6_914,r7_917,r8_907,sp_926,V_931,Z_908,ZN_929
		defs: ap_946,C_935,CVZN_933,CZN_942,fp_949,N_939,r0_941,r11_950,r2_940,r3_945,r4_943,r5_948,r6_944,r7_947,r8_937,sp_932,V_936,Z_938,ZN_934
	Mem952[sp_932 - 0x00000004:word32] = 0x00000000
	Mem955[sp_932 - 0x00000008:word32] = Mem952[r2_940 + 0x0000C68A:word32]
	Mem958[sp_932 - 0x0000000C:word32] = Mem955[r2_940 + 0x0000C68A:word32]
	word32 r0_959 = (uint32) Mem958[r2_940 + 0x0000C688:word16]
	branch r0_959 != 0x00000001 l00012C0C
// DataOut: fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012C0C:
	r3_1092 = r5_948 + 23
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):r4 + 583 -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012C06:
	r3_1092 = r5_948 + 31
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):r4 + 583 -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012C10:
	Mem965[sp_932 - 0x00000010:word32] = r3_1092
	Mem967[sp_932 - 0x00000014:word32] = r0_959
	Mem970[sp_932 - 0x00000018:word32] = r4_943 + 726
	Mem973[sp_932 - 0x0000001C:word32] = r2_940 + 1515
	word32 sp_977
	byte CVZN_978
	byte ZN_979
	bool C_980
	bool V_981
	word32 r8_982
	bool Z_983
	bool N_984
	word32 r2_985
	word32 r0_986
	byte CZN_987
	word32 r4_988
	word32 r6_989
	word32 r3_990
	word32 ap_991
	word32 r7_992
	word32 r5_993
	word32 fp_994
	word32 r11_995
	call r7_947 + 2 (retsize: 4; depth: 4)
		uses: ap_946,C_975,CVZN_933,CZN_960,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_949,N_939,r0_959,r11_950,r2_940,r3_963,r4_943,r5_948,r6_944,r7_947,r8_937,sp_971,V_976,Z_961,ZN_974
		defs: ap_991,C_980,CVZN_978,CZN_987,fp_994,N_984,r0_986,r11_995,r2_985,r3_990,r4_988,r5_993,r6_989,r7_992,r8_982,sp_977,V_981,Z_983,ZN_979
	Mem997[sp_977 - 0x00000004:word32] = r0_986
	Mem1000[sp_977 - 0x00000008:word32] = r2_985 + 1515
	Mem1002[sp_977 - 0x0000000C:word32] = r2_985
	word32 ap_1003 = Mem1002[r2_985 + 0x0000C839:word32]
	word32 sp_1007
	byte CVZN_1008
	byte ZN_1009
	bool C_1010
	bool V_1011
	word32 r8_1012
	bool Z_1013
	bool N_1014
	word32 r2_1015
	word32 r0_1016
	byte CZN_1017
	word32 r4_1018
	word32 r6_1019
	word32 r3_1020
	word32 ap_1021
	word32 r7_1022
	word32 r5_1023
	word32 fp_1024
	word32 r11_1025
	call ap_1003 + 2 (retsize: 4; depth: 4)
		uses: ap_1003,C_1005,CVZN_978,CZN_987,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_994,N_984,r0_986,r11_995,r2_985,r3_990,r4_988,r5_993,r6_989,r7_992,r8_982,sp_1001,V_1006,Z_983,ZN_1004
		defs: ap_1021,C_1010,CVZN_1008,CZN_1017,fp_1024,N_1014,r0_1016,r11_1025,r2_1015,r3_1020,r4_1018,r5_1023,r6_1019,r7_1022,r8_1012,sp_1007,V_1011,Z_1013,ZN_1009
	Mem1027[sp_1007 - 0x00000004:word32] = 0x00000000
	Mem1030[sp_1007 - 0x00000008:word32] = Mem1027[r2_1015 + 0x0000C68E:word32]
	Mem1033[sp_1007 - 0x0000000C:word32] = Mem1030[r2_1015 + 0x0000C68E:word32]
	Mem1036[sp_1007 - 0x00000010:word32] = r4_1018 + 857
	Mem1039[sp_1007 - 0x00000014:word32] = r2_1015 + 1515
	word32 sp_1043
	byte CVZN_1044
	byte ZN_1045
	bool C_1046
	bool V_1047
	word32 r8_1048
	bool Z_1049
	bool N_1050
	word32 r2_1051
	word32 r0_1052
	byte CZN_1053
	word32 r4_1054
	word32 r6_1055
	word32 r3_1056
	word32 ap_1057
	word32 r7_1058
	word32 r5_1059
	word32 fp_1060
	word32 r11_1061
	call r7_1022 + 2 (retsize: 4; depth: 4)
		uses: ap_1021,C_1041,CVZN_1008,CZN_1017,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_1024,N_1014,r0_1016,r11_1025,r2_1015,r3_1020,r4_1018,r5_1023,r6_1019,r7_1022,r8_1012,sp_1037,V_1042,Z_1013,ZN_1040
		defs: ap_1057,C_1046,CVZN_1044,CZN_1053,fp_1060,N_1050,r0_1052,r11_1061,r2_1051,r3_1056,r4_1054,r5_1059,r6_1055,r7_1058,r8_1048,sp_1043,V_1047,Z_1049,ZN_1045
	Mem1063[sp_1043 - 0x00000004:word32] = r0_1052
	Mem1066[sp_1043 - 0x00000008:word32] = r2_1051 + 1515
	Mem1068[sp_1043 - 0x0000000C:word32] = r2_1051
	word32 ap_1069 = Mem1068[r2_1051 + 0x0000C839:word32]
	byte CVZN_1074
	byte ZN_1075
	bool C_1076
	bool V_1077
	word32 r8_1078
	bool Z_1079
	bool N_1080
	word32 r0_1082
	byte CZN_1083
	word32 r6_1085
	word32 r3_1086
	word32 ap_1087
	word32 r7_1088
	word32 r5_1089
	word32 fp_1090
	word32 r11_1091
	call ap_1069 + 2 (retsize: 4; depth: 4)
		uses: ap_1069,C_1071,CVZN_1044,CZN_1053,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_1060,N_1050,r0_1052,r11_1061,r2_1051,r3_1056,r4_1054,r5_1059,r6_1055,r7_1058,r8_1048,sp_1067,V_1072,Z_1049,ZN_1070
		defs: ap_1087,C_1076,CVZN_1074,CZN_1083,fp_1090,N_1080,r0_1082,r11_1091,r2_1081,r3_1086,r4_1084,r5_1089,r6_1085,r7_1088,r8_1078,sp_1073,V_1077,Z_1079,ZN_1075
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):r4 + 583 -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012B2D:
	word32 r3_738
	Mem727[sp_354 - 0x00000004:word32] = 0x00000000
	Mem730[sp_354 - 0x00000008:word32] = Mem727[r2_362 + 0x0000C68A:word32]
	Mem733[sp_354 - 0x0000000C:word32] = Mem730[r2_362 + 0x0000C68A:word32]
	word32 r0_734 = (uint32) Mem733[r2_362 + 0x0000C688:word16]
	branch r0_734 != 0x00000001 l00012B50
// DataOut: fp pc r0 r1 r10 r11 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012B50:
	r3_738 = r5_370 + 2
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012B47:
	r3_738 = r5_370 + 10
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012B54:
	Mem740[sp_354 - 0x00000010:word32] = r3_738
	Mem742[sp_354 - 0x00000014:word32] = r0_734
	Mem745[sp_354 - 0x00000018:word32] = r4_365 + 332
	Mem748[sp_354 - 0x0000001C:word32] = r2_362 + 1515
	word32 sp_752
	byte CVZN_753
	byte ZN_754
	bool C_755
	bool V_756
	word32 r8_757
	bool Z_758
	bool N_759
	word32 r2_760
	word32 r0_761
	byte CZN_762
	word32 r4_763
	word32 r6_764
	word32 r3_765
	word32 ap_766
	word32 r7_767
	word32 r5_768
	word32 fp_769
	word32 r11_770
	call r7_369 + 2 (retsize: 4; depth: 4)
		uses: ap_368,C_750,CVZN_355,CZN_735,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_371,N_361,r0_734,r11_372,r2_362,r3_738,r4_365,r5_370,r6_373,r7_369,r8_359,sp_746,V_751,Z_736,ZN_749
		defs: ap_766,C_755,CVZN_753,CZN_762,fp_769,N_759,r0_761,r11_770,r2_760,r3_765,r4_763,r5_768,r6_764,r7_767,r8_757,sp_752,V_756,Z_758,ZN_754
	Mem772[sp_752 - 0x00000004:word32] = r0_761
	Mem775[sp_752 - 0x00000008:word32] = r2_760 + 1515
	Mem777[sp_752 - 0x0000000C:word32] = r2_760
	word32 ap_778 = Mem777[r2_760 + 0x0000C839:word32]
	word32 sp_782
	byte CVZN_783
	byte ZN_784
	bool C_785
	bool V_786
	word32 r8_787
	bool Z_788
	bool N_789
	word32 r2_790
	word32 r0_791
	byte CZN_792
	word32 r4_793
	word32 r6_794
	word32 r3_795
	word32 ap_796
	word32 r7_797
	word32 r5_798
	word32 fp_799
	word32 r11_800
	call ap_778 + 2 (retsize: 4; depth: 4)
		uses: ap_778,C_780,CVZN_753,CZN_762,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_769,N_759,r0_761,r11_770,r2_760,r3_765,r4_763,r5_768,r6_764,r7_767,r8_757,sp_776,V_781,Z_758,ZN_779
		defs: ap_796,C_785,CVZN_783,CZN_792,fp_799,N_789,r0_791,r11_800,r2_790,r3_795,r4_793,r5_798,r6_794,r7_797,r8_787,sp_782,V_786,Z_788,ZN_784
	Mem802[sp_782 - 0x00000004:word32] = 0x00000000
	Mem805[sp_782 - 0x00000008:word32] = Mem802[r2_790 + 0x0000C68E:word32]
	Mem808[sp_782 - 0x0000000C:word32] = Mem805[r2_790 + 0x0000C68E:word32]
	Mem811[sp_782 - 0x00000010:word32] = r4_793 + 537
	Mem814[sp_782 - 0x00000014:word32] = r2_790 + 1515
	word32 sp_818
	byte CVZN_819
	byte ZN_820
	bool C_821
	bool V_822
	word32 r8_823
	bool Z_824
	bool N_825
	word32 r2_826
	word32 r0_827
	byte CZN_828
	word32 r4_829
	word32 r6_830
	word32 r3_831
	word32 ap_832
	word32 r7_833
	word32 r5_834
	word32 fp_835
	word32 r11_836
	call r7_797 + 2 (retsize: 4; depth: 4)
		uses: ap_796,C_816,CVZN_783,CZN_792,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_799,N_789,r0_791,r11_800,r2_790,r3_795,r4_793,r5_798,r6_794,r7_797,r8_787,sp_812,V_817,Z_788,ZN_815
		defs: ap_832,C_821,CVZN_819,CZN_828,fp_835,N_825,r0_827,r11_836,r2_826,r3_831,r4_829,r5_834,r6_830,r7_833,r8_823,sp_818,V_822,Z_824,ZN_820
	Mem838[sp_818 - 0x00000004:word32] = r0_827
	Mem841[sp_818 - 0x00000008:word32] = r2_826 + 1515
	Mem843[sp_818 - 0x0000000C:word32] = r2_826
	word32 ap_844 = Mem843[r2_826 + 0x0000C839:word32]
	byte CVZN_849
	byte ZN_850
	bool C_851
	bool V_852
	word32 r8_853
	bool Z_854
	bool N_855
	word32 r0_857
	byte CZN_858
	word32 r6_860
	word32 r3_861
	word32 ap_862
	word32 r7_863
	word32 r5_864
	word32 fp_865
	word32 r11_866
	call ap_844 + 2 (retsize: 4; depth: 4)
		uses: ap_844,C_846,CVZN_819,CZN_828,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_835,N_825,r0_827,r11_836,r2_826,r3_831,r4_829,r5_834,r6_830,r7_833,r8_823,sp_842,V_847,Z_824,ZN_845
		defs: ap_862,C_851,CVZN_849,CZN_858,fp_865,N_855,r0_857,r11_866,r2_856,r3_861,r4_859,r5_864,r6_860,r7_863,r8_853,sp_848,V_852,Z_854,ZN_850
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012C5C:
	branch Mem349[r2_1081 + 0x0000C692:word16] != 0x0000 l00012C8C
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -204(fp):r2 -200(fp):r2 + 1515 -196(fp):<invalid> -192(fp):r2 + 1515 -188(fp):r4 + 857 -184(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):r2 -168(fp):r2 + 1515 -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012C8C:
	word32 sp_457 = sp_1073 - 0x00000004
	Mem458[sp_457:word32] = 0x00000000
	Mem461[sp_457 - 0x00000004:uint32] = (uint32) Mem458[r2_1081 + 0x0000C692:word16]
	Mem464[sp_457 - 0x00000008:word32] = r4_1084 + 958
	Mem467[sp_457 - 0x0000000C:word32] = r2_1081 + 1515
	word32 r3_468 = Mem467[0x000192D0:word32]
	word32 sp_472
	byte CVZN_473
	byte ZN_474
	bool C_475
	bool V_476
	word32 r8_477
	bool Z_478
	bool N_479
	word32 r2_480
	word32 r0_481
	byte CZN_482
	word32 r4_483
	word32 r6_484
	word32 r3_485
	word32 ap_486
	word32 r7_487
	word32 r5_488
	word32 fp_489
	word32 r11_490
	call r3_468 + 2 (retsize: 4; depth: 4)
		uses: ap_392,C_470,CVZN_387,CZN_384,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_391,N_386,r0_389,r11_378,r2_385,r3_468,r4_383,r5_379,r6_382,r7_380,r8_388,sp_465,V_471,Z_394,ZN_469
		defs: ap_486,C_475,CVZN_473,CZN_482,fp_489,N_479,r0_481,r11_490,r2_480,r3_485,r4_483,r5_488,r6_484,r7_487,r8_477,sp_472,V_476,Z_478,ZN_474
	Mem492[sp_472 - 0x00000004:word32] = r0_481
	Mem495[sp_472 - 0x00000008:word32] = r2_480 + 1515
	Mem497[sp_472 - 0x0000000C:word32] = r2_480
	word32 ap_498 = Mem497[r2_480 + 0x0000C839:word32]
	word32 sp_502
	byte CVZN_503
	byte ZN_504
	bool C_505
	bool V_506
	word32 r8_507
	bool Z_508
	bool N_509
	word32 r2_510
	word32 r0_511
	byte CZN_512
	word32 r4_513
	word32 r6_514
	word32 r3_515
	word32 ap_516
	word32 r7_517
	word32 r5_518
	word32 fp_519
	word32 r11_520
	call ap_498 + 2 (retsize: 4; depth: 4)
		uses: ap_498,C_500,CVZN_473,CZN_482,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_489,N_479,r0_481,r11_490,r2_480,r3_485,r4_483,r5_488,r6_484,r7_487,r8_477,sp_496,V_501,Z_478,ZN_499
		defs: ap_516,C_505,CVZN_503,CZN_512,fp_519,N_509,r0_511,r11_520,r2_510,r3_515,r4_513,r5_518,r6_514,r7_517,r8_507,sp_502,V_506,Z_508,ZN_504
	Mem522[sp_502 - 0x00000004:word32] = 0x00000000
	Mem525[sp_502 - 0x00000008:word32] = r4_513 + 1032
	Mem528[sp_502 - 0x0000000C:word32] = r2_510 + 1515
	word32 sp_532
	byte CVZN_533
	byte ZN_534
	bool C_535
	bool V_536
	word32 r8_537
	bool Z_538
	bool N_539
	word32 r2_540
	word32 r0_541
	byte CZN_542
	word32 r4_543
	word32 r6_544
	word32 r3_545
	word32 ap_546
	word32 r7_547
	word32 r5_548
	word32 fp_549
	word32 r11_550
	call r3_515 + 2 (retsize: 4; depth: 4)
		uses: ap_516,C_530,CVZN_503,CZN_512,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_519,N_509,r0_511,r11_520,r2_510,r3_515,r4_513,r5_518,r6_514,r7_517,r8_507,sp_526,V_531,Z_508,ZN_529
		defs: ap_546,C_535,CVZN_533,CZN_542,fp_549,N_539,r0_541,r11_550,r2_540,r3_545,r4_543,r5_548,r6_544,r7_547,r8_537,sp_532,V_536,Z_538,ZN_534
	Mem552[sp_532 - 0x00000004:word32] = r0_541
	Mem555[sp_532 - 0x00000008:word32] = r2_540 + 1515
	Mem557[sp_532 - 0x0000000C:word32] = r2_540
	word32 ap_558 = Mem557[r2_540 + 0x0000C839:word32]
	word32 sp_562
	byte CVZN_563
	byte ZN_564
	bool C_565
	bool V_566
	word32 r8_567
	bool Z_568
	bool N_569
	word32 r2_570
	word32 r0_571
	byte CZN_572
	word32 r4_573
	word32 r6_574
	word32 r3_575
	word32 ap_576
	word32 r7_577
	word32 r5_578
	word32 fp_579
	word32 r11_580
	call ap_558 + 2 (retsize: 4; depth: 4)
		uses: ap_558,C_560,CVZN_533,CZN_542,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_549,N_539,r0_541,r11_550,r2_540,r3_545,r4_543,r5_548,r6_544,r7_547,r8_537,sp_556,V_561,Z_538,ZN_559
		defs: ap_576,C_565,CVZN_563,CZN_572,fp_579,N_569,r0_571,r11_580,r2_570,r3_575,r4_573,r5_578,r6_574,r7_577,r8_567,sp_562,V_566,Z_568,ZN_564
	Mem582[sp_562 - 0x00000004:word32] = 0x00000001
	Mem585[sp_562 - 0x00000008:uint32] = (uint32) Mem582[r2_570 + 0x0000C692:word16]
	word32 r11_589
	word32 ap_590
	word32 fp_591
	word32 sp_592
	word32 r0_593 = fn0000DC76(ap_576, fp_579, out r11_589, out ap_590, out fp_591, out sp_592)
	branch r0_593 == 0x00000000 l00012CEF
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -204(fp):r2 -200(fp):r2 + 1515 -196(fp):<invalid> -192(fp):r2 + 1515 -188(fp):r4 + 857 -184(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):r2 -168(fp):r2 + 1515 -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012CEC:
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> -224(fp):<invalid> -220(fp):0x00000001 -216(fp):r2 -212(fp):r2 + 1515 -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012CEF:
	Mem599[sp_592 - 0x00000004:word32] = 0x00000000
	Mem602[sp_592 - 0x00000008:word32] = r4_573 + 1108
	Mem605[sp_592 - 0x0000000C:word32] = r2_570 + 1515
	word32 sp_609
	byte CVZN_610
	byte ZN_611
	bool C_612
	bool V_613
	word32 r8_614
	bool Z_615
	bool N_616
	word32 r2_617
	word32 r0_618
	byte CZN_619
	word32 r4_620
	word32 r6_621
	word32 r3_622
	word32 ap_623
	word32 r7_624
	word32 r5_625
	word32 fp_626
	word32 r11_627
	call r3_575 + 2 (retsize: 4; depth: 4)
		uses: ap_590,C_607,CVZN_563,CZN_572,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_591,N_569,r0_593,r11_589,r2_570,r3_575,r4_573,r5_578,r6_574,r7_577,r8_567,sp_603,V_608,Z_595,ZN_606
		defs: ap_623,C_612,CVZN_610,CZN_619,fp_626,N_616,r0_618,r11_627,r2_617,r3_622,r4_620,r5_625,r6_621,r7_624,r8_614,sp_609,V_613,Z_615,ZN_611
	Mem629[sp_609 - 0x00000004:word32] = r0_618
	Mem632[sp_609 - 0x00000008:word32] = r2_617 + 1515
	Mem634[sp_609 - 0x0000000C:word32] = r2_617
	word32 ap_635 = Mem634[r2_617 + 0x0000C839:word32]
	word32 sp_639
	byte CVZN_640
	byte ZN_641
	bool C_642
	bool V_643
	bool Z_645
	bool N_646
	word32 r2_647
	word32 r0_648
	byte CZN_649
	word32 r4_650
	word32 r6_651
	word32 r3_652
	word32 ap_653
	word32 r7_654
	word32 r5_655
	word32 r11_657
	call ap_635 + 2 (retsize: 4; depth: 4)
		uses: ap_635,C_637,CVZN_610,CZN_619,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_626,N_616,r0_618,r11_627,r2_617,r3_622,r4_620,r5_625,r6_621,r7_624,r8_614,sp_633,V_638,Z_615,ZN_636
		defs: ap_653,C_642,CVZN_640,CZN_649,fp_656,N_646,r0_648,r11_657,r2_647,r3_652,r4_650,r5_655,r6_651,r7_654,r8_644,sp_639,V_643,Z_645,ZN_641
	branch r8_1197 == 0x00000000 l00012D7E
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> -224(fp):<invalid> -220(fp):0x00000001 -216(fp):r2 -212(fp):r2 + 1515 -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012D12:
	Mem663[sp_639 - 0x00000004:word32] = 0x00000000
	Mem666[sp_639 - 0x00000008:word32] = r4_650 + 1184
	Mem669[sp_639 - 0x0000000C:word32] = r2_647 + 1515
	word32 sp_673
	byte CVZN_674
	byte ZN_675
	bool C_676
	bool V_677
	word32 r8_678
	bool Z_679
	bool N_680
	word32 r2_681
	word32 r0_682
	byte CZN_683
	word32 r4_684
	word32 r6_685
	word32 r3_686
	word32 ap_687
	word32 r7_688
	word32 r5_689
	word32 fp_690
	word32 r11_691
	call r3_652 + 2 (retsize: 4; depth: 4)
		uses: ap_653,C_671,CVZN_640,CZN_649,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_656,N_646,r0_648,r11_657,r2_647,r3_652,r4_650,r5_655,r6_651,r7_654,r8_644,sp_667,V_672,Z_659,ZN_670
		defs: ap_687,C_676,CVZN_674,CZN_683,fp_690,N_680,r0_682,r11_691,r2_681,r3_686,r4_684,r5_689,r6_685,r7_688,r8_678,sp_673,V_677,Z_679,ZN_675
	Mem693[sp_673 - 0x00000004:word32] = r0_682
	Mem696[sp_673 - 0x00000008:word32] = r2_681 + 1515
	Mem698[sp_673 - 0x0000000C:word32] = r2_681
	word32 ap_699 = Mem698[r2_681 + 0x0000C839:word32]
	word32 sp_703
	byte CVZN_704
	byte ZN_705
	bool C_706
	bool V_707
	bool Z_709
	bool N_710
	word32 r2_711
	word32 r0_712
	byte CZN_713
	word32 r4_714
	word32 r6_715
	word32 r3_716
	word32 ap_717
	word32 r7_718
	word32 r5_719
	word32 r11_721
	call ap_699 + 2 (retsize: 4; depth: 4)
		uses: ap_699,C_701,CVZN_674,CZN_683,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_690,N_680,r0_682,r11_691,r2_681,r3_686,r4_684,r5_689,r6_685,r7_688,r8_678,sp_697,V_702,Z_679,ZN_700
		defs: ap_717,C_706,CVZN_704,CZN_713,fp_720,N_710,r0_712,r11_721,r2_711,r3_716,r4_714,r5_719,r6_715,r7_718,r8_708,sp_703,V_707,Z_709,ZN_705
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> -224(fp):<invalid> -220(fp):0x00000001 -216(fp):r2 -212(fp):r2 + 1515 -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012C64:
	word32 sp_397 = sp_1073 - 0x00000004
	Mem398[sp_397:word32] = 0x00000000
	Mem401[sp_397 - 0x00000004:word32] = r4_1084 + 926
	Mem404[sp_397 - 0x00000008:word32] = r2_1081 + 1515
	word32 sp_408
	byte CVZN_409
	byte ZN_410
	bool C_411
	bool V_412
	word32 r8_413
	bool Z_414
	bool N_415
	word32 r2_416
	word32 r0_417
	byte CZN_418
	word32 r4_419
	word32 r6_420
	word32 r3_421
	word32 ap_422
	word32 r7_423
	word32 r5_424
	word32 fp_425
	word32 r11_426
	call Mem404[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_392,C_406,CVZN_387,CZN_384,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_391,N_386,r0_389,r11_378,r2_385,r3_381,r4_383,r5_379,r6_382,r7_380,r8_388,sp_402,V_407,Z_394,ZN_405
		defs: ap_422,C_411,CVZN_409,CZN_418,fp_425,N_415,r0_417,r11_426,r2_416,r3_421,r4_419,r5_424,r6_420,r7_423,r8_413,sp_408,V_412,Z_414,ZN_410
	Mem428[sp_408 - 0x00000004:word32] = r0_417
	Mem431[sp_408 - 0x00000008:word32] = r2_416 + 1515
	Mem433[sp_408 - 0x0000000C:word32] = r2_416
	word32 ap_434 = Mem433[r2_416 + 0x0000C839:word32]
	word32 sp_438
	byte CVZN_439
	byte ZN_440
	bool C_441
	bool V_442
	bool Z_444
	bool N_445
	word32 r2_446
	word32 r0_447
	byte CZN_448
	word32 r4_449
	word32 r6_450
	word32 r3_451
	word32 ap_452
	word32 r7_453
	word32 r5_454
	word32 r11_456
	call ap_434 + 2 (retsize: 4; depth: 4)
		uses: ap_434,C_436,CVZN_409,CZN_418,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_425,N_415,r0_417,r11_426,r2_416,r3_421,r4_419,r5_424,r6_420,r7_423,r8_413,sp_432,V_437,Z_414,ZN_435
		defs: ap_452,C_441,CVZN_439,CZN_448,fp_455,N_445,r0_447,r11_456,r2_446,r3_451,r4_449,r5_454,r6_450,r7_453,r8_443,sp_438,V_442,Z_444,ZN_440
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> r3:<invalid> -204(fp):r2 -200(fp):r2 + 1515 -196(fp):<invalid> -192(fp):r2 + 1515 -188(fp):r4 + 857 -184(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):r2 -168(fp):r2 + 1515 -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012AB1:
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r0:<invalid> r6:<invalid> r3:<invalid> ap:<invalid> -48(fp):r2 -44(fp):r2 + 1515 -40(fp):<invalid> -36(fp):r2 + 1515 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012D34:
	branch Mem0[r2 + 92:word32] == 0x00000000 l00012D7E
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r0:<invalid> r6:<invalid> r3:<invalid> ap:<invalid> -48(fp):r2 -44(fp):r2 + 1515 -40(fp):<invalid> -36(fp):r2 + 1515 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012D39:
	branch Mem0[r2 + 0x0000C692:word16] == 0x0000 l00012D7E
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r0:<invalid> r6:<invalid> r3:<invalid> ap:<invalid> -48(fp):r2 -44(fp):r2 + 1515 -40(fp):<invalid> -36(fp):r2 + 1515 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012D41:
	word32 sp_98 = sp_1192 - 0x00000004
	Mem99[sp_98:word32] = 0x00000001
	Mem102[sp_98 - 0x00000004:uint32] = (uint32) Mem99[r2 + 0x0000C692:word16]
	word32 r11_106
	word32 ap_107
	word32 sp_109
	word32 r0_110 = fn0000DC76(ap, fp, out r11_106, out ap_107, out fp, out sp_109)
	branch r0_110 == 0x00000000 l00012D7E
// DataOut: fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r0:<invalid> r6:<invalid> r3:<invalid> ap:<invalid> -48(fp):r2 -44(fp):r2 + 1515 -40(fp):<invalid> -36(fp):r2 + 1515 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x00000000

l00012D55:
	Mem117[sp_109 - 0x00000004:uint32] = 0x00000401
	Mem120[sp_109 - 0x00000008:word32] = r4 + 1222
	Mem123[sp_109 - 0x0000000C:word32] = r2 + 1515
	word32 sp_127
	byte CVZN_128
	byte ZN_129
	bool C_130
	bool V_131
	word32 r8_132
	bool Z_133
	bool N_134
	word32 r2_135
	word32 r0_136
	byte CZN_137
	word32 r4_138
	word32 r6_139
	word32 r3_140
	word32 ap_141
	word32 r7_142
	word32 r5_143
	word32 fp_144
	word32 r11_145
	call Mem123[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_107,C_125,CVZN_52,CZN_59,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_108,N_50,r0_110,r11_106,r2_49,r3_46,r4_48,r5_44,r6_47,r7_45,r8_53,sp_121,V_126,Z_112,ZN_124
		defs: ap_141,C_130,CVZN_128,CZN_137,fp_144,N_134,r0_136,r11_145,r2_135,r3_140,r4_138,r5_143,r6_139,r7_142,r8_132,sp_127,V_131,Z_133,ZN_129
	Mem147[sp_127 - 0x00000004:word32] = r0_136
	Mem150[sp_127 - 0x00000008:word32] = r2_135 + 1515
	Mem152[sp_127 - 0x0000000C:word32] = r2_135
	word32 ap_153 = Mem152[r2_135 + 0x0000C839:word32]
	word32 sp_157
	byte CVZN_158
	byte ZN_159
	bool C_160
	bool V_161
	word32 r8_162
	bool Z_163
	bool N_164
	word32 r2_165
	word32 r0_166
	byte CZN_167
	word32 r4_168
	word32 r6_169
	word32 r3_170
	word32 ap_171
	word32 r7_172
	word32 r5_173
	word32 r11_175
	call ap_153 + 2 (retsize: 4; depth: 4)
		uses: ap_153,C_155,CVZN_128,CZN_137,dwLoc08_32,dwLoc0C_33,dwLoc10_34,dwLoc14_35,dwLoc18_36,dwLoc1C_37,dwLoc20_38,dwLoc24_39,dwLoc28_40,dwLoc2C_41,dwLoc30_42,fp_144,N_134,r0_136,r11_145,r2_135,r3_140,r4_138,r5_143,r6_139,r7_142,r8_132,sp_151,V_156,Z_133,ZN_154
		defs: ap_171,C_160,CVZN_158,CZN_167,fp_174,N_164,r0_166,r11_175,r2_165,r3_170,r4_168,r5_173,r6_169,r7_172,r8_162,sp_157,V_161,Z_163,ZN_159
	*r8Out = 0x00000001
// DataOut: fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:0x00000000 r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r3:<invalid> -48(fp):r2 -44(fp):r2 + 1515 -40(fp):<invalid> -36(fp):r2 + 1515 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00012D7E:
	word32 sp_79 = fp - 0x00000004
	*spOut = sp_79
	word32 fp_80
	*fpOut = Mem0[sp_79 + 0x00000010:word32]
	word32 ap_81
	*apOut = Mem0[sp_79 + 0x0000000C:word32]
	return r8_1197
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r6:<invalid> r3:<invalid> -224(fp):<invalid> -220(fp):0x00000001 -216(fp):r2 -212(fp):r2 + 1515 -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

fn00012A2A_exit:
// DataOut: ap fp r0 r11 r3 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r7:<invalid> r6:<invalid> r3:<invalid> -224(fp):<invalid> -220(fp):0x00000001 -216(fp):r2 -212(fp):r2 + 1515 -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):r2 + 1515 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):r2 -128(fp):r2 + 1515 -124(fp):<invalid> -120(fp):r2 + 1515 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):0x00000000 -92(fp):r2 -88(fp):r2 + 1515 -84(fp):r0 -80(fp):r2 + 1515 -76(fp):r4 + 133 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000000 -52(fp):r2 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



void fn00012D86(word32 r0, word32 r1, word32 r3, word32 r4, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r1 r3 r4
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r2 r3 r4 r5 r6 r7 r9 sp
// Preserved:
fn00012D86_entry:
// DataOut: ap fp r0 r1 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012D86:
	word32 sp_129 = fp - 0x00000014
	word32 r6_123 = 0x00000000
	branch Mem0[r3 + 100:word32] <= 0x00000000 l00012DCB
// DataOut: ap fp r0 r1 r10 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00012DA8:
	byte CVZN_954
	byte ZN_955
	bool C_956
	bool V_957
	word32 r5_958
	bool Z_959
	bool N_960
	word32 r10_961
	word32 r6_962
	word32 r7_963
	byte VZN_965
	word32 r2_967
	byte CZN_968
	word32 r9_971
	word32 r8_973
	word32 r1_974
	call Mem0[0x000192B4:word32] + 2 (retsize: 4; depth: 28)
		uses: ap,C_952,CVZN,CZN,dwLoc18_950,fp,N,qwLoc10_10,r0,r1,r10_4,r2,r3,r4,r5_3,r6_6,r7,r8,r9,sp_948,V_15,VZN_951,wLoc12_8,Z,ZN_13
		defs: ap_972,C_956,CVZN_954,CZN_968,fp_970,N_960,r0_966,r1_974,r10_961,r2_967,r3_964,r4_969,r5_958,r6_962,r7_963,r8_973,r9_971,sp_953,V_957,VZN_965,Z_959,ZN_955
	r6_123 = r0
	branch r0 == 0x00000000 l00012DCB
// DataOut: ap fp r0 r1 r10 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000014 r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 -18(fp):0x0000 -16(fp):0x0000000000000000

l00012DB9:
	word32 r2_981 = 0x00000000
	branch Mem0[r3 + 100:word32] <= 0x00000000 l00012DCB
// DataOut: ap fp r0 r1 r10 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018 r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012DC0:
	Mem987[r0:word32] = 0x00000000
	r2_981 = r2_981 + 0x00000001
	branch r2_981 < Mem987[r3 + 100:word32] l00012DC0
// DataOut: ap fp r0 r1 r10 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000018 r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012DCB:
	branch Mem0[r3 + 104:word32] <= 0x00000000 l00012DF3
// DataOut: ap fp r0 r1 r10 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012DD0:
	word32 sp_904 = sp_129 - 0x00000004
	Mem906[sp_904:word32] = Mem0[r3 + 104:word32] << 2
	byte CVZN_910
	byte ZN_911
	bool C_912
	bool V_913
	word32 r5_914
	bool Z_915
	bool N_916
	word32 r10_917
	word32 r7_919
	byte VZN_921
	word32 r2_923
	byte CZN_924
	word32 r9_927
	word32 r8_929
	word32 r1_930
	call Mem906[0x000192B4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_51,C_908,CVZN_47,CZN_42,dwLoc18_31,fp_50,N_45,qwLoc10_10,r0_48,r1_33,r10_43,r2_44,r3_38,r4_36,r5_46,r6_40,r7_39,r8_34,r9_35,sp_904,V_54,VZN_907,wLoc12_8,Z_41,ZN_52
		defs: ap_928,C_912,CVZN_910,CZN_924,fp_926,N_916,r0_922,r1_930,r10_917,r2_923,r3_920,r4_925,r5_914,r6_918,r7_919,r8_929,r9_927,sp_909,V_913,VZN_921,Z_915,ZN_911
	branch r0 == 0x00000000 l00012DF3
// DataOut: ap fp r0 r1 r10 r3 r4 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012DE1:
	word32 r2_937 = 0x00000000
	branch Mem906[r3 + 104:word32] <= 0x00000000 l00012DF3
// DataOut: ap fp r0 r1 r10 r2 r3 r4 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r7:r0 r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012DE8:
	Mem943[r0:word32] = 0x00000000
	r2_937 = r2_937 + 0x00000001
	branch r2_937 < Mem943[r3 + 104:word32] l00012DE8
// DataOut: ap fp r0 r1 r10 r2 r3 r4 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r7:r0 r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012DF3:
	word32 r4_120
	Mem75[r3 + 40:word32] = 0x00000000
	Mem77[r3 + 1511:word32] = r3 + 167
	word32 r2_78 = Mem77[r3 + 1511:word32]
	Mem80[r2_78 + 20:byte] = Mem77[r2_78 + 20:byte] & ~0x08
	branch Mem80[r3 + 0x0000C67E:word32] != 0x00000004 l00012E14
// DataOut: ap fp r0 r1 r10 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r7:r0 r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E14:
	r4_120 = SEQ(SLICE(r4, word24, 8), 0x00)
// DataOut: ap fp r0 r1 r10 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r7:r0 r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E0F:
	r4_120 = SEQ(SLICE(r4, word24, 8), 0x04)
// DataOut: ap fp r0 r1 r10 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r7:r0 r2:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E16:
	Mem89[fp + -8:int32] = (int32) (int8) r4_120
	branch 0x00000000 < (uint32) Mem89[r3 + 0x0000C688:word16] l00012E2B
// DataOut: ap fp r0 r1 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r7:r0 r2:<invalid> r4:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E2B:
// DataOut: ap fp r0 r1 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r7:r0 r2:<invalid> r4:<invalid> r9:0x00000000 -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E3C:
	word32 sp_420 = sp_129 - 0x00000004
	Mem421[sp_420:word32] = 0x00000004
	Mem424[sp_420 - 0x00000004:word32] = r3 + 152
	word32 r2_428
	word32 r3_429
	word32 r5_430
	word32 r7_431
	word32 ap_432
	word32 fp_433
	word32 sp_434
	word32 r0_435 = fn0000D5BE(r0, r4_120, r6_123, ap, fp, out r2_428, out r3_429, out r5_430, out r7_431, out ap_432, out fp_433, out sp_434)
	branch r0_435 != 0x00000000 l00012E51
// DataOut: ap fp r0 r1 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E51:
	Mem448[sp_434 - 0x00000004:word32] = 0x00000004
	Mem451[sp_434 - 0x00000008:word32] = r3_429 + 0x0000C634
	Mem454[sp_434 - 0x0000000C:word32] = r3_429 + 152
	word32 sp_458
	byte CVZN_459
	byte ZN_460
	bool C_461
	bool V_462
	word32 r5_463
	bool Z_464
	bool N_465
	word32 r10_466
	word32 r6_467
	word32 r7_468
	word32 r3_469
	byte VZN_470
	word32 r0_471
	word32 r2_472
	byte CZN_473
	word32 r4_474
	word32 fp_475
	word32 r9_476
	word32 ap_477
	word32 r8_478
	word32 r1_479
	call Mem454[0x000192D8:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_432,C_456,CVZN_415,CZN_412,dwLoc18_31,fp_433,N_414,qwLoc10_10,r0_435,r1_405,r10_413,r2_428,r3_429,r4_408,r5_430,r6_411,r7_431,r8_406,r9_407,sp_452,V_457,VZN_409,wLoc12_8,Z_437,ZN_455
		defs: ap_477,C_461,CVZN_459,CZN_473,fp_475,N_465,r0_471,r1_479,r10_466,r2_472,r3_469,r4_474,r5_463,r6_467,r7_468,r8_478,r9_476,sp_458,V_462,VZN_470,Z_464,ZN_460
	branch r0_471 == 0x00000000 l00012E96
// DataOut: ap fp r0 r1 r10 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E96:
	word32 r1_492
	word32 r2_493
	word32 r3_494
	word32 r5_495
	word32 r7_496
	word32 ap_497
	word32 fp_498
	word32 sp_499
	word32 r0_500 = fn00011C0A(r0_471, r1_479, r4_474, r6_467, ap_477, fp_475, out r1_492, out r2_493, out r3_494, out r5_495, out r7_496, out ap_497, out fp_498, out sp_499)
	branch r0_500 == 0x00000000 l00012EA2
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EA2:
	Mem509[sp_499 - 0x00000004:word32] = 0x00000002
	Mem512[sp_499 - 0x00000008:uint32] = (uint32) Mem509[r3_494 + 0x0000C670:word16]
	byte CVZN_517
	byte ZN_518
	bool C_519
	bool V_520
	bool Z_522
	bool N_523
	word32 r10_524
	word32 r7_526
	byte VZN_528
	word32 r2_530
	byte CZN_531
	word32 r1_537
	word32 r8_536
	word32 r9_534
	word32 r5_521
	call r8_478 + 2 (retsize: 4; depth: 4)
		uses: ap_497,C_514,CVZN_459,CZN_473,dwLoc18_31,fp_498,N_465,qwLoc10_10,r0_500,r1_492,r10_466,r2_493,r3_494,r4_474,r5_495,r6_467,r7_496,r8_478,r9_476,sp_510,V_515,VZN_470,wLoc12_8,Z_502,ZN_513
		defs: ap_535,C_519,CVZN_517,CZN_531,fp_533,N_523,r0_529,r1_537,r10_524,r2_530,r3_527,r4_532,r5_521,r6_525,r7_526,r8_536,r9_534,sp_516,V_520,VZN_528,Z_522,ZN_518
	branch r0 == 0x00000000 l00012EBB
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EB2:
	branch r0 <= 0x00000001 l00012EBB
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EBB:
	branch Mem512[r3 + 108:word32] != 0x00000000 l00012F3F
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EC0:
	ap = Mem512[r3 + 144:word32] - 0x00000004
	r5_521 = 0x00000000
	word32 r2_735 = ap + 0x00000004
	branch Mem512[ap + 0x00000004:word32] == 0x00000000 l00012EFF
// DataOut: ap fp r0 r1 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012ED0:
	word32 sp_829 = sp_129 - 0x00000004
	Mem831[sp_829:word32] = Mem512[r3 + 16:word32]
	Mem834[sp_829 - 0x00000004:word32] = Mem831[r2_735:word32]
	Mem837[sp_829 - 0x00000008:word32] = r3 + 0x0000C701
	byte CVZN_842
	byte ZN_843
	bool C_844
	bool V_845
	bool Z_847
	bool N_848
	word32 r10_849
	word32 r7_851
	byte VZN_853
	word32 r2_855
	byte CZN_856
	word32 r1_862
	call r4_120 + 2 (retsize: 4; depth: 4)
		uses: ap_733,C_839,CVZN_517,CZN_542,dwLoc18_31,fp_533,N_523,qwLoc10_10,r0_529,r1_537,r10_543,r2_827,r3_826,r4_532,r5_734,r6_525,r7_526,r8_536,r9_534,sp_835,V_840,VZN_528,wLoc12_8,Z_737,ZN_838
		defs: ap_860,C_844,CVZN_842,CZN_856,fp_858,N_848,r0_854,r1_862,r10_849,r2_855,r3_852,r4_857,r5_846,r6_850,r7_851,r8_861,r9_859,sp_841,V_845,VZN_853,Z_847,ZN_843
	branch r0 == 0x00000000 l00012EF8
// DataOut: ap fp r0 r1 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EF8:
	r2_735 = r2_855 + 0x00000004
	branch Mem837[r2_855 + 0x00000004:word32] != 0x00000000 l00012ED0
// DataOut: ap fp r0 r1 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EE2:
	r5_521 = 0x00000001
	branch r6_123 == 0x00000000 l00012EFF
// DataOut: ap fp r0 r1 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EE9:
	ap = (r2_855 - Mem837[r3 + 144:word32]) / 0x00000004
	Mem875[r6_123:word32] = 0x00000001
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000001 r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EFF:
	branch r5_521 == 0x00000000 l00012F3F
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F03:
	word32 r2_762 = Mem512[r3 + 148:word32] - 0x00000004
	word32 r2_763 = r2_762 + 0x00000004
	branch Mem512[r2_762 + 0x00000004:word32] == 0x00000000 l00012F3F
// DataOut: ap fp r0 r1 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F10:
	word32 sp_771 = sp_129 - 0x00000004
	Mem773[sp_771:word32] = Mem512[r3 + 16:word32]
	Mem776[sp_771 - 0x00000004:word32] = Mem773[r2_763:word32]
	Mem779[sp_771 - 0x00000008:word32] = r3 + 0x0000C701
	byte CVZN_784
	byte ZN_785
	bool C_786
	bool V_787
	bool Z_789
	bool N_790
	word32 r10_791
	word32 r7_793
	byte VZN_795
	word32 r2_797
	byte CZN_798
	word32 r1_804
	call r4_120 + 2 (retsize: 4; depth: 4)
		uses: ap_757,C_781,CVZN_753,CZN_748,dwLoc18_31,fp_756,N_751,qwLoc10_10,r0_754,r1_740,r10_749,r2_769,r3_768,r4_743,r5_752,r6_747,r7_746,r8_741,r9_742,sp_777,V_782,VZN_744,wLoc12_8,Z_765,ZN_780
		defs: ap_802,C_786,CVZN_784,CZN_798,fp_800,N_790,r0_796,r1_804,r10_791,r2_797,r3_794,r4_799,r5_788,r6_792,r7_793,r8_803,r9_801,sp_783,V_787,VZN_795,Z_789,ZN_785
	branch r0 == 0x00000000 l00012F38
// DataOut: ap fp r0 r1 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F38:
	r2_763 = r2_797 + 0x00000004
	branch Mem779[r2_797 + 0x00000004:word32] != 0x00000000 l00012F10
// DataOut: ap fp r0 r1 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F22:
	r5_521 = 0x00000000
	branch r7_793 == 0x00000000 l00012F3F
// DataOut: ap fp r0 r1 r10 r2 r3 r4 r5 r6 r7 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F28:
	ap = (r2_797 - Mem779[r3 + 148:word32]) / 0x00000004
	Mem817[r7_793:word32] = 0x00000001
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F3F:
	branch Mem512[r3 + 108:word32] != 0x00000000 l00012F4B
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F44:
	branch r5_521 != 0x00000000 l00012F4B
// DataOut: ap fp r0 r1 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F4B:
	word32 r0_571 = Mem512[r3 + 36:word32]
	branch r0_571 > 0x0000000A l00012F65
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F65:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F4F_1:
	word32 sp_576
	byte CVZN_577
	byte ZN_578
	bool C_579
	bool V_580
	word32 r5_581
	bool Z_582
	bool N_583
	word32 r10_584
	word32 r6_585
	word32 r7_586
	word32 r3_587
	byte VZN_588
	word32 r0_589
	word32 r2_590
	byte CZN_591
	word32 r4_592
	word32 fp_593
	word32 r9_594
	word32 ap_595
	word32 r8_596
	word32 r1_597
	call 0x00012F53 + (r0_571 - 0x00000001) * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_565,C_573,CVZN_561,CZN_556,dwLoc18_31,fp_564,N_559,qwLoc10_10,r0_571,r1_548,r10_557,r2_558,r3_553,r4_551,r5_560,r6_555,r7_554,r8_549,r9_550,sp_563,V_574,VZN_552,wLoc12_8,Z_570,ZN_572
		defs: ap_595,C_579,CVZN_577,CZN_591,fp_593,N_583,r0_589,r1_597,r10_584,r2_590,r3_587,r4_592,r5_581,r6_585,r7_586,r8_596,r9_594,sp_576,V_580,VZN_588,Z_582,ZN_578
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012F48:
// DataOut: ap fp r0 r1 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l0001307C:
	branch Mem512[r3 + 0x0000C672:word16] == 0x0000 l0001309D
// DataOut: ap fp r0 r1 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013084:
	word32 sp_692 = sp_129 - 0x00000004
	Mem693[sp_692:word32] = 0x00000000
	Mem696[sp_692 - 0x00000004:uint32] = (uint32) Mem693[r3 + 0x0000C672:word16]
	byte CVZN_701
	byte ZN_702
	bool C_703
	bool V_704
	word32 r5_705
	bool Z_706
	bool N_707
	word32 r10_708
	word32 r7_710
	byte VZN_712
	word32 r2_714
	byte CZN_715
	word32 r1_721
	call r8_536 + 2 (retsize: 4; depth: 4)
		uses: ap_565,C_698,CVZN_561,CZN_556,dwLoc18_31,fp_564,N_559,qwLoc10_10,r0_562,r1_548,r10_557,r2_558,r3_553,r4_551,r5_560,r6_555,r7_554,r8_549,r9_550,sp_694,V_699,VZN_552,wLoc12_8,Z_603,ZN_697
		defs: ap_719,C_703,CVZN_701,CZN_715,fp_717,N_707,r0_713,r1_721,r10_708,r2_714,r3_711,r4_716,r5_705,r6_709,r7_710,r8_720,r9_718,sp_700,V_704,VZN_712,Z_706,ZN_702
	branch r0 == 0x00000000 l0001309D
// DataOut: ap fp r0 r1 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013094:
	branch r0 <= 0x00000001 l0001309D
// DataOut: ap fp r0 r1 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l0001309D:
	branch Mem512[r3 + 0x0000C674:word16] == 0x0000 l000130BE
// DataOut: ap fp r0 r1 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130A5:
	word32 sp_651 = sp_129 - 0x00000004
	Mem652[sp_651:word32] = 0x00000000
	Mem655[sp_651 - 0x00000004:uint32] = (uint32) Mem652[r3 + 0x0000C674:word16]
	byte CVZN_660
	byte ZN_661
	bool C_662
	bool V_663
	word32 r5_664
	bool Z_665
	bool N_666
	word32 r10_667
	word32 r7_669
	byte VZN_671
	word32 r2_673
	byte CZN_674
	word32 r8_679
	word32 r1_680
	call r8_536 + 2 (retsize: 4; depth: 4)
		uses: ap_623,C_657,CVZN_619,CZN_614,dwLoc18_31,fp_622,N_617,qwLoc10_10,r0_620,r1_606,r10_615,r2_616,r3_611,r4_609,r5_618,r6_613,r7_612,r8_607,r9_608,sp_653,V_658,VZN_610,wLoc12_8,Z_625,ZN_656
		defs: ap_678,C_662,CVZN_660,CZN_674,fp_676,N_666,r0_672,r1_680,r10_667,r2_673,r3_670,r4_675,r5_664,r6_668,r7_669,r8_679,r9_677,sp_659,V_663,VZN_671,Z_665,ZN_661
	branch r0 == 0x00000000 l000130BE
// DataOut: ap fp r0 r1 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130B5:
	branch r0 <= 0x00000001 l000130BE
// DataOut: ap fp r0 r1 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130BE:
	branch r9_534 + 0x00000001 >= (uint32) Mem512[r3 + 0x0000C688:word16] l000130CF
// DataOut: ap fp r0 r1 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130CC:
// DataOut: ap fp r0 r1 r10 r3 r4 r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130BD:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l0001309C:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EBA:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012EA1:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E68:
	Mem486[sp_458 - 0x00000004:uint32] = 0x00000401
	Mem488[sp_458 - 0x00000008:word32] = r9_476
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E4D:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00012E28:
// DataOut: ap fp r0 r10 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0x00000000 r10:0x00000000 Sequence r7:r6:0x0000000000000000 r6:r0 r7:r0 r2:<invalid> r4:<invalid> r9:0x00000000 -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130CF:
	word32 sp_132 = sp_129 - 0x00000004
	Mem133[sp_132:word32] = 0x00000004
	Mem136[sp_132 - 0x00000004:word32] = r3 + 152
	word32 r2_140
	word32 r3_141
	word32 r5_142
	word32 r7_143
	word32 ap_144
	word32 fp_145
	word32 sp_146
	word32 r0_147 = fn0000D5BE(r0, r4_120, r6_123, ap, fp, out r2_140, out r3_141, out r5_142, out r7_143, out ap_144, out fp_145, out sp_146)
	branch r0_147 != 0x00000000 l000130E4
// DataOut: ap fp r0 r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid> r3:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130E4:
	Mem160[sp_146 - 0x00000004:word32] = 0x00000004
	Mem163[sp_146 - 0x00000008:word32] = r3_141 + 0x0000C639
	Mem166[sp_146 - 0x0000000C:word32] = r3_141 + 152
	byte CVZN_171
	byte ZN_172
	bool C_173
	bool V_174
	word32 r5_175
	bool Z_176
	bool N_177
	word32 r6_179
	byte VZN_182
	word32 r0_183
	word32 r2_184
	byte CZN_185
	word32 r4_186
	word32 fp_187
	word32 r9_188
	word32 ap_189
	word32 r8_190
	word32 r1_191
	word32 r3_181
	word32 r7_180
	word32 r10_178
	word32 sp_170
	call Mem166[0x000192D8:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_144,C_168,CVZN_127,CZN_124,dwLoc18_31,fp_145,N_126,qwLoc10_10,r0_147,r1_117,r10_125,r2_140,r3_141,r4_120,r5_142,r6_123,r7_143,r8_118,r9_119,sp_164,V_169,VZN_121,wLoc12_8,Z_149,ZN_167
		defs: ap_189,C_173,CVZN_171,CZN_185,fp_187,N_177,r0_183,r1_191,r10_178,r2_184,r3_181,r4_186,r5_175,r6_179,r7_180,r8_190,r9_188,sp_170,V_174,VZN_182,Z_176,ZN_172
	branch r0_183 == 0x00000000 l00013126
// DataOut: ap fp r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013126:
	branch Mem166[r3_181 + 68:word32] == 0x00000000 l000131A4
// DataOut: ap fp r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131A4:
	branch r6_179 == 0x00000000 l000131F6
// DataOut: fp r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131A8:
	word32 ap_350 = 0x00000000
	branch Mem166[r3_181 + 100:word32] <= 0x00000000 l000131ED
// DataOut: ap fp r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131AF:
	ap_383 = ap_350
// DataOut: ap fp r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:0x00000000 r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131B0:
	word32 ap_383
	branch Mem166[r6_179 + ap_383 * 4:word32] != 0x00000000 l000131E5
// DataOut: ap fp r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131E5:
	ap_383 = ap_383 + 0x00000001
	branch ap_383 < Mem166[r3_181 + 100:word32] l000131B0
// DataOut: ap fp r10 r3 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131ED:
	Mem355[sp_170 - 0x00000004:word32] = r6_179
	byte CVZN_360
	byte ZN_361
	bool C_362
	bool V_363
	word32 r5_364
	bool Z_365
	bool N_366
	word32 r6_368
	byte VZN_371
	word32 r0_372
	word32 r2_373
	byte CZN_374
	word32 r4_375
	word32 fp_376
	word32 r9_377
	word32 ap_378
	word32 r8_379
	word32 r1_380
	call Mem355[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_350,C_357,CVZN_171,CZN_185,dwLoc18_31,fp_187,N_177,qwLoc10_10,r0_183,r1_191,r10_178,r2_184,r3_181,r4_186,r5_175,r6_179,r7_180,r8_190,r9_188,sp_354,V_358,VZN_182,wLoc12_8,Z_232,ZN_356
		defs: ap_378,C_362,CVZN_360,CZN_374,fp_376,N_366,r0_372,r1_380,r10_367,r2_373,r3_370,r4_375,r5_364,r6_368,r7_369,r8_379,r9_377,sp_359,V_363,VZN_371,Z_365,ZN_361
// DataOut: fp r10 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131F6:
	branch r7_180 == 0x00000000 l0001324A
// DataOut: fp r10 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131FA:
	word32 ap_295 = 0x00000000
	branch Mem166[r3_181 + 104:word32] <= 0x00000000 l00013241
// DataOut: ap fp r10 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013201:
	ap_331 = ap_295
// DataOut: ap fp r10 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:0x00000000 r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013204:
	word32 ap_331
	branch Mem166[r7_180 + ap_331 * 4:word32] != 0x00000000 l00013239
// DataOut: ap fp r10 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013239:
	ap_331 = ap_331 + 0x00000001
	branch ap_331 < Mem166[r3_181 + 104:word32] l00013204
// DataOut: ap fp r10 r3 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013241:
	word32 sp_299 = sp_170 - 0x00000004
	Mem300[sp_299:word32] = r7_180
	byte CVZN_305
	byte ZN_306
	bool C_307
	bool V_308
	word32 r5_309
	bool Z_310
	bool N_311
	word32 r6_313
	word32 r7_314
	word32 r3_315
	byte VZN_316
	word32 r0_317
	word32 r2_318
	byte CZN_319
	word32 r4_320
	word32 fp_321
	word32 r9_322
	word32 ap_323
	word32 r8_324
	word32 r1_325
	call Mem300[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_295,C_302,CVZN_248,CZN_243,dwLoc18_31,fp_251,N_246,qwLoc10_10,r0_249,r1_235,r10_244,r2_245,r3_240,r4_238,r5_247,r6_242,r7_241,r8_236,r9_237,sp_299,V_303,VZN_239,wLoc12_8,Z_254,ZN_301
		defs: ap_323,C_307,CVZN_305,CZN_319,fp_321,N_311,r0_317,r1_325,r10_312,r2_318,r3_315,r4_320,r5_309,r6_313,r7_314,r8_324,r9_322,sp_304,V_308,VZN_316,Z_310,ZN_306
// DataOut: fp r10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l0001324A:
	branch (uint32) Mem166[sp_170 + 2:word16] != 0x00000000 l00013258
// DataOut: fp r10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013250:
	branch r10_178 > 0x00000001 l00013258
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013255:
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013258:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013209:
	word32 sp_336 = sp_170 - 0x00000004
	Mem338[sp_336:uint32] = 0x00000401
	Mem342[sp_336 - 0x00000004:word32] = Mem338[Mem338[r3_181 + 148:word32] + ap_331 * 4:word32]
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000131B5:
	Mem390[sp_170 - 0x00000004:uint32] = 0x00000401
	Mem394[sp_170 - 0x00000008:word32] = Mem390[Mem390[r3_181 + 144:word32] + ap_383 * 4:word32]
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l0001312B:
	Mem208[sp_170 - 0x00000004:word32] = Mem166[sp_170 + 0x00000004:word32]
	Mem211[sp_170 - 0x00000008:word32] = Mem208[sp_170:word32]
	word32 sp_215
	branch fn00017662(ap_189, fp_187, out sp_215) >= 0x00000000 l0001314E
// DataOut: r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l00013144:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:<invalid> r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l0001314E:
	Mem225[sp_215 - 0x00000004:word32] = 0x00000000
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:<invalid> r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130FB:
	Mem198[sp_170 - 0x00000004:uint32] = 0x00000401
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

l000130E0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000

fn00012D86_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r10:<invalid> Sequence r7:r6:0x0000000000000000 r6:r0 r7:<invalid> r2:<invalid> r4:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r1:<invalid> -24(fp):<invalid> -18(fp):0x0000 -16(fp):0x0000000000000000



void fn0001325E(word32 r4, word32 r5, word32 r6, word32 r8, word32 r9, word32 r10, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r10 r4 r5 r6 r8 r9
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0001325E_entry:
// DataOut: ap fp r10 r4 r5 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0001325E:
	word32 sp_2 = fp + -236
	word32 r2_7 = Mem0[Mem0[ap + 4:word32]:word32]
	branch Mem0[r5 + 0x0000C67E:word32] == r2_7 l000132B7
// DataOut: ap fp r10 r2 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00013288:
	branch r2_7 == 0x00000000 l000132B7
// DataOut: ap fp r10 r2 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -236 r2:<invalid> -228(fp):0x00000000
// LocalsOut: fp(32)

l0001328C:
	word32 sp_6598
	byte ZN_6599
	bool C_6600
	bool V_6601
	bool Z_6602
	bool N_6603
	word32 ap_6604
	word32 r2_6605
	word32 r5_6606
	byte CZN_6607
	byte CVZN_6608
	word32 r6_6609
	word32 r0_6610
	word32 r3_6611
	word32 fp_6612
	word32 r4_6613
	word32 r9_6614
	word32 r10_6615
	word32 r8_6616
	word32 r7_6617
	word32 r1_6618
	byte CZ_6619
	byte VZN_6620
	word32 r11_6621
	call Mem0[0x000192D0:word32] + 2 (retsize: 4; depth: 256)
		uses: ap,C_6593,CVZN,CZ,CZN_9,dwLoc0100,dwLoc0104,dwLoc0108,dwLocE4_4,dwLocF0_6582,dwLocF4_6585,dwLocF8_6588,dwLocFC_6591,fp,N,r0,r1,r10,r11,r2_7,r3,r4,r5,r6,r7,r8,r9,sp_6589,V_6594,VZN,Z_6578,ZN_6592
		defs: ap_6604,C_6600,CVZN_6608,CZ_6619,CZN_6607,fp_6612,N_6603,r0_6610,r1_6618,r10_6615,r11_6621,r2_6605,r3_6611,r4_6613,r5_6606,r6_6609,r7_6617,r8_6616,r9_6614,sp_6598,V_6601,VZN_6620,Z_6602,ZN_6599
	word32 r2_6629 = Mem0[r5_6606 + 0x0000C839:word32]
	byte ZN_6634
	bool C_6635
	bool V_6636
	bool Z_6637
	bool N_6638
	word32 r2_6640
	byte CZN_6642
	byte CVZN_6643
	word32 r6_6644
	word32 r0_6645
	word32 r3_6646
	word32 r4_6648
	word32 r9_6649
	word32 r10_6650
	word32 r7_6652
	word32 r1_6653
	byte CZ_6654
	byte VZN_6655
	word32 r11_6656
	call r2_6629 + 2 (retsize: 4; depth: 268)
		uses: ap_6604,C_6631,CVZN_6608,CZ_6619,CZN_6607,dwLoc0100_6623,dwLoc0104_6626,dwLoc0108_6628,dwLocE4_4,dwLocF0_6582,dwLocF4_6585,dwLocF8_6588,dwLocFC_6591,fp_6612,N_6603,r0_6610,r1_6618,r10_6615,r11_6621,r2_6629,r3_6611,r4_6613,r5_6606,r6_6609,r7_6617,r8_6616,r9_6614,sp_6627,V_6632,VZN_6620,Z_6602,ZN_6630
		defs: ap_6639,C_6635,CVZN_6643,CZ_6654,CZN_6642,fp_6647,N_6638,r0_6645,r1_6653,r10_6650,r11_6656,r2_6640,r3_6646,r4_6648,r5_6641,r6_6644,r7_6652,r8_6651,r9_6649,sp_6633,V_6636,VZN_6655,Z_6637,ZN_6634
// DataOut: ap fp r10 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -236 r2:<invalid> -228(fp):0x00000000

l000132B7:
	word32 r2_59 = (uint32) Mem0[r5 + 0x0000C674:word16]
	word32 r3_60 = Mem0[r5 + 0x0000C67E:word32] + 0x0000001E + (uint32) Mem0[r5 + 0x0000C670:word16] + (uint32) Mem0[r5 + 0x0000C672:word16] + r2_59
	Mem62[Mem62[ap + 4:word32]:word32] = r3_60 + Mem0[r5 + 0x0000C668:word32]
	word32 sp_63 = sp_2 - 0x00000004
	Mem64[sp_63:word32] = 0x00000003
	Mem67[sp_63 - 0x00000004:uint32] = (uint32) Mem64[r5 + 0x0000C672:word16]
	word32 r11_71
	word32 ap_72
	word32 sp_6533
	word32 fp_100
	word32 r0_75 = fn0000DC76(ap, fp, out r11_71, out ap_72, out fp_100, out sp_6533)
	Mem77[sp_6533 + 4:word32] = r0_75
	branch r0_75 == 0x00000000 l0001331C
// DataOut: ap fp r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):r6 + 1743 -244(fp):<invalid> -240(fp):0x00000000 -228(fp):0x00000000

l000132FC:
	branch Mem77[r5 + 0x0000C627:word32] == 0x00000000 l00013317
// DataOut: ap fp r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):r6 + 1743 -244(fp):<invalid> -240(fp):<invalid> -228(fp):0x00000000

l00013304:
	Mem6543[sp_6533 - 0x00000004:word32] = Mem77[r5 + 0x0000C627:word32]
	byte ZN_6548
	bool C_6549
	bool V_6550
	bool Z_6551
	bool N_6552
	word32 ap_6553
	word32 r2_6554
	byte CZN_6556
	byte CVZN_6557
	word32 r6_6558
	word32 r0_6559
	word32 r4_6562
	word32 r9_6563
	word32 r10_6564
	word32 r7_6566
	word32 r1_6567
	byte CZ_6568
	byte VZN_6569
	word32 r11_6570
	call Mem6543[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_72,C_6545,CVZN_47,CZ_39,CZN_48,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_73,N_50,r0_75,r1_40,r10_43,r11_71,r2_59,r3_60,r4_45,r5_49,r6_46,r7_41,r8_42,r9_44,sp_6541,V_6546,VZN_38,Z_6512,ZN_6544
		defs: ap_6553,C_6549,CVZN_6557,CZ_6568,CZN_6556,fp_6561,N_6552,r0_6559,r1_6567,r10_6564,r11_6570,r2_6554,r3_6560,r4_6562,r5_6555,r6_6558,r7_6566,r8_6565,r9_6563,sp_6547,V_6550,VZN_6569,Z_6551,ZN_6548
	Mem6572[r5 + 0x0000C627:word32] = 0x00000000
// DataOut: ap fp r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):r6 + 1743 -244(fp):<invalid> -240(fp):<invalid> -228(fp):0x00000000

l00013317:
	Mem6537[sp_6533 + 8:word32] = Mem77[sp_6533 + 4:word32]
// DataOut: ap fp r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -228(fp):0x00000000

l0001331C:
	Mem104[sp_6533 + 2:word16] = Mem77[Mem77[r5 + 1511:word32] + 12:word16]
	Mem106[fp_100 + -6:uint16] = (uint16) Mem104[r5 + 0x0000C658:byte]
	branch (uint32) Mem106[r5 + 0x0000C65B:byte] >=u 0x00000012 l00013344
// DataOut: ap fp r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -228(fp):0x00000000

l00013344:
// DataOut: ap fp r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):0x00000000

l0001333A:
// DataOut: ap fp r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):0x00000000

l00013347:
	word32 r3_123
	branch (uint32) Mem106[r5 + 0x0000C65E:word16] >=u 0x0000000B l00013368
// DataOut: ap fp r10 r11 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):0x00000000

l00013368:
	r3_123 = SEQ(SLICE(r3_60, word16, 16), 0x000B)
// DataOut: ap fp r10 r11 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):0x00000000

l0001335D:
	r3_123 = SEQ(SLICE(r3_60, word16, 16), Mem106[r5 + 0x0000C65E:word16])
// DataOut: ap fp r10 r11 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):0x00000000

l0001336B:
	word32 r4_247
	Mem125[sp_6533 + 16:word16] = (word16) r3_123
	word32 sp_126 = sp_6533 - 0x00000004
	Mem127[sp_126:word32] = 0x00000000
	Mem129[sp_126 - 0x00000004:word32] = 0x00000002
	Mem132[sp_126 - 0x00000008:word32] = r8 + 42
	Mem134[sp_126 - 0x0000000C:word32] = r5
	word32 r2_135 = Mem134[r5 + 0x0000C839:word32]
	word32 sp_139
	byte ZN_140
	bool C_141
	bool V_142
	bool Z_143
	bool N_144
	word32 ap_145
	word32 r2_146
	word32 r5_147
	byte CZN_148
	byte CVZN_149
	word32 r6_150
	word32 r0_151
	word32 r3_152
	word32 fp_153
	word32 r4_154
	word32 r9_155
	word32 r10_156
	word32 r8_157
	word32 r7_158
	word32 r1_159
	byte CZ_160
	byte VZN_161
	word32 r11_162
	call r2_135 + 2 (retsize: 4; depth: 4)
		uses: ap_101,C_137,CVZN_93,CZ_84,CZN_120,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_100,N_95,r0_97,r1_85,r10_118,r11_82,r2_135,r3_123,r4_111,r5_94,r6_92,r7_86,r8_87,r9_115,sp_133,V_138,VZN_83,Z_96,ZN_136
		defs: ap_145,C_141,CVZN_149,CZ_160,CZN_148,fp_153,N_144,r0_151,r1_159,r10_156,r11_162,r2_146,r3_152,r4_154,r5_147,r6_150,r7_158,r8_157,r9_155,sp_139,V_142,VZN_161,Z_143,ZN_140
	word32 ap_163
	word32 fp_164
	word32 sp_165
	word32 r0_166 = fn00017772(r2_146, ap_145, fp_153, out ap_163, out fp_164, out sp_165)
	Mem168[sp_165 - 0x00000004:word32] = 0x00000000
	Mem171[sp_165 - 0x00000008:word32] = Mem168[r5_147 + 0x0000C67E:word32]
	Mem174[sp_165 - 0x0000000C:word32] = Mem171[r5_147 + 0x0000C67E:word32]
	Mem177[sp_165 - 0x00000010:word32] = r6_150 + 1810
	Mem180[sp_165 - 0x00000014:word32] = r5_147 + 1515
	word32 sp_184
	byte ZN_185
	bool C_186
	bool V_187
	bool Z_188
	bool N_189
	word32 ap_190
	word32 r2_191
	word32 r5_192
	byte CZN_193
	byte CVZN_194
	word32 r6_195
	word32 r0_196
	word32 r3_197
	word32 fp_198
	word32 r4_199
	word32 r9_200
	word32 r10_201
	word32 r8_202
	word32 r7_203
	word32 r1_204
	byte CZ_205
	byte VZN_206
	word32 r11_207
	call Mem180[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_163,C_182,CVZN_149,CZ_160,CZN_148,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_164,N_144,r0_166,r1_159,r10_156,r11_162,r2_146,r3_152,r4_154,r5_147,r6_150,r7_158,r8_157,r9_155,sp_178,V_183,VZN_161,Z_143,ZN_181
		defs: ap_190,C_186,CVZN_194,CZ_205,CZN_193,fp_198,N_189,r0_196,r1_204,r10_201,r11_207,r2_191,r3_197,r4_199,r5_192,r6_195,r7_203,r8_202,r9_200,sp_184,V_187,VZN_206,Z_188,ZN_185
	Mem209[sp_184 - 0x00000004:word32] = r0_196
	Mem212[sp_184 - 0x00000008:word32] = r5_192 + 1515
	Mem214[sp_184 - 0x0000000C:word32] = r5_192
	word32 r2_215 = Mem214[r5_192 + 0x0000C839:word32]
	byte ZN_220
	bool C_221
	bool V_222
	bool Z_223
	bool N_224
	word32 ap_225
	word32 r2_226
	byte CZN_228
	byte CVZN_229
	word32 r0_231
	word32 r3_232
	word32 fp_233
	word32 r4_234
	word32 r9_235
	word32 r10_236
	word32 r8_237
	word32 r7_238
	word32 r1_239
	byte CZ_240
	byte VZN_241
	word32 r11_242
	word32 r6_230
	word32 r5_227
	word32 sp_219
	call r2_215 + 2 (retsize: 4; depth: 4)
		uses: ap_190,C_217,CVZN_194,CZ_205,CZN_193,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_198,N_189,r0_196,r1_204,r10_201,r11_207,r2_215,r3_197,r4_199,r5_192,r6_195,r7_203,r8_202,r9_200,sp_213,V_218,VZN_206,Z_188,ZN_216
		defs: ap_225,C_221,CVZN_229,CZ_240,CZN_228,fp_233,N_224,r0_231,r1_239,r10_236,r11_242,r2_226,r3_232,r4_234,r5_227,r6_230,r7_238,r8_237,r9_235,sp_219,V_222,VZN_241,Z_223,ZN_220
	word32 r3_243 = (uint32) Mem214[sp_219 + 2:word16]
	branch r3_243 <u 0x00000012 l000133DC
// DataOut: ap fp r0 r10 r11 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> -264(fp):r5 -260(fp):r5 + 1515 -256(fp):r0 -252(fp):r5 + 1515 -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):0x00000000

l000133DC:
	r4_247 = Mem214[r6_230 + 5188 + r3_243 * 4:word32]
// DataOut: ap fp r0 r10 r11 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000133C1:
	Mem6445[sp_219 - 0x00000004:uint32] = (uint32) Mem214[r5_227 + 0x0000C659:byte]
	Mem6448[sp_219 - 0x00000008:word32] = r6_230 + 1797
	Mem6451[sp_219 - 0x0000000C:word32] = fp_233 + -58
	byte ZN_6456
	bool C_6457
	bool V_6458
	bool Z_6459
	bool N_6460
	word32 ap_6461
	word32 r2_6462
	byte CZN_6464
	byte CVZN_6465
	word32 r0_6467
	word32 r3_6468
	word32 fp_6469
	word32 r4_6470
	word32 r9_6471
	word32 r10_6472
	word32 r8_6473
	word32 r7_6474
	word32 r1_6475
	byte CZ_6476
	byte VZN_6477
	word32 r11_6478
	call Mem6451[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_225,C_6453,CVZN_229,CZ_240,CZN_244,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_233,N_224,r0_231,r1_239,r10_236,r11_242,r2_226,r3_243,r4_234,r5_227,r6_230,r7_238,r8_237,r9_235,sp_6449,V_6454,VZN_241,Z_223,ZN_6452
		defs: ap_6461,C_6457,CVZN_6465,CZ_6476,CZN_6464,fp_6469,N_6460,r0_6467,r1_6475,r10_6472,r11_6478,r2_6462,r3_6468,r4_6470,r5_6463,r6_6466,r7_6474,r8_6473,r9_6471,sp_6455,V_6458,VZN_6477,Z_6459,ZN_6456
	r4_247 = fp_6469 + -58
// DataOut: ap fp r0 r10 r11 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000133E2:
	word32 sp_251 = sp_219 - 0x00000004
	Mem252[sp_251:word32] = 0x00000000
	Mem254[sp_251 - 0x00000004:word32] = r4_247
	Mem257[sp_251 - 0x00000008:word32] = r6_230 + 1883
	Mem260[sp_251 - 0x0000000C:word32] = r5_227 + 1515
	word32 r7_261 = Mem260[0x000192D0:word32]
	word32 sp_265
	byte ZN_266
	bool C_267
	bool V_268
	bool Z_269
	bool N_270
	word32 ap_271
	word32 r2_272
	word32 r5_273
	byte CZN_274
	byte CVZN_275
	word32 r6_276
	word32 r0_277
	word32 r3_278
	word32 fp_279
	word32 r4_280
	word32 r9_281
	word32 r10_282
	word32 r8_283
	word32 r7_284
	word32 r1_285
	byte CZ_286
	byte VZN_287
	word32 r11_288
	call r7_261 + 2 (retsize: 4; depth: 4)
		uses: ap_225,C_263,CVZN_229,CZ_240,CZN_244,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_233,N_224,r0_231,r1_239,r10_236,r11_242,r2_226,r3_243,r4_247,r5_249,r6_248,r7_261,r8_237,r9_235,sp_258,V_264,VZN_241,Z_223,ZN_262
		defs: ap_271,C_267,CVZN_275,CZ_286,CZN_274,fp_279,N_270,r0_277,r1_285,r10_282,r11_288,r2_272,r3_278,r4_280,r5_273,r6_276,r7_284,r8_283,r9_281,sp_265,V_268,VZN_287,Z_269,ZN_266
	Mem290[sp_265 - 0x00000004:word32] = r0_277
	Mem293[sp_265 - 0x00000008:word32] = r5_273 + 1515
	Mem295[sp_265 - 0x0000000C:word32] = r5_273
	word32 r2_296 = Mem295[r5_273 + 0x0000C839:word32]
	word32 sp_300
	byte ZN_301
	bool C_302
	bool V_303
	bool Z_304
	bool N_305
	word32 ap_306
	word32 r2_307
	word32 r5_308
	byte CZN_309
	byte CVZN_310
	word32 r6_311
	word32 r0_312
	word32 r3_313
	word32 fp_314
	word32 r4_315
	word32 r9_316
	word32 r10_317
	word32 r8_318
	word32 r7_319
	word32 r1_320
	byte CZ_321
	byte VZN_322
	word32 r11_323
	call r2_296 + 2 (retsize: 4; depth: 4)
		uses: ap_271,C_298,CVZN_275,CZ_286,CZN_274,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_279,N_270,r0_277,r1_285,r10_282,r11_288,r2_296,r3_278,r4_280,r5_273,r6_276,r7_284,r8_283,r9_281,sp_294,V_299,VZN_287,Z_269,ZN_297
		defs: ap_306,C_302,CVZN_310,CZ_321,CZN_309,fp_314,N_305,r0_312,r1_320,r10_317,r11_323,r2_307,r3_313,r4_315,r5_308,r6_311,r7_319,r8_318,r9_316,sp_300,V_303,VZN_322,Z_304,ZN_301
	Mem325[sp_300 - 0x00000004:word32] = 0x00000000
	word32 r1_326 = 0x00000000
	word32 r0_327 = (uint32) Mem325[fp_314 + -6:word16]
	branch 0x0000000A == 0x00000000 l00013430
// DataOut: ap fp r0 r1 r10 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013417:
	branch 0x00000009 == 0x00000000 l00013435
// DataOut: ap fp r0 r1 r10 r11 r5 r6 r8 r9 sp
// DataOut (flags): ZN
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001341C:
	branch true l00013430
// DataOut: ap fp r0 r1 r10 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013430:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001341E:
	branch 0x0000000A == r0_327 l00013435
// DataOut: ap fp r0 r1 r10 r11 r5 r6 r8 r9 sp
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013423:
	branch 0x0000000A >u r0_327 l00013428
// DataOut: ap fp r0 r1 r10 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013425:
	r1_326 = 0xFFFFFFF6
// DataOut: ap fp r0 r1 r10 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013428:
	r1_326 = r1_326 + r0_327
// DataOut: ap fp r1 r10 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013435:
	Mem359[sp_300 - 0x00000008:uint32] = (uint32) (word16) r1_326
	word32 r2_360 = (uint32) Mem359[fp_314 + -6:word16]
	word32 r1_361 = 0x00000000
	branch true l00013450
// DataOut: ap fp r0 r1 r10 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013450:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013446:
	branch 0x0000000A >u r2_360 l00013455
// DataOut: ap fp r0 r1 r10 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001344B:
	r1_361 = 0x00000001
// DataOut: ap fp r0 r1 r10 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013455:
	word32 r4_446
	Mem373[sp_300 - 0x0000000C:word32] = r1_361
	Mem376[sp_300 - 0x00000010:word32] = r6_311 + 1939
	Mem379[sp_300 - 0x00000014:word32] = r5_308 + 1515
	word32 sp_383
	byte ZN_384
	bool C_385
	bool V_386
	bool Z_387
	bool N_388
	word32 ap_389
	word32 r2_390
	word32 r5_391
	byte CZN_392
	byte CVZN_393
	word32 r6_394
	word32 r0_395
	word32 r3_396
	word32 fp_397
	word32 r4_398
	word32 r9_399
	word32 r10_400
	word32 r8_401
	word32 r7_402
	word32 r1_403
	byte CZ_404
	byte VZN_405
	word32 r11_406
	call r7_319 + 2 (retsize: 4; depth: 4)
		uses: ap_306,C_381,CVZN_354,CZ_369,CZN_368,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_314,N_365,r0_362,r1_371,r10_317,r11_323,r2_363,r3_313,r4_315,r5_308,r6_311,r7_319,r8_318,r9_316,sp_377,V_382,VZN_351,Z_356,ZN_380
		defs: ap_389,C_385,CVZN_393,CZ_404,CZN_392,fp_397,N_388,r0_395,r1_403,r10_400,r11_406,r2_390,r3_396,r4_398,r5_391,r6_394,r7_402,r8_401,r9_399,sp_383,V_386,VZN_405,Z_387,ZN_384
	Mem408[sp_383 - 0x00000004:word32] = r0_395
	Mem411[sp_383 - 0x00000008:word32] = r5_391 + 1515
	Mem413[sp_383 - 0x0000000C:word32] = r5_391
	word32 r2_414 = Mem413[r5_391 + 0x0000C839:word32]
	byte ZN_419
	bool C_420
	bool V_421
	bool Z_422
	bool N_423
	word32 ap_424
	word32 r2_425
	byte CZN_427
	byte CVZN_428
	word32 r0_430
	word32 r3_431
	word32 fp_432
	word32 r4_433
	word32 r9_434
	word32 r10_435
	word32 r8_436
	word32 r7_437
	word32 r1_438
	byte CZ_439
	byte VZN_440
	word32 r11_441
	word32 r6_429
	word32 r5_426
	word32 sp_418
	call r2_414 + 2 (retsize: 4; depth: 4)
		uses: ap_389,C_416,CVZN_393,CZ_404,CZN_392,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_397,N_388,r0_395,r1_403,r10_400,r11_406,r2_414,r3_396,r4_398,r5_391,r6_394,r7_402,r8_401,r9_399,sp_412,V_417,VZN_405,Z_387,ZN_415
		defs: ap_424,C_420,CVZN_428,CZ_439,CZN_427,fp_432,N_423,r0_430,r1_438,r10_435,r11_441,r2_425,r3_431,r4_433,r5_426,r6_429,r7_437,r8_436,r9_434,sp_418,V_421,VZN_440,Z_422,ZN_419
	word32 r3_442 = (uint32) (word16) r9_434
	branch r3_442 <u 0x00000012 l00013494
// DataOut: ap fp r0 r10 r11 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013494:
	r4_446 = Mem413[r6_429 + 5188 + r3_442 * 4:word32]
// DataOut: ap fp r0 r10 r11 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001347C:
	Mem6385[sp_418 - 0x00000004:uint32] = (uint32) Mem413[r5_426 + 0x0000C65B:byte]
	Mem6388[sp_418 - 0x00000008:word32] = r6_429 + 1797
	Mem6391[sp_418 - 0x0000000C:word32] = fp_432 + -58
	byte ZN_6396
	bool C_6397
	bool V_6398
	bool Z_6399
	bool N_6400
	word32 ap_6401
	word32 r2_6402
	byte CZN_6404
	byte CVZN_6405
	word32 r0_6407
	word32 r3_6408
	word32 fp_6409
	word32 r4_6410
	word32 r9_6411
	word32 r10_6412
	word32 r8_6413
	word32 r7_6414
	word32 r1_6415
	byte CZ_6416
	byte VZN_6417
	word32 r11_6418
	call r7_437 + 2 (retsize: 4; depth: 4)
		uses: ap_424,C_6393,CVZN_428,CZ_439,CZN_443,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_432,N_423,r0_430,r1_438,r10_435,r11_441,r2_425,r3_442,r4_433,r5_426,r6_429,r7_437,r8_436,r9_434,sp_6389,V_6394,VZN_440,Z_422,ZN_6392
		defs: ap_6401,C_6397,CVZN_6405,CZ_6416,CZN_6404,fp_6409,N_6400,r0_6407,r1_6415,r10_6412,r11_6418,r2_6402,r3_6408,r4_6410,r5_6403,r6_6406,r7_6414,r8_6413,r9_6411,sp_6395,V_6398,VZN_6417,Z_6399,ZN_6396
	r4_446 = fp_6409 + -58
// DataOut: ap fp r0 r10 r11 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001349A:
	word32 sp_450 = sp_418 - 0x00000004
	Mem451[sp_450:word32] = 0x00000000
	Mem453[sp_450 - 0x00000004:word32] = r4_446
	Mem456[sp_450 - 0x00000008:word32] = r6_429 + 1998
	Mem459[sp_450 - 0x0000000C:word32] = r5_426 + 1515
	word32 r7_460 = Mem459[0x000192D0:word32]
	word32 sp_464
	byte ZN_465
	bool C_466
	bool V_467
	bool Z_468
	bool N_469
	word32 ap_470
	word32 r2_471
	word32 r5_472
	byte CZN_473
	byte CVZN_474
	word32 r6_475
	word32 r0_476
	word32 r3_477
	word32 fp_478
	word32 r4_479
	word32 r9_480
	word32 r10_481
	word32 r8_482
	word32 r7_483
	word32 r1_484
	byte CZ_485
	byte VZN_486
	word32 r11_487
	call r7_460 + 2 (retsize: 4; depth: 4)
		uses: ap_424,C_462,CVZN_428,CZ_439,CZN_443,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_432,N_423,r0_430,r1_438,r10_435,r11_441,r2_425,r3_442,r4_446,r5_448,r6_447,r7_460,r8_436,r9_434,sp_457,V_463,VZN_440,Z_422,ZN_461
		defs: ap_470,C_466,CVZN_474,CZ_485,CZN_473,fp_478,N_469,r0_476,r1_484,r10_481,r11_487,r2_471,r3_477,r4_479,r5_472,r6_475,r7_483,r8_482,r9_480,sp_464,V_467,VZN_486,Z_468,ZN_465
	Mem489[sp_464 - 0x00000004:word32] = r0_476
	Mem492[sp_464 - 0x00000008:word32] = r5_472 + 1515
	Mem494[sp_464 - 0x0000000C:word32] = r5_472
	word32 r2_495 = Mem494[r5_472 + 0x0000C839:word32]
	word32 sp_499
	byte ZN_500
	bool C_501
	bool V_502
	bool Z_503
	bool N_504
	word32 ap_505
	word32 r2_506
	word32 r5_507
	byte CZN_508
	byte CVZN_509
	word32 r6_510
	word32 r0_511
	word32 r3_512
	word32 fp_513
	word32 r4_514
	word32 r9_515
	word32 r10_516
	word32 r8_517
	word32 r7_518
	word32 r1_519
	byte CZ_520
	byte VZN_521
	word32 r11_522
	call r2_495 + 2 (retsize: 4; depth: 4)
		uses: ap_470,C_497,CVZN_474,CZ_485,CZN_473,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_478,N_469,r0_476,r1_484,r10_481,r11_487,r2_495,r3_477,r4_479,r5_472,r6_475,r7_483,r8_482,r9_480,sp_493,V_498,VZN_486,Z_468,ZN_496
		defs: ap_505,C_501,CVZN_509,CZ_520,CZN_508,fp_513,N_504,r0_511,r1_519,r10_516,r11_522,r2_506,r3_512,r4_514,r5_507,r6_510,r7_518,r8_517,r9_515,sp_499,V_502,VZN_521,Z_503,ZN_500
	Mem524[sp_499 - 0x00000004:word32] = 0x00000000
	word32 r1_525 = 0x00000000
	word32 r0_526 = (uint32) (word16) r10_516
	branch 0x0000000A == 0x00000000 l000134E4
// DataOut: ap fp r0 r1 r10 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000134CE:
	branch 0x00000009 == 0x00000000 l000134E9
// DataOut: ap fp r0 r1 r10 r11 r5 r6 r8 r9 sp
// DataOut (flags): ZN
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000134D3:
	branch true l000134E4
// DataOut: ap fp r0 r1 r10 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000134E4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000134D5:
	branch 0x0000000A == r0_526 l000134E9
// DataOut: ap fp r0 r1 r10 r11 r5 r6 r8 r9 sp
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000134DA:
	branch 0x0000000A >u r0_526 l000134DF
// DataOut: ap fp r0 r1 r10 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000134DC:
	r1_525 = 0xFFFFFFF6
// DataOut: ap fp r0 r1 r10 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000134DF:
	r1_525 = r1_525 + r0_526
// DataOut: ap fp r1 r10 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000134E9:
	Mem558[sp_499 - 0x00000008:uint32] = (uint32) (word16) r1_525
	word32 r2_559 = (uint32) (word16) r10_516
	word32 r1_560 = 0x00000000
	branch true l00013504
// DataOut: ap fp r0 r1 r10 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013504:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000134F9:
	branch 0x0000000A >u r2_559 l00013509
// DataOut: ap fp r0 r1 r10 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000134FE:
	r1_560 = 0x00000001
// DataOut: ap fp r0 r1 r10 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:0x00000000 r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013509:
	word32 r4_6359
	Mem572[sp_499 - 0x0000000C:word32] = r1_560
	Mem575[sp_499 - 0x00000010:word32] = r6_510 + 2054
	Mem578[sp_499 - 0x00000014:word32] = r5_507 + 1515
	word32 sp_582
	byte ZN_583
	bool C_584
	bool V_585
	bool Z_586
	bool N_587
	word32 ap_588
	word32 r2_589
	word32 r5_590
	byte CZN_591
	byte CVZN_592
	word32 r6_593
	word32 r0_594
	word32 r3_595
	word32 fp_596
	word32 r4_597
	word32 r9_598
	word32 r10_599
	word32 r8_600
	word32 r7_601
	word32 r1_602
	byte CZ_603
	byte VZN_604
	word32 r11_605
	call r7_518 + 2 (retsize: 4; depth: 4)
		uses: ap_505,C_580,CVZN_553,CZ_568,CZN_567,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_513,N_564,r0_561,r1_570,r10_516,r11_522,r2_562,r3_512,r4_514,r5_507,r6_510,r7_518,r8_517,r9_515,sp_576,V_581,VZN_550,Z_555,ZN_579
		defs: ap_588,C_584,CVZN_592,CZ_603,CZN_591,fp_596,N_587,r0_594,r1_602,r10_599,r11_605,r2_589,r3_595,r4_597,r5_590,r6_593,r7_601,r8_600,r9_598,sp_582,V_585,VZN_604,Z_586,ZN_583
	Mem607[sp_582 - 0x00000004:word32] = r0_594
	Mem610[sp_582 - 0x00000008:word32] = r5_590 + 1515
	Mem612[sp_582 - 0x0000000C:word32] = r5_590
	word32 r2_613 = Mem612[r5_590 + 0x0000C839:word32]
	byte ZN_618
	bool C_619
	bool V_620
	bool Z_621
	bool N_622
	word32 ap_623
	word32 r2_624
	byte CZN_626
	byte CVZN_627
	word32 r0_629
	word32 r3_630
	word32 fp_631
	word32 r4_632
	word32 r9_633
	word32 r10_634
	word32 r8_635
	word32 r7_636
	word32 r1_637
	byte CZ_638
	byte VZN_639
	word32 r11_640
	word32 r6_628
	word32 r5_625
	word32 sp_617
	call r2_613 + 2 (retsize: 4; depth: 4)
		uses: ap_588,C_615,CVZN_592,CZ_603,CZN_591,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_596,N_587,r0_594,r1_602,r10_599,r11_605,r2_613,r3_595,r4_597,r5_590,r6_593,r7_601,r8_600,r9_598,sp_611,V_616,VZN_604,Z_586,ZN_614
		defs: ap_623,C_619,CVZN_627,CZ_638,CZN_626,fp_631,N_622,r0_629,r1_637,r10_634,r11_640,r2_624,r3_630,r4_632,r5_625,r6_628,r7_636,r8_635,r9_633,sp_617,V_620,VZN_639,Z_621,ZN_618
	word32 r3_641 = (uint32) Mem612[sp_617 + 16:word16]
	branch r3_641 <u 0x0000000B l00013548
// DataOut: ap fp r0 r10 r11 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x0000000A r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013548:
	r4_6359 = Mem612[r6_628 + 5260 + r3_641 * 4:word32]
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013531:
	Mem6325[sp_617 - 0x00000004:uint32] = (uint32) Mem612[r5_625 + 0x0000C65E:word16]
	Mem6328[sp_617 - 0x00000008:word32] = r6_628 + 1797
	Mem6331[sp_617 - 0x0000000C:word32] = fp_631 + -58
	byte ZN_6336
	bool C_6337
	bool V_6338
	bool Z_6339
	bool N_6340
	word32 ap_6341
	word32 r2_6342
	byte CZN_6344
	byte CVZN_6345
	word32 r0_6347
	word32 r3_6348
	word32 fp_6349
	word32 r4_6350
	word32 r9_6351
	word32 r10_6352
	word32 r8_6353
	word32 r7_6354
	word32 r1_6355
	byte CZ_6356
	byte VZN_6357
	word32 r11_6358
	call r7_636 + 2 (retsize: 4; depth: 4)
		uses: ap_623,C_6333,CVZN_627,CZ_638,CZN_642,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_631,N_622,r0_629,r1_637,r10_634,r11_640,r2_624,r3_641,r4_632,r5_625,r6_628,r7_636,r8_635,r9_633,sp_6329,V_6334,VZN_639,Z_621,ZN_6332
		defs: ap_6341,C_6337,CVZN_6345,CZ_6356,CZN_6344,fp_6349,N_6340,r0_6347,r1_6355,r10_6352,r11_6358,r2_6342,r3_6348,r4_6350,r5_6343,r6_6346,r7_6354,r8_6353,r9_6351,sp_6335,V_6338,VZN_6357,Z_6339,ZN_6336
	r4_6359 = fp_6349 + -58
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001354E:
	word32 sp_649 = sp_617 - 0x00000004
	Mem650[sp_649:word32] = 0x00000000
	Mem652[sp_649 - 0x00000004:word32] = r4_6359
	Mem655[sp_649 - 0x00000008:word32] = r6_628 + 2113
	Mem658[sp_649 - 0x0000000C:word32] = r5_625 + 1515
	word32 r7_659 = Mem658[0x000192D0:word32]
	word32 sp_663
	byte ZN_664
	bool C_665
	bool V_666
	bool Z_667
	bool N_668
	word32 ap_669
	word32 r2_670
	word32 r5_671
	byte CZN_672
	byte CVZN_673
	word32 r6_674
	word32 r0_675
	word32 r3_676
	word32 fp_677
	word32 r4_678
	word32 r9_679
	word32 r10_680
	word32 r8_681
	word32 r7_682
	word32 r1_683
	byte CZ_684
	byte VZN_685
	word32 r11_686
	call r7_659 + 2 (retsize: 4; depth: 4)
		uses: ap_623,C_661,CVZN_627,CZ_638,CZN_642,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_631,N_622,r0_629,r1_637,r10_634,r11_640,r2_624,r3_641,r4_645,r5_647,r6_646,r7_659,r8_635,r9_633,sp_656,V_662,VZN_639,Z_621,ZN_660
		defs: ap_669,C_665,CVZN_673,CZ_684,CZN_672,fp_677,N_668,r0_675,r1_683,r10_680,r11_686,r2_670,r3_676,r4_678,r5_671,r6_674,r7_682,r8_681,r9_679,sp_663,V_666,VZN_685,Z_667,ZN_664
	Mem688[sp_663 - 0x00000004:word32] = r0_675
	Mem691[sp_663 - 0x00000008:word32] = r5_671 + 1515
	Mem693[sp_663 - 0x0000000C:word32] = r5_671
	word32 r2_694 = Mem693[r5_671 + 0x0000C839:word32]
	byte ZN_699
	bool C_700
	bool V_701
	bool Z_702
	bool N_703
	word32 ap_704
	word32 r2_705
	byte CZN_707
	byte CVZN_708
	word32 r0_710
	word32 r3_711
	word32 fp_712
	word32 r4_713
	word32 r9_714
	word32 r10_715
	word32 r7_717
	word32 r1_718
	byte CZ_719
	byte VZN_720
	word32 r11_721
	word32 r8_6211
	word32 r6_6204
	word32 r5_6201
	word32 sp_6193
	call r2_694 + 2 (retsize: 4; depth: 4)
		uses: ap_669,C_696,CVZN_673,CZ_684,CZN_672,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_677,N_668,r0_675,r1_683,r10_680,r11_686,r2_694,r3_676,r4_678,r5_671,r6_674,r7_682,r8_681,r9_679,sp_692,V_697,VZN_685,Z_667,ZN_695
		defs: ap_704,C_700,CVZN_708,CZ_719,CZN_707,fp_712,N_703,r0_710,r1_718,r10_715,r11_721,r2_705,r3_711,r4_713,r5_706,r6_709,r7_717,r8_716,r9_714,sp_698,V_701,VZN_720,Z_702,ZN_699
	word32 r4_722 = (uint32) Mem693[sp_6193 + 16:word16]
	branch r4_722 != 0x00000006 l000135F4
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000135F4:
	branch r4_722 != 0x00000008 l00013638
// DataOut: ap fp r0 r10 r11 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000135F9:
	Mem6248[fp_712 + -8:int16] = (int16) ((uint32) Mem693[r5_6201 + 0x0000C65C:word16] >> 1 & ~0xFFFFFFFC)
	Mem6250[sp_6193 - 0x00000004:word32] = 0x00000000
	word32 r2_6251 = (uint32) Mem6250[fp_712 + -8:word16]
	Mem6254[sp_6193 - 0x00000008:word32] = Mem6250[r6_6204 + 5304 + r2_6251 * 4:word32]
	Mem6257[sp_6193 - 0x0000000C:word32] = r6_6204 + 2282
	Mem6260[sp_6193 - 0x00000010:word32] = r5_6201 + 1515
	word32 sp_6264
	byte ZN_6265
	bool C_6266
	bool V_6267
	bool Z_6268
	bool N_6269
	word32 ap_6270
	word32 r2_6271
	word32 r5_6272
	byte CZN_6273
	byte CVZN_6274
	word32 r6_6275
	word32 r0_6276
	word32 r3_6277
	word32 fp_6278
	word32 r4_6279
	word32 r9_6280
	word32 r10_6281
	word32 r8_6282
	word32 r7_6283
	word32 r1_6284
	byte CZ_6285
	byte VZN_6286
	word32 r11_6287
	call r7_717 + 2 (retsize: 4; depth: 4)
		uses: ap_704,C_6262,CVZN_708,CZ_719,CZN_6241,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_712,N_703,r0_710,r1_718,r10_715,r11_721,r2_6251,r3_711,r4_722,r5_706,r6_709,r7_717,r8_716,r9_714,sp_6258,V_6263,VZN_720,Z_6242,ZN_6261
		defs: ap_6270,C_6266,CVZN_6274,CZ_6285,CZN_6273,fp_6278,N_6269,r0_6276,r1_6284,r10_6281,r11_6287,r2_6271,r3_6277,r4_6279,r5_6272,r6_6275,r7_6283,r8_6282,r9_6280,sp_6264,V_6267,VZN_6286,Z_6268,ZN_6265
	Mem6289[sp_6264 - 0x00000004:word32] = r0_6276
	Mem6292[sp_6264 - 0x00000008:word32] = r5_6272 + 1515
	Mem6294[sp_6264 - 0x0000000C:word32] = r5_6272
	word32 r2_6295 = Mem6294[r5_6272 + 0x0000C839:word32]
	byte ZN_6300
	bool C_6301
	bool V_6302
	bool Z_6303
	bool N_6304
	word32 ap_6305
	word32 r2_6306
	byte CZN_6308
	byte CVZN_6309
	word32 r0_6311
	word32 r3_6312
	word32 fp_6313
	word32 r4_6314
	word32 r9_6315
	word32 r10_6316
	word32 r7_6318
	word32 r1_6319
	byte CZ_6320
	byte VZN_6321
	word32 r11_6322
	call r2_6295 + 2 (retsize: 4; depth: 4)
		uses: ap_6270,C_6297,CVZN_6274,CZ_6285,CZN_6273,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_6278,N_6269,r0_6276,r1_6284,r10_6281,r11_6287,r2_6295,r3_6277,r4_6279,r5_6272,r6_6275,r7_6283,r8_6282,r9_6280,sp_6293,V_6298,VZN_6286,Z_6268,ZN_6296
		defs: ap_6305,C_6301,CVZN_6309,CZ_6320,CZN_6308,fp_6313,N_6304,r0_6311,r1_6319,r10_6316,r11_6322,r2_6306,r3_6312,r4_6314,r5_6307,r6_6310,r7_6318,r8_6317,r9_6315,sp_6299,V_6302,VZN_6321,Z_6303,ZN_6300
// DataOut: ap fp r0 r10 r11 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001357F:
	word32 r3_6067
	Mem6062[sp_6193 - 0x00000004:word32] = 0x00000000
	word32 r2_6063 = (uint32) Mem6062[r5_6201 + 0x0000C65C:word16]
	branch (r2_6063 & 0x00000002) == 0x00000000 l00013594
// DataOut: ap fp r0 r10 r11 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013594:
	r3_6067 = SEQ(SLICE(r3_711, word24, 8), 0x34)
// DataOut: ap fp r0 r10 r11 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001358C:
	r3_6067 = SEQ(SLICE(r3_711, word24, 8), 0x38)
// DataOut: ap fp r0 r10 r11 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013597:
	word32 r3_6145
	Mem6070[sp_6193 - 0x00000008:int32] = (int32) (int8) r3_6067
	Mem6073[sp_6193 - 0x0000000C:word32] = r6_6204 + 2169
	Mem6076[sp_6193 - 0x00000010:word32] = r5_6201 + 1515
	word32 sp_6080
	byte ZN_6081
	bool C_6082
	bool V_6083
	bool Z_6084
	bool N_6085
	word32 ap_6086
	word32 r2_6087
	word32 r5_6088
	byte CZN_6089
	byte CVZN_6090
	word32 r6_6091
	word32 r0_6092
	word32 r3_6093
	word32 fp_6094
	word32 r4_6095
	word32 r9_6096
	word32 r10_6097
	word32 r8_6098
	word32 r7_6099
	word32 r1_6100
	byte CZ_6101
	byte VZN_6102
	word32 r11_6103
	call r7_717 + 2 (retsize: 4; depth: 4)
		uses: ap_704,C_6078,CVZN_708,CZ_719,CZN_723,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_712,N_703,r0_710,r1_718,r10_715,r11_721,r2_6063,r3_6067,r4_722,r5_706,r6_709,r7_717,r8_716,r9_714,sp_6074,V_6079,VZN_720,Z_724,ZN_6077
		defs: ap_6086,C_6082,CVZN_6090,CZ_6101,CZN_6089,fp_6094,N_6085,r0_6092,r1_6100,r10_6097,r11_6103,r2_6087,r3_6093,r4_6095,r5_6088,r6_6091,r7_6099,r8_6098,r9_6096,sp_6080,V_6083,VZN_6102,Z_6084,ZN_6081
	Mem6105[sp_6080 - 0x00000004:word32] = r0_6092
	Mem6108[sp_6080 - 0x00000008:word32] = r5_6088 + 1515
	Mem6110[sp_6080 - 0x0000000C:word32] = r5_6088
	word32 r2_6111 = Mem6110[r5_6088 + 0x0000C839:word32]
	word32 sp_6115
	byte ZN_6116
	bool C_6117
	bool V_6118
	bool Z_6119
	bool N_6120
	word32 ap_6121
	word32 r2_6122
	word32 r5_6123
	byte CZN_6124
	byte CVZN_6125
	word32 r6_6126
	word32 r0_6127
	word32 r3_6128
	word32 fp_6129
	word32 r4_6130
	word32 r9_6131
	word32 r10_6132
	word32 r8_6133
	word32 r7_6134
	word32 r1_6135
	byte CZ_6136
	byte VZN_6137
	word32 r11_6138
	call r2_6111 + 2 (retsize: 4; depth: 4)
		uses: ap_6086,C_6113,CVZN_6090,CZ_6101,CZN_6089,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_6094,N_6085,r0_6092,r1_6100,r10_6097,r11_6103,r2_6111,r3_6093,r4_6095,r5_6088,r6_6091,r7_6099,r8_6098,r9_6096,sp_6109,V_6114,VZN_6102,Z_6084,ZN_6112
		defs: ap_6121,C_6117,CVZN_6125,CZ_6136,CZN_6124,fp_6129,N_6120,r0_6127,r1_6135,r10_6132,r11_6138,r2_6122,r3_6128,r4_6130,r5_6123,r6_6126,r7_6134,r8_6133,r9_6131,sp_6115,V_6118,VZN_6137,Z_6119,ZN_6116
	Mem6140[sp_6115 - 0x00000004:word32] = 0x00000000
	word32 r2_6141 = (uint32) Mem6140[r5_6123 + 0x0000C65C:word16]
	branch (r2_6141 & 0x00000004) == 0x00000000 l000135CC
// DataOut: ap fp r0 r10 r11 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000135CC:
	r3_6145 = SEQ(SLICE(r3_6128, word24, 8), 0x32)
// DataOut: ap fp r0 r10 r11 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000135C4:
	r3_6145 = SEQ(SLICE(r3_6128, word24, 8), 0x33)
// DataOut: ap fp r0 r10 r11 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000135CF:
	Mem6148[sp_6115 - 0x00000008:int32] = (int32) (int8) r3_6145
	Mem6151[sp_6115 - 0x0000000C:word32] = r6_6126 + 2226
	Mem6154[sp_6115 - 0x00000010:word32] = r5_6123 + 1515
	word32 sp_6158
	byte ZN_6159
	bool C_6160
	bool V_6161
	bool Z_6162
	bool N_6163
	word32 ap_6164
	word32 r2_6165
	word32 r5_6166
	byte CZN_6167
	byte CVZN_6168
	word32 r6_6169
	word32 r0_6170
	word32 r3_6171
	word32 fp_6172
	word32 r4_6173
	word32 r9_6174
	word32 r10_6175
	word32 r8_6176
	word32 r7_6177
	word32 r1_6178
	byte CZ_6179
	byte VZN_6180
	word32 r11_6181
	call r7_6134 + 2 (retsize: 4; depth: 4)
		uses: ap_6121,C_6156,CVZN_6125,CZ_6136,CZN_6124,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_6129,N_6120,r0_6127,r1_6135,r10_6132,r11_6138,r2_6141,r3_6145,r4_6130,r5_6123,r6_6126,r7_6134,r8_6133,r9_6131,sp_6152,V_6157,VZN_6137,Z_6119,ZN_6155
		defs: ap_6164,C_6160,CVZN_6168,CZ_6179,CZN_6167,fp_6172,N_6163,r0_6170,r1_6178,r10_6175,r11_6181,r2_6165,r3_6171,r4_6173,r5_6166,r6_6169,r7_6177,r8_6176,r9_6174,sp_6158,V_6161,VZN_6180,Z_6162,ZN_6159
	Mem6183[sp_6158 - 0x00000004:word32] = r0_6170
	Mem6186[sp_6158 - 0x00000008:word32] = r5_6166 + 1515
	Mem6188[sp_6158 - 0x0000000C:word32] = r5_6166
	word32 r2_6189 = Mem6188[r5_6166 + 0x0000C839:word32]
	byte ZN_6194
	bool C_6195
	bool V_6196
	bool Z_6197
	bool N_6198
	word32 ap_6199
	word32 r2_6200
	byte CZN_6202
	byte CVZN_6203
	word32 r0_6205
	word32 r3_6206
	word32 fp_6207
	word32 r4_6208
	word32 r9_6209
	word32 r10_6210
	word32 r7_6212
	word32 r1_6213
	byte CZ_6214
	byte VZN_6215
	word32 r11_6216
	call r2_6189 + 2 (retsize: 4; depth: 4)
		uses: ap_6164,C_6191,CVZN_6168,CZ_6179,CZN_6167,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_6172,N_6163,r0_6170,r1_6178,r10_6175,r11_6181,r2_6189,r3_6171,r4_6173,r5_6166,r6_6169,r7_6177,r8_6176,r9_6174,sp_6187,V_6192,VZN_6180,Z_6162,ZN_6190
		defs: ap_6199,C_6195,CVZN_6203,CZ_6214,CZN_6202,fp_6207,N_6198,r0_6205,r1_6213,r10_6210,r11_6216,r2_6200,r3_6206,r4_6208,r5_6201,r6_6204,r7_6212,r8_6211,r9_6209,sp_6193,V_6196,VZN_6215,Z_6197,ZN_6194
// DataOut: ap fp r0 r10 r11 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013638:
	word32 r3_6053
	word32 sp_746 = sp_6193 - 0x00000004
	Mem747[sp_746:word32] = 0x00000000
	word32 r2_748 = (uint32) Mem747[r5_6201 + 0x0000C65C:word16]
	branch (r2_748 & 0x00000001) == 0x00000000 l0001364C
// DataOut: ap fp r0 r10 r11 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001364C:
	r3_6053 = r8_6211 + 45
// DataOut: ap fp r0 r10 r11 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013644:
	r3_6053 = r6_6204
// DataOut: ap fp r0 r10 r11 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013650:
	word32 r3_6045
	Mem754[sp_746 - 0x00000004:word32] = r3_6053
	Mem757[sp_746 - 0x00000008:word32] = r6_6204 + 2338
	Mem760[sp_746 - 0x0000000C:word32] = r5_6201 + 1515
	word32 r4_761 = Mem760[0x000192D0:word32]
	word32 sp_765
	byte ZN_766
	bool C_767
	bool V_768
	bool Z_769
	bool N_770
	word32 ap_771
	word32 r2_772
	word32 r5_773
	byte CZN_774
	byte CVZN_775
	word32 r6_776
	word32 r0_777
	word32 r3_778
	word32 fp_779
	word32 r4_780
	word32 r9_781
	word32 r10_782
	word32 r8_783
	word32 r7_784
	word32 r1_785
	byte CZ_786
	byte VZN_787
	word32 r11_788
	call r4_761 + 2 (retsize: 4; depth: 4)
		uses: ap_745,C_763,CVZN_737,CZ_728,CZN_738,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_744,N_740,r0_742,r1_729,r10_732,r11_726,r2_748,r3_752,r4_761,r5_739,r6_736,r7_730,r8_731,r9_733,sp_758,V_764,VZN_727,Z_741,ZN_762
		defs: ap_771,C_767,CVZN_775,CZ_786,CZN_774,fp_779,N_770,r0_777,r1_785,r10_782,r11_788,r2_772,r3_778,r4_780,r5_773,r6_776,r7_784,r8_783,r9_781,sp_765,V_768,VZN_787,Z_769,ZN_766
	Mem790[sp_765 - 0x00000004:word32] = r0_777
	Mem793[sp_765 - 0x00000008:word32] = r5_773 + 1515
	Mem795[sp_765 - 0x0000000C:word32] = r5_773
	word32 r2_796 = Mem795[r5_773 + 0x0000C839:word32]
	word32 sp_800
	byte ZN_801
	bool C_802
	bool V_803
	bool Z_804
	bool N_805
	word32 ap_806
	word32 r2_807
	word32 r5_808
	byte CZN_809
	byte CVZN_810
	word32 r6_811
	word32 r0_812
	word32 r3_813
	word32 fp_814
	word32 r4_815
	word32 r9_816
	word32 r10_817
	word32 r8_818
	word32 r7_819
	word32 r1_820
	byte CZ_821
	byte VZN_822
	word32 r11_823
	call r2_796 + 2 (retsize: 4; depth: 4)
		uses: ap_771,C_798,CVZN_775,CZ_786,CZN_774,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_779,N_770,r0_777,r1_785,r10_782,r11_788,r2_796,r3_778,r4_780,r5_773,r6_776,r7_784,r8_783,r9_781,sp_794,V_799,VZN_787,Z_769,ZN_797
		defs: ap_806,C_802,CVZN_810,CZ_821,CZN_809,fp_814,N_805,r0_812,r1_820,r10_817,r11_823,r2_807,r3_813,r4_815,r5_808,r6_811,r7_819,r8_818,r9_816,sp_800,V_803,VZN_822,Z_804,ZN_801
	Mem825[sp_800 - 0x00000004:word32] = 0x00000000
	word32 r2_826 = (uint32) Mem825[r5_808 + 0x0000C65C:word16]
	branch (r2_826 & 0x00000008) == 0x00000000 l0001368C
// DataOut: ap fp r0 r10 r11 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001368C:
	r3_6045 = r8_818 + 50
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013683:
	r3_6045 = r8_818 + 53
// DataOut: ap fp r0 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013690:
	word32 r4_1514
	Mem832[sp_800 - 0x00000008:word32] = r3_6045
	Mem835[sp_800 - 0x0000000C:word32] = r6_811 + 2403
	Mem838[sp_800 - 0x00000010:word32] = r5_808 + 1515
	word32 sp_842
	byte ZN_843
	bool C_844
	bool V_845
	bool Z_846
	bool N_847
	word32 ap_848
	word32 r2_849
	word32 r5_850
	byte CZN_851
	byte CVZN_852
	word32 r6_853
	word32 r0_854
	word32 r3_855
	word32 fp_856
	word32 r4_857
	word32 r9_858
	word32 r10_859
	word32 r8_860
	word32 r7_861
	word32 r1_862
	byte CZ_863
	byte VZN_864
	word32 r11_865
	call r4_815 + 2 (retsize: 4; depth: 4)
		uses: ap_806,C_840,CVZN_810,CZ_821,CZN_809,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_814,N_805,r0_812,r1_820,r10_817,r11_823,r2_826,r3_830,r4_815,r5_808,r6_811,r7_819,r8_818,r9_816,sp_836,V_841,VZN_822,Z_804,ZN_839
		defs: ap_848,C_844,CVZN_852,CZ_863,CZN_851,fp_856,N_847,r0_854,r1_862,r10_859,r11_865,r2_849,r3_855,r4_857,r5_850,r6_853,r7_861,r8_860,r9_858,sp_842,V_845,VZN_864,Z_846,ZN_843
	Mem867[sp_842 - 0x00000004:word32] = r0_854
	Mem870[sp_842 - 0x00000008:word32] = r5_850 + 1515
	Mem872[sp_842 - 0x0000000C:word32] = r5_850
	word32 r2_873 = Mem872[r5_850 + 0x0000C839:word32]
	word32 sp_877
	byte ZN_878
	bool C_879
	bool V_880
	bool Z_881
	bool N_882
	word32 ap_883
	word32 r2_884
	word32 r5_885
	byte CZN_886
	byte CVZN_887
	word32 r6_888
	word32 r0_889
	word32 r3_890
	word32 fp_891
	word32 r4_892
	word32 r9_893
	word32 r10_894
	word32 r8_895
	word32 r7_896
	word32 r1_897
	byte CZ_898
	byte VZN_899
	word32 r11_900
	call r2_873 + 2 (retsize: 4; depth: 4)
		uses: ap_848,C_875,CVZN_852,CZ_863,CZN_851,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_856,N_847,r0_854,r1_862,r10_859,r11_865,r2_873,r3_855,r4_857,r5_850,r6_853,r7_861,r8_860,r9_858,sp_871,V_876,VZN_864,Z_846,ZN_874
		defs: ap_883,C_879,CVZN_887,CZ_898,CZN_886,fp_891,N_882,r0_889,r1_897,r10_894,r11_900,r2_884,r3_890,r4_892,r5_885,r6_888,r7_896,r8_895,r9_893,sp_877,V_880,VZN_899,Z_881,ZN_878
	Mem903[sp_877 - 0x00000004:word32] = fp_891 + -42
	Mem905[sp_877 - 0x00000008:word32] = 0x00000000
	Mem908[sp_877 - 0x0000000C:word32] = r5_885 + 0x0000C660
	Mem911[sp_877 - 0x00000010:word32] = r5_885 + 0x0000C662
	word32 r5_915
	word32 r6_916
	word32 r8_917
	word32 r11_918
	word32 ap_919
	word32 fp_920
	word32 sp_921
	word32 r0_922 = fn00015106(r3_890, r4_892, r6_888, r7_896, r8_895, r9_893, r10_894, r11_900, ap_883, fp_891, out r5_915, out r6_916, out r8_917, out r11_918, out ap_919, out fp_920, out sp_921)
	Mem924[sp_921 - 0x00000004:word32] = 0x00000000
	Mem927[sp_921 - 0x00000008:word32] = fp_920 + -42
	Mem930[sp_921 - 0x0000000C:word32] = r6_916 + 2459
	Mem933[sp_921 - 0x00000010:word32] = r5_915 + 1515
	word32 sp_937
	byte ZN_938
	bool C_939
	bool V_940
	bool Z_941
	bool N_942
	word32 ap_943
	word32 r2_944
	word32 r5_945
	byte CZN_946
	byte CVZN_947
	word32 r6_948
	word32 r0_949
	word32 r3_950
	word32 fp_951
	word32 r4_952
	word32 r9_953
	word32 r10_954
	word32 r8_955
	word32 r7_956
	word32 r1_957
	byte CZ_958
	byte VZN_959
	word32 r11_960
	call r4_892 + 2 (retsize: 4; depth: 4)
		uses: ap_919,C_935,CVZN_887,CZ_898,CZN_886,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_920,N_882,r0_922,r1_897,r10_894,r11_918,r2_884,r3_890,r4_892,r5_915,r6_916,r7_896,r8_917,r9_893,sp_931,V_936,VZN_899,Z_881,ZN_934
		defs: ap_943,C_939,CVZN_947,CZ_958,CZN_946,fp_951,N_942,r0_949,r1_957,r10_954,r11_960,r2_944,r3_950,r4_952,r5_945,r6_948,r7_956,r8_955,r9_953,sp_937,V_940,VZN_959,Z_941,ZN_938
	Mem962[sp_937 - 0x00000004:word32] = r0_949
	Mem965[sp_937 - 0x00000008:word32] = r5_945 + 1515
	Mem967[sp_937 - 0x0000000C:word32] = r5_945
	word32 r2_968 = Mem967[r5_945 + 0x0000C839:word32]
	word32 sp_972
	byte ZN_973
	bool C_974
	bool V_975
	bool Z_976
	bool N_977
	word32 ap_978
	word32 r2_979
	word32 r5_980
	byte CZN_981
	byte CVZN_982
	word32 r6_983
	word32 r0_984
	word32 r3_985
	word32 fp_986
	word32 r4_987
	word32 r9_988
	word32 r10_989
	word32 r8_990
	word32 r7_991
	word32 r1_992
	byte CZ_993
	byte VZN_994
	word32 r11_995
	call r2_968 + 2 (retsize: 4; depth: 4)
		uses: ap_943,C_970,CVZN_947,CZ_958,CZN_946,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_951,N_942,r0_949,r1_957,r10_954,r11_960,r2_968,r3_950,r4_952,r5_945,r6_948,r7_956,r8_955,r9_953,sp_966,V_971,VZN_959,Z_941,ZN_969
		defs: ap_978,C_974,CVZN_982,CZ_993,CZN_981,fp_986,N_977,r0_984,r1_992,r10_989,r11_995,r2_979,r3_985,r4_987,r5_980,r6_983,r7_991,r8_990,r9_988,sp_972,V_975,VZN_994,Z_976,ZN_973
	Mem997[sp_972 - 0x00000004:word32] = 0x00000000
	Mem1000[sp_972 - 0x00000008:word32] = Mem997[r5_980 + 0x0000C664:word32]
	Mem1003[sp_972 - 0x0000000C:word32] = r6_983 + 2515
	Mem1006[sp_972 - 0x00000010:word32] = r5_980 + 1515
	word32 sp_1010
	byte ZN_1011
	bool C_1012
	bool V_1013
	bool Z_1014
	bool N_1015
	word32 ap_1016
	word32 r2_1017
	word32 r5_1018
	byte CZN_1019
	byte CVZN_1020
	word32 r6_1021
	word32 r0_1022
	word32 r3_1023
	word32 fp_1024
	word32 r4_1025
	word32 r9_1026
	word32 r10_1027
	word32 r8_1028
	word32 r7_1029
	word32 r1_1030
	byte CZ_1031
	byte VZN_1032
	word32 r11_1033
	call r4_987 + 2 (retsize: 4; depth: 4)
		uses: ap_978,C_1008,CVZN_982,CZ_993,CZN_981,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_986,N_977,r0_984,r1_992,r10_989,r11_995,r2_979,r3_985,r4_987,r5_980,r6_983,r7_991,r8_990,r9_988,sp_1004,V_1009,VZN_994,Z_976,ZN_1007
		defs: ap_1016,C_1012,CVZN_1020,CZ_1031,CZN_1019,fp_1024,N_1015,r0_1022,r1_1030,r10_1027,r11_1033,r2_1017,r3_1023,r4_1025,r5_1018,r6_1021,r7_1029,r8_1028,r9_1026,sp_1010,V_1013,VZN_1032,Z_1014,ZN_1011
	Mem1035[sp_1010 - 0x00000004:word32] = r0_1022
	Mem1038[sp_1010 - 0x00000008:word32] = r5_1018 + 1515
	Mem1040[sp_1010 - 0x0000000C:word32] = r5_1018
	word32 r2_1041 = Mem1040[r5_1018 + 0x0000C839:word32]
	word32 sp_1045
	byte ZN_1046
	bool C_1047
	bool V_1048
	bool Z_1049
	bool N_1050
	word32 ap_1051
	word32 r2_1052
	word32 r5_1053
	byte CZN_1054
	byte CVZN_1055
	word32 r6_1056
	word32 r0_1057
	word32 r3_1058
	word32 fp_1059
	word32 r4_1060
	word32 r9_1061
	word32 r10_1062
	word32 r8_1063
	word32 r7_1064
	word32 r1_1065
	byte CZ_1066
	byte VZN_1067
	word32 r11_1068
	call r2_1041 + 2 (retsize: 4; depth: 4)
		uses: ap_1016,C_1043,CVZN_1020,CZ_1031,CZN_1019,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1024,N_1015,r0_1022,r1_1030,r10_1027,r11_1033,r2_1041,r3_1023,r4_1025,r5_1018,r6_1021,r7_1029,r8_1028,r9_1026,sp_1039,V_1044,VZN_1032,Z_1014,ZN_1042
		defs: ap_1051,C_1047,CVZN_1055,CZ_1066,CZN_1054,fp_1059,N_1050,r0_1057,r1_1065,r10_1062,r11_1068,r2_1052,r3_1058,r4_1060,r5_1053,r6_1056,r7_1064,r8_1063,r9_1061,sp_1045,V_1048,VZN_1067,Z_1049,ZN_1046
	Mem1070[sp_1045 - 0x00000004:word32] = 0x00000000
	Mem1073[sp_1045 - 0x00000008:word32] = Mem1070[r5_1053 + 0x0000C668:word32]
	Mem1076[sp_1045 - 0x0000000C:word32] = r6_1056 + 2574
	Mem1079[sp_1045 - 0x00000010:word32] = r5_1053 + 1515
	word32 sp_1083
	byte ZN_1084
	bool C_1085
	bool V_1086
	bool Z_1087
	bool N_1088
	word32 ap_1089
	word32 r2_1090
	word32 r5_1091
	byte CZN_1092
	byte CVZN_1093
	word32 r6_1094
	word32 r0_1095
	word32 r3_1096
	word32 fp_1097
	word32 r4_1098
	word32 r9_1099
	word32 r10_1100
	word32 r8_1101
	word32 r7_1102
	word32 r1_1103
	byte CZ_1104
	byte VZN_1105
	word32 r11_1106
	call r4_1060 + 2 (retsize: 4; depth: 4)
		uses: ap_1051,C_1081,CVZN_1055,CZ_1066,CZN_1054,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1059,N_1050,r0_1057,r1_1065,r10_1062,r11_1068,r2_1052,r3_1058,r4_1060,r5_1053,r6_1056,r7_1064,r8_1063,r9_1061,sp_1077,V_1082,VZN_1067,Z_1049,ZN_1080
		defs: ap_1089,C_1085,CVZN_1093,CZ_1104,CZN_1092,fp_1097,N_1088,r0_1095,r1_1103,r10_1100,r11_1106,r2_1090,r3_1096,r4_1098,r5_1091,r6_1094,r7_1102,r8_1101,r9_1099,sp_1083,V_1086,VZN_1105,Z_1087,ZN_1084
	Mem1108[sp_1083 - 0x00000004:word32] = r0_1095
	Mem1111[sp_1083 - 0x00000008:word32] = r5_1091 + 1515
	Mem1113[sp_1083 - 0x0000000C:word32] = r5_1091
	word32 r2_1114 = Mem1113[r5_1091 + 0x0000C839:word32]
	word32 sp_1118
	byte ZN_1119
	bool C_1120
	bool V_1121
	bool Z_1122
	bool N_1123
	word32 ap_1124
	word32 r2_1125
	word32 r5_1126
	byte CZN_1127
	byte CVZN_1128
	word32 r6_1129
	word32 r0_1130
	word32 r3_1131
	word32 fp_1132
	word32 r4_1133
	word32 r9_1134
	word32 r10_1135
	word32 r8_1136
	word32 r7_1137
	word32 r1_1138
	byte CZ_1139
	byte VZN_1140
	word32 r11_1141
	call r2_1114 + 2 (retsize: 4; depth: 4)
		uses: ap_1089,C_1116,CVZN_1093,CZ_1104,CZN_1092,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1097,N_1088,r0_1095,r1_1103,r10_1100,r11_1106,r2_1114,r3_1096,r4_1098,r5_1091,r6_1094,r7_1102,r8_1101,r9_1099,sp_1112,V_1117,VZN_1105,Z_1087,ZN_1115
		defs: ap_1124,C_1120,CVZN_1128,CZ_1139,CZN_1127,fp_1132,N_1123,r0_1130,r1_1138,r10_1135,r11_1141,r2_1125,r3_1131,r4_1133,r5_1126,r6_1129,r7_1137,r8_1136,r9_1134,sp_1118,V_1121,VZN_1140,Z_1122,ZN_1119
	Mem1143[sp_1118 - 0x00000004:word32] = 0x00000000
	Mem1146[sp_1118 - 0x00000008:word32] = Mem1143[r5_1126 + 0x0000C66C:word32]
	Mem1149[sp_1118 - 0x0000000C:word32] = r6_1129 + 2637
	Mem1152[sp_1118 - 0x00000010:word32] = r5_1126 + 1515
	word32 sp_1156
	byte ZN_1157
	bool C_1158
	bool V_1159
	bool Z_1160
	bool N_1161
	word32 ap_1162
	word32 r2_1163
	word32 r5_1164
	byte CZN_1165
	byte CVZN_1166
	word32 r6_1167
	word32 r0_1168
	word32 r3_1169
	word32 fp_1170
	word32 r4_1171
	word32 r9_1172
	word32 r10_1173
	word32 r8_1174
	word32 r7_1175
	word32 r1_1176
	byte CZ_1177
	byte VZN_1178
	word32 r11_1179
	call r4_1133 + 2 (retsize: 4; depth: 4)
		uses: ap_1124,C_1154,CVZN_1128,CZ_1139,CZN_1127,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1132,N_1123,r0_1130,r1_1138,r10_1135,r11_1141,r2_1125,r3_1131,r4_1133,r5_1126,r6_1129,r7_1137,r8_1136,r9_1134,sp_1150,V_1155,VZN_1140,Z_1122,ZN_1153
		defs: ap_1162,C_1158,CVZN_1166,CZ_1177,CZN_1165,fp_1170,N_1161,r0_1168,r1_1176,r10_1173,r11_1179,r2_1163,r3_1169,r4_1171,r5_1164,r6_1167,r7_1175,r8_1174,r9_1172,sp_1156,V_1159,VZN_1178,Z_1160,ZN_1157
	Mem1181[sp_1156 - 0x00000004:word32] = r0_1168
	Mem1184[sp_1156 - 0x00000008:word32] = r5_1164 + 1515
	Mem1186[sp_1156 - 0x0000000C:word32] = r5_1164
	word32 r2_1187 = Mem1186[r5_1164 + 0x0000C839:word32]
	word32 sp_1191
	byte ZN_1192
	bool C_1193
	bool V_1194
	bool Z_1195
	bool N_1196
	word32 ap_1197
	word32 r2_1198
	word32 r5_1199
	byte CZN_1200
	byte CVZN_1201
	word32 r6_1202
	word32 r0_1203
	word32 r3_1204
	word32 fp_1205
	word32 r4_1206
	word32 r9_1207
	word32 r10_1208
	word32 r8_1209
	word32 r7_1210
	word32 r1_1211
	byte CZ_1212
	byte VZN_1213
	word32 r11_1214
	call r2_1187 + 2 (retsize: 4; depth: 4)
		uses: ap_1162,C_1189,CVZN_1166,CZ_1177,CZN_1165,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1170,N_1161,r0_1168,r1_1176,r10_1173,r11_1179,r2_1187,r3_1169,r4_1171,r5_1164,r6_1167,r7_1175,r8_1174,r9_1172,sp_1185,V_1190,VZN_1178,Z_1160,ZN_1188
		defs: ap_1197,C_1193,CVZN_1201,CZ_1212,CZN_1200,fp_1205,N_1196,r0_1203,r1_1211,r10_1208,r11_1214,r2_1198,r3_1204,r4_1206,r5_1199,r6_1202,r7_1210,r8_1209,r9_1207,sp_1191,V_1194,VZN_1213,Z_1195,ZN_1192
	Mem1216[sp_1191 - 0x00000004:word32] = 0x00000000
	Mem1219[sp_1191 - 0x00000008:uint32] = (uint32) Mem1216[r5_1199 + 0x0000C670:word16]
	Mem1222[sp_1191 - 0x0000000C:word32] = r6_1202 + 2700
	Mem1225[sp_1191 - 0x00000010:word32] = r5_1199 + 1515
	word32 sp_1229
	byte ZN_1230
	bool C_1231
	bool V_1232
	bool Z_1233
	bool N_1234
	word32 ap_1235
	word32 r2_1236
	word32 r5_1237
	byte CZN_1238
	byte CVZN_1239
	word32 r6_1240
	word32 r0_1241
	word32 r3_1242
	word32 fp_1243
	word32 r4_1244
	word32 r9_1245
	word32 r10_1246
	word32 r8_1247
	word32 r7_1248
	word32 r1_1249
	byte CZ_1250
	byte VZN_1251
	word32 r11_1252
	call r4_1206 + 2 (retsize: 4; depth: 4)
		uses: ap_1197,C_1227,CVZN_1201,CZ_1212,CZN_1200,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1205,N_1196,r0_1203,r1_1211,r10_1208,r11_1214,r2_1198,r3_1204,r4_1206,r5_1199,r6_1202,r7_1210,r8_1209,r9_1207,sp_1223,V_1228,VZN_1213,Z_1195,ZN_1226
		defs: ap_1235,C_1231,CVZN_1239,CZ_1250,CZN_1238,fp_1243,N_1234,r0_1241,r1_1249,r10_1246,r11_1252,r2_1236,r3_1242,r4_1244,r5_1237,r6_1240,r7_1248,r8_1247,r9_1245,sp_1229,V_1232,VZN_1251,Z_1233,ZN_1230
	Mem1254[sp_1229 - 0x00000004:word32] = r0_1241
	Mem1257[sp_1229 - 0x00000008:word32] = r5_1237 + 1515
	Mem1259[sp_1229 - 0x0000000C:word32] = r5_1237
	word32 r2_1260 = Mem1259[r5_1237 + 0x0000C839:word32]
	word32 sp_1264
	byte ZN_1265
	bool C_1266
	bool V_1267
	bool Z_1268
	bool N_1269
	word32 ap_1270
	word32 r2_1271
	word32 r5_1272
	byte CZN_1273
	byte CVZN_1274
	word32 r6_1275
	word32 r0_1276
	word32 r3_1277
	word32 fp_1278
	word32 r4_1279
	word32 r9_1280
	word32 r10_1281
	word32 r8_1282
	word32 r7_1283
	word32 r1_1284
	byte CZ_1285
	byte VZN_1286
	word32 r11_1287
	call r2_1260 + 2 (retsize: 4; depth: 4)
		uses: ap_1235,C_1262,CVZN_1239,CZ_1250,CZN_1238,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1243,N_1234,r0_1241,r1_1249,r10_1246,r11_1252,r2_1260,r3_1242,r4_1244,r5_1237,r6_1240,r7_1248,r8_1247,r9_1245,sp_1258,V_1263,VZN_1251,Z_1233,ZN_1261
		defs: ap_1270,C_1266,CVZN_1274,CZ_1285,CZN_1273,fp_1278,N_1269,r0_1276,r1_1284,r10_1281,r11_1287,r2_1271,r3_1277,r4_1279,r5_1272,r6_1275,r7_1283,r8_1282,r9_1280,sp_1264,V_1267,VZN_1286,Z_1268,ZN_1265
	Mem1289[sp_1264 - 0x00000004:word32] = 0x00000000
	Mem1292[sp_1264 - 0x00000008:uint32] = (uint32) Mem1289[r5_1272 + 0x0000C672:word16]
	Mem1295[sp_1264 - 0x0000000C:word32] = r6_1275 + 2767
	Mem1298[sp_1264 - 0x00000010:word32] = r5_1272 + 1515
	word32 sp_1302
	byte ZN_1303
	bool C_1304
	bool V_1305
	bool Z_1306
	bool N_1307
	word32 ap_1308
	word32 r2_1309
	word32 r5_1310
	byte CZN_1311
	byte CVZN_1312
	word32 r6_1313
	word32 r0_1314
	word32 r3_1315
	word32 fp_1316
	word32 r4_1317
	word32 r9_1318
	word32 r10_1319
	word32 r8_1320
	word32 r7_1321
	word32 r1_1322
	byte CZ_1323
	byte VZN_1324
	word32 r11_1325
	call r4_1279 + 2 (retsize: 4; depth: 4)
		uses: ap_1270,C_1300,CVZN_1274,CZ_1285,CZN_1273,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1278,N_1269,r0_1276,r1_1284,r10_1281,r11_1287,r2_1271,r3_1277,r4_1279,r5_1272,r6_1275,r7_1283,r8_1282,r9_1280,sp_1296,V_1301,VZN_1286,Z_1268,ZN_1299
		defs: ap_1308,C_1304,CVZN_1312,CZ_1323,CZN_1311,fp_1316,N_1307,r0_1314,r1_1322,r10_1319,r11_1325,r2_1309,r3_1315,r4_1317,r5_1310,r6_1313,r7_1321,r8_1320,r9_1318,sp_1302,V_1305,VZN_1324,Z_1306,ZN_1303
	Mem1327[sp_1302 - 0x00000004:word32] = r0_1314
	Mem1330[sp_1302 - 0x00000008:word32] = r5_1310 + 1515
	Mem1332[sp_1302 - 0x0000000C:word32] = r5_1310
	word32 r2_1333 = Mem1332[r5_1310 + 0x0000C839:word32]
	word32 sp_1337
	byte ZN_1338
	bool C_1339
	bool V_1340
	bool Z_1341
	bool N_1342
	word32 ap_1343
	word32 r2_1344
	word32 r5_1345
	byte CZN_1346
	byte CVZN_1347
	word32 r6_1348
	word32 r0_1349
	word32 r3_1350
	word32 fp_1351
	word32 r4_1352
	word32 r9_1353
	word32 r10_1354
	word32 r8_1355
	word32 r7_1356
	word32 r1_1357
	byte CZ_1358
	byte VZN_1359
	word32 r11_1360
	call r2_1333 + 2 (retsize: 4; depth: 4)
		uses: ap_1308,C_1335,CVZN_1312,CZ_1323,CZN_1311,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1316,N_1307,r0_1314,r1_1322,r10_1319,r11_1325,r2_1333,r3_1315,r4_1317,r5_1310,r6_1313,r7_1321,r8_1320,r9_1318,sp_1331,V_1336,VZN_1324,Z_1306,ZN_1334
		defs: ap_1343,C_1339,CVZN_1347,CZ_1358,CZN_1346,fp_1351,N_1342,r0_1349,r1_1357,r10_1354,r11_1360,r2_1344,r3_1350,r4_1352,r5_1345,r6_1348,r7_1356,r8_1355,r9_1353,sp_1337,V_1340,VZN_1359,Z_1341,ZN_1338
	Mem1362[sp_1337 - 0x00000004:word32] = 0x00000000
	Mem1365[sp_1337 - 0x00000008:uint32] = (uint32) Mem1362[r5_1345 + 0x0000C674:word16]
	Mem1368[sp_1337 - 0x0000000C:word32] = r6_1348 + 2829
	Mem1371[sp_1337 - 0x00000010:word32] = r5_1345 + 1515
	word32 sp_1375
	byte ZN_1376
	bool C_1377
	bool V_1378
	bool Z_1379
	bool N_1380
	word32 ap_1381
	word32 r2_1382
	word32 r5_1383
	byte CZN_1384
	byte CVZN_1385
	word32 r6_1386
	word32 r0_1387
	word32 r3_1388
	word32 fp_1389
	word32 r4_1390
	word32 r9_1391
	word32 r10_1392
	word32 r8_1393
	word32 r7_1394
	word32 r1_1395
	byte CZ_1396
	byte VZN_1397
	word32 r11_1398
	call r4_1352 + 2 (retsize: 4; depth: 4)
		uses: ap_1343,C_1373,CVZN_1347,CZ_1358,CZN_1346,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1351,N_1342,r0_1349,r1_1357,r10_1354,r11_1360,r2_1344,r3_1350,r4_1352,r5_1345,r6_1348,r7_1356,r8_1355,r9_1353,sp_1369,V_1374,VZN_1359,Z_1341,ZN_1372
		defs: ap_1381,C_1377,CVZN_1385,CZ_1396,CZN_1384,fp_1389,N_1380,r0_1387,r1_1395,r10_1392,r11_1398,r2_1382,r3_1388,r4_1390,r5_1383,r6_1386,r7_1394,r8_1393,r9_1391,sp_1375,V_1378,VZN_1397,Z_1379,ZN_1376
	Mem1400[sp_1375 - 0x00000004:word32] = r0_1387
	Mem1403[sp_1375 - 0x00000008:word32] = r5_1383 + 1515
	Mem1405[sp_1375 - 0x0000000C:word32] = r5_1383
	word32 r2_1406 = Mem1405[r5_1383 + 0x0000C839:word32]
	word32 sp_1410
	byte ZN_1411
	bool C_1412
	bool V_1413
	bool Z_1414
	bool N_1415
	word32 ap_1416
	word32 r2_1417
	word32 r5_1418
	byte CZN_1419
	byte CVZN_1420
	word32 r6_1421
	word32 r0_1422
	word32 r3_1423
	word32 fp_1424
	word32 r4_1425
	word32 r9_1426
	word32 r10_1427
	word32 r8_1428
	word32 r7_1429
	word32 r1_1430
	byte CZ_1431
	byte VZN_1432
	word32 r11_1433
	call r2_1406 + 2 (retsize: 4; depth: 4)
		uses: ap_1381,C_1408,CVZN_1385,CZ_1396,CZN_1384,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1389,N_1380,r0_1387,r1_1395,r10_1392,r11_1398,r2_1406,r3_1388,r4_1390,r5_1383,r6_1386,r7_1394,r8_1393,r9_1391,sp_1404,V_1409,VZN_1397,Z_1379,ZN_1407
		defs: ap_1416,C_1412,CVZN_1420,CZ_1431,CZN_1419,fp_1424,N_1415,r0_1422,r1_1430,r10_1427,r11_1433,r2_1417,r3_1423,r4_1425,r5_1418,r6_1421,r7_1429,r8_1428,r9_1426,sp_1410,V_1413,VZN_1432,Z_1414,ZN_1411
	Mem1435[sp_1410 - 0x00000004:word32] = 0x00000000
	Mem1439[sp_1410 - 0x00000008:word32] = (uint32) Mem1435[r5_1418 + 0x0000C676:word16] + 0x00000001
	Mem1442[sp_1410 - 0x0000000C:word32] = r6_1421 + 2896
	Mem1445[sp_1410 - 0x00000010:word32] = r5_1418 + 1515
	word32 sp_1449
	byte ZN_1450
	bool C_1451
	bool V_1452
	bool Z_1453
	bool N_1454
	word32 ap_1455
	word32 r2_1456
	word32 r5_1457
	byte CZN_1458
	byte CVZN_1459
	word32 r6_1460
	word32 r0_1461
	word32 r3_1462
	word32 fp_1463
	word32 r4_1464
	word32 r9_1465
	word32 r10_1466
	word32 r8_1467
	word32 r7_1468
	word32 r1_1469
	byte CZ_1470
	byte VZN_1471
	word32 r11_1472
	call r4_1425 + 2 (retsize: 4; depth: 4)
		uses: ap_1416,C_1447,CVZN_1420,CZ_1431,CZN_1419,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1424,N_1415,r0_1422,r1_1430,r10_1427,r11_1433,r2_1437,r3_1423,r4_1425,r5_1418,r6_1421,r7_1429,r8_1428,r9_1426,sp_1443,V_1448,VZN_1432,Z_1414,ZN_1446
		defs: ap_1455,C_1451,CVZN_1459,CZ_1470,CZN_1458,fp_1463,N_1454,r0_1461,r1_1469,r10_1466,r11_1472,r2_1456,r3_1462,r4_1464,r5_1457,r6_1460,r7_1468,r8_1467,r9_1465,sp_1449,V_1452,VZN_1471,Z_1453,ZN_1450
	Mem1474[sp_1449 - 0x00000004:word32] = r0_1461
	Mem1477[sp_1449 - 0x00000008:word32] = r5_1457 + 1515
	Mem1479[sp_1449 - 0x0000000C:word32] = r5_1457
	word32 r2_1480 = Mem1479[r5_1457 + 0x0000C839:word32]
	word32 sp_1484
	byte ZN_1485
	bool C_1486
	bool V_1487
	bool Z_1488
	bool N_1489
	word32 ap_1490
	word32 r2_1491
	word32 r5_1492
	byte CZN_1493
	byte CVZN_1494
	word32 r6_1495
	word32 r0_1496
	word32 r3_1497
	word32 fp_1498
	word32 r4_1499
	word32 r9_1500
	word32 r10_1501
	word32 r8_1502
	word32 r7_1503
	word32 r1_1504
	byte CZ_1505
	byte VZN_1506
	word32 r11_1507
	call r2_1480 + 2 (retsize: 4; depth: 4)
		uses: ap_1455,C_1482,CVZN_1459,CZ_1470,CZN_1458,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1463,N_1454,r0_1461,r1_1469,r10_1466,r11_1472,r2_1480,r3_1462,r4_1464,r5_1457,r6_1460,r7_1468,r8_1467,r9_1465,sp_1478,V_1483,VZN_1471,Z_1453,ZN_1481
		defs: ap_1490,C_1486,CVZN_1494,CZ_1505,CZN_1493,fp_1498,N_1489,r0_1496,r1_1504,r10_1501,r11_1507,r2_1491,r3_1497,r4_1499,r5_1492,r6_1495,r7_1503,r8_1502,r9_1500,sp_1484,V_1487,VZN_1506,Z_1488,ZN_1485
	Mem1509[sp_1484 - 0x00000004:word32] = 0x00000000
	word32 r3_1510 = (uint32) Mem1509[r5_1492 + 0x0000C678:word16]
	branch (r3_1510 & 0x00000001) == 0x00000000 l00013804
// DataOut: ap fp r0 r11 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013804:
	word32 r3_6032
	branch (r3_1510 & 0x00000002) == 0x00000000 l00013810
// DataOut: ap fp r0 r11 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013810:
	r3_6032 = r8_1502 + 57
// DataOut: ap fp r0 r11 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013808:
	r3_6032 = r8_1502 + 64
// DataOut: ap fp r0 r11 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013814:
	r4_1514 = r3_6032
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000137FE:
	r4_1514 = r8_1502 + 71
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013817:
	word32 fp_1609
	word32 sp_1608
	word32 r5_1604
	word32 r6_1601
	word32 r8_1597
	Mem1516[sp_1484 - 0x00000008:word32] = r4_1514
	Mem1519[sp_1484 - 0x0000000C:word32] = r6_1495 + 2957
	Mem1522[sp_1484 - 0x00000010:word32] = r5_1492 + 1515
	word32 sp_1526
	byte ZN_1527
	bool C_1528
	bool V_1529
	bool Z_1530
	bool N_1531
	word32 ap_1532
	word32 r2_1533
	word32 r5_1534
	byte CZN_1535
	byte CVZN_1536
	word32 r6_1537
	word32 r0_1538
	word32 r3_1539
	word32 fp_1540
	word32 r4_1541
	word32 r9_1542
	word32 r10_1543
	word32 r8_1544
	word32 r7_1545
	word32 r1_1546
	byte CZ_1547
	byte VZN_1548
	word32 r11_1549
	call Mem1522[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1490,C_1524,CVZN_1494,CZ_1505,CZN_1493,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1498,N_1489,r0_1496,r1_1504,r10_1501,r11_1507,r2_1491,r3_1510,r4_1514,r5_1492,r6_1495,r7_1503,r8_1502,r9_1500,sp_1520,V_1525,VZN_1506,Z_1488,ZN_1523
		defs: ap_1532,C_1528,CVZN_1536,CZ_1547,CZN_1535,fp_1540,N_1531,r0_1538,r1_1546,r10_1543,r11_1549,r2_1533,r3_1539,r4_1541,r5_1534,r6_1537,r7_1545,r8_1544,r9_1542,sp_1526,V_1529,VZN_1548,Z_1530,ZN_1527
	Mem1551[sp_1526 - 0x00000004:word32] = r0_1538
	Mem1554[sp_1526 - 0x00000008:word32] = r5_1534 + 1515
	Mem1556[sp_1526 - 0x0000000C:word32] = r5_1534
	word32 r2_1557 = Mem1556[r5_1534 + 0x0000C839:word32]
	word32 sp_1561
	byte ZN_1562
	bool C_1563
	bool V_1564
	bool Z_1565
	bool N_1566
	word32 ap_1567
	word32 r2_1568
	word32 r5_1569
	byte CZN_1570
	byte CVZN_1571
	word32 r6_1572
	word32 r0_1573
	word32 r3_1574
	word32 fp_1575
	word32 r4_1576
	word32 r9_1577
	word32 r10_1578
	word32 r8_1579
	word32 r7_1580
	word32 r1_1581
	byte CZ_1582
	byte VZN_1583
	word32 r11_1584
	call r2_1557 + 2 (retsize: 4; depth: 4)
		uses: ap_1532,C_1559,CVZN_1536,CZ_1547,CZN_1535,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1540,N_1531,r0_1538,r1_1546,r10_1543,r11_1549,r2_1557,r3_1539,r4_1541,r5_1534,r6_1537,r7_1545,r8_1544,r9_1542,sp_1555,V_1560,VZN_1548,Z_1530,ZN_1558
		defs: ap_1567,C_1563,CVZN_1571,CZ_1582,CZN_1570,fp_1575,N_1566,r0_1573,r1_1581,r10_1578,r11_1584,r2_1568,r3_1574,r4_1576,r5_1569,r6_1572,r7_1580,r8_1579,r9_1577,sp_1561,V_1564,VZN_1583,Z_1565,ZN_1562
	Mem1587[sp_1561 + 14:word16] = (word16) (uint32) Mem1556[r5_1569 + 0x0000C67C:word16] & ~0x0000
	word32 r9_1588 = (uint32) Mem1587[sp_1561 + 2:word16]
	branch r9_1588 == 0x00000002 l00013854
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013854:
	word32 r4_5774 = fp_1575 + 0xFFFFFFD7
	word32 r0_5775 = 0x00000000
	word32 r2_5776 = fp_1575 + -20
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013868:
	Mem5783[r2_5776:byte] = 0x00
	r2_5776 = r2_5776 + 0x00000001
	r0_5775 = r0_5775 + 0x00000001
	branch r0_5775 <= 0x0000000B l00013868
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013870:
	word32 r7_5787 = (uint32) Mem5783[sp_1561 + 14:word16]
	branch (r7_5787 & 0x00000100) == 0x00000000 l0001387D
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013878:
	Mem6024[fp_1575 + -20:byte] = 0x52
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001387D:
	branch (r7_5787 & 0x00000080) == 0x00000000 l0001388B
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013881:
	Mem6017[fp_1575 + -19:byte] = 0x57
	Mem6019[fp_1575 + -17:byte] = 0x44
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001388B:
	branch (r7_5787 & 0x00000040) == 0x00000000 l00013894
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001388F:
	Mem6012[fp_1575 + -18:byte] = 0x45
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013894:
	branch (r7_5787 & 0x00000020) == 0x00000000 l0001389D
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013898:
	Mem6007[fp_1575 + -16:byte] = 0x52
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001389D:
	branch (r7_5787 & 0x00000010) == 0x00000000 l000138AB
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138A1:
	Mem6000[fp_1575 + -15:byte] = 0x57
	Mem6002[fp_1575 + -13:byte] = 0x44
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138AB:
	branch (r7_5787 & 0x00000008) == 0x00000000 l000138B4
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138AF:
	Mem5995[fp_1575 + -14:byte] = 0x45
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138B4:
	branch (r7_5787 & 0x00000004) == 0x00000000 l000138BD
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138B8:
	Mem5990[fp_1575 + -12:byte] = 0x52
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138BD:
	branch (r7_5787 & 0x00000002) == 0x00000000 l000138CB
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138C1:
	Mem5983[fp_1575 + -11:byte] = 0x57
	Mem5985[fp_1575 + -9:byte] = 0x44
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138CB:
	branch (r7_5787 & 0x00000001) == 0x00000000 l000138D3
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138CE:
	Mem5978[fp_1575 + -10:byte] = 0x45
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138D3:
	Mem5818[fp_1575 + -42:byte] = 0x28
	word32 r3_5819 = fp_1575 + 0xFFFFFFD7
	word32 r7_5820 = 0x00000000
	word32 r2_5821 = 0x00000000
	branch false l00013920
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138DF:
	r7_5908 = r7_5820
	r4_5909 = r4_5774
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:0x00000000 r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:0x00000000 r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138E0:
	word32 r7_5908
	word32 r4_5909
	word32 r1_5915 = 0x00000000
// DataOut: ap fp r0 r1 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138E4:
	branch Mem5818[fp_1575 + -20 + r2_5821:byte] == 0x00 l000138EF
// DataOut: ap fp r0 r1 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138EA:
	Mem5972[r3_5819:byte] = Mem5818[fp_1575 + -20 + r2_5821:byte]
	r3_5819 = r3_5819 + 0x00000001
// DataOut: ap fp r0 r1 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138EF:
	r1_5915 = r1_5915 + 0x00000001
	r2_5821 = r2_5821 + 0x00000001
	branch r1_5915 < 0x00000004 l000138E4
// DataOut: ap fp r0 r1 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138F8:
	Mem5937[r3_5819:byte] = 0x2C
	r3_5819 = r3_5819 + 0x00000001
	branch r7_5908 != 0x00000000 l00013919
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000138FF:
	Mem5956[r3_5819:byte] = Mem5937[r4_5909:byte]
	r3_5819 = r3_5819 + 0x00000001
	r4_5909 = r4_5909 + 0x00000001
	branch Mem5956[r3_5819:byte] == 0x2C l00013919
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001390C:
	Mem5967[r3_6657:byte] = Mem5956[r4_5909:byte]
	r3_5819 = r3_6657 + 0x00000001
	r4_5909 = r4_5909 + 0x00000001
	word32 r3_6657 = r3_5819
	branch Mem5967[r3_6657:byte] != 0x2C l0001390C
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013919:
	r7_5908 = r7_5908 + 0x00000001
	branch r7_5908 < 0x00000003 l000138E0
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013920:
	Mem5829[r3_5819:byte] = 0x00
	word32 r3_5827 = r3_5819 - 0x00000001
	Mem5831[r3_5827:byte] = 0x29
	Mem5833[sp_1561 - 0x00000004:word32] = 0x00000000
	Mem5836[sp_1561 - 0x00000008:word32] = fp_1575 + -42
	Mem5839[sp_1561 - 0x0000000C:uint32] = (uint32) Mem5836[sp_1561 + 0x0000000A:word16]
	Mem5842[sp_1561 - 0x00000010:word32] = r6_1572 + 3013
	Mem5845[sp_1561 - 0x00000014:word32] = r5_1569 + 1515
	word32 sp_5849
	byte ZN_5850
	bool C_5851
	bool V_5852
	bool Z_5853
	bool N_5854
	word32 ap_5855
	word32 r2_5856
	word32 r5_5857
	byte CZN_5858
	byte CVZN_5859
	word32 r6_5860
	word32 r0_5861
	word32 r3_5862
	word32 fp_5863
	word32 r4_5864
	word32 r9_5865
	word32 r10_5866
	word32 r8_5867
	word32 r7_5868
	word32 r1_5869
	byte CZ_5870
	byte VZN_5871
	word32 r11_5872
	call Mem5845[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1567,C_5847,CVZN_5786,CZ_1582,CZN_5822,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1575,N_5823,r0_5785,r1_1581,r10_1578,r11_1584,r2_5826,r3_5827,r4_5774,r5_1569,r6_1572,r7_5820,r8_1579,r9_1588,sp_5843,V_5848,VZN_1583,Z_1590,ZN_5846
		defs: ap_5855,C_5851,CVZN_5859,CZ_5870,CZN_5858,fp_5863,N_5854,r0_5861,r1_5869,r10_5866,r11_5872,r2_5856,r3_5862,r4_5864,r5_5857,r6_5860,r7_5868,r8_5867,r9_5865,sp_5849,V_5852,VZN_5871,Z_5853,ZN_5850
	Mem5874[sp_5849 - 0x00000004:word32] = r0_5861
	Mem5877[sp_5849 - 0x00000008:word32] = r5_5857 + 1515
	Mem5879[sp_5849 - 0x0000000C:word32] = r5_5857
	word32 r2_5880 = Mem5879[r5_5857 + 0x0000C839:word32]
	byte ZN_5885
	bool C_5886
	bool V_5887
	bool Z_5888
	bool N_5889
	word32 ap_5890
	word32 r2_5891
	byte CZN_5893
	byte CVZN_5894
	word32 r0_5896
	word32 r3_5897
	word32 r4_5899
	word32 r9_5900
	word32 r10_5901
	word32 r7_5903
	word32 r1_5904
	byte CZ_5905
	byte VZN_5906
	word32 r11_5907
	call r2_5880 + 2 (retsize: 4; depth: 4)
		uses: ap_5855,C_5882,CVZN_5859,CZ_5870,CZN_5858,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_5863,N_5854,r0_5861,r1_5869,r10_5866,r11_5872,r2_5880,r3_5862,r4_5864,r5_5857,r6_5860,r7_5868,r8_5867,r9_5865,sp_5878,V_5883,VZN_5871,Z_5853,ZN_5881
		defs: ap_5890,C_5886,CVZN_5894,CZ_5905,CZN_5893,fp_5898,N_5889,r0_5896,r1_5904,r10_5901,r11_5907,r2_5891,r3_5897,r4_5899,r5_5892,r6_5895,r7_5903,r8_5902,r9_5900,sp_5884,V_5887,VZN_5906,Z_5888,ZN_5885
// DataOut: ap fp r0 r11 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013851:
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013958:
	branch r9_1588 == 0x00000001 l00013960
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013960:
	word32 r2_5518 = (uint32) Mem1587[sp_1561 + 14:word16] & ~0xFFFFF3FF
	branch r2_5518 < 0x00000400 l00013990
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013974:
	branch r2_5518 == 0x00000400 l00013988
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013988:
	Mem5768[fp_1575 + -42:byte] = 0x2D
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013976:
	branch r2_5518 != 0x00000800 l00013990
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013990:
	Mem5755[fp_1575 + -42:byte] = 0x3F
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001397F:
	Mem5763[fp_1575 + -42:byte] = 0x64
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013994:
	word32 r3_5534
	word32 r7_5530 = (uint32) Mem1587[sp_1561 + 14:word16]
	branch (r7_5530 & 0x00000080) == 0x00000000 l000139A4
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139A4:
	r3_5534 = SEQ(SLICE(r3_1574, word24, 8), 0x2D)
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001399C:
	r3_5534 = SEQ(SLICE(r3_1574, word24, 8), 0x68)
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139A7:
	word32 r4_5540
	Mem5536[fp_1575 + -41:byte] = (byte) r3_5534
	branch (r7_5530 & 0x00000040) == 0x00000000 l000139B8
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139B8:
	r4_5540 = SEQ(SLICE(r4_1576, word24, 8), 0x2D)
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139AF:
	r4_5540 = SEQ(SLICE(r4_1576, word24, 8), 0x73)
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139BB:
	word32 r3_5546
	Mem5542[fp_1575 + -40:byte] = (byte) r4_5540
	branch (r7_5530 & 0x00000020) == 0x00000000 l000139CC
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139CC:
	r3_5546 = SEQ(SLICE(r3_5534, word24, 8), 0x2D)
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139C3:
	r3_5546 = SEQ(SLICE(r3_5534, word24, 8), 0x70)
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139CF:
	word32 r4_5552
	Mem5548[fp_1575 + -39:byte] = (byte) r3_5546
	branch (r7_5530 & 0x00000010) == 0x00000000 l000139E0
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139E0:
	r4_5552 = SEQ(SLICE(r4_5540, word24, 8), 0x2D)
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139D7:
	r4_5552 = SEQ(SLICE(r4_5540, word24, 8), 0x61)
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139E3:
	word32 r3_5558
	Mem5554[fp_1575 + -38:byte] = (byte) r4_5552
	branch (r7_5530 & 0x00000008) == 0x00000000 l000139F4
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139F4:
	r3_5558 = SEQ(SLICE(r3_5546, word24, 8), 0x2D)
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139EB:
	r3_5558 = SEQ(SLICE(r3_5546, word24, 8), 0x72)
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139F7:
	word32 r4_5564
	Mem5560[fp_1575 + -37:byte] = (byte) r3_5558
	branch (r7_5530 & 0x00000004) == 0x00000000 l00013A08
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A08:
	r4_5564 = SEQ(SLICE(r4_5552, word24, 8), 0x2D)
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000139FF:
	r4_5564 = SEQ(SLICE(r4_5552, word24, 8), 0x77)
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A0B:
	word32 r3_5570
	Mem5566[fp_1575 + -36:byte] = (byte) r4_5564
	branch (r7_5530 & 0x00000002) == 0x00000000 l00013A1C
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A1C:
	r3_5570 = SEQ(SLICE(r3_5558, word24, 8), 0x2D)
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A13:
	r3_5570 = SEQ(SLICE(r3_5558, word24, 8), 0x65)
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A1F:
	word32 r4_5576
	Mem5572[fp_1575 + -35:byte] = (byte) r3_5570
	branch (r7_5530 & 0x00000001) == 0x00000000 l00013A2C
// DataOut: ap fp r0 r11 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A2C:
	r4_5576 = SEQ(SLICE(r4_5564, word24, 8), 0x2D)
// DataOut: ap fp r0 r11 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A26:
	r4_5576 = SEQ(SLICE(r4_5564, word24, 8), 0x64)
// DataOut: ap fp r0 r11 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A2F:
	Mem5578[fp_1575 + -34:byte] = (byte) r4_5576
	Mem5580[fp_1575 + -33:byte] = 0x00
	Mem5582[sp_1561 - 0x00000004:word32] = 0x00000000
	Mem5585[sp_1561 - 0x00000008:word32] = fp_1575 + -42
	Mem5587[sp_1561 - 0x0000000C:word32] = r7_5530
	Mem5590[sp_1561 - 0x00000010:word32] = r6_1572 + 3067
	Mem5593[sp_1561 - 0x00000014:word32] = r5_1569 + 1515
	word32 sp_5597
	byte ZN_5598
	bool C_5599
	bool V_5600
	bool Z_5601
	bool N_5602
	word32 ap_5603
	word32 r2_5604
	word32 r5_5605
	byte CZN_5606
	byte CVZN_5607
	word32 r6_5608
	word32 r0_5609
	word32 r3_5610
	word32 fp_5611
	word32 r4_5612
	word32 r9_5613
	word32 r10_5614
	word32 r8_5615
	word32 r7_5616
	word32 r1_5617
	byte CZ_5618
	byte VZN_5619
	word32 r11_5620
	call Mem5593[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1567,C_5595,CVZN_5527,CZ_5524,CZN_5528,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1575,N_5523,r0_1573,r1_1581,r10_1578,r11_1584,r2_5518,r3_5570,r4_5576,r5_1569,r6_1572,r7_5530,r8_1579,r9_1588,sp_5591,V_5596,VZN_5526,Z_5529,ZN_5594
		defs: ap_5603,C_5599,CVZN_5607,CZ_5618,CZN_5606,fp_5611,N_5602,r0_5609,r1_5617,r10_5614,r11_5620,r2_5604,r3_5610,r4_5612,r5_5605,r6_5608,r7_5616,r8_5615,r9_5613,sp_5597,V_5600,VZN_5619,Z_5601,ZN_5598
	Mem5622[sp_5597 - 0x00000004:word32] = r0_5609
	Mem5625[sp_5597 - 0x00000008:word32] = r5_5605 + 1515
	Mem5627[sp_5597 - 0x0000000C:word32] = r5_5605
	word32 r2_5628 = Mem5627[r5_5605 + 0x0000C839:word32]
	byte ZN_5633
	bool C_5634
	bool V_5635
	bool Z_5636
	bool N_5637
	word32 ap_5638
	word32 r2_5639
	byte CZN_5641
	byte CVZN_5642
	word32 r0_5644
	word32 r3_5645
	word32 r4_5647
	word32 r9_5648
	word32 r10_5649
	word32 r7_5651
	word32 r1_5652
	byte CZ_5653
	byte VZN_5654
	word32 r11_5655
	call r2_5628 + 2 (retsize: 4; depth: 4)
		uses: ap_5603,C_5630,CVZN_5607,CZ_5618,CZN_5606,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_5611,N_5602,r0_5609,r1_5617,r10_5614,r11_5620,r2_5628,r3_5610,r4_5612,r5_5605,r6_5608,r7_5616,r8_5615,r9_5613,sp_5626,V_5631,VZN_5619,Z_5601,ZN_5629
		defs: ap_5638,C_5634,CVZN_5642,CZ_5653,CZN_5641,fp_5646,N_5637,r0_5644,r1_5652,r10_5649,r11_5655,r2_5639,r3_5645,r4_5647,r5_5640,r6_5643,r7_5651,r8_5650,r9_5648,sp_5632,V_5635,VZN_5654,Z_5636,ZN_5633
// DataOut: ap fp r0 r11 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001395D:
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A64:
	branch r9_1588 != 0x00000000 l00013A6B
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A6B:
	branch r9_1588 != 0x00000006 l00013A73
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A73:
	branch r9_1588 != 0x0000000B l00013A7B
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A7B:
	branch r9_1588 != 0x0000000E l00013A83
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A83:
	branch r9_1588 != 0x0000000D l00013A8B
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A8B:
	branch r9_1588 != 0x00000004 l00013A93
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A93:
	branch r9_1588 != 0x0000000F l00013A9B
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A9B:
	word32 r2_5099 = (uint32) Mem1587[sp_1561 + 14:word16] & ~0xFFFF0FFF
	branch r2_5099 < 0x00001000 l00013B2C
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AAF:
	branch r2_5099 == 0x00001000 l00013B1C
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B1C:
	Mem5513[fp_1575 + -42:byte] = 0x70
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AB1:
	branch r2_5099 < 0x00002000 l00013B2C
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013ABA:
	branch r2_5099 == 0x00002000 l00013B14
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B14:
	Mem5508[fp_1575 + -42:byte] = 0x63
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013ABC:
	branch r2_5099 < 0x00004000 l00013B2C
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AC5:
	branch r2_5099 == 0x00004000 l00013AF4
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AF4:
	Mem5503[fp_1575 + -42:byte] = 0x64
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AC7:
	branch r2_5099 < 0x00006000 l00013B2C
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AD0:
	branch r2_5099 == 0x00006000 l00013B0C
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B0C:
	Mem5498[fp_1575 + -42:byte] = 0x62
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AD2:
	branch r2_5099 < 0x00008000 l00013B2C
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013ADB:
	branch r2_5099 == 0x00008000 l00013AFC
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AFC:
	Mem5493[fp_1575 + -42:byte] = 0x2D
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013ADD:
	branch r2_5099 < 0x0000A000 l00013B2C
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AE6:
	branch r2_5099 == 0x0000A000 l00013B04
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B04:
	Mem5488[fp_1575 + -42:byte] = 0x6C
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AE8:
	branch r2_5099 == 0x0000C000 l00013B24
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B24:
	Mem5483[fp_1575 + -42:byte] = 0x73
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013AF1:
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B2C:
	Mem5430[fp_1575 + -42:byte] = 0x3F
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B30:
	word32 r3_5119
	word32 r7_5115 = (uint32) Mem1587[sp_1561 + 14:word16]
	branch (r7_5115 & 0x00000100) == 0x00000000 l00013B40
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B40:
	r3_5119 = SEQ(SLICE(r3_1574, word24, 8), 0x2D)
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B38:
	r3_5119 = SEQ(SLICE(r3_1574, word24, 8), 0x72)
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B43:
	word32 r4_5125
	Mem5121[fp_1575 + -41:byte] = (byte) r3_5119
	branch (r7_5115 & 0x00000020) == 0x00000000 l00013B54
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B54:
	r4_5125 = SEQ(SLICE(r4_1576, word24, 8), 0x2D)
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B4B:
	r4_5125 = SEQ(SLICE(r4_1576, word24, 8), 0x72)
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B57:
	word32 r3_5131
	Mem5127[fp_1575 + -38:byte] = (byte) r4_5125
	branch (r7_5115 & 0x00000004) == 0x00000000 l00013B68
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B68:
	r3_5131 = SEQ(SLICE(r3_5119, word24, 8), 0x2D)
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B5F:
	r3_5131 = SEQ(SLICE(r3_5119, word24, 8), 0x72)
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B6B:
	word32 r4_5137
	Mem5133[fp_1575 + -35:byte] = (byte) r3_5131
	branch (r7_5115 & 0x00000080) == 0x00000000 l00013B7C
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B7C:
	r4_5137 = SEQ(SLICE(r4_5125, word24, 8), 0x2D)
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B73:
	r4_5137 = SEQ(SLICE(r4_5125, word24, 8), 0x77)
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B7F:
	word32 r3_5143
	Mem5139[fp_1575 + -40:byte] = (byte) r4_5137
	branch (r7_5115 & 0x00000010) == 0x00000000 l00013B90
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B90:
	r3_5143 = SEQ(SLICE(r3_5131, word24, 8), 0x2D)
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B87:
	r3_5143 = SEQ(SLICE(r3_5131, word24, 8), 0x77)
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B93:
	word32 r4_5149
	Mem5145[fp_1575 + -37:byte] = (byte) r3_5143
	branch (r7_5115 & 0x00000002) == 0x00000000 l00013BA4
// DataOut: ap fp r0 r11 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BA4:
	r4_5149 = SEQ(SLICE(r4_5137, word24, 8), 0x2D)
// DataOut: ap fp r0 r11 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013B9B:
	r4_5149 = SEQ(SLICE(r4_5137, word24, 8), 0x77)
// DataOut: ap fp r0 r11 r2 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BA7:
	word32 r2_5155
	Mem5151[fp_1575 + -34:byte] = (byte) r4_5149
	branch (r7_5115 & 0x00000040) == 0x00000000 l00013BC8
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BC8:
	branch (r7_5115 & 0x00000800) == 0x00000000 l00013BD4
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BD4:
	r2_5155 = SEQ(SLICE(r2_5099, word24, 8), 0x2D)
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BCC:
	r2_5155 = SEQ(SLICE(r2_5099, word24, 8), 0x53)
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BD7:
	Mem5335[fp_1575 + -39:byte] = (byte) r2_5155
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BAF:
	branch (r7_5115 & 0x00000800) == 0x00000000 l00013BBC
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BBC:
	r2_5155 = SEQ(SLICE(r2_5099, word24, 8), 0x78)
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BB3:
	r2_5155 = SEQ(SLICE(r2_5099, word24, 8), 0x73)
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BC0:
	Mem5317[fp_1575 + -39:byte] = (byte) r2_5155
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BDB:
	word32 r2_5160
	word32 r3_5156 = (uint32) Mem5151[sp_1561 + 14:word16]
	branch (r3_5156 & 0x00000008) == 0x00000000 l00013BFC
// DataOut: ap fp r0 r11 r2 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BFC:
	branch (r3_5156 & 0x00000400) == 0x00000000 l00013C08
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C08:
	r2_5160 = SEQ(SLICE(r2_5155, word24, 8), 0x2D)
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C00:
	r2_5160 = SEQ(SLICE(r2_5155, word24, 8), 0x6C)
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C0B:
	Mem5299[fp_1575 + -36:byte] = (byte) r2_5160
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BE3:
	branch (r3_5156 & 0x00000400) == 0x00000000 l00013BF0
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BF0:
	r2_5160 = SEQ(SLICE(r2_5155, word24, 8), 0x78)
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BE7:
	r2_5160 = SEQ(SLICE(r2_5155, word24, 8), 0x73)
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013BF4:
	Mem5281[fp_1575 + -36:byte] = (byte) r2_5160
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C0F:
	word32 r3_5161 = (uint32) Mem5151[sp_1561 + 14:word16]
	branch (r3_5161 & 0x00000001) == 0x00000000 l00013C2C
// DataOut: ap fp r0 r11 r2 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C2C:
	word32 r2_5261
	branch (r3_5161 & 0x00000200) == 0x00000000 l00013C38
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C38:
	r2_5261 = SEQ(SLICE(r2_5160, word24, 8), 0x2D)
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C30:
	r2_5261 = SEQ(SLICE(r2_5160, word24, 8), 0x54)
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C3B:
	Mem5263[fp_1575 + -33:byte] = (byte) r2_5261
// DataOut: ap fp r0 r11 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C16:
	word32 r2_5243
	branch (r3_5161 & 0x00000200) == 0x00000000 l00013C20
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C20:
	r2_5243 = SEQ(SLICE(r2_5160, word24, 8), 0x78)
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C1A:
	r2_5243 = SEQ(SLICE(r2_5160, word24, 8), 0x74)
// DataOut: ap fp r0 r11 r2 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C24:
	Mem5245[fp_1575 + -33:byte] = (byte) r2_5243
// DataOut: ap fp r0 r11 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C3F:
	Mem5166[fp_1575 + -32:byte] = 0x00
	Mem5168[sp_1561 - 0x00000004:word32] = 0x00000000
	Mem5171[sp_1561 - 0x00000008:word32] = fp_1575 + -42
	Mem5174[sp_1561 - 0x0000000C:uint32] = (uint32) Mem5171[sp_1561 + 0x0000000A:word16]
	Mem5177[sp_1561 - 0x00000010:word32] = r6_1572 + 3121
	Mem5180[sp_1561 - 0x00000014:word32] = r5_1569 + 1515
	word32 sp_5184
	byte ZN_5185
	bool C_5186
	bool V_5187
	bool Z_5188
	bool N_5189
	word32 ap_5190
	word32 r2_5191
	word32 r5_5192
	byte CZN_5193
	byte CVZN_5194
	word32 r6_5195
	word32 r0_5196
	word32 r3_5197
	word32 fp_5198
	word32 r4_5199
	word32 r9_5200
	word32 r10_5201
	word32 r8_5202
	word32 r7_5203
	word32 r1_5204
	byte CZ_5205
	byte VZN_5206
	word32 r11_5207
	call Mem5180[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1567,C_5182,CVZN_5111,CZ_5110,CZN_5112,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1575,N_5113,r0_1573,r1_1581,r10_1578,r11_1584,r2_5160,r3_5161,r4_5149,r5_1569,r6_1572,r7_5115,r8_1579,r9_1588,sp_5178,V_5183,VZN_5109,Z_5114,ZN_5181
		defs: ap_5190,C_5186,CVZN_5194,CZ_5205,CZN_5193,fp_5198,N_5189,r0_5196,r1_5204,r10_5201,r11_5207,r2_5191,r3_5197,r4_5199,r5_5192,r6_5195,r7_5203,r8_5202,r9_5200,sp_5184,V_5187,VZN_5206,Z_5188,ZN_5185
	Mem5209[sp_5184 - 0x00000004:word32] = r0_5196
	Mem5212[sp_5184 - 0x00000008:word32] = r5_5192 + 1515
	Mem5214[sp_5184 - 0x0000000C:word32] = r5_5192
	word32 r2_5215 = Mem5214[r5_5192 + 0x0000C839:word32]
	byte ZN_5220
	bool C_5221
	bool V_5222
	bool Z_5223
	bool N_5224
	word32 ap_5225
	word32 r2_5226
	byte CZN_5228
	byte CVZN_5229
	word32 r0_5231
	word32 r3_5232
	word32 r4_5234
	word32 r9_5235
	word32 r10_5236
	word32 r7_5238
	word32 r1_5239
	byte CZ_5240
	byte VZN_5241
	word32 r11_5242
	call r2_5215 + 2 (retsize: 4; depth: 4)
		uses: ap_5190,C_5217,CVZN_5194,CZ_5205,CZN_5193,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_5198,N_5189,r0_5196,r1_5204,r10_5201,r11_5207,r2_5215,r3_5197,r4_5199,r5_5192,r6_5195,r7_5203,r8_5202,r9_5200,sp_5213,V_5218,VZN_5206,Z_5188,ZN_5216
		defs: ap_5225,C_5221,CVZN_5229,CZ_5240,CZN_5228,fp_5233,N_5224,r0_5231,r1_5239,r10_5236,r11_5242,r2_5226,r3_5232,r4_5234,r5_5227,r6_5230,r7_5238,r8_5237,r9_5235,sp_5219,V_5222,VZN_5241,Z_5223,ZN_5220
// DataOut: ap fp r0 r11 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A98:
// DataOut: ap fp r0 r11 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A90:
// DataOut: ap fp r0 r11 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A88:
// DataOut: ap fp r0 r11 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A80:
// DataOut: ap fp r0 r11 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A78:
// DataOut: ap fp r0 r11 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A70:
// DataOut: ap fp r0 r11 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013A68:
// DataOut: ap fp r0 r11 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C70:
	Mem5008[sp_1561 - 0x00000004:word32] = 0x00000000
	word32 r2_5009 = (uint32) Mem5008[r5_1569 + 0x0000C67B:ui24]
	Mem5011[sp_1561 - 0x00000008:word32] = r2_5009
	Mem5014[sp_1561 - 0x0000000C:word32] = r6_1572 + 3175
	Mem5017[sp_1561 - 0x00000010:word32] = r5_1569 + 1515
	word32 sp_5021
	byte ZN_5022
	bool C_5023
	bool V_5024
	bool Z_5025
	bool N_5026
	word32 ap_5027
	word32 r2_5028
	word32 r5_5029
	byte CZN_5030
	byte CVZN_5031
	word32 r6_5032
	word32 r0_5033
	word32 r3_5034
	word32 fp_5035
	word32 r4_5036
	word32 r9_5037
	word32 r10_5038
	word32 r8_5039
	word32 r7_5040
	word32 r1_5041
	byte CZ_5042
	byte VZN_5043
	word32 r11_5044
	call Mem5017[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1567,C_5019,CVZN_1571,CZ_1582,CZN_5000,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1575,N_1566,r0_1573,r1_1581,r10_1578,r11_1584,r2_5009,r3_1574,r4_1576,r5_1569,r6_1572,r7_1580,r8_1579,r9_1588,sp_5015,V_5020,VZN_1583,Z_5004,ZN_5018
		defs: ap_5027,C_5023,CVZN_5031,CZ_5042,CZN_5030,fp_5035,N_5026,r0_5033,r1_5041,r10_5038,r11_5044,r2_5028,r3_5034,r4_5036,r5_5029,r6_5032,r7_5040,r8_5039,r9_5037,sp_5021,V_5024,VZN_5043,Z_5025,ZN_5022
	Mem5046[sp_5021 - 0x00000004:word32] = r0_5033
	Mem5049[sp_5021 - 0x00000008:word32] = r5_5029 + 1515
	Mem5051[sp_5021 - 0x0000000C:word32] = r5_5029
	word32 r2_5052 = Mem5051[r5_5029 + 0x0000C839:word32]
	byte ZN_5057
	bool C_5058
	bool V_5059
	bool Z_5060
	bool N_5061
	word32 ap_5062
	word32 r2_5063
	byte CZN_5065
	byte CVZN_5066
	word32 r0_5068
	word32 r3_5069
	word32 r4_5071
	word32 r9_5072
	word32 r10_5073
	word32 r7_5075
	word32 r1_5076
	byte CZ_5077
	byte VZN_5078
	word32 r11_5079
	call r2_5052 + 2 (retsize: 4; depth: 4)
		uses: ap_5027,C_5054,CVZN_5031,CZ_5042,CZN_5030,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_5035,N_5026,r0_5033,r1_5041,r10_5038,r11_5044,r2_5052,r3_5034,r4_5036,r5_5029,r6_5032,r7_5040,r8_5039,r9_5037,sp_5050,V_5055,VZN_5043,Z_5025,ZN_5053
		defs: ap_5062,C_5058,CVZN_5066,CZ_5077,CZN_5065,fp_5070,N_5061,r0_5068,r1_5076,r10_5073,r11_5079,r2_5063,r3_5069,r4_5071,r5_5064,r6_5067,r7_5075,r8_5074,r9_5072,sp_5056,V_5059,VZN_5078,Z_5060,ZN_5057
// DataOut: ap fp r0 r11 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013C9E:
	word32 sp_1634
	word32 r5_1631
	word32 r6_1628
	word32 r8_1623
	Mem1612[sp_1608 + 14:word16] = Mem1587[r5_1604 + 0x0000C67A:word16] & ~0xFF00
	word32 r3_1613 = (uint32) Mem1612[sp_1608 + 14:word16]
	branch r3_1613 != 0x00000000 l00013CD8
// DataOut: ap fp r0 r11 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013CD8:
	branch r3_1613 != 0x00000001 l00013D08
// DataOut: ap fp r0 r11 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D08:
	word32 r10_4845
	word32 sp_4840 = sp_1608 - 0x00000004
	Mem4841[sp_4840:word32] = 0x00000000
	branch (r3_1613 & 0x00000020) == 0x00000000 l00013D14
// DataOut: ap fp r0 r11 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D14:
	r10_4845 = r6_1601
// DataOut: ap fp r0 r10 r11 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D0E:
	r10_4845 = r8_1597 + 101
// DataOut: ap fp r0 r10 r11 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D17:
	word32 r9_4851
	Mem4847[sp_4840 - 0x00000004:word32] = r10_4845
	branch (r3_1613 & 0x00000010) == 0x00000000 l00013D24
// DataOut: ap fp r0 r11 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D24:
	r9_4851 = r6_1601
// DataOut: ap fp r0 r11 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D1D:
	r9_4851 = r8_1597 + 96
// DataOut: ap fp r0 r11 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D27:
	word32 r7_4857
	Mem4853[sp_4840 - 0x00000008:word32] = r9_4851
	branch (r3_1613 & 0x00000008) == 0x00000000 l00013D34
// DataOut: ap fp r0 r11 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D34:
	r7_4857 = r6_1601
// DataOut: ap fp r0 r11 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D2D:
	r7_4857 = r8_1597 + 91
// DataOut: ap fp r0 r11 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D37:
	word32 r4_4863
	Mem4859[sp_4840 - 0x0000000C:word32] = r7_4857
	branch (r3_1613 & 0x00000004) == 0x00000000 l00013D44
// DataOut: ap fp r0 r11 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D44:
	r4_4863 = r6_1601
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D3D:
	r4_4863 = r8_1597 + 86
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D47:
	Mem4865[sp_4840 - 0x00000010:word32] = r4_4863
	branch (r3_1613 & 0x00000002) == 0x00000000 l00013D54
// DataOut: ap fp r0 r11 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D54:
	Mem4964[fp_1609 + -62:word32] = r6_1601
// DataOut: ap fp r0 r11 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D4D:
	Mem4959[fp_1609 + -62:word32] = r8_1597 + 81
// DataOut: ap fp r0 r11 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D58:
	Mem4871[sp_4840 - 0x00000014:word32] = Mem4865[fp_1609 + -62:word32]
	branch (r3_1613 & 0x00000001) == 0x00000000 l00013D68
// DataOut: ap fp r0 r11 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D68:
	Mem4954[fp_1609 + -66:word32] = r6_1601
// DataOut: ap fp r0 r11 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D5E:
	Mem4949[fp_1609 + -66:word32] = r8_1597 + 76
// DataOut: ap fp r0 r11 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D6C:
	Mem4877[sp_4840 - 0x00000018:word32] = Mem4871[fp_1609 + -66:word32]
	Mem4879[sp_4840 - 0x0000001C:word32] = r3_1613
	Mem4882[sp_4840 - 0x00000020:word32] = r6_1601 + 3363
	Mem4885[sp_4840 - 0x00000024:word32] = r5_1604 + 1515
	word32 sp_4889
	byte ZN_4890
	bool C_4891
	bool V_4892
	bool Z_4893
	bool N_4894
	word32 ap_4895
	word32 r2_4896
	word32 r5_4897
	byte CZN_4898
	byte CVZN_4899
	word32 r6_4900
	word32 r0_4901
	word32 r3_4902
	word32 fp_4903
	word32 r4_4904
	word32 r9_4905
	word32 r10_4906
	word32 r8_4907
	word32 r7_4908
	word32 r1_4909
	byte CZ_4910
	byte VZN_4911
	word32 r11_4912
	call Mem4885[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1610,C_4887,CVZN_1602,CZ_1594,CZN_4765,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1609,N_1606,r0_1607,r1_1595,r10_4845,r11_1592,r2_1605,r3_1613,r4_4863,r5_1604,r6_1601,r7_4857,r8_1597,r9_4851,sp_4883,V_4888,VZN_1593,Z_4766,ZN_4886
		defs: ap_4895,C_4891,CVZN_4899,CZ_4910,CZN_4898,fp_4903,N_4894,r0_4901,r1_4909,r10_4906,r11_4912,r2_4896,r3_4902,r4_4904,r5_4897,r6_4900,r7_4908,r8_4907,r9_4905,sp_4889,V_4892,VZN_4911,Z_4893,ZN_4890
	Mem4914[sp_4889 - 0x00000004:word32] = r0_4901
	Mem4917[sp_4889 - 0x00000008:word32] = r5_4897 + 1515
	Mem4919[sp_4889 - 0x0000000C:word32] = r5_4897
	word32 r2_4920 = Mem4919[r5_4897 + 0x0000C839:word32]
	byte ZN_4925
	bool C_4926
	bool V_4927
	bool Z_4928
	bool N_4929
	word32 ap_4930
	word32 r2_4931
	byte CZN_4933
	byte CVZN_4934
	word32 r0_4936
	word32 r3_4937
	word32 fp_4938
	word32 r4_4939
	word32 r9_4940
	word32 r10_4941
	word32 r7_4943
	word32 r1_4944
	byte CZ_4945
	byte VZN_4946
	word32 r11_4947
	call r2_4920 + 2 (retsize: 4; depth: 4)
		uses: ap_4895,C_4922,CVZN_4899,CZ_4910,CZN_4898,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4903,N_4894,r0_4901,r1_4909,r10_4906,r11_4912,r2_4920,r3_4902,r4_4904,r5_4897,r6_4900,r7_4908,r8_4907,r9_4905,sp_4918,V_4923,VZN_4911,Z_4893,ZN_4921
		defs: ap_4930,C_4926,CVZN_4934,CZ_4945,CZN_4933,fp_4938,N_4929,r0_4936,r1_4944,r10_4941,r11_4947,r2_4931,r3_4937,r4_4939,r5_4932,r6_4935,r7_4943,r8_4942,r9_4940,sp_4924,V_4927,VZN_4946,Z_4928,ZN_4925
// DataOut: ap fp r0 r11 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013CDD:
	word32 sp_4768 = sp_1608 - 0x00000004
	Mem4769[sp_4768:word32] = 0x00000000
	Mem4771[sp_4768 - 0x00000004:word32] = r3_1613
	Mem4774[sp_4768 - 0x00000008:word32] = r6_1601 + 3298
	Mem4777[sp_4768 - 0x0000000C:word32] = r5_1604 + 1515
	word32 sp_4781
	byte ZN_4782
	bool C_4783
	bool V_4784
	bool Z_4785
	bool N_4786
	word32 ap_4787
	word32 r2_4788
	word32 r5_4789
	byte CZN_4790
	byte CVZN_4791
	word32 r6_4792
	word32 r0_4793
	word32 r3_4794
	word32 fp_4795
	word32 r4_4796
	word32 r9_4797
	word32 r10_4798
	word32 r8_4799
	word32 r7_4800
	word32 r1_4801
	byte CZ_4802
	byte VZN_4803
	word32 r11_4804
	call Mem4777[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1610,C_4779,CVZN_1602,CZ_1594,CZN_4765,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1609,N_1606,r0_1607,r1_1595,r10_1598,r11_1592,r2_1605,r3_1613,r4_1600,r5_1604,r6_1601,r7_1596,r8_1597,r9_1599,sp_4775,V_4780,VZN_1593,Z_4766,ZN_4778
		defs: ap_4787,C_4783,CVZN_4791,CZ_4802,CZN_4790,fp_4795,N_4786,r0_4793,r1_4801,r10_4798,r11_4804,r2_4788,r3_4794,r4_4796,r5_4789,r6_4792,r7_4800,r8_4799,r9_4797,sp_4781,V_4784,VZN_4803,Z_4785,ZN_4782
	Mem4806[sp_4781 - 0x00000004:word32] = r0_4793
	Mem4809[sp_4781 - 0x00000008:word32] = r5_4789 + 1515
	Mem4811[sp_4781 - 0x0000000C:word32] = r5_4789
	word32 r2_4812 = Mem4811[r5_4789 + 0x0000C839:word32]
	byte ZN_4817
	bool C_4818
	bool V_4819
	bool Z_4820
	bool N_4821
	word32 ap_4822
	word32 r2_4823
	byte CZN_4825
	byte CVZN_4826
	word32 r0_4828
	word32 r3_4829
	word32 fp_4830
	word32 r4_4831
	word32 r9_4832
	word32 r10_4833
	word32 r7_4835
	word32 r1_4836
	byte CZ_4837
	byte VZN_4838
	word32 r11_4839
	call r2_4812 + 2 (retsize: 4; depth: 4)
		uses: ap_4787,C_4814,CVZN_4791,CZ_4802,CZN_4790,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4795,N_4786,r0_4793,r1_4801,r10_4798,r11_4804,r2_4812,r3_4794,r4_4796,r5_4789,r6_4792,r7_4800,r8_4799,r9_4797,sp_4810,V_4815,VZN_4803,Z_4785,ZN_4813
		defs: ap_4822,C_4818,CVZN_4826,CZ_4837,CZN_4825,fp_4830,N_4821,r0_4828,r1_4836,r10_4833,r11_4839,r2_4823,r3_4829,r4_4831,r5_4824,r6_4827,r7_4835,r8_4834,r9_4832,sp_4816,V_4819,VZN_4838,Z_4820,ZN_4817
// DataOut: ap fp r0 r11 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013CAF:
	word32 sp_4693 = sp_1608 - 0x00000004
	Mem4694[sp_4693:word32] = 0x00000000
	Mem4696[sp_4693 - 0x00000004:word32] = r3_1613
	Mem4699[sp_4693 - 0x00000008:word32] = r6_1601 + 3238
	Mem4702[sp_4693 - 0x0000000C:word32] = r5_1604 + 1515
	word32 sp_4706
	byte ZN_4707
	bool C_4708
	bool V_4709
	bool Z_4710
	bool N_4711
	word32 ap_4712
	word32 r2_4713
	word32 r5_4714
	byte CZN_4715
	byte CVZN_4716
	word32 r6_4717
	word32 r0_4718
	word32 r3_4719
	word32 fp_4720
	word32 r4_4721
	word32 r9_4722
	word32 r10_4723
	word32 r8_4724
	word32 r7_4725
	word32 r1_4726
	byte CZ_4727
	byte VZN_4728
	word32 r11_4729
	call Mem4702[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1610,C_4704,CVZN_1602,CZ_1594,CZN_1603,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1609,N_1606,r0_1607,r1_1595,r10_1598,r11_1592,r2_1605,r3_1613,r4_1600,r5_1604,r6_1601,r7_1596,r8_1597,r9_1599,sp_4700,V_4705,VZN_1593,Z_1615,ZN_4703
		defs: ap_4712,C_4708,CVZN_4716,CZ_4727,CZN_4715,fp_4720,N_4711,r0_4718,r1_4726,r10_4723,r11_4729,r2_4713,r3_4719,r4_4721,r5_4714,r6_4717,r7_4725,r8_4724,r9_4722,sp_4706,V_4709,VZN_4728,Z_4710,ZN_4707
	Mem4731[sp_4706 - 0x00000004:word32] = r0_4718
	Mem4734[sp_4706 - 0x00000008:word32] = r5_4714 + 1515
	Mem4736[sp_4706 - 0x0000000C:word32] = r5_4714
	word32 r2_4737 = Mem4736[r5_4714 + 0x0000C839:word32]
	byte ZN_4742
	bool C_4743
	bool V_4744
	bool Z_4745
	bool N_4746
	word32 ap_4747
	word32 r2_4748
	byte CZN_4750
	byte CVZN_4751
	word32 r0_4753
	word32 r3_4754
	word32 fp_4755
	word32 r4_4756
	word32 r9_4757
	word32 r10_4758
	word32 r7_4760
	word32 r1_4761
	byte CZ_4762
	byte VZN_4763
	word32 r11_4764
	call r2_4737 + 2 (retsize: 4; depth: 4)
		uses: ap_4712,C_4739,CVZN_4716,CZ_4727,CZN_4715,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4720,N_4711,r0_4718,r1_4726,r10_4723,r11_4729,r2_4737,r3_4719,r4_4721,r5_4714,r6_4717,r7_4725,r8_4724,r9_4722,sp_4735,V_4740,VZN_4728,Z_4710,ZN_4738
		defs: ap_4747,C_4743,CVZN_4751,CZ_4762,CZN_4750,fp_4755,N_4746,r0_4753,r1_4761,r10_4758,r11_4764,r2_4748,r3_4754,r4_4756,r5_4749,r6_4752,r7_4760,r8_4759,r9_4757,sp_4741,V_4744,VZN_4763,Z_4745,ZN_4742
// DataOut: ap fp r0 r11 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D92:
	word32 r2_1637 = (uint32) Mem1612[r5_1631 + 0x0000C672:word16]
	branch r2_1637 != 0x00000000 l00013D9E
// DataOut: ap fp r0 r11 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D9E:
	Mem2180[sp_1634 + 42:word16] = Mem1612[r5_1631 + 0x0000C672:word16]
	branch Mem2180[sp_1634 + 8:word32] <= 0x00000001 l00013DB8
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013DB8:
	branch Mem2180[r5_1631 + 0x0000C627:word32] != 0x00000000 l00013DC4
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013DC4:
	word32 sp_2202 = sp_1634 - 0x00000004
	Mem2203[sp_2202:word32] = 0x00000000
	Mem2206[sp_2202 - 0x00000004:word32] = r6_1628 + 3560
	Mem2209[sp_2202 - 0x00000008:word32] = r5_1631 + 1515
	word32 sp_2213
	byte ZN_2214
	bool C_2215
	bool V_2216
	bool Z_2217
	bool N_2218
	word32 ap_2219
	word32 r2_2220
	word32 r5_2221
	byte CZN_2222
	byte CVZN_2223
	word32 r6_2224
	word32 r0_2225
	word32 r3_2226
	word32 fp_2227
	word32 r4_2228
	word32 r9_2229
	word32 r10_2230
	word32 r8_2231
	word32 r7_2232
	word32 r1_2233
	byte CZ_2234
	byte VZN_2235
	word32 r11_2236
	call Mem2209[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1636,C_2211,CVZN_1629,CZ_1620,CZN_2181,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1635,N_1632,r0_1633,r1_1621,r10_1624,r11_1618,r2_1637,r3_1627,r4_1626,r5_1631,r6_1628,r7_2178,r8_1623,r9_1625,sp_2207,V_2212,VZN_1619,Z_2192,ZN_2210
		defs: ap_2219,C_2215,CVZN_2223,CZ_2234,CZN_2222,fp_2227,N_2218,r0_2225,r1_2233,r10_2230,r11_2236,r2_2220,r3_2226,r4_2228,r5_2221,r6_2224,r7_2232,r8_2231,r9_2229,sp_2213,V_2216,VZN_2235,Z_2217,ZN_2214
	Mem2238[sp_2213 - 0x00000004:word32] = r0_2225
	Mem2241[sp_2213 - 0x00000008:word32] = r5_2221 + 1515
	Mem2243[sp_2213 - 0x0000000C:word32] = r5_2221
	word32 r2_2244 = Mem2243[r5_2221 + 0x0000C839:word32]
	byte ZN_2249
	bool C_2250
	bool V_2251
	bool Z_2252
	bool N_2253
	word32 ap_2254
	word32 r2_2255
	byte CZN_2257
	byte CVZN_2258
	word32 r6_2259
	word32 r0_2260
	word32 r3_2261
	word32 fp_2262
	word32 r4_2263
	word32 r9_2264
	word32 r10_2265
	word32 r7_2267
	word32 r1_2268
	byte CZ_2269
	byte VZN_2270
	word32 r11_2271
	word32 r8_2266
	word32 r5_2256
	word32 sp_2248
	call r2_2244 + 2 (retsize: 4; depth: 4)
		uses: ap_2219,C_2246,CVZN_2223,CZ_2234,CZN_2222,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2227,N_2218,r0_2225,r1_2233,r10_2230,r11_2236,r2_2244,r3_2226,r4_2228,r5_2221,r6_2224,r7_2232,r8_2231,r9_2229,sp_2242,V_2247,VZN_2235,Z_2217,ZN_2245
		defs: ap_2254,C_2250,CVZN_2258,CZ_2269,CZN_2257,fp_2262,N_2253,r0_2260,r1_2268,r10_2265,r11_2271,r2_2255,r3_2261,r4_2263,r5_2256,r6_2259,r7_2267,r8_2266,r9_2264,sp_2248,V_2251,VZN_2270,Z_2252,ZN_2249
	word32 r2_2272 = (uint32) Mem2243[sp_2248 + 42:word16]
	branch r2_2272 >=u 0x00000004 l00013DF3
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013DF3:
	Mem2318[sp_2248 + 44:word32] = Mem2243[0x000192D8:word32]
	Mem2320[sp_2248 + 24:word32] = Mem2318[0x000192BC:word32]
	Mem2322[sp_2248 + 20:word32] = Mem2320[0x000192C4:word32]
	r7_2326 = r7_2267
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013E24:
	word32 r7_2326
	word32 sp_2328 = sp_2248 - 0x00000004
	Mem2329[sp_2328:word32] = r7_2326
	word32 sp_2333
	byte ZN_2334
	bool C_2335
	bool V_2336
	bool Z_2337
	bool N_2338
	word32 ap_2339
	word32 r2_2340
	word32 r5_2341
	byte CZN_2342
	byte CVZN_2343
	word32 r6_2344
	word32 r0_2345
	word32 r3_2346
	word32 fp_2347
	word32 r4_2348
	word32 r9_2349
	word32 r10_2350
	word32 r8_2351
	word32 r7_2352
	word32 r1_2353
	byte CZ_2354
	byte VZN_2355
	word32 r11_2356
	call fn00000002 (retsize: 4; depth: 4)
		uses: ap_2254,C_2331,CVZN_2258,CZ_2269,CZN_2273,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2262,N_2253,r0_2260,r1_2268,r10_2265,r11_2271,r2_2272,r3_2261,r4_2263,r5_2256,r6_2259,r7_2326,r8_2266,r9_2316,sp_2328,V_2332,VZN_2270,Z_2252,ZN_2330
		defs: ap_2339,C_2335,CVZN_2343,CZ_2354,CZN_2342,fp_2347,N_2338,r0_2345,r1_2353,r10_2350,r11_2356,r2_2340,r3_2346,r4_2348,r5_2341,r6_2344,r7_2352,r8_2351,r9_2349,sp_2333,V_2336,VZN_2355,Z_2337,ZN_2334
	Mem2358[sp_2333 + 18:word16] = (word16) r0_2345
	Mem2361[sp_2333 - 0x00000004:word32] = r7_2352 + 2
	byte ZN_2366
	bool C_2367
	bool V_2368
	bool Z_2369
	bool N_2370
	word32 ap_2371
	word32 r2_2372
	byte CZN_2374
	byte CVZN_2375
	word32 r0_2377
	word32 r3_2378
	word32 fp_2379
	word32 r4_2380
	word32 r10_2382
	word32 r8_2383
	word32 r7_2384
	word32 r1_2385
	byte CZ_2386
	byte VZN_2387
	word32 r11_2388
	word32 r9_2381
	word32 r6_2376
	word32 r5_2373
	word32 sp_2365
	call Mem2361[sp_2333 + 0x00000020:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2339,C_2363,CVZN_2343,CZ_2354,CZN_2342,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2347,N_2338,r0_2345,r1_2353,r10_2350,r11_2356,r2_2340,r3_2346,r4_2348,r5_2341,r6_2344,r7_2352,r8_2351,r9_2349,sp_2359,V_2364,VZN_2355,Z_2337,ZN_2362
		defs: ap_2371,C_2367,CVZN_2375,CZ_2386,CZN_2374,fp_2379,N_2370,r0_2377,r1_2385,r10_2382,r11_2388,r2_2372,r3_2378,r4_2380,r5_2373,r6_2376,r7_2384,r8_2383,r9_2381,sp_2365,V_2368,VZN_2387,Z_2369,ZN_2366
	Mem2390[sp_2365 + 40:word16] = (word16) r0_2377
	Mem2395[sp_2365 + 42:int16] = (int16) ((uint32) Mem2390[sp_2365 + 42:word16] - 0x00000004)
	branch Mem2395[sp_2365 + 40:word16] <=u Mem2395[sp_2365 + 42:word16] l00013E81
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013E4E:
	Mem4610[sp_2365 - 0x00000004:uint32] = 0x00000421
	Mem4613[sp_2365 - 0x00000008:uint32] = (uint32) Mem4610[sp_2365 + 0x00000026:word16]
	Mem4616[sp_2365 - 0x0000000C:uint32] = (uint32) Mem4613[sp_2365 + 0x00000024:word16]
	Mem4619[sp_2365 - 0x00000010:uint32] = (uint32) Mem4616[sp_2365 + 0x0000000E:word16]
	Mem4622[sp_2365 - 0x00000014:word32] = r6_2376 + 3431
	Mem4625[sp_2365 - 0x00000018:word32] = r5_2373 + 1515
	word32 sp_4629
	byte ZN_4630
	bool C_4631
	bool V_4632
	bool Z_4633
	bool N_4634
	word32 ap_4635
	word32 r2_4636
	word32 r5_4637
	byte CZN_4638
	byte CVZN_4639
	word32 r6_4640
	word32 r0_4641
	word32 r3_4642
	word32 fp_4643
	word32 r4_4644
	word32 r9_4645
	word32 r10_4646
	word32 r8_4647
	word32 r7_4648
	word32 r1_4649
	byte CZ_4650
	byte VZN_4651
	word32 r11_4652
	call r9_2381 + 2 (retsize: 4; depth: 4)
		uses: ap_2371,C_4627,CVZN_2375,CZ_2397,CZN_2396,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2379,N_2370,r0_2393,r1_2385,r10_2382,r11_2388,r2_2372,r3_2378,r4_2380,r5_2373,r6_2376,r7_2391,r8_2383,r9_2381,sp_4623,V_4628,VZN_2387,Z_2369,ZN_4626
		defs: ap_4635,C_4631,CVZN_4639,CZ_4650,CZN_4638,fp_4643,N_4634,r0_4641,r1_4649,r10_4646,r11_4652,r2_4636,r3_4642,r4_4644,r5_4637,r6_4640,r7_4648,r8_4647,r9_4645,sp_4629,V_4632,VZN_4651,Z_4633,ZN_4630
	Mem4654[sp_4629 - 0x00000004:word32] = r0_4641
	Mem4657[sp_4629 - 0x00000008:word32] = r5_4637 + 1515
	Mem4659[sp_4629 - 0x0000000C:word32] = r5_4637
	word32 r2_4660 = Mem4659[r5_4637 + 0x0000C839:word32]
	byte ZN_4665
	bool C_4666
	bool V_4667
	bool Z_4668
	bool N_4669
	word32 ap_4670
	word32 r2_4671
	byte CZN_4673
	byte CVZN_4674
	word32 r0_4676
	word32 r3_4677
	word32 fp_4678
	word32 r4_4679
	word32 r10_4681
	word32 r8_4682
	word32 r7_4683
	word32 r1_4684
	byte CZ_4685
	byte VZN_4686
	word32 r11_4687
	call r2_4660 + 2 (retsize: 4; depth: 4)
		uses: ap_4635,C_4662,CVZN_4639,CZ_4650,CZN_4638,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4643,N_4634,r0_4641,r1_4649,r10_4646,r11_4652,r2_4660,r3_4642,r4_4644,r5_4637,r6_4640,r7_4648,r8_4647,r9_4645,sp_4658,V_4663,VZN_4651,Z_4633,ZN_4661
		defs: ap_4670,C_4666,CVZN_4674,CZ_4685,CZN_4673,fp_4678,N_4669,r0_4676,r1_4684,r10_4681,r11_4687,r2_4671,r3_4677,r4_4679,r5_4672,r6_4675,r7_4683,r8_4682,r9_4680,sp_4664,V_4667,VZN_4686,Z_4668,ZN_4665
	Mem4689[sp_2365 + 40:word16] = Mem4659[sp_2365 + 42:word16]
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013E81:
	word32 r2_2419 = (uint32) Mem2395[sp_2365 + 18:word16]
	branch r2_2419 >= 0x00000007 l00013E8D
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013E8D:
	branch r2_2419 > 0x0000000D l00013EA0
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013EA0:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013E90_1:
	word32 sp_4584
	byte ZN_4585
	bool C_4586
	bool V_4587
	bool Z_4588
	bool N_4589
	word32 ap_4590
	word32 r2_4591
	word32 r5_4592
	byte CZN_4593
	byte CVZN_4594
	word32 r6_4595
	word32 r0_4596
	word32 r3_4597
	word32 fp_4598
	word32 r4_4599
	word32 r9_4600
	word32 r10_4601
	word32 r8_4602
	word32 r7_4603
	word32 r1_4604
	byte CZ_4605
	byte VZN_4606
	word32 r11_4607
	call 0x00013E94 + (r2_2419 - 0x00000007) * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_2418,C_4581,CVZN_2410,CZ_2401,CZN_2420,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2417,N_2421,r0_4579,r1_2402,r10_2405,r11_2399,r2_2419,r3_2408,r4_2407,r5_2411,r6_2409,r7_2403,r8_2404,r9_2406,sp_2416,V_4582,VZN_2400,Z_2412,ZN_4580
		defs: ap_4590,C_4586,CVZN_4594,CZ_4605,CZN_4593,fp_4598,N_4589,r0_4596,r1_4604,r10_4601,r11_4607,r2_4591,r3_4597,r4_4599,r5_4592,r6_4595,r7_4603,r8_4602,r9_4600,sp_4584,V_4587,VZN_4606,Z_4588,ZN_4585
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013E8A:
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014080:
	word32 sp_2424 = sp_2365 - 0x00000004
	Mem2425[sp_2424:word32] = 0x00000000
	Mem2428[sp_2424 - 0x00000004:uint32] = (uint32) Mem2425[sp_2424 + 0x00000028:word16]
	word32 r3_2423 = r6_2376 + 3904
	Mem2430[sp_2424 - 0x00000008:word32] = r3_2423
	word32 r4_2431 = (uint32) Mem2430[sp_2424 + 0x00000016:word16]
	Mem2433[sp_2424 - 0x0000000C:word32] = r4_2431
	Mem2436[sp_2424 - 0x00000010:word32] = r6_2376 + 3607
	Mem2439[sp_2424 - 0x00000014:word32] = r5_2373 + 1515
	word32 sp_2443
	byte ZN_2444
	bool C_2445
	bool V_2446
	bool Z_2447
	bool N_2448
	word32 ap_2449
	word32 r2_2450
	word32 r5_2451
	byte CZN_2452
	byte CVZN_2453
	word32 r6_2454
	word32 r0_2455
	word32 r3_2456
	word32 fp_2457
	word32 r4_2458
	word32 r9_2459
	word32 r10_2460
	word32 r8_2461
	word32 r7_2462
	word32 r1_2463
	byte CZ_2464
	byte VZN_2465
	word32 r11_2466
	call r9_2381 + 2 (retsize: 4; depth: 4)
		uses: ap_2418,C_2441,CVZN_2410,CZ_2401,CZN_2420,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2417,N_2421,r0_2413,r1_2402,r10_2405,r11_2399,r2_2419,r3_2423,r4_2431,r5_2411,r6_2409,r7_2403,r8_2404,r9_2406,sp_2437,V_2442,VZN_2400,Z_2412,ZN_2440
		defs: ap_2449,C_2445,CVZN_2453,CZ_2464,CZN_2452,fp_2457,N_2448,r0_2455,r1_2463,r10_2460,r11_2466,r2_2450,r3_2456,r4_2458,r5_2451,r6_2454,r7_2462,r8_2461,r9_2459,sp_2443,V_2446,VZN_2465,Z_2447,ZN_2444
	Mem2468[sp_2443 - 0x00000004:word32] = r0_2455
	Mem2471[sp_2443 - 0x00000008:word32] = r5_2451 + 1515
	Mem2473[sp_2443 - 0x0000000C:word32] = r5_2451
	word32 r2_2474 = Mem2473[r5_2451 + 0x0000C839:word32]
	byte ZN_2479
	bool C_2480
	bool V_2481
	bool Z_2482
	bool N_2483
	word32 ap_2484
	word32 r2_2485
	byte CZN_2487
	byte CVZN_2488
	word32 r6_2489
	word32 r0_2490
	word32 r3_2491
	word32 fp_2492
	word32 r4_2493
	word32 r9_2494
	word32 r10_2495
	word32 r7_2497
	word32 r1_2498
	byte CZ_2499
	byte VZN_2500
	word32 r11_2501
	word32 r8_2496
	word32 r5_2486
	word32 sp_2478
	call r2_2474 + 2 (retsize: 4; depth: 4)
		uses: ap_2449,C_2476,CVZN_2453,CZ_2464,CZN_2452,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2457,N_2448,r0_2455,r1_2463,r10_2460,r11_2466,r2_2474,r3_2456,r4_2458,r5_2451,r6_2454,r7_2462,r8_2461,r9_2459,sp_2472,V_2477,VZN_2465,Z_2447,ZN_2475
		defs: ap_2484,C_2480,CVZN_2488,CZ_2499,CZN_2487,fp_2492,N_2483,r0_2490,r1_2498,r10_2495,r11_2501,r2_2485,r3_2491,r4_2493,r5_2486,r6_2489,r7_2497,r8_2496,r9_2494,sp_2478,V_2481,VZN_2500,Z_2482,ZN_2479
	branch r4_2493 >= 0x00000009 l000140BB
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140BB:
	branch r4_2493 != 0x00000009 l000140C0
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140C0:
	branch r4_2493 >= 0x00002605 l000140CC
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140CC:
	branch r4_2493 != 0x00002605 l000140D1
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140D1:
	branch r4_2493 >= 0x00004453 l000140DD
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140DD:
	branch r4_2493 != 0x00004453 l000140E2
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140E2:
	branch r4_2493 >= 0x00004B46 l000140EE
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140EE:
	branch r4_2493 != 0x00004B46 l000140F3
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140F3:
	branch r4_2493 >= 0x00004C41 l000140FF
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140FF:
	branch r4_2493 == 0x00004C41 l00014154
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014101:
	branch r4_2493 >= 0x00004D49 l0001410D
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001410D:
	branch r4_2493 != 0x00004D49 l00014112
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014112:
	branch r4_2493 >= 0x00005356 l0001411E
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001411E:
	branch r4_2493 != 0x00005356 l00014123
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014123:
	branch r4_2493 >= 0x00005455 l0001412F
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001412F:
	branch r4_2493 != 0x00005455 l00014134
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014134:
	branch r4_2493 >= 0x00006542 l00014140
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014140:
	branch r4_2493 != 0x00006542 l00014145
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014145:
	branch r4_2493 != 0x0000FB4A l00014151
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014151:
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001414E:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014504:
	word32 r0_4493 = (uint32) Mem2473[sp_2478 + 40:word16]
	branch r0_4493 >=u 0x00000004 l00014510
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014510:
	Mem4498[sp_2478 - 0x00000004:word32] = 0x00000000
	Mem4501[sp_2478 - 0x00000008:uint32] = (uint32) Mem4498[r7_2497 + 3:byte]
	Mem4504[sp_2478 - 0x0000000C:uint32] = (uint32) Mem4501[r7_2497 + 2:byte]
	Mem4507[sp_2478 - 0x00000010:uint32] = (uint32) Mem4504[r7_2497 + 1:byte]
	Mem4510[sp_2478 - 0x00000014:uint32] = (uint32) Mem4507[r7_2497:byte]
	Mem4513[sp_2478 - 0x00000018:word32] = r6_2489 + 4591
	Mem4516[sp_2478 - 0x0000001C:word32] = r5_2486 + 1515
	word32 sp_4520
	byte ZN_4521
	bool C_4522
	bool V_4523
	bool Z_4524
	bool N_4525
	word32 ap_4526
	word32 r2_4527
	word32 r5_4528
	byte CZN_4529
	byte CVZN_4530
	word32 r6_4531
	word32 r0_4532
	word32 r3_4533
	word32 fp_4534
	word32 r4_4535
	word32 r9_4536
	word32 r10_4537
	word32 r8_4538
	word32 r7_4539
	word32 r1_4540
	byte CZ_4541
	byte VZN_4542
	word32 r11_4543
	call r9_2494 + 2 (retsize: 4; depth: 4)
		uses: ap_2484,C_4518,CVZN_4359,CZ_4356,CZN_4494,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2492,N_4355,r0_4493,r1_2498,r10_2495,r11_2501,r2_2502,r3_2491,r4_2493,r5_2486,r6_2489,r7_2497,r8_2496,r9_2494,sp_4514,V_4519,VZN_4358,Z_4491,ZN_4517
		defs: ap_4526,C_4522,CVZN_4530,CZ_4541,CZN_4529,fp_4534,N_4525,r0_4532,r1_4540,r10_4537,r11_4543,r2_4527,r3_4533,r4_4535,r5_4528,r6_4531,r7_4539,r8_4538,r9_4536,sp_4520,V_4523,VZN_4542,Z_4524,ZN_4521
	Mem4545[sp_4520 - 0x00000004:word32] = r0_4532
	Mem4548[sp_4520 - 0x00000008:word32] = r5_4528 + 1515
	Mem4550[sp_4520 - 0x0000000C:word32] = r5_4528
	word32 r2_4551 = Mem4550[r5_4528 + 0x0000C839:word32]
	byte ZN_4556
	bool C_4557
	bool V_4558
	bool Z_4559
	bool N_4560
	word32 ap_4561
	word32 r2_4562
	byte CZN_4564
	byte CVZN_4565
	word32 r6_4566
	word32 r0_4567
	word32 r3_4568
	word32 fp_4569
	word32 r4_4570
	word32 r9_4571
	word32 r10_4572
	word32 r7_4574
	word32 r1_4575
	byte CZ_4576
	byte VZN_4577
	word32 r11_4578
	call r2_4551 + 2 (retsize: 4; depth: 4)
		uses: ap_4526,C_4553,CVZN_4530,CZ_4541,CZN_4529,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4534,N_4525,r0_4532,r1_4540,r10_4537,r11_4543,r2_4551,r3_4533,r4_4535,r5_4528,r6_4531,r7_4539,r8_4538,r9_4536,sp_4549,V_4554,VZN_4542,Z_4524,ZN_4552
		defs: ap_4561,C_4557,CVZN_4565,CZ_4576,CZN_4564,fp_4569,N_4560,r0_4567,r1_4575,r10_4572,r11_4578,r2_4562,r3_4568,r4_4570,r5_4563,r6_4566,r7_4574,r8_4573,r9_4571,sp_4555,V_4558,VZN_4577,Z_4559,ZN_4556
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001450D:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014142:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000144AC:
	word32 r0_4360 = (uint32) Mem2473[sp_2478 + 40:word16]
	branch r0_4360 >=u 0x00000005 l000144B8
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000144B8:
	word32 r3_4370
	Mem4365[sp_2478 - 0x00000004:word32] = 0x00000000
	word32 r2_4366 = (uint32) Mem4365[r7_2497 + 4:byte]
	branch (r2_4366 & 0x00000001) == 0x00000000 l000144C8
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000144C8:
	r3_4370 = r6_2489
// DataOut: ap fp r0 r11 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000144C1:
	r3_4370 = r8_2496 + 214
// DataOut: ap fp r0 r11 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000144CB:
	Mem4372[sp_2478 - 0x00000008:word32] = r3_4370
	Mem4374[sp_2478 - 0x0000000C:word32] = r7_2497
	word32 sp_4378
	byte ZN_4379
	bool C_4380
	bool V_4381
	bool Z_4382
	bool N_4383
	word32 ap_4384
	word32 r2_4385
	word32 r5_4386
	byte CZN_4387
	byte CVZN_4388
	word32 r6_4389
	word32 r0_4390
	word32 r3_4391
	word32 fp_4392
	word32 r4_4393
	word32 r9_4394
	word32 r10_4395
	word32 r8_4396
	word32 r7_4397
	word32 r1_4398
	byte CZ_4399
	byte VZN_4400
	word32 r11_4401
	call Mem4374[sp_2478 + 0x0000001C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2484,C_4376,CVZN_4359,CZ_4356,CZN_4361,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2492,N_4355,r0_4360,r1_2498,r10_2495,r11_2501,r2_4366,r3_4370,r4_2493,r5_2486,r6_2489,r7_2497,r8_2496,r9_2494,sp_4373,V_4377,VZN_4358,Z_4354,ZN_4375
		defs: ap_4384,C_4380,CVZN_4388,CZ_4399,CZN_4387,fp_4392,N_4383,r0_4390,r1_4398,r10_4395,r11_4401,r2_4385,r3_4391,r4_4393,r5_4386,r6_4389,r7_4397,r8_4396,r9_4394,sp_4378,V_4381,VZN_4400,Z_4382,ZN_4379
	Mem4403[sp_4378 - 0x00000004:word32] = r0_4390
	Mem4406[sp_4378 - 0x00000008:word32] = r6_4389 + 4512
	Mem4409[sp_4378 - 0x0000000C:word32] = r5_4386 + 1515
	word32 sp_4413
	byte ZN_4414
	bool C_4415
	bool V_4416
	bool Z_4417
	bool N_4418
	word32 ap_4419
	word32 r2_4420
	word32 r5_4421
	byte CZN_4422
	byte CVZN_4423
	word32 r6_4424
	word32 r0_4425
	word32 r3_4426
	word32 fp_4427
	word32 r4_4428
	word32 r9_4429
	word32 r10_4430
	word32 r8_4431
	word32 r7_4432
	word32 r1_4433
	byte CZ_4434
	byte VZN_4435
	word32 r11_4436
	call r9_4394 + 2 (retsize: 4; depth: 4)
		uses: ap_4384,C_4411,CVZN_4388,CZ_4399,CZN_4387,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4392,N_4383,r0_4390,r1_4398,r10_4395,r11_4401,r2_4385,r3_4391,r4_4393,r5_4386,r6_4389,r7_4397,r8_4396,r9_4394,sp_4407,V_4412,VZN_4400,Z_4382,ZN_4410
		defs: ap_4419,C_4415,CVZN_4423,CZ_4434,CZN_4422,fp_4427,N_4418,r0_4425,r1_4433,r10_4430,r11_4436,r2_4420,r3_4426,r4_4428,r5_4421,r6_4424,r7_4432,r8_4431,r9_4429,sp_4413,V_4416,VZN_4435,Z_4417,ZN_4414
	Mem4438[sp_4413 - 0x00000004:word32] = r0_4425
	Mem4441[sp_4413 - 0x00000008:word32] = r5_4421 + 1515
	Mem4443[sp_4413 - 0x0000000C:word32] = r5_4421
	word32 r2_4444 = Mem4443[r5_4421 + 0x0000C839:word32]
	byte ZN_4449
	bool C_4450
	bool V_4451
	bool Z_4452
	bool N_4453
	word32 ap_4454
	word32 r2_4455
	byte CZN_4457
	byte CVZN_4458
	word32 r6_4459
	word32 r0_4460
	word32 r3_4461
	word32 fp_4462
	word32 r4_4463
	word32 r9_4464
	word32 r10_4465
	word32 r7_4467
	word32 r1_4468
	byte CZ_4469
	byte VZN_4470
	word32 r11_4471
	call r2_4444 + 2 (retsize: 4; depth: 4)
		uses: ap_4419,C_4446,CVZN_4423,CZ_4434,CZN_4422,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4427,N_4418,r0_4425,r1_4433,r10_4430,r11_4436,r2_4444,r3_4426,r4_4428,r5_4421,r6_4424,r7_4432,r8_4431,r9_4429,sp_4442,V_4447,VZN_4435,Z_4417,ZN_4445
		defs: ap_4454,C_4450,CVZN_4458,CZ_4469,CZN_4457,fp_4462,N_4453,r0_4460,r1_4468,r10_4465,r11_4471,r2_4455,r3_4461,r4_4463,r5_4456,r6_4459,r7_4467,r8_4466,r9_4464,sp_4448,V_4451,VZN_4470,Z_4452,ZN_4449
	branch ((uint32) Mem4443[r7_4467 + 4:byte] & 0x00000001) == 0x00000000 l000144FC
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000144FC:
	Mem4477[Mem4477[ap_4454 + 4:word32]:word32] = 0x00000000
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000144F9:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000144B5:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001413D:
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014131:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001432C:
	word32 r0_3987 = (uint32) Mem2473[sp_2478 + 40:word16]
	branch r0_3987 >=u 0x00000001 l00014338
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014338:
	word32 fp_4017
	word32 r6_4009
	word32 r9_4006
	word32 r7_4003
	Mem3994[fp_2492 + -154:byte] = 0x00
	word32 r4_3991 = 0x00000000
	word32 r2_3995 = (uint32) Mem3994[r7_2497:byte]
	r7_4003 = r7_2497
	r9_4006 = r9_2494
	r6_4009 = r6_2489
	fp_4017 = fp_2492
	branch (r2_3995 & 0x00000001) == 0x00000000 l00014355
// DataOut: ap fp r0 r11 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014347:
	Mem4318[sp_2478 - 0x00000004:word32] = r6_2489 + 4380
	Mem4321[sp_2478 - 0x00000008:word32] = fp_2492 + -154
	byte ZN_4326
	bool C_4327
	bool V_4328
	bool Z_4329
	bool N_4330
	word32 ap_4331
	word32 r2_4332
	byte CZN_4334
	byte CVZN_4335
	word32 r0_4337
	word32 r3_4338
	word32 r4_4340
	word32 r10_4342
	word32 r1_4345
	byte CZ_4346
	byte VZN_4347
	word32 r11_4348
	call Mem4321[sp_2478 + 0x00000018:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2484,C_4323,CVZN_3986,CZ_3983,CZN_3988,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2492,N_3982,r0_3987,r1_2498,r10_2495,r11_2501,r2_3995,r3_2491,r4_3991,r5_2486,r6_2489,r7_2497,r8_2496,r9_2494,sp_4319,V_4324,VZN_3985,Z_3981,ZN_4322
		defs: ap_4331,C_4327,CVZN_4335,CZ_4346,CZN_4334,fp_4339,N_4330,r0_4337,r1_4345,r10_4342,r11_4348,r2_4332,r3_4338,r4_4340,r5_4333,r6_4336,r7_4344,r8_4343,r9_4341,sp_4325,V_4328,VZN_4347,Z_4329,ZN_4326
	r4_3991 = 0x00000001
// DataOut: ap fp r0 r11 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:0x00000000 r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014355:
	word32 r2_4019 = (uint32) Mem3994[r7_4003:byte]
	branch (r2_4019 & 0x00000002) == 0x00000000 l0001438D
// DataOut: ap fp r0 r11 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001435C:
	word32 sp_4237 = sp_2478 - 0x00000004
	Mem4239[sp_4237:word32] = fp_4017 + -154
	word32 sp_4243
	byte ZN_4244
	bool C_4245
	bool V_4246
	bool Z_4247
	bool N_4248
	word32 ap_4249
	word32 r2_4250
	word32 r5_4251
	byte CZN_4252
	byte CVZN_4253
	word32 r6_4254
	word32 r0_4255
	word32 r3_4256
	word32 fp_4257
	word32 r4_4258
	word32 r9_4259
	word32 r10_4260
	word32 r8_4261
	word32 r7_4262
	word32 r1_4263
	byte CZ_4264
	byte VZN_4265
	word32 r11_4266
	call Mem4239[sp_4237 + 24:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_4018,C_4241,CVZN_4010,CZ_4001,CZN_4011,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4017,N_4013,r0_4015,r1_4002,r10_4005,r11_3999,r2_4019,r3_4008,r4_4007,r5_4012,r6_4009,r7_4003,r8_4004,r9_4006,sp_4237,V_4242,VZN_4000,Z_4014,ZN_4240
		defs: ap_4249,C_4245,CVZN_4253,CZ_4264,CZN_4252,fp_4257,N_4248,r0_4255,r1_4263,r10_4260,r11_4266,r2_4250,r3_4256,r4_4258,r5_4251,r6_4254,r7_4262,r8_4261,r9_4259,sp_4243,V_4246,VZN_4265,Z_4247,ZN_4244
	word32 r3_4267 = r0_4255
	branch r4_4258 == 0x00000000 l00014376
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001436B:
	Mem4312[fp_4257 + -154:byte] = 0x2F
	r3_4267 = r0_4255 + 0x00000001
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014376:
	Mem4275[sp_4243 - 0x00000004:word32] = r6_4254 + 4393
	Mem4279[sp_4243 - 0x00000008:word32] = fp_4257 + -154 + r3_4267
	byte ZN_4282
	bool C_4283
	bool V_4284
	bool Z_4285
	bool N_4286
	word32 ap_4287
	word32 r2_4288
	byte CZN_4290
	byte CVZN_4291
	word32 r0_4293
	word32 r3_4294
	word32 r4_4296
	word32 r10_4298
	word32 r1_4301
	byte CZ_4302
	byte VZN_4303
	word32 r11_4304
	call Mem4279[sp_4243 + 0x00000018:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_4249,C_4270,CVZN_4280,CZ_4264,CZN_4252,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4257,N_4248,r0_4255,r1_4263,r10_4260,r11_4266,r2_4276,r3_4272,r4_4258,r5_4251,r6_4254,r7_4262,r8_4261,r9_4259,sp_4277,V_4271,VZN_4265,Z_4269,ZN_4268
		defs: ap_4287,C_4283,CVZN_4291,CZ_4302,CZN_4290,fp_4295,N_4286,r0_4293,r1_4301,r10_4298,r11_4304,r2_4288,r3_4294,r4_4296,r5_4289,r6_4292,r7_4300,r8_4299,r9_4297,sp_4281,V_4284,VZN_4303,Z_4285,ZN_4282
	Mem4307[Mem4307[ap_4287 + 4:word32]:word32] = Mem4279[ap_4287 + 4:word32] + 0x00000004
	r4_3991 = r4_4296 + 0x00000001
// DataOut: ap fp r0 r11 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001438D:
	word32 r2_4043 = (uint32) Mem3994[r7_4003:byte]
	branch (r2_4043 & 0x00000004) == 0x00000000 l000143C5
// DataOut: ap fp r0 r11 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014394:
	word32 sp_4158 = sp_2478 - 0x00000004
	Mem4160[sp_4158:word32] = fp_4017 + -154
	word32 sp_4164
	byte ZN_4165
	bool C_4166
	bool V_4167
	bool Z_4168
	bool N_4169
	word32 ap_4170
	word32 r2_4171
	word32 r5_4172
	byte CZN_4173
	byte CVZN_4174
	word32 r6_4175
	word32 r0_4176
	word32 r3_4177
	word32 fp_4178
	word32 r4_4179
	word32 r9_4180
	word32 r10_4181
	word32 r8_4182
	word32 r7_4183
	word32 r1_4184
	byte CZ_4185
	byte VZN_4186
	word32 r11_4187
	call Mem4160[sp_4158 + 24:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_4042,C_4162,CVZN_4034,CZ_4025,CZN_4035,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4041,N_4037,r0_4039,r1_4026,r10_4029,r11_4023,r2_4043,r3_4032,r4_4031,r5_4036,r6_4033,r7_4027,r8_4028,r9_4030,sp_4158,V_4163,VZN_4024,Z_4038,ZN_4161
		defs: ap_4170,C_4166,CVZN_4174,CZ_4185,CZN_4173,fp_4178,N_4169,r0_4176,r1_4184,r10_4181,r11_4187,r2_4171,r3_4177,r4_4179,r5_4172,r6_4175,r7_4183,r8_4182,r9_4180,sp_4164,V_4167,VZN_4186,Z_4168,ZN_4165
	word32 r3_4188 = r0_4176
	branch r4_4179 == 0x00000000 l000143AE
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000143A3:
	Mem4233[fp_4178 + -154:byte] = 0x2F
	r3_4188 = r0_4176 + 0x00000001
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000143AE:
	Mem4196[sp_4164 - 0x00000004:word32] = r6_4175 + 4400
	Mem4200[sp_4164 - 0x00000008:word32] = fp_4178 + -154 + r3_4188
	byte ZN_4203
	bool C_4204
	bool V_4205
	bool Z_4206
	bool N_4207
	word32 ap_4208
	word32 r2_4209
	byte CZN_4211
	byte CVZN_4212
	word32 r0_4214
	word32 r3_4215
	word32 r4_4217
	word32 r10_4219
	word32 r7_4221
	word32 r1_4222
	byte CZ_4223
	byte VZN_4224
	word32 r11_4225
	call Mem4200[sp_4164 + 0x00000018:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_4170,C_4191,CVZN_4201,CZ_4185,CZN_4173,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4178,N_4169,r0_4176,r1_4184,r10_4181,r11_4187,r2_4197,r3_4193,r4_4179,r5_4172,r6_4175,r7_4183,r8_4182,r9_4180,sp_4198,V_4192,VZN_4186,Z_4190,ZN_4189
		defs: ap_4208,C_4204,CVZN_4212,CZ_4223,CZN_4211,fp_4216,N_4207,r0_4214,r1_4222,r10_4219,r11_4225,r2_4209,r3_4215,r4_4217,r5_4210,r6_4213,r7_4221,r8_4220,r9_4218,sp_4202,V_4205,VZN_4224,Z_4206,ZN_4203
	Mem4228[Mem4228[ap_4208 + 4:word32]:word32] = Mem4200[ap_4208 + 4:word32] + 0x00000004
	r4_3991 = r4_4217 + 0x00000001
// DataOut: ap fp r0 r11 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000143C5:
	branch r4_3991 > 0x00000000 l000143CC
// DataOut: ap fp r0 r11 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000143CC:
	word32 r3_4076
	word32 sp_4071 = sp_2478 - 0x00000004
	Mem4072[sp_4071:word32] = 0x00000000
	branch r4_3991 != 0x00000001 l000143D8
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000143D8:
	r3_4076 = r8_2496 + 207
// DataOut: ap fp r0 r11 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000143D3:
	r3_4076 = r6_4009
// DataOut: ap fp r0 r11 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000143DD:
	Mem4078[sp_4071 - 0x00000004:word32] = r3_4076
	Mem4081[sp_4071 - 0x00000008:word32] = fp_4017 + -154
	Mem4084[sp_4071 - 0x0000000C:word32] = r6_4009 + 4330
	Mem4087[sp_4071 - 0x00000010:word32] = r5_2486 + 1515
	word32 sp_4091
	byte ZN_4092
	bool C_4093
	bool V_4094
	bool Z_4095
	bool N_4096
	word32 ap_4097
	word32 r2_4098
	word32 r5_4099
	byte CZN_4100
	byte CVZN_4101
	word32 r6_4102
	word32 r0_4103
	word32 r3_4104
	word32 fp_4105
	word32 r4_4106
	word32 r9_4107
	word32 r10_4108
	word32 r8_4109
	word32 r7_4110
	word32 r1_4111
	byte CZ_4112
	byte VZN_4113
	word32 r11_4114
	call r9_4006 + 2 (retsize: 4; depth: 4)
		uses: ap_4067,C_4089,CVZN_4058,CZ_4049,CZN_4073,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4066,N_4062,r0_4064,r1_4050,r10_4053,r11_4047,r2_4061,r3_4076,r4_4055,r5_4060,r6_4057,r7_4051,r8_4052,r9_4054,sp_4085,V_4090,VZN_4048,Z_4074,ZN_4088
		defs: ap_4097,C_4093,CVZN_4101,CZ_4112,CZN_4100,fp_4105,N_4096,r0_4103,r1_4111,r10_4108,r11_4114,r2_4098,r3_4104,r4_4106,r5_4099,r6_4102,r7_4110,r8_4109,r9_4107,sp_4091,V_4094,VZN_4113,Z_4095,ZN_4092
	Mem4116[sp_4091 - 0x00000004:word32] = r0_4103
	Mem4119[sp_4091 - 0x00000008:word32] = r5_4099 + 1515
	Mem4121[sp_4091 - 0x0000000C:word32] = r5_4099
	word32 r2_4122 = Mem4121[r5_4099 + 0x0000C839:word32]
	byte ZN_4127
	bool C_4128
	bool V_4129
	bool Z_4130
	bool N_4131
	word32 ap_4132
	word32 r2_4133
	byte CZN_4135
	byte CVZN_4136
	word32 r6_4137
	word32 r0_4138
	word32 r3_4139
	word32 fp_4140
	word32 r4_4141
	word32 r9_4142
	word32 r10_4143
	word32 r7_4145
	word32 r1_4146
	byte CZ_4147
	byte VZN_4148
	word32 r11_4149
	call r2_4122 + 2 (retsize: 4; depth: 4)
		uses: ap_4097,C_4124,CVZN_4101,CZ_4112,CZN_4100,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_4105,N_4096,r0_4103,r1_4111,r10_4108,r11_4114,r2_4122,r3_4104,r4_4106,r5_4099,r6_4102,r7_4110,r8_4109,r9_4107,sp_4120,V_4125,VZN_4113,Z_4095,ZN_4123
		defs: ap_4132,C_4128,CVZN_4136,CZ_4147,CZN_4135,fp_4140,N_4131,r0_4138,r1_4146,r10_4143,r11_4149,r2_4133,r3_4139,r4_4141,r5_4134,r6_4137,r7_4145,r8_4144,r9_4142,sp_4126,V_4129,VZN_4148,Z_4130,ZN_4127
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000143C9:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014335:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001412C:
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014120:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014544:
	branch (uint32) Mem2473[sp_2478 + 40:word16] >=u 0x00000005 l00014550
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014550:
	Mem3973[sp_2478 - 0x00000004:word32] = 0x00000000
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001454D:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001411B:
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001410F:
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000141DC:
	word32 r10_3416 = (uint32) Mem2473[sp_2478 + 40:word16]
	branch r10_3416 >=u 0x00000008 l000141E8
// DataOut: ap fp r0 r10 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000141E8:
	Mem3422[sp_2478 - 0x00000004:word32] = r7_2497 + 0x00000004
	word32 sp_3424
	byte ZN_3425
	bool C_3426
	bool V_3427
	bool Z_3428
	bool N_3429
	word32 ap_3430
	word32 r2_3431
	word32 r5_3432
	byte CZN_3433
	byte CVZN_3434
	word32 r6_3435
	word32 r0_3436
	word32 r3_3437
	word32 fp_3438
	word32 r4_3439
	word32 r9_3440
	word32 r10_3441
	word32 r8_3442
	word32 r7_3443
	word32 r1_3444
	byte CZ_3445
	byte VZN_3446
	word32 r11_3447
	call Mem3422[sp_2478 + 0x00000020:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2484,C_3418,CVZN_3423,CZ_3412,CZN_3417,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2492,N_3411,r0_2490,r1_2498,r10_3416,r11_2501,r2_2502,r3_2491,r4_2493,r5_2486,r6_2489,r7_2497,r8_2496,r9_2494,sp_3420,V_3419,VZN_3414,Z_3410,ZN_3409
		defs: ap_3430,C_3426,CVZN_3434,CZ_3445,CZN_3433,fp_3438,N_3429,r0_3436,r1_3444,r10_3441,r11_3447,r2_3431,r3_3437,r4_3439,r5_3432,r6_3435,r7_3443,r8_3442,r9_3440,sp_3424,V_3427,VZN_3446,Z_3428,ZN_3425
	Mem3452[fp_3438 + -74:byte] = 0x00
	word32 r4_3449 = (uint32) (word16) r0_3436 & ~0xFFFFFFF8
	branch r4_3449 <= 0x00000003 l00014209
// DataOut: ap fp r0 r10 r11 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014206:
// DataOut: ap fp r0 r10 r11 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014209:
	word32 r3_3495
	Mem3457[sp_3424 - 0x00000004:word32] = 0x00000004
	Mem3460[sp_3424 - 0x00000008:word32] = r8_3442 + 105
	Mem3462[sp_3424 - 0x0000000C:word32] = r7_3443
	byte ZN_3467
	bool C_3468
	bool V_3469
	bool Z_3470
	bool N_3471
	word32 ap_3472
	word32 r2_3473
	word32 r5_3474
	byte CZN_3475
	byte CVZN_3476
	word32 r6_3477
	word32 r0_3478
	word32 r3_3479
	word32 r4_3481
	word32 r9_3482
	word32 r10_3483
	word32 r8_3484
	word32 r1_3486
	byte CZ_3487
	byte VZN_3488
	word32 r11_3489
	word32 r7_3485
	word32 sp_3466
	word32 fp_3480
	call Mem3462[sp_3424 + 0x0000002C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_3430,C_3464,CVZN_3434,CZ_3445,CZN_3453,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3438,N_3429,r0_3436,r1_3444,r10_3441,r11_3447,r2_3450,r3_3437,r4_3449,r5_3432,r6_3435,r7_3443,r8_3442,r9_3440,sp_3461,V_3465,VZN_3446,Z_3428,ZN_3463
		defs: ap_3472,C_3468,CVZN_3476,CZ_3487,CZN_3475,fp_3480,N_3471,r0_3478,r1_3486,r10_3483,r11_3489,r2_3473,r3_3479,r4_3481,r5_3474,r6_3477,r7_3485,r8_3484,r9_3482,sp_3466,V_3469,VZN_3488,Z_3470,ZN_3467
	branch r0_3478 != 0x00000000 l00014220
// DataOut: ap fp r0 r10 r11 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014220:
	Mem3612[sp_3466 - 0x00000004:word32] = 0x00000004
	Mem3615[sp_3466 - 0x00000008:word32] = r8_3484 + 114
	Mem3617[sp_3466 - 0x0000000C:word32] = r7_3485
	byte ZN_3622
	bool C_3623
	bool V_3624
	bool Z_3625
	bool N_3626
	word32 ap_3627
	word32 r2_3628
	word32 r5_3629
	byte CZN_3630
	byte CVZN_3631
	word32 r6_3632
	word32 r0_3633
	word32 r3_3634
	word32 r4_3636
	word32 r9_3637
	word32 r10_3638
	word32 r8_3639
	word32 r1_3641
	byte CZ_3642
	byte VZN_3643
	word32 r11_3644
	call Mem3617[sp_3466 + 0x0000002C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_3472,C_3619,CVZN_3476,CZ_3487,CZN_3475,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3480,N_3471,r0_3478,r1_3486,r10_3483,r11_3489,r2_3473,r3_3479,r4_3481,r5_3474,r6_3477,r7_3485,r8_3484,r9_3482,sp_3616,V_3620,VZN_3488,Z_3491,ZN_3618
		defs: ap_3627,C_3623,CVZN_3631,CZ_3642,CZN_3630,fp_3635,N_3626,r0_3633,r1_3641,r10_3638,r11_3644,r2_3628,r3_3634,r4_3636,r5_3629,r6_3632,r7_3640,r8_3639,r9_3637,sp_3621,V_3624,VZN_3643,Z_3625,ZN_3622
	branch r0_3633 != 0x00000000 l00014238
// DataOut: ap fp r0 r10 r11 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014238:
	Mem3654[sp_3466 - 0x00000004:word32] = 0x00000004
	Mem3657[sp_3466 - 0x00000008:word32] = r8_3639 + 126
	Mem3659[sp_3466 - 0x0000000C:word32] = r7_3485
	byte ZN_3664
	bool C_3665
	bool V_3666
	bool Z_3667
	bool N_3668
	word32 ap_3669
	word32 r2_3670
	word32 r5_3671
	byte CZN_3672
	byte CVZN_3673
	word32 r6_3674
	word32 r0_3675
	word32 r3_3676
	word32 r4_3678
	word32 r9_3679
	word32 r10_3680
	word32 r8_3681
	word32 r1_3683
	byte CZ_3684
	byte VZN_3685
	word32 r11_3686
	call Mem3659[sp_3466 + 0x0000002C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_3627,C_3661,CVZN_3631,CZ_3642,CZN_3630,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3635,N_3626,r0_3633,r1_3641,r10_3638,r11_3644,r2_3628,r3_3634,r4_3636,r5_3629,r6_3632,r7_3640,r8_3639,r9_3637,sp_3658,V_3662,VZN_3643,Z_3646,ZN_3660
		defs: ap_3669,C_3665,CVZN_3673,CZ_3684,CZN_3672,fp_3677,N_3668,r0_3675,r1_3683,r10_3680,r11_3686,r2_3670,r3_3676,r4_3678,r5_3671,r6_3674,r7_3682,r8_3681,r9_3679,sp_3663,V_3666,VZN_3685,Z_3667,ZN_3664
	branch r0_3675 != 0x00000000 l00014250
// DataOut: ap fp r0 r10 r11 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014250:
	Mem3696[sp_3466 - 0x00000004:word32] = 0x00000004
	Mem3699[sp_3466 - 0x00000008:word32] = r8_3681 + 138
	Mem3701[sp_3466 - 0x0000000C:word32] = r7_3485
	byte ZN_3706
	bool C_3707
	bool V_3708
	bool Z_3709
	bool N_3710
	word32 ap_3711
	word32 r2_3712
	word32 r5_3713
	byte CZN_3714
	byte CVZN_3715
	word32 r6_3716
	word32 r0_3717
	word32 r3_3718
	word32 r4_3720
	word32 r9_3721
	word32 r10_3722
	word32 r8_3723
	word32 r1_3725
	byte CZ_3726
	byte VZN_3727
	word32 r11_3728
	call Mem3701[sp_3466 + 0x0000002C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_3669,C_3703,CVZN_3673,CZ_3684,CZN_3672,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3677,N_3668,r0_3675,r1_3683,r10_3680,r11_3686,r2_3670,r3_3676,r4_3678,r5_3671,r6_3674,r7_3682,r8_3681,r9_3679,sp_3700,V_3704,VZN_3685,Z_3688,ZN_3702
		defs: ap_3711,C_3707,CVZN_3715,CZ_3726,CZN_3714,fp_3719,N_3710,r0_3717,r1_3725,r10_3722,r11_3728,r2_3712,r3_3718,r4_3720,r5_3713,r6_3716,r7_3724,r8_3723,r9_3721,sp_3705,V_3708,VZN_3727,Z_3709,ZN_3706
	branch r0_3717 != 0x00000000 l00014268
// DataOut: ap fp r0 r10 r11 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014268:
	Mem3738[sp_3466 - 0x00000004:word32] = 0x00000004
	Mem3741[sp_3466 - 0x00000008:word32] = r8_3723 + 150
	Mem3743[sp_3466 - 0x0000000C:word32] = r7_3485
	byte ZN_3748
	bool C_3749
	bool V_3750
	bool Z_3751
	bool N_3752
	word32 ap_3753
	word32 r2_3754
	word32 r5_3755
	byte CZN_3756
	byte CVZN_3757
	word32 r6_3758
	word32 r0_3759
	word32 r3_3760
	word32 r4_3762
	word32 r9_3763
	word32 r10_3764
	word32 r8_3765
	word32 r1_3767
	byte CZ_3768
	byte VZN_3769
	word32 r11_3770
	call Mem3743[sp_3466 + 0x0000002C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_3711,C_3745,CVZN_3715,CZ_3726,CZN_3714,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3719,N_3710,r0_3717,r1_3725,r10_3722,r11_3728,r2_3712,r3_3718,r4_3720,r5_3713,r6_3716,r7_3724,r8_3723,r9_3721,sp_3742,V_3746,VZN_3727,Z_3730,ZN_3744
		defs: ap_3753,C_3749,CVZN_3757,CZ_3768,CZN_3756,fp_3761,N_3752,r0_3759,r1_3767,r10_3764,r11_3770,r2_3754,r3_3760,r4_3762,r5_3755,r6_3758,r7_3766,r8_3765,r9_3763,sp_3747,V_3750,VZN_3769,Z_3751,ZN_3748
	branch r0_3759 != 0x00000000 l00014280
// DataOut: ap fp r0 r10 r11 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014280:
	Mem3780[sp_3466 - 0x00000004:word32] = 0x00000004
	Mem3783[sp_3466 - 0x00000008:word32] = r8_3765 + 162
	Mem3785[sp_3466 - 0x0000000C:word32] = r7_3485
	byte ZN_3790
	bool C_3791
	bool V_3792
	bool Z_3793
	bool N_3794
	word32 ap_3795
	word32 r2_3796
	word32 r5_3797
	byte CZN_3798
	byte CVZN_3799
	word32 r6_3800
	word32 r0_3801
	word32 r3_3802
	word32 r4_3804
	word32 r9_3805
	word32 r10_3806
	word32 r8_3807
	word32 r1_3809
	byte CZ_3810
	byte VZN_3811
	word32 r11_3812
	call Mem3785[sp_3466 + 0x0000002C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_3753,C_3787,CVZN_3757,CZ_3768,CZN_3756,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3761,N_3752,r0_3759,r1_3767,r10_3764,r11_3770,r2_3754,r3_3760,r4_3762,r5_3755,r6_3758,r7_3766,r8_3765,r9_3763,sp_3784,V_3788,VZN_3769,Z_3772,ZN_3786
		defs: ap_3795,C_3791,CVZN_3799,CZ_3810,CZN_3798,fp_3803,N_3794,r0_3801,r1_3809,r10_3806,r11_3812,r2_3796,r3_3802,r4_3804,r5_3797,r6_3800,r7_3808,r8_3807,r9_3805,sp_3789,V_3792,VZN_3811,Z_3793,ZN_3790
	branch r0_3801 != 0x00000000 l00014298
// DataOut: ap fp r0 r10 r11 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014298:
	Mem3822[sp_3466 - 0x00000004:word32] = 0x00000004
	Mem3825[sp_3466 - 0x00000008:word32] = r8_3807 + 174
	Mem3827[sp_3466 - 0x0000000C:word32] = r7_3485
	byte ZN_3832
	bool C_3833
	bool V_3834
	bool Z_3835
	bool N_3836
	word32 ap_3837
	word32 r2_3838
	word32 r5_3839
	byte CZN_3840
	byte CVZN_3841
	word32 r6_3842
	word32 r0_3843
	word32 r3_3844
	word32 r4_3846
	word32 r9_3847
	word32 r10_3848
	word32 r8_3849
	word32 r1_3851
	byte CZ_3852
	byte VZN_3853
	word32 r11_3854
	call Mem3827[sp_3466 + 0x0000002C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_3795,C_3829,CVZN_3799,CZ_3810,CZN_3798,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3803,N_3794,r0_3801,r1_3809,r10_3806,r11_3812,r2_3796,r3_3802,r4_3804,r5_3797,r6_3800,r7_3808,r8_3807,r9_3805,sp_3826,V_3830,VZN_3811,Z_3814,ZN_3828
		defs: ap_3837,C_3833,CVZN_3841,CZ_3852,CZN_3840,fp_3845,N_3836,r0_3843,r1_3851,r10_3848,r11_3854,r2_3838,r3_3844,r4_3846,r5_3839,r6_3842,r7_3850,r8_3849,r9_3847,sp_3831,V_3834,VZN_3853,Z_3835,ZN_3832
	branch r0_3843 != 0x00000000 l000142B0
// DataOut: ap fp r0 r10 r11 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000142B0:
	Mem3864[sp_3466 - 0x00000004:word32] = 0x00000004
	Mem3867[sp_3466 - 0x00000008:word32] = r8_3849 + 186
	Mem3869[sp_3466 - 0x0000000C:word32] = r7_3485
	byte ZN_3874
	bool C_3875
	bool V_3876
	bool Z_3877
	bool N_3878
	word32 ap_3879
	word32 r2_3880
	word32 r5_3881
	byte CZN_3882
	byte CVZN_3883
	word32 r6_3884
	word32 r0_3885
	word32 r3_3886
	word32 r4_3888
	word32 r9_3889
	word32 r10_3890
	word32 r8_3891
	word32 r1_3893
	byte CZ_3894
	byte VZN_3895
	word32 r11_3896
	call Mem3869[sp_3466 + 0x0000002C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_3837,C_3871,CVZN_3841,CZ_3852,CZN_3840,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3845,N_3836,r0_3843,r1_3851,r10_3848,r11_3854,r2_3838,r3_3844,r4_3846,r5_3839,r6_3842,r7_3850,r8_3849,r9_3847,sp_3868,V_3872,VZN_3853,Z_3856,ZN_3870
		defs: ap_3879,C_3875,CVZN_3883,CZ_3894,CZN_3882,fp_3887,N_3878,r0_3885,r1_3893,r10_3890,r11_3896,r2_3880,r3_3886,r4_3888,r5_3881,r6_3884,r7_3892,r8_3891,r9_3889,sp_3873,V_3876,VZN_3895,Z_3877,ZN_3874
	branch r0_3885 != 0x00000000 l000142F0
// DataOut: ap fp r0 r10 r11 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000142F0:
	r3_3495 = r8_3891 + 199
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000142C0:
	r3_3495 = r8_3891 + 191
	branch r10_3890 <u 0x00000010 l000142F5
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000142CA:
	Mem3906[fp_3480 + -74:byte] = 0x20
	Mem3908[fp_3480 + -73:byte] = 0x28
	Mem3910[sp_3466 - 0x00000004:word32] = 0x00000004
	Mem3913[sp_3466 - 0x00000008:word32] = r7_3485 + 0x0000000C
	Mem3917[sp_3466 - 0x0000000C:word32] = fp_3480 + 0xFFFFFFB8
	byte ZN_3920
	bool C_3921
	bool V_3922
	bool Z_3923
	bool N_3924
	word32 ap_3925
	word32 r2_3926
	word32 r5_3927
	byte CZN_3928
	byte CVZN_3929
	word32 r6_3930
	word32 r0_3931
	word32 r4_3934
	word32 r9_3935
	word32 r10_3936
	word32 r8_3937
	word32 r1_3939
	byte CZ_3940
	byte VZN_3941
	word32 r11_3942
	call Mem3917[0x000192C0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_3879,C_3903,CVZN_3918,CZ_3894,CZN_3902,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3887,N_3878,r0_3885,r1_3893,r10_3890,r11_3896,r2_3914,r3_3901,r4_3888,r5_3881,r6_3884,r7_3892,r8_3891,r9_3889,sp_3915,V_3904,VZN_3895,Z_3898,ZN_3897
		defs: ap_3925,C_3921,CVZN_3929,CZ_3940,CZN_3928,fp_3933,N_3924,r0_3931,r1_3939,r10_3936,r11_3942,r2_3926,r3_3932,r4_3934,r5_3927,r6_3930,r7_3938,r8_3937,r9_3935,sp_3919,V_3922,VZN_3941,Z_3923,ZN_3920
	Mem3944[fp_3480 + -68:byte] = 0x29
	Mem3946[fp_3480 + -67:byte] = 0x00
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000142A8:
	r3_3495 = r8_3849 + 179
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014290:
	r3_3495 = r8_3807 + 167
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014278:
	r3_3495 = r8_3765 + 155
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014260:
	r3_3495 = r8_3723 + 143
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014247:
	r3_3495 = r8_3681 + 131
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001422F:
	r3_3495 = r8_3639 + 119
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014218:
	r3_3495 = r8_3484 + 110
// DataOut: ap fp r0 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000142F5:
	word32 sp_3498 = sp_3466 - 0x00000004
	Mem3499[sp_3498:word32] = 0x00000000
	Mem3502[sp_3498 - 0x00000004:word32] = fp_3480 + -74
	Mem3504[sp_3498 - 0x00000008:word32] = r3_3495
	Mem3507[sp_3498 - 0x0000000C:word32] = r7_3485 + 0x00000006
	word32 sp_3509
	byte ZN_3510
	bool C_3511
	bool V_3512
	bool Z_3513
	bool N_3514
	word32 ap_3515
	word32 r2_3516
	word32 r5_3517
	byte CZN_3518
	byte CVZN_3519
	word32 r6_3520
	word32 r0_3521
	word32 r3_3522
	word32 fp_3523
	word32 r4_3524
	word32 r9_3525
	word32 r10_3526
	word32 r8_3527
	word32 r7_3528
	word32 r1_3529
	byte CZ_3530
	byte VZN_3531
	word32 r11_3532
	call Mem3507[sp_3498 + 0x00000024:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_3472,C_3492,CVZN_3508,CZ_3487,CZN_3475,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3497,N_3471,r0_3478,r1_3486,r10_3483,r11_3489,r2_3473,r3_3495,r4_3481,r5_3474,r6_3477,r7_3494,r8_3484,r9_3482,sp_3505,V_3493,VZN_3488,Z_3491,ZN_3490
		defs: ap_3515,C_3511,CVZN_3519,CZ_3530,CZN_3518,fp_3523,N_3514,r0_3521,r1_3529,r10_3526,r11_3532,r2_3516,r3_3522,r4_3524,r5_3517,r6_3520,r7_3528,r8_3527,r9_3525,sp_3509,V_3512,VZN_3531,Z_3513,ZN_3510
	Mem3535[sp_3509 - 0x00000004:uint32] = (uint32) (word16) r0_3521
	Mem3538[sp_3509 - 0x00000008:word32] = Mem3535[r6_3520 + 4164 + r4_3524 * 4:word32]
	Mem3541[sp_3509 - 0x0000000C:word32] = r6_3520 + 4043
	Mem3544[sp_3509 - 0x00000010:word32] = r5_3517 + 1515
	word32 sp_3548
	byte ZN_3549
	bool C_3550
	bool V_3551
	bool Z_3552
	bool N_3553
	word32 ap_3554
	word32 r2_3555
	word32 r5_3556
	byte CZN_3557
	byte CVZN_3558
	word32 r6_3559
	word32 r0_3560
	word32 r3_3561
	word32 fp_3562
	word32 r4_3563
	word32 r9_3564
	word32 r10_3565
	word32 r8_3566
	word32 r7_3567
	word32 r1_3568
	byte CZ_3569
	byte VZN_3570
	word32 r11_3571
	call r9_3525 + 2 (retsize: 4; depth: 4)
		uses: ap_3515,C_3546,CVZN_3519,CZ_3530,CZN_3518,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3523,N_3514,r0_3521,r1_3529,r10_3526,r11_3532,r2_3516,r3_3522,r4_3524,r5_3517,r6_3520,r7_3528,r8_3527,r9_3525,sp_3542,V_3547,VZN_3531,Z_3513,ZN_3545
		defs: ap_3554,C_3550,CVZN_3558,CZ_3569,CZN_3557,fp_3562,N_3553,r0_3560,r1_3568,r10_3565,r11_3571,r2_3555,r3_3561,r4_3563,r5_3556,r6_3559,r7_3567,r8_3566,r9_3564,sp_3548,V_3551,VZN_3570,Z_3552,ZN_3549
	Mem3573[sp_3548 - 0x00000004:word32] = r0_3560
	Mem3576[sp_3548 - 0x00000008:word32] = r5_3556 + 1515
	Mem3578[sp_3548 - 0x0000000C:word32] = r5_3556
	word32 r2_3579 = Mem3578[r5_3556 + 0x0000C839:word32]
	byte ZN_3584
	bool C_3585
	bool V_3586
	bool Z_3587
	bool N_3588
	word32 ap_3589
	word32 r2_3590
	byte CZN_3592
	byte CVZN_3593
	word32 r6_3594
	word32 r0_3595
	word32 r3_3596
	word32 fp_3597
	word32 r4_3598
	word32 r9_3599
	word32 r10_3600
	word32 r7_3602
	word32 r1_3603
	byte CZ_3604
	byte VZN_3605
	word32 r11_3606
	call r2_3579 + 2 (retsize: 4; depth: 4)
		uses: ap_3554,C_3581,CVZN_3558,CZ_3569,CZN_3557,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3562,N_3553,r0_3560,r1_3568,r10_3565,r11_3571,r2_3579,r3_3561,r4_3563,r5_3556,r6_3559,r7_3567,r8_3566,r9_3564,sp_3577,V_3582,VZN_3570,Z_3552,ZN_3580
		defs: ap_3589,C_3585,CVZN_3593,CZ_3604,CZN_3592,fp_3597,N_3588,r0_3595,r1_3603,r10_3600,r11_3606,r2_3590,r3_3596,r4_3598,r5_3591,r6_3594,r7_3602,r8_3601,r9_3599,sp_3583,V_3586,VZN_3605,Z_3587,ZN_3584
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000141E5:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001410A:
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140FC:
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140F0:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014588:
	branch (uint32) Mem2473[sp_2478 + 40:word16] <u 0x00000013 l000145DC
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014591:
	word32 r2_3273 = 0x00000000
	r7_3278 = r7_2497
	fp_3282 = fp_2492
// DataOut: ap fp r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014594:
	word32 r7_3278
	word32 fp_3282
	word32 sp_3284 = sp_2478 - 0x00000004
	Mem3286[sp_3284:uint32] = (uint32) Mem2473[r7_3278 + (0x0000000F - r2_3273):byte]
	Mem3289[sp_3284 - 0x00000004:word32] = r8_2496 + 217
	word32 r0_3290 = r2_3273 << 1
	Mem3293[sp_3284 - 0x00000008:word32] = fp_3282 + -188 + r0_3290 * 4
	byte ZN_3298
	bool C_3299
	bool V_3300
	bool Z_3301
	bool N_3302
	word32 ap_3303
	word32 r2_3304
	word32 r5_3305
	byte CZN_3306
	byte CVZN_3307
	word32 r6_3308
	word32 r0_3309
	word32 r3_3310
	word32 r4_3312
	word32 r9_3313
	word32 r10_3314
	word32 r1_3317
	byte CZ_3318
	byte VZN_3319
	word32 r11_3320
	call r9_2494 + 2 (retsize: 4; depth: 4)
		uses: ap_2484,C_3295,CVZN_3268,CZ_3265,CZN_3270,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3282,N_3275,r0_3290,r1_2498,r10_2495,r11_2501,r2_3280,r3_2491,r4_2493,r5_2486,r6_2489,r7_3278,r8_3279,r9_2494,sp_3291,V_3296,VZN_3267,Z_3274,ZN_3294
		defs: ap_3303,C_3299,CVZN_3307,CZ_3318,CZN_3306,fp_3311,N_3302,r0_3309,r1_3317,r10_3314,r11_3320,r2_3304,r3_3310,r4_3312,r5_3305,r6_3308,r7_3316,r8_3315,r9_3313,sp_3297,V_3300,VZN_3319,Z_3301,ZN_3298
	r2_3273 = r2_3304 + 0x00000001
	branch r2_3304 <= 0xFFFFFFF2 l00014594
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000145B0:
	Mem3324[fp_3282 + -156:byte] = 0x00
	Mem3326[sp_2478 - 0x00000004:word32] = 0x00000000
	Mem3329[sp_2478 - 0x00000008:word32] = fp_3282 + -188
	Mem3332[sp_2478 - 0x0000000C:word32] = r6_3308 + 4687
	Mem3335[sp_2478 - 0x00000010:word32] = r5_3305 + 1515
	word32 sp_3339
	byte ZN_3340
	bool C_3341
	bool V_3342
	bool Z_3343
	bool N_3344
	word32 ap_3345
	word32 r2_3346
	word32 r5_3347
	byte CZN_3348
	byte CVZN_3349
	word32 r6_3350
	word32 r0_3351
	word32 r3_3352
	word32 fp_3353
	word32 r4_3354
	word32 r9_3355
	word32 r10_3356
	word32 r8_3357
	word32 r7_3358
	word32 r1_3359
	byte CZ_3360
	byte VZN_3361
	word32 r11_3362
	call r9_3313 + 2 (retsize: 4; depth: 4)
		uses: ap_3303,C_3337,CVZN_3322,CZ_3318,CZN_3306,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3311,N_3302,r0_3309,r1_3317,r10_3314,r11_3320,r2_3321,r3_3310,r4_3312,r5_3305,r6_3308,r7_3316,r8_3315,r9_3313,sp_3333,V_3338,VZN_3319,Z_3301,ZN_3336
		defs: ap_3345,C_3341,CVZN_3349,CZ_3360,CZN_3348,fp_3353,N_3344,r0_3351,r1_3359,r10_3356,r11_3362,r2_3346,r3_3352,r4_3354,r5_3347,r6_3350,r7_3358,r8_3357,r9_3355,sp_3339,V_3342,VZN_3361,Z_3343,ZN_3340
	Mem3364[sp_3339 - 0x00000004:word32] = r0_3351
	Mem3367[sp_3339 - 0x00000008:word32] = r5_3347 + 1515
	Mem3369[sp_3339 - 0x0000000C:word32] = r5_3347
	word32 r2_3370 = Mem3369[r5_3347 + 0x0000C839:word32]
	byte ZN_3375
	bool C_3376
	bool V_3377
	bool Z_3378
	bool N_3379
	word32 ap_3380
	word32 r2_3381
	byte CZN_3383
	byte CVZN_3384
	word32 r6_3385
	word32 r0_3386
	word32 r3_3387
	word32 fp_3388
	word32 r4_3389
	word32 r9_3390
	word32 r10_3391
	word32 r7_3393
	word32 r1_3394
	byte CZ_3395
	byte VZN_3396
	word32 r11_3397
	call r2_3370 + 2 (retsize: 4; depth: 4)
		uses: ap_3345,C_3372,CVZN_3349,CZ_3360,CZN_3348,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3353,N_3344,r0_3351,r1_3359,r10_3356,r11_3362,r2_3370,r3_3352,r4_3354,r5_3347,r6_3350,r7_3358,r8_3357,r9_3355,sp_3368,V_3373,VZN_3361,Z_3343,ZN_3371
		defs: ap_3380,C_3376,CVZN_3384,CZ_3395,CZN_3383,fp_3388,N_3379,r0_3386,r1_3394,r10_3391,r11_3397,r2_3381,r3_3387,r4_3389,r5_3382,r6_3385,r7_3393,r8_3392,r9_3390,sp_3374,V_3377,VZN_3396,Z_3378,ZN_3375
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140EB:
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140DF:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000141A0:
	word32 r0_3149 = (uint32) Mem2473[sp_2478 + 40:word16]
	branch r0_3149 >=u 0x00000004 l000141AC
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000141AC:
	Mem3154[sp_2478 - 0x00000004:word32] = 0x00000000
	Mem3156[sp_2478 - 0x00000008:word32] = r7_2497
	word32 sp_3160
	byte ZN_3161
	bool C_3162
	bool V_3163
	bool Z_3164
	bool N_3165
	word32 ap_3166
	word32 r2_3167
	word32 r5_3168
	byte CZN_3169
	byte CVZN_3170
	word32 r6_3171
	word32 r0_3172
	word32 r3_3173
	word32 fp_3174
	word32 r4_3175
	word32 r9_3176
	word32 r10_3177
	word32 r8_3178
	word32 r7_3179
	word32 r1_3180
	byte CZ_3181
	byte VZN_3182
	word32 r11_3183
	call Mem3156[sp_2478 + 0x0000001C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2484,C_3158,CVZN_3148,CZ_3145,CZN_3150,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2492,N_3144,r0_3149,r1_2498,r10_2495,r11_2501,r2_2502,r3_2491,r4_2493,r5_2486,r6_2489,r7_2497,r8_2496,r9_2494,sp_3155,V_3159,VZN_3147,Z_3143,ZN_3157
		defs: ap_3166,C_3162,CVZN_3170,CZ_3181,CZN_3169,fp_3174,N_3165,r0_3172,r1_3180,r10_3177,r11_3183,r2_3167,r3_3173,r4_3175,r5_3168,r6_3171,r7_3179,r8_3178,r9_3176,sp_3160,V_3163,VZN_3182,Z_3164,ZN_3161
	Mem3185[sp_3160 - 0x00000004:word32] = r0_3172
	Mem3188[sp_3160 - 0x00000008:word32] = r6_3171 + 4257
	Mem3191[sp_3160 - 0x0000000C:word32] = r5_3168 + 1515
	word32 sp_3195
	byte ZN_3196
	bool C_3197
	bool V_3198
	bool Z_3199
	bool N_3200
	word32 ap_3201
	word32 r2_3202
	word32 r5_3203
	byte CZN_3204
	byte CVZN_3205
	word32 r6_3206
	word32 r0_3207
	word32 r3_3208
	word32 fp_3209
	word32 r4_3210
	word32 r9_3211
	word32 r10_3212
	word32 r8_3213
	word32 r7_3214
	word32 r1_3215
	byte CZ_3216
	byte VZN_3217
	word32 r11_3218
	call r9_3176 + 2 (retsize: 4; depth: 4)
		uses: ap_3166,C_3193,CVZN_3170,CZ_3181,CZN_3169,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3174,N_3165,r0_3172,r1_3180,r10_3177,r11_3183,r2_3167,r3_3173,r4_3175,r5_3168,r6_3171,r7_3179,r8_3178,r9_3176,sp_3189,V_3194,VZN_3182,Z_3164,ZN_3192
		defs: ap_3201,C_3197,CVZN_3205,CZ_3216,CZN_3204,fp_3209,N_3200,r0_3207,r1_3215,r10_3212,r11_3218,r2_3202,r3_3208,r4_3210,r5_3203,r6_3206,r7_3214,r8_3213,r9_3211,sp_3195,V_3198,VZN_3217,Z_3199,ZN_3196
	Mem3220[sp_3195 - 0x00000004:word32] = r0_3207
	Mem3223[sp_3195 - 0x00000008:word32] = r5_3203 + 1515
	Mem3225[sp_3195 - 0x0000000C:word32] = r5_3203
	word32 r2_3226 = Mem3225[r5_3203 + 0x0000C839:word32]
	byte ZN_3231
	bool C_3232
	bool V_3233
	bool Z_3234
	bool N_3235
	word32 ap_3236
	word32 r2_3237
	byte CZN_3239
	byte CVZN_3240
	word32 r6_3241
	word32 r0_3242
	word32 r3_3243
	word32 fp_3244
	word32 r4_3245
	word32 r9_3246
	word32 r10_3247
	word32 r7_3249
	word32 r1_3250
	byte CZ_3251
	byte VZN_3252
	word32 r11_3253
	call r2_3226 + 2 (retsize: 4; depth: 4)
		uses: ap_3201,C_3228,CVZN_3205,CZ_3216,CZN_3204,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3209,N_3200,r0_3207,r1_3215,r10_3212,r11_3218,r2_3226,r3_3208,r4_3210,r5_3203,r6_3206,r7_3214,r8_3213,r9_3211,sp_3224,V_3229,VZN_3217,Z_3199,ZN_3227
		defs: ap_3236,C_3232,CVZN_3240,CZ_3251,CZN_3239,fp_3244,N_3235,r0_3242,r1_3250,r10_3247,r11_3253,r2_3237,r3_3243,r4_3245,r5_3238,r6_3241,r7_3249,r8_3248,r9_3246,sp_3230,V_3233,VZN_3252,Z_3234,ZN_3231
	Mem3255[Mem3255[ap_3236 + 4:word32]:word32] = 0x00000000
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000141A9:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140DA:
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140CE:
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014404:
	word32 r3_2978 = (uint32) Mem2473[sp_2478 + 40:word16]
	branch r3_2978 >=u 0x00000005 l00014410
// DataOut: ap fp r0 r11 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014410:
	Mem2983[sp_2478 - 0x00000004:word32] = 0x00000004
	Mem2986[sp_2478 - 0x00000008:word32] = r8_2496 + 209
	Mem2988[sp_2478 - 0x0000000C:word32] = r7_2497
	byte ZN_2993
	bool C_2994
	bool V_2995
	bool Z_2996
	bool N_2997
	word32 ap_2998
	word32 r2_2999
	byte CZN_3001
	byte CVZN_3002
	word32 r6_3003
	word32 r0_3004
	word32 r3_3005
	word32 fp_3006
	word32 r4_3007
	word32 r9_3008
	word32 r10_3009
	word32 r7_3011
	word32 r1_3012
	byte CZ_3013
	byte VZN_3014
	word32 r11_3015
	call fn00000002 (retsize: 4; depth: 4)
		uses: ap_2484,C_2990,CVZN_2977,CZ_2974,CZN_2979,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2492,N_2973,r0_2490,r1_2498,r10_2495,r11_2501,r2_2502,r3_2978,r4_2493,r5_2486,r6_2489,r7_2497,r8_2496,r9_2494,sp_2987,V_2991,VZN_2976,Z_2972,ZN_2989
		defs: ap_2998,C_2994,CVZN_3002,CZ_3013,CZN_3001,fp_3006,N_2997,r0_3004,r1_3012,r10_3009,r11_3015,r2_2999,r3_3005,r4_3007,r5_3000,r6_3003,r7_3011,r8_3010,r9_3008,sp_2992,V_2995,VZN_3014,Z_2996,ZN_2993
	branch r0_3004 == 0x00000000 l00014423
// DataOut: ap fp r11 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014423:
	word32 r4_3020 = (uint32) Mem2988[r7_3011 + 4:byte]
	branch r3_3005 >=u r4_3020 + 0x0000000D l00014433
// DataOut: ap fp r11 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014433:
	word32 r0_3026 = (uint32) Mem2988[r7_3011 + (r4_3020 + 0x00000005):byte]
	Mem3028[fp_3006 + -155:int8] = (int8) r0_3026
	Mem3030[r7_3011:byte] = 0x00
	Mem3032[sp_2478 - 0x00000004:word32] = 0x00000000
	Mem3036[sp_2478 - 0x00000008:uint32] = (uint32) Mem3032[r7_3011 + (r4_3020 + 0x0000000C):byte]
	Mem3040[sp_2478 - 0x0000000C:uint32] = (uint32) Mem3036[r7_3011 + (r4_3020 + 0x0000000B):byte]
	Mem3044[sp_2478 - 0x00000010:uint32] = (uint32) Mem3040[r7_3011 + (r4_3020 + 0x0000000A):byte]
	Mem3048[sp_2478 - 0x00000014:uint32] = (uint32) Mem3044[r7_3011 + (r4_3020 + 0x00000009):byte]
	Mem3052[sp_2478 - 0x00000018:uint32] = (uint32) Mem3048[r7_3011 + (r4_3020 + 0x00000008):byte]
	Mem3056[sp_2478 - 0x0000001C:uint32] = (uint32) Mem3052[r7_3011 + (r4_3020 + 0x00000007):byte]
	Mem3060[sp_2478 - 0x00000020:uint32] = (uint32) Mem3056[r7_3011 + (r4_3020 + 0x00000006):byte]
	Mem3063[sp_2478 - 0x00000024:int32] = (int32) Mem3060[fp_3006 + -155:int8]
	Mem3066[sp_2478 - 0x00000028:word32] = r7_3011 + 0x00000005
	Mem3069[sp_2478 - 0x0000002C:word32] = r6_3003 + 4409
	Mem3072[sp_2478 - 0x00000030:word32] = r5_2486 + 1515
	word32 sp_3076
	byte ZN_3077
	bool C_3078
	bool V_3079
	bool Z_3080
	bool N_3081
	word32 ap_3082
	word32 r2_3083
	word32 r5_3084
	byte CZN_3085
	byte CVZN_3086
	word32 r6_3087
	word32 r0_3088
	word32 r3_3089
	word32 fp_3090
	word32 r4_3091
	word32 r9_3092
	word32 r10_3093
	word32 r8_3094
	word32 r7_3095
	word32 r1_3096
	byte CZ_3097
	byte VZN_3098
	word32 r11_3099
	call r9_3008 + 2 (retsize: 4; depth: 4)
		uses: ap_2998,C_3074,CVZN_3002,CZ_3013,CZN_3022,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3006,N_2997,r0_3026,r1_3012,r10_3009,r11_3015,r2_3053,r3_3025,r4_3057,r5_3000,r6_3003,r7_3011,r8_3010,r9_3008,sp_3070,V_3075,VZN_3014,Z_3017,ZN_3073
		defs: ap_3082,C_3078,CVZN_3086,CZ_3097,CZN_3085,fp_3090,N_3081,r0_3088,r1_3096,r10_3093,r11_3099,r2_3083,r3_3089,r4_3091,r5_3084,r6_3087,r7_3095,r8_3094,r9_3092,sp_3076,V_3079,VZN_3098,Z_3080,ZN_3077
	Mem3101[sp_3076 - 0x00000004:word32] = r0_3088
	Mem3104[sp_3076 - 0x00000008:word32] = r5_3084 + 1515
	Mem3106[sp_3076 - 0x0000000C:word32] = r5_3084
	word32 r2_3107 = Mem3106[r5_3084 + 0x0000C839:word32]
	byte ZN_3112
	bool C_3113
	bool V_3114
	bool Z_3115
	bool N_3116
	word32 ap_3117
	word32 r2_3118
	byte CZN_3120
	byte CVZN_3121
	word32 r6_3122
	word32 r0_3123
	word32 r3_3124
	word32 fp_3125
	word32 r4_3126
	word32 r9_3127
	word32 r10_3128
	word32 r7_3130
	word32 r1_3131
	byte CZ_3132
	byte VZN_3133
	word32 r11_3134
	call r2_3107 + 2 (retsize: 4; depth: 4)
		uses: ap_3082,C_3109,CVZN_3086,CZ_3097,CZN_3085,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_3090,N_3081,r0_3088,r1_3096,r10_3093,r11_3099,r2_3107,r3_3089,r4_3091,r5_3084,r6_3087,r7_3095,r8_3094,r9_3092,sp_3105,V_3110,VZN_3098,Z_3080,ZN_3108
		defs: ap_3117,C_3113,CVZN_3121,CZ_3132,CZN_3120,fp_3125,N_3116,r0_3123,r1_3131,r10_3128,r11_3134,r2_3118,r3_3124,r4_3126,r5_3119,r6_3122,r7_3130,r8_3129,r9_3127,sp_3111,V_3114,VZN_3133,Z_3115,ZN_3112
	Mem3136[r7_3130:byte] = Mem3106[fp_3125 + -155:byte]
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014430:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014420:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001440D:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140C9:
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140BD:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014154:
	branch (uint32) Mem2473[sp_2478 + 40:word16] >=u 0x00000004 l00014160
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014160:
	word32 r0_2851 = (uint32) Mem2473[sp_2478 + 18:word16]
	branch r0_2851 != 0x00000009 l00014170
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014170:
// DataOut: ap fp r0 r11 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014169:
// DataOut: ap fp r0 r11 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014175:
	Mem2856[sp_2478 - 0x00000004:word32] = 0x00000000
	Mem2858[sp_2478 - 0x00000008:word32] = r7_2497
	word32 sp_2862
	byte ZN_2863
	bool C_2864
	bool V_2865
	bool Z_2866
	bool N_2867
	word32 ap_2868
	word32 r2_2869
	word32 r5_2870
	byte CZN_2871
	byte CVZN_2872
	word32 r6_2873
	word32 r0_2874
	word32 r3_2875
	word32 fp_2876
	word32 r4_2877
	word32 r9_2878
	word32 r10_2879
	word32 r8_2880
	word32 r7_2881
	word32 r1_2882
	byte CZ_2883
	byte VZN_2884
	word32 r11_2885
	call Mem2858[sp_2478 + 0x0000001C:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_2484,C_2860,CVZN_2843,CZ_2842,CZN_2852,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2492,N_2844,r0_2851,r1_2498,r10_2495,r11_2501,r2_2502,r3_2491,r4_2493,r5_2486,r6_2489,r7_2497,r8_2496,r9_2494,sp_2857,V_2861,VZN_2841,Z_2853,ZN_2859
		defs: ap_2868,C_2864,CVZN_2872,CZ_2883,CZN_2871,fp_2876,N_2867,r0_2874,r1_2882,r10_2879,r11_2885,r2_2869,r3_2875,r4_2877,r5_2870,r6_2873,r7_2881,r8_2880,r9_2878,sp_2862,V_2865,VZN_2884,Z_2866,ZN_2863
	Mem2887[sp_2862 - 0x00000004:word32] = r0_2874
	Mem2889[sp_2862 - 0x00000008:word32] = r3_2875
	Mem2892[sp_2862 - 0x0000000C:word32] = r5_2870 + 1515
	word32 sp_2896
	byte ZN_2897
	bool C_2898
	bool V_2899
	bool Z_2900
	bool N_2901
	word32 ap_2902
	word32 r2_2903
	word32 r5_2904
	byte CZN_2905
	byte CVZN_2906
	word32 r6_2907
	word32 r0_2908
	word32 r3_2909
	word32 fp_2910
	word32 r4_2911
	word32 r9_2912
	word32 r10_2913
	word32 r8_2914
	word32 r7_2915
	word32 r1_2916
	byte CZ_2917
	byte VZN_2918
	word32 r11_2919
	call r9_2878 + 2 (retsize: 4; depth: 4)
		uses: ap_2868,C_2894,CVZN_2872,CZ_2883,CZN_2871,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2876,N_2867,r0_2874,r1_2882,r10_2879,r11_2885,r2_2869,r3_2875,r4_2877,r5_2870,r6_2873,r7_2881,r8_2880,r9_2878,sp_2890,V_2895,VZN_2884,Z_2866,ZN_2893
		defs: ap_2902,C_2898,CVZN_2906,CZ_2917,CZN_2905,fp_2910,N_2901,r0_2908,r1_2916,r10_2913,r11_2919,r2_2903,r3_2909,r4_2911,r5_2904,r6_2907,r7_2915,r8_2914,r9_2912,sp_2896,V_2899,VZN_2918,Z_2900,ZN_2897
	Mem2921[sp_2896 - 0x00000004:word32] = r0_2908
	Mem2924[sp_2896 - 0x00000008:word32] = r5_2904 + 1515
	Mem2926[sp_2896 - 0x0000000C:word32] = r5_2904
	word32 r2_2927 = Mem2926[r5_2904 + 0x0000C839:word32]
	byte ZN_2932
	bool C_2933
	bool V_2934
	bool Z_2935
	bool N_2936
	word32 ap_2937
	word32 r2_2938
	byte CZN_2940
	byte CVZN_2941
	word32 r6_2942
	word32 r0_2943
	word32 r3_2944
	word32 fp_2945
	word32 r4_2946
	word32 r9_2947
	word32 r10_2948
	word32 r7_2950
	word32 r1_2951
	byte CZ_2952
	byte VZN_2953
	word32 r11_2954
	call r2_2927 + 2 (retsize: 4; depth: 4)
		uses: ap_2902,C_2929,CVZN_2906,CZ_2917,CZN_2905,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2910,N_2901,r0_2908,r1_2916,r10_2913,r11_2919,r2_2927,r3_2909,r4_2911,r5_2904,r6_2907,r7_2915,r8_2914,r9_2912,sp_2925,V_2930,VZN_2918,Z_2900,ZN_2928
		defs: ap_2937,C_2933,CVZN_2941,CZ_2952,CZN_2940,fp_2945,N_2936,r0_2943,r1_2951,r10_2948,r11_2954,r2_2938,r3_2944,r4_2946,r5_2939,r6_2942,r7_2950,r8_2949,r9_2947,sp_2931,V_2934,VZN_2953,Z_2935,ZN_2932
	Mem2956[Mem2956[ap_2937 + 4:word32]:word32] = 0x00000000
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001415D:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000140B8:
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000145DC:
	word32 r2_2568 = (uint32) Mem2473[sp_2478 + 40:word16]
	branch r2_2568 != 0x00000000 l000145E5
// DataOut: ap fp r0 r11 r2 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000145E5:
	word32 r6_2586
	word32 r7_2580
	word32 r9_2583
	word32 r11_2576
	branch r2_2568 >u 0x00000018 l00014610
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014610:
	Mem2767[sp_2478 - 0x00000004:word32] = 0x00000000
	Mem2770[sp_2478 - 0x00000008:word32] = r6_2489 + 4725
	Mem2773[sp_2478 - 0x0000000C:word32] = r5_2486 + 1515
	word32 sp_2777
	byte ZN_2778
	bool C_2779
	bool V_2780
	bool Z_2781
	bool N_2782
	word32 ap_2783
	word32 r2_2784
	word32 r5_2785
	byte CZN_2786
	byte CVZN_2787
	word32 r6_2788
	word32 r0_2789
	word32 r3_2790
	word32 fp_2791
	word32 r4_2792
	word32 r9_2793
	word32 r10_2794
	word32 r8_2795
	word32 r7_2796
	word32 r1_2797
	byte CZ_2798
	byte VZN_2799
	word32 r11_2800
	call r9_2494 + 2 (retsize: 4; depth: 4)
		uses: ap_2484,C_2775,CVZN_2564,CZ_2574,CZN_2573,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2492,N_2566,r0_2567,r1_2498,r10_2495,r11_2501,r2_2568,r3_2491,r4_2493,r5_2486,r6_2489,r7_2497,r8_2496,r9_2494,sp_2771,V_2776,VZN_2562,Z_2570,ZN_2774
		defs: ap_2783,C_2779,CVZN_2787,CZ_2798,CZN_2786,fp_2791,N_2782,r0_2789,r1_2797,r10_2794,r11_2800,r2_2784,r3_2790,r4_2792,r5_2785,r6_2788,r7_2796,r8_2795,r9_2793,sp_2777,V_2780,VZN_2799,Z_2781,ZN_2778
	Mem2802[sp_2777 - 0x00000004:word32] = r0_2789
	Mem2805[sp_2777 - 0x00000008:word32] = r5_2785 + 1515
	Mem2807[sp_2777 - 0x0000000C:word32] = r5_2785
	word32 r2_2808 = Mem2807[r5_2785 + 0x0000C839:word32]
	byte ZN_2813
	bool C_2814
	bool V_2815
	bool Z_2816
	bool N_2817
	word32 ap_2818
	word32 r2_2819
	byte CZN_2821
	byte CVZN_2822
	word32 r0_2824
	word32 r3_2825
	word32 fp_2826
	word32 r4_2827
	word32 r10_2829
	word32 r1_2832
	byte CZ_2833
	byte VZN_2834
	call r2_2808 + 2 (retsize: 4; depth: 4)
		uses: ap_2783,C_2810,CVZN_2787,CZ_2798,CZN_2786,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2791,N_2782,r0_2789,r1_2797,r10_2794,r11_2800,r2_2808,r3_2790,r4_2792,r5_2785,r6_2788,r7_2796,r8_2795,r9_2793,sp_2806,V_2811,VZN_2799,Z_2781,ZN_2809
		defs: ap_2818,C_2814,CVZN_2822,CZ_2833,CZN_2821,fp_2826,N_2817,r0_2824,r1_2832,r10_2829,r11_2835,r2_2819,r3_2825,r4_2827,r5_2820,r6_2823,r7_2831,r8_2830,r9_2828,sp_2812,V_2815,VZN_2834,Z_2816,ZN_2813
	Mem2837[sp_2478 + 38:word16] = 0x0014
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000145EA:
	Mem2692[sp_2478 - 0x00000004:word32] = 0x00000000
	Mem2695[sp_2478 - 0x00000008:word32] = r6_2489 + 4752
	Mem2698[sp_2478 - 0x0000000C:word32] = r5_2486 + 1515
	word32 sp_2702
	byte ZN_2703
	bool C_2704
	bool V_2705
	bool Z_2706
	bool N_2707
	word32 ap_2708
	word32 r2_2709
	word32 r5_2710
	byte CZN_2711
	byte CVZN_2712
	word32 r6_2713
	word32 r0_2714
	word32 r3_2715
	word32 fp_2716
	word32 r4_2717
	word32 r9_2718
	word32 r10_2719
	word32 r8_2720
	word32 r7_2721
	word32 r1_2722
	byte CZ_2723
	byte VZN_2724
	word32 r11_2725
	call r9_2494 + 2 (retsize: 4; depth: 4)
		uses: ap_2484,C_2700,CVZN_2564,CZ_2574,CZN_2573,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2492,N_2566,r0_2567,r1_2498,r10_2495,r11_2501,r2_2568,r3_2491,r4_2493,r5_2486,r6_2489,r7_2497,r8_2496,r9_2494,sp_2696,V_2701,VZN_2562,Z_2570,ZN_2699
		defs: ap_2708,C_2704,CVZN_2712,CZ_2723,CZN_2711,fp_2716,N_2707,r0_2714,r1_2722,r10_2719,r11_2725,r2_2709,r3_2715,r4_2717,r5_2710,r6_2713,r7_2721,r8_2720,r9_2718,sp_2702,V_2705,VZN_2724,Z_2706,ZN_2703
	Mem2727[sp_2702 - 0x00000004:word32] = r0_2714
	Mem2730[sp_2702 - 0x00000008:word32] = r5_2710 + 1515
	Mem2732[sp_2702 - 0x0000000C:word32] = r5_2710
	word32 r2_2733 = Mem2732[r5_2710 + 0x0000C839:word32]
	byte ZN_2738
	bool C_2739
	bool V_2740
	bool Z_2741
	bool N_2742
	word32 ap_2743
	word32 r2_2744
	byte CZN_2746
	byte CVZN_2747
	word32 r0_2749
	word32 r3_2750
	word32 fp_2751
	word32 r4_2752
	word32 r10_2754
	word32 r1_2757
	byte CZ_2758
	byte VZN_2759
	call r2_2733 + 2 (retsize: 4; depth: 4)
		uses: ap_2708,C_2735,CVZN_2712,CZ_2723,CZN_2711,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2716,N_2707,r0_2714,r1_2722,r10_2719,r11_2725,r2_2733,r3_2715,r4_2717,r5_2710,r6_2713,r7_2721,r8_2720,r9_2718,sp_2731,V_2736,VZN_2724,Z_2706,ZN_2734
		defs: ap_2743,C_2739,CVZN_2747,CZ_2758,CZN_2746,fp_2751,N_2742,r0_2749,r1_2757,r10_2754,r11_2760,r2_2744,r3_2750,r4_2752,r5_2745,r6_2748,r7_2756,r8_2755,r9_2753,sp_2737,V_2740,VZN_2759,Z_2741,ZN_2738
	Mem2762[sp_2478 + 38:word16] = Mem2732[sp_2478 + 40:word16]
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014633:
	word32 r11_2598 = SEQ(SLICE(r11_2576, word16, 16), 0x0000)
	branch Mem2473[sp_2478 + 38:word16] == 0x0000 l0001466A
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001463A:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001463C:
	word32 sp_2611 = sp_2478 - 0x00000004
	Mem2612[sp_2611:word32] = 0x00000000
	word32 r0_2613 = (uint32) (word16) r11_2598
	Mem2616[sp_2611 - 0x00000004:uint32] = (uint32) Mem2612[r7_2580 + r0_2613:byte]
	Mem2619[sp_2611 - 0x00000008:word32] = r6_2586 + 4758
	Mem2622[sp_2611 - 0x0000000C:word32] = r5_2486 + 1515
	word32 sp_2626
	byte ZN_2627
	bool C_2628
	bool V_2629
	bool Z_2630
	bool N_2631
	word32 ap_2632
	word32 r2_2633
	word32 r5_2634
	byte CZN_2635
	byte CVZN_2636
	word32 r6_2637
	word32 r0_2638
	word32 r3_2639
	word32 fp_2640
	word32 r4_2641
	word32 r9_2642
	word32 r10_2643
	word32 r8_2644
	word32 r7_2645
	word32 r1_2646
	byte CZ_2647
	byte VZN_2648
	word32 r11_2649
	call r9_2583 + 2 (retsize: 4; depth: 4)
		uses: ap_2595,C_2624,CVZN_2587,CZ_2578,CZN_2588,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2594,N_2591,r0_2613,r1_2579,r10_2582,r11_2606,r2_2590,r3_2585,r4_2584,r5_2609,r6_2608,r7_2607,r8_2581,r9_2583,sp_2620,V_2625,VZN_2577,Z_2600,ZN_2623
		defs: ap_2632,C_2628,CVZN_2636,CZ_2647,CZN_2635,fp_2640,N_2631,r0_2638,r1_2646,r10_2643,r11_2649,r2_2633,r3_2639,r4_2641,r5_2634,r6_2637,r7_2645,r8_2644,r9_2642,sp_2626,V_2629,VZN_2648,Z_2630,ZN_2627
	Mem2651[sp_2626 - 0x00000004:word32] = r0_2638
	Mem2654[sp_2626 - 0x00000008:word32] = r5_2634 + 1515
	Mem2656[sp_2626 - 0x0000000C:word32] = r5_2634
	word32 r0_2657 = Mem2656[r5_2634 + 0x0000C839:word32]
	byte ZN_2662
	bool C_2663
	bool V_2664
	bool Z_2665
	bool N_2666
	word32 ap_2667
	word32 r2_2668
	byte CZN_2670
	byte CVZN_2671
	word32 r0_2673
	word32 r3_2674
	word32 fp_2675
	word32 r4_2676
	word32 r9_2677
	word32 r10_2678
	word32 r1_2681
	byte CZ_2682
	byte VZN_2683
	word32 r11_2684
	call r0_2657 + 2 (retsize: 4; depth: 4)
		uses: ap_2632,C_2659,CVZN_2636,CZ_2647,CZN_2635,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2640,N_2631,r0_2657,r1_2646,r10_2643,r11_2649,r2_2633,r3_2639,r4_2641,r5_2634,r6_2637,r7_2645,r8_2644,r9_2642,sp_2655,V_2660,VZN_2648,Z_2630,ZN_2658
		defs: ap_2667,C_2663,CVZN_2671,CZ_2682,CZN_2670,fp_2675,N_2666,r0_2673,r1_2681,r10_2678,r11_2684,r2_2668,r3_2674,r4_2676,r5_2669,r6_2672,r7_2680,r8_2679,r9_2677,sp_2661,V_2664,VZN_2683,Z_2665,ZN_2662
	r11_2598 = SEQ(SLICE(r11_2684, word16, 16), (word16) r11_2684 + 0x0001)
	branch (word16) r11_2598 <u Mem2656[sp_2478 + 38:word16] l0001463C
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000145E2:
// DataOut: ap fp r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001466A:
	word32 sp_2515 = sp_2478 - 0x00000004
	Mem2516[sp_2515:word32] = 0x00000000
	Mem2518[sp_2515 - 0x00000004:word32] = 0x00000001
	Mem2521[sp_2515 - 0x00000008:word32] = r8_2496 + 222
	Mem2523[sp_2515 - 0x0000000C:word32] = r5_2486
	word32 r2_2524 = Mem2523[r5_2486 + 0x0000C839:word32]
	byte ZN_2529
	bool C_2530
	bool V_2531
	bool Z_2532
	bool N_2533
	word32 ap_2534
	word32 r2_2535
	byte CZN_2537
	byte CVZN_2538
	word32 r6_2539
	word32 r0_2540
	word32 r3_2541
	word32 fp_2542
	word32 r4_2543
	word32 r9_2544
	word32 r10_2545
	word32 r7_2547
	word32 r1_2548
	byte CZ_2549
	byte VZN_2550
	word32 r11_2551
	call r2_2524 + 2 (retsize: 4; depth: 4)
		uses: ap_2484,C_2526,CVZN_2511,CZ_2508,CZN_2503,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2492,N_2507,r0_2490,r1_2498,r10_2495,r11_2501,r2_2524,r3_2491,r4_2493,r5_2513,r6_2489,r7_2497,r8_2512,r9_2494,sp_2522,V_2527,VZN_2510,Z_2506,ZN_2525
		defs: ap_2534,C_2530,CVZN_2538,CZ_2549,CZN_2537,fp_2542,N_2533,r0_2540,r1_2548,r10_2545,r11_2551,r2_2535,r3_2541,r4_2543,r5_2536,r6_2539,r7_2547,r8_2546,r9_2544,sp_2528,V_2531,VZN_2550,Z_2532,ZN_2529
	word32 r0_2552 = (uint32) Mem2523[sp_2248 + 40:word16]
	word32 r0_2555 = (uint32) Mem2523[sp_2248 + 42:word16] - r0_2552
	Mem2557[sp_2248 + 42:int16] = (int16) r0_2555
	r7_2326 = r7_2547 + r0_2552
	branch (uint32) (word16) r0_2555 <u 0x00000004 l0001469C
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014699:
// DataOut: ap fp r0 r11 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013DF0:
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001469C:
	word32 sp_2279 = sp_2248 - 0x00000004
	Mem2280[sp_2279:word32] = 0x00000000
	Mem2282[sp_2279 - 0x00000004:word32] = 0x00000001
	Mem2285[sp_2279 - 0x00000008:word32] = r8_2266 + 224
	Mem2287[sp_2279 - 0x0000000C:word32] = r5_2256
	word32 r2_2288 = Mem2287[r5_2256 + 0x0000C839:word32]
	byte ZN_2293
	bool C_2294
	bool V_2295
	bool Z_2296
	bool N_2297
	word32 ap_2298
	word32 r2_2299
	byte CZN_2301
	byte CVZN_2302
	word32 r0_2304
	word32 r3_2305
	word32 fp_2306
	word32 r4_2307
	word32 r9_2308
	word32 r10_2309
	word32 r7_2311
	word32 r1_2312
	byte CZ_2313
	byte VZN_2314
	word32 r11_2315
	call r2_2288 + 2 (retsize: 4; depth: 4)
		uses: ap_2254,C_2290,CVZN_2258,CZ_2269,CZN_2273,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2262,N_2253,r0_2260,r1_2268,r10_2265,r11_2271,r2_2288,r3_2261,r4_2263,r5_2277,r6_2259,r7_2267,r8_2276,r9_2264,sp_2286,V_2291,VZN_2270,Z_2252,ZN_2289
		defs: ap_2298,C_2294,CVZN_2302,CZ_2313,CZN_2301,fp_2306,N_2297,r0_2304,r1_2312,r10_2309,r11_2315,r2_2299,r3_2305,r4_2307,r5_2300,r6_2303,r7_2311,r8_2310,r9_2308,sp_2292,V_2295,VZN_2314,Z_2296,ZN_2293
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013DC0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013DB3:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00013D9B:
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000146B0:
	word32 r2_1686 = (uint32) SLICE(Mem1612[r5_1631 + 0x0000C67A:word32] & ~0xFFFF3FFF, ui20, 12)
	Mem1688[sp_1634 + 14:int16] = (int16) r2_1686
	word32 r9_1689 = (uint32) (word16) r2_1686
	branch (r9_1689 & 0x00000008) != 0x00000000 l000146CF
// DataOut: ap fp r0 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000146CF:
	word32 r7_1978 = (uint32) Mem1688[sp_1634 + 2:word16]
	branch r7_1978 == 0x00000003 l000146E2
// DataOut: ap fp r0 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000146D8:
	branch r7_1978 == 0x00000006 l000146E2
// DataOut: ap fp r0 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000146DD:
	branch r7_1978 != 0x0000000B l00014738
// DataOut: ap fp r0 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014738:
	branch r7_1978 != 0x00000000 l00014776
// DataOut: ap fp r0 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001473C:
	branch (r9_1689 & 0x00000004) != 0x00000000 l00014776
// DataOut: ap fp r0 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014740:
	word32 sp_2094 = sp_1634 - 0x00000004
	Mem2095[sp_2094:word32] = 0x00000000
	Mem2098[sp_2094 - 0x00000004:word32] = r6_1628 + 4890
	Mem2100[sp_2094 - 0x00000008:word32] = 0x00000008
	Mem2103[sp_2094 - 0x0000000C:word32] = r6_1628 + 3712
	Mem2106[sp_2094 - 0x00000010:uint32] = 0x00005855
	Mem2109[sp_2094 - 0x00000014:word32] = r8_1623 + 229
	Mem2112[sp_2094 - 0x00000018:word32] = r6_1628 + 4764
	Mem2115[sp_2094 - 0x0000001C:word32] = r5_1631 + 1515
	word32 sp_2119
	byte ZN_2120
	bool C_2121
	bool V_2122
	bool Z_2123
	bool N_2124
	word32 ap_2125
	word32 r2_2126
	word32 r5_2127
	byte CZN_2128
	byte CVZN_2129
	word32 r6_2130
	word32 r0_2131
	word32 r3_2132
	word32 fp_2133
	word32 r4_2134
	word32 r9_2135
	word32 r10_2136
	word32 r8_2137
	word32 r7_2138
	word32 r1_2139
	byte CZ_2140
	byte VZN_2141
	word32 r11_2142
	call Mem2115[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1684,C_2117,CVZN_1676,CZ_1668,CZN_2087,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1683,N_1679,r0_1681,r1_1669,r10_1672,r11_1666,r2_1686,r3_1674,r4_1673,r5_1678,r6_1675,r7_1978,r8_1671,r9_1689,sp_2113,V_2118,VZN_1667,Z_2091,ZN_2116
		defs: ap_2125,C_2121,CVZN_2129,CZ_2140,CZN_2128,fp_2133,N_2124,r0_2131,r1_2139,r10_2136,r11_2142,r2_2126,r3_2132,r4_2134,r5_2127,r6_2130,r7_2138,r8_2137,r9_2135,sp_2119,V_2122,VZN_2141,Z_2123,ZN_2120
	Mem2144[sp_2119 - 0x00000004:word32] = r0_2131
	Mem2147[sp_2119 - 0x00000008:word32] = r5_2127 + 1515
	Mem2149[sp_2119 - 0x0000000C:word32] = r5_2127
	word32 r2_2150 = Mem2149[r5_2127 + 0x0000C839:word32]
	byte ZN_2155
	bool C_2156
	bool V_2157
	bool Z_2158
	bool N_2159
	word32 ap_2160
	word32 r2_2161
	byte CZN_2163
	byte CVZN_2164
	word32 r0_2166
	word32 r3_2167
	word32 fp_2168
	word32 r4_2169
	word32 r9_2170
	word32 r10_2171
	word32 r8_2172
	word32 r7_2173
	word32 r1_2174
	byte CZ_2175
	byte VZN_2176
	word32 r11_2177
	call r2_2150 + 2 (retsize: 4; depth: 4)
		uses: ap_2125,C_2152,CVZN_2129,CZ_2140,CZN_2128,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2133,N_2124,r0_2131,r1_2139,r10_2136,r11_2142,r2_2150,r3_2132,r4_2134,r5_2127,r6_2130,r7_2138,r8_2137,r9_2135,sp_2148,V_2153,VZN_2141,Z_2123,ZN_2151
		defs: ap_2160,C_2156,CVZN_2164,CZ_2175,CZN_2163,fp_2168,N_2159,r0_2166,r1_2174,r10_2171,r11_2177,r2_2161,r3_2167,r4_2169,r5_2162,r6_2165,r7_2173,r8_2172,r9_2170,sp_2154,V_2157,VZN_2176,Z_2158,ZN_2155
// DataOut: ap fp r0 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000146E2:
	word32 r4_1990
	word32 sp_1984 = sp_1634 - 0x00000004
	Mem1985[sp_1984:word32] = 0x00000000
	word32 r3_1986 = (uint32) Mem1985[sp_1984 + 18:word16]
	branch (r3_1986 & 0x00000004) == 0x00000000 l000146F4
// DataOut: ap fp r0 r3 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000146F4:
	r4_1990 = r6_1628 + 4890
// DataOut: ap fp r0 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000146EC:
	r4_1990 = r6_1628 + 4843
// DataOut: ap fp r0 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000146F9:
	Mem1992[sp_1984 - 0x00000004:word32] = r4_1990
	word32 r3_1993 = r3_1986 & ~0xFFFFFFF3
	Mem1995[sp_1984 - 0x00000008:word32] = r3_1993
	Mem1998[sp_1984 - 0x0000000C:word32] = r6_1628 + 3712
	Mem2001[sp_1984 - 0x00000010:uint32] = 0x00005855
	Mem2004[sp_1984 - 0x00000014:word32] = r8_1623 + 226
	Mem2007[sp_1984 - 0x00000018:word32] = r6_1628 + 4764
	Mem2010[sp_1984 - 0x0000001C:word32] = r5_1631 + 1515
	word32 sp_2014
	byte ZN_2015
	bool C_2016
	bool V_2017
	bool Z_2018
	bool N_2019
	word32 ap_2020
	word32 r2_2021
	word32 r5_2022
	byte CZN_2023
	byte CVZN_2024
	word32 r6_2025
	word32 r0_2026
	word32 r3_2027
	word32 fp_2028
	word32 r4_2029
	word32 r9_2030
	word32 r10_2031
	word32 r8_2032
	word32 r7_2033
	word32 r1_2034
	byte CZ_2035
	byte VZN_2036
	word32 r11_2037
	call Mem2010[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1684,C_2012,CVZN_1676,CZ_1668,CZN_1982,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1683,N_1679,r0_1681,r1_1669,r10_1672,r11_1666,r2_1686,r3_1993,r4_1990,r5_1678,r6_1675,r7_1978,r8_1671,r9_1689,sp_2008,V_2013,VZN_1667,Z_1983,ZN_2011
		defs: ap_2020,C_2016,CVZN_2024,CZ_2035,CZN_2023,fp_2028,N_2019,r0_2026,r1_2034,r10_2031,r11_2037,r2_2021,r3_2027,r4_2029,r5_2022,r6_2025,r7_2033,r8_2032,r9_2030,sp_2014,V_2017,VZN_2036,Z_2018,ZN_2015
	Mem2039[sp_2014 - 0x00000004:word32] = r0_2026
	Mem2042[sp_2014 - 0x00000008:word32] = r5_2022 + 1515
	Mem2044[sp_2014 - 0x0000000C:word32] = r5_2022
	word32 r2_2045 = Mem2044[r5_2022 + 0x0000C839:word32]
	byte ZN_2050
	bool C_2051
	bool V_2052
	bool Z_2053
	bool N_2054
	word32 ap_2055
	word32 r2_2056
	byte CZN_2058
	byte CVZN_2059
	word32 r0_2061
	word32 r3_2062
	word32 fp_2063
	word32 r4_2064
	word32 r9_2065
	word32 r10_2066
	word32 r8_2067
	word32 r7_2068
	word32 r1_2069
	byte CZ_2070
	byte VZN_2071
	word32 r11_2072
	call r2_2045 + 2 (retsize: 4; depth: 4)
		uses: ap_2020,C_2047,CVZN_2024,CZ_2035,CZN_2023,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_2028,N_2019,r0_2026,r1_2034,r10_2031,r11_2037,r2_2045,r3_2027,r4_2029,r5_2022,r6_2025,r7_2033,r8_2032,r9_2030,sp_2043,V_2048,VZN_2036,Z_2018,ZN_2046
		defs: ap_2055,C_2051,CVZN_2059,CZ_2070,CZN_2058,fp_2063,N_2054,r0_2061,r1_2069,r10_2066,r11_2072,r2_2056,r3_2062,r4_2064,r5_2057,r6_2060,r7_2068,r8_2067,r9_2065,sp_2049,V_2052,VZN_2071,Z_2053,ZN_2050
	Mem2074[Mem2074[ap_2055 + 4:word32]:word32] = Mem2044[ap_2055 + 4:word32] + r3_2062
// DataOut: ap fp r0 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000146CC:
// DataOut: ap fp r0 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014776:
	branch Mem1688[r5_1631 + 0x0000C674:word16] != 0x0000 l000147A4
// DataOut: ap fp r0 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000147A4:
	word32 sp_1813 = sp_1634 - 0x00000004
	Mem1814[sp_1813:word32] = 0x00000000
	Mem1817[sp_1813 - 0x00000004:word32] = r6_1628 + 4955
	Mem1820[sp_1813 - 0x00000008:word32] = r5_1631 + 1515
	word32 sp_1824
	byte ZN_1825
	bool C_1826
	bool V_1827
	bool Z_1828
	bool N_1829
	word32 ap_1830
	word32 r2_1831
	word32 r5_1832
	byte CZN_1833
	byte CVZN_1834
	word32 r6_1835
	word32 r0_1836
	word32 r3_1837
	word32 fp_1838
	word32 r4_1839
	word32 r9_1840
	word32 r10_1841
	word32 r8_1842
	word32 r7_1843
	word32 r1_1844
	byte CZ_1845
	byte VZN_1846
	word32 r11_1847
	call Mem1820[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1712,C_1822,CVZN_1704,CZ_1695,CZN_1705,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1711,N_1708,r0_1709,r1_1696,r10_1699,r11_1693,r2_1707,r3_1702,r4_1701,r5_1706,r6_1703,r7_1697,r8_1698,r9_1700,sp_1818,V_1823,VZN_1694,Z_1714,ZN_1821
		defs: ap_1830,C_1826,CVZN_1834,CZ_1845,CZN_1833,fp_1838,N_1829,r0_1836,r1_1844,r10_1841,r11_1847,r2_1831,r3_1837,r4_1839,r5_1832,r6_1835,r7_1843,r8_1842,r9_1840,sp_1824,V_1827,VZN_1846,Z_1828,ZN_1825
	Mem1849[sp_1824 - 0x00000004:word32] = r0_1836
	Mem1852[sp_1824 - 0x00000008:word32] = r5_1832 + 1515
	Mem1854[sp_1824 - 0x0000000C:word32] = r5_1832
	word32 r2_1855 = Mem1854[r5_1832 + 0x0000C839:word32]
	word32 sp_1859
	byte ZN_1860
	bool C_1861
	bool V_1862
	bool Z_1863
	bool N_1864
	word32 ap_1865
	word32 r2_1866
	word32 r5_1867
	byte CZN_1868
	byte CVZN_1869
	word32 r6_1870
	word32 r0_1871
	word32 r3_1872
	word32 fp_1873
	word32 r4_1874
	word32 r9_1875
	word32 r10_1876
	word32 r8_1877
	word32 r7_1878
	word32 r1_1879
	byte CZ_1880
	byte VZN_1881
	word32 r11_1882
	call r2_1855 + 2 (retsize: 4; depth: 4)
		uses: ap_1830,C_1857,CVZN_1834,CZ_1845,CZN_1833,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1838,N_1829,r0_1836,r1_1844,r10_1841,r11_1847,r2_1855,r3_1837,r4_1839,r5_1832,r6_1835,r7_1843,r8_1842,r9_1840,sp_1853,V_1858,VZN_1846,Z_1828,ZN_1856
		defs: ap_1865,C_1861,CVZN_1869,CZ_1880,CZN_1868,fp_1873,N_1864,r0_1871,r1_1879,r10_1876,r11_1882,r2_1866,r3_1872,r4_1874,r5_1867,r6_1870,r7_1878,r8_1877,r9_1875,sp_1859,V_1862,VZN_1881,Z_1863,ZN_1860
	Mem1884[sp_1859 - 0x00000004:word32] = 0x00000005
	Mem1887[sp_1859 - 0x00000008:uint32] = (uint32) Mem1884[r5_1867 + 0x0000C674:word16]
	word32 r11_1891
	word32 ap_1892
	word32 fp_1893
	word32 sp_1894
	word32 r0_1895 = fn0000DC76(ap_1865, fp_1873, out r11_1891, out ap_1892, out fp_1893, out sp_1894)
	branch r0_1895 == 0x00000000 l000147E5
// DataOut: fp r0 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000147DB:
	Mem1971[sp_1894 + 8:word32] = r0_1895
	branch r0_1895 <= 0x00000001 l000147E5
// DataOut: fp r0 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000147E5:
	Mem1901[sp_1894 - 0x00000004:word32] = 0x00000000
	Mem1904[sp_1894 - 0x00000008:word32] = r6_1870 + 5032
	Mem1907[sp_1894 - 0x0000000C:word32] = r5_1867 + 1515
	word32 sp_1911
	byte ZN_1912
	bool C_1913
	bool V_1914
	bool Z_1915
	bool N_1916
	word32 ap_1917
	word32 r2_1918
	word32 r5_1919
	byte CZN_1920
	byte CVZN_1921
	word32 r6_1922
	word32 r0_1923
	word32 r3_1924
	word32 fp_1925
	word32 r4_1926
	word32 r9_1927
	word32 r10_1928
	word32 r8_1929
	word32 r7_1930
	word32 r1_1931
	byte CZ_1932
	byte VZN_1933
	word32 r11_1934
	call Mem1907[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1892,C_1909,CVZN_1869,CZ_1880,CZN_1868,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1893,N_1864,r0_1895,r1_1879,r10_1876,r11_1891,r2_1866,r3_1872,r4_1874,r5_1867,r6_1870,r7_1878,r8_1877,r9_1875,sp_1905,V_1910,VZN_1881,Z_1897,ZN_1908
		defs: ap_1917,C_1913,CVZN_1921,CZ_1932,CZN_1920,fp_1925,N_1916,r0_1923,r1_1931,r10_1928,r11_1934,r2_1918,r3_1924,r4_1926,r5_1919,r6_1922,r7_1930,r8_1929,r9_1927,sp_1911,V_1914,VZN_1933,Z_1915,ZN_1912
	Mem1936[sp_1911 - 0x00000004:word32] = r0_1923
	Mem1939[sp_1911 - 0x00000008:word32] = r5_1919 + 1515
	Mem1941[sp_1911 - 0x0000000C:word32] = r5_1919
	word32 r2_1942 = Mem1941[r5_1919 + 0x0000C839:word32]
	word32 sp_1946
	byte ZN_1947
	bool C_1948
	bool V_1949
	bool Z_1950
	bool N_1951
	word32 ap_1952
	word32 r2_1953
	word32 r5_1954
	byte CZN_1955
	byte CVZN_1956
	word32 r6_1957
	word32 r0_1958
	word32 r3_1959
	word32 fp_1960
	word32 r4_1961
	word32 r9_1962
	word32 r10_1963
	word32 r8_1964
	word32 r7_1965
	word32 r1_1966
	byte CZ_1967
	byte VZN_1968
	word32 r11_1969
	call r2_1942 + 2 (retsize: 4; depth: 4)
		uses: ap_1917,C_1944,CVZN_1921,CZ_1932,CZN_1920,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1925,N_1916,r0_1923,r1_1931,r10_1928,r11_1934,r2_1942,r3_1924,r4_1926,r5_1919,r6_1922,r7_1930,r8_1929,r9_1927,sp_1940,V_1945,VZN_1933,Z_1915,ZN_1943
		defs: ap_1952,C_1948,CVZN_1956,CZ_1967,CZN_1955,fp_1960,N_1951,r0_1958,r1_1966,r10_1963,r11_1969,r2_1953,r3_1959,r4_1961,r5_1954,r6_1957,r7_1965,r8_1964,r9_1962,sp_1946,V_1949,VZN_1968,Z_1950,ZN_1947
// DataOut: fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l000147E4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l0001477E:
	word32 sp_1743 = sp_1634 - 0x00000004
	Mem1744[sp_1743:word32] = 0x00000000
	Mem1747[sp_1743 - 0x00000004:word32] = r6_1628 + 4925
	Mem1750[sp_1743 - 0x00000008:word32] = r5_1631 + 1515
	word32 sp_1754
	byte ZN_1755
	bool C_1756
	bool V_1757
	bool Z_1758
	bool N_1759
	word32 ap_1760
	word32 r2_1761
	word32 r5_1762
	byte CZN_1763
	byte CVZN_1764
	word32 r6_1765
	word32 r0_1766
	word32 r3_1767
	word32 fp_1768
	word32 r4_1769
	word32 r9_1770
	word32 r10_1771
	word32 r8_1772
	word32 r7_1773
	word32 r1_1774
	byte CZ_1775
	byte VZN_1776
	word32 r11_1777
	call Mem1750[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_1712,C_1752,CVZN_1704,CZ_1695,CZN_1705,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1711,N_1708,r0_1709,r1_1696,r10_1699,r11_1693,r2_1707,r3_1702,r4_1701,r5_1706,r6_1703,r7_1697,r8_1698,r9_1700,sp_1748,V_1753,VZN_1694,Z_1714,ZN_1751
		defs: ap_1760,C_1756,CVZN_1764,CZ_1775,CZN_1763,fp_1768,N_1759,r0_1766,r1_1774,r10_1771,r11_1777,r2_1761,r3_1767,r4_1769,r5_1762,r6_1765,r7_1773,r8_1772,r9_1770,sp_1754,V_1757,VZN_1776,Z_1758,ZN_1755
	Mem1779[sp_1754 - 0x00000004:word32] = r0_1766
	Mem1782[sp_1754 - 0x00000008:word32] = r5_1762 + 1515
	Mem1784[sp_1754 - 0x0000000C:word32] = r5_1762
	word32 r2_1785 = Mem1784[r5_1762 + 0x0000C839:word32]
	word32 sp_1789
	byte ZN_1790
	bool C_1791
	bool V_1792
	bool Z_1793
	bool N_1794
	word32 ap_1795
	word32 r2_1796
	word32 r5_1797
	byte CZN_1798
	byte CVZN_1799
	word32 r6_1800
	word32 r0_1801
	word32 r3_1802
	word32 fp_1803
	word32 r4_1804
	word32 r9_1805
	word32 r10_1806
	word32 r8_1807
	word32 r7_1808
	word32 r1_1809
	byte CZ_1810
	byte VZN_1811
	word32 r11_1812
	call r2_1785 + 2 (retsize: 4; depth: 4)
		uses: ap_1760,C_1787,CVZN_1764,CZ_1775,CZN_1763,dwLoc0100_35,dwLoc0104_36,dwLoc0108_37,dwLocE4_4,dwLocF0_31,dwLocF4_32,dwLocF8_33,dwLocFC_34,fp_1768,N_1759,r0_1766,r1_1774,r10_1771,r11_1777,r2_1785,r3_1767,r4_1769,r5_1762,r6_1765,r7_1773,r8_1772,r9_1770,sp_1783,V_1788,VZN_1776,Z_1758,ZN_1786
		defs: ap_1795,C_1791,CVZN_1799,CZ_1810,CZN_1798,fp_1803,N_1794,r0_1801,r1_1809,r10_1806,r11_1812,r2_1796,r3_1802,r4_1804,r5_1797,r6_1800,r7_1808,r8_1807,r9_1805,sp_1789,V_1792,VZN_1811,Z_1793,ZN_1790
// DataOut: fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

l00014808:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>

fn0001325E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> r10:<invalid> ap:<invalid> fp:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r11:<invalid> r8:<invalid> r6:<invalid> r5:<invalid> -264(fp):r5 -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -242(fp):<invalid> -240(fp):<invalid> -228(fp):<invalid>



void fn00014812(word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r10 r3 r4 r5 r6 r7 r8 r9
// LiveOut:
// Trashed: CVZN ap r0 r10 r11 r2 r3 r6 r7 r9 sp
// Preserved:
fn00014812_entry:
// DataOut: fp r10 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00014812:
	branch (uint32) Mem0[r4 + 0x0000C65E:word16] >=u 0x0000000B l00014844
// DataOut: fp r10 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00014844:
// DataOut: fp r10 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 r11:0x00000000 r2:<invalid>
// LocalsOut: fp(32)

l00014838:
// DataOut: fp r10 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 r11:0x00000000 r2:<invalid>
// LocalsOut: fp(32)

l00014847:
	word32 sp_37
	byte CVZN_38
	byte ZN_39
	bool C_40
	bool V_41
	word32 r11_42
	bool Z_43
	bool N_44
	word32 r4_45
	word32 r2_46
	byte CZN_47
	word32 r3_48
	word32 r6_49
	word32 r9_51
	word32 ap_52
	word32 r8_53
	byte VZN_55
	word32 r7_56
	word32 r0_57
	word32 r5_58
	word32 fp_215
	word32 r10_211
	call Mem0[0x000192BC:word32] + 2 (retsize: 4; depth: 52)
		uses: ap_24,C_35,CZN_7,dwLoc2C_29,dwLoc30_33,fp,r10_19,r11_3,r2_25,r3_10,r4,r6_14,r8,r9_23,sp_30,V_36,ZN_34
		defs: ap_52,C_40,CVZN_38,CZN_47,fp_54,N_44,r0_57,r10_50,r11_42,r2_46,r3_48,r4_45,r5_58,r6_49,r7_56,r8_53,r9_51,sp_37,V_41,VZN_55,Z_43,ZN_39
	branch ap_52 != 0x00000006 l000148AC
// DataOut: ap fp r10 r3 r4 r5 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000028 r11:0x00000000 r2:<invalid> r3:<invalid>
// LocalsOut: fp(32)

l000148AC:
	branch ap_52 != 0x00000008 l000148D0
// DataOut: ap fp r10 r4 r5 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>
// LocalsOut: fp(32)

l000148D0:
	branch ap_52 <u 0x0000000B l000148EA
// DataOut: fp r10 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>
// LocalsOut: fp(32)

l000148D5:
	word32 sp_198
	byte CVZN_199
	byte ZN_200
	bool C_201
	bool V_202
	word32 r11_203
	bool Z_204
	bool N_205
	word32 r4_206
	word32 r2_207
	byte CZN_208
	word32 r3_209
	word32 r6_210
	word32 r9_212
	word32 ap_213
	word32 r8_214
	byte VZN_216
	word32 r7_217
	word32 r0_218
	word32 r5_219
	call Mem0[0x000192D0:word32] + 2 (retsize: 4; depth: 64)
		uses: ap_52,C_196,CVZN_38,CZN_183,dwLoc2C_29,dwLoc30_33,dwLoc34_188,dwLoc38_191,dwLoc3C_194,fp_54,N_44,r0_57,r10_50,r11_42,r2_46,r3_48,r4_45,r5_58,r6_49,r7_56,r8_53,r9_51,sp_192,V_197,VZN_55,Z_172,ZN_195
		defs: ap_213,C_201,CVZN_199,CZN_208,fp_215,N_205,r0_218,r10_211,r11_203,r2_207,r3_209,r4_206,r5_219,r6_210,r7_217,r8_214,r9_212,sp_198,V_202,VZN_216,Z_204,ZN_200
// DataOut: fp r10 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l000148B1:
	Mem179[fp_215 + -34:byte] = Mem0[r8_53 + 5320 + (uint32) ((word16) ((uint32) Mem0[r4_45 + 0x0000C65C:word16] >> 1 & ~0xFFFFFFFC)):byte]
// DataOut: fp r10 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l00014875:
	word32 r3_131
	branch ((uint32) Mem0[r4_45 + 0x0000C65C:word16] & 0x00000002) == 0x00000000 l00014888
// DataOut: fp r10 r3 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l00014888:
	r3_131 = SEQ(SLICE(r3_48, word24, 8), 0x34)
// DataOut: fp r10 r3 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l00014880:
	r3_131 = SEQ(SLICE(r3_48, word24, 8), 0x38)
// DataOut: fp r10 r3 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l0001488B:
	word32 r2_138
	Mem133[fp_215 + -36:byte] = (byte) r3_131
	word32 r2_134 = (uint32) Mem133[r4_45 + 0x0000C65C:word16]
	branch (r2_134 & 0x00000004) == 0x00000000 l000148A0
// DataOut: fp r10 r2 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l000148A0:
	r2_138 = SEQ(SLICE(r2_134, word24, 8), 0x32)
// DataOut: fp r10 r2 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l0001489A:
	r2_138 = SEQ(SLICE(r2_134, word24, 8), 0x33)
// DataOut: fp r10 r2 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l000148A3:
	Mem140[fp_215 + -34:byte] = (byte) r2_138
// DataOut: fp r10 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000030 r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l000148EA:
	word32 ap_82 = 0x00000000
	word32 r2_83 = fp_215 + -32
// DataOut: ap fp r10 r2 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -60(fp):fp + -36 -56(fp):r5 + 236 -52(fp):<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l000148F0:
	Mem90[r2_83:byte] = 0x20
	r2_83 = r2_83 + 0x00000001
	ap_82 = ap_82 + 0x00000001
	branch ap_82 <= 0x0000000E l000148F0
// DataOut: ap fp r10 r2 r4 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -60(fp):fp + -36 -56(fp):r5 + 236 -52(fp):<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l000148F9:
	Mem95[fp_215 + -17:byte] = 0x00
	word32 r0_100 = (uint32) (word16) r10_211
	branch r0_100 > 0x0000000F l0001492E
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> -60(fp):fp + -36 -56(fp):r5 + 236 -52(fp):<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l0001492E:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> -60(fp):fp + -36 -56(fp):r5 + 236 -52(fp):<invalid> -48(fp):fp + -37 -44(fp):<invalid>

l0001490C_1:
	word32 sp_105
	byte CVZN_106
	byte ZN_107
	bool C_108
	bool V_109
	word32 r11_110
	bool Z_111
	bool N_112
	word32 r4_113
	word32 r2_114
	byte CZN_115
	word32 r3_116
	word32 r6_117
	word32 r10_118
	word32 r9_119
	word32 ap_120
	word32 r8_121
	word32 fp_122
	byte VZN_123
	word32 r7_124
	word32 r0_125
	word32 r5_126
	call 0x00014910 + r0_100 * 0x00000002 (retsize: 4; depth: 4)
		uses: ap_92,C_102,CVZN_93,CZN_75,dwLoc2C_29,dwLoc30_33,dwLoc34_62,dwLoc38_63,dwLoc3C_64,fp_69,N_77,r0_100,r10_72,r11_79,r2_96,r3_74,r4_76,r5_65,r6_73,r7_99,r8_70,r9_71,sp_81,V_103,VZN_68,Z_78,ZN_101
		defs: ap_120,C_108,CVZN_106,CZN_115,fp_122,N_112,r0_125,r10_118,r11_110,r2_114,r3_116,r4_113,r5_126,r6_117,r7_124,r8_121,r9_119,sp_105,V_109,VZN_123,Z_111,ZN_107
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> -60(fp):fp + -36 -56(fp):r5 + 236 -52(fp):<invalid> -48(fp):fp + -37 -44(fp):<invalid>

fn00014812_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r11:0x00000000 r2:<invalid> r3:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> -60(fp):fp + -36 -56(fp):r5 + 236 -52(fp):<invalid> -48(fp):fp + -37 -44(fp):<invalid>



word32 fn00015106(word32 r3, word32 r4, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 ap, word32 fp, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r10 r11 r3 r4 r6 r7 r8 r9
// LiveOut: ap fp r0 r11 r5 r6 r8 sp
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r5 r6 r7 r8 r9 sp
// Preserved:
fn00015106_entry:
// DataOut: ap fp r10 r11 r3 r4 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00015106:
	word32 r5_348
	word32 r2_26 = (uint32) Mem0[Mem0[ap + 8:word32]:word16]
	word32 r1_6 = (uint32) Mem0[Mem0[ap + 4:word32]:word16]
	word32 r0_35 = r2_26 >> 5 & ~0xFFFFFFC0
	word32 r10_20 = SEQ(SLICE(r10, word16, 16), (int16) (r1_6 >> 5 & ~0xFFFFFFF0))
	word32 sp_2 = fp - 0x00000008
	word32 r11_14 = SEQ(SLICE(r11, word16, 16), (int16) ((r1_6 >> 9 & ~0xFFFFFF80) + 0x00000050))
	word32 r9_24 = SEQ(SLICE(r9, word16, 16), (word16) r1_6 & ~0xFFE0)
	word32 r8_33 = SEQ(SLICE(r8, word16, 16), (int16) (r2_26 >> 11 & ~0xFFFFFFE0))
	word32 r7_338 = SEQ(SLICE(r7, word16, 16), (int16) r0_35)
	word32 r6_339 = SEQ(SLICE(r6, word16, 16), (word16) ((r2_26 & ~0xFFFFFFE0) * 0x00000002))
	word32 r2_45 = (uint32) (word16) r10_20
	branch r2_45 == 0x00000000 l00015189
// DataOut: ap fp r10 r11 r2 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00015184:
	branch r2_45 <=u 0x0000000C l000151A0
// DataOut: ap fp r10 r11 r2 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid>
// LocalsOut: fp(32)

l000151A0:
	r5_348 = r3 + 5461 + (r2_45 - 0x00000001 << 2)
// DataOut: ap fp r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid>

l00015189:
	byte CVZN_325
	byte ZN_326
	bool C_327
	bool V_328
	word32 r0_330
	word32 r1_331
	word32 r2_332
	byte VZN_333
	bool Z_340
	byte CZN_341
	byte CZ_342
	word32 fp_344
	word32 r5_345
	bool N_347
	call Mem0[0x000192D0:word32] + 2 (retsize: 4; depth: 24)
		uses: ap,C_315,CVZN,CZ,CZN,dwLoc0C_305,dwLoc10_309,dwLoc14_313,fp,N,r0_35,r1_27,r10_20,r11_14,r2_45,r3,r4,r5,r6_44,r7_39,r8_33,r9_24,sp_310,V_316,VZN,Z_47,ZN_314
		defs: ap_329,C_327,CVZN_325,CZ_342,CZN_341,fp_344,N_347,r0_330,r1_331,r10_335,r11_334,r2_332,r3_343,r4_346,r5_345,r6_339,r7_338,r8_337,r9_336,sp_324,V_328,VZN_333,Z_340,ZN_326
	r5_348 = fp_344 + -8
// DataOut: ap fp r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000008 r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid>

l000151AC:
	word32 ap_142
	word32 fp_157
	branch Mem0[r4 + 36:word32] <= 0x00000009 l000151DC
// DataOut: ap fp r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l000151DC:
	branch Mem0[r4 + 72:word32] == 0x00000000 l0001520C
// DataOut: ap fp r10 r11 r3 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l0001520C:
	word32 sp_217 = sp_2 - 0x00000004
	Mem219[sp_217:uint32] = (uint32) (word16) r7_338
	Mem222[sp_217 - 0x00000004:uint32] = (uint32) (word16) r8_33
	word32 r1_223 = 0x00000000
	word32 r0_224 = (uint32) (word16) r11_14
	branch 0x00000064 == 0x00000000 l00015234
// DataOut: ap fp r0 r1 r11 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l0001521E:
	branch 0x00000063 == 0x00000000 l00015239
// DataOut: ap fp r0 r1 r11 r3 r5 r6 r8 r9 sp
// DataOut (flags): ZN
// SymbolicIn: sp:<invalid> r0:<invalid> r1:0x00000000 r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l00015223:
	branch true l00015234
// DataOut: ap fp r0 r1 r11 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:0x00000000 r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l00015234:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:0x00000000 r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l00015225:
	branch 0x00000064 == r0_224 l00015239
// DataOut: ap fp r0 r1 r11 r3 r5 r6 r8 r9 sp
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> r0:<invalid> r1:0x00000000 r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l0001522A:
	branch 0x00000064 >u r0_224 l0001522F
// DataOut: ap fp r0 r1 r11 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:0x00000000 r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l0001522C:
	r1_223 = 0xFFFFFF9C
// DataOut: ap fp r0 r1 r11 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:0x00000000 r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l0001522F:
	r1_223 = r1_223 + r0_224
// DataOut: ap fp r1 r11 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l00015239:
	Mem251[sp_217 - 0x00000008:uint32] = (uint32) (word16) r1_223
	Mem253[sp_217 - 0x0000000C:word32] = r5_348
	Mem256[sp_217 - 0x00000010:uint32] = (uint32) (word16) r9_24
	Mem259[sp_217 - 0x00000014:word32] = r3 + 5113
	Mem262[sp_217 - 0x00000018:word32] = Mem259[ap + 16:word32]
	word32 sp_266
	byte CVZN_267
	byte ZN_268
	bool C_269
	bool V_270
	word32 r0_272
	word32 r1_273
	word32 r2_274
	byte VZN_275
	word32 r11_276
	word32 r10_277
	word32 r9_278
	word32 r8_279
	word32 r7_280
	word32 r6_281
	bool Z_282
	byte CZN_283
	byte CZ_284
	word32 r3_285
	word32 r5_287
	word32 r4_288
	bool N_289
	call Mem262[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_73,C_264,CVZN_246,CZ_244,CZN_239,dwLoc0C_50,dwLoc10_51,dwLoc14_52,fp_72,N_243,r0_224,r1_248,r10_63,r11_64,r2_225,r3_56,r4_54,r5_55,r6_59,r7_60,r8_61,r9_62,sp_260,V_265,VZN_247,Z_242,ZN_263
		defs: ap_271,C_269,CVZN_267,CZ_284,CZN_283,fp_286,N_289,r0_272,r1_273,r10_277,r11_276,r2_274,r3_285,r4_288,r5_287,r6_281,r7_280,r8_279,r9_278,sp_266,V_270,VZN_275,Z_282,ZN_268
// DataOut: ap fp r11 r5 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r2:0x00000064 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l000151E1:
	word32 sp_165 = sp_2 - 0x00000004
	Mem167[sp_165:uint32] = (uint32) (word16) r6_339
	Mem170[sp_165 - 0x00000004:uint32] = (uint32) (word16) r7_338
	Mem173[sp_165 - 0x00000008:uint32] = (uint32) (word16) r8_33
	Mem176[sp_165 - 0x0000000C:uint32] = (uint32) (word16) r9_24
	Mem179[sp_165 - 0x00000010:uint32] = (uint32) (word16) r10_20
	word32 r0_180 = (uint32) (word16) r11_14
	Mem183[sp_165 - 0x00000014:word32] = r0_180 + 0x0000076C
	Mem186[sp_165 - 0x00000018:word32] = r3 + 5159
	Mem189[sp_165 - 0x0000001C:word32] = Mem186[ap + 16:word32]
	word32 sp_193
	byte CVZN_194
	byte ZN_195
	bool C_196
	bool V_197
	word32 r0_199
	word32 r1_200
	word32 r2_201
	byte VZN_202
	word32 r11_203
	word32 r10_204
	word32 r9_205
	word32 r8_206
	word32 r7_207
	word32 r6_208
	bool Z_209
	byte CZN_210
	byte CZ_211
	word32 r3_212
	word32 r5_214
	word32 r4_215
	bool N_216
	call Mem189[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_73,C_191,CVZN_68,CZ_57,CZN_74,dwLoc0C_50,dwLoc10_51,dwLoc14_52,fp_72,N_53,r0_180,r1_67,r10_63,r11_64,r2_66,r3_56,r4_54,r5_55,r6_59,r7_60,r8_61,r9_62,sp_187,V_192,VZN_65,Z_162,ZN_190
		defs: ap_198,C_196,CVZN_194,CZ_211,CZN_210,fp_213,N_216,r0_199,r1_200,r10_204,r11_203,r2_201,r3_212,r4_215,r5_214,r6_208,r7_207,r8_206,r9_205,sp_193,V_197,VZN_202,Z_209,ZN_195
// DataOut: ap fp r11 r5 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l000151B2:
	word32 sp_110 = sp_2 - 0x00000004
	Mem112[sp_110:uint32] = (uint32) (word16) r6_339
	Mem115[sp_110 - 0x00000004:uint32] = (uint32) (word16) r7_338
	Mem118[sp_110 - 0x00000008:uint32] = (uint32) (word16) r8_33
	Mem121[sp_110 - 0x0000000C:uint32] = (uint32) (word16) r9_24
	Mem123[sp_110 - 0x00000010:word32] = r5_348
	word32 r0_124 = (uint32) (word16) r11_14
	Mem127[sp_110 - 0x00000014:word32] = r0_124 + 0x0000076C
	Mem130[sp_110 - 0x00000018:word32] = r3 + 5135
	Mem133[sp_110 - 0x0000001C:word32] = Mem130[ap + 16:word32]
	word32 sp_137
	byte CVZN_138
	byte ZN_139
	bool C_140
	bool V_141
	word32 r0_143
	word32 r1_144
	word32 r2_145
	byte VZN_146
	word32 r11_147
	word32 r10_148
	word32 r9_149
	word32 r8_150
	word32 r7_151
	word32 r6_152
	bool Z_153
	byte CZN_154
	byte CZ_155
	word32 r3_156
	word32 r5_158
	word32 r4_159
	bool N_160
	call Mem133[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_73,C_135,CVZN_68,CZ_57,CZN_74,dwLoc0C_50,dwLoc10_51,dwLoc14_52,fp_72,N_53,r0_124,r1_67,r10_63,r11_64,r2_66,r3_56,r4_54,r5_55,r6_59,r7_60,r8_61,r9_62,sp_131,V_136,VZN_65,Z_58,ZN_134
		defs: ap_142,C_140,CVZN_138,CZ_155,CZN_154,fp_157,N_160,r0_143,r1_144,r10_148,r11_147,r2_145,r3_156,r4_159,r5_158,r6_152,r7_151,r8_150,r9_149,sp_137,V_141,VZN_146,Z_153,ZN_139
// DataOut: ap fp r11 r5 r6 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

l0001524F:
	word32 sp_100 = fp_157 - 0x00000004
	*spOut = sp_100
	word32 fp_101
	*fpOut = Mem0[sp_100 + 0x00000010:word32]
	word32 ap_102
	*apOut = Mem0[sp_100 + 0x0000000C:word32]
	return Mem0[ap_142 + 16:word32]
// DataOut: ap fp r0 r11 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>

fn00015106_exit:
// DataOut: ap fp r0 r11 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid> r2:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> -20(fp):fp + -8 -16(fp):r3 + 5108 -12(fp):<invalid>



word32 fn00015256(word32 r0, word32 r2, word32 r3, word32 r4, word32 r6, word32 ap, word32 fp, word32 pc, ptr32 & r2Out, ptr32 & r4Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r2 r3 r4 r6
// LiveOut: ap fp r0 r2 r4 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved:
fn00015256_entry:
	*r2Out = r2
// DataOut: ap fp pc r0 r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00015256:
	word32 r0_100
	word32 r5_10
	word32 v8_5 = Mem0[r2 + 0x0000C5FB:word32] - 0x00000001
	Mem6[r2 + 0x0000C5FB:word32] = v8_5
	branch v8_5 < 0x00000000 l0001527C
// DataOut: ap fp pc r0 r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001527C:
	word32 r5_170
	word32 sp_173
	r0_100 = fn0000D69A(r0, r3, r4, r6, ap, fp, pc, out r2, out r3, out r5_170, out ap, out fp, out sp_173)
	r5_10 = r0_100
// DataOut: ap fp pc r0 r2 r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l00015268:
	r0_100 = Mem6[r2 + 0x0000C5F7:word32]
	Mem158[r2 + 0x0000C5F7:word32] = Mem6[r2 + 0x0000C5F7:word32] + 0x00000001
	r5_10 = (uint32) Mem158[r0_100:byte]
// DataOut: ap fp pc r0 r2 r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l00015286:
	word32 r7_107 = r5_10 + 0x00000001
	word32 r4_101
	*r4Out = 0x00000000
// DataOut: ap fp pc r0 r2 r3 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r1:<invalid>

l0001528C:
	word32 r5_140
	word32 v16_44 = Mem6[r2 + 0x0000C5FB:word32] - 0x00000001
	Mem45[r2 + 0x0000C5FB:word32] = v16_44
	branch v16_44 < 0x00000000 l000152A8
// DataOut: ap fp pc r0 r2 r3 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r6:<invalid> r1:<invalid>

l000152A8:
	word32 r3_146
	word32 r5_147
	word32 sp_150
	r5_140 = fn0000D69A(r0_100, r3, r4_101, r6, ap, fp, pc, out r2, out r3_146, out r5_147, out ap, out fp, out sp_150)
// DataOut: ap fp pc r2 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r6:<invalid> r1:<invalid>

l00015294:
	word32 r0_137 = Mem45[r2 + 0x0000C5F7:word32]
	Mem139[r2 + 0x0000C5F7:word32] = Mem45[r2 + 0x0000C5F7:word32] + 0x00000001
	r5_140 = (uint32) Mem139[r0_137:byte]
// DataOut: ap fp pc r2 r4 r5 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r6:<invalid> r1:<invalid>

l000152B2:
	word32 r6_56 = r5_140 & ~0xFFFFFFF0
	word32 r0_59 = (uint32) SLICE(r5_140 & ~0xFFFFFF0F, ui28, 4)
	r6 = r6_56 + 0x00000001
	r3 = r0_59 + 0x00000001
	branch r0_59 + 0x00000001 + r4_101 <=u Mem45[ap + 8:word32] l000152DE
// DataOut: ap fp pc r2 r3 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r3:<invalid> r1:<invalid> r6:<invalid>

l000152DE:
	word32 r1_94 = Mem45[ap + 4:word32]
// DataOut: ap fp pc r1 r2 r3 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r2:<invalid> r1:<invalid>

l000152E4:
	Mem103[r1_94:word32] = r6_56 + 0x00000001
	r0_100 = r4_101
	r4_101 = r4_101 + 0x00000001
	*r4Out = r4_101
	r3 = r3 - 0x00000001
	branch r3 != 0x00000000 l000152E4
// DataOut: ap fp pc r0 r1 r2 r3 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r2:<invalid>

l000152F1:
	r7_107 = r7_107 - 0x00000001
	branch r7_107 != 0x00000000 l0001528C
// DataOut: ap fp pc r0 r2 r3 r4 r6 r7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r2:<invalid>

l000152F5:
	word32 r3_115
	branch r4_101 == Mem103[ap + 8:word32] l00015300
// DataOut: fp pc r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r2:<invalid>

l00015300:
	r3_115 = SEQ(SLICE(r3, word24, 8), 0x00)
// DataOut: fp pc r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r2:<invalid>

l000152FB:
	r3_115 = SEQ(SLICE(r3, word24, 8), 0x04)
// DataOut: fp pc r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r2:<invalid>

l00015302:
	word32 sp_121 = fp - 0x00000004
	*spOut = sp_121
	word32 fp_122
	*fpOut = Mem103[sp_121 + 0x00000010:word32]
	word32 ap_123
	*apOut = Mem103[sp_121 + 0x0000000C:word32]
	return (int32) (int8) r3_115
// DataOut: ap fp pc r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r1:<invalid> r2:<invalid>

l000152DA:
	word32 sp_90 = fp - 0x00000004
	*spOut = sp_90
	word32 fp_91
	*fpOut = Mem45[sp_90 + 0x00000010:word32]
	word32 ap_92
	*apOut = Mem45[sp_90 + 0x0000000C:word32]
	return 0x00000004
// DataOut: ap fp pc r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r2:<invalid> r1:<invalid>

fn00015256_exit:
// DataOut: ap fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r6:<invalid> r2:<invalid> r1:<invalid>



void fn0001530A(word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001530A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0001530A_entry:
// DataOut: ap
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0001530A:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00015896(word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00015896_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00015896_entry:
// DataOut: ap
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00015896:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00015E22(word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00015E22_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00015E22_entry:
// DataOut: ap
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00015E22:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000162E6(word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000162E6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000162E6_entry:
// DataOut: ap
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000162E6:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn000167AA(word32 r0, word32 r2, word32 r3, word32 r4, word32 r6, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp pc r0 r2 r3 r4 r6
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000167AA_entry:
// DataOut: fp pc r0 r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000167AA:
	word32 r0_11
	Mem4[fp + -24:word32] = 0x00000007
	branch Mem4[r4 + 0x0000C5FB:word32] + Mem4[r4 + 132:word32] <= 0x00030D40 l000167DC
// DataOut: fp pc r0 r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000167DC:
	r0_11 = SEQ(SLICE(r0, word24, 8), 0x07)
// DataOut: fp pc r0 r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1052 ap:<invalid>
// LocalsOut: fp(32)

l000167D4:
	r0_11 = SEQ(SLICE(r0, word24, 8), 0x08)
// DataOut: fp pc r0 r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1052 ap:<invalid>
// LocalsOut: fp(32)

l000167DF:
	Mem13[fp + -28:int32] = (int32) (int8) r0_11
	Mem15[r4 + 0x0000C819:word32] = 0x00000000
	word32 ap_16 = (uint32) Mem15[r4 + 0x0000C640:word16]
	branch (ap_16 & 0x00000004) != 0x00000000 l000167F7
// DataOut: ap fp pc r0 r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1052 ap:<invalid> r0:<invalid>
// LocalsOut: fp(32)

l000167F7:
	Mem393[fp + -20:word32] = 0x00000009
	word32 r2_403
	word32 r4_404
	word32 ap_405
	word32 fp_406
	word32 sp_407
	word32 r0_408 = fn00015256(r0_11, r2, r3, r4, r6, ap_16, fp, pc, out r2_403, out r4_404, out ap_405, out fp_406, out sp_407)
	branch r0_408 == 0x00000000 l00016812
// DataOut: ap fp pc r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -1052 ap:<invalid> r0:<invalid>

l00016812:
	Mem423[sp_407 - 0x00000004:word32] = fp_406 + -20
	Mem426[sp_407 - 0x00000008:word32] = fp_406 + -8
	Mem429[sp_407 - 0x00000010:word64] = 0x0000000000000000
	Mem432[sp_407 - 0x00000014:uint32] = 0x00000100
	Mem435[sp_407 - 0x00000018:uint32] = 0x00000100
	Mem438[sp_407 - 0x0000001C:word32] = fp_406 + -1052
	word32 r2_442
	word32 r3_443
	word32 r4_444
	word32 r5_445
	word32 r6_446
	word32 r11_447
	word32 ap_448
	word32 fp_449
	word32 sp_450
	word32 r0_451 = fn0001878E(r0_408, ap_405, fp_406, out r2_442, out r3_443, out r4_444, out r5_445, out r6_446, out r11_447, out ap_448, out fp_449, out sp_450)
	branch r0_451 == 0x00000000 l00016847
// DataOut: ap fp pc r0 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016847:
	Mem479[sp_450 - 0x00000004:uint32] = 0x00000040
	Mem482[sp_450 - 0x00000008:word32] = fp_449 + -1052
	word32 r2_486
	word32 r4_487
	word32 ap_488
	word32 fp_489
	word32 sp_490
	word32 r0_491 = fn00015256(r0_451, r2_442, r0_451, r4_444, r6_446, ap_448, fp_449, pc, out r2_486, out r4_487, out ap_488, out fp_489, out sp_490)
	branch r0_491 == 0x00000000 l0001685D
// DataOut: ap fp pc r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l0001685D:
	Mem506[sp_490 - 0x00000004:word32] = fp_489 + -24
	Mem509[sp_490 - 0x00000008:word32] = fp_489 + -12
	Mem512[sp_490 - 0x0000000C:word32] = r2_486 + 256
	Mem515[sp_490 - 0x00000010:word32] = r2_486 + 128
	Mem517[sp_490 - 0x00000014:word32] = 0x00000000
	Mem520[sp_490 - 0x00000018:uint32] = 0x00000040
	Mem523[sp_490 - 0x0000001C:word32] = fp_489 + -1052
	word32 r2_527
	word32 r3_528
	word32 r4_529
	word32 r5_530
	word32 r6_531
	word32 r11_532
	word32 sp_535
	word32 fp_534
	word32 ap_533
	word32 r0_536 = fn0001878E(r0_491, ap_488, fp_489, out r2_527, out r3_528, out r4_529, out r5_530, out r6_531, out r11_532, out ap_533, out fp_534, out sp_535)
	branch r0_536 == 0x00000000 l0001689E
// DataOut: ap fp pc r0 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l0001689E:
	Mem575[sp_535 - 0x00000004:uint32] = 0x00000040
	Mem578[sp_535 - 0x00000008:word32] = fp_534 + -1052
	word32 r2_582
	word32 r4_583
	word32 ap_584
	word32 fp_585
	word32 sp_586
	word32 r0_587 = fn00015256(r0_536, r2_527, r0_536, r4_529, r6_531, ap_533, fp_534, pc, out r2_582, out r4_583, out ap_584, out fp_585, out sp_586)
	branch r0_587 == 0x00000000 l000168B4
// DataOut: fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l000168B4:
	word32 fp_605
	word32 sp_604
	word32 ap_600 = (uint32) Mem578[r4_583 + 0x0000C640:word16]
	branch (ap_600 & 0x00000002) == 0x00000000 l00016928
// DataOut: ap fp r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016928:
	Mem786[sp_586 - 0x00000004:word32] = fp_585 + -28
	Mem789[sp_586 - 0x00000008:word32] = fp_585 + -16
	Mem792[sp_586 - 0x0000000C:word32] = r2_582 + 256
	Mem795[sp_586 - 0x00000010:word32] = r2_582 + 384
	Mem797[sp_586 - 0x00000014:word32] = 0x00000000
	Mem800[sp_586 - 0x00000018:uint32] = 0x00000040
	Mem803[sp_586 - 0x0000001C:word32] = fp_585 + -1052
	word32 r2_807
	word32 r3_808
	word32 r4_809
	word32 r5_810
	word32 r6_811
	word32 r11_812
	word32 sp_815
	word32 ap_813
	word32 r0_816 = fn0001878E(r0_587, ap_600, fp_585, out r2_807, out r3_808, out r4_809, out r5_810, out r6_811, out r11_812, out ap_813, out fp_605, out sp_815)
	branch r0_816 == 0x00000000 l00016973
// DataOut: ap fp r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016973:
	Mem864[sp_815 - 0x00000004:word32] = Mem803[fp_605 + -28:word32]
	Mem867[sp_815 - 0x00000008:word32] = Mem864[fp_605 + -24:word32]
	Mem870[sp_815 - 0x0000000C:word32] = Mem867[fp_605 + -20:word32]
	Mem873[sp_815 - 0x00000010:word32] = Mem870[fp_605 + -16:word32]
	Mem876[sp_815 - 0x00000014:word32] = Mem873[fp_605 + -12:word32]
	Mem879[sp_815 - 0x00000018:word32] = Mem876[fp_605 + -8:word32]
	fn00015896(ap_813)
	sp_604 = sp_815 - 0x00000018
// DataOut: fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l0001694C:
	branch r0_816 != 0x00000001 l0001695B
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016951:
	Mem855[sp_815 - 0x00000004:word32] = Mem803[fp_605 + -16:word32]
	ap_813 = fn00018BF6(ap_813, fp_605, out fp_605, out sp_815)
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l0001695B:
	Mem830[sp_815 - 0x00000004:word32] = Mem803[fp_605 + -12:word32]
	word32 fp_834
	word32 sp_835
	word32 ap_836 = fn00018BF6(ap_813, fp_605, out fp_834, out sp_835)
	Mem839[sp_835 - 0x00000004:word32] = Mem830[fp_834 + -8:word32]
	word32 fp_843
	word32 sp_844
	fn00018BF6(ap_836, fp_834, out fp_843, out sp_844)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l000168BF:
	Mem683[sp_586 - 0x00000004:word32] = fp_585 + -28
	Mem686[sp_586 - 0x00000008:word32] = fp_585 + -16
	Mem689[sp_586 - 0x0000000C:word32] = r2_582 + 256
	Mem692[sp_586 - 0x00000010:word32] = r2_582 + 512
	Mem694[sp_586 - 0x00000014:word32] = 0x00000000
	Mem697[sp_586 - 0x00000018:uint32] = 0x00000040
	Mem700[sp_586 - 0x0000001C:word32] = fp_585 + -1052
	word32 r2_704
	word32 r3_705
	word32 r4_706
	word32 r5_707
	word32 r6_708
	word32 r11_709
	word32 sp_712
	word32 ap_710
	word32 r0_713 = fn0001878E(r0_587, ap_600, fp_585, out r2_704, out r3_705, out r4_706, out r5_707, out r6_708, out r11_709, out ap_710, out fp_605, out sp_712)
	branch r0_713 == 0x00000000 l0001690A
// DataOut: ap fp r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l0001690A:
	Mem761[sp_712 - 0x00000004:word32] = Mem700[fp_605 + -28:word32]
	Mem764[sp_712 - 0x00000008:word32] = Mem761[fp_605 + -24:word32]
	Mem767[sp_712 - 0x0000000C:word32] = Mem764[fp_605 + -20:word32]
	Mem770[sp_712 - 0x00000010:word32] = Mem767[fp_605 + -16:word32]
	Mem773[sp_712 - 0x00000014:word32] = Mem770[fp_605 + -12:word32]
	Mem776[sp_712 - 0x00000018:word32] = Mem773[fp_605 + -8:word32]
	fn0001530A(ap_710)
	sp_604 = sp_712 - 0x00000018
// DataOut: fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l0001698D:
	word32 sp_606 = sp_604 - 0x00000004
	Mem608[sp_606:word32] = Mem578[fp_605 + -16:word32]
	word32 sp_612
	byte ZN_613
	bool C_614
	bool V_615
	word32 fp_616
	word32 r4_617
	word32 ap_618
	byte CVZN_619
	byte CZN_620
	word32 r0_621
	byte VZN_622
	bool Z_623
	bool N_624
	word32 r3_625
	word32 r2_626
	word32 r6_627
	word32 pc_628
	word32 r5_629
	word32 r11_630
	call ap_600 + 2 (retsize: 4; depth: 4)
		uses: ap_600,C_610,CVZN,CZN_8,dwLoc0420_396,dwLoc0424_399,fp_605,N,pc,r0_587,r11_532,r2_582,r3_588,r4_583,r5_530,r6_531,sp_606,V_611,VZN,Z_590,ZN_609
		defs: ap_618,C_614,CVZN_619,CZN_620,fp_616,N_624,pc_628,r0_621,r11_630,r2_626,r3_625,r4_617,r5_629,r6_627,sp_612,V_615,VZN_622,Z_623,ZN_613
	Mem633[sp_612 - 0x00000004:word32] = Mem608[fp_616 + -12:word32]
	word32 sp_637
	byte ZN_638
	bool C_639
	bool V_640
	word32 fp_641
	word32 r4_642
	word32 ap_643
	byte CVZN_644
	byte CZN_645
	word32 r0_646
	byte VZN_647
	bool Z_648
	bool N_649
	word32 r3_650
	word32 r2_651
	word32 r6_652
	word32 pc_653
	word32 r5_654
	word32 r11_655
	call ap_618 + 2 (retsize: 4; depth: 4)
		uses: ap_618,C_635,CVZN_619,CZN_620,dwLoc0420_396,dwLoc0424_399,fp_616,N_624,pc_628,r0_621,r11_630,r2_626,r3_625,r4_617,r5_629,r6_627,sp_631,V_636,VZN_622,Z_623,ZN_634
		defs: ap_643,C_639,CVZN_644,CZN_645,fp_641,N_649,pc_653,r0_646,r11_655,r2_651,r3_650,r4_642,r5_654,r6_652,sp_637,V_640,VZN_647,Z_648,ZN_638
	Mem658[sp_637 - 0x00000004:word32] = Mem633[fp_641 + -8:word32]
	word32 sp_662
	byte ZN_663
	bool C_664
	bool V_665
	word32 fp_666
	word32 r4_667
	word32 ap_668
	byte CVZN_669
	byte CZN_670
	word32 r0_671
	byte VZN_672
	bool Z_673
	bool N_674
	word32 r3_675
	word32 r2_676
	word32 r6_677
	word32 pc_678
	word32 r5_679
	word32 r11_680
	call ap_643 + 2 (retsize: 4; depth: 4)
		uses: ap_643,C_660,CVZN_644,CZN_645,dwLoc0420_396,dwLoc0424_399,fp_641,N_649,pc_653,r0_646,r11_655,r2_651,r3_650,r4_642,r5_654,r6_652,sp_656,V_661,VZN_647,Z_648,ZN_659
		defs: ap_668,C_664,CVZN_669,CZN_670,fp_666,N_674,pc_678,r0_671,r11_680,r2_676,r3_675,r4_667,r5_679,r6_677,sp_662,V_665,VZN_672,Z_673,ZN_663
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l000168E3:
	branch r0_713 != 0x00000001 l000168F2
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l000168E8:
	Mem752[sp_712 - 0x00000004:word32] = Mem700[fp_605 + -16:word32]
	ap_710 = fn00018BF6(ap_710, fp_605, out fp_605, out sp_712)
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l000168F2:
	Mem727[sp_712 - 0x00000004:word32] = Mem700[fp_605 + -12:word32]
	word32 fp_731
	word32 sp_732
	word32 ap_733 = fn00018BF6(ap_710, fp_605, out fp_731, out sp_732)
	Mem736[sp_732 - 0x00000004:word32] = Mem727[fp_731 + -8:word32]
	word32 fp_740
	word32 sp_741
	fn00018BF6(ap_733, fp_731, out fp_740, out sp_741)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l000168B0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016881:
	branch r0_536 != 0x00000001 l00016890
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016886:
	Mem566[sp_535 - 0x00000004:word32] = Mem523[fp_534 + -12:word32]
	ap_533 = fn00018BF6(ap_533, fp_534, out fp_534, out sp_535)
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016890:
	Mem550[sp_535 - 0x00000004:word32] = Mem523[fp_534 + -8:word32]
	word32 fp_554
	word32 sp_555
	fn00018BF6(ap_533, fp_534, out fp_554, out sp_555)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> r11:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1128(fp):<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 128 -1108(fp):r2 + 256 -1104(fp):fp + -12 -1100(fp):fp + -24 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016859:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016834:
	branch r0_451 != 0x00000001 l00016843
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016839:
	Mem470[sp_450 - 0x00000004:word32] = Mem438[fp_449 + -8:word32]
	word32 fp_474
	word32 sp_475
	fn00018BF6(ap_448, fp_449, out fp_474, out sp_475)
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l00016843:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> r11:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1092(fp):<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000100 -1080(fp):0x00000100 -1076(fp):0x0000000000000000 -1068(fp):fp + -8 -1064(fp):fp + -20 -1060(fp):fp + -1052 -1056(fp):0x00000100

l0001680E:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1060(fp):fp + -1052 -1056(fp):0x00000100

l000167F4:
// DataOut: ap fp pc r0 r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1052 ap:<invalid> r0:<invalid>
// LocalsOut: fp(32)

l000169AC:
	word32 r2_76
	word32 r4_77
	word32 ap_78
	word32 fp_79
	word32 sp_80
	word32 r0_81 = fn00015256(r0_11, r2, r3, r4, r6, ap_16, fp, pc, out r2_76, out r4_77, out ap_78, out fp_79, out sp_80)
	branch r0_81 == 0x00000000 l000169C2
// DataOut: ap fp pc r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -1052 ap:<invalid> r0:<invalid>

l000169C2:
	Mem101[sp_80 - 0x00000004:word32] = fp_79 + -24
	Mem104[sp_80 - 0x00000008:word32] = fp_79 + -12
	Mem107[sp_80 - 0x0000000C:word32] = r2_76 + 256
	Mem109[sp_80 - 0x00000010:word32] = r2_76
	Mem111[sp_80 - 0x00000014:word32] = 0x00000000
	Mem114[sp_80 - 0x00000018:uint32] = 0x00000040
	Mem117[sp_80 - 0x0000001C:word32] = fp_79 + -1052
	word32 r2_121
	word32 r3_122
	word32 r4_123
	word32 r5_124
	word32 r6_125
	word32 r11_126
	word32 ap_127
	word32 fp_128
	word32 sp_129
	word32 r0_130 = fn0001878E(r0_81, ap_78, fp_79, out r2_121, out r3_122, out r4_123, out r5_124, out r6_125, out r11_126, out ap_127, out fp_128, out sp_129)
	branch r0_130 == 0x00000000 l000169F7
// DataOut: ap fp pc r0 r2 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1060(fp):fp + -1052 -1056(fp):0x00000040

l000169F7:
	Mem158[sp_129 - 0x00000004:uint32] = 0x00000040
	Mem161[sp_129 - 0x00000008:word32] = fp_128 + -1052
	word32 r2_165
	word32 r4_166
	word32 ap_167
	word32 fp_168
	word32 sp_169
	word32 r0_170 = fn00015256(r0_130, r2_121, r0_130, r4_123, r6_125, ap_127, fp_128, pc, out r2_165, out r4_166, out ap_167, out fp_168, out sp_169)
	branch r0_170 == 0x00000000 l00016A0D
// DataOut: fp r0 r2 r4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A0D:
	word32 ap_197
	word32 fp_196
	word32 sp_195
	word32 ap_183 = (uint32) Mem161[r4_166 + 0x0000C640:word16]
	branch (ap_183 & 0x00000002) == 0x00000000 l00016A70
// DataOut: ap fp r0 r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A70:
	Mem306[sp_169 - 0x00000004:word32] = fp_168 + -28
	Mem309[sp_169 - 0x00000008:word32] = fp_168 + -16
	Mem312[sp_169 - 0x0000000C:word32] = r2_165 + 256
	Mem315[sp_169 - 0x00000010:word32] = r2_165 + 384
	Mem317[sp_169 - 0x00000014:word32] = 0x00000000
	Mem320[sp_169 - 0x00000018:uint32] = 0x00000040
	Mem323[sp_169 - 0x0000001C:word32] = fp_168 + -1052
	word32 r2_327
	word32 r3_328
	word32 r4_329
	word32 r5_330
	word32 r6_331
	word32 r11_332
	word32 sp_335
	word32 r0_336 = fn0001878E(r0_170, ap_183, fp_168, out r2_327, out r3_328, out r4_329, out r5_330, out r6_331, out r11_332, out ap_197, out fp_196, out sp_335)
	branch r0_336 == 0x00000000 l00016AB1
// DataOut: ap fp r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016AB1:
	Mem375[sp_335 - 0x00000004:word32] = Mem323[fp_196 + -28:word32]
	Mem378[sp_335 - 0x00000008:word32] = Mem375[fp_196 + -24:word32]
	Mem381[sp_335 - 0x0000000C:word32] = Mem378[fp_196 + -16:word32]
	Mem384[sp_335 - 0x00000010:word32] = Mem381[fp_196 + -12:word32]
	fn000162E6(ap_197)
	sp_195 = sp_335 - 0x00000010
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 384 -1108(fp):r2 + 256 -1104(fp):fp + -16 -1100(fp):fp + -28 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A94:
	branch r0_336 != 0x00000001 l00016AA3
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 384 -1108(fp):r2 + 256 -1104(fp):fp + -16 -1100(fp):fp + -28 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A99:
	Mem366[sp_335 - 0x00000004:word32] = Mem323[fp_196 + -16:word32]
	ap_197 = fn00018BF6(ap_197, fp_196, out fp_196, out sp_335)
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 384 -1108(fp):r2 + 256 -1104(fp):fp + -16 -1100(fp):fp + -28 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016AA3:
	Mem350[sp_335 - 0x00000004:word32] = Mem323[fp_196 + -12:word32]
	word32 fp_354
	word32 sp_355
	fn00018BF6(ap_197, fp_196, out fp_354, out sp_355)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 384 -1108(fp):r2 + 256 -1104(fp):fp + -16 -1100(fp):fp + -28 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A18:
	Mem218[sp_169 - 0x00000004:word32] = fp_168 + -28
	Mem221[sp_169 - 0x00000008:word32] = fp_168 + -16
	Mem224[sp_169 - 0x0000000C:word32] = r2_165 + 256
	Mem227[sp_169 - 0x00000010:word32] = r2_165 + 512
	Mem229[sp_169 - 0x00000014:word32] = 0x00000000
	Mem232[sp_169 - 0x00000018:uint32] = 0x00000040
	Mem235[sp_169 - 0x0000001C:word32] = fp_168 + -1052
	word32 r2_239
	word32 r3_240
	word32 r4_241
	word32 r5_242
	word32 r6_243
	word32 r11_244
	word32 sp_247
	word32 r0_248 = fn0001878E(r0_170, ap_183, fp_168, out r2_239, out r3_240, out r4_241, out r5_242, out r6_243, out r11_244, out ap_197, out fp_196, out sp_247)
	branch r0_248 == 0x00000000 l00016A59
// DataOut: ap fp r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A59:
	Mem287[sp_247 - 0x00000004:word32] = Mem235[fp_196 + -28:word32]
	Mem290[sp_247 - 0x00000008:word32] = Mem287[fp_196 + -24:word32]
	Mem293[sp_247 - 0x0000000C:word32] = Mem290[fp_196 + -16:word32]
	Mem296[sp_247 - 0x00000010:word32] = Mem293[fp_196 + -12:word32]
	fn00015E22(ap_197)
	sp_195 = sp_247 - 0x00000010
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 512 -1108(fp):r2 + 256 -1104(fp):fp + -16 -1100(fp):fp + -28 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016AC5:
	Mem200[sp_195 - 0x00000004:word32] = Mem161[fp_196 + -16:word32]
	word32 fp_204
	word32 sp_205
	word32 ap_206 = fn00018BF6(ap_197, fp_196, out fp_204, out sp_205)
	Mem209[sp_205 - 0x00000004:word32] = Mem200[fp_204 + -12:word32]
	word32 fp_213
	word32 sp_214
	fn00018BF6(ap_206, fp_204, out fp_213, out sp_214)
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: r3:r0 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):<invalid> -1108(fp):r2 + 256 -1104(fp):fp + -16 -1100(fp):fp + -28 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016AD9:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: r3:<invalid> sp:<invalid> r2:<invalid> r0:0x00000000 fp:<invalid> ap:<invalid> -1132(fp):fp + -1052 -1128(fp):0x00000040 -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):<invalid> -1108(fp):r2 + 256 -1104(fp):<invalid> -1100(fp):<invalid> -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):<invalid> -1080(fp):<invalid> -1076(fp):<invalid> -1072(fp):r2 + 256 -1068(fp):<invalid> -1064(fp):<invalid> -1060(fp):fp + -1052 -1056(fp):<invalid>

l00016A3C:
	branch r0_248 != 0x00000001 l00016A4B
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 512 -1108(fp):r2 + 256 -1104(fp):fp + -16 -1100(fp):fp + -28 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A41:
	Mem278[sp_247 - 0x00000004:word32] = Mem235[fp_196 + -16:word32]
	ap_197 = fn00018BF6(ap_197, fp_196, out fp_196, out sp_247)
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 512 -1108(fp):r2 + 256 -1104(fp):fp + -16 -1100(fp):fp + -28 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A4B:
	Mem262[sp_247 - 0x00000004:word32] = Mem235[fp_196 + -12:word32]
	word32 fp_266
	word32 sp_267
	fn00018BF6(ap_197, fp_196, out fp_266, out sp_267)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):r2 + 512 -1108(fp):r2 + 256 -1104(fp):fp + -16 -1100(fp):fp + -28 -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l00016A09:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1096(fp):fp + -1052 -1092(fp):0x00000040 -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l000169E4:
	branch r0_130 != 0x00000001 l000169F3
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l000169E9:
	Mem149[sp_129 - 0x00000004:word32] = Mem117[fp_128 + -12:word32]
	word32 fp_153
	word32 sp_154
	fn00018BF6(ap_127, fp_128, out fp_153, out sp_154)
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r11:<invalid> fp:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l000169F3:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> fp:<invalid> r11:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1092(fp):<invalid> -1088(fp):fp + -1052 -1084(fp):0x00000040 -1080(fp):0x00000000 -1076(fp):r2 -1072(fp):r2 + 256 -1068(fp):fp + -12 -1064(fp):fp + -24 -1060(fp):fp + -1052 -1056(fp):0x00000040

l000169BE:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> fp:<invalid> r6:<invalid> r2:<invalid> r1:<invalid> -1060(fp):fp + -1052 -1056(fp):0x00000040

fn000167AA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> r0:<invalid> r3:<invalid> fp:<invalid> r2:<invalid> r5:<invalid> r7:<invalid> r4:<invalid> r6:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -1132(fp):fp + -1052 -1128(fp):<invalid> -1124(fp):fp + -1052 -1120(fp):0x00000040 -1116(fp):0x00000000 -1112(fp):<invalid> -1108(fp):r2 + 256 -1104(fp):<invalid> -1100(fp):<invalid> -1096(fp):fp + -1052 -1092(fp):<invalid> -1088(fp):fp + -1052 -1084(fp):<invalid> -1080(fp):<invalid> -1076(fp):<invalid> -1072(fp):r2 + 256 -1068(fp):<invalid> -1064(fp):<invalid> -1060(fp):fp + -1052 -1056(fp):<invalid>



void fn000173CA(word32 r0, word32 r1, word32 r3, word32 r4, word32 r9, word32 r10, word32 ap, word32 fp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r1 r10 r3 r4 r9
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000173CA_entry:
// DataOut: ap fp r0 r1 r10 r3 r4 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000173CA:
	Mem6[Mem6[ap + 4:word32]:word32] = 0x00000000
	Mem9[Mem9[ap + 8:word32]:word32] = 0x00000000
	Mem12[r3 + 1511:word32] = fp + -25
	word32 sp_173 = fp - 0x0000001C
	word32 r6_168 = 0x00000000
	branch 0x00000000 <u (uint32) Mem12[r3 + 0x0000C688:word16] l00017403
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00017403:
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000001C r6:0x00000000 r11:0x00000000 r8:0x00000000 r2:<invalid>

l00017414:
	word32 sp_176 = sp_173 - 0x00000004
	Mem177[sp_176:word32] = 0x00000004
	Mem180[sp_176 - 0x00000004:word32] = r3 + 152
	word32 r2_184
	word32 r3_185
	word32 r5_186
	word32 r7_187
	word32 ap_188
	word32 fp_189
	word32 sp_190
	word32 r0_191 = fn0000D5BE(r0, r4, r6_168, ap, fp, out r2_184, out r3_185, out r5_186, out r7_187, out ap_188, out fp_189, out sp_190)
	branch r0_191 != 0x00000000 l00017429
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017429:
	Mem204[sp_190 - 0x00000004:word32] = 0x00000004
	Mem207[sp_190 - 0x00000008:word32] = r3_185 + 0x0000C634
	Mem210[sp_190 - 0x0000000C:word32] = r3_185 + 152
	word32 sp_214
	byte CVZN_215
	byte ZN_216
	bool C_217
	bool V_218
	word32 r6_219
	bool Z_220
	bool N_221
	word32 r11_222
	word32 ap_223
	word32 fp_224
	word32 r3_225
	word32 r8_226
	word32 r2_227
	byte CZN_228
	word32 r0_229
	word32 r7_230
	word32 r10_231
	word32 r9_232
	word32 r5_233
	word32 r4_234
	byte VZN_235
	word32 r1_236
	call Mem210[0x000192D8:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_188,C_212,CVZN_169,CZN_170,fp_189,N_167,r0_191,r1_160,r10_164,r11_171,r2_184,r3_185,r4_162,r5_186,r6_168,r7_187,r8_165,r9_163,sp_208,V_213,VZN_161,Z_193,ZN_211
		defs: ap_223,C_217,CVZN_215,CZN_228,fp_224,N_221,r0_229,r1_236,r10_231,r11_222,r2_227,r3_225,r4_234,r5_233,r6_219,r7_230,r8_226,r9_232,sp_214,V_218,VZN_235,Z_220,ZN_216
	branch r0_229 == 0x00000000 l0001748E
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001748E:
	word32 r1_386
	word32 r2_387
	word32 r3_388
	word32 r5_389
	word32 r7_390
	word32 ap_391
	word32 fp_392
	word32 sp_393
	word32 r0_394 = fn00011C0A(r0_229, r1_236, r4_234, r6_219, ap_223, fp_224, out r1_386, out r2_387, out r3_388, out r5_389, out r7_390, out ap_391, out fp_392, out sp_393)
	branch r0_394 == 0x00000000 l0001749A
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001749A:
	Mem403[sp_393 - 0x00000004:word32] = 0x00000002
	Mem406[sp_393 - 0x00000008:uint32] = (uint32) Mem403[r3_388 + 0x0000C670:word16]
	byte CVZN_411
	byte ZN_412
	bool C_413
	bool V_414
	word32 r6_415
	bool Z_416
	bool N_417
	word32 r11_418
	word32 ap_419
	word32 fp_420
	word32 r8_422
	word32 r2_423
	byte CZN_424
	word32 r0_425
	word32 r7_426
	word32 r10_427
	word32 r9_428
	word32 r5_429
	word32 r4_430
	byte VZN_431
	word32 r1_432
	word32 r3_421
	word32 sp_410
	call r9_232 + 2 (retsize: 4; depth: 4)
		uses: ap_391,C_408,CVZN_215,CZN_228,fp_392,N_221,r0_394,r1_386,r10_231,r11_222,r2_387,r3_388,r4_234,r5_389,r6_219,r7_390,r8_226,r9_232,sp_404,V_409,VZN_235,Z_396,ZN_407
		defs: ap_419,C_413,CVZN_411,CZN_424,fp_420,N_417,r0_425,r1_432,r10_427,r11_418,r2_423,r3_421,r4_430,r5_429,r6_415,r7_426,r8_422,r9_428,sp_410,V_414,VZN_431,Z_416,ZN_412
	branch r0_425 == 0x00000000 l000174B3
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174AA:
	branch r0_425 <= 0x00000001 l000174B3
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174B3:
	branch Mem406[r3_421 + 0x0000C627:word32] == 0x00000000 l000174CE
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174BB:
	Mem919[sp_410 - 0x00000004:word32] = Mem406[r3_421 + 0x0000C627:word32]
	byte CVZN_924
	byte ZN_925
	bool C_926
	bool V_927
	word32 r6_928
	bool Z_929
	bool N_930
	word32 r11_931
	word32 ap_932
	word32 fp_933
	word32 r8_935
	word32 r2_936
	byte CZN_937
	word32 r0_938
	word32 r7_939
	word32 r10_940
	word32 r9_941
	word32 r5_942
	word32 r4_943
	byte VZN_944
	word32 r1_945
	call Mem919[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_419,C_921,CVZN_411,CZN_437,fp_420,N_417,r0_425,r1_432,r10_427,r11_438,r2_423,r3_421,r4_430,r5_429,r6_415,r7_426,r8_422,r9_428,sp_917,V_922,VZN_431,Z_440,ZN_920
		defs: ap_932,C_926,CVZN_924,CZN_937,fp_933,N_930,r0_938,r1_945,r10_940,r11_931,r2_936,r3_934,r4_943,r5_942,r6_928,r7_939,r8_935,r9_941,sp_923,V_927,VZN_944,Z_929,ZN_925
	Mem947[r3_421 + 0x0000C627:word32] = 0x00000000
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174CE:
	word32 sp_445 = sp_410 - 0x00000004
	Mem446[sp_445:word32] = 0x00000003
	Mem449[sp_445 - 0x00000004:uint32] = (uint32) Mem446[r3_421 + 0x0000C672:word16]
	byte CVZN_454
	byte ZN_455
	bool C_456
	bool V_457
	bool Z_459
	bool N_460
	word32 r11_461
	word32 r2_466
	byte CZN_467
	word32 r7_469
	word32 r10_470
	byte VZN_474
	word32 r1_475
	word32 r5_472
	word32 r9_471
	word32 r8_465
	call r9_428 + 2 (retsize: 4; depth: 4)
		uses: ap_419,C_451,CVZN_411,CZN_437,fp_420,N_417,r0_425,r1_432,r10_427,r11_438,r2_423,r3_443,r4_430,r5_429,r6_415,r7_426,r8_422,r9_428,sp_447,V_452,VZN_431,Z_440,ZN_450
		defs: ap_462,C_456,CVZN_454,CZN_467,fp_463,N_460,r0_468,r1_475,r10_470,r11_461,r2_466,r3_464,r4_473,r5_472,r6_458,r7_469,r8_465,r9_471,sp_453,V_457,VZN_474,Z_459,ZN_455
	branch r0 == 0x00000000 l000174E7
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174DE:
	branch r0 <= 0x00000001 l000174E7
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174E7:
	branch Mem449[r3 + 108:word32] != 0x00000000 l0001754B
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174EC:
	r0 = Mem449[r3 + 144:word32] - 0x00000004
	r6_168 = 0x00000000
	word32 r2_773 = r0 + 0x00000004
	branch Mem449[r0 + 0x00000004:word32] == 0x00000000 l0001751B
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174FC:
	word32 sp_862 = sp_173 - 0x00000004
	Mem864[sp_862:word32] = Mem449[r3 + 16:word32]
	Mem867[sp_862 - 0x00000004:word32] = Mem864[r2_773:word32]
	Mem870[sp_862 - 0x00000008:word32] = r3 + 0x0000C701
	byte CVZN_875
	byte ZN_876
	bool C_877
	bool V_878
	bool Z_880
	bool N_881
	word32 r11_882
	word32 r2_887
	byte CZN_888
	word32 r7_890
	word32 r10_891
	byte VZN_895
	word32 r1_896
	call r5_472 + 2 (retsize: 4; depth: 4)
		uses: ap_462,C_872,CVZN_454,CZN_480,fp_463,N_460,r0_771,r1_475,r10_470,r11_481,r2_859,r3_860,r4_473,r5_472,r6_772,r7_469,r8_465,r9_471,sp_868,V_873,VZN_474,Z_775,ZN_871
		defs: ap_883,C_877,CVZN_875,CZN_888,fp_884,N_881,r0_889,r1_896,r10_891,r11_882,r2_887,r3_885,r4_894,r5_893,r6_879,r7_890,r8_886,r9_892,sp_874,V_878,VZN_895,Z_880,ZN_876
	branch r0 == 0x00000000 l00017514
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:0x00000000 r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017514:
	r2_773 = r2_887 + 0x00000004
	branch Mem870[r2_887 + 0x00000004:word32] != 0x00000000 l000174FC
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:0x00000000 r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001750E:
	r6_168 = 0x00000001
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:0x00000000 r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001751B:
	branch r6_168 == 0x00000000 l0001754B
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001751F:
	word32 r2_801 = Mem449[r3 + 148:word32] - 0x00000004
	word32 r2_802 = r2_801 + 0x00000004
	branch Mem449[r2_801 + 0x00000004:word32] == 0x00000000 l0001754B
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001752C:
	word32 sp_810 = sp_173 - 0x00000004
	Mem812[sp_810:word32] = Mem449[r3 + 16:word32]
	Mem815[sp_810 - 0x00000004:word32] = Mem812[r2_802:word32]
	Mem818[sp_810 - 0x00000008:word32] = r3 + 0x0000C701
	byte CVZN_823
	byte ZN_824
	bool C_825
	bool V_826
	bool Z_828
	bool N_829
	word32 r11_830
	word32 r2_835
	byte CZN_836
	word32 r7_838
	word32 r10_839
	word32 r5_841
	byte VZN_843
	word32 r1_844
	call r5_472 + 2 (retsize: 4; depth: 4)
		uses: ap_796,C_820,CVZN_790,CZN_791,fp_795,N_788,r0_793,r1_778,r10_783,r11_792,r2_807,r3_808,r4_780,r5_781,r6_789,r7_784,r8_786,r9_782,sp_816,V_821,VZN_779,Z_804,ZN_819
		defs: ap_831,C_825,CVZN_823,CZN_836,fp_832,N_829,r0_837,r1_844,r10_839,r11_830,r2_835,r3_833,r4_842,r5_841,r6_827,r7_838,r8_834,r9_840,sp_822,V_826,VZN_843,Z_828,ZN_824
	branch r0 == 0x00000000 l00017544
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017544:
	r2_802 = r2_835 + 0x00000004
	branch Mem818[r2_835 + 0x00000004:word32] != 0x00000000 l0001752C
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001753E:
	r6_168 = 0x00000000
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001754B:
	branch Mem449[r3 + 108:word32] != 0x00000000 l00017554
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017550:
	branch r6_168 == 0x00000000 l000175C4
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017554:
	word32 sp_598 = sp_173 - 0x00000004
	Mem600[sp_598:word32] = r3 + 0x0000C701
	byte CVZN_605
	byte ZN_606
	bool C_607
	bool V_608
	bool Z_610
	bool N_611
	word32 r11_612
	word32 r2_617
	byte CZN_618
	word32 r7_620
	word32 r10_621
	word32 r4_624
	byte VZN_625
	word32 r1_626
	word32 r5_623
	call Mem600[0x000192C4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_504,C_602,CVZN_498,CZN_499,fp_503,N_496,r0_501,r1_486,r10_491,r11_500,r2_493,r3_495,r4_488,r5_489,r6_497,r7_492,r8_494,r9_490,sp_598,V_603,VZN_487,Z_506,ZN_601
		defs: ap_613,C_607,CVZN_605,CZN_618,fp_614,N_611,r0_619,r1_626,r10_621,r11_612,r2_617,r3_615,r4_624,r5_623,r6_609,r7_620,r8_616,r9_622,sp_604,V_608,VZN_625,Z_610,ZN_606
	r4 = SEQ(SLICE(r4_624, word24, 8), 0x00)
	branch r0 == 0x00000000 l0001759B
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017567:
	r0 = r0 - 0x00000001
	word32 r2_694 = SEQ(SLICE(r2_617, word24, 8), Mem600[r3 + 0x0000C701 + (r0 - 0x00000001):byte])
	branch (byte) r2_694 == 0x2F l00017599
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017576:
	r0 = Mem600[r3 + 1511:word32]
	branch Mem600[r0 + 12:word32] != 0x00000000 l0001759B
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017580:
	Mem730[sp_173 - 0x00000004:word32] = 0x0000002F
	Mem733[sp_173 - 0x00000008:word32] = r3 + 0x0000C701
	byte CVZN_738
	byte ZN_739
	bool C_740
	bool V_741
	bool Z_743
	bool N_744
	word32 r11_745
	word32 r2_750
	byte CZN_751
	word32 r7_753
	word32 r10_754
	byte VZN_758
	word32 r1_759
	call Mem733[0x00019260:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_613,C_735,CVZN_605,CZN_695,fp_614,N_611,r0_724,r1_626,r10_621,r11_612,r2_694,r3_615,r4_629,r5_623,r6_609,r7_620,r8_616,r9_622,sp_731,V_736,VZN_625,Z_726,ZN_734
		defs: ap_746,C_740,CVZN_738,CZN_751,fp_747,N_744,r0_752,r1_759,r10_754,r11_745,r2_750,r3_748,r4_757,r5_756,r6_742,r7_753,r8_749,r9_755,sp_737,V_741,VZN_758,Z_743,ZN_739
	branch r0 != 0x00000000 l0001759B
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017593:
	branch (byte) r2_750 != 0x5C l0001759B
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017599:
	r4 = SEQ(SLICE(r4, word24, 8), (byte) r4 + 0x01)
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r0:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001759B:
	branch (int32) (int8) r4 != 0x00000000 l000175C4
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175A0:
	word32 sp_657 = sp_173 - 0x00000004
	Mem659[sp_657:uint32] = (uint32) Mem600[r3 + 0x0000C660:word16]
	Mem662[sp_657 - 0x00000004:uint32] = (uint32) Mem659[r3 + 0x0000C662:word16]
	word32 r1_666
	r0 = fn0000BC8A(r0, r5_623, r9_471, ap, fp, out r1_666, out r3, out r4, out r6_168, out r8_465, out r9_471, out ap, out fp, out sp_173)
	word32 r2_676 = Mem662[ap + 4:word32]
	branch Mem662[r2_676:word32] >=u r0 l000175C1
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175BE:
	Mem687[r2_676:word32] = r0
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r7:<invalid> r9:<invalid> r5:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175C1:
	Mem684[Mem684[ap + 8:word32]:word32] = Mem662[ap + 8:word32] + 0x00000001
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r1:<invalid> r0:<invalid> r3:<invalid> r7:<invalid> r9:<invalid> r5:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175C4:
	branch Mem449[r3 + 0x0000C674:word16] == 0x0000 l000175E5
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175CC:
	word32 sp_556 = sp_173 - 0x00000004
	Mem557[sp_556:word32] = 0x00000000
	Mem560[sp_556 - 0x00000004:uint32] = (uint32) Mem557[r3 + 0x0000C674:word16]
	byte CVZN_565
	byte ZN_566
	bool C_567
	bool V_568
	bool Z_570
	bool N_571
	word32 r11_572
	word32 r2_577
	byte CZN_578
	word32 r7_580
	word32 r10_581
	word32 r9_582
	word32 r5_583
	byte VZN_585
	word32 r1_586
	call r9_471 + 2 (retsize: 4; depth: 4)
		uses: ap_527,C_562,CVZN_521,CZN_522,fp_526,N_519,r0_524,r1_509,r10_514,r11_523,r2_516,r3_518,r4_511,r5_512,r6_520,r7_515,r8_517,r9_513,sp_558,V_563,VZN_510,Z_529,ZN_561
		defs: ap_573,C_567,CVZN_565,CZN_578,fp_574,N_571,r0_579,r1_586,r10_581,r11_572,r2_577,r3_575,r4_584,r5_583,r6_569,r7_580,r8_576,r9_582,sp_564,V_568,VZN_585,Z_570,ZN_566
	branch r0 == 0x00000000 l000175E5
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175DC:
	branch r0 <= 0x00000001 l000175E5
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175E5:
	branch r8_465 + 0x00000001 >=u (uint32) Mem449[r3 + 0x0000C688:word16] l000175F6
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175F3:
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000175E4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174E6:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l000174B2:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017499:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017440:
	Mem243[sp_214 - 0x00000004:uint32] = 0x00000401
	Mem245[sp_214 - 0x00000008:word32] = r8_226
	Mem247[sp_214 - 0x0000000C:word32] = r7_230
	Mem250[sp_214 - 0x00000010:word32] = r3_225 + 1515
	word32 sp_254
	byte CVZN_255
	byte ZN_256
	bool C_257
	bool V_258
	word32 r6_259
	bool Z_260
	bool N_261
	word32 r11_262
	word32 ap_263
	word32 fp_264
	word32 r3_265
	word32 r8_266
	word32 r2_267
	byte CZN_268
	word32 r0_269
	word32 r7_270
	word32 r10_271
	word32 r9_272
	word32 r5_273
	word32 r4_274
	byte VZN_275
	word32 r1_276
	call Mem250[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_223,C_252,CVZN_215,CZN_228,fp_224,N_221,r0_229,r1_236,r10_231,r11_222,r2_227,r3_225,r4_234,r5_233,r6_219,r7_230,r8_226,r9_232,sp_248,V_253,VZN_235,Z_238,ZN_251
		defs: ap_263,C_257,CVZN_255,CZN_268,fp_264,N_261,r0_269,r1_276,r10_271,r11_262,r2_267,r3_265,r4_274,r5_273,r6_259,r7_270,r8_266,r9_272,sp_254,V_258,VZN_275,Z_260,ZN_256
	Mem278[sp_254 - 0x00000004:word32] = r0_269
	Mem281[sp_254 - 0x00000008:word32] = r3_265 + 1515
	Mem283[sp_254 - 0x0000000C:word32] = r3_265
	word32 r2_284 = Mem283[r3_265 + 0x0000C839:word32]
	word32 sp_288
	byte CVZN_289
	byte ZN_290
	bool C_291
	bool V_292
	word32 r6_293
	bool Z_294
	bool N_295
	word32 r11_296
	word32 ap_297
	word32 fp_298
	word32 r3_299
	word32 r8_300
	word32 r2_301
	byte CZN_302
	word32 r0_303
	word32 r7_304
	word32 r10_305
	word32 r9_306
	word32 r5_307
	word32 r4_308
	byte VZN_309
	word32 r1_310
	call r2_284 + 2 (retsize: 4; depth: 4)
		uses: ap_263,C_286,CVZN_255,CZN_268,fp_264,N_261,r0_269,r1_276,r10_271,r11_262,r2_284,r3_265,r4_274,r5_273,r6_259,r7_270,r8_266,r9_272,sp_282,V_287,VZN_275,Z_260,ZN_285
		defs: ap_297,C_291,CVZN_289,CZN_302,fp_298,N_295,r0_303,r1_310,r10_305,r11_296,r2_301,r3_299,r4_308,r5_307,r6_293,r7_304,r8_300,r9_306,sp_288,V_292,VZN_309,Z_294,ZN_290
	Mem313[sp_288 - 0x00000004:uint32] = 0x00000401
	Mem315[sp_288 - 0x00000008:word32] = r10_305
	Mem318[sp_288 - 0x0000000C:word32] = r3_299 + 1515
	word32 sp_322
	byte CVZN_323
	byte ZN_324
	bool C_325
	bool V_326
	word32 r6_327
	bool Z_328
	bool N_329
	word32 r11_330
	word32 ap_331
	word32 fp_332
	word32 r3_333
	word32 r8_334
	word32 r2_335
	byte CZN_336
	word32 r0_337
	word32 r7_338
	word32 r10_339
	word32 r9_340
	word32 r5_341
	word32 r4_342
	byte VZN_343
	word32 r1_344
	call Mem318[0x000192D0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_297,C_320,CVZN_289,CZN_302,fp_298,N_295,r0_303,r1_310,r10_305,r11_296,r2_301,r3_299,r4_308,r5_307,r6_293,r7_304,r8_300,r9_306,sp_316,V_321,VZN_309,Z_294,ZN_319
		defs: ap_331,C_325,CVZN_323,CZN_336,fp_332,N_329,r0_337,r1_344,r10_339,r11_330,r2_335,r3_333,r4_342,r5_341,r6_327,r7_338,r8_334,r9_340,sp_322,V_326,VZN_343,Z_328,ZN_324
	Mem346[sp_322 - 0x00000004:word32] = r0_337
	Mem349[sp_322 - 0x00000008:word32] = r3_333 + 1515
	Mem351[sp_322 - 0x0000000C:word32] = r3_333
	word32 r2_352 = Mem351[r3_333 + 0x0000C839:word32]
	word32 sp_356
	byte CVZN_357
	byte ZN_358
	bool C_359
	bool V_360
	word32 r6_361
	bool Z_362
	bool N_363
	word32 r11_364
	word32 ap_365
	word32 fp_366
	word32 r3_367
	word32 r8_368
	word32 r2_369
	byte CZN_370
	word32 r0_371
	word32 r7_372
	word32 r10_373
	word32 r9_374
	word32 r5_375
	word32 r4_376
	byte VZN_377
	word32 r1_378
	call r2_352 + 2 (retsize: 4; depth: 4)
		uses: ap_331,C_354,CVZN_323,CZN_336,fp_332,N_329,r0_337,r1_344,r10_339,r11_330,r2_352,r3_333,r4_342,r5_341,r6_327,r7_338,r8_334,r9_340,sp_350,V_355,VZN_343,Z_328,ZN_353
		defs: ap_365,C_359,CVZN_357,CZN_370,fp_366,N_363,r0_371,r1_378,r10_373,r11_364,r2_369,r3_367,r4_376,r5_375,r6_361,r7_372,r8_368,r9_374,sp_356,V_360,VZN_377,Z_362,ZN_358
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017425:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017400:
// DataOut: ap fp r0 r11 r3 r4 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000001C r6:0x00000000 r11:0x00000000 r8:0x00000000 r2:<invalid>

l000175F6:
	word32 sp_58 = sp_173 - 0x00000004
	Mem59[sp_58:word32] = 0x00000004
	Mem62[sp_58 - 0x00000004:word32] = r3 + 152
	word32 r2_66
	word32 r3_67
	word32 r5_68
	word32 r7_69
	word32 ap_70
	word32 fp_71
	word32 sp_72
	word32 r0_73 = fn0000D5BE(r0, r4, r6_168, ap, fp, out r2_66, out r3_67, out r5_68, out r7_69, out ap_70, out fp_71, out sp_72)
	branch r0_73 != 0x00000000 l0001760B
// DataOut: ap fp r0 r11 r3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r7:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001760B:
	Mem86[sp_72 - 0x00000004:word32] = 0x00000004
	Mem89[sp_72 - 0x00000008:word32] = r3_67 + 0x0000C639
	Mem92[sp_72 - 0x0000000C:word32] = r3_67 + 152
	word32 sp_96
	byte CVZN_97
	byte ZN_98
	bool C_99
	bool V_100
	word32 r6_101
	bool Z_102
	bool N_103
	word32 r11_104
	word32 ap_105
	word32 fp_106
	word32 r3_107
	word32 r8_108
	word32 r2_109
	byte CZN_110
	word32 r0_111
	word32 r7_112
	word32 r10_113
	word32 r9_114
	word32 r5_115
	word32 r4_116
	byte VZN_117
	word32 r1_118
	call Mem92[0x000192D8:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_70,C_94,CVZN_51,CZN_52,fp_71,N_49,r0_73,r1_42,r10_46,r11_53,r2_66,r3_67,r4_44,r5_68,r6_50,r7_69,r8_47,r9_45,sp_90,V_95,VZN_43,Z_75,ZN_93
		defs: ap_105,C_99,CVZN_97,CZN_110,fp_106,N_103,r0_111,r1_118,r10_113,r11_104,r2_109,r3_107,r4_116,r5_115,r6_101,r7_112,r8_108,r9_114,sp_96,V_100,VZN_117,Z_102,ZN_98
	branch r0_111 == 0x00000000 l0001764D
// DataOut: ap fp r11 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001764D:
	branch Mem92[Mem92[ap_105 + 8:word32]:word32] != 0x00000000 l0001765A
// DataOut: fp r11
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):<invalid> -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017652:
	branch r11_104 > 0x00000001 l0001765A
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):<invalid> -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017657:
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):<invalid> -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l0001765A:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):<invalid> -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017622:
	Mem125[sp_96 - 0x00000004:uint32] = 0x00000401
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):<invalid> -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

l00017607:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r7:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r1:<invalid> r9:<invalid> -48(fp):r3 + 152 -44(fp):r3 + 0x0000C634 -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004

fn000173CA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r6:<invalid> r11:<invalid> r8:<invalid> r2:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r7:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> r9:<invalid> -100(fp):r3 -96(fp):r3 + 1515 -92(fp):r0 -88(fp):r3 + 1515 -84(fp):r10 -80(fp):0x00000401 -76(fp):r3 -72(fp):r3 + 1515 -68(fp):r0 -64(fp):r3 + 1515 -60(fp):r7 -56(fp):0x00000000 -52(fp):0x00000401 -48(fp):r3 + 152 -44(fp):<invalid> -40(fp):0x00000004 -36(fp):r3 + 152 -32(fp):0x00000004



word32 fn00017662(word32 ap, word32 fp, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: r0 sp
// Trashed: CVZN ap fp r0 r1 r2 r3 r4 r5 r6 sp
// Preserved:
fn00017662_entry:
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00017662:
	branch Mem0[ap + 4:word32] != 0x00000000 l0001766D
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001766D:
	word32 r4_46 = Mem0[ap + 4:word32]
	branch r4_46 >u 0x001E8480 l0001767D
// DataOut: ap fp r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l0001767D:
	word32 r1_111 = 0x00000000
	branch true l00017694
// DataOut: ap fp r0 r1 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid>

l00017694:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:0x000003E8

l0001768B:
	branch 0x000003E8 >u r4_46 l00017699
// DataOut: ap fp r1 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:0x000003E8

l00017690:
	r1_111 = 0x00000001
// DataOut: ap fp r1 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:0x000003E8

l00017699:
	word32 r5_134
	word32 r3_124 = Mem0[ap + 8:word32]
	branch r4_46 <u r3_124 l000176D0
// DataOut: fp r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:<invalid> r0:<invalid> r2:0x000003E8

l000176D0:
	word32 r3_166 = r3_124 - r4_46 + (uint32) SLICE(r1_111, ui31, 1)
	word32 r1_167 = 0x00000000
	branch r1_111 >= 0x00000000 l000176F0
// DataOut: fp r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:<invalid> r0:<invalid> r2:0x000003E8 r6:<invalid> r3:<invalid>

l000176F0:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176E5:
	branch r1_111 >u r3_166 l000176F5
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176EA:
	r1_167 = 0x00000001
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176F5:
	r5_134 = -r1_167
// DataOut: fp r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176A5:
	word32 r2_145 = r4_46 - r3_124 + (uint32) SLICE(r1_111, ui31, 1)
	word32 r1_146 = 0x00000000
	branch r1_111 >= 0x00000000 l000176C4
// DataOut: fp r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:<invalid> r0:<invalid> r2:0x000003E8 r6:<invalid> r3:<invalid>

l000176C4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176BB:
	branch r1_111 >u r2_145 l000176C9
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176C0:
	r1_146 = 0x00000001
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:0x00000000 r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176C9:
	r5_134 = r1_146
// DataOut: fp r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid>

l000176F8:
	return r5_134
// DataOut: r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r6:<invalid> r3:<invalid> r5:<invalid>

l0001767A:
// DataOut: ap fp r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid>

l000176FC:
	word32 r5_107
	word32 r3_51 = Mem0[ap + 8:word32]
	branch r4_46 <u r3_51 l0001773C
// DataOut: fp r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid>

l0001773C:
	word32 r3_95 = (r3_51 - r4_46) * 0x000003E8 + (uint32) SLICE(r4_46, ui31, 1)
	word32 r1_106 = 0x00000000
	branch r4_46 >= 0x00000000 l00017764
// DataOut: fp r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid>

l00017764:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r0:<invalid> r1:0x00000000 r2:<invalid>

l00017758:
	branch r4_46 >u r3_95 l00017769
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r0:<invalid> r1:0x00000000 r2:<invalid>

l0001775D:
	r1_106 = 0x00000001
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r0:<invalid> r1:0x00000000 r2:<invalid>

l00017769:
	r5_107 = -r1_106
// DataOut: fp r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r2:<invalid>

l00017708:
	word32 r2_73 = (r4_46 - r3_51) * 0x000003E8 + (uint32) SLICE(r4_46, ui31, 1)
	word32 r1_74 = 0x00000000
	branch r4_46 >= 0x00000000 l00017730
// DataOut: fp r0 r1 r2
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid>

l00017730:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r1:0x00000000

l00017725:
	branch r4_46 >u r2_73 l00017735
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r1:0x00000000

l0001772A:
	r1_74 = 0x00000001
// DataOut: fp r1
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r1:0x00000000

l00017735:
	r5_107 = r1_74
// DataOut: fp r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r1:<invalid>

l0001776C:
	return r5_107
// DataOut: r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r5:<invalid>

l0001766A:
	return 0x00000000
// DataOut: r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

fn00017662_exit:
// DataOut: r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> fp:<invalid> ap:<invalid> r4:<invalid> r6:<invalid> r3:<invalid> r2:<invalid> r1:<invalid> r5:<invalid>



word32 fn00017772(word32 r2, word32 ap, word32 fp, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r2
// LiveOut: ap fp r0 sp
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn00017772_entry:
// DataOut: ap fp r10 r11 r2 r5 r6 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00017772:
	word32 r2_15
	word32 r3_16
	word32 ap_17
	word32 fp_18
	word32 sp_19
	word32 r0_20 = fn00010892(ap, fp, out r2_15, out r3_16, out ap_17, out fp_18, out sp_19)
	Mem23[sp_19 - 0x00000004:word32] = 0x00000000
	Mem25[sp_19 - 0x00000008:word32] = r0_20
	word32 sp_29
	byte CVZN_30
	byte ZN_31
	bool C_32
	bool V_33
	word32 r2_34
	word32 r0_35
	word32 ap_36
	word32 r3_37
	word32 fp_38
	call Mem25[0x000192C4:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_21,C_27,dwLoc08_6,dwLoc0C_9,fp_18,r0_20,r2_15,r3_16,sp_24,V_28,ZN_26
		defs: ap_36,C_32,CVZN_30,fp_38,r0_35,r2_34,r3_37,sp_29,V_33,ZN_31
	Mem40[sp_29 - 0x00000004:word32] = r0_35
	Mem42[sp_29 - 0x00000008:word32] = ap_36
	Mem44[sp_29 - 0x0000000C:word32] = r2_34
	word32 ap_45 = Mem44[r2_34 + 0x0000C839:word32]
	word32 sp_49
	byte CVZN_50
	byte ZN_51
	bool C_52
	bool V_53
	word32 r2_54
	word32 r0_55
	word32 ap_56
	word32 r3_57
	word32 fp_58
	call ap_45 + 2 (retsize: 4; depth: 4)
		uses: ap_45,C_47,CVZN_30,dwLoc08_6,dwLoc0C_9,fp_38,r0_35,r2_34,r3_37,sp_43,V_48,ZN_46
		defs: ap_56,C_52,CVZN_50,fp_58,r0_55,r2_54,r3_57,sp_49,V_53,ZN_51
	Mem60[sp_49 - 0x00000004:word32] = 0x00000000
	Mem62[sp_49 - 0x00000008:word32] = 0x00000001
	Mem65[sp_49 - 0x0000000C:word32] = r3_57 + 18
	Mem67[sp_49 - 0x00000010:word32] = r2_54
	word32 ap_68 = Mem67[r2_54 + 0x0000C839:word32]
	word32 sp_72
	byte CVZN_73
	byte ZN_74
	bool C_75
	bool V_76
	word32 r2_77
	word32 r0_78
	word32 ap_79
	word32 r3_80
	word32 fp_81
	call ap_68 + 2 (retsize: 4; depth: 4)
		uses: ap_68,C_70,CVZN_50,dwLoc08_6,dwLoc0C_9,fp_58,r0_55,r2_54,r3_57,sp_66,V_71,ZN_69
		defs: ap_79,C_75,CVZN_73,fp_81,r0_78,r2_77,r3_80,sp_72,V_76,ZN_74
	word32 sp_82
	*spOut = fp_81 - 0x00000004
	word32 fp_83
	*fpOut = Mem67[fp_81 + 0x0000000C:word32]
	word32 ap_84
	*apOut = Mem67[fp_81 + 0x00000008:word32]
	return r0_78
// DataOut: ap fp r0 r10 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00017772_exit:
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ap:<invalid> fp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> -48(fp):r2 -44(fp):r3 + 18 -40(fp):0x00000001 -36(fp):0x00000000 -32(fp):r2 -28(fp):r0 -24(fp):r0 -20(fp):r0 -16(fp):0x00000000 -12(fp):r2 + 0x0000C701 -8(fp):r2 + 1515



void fn000177CA(word32 r6, word32 ap)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap r6
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn000177CA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000177CA_entry:
// DataOut: ap r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000177CA:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00017C2E(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00017C2E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00017C2E_entry:
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00017C2E:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word32 fn00017DEE(word32 r0, word32 r3, word32 r5, word32 r6, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r11Out, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r3 r5 r6
// LiveOut: fp r0 r11 r2 r3 r4 r5 r6
// Trashed: CVZN ap fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00017DEE_entry:
	*r3Out = r3
	*r11Out = r11
	*r4Out = r4
	*r6Out = r6
	*r5Out = r5
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00017DEE:
	word32 sp_2 = fp + -1160
	branch Mem0[r3 + 0x0000C81D:word32] == 0x00000000 l00017E0C
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00017E0C:
	word32 r0_107 = 0x00000000
	word32 r2_108 = fp + -1156
// DataOut: ap fp pc r0 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160
// LocalsOut: fp(32)

l00017E14:
	Mem115[r2_108:word32] = 0x00000008
	r2_108 = r2_108 + 0x00000004
	r0_107 = r0_107 + 0x00000001
	branch r0_107 <= 0x0000008F l00017E14
// DataOut: ap fp pc r0 r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E22:
	branch r0_107 >= 0x00000100 l00017E3D
// DataOut: ap fp pc r0 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E2B:
// DataOut: ap fp pc r0 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E2C:
	Mem313[fp + -1156:word32] = 0x00000009
	r0_107 = r0_107 + 0x00000001
	branch r0_107 < 0x00000100 l00017E2C
// DataOut: ap fp pc r0 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E3D:
	branch r0_107 >= 0x00000118 l00017E59
// DataOut: ap fp pc r0 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E46:
// DataOut: ap fp pc r0 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E48:
	Mem306[fp + -1156:word32] = 0x00000007
	r0_107 = r0_107 + 0x00000001
	branch r0_107 < 0x00000118 l00017E48
// DataOut: ap fp pc r0 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E59:
	branch r0_107 >= 0x00000120 l00017E75
// DataOut: ap fp pc r0 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E62:
// DataOut: ap fp pc r0 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E64:
	Mem296[fp + -1156:word32] = 0x00000008
	r0_107 = r0_107 + 0x00000001
	branch r0_107 < 0x00000120 l00017E64
// DataOut: ap fp pc r0 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>
// LocalsOut: fp(32)

l00017E75:
	Mem136[r3 + 0x0000C825:word32] = 0x00000007
	word32 r2_161
	word32 r3_162
	word32 r4_163
	word32 r5_164
	word32 r6_165
	word32 r11_166
	word32 ap_167
	word32 fp_168
	word32 sp_169
	word32 r0_170 = fn0001878E(r0_107, ap, fp, out r2_161, out r3_162, out r4_163, out r5_164, out r6_165, out r11_166, out ap_167, out fp_168, out sp_169)
	branch r0_170 == 0x00000000 l00017EAF
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160 r0:<invalid> r2:<invalid>

l00017EAF:
	word32 r0_184 = 0x00000000
	word32 r2_185 = fp_168 + 0xFFFFFB7C
// DataOut: ap fp pc r0 r2 r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> ap:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> r8:<invalid> r6:<invalid> r7:<invalid> r4:<invalid> -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825

l00017EB8:
	Mem192[r2_185:word32] = 0x00000005
	r2_185 = r2_185 + 0x00000004
	r0_184 = r0_184 + 0x00000001
	branch r0_184 <= 0x0000001D l00017EB8
// DataOut: ap fp pc r0 r2 r3 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> ap:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> r8:<invalid> r6:<invalid> r7:<invalid> r4:<invalid> -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825

l00017EC2:
	Mem197[r3_162 + 0x0000C829:word32] = 0x00000005
	Mem200[sp_169 - 0x00000004:word32] = r3_162 + 0x0000C829
	Mem203[sp_169 - 0x00000008:word32] = r3_162 + 0x0000C821
	Mem206[sp_169 - 0x0000000C:word32] = r5_164 + 260
	Mem209[sp_169 - 0x00000010:word32] = r5_164 + 200
	Mem211[sp_169 - 0x00000014:word32] = 0x00000000
	Mem213[sp_169 - 0x00000018:word32] = 0x0000001E
	Mem216[sp_169 - 0x0000001C:word32] = fp_168 + -1156
	word32 r2_220
	word32 r4_222
	word32 r5_223
	word32 r6_224
	word32 r11_225
	r0 = fn0001878E(r0_184, ap_167, fp_168, out r2_220, out r3, out r4_222, out r5_223, out r6_224, out r11_225, out ap, out fp, out sp_2)
	r6 = r0
	*r6Out = r6
	branch r0 <= 0x00000001 l00017F1F
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> ap:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> r8:<invalid> r6:<invalid> r7:<invalid> r4:<invalid> -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825

l00017EF4:
	word32 r4_234 = Mem216[r3 + 0x0000C81D:word32]
	*r4Out = r4_234
	word32 ap_235 = r4_234
	branch r4_234 == 0x00000000 l00017F15
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> r8:<invalid> r7:<invalid> r4:<invalid> -1216(fp):fp + -1156 -1212(fp):0x0000001E -1208(fp):0x00000000 -1204(fp):r5 + 200 -1200(fp):r5 + 260 -1196(fp):r3 + 0x0000C821 -1192(fp):r3 + 0x0000C829 -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825

l00017F00:
	word32 ap_262 = ap_235 - 0x00000006
	word32 sp_264 = sp_2 - 0x00000004
	Mem265[sp_264:word32] = ap_262
	byte ZN_270
	bool C_271
	bool V_272
	bool Z_274
	word32 r0_275
	bool N_276
	word32 r2_278
	byte CVZN_279
	byte CZN_280
	word32 r5_281
	word32 ap_282
	word32 r4_284
	word32 r11_285
	call Mem265[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_262,C_267,CVZN_195,CZN_231,dwLoc048C_139,dwLoc0490_142,dwLoc0494_145,dwLoc0498_148,dwLoc049C_151,dwLoc04A0_154,dwLoc04A4_157,fp_227,N_133,r0_229,r11_225,r2_263,r3_221,r4_234,r5_223,r6_230,sp_264,V_268,Z_237,ZN_266
		defs: ap_282,C_271,CVZN_279,CZN_280,fp_277,N_276,r0_275,r11_285,r2_278,r3_273,r4_284,r5_281,r6_283,sp_269,V_272,Z_274,ZN_270
	ap_235 = r2_278
	branch r2_278 != 0x00000000 l00017F00
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r4:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> r8:<invalid> r7:<invalid> -1216(fp):fp + -1156 -1212(fp):0x0000001E -1208(fp):0x00000000 -1204(fp):r5 + 200 -1200(fp):r5 + 260 -1196(fp):r3 + 0x0000C821 -1192(fp):r3 + 0x0000C829 -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825

l00017F15:
	Mem252[r3 + 0x0000C81D:word32] = 0x00000000
	word32 fp_258
	*fpOut = Mem252[fp + 0x0000000C:word32]
	return r6
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r4:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> r8:<invalid> r7:<invalid> -1216(fp):fp + -1156 -1212(fp):0x0000001E -1208(fp):0x00000000 -1204(fp):r5 + 200 -1200(fp):r5 + 260 -1196(fp):r3 + 0x0000C821 -1192(fp):r3 + 0x0000C829 -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825

l00017EA8:
	Mem176[r3_162 + 0x0000C81D:word32] = 0x00000000
	word32 fp_182
	*fpOut = Mem176[fp_168 + 0x0000000C:word32]
	return r0_170
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> ap:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> r8:<invalid> r6:<invalid> r7:<invalid> r4:<invalid> -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825

l00017E09:
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -1160

l00017F1F:
	word32 sp_59 = sp_2 - 0x00000004
	Mem61[sp_59:word32] = Mem0[r3 + 0x0000C829:word32]
	Mem64[sp_59 - 0x00000004:word32] = Mem61[r3 + 0x0000C825:word32]
	Mem67[sp_59 - 0x00000008:word32] = Mem64[r3 + 0x0000C821:word32]
	Mem70[sp_59 - 0x0000000C:word32] = Mem67[r3 + 0x0000C81D:word32]
	fn000177CA(r6, ap)
	word32 r2_74
	*r2Out = 0x00000000
	branch r0 == 0x00000000 l00017F46
// DataOut: fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r2:<invalid> r3:<invalid> r11:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> r8:<invalid> r7:<invalid> r4:<invalid> -1216(fp):fp + -1156 -1212(fp):0x0000001E -1208(fp):0x00000000 -1204(fp):r5 + 200 -1200(fp):r5 + 260 -1196(fp):r3 + 0x0000C821 -1192(fp):r3 + 0x0000C829 -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):r5 + 76 -1172(fp):r5 + 138 -1168(fp):r3 + 0x0000C81D -1164(fp):r3 + 0x0000C825
// Terminates process

l00017F44:
	*r2Out = 0x00000001
// DataOut: fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: r2:0x00000000 -1216(fp):fp + -1156 -1212(fp):0x0000001E -1208(fp):0x00000000 -1204(fp):r5 + 200 -1200(fp):r5 + 260 -1196(fp):r3 + 0x0000C821 -1192(fp):r3 + 0x0000C829 -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1164(fp):<invalid>

l00017F46:
	word32 fp_86
	*fpOut = Mem70[fp + 0x0000000C:word32]
	return r2_74
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: r2:<invalid> -1216(fp):fp + -1156 -1212(fp):0x0000001E -1208(fp):0x00000000 -1204(fp):r5 + 200 -1200(fp):r5 + 260 -1196(fp):r3 + 0x0000C821 -1192(fp):r3 + 0x0000C829 -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1164(fp):<invalid>

fn00017DEE_exit:
// DataOut: fp r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: r2:<invalid> r0:<invalid> sp:<invalid> fp:<invalid> ap:<invalid> r3:<invalid> r11:<invalid> r6:<invalid> r4:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> r8:<invalid> r7:<invalid> -1216(fp):fp + -1156 -1212(fp):0x0000001E -1208(fp):0x00000000 -1204(fp):r5 + 200 -1200(fp):r5 + 260 -1196(fp):r3 + 0x0000C821 -1192(fp):r3 + 0x0000C829 -1188(fp):fp + -1156 -1184(fp):0x00000120 -1180(fp):0x00000101 -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1164(fp):<invalid>



word32 fn00017F4E(word32 r0, word32 r4, word32 r5, word32 r6, word32 r11, word32 ap, word32 fp, word32 pc, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r11Out, ptr32 & fpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r11 r4 r5 r6
// LiveOut: fp r0 r11 r2 r3 r4 r5 r6
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00017F4E_entry:
	*r5Out = r5
	*r6Out = r6
	*r11Out = r11
// DataOut: ap fp pc r0 r11 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00017F4E:
	word32 sp_100 = fp + -1344
	word32 r3_5 = Mem0[r5 + 0x0000C831:word32]
	*r3Out = r3_5
	word32 r2_52 = Mem0[r5 + 0x0000C835:word32]
	*r2Out = r2_52
	branch r2_52 >=u 0x00000005 l00017FB9
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00017F74:
	word32 v10_579 = Mem0[r5 + 0x0000C5FB:word32] - 0x00000001
	Mem580[r5 + 0x0000C5FB:word32] = v10_579
	branch v10_579 < 0x00000000 l00017F90
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid>

l00017F90:
	r0 = fn0000D69A(r0, r3_5, r4, r6, ap, fp, pc, out r2_52, out r3_5, out r5, out ap, out fp, out sp_100)
	*r6Out = r0
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid>

l00017F7C:
	word32 r4_610 = Mem580[r5 + 0x0000C5F7:word32]
	Mem612[r5 + 0x0000C5F7:word32] = Mem580[r5 + 0x0000C5F7:word32] + 0x00000001
	*r6Out = (uint32) Mem612[r4_610:byte]
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid>

l00017F9A:
	word32 r4_593
	*r4Out = r6
	branch r6 != 0xFFFFFFFF l00017FAA
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid>

l00017FAA:
	r4 = __ashift(r6, r2_52)
	r3_5 = r3_5 | r4
	*r3Out = r3_5
	r2_52 = r2_52 + 0x00000008
	*r2Out = r2_52
	branch r2_52 <u 0x00000005 l00017F74
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid>

l00017FB9:
	word32 r4_503 = r3_5 & ~0xFFFFFFE0
	Mem63[sp_100 + 32:word32] = r4_503 + 0x00000101
	word32 r3_506 = (uint32) SLICE(r3_5, ui27, 5)
	*r3Out = r3_506
	word32 r2_505 = r2_52 - 0x00000005
	*r2Out = r2_505
	branch r2_505 >=u 0x00000005 l0001801D
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid>

l00017FD7:
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l00017FD8:
	word32 v17_516 = Mem63[r5 + 0x0000C5FB:word32] - 0x00000001
	Mem517[r5 + 0x0000C5FB:word32] = v17_516
	branch v17_516 < 0x00000000 l00017FF4
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l00017FF4:
	r0 = fn0000D69A(r0, r3_506, r4_503, r6, ap, fp, pc, out r2_505, out r3_506, out r5, out ap, out fp, out sp_100)
	*r6Out = r0
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l00017FE0:
	word32 r4_547 = Mem517[r5 + 0x0000C5F7:word32]
	Mem549[r5 + 0x0000C5F7:word32] = Mem517[r5 + 0x0000C5F7:word32] + 0x00000001
	*r6Out = (uint32) Mem549[r4_547:byte]
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l00017FFE:
	word32 r4_530
	*r4Out = r6
	branch r6 != 0xFFFFFFFF l0001800E
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l0001800E:
	r4_503 = __ashift(r6, r2_505)
	r3_506 = r3_506 | r4_503
	*r3Out = r3_506
	r2_505 = r2_505 + 0x00000008
	*r2Out = r2_505
	branch r2_505 <u 0x00000005 l00017FD8
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l0001801D:
	word32 r4_438 = r3_506 & ~0xFFFFFFE0
	*r4Out = r4_438
	Mem83[sp_100 + 28:word32] = r4_438 + 0x00000001
	word32 r3_441 = (uint32) SLICE(r3_506, ui27, 5)
	*r3Out = r3_441
	word32 r2_440 = r2_505 - 0x00000005
	*r2Out = r2_440
	branch r2_440 >=u 0x00000004 l0001807D
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l00018037:
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l00018038:
	word32 v25_451 = Mem83[r5 + 0x0000C5FB:word32] - 0x00000001
	Mem452[r5 + 0x0000C5FB:word32] = v25_451
	branch v25_451 < 0x00000000 l00018054
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l00018054:
	r0 = fn0000D69A(r0, r3_441, r4_438, r6, ap, fp, pc, out r2_440, out r3_441, out r5, out ap, out fp, out sp_100)
	*r6Out = r0
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l00018040:
	word32 r4_484 = Mem452[r5 + 0x0000C5F7:word32]
	Mem486[r5 + 0x0000C5F7:word32] = Mem452[r5 + 0x0000C5F7:word32] + 0x00000001
	*r6Out = (uint32) Mem486[r4_484:byte]
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l0001805E:
	word32 r4_465
	*r4Out = r6
	branch r6 != 0xFFFFFFFF l0001806E
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l0001806E:
	r4_438 = __ashift(r6, r2_440)
	*r4Out = r4_438
	r3_441 = r3_441 | r4_438
	*r3Out = r3_441
	r2_440 = r2_440 + 0x00000008
	*r2Out = r2_440
	branch r2_440 <u 0x00000004 l00018038
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l0001807D:
	word32 r8_103 = r3_441 & ~0xFFFFFFF0
	word32 r8_104 = r8_103 + 0x00000004
	word32 r3_105 = (uint32) SLICE(r3_441, ui28, 4)
	*r3Out = r3_105
	word32 r2_106 = r2_440 - 0x00000004
	*r2Out = r2_106
	branch Mem83[sp_100 + 32:word32] >u 0x00000120 l000180A0
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l0001809A:
	branch Mem83[sp_100 + 28:word32] <=u 0x00000020 l000180A4
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180A4:
	word32 r7_127 = 0x00000000
	branch r8_103 == 0x00000004 l0001811B
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180AA:
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:0x00000000 r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180B4:
	branch r2_106 >=u 0x00000003 l000180FD
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180B9:
// DataOut: fp pc r0 r11 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180BC:
	word32 r4_375
	word32 v30_363 = Mem83[r5 + 0x0000C5FB:word32] - 0x00000001
	Mem364[r5 + 0x0000C5FB:word32] = v30_363
	branch v30_363 < 0x00000000 l000180D8
// DataOut: fp pc r0 r11 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180D8:
	byte ZN_411
	bool C_412
	bool V_413
	byte CZN_417
	byte CVZN_418
	bool N_419
	word32 r4_420
	bool Z_422
	word32 ap_425
	byte VZN_426
	byte CZ_428
	word32 r11_430
	word32 r10_431
	word32 pc_432
	call r6 + 2 (retsize: 4; depth: 4)
		uses: ap_362,C_358,CVZN_365,CZ_346,CZN_351,fp_361,N_366,pc_342,r0_356,r10_343,r11_344,r2_352,r3_353,r4_350,r5_354,r6_349,r7_345,r8_347,sp_360,V_359,VZN_348,Z_355,ZN_357
		defs: ap_425,C_412,CVZN_418,CZ_428,CZN_417,fp_424,N_419,pc_432,r0_423,r10_431,r11_430,r2_416,r3_415,r4_420,r5_414,r6_421,r7_429,r8_427,sp_410,V_413,VZN_426,Z_422,ZN_411
	*r4Out = r0
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180C4:
	word32 ap_403 = Mem364[r5 + 0x0000C5F7:word32]
	Mem405[r5 + 0x0000C5F7:word32] = Mem364[r5 + 0x0000C5F7:word32] + 0x00000001
	*r4Out = (uint32) Mem405[ap_403:byte]
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180DE:
	branch r4_375 != 0xFFFFFFFF l000180EE
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180EE:
	ap = __ashift(r4_375, r2_106)
	r3_105 = r3_105 | ap
	*r3Out = r3_105
	r2_106 = r2_106 + 0x00000008
	*r2Out = r2_106
	branch r2_106 <u 0x00000003 l000180BC
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180FD:
	Mem332[fp + -1300:word32] = r3_105 & ~0xFFFFFFF8
	*r3Out = (uint32) SLICE(r3_105, ui29, 3)
	*r2Out = r2_106 - 0x00000003
	r7_127 = r7_127 + 0x00000001
	branch r7_127 <u r8_104 l000180B4
// DataOut: ap fp pc r0 r11 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l0001811B:
	branch r7_127 >=u 0x00000013 l00018130
// DataOut: ap fp pc r0 r11 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l00018120:
	Mem280[fp + -1300:word32] = 0x00000000
	r7_127 = r7_127 + 0x00000001
	branch r7_127 <u 0x00000013 l00018120
// DataOut: ap fp pc r0 r11 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l00018130:
	Mem158[fp + -16:word32] = 0x00000007
	word32 sp_159 = sp_100 - 0x00000004
	Mem161[sp_159:word32] = fp + -16
	Mem164[sp_159 - 0x00000004:word32] = fp + -8
	Mem167[sp_159 - 0x0000000C:word64] = 0x0000000000000000
	Mem169[sp_159 - 0x00000010:word32] = 0x00000013
	Mem171[sp_159 - 0x00000014:word32] = 0x00000013
	Mem174[sp_159 - 0x00000018:word32] = fp + -1300
	word32 r2_178
	word32 r3_179
	word32 r4_180
	word32 r5_181
	word32 r6_182
	word32 r11_183
	word32 ap_184
	word32 fp_185
	word32 sp_186
	word32 r0_187 = fn0001878E(r0, ap, fp, out r2_178, out r3_179, out r4_180, out r5_181, out r6_182, out r11_183, out ap_184, out fp_185, out sp_186)
	word32 r8_188 = r0_187
	branch Mem174[fp_185 + -16:word32] != 0x00000000 l00018156
// DataOut: fp pc r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l00018153:
	r8_188 = 0x00000001
// DataOut: fp pc r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r5:<invalid> r10:<invalid> r9:<invalid> r1:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>

l00018156:
	branch r8_188 == 0x00000000 l00018181
// DataOut: fp pc r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r5:<invalid> r10:<invalid> r9:<invalid> r1:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>

l00018181:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r5:<invalid> r10:<invalid> r9:<invalid> r1:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>

l0001815A:
	branch r8_188 != 0x00000001 l0001817D
// DataOut: fp pc r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r5:<invalid> r10:<invalid> r9:<invalid> r1:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>

l0001815F:
	word32 r6_225 = Mem174[fp_185 + -8:word32]
	*r6Out = r6_225
	word32 ap_226 = r6_225
	branch r6_225 == 0x00000000 l0001817D
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r5:<invalid> r10:<invalid> r9:<invalid> r1:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>

l00018168:
	word32 ap_233 = ap_226 - 0x00000006
	word32 sp_235 = sp_186 - 0x00000004
	Mem236[sp_235:word32] = ap_233
	byte ZN_241
	bool C_242
	bool V_243
	word32 r5_244
	word32 r3_245
	word32 r2_246
	byte CZN_247
	byte CVZN_248
	bool N_249
	word32 r4_250
	word32 r6_251
	bool Z_252
	word32 r0_253
	word32 ap_255
	byte VZN_256
	byte CZ_258
	word32 r7_259
	word32 r11_260
	word32 r10_261
	word32 pc_262
	call Mem236[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_233,C_238,CVZN_142,CZ_136,CZN_198,fp_185,N_141,pc_132,r0_187,r10_133,r11_183,r2_178,r3_179,r4_234,r5_181,r6_225,r7_155,r8_193,sp_235,V_239,VZN_138,Z_228,ZN_237
		defs: ap_255,C_242,CVZN_248,CZ_258,CZN_247,fp_254,N_249,pc_262,r0_253,r10_261,r11_260,r2_246,r3_245,r4_250,r5_244,r6_251,r7_259,r8_257,sp_240,V_243,VZN_256,Z_252,ZN_241
	ap_226 = r4_250
	branch r4_250 != 0x00000000 l00018168
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r5:<invalid> r10:<invalid> r9:<invalid> r1:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>

l0001817D:
	word32 fp_223
	*fpOut = Mem174[fp_185 + 0x0000000C:word32]
	return r8_188
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r5:<invalid> r10:<invalid> r9:<invalid> r1:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>

l000180EA:
	word32 fp_395
	*fpOut = Mem364[fp + 0x0000000C:word32]
	return 0x00000001
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r7:<invalid> ap:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l000180A0:
	word32 fp_117
	*fpOut = Mem83[fp + 0x0000000C:word32]
	return 0x00000001
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r8:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l0001806A:
	word32 fp_474
	*fpOut = Mem452[fp + 0x0000000C:word32]
	return 0x00000001
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1316(fp):<invalid> -1312(fp):<invalid>

l0001800A:
	word32 fp_539
	*fpOut = Mem517[fp + 0x0000000C:word32]
	return 0x00000001
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid> -1312(fp):<invalid>

l00017FA6:
	word32 fp_602
	*fpOut = Mem580[fp + 0x0000000C:word32]
	return 0x00000001
// DataOut: fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r1:<invalid>

fn00017F4E_exit:
// DataOut: fp r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r4:<invalid> r6:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r8:<invalid> r5:<invalid> r7:<invalid> r11:<invalid> r1:<invalid> r10:<invalid> r9:<invalid> -1372(fp):fp + -1300 -1368(fp):0x00000013 -1364(fp):0x00000013 -1360(fp):0x0000000000000000 -1352(fp):fp + -8 -1348(fp):fp + -16 -1316(fp):<invalid> -1312(fp):<invalid>



word32 fn000185AE(word32 r0, word32 r4, word32 r5, word32 r6, word32 r11, word32 ap, word32 fp, word32 pc, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r11 r4 r5 r6
// LiveOut: ap fp r0 r11 r2 r3 r4 r5 r6 sp
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000185AE_entry:
	*r4Out = r4
	*r5Out = r5
	*r11Out = r11
	*r6Out = r6
// DataOut: ap fp pc r0 r11 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000185AE:
	word32 r3_191 = Mem0[r4 + 0x0000C831:word32]
	*r3Out = r3_191
	word32 r2_190 = Mem0[r4 + 0x0000C835:word32]
	*r2Out = r2_190
	branch r2_190 >=u 0x00000001 l00018611
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp

l000185CB:
// DataOut: ap fp pc r0 r11 r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r3:<invalid> r2:<invalid>

l000185CC:
	word32 v11_200 = Mem0[r4 + 0x0000C5FB:word32] - 0x00000001
	Mem201[r4 + 0x0000C5FB:word32] = v11_200
	branch v11_200 < 0x00000000 l000185E8
// DataOut: ap fp pc r0 r11 r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l000185E8:
	word32 r5_238
	word32 sp_241
	*r5Out = fn0000D69A(r0, r3_191, r4, r6, ap, fp, pc, out r2_190, out r3_191, out r5_238, out ap, out fp, out sp_241)
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l000185D4:
	word32 r0_229 = Mem201[r4 + 0x0000C5F7:word32]
	Mem231[r4 + 0x0000C5F7:word32] = Mem201[r4 + 0x0000C5F7:word32] + 0x00000001
	*r5Out = (uint32) Mem231[r0_229:byte]
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l000185F2:
	branch r5 != 0xFFFFFFFF l00018602
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018602:
	r0 = __ashift(r5, r2_190)
	r3_191 = r3_191 | r0
	*r3Out = r3_191
	r2_190 = r2_190 + 0x00000008
	*r2Out = r2_190
	branch r2_190 <u 0x00000001 l000185CC
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018611:
	Mem57[Mem57[ap + 4:word32]:word32] = r3_191 & ~0xFFFFFFFE
	word32 r3_131 = (uint32) SLICE(r3_191, ui31, 1)
	*r3Out = r3_131
	word32 r2_130 = r2_190 - 0x00000001
	*r2Out = r2_130
	branch r2_130 >=u 0x00000002 l0001866D
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018626:
// DataOut: ap fp pc r0 r11 r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018628:
	word32 v18_140 = Mem57[r4 + 0x0000C5FB:word32] - 0x00000001
	Mem141[r4 + 0x0000C5FB:word32] = v18_140
	branch v18_140 < 0x00000000 l00018644
// DataOut: ap fp pc r0 r11 r2 r3 r4 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018644:
	word32 r5_179
	word32 sp_182
	*r5Out = fn0000D69A(r0, r3_131, r4, r6, ap, fp, pc, out r2_130, out r3_131, out r5_179, out ap, out fp, out sp_182)
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018630:
	word32 r0_170 = Mem141[r4 + 0x0000C5F7:word32]
	Mem172[r4 + 0x0000C5F7:word32] = Mem141[r4 + 0x0000C5F7:word32] + 0x00000001
	*r5Out = (uint32) Mem172[r0_170:byte]
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l0001864E:
	branch r5 != 0xFFFFFFFF l0001865E
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l0001865E:
	r0 = __ashift(r5, r2_130)
	r3_131 = r3_131 | r0
	*r3Out = r3_131
	r2_130 = r2_130 + 0x00000008
	*r2Out = r2_130
	branch r2_130 <u 0x00000002 l00018628
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l0001866D:
	word32 r3_75 = (uint32) SLICE(r3_131, ui30, 2)
	*r3Out = r3_75
	Mem78[r4 + 0x0000C831:word32] = r3_75
	word32 r2_76 = r2_130 - 0x00000002
	*r2Out = r2_76
	Mem80[r4 + 0x0000C835:word32] = r2_76
	word32 r6_74 = r3_131 & ~0xFFFFFFFC
	*r6Out = r6_74
	branch r6_74 != 0x00000002 l00018696
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018696:
	branch r6_74 != 0x00000000 l000186A0
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l000186A0:
	branch r6_74 != 0x00000001 l000186AB
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l000186AB:
	word32 sp_122 = fp - 0x00000004
	*spOut = sp_122
	word32 fp_123
	*fpOut = Mem80[sp_122 + 0x00000010:word32]
	word32 ap_124
	*apOut = Mem80[sp_122 + 0x0000000C:word32]
	return 2
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l000186A5:
	word32 r2_108
	word32 r3_109
	word32 r4_110
	word32 r5_111
	word32 r6_112
	word32 r11_113
	word32 fp_114
	word32 r0_115 = fn00017DEE(r0, r3_75, r5, r6_74, ap, fp, out r2_108, out r3_109, out r4_110, out r5_111, out r6_112, out r11_113, out fp_114)
	word32 sp_116
	*spOut = fp_114 - 0x00000004
	word32 fp_117
	*fpOut = Mem80[fp_114 + 0x0000000C:word32]
	word32 ap_118
	*apOut = Mem80[fp_114 + 0x00000008:word32]
	return r0_115
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l0001869A:
	fn00017C2E(r4)
	word32 sp_102 = fp - 0x00000004
	*spOut = sp_102
	word32 fp_103
	*fpOut = Mem80[sp_102 + 0x00000010:word32]
	word32 ap_104
	*apOut = Mem80[sp_102 + 0x0000000C:word32]
	return r0
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l00018690:
	word32 r2_86
	word32 r3_87
	word32 r4_88
	word32 r5_89
	word32 r6_90
	word32 r11_91
	word32 fp_92
	word32 r0_93 = fn00017F4E(r0, r4, r5, r6_74, r11, ap, fp, pc, out r2_86, out r3_87, out r4_88, out r5_89, out r6_90, out r11_91, out fp_92)
	word32 sp_94
	*spOut = fp_92 - 0x00000004
	word32 fp_95
	*fpOut = Mem80[fp_92 + 0x0000000C:word32]
	word32 ap_96
	*apOut = Mem80[fp_92 + 0x00000008:word32]
	return r0_93
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l0001865A:
	word32 sp_160 = fp - 0x00000004
	*spOut = sp_160
	word32 fp_161
	*fpOut = Mem141[sp_160 + 0x00000010:word32]
	word32 ap_162
	*apOut = Mem141[sp_160 + 0x0000000C:word32]
	return 0x00000001
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

l000185FE:
	word32 sp_220 = fp - 0x00000004
	*spOut = sp_220
	word32 fp_221
	*fpOut = Mem201[sp_220 + 0x00000010:word32]
	word32 ap_222
	*apOut = Mem201[sp_220 + 0x0000000C:word32]
	return 0x00000001
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>

fn000185AE_exit:
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r11:<invalid> r1:<invalid> r7:<invalid> r10:<invalid> r9:<invalid>



void fn000186B2(word32 r0, word32 r2, word32 r4, word32 r5, word32 r6, word32 r11, word32 ap, word32 fp, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp pc r0 r11 r2 r4 r5 r6
// LiveOut:
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn000186B2_entry:
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000186B2:
	Mem4[r2 + 0x0000C82D:word32] = 0x00000000
	Mem7[r2 + 0x0000C831:word64] = 0x0000000000000000
	word32 sp_2 = fp - 0x00000008
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000186CC:
	Mem33[r2 + 0x0000C819:word32] = 0x00000000
	Mem36[sp_2 - 0x00000004:word32] = fp + -8
	word32 r3_42
	r0 = fn000185AE(r0, r4, r5, r6, r11, ap, fp, pc, out r2, out r3_42, out r4, out r5, out r6, out r11, out ap, out fp, out sp_2)
	branch r0 == 0x00000000 l000186DF
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r11:<invalid> r1:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> -12(fp):fp + -8

l000186DF:
	branch Mem36[r2 + 0x0000C819:word32] <=u r3_42 l000186EF
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r11:<invalid> r1:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> -12(fp):fp + -8

l000186E8:
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r11:<invalid> r1:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> -12(fp):fp + -8

l000186EF:
	branch Mem36[fp + -8:word32] == 0x00000000 l000186CC
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r11:<invalid> r1:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> -12(fp):fp + -8

l000186F4:
	branch Mem36[r2 + 0x0000C6C5:word32] == 0x00000000 l00018710
// DataOut: ap fp r0 r2 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r11:<invalid> r1:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> -12(fp):fp + -8

l00018710:
	Mem104[sp_2 - 0x00000004:word32] = 0x00000000
	Mem107[sp_2 - 0x00000008:word32] = Mem104[r2 + 0x0000C82D:word32]
	Mem110[sp_2 - 0x0000000C:word32] = r2 + 1515
	fn0000B072(r0, r2, r6, ap, fp)
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r11:<invalid> r1:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> -12(fp):fp + -8

l000186FC:
	Mem95[sp_2 - 0x00000004:word32] = Mem36[r2 + 0x0000C82D:word32]
	Mem98[sp_2 - 0x00000008:word32] = r2 + 1515
	fn0001084A(r2, ap, fp)
// DataOut: fp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r11:<invalid> r1:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> -12(fp):fp + -8

l00018723:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r6:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> r8:<invalid> r11:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> -24(fp):r2 + 1515 -20(fp):<invalid> -16(fp):<invalid> -12(fp):fp + -8

l000186DE:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r2:<invalid> r6:<invalid> fp:<invalid> ap:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r11:<invalid> r1:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> -12(fp):fp + -8

fn000186B2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> fp:<invalid> ap:<invalid> r2:<invalid> r6:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r1:<invalid> r11:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> -24(fp):r2 + 1515 -20(fp):<invalid> -16(fp):<invalid> -12(fp):fp + -8



word32 fn0001872A(word32 r3, word32 fp, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fp r3
// LiveOut: ap fp r0 sp
// Trashed: CVZN ap fp r0 r2 r4 sp
// Preserved:
fn0001872A_entry:
// DataOut: fp pc r3 r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0001872A:
	word32 sp_105 = fp - 0x0000000C
	branch Mem0[r3 + 0x0000C81D:word32] == 0x00000000 l00018787
// DataOut: fp pc r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0001873C:
	word32 r4_30 = Mem0[r3 + 0x0000C821:word32]
	word32 ap_118 = r4_30
	branch r4_30 == 0x00000000 l0001875D
// DataOut: ap fp pc r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0000000C

l00018748:
	word32 ap_98 = ap_118 - 0x00000006
	word32 sp_100 = sp_105 - 0x00000004
	Mem101[sp_100:word32] = ap_98
	byte CVZN_106
	byte ZN_107
	bool C_108
	bool V_109
	bool Z_111
	word32 r4_112
	word32 ap_113
	word32 r2_114
	word32 r0_115
	bool N_116
	call Mem101[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_98,C_103,CVZN,fp,N,r0,r2_99,r3,r4_30,sp_100,V_104,Z_33,ZN_102
		defs: ap_113,C_108,CVZN_106,fp_117,N_116,r0_115,r2_114,r3_110,r4_112,sp_105,V_109,Z_111,ZN_107
	ap_118 = r2_114
	branch r2_114 != 0x00000000 l00018748
// DataOut: ap fp pc r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid>

l0001875D:
	word32 r4_45 = Mem0[r3 + 0x0000C81D:word32]
	word32 ap_46 = r4_45
	branch r4_45 == 0x00000000 l00018781
// DataOut: ap fp pc r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid>

l00018769:
// DataOut: ap fp pc r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid>

l0001876C:
	word32 ap_71 = ap_46 - 0x00000006
	word32 sp_73 = sp_105 - 0x00000004
	Mem74[sp_73:word32] = ap_71
	byte CVZN_79
	byte ZN_80
	bool C_81
	bool V_82
	bool Z_84
	word32 r4_85
	word32 ap_86
	word32 r2_87
	word32 r0_88
	bool N_89
	call Mem74[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_71,C_76,CVZN_40,fp_44,N_42,r0_41,r2_72,r3_39,r4_45,sp_73,V_77,Z_48,ZN_75
		defs: ap_86,C_81,CVZN_79,fp_90,N_89,r0_88,r2_87,r3_83,r4_85,sp_78,V_82,Z_84,ZN_80
	ap_46 = r2_87
	branch r2_87 != 0x00000000 l0001876C
// DataOut: ap fp pc r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid>

l00018781:
	Mem61[r3 + 0x0000C81D:word64] = 0x0000000000000000
// DataOut: fp pc r5 r6 r7 r8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid>

l00018787:
	word32 sp_24 = fp - 0x00000004
	*spOut = sp_24
	word32 fp_25
	*fpOut = Mem0[sp_24 + 0x00000010:word32]
	word32 ap_26
	*apOut = Mem0[sp_24 + 0x0000000C:word32]
	return 0x00000000
// DataOut: ap fp pc r0 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> ap:<invalid> r2:<invalid> -16(fp):<invalid>

fn0001872A_exit:
// DataOut: ap fp r0 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:0x00000000 fp:<invalid> ap:<invalid> r4:<invalid> r2:<invalid> -16(fp):<invalid>



word32 fn0001878E(word32 r0, word32 ap, word32 fp, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r11Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0
// LiveOut: ap fp r0 r11 r2 r3 r4 r5 r6 sp
// Trashed: CVZN ap fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0001878E_entry:
// DataOut: ap fp pc r0 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Local -05C4(32)

l0001878E:
	branch Mem0[ap + 8:word32] <=u 0x00000100 l000187B4
// DataOut: ap fp pc r0 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Local -05C4(32)

l000187B4:
// DataOut: ap fp pc r0 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1488 r2:fp + -140 -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32)

l000187A7:
// DataOut: ap fp pc r0 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1488 r2:fp + -140 -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32)

l000187B7:
	word32 sp_26
	byte ZN_27
	bool C_28
	bool V_29
	word32 fp_30
	word32 r2_31
	byte CVZN_32
	word32 ap_33
	byte CZN_34
	byte CZ_35
	word32 r3_36
	word32 r11_37
	bool Z_38
	bool N_39
	word32 r0_40
	word32 r10_41
	byte VZN_42
	word32 r9_43
	word32 r5_44
	word32 r8_45
	word32 r6_46
	word32 r7_47
	word32 r4_48
	call Mem0[0x0001927C:word32] + 2 (retsize: 4; depth: 1504)
		uses: ap,C_24,CZ_10,CZN_9,dwLoc05AC_6,dwLoc05B4_14,dwLoc05D4_17,dwLoc05D8_19,dwLoc05DC_22,fp,r2_4,r3_12,sp_20,V_25,ZN_23
		defs: ap_33,C_28,CVZN_32,CZ_35,CZN_34,fp_30,N_39,r0_40,r10_41,r11_37,r2_31,r3_36,r4_48,r5_44,r6_46,r7_47,r8_45,r9_43,sp_26,V_29,VZN_42,Z_38,ZN_27
	word32 r2_49 = Mem0[ap_33 + 4:word32]
	word32 r11_50 = Mem0[ap_33 + 8:word32]
// DataOut: ap fp pc r0 r11 r2 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + -1488 r2:<invalid> r3:<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l000187D4:
	word32 r3_56
	*r3Out = Mem0[r2_49:word32]
	Mem58[fp_30 + -72:word32] = Mem0[fp_30 + -72:word32] + 0x00000001
	r2_49 = r2_49 + 0x00000004
	*r2Out = r2_49
	r11_50 = r11_50 - 0x00000001
	*r11Out = r11_50
	branch r11_50 != 0x00000000 l000187D4
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l000187E2:
	branch Mem58[fp_30 + -72:word32] != Mem58[ap_33 + 8:word32] l000187F2
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l000187F2:
	word32 r10_127 = 1
// DataOut: ap fp pc r0 r10 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l000187F8:
	branch Mem58[fp_30 + -72 + r10_127 * 4:word32] != 0x00000000 l00018805
// DataOut: ap fp pc r0 r10 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l000187FE:
	r10_127 = r10_127 + 0x00000001
	branch r10_127 <=u 0x00000010 l000187F8
// DataOut: ap fp pc r0 r10 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018805:
	word32 r2_140 = Mem58[ap_33 + 28:word32]
	branch Mem58[r2_140:word32] >=u r10_127 l00018814
// DataOut: ap fp pc r0 r10 r2 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018811:
	Mem742[r2_140:word32] = r10_127
// DataOut: ap fp pc r0 r10 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018814:
	word32 r11_144 = 0x00000010
	*r11Out = r11_144
	branch 0x00000010 == 0x00000000 l00018826
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018819:
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:0x00000010 r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l0001881C:
	branch Mem58[fp_30 + -72 + r11_144 * 4:word32] != 0x00000000 l00018826
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018822:
	r11_144 = r11_144 - 0x00000001
	*r11Out = r11_144
	branch r11_144 != 0x00000000 l0001881C
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018826:
	word32 r2_156 = Mem58[ap_33 + 28:word32]
	*r2Out = r2_156
	branch Mem58[r2_156:word32] <=u r11_144 l00018836
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018833:
	Mem725[r2_156:word32] = r11_144
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018836:
	word32 dwLoc05D8_162 = __ashift(0x00000001, r10_127)
	branch r10_127 >=u r11_144 l00018859
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05D8(32) Local -05DC(32)

l00018840:
	word32 v31_707 = dwLoc05D8_162 - Mem58[(fp_30 + -72) + r10_127 * 4:word32]
	branch v31_707 >= 0x00000000 l0001884C
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05D8(32) Local -05DC(32)

l0001884C:
	r10_127 = r10_127 + 0x00000001
	dwLoc05D8_162 = v31_707 << 1
	branch r10_127 <u r11_144 l00018840
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05D8(32) Local -05DC(32)

l00018859:
	word32 v32_171 = dwLoc05D8_162 - Mem58[(fp_30 + -72) + r11_144 * 4:word32]
	branch v32_171 >= 0x00000000 l00018865
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05D8(0) Local -05DC(32)

l00018865:
	Mem183[fp_30 + -72:word32] = Mem58[fp_30 + -72:word32] + v32_171
	Mem186[fp_30 + -1420:word32] = 0x00000000
	word32 r10_184 = 0x00000000
	word32 r2_188 = fp_30 + 0xFFFFFFBC
	word32 r5_190 = fp_30 + 0xFFFFFA78
	word32 r11_191 = r11_144 - 0x00000001
	branch r11_191 == 0x00000000 l00018892
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018886:
	r10_689 = r10_184
	r11_690 = r11_191
	r5_691 = r5_190
	r2_692 = r2_188
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:fp + 0xFFFFFFBC r3:fp + -1424 r11:<invalid> r10:0x00000000 r9:<invalid> r5:fp + 0xFFFFFA78 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018888:
	word32 r10_689
	word32 r11_690
	word32 r5_691
	word32 r2_692
	r10_689 = r10_689 + Mem186[r2_692:word32]
	Mem697[r5_691:word32] = r10_689
	r2_692 = r2_692 + 0x00000004
	r5_691 = r5_691 + 0x00000004
	r11_690 = r11_690 - 0x00000001
	branch r11_690 != 0x00000000 l00018888
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r9
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:fp + -1424 r11:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l00018892:
	byte ZN_206
	bool C_207
	bool V_208
	word32 r2_210
	byte CVZN_211
	byte CZN_213
	byte CZ_214
	word32 r11_216
	bool Z_217
	bool N_218
	word32 r0_219
	word32 r10_220
	byte VZN_221
	word32 r8_224
	word32 r6_225
	word32 r7_226
	word32 r4_227
	word32 r3_215
	word32 r5_223
	word32 ap_212
	word32 r9_222
	word32 fp_209
	word32 sp_205
	call Mem186[0x0001927C:word32] + 2 (retsize: 4; depth: 1516)
		uses: ap_33,C_203,CVZN_192,CZ_158,CZN_168,dwLoc05AC_6,dwLoc05B4_14,dwLoc05B8,dwLoc05BC,dwLoc05C0,dwLoc05C8,dwLoc05D0_155,dwLoc05D4_17,dwLoc05D8_172,dwLoc05DC_22,dwLoc05E0_196,dwLoc05E4_198,dwLoc05E8_201,fp_30,N_174,r0_40,r10_184,r11_191,r2_188,r3_189,r4_48,r5_190,r6_46,r7_47,r8_45,r9_139,sp_199,V_204,VZN_128,Z_193,ZN_202
		defs: ap_212,C_207,CVZN_211,CZ_214,CZN_213,fp_209,N_218,r0_219,r10_220,r11_216,r2_210,r3_215,r4_227,r5_223,r6_225,r7_226,r8_224,r9_222,sp_205,V_208,VZN_221,Z_217,ZN_206
	word32 r2_228 = Mem186[ap_212 + 4:word32]
	word32 r11_229 = 0x00000000
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:fp + -1424 r11:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l000188AC:
	r2_228 = r2_228 + 0x00000004
	word32 r10_240 = Mem186[r2_228:word32]
	branch r10_240 == 0x00000000 l000188C2
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):0x00000480 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l000188B1:
	r3_215 = Mem186[fp_209 + -1424 + r10_240 * 4:word32]
	Mem680[fp_209 + -1424:word32] = Mem186[fp_209 + -1424:word32] + 0x00000001
	Mem682[fp_209 + -1356:word32] = r11_229
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):0x00000480 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l000188C2:
	r11_229 = r11_229 + 0x00000001
	branch r11_229 <u Mem186[ap_212 + 8:word32] l000188AC
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):0x00000480 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05C4(32) Local -05DC(32)

l000188CA:
	Mem255[ap_212 + 8:word32] = Mem186[fp_209 + -1424 + (fp + -72) * 4:word32]
	Mem258[fp_209 + -1424:word32] = 0x00000000
	Mem265[dwLoc05C4 + -4:word32] = 0x00000000
	Mem268[fp_209 + -204:word32] = 0x00000000
	word32 r11_256
	*r11Out = 0x00000000
	word32 r8_259 = fp_209 + -1356
	word32 v48_260 = -0x00000001
	word32 r2_263
	*r2Out = dwLoc05C4
	word32 r6_266 = 0x00000000
	*r6Out = r6_266
	branch r9_222 <= fp + -72 l00018904
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):0x00000480 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05B8(32) Local -05C4(0) Local -05DC(0)

l00018904:
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05B8(32) Local -05C4(0) Local -05DC(0)

l00018914:
	word32 v56_317 = Mem268[fp_209 + -72 + r9_222 * 4:word32]
	word32 r2_319
	*r2Out = v56_317
	branch v56_317 != 0x00000000 l00018928
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05B8(32) Local -05C4(0) Local -05D8(32) Local -05DC(0)

l00018928:
	branch r9_222 > Mem268[Mem268[(fp + 0xFFFFFA3C) + v48_260 * 4:word32]:word32] l0001893A
// DataOut: ap fp pc r0 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: Local -05D8(32)

l0001893A:
// DataOut: ap fp pc r0 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018940:
	word32 r4_458
	word32 r2_447 = Mem268[sp_205 + 48:word32]
	Mem449[sp_205 + 48:word32] = Mem268[sp_205 + 48:word32] + 0x00000001
	word32 r6_450 = r6_266 + Mem449[Mem449[(sp_205 + 36) + r2_447 * 4:word32]:word32]
	Mem452[sp_205 + 44:word32] = Mem449[sp_205 + 12:word32] - r6_450
	word32 r3_454 = Mem452[sp_205 + 40:word32]
	branch Mem452[sp_205 + 44:word32] <=u Mem452[Mem452[r3_454:word32]:word32] l00018968
// DataOut: ap fp pc r0 r11 r3 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018968:
	r4_458 = Mem452[sp_205 + 44:word32]
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018960:
	r4_458 = Mem452[Mem452[r3_454:word32]:word32]
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l0001896C:
	Mem462[sp_205 + 44:word32] = r4_458
	word32 r10_463 = r9_222 - r6_450
	Mem466[sp_205 + 52:word32] = __ashift(0x00000001, r10_463)
	branch Mem466[sp_205 + 52:word32] <=u Mem466[sp_205 + 32:word32] l000189C2
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018986:
	Mem643[sp_205 + 52:word32] = Mem466[sp_205 + 52:word32] - (Mem466[sp_205 + 16:word32] + 0x00000001)
	word32 r3_646 = (r9_222 << 2) + (fp_209 + -72)
	r10_463 = r10_463 + 0x00000001
	branch r10_463 + 0x00000001 >=u Mem643[sp_205 + 44:word32] l000189C2
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189A2:
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:fp + -72 -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189A4:
	Mem658[sp_205 + 52:word32] = Mem643[sp_205 + 52:word32] << 1
	r3_646 = r3_646 + 0x00000004
	branch Mem658[sp_205 + 52:word32] <=u Mem658[r3_646:word32] l000189C2
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:fp + -72 -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189B6:
	Mem665[sp_205 + 52:word32] = Mem658[sp_205 + 52:word32] - Mem658[r3_646:word32]
	r10_463 = r10_463 + 0x00000001
	branch r10_463 <u Mem665[sp_205 + 44:word32] l000189A4
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:fp + -72 -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189C2:
	branch r6_450 + r10_463 <=u Mem466[sp_205 + 28:word32] l000189D7
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189CC:
	branch r6_450 >=u Mem466[sp_205 + 28:word32] l000189D7
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189D2:
	r10_463 = Mem466[sp_205 + 28:word32] - r6_450
// DataOut: ap fp pc r0 r10 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189D7:
	Mem482[sp_205 + 44:word32] = __ashift(0x00000001, r10_463)
	Mem485[Mem485[sp_205 + 36:word32]:word32] = r10_463
	word32 r2_486 = Mem485[sp_205 + 44:word32] + 0x00000001
	word32 sp_487 = sp_205 - 0x00000004
	Mem489[sp_487:word32] = r2_486 * 0x00000006
	byte ZN_492
	bool C_493
	bool V_494
	word32 r2_496
	byte CVZN_497
	byte CZN_499
	byte CZ_500
	word32 r3_501
	word32 r11_502
	bool Z_503
	bool N_504
	word32 r0_505
	word32 r10_506
	byte VZN_507
	word32 r7_512
	word32 r4_513
	call Mem489[sp_487 + 28:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_446,C_475,CVZN_490,CZ_478,CZN_477,dwLoc05AC_6,dwLoc05B4_14,dwLoc05B8_261,dwLoc05BC_271,dwLoc05C0_309,dwLoc05C4,dwLoc05C8_427,dwLoc05D0_311,dwLoc05D4_17,dwLoc05D8_321,dwLoc05DC_22,dwLoc05E0_252,dwLoc05E4_198,dwLoc05E8_201,fp_445,N_442,r0_440,r10_480,r11_432,r2_486,r3_473,r4_472,r5_434,r6_450,r7_429,r8_435,r9_436,sp_487,V_479,VZN_438,Z_441,ZN_474
		defs: ap_498,C_493,CVZN_497,CZ_500,CZN_499,fp_495,N_504,r0_505,r10_506,r11_502,r2_496,r3_501,r4_513,r5_509,r6_511,r7_512,r8_510,r9_508,sp_491,V_494,VZN_507,Z_503,ZN_492
	branch r0_505 != 0x00000000 l00018A21
// DataOut: ap fp pc r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018A21:
	Mem596[r2_496:word32] = Mem489[sp_205 + 44:word32] + 0x00000001 + 0x00007BE9
	Mem598[Mem598[ap_212 + 24:word32]:word32] = r0_505 + 0x00000006
	Mem600[ap_212 + 24:word32] = r0_505 + 2
	Mem602[Mem602[ap_212 + 24:word32]:word32] = 0x00000000
	word32 r2_604 = Mem602[sp_205 + 48:word32]
	Mem606[fp_209 + -204:word32] = r0_505 + 0x00000006
	branch r2_604 == 0x00000000 l00018AA3
// DataOut: ap fp pc r0 r10 r11 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AA3:
	branch r9_222 <= r6_266 + Mem606[Mem606[(sp_205 + 36) + Mem606[sp_205 + 48:word32] * 4:word32]:word32] l00018AB5
// DataOut: ap fp pc r0 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 + 0x00000006 r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AB2:
// DataOut: ap fp pc r0 r11 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 + 0x00000006 r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018A55:
	Mem612[fp_209 + -1424:word32] = 0x00000000
	Mem616[fp_209 + -1429:byte] = Mem612[Mem612[sp_205 + 36 + (Mem612[sp_205 + 48:word32] - 0x00000001) * 4:word32]:byte]
	Mem619[fp_209 + -1430:int8] = (int8) (r10_506 + 0x00000010)
	Mem621[fp_209 + -1428:word32] = r0_505 + 0x00000006
	__ashift(0x00000001, r6_266)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 + 0x00000006 r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189F7:
	branch Mem489[sp_205 + 48:word32] == 0x00000000 l00018A1D
// DataOut: fp pc r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000189FC:
	word32 r4_547 = Mem489[fp_209 + -204:word32]
	*r4Out = r4_547
	word32 r2_548 = r4_547
	*r2Out = r2_548
	branch r4_547 == 0x00000000 l00018A1D
// DataOut: fp pc r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018A06:
// DataOut: fp pc r11 r2 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018A08:
	word32 r2_558 = r2_548 - 0x00000006
	word32 sp_560 = sp_205 - 0x00000004
	Mem561[sp_560:word32] = r2_558
	byte ZN_566
	bool C_567
	bool V_568
	word32 r2_570
	byte CVZN_571
	word32 ap_572
	byte CZN_573
	byte CZ_574
	word32 r3_575
	word32 r11_576
	bool Z_577
	bool N_578
	word32 r0_579
	word32 r10_580
	byte VZN_581
	word32 r9_582
	word32 r5_583
	word32 r8_584
	word32 r6_585
	word32 r7_586
	word32 r4_587
	call Mem561[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_498,C_563,CVZN_497,CZ_500,CZN_499,dwLoc05AC_6,dwLoc05B4_14,dwLoc05B8_261,dwLoc05BC_271,dwLoc05C0_309,dwLoc05C4,dwLoc05C8_427,dwLoc05D0_311,dwLoc05D4_17,dwLoc05D8_321,dwLoc05DC_22,dwLoc05E0_252,dwLoc05E4_198,dwLoc05E8_201,fp_495,N_504,r0_505,r10_506,r11_502,r2_558,r3_559,r4_547,r5_509,r6_511,r7_514,r8_510,r9_508,sp_560,V_564,VZN_507,Z_550,ZN_562
		defs: ap_572,C_567,CVZN_571,CZ_574,CZN_573,fp_569,N_578,r0_579,r10_580,r11_576,r2_570,r3_575,r4_587,r5_583,r6_585,r7_586,r8_584,r9_582,sp_565,V_568,VZN_581,Z_577,ZN_566
	r2_548 = r3_575
	*r2Out = r2_548
	branch r3_575 != 0x00000000 l00018A08
// DataOut: fp pc r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 r4:<invalid> -1520(fp):<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018A1D:
	word32 sp_544 = fp_209 - 0x00000004
	*spOut = sp_544
	word32 fp_545
	*fpOut = Mem489[sp_544 + 0x00000010:word32]
	word32 ap_546
	*apOut = Mem489[sp_544 + 0x0000000C:word32]
	return 0x00000003
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:r0 r4:<invalid> -1520(fp):<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018937:
// DataOut: ap fp r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AB5:
	Mem356[fp_209 + -1429:int8] = (int8) (r9_222 - r6_266)
	branch r8_259 <u (fp_209 + -1356) + (Mem356[Mem356[sp_205 + 8:word32]:word32] << 2) l00018AD8
// DataOut: ap fp r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AD8:
	word32 r4_382 = Mem356[r8_259:word32]
	word32 r0_383 = Mem356[ap_212 + 12:word32]
	branch r4_382 >=u r0_383 l00018B0C
// DataOut: ap fp r0 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018B0C:
	Mem416[fp_209 + -1430:byte] = Mem356[Mem356[ap_212 + 20:word32] + (r4_382 - r0_383) * 2:byte]
	Mem422[fp_209 + -1428:word16] = Mem416[Mem416[ap_212 + 16:word32] + (Mem416[r8_259:word32] - r0_383) * 2:word16]
// DataOut: r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> r0:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AE4:
	word32 r5_390
	branch r4_382 >=u 0x00000100 l00018AF4
// DataOut: fp r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> r0:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AF4:
	r5_390 = SEQ(SLICE(r5_223, word24, 8), 0x0F)
// DataOut: fp r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> r0:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AED:
	r5_390 = SEQ(SLICE(r5_223, word24, 8), 0x10)
// DataOut: fp r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> r0:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AF7:
	Mem392[fp_209 + -1430:byte] = (byte) r5_390
	Mem396[fp_209 + -1428:word16] = Mem392[r8_259:word16]
// DataOut: r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> r0:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018AD0:
	Mem378[fp_209 + -1430:byte] = 0x63
// DataOut: r6 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018B2A:
	Mem374[sp_205 + 52:word32] = __ashift(0x00000001, r9_222 - r6_266)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:<invalid> r6:<invalid> r7:<invalid> r4:<invalid> r0:<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018925:
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05B8(32) Local -05C4(0) Local -05DC(0)

l00018BCF:
	r9_222 = r9_222 + 0x00000001
	branch r9_222 > fp + -72 l00018BDA
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05B8(32) Local -05C4(0) Local -05DC(0)

l00018BD7:
// DataOut: ap fp pc r0 r11 r3 r4 r5 r6 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: fp(32) Local -05B8(32) Local -05C4(0) Local -05DC(0)

l00018901:
// DataOut: ap fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: Local -05C4(0) Local -05DC(0)

l00018BDA:
	Mem282[Mem282[ap_212 + 28:word32]:word32] = Mem268[dwLoc05C4:word32]
	word32 r3_285 = SEQ(SLICE(r3_215, word24, 8), 0x00)
	*r3Out = r3_285
	branch 0x00000000 == 0x00000000 l00018BEE
// DataOut: fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78
// LocalsOut: Local -05DC(0)

l00018BE6:
	branch fp == 0xFFFFFFB7 l00018BEE
// DataOut: fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018BEC:
	*r3Out = SEQ(SLICE(r3_285, word24, 8), (byte) r3_285 + 0x01)
// DataOut: fp pc r11 r2 r3 r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018BEE:
	word32 sp_298
	*spOut = fp_209 - 0x00000004
	word32 fp_299
	*fpOut = Mem282[fp_209 + 0x0000000C:word32]
	word32 ap_300
	*apOut = Mem282[fp_209 + 0x00000008:word32]
	return (int32) (int8) r3_285
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA18 r2:<invalid> r3:<invalid> r11:0x00000000 r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:0x00000000 r7:0x00000000 -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1472(fp):ap + 28 -1468(fp):0x00000000 -1464(fp):-0x00000001 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018861:
	word32 sp_179
	*spOut = fp_30 - 0x00000004
	word32 fp_180
	*fpOut = Mem58[fp_30 + 0x0000000C:word32]
	word32 ap_181
	*apOut = Mem58[fp_30 + 0x00000008:word32]
	return 0x00000002
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l00018848:
	word32 sp_715
	*spOut = fp_30 - 0x00000004
	word32 fp_716
	*fpOut = Mem58[fp_30 + 0x0000000C:word32]
	word32 ap_717
	*apOut = Mem58[fp_30 + 0x00000008:word32]
	return 0x00000002
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> r10:<invalid> r9:<invalid> -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

l000187E9:
	Mem108[Mem108[ap_33 + 24:word32]:word32] = 0x00000000
	Mem110[Mem110[ap_33 + 28:word32]:word32] = 0x00000000
	word32 sp_116
	*spOut = fp_30 - 0x00000004
	word32 fp_117
	*fpOut = Mem110[fp_30 + 0x0000000C:word32]
	word32 ap_118
	*apOut = Mem110[fp_30 + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp pc r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFA24 r2:<invalid> r3:<invalid> r11:<invalid> -1500(fp):fp + -72 -1496(fp):0x00000000 -1492(fp):0x00000044 -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78

fn0001878E_exit:
// DataOut: ap fp r0 r11 r2 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r3:<invalid> r11:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r10:<invalid> r9:<invalid> r5:<invalid> r8:fp + -1356 r6:<invalid> r7:<invalid> r4:<invalid> -1520(fp):<invalid> -1516(fp):<invalid> -1512(fp):fp + -1356 -1508(fp):0x00000000 -1504(fp):ap + 8 -1500(fp):fp + -72 -1496(fp):<invalid> -1492(fp):0x00000044 -1488(fp):<invalid> -1480(fp):<invalid> -1472(fp):ap + 28 -1468(fp):<invalid> -1464(fp):<invalid> -1460(fp):<invalid> -1452(fp):fp + 0xFFFFFF78



word32 fn00018BF6(word32 ap, word32 fp, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp
// LiveOut: ap fp sp
// Trashed: CVZN ap fp r0 r2 r3 sp
// Preserved:
fn00018BF6_entry:
// DataOut: ap fp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00018BF6:
	word32 sp_2 = fp - 0x00000004
	word32 r2_28 = Mem0[ap + 4:word32]
	branch r2_28 == 0x00000000 l00018C15
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l00018BFF:
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid>

l00018C00:
	word32 r2_30 = r2_28 - 0x00000006
	word32 sp_32 = sp_2 - 0x00000004
	Mem33[sp_32:word32] = r2_30
	byte CVZN_40
	word32 ap_41
	word32 r2_42
	byte ZN_43
	bool C_44
	bool V_45
	bool Z_46
	word32 r3_47
	word32 r0_48
	bool N_49
	call Mem33[0x000192B0:word32] + 2 (retsize: 4; depth: 4)
		uses: ap,C_35,CVZN,fp,N,r0,r2_30,r3_31,sp_32,V_36,Z_7,ZN_34
		defs: ap_41,C_44,CVZN_40,fp_50,N_49,r0_48,r2_42,r3_47,sp_39,V_45,Z_46,ZN_43
	r2_28 = r3_47
	branch r3_47 != 0x00000000 l00018C00
// DataOut: fp r2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> -8(fp):<invalid>

l00018C15:
	word32 sp_23 = fp - 0x00000004
	*spOut = sp_23
	word32 fp_24
	*fpOut = Mem0[sp_23 + 0x00000010:word32]
	return Mem0[sp_23 + 0x0000000C:word32]
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> -8(fp):<invalid>

fn00018BF6_exit:
// DataOut: ap fp sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r2:<invalid> r0:0x00000000 fp:<invalid> ap:<invalid> r3:<invalid> -8(fp):<invalid>



word32 fn00018C3A(word32 r0, word32 r1, word32 r3, word32 r5, word32 r6, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & r3Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r0 r1 r3 r5 r6
// LiveOut: ap fp r0 r1 r3 r5 r6 sp
// Trashed: CVZN ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00018C3A_entry:
	*r1Out = r1
	*r5Out = r5
	*r6Out = r6
	*r3Out = r3
// DataOut: ap fp r0 r1 r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00018C3A:
	word32 r10_237 = Mem0[0x0001934C:word32]
	word32 r2_6 = Mem0[ap + 4:word32]
	Mem8[ap + 4:word32] = Mem0[ap + 4:word32] + 0x00000001
	word32 sp_179 = fp - 0x00000004
	word32 r4_226 = (uint32) Mem8[r2_6:byte]
	branch r4_226 != 0x00000000 l00018C60
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00018C60:
	branch r4_226 != 0x0000003F l00018C86
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018C86:
	branch r4_226 != 0x0000002A l00018CBE
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018CBE:
	branch r4_226 == 0x0000005B l00018CCA
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018CCA:
	branch (uint32) Mem8[Mem8[ap + 8:word32]:byte] != 0x00000000 l00018CD3
// DataOut: ap fp r0 r1 r10 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018CD3:
	word32 r5_512 = Mem8[ap + 4:word32]
	*r5Out = r5_512
	word32 r6_1078 = SEQ(SLICE(r6, word24, 8), 0x01)
	*r6Out = r6_1078
	word32 r2_516 = (uint32) Mem8[r5_512:byte]
	branch r2_516 == 0x00000021 l00018CED
// DataOut: ap fp r0 r1 r10 r2 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018CE2:
	branch r2_516 == 0x0000005E l00018CED
// DataOut: ap fp r0 r1 r10 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:SEQ(SLICE(r6, word24, 8), 0x01)

l00018CEB:
	*r6Out = SEQ(SLICE(r6_1078, word24, 8), 0x00)
// DataOut: ap fp r0 r1 r10 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:SEQ(SLICE(r6, word24, 8), 0x01)

l00018CED:
	word32 r8_523 = (int32) (int8) r6_1078
	Mem525[ap + 4:word32] = r8_523 + r5_512
	word32 r7_1039 = Mem525[ap + 4:word32]
	word32 r3_1043 = 0x00000000
	*r3Out = r3_1043
	branch Mem525[r7_1039:byte] == 0x00 l00018D2B
// DataOut: ap fp r0 r1 r10 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid>

l00018CFF:
// DataOut: ap fp r0 r1 r10 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:0x00000000

l00018D00:
	branch r3_1043 == 0x00000000 l00018D08
// DataOut: ap fp r0 r1 r10 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D08:
	word32 r2_1062 = (uint32) Mem525[r7_1039:byte]
	branch r2_1062 != 0x0000005C l00018D1C
// DataOut: ap fp r0 r1 r10 r2 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D1C:
	branch r2_1062 == 0x0000005D l00018D2B
// DataOut: ap fp r0 r1 r10 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D14:
	*r3Out = 0x00000001
// DataOut: ap fp r0 r1 r10 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D04:
	*r3Out = 0x00000000
// DataOut: ap fp r0 r1 r10 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D25:
	r7_1039 = r7_1039 + 0x00000001
	branch Mem525[r7_1039:byte] != 0x00 l00018D00
// DataOut: ap fp r0 r1 r10 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D2B:
	branch (uint32) Mem525[r7_1039:byte] == 0x0000005D l00018D3A
// DataOut: ap fp r0 r1 r10 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D3A:
	word32 r5_550 = Mem525[ap + 4:word32]
	*r5Out = r5_550
	word32 r4_1025 = 0x00000000
	word32 r3_1015
	*r3Out = 0x00000000
	branch (uint32) Mem525[r5_550:byte] != 0x0000002D l00018D4C
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D4A:
	*r3Out = 0x00000001
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:0x00000000 r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:0x00000000

l00018D4C:
	word32 r9_1033 = r3_1015
	branch r5_550 <u r7_1039 l00018D57
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:0x00000000 r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018D57:
	word32 r11_1000 = ap + 12
	*r6Out = Mem525[0x00019298:word32]
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:0x00000000 r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid>

l00018D64:
	branch r9_1033 != 0x00000000 l00018D7C
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018D68:
	branch (uint32) Mem525[Mem525[ap + 4:word32]:byte] != 0x0000005C l00018D7C
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018D7C:
	branch r9_1033 != 0x00000000 l00018D94
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018D80:
	r0 = Mem525[ap + 4:word32]
	branch (uint32) Mem525[r0:byte] != 0x0000002D l00018D94
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018D94:
	branch Mem525[r11_1000:word32] == 0x00000000 l00018DC0
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DC0:
	*r3Out = SEQ(SLICE(r3_1015, word24, 8), Mem525[Mem525[ap + 8:word32]:byte])
// DataOut: ap fp r0 r10 r11 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018D98:
	word32 r1_1005
	word32 r3_942 = (uint32) Mem525[Mem525[ap + 8:word32]:byte]
	word32 r2_943 = r3_942 & ~0xFFFFFF80
	branch (Mem525[r10_237 + r2_943 * 4:word32] & 0x00000001) == 0x00000000 l00018DB8
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DB8:
	r1_1005 = SEQ(SLICE(r1, word24, 8), (int8) r3_942)
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DAC:
	word32 sp_974 = sp_179 - 0x00000004
	Mem976[sp_974:int32] = (int32) (int8) r3_942
	byte CVZN_980
	byte ZN_982
	bool C_983
	bool V_984
	word32 r2_986
	bool Z_988
	bool N_990
	byte CZN_991
	word32 r5_994
	byte VZN_996
	word32 r9_999
	word32 r1_1001
	byte CZ_1002
	call r6_1078 + 2 (retsize: 4; depth: 4)
		uses: ap_653,C_978,CVZN_649,CZ_634,CZN_690,dwLoc08,dwLoc0C,dwLoc10,fp_652,N_643,r0_692,r1_644,r10_639,r11_635,r2_943,r3_942,r4_642,r5_645,r6_646,r7_637,r8_638,r9_636,sp_974,V_946,VZN_977,Z_694,ZN_944
		defs: ap_985,C_983,CVZN_980,CZ_1002,CZN_991,fp_993,N_990,r0_992,r1_1001,r10_981,r11_1000,r2_986,r3_989,r4_987,r5_994,r6_995,r7_998,r8_997,r9_999,sp_979,V_984,VZN_996,Z_988,ZN_982
	r1_1005 = SEQ(SLICE(r1_1001, word24, 8), (int8) r0)
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DBB:
	*r3Out = SEQ(SLICE(r3_942, word24, 8), (byte) r1_1005)
// DataOut: ap fp r0 r10 r11 r3 r4 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DC4:
	r1 = Mem525[ap + 4:word32]
	*r1Out = r1
	*r5Out = (uint32) (byte) r3_1015
	branch (uint32) Mem525[r1 + 0x00000001:byte] == 0x0000002D l00018E4B
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DD7:
	branch r4_1025 == 0x00000000 l00018DE0
// DataOut: ap fp r1 r10 r11 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DE0:
	r0 = (uint32) Mem525[r1:byte]
// DataOut: ap fp r0 r1 r10 r11 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DDB:
	r0 = r4_1025
// DataOut: ap fp r0 r1 r10 r11 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DE3:
	word32 r4_753 = r0
	word32 r2_754 = (uint32) Mem525[r1:byte]
	branch r0 >u r2_754 l00018E4B
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DEE:
	*r3Out = Mem525[r11_1000:word32]
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DF4:
	branch r3_1015 == 0x00000000 l00018E18
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E18:
	*r1Out = r4_753
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018DF8:
	r0 = r4_753 & ~0xFFFFFF80
	branch (Mem525[r10_237 + r0 * 4:word32] & 0x00000001) == 0x00000000 l00018E10
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E10:
	r2_754 = SEQ(SLICE(r2_754, word24, 8), (int8) r4_753)
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E05:
	word32 sp_890 = sp_179 - 0x00000004
	Mem892[sp_890:int32] = (int32) (int8) r4_753
	byte CVZN_896
	byte ZN_898
	bool C_899
	bool V_900
	word32 r2_902
	bool Z_904
	bool N_906
	byte CZN_907
	byte VZN_912
	word32 r9_915
	word32 r1_917
	byte CZ_918
	call r6_1078 + 2 (retsize: 4; depth: 4)
		uses: ap_781,C_894,CVZN_777,CZ_762,CZN_769,dwLoc08,dwLoc0C,dwLoc10,fp_780,N_771,r0_862,r1_772,r10_767,r11_763,r2_775,r3_776,r4_770,r5_773,r6_774,r7_765,r8_766,r9_764,sp_890,V_865,VZN_893,Z_783,ZN_863
		defs: ap_901,C_899,CVZN_896,CZ_918,CZN_907,fp_909,N_906,r0_908,r1_917,r10_897,r11_916,r2_902,r3_905,r4_903,r5_910,r6_911,r7_914,r8_913,r9_915,sp_895,V_900,VZN_912,Z_904,ZN_898
	r2_754 = SEQ(SLICE(r2_902, word24, 8), (int8) r0)
// DataOut: ap fp r0 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E13:
	*r1Out = (int32) (int8) r2_754
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E1B:
	branch r1 != r5_550 l00018E40
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E40:
	r4_753 = r4_753 + 0x00000001
	r0 = (uint32) Mem525[Mem525[ap + 4:word32]:byte]
	branch r4_753 <=u r0 l00018DF4
// DataOut: ap fp r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E4B:
	r9_1033 = 0x00000000
	r4_1025 = 0x00000000
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E20:
	word32 r2_818
	branch r8_523 == 0x00000000 l00018E28
// DataOut: ap fp r0 r1 r3 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E28:
	word32 sp_835 = sp_179 - 0x00000004
	Mem837[sp_835:word32] = Mem525[ap + 12:word32]
	Mem840[sp_835 - 0x00000004:word32] = Mem837[ap + 8:word32] + 0x00000001
	Mem843[sp_835 - 0x00000008:word32] = r7_1039 + 0x00000001
	word32 r1_845
	word32 r3_846
	word32 r5_847
	word32 r6_848
	word32 ap_849
	word32 sp_851
	r2_818 = fn00018C3A(r0, r1, r3_1015, r5_550, r6_1078, ap, fp, out r1_845, out r3_846, out r5_847, out r6_848, out ap_849, out fp, out sp_851)
// DataOut: fp r1 r2 r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E24:
	r2_818 = 0x00000000
// DataOut: fp r1 r2 r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E3C:
	word32 sp_827 = fp - 0x00000004
	*spOut = sp_827
	word32 fp_828
	*fpOut = Mem525[sp_827 + 0x00000010:word32]
	word32 ap_829
	*apOut = Mem525[sp_827 + 0x0000000C:word32]
	return r2_818
// DataOut: ap fp r0 r1 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:<invalid> r0:<invalid> r1:<invalid> fp:<invalid> ap:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018D8C:
	r0 = r0 - 0x00000001
	r4_1025 = (uint32) Mem525[r0 - 0x00000001:byte]
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018D75:
	r9_1033 = 0x00000001
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E4F:
	Mem680[ap + 4:word32] = Mem525[ap + 4:word32] + 0x00000001
	branch Mem680[ap + 4:word32] >=u r7_1039 l00018E5B
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E58:
// DataOut: ap fp r0 r1 r10 r11 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018D54:
// DataOut: ap fp r0 r1 r3 r5 r6 r7 r8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:0x00000000 r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid>

l00018E5B:
	word32 r2_590
	branch r8_523 == 0x00000000 l00018E78
// DataOut: ap fp r0 r1 r3 r5 r6 r7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E78:
	r2_590 = 0x00000000
// DataOut: fp r1 r2 r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E5F:
	word32 sp_602 = sp_179 - 0x00000004
	Mem604[sp_602:word32] = Mem525[ap + 12:word32]
	Mem607[sp_602 - 0x00000004:word32] = Mem604[ap + 8:word32] + 0x00000001
	Mem610[sp_602 - 0x00000008:word32] = r7_1039 + 0x00000001
	word32 r1_612
	word32 r3_613
	word32 r5_614
	word32 r6_615
	word32 ap_616
	word32 sp_618
	r2_590 = fn00018C3A(r0, r1, r3_1015, r5_550, r6_1078, ap, fp, out r1_612, out r3_613, out r5_614, out r6_615, out ap_616, out fp, out sp_618)
// DataOut: fp r1 r2 r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r11:ap + 12 r0:<invalid> r1:<invalid> -8(fp):<invalid>

l00018E7A:
	word32 sp_599 = fp - 0x00000004
	*spOut = sp_599
	word32 fp_600
	*fpOut = Mem525[sp_599 + 0x00000010:word32]
	word32 ap_601
	*apOut = Mem525[sp_599 + 0x0000000C:word32]
	return r2_590
// DataOut: ap fp r0 r1 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid> r9:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018D37:
	word32 sp_546
	*spOut = fp - 0x00000004
	word32 fp_547
	*fpOut = Mem525[fp + 0x0000000C:word32]
	word32 ap_548
	*apOut = Mem525[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 r1 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r3:<invalid>

l00018CD0:
	word32 sp_509
	*spOut = fp - 0x00000004
	word32 fp_510
	*fpOut = Mem8[fp + 0x0000000C:word32]
	word32 ap_511
	*apOut = Mem8[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 r1 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018CC7:
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018E7E:
	branch r4_226 != 0x0000005C l00018E96
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018E87:
	word32 r2_483 = Mem8[ap + 4:word32]
	Mem485[ap + 4:word32] = Mem8[ap + 4:word32] + 0x00000001
	r4_226 = (uint32) Mem485[r2_483:byte]
	branch r4_226 != 0x00000000 l00018E96
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018E96:
	word32 r5_244
	branch Mem8[ap + 12:word32] == 0x00000000 l00018EC4
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018EC4:
	*r5Out = SEQ(SLICE(r5, word24, 8), (byte) r4_226)
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018E9B:
	word32 r5_405 = (uint32) (byte) r4_226
	word32 r2_406 = r5_405 & ~0xFFFFFF80
	branch (Mem8[r10_237 + r2_406 * 4:word32] & 0x00000001) == 0x00000000 l00018EBC
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018EBC:
	*r3Out = SEQ(SLICE(r3, word24, 8), (int8) r5_405)
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid>

l00018EAB:
	byte CVZN_444
	byte ZN_446
	bool C_447
	bool V_448
	word32 r2_450
	bool Z_452
	word32 r3_453
	bool N_454
	byte CZN_455
	byte VZN_460
	word32 r8_461
	word32 r7_462
	word32 r9_463
	word32 r11_464
	byte CZ_466
	call Mem8[0x00019298:word32] + 2 (retsize: 4; depth: 12)
		uses: ap,C_442,CVZN,CZ,CZN_223,dwLoc08_440,dwLoc0C,dwLoc10,fp,N,r0,r1,r10_4,r11,r2_406,r3,r4_226,r5_405,r6,r7,r8,r9,sp_438,V_409,VZN_441,Z_229,ZN_407
		defs: ap_449,C_447,CVZN_444,CZ_466,CZN_455,fp_457,N_454,r0_456,r1_465,r10_445,r11_464,r2_450,r3_453,r4_451,r5_458,r6_459,r7_462,r8_461,r9_463,sp_443,V_448,VZN_460,Z_452,ZN_446
	*r3Out = SEQ(SLICE(r3_453, word24, 8), (int8) r0)
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid>

l00018EBF:
	*r5Out = SEQ(SLICE(r5_405, word24, 8), (byte) r3)
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018EC7:
	word32 r4_264
	branch Mem8[ap + 12:word32] == 0x00000000 l00018EF8
// DataOut: ap fp r0 r1 r10 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018EF8:
	r4_264 = SEQ(SLICE(r4_226, word24, 8), Mem8[Mem8[ap + 8:word32]:byte])
// DataOut: ap fp r0 r1 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018ECC:
	word32 r4_328 = (uint32) Mem8[Mem8[ap + 8:word32]:byte]
	word32 r2_329 = r4_328 & ~0xFFFFFF80
	branch (Mem8[r10_237 + r2_329 * 4:word32] & 0x00000001) == 0x00000000 l00018EF0
// DataOut: ap fp r0 r1 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018EF0:
	*r3Out = SEQ(SLICE(r3, word24, 8), (int8) r4_328)
// DataOut: ap fp r0 r1 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018EE0:
	word32 sp_360 = sp_179 - 0x00000004
	Mem362[sp_360:int32] = (int32) (int8) r4_328
	byte CVZN_366
	word32 r10_367
	byte ZN_368
	bool C_369
	bool V_370
	word32 r2_372
	bool Z_374
	word32 r3_375
	bool N_376
	byte CZN_377
	byte VZN_382
	word32 r8_383
	word32 r7_384
	word32 r9_385
	word32 r11_386
	byte CZ_388
	call Mem362[0x00019298:word32] + 2 (retsize: 4; depth: 4)
		uses: ap_252,C_364,CVZN_248,CZ_232,CZN_239,dwLoc08_242,dwLoc0C,dwLoc10,fp_251,N_241,r0_249,r1_243,r10_237,r11_233,r2_329,r3_247,r4_328,r5_244,r6_245,r7_235,r8_236,r9_234,sp_360,V_332,VZN_363,Z_254,ZN_330
		defs: ap_371,C_369,CVZN_366,CZ_388,CZN_377,fp_379,N_376,r0_378,r1_387,r10_367,r11_386,r2_372,r3_375,r4_373,r5_380,r6_381,r7_384,r8_383,r9_385,sp_365,V_370,VZN_382,Z_374,ZN_368
	*r3Out = SEQ(SLICE(r3_375, word24, 8), (int8) r0)
// DataOut: ap fp r0 r1 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018EF3:
	r4_264 = SEQ(SLICE(r4_328, word24, 8), (byte) r3)
// DataOut: ap fp r0 r1 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018EFC:
	word32 r2_285
	branch (byte) r5_244 != (byte) r4_264 l00018F18
// DataOut: ap fp r0 r1 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018F18:
	r2_285 = 0x00000000
// DataOut: fp r1 r2 r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018F01:
	word32 sp_296 = sp_179 - 0x00000004
	Mem298[sp_296:word32] = Mem8[ap + 12:word32]
	Mem300[ap + 8:word32] = Mem298[ap + 8:word32] + 0x00000001
	Mem303[sp_296 - 0x00000004:word32] = Mem300[ap + 8:word32]
	Mem306[sp_296 - 0x00000008:word32] = Mem303[ap + 4:word32]
	word32 r1_310
	word32 r3_311
	word32 r5_312
	word32 r6_313
	word32 ap_314
	word32 sp_316
	r2_285 = fn00018C3A(r0, r1, r3, r5_244, r6, ap, fp, out r1_310, out r3_311, out r5_312, out r6_313, out ap_314, out fp, out sp_316)
// DataOut: fp r1 r2 r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> -8(fp):<invalid>

l00018F1A:
	word32 sp_293 = fp - 0x00000004
	*spOut = sp_293
	word32 fp_294
	*fpOut = Mem8[sp_293 + 0x00000010:word32]
	word32 ap_295
	*apOut = Mem8[sp_293 + 0x0000000C:word32]
	return r2_285
// DataOut: ap fp r0 r1 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018E93:
	word32 sp_496
	*spOut = fp - 0x00000004
	word32 fp_497
	*fpOut = Mem485[fp + 0x0000000C:word32]
	word32 ap_498
	*apOut = Mem485[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp r0 r1 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018C8B:
	branch (uint32) Mem8[Mem8[ap + 4:word32]:byte] != 0x00000000 l00018C95
// DataOut: ap fp r0 r1 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018C95:
	branch Mem8[Mem8[ap + 8:word32]:byte] == 0x00 l00018CBA
// DataOut: ap fp r0 r1 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018C9A:
// DataOut: ap fp r0 r1 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018C9C:
	word32 sp_182 = sp_179 - 0x00000004
	Mem184[sp_182:word32] = Mem8[ap + 12:word32]
	Mem187[sp_182 - 0x00000004:word32] = Mem184[ap + 8:word32]
	Mem190[sp_182 - 0x00000008:word32] = Mem187[ap + 4:word32]
	r0 = fn00018C3A(r0, r1, r3, r5, r6, ap, fp, out r1, out r3, out r5, out r6, out ap, out fp, out sp_179)
	branch r0 == 0x00000000 l00018CB2
// DataOut: ap fp r0 r1 r3 r4 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018CB2:
	Mem215[ap + 8:word32] = Mem190[ap + 8:word32] + 0x00000001
	branch Mem215[Mem215[ap + 8:word32]:byte] != 0x00 l00018C9C
// DataOut: ap fp r0 r1 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018CBA:
	word32 sp_168 = fp - 0x00000004
	*spOut = sp_168
	word32 fp_169
	*fpOut = Mem8[sp_168 + 0x00000010:word32]
	word32 ap_170
	*apOut = Mem8[sp_168 + 0x0000000C:word32]
	return 0x00000002
// DataOut: ap fp r0 r1 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018CAE:
	word32 sp_211
	*spOut = fp - 0x00000004
	word32 fp_212
	*fpOut = Mem190[fp + 0x0000000C:word32]
	word32 ap_213
	*apOut = Mem190[fp + 0x00000008:word32]
	return r0
// DataOut: ap fp r0 r1 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018C91:
	word32 sp_150
	*spOut = fp - 0x00000004
	word32 fp_151
	*fpOut = Mem8[fp + 0x0000000C:word32]
	word32 ap_152
	*apOut = Mem8[fp + 0x00000008:word32]
	return 0x00000001
// DataOut: ap fp r0 r1 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018C65:
	word32 r2_129
	branch Mem8[Mem8[ap + 8:word32]:byte] == 0x00 l00018C80
// DataOut: ap fp r0 r1 r2 r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>
// LocalsOut: fp(32)

l00018C80:
	r2_129 = 0x00000000
// DataOut: fp r1 r2 r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018C6D:
	word32 r1_121
	word32 r3_122
	word32 r5_123
	word32 r6_124
	word32 ap_125
	word32 sp_127
	r2_129 = fn00018C3A(r0, r1, r3, r5, r6, ap, fp, out r1_121, out r3_122, out r5_123, out r6_124, out ap_125, out fp, out sp_127)
// DataOut: fp r1 r2 r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018C82:
	word32 sp_104 = fp - 0x00000004
	*spOut = sp_104
	word32 fp_105
	*fpOut = Mem8[sp_104 + 0x00000010:word32]
	word32 ap_106
	*apOut = Mem8[sp_104 + 0x0000000C:word32]
	return r2_129
// DataOut: ap fp r0 r1 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>

l00018C50:
	word32 r3_49
	*r3Out = 0x00000000
	branch (uint32) Mem8[Mem8[ap + 8:word32]:byte] != 0x00000000 l00018C5C
// DataOut: fp r1 r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid>

l00018C5A:
	*r3Out = 0x00000001
// DataOut: fp r1 r3 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r3:0x00000000

l00018C5C:
	word32 sp_62
	*spOut = fp - 0x00000004
	word32 fp_63
	*fpOut = Mem8[fp + 0x0000000C:word32]
	word32 ap_64
	*apOut = Mem8[fp + 0x00000008:word32]
	return r3_49
// DataOut: ap fp r0 r1 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r10:<invalid> r2:<invalid> r4:<invalid> r3:<invalid>

fn00018C3A_exit:
// DataOut: ap fp r0 r1 r3 r5 r6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r10:<invalid> r2:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> fp:<invalid> ap:<invalid> r5:<invalid> r6:<invalid> r8:<invalid> r7:<invalid> r9:<invalid> r11:<invalid> r1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid>



word32 fn00018F22(word32 r1, word32 ap, word32 fp, ptr32 & r1Out, ptr32 & apOut, ptr32 & fpOut, ptr32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ap fp r1
// LiveOut: ap fp r0 r1 sp
// Trashed: CVZN ap fp r0 r1 sp
// Preserved:
fn00018F22_entry:
	*r1Out = r1
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00018F22:
	branch Mem0[Mem0[ap + 4:word32]:byte] == 0x00 l00018F5E
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00018F2A:
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004

l00018F2C:
	word32 r0_45 = Mem0[ap + 4:word32]
	r1 = SEQ(SLICE(r1, word24, 8), Mem0[r0_45:byte])
	*r1Out = r1
	branch (byte) r1 != 0x5C l00018F48
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

l00018F39:
	branch Mem0[r0_45 + 0x00000001:byte] == 0x00 l00018F48
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

l00018F48:
	branch (byte) r1 == 0x25 l00018F52
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

l00018F4D:
	branch (byte) r1 != 0x2A l00018F56
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

l00018F52:
	word32 fp_73
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_74
	*apOut = Mem0[fp + 0x00000008:word32]
	return 0x00000001
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

l00018F3F:
	Mem85[ap + 4:word32] = r0_45 + 0x00000001
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

l00018F56:
	Mem55[ap + 4:word32] = Mem0[ap + 4:word32] + 0x00000001
	branch Mem55[Mem55[ap + 4:word32]:byte] != 0x00 l00018F2C
// DataOut: ap fp pc r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

l00018F5E:
	word32 fp_36
	*fpOut = Mem0[fp + 0x0000000C:word32]
	word32 ap_37
	*apOut = Mem0[fp + 0x00000008:word32]
	return 0x00000000
// DataOut: ap fp pc r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> r1:<invalid>

fn00018F22_exit:
// DataOut: ap fp r0 r1 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x00000004 r0:<invalid> fp:<invalid> ap:<invalid> r1:<invalid>



void fn00018F66()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00018F66_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00018F66_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00018F66:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn00018FA9()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00018FA9_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn00018FA9_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00018FA9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0001902B()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0001902B_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0001902B_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0001902B:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



