void __exit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_01E9
//      _exit
// MayUse:  ss:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__exit_exit:
__exit_entry:
l0800_0121:
	ds_5 = Mem0[0800:01F8:selector]
	__restorezero(ds_5)
	call 0x800<16>:Mem0[ds_5:0x5DC<16>:word16] (retsize: 2;)
		uses: Mem:Mem0
		defs: sp:sp_9
	si_19 = 0<16>
	cx_20 = 0x2F<16>
	ah_al_58 = 0<16> (alias)
l0800_0137:
	ah_al_58 = ah_al_58 + CONVERT(Mem0[ds_5:si_19:byte], uint8, uint16)
	si_19 = si_19 + 1<16>
	cx_20 = cx_20 - 1<16>
	branch cx_20 != 0<16> l0800_0137
l0800_013F:
	branch ah_al_58 == 0xD37<16> l0800_014F
l0800_0145:
	fn0800_01DA(SEQ(ds_5, 0x2F<16>), 0x19<16>)
l0800_014F:
	msdos_terminate(Mem0[ss:sp_9 + 2<i16>:byte])


void fn0800_0162(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15]
// LiveOut:
// Trashed: ax bx dx es Top
// Preserved: ds sp
fn0800_0162_entry:
l0800_0162:
	Mem14[ds:0x74<16>:word32] = msdos_get_interrupt_vector(0<8>)
	Mem21[ds:0x78<16>:word32] = msdos_get_interrupt_vector(4<8>)
	Mem28[ds:0x7C<16>:word32] = msdos_get_interrupt_vector(5<8>)
	Mem35[ds:0x80<16>:word32] = msdos_get_interrupt_vector(6<8>)
	msdos_set_interrupt_vector(0<8>, SEQ(cs, 0x158<16>))
	return
fn0800_0162_exit:


void __restorezero(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __exit
// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: ax dx Top
// Preserved: ds sp
__restorezero_entry:
l0800_01A5:
	msdos_set_interrupt_vector(0<8>, Mem7[ds:0x74<16>:segptr32])
	msdos_set_interrupt_vector(4<8>, Mem16[ds:0x78<16>:segptr32])
	msdos_set_interrupt_vector(5<8>, Mem25[ds:0x7C<16>:segptr32])
	msdos_set_interrupt_vector(6<8>, Mem34[ds:0x80<16>:segptr32])
	return
__restorezero_exit:


void fn0800_01DA(char * ds_dx, word16 cx)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __exit
//      fn0800_01E9
// MayUse:  cx:[0..15] Sequence ds:dx:[0..31]
// LiveOut:
// Trashed: C ax bx Top
// Preserved: ds dx sp
fn0800_01DA_entry:
l0800_01DA:
	msdos_write_file(2<16>, cx, ds_dx, out ax_10)
	return
fn0800_01DA_exit:


void _abort()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __setargv
//      __setenvp
// MayUse: 
// LiveOut:
// Trashed: cx dx Top
// Preserved: sp
_abort_entry:
l0800_01E2:
l0800_01E6_thunk_fn0800_01E9:
	fn0800_01E9(cx, dx)
	return
_abort_exit:


void fn0800_01E9(word16 cx, word16 dx)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __setenvp
// MayUse:  cx:[0..15] dx:[0..15] ss:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_01E9_exit:
fn0800_01E9_entry:
l0800_01E9:
	fn0800_01DA(SEQ(Mem0[0800:01F8:selector], dx), cx)
	__exit()


void _f3()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_01E9
//      _f2
// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: bp sp
_f3_entry:
l0800_01FA:
	return
_f3_exit:


void _f2()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      f1_name_overridden
// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: bp sp
_f2_entry:
l0800_01FF:
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	return
_f2_exit:


void f1_name_overridden()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _f0
// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: bp sp
f1_name_overridden_entry:
l0800_0222:
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	return
f1_name_overridden_exit:


void _f0()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _main
// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: bp sp
_f0_entry:
l0800_0245:
	f1_name_overridden()
	f1_name_overridden()
	f1_name_overridden()
	f1_name_overridden()
	f1_name_overridden()
	f1_name_overridden()
	f1_name_overridden()
	f1_name_overridden()
	f1_name_overridden()
	return
_f0_exit:


void _main(word16 cx, word16 dx, word16 bx, selector es, selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] es:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZDOP ax bp bx cx di dx es si sp Top
// Preserved:
_main_entry:
l0800_0265:
	dx_40 = _scanf(_printf(cx, dx, bx, ds, 0x194<16>), es, ds, 0x1B0<16>, out bx_37, out bp_36)
	sp_43 = <invalid>
	cx_52 = Mem33[ss:sp_43 + 2<i16>:word16]
	Mem56[ss:sp_43 + 2<i16>:word16] = Mem33[ss:bp_36 - 2<i16>:word16]
	Mem59[ss:sp_43:word16] = Mem56[ss:bp_36 - 4<i16>:word16]
	Mem62[ss:sp_43 - 2<i16>:word16] = 0x1B4<16>
	_printf(cx_52, dx_40, bx_37, ds, Mem62[ss:sp_43 - 2<i16>:word16])
	Mem73[ss:bp_36 - 6<i16>:word16] = 0<16>
	Mem74[ss:bp_36 - 8<i16>:word16] = 1<16>
l0800_02A7:
	dx_78 = Mem77[ss:bp_36 - 6<i16>:word16]
	ax_79 = Mem77[ss:bp_36 - 8<i16>:word16]
	branch dx_78 < Mem77[ss:bp_36 - 2<i16>:word16] l0800_029C
l0800_02B2:
	branch dx_78 > Mem77[ss:bp_36 - 2<i16>:word16] l0800_02B9
l0800_02B4:
	branch ax_79 <=u Mem77[ss:bp_36 - 4<i16>:word16] l0800_029C
l0800_029C:
	_f0()
	Mem93[ss:bp_36 - 8<i16>:ui32] = Mem89[ss:bp_36 - 8<i16>:ui32] + 1<32>
l0800_02B9:
	Mem101[ss:sp_43 + 2<16>:word16] = 0x1CE<16>
	_printf(cx_52, dx_78, bx_37, ds, Mem101[ss:sp_43 + 2<16>:word16])
	return
_main_exit:


word16 __IOERROR(selector ds, word16 wArg02)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __read
//      __write
//      _lseek
//      _eof
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax:[0..15]-_eof
// Trashed: SCZO ax Top
// Preserved: bp si sp
__IOERROR_entry:
l0800_02C5:
	si_13 = wArg02
	branch wArg02 < 0<16> l0800_02E4
l0800_02E4:
	si_19 = -wArg02
	branch si_19 >u 0x23<16> l0800_02D5
l0800_02EB:
	Mem23[ds:0x1D8<16>:word16] = 0xFFFF<16>
l0800_02D0:
	branch wArg02 <=u 0x58<16> l0800_02D8
l0800_02D5:
	si_13 = 0x57<16>
l0800_02D8:
	Mem30[ds:0x1D8<16>:word16] = si_13
	si_19 = CONVERT(Mem30[ds:si_13 + 0x1DA<16>:byte], int8, int16)
l0800_02F1:
	Mem39[ds:0x94<16>:word16] = si_19
l0800_02FB:
	return 0xFFFF<16>
__IOERROR_exit:


void _exit(selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
_exit_exit:
_exit_entry:
l0800_0301:
l0800_0310:
	ax_11 = Mem10[ds:0x23E<16>:word16]
	Mem13[ds:0x23E<16>:word16] = Mem10[ds:0x23E<16>:word16] - 1<16>
	branch ax_11 != 0<16> l0800_0306
l0800_0306:
	bx_19 = Mem13[ds:0x23E<16>:word16]
	call 0x800<16>:Mem13[ds:(bx_19 << 1<16>) + 0x5E8<16>:word16] (retsize: 2;)
		uses: bx:bx_19 << 1<16>,Mem:Mem13
l0800_031B:
	call 0x800<16>:Mem13[ds:0x234<16>:word16] (retsize: 2;)
		uses: Mem:Mem13
	call 0x800<16>:Mem13[ds:0x236<16>:word16] (retsize: 2;)
		uses: Mem:Mem13
	call 0x800<16>:Mem13[ds:0x238<16>:word16] (retsize: 2;)
		uses: Mem:Mem13
		defs: sp:sp_44
	Mem52[ss:sp_44 - 2<i16>:word16] = wArg02
	__exit()


void __setargv(selector ds, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0000:[0..15]
// LiveOut:
// Trashed: SCZDO ax bp bx cx di ds dx es si Top
// Preserved: sp
__setargv_entry:
l0800_0336:
	Mem6[0800:0330:word16] = wArg00
	Mem9[0800:0332:word16] = ds
	es_11 = Mem9[ds:0x90<16>:selector]
	ax_16 = CONVERT(Mem9[es_11:0x80<16>:byte], uint8, uint16) (alias)
	si_25 = Mem9[ds:0x8A<16>:word16]
	cx_27 = 1<16>
	es_30 = es_11
	branch Mem9[ds:0x92<16>:byte] <u 3<8> l0800_0374
l0800_0363:
	es_30 = Mem9[ds:0x8C<16>:selector]
	di_31 = si_25 + 2<16>
	cx_225 = 0x7F<16> (alias)
l0800_036D:
	branch cx_225 == 0<16> l0800_036F
l0800_036D_1:
	di_31 = di_347 + 1<i16>
	cx_225 = cx_225 - 1<16>
	di_347 = di_31
	branch Mem9[es_30:di_347:byte] == 0<8> l0800_036D
l0800_036F:
	cl_47 = SLICE(cx_225, byte, 0) (alias)
	ch_62 = SLICE(cx_225, byte, 8) (alias)
	branch cx_225 == 0<16> l0800_03E7
l0800_0371:
	cx_27 = SEQ(ch_62, cl_47 ^ 0x7F<8>) (alias)
l0800_0374:
	di_67 = fp - ((ax_16 + 2<16>) + cx_27 & 0xFFFE<16>)
	branch di_67 <u 0<16> l0800_03E7
l0800_0387:
	Mem81[ss:di_67 - 2<i16>:word16] = cx_27
	cx_82 = cx_27 - 1<16>
	memcpy(ss:di_67, es_30:si_25 + 2<16>, CONVERT(cx_82, word16, uint32))
	di_89 = di_67 + cx_82
	Mem92[ss:di_89:byte] = 0<8>
	si_102 = 0x81<16>
	cx_104 = ax_16 + 1<16>
	ax_106 = 0<16>
l0800_03A3:
	fn0800_03BF(SEQ(es_11, si_102), SEQ(ss, di_89 + 1<i16>), ax_106, cx_104, out ax_118, out cx_104, out si_102)
	C_122 = <invalid>
	Z_123 = <invalid>
	v36_263 = C_122
	branch Z_123 | C_122 l0800_03AF
l0800_03A8:
	branch v36_263 l0800_03EA
l0800_03EA:
	cx_133 = Mem92[ss:di_67 - 2<i16>:word16]
	ds_134 = Mem92[0800:0332:selector]
	Mem136[ds_134:0x84<16>:word16] = 1<16>
	si_139 = di_67
	bp_141 = di_67 - 4<16>
	branch di_67 <u 4<16> l0800_03E7
l0800_03E7:
l0800_03E7_thunk__abort:
	_abort()
	return
l0800_0401:
	Mem147[ds_134:0x86<16>:word16] = di_67 - 4<16>
l0800_0407:
	branch cx_133 == 0<16> l0800_0417
l0800_0409:
	Mem152[ss:bp_141:word16] = si_139
	bp_141 = bp_141 + 2<16>
l0800_040F:
	al_158 = Mem152[ss:si_139:byte]
	si_139 = si_139 + 1<i16>
	cx_133 = cx_133 - 1<16>
	branch al_158 != 0<8> && cx_133 != 0<16> l0800_040F
l0800_0415:
	branch al_158 == 0<8> l0800_0407
l0800_0417:
	Mem174[ss:bp_141:word16] = 0<16>
	call Mem174[0800:0330:word16] (retsize: 0;)
		uses: ax:0<16>,bx:4<16>,Mem:Mem174
	return
__setargv_exit:
l0800_03AA:
	fn0800_03BF(SEQ(es_11, si_102), SEQ(ss, di_89 + 1<i16>), ax_118, cx_104, out ax_118, out cx_104, out si_102)
	C_207 = <invalid>
	Z_208 = <invalid>
	v36_263 = C_207
	branch Z_208 | C_207 l0800_03A8
l0800_03AF:
	ah_234 = SLICE(ax_118, byte, 8) (alias)
	al_211 = SLICE(ax_118, byte, 0) (alias)
	branch al_211 == 0x20<8> l0800_03BB
l0800_03B3:
	branch al_211 == 0xD<8> l0800_03BB
l0800_03B7:
	ax_106 = ax_118 (alias)
	branch al_211 != 9<8> l0800_03A3
l0800_03BB:
	ax_106 = SEQ(ah_234, 0<8>) (alias)


word32 fn0800_03BF(segptr32 ds_si, segptr32 es_di, word16 ax, word16 cx, ptr16 & axOut, ptr16 & cxOut, ptr16 & siOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __setargv
// MayUse:  ax:[0..15] cx:[0..15] Sequence ds:si:[0..31] Sequence es:di:[0..31]
// LiveOut: CZ-__setargv ax:[0..15]-__setargv cx:[0..15]-__setargv si:[0..15]-__setargv
// Trashed: SCZO ax cx si Top
// Preserved: bx di dx sp
fn0800_03BF_entry:
	si = SLICE(ds_si, word16, 0)
l0800_03BF:
	al_12 = SLICE(ax, byte, 0) (alias)
	branch ax == 0<16> l0800_03CA
l0800_03C3:
	Mem15[es_di:byte] = al_12
	branch al_12 != 0<8> l0800_03CA
l0800_03C9:
l0800_03CA:
	Z_48 = SLICE(cond(0<8>), bool, 2) (alias)
	C_34 = true
	ax_63 = SEQ(al_12, 0<8>) (alias)
	branch cx == 0<16> l0800_03E6
l0800_03D1:
	al_43 = Mem41[ds_si:byte]
	SCZO_47 = cond(al_43 - 0x22<8>)
	si = si + 1<i16>
	cx = cx - 1<16>
	Z_48 = SLICE(SCZO_47, bool, 2) (alias)
	ax_63 = SEQ(al_12, al_43 - 0x22<8>) (alias)
	C_34 = SLICE(SCZO_47, bool, 1) (alias)
	branch al_43 == 0x22<8> l0800_03E6
l0800_03D7:
	ax_63 = SEQ(al_12, al_43) (alias)
	branch al_43 != 0x5C<8> l0800_03E4
l0800_03DD:
	branch Mem41[ds_si + 1<i32>:byte] != 0x22<8> l0800_03E4
l0800_03E2:
	si = si + 2<i16>
	cx = cx - 2<16>
	ax_63 = SEQ(al_12, Mem41[ds_si + 1<i32>:byte]) (alias)
l0800_03E4:
	Z_48 = SLICE(cond(si), bool, 2) (alias)
	C_34 = false
l0800_03E6:
	axOut = ax_63
	cxOut = cx
	siOut = si
	return C_34 | Z_48
fn0800_03BF_exit:


void __setenvp(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx di dx Top
// Preserved: D ds es si sp
__setenvp_entry:
l0800_0421:
	cx_6 = Mem0[ds:0x8A<16>:word16]
	ax_10 = _malloc(ds, cx_6)
	branch ax_10 == 0<16> l0800_0454
l0800_0430:
	memcpy(ds:ax_10, Mem29[ds:0x8C<16>:selector]:0<16>, CONVERT(cx_6, word16, uint32))
	ax_49 = _malloc(ds, Mem45[ds:0x8E<16>:word16])
	Mem61[ds:0x88<16>:word16] = ax_49
	di_166 = ax_10
	bx_58 = ax_49
	branch ax_49 != 0<16> l0800_0457
l0800_0457:
	cx_105 = 0xFFFF<16>
l0800_045C:
	Mem75[ds:bx_58:word16] = di_166
	bx_58 = bx_58 + 2<16>
l0800_0461:
	branch cx_105 == 0<16> l0800_0463
l0800_0461_1:
	di_166 = di_166 + 1<i16>
	cx_105 = cx_105 - 1<16>
	branch Mem75[ds:di_166:byte] == 0<8> l0800_0461
l0800_0463:
	branch Mem75[ds:di_166:byte] != 0<8> l0800_045C
l0800_0468:
	Mem102[ds:bx_58:word16] = 0<16>
	return
l0800_0454:
l0800_0454_thunk__abort:
	_abort()
	return
__setenvp_exit:


void ___pull_free_block(selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _malloc
//      fn0800_15CF
//      fn0800_1606
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx Top
// Preserved: bp di si sp
___pull_free_block_entry:
l0800_0491:
	ax_17 = Mem14[ds:wArg02 + 6<i16>:word16]
	Mem18[ds:0x62A<16>:word16] = ax_17
	branch ax_17 != wArg02 l0800_04AB
l0800_04AB:
	si_21 = Mem18[ds:wArg02 + 4<i16>:word16]
	Mem23[ds:Mem18[ds:0x62A<16>:word16] + 4<i16>:word16] = si_21
	Mem25[ds:si_21 + 6<i16>:word16] = Mem23[ds:0x62A<16>:word16]
l0800_04A3:
	Mem26[ds:0x62A<16>:word16] = 0<16>
l0800_04BB:
	return
___pull_free_block_exit:


word16 fn0800_04BF(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _malloc
// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax:[0..15]-_malloc
// Trashed: SCZO ax Top
// Preserved: bp di si sp
fn0800_04BF_entry:
l0800_04BF:
	Mem19[ds:wArg02:word16] = Mem14[ds:wArg02:word16] - wArg04
	si_21 = Mem19[ds:wArg02:word16] + wArg02
	Mem24[ds:si_21:word16] = wArg04 + 1<16>
	Mem25[ds:si_21 + 2<i16>:word16] = wArg02
	branch Mem25[ds:0x628<16>:word16] != wArg02 l0800_04E6
l0800_04E6:
	Mem32[ds:si_21 + wArg04 + 2<i16>:word16] = si_21
l0800_04E0:
	Mem33[ds:0x628<16>:word16] = si_21
l0800_04EE:
l0800_04F5:
	return si_21 + 4<16>
fn0800_04BF_exit:


word16 fn0800_04F9(selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _malloc
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax:[0..15]-_malloc
// Trashed: SCZO ax cx dx Top
// Preserved: bp si sp
fn0800_04F9_entry:
l0800_04F9:
	ax_24 = ___sbrk(ds, CONVERT(wArg02, uint16, uint32))
	branch ax_24 != 0xFFFF<16> l0800_051B
l0800_051B:
	Mem39[ds:ax_24 + 2<i16>:word16] = Mem22[ds:0x628<16>:word16]
	Mem42[ds:ax_24:word16] = wArg02 + 1<16>
	Mem43[ds:0x628<16>:word16] = ax_24
	ax_45 = Mem43[ds:0x628<16>:word16] + 4<16>
l0800_0517:
	ax_45 = 0<16>
l0800_0533:
	return ax_45
fn0800_04F9_exit:


word16 fn0800_0536(selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _malloc
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax:[0..15]-_malloc
// Trashed: SCZO ax cx dx Top
// Preserved: bp si sp
fn0800_0536_entry:
l0800_0536:
	ax_24 = ___sbrk(ds, CONVERT(wArg02, uint16, uint32))
	branch ax_24 != 0xFFFF<16> l0800_0558
l0800_0558:
	Mem38[ds:0x62C<16>:word16] = ax_24
	Mem39[ds:0x628<16>:word16] = ax_24
	Mem42[ds:ax_24:word16] = wArg02 + 1<16>
	ax_44 = ax_24 + 4<16>
l0800_0554:
	ax_44 = 0<16>
l0800_056D:
	return ax_44
fn0800_0536_exit:


word16 _malloc(selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __setenvp
//      _setvbuf
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax:[0..15]-_setvbuf
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp di si sp
_malloc_entry:
l0800_0570:
	branch wArg02 == 0<16> l0800_0581
l0800_057C:
	branch wArg02 <=u 0xFFF4<16> l0800_0585
l0800_0585:
	ax_25 = wArg02 + 0xB<16> & 0xFFF8<16>
	branch Mem14[ds:0x62C<16>:word16] != 0<16> l0800_059D
l0800_059D:
	si_30 = Mem14[ds:0x62A<16>:word16]
	branch si_30 == 0<16> l0800_05D8
l0800_05A7:
	branch Mem14[ds:si_30:word16] <u ax_25 + 0x28<16> l0800_05BB
l0800_05BB:
	branch Mem14[ds:si_30:word16] <u ax_25 l0800_05CF
l0800_05CF:
	si_30 = Mem14[ds:si_30 + 6<i16>:word16]
	branch si_30 != Mem14[ds:0x62A<16>:word16] l0800_05A7
l0800_05D8:
	ax_108 = fn0800_04F9(ds, ax_25)
l0800_05C1:
	___pull_free_block(ds, si_30)
	Mem80[ds:si_30:word16] = Mem70[ds:si_30:word16] + 1<16>
	ax_108 = si_30 + 4<16>
l0800_05B2:
	ax_108 = fn0800_04BF(ds, si_30, ax_25)
l0800_0596:
	ax_108 = fn0800_0536(ds, ax_25)
l0800_0581:
	ax_108 = 0<16>
l0800_05DF:
	return ax_108
_malloc_exit:


void ___brk(selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _brk
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax dx Top
// Preserved: bp sp
___brk_entry:
l0800_05E3:
	branch wArg02 >=u fp - 0x102<16> l0800_05FA
l0800_05FA:
	Mem15[ds:0x94<16>:word16] = 8<16>
l0800_05F3:
	Mem17[ds:0x9E<16>:word16] = wArg02
l0800_0605:
	return
___brk_exit:


word16 ___sbrk(selector ds, word32 dwArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_04F9
//      fn0800_0536
// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_0536
// Trashed: SCZO ax cx dx Top
// Preserved: bp sp
___sbrk_entry:
l0800_0607:
	dx_ax_42 = dwArg02 + CONVERT(Mem7[ds:0x9E<16>:word16], uint16, uint32)
	ax_12 = SLICE(dx_ax_42, word16, 0) (alias)
	cx_17 = SLICE(dx_ax_42, word16, 0) + 0x100<16> (alias)
	branch SLICE(dx_ax_42 + 0x100<32>, word16, 16) != 0<16> l0800_062E
l0800_0624:
	branch cx_17 >=u fp - 2<i16> l0800_062E
l0800_062E:
	Mem29[ds:0x94<16>:word16] = 8<16>
	ax_30 = 0xFFFF<16>
l0800_0628:
	v15_31 = Mem7[ds:0x9E<16>:word16]
	Mem32[ds:0x9E<16>:word16] = ax_12
	ax_30 = v15_31
l0800_0639:
	return ax_30
___sbrk_exit:


void _brk(selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_1606
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax cx dx Top
// Preserved: bp sp
_brk_entry:
l0800_063B:
	___brk(ds, wArg02)
l0800_0647:
	return
_brk_exit:


word16 fn0800_065B(selector ds, word16 wArg02)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _fseek
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax:[0..15]-_fseek
// Trashed: SCZOP ax bx Top
// Preserved: bp di si sp
fn0800_065B_entry:
l0800_065B:
	si_18 = Mem15[ds:wArg02:word16]
	wLoc04_65 = si_18
	branch (Mem20[ds:wArg02 + 2<i16>:word16] & 0x40<16>) == 0<16> l0800_067B
l0800_067B:
	di_27 = Mem20[ds:wArg02 + 10<i16>:word16]
l0800_068E:
	si_18 = si_18 - 1<16>
	branch si_18 != 0<16> l0800_0683
l0800_0683:
	di_27 = di_88 + 1<16>
	di_88 = di_27
	branch Mem40[ds:di_88:byte] != 0xA<8> l0800_068E
l0800_068B:
	wLoc04_65 = wLoc04_65 + 1<16>
l0800_0695:
	ax_48 = wLoc04_65
l0800_0677:
	ax_48 = si_18
l0800_069A:
	return ax_48
fn0800_065B_exit:


void _fseek(selector ds, word16 wArg02, ui32 dwArg04, word16 wArg08)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _setvbuf
// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..15]
// LiveOut:
// Trashed: SCZOP ax bx cx dx Top
// Preserved: bp si sp
_fseek_entry:
l0800_06A2:
	branch _fflush(ds, wArg02) == 0<16> l0800_06B7
l0800_06B7:
	branch wArg08 != 1<16> l0800_06CD
l0800_06BD:
	branch Mem14[ds:wArg02:word16] <= 0<16> l0800_06CD
l0800_06C2:
	dwArg04 = dwArg04 - CONVERT(fn0800_065B(ds, wArg02), uint16, uint32) (alias)
l0800_06CD:
	Mem60[ds:wArg02 + 2<i16>:word16] = Mem58[ds:wArg02 + 2<i16>:word16] & 0xFE5F<16>
	Mem64[ds:wArg02:word16] = 0<16>
	Mem66[ds:wArg02 + 10<i16>:word16] = Mem64[ds:wArg02 + 8<i16>:word16]
	ax_83 = _lseek(ds, CONVERT(Mem78[ds:wArg02 + 4<i16>:byte], int8, int16), dwArg04, SLICE(wArg08, byte, 0), out dx_86)
	branch dx_86 != 0xFFFF<16> l0800_06FF
l0800_06F5:
	branch ax_83 != 0xFFFF<16> l0800_06FF
l0800_06FF:
l0800_06FA:
l0800_0701:
l0800_06B2:
l0800_0703:
	return
_fseek_exit:


void fn0800_075B(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0782
//      _fgetc
// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: P di si sp
fn0800_075B_entry:
l0800_075B:
	di_11 = 0x14<16>
	si_12 = 0x342<16>
l0800_0778:
	di_11 = di_11 - 1<16>
	branch di_11 != 0<16> l0800_0765
l0800_0765:
	branch (Mem23[ds:si_12 + 2<i16>:word16] & 0x300<16>) != 0x300<16> l0800_0775
l0800_0770:
	_fflush(ds, si_12)
l0800_0775:
	si_12 = si_12 + 0x10<16>
l0800_077F:
	return
fn0800_075B_exit:


word16 fn0800_0782(selector ds, word16 wArg02)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _fgetc
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax:[0..15]-_fgetc
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp si sp
fn0800_0782_entry:
l0800_0782:
	branch (Mem11[ds:wArg02 + 2<i16>:word16] & 0x200<16>) == 0<16> l0800_0793
l0800_0790:
	fn0800_075B(ds)
l0800_0793:
	v12_29 = Mem11[ds:wArg02 + 6<i16>:word16]
	ax_34 = Mem33[ds:wArg02 + 8<i16>:word16]
	Mem35[ds:wArg02 + 10<i16>:word16] = ax_34
	ax_42 = _read(ds, CONVERT(Mem37[ds:wArg02 + 4<i16>:byte], int8, int16), ax_34, v12_29)
	Mem54[ds:wArg02:word16] = ax_42
	branch ax_42 <= 0<16> l0800_07B9
l0800_07B9:
	branch Mem54[ds:wArg02:word16] != 0<16> l0800_07CC
l0800_07CC:
	Mem62[ds:wArg02:word16] = 0<16>
	Mem64[ds:wArg02 + 2<i16>:word16] = Mem62[ds:wArg02 + 2<i16>:word16] | 0x10<16>
l0800_07BE:
	Mem74[ds:wArg02 + 2<i16>:word16] = Mem54[ds:wArg02 + 2<i16>:word16] & 0xFE7F<16> | 0x20<16>
l0800_07D5:
	ax_105 = 0xFFFF<16>
l0800_07AE:
	Mem77[ds:wArg02 + 2<i16>:word16] = Mem54[ds:wArg02 + 2<i16>:word16] & 0xFFDF<16>
	ax_105 = 0<16>
l0800_07DA:
	return ax_105
fn0800_0782_exit:


void _fgetc(selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZOP ax bx cx dx es Top
// Preserved: D bp si sp
_fgetc_entry:
l0800_07F2:
l0800_07FC:
	v9_18 = Mem17[ds:wArg02:word16] - 1<16>
	Mem19[ds:wArg02:word16] = v9_18
	branch v9_18 < 0<16> l0800_080E
l0800_080E:
	v16_22 = Mem19[ds:wArg02:word16] + 1<16>
	Mem23[ds:wArg02:word16] = v16_22
	branch v16_22 < 0<16> l0800_0819
l0800_0812:
	branch (Mem23[ds:wArg02 + 2<i16>:word16] & 0x110<16>) == 0<16> l0800_0824
l0800_0824:
	Mem34[ds:wArg02 + 2<i16>:word16] = Mem32[ds:wArg02 + 2<i16>:word16] | 0x80<16>
	branch Mem34[ds:wArg02 + 6<i16>:word16] == 0<16> l0800_0842
l0800_0842:
	branch Mem34[ds:0x4AA<16>:word16] != 0<16> l0800_0881
l0800_0849:
	branch wArg02 != 0x342<16> l0800_0881
l0800_0881:
	branch (Mem45[ds:wArg02 + 2<i16>:word16] & 0x200<16>) == 0<16> l0800_088B
l0800_0888:
	fn0800_075B(ds)
l0800_088B:
	branch __read(ds, CONVERT(Mem69[ds:wArg02 + 4<i16>:byte], int8, int16), fp - 3<i16>, 1<16>) == 1<16> l0800_08C9
l0800_08C9:
	branch bLoc03 != 0xD<8> l0800_08D6
l0800_08CF:
	branch (Mem75[ds:wArg02 + 2<i16>:word16] & 0x40<16>) == 0<16> l0800_0881
l0800_08D6:
	Mem94[ds:wArg02 + 2<i16>:word16] = Mem75[ds:wArg02 + 2<i16>:word16] & 0xFFDF<16>
l0800_08A3:
	branch _eof(ds, CONVERT(Mem75[ds:wArg02 + 4<i16>:byte], int8, int16)) == 1<16> l0800_08B8
l0800_08B8:
	Mem125[ds:wArg02 + 2<i16>:word16] = Mem105[ds:wArg02 + 2<i16>:word16] & 0xFE7F<16> | 0x20<16>
l0800_08B1:
	Mem127[ds:wArg02 + 2<i16>:word16] = Mem105[ds:wArg02 + 2<i16>:word16] | 0x10<16>
l0800_08C4:
l0800_0850:
	branch _isatty(CONVERT(Mem34[ds:wArg02 + 4<i16>:byte], int8, int16)) != 0<16> l0800_0862
l0800_085D:
	Mem153[ds:wArg02 + 2<i16>:word16] = Mem137[ds:wArg02 + 2<i16>:word16] & 0xFDFF<16>
l0800_0862:
	branch (Mem161[ds:wArg02 + 2<i16>:word16] & 0x200<16>) == 0<16> l0800_0872
l0800_0872:
	ax_168 = 0<16>
l0800_086D:
	ax_168 = 1<16>
l0800_0874:
	_setvbuf(ds, wArg02, 0<16>, ax_168, 0x200<16>)
l0800_082F:
	branch fn0800_0782(ds, wArg02) == 0<16> l0800_083D
l0800_083D:
l0800_0837:
l0800_0819:
	Mem223[ds:wArg02 + 2<i16>:word16] = Mem23[ds:wArg02 + 2<i16>:word16] | 0x10<16>
l0800_0800:
	Mem229[ds:wArg02 + 10<i16>:word16] = Mem19[ds:wArg02 + 10<i16>:word16] + 1<16>
l0800_08E2:
	return
_fgetc_exit:


word16 _isatty(word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _fgetc
// MayUse:  Stack +0002:[0..15]
// LiveOut: ax:[0..15]-_fgetc
// Trashed: SCZO ax bx dx Top
// Preserved: bp sp
_isatty_entry:
l0800_08F2:
	msdos_ioctl_get_device_info(wArg02, out dx_10)
	return dx_10 & 0x80<16>
_isatty_exit:


void _setvbuf(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _fgetc
// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut:
// Trashed: SCZOP ax bx cx dx Top
// Preserved: bp di si sp
_setvbuf_entry:
l0800_0904:
	branch Mem14[ds:wArg02 + 14<i16>:word16] != wArg02 l0800_0922
l0800_0916:
	branch wArg06 > 2<16> l0800_0922
l0800_091C:
	branch wArg08 <=u 0x7FFF<16> l0800_0928
l0800_0928:
	branch Mem14[ds:0x4AC<16>:word16] != 0<16> l0800_093E
l0800_092F:
	branch wArg02 != 0x352<16> l0800_093E
l0800_093E:
	branch Mem14[ds:0x4AA<16>:word16] != 0<16> l0800_0952
l0800_0945:
	branch wArg02 != 0x342<16> l0800_0952
l0800_094C:
	Mem38[ds:0x4AA<16>:word16] = 1<16>
l0800_0936:
	Mem39[ds:0x4AC<16>:word16] = 1<16>
l0800_0952:
	branch Mem42[ds:wArg02:word16] == 0<16> l0800_0966
l0800_0957:
	_fseek(ds, wArg02, 0<32>, 1<16>)
l0800_0966:
	branch (Mem75[ds:wArg02 + 2<i16>:word16] & 4<16>) == 0<16> l0800_0974
l0800_096D:
	_free(ds, Mem75[ds:wArg02 + 8<i16>:word16])
l0800_0974:
	Mem99[ds:wArg02 + 2<i16>:word16] = Mem97[ds:wArg02 + 2<i16>:word16] & 0xFFF3<16>
	Mem101[ds:wArg02 + 6<i16>:word16] = 0<16>
	Mem104[ds:wArg02 + 8<i16>:word16] = wArg02 + 5<16>
	Mem105[ds:wArg02 + 10<i16>:word16] = wArg02 + 5<16>
	branch wArg06 == 2<16> l0800_09CE
l0800_098F:
	branch wArg08 <=u 0<16> l0800_09CE
l0800_0993:
	Mem123[ds:0x234<16>:word16] = 0x9D6<16>
	branch wArg04 != 0<16> l0800_09B7
l0800_099F:
	ax_129 = _malloc(ds, wArg08)
	wArg04 = ax_129
	branch ax_129 == 0<16> l0800_09B2
l0800_09B2:
l0800_09AB:
	Mem147[ds:wArg02 + 2<i16>:word16] = Mem139[ds:wArg02 + 2<i16>:word16] | 4<16>
l0800_09B7:
	Mem157[ds:wArg02 + 10<i16>:word16] = wArg04
	Mem158[ds:wArg02 + 8<i16>:word16] = wArg04
	Mem160[ds:wArg02 + 6<i16>:word16] = wArg08
	branch wArg06 != 1<16> l0800_09CE
l0800_09C9:
	Mem164[ds:wArg02 + 2<i16>:word16] = Mem160[ds:wArg02 + 2<i16>:word16] | 8<16>
l0800_09CE:
l0800_0922:
l0800_09D2:
	return
_setvbuf_exit:


word16 _read(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0782
// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax:[0..15]-fn0800_0782
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di si sp
_read_entry:
l0800_09F7:
	branch wArg06 <u 1<16> l0800_0A15
l0800_0A08:
	branch (Mem15[ds:(wArg02 << 1<16>) + 0x482<16>:word16] & 0x200<16>) == 0<16> l0800_0A1A
l0800_0A1A:
	ax_41 = __read(ds, wArg02, wArg04, wArg06)
	branch ax_41 <u 1<16> l0800_0A42
l0800_0A35:
	branch (Mem47[ds:(wArg02 << 1<16>) + 0x482<16>:word16] & 0x8000<16>) == 0<16> l0800_0A48
l0800_0A48:
	cx_115 = ax_41
	si_59 = wArg04
	di_143 = wArg04
l0800_0A55:
	al_70 = Mem69[ds:si_59:byte]
	si_59 = si_59 + 1<i16>
	branch al_70 == 0x1A<8> l0800_0A87
l0800_0A87:
	_lseek(ds, wArg02, SEQ(0<16> - CONVERT(cx_115 != 0<16>, bool, word16), -cx_115), 2<8>, out dx_316)
	Mem107[ds:(wArg02 << 1<16>) + 0x482<16>:word16] = Mem94[ds:(wArg02 << 1<16>) + 0x482<16>:word16] | 0x200<16>
l0800_0A5A:
	branch al_70 == 0xD<8> l0800_0A63
l0800_0A63:
	cx_115 = cx_115 - 1<16>
	branch cx_115 != 0<16> l0800_0A55
l0800_0A65:
	__read(ds, wArg02, fp - 3<i16>, 1<16>)
	Mem144[ds:di_143:byte] = bLoc03
	di_143 = di_143 + 1<i16>
l0800_0A5E:
	Mem146[ds:di_143:byte] = al_70
	di_143 = di_143 + 1<i16>
	cx_115 = cx_115 - 1<16>
	branch cx_115 != 0<16> l0800_0A55
l0800_0A61:
l0800_0A7F:
	branch di_143 != wArg04 l0800_0A85
l0800_0A85:
l0800_0AA7:
	ax_156 = di_143 - wArg04
l0800_0A83:
l0800_0A42:
	ax_156 = ax_41
l0800_0A15:
	ax_156 = 0<16>
l0800_0AAD:
	return ax_156
_read_exit:


word16 __read(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _fgetc
//      _read
// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax:[0..15]-_read
// Trashed: C ax bx cx dx Top
// Preserved: SZO bp ds sp
__read_entry:
l0800_0AB3:
	branch msdos_read_file(wArg02, wArg06, SEQ(ds, wArg04), out ax_15) l0800_0AC7
l0800_0AC7:
	ax_15 = __IOERROR(ds, ax_15)
l0800_0AC5:
l0800_0ACD:
	return ax_15
__read_exit:


word16 _write(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _fflush
// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax:[0..15]-_fflush
// Trashed: SCZOP ax bx cx dx Top
// Preserved: bp di si sp
_write_entry:
l0800_0ACF:
	branch wArg06 >=u 1<16> l0800_0AE6
l0800_0AE6:
	branch (Mem15[ds:(wArg02 << 1<16>) + 0x482<16>:word16] & 0x8000<16>) == 0<16> l0800_0B05
l0800_0B05:
	Mem30[ds:(wArg02 << 1<16>) + 0x482<16>:word16] = Mem15[ds:(wArg02 << 1<16>) + 0x482<16>:word16] & 0xFDFF<16>
	wLoc86_198 = wArg04
	wLoc8A_199 = wArg06
	si_106 = fp - 0x84<16>
l0800_0B91:
	branch wLoc8A_199 == 0<16> l0800_0B9B
l0800_0B9B:
	di_47 = si_106 - (fp - 0x84<16>)
	branch di_47 <=u 0<16> l0800_0BD7
l0800_0BA9:
	ax_65 = __write(ds, wArg02, fp - 0x84<16>, di_47)
	branch ax_65 == di_47 l0800_0BD7
l0800_0BD7:
	ax_146 = wArg06
l0800_0BC0:
	branch ax_65 >=u 0<16> l0800_0BCC
l0800_0BCC:
	ax_146 = wArg06 + ax_65 - di_47
l0800_0BC7:
	ax_146 = 0xFFFF<16>
l0800_0BD5:
l0800_0B98:
l0800_0B24:
	v24_89 = wLoc8A_199 - 1<16>
	wLoc8A_199 = v24_89
	wLoc86_198 = wLoc86_198 + 1<16>
	al_94 = Mem93[ds:wLoc86_198:byte]
	branch al_94 != 0xA<8> l0800_0B3E
l0800_0B3A:
	Mem98[ds:si_106:byte] = 0xD<8>
	si_106 = si_106 + 1<16>
l0800_0B3E:
	Mem107[ds:si_106:byte] = al_94
	si_106 = si_106 + 1<16>
	branch si_106 - (fp - 0x84<16>) < 0x80<16> l0800_0B91
l0800_0B53:
	di_116 = si_106 - (fp - 0x84<16>)
	ax_127 = __write(ds, wArg02, fp - 0x84<16>, di_116)
	branch ax_127 == di_116 l0800_0B8D
l0800_0B8D:
	si_106 = fp - 0x84<16>
l0800_0B72:
	branch ax_127 >=u 0<16> l0800_0B7E
l0800_0B7E:
	ax_146 = wArg06 - v24_89 + ax_127 - di_116
l0800_0B79:
	ax_146 = 0xFFFF<16>
l0800_0B8B:
l0800_0AF3:
	ax_146 = __write(ds, wArg02, wArg04, wArg06)
l0800_0AE1:
	ax_146 = 0<16>
l0800_0BDC:
	return ax_146
_write_exit:


word16 __write(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _write
//      _fputc
// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax:[0..15]-_write
// Trashed: SCZOP ax bx cx dx Top
// Preserved: bp ds sp
__write_entry:
l0800_0BE2:
	branch (Mem7[ds:(wArg02 << 1<16>) + 0x482<16>:word16] & 0x800<16>) == 0<16> l0800_0C02
l0800_0BF2:
	_lseek(ds, wArg02, 0<32>, 2<8>, out dx_108)
l0800_0C02:
	branch msdos_write_file(wArg02, wArg06, SEQ(ds, wArg04), out ax_48) l0800_0C20
l0800_0C20:
	ax_53 = __IOERROR(ds, ax_48)
l0800_0C11:
	Mem64[ds:(wArg02 << 1<16>) + 0x482<16>:word16] = Mem60[ds:(wArg02 << 1<16>) + 0x482<16>:word16] | 0x1000<16>
	ax_53 = ax_48
l0800_0C26:
	return ax_53
__write_exit:


word16 _lseek(selector ds, word16 wArg02, word32 dwArg04, byte bArg08, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _fseek
//      _read
//      __write
//      _tell
// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..7]
// LiveOut: ax:[0..15]-_fseek dx:[0..15]-_fseek
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
_lseek_entry:
l0800_0C28:
	Mem13[ds:(wArg02 << 1<16>) + 0x482<16>:word16] = Mem7[ds:(wArg02 << 1<16>) + 0x482<16>:word16] & 0xFDFF<16>
	ax_25 = SLICE(dx_ax_22, word16, 0) (alias)
	dx_51 = SLICE(dx_ax_22, word16, 16) (alias)
	branch msdos_set_file_position(wArg02, dwArg04, bArg08, out dx_ax_22) l0800_0C4A
l0800_0C4A:
	dx_ax_33 = CONVERT(__IOERROR(ds, ax_25), int16, int32 *)
	ax_25 = SLICE(dx_ax_33, word16, 0) (alias)
	dx_51 = SLICE(dx_ax_33, word16, 16) (alias)
l0800_0C48:
l0800_0C51:
	dxOut = dx_51
	return ax_25
_lseek_exit:


void __LONGTOA(selector ds, byte bArg02, byte bArg04, word16 wArg06, word16 wArg08, word32 dwArg0A)
// stackDelta: 14; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __VPRINTER
// MayUse:  ds:[0..15] Stack +0002:[0..7] Stack +0004:[0..7] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..31]
// LiveOut:
// Trashed: SCZO ax bx Top
// Preserved: D bp cx di ds dx es si sp ss
__LONGTOA_entry:
	wArg0A = SLICE(dwArg0A, word16, 0)
	wArg0C = SLICE(dwArg0A, word16, 16)
l0800_0C53:
	di_128 = wArg08
	bl_28 = SLICE(wArg06, byte, 0) (alias)
	branch wArg06 >u 0x24<16> l0800_0CC1
l0800_0C69:
	branch bl_28 <u 2<8> l0800_0CC1
l0800_0C6E:
	ax_31 = wArg0A
	cx_33 = wArg0C
	branch wArg0C >= 0<16> l0800_0C89
l0800_0C78:
	branch bArg04 == 0<8> l0800_0C89
l0800_0C7E:
	Mem41[ds:wArg08:byte] = 0x2D<8>
	cx_ax_175 = -dwArg0A
	di_128 = wArg08 + 1<16>
	ax_31 = SLICE(cx_ax_175, word16, 0)
	cx_33 = SLICE(cx_ax_175, word16, 16)
l0800_0C89:
	si_100 = fp - 36<i16>
	branch cx_33 == 0<16> l0800_0C9D
l0800_0C8E:
	dx_ax_57 = CONVERT(cx_33, uint16, uint32) (alias)
	dx_ax_65 = SEQ(dx_ax_57 %u wArg06, ax_31) (alias)
	Mem73[ds:si_100:byte] = SLICE(dx_ax_65 %u wArg06, byte, 0)
	ax_61 = dx_ax_57 /u wArg06
	cx_33 = ax_61
	ax_31 = dx_ax_65 /u wArg06
	si_100 = si_100 + 1<16>
	branch ax_61 == 0<16> l0800_0CA4
l0800_0CA4:
	branch ax_31 != 0<16> l0800_0C9D
l0800_0C9D:
	dx_ax_85 = CONVERT(ax_31, uint16, uint32) (alias)
	Mem99[ds:si_100:byte] = SLICE(dx_ax_85 %u wArg06, byte, 0)
	ax_31 = dx_ax_85 /u wArg06
	si_100 = si_100 + 1<16>
l0800_0CA8:
	cx_107 = 36<i16> - fp + si_100
l0800_0CB0:
	si_100 = si_100 - 1<16>
	al_114 = Mem113[ds:si_100:byte]
	branch al_114 >=u 0xA<8> l0800_0CBB
l0800_0CBB:
	al_120 = al_114 - 0xA<8> + bArg02
l0800_0CB7:
	al_120 = al_114 + 0x30<8>
l0800_0CBE:
	Mem129[ds:di_128:byte] = al_120
	di_128 = di_128 + 1<i16>
	cx_107 = cx_107 - 1<16>
	branch cx_107 != 0<16> l0800_0CB0
l0800_0CC1:
	Mem137[ds:di_128:byte] = 0<8>
l0800_0CCA:
	return
__LONGTOA_exit:
l0800_0C9B:


word16 _eof(selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _fgetc
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax:[0..15]-_fgetc
// Trashed: SCZOP ax bx cx dx Top
// Preserved: bp sp
_eof_entry:
l0800_0D5F:
	branch (Mem7[ds:(wArg02 << 1<16>) + 0x482<16>:word16] & 0x200<16>) == 0<16> l0800_0D78
l0800_0D78:
	ax_17 = 0x4400<16>
	dl_21 = SLICE(dx_19, byte, 0) (alias)
	branch msdos_ioctl_get_device_info(wArg02, out dx_19) l0800_0DC3
l0800_0D82:
	branch (dl_21 & 0x80<8>) != 0<8> l0800_0DBF
l0800_0D87:
	ax_17 = SLICE(dx_ax_33, word16, 0) (alias)
	branch msdos_set_file_position(wArg02, null, 1<8>, out dx_ax_33) l0800_0DC3
l0800_0D92:
	ax_17 = SLICE(dx_ax_48, word16, 0) (alias)
	dx_52 = SLICE(dx_ax_48, word16, 16) (alias)
	branch msdos_set_file_position(wArg02, null, 2<8>, out dx_ax_48) l0800_0DC3
l0800_0DA7:
	ax_17 = SLICE(dx_ax_61, word16, 0) (alias)
	dx_76 = SLICE(dx_ax_61, word16, 16) (alias)
	branch msdos_set_file_position(wArg02, dx_ax_33, 0<8>, out dx_ax_61) l0800_0DC3
l0800_0DC3:
	ax_112 = __IOERROR(ds, ax_17)
l0800_0DAE:
	branch dx_76 <u dx_52 l0800_0DBF
l0800_0DB3:
	branch dx_76 >u dx_52 l0800_0DBA
l0800_0DB5:
	branch ax_17 <u ax_17 l0800_0DBF
l0800_0DBF:
	ax_112 = 0<16>
l0800_0DBA:
	ax_112 = 1<16>
l0800_0D72:
	ax_112 = 1<16>
l0800_0DC9:
	return ax_112
_eof_exit:


word16 _fflush(selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _fseek
//      fn0800_075B
//      _fputc
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax:[0..15]-_fputc
// Trashed: SCZOP ax bx cx dx Top
// Preserved: bp di si sp
_fflush_entry:
l0800_0DCD:
	branch Mem14[ds:wArg02 + 14<i16>:word16] == wArg02 l0800_0DE1
l0800_0DE1:
	branch Mem14[ds:wArg02:word16] < 0<16> l0800_0E13
l0800_0E13:
	di_23 = Mem14[ds:wArg02 + 6<i16>:word16] + Mem14[ds:wArg02:word16]
	Mem26[ds:wArg02:word16] = Mem14[ds:wArg02:word16] - (di_23 + 1<16>)
	ax_30 = Mem29[ds:wArg02 + 8<i16>:word16]
	Mem31[ds:wArg02 + 10<i16>:word16] = ax_30
	branch _write(ds, CONVERT(Mem33[ds:wArg02 + 4<i16>:byte], int8, int16), ax_30, di_23 + 1<16>) == di_23 + 1<16> l0800_0E43
l0800_0E32:
	branch (Mem37[ds:wArg02 + 2<i16>:word16] & 0x200<16>) != 0<16> l0800_0E43
l0800_0E43:
	ax_124 = 0<16>
l0800_0E39:
	Mem59[ds:wArg02 + 2<i16>:word16] = Mem37[ds:wArg02 + 2<i16>:word16] | 0x10<16>
	ax_124 = 0xFFFF<16>
l0800_0DE6:
	branch (Mem14[ds:wArg02 + 2<i16>:word16] & 8<16>) != 0<16> l0800_0DF9
l0800_0DED:
	branch Mem14[ds:wArg02 + 10<i16>:word16] != wArg02 + 5<16> l0800_0E0F
l0800_0DF9:
	Mem75[ds:wArg02:word16] = 0<16>
	branch Mem75[ds:wArg02 + 10<i16>:word16] != wArg02 + 5<16> l0800_0E0F
l0800_0E09:
	Mem82[ds:wArg02 + 10<i16>:word16] = Mem75[ds:wArg02 + 8<i16>:word16]
l0800_0E0F:
	ax_124 = 0<16>
l0800_0DDC:
	ax_124 = 0xFFFF<16>
l0800_0E47:
	return ax_124
_fflush_exit:


word16 _printf(word16 cx, word16 dx, word16 bx, selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _main
// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: di:[0..15]-_main
// Trashed: SCZDO ax di si Top
// Preserved: bp sp
_printf_entry:
l0800_0E4B:
	di_26 = __VPRINTER(cx, dx, bx, ds, fp + 4<i16>, wArg02)
l0800_0E62:
	return di_26
_printf_exit:


void __fputc(selector ds, byte bArg02, word16 wArg04)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..7] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZOP ax bx cx dx Top
// Preserved: bp sp
__fputc_entry:
l0800_0E64:
	Mem12[ds:wArg04:word16] = Mem7[ds:wArg04:word16] - 1<16>
	_fputc(ds, bArg02, wArg04)
l0800_0E7B:
	return
__fputc_exit:


void _fputc(selector ds, byte bArg02, word16 wArg04)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __fputc
// MayUse:  ds:[0..15] Stack +0002:[0..7] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZOP ax bx cx dx Top
// Preserved: bp si sp
_fputc_entry:
l0800_0E7D:
l0800_0E8D:
	v10_20 = Mem19[ds:wArg04:word16] + 1<16>
	Mem21[ds:wArg04:word16] = v10_20
	branch v10_20 >= 0<16> l0800_0EC7
l0800_0EC7:
	Mem25[ds:wArg04:word16] = Mem21[ds:wArg04:word16] - 1<16>
	branch (Mem25[ds:wArg04 + 2<i16>:word16] & 0x90<16>) != 0<16> l0800_0ED7
l0800_0ED0:
	branch (Mem25[ds:wArg04 + 2<i16>:word16] & 2<16>) != 0<16> l0800_0EE2
l0800_0EE2:
	Mem35[ds:wArg04 + 2<i16>:word16] = Mem25[ds:wArg04 + 2<i16>:word16] | 0x100<16>
	branch Mem35[ds:wArg04 + 6<i16>:word16] == 0<16> l0800_0F11
l0800_0F11:
	branch bArg02 != 0xA<8> l0800_0F36
l0800_0F17:
	branch (Mem35[ds:wArg04 + 2<i16>:word16] & 0x40<16>) != 0<16> l0800_0F36
l0800_0F1E:
	branch __write(ds, CONVERT(Mem53[ds:wArg04 + 4<i16>:byte], int8, int16), 0x4E0<16>, 1<16>) != 1<16> l0800_0F4E
l0800_0F36:
	branch __write(ds, CONVERT(Mem78[ds:wArg04 + 4<i16>:byte], int8, int16), fp + 2<i16>, 1<16>) == 1<16> l0800_0F5F
l0800_0F4E:
	branch (Mem99[ds:wArg04 + 2<i16>:word16] & 0x200<16>) != 0<16> l0800_0F5F
l0800_0F5F:
l0800_0F55:
	Mem112[ds:wArg04 + 2<i16>:word16] = Mem99[ds:wArg04 + 2<i16>:word16] | 0x10<16>
l0800_0EED:
	branch Mem35[ds:wArg04:word16] == 0<16> l0800_0F02
l0800_0F02:
	Mem123[ds:wArg04:word16] = 0xFFFF<16> - Mem35[ds:wArg04 + 6<i16>:word16]
l0800_0EF2:
	branch _fflush(ds, wArg04) == 0<16> l0800_0F00
l0800_0F00:
l0800_0F0C:
l0800_0EFB:
l0800_0ED7:
	Mem147[ds:wArg04 + 2<i16>:word16] = Mem25[ds:wArg04 + 2<i16>:word16] | 0x10<16>
l0800_0E91:
	Mem154[ds:wArg04 + 10<i16>:word16] = Mem21[ds:wArg04 + 10<i16>:word16] + 1<16>
	Mem156[ds:Mem154[ds:wArg04 + 10<i16>:word16] - 1<i16>:byte] = bArg02
	branch (Mem156[ds:wArg04 + 2<i16>:word16] & 8<16>) == 0<16> l0800_0EBF
l0800_0EA4:
	branch bArg02 == 0xA<8> l0800_0EB0
l0800_0EAA:
	branch bArg02 != 0xD<8> l0800_0EBF
l0800_0EB0:
	branch _fflush(ds, wArg04) == 0<16> l0800_0EBF
l0800_0EBF:
l0800_0EB9:
l0800_0F66:
	return
_fputc_exit:


void __REALCVT(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __VPRINTER
// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: Top
// Preserved: sp
__REALCVT_entry:
l0800_1044:
	call Mem0[ds:0x5E0<16>:word16] (retsize: 0;)
		uses: Mem:Mem0
	return
__REALCVT_exit:


word16 fn0800_1048(segptr32 es_di, selector ds, word16 wArg02)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __VPRINTER
// MayUse:  ds:[0..15] Sequence es:di:[0..31] Stack +0002:[0..15]
// LiveOut: di:[0..15]-__VPRINTER
// Trashed: SCZDO al bx cx di dx Top
// Preserved: bp sp
fn0800_1048_entry:
	di = SLICE(es_di, word16, 0)
l0800_1048:
	dh_13 = SLICE(wArg02, byte, 8) (alias)
	Mem21[es_di:byte] = Mem7[ds:CONVERT(dh_13 >>u 4<8>, uint8, uint16) + 0x4E9<16>:byte]
	Mem27[es_di + 1<i32>:byte] = Mem21[ds:CONVERT(dh_13 & 0xF<8>, uint8, uint16) + 0x4E9<16>:byte]
	dl_29 = SLICE(wArg02, byte, 0) (alias)
	Mem33[es_di + 2<i32>:byte] = Mem27[ds:CONVERT(dl_29 >>u 4<8>, uint8, uint16) + 0x4E9<16>:byte]
	Mem41[es_di + 3<i32>:byte] = Mem33[ds:CONVERT(dl_29 & 0xF<8>, uint8, uint16) + 0x4E9<16>:byte]
l0800_106F:
	return di + 4<i16>
fn0800_1048_exit:


word16 __VPRINTER(word16 cx, word16 dx, word16 bx, selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 10; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _printf
// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: di:[0..15]-_printf
// Trashed: SCZDO ax di si Top
// Preserved: P bp bx cx ds dx es sp ss
__VPRINTER_entry:
l0800_1073:
	bLoc57_1312 = 0x50<8>
l0800_10CD:
	sp_1275 = fp - 0xA0<16>
	wLoc98_1315 = fp - 86<i16>
l0800_10D6:
	di_1042 = wLoc98_1315
l0800_10DA:
	si_101 = wArg04
l0800_10DD:
	al_37 = Mem36[ds:si_101:byte]
	si_101 = si_101 + 1<i16>
	al_1030 = al_37
	branch al_37 == 0<8> l0800_10F3
l0800_10F3:
l0800_10E2:
	branch al_37 == 0x25<8> l0800_10F6
l0800_10F6:
	al_1030 = Mem48[ds:si_101:byte]
	si_101 = si_101 + 1<i16>
	branch al_1030 == 0x25<8> l0800_10E6
l0800_10FF:
	wLoc98_1315 = di_1042
	ch_100 = 0<8> (alias)
	wLoc8E_1320 = 0<16>
	wLoc9A_1321 = 0<16>
	bLoc8F_1322 = 0<8>
	wLoc94_1323 = 0xFFFF<16>
	wLoc92_1324 = 0xFFFF<16>
l0800_1120:
	ax_67 = CONVERT(al_1030, uint8, uint16) (alias)
	bl_71 = al_1030 - 0x20<8>
	dx = ax_67
	bx = CONVERT(bl_71, uint8, uint16) (alias)
	cx = SEQ(ch_100, 0<8>) (alias)
	branch bl_71 >=u 0x60<8> l0800_1175
l0800_112E:
	bl_78 = Mem77[ds:bx + 0x4F9<16>:byte]
	bx = CONVERT(bl_78, uint8, uint16) (alias)
	ah_1219 = 0<8> (alias)
	cx = SEQ(ch_100, 0<8>) (alias)
	branch bx <=u 0x17<16> l0800_113C
l0800_113C:
	bx = bx << 1<16>
	cx = SEQ(ch_100, 0<8>) (alias)
	switch (bx) { l0800_1190 l0800_1178 l0800_11D1 l0800_1184 l0800_11F6 l0800_1200 l0800_1242 l0800_124C l0800_125C l0800_11B7 l0800_1291 l0800_126C l0800_1270 l0800_1274 l0800_1316 l0800_13C8 l0800_1369 l0800_1389 l0800_1533 l0800_1560 l0800_1560 l0800_1560 l0800_11A3 l0800_11AD }
l0800_11AD:
	wLoc9A_1321 = wLoc9A_1321 | 0x20<16>
	ch_100 = 5<8>
l0800_11A3:
	wLoc9A_1321 = wLoc9A_1321 & 0xFFDF<16>
	ch_100 = 5<8>
l0800_1533:
	wArg04 = si_101
	branch (wLoc9A_1321 & 0x20<16>) != 0<16> l0800_154B
l0800_154B:
	es_di_108 = Mem102[ds:wArg02:segptr32]
	wArg02 = wArg02 + 4<16>
l0800_1541:
	di_112 = Mem102[ds:wArg02:word16]
	sp_117 = sp_1275 - 2<i16>
	Mem118[ss:sp_117:word16] = ds
	wArg02 = wArg02 + 2<16>
	es_di_108 = SEQ(Mem118[ss:sp_117:selector], di_112) (alias)
l0800_1551:
	Mem135[es_di_108:word16] = CONVERT(0x50<8> - bLoc57_1312, uint8, uint16)
l0800_1389:
	branch (wLoc9A_1321 & 0x20<16>) != 0<16> l0800_13A7
l0800_13A7:
	es_di_144 = Mem138[ds:wArg02:segptr32]
	es_147 = SLICE(es_di_144, selector, 16) (alias)
	di_149 = SLICE(es_di_144, word16, 0) (alias)
	wArg02 = wArg02 + 4<16>
	v74_1305 = es_di_144 != 0<16>
l0800_139B:
	di_154 = Mem138[ds:wArg02:word16]
	sp_157 = sp_1275 - 2<i16>
	Mem158[ss:sp_157:word16] = ds
	wArg02 = wArg02 + 2<16>
	es_147 = Mem158[ss:sp_157:selector]
	di_149 = di_154
	v74_1305 = di_154 != 0<16>
l0800_13B1:
	branch v74_1305 l0800_13B8
l0800_13B3:
	sp_169 = sp_1275 - 2<i16>
	Mem172[ss:sp_169:word16] = ds
	es_147 = Mem172[ss:sp_169:selector]
	di_149 = 0x4E2<16>
l0800_13B8:
	cx_181 = fn0800_108C(di_149, es_147)
	branch cx_181 <=u wLoc92_1324 l0800_13C5
l0800_13C1:
	cx_181 = wLoc92_1324
l0800_13C5:
l0800_1369:
	sp_200 = sp_1275 - 2<i16>
	Mem201[ss:sp_200:word16] = ss
	wArg02 = wArg02 + 2<16>
	es_147 = Mem201[ss:sp_200:selector]
	sp_1275 = sp_200 + 2<i16>
	di_149 = fp - 0x89<16>
	cx_181 = 1<16>
l0800_13C8:
	cx_217 = wLoc92_1324
	branch wLoc92_1324 >= 0<16> l0800_13DD
l0800_13DA:
	cx_217 = 6<16>
l0800_13DD:
	sp_225 = sp_1275 - 2<i16>
	Mem228[ss:sp_225:word16] = wArg02
	Mem231[ss:sp_225 - 2<i16>:word16] = cx_217
	Mem235[ss:sp_225 - 4<i16>:word16] = fp - 0x89<16>
	Mem238[ss:sp_225 - 6<i16>:word16] = ax_67
	Mem242[ss:sp_225 - 8<i16>:word16] = wLoc9A_1321 & 1<16>
	branch (wLoc9A_1321 & 0x80<16>) == 0<16> l0800_1400
l0800_1400:
	branch (wLoc9A_1321 & 0x100<16>) == 0<16> l0800_140F
l0800_140F:
	wLoc06_1350 = 8<16>
	ax_253 = 6<16>
l0800_1405:
	ax_253 = 8<16>
	wLoc06_1350 = 0xA<16>
l0800_13F6:
	ax_253 = 2<16>
	wLoc06_1350 = 4<16>
l0800_1417:
	Mem262[ss:sp_225 - 10<i16>:word16] = ax_253
	__REALCVT(ds)
	Mem271[ss:sp_225 - 12<i16>:word16] = ss
	wArg02 = wArg02 + wLoc06_1350
	sp_1275 = sp_225 - 10<i16>
	es_di_2032 = SEQ(Mem271[ss:sp_225 - 12<i16>:selector], fp - 0x89<16>) (alias)
l0800_1316:
	sp_280 = sp_1275 - 2<i16>
	Mem281[ss:sp_280:word16] = Mem276[ds:wArg02:word16]
	di_277 = fp - 0x8A<16>
	wArg02 = wArg02 + 2<16>
	branch (wLoc9A_1321 & 0x20<16>) == 0<16> l0800_1342
l0800_1333:
	Mem291[ss:sp_280 - 2<i16>:word16] = Mem284[ds:wArg02 + 2<16>:word16]
	Mem297[ss:sp_280 - 4<i16>:word16] = ss
	es_298 = Mem297[ss:sp_280 - 4<i16>:selector]
	di_304 = fn0800_1048(SEQ(es_298, fp - 0x8A<16>), ds, Mem297[ss:sp_280 - 2<i16>:word16])
	Mem313[es_298:di_304:byte] = 0x3A<8>
	wArg02 = wArg02 + 4<16>
	di_277 = di_304 + 1<i16>
l0800_1342:
	Mem318[ss:sp_280 - 2<i16>:word16] = ss
	es_319 = Mem318[ss:sp_280 - 2<i16>:selector]
	di_327 = fn0800_1048(SEQ(es_319, di_277), ds, Mem318[ss:sp_280:word16])
	Mem335[ds:di_327:byte] = 0<8>
	sp_1275 = sp_280 + 2<16>
	wLoc9A_1321 = wLoc9A_1321 & 0xFFFB<16>
	di_342 = di_327 - (fp - 0x8A<16>)
	dx = wLoc92_1324
	branch wLoc92_1324 > di_342 l0800_1366
l0800_1364:
	dx = di_342
l0800_1366:
	es_di_2032 = SEQ(es_319, fp - 0x8A<16>) (alias)
l0800_1274:
	bx_2036 = SEQ(0x10<8>, al_1030 + 0xE9<8>) (alias)
l0800_1270:
	bx_2029 = SEQ(0xA<8>, bl_78 << 1<8>) (alias)
l0800_126C:
	bx_2036 = SEQ(8<8>, bl_78 << 1<8>) (alias)
l0800_127A:
	bLoc8F_1322 = 0<8>
	bx_2029 = bx_2036 (alias)
l0800_127F:
	bLoc95_1366 = 0<8>
	ax_368 = Mem364[ds:wArg02:word16]
	bx_2019 = bx_2029 (alias)
l0800_1291:
	bLoc95_1366 = 1<8>
	ax_368 = Mem375[ds:wArg02:word16] (alias)
	bx_2019 = SEQ(0xA<8>, bl_78 << 1<8>) (alias)
l0800_12A2:
	di_380 = wArg02 + 1<16>
	bh_449 = SLICE(bx_2019, byte, 8) (alias)
	dx_393 = 0<16>
	di_381 = di_380 + 1<16>
	wArg04 = si_101
	branch (wLoc9A_1321 & 0x10<16>) == 0<16> l0800_12B3
l0800_12AF:
	dx_393 = Mem387[ds:di_380 + 1<16>:word16]
	di_381 = di_380 + 3<16>
l0800_12B3:
	wArg02 = di_381
	branch ax_368 != 0<16> l0800_12F1
l0800_12BE:
	dx = dx_393
	dh_1214 = SLICE(dx_393, byte, 8) (alias)
	branch dx_393 != 0<16> l0800_12F1
l0800_12F1:
	wLoc9A_1321 = wLoc9A_1321 | 4<16>
l0800_12C2:
	bx = bx_2019 (alias)
	branch wLoc92_1324 != 0<16> l0800_12F6
l0800_12F6:
	sp_434 = sp_1275 - 2<i16>
	Mem438[ss:sp_434:word16] = dx_393
	Mem442[ss:sp_434 - 2<i16>:word16] = ax_368
	Mem446[ss:sp_434 - 4<i16>:word16] = fp - 0x89<16>
	Mem456[ss:sp_434 - 6<i16>:word16] = CONVERT(bh_449, int8, int16)
	Mem462[ss:sp_434 - 8<i16>:word16] = CONVERT(bLoc95_1366, uint8, uint16)
	Mem472[ss:sp_434 - 10<i16>:word16] = bx_2019
	__LONGTOA(ds, Mem472[ss:sp_434 - 10<i16>:byte], Mem472[ss:sp_434 - 8<i16>:byte], Mem472[ss:sp_434 - 6<i16>:word16], Mem472[ss:sp_434 - 4<i16>:word16], Mem472[ss:sp_434 - 2<i16>:word32])
	Mem484[ss:sp_434:word16] = ss
	es_485 = Mem484[ss:sp_434:selector]
	sp_1275 = sp_434 + 2<i16>
	dx = wLoc92_1324
	branch wLoc92_1324 > 0<16> l0800_1313
l0800_1313:
	es_di_2026 = SEQ(es_485, fp - 0x89<16>) (alias)
l0800_1310:
	es_di_2032 = SEQ(es_485, fp - 0x89<16>) (alias)
l0800_1427:
	es_147 = SLICE(es_di_2032, selector, 16) (alias)
	di_149 = SLICE(es_di_2032, word16, 0) (alias)
	branch (wLoc9A_1321 & 8<16>) == 0<16> l0800_1449
l0800_142F:
	dx = wLoc94_1323
	es_di_2026 = es_di_2032 (alias)
	branch wLoc94_1323 <= 0<16> l0800_1449
l0800_1437:
	es_147 = SLICE(es_di_2026, selector, 16) (alias)
	di_149 = SLICE(es_di_2026, word16, 0) (alias)
	cx_516 = fn0800_108C(di_149, es_147)
	branch Mem521[es_di_2026:byte] != 0x2D<8> l0800_1441
l0800_1440:
	cx_516 = cx_516 - 1<16>
l0800_1441:
	dx = dx - cx_516
	branch dx <= 0<16> l0800_1449
l0800_1445:
	wLoc8E_1320 = dx
l0800_1449:
	branch bLoc8F_1322 == 0<8> l0800_1465
l0800_1451:
	branch Mem539[es_147:di_149:byte] == 0x2D<8> l0800_1465
l0800_1457:
	di_149 = di_149 - 1<16>
	Mem562[es_147:di_149:byte] = bLoc8F_1322
	v45_553 = wLoc8E_1320 - 1<16>
	wLoc8E_1320 = v45_553 + CONVERT(v45_553 <u 0<16>, bool, word16)
l0800_1465:
	cx_181 = fn0800_108C(di_149, es_147)
l0800_1468:
	wArg04 = si_101
	si_1196 = di_149
	bx_584 = wLoc94_1323
	branch (wLoc9A_1321 & 5<16>) != 5<16> l0800_1494
l0800_147E:
	branch al_1030 != 0x6F<8> l0800_1497
l0800_1497:
	branch al_1030 == 0x78<8> l0800_14A1
l0800_149C:
	branch al_1030 != 0x58<8> l0800_14B5
l0800_14A1:
	v42_605 = wLoc8E_1320 - 2<16>
	wLoc9A_1321 = wLoc9A_1321 | 0x40<16>
	bx_584 = wLoc94_1323 - 2<16>
	wLoc8E_1320 = v42_605
	branch v42_605 >= 0<16> l0800_14B5
l0800_14AF:
	wLoc8E_1320 = 0<16>
l0800_1487:
	branch wLoc8E_1320 > 0<16> l0800_1494
l0800_148E:
	wLoc8E_1320 = 1<16>
l0800_1494:
l0800_14B5:
	cx = cx_181 + wLoc8E_1320
	branch (wLoc9A_1321 & 2<16>) != 0<16> l0800_14CD
l0800_14C1:
l0800_14C9:
	branch bx_584 > cx l0800_14C3
l0800_14C3:
	fn0800_1099(SEQ(ds, di_1042), SEQ(ss, fp - 2<i16>), 0x20<8>, cx, dx, bx_584, out di_1042)
	bx_584 = bx_584 - 1<16>
l0800_14CD:
	branch (wLoc9A_1321 & 0x40<16>) == 0<16> l0800_14E1
l0800_14D5:
	fn0800_1099(SEQ(ds, di_1042), SEQ(ss, fp - 2<i16>), 0x30<8>, cx, dx, bx_584, out di_702)
	fn0800_1099(SEQ(ds, di_702), SEQ(ss, fp - 2<i16>), al_1030, cx, dx, bx_584, out di_1042)
l0800_14E1:
	dx = wLoc8E_1320
	branch wLoc8E_1320 <= 0<16> l0800_1510
l0800_14E9:
	cx_726 = cx - wLoc8E_1320
	bx_584 = bx_584 - wLoc8E_1320
	al_743 = Mem622[es_147:di_149:byte]
	branch al_743 == 0x2D<8> l0800_14FC
l0800_14F4:
	branch al_743 == 0x20<8> l0800_14FC
l0800_14F8:
	branch al_743 != 0x2B<8> l0800_1503
l0800_14FC:
	fn0800_1099(SEQ(ds, di_1042), SEQ(ss, fp - 2<i16>), Mem622[es_147:di_149:byte], cx_726, wLoc8E_1320, bx_584, out di_1042)
	si_1196 = di_149 + 1<i16>
	cx_726 = cx_726 - 1<16>
	bx_584 = bx_584 - 1<16>
l0800_1503:
	cx_782 = wLoc8E_1320
	branch wLoc8E_1320 == 0<16> l0800_150E
l0800_1507:
	fn0800_1099(SEQ(ds, di_1042), SEQ(ss, fp - 2<i16>), 0x30<8>, cx_782, cx_726, bx_584, out di_1042)
	cx_782 = cx_782 - 1<16>
	branch cx_782 != 0<16> l0800_1507
l0800_150E:
	dx = cx_782
	cx = cx_726
l0800_1510:
	branch cx == 0<16> l0800_1523
l0800_1512:
	bx_584 = bx_584 - cx
l0800_1514:
	Mem819[ds:di_1042:byte] = Mem814[es_147:si_1196:byte]
	v47_823 = bLoc57_1312 - 1<8>
	si_1196 = si_1196 + 1<i16>
	di_1042 = di_1042 + 1<16>
	bLoc57_1312 = v47_823
	branch v47_823 > 0<8> l0800_1521
l0800_151E:
	fn0800_10A1(SEQ(ss, fp - 2<i16>), cx, dx, bx_584, di_1042, out di_1042)
l0800_1521:
	cx = cx - 1<16>
	branch cx != 0<16> l0800_1514
l0800_1523:
	bx = bx_584
	branch bx_584 <= 0<16> l0800_1530
l0800_1527:
	cx = bx_584
l0800_1529:
	fn0800_1099(SEQ(ds, di_1042), SEQ(ss, fp - 2<i16>), 0x20<8>, cx, dx, bx_584, out di_1042)
	cx = cx - 1<16>
	branch cx != 0<16> l0800_1529
l0800_1530:
l0800_12C9:
	cx = wLoc94_1323
	branch wLoc94_1323 == 0<16> l0800_12EE
l0800_12D3:
	branch wLoc94_1323 == 0xFFFF<16> l0800_12EE
l0800_12D8:
	branch (wLoc9A_1321 & 8<16>) == 0<16> l0800_12E5
l0800_12E5:
	ah_dl_2022 = 0x20<16> (alias)
l0800_12E1:
	ah_dl_2022 = 0x30<16> (alias)
l0800_12E7:
	dl_876 = SLICE(ah_dl_2022, byte, 0) (alias)
	dx = SEQ(dh_1214, dl_876) (alias)
	fn0800_1099(SEQ(ds, di_1042), SEQ(ss, fp - 2<i16>), SLICE(ah_dl_2022, byte, 0), cx, dx, bx_2019, out di_1042)
	cx = cx - 1<16>
	ah_dl_2022 = CONVERT(dl_876, uint8, uint16) (alias)
	branch cx != 0<16> l0800_12E7
l0800_12EE:
l0800_11B7:
	branch ch_100 >u 0<8> l0800_1200
l0800_11BC:
	branch (wLoc9A_1321 & 2<16>) != 0<16> l0800_11E5
l0800_11C4:
	wLoc9A_1321 = wLoc9A_1321 | 8<16>
	ch_100 = 1<8>
l0800_125C:
	wLoc9A_1321 = wLoc9A_1321 & 0xFFEF<16> | 0x80<16>
	ch_100 = 5<8>
l0800_124C:
	wLoc9A_1321 = (wLoc9A_1321 | 0x100<16>) & 0xFFEF<16>
	ch_100 = 5<8>
l0800_1242:
	wLoc9A_1321 = wLoc9A_1321 | 0x10<16>
	ch_100 = 5<8>
l0800_1200:
	dx = bx
	ax_940 = CONVERT(al_1030 - 0x30<8>, int8, int16)
	ah_1219 = 0<8> (alias)
	branch ch_100 >u 2<8> l0800_1224
l0800_1224:
	cx = SEQ(ch_100, 0<8>) (alias)
	branch ch_100 != 4<8> l0800_11CE
l0800_1229:
	wLoc92_1324 = ax_940
	branch wLoc92_1324 < 0<16> l0800_11E5
l0800_1231:
	wLoc92_1324 = ax_940 + wLoc92_1324 * 0xA<16>
l0800_1209:
	ch_100 = 2<8>
	wLoc94_1323 = ax_940
	branch wLoc94_1323 < 0<16> l0800_11E5
l0800_1213:
	wLoc94_1323 = ax_940 + wLoc94_1323 * 0xA<16>
l0800_11F6:
	cx = SEQ(ch_100, 0<8>) (alias)
	branch ch_100 >=u 4<8> l0800_11CE
l0800_11FB:
	ch_100 = 4<8>
l0800_1184:
	cx = SEQ(ch_100, 0<8>) (alias)
	branch ch_100 >u 0<8> l0800_1175
l0800_1189:
	wLoc9A_1321 = wLoc9A_1321 | 2<16>
l0800_11D1:
	ax_995 = Mem77[ds:wArg02:word16]
	ah_1219 = SLICE(ax_995, byte, 8) (alias)
	wArg02 = wArg02 + 2<16>
	branch ch_100 >=u 2<8> l0800_11E8
l0800_11E8:
	cx = SEQ(ch_100, 0<8>) (alias)
	branch ch_100 != 4<8> l0800_11CE
l0800_11CE:
l0800_11ED:
	wLoc92_1324 = ax_995
	ch_100 = ch_100 + 1<8>
l0800_11DF:
	wLoc94_1323 = ax_995
	ch_100 = 3<8>
l0800_11E5:
l0800_1178:
	cx = SEQ(ch_100, 0<8>) (alias)
	branch ch_100 >u 0<8> l0800_1175
l0800_117D:
	wLoc9A_1321 = wLoc9A_1321 | 1<16>
l0800_1190:
	cx = SEQ(ch_100, 0<8>) (alias)
	branch ch_100 >u 0<8> l0800_1175
l0800_1175:
	ah_1219 = 0<8>
l0800_1195:
	branch bLoc8F_1322 == 0x2B<8> l0800_11A0
l0800_119C:
	bLoc8F_1322 = al_1030
l0800_11A0:
l0800_111F:
	al_1030 = Mem1027[ds:si_101:byte]
	si_101 = si_101 + 1<i16>
l0800_1139:
l0800_1560:
	si_1041 = si_101
	ax_1044 = SEQ(ah_1219, 0x25<8>) (alias)
l0800_156A:
	ax_1227 = CONVERT(al_1061, uint8, uint16) (alias)
	fn0800_1099(SEQ(ds, di_1042), SEQ(ss, fp - 2<i16>), SLICE(ax_1044, byte, 0), cx, dx, bx, out di_1042)
	al_1061 = Mem1038[ds:si_1041:byte]
	si_1041 = si_1041 + 1<i16>
	ax_1044 = ax_1227
	branch al_1061 != 0<8> l0800_156A
l0800_1572:
	branch bLoc57_1312 >= 0x50<8> l0800_157B
l0800_1578:
	fn0800_10A1(SEQ(ss, fp - 2<i16>), cx, dx, bx, di_1042, out di_2039)
l0800_157B:
	sp_1098 = sp_1275 + 2<i16>
	branch true l0800_1589
l0800_1589:
l0800_1582:
l0800_158E:
	return Mem1070[ss:sp_1098:word16]
__VPRINTER_exit:
l0800_10E6:
	Mem1117[ds:di_1042:byte] = al_1030
	v18_1121 = bLoc57_1312 - 1<8>
	di_1042 = di_1042 + 1<16>
	bLoc57_1312 = v18_1121
	branch v18_1121 > 0<8> l0800_10DD
l0800_10EE:
	fn0800_10A1(SEQ(ss, fp - 2<i16>), cx, dx, bx, di_1042, out di_1042)


word16 fn0800_108C(word16 di, selector es)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __VPRINTER
// MayUse:  di:[0..15] es:[0..15]
// LiveOut: cx:[0..15]-__VPRINTER
// Trashed: SCZO al cx Top
// Preserved: di sp
fn0800_108C_entry:
l0800_108C:
	cx_13 = 0xFFFF<16>
l0800_1092:
	branch cx_13 == 0<16> l0800_1094
l0800_1092_1:
	di = di_46 + 1<i16>
	cx_13 = cx_13 - 1<16>
	di_46 = di
	branch Mem7[es:di_46:byte] == 0<8> l0800_1092
l0800_1094:
	return -cx_13
fn0800_108C_exit:


byte fn0800_1099(segptr32 ds_di, segptr32 ss_bp, byte al, word16 cx, word16 dx, word16 bx, ptr16 & diOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __VPRINTER
// MayUse:  ax:[0..7] bx:[0..15] cx:[0..15] dx:[0..15] Sequence ds:di:[0..31] Sequence ss:bp:[0..31]
// LiveOut: ax:[8..15]-__VPRINTER di:[0..15]-__VPRINTER
// Trashed: SZO ax di Top
// Preserved: C bp sp ss
fn0800_1099_entry:
	al = SLICE(ax, byte, 0)
	di = SLICE(ds_di, word16, 0)
l0800_1099:
	Mem7[ds_di:byte] = al
	v10_11 = Mem7[ss_bp - 85<i16>:byte] - 1<8>
	Mem12[ss_bp - 85<i16>:byte] = v10_11
	branch v10_11 <= 0<8> l0800_10CC_in_fn0800_1099
l0800_10CC_in_fn0800_1099:
	diOut = di + 1<16>
	return SLICE(ax, byte, 8)
l0800_109F_thunk_fn0800_10A1:
	fn0800_10A1(ss_bp, cx, dx, bx, di + 1<16>, out di_19)
	diOut = di_19
	return 0<8>
fn0800_1099_exit:


byte fn0800_10A1(segptr32 ss_bp, word16 cx, word16 dx, word16 bx, word16 di, ptr16 & diOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __VPRINTER
//      fn0800_1099
// MayUse:  bx:[0..15] cx:[0..15] di:[0..15] dx:[0..15] Sequence ss:bp:[0..31]
// LiveOut: ax:[8..15]-fn0800_1099 di:[0..15]-__VPRINTER
// Trashed: SCZO ax di Top
// Preserved: bx cx dx es sp
fn0800_10A1_entry:
	bp = SLICE(ss_bp, word16, 0)
l0800_10A1:
	di_20 = di - (bp - 84<i16>)
	call 0x800<16>:Mem29[ss_bp + 10<i32>:word16] (retsize: 2;)
		uses: ax:bp - 84<i16>,bx:bx,cx:cx,dx:dx,Mem:Mem29,Stack +0002:Mem26[ss_bp + 8<i32>:word16],Stack +0004:di_20,Stack +0006:bp - 84<i16>,Stack +000A:dx,Stack +000C:cx,Stack +000E:bx
		defs: ax:ax_34
	branch ax_34 != 0<16> l0800_10BE
l0800_10B9:
	Mem42[ss_bp - 2<i32>:word16] = 1<16>
l0800_10BE:
	Mem45[ss_bp - 85<i32>:byte] = 0x50<8>
	Mem48[ss_bp - 88<i32>:word16] = Mem45[ss_bp - 88<i32>:word16] + di_20
l0800_10CC:
	diOut = bp - 84<i16>
	return SLICE(ax_34, byte, 8)
fn0800_10A1_exit:


void fn0800_1596(selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_165F
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx Top
// Preserved: bp di si sp
fn0800_1596_entry:
l0800_1596:
	branch Mem14[ds:0x62A<16>:word16] == 0<16> l0800_15C1
l0800_15C1:
	Mem19[ds:0x62A<16>:word16] = wArg02
	Mem20[ds:wArg02 + 4<i16>:word16] = wArg02
	Mem21[ds:wArg02 + 6<i16>:word16] = wArg02
l0800_15A5:
	di_23 = Mem14[ds:Mem14[ds:0x62A<16>:word16] + 6<i16>:word16]
	Mem25[ds:Mem14[ds:0x62A<16>:word16] + 6<i16>:word16] = wArg02
	Mem26[ds:di_23 + 4<i16>:word16] = wArg02
	Mem27[ds:wArg02 + 6<i16>:word16] = di_23
	Mem29[ds:wArg02 + 4<i16>:word16] = Mem27[ds:0x62A<16>:word16]
l0800_15CB:
	return
fn0800_1596_exit:


void fn0800_15CF(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_165F
// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx Top
// Preserved: bp di si sp
fn0800_15CF_entry:
l0800_15CF:
	Mem21[ds:wArg02:word16] = Mem15[ds:wArg02:word16] + Mem15[ds:wArg04:word16]
	branch Mem21[ds:0x628<16>:word16] != wArg04 l0800_15EE
l0800_15EE:
	Mem30[ds:Mem21[ds:wArg04:word16] + wArg04 + 2<i16>:word16] = wArg02
l0800_15E8:
	Mem31[ds:0x628<16>:word16] = wArg02
l0800_15FB:
	___pull_free_block(ds, wArg04)
	return
fn0800_15CF_exit:


void fn0800_1606(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _free
// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZOP ax bx cx dx Top
// Preserved: si sp
fn0800_1606_entry:
l0800_1606:
	branch Mem7[ds:0x62C<16>:word16] != Mem7[ds:0x628<16>:word16] l0800_1622
l0800_1622:
	si_13 = Mem7[ds:Mem7[ds:0x628<16>:word16] + 2<i16>:word16]
	branch (Mem7[ds:si_13:word16] & 1<16>) != 0<16> l0800_1651
l0800_1651:
	_brk(ds, Mem7[ds:0x628<16>:word16])
	Mem30[ds:0x628<16>:word16] = si_13
l0800_162F:
	___pull_free_block(ds, si_13)
	branch si_13 != Mem32[ds:0x62C<16>:word16] l0800_1644
l0800_1644:
	Mem44[ds:0x628<16>:word16] = Mem32[ds:si_13 + 2<i16>:word16]
l0800_163A:
	Mem49[ds:0x628<16>:word16] = 0<16>
	Mem50[ds:0x62C<16>:word16] = 0<16>
l0800_164A:
	_brk(ds, si_13)
l0800_1610:
	_brk(ds, Mem7[ds:0x62C<16>:word16])
	Mem82[ds:0x628<16>:word16] = 0<16>
	Mem83[ds:0x62C<16>:word16] = 0<16>
l0800_165D:
	return
fn0800_1606_exit:


void fn0800_165F(selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _free
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZOP ax bx cx Top
// Preserved: bp di si sp
fn0800_165F_entry:
l0800_165F:
	Mem19[ds:wArg02:word16] = Mem15[ds:wArg02:word16] - 1<16>
	si_16 = wArg02
	ax_21 = Mem19[ds:wArg02:word16] + wArg02
	di_23 = Mem22[ds:wArg02 + 2<i16>:word16]
	branch (Mem22[ds:di_23:word16] & 1<16>) != 0<16> l0800_1690
l0800_167C:
	branch wArg02 == Mem22[ds:0x62C<16>:word16] l0800_1690
l0800_1690:
	fn0800_1596(ds, wArg02)
l0800_1682:
	Mem46[ds:di_23:word16] = Mem22[ds:di_23:word16] + Mem22[ds:wArg02:word16]
	Mem49[ds:ax_21 + 2<i16>:word16] = di_23
	si_16 = di_23
l0800_1695:
	branch (Mem54[ds:ax_21:word16] & 1<16>) != 0<16> l0800_16A7
l0800_169E:
	fn0800_15CF(ds, si_16, ax_21)
l0800_16A7:
	return
fn0800_165F_exit:


void _free(selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _setvbuf
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: P bp si sp
_free_entry:
l0800_16AD:
	branch wArg02 != 0<16> l0800_16BA
l0800_16BA:
	branch wArg02 + 0xFFFC<16> != Mem11[ds:0x628<16>:word16] l0800_16CC
l0800_16CC:
	fn0800_165F(ds, wArg02 + 0xFFFC<16>)
l0800_16C7:
	fn0800_1606(ds)
l0800_16B8:
l0800_16D1:
	return
_free_exit:


word16 _scanf(word16 di, selector es, selector ds, word16 wArg02, ptr16 & bxOut, ptr16 & bpOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _main
// MayUse:  di:[0..15] ds:[0..15] es:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: bp:[0..15]-_main bx:[0..15]-_main dx:[0..15]-_main sp:[0..15]-_main
// Trashed: SCZDOP ax bp bx cx di dx es si sp Top
// Preserved:
_scanf_entry:
l0800_16D4:
	dx_34 = __scanner(di, es, ds, 0x7F2<16>, 0x1D65<16>, 0x342<16>, wArg02, out bx_33, out bp_28)
l0800_16F1:
	bp_42 = Mem23[ss:bp_28:word16]
	bxOut = bx_33
	bpOut = bp_42
	return dx_34
_scanf_exit:


word16 __scanner(word16 di, selector es, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & bxOut, ptr16 & bpOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _scanf
// MayUse:  di:[0..15] ds:[0..15] es:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: bp:[0..15]-_scanf bx:[0..15]-_scanf dx:[0..15]-_scanf
// Trashed: SCZDOP ax bp bx cx di dx es si Top
// Preserved: sp ss
__scanner_entry:
l0800_16F3:
	wLoc28_1088 = 0<16>
l0800_1721:
l0800_1723:
	si_26 = wArg08
l0800_1726:
	al_30 = Mem29[ds:si_26:byte]
	si_26 = si_26 + 1<i16>
	al_32 = al_30
	branch al_30 == 0<8> l0800_1788
l0800_1788:
l0800_1788_thunk_fn0800_1AEB:
	bp_41 = fn0800_1AEB(SEQ(ss, fp - 2<i16>))
	bxOut = bx
	bpOut = bp_41
	return dx
l0800_172B:
	branch al_30 == 0x25<8> l0800_178B
l0800_178B:
	wLoc24_1091 = 0xFFFF<16>
	bLoc2B_1092 = 0<8>
l0800_1794:
	si_26 = si_26 + 1<i16>
	ax_59 = CONVERT(Mem56[ds:si_26:byte], int8, int16)
	dh_1467 = SLICE(dx, byte, 8) (alias)
	wArg08 = si_26
	di = ax_59
	branch ax_59 < 0<16> l0800_17E6
l0800_179E:
	bl_73 = Mem62[ds:ax_59 + 0x55A<16>:byte]
	bx_75 = CONVERT(bl_73, uint8, uint16) (alias)
	al_32 = bl_73 (alias)
	branch bx_75 <=u 0x15<16> l0800_17AE
l0800_17AE:
	bx = bx_75 << 1<16>
	switch (bx_75) { l0800_17E6 l0800_17E6 l0800_17E6 l0800_17E3 l0800_17E9 l0800_17EF l0800_19C8 l0800_1837 l0800_1837 l0800_1841 l0800_1908 l0800_1803 l0800_180F l0800_1809 l0800_1832 l0800_196C l0800_1A06 l0800_1824 l0800_183C l0800_1895 l0800_1816 l0800_181D }
l0800_181D:
	bLoc2B_1092 = bLoc2B_1092 | 0x20<8>
l0800_1816:
	bLoc2B_1092 = bLoc2B_1092 & 0xDF<8>
l0800_1895:
	fn0800_1898(SEQ(ss, fp - 2<i16>), ds, out bp_95)
l0800_1895_thunk_fn0800_1898:
	bxOut = fn0800_1898(SEQ(ss, bp_95), ds, out bp_107)
	bpOut = bp_107
	return dx
l0800_183C:
	si_117 = 0x10<16>
l0800_1824:
	ax_118 = wLoc28_1088
	dx = 0<16>
	branch (bLoc2B_1092 & 1<8>) == 0<8> l0800_187E
l0800_182F:
l0800_1A06:
	di_132 = fp - 34<i16>
	cx_133 = 0x10<16>
l0800_1A11:
	branch cx_133 == 0<16> l0800_1A13
l0800_1A13:
	v47_142 = bLoc2B_1092 & 0xEF<8>
	al_1008 = Mem137[ds:si_26:byte]
	si_1017 = si_26 + 1<i16>
	bLoc2B_1099 = v47_142
	branch al_1008 != 0x5E<8> l0800_1A21
l0800_1A1C:
	bLoc2B_1099 = v47_142 | 0x10<8>
	al_1008 = Mem148[ds:si_26 + 1<i16>:byte]
	si_1017 = si_26 + 2<i16>
l0800_1A21:
l0800_1A23:
	ax_158 = CONVERT(al_1008, uint8, uint16) (alias)
	ch_1039 = 1<8> << (al_1008 & 7<8>)
	Mem171[ss:fp - 34<i16> + (ax_158 >>u 3<8>):byte] = Mem169[ss:fp - 34<i16> + (ax_158 >>u 3<8>):byte] | ch_1039
	dl_156 = al_1008
	di_1031 = ax_158 >>u 3<8>
l0800_1A35:
	al_1008 = Mem177[ds:si_1017:byte]
	si_1017 = si_1017 + 1<i16>
	dx_1474 = SEQ(dh_1467, dl_156) (alias)
	branch al_1008 == 0<8> l0800_1A60
l0800_1A60:
l0800_1A60_thunk_fn0800_1AFF:
	bp_186 = fn0800_1AFF(SEQ(ss, fp - 2<i16>))
	bxOut = bx_75 << 1<16>
	bpOut = bp_186
	return dx_1474
l0800_1A3A:
	dx = SEQ(dh_1467, dl_156) (alias)
	branch al_1008 == 0x5D<8> l0800_1A63
l0800_1A63:
	v65_194 = wLoc24_1606 & 0x7FFF<16>
	wArg08 = si_1017
	si_197 = v65_194
	es_di_1596 = SEQ(ss, di_1031) (alias)
	branch (bLoc2B_1099 & 1<8>) != 0<8> l0800_1A77
l0800_1A74:
	es_di_1596 = fn0800_1708(SEQ(ss, fp - 2<i16>), ds) (alias)
l0800_1A77:
	di = SLICE(es_di_1607, word16, 0) (alias)
	es = SLICE(es_di_1607, selector, 16) (alias)
	si_211 = si_197 - 1<16>
	branch si_211 < 0<16> l0800_1ACA
l0800_1A7A:
	call 0x800<16>:wArg02 (retsize: 2;)
		uses: bx:bx_232,cx:wArg06,dx:dx_233,Mem:Mem226,Stack +0002:wArg06,Stack +0004:es_222,Stack +0008:wArg02,Stack +000A:wArg04,Stack +000C:wArg06,Stack +000E:si_179
		defs: ax:ax_230,bx:bx_232,dx:dx_233
	wLoc28_1088 = wLoc28_1088 + 1<16>
	wLoc04 = wArg06
	branch ax_230 < 0<16> l0800_1AD9
l0800_1AD9:
	branch si_211 + 1<16> >= v65_194 l0800_1ADD_thunk_fn0800_1AEB
l0800_1ADD_thunk_fn0800_1AEB:
	bp_251 = fn0800_1AEB(SEQ(ss, fp - 2<i16>))
	bxOut = bx_232
	bpOut = bp_251
	return dx_233
l0800_1ADF:
	branch (bLoc2B_1099 & 1<8>) != 0<8> l0800_1AE3_thunk_fn0800_1AEB
l0800_1AE3_thunk_fn0800_1AEB:
	bp_266 = fn0800_1AEB(SEQ(ss, fp - 2<i16>))
	bxOut = bx_232
	bpOut = bp_266
	return dx_233
l0800_1AE5:
	Mem276[es_di_1607:byte] = 0<8>
l0800_1AE8_thunk_fn0800_1AEB:
	bp_283 = fn0800_1AEB(SEQ(ss, fp - 2<i16>))
	bxOut = bx_232
	bpOut = bp_283
	return dx_233
l0800_1A8A:
	si_197 = si_211
	bx = ax_230 >>u 3<8>
	al_330 = SLICE(ax_230, byte, 0) (alias)
	branch (Mem226[ss:fp - 34<i16> + (ax_230 >>u 3<8>):byte] & 1<8> << (SLICE(ax_230, byte, 0) & 7<8>)) == 0<8> l0800_1AA7
l0800_1AA7:
	branch (bLoc2B_1099 & 0x10<8>) == 0<8> l0800_1AB6
l0800_1A9F:
	branch (bLoc2B_1099 & 0x10<8>) == 0<8> l0800_1AAD
l0800_1AAD:
	es_di_1596 = es_di_1607 (alias)
	dx = dx_233
	es_di_1607 = es_di_1596
	branch (bLoc2B_1099 & 1<8>) != 0<8> l0800_1A77
l0800_1AB3:
	Mem333[es_di_1607:byte] = al_330
	es_di_1596 = SEQ(es, di + 1<i16>) (alias)
	dx = dx_233
l0800_1AA5:
l0800_1AB6:
	call 0x800<16>:wArg04 (retsize: 2;)
		uses: bx:bx_353,cx:cx_359,dx:dx_354,Mem:Mem346,Stack +0002:ax_230,Stack +0004:wArg06,Stack +0006:es_222,Stack +000A:wArg02,Stack +000C:wArg04,Stack +000E:wArg06,Stack +0010:si_179
		defs: bx:bx_353,dx:dx_354,sp:sp_350
	wLoc04 = wArg06
	cx_359 = Mem346[ss:sp_350 + 2<i16>:word16]
	es = Mem346[ss:sp_350 + 4<i16>:selector]
	dx = dx_354
	dx = dx_354
	bx = bx_353
	bx = bx_353
	branch si_211 + 1<16> >= v65_194 l0800_1AD3
l0800_1ACA:
	branch (bLoc2B_1099 & 1<8>) != 0<8> l0800_1AD6
l0800_1AD0:
l0800_1AD3:
	Mem383[es:di:byte] = 0<8>
	di = di + 1<i16>
l0800_1AD6:
l0800_1A3E:
	branch al_1008 != 0x2D<8> l0800_1A23
l0800_1A42:
	branch dl_156 >u Mem177[ds:si_1017:byte] l0800_1A23
l0800_1A46:
	branch Mem177[ds:si_1017:byte] == 0x5D<8> l0800_1A23
l0800_1A4B:
	si_1017 = si_1017 + 1<i16>
	al_394 = Mem177[ds:si_1017:byte] - dl_156
	branch al_394 == 0<8> l0800_1A35
l0800_1A50:
	dl_156 = dl_156 + al_394
l0800_1A52:
	ch_1039 = __rol<byte,byte>(ch_1039, 1<8>)
	di_1031 = di_1031 + CONVERT((ch_1039 & 0x80<8>) != 0<8>, bool, word16)
	Mem408[ss:fp - 34<i16> + di_1031:byte] = Mem406[ss:fp - 34<i16> + di_1031:byte] | ch_1039
	al_394 = al_394 - 1<8>
	branch al_394 != 0<8> l0800_1A52
l0800_1A5E:
l0800_1A11_1:
	Mem418[ss:di_132:word16] = 0<16>
	di_132 = di_132 + 2<i16>
	cx_133 = cx_133 - 1<16>
l0800_196C:
	fn0800_196F(SEQ(ss, fp - 2<i16>), ds, out bp_423)
l0800_196C_thunk_fn0800_196F:
	bxOut = fn0800_196F(SEQ(ss, bp_423), ds, out bp_435)
	bpOut = bp_435
	return dx
l0800_1832:
	si_117 = 8<16>
l0800_1809:
	bLoc2B_1092 = bLoc2B_1092 | 4<8>
l0800_180F:
	bLoc2B_1092 = bLoc2B_1092 | 2<8>
l0800_1803:
	bLoc2B_1092 = bLoc2B_1092 | 8<8>
l0800_1908:
	__scantod(ds)
	wLoc04 = fp - 40<i16>
	branch wLoc26 <= 0<16> l0800_1964
l0800_1964:
	__scanpop(ds)
	branch wLoc26 < 0<16> l0800_1905
l0800_1905:
l0800_1905_thunk_fn0800_1AEB:
	bp_489 = fn0800_1AEB(SEQ(ss, fp - 2<i16>))
	bxOut = bx_75 << 1<16>
	bpOut = bp_489
	return dx
l0800_1969:
l0800_1969_thunk_fn0800_1AFF:
	bp_500 = fn0800_1AFF(SEQ(ss, fp - 2<i16>))
	bxOut = bx_75 << 1<16>
	bpOut = bp_500
	return dx
l0800_192C:
	branch (bLoc2B_1092 & 1<8>) == 0<8> l0800_1935
l0800_1935:
	es_di_1605 = fn0800_1708(SEQ(ss, fp - 2<i16>), ds)
	di = SLICE(es_di_1605, word16, 0) (alias)
	es = SLICE(es_di_1605, selector, 16) (alias)
	branch (bLoc2B_1092 & 4<8>) == 0<8> l0800_1946
l0800_1946:
	branch (bLoc2B_1092 & 8<8>) == 0<8> l0800_1951
l0800_1951:
l0800_194C:
l0800_1941:
l0800_1953:
	__scanrslt(ds)
	wLoc04 = di
l0800_1932:
l0800_195E:
	__scanpop(ds)
l0800_1841:
	si_117 = 0<16>
l0800_1837:
	si_117 = 0xA<16>
l0800_1844:
	branch (ax_59 & 0x20<16>) != 0<16> l0800_184E
l0800_184A:
	bLoc2B_1092 = bLoc2B_1092 | 4<8>
l0800_184E:
	wLoc04 = fp - 40<i16>
	ax_118 = __scantol(ds, wArg02, wArg04, wArg06, si_117, wLoc24_1606 & 0x7FFF<16>, fp - 40<i16>, fp - 38<i16>, out dx, out bx, out di, out es)
	branch wLoc26 <= 0<16> l0800_188D
l0800_188D:
	branch wLoc26 < 0<16> l0800_1892
l0800_1892:
l0800_1892_thunk_fn0800_1AEB:
	bp_616 = fn0800_1AEB(SEQ(ss, fp - 2<i16>))
	bxOut = bx
	bpOut = bp_616
	return dx
l0800_188F:
l0800_188F_thunk_fn0800_1AFF:
	bp_627 = fn0800_1AFF(SEQ(ss, fp - 2<i16>))
	bxOut = bx
	bpOut = bp_627
	return dx
l0800_1875:
	branch (bLoc2B_1092 & 1<8>) != 0<8> l0800_188A
l0800_187B:
l0800_187E:
	es_di_1595 = fn0800_1708(SEQ(ss, fp - 2<i16>), ds)
	Mem651[es_di_1595:word16] = ax_118
	di_643 = SLICE(es_di_1595, word16, 0) (alias)
	es = SLICE(es_di_1595, selector, 16) (alias)
	di = di_643 + 2<i16>
	branch (bLoc2B_1092 & 4<8>) == 0<8> l0800_188A
l0800_1888:
	Mem661[es_di_1595 + 2<i32>:word16] = dx
	dx = ax_118
	di = di_643 + 4<i16>
l0800_188A:
l0800_19C8:
	branch (bLoc2B_1092 & 1<8>) != 0<8> l0800_19D1
l0800_19CE:
	es_di_1604 = fn0800_1708(SEQ(ss, fp - 2<i16>), ds)
	di = SLICE(es_di_1604, word16, 0) (alias)
	es = SLICE(es_di_1604, selector, 16) (alias)
l0800_19D1:
	si_1046 = wLoc24_1606
	branch wLoc24_1606 >= 0<16> l0800_19DB
l0800_19D8:
	si_1046 = 1<16>
l0800_19DB:
	branch wLoc24_1606 == 0<16> l0800_19F7
l0800_19DD:
	call 0x800<16>:wArg02 (retsize: 2;)
		uses: bx:bx_707,cx:wArg06,dx:dx_708,Mem:Mem700,Stack +0002:wArg06,Stack +0004:es_1044,Stack +0008:wArg02,Stack +000A:wArg04,Stack +000C:wArg06,Stack +000E:si_58
		defs: ax:ax_705,bx:bx_707,dx:dx_708
	wLoc28_1088 = wLoc28_1088 + 1<16>
	wLoc04 = wArg06
	al_719 = SLICE(ax_705, byte, 0) (alias)
	branch (bLoc2B_1092 & 1<8>) != 0<8> l0800_19F0
l0800_19EF:
	Mem720[es:di:byte] = al_719
	di = di + 1<i16>
l0800_19F0:
	branch ax_705 < 0<16> l0800_1A03
l0800_1A03:
l0800_1A03_thunk_fn0800_1AEB:
	bp_733 = fn0800_1AEB(SEQ(ss, fp - 2<i16>))
	bxOut = bx_707
	bpOut = bp_733
	return dx_708
l0800_19F4:
	si_1046 = si_1046 - 1<16>
	dx = dx_708
	bx = bx_707
	branch si_1046 > 0<16> l0800_19DD
l0800_19F7:
	branch (bLoc2B_1092 & 1<8>) != 0<8> l0800_1A00
l0800_19FD:
l0800_1A00:
l0800_17EF:
	wLoc24_1091 = ax_59 - 0x30<16>
	wLoc24_1606 = wLoc24_1091
	branch wLoc24_1606 < 0<16> l0800_1794
l0800_17F9:
	dx = SLICE(wLoc24_1606 *u32 0xA<16>, word16, 16) (alias)
	wLoc24_1091 = ax_59 - 0x30<16> + wLoc24_1606 *u 0xA<16>
l0800_17E9:
	bLoc2B_1092 = bLoc2B_1092 | 1<8>
l0800_17E3:
l0800_17E6:
l0800_17E6_thunk_fn0800_1AEB:
	bp_784 = fn0800_1AEB(SEQ(ss, fp - 2<i16>))
	bxOut = bx
	bpOut = bp_784
	return dx
l0800_17AB:
l0800_17AB_thunk_fn0800_1AEB:
	bp_795 = fn0800_1AEB(SEQ(ss, fp - 2<i16>))
	bxOut = bx_75
	bpOut = bp_795
	return dx
l0800_172F:
	call 0x800<16>:wArg02 (retsize: 2;)
		uses: ax:di_807,bx:bx_833,cx:cx_837,dx:dx_834,Mem:Mem822,Stack +0000:wLoc04_1576,Stack +0002:wArg06,Stack +0006:wArg02,Stack +0008:wArg04,Stack +000A:wArg06,Stack +000C:wArg08_1559
		defs: ax:ax_831,bx:bx_833,dx:dx_834,sp:sp_830
	ax_806 = CONVERT(al_32, int8, int16)
	wLoc28_1088 = wLoc28_1088 + 1<16>
	cx_837 = Mem822[ss:sp_830:word16]
	sp_838 = sp_830 + 2<i16>
	ax_839 = ax_831
	branch ax_831 < 0<16> l0800_1764
l0800_173F:
	di = ax_806
	branch ax_806 < 0<16> l0800_1775
l0800_1743:
	branch Mem822[ds:ax_806 + 0x55A<16>:byte] != 1<8> l0800_1775
l0800_1775:
	bx = bx_1357
	dx = dx_1447
	branch ax_831 == ax_806 l0800_1726
l0800_1779:
	Mem863[ss:sp_830:word16] = wArg06
	Mem865[ss:sp_830 - 2<i16>:word16] = ax_831
	call 0x800<16>:wArg04 (retsize: 2;)
		uses: bx:bx_872,cx:wArg06,dx:dx_873,Mem:Mem865
		defs: bx:bx_872,dx:dx_873
l0800_1785_thunk_fn0800_1AEB:
	bp_885 = fn0800_1AEB(SEQ(ss, fp - 2<i16>))
	bxOut = bx_872
	bpOut = bp_885
	return dx_873
l0800_174A:
	branch SLICE(ax_839, byte, 0) < 0<8> l0800_1767
l0800_174F:
	branch Mem908[ds:ax_839 + 0x55A<16>:byte] != 1<8> l0800_1767
l0800_1767:
	sp_919 = sp_838 - 2<i16>
	Mem920[ss:sp_919:word16] = wArg06
	Mem923[ss:sp_919 - 2<i16>:word16] = ax_839
	call 0x800<16>:wArg04 (retsize: 2;)
		uses: bx:bx_935,cx:cx_941,dx:dx_936,Mem:Mem923
		defs: bx:bx_935,dx:dx_936,sp:sp_932
	cx_941 = Mem923[ss:sp_932 + 2<i16>:word16]
	wLoc28_1088 = wLoc28_1088 - 1<16>
	bx = bx_935
	dx = dx_936
l0800_1756:
	Mem951[ss:sp_838 - 2<i16>:word16] = wArg06
	call 0x800<16>:wArg02 (retsize: 2;)
		uses: bx:bx_955,cx:cx_959,dx:dx_956,Mem:Mem951
		defs: ax:ax_953,bx:bx_955,dx:dx_956,sp:sp_952
	wLoc28_1088 = wLoc28_1088 + 1<16>
	cx_959 = Mem951[ss:sp_952:word16]
	sp_838 = sp_952 + 2<i16>
	ax_839 = ax_953
	branch ax_953 > 0<16> l0800_174A
l0800_1764:
l0800_1764_thunk_fn0800_1AEB:
	bp_970 = fn0800_1AEB(SEQ(ss, fp - 2<i16>))
	bxOut = bx_1357
	bpOut = bp_970
	return dx_1447
__scanner_exit:


ptr32 fn0800_1708(segptr32 ss_bp, selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __scanner
// MayUse:  ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: Sequence es:di:[0..31]-__scanner
// Trashed: SCZOP di es Top
// Preserved: sp
fn0800_1708_entry:
l0800_1708:
	di_7 = Mem0[ss_bp + 12<i32>:word16]
	branch (Mem0[ss_bp - 41<i32>:byte] & 0x20<8>) == 0<8> l0800_1718
l0800_1718:
	di_13 = Mem0[ds:di_7:word16]
	Mem19[ss_bp + 12<i32>:word16] = Mem15[ss_bp + 12<i32>:word16] + 2<16>
	return SEQ(ds, di_13)
l0800_1711:
	es_di_21 = Mem0[ds:di_7:segptr32]
	Mem23[ss_bp + 12<i32>:word16] = Mem0[ss_bp + 12<i32>:word16] + 4<16>
	return es_di_21
fn0800_1708_exit:


word16 fn0800_1898(segptr32 ss_bp, selector ds, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __scanner
// MayUse:  ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: bp:[0..15]-__scanner bx:[0..15]-__scanner
// Trashed: SCZO ax bp bx cx di es si Top
// Preserved: sp ss
fn0800_1898_entry:
l0800_1898:
l0800_1898_thunk_fn0800_1B06:
	bx_9 = fn0800_1B06(ss_bp, ds, out bp_11)
	bpOut = bp_11
	return bx_9
fn0800_1898_exit:


void fn0800_18AF(segptr32 ss_bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Sequence ss:bp:[0..31]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si Top
// Preserved: sp ss
fn0800_18AF_entry:
l0800_18AF:
l0800_18AF_thunk_fn0800_1B2C:
	fn0800_1B2C(ss_bp)
	return
fn0800_18AF_exit:


void fn0800_18CF(segptr32 ss_bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Sequence ss:bp:[0..31]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si Top
// Preserved: sp ss
fn0800_18CF_entry:
l0800_18CF:
l0800_18CF_thunk_fn0800_1B2C:
	fn0800_1B2C(ss_bp)
	return
fn0800_18CF_exit:


word16 fn0800_196F(segptr32 ss_bp, selector ds, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __scanner
// MayUse:  ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: bp:[0..15]-__scanner bx:[0..15]-__scanner
// Trashed: SCZO ax bp bx cx di es si Top
// Preserved: sp ss
fn0800_196F_entry:
l0800_196F:
l0800_196F_thunk_fn0800_1B06:
	bx_9 = fn0800_1B06(ss_bp, ds, out bp_11)
	bpOut = bp_11
	return bx_9
fn0800_196F_exit:


word16 fn0800_1AEB(segptr32 ss_bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __scanner
//      fn0800_1898
//      fn0800_1B2C
// MayUse:  Sequence ss:bp:[0..31]
// LiveOut: bp:[0..15]-fn0800_1B06
// Trashed: SCZO ax bp cx di es si Top
// Preserved: sp ss
fn0800_1AEB_entry:
l0800_1AEB:
	call 0x800<16>:Mem12[ss_bp + 6<i16>:word16] (retsize: 2;)
		uses: ax:0xFFFF<16>,Mem:Mem12,Stack +0002:0xFFFF<16>,Stack +0004:Mem0[ss_bp + 8<i16>:word16]
	Mem25[ss_bp - 40<i16>:word16] = Mem12[ss_bp - 40<i16>:word16] - CONVERT(Mem12[ss_bp - 40<i16>:word16] <u 1<16>, bool, word16)
l0800_1AFB_thunk_fn0800_1AFF:
	return fn0800_1AFF(ss_bp)
fn0800_1AEB_exit:


word16 fn0800_1AFF(segptr32 ss_bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __scanner
//      fn0800_1AEB
// MayUse:  Sequence ss:bp:[0..31]
// LiveOut: bp:[0..15]-__scanner
// Trashed: ax bp di es si sp Top
// Preserved:
fn0800_1AFF_entry:
l0800_1AFF:
l0800_1B8C:
	return Mem0[ss_bp:word16]
fn0800_1AFF_exit:


word16 fn0800_1B06(segptr32 ss_bp, selector ds, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_1898
//      fn0800_196F
// MayUse:  ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: bp:[0..15]-fn0800_196F bx:[0..15]-fn0800_196F
// Trashed: SCZO ax bp bx cx di es si Top
// Preserved: sp ss
fn0800_1B06_entry:
	ss = SLICE(ss_bp, selector, 16)
	bp = SLICE(ss_bp, word16, 0)
	sp_11 = fp
l0800_1B06:
	Mem8[ss_bp - 38<i16>:word16] = Mem6[ss_bp - 38<i16>:word16] + 1<16>
	Mem13[ss:sp_11 - 2<i16>:word16] = Mem8[ss_bp + 8<i16>:word16]
	call 0x800<16>:Mem13[ss_bp + 4<i16>:word16] (retsize: 2;)
		uses: Mem:Mem13
		defs: ax:ax_18,bx:bx_19
	sp_11 = fp - 2<i16>
	al_42 = SLICE(ax_18, byte, 0) (alias)
	branch ax_18 <= 0<16> l0800_1B27
l0800_1B27:
	branch ax_18 == 0<16> l0800_1B21
l0800_1B29:
l0800_1B2A_thunk_fn0800_1AEB:
	bpOut = fn0800_1AEB(ss_bp)
	return bx_19
l0800_1B14:
	branch al_42 < 0<8> l0800_1B21
l0800_1B18:
	branch Mem13[ds:ax_18 + 0x55A<16>:byte] == 1<8> l0800_1B06
l0800_1B21:
	call wLoc02 + 3<16> (retsize: 0;)
		uses: cx:wLoc02 + 3<16>,Mem:Mem13
		defs: bx:bx_71
	bpOut = bp
	return bx_71
fn0800_1B06_exit:


void fn0800_1B2C(segptr32 ss_bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_18AF
//      fn0800_18CF
// MayUse:  Sequence ss:bp:[0..31]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si Top
// Preserved: sp ss
fn0800_1B2C_entry:
	ss = SLICE(ss_bp, selector, 16)
	sp_16 = fp
l0800_1B2C:
	dx_125 = 0<16>
	cx_128 = 4<16>
l0800_1B31:
	v9_10 = Mem9[ss_bp - 34<i16>:word16] - 1<16>
	Mem11[ss_bp - 34<i16>:word16] = v9_10
	cl_47 = SLICE(cx_128, byte, 0) (alias)
	branch v9_10 < 0<16> l0800_1B7B
l0800_1B7B:
l0800_1B36:
	sp_17 = sp_16 - 2<i16>
	Mem19[ss:sp_17:word16] = dx_125
	Mem22[ss:sp_17 - 2<i16>:word16] = cx_128
	Mem24[ss_bp - 38<i16>:word16] = Mem22[ss_bp - 38<i16>:word16] + 1<16>
	Mem28[ss:sp_17 - 4<i16>:word16] = Mem24[ss_bp + 8<i16>:word16]
	call 0x800<16>:Mem28[ss_bp + 4<i16>:word16] (retsize: 2;)
		uses: Mem:Mem28
		defs: ax:ax_33,sp:sp_30
	cl_47 = Mem28[ss:sp_30 + 2<i16>:byte] (alias)
	dx_40 = Mem28[ss:sp_30 + 4<i16>:word16]
	sp_16 = sp_30 + 6<i16>
	al_51 = SLICE(ax_33, byte, 0) (alias)
	branch ax_33 <= 0<16> l0800_1B7D
l0800_1B48:
	cl_47 = cl_47 - 1<8>
	branch cl_47 < 1<8> l0800_1B7D
l0800_1B4C:
	ch_101 = al_51 - 0x30<8>
	branch al_51 <u 0x30<8> l0800_1B7D
l0800_1B53:
	branch al_51 <u 0x3A<8> l0800_1B6F
l0800_1B58:
	ch_100 = al_51 - 0x41<8>
	branch al_51 <u 0x41<8> l0800_1B7D
l0800_1B5D:
	branch al_51 <u 0x47<8> l0800_1B6C
l0800_1B62:
	ch_100 = al_51 - 0x61<8>
	branch al_51 <u 0x61<8> l0800_1B7D
l0800_1B67:
	branch al_51 >=u 0x67<8> l0800_1B7D
l0800_1B7D:
	branch cl_47 == 4<8> l0800_1B88
l0800_1B88:
l0800_1B89_thunk_fn0800_1AEB:
	fn0800_1AEB(ss_bp)
	return
l0800_1B82:
	call wLoc02 + 3<16> (retsize: 0;)
		uses: cx:wLoc02 + 3<16>,Mem:Mem74
	return
fn0800_1B2C_exit:
l0800_1B6C:
	ch_101 = ch_100 + 0xA<8>
l0800_1B6F:
	dx_125 = SEQ(SLICE(dx_40 << 4<16>, byte, 8), (SLICE(dx_40, byte, 0) << 4<8>) + ch_101) (alias)
	cx_128 = SEQ(ch_101, cl_47 - 1<8>) (alias)


void __scantod(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __scanner
// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: Top
// Preserved: sp
__scantod_entry:
l0800_1B92:
	call Mem0[ds:0x5E2<16>:word16] (retsize: 0;)
		uses: Mem:Mem0
	return
__scantod_exit:


void __scanrslt(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __scanner
// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: Top
// Preserved: sp
__scanrslt_entry:
l0800_1B96:
	call Mem0[ds:0x5E4<16>:word16] (retsize: 0;)
		uses: Mem:Mem0
	return
__scanrslt_exit:


void __scanpop(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __scanner
// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: Top
// Preserved: sp
__scanpop_entry:
l0800_1B9A:
	call Mem0[ds:0x5E6<16>:word16] (retsize: 0;)
		uses: Mem:Mem0
	return
__scanpop_exit:


bool fn0800_1B9E(byte cl, byte bl)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __scantol
// MayUse:  bx:[0..7] cl:[0..7]
// LiveOut: C-__scantol
// Trashed: SCZO Top
// Preserved: bx sp
fn0800_1B9E_entry:
	bl_8 = SLICE(bx, byte, 0) (alias)
l0800_1B9E:
	bl_16 = bl_8 - 0x30<8>
	branch bl_8 <u 0x30<8> l0800_1BC7
l0800_1BA4:
	branch bl_8 <=u 0x39<8> l0800_1BBB
l0800_1BA9:
	branch bl_8 >u 0x5A<8> || bl_8 <u 0x30<8> l0800_1BB3
l0800_1BB3:
	bl_16 = bl_8 - 0x57<8>
l0800_1BAE:
	bl_16 = bl_8 - 0x37<8>
l0800_1BB6:
	branch bl_16 <=u 9<8> l0800_1BC7
l0800_1BBB:
	branch bl_16 >=u cl l0800_1BC7
l0800_1BC7:
	C_40 = true
l0800_1BBF:
	C_40 = false
l0800_1BC5:
l0800_1BCB:
	return C_40
fn0800_1B9E_exit:


word16 __scantol(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, word16 wArg0E, ptr16 & dxOut, ptr16 & bxOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __scanner
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15] Stack +000E:[0..15]
// LiveOut: ax:[0..15]-__scanner bx:[0..15]-__scanner di:[0..15]-__scanner dx:[0..15]-__scanner es:[0..15]-__scanner
// Trashed: SCZOP ax bx cx di dx es si Top
// Preserved: bp ds sp ss
__scantol_entry:
l0800_1BCC:
	bLoc07_545 = 0<8>
	wLoc06_546 = 0<16>
	sp_119 = fp - 0xE<16>
l0800_1BE6:
	Mem33[ss:sp_119 - 2<i16>:word16] = wArg06
	call 0x800<16>:wArg02 (retsize: 2;)
		uses: Mem:Mem33
		defs: ax:ax_40,sp:sp_38
	v10_27 = wLoc06_546 + 1<16>
	wLoc06_546 = v10_27
	sp_119 = sp_38 + 2<i16>
	ax_120 = ax_40
	al_53 = SLICE(ax_40, byte, 0) (alias)
	branch ax_40 < 0<16> l0800_1C5A
l0800_1BF4:
	ax_54 = CONVERT(al_53, int8, int16)
	branch (al_53 & 0x80<8>) != 0<8> l0800_1C00
l0800_1BFB:
	branch (Mem33[ds:ax_54 + 0x241<16>:byte] & 1<8>) != 0<8> l0800_1BE6
l0800_1C00:
	ax_120 = ax_54
	wArg0A_556 = wArg0A - 1<16>
	branch wArg0A < 1<16> l0800_1C61
l0800_1C06:
	branch al_53 == 0x2B<8> l0800_1C11
l0800_1C0A:
	ax_113 = CONVERT(al_53, uint8, uint16) (alias)
	branch al_53 != 0x2D<8> l0800_1C24
l0800_1C0E:
	bLoc07_545 = 1<8>
l0800_1C11:
	wArg0A_556 = wArg0A - 2<16>
	branch wArg0A < 2<16> l0800_1C61
l0800_1C16:
	Mem102[ss:sp_38:word16] = wArg06
	call 0x800<16>:wArg02 (retsize: 2;)
		uses: Mem:Mem102
		defs: ax:ax_113,sp:sp_111
	wLoc06_546 = v10_27 + 1<16>
	sp_119 = sp_111 + 2<i16>
	ax_120 = ax_113
	branch ax_113 < 0<16> l0800_1C5A
l0800_1C5A:
	wLoc04_569 = 0xFFFF<16>
l0800_1C24:
	al_136 = SLICE(ax_113, byte, 0) (alias)
	si_129 = 0<16>
	cl_174 = SLICE(wArg08, byte, 0) (alias)
	branch wArg08 == 0<16> l0800_1C7B
l0800_1C7B:
	wArg08 = 0xA<16>
	branch al_136 != 0x30<8> l0800_1CA7
l0800_1C84:
	v66_141 = wArg0A_556 - 1<16>
	wArg0A_556 = v66_141
	branch v66_141 < 0<16> l0800_1C78
l0800_1C89:
	Mem151[ss:sp_119 - 2<i16>:word16] = wArg06
	call 0x800<16>:wArg02 (retsize: 2;)
		uses: Mem:Mem151
		defs: ax:ax_156,sp:sp_154
	wLoc06_546 = wLoc06_546 + 1<16>
	al_164 = SLICE(ax_156, byte, 0) (alias)
	sp_119 = sp_154 + 2<i16>
	wArg08 = 8<16>
	branch al_164 == 0x78<8> l0800_1CA0
l0800_1C9C:
	di_ax_779 = CONVERT(ax_156, uint16, uint32) (alias)
	branch al_164 != 0x58<8> l0800_1CCD
l0800_1CA0:
	wArg08 = 0x10<16>
l0800_1C2D:
	ax_120 = ax_113 (alias)
	branch wArg08 >u 0x24<16> l0800_1C61
l0800_1C32:
	ax_120 = ax_113 (alias)
	branch cl_174 <u 2<8> l0800_1C61
l0800_1C37:
	branch al_136 != 0x30<8> l0800_1CA7
l0800_1CA7:
	ax_120 = ax_113
	branch fn0800_1B9E(SLICE(wArg08, byte, 0), SLICE(ax_113, byte, 0)) l0800_1C61
l0800_1C61:
	wLoc04_569 = 0<16>
l0800_1C66:
	sp_213 = sp_119 - 2<i16>
	Mem214[ss:sp_213:word16] = wArg06
	Mem222[ss:sp_213 - 2<i16>:word16] = ax_120
	call 0x800<16>:wArg04 (retsize: 2;)
		uses: Mem:Mem222
		defs: sp:sp_239
	sp_119 = sp_239 + 4<i16>
	wLoc06_546 = wLoc06_546 - 1<16>
	ax_479 = 0<16> (alias)
	dx_392 = 0<16> (alias)
l0800_1CB1:
	di_si_534 = CONVERT(ax_113, uint16, uint32) (alias)
l0800_1C3B:
	branch cl_174 != 0x10<8> l0800_1CA5
l0800_1C40:
	v34_260 = wArg0A_556 - 1<16>
	wArg0A_556 = v34_260
	branch v34_260 < 0<16> l0800_1C78
l0800_1C78:
	di_si_783 = 0<32> (alias)
l0800_1C45:
	Mem269[ss:sp_119 - 2<i16>:word16] = wArg06
	call 0x800<16>:wArg02 (retsize: 2;)
		uses: Mem:Mem269
		defs: ax:ax_272,sp:sp_270
	wLoc06_546 = wLoc06_546 + 1<16>
	al_279 = SLICE(ax_272, byte, 0) (alias)
	sp_119 = sp_270 + 2<i16>
	branch al_279 == 0x78<8> l0800_1CA5
l0800_1C53:
	branch al_279 == 0x58<8> l0800_1CA5
l0800_1CA5:
	di_si_534 = 0<32> (alias)
l0800_1C57:
	di_ax_779 = CONVERT(ax_272, uint16, uint32) (alias)
l0800_1CCD:
	ax_290 = SLICE(di_ax_779, word16, 0) (alias)
	di_309 = SLICE(di_ax_779, word16, 16) (alias)
	ax_300 = ax_290
	branch fn0800_1B9E(SLICE(wArg08, byte, 0), SLICE(ax_290, byte, 0)) l0800_1CB4
l0800_1CB4:
	di_si_534 = di_ax_779 + wArg08 *u32 si_129
	branch SLICE(di_si_534, word16, 16) != 0<16> l0800_1CEA
l0800_1CEA:
	v51_318 = wArg0A_556 - 1<16>
	di_330 = SLICE(di_si_534, word16, 16) (alias)
	si_329 = SLICE(di_si_534, word16, 0) (alias)
	wArg0A_556 = v51_318
	di_si_783 = di_si_534 (alias)
	branch v51_318 < 0<16> l0800_1D0F
l0800_1CEF:
	Mem328[ss:sp_119 - 2<i16>:word16] = wArg06
	call 0x800<16>:wArg02 (retsize: 2;)
		uses: Mem:Mem328
		defs: ax:ax_335,sp:sp_333
	wLoc06_546 = wLoc06_546 + 1<16>
	sp_119 = sp_333 + 2<i16>
	ax_300 = ax_335
	di_si_791 = di_si_534 (alias)
	branch fn0800_1B9E(SLICE(wArg08, byte, 0), SLICE(ax_335, byte, 0)) l0800_1CD9
l0800_1CD9:
	dx_ax_366 = wArg08 *u32 di_330
	ax_si_539 = SEQ(SLICE(dx_ax_366, word16, 0), ax_335) + wArg08 *u32 si_329
	di_si_534 = ax_si_539 (alias)
	branch SLICE(dx_ax_366, byte, 16) + SLICE(dx_ax_366, byte, 24) + CONVERT(SLICE(ax_si_539, word16, 16) <u 0<16>, bool, byte) != 0<8> l0800_1D32
l0800_1D32:
	ah_al_541 = CONVERT(bLoc07_545, uint8, uint16) + 0xFFFF<16>
	dx_392 = SLICE(cond(SLICE(ah_al_541, byte, 8)), bool, 1) + 0x7FFF<16>
	wLoc04_569 = 2<16>
	ax_479 = ah_al_541 (alias)
l0800_1CBE:
	v43_401 = wArg0A_556 - 1<16>
	di_418 = SLICE(di_si_534, word16, 16) (alias)
	si_129 = SLICE(di_si_534, word16, 0) (alias)
	wArg0A_556 = v43_401
	di_si_783 = di_si_534 (alias)
	branch v43_401 < 0<16> l0800_1D0F
l0800_1CC3:
	Mem414[ss:sp_119 - 2<i16>:word16] = wArg06
	call 0x800<16>:wArg02 (retsize: 2;)
		uses: Mem:Mem414
		defs: ax:ax_431,sp:sp_429
	wLoc06_546 = wLoc06_546 + 1<16>
	sp_119 = sp_429 + 2<i16>
	di_ax_779 = SEQ(di_418, ax_431) (alias)
l0800_1CD7:
	di_si_791 = SEQ(di_309, si_129) (alias)
l0800_1D03:
	sp_443 = sp_119 - 2<i16>
	Mem444[ss:sp_443:word16] = wArg06
	Mem447[ss:sp_443 - 2<i16>:word16] = ax_300
	call 0x800<16>:wArg04 (retsize: 2;)
		uses: Mem:Mem447
		defs: sp:sp_452
	sp_119 = sp_452 + 4<i16>
	wLoc06_546 = wLoc06_546 - 1<16>
	di_si_783 = di_si_791 (alias)
l0800_1D0F:
	wLoc04_569 = 1<16>
	dx_392 = SLICE(di_si_783, word16, 16)
	ax_479 = SLICE(di_si_783, word16, 0)
	branch bLoc07_545 == 0<8> l0800_1D1F
l0800_1D18:
	dx_ax_536 = -di_si_783
	ax_479 = SLICE(dx_ax_536, word16, 0)
	dx_392 = SLICE(dx_ax_536, word16, 16)
l0800_1D1F:
	Mem515[ds:wArg0C:word16] = Mem495[ds:wArg0C:word16] + wLoc06_546
	Mem519[ds:wArg0E:word16] = wLoc04_569
	es_523 = Mem519[ss:sp_119:selector]
	sp_524 = sp_119 + 2<i16>
l0800_1D48:
	di_525 = Mem519[ss:sp_524:word16]
	dxOut = dx_392
	bxOut = wLoc04_569
	diOut = di_525
	esOut = es_523
	return ax_479
__scantol_exit:


void _tell(selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
_tell_entry:
l0800_1D4E:
	_lseek(ds, wArg02, 0<32>, 1<8>, out dx_43)
l0800_1D63:
	return
_tell_exit:


