void __exit(word16 cx, word16 bx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ss:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_0121_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0121_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0121:
	selector ds_5 = Mem0[0x0800:0x01F8:selector]
	word16 dx_7
	word16 sp_9
	call SEQ(0x0800, Mem0[ds_5:0x05DC:word16]) (retsize: 2;)
		uses: ax:__restorezero(ds_5, out dx_7),bx:bx,cx:cx,dx:dx_7,sp:fp - 2,Top:0
		defs: sp:sp_9
	byte al_25 = 0x00
	byte ah_31 = 0x00
	word16 si_22 = 0x0000
	word16 cx_23 = 0x002F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0137:
	al_25 = al_25 + Mem0[ds_5:si_22:byte]
	ah_31 = ah_31 + (al_25 <u 0x00)
	si_22 = si_22 + 0x0001
	cx_23 = cx_23 - 0x0001
	word16 ax_39 = SEQ(ah_31, al_25)
	branch cx_23 != 0x0000 l0800_0137
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_013F:
	branch ax_39 == 0x0D37 l0800_014F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0145:
	fn0800_01DA(SEQ(ds_5, 0x002F), 0x0019)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_014F:
	msdos_terminate(Mem0[ss:sp_9 + 0x0002:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_0162(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15]
// LiveOut:
// Trashed: ax bx dx es Top
// Preserved: ds sp
fn0800_0162_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0162:
	word32 es_bx_10 = msdos_get_interrupt_vector(0x00)
	Mem12[ds:0x0074:word16] = SLICE(es_bx_10, word16, 0)
	Mem14[ds:0x0076:word16] = SLICE(es_bx_10, selector, 16)
	word32 es_bx_17 = msdos_get_interrupt_vector(0x04)
	Mem19[ds:0x0078:word16] = SLICE(es_bx_17, word16, 0)
	Mem21[ds:0x007A:word16] = SLICE(es_bx_17, selector, 16)
	word32 es_bx_24 = msdos_get_interrupt_vector(0x05)
	Mem26[ds:0x007C:word16] = SLICE(es_bx_24, word16, 0)
	Mem28[ds:0x007E:word16] = SLICE(es_bx_24, selector, 16)
	word32 es_bx_31 = msdos_get_interrupt_vector(0x06)
	Mem33[ds:0x0080:word16] = SLICE(es_bx_31, word16, 0)
	Mem35[ds:0x0082:word16] = SLICE(es_bx_31, selector, 16)
	msdos_set_interrupt_vector(0x00, SEQ(cs, 0x0158))
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0162_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 __restorezero(selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: ax dx
// Trashed: ax dx Top
// Preserved: ds sp
fn0800_01A5_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01A5:
	msdos_set_interrupt_vector(0x00, Mem7[ds:0x0074:segptr32])
	msdos_set_interrupt_vector(0x04, Mem16[ds:0x0078:segptr32])
	msdos_set_interrupt_vector(0x05, Mem25[ds:0x007C:segptr32])
	ptr32 ds_dx_36 = Mem34[ds:0x0080:segptr32]
	msdos_set_interrupt_vector(0x06, ds_dx_36)
	dxOut = SLICE(ds_dx_36, word16, 0)
	return 0x2506
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_01A5_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_01DA(char * ds_dx, word16 cx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] Sequence ds:dx:[0..31]
// LiveOut: bx
// Trashed: C ax bx Top
// Preserved: sp
fn0800_01DA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01DA:
	word16 ax_10
	msdos_write_file(0x0002, cx, ds_dx, out ax_10)
	return 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_01DA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _abort()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_01E2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_01E2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01E2:
	__exit(0x001E, fn0800_01DA(SEQ(Mem0[0x0800:0x01F8:selector], 0x0056), 0x001E))
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_01E9(word16 cx, word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] dx:[0..15] ss:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_01E9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_01E9_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01E9:
	__exit(cx, fn0800_01DA(SEQ(Mem0[0x0800:0x01F8:selector], dx), cx))
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _f3()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: bp sp
_f3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01FA:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_f3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _f2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: bp sp
_f2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01FF:
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_f2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_0222()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: bp sp
fn0800_0222_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0222:
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0222_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _f0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: bp sp
_f0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0245:
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_f0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _main(word16 cx, word32 edx, word16 bx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] edx:[0..31] es:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZDO ax bp bx cx di edx es si sp Top
// Preserved:
_main_entry:
	word16 dx = SLICE(edx, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0265:
	word16 sp_45 = <invalid>
	word16 di_20
	word16 bp_38
	word16 bx_39
	selector es_43
	word16 dx_65 = SLICE((uint32) (uint16) _scanf(0x0194, edx, bx, _printf(cx, dx, bx, es, ds, 0x0194, out di_20), di_20, es, ds, 0x01B0, out bx_39, out bp_38, out es_43), word16, 0)
	word16 cx_54 = Mem34[ss:sp_45 + 2:word16]
	Mem58[ss:sp_45 + 2:word16] = Mem34[ss:bp_38 - 0x0002:word16]
	Mem61[ss:sp_45:word16] = Mem58[ss:bp_38 - 0x0004:word16]
	Mem64[ss:sp_45 - 2:word16] = 0x01B4
	word16 di_144
	_printf(cx_54, dx_65, bx_39, es_43, ds, Mem64[ss:sp_45 - 2:word16], out di_144)
	Mem76[ss:bp_38 - 0x0006:word16] = 0x0000
	Mem77[ss:bp_38 - 0x0008:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02A7:
	word16 dx_81 = Mem80[ss:bp_38 - 0x0006:word16]
	word16 ax_82 = Mem80[ss:bp_38 - 0x0008:word16]
	branch dx_81 < Mem80[ss:bp_38 - 0x0002:word16] l0800_029C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02B2:
	branch dx_81 > Mem80[ss:bp_38 - 0x0002:word16] l0800_02B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02B4:
	branch ax_82 <=u Mem80[ss:bp_38 - 0x0004:word16] l0800_029C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_029C:
	_f0()
	word16 v14_91 = Mem80[ss:bp_38 - 0x0008:word16] + 0x0001
	Mem92[ss:bp_38 - 0x0008:word16] = v14_91
	Mem96[ss:bp_38 - 0x0006:word16] = Mem92[ss:bp_38 - 0x0006:word16] + (v14_91 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02B9:
	Mem104[ss:sp_45 + 0x0002:word16] = 0x01CE
	word16 di_145
	_printf(cx_54, dx_81, bx_39, es_43, ds, Mem104[ss:sp_45 + 0x0002:word16], out di_145)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_main_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 __IOERROR(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax Top
// Preserved: bp si sp
fn0800_02C5_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02C5:
	word16 si_17
	word16 si_13 = wArg02
	branch wArg02 < 0x0000 l0800_02E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02E4:
	si_17 = -wArg02
	branch si_17 >u 0x0023 l0800_02D5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02EB:
	Mem21[ds:0x01D8:word16] = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02D0:
	branch wArg02 <=u 0x0058 l0800_02D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02D5:
	si_13 = 0x0057
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02D8:
	Mem28[ds:0x01D8:word16] = si_13
	si_17 = (int16) Mem28[ds:si_13 + 0x01DA:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02F1:
	Mem37[ds:0x0094:word16] = si_17
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02FB:
	return 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_02C5_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _exit(word16 cx, word16 bx, word16 bp, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] bx:[0..15] cx:[0..15] ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_0301_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0301_entry:
	int8 Top_29 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0301:
	word16 sp_21 = fp - 2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0310:
	word16 ax_11 = Mem10[ds:0x023E:word16]
	Mem13[ds:0x023E:word16] = Mem10[ds:0x023E:word16] - 0x0001
	branch ax_11 != 0x0000 l0800_0306
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0306:
	word16 bx_18 = Mem13[ds:0x023E:word16]
	call SEQ(0x0800, Mem13[ds:(bx_18 << 0x0001) + 0x05E8:word16]) (retsize: 2;)
		uses: ax:ax_11,bx:bx_18 << 0x0001,cx:cx_26,sp:sp_21,Stack +0000:bp,Stack +0004:wArg02,Top:Top_29
		defs: bx:bx_28,cx:cx_27,sp:sp_22,Top:Top_30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_031B:
	word16 sp_32
	word16 ax_33
	word16 cx_34
	word16 bx_37
	int8 Top_38
	call SEQ(0x0800, Mem13[ds:0x0234:word16]) (retsize: 2;)
		uses: ax:ax_11,bx:bx_35,cx:cx_26,sp:sp_21,Stack +0000:bp,Stack +0004:wArg02,Top:Top_29
		defs: ax:ax_33,bx:bx_37,cx:cx_34,sp:sp_32,Top:Top_38
	word16 sp_40
	word16 ax_41
	word16 cx_42
	word16 bx_43
	int8 Top_44
	call SEQ(0x0800, Mem13[ds:0x0236:word16]) (retsize: 2;)
		uses: ax:ax_33,bx:bx_37,cx:cx_34,sp:sp_32,Stack +0000:bp,Stack +0004:wArg02,Top:Top_38
		defs: ax:ax_41,bx:bx_43,cx:cx_42,sp:sp_40,Top:Top_44
	word16 sp_46
	word16 cx_48
	word16 bx_49
	call SEQ(0x0800, Mem13[ds:0x0238:word16]) (retsize: 2;)
		uses: ax:ax_41,bx:bx_43,cx:cx_42,sp:sp_40,Stack +0000:bp,Stack +0004:wArg02,Top:Top_44
		defs: bx:bx_49,cx:cx_48,sp:sp_46
	Mem54[ss:sp_46 - 2:word16] = wArg02
	__exit(cx_48, bx_49)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __setargv(selector ds, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0000:[0..15]
// LiveOut:
// Trashed: SCZDO ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_0336_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0336:
	selector es_30
	Mem6[0x0800:0x0330:word16] = wArg00
	Mem9[0x0800:0x0332:word16] = ds
	word16 si_25 = Mem9[ds:0x008A:word16]
	selector es_11 = Mem9[ds:0x0090:selector]
	word16 ax_16 = (uint16) (uint8) Mem9[ds:0x0080:byte]
	word16 si_224 = si_25 + 0x0002
	word16 cx_27 = 0x0001
	es_30 = es_11
	branch Mem9[ds:0x0092:byte] <u 0x03 l0800_0374
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0363:
	es_30 = Mem9[ds:0x008C:selector]
	word16 di_31 = si_25 + 0x0002
	word16 cx_232 = 0x007F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_036D:
	branch cx_232 == 0x0000 l0800_036F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_036D_1:
	di_31 = di_301 + 0x0001
	cx_232 = cx_232 - 0x0001
	di_301 = di_31
	branch Mem9[es_30:di_301:byte] == 0x00 l0800_036D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_036F:
	byte cl_46 = SLICE(cx_232, byte, 0)
	byte ch_60 = SLICE(cx_232, byte, 8)
	branch cx_232 == 0x0000 l0800_03E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0371:
	cx_27 = SEQ(ch_60, cl_46 ^ 0x7F) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0374:
	word16 di_65 = fp - ((ax_16 + 0x0002) + cx_27 & 0xFFFE)
	branch di_65 <u 0x0000 l0800_03E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0387:
	Mem79[ss:di_65 - 2:word16] = cx_27
	word16 cx_230 = cx_27 - 0x0001
	di_229 = di_65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0393:
	word16 di_229
	branch cx_230 == 0x0000 l0800_0395
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0395:
	Mem87[ss:di_229:byte] = 0x00
	word16 di_88 = di_229 + 0x0001
	word16 si_103 = 0x0081
	word16 cx_109 = ax_16 + 0x0001
	word16 ax_108 = cx_230
	word16 bx_100 = cx_230 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03A3:
	word16 ax_110
	fn0800_03BF(SEQ(es_11, si_103), SEQ(ss, di_88), ax_108, cx_109, out ax_110, out cx_109, out si_103)
	bool Z_115 = <invalid>
	bool C_114 = <invalid>
	branch Z_115 | C_114 l0800_03AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03A8:
	branch C_114 l0800_03EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03EA:
	word16 cx_125 = Mem87[ss:di_65 - 2:word16] + cx_230
	selector ds_126 = Mem87[0x0800:0x0332:selector]
	Mem128[ds_126:0x0084:word16] = bx_100
	word16 bx_130 = (bx_100 + 0x0001) * 0x0002
	word16 si_131 = di_65
	word16 bp_133 = di_65 - bx_130
	branch bp_133 <u 0x0000 l0800_03E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03E7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03E7_thunk__abort:
	_abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0401:
	Mem138[ds_126:0x0086:word16] = bp_133
	bp_142 = bp_133
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0407:
	word16 bp_142
	branch cx_125 == 0x0000 l0800_0417
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0409:
	Mem143[ss:bp_142:word16] = si_131
	bp_142 = bp_142 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_040F:
	byte al_149 = Mem143[ds_126:si_131:byte]
	si_131 = si_131 + 0x0001
	cx_125 = cx_125 - 0x0001
	branch al_149 != 0x00 && cx_125 != 0x0000 l0800_040F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0415:
	branch al_149 == 0x00 l0800_0407
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0417:
	Mem164[ss:bp_142:word16] = 0x0000
	call Mem164[0x0800:0x0330:word16] (retsize: 2;)
		uses: ax:0x0000,bx:bx_130,cx:cx_185,dx:cx_82,sp:bp_133,Stack +0002:wArg00,Top:0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0336_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03AA:
	fn0800_03BF(SEQ(es_11, si_103), SEQ(ss, di_88), ax_110, cx_109, out ax_110, out cx_109, out si_103)
	bool Z_208 = <invalid>
	C_114 = <invalid>
	branch Z_208 | C_114 l0800_03A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03AF:
	byte ah_247 = SLICE(ax_110, byte, 8)
	byte al_211 = SLICE(ax_110, byte, 0)
	branch al_211 == 0x20 l0800_03BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03B3:
	branch al_211 == 0x0D l0800_03BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03B7:
	ax_108 = ax_110 (alias)
	branch al_211 != 0x09 l0800_03A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03BB:
	ax_108 = SEQ(ah_247, 0x00) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0393_1:
	Mem227[ss:di_229:byte] = Mem225[es_30:si_224:byte]
	si_224 = si_224 + 0x0001
	di_229 = di_229 + 0x0001
	cx_230 = cx_230 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_03BF(word32 ds_si, word32 es_di, word16 ax, word16 cx, ptr16 & axOut, ptr16 & cxOut, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] cx:[0..15] Sequence ds:si:[0..31] Sequence es:di:[0..31]
// LiveOut: CZ ax cx si
// Trashed: SCZO ax cx si Top
// Preserved: bx di dx sp
fn0800_03BF_entry:
	word16 si = SLICE(ds_si, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03BF:
	byte al_11 = SLICE(ax, byte, 0)
	branch ax == 0x0000 l0800_03CA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03C3:
	Mem14[es_di:byte] = al_11
	branch al_11 != 0x00 l0800_03CA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03C9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03CA:
	word16 ax_59 = SEQ(al_11, 0x00)
	branch cx == 0x0000 l0800_03E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03D1:
	byte al_40 = Mem38[ds_si:byte]
	si = si + 0x0001
	cx = cx - 0x0001
	ax_59 = SEQ(al_11, al_40 - 0x22) (alias)
	branch al_40 == 0x22 l0800_03E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03D7:
	ax_59 = SEQ(al_11, al_40) (alias)
	branch al_40 != 0x5C l0800_03E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03DD:
	branch Mem38[ds_si + 0x0001:byte] != 0x22 l0800_03E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03E2:
	si = si + 0x0002
	cx = cx - 0x0002
	ax_59 = SEQ(al_11, Mem38[ds_si + 0x0001:byte]) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03E4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03E6:
	axOut = ax_59
	cxOut = cx
	siOut = si
	return <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_03BF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __setenvp(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx di dx es si Top
// Preserved: ds sp
fn0800_0421_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0421:
	word16 cx_6 = Mem0[ds:0x008A:word16]
	word16 ax_10 = _malloc(ds, cx_6)
	word16 cx_110 = cx_6
	word16 di_106 = ax_10
	branch ax_10 == 0x0000 l0800_0454
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0430:
	selector ds_31 = Mem28[ds:0x008C:selector]
	word16 si_104 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_043A:
	branch cx_110 == 0x0000 l0800_043C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_043C:
	word16 ax_50 = _malloc(ds, Mem46[ds:0x008E:word16])
	Mem62[ds:0x0088:word16] = ax_50
	word16 di_142 = ax_10
	word16 bx_59 = ax_50
	branch ax_50 != 0x0000 l0800_0457
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0457:
	word16 cx_111 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_045C:
	Mem74[ds:bx_59:word16] = di_142
	bx_59 = bx_59 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0461:
	branch cx_111 == 0x0000 l0800_0463
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0461_1:
	di_142 = di_142 + 0x0001
	cx_111 = cx_111 - 0x0001
	branch Mem74[ds:di_142:byte] == 0x00 l0800_0461
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0463:
	branch Mem74[ds:di_142:byte] != 0x00 l0800_045C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0468:
	Mem101[ds:bx_59:word16] = 0x0000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0421_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0454:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0454_thunk__abort:
	_abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_043A_1:
	Mem107[ds:di_106:byte] = Mem39[ds_31:si_104:byte]
	si_104 = si_104 + 0x0001
	di_106 = di_106 + 0x0001
	cx_110 = cx_110 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void ___pull_free_block(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx Top
// Preserved: bp di si sp
fn0800_0491_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0491:
	word16 ax_17 = Mem14[ds:wArg02 + 0x0006:word16]
	Mem18[ds:0x062A:word16] = ax_17
	branch ax_17 != wArg02 l0800_04AB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04AB:
	word16 si_21 = Mem18[ds:wArg02 + 0x0004:word16]
	Mem23[ds:Mem18[ds:0x062A:word16] + 0x0004:word16] = si_21
	Mem25[ds:si_21 + 0x0006:word16] = Mem23[ds:0x062A:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04A3:
	Mem26[ds:0x062A:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04BB:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0491_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_04BF(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax
// Trashed: SCZO ax Top
// Preserved: bp di si sp
fn0800_04BF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04BF:
	Mem19[ds:wArg02:word16] = Mem14[ds:wArg02:word16] - wArg04
	word16 si_21 = Mem19[ds:wArg02:word16] + wArg02
	Mem24[ds:si_21:word16] = wArg04 + 0x0001
	Mem25[ds:si_21 + 0x0002:word16] = wArg02
	branch Mem25[ds:0x0628:word16] != wArg02 l0800_04E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04E6:
	Mem32[ds:si_21 + wArg04 + 0x0002:word16] = si_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04E0:
	Mem33[ds:0x0628:word16] = si_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04EE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04F5:
	return si_21 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_04BF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_04F9(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax cx dx Top
// Preserved: bp si sp
fn0800_04F9_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04F9:
	word16 ax_43
	word16 ax_23 = ___sbrk(ds, wArg02 & 0xFFFF, 0x0000)
	branch ax_23 != 0xFFFF l0800_051B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_051B:
	Mem37[ds:ax_23 + 0x0002:word16] = Mem21[ds:0x0628:word16]
	Mem40[ds:ax_23:word16] = wArg02 + 0x0001
	Mem41[ds:0x0628:word16] = ax_23
	ax_43 = Mem41[ds:0x0628:word16] + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0517:
	ax_43 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0533:
	return ax_43
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_04F9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0536(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax cx dx Top
// Preserved: bp si sp
fn0800_0536_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0536:
	word16 ax_42
	word16 ax_23 = ___sbrk(ds, wArg02 & 0xFFFF, 0x0000)
	branch ax_23 != 0xFFFF l0800_0558
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0558:
	Mem36[ds:0x062C:word16] = ax_23
	Mem37[ds:0x0628:word16] = ax_23
	Mem40[ds:ax_23:word16] = wArg02 + 0x0001
	ax_42 = ax_23 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0554:
	ax_42 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_056D:
	return ax_42
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0536_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 _malloc(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp di si sp
fn0800_0570_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0570:
	word16 ax_106
	branch wArg02 == 0x0000 l0800_0581
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_057C:
	branch wArg02 <=u 0xFFF4 l0800_0585
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0585:
	word16 ax_24 = wArg02 + 0x000B & 0xFFF8
	branch Mem14[ds:0x062C:word16] != 0x0000 l0800_059D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_059D:
	word16 si_29 = Mem14[ds:0x062A:word16]
	branch si_29 == 0x0000 l0800_05D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05A7:
	branch Mem14[ds:si_29:word16] <u ax_24 + 0x0028 l0800_05BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05BB:
	branch Mem14[ds:si_29:word16] <u ax_24 l0800_05CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05CF:
	si_29 = Mem14[ds:si_29 + 0x0006:word16]
	branch si_29 != Mem14[ds:0x062A:word16] l0800_05A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05D8:
	ax_106 = fn0800_04F9(ds, ax_24)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05C1:
	___pull_free_block(ds, si_29)
	Mem78[ds:si_29:word16] = Mem68[ds:si_29:word16] + 0x0001
	ax_106 = si_29 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05B2:
	ax_106 = fn0800_04BF(ds, si_29, ax_24)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0596:
	ax_106 = fn0800_0536(ds, ax_24)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0581:
	ax_106 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05DF:
	return ax_106
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0570_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void ___brk(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax dx Top
// Preserved: bp sp
fn0800_05E3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05E3:
	branch wArg02 >=u fp - 0x0102 l0800_05FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05FA:
	Mem15[ds:0x0094:word16] = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05F3:
	Mem17[ds:0x009E:word16] = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0605:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_05E3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 ___sbrk(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax
// Trashed: SCZO ax cx Top
// Preserved: bp sp
fn0800_0607_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0607:
	word16 ax_29
	word16 ax_12 = wArg02 + Mem7[ds:0x009E:word16]
	branch wArg04 + (ax_12 <u 0x0000) + (ax_12 <u 0x0100) != 0x0000 l0800_062E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0624:
	branch ax_12 + 0x0100 >=u fp - 2 l0800_062E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_062E:
	Mem28[ds:0x0094:word16] = 0x0008
	ax_29 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0628:
	word16 v13_30 = Mem7[ds:0x009E:word16]
	Mem31[ds:0x009E:word16] = ax_12
	ax_29 = v13_30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0639:
	return ax_29
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0607_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _brk(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax cx dx Top
// Preserved: bp sp
fn0800_063B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_063B:
	___brk(ds, wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0647:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_063B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_065B(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx Top
// Preserved: bp di si sp
fn0800_065B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_065B:
	word16 ax_46
	word16 si_18 = Mem15[ds:wArg02:word16]
	word16 wLoc04_63 = si_18
	branch (Mem20[ds:wArg02 + 0x0002:word16] & 0x0040) == 0x0000 l0800_067B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_067B:
	word16 di_26 = Mem20[ds:wArg02 + 0x000A:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_068E:
	si_18 = si_18 - 0x0001
	branch si_18 != 0x0000 l0800_0683
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0683:
	di_26 = di_85 + 0x0001
	di_85 = di_26
	branch Mem38[ds:di_85:byte] != 0x0A l0800_068E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_068B:
	wLoc04_63 = wLoc04_63 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0695:
	ax_46 = wLoc04_63
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0677:
	ax_46 = si_18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_069A:
	return ax_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_065B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _fseek(selector ds, word16 wArg02, ui32 dwArg04, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp si sp
fn0800_06A2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06A2:
	branch _fflush(ds, wArg02) == 0x0000 l0800_06B7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06B7:
	branch wArg08 != 0x0001 l0800_06CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06BD:
	branch Mem14[ds:wArg02:word16] <= 0x0000 l0800_06CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06C2:
	dwArg04 = dwArg04 - (int32) fn0800_065B(ds, wArg02) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06CD:
	Mem57[ds:wArg02 + 0x0002:word16] = Mem55[ds:wArg02 + 0x0002:word16] & 0xFE5F
	Mem60[ds:wArg02:word16] = 0x0000
	Mem62[ds:wArg02 + 0x000A:word16] = Mem60[ds:wArg02 + 0x0008:word16]
	word16 dx_82
	word16 ax_79 = _lseek(ds, (int16) Mem74[ds:wArg02 + 0x0004:byte], dwArg04, SLICE(wArg08, byte, 0), out dx_82)
	branch dx_82 != 0xFFFF l0800_06FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06F5:
	branch ax_79 != 0xFFFF l0800_06FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06FF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06FA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0701:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06B2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0703:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_06A2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_075B(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: di si sp
fn0800_075B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_075B:
	word16 di_11 = 0x0014
	word16 si_12 = 0x0342
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0778:
	di_11 = di_11 - 0x0001
	branch di_11 != 0x0000 l0800_0765
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0765:
	branch (Mem22[ds:si_12 + 0x0002:word16] & 0x0300) != 0x0300 l0800_0775
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0770:
	_fflush(ds, si_12)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0775:
	si_12 = si_12 + 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_077F:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_075B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0782(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp si sp
fn0800_0782_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0782:
	branch (Mem11[ds:wArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_0793
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0790:
	fn0800_075B(ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0793:
	word16 ax_69
	word16 v10_28 = Mem11[ds:wArg02 + 0x0006:word16]
	word16 ax_33 = Mem32[ds:wArg02 + 0x0008:word16]
	Mem34[ds:wArg02 + 0x000A:word16] = ax_33
	word16 ax_41 = _read(ds, (int16) Mem36[ds:wArg02 + 0x0004:byte], ax_33, v10_28)
	Mem52[ds:wArg02:word16] = ax_41
	branch ax_41 <= 0x0000 l0800_07B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07B9:
	branch Mem52[ds:wArg02:word16] != 0x0000 l0800_07CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07CC:
	Mem58[ds:wArg02:word16] = 0x0000
	Mem60[ds:wArg02 + 0x0002:word16] = Mem58[ds:wArg02 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07BE:
	Mem68[ds:wArg02 + 0x0002:word16] = Mem52[ds:wArg02 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07D5:
	ax_69 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07AE:
	Mem71[ds:wArg02 + 0x0002:word16] = Mem52[ds:wArg02 + 0x0002:word16] & 0xFFDF
	ax_69 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07DA:
	return ax_69
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0782_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _fgetc(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx es Top
// Preserved: D bp si sp
fn0800_07F2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07F2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07FC:
	word16 v8_18 = Mem17[ds:wArg02:word16] - 0x0001
	Mem19[ds:wArg02:word16] = v8_18
	branch v8_18 < 0x0000 l0800_080E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_080E:
	word16 v15_22 = Mem19[ds:wArg02:word16] + 0x0001
	Mem23[ds:wArg02:word16] = v15_22
	branch v15_22 < 0x0000 l0800_0819
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0812:
	branch (Mem23[ds:wArg02 + 0x0002:word16] & 0x0110) == 0x0000 l0800_0824
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0824:
	Mem33[ds:wArg02 + 0x0002:word16] = Mem31[ds:wArg02 + 0x0002:word16] | 0x0080
	branch Mem33[ds:wArg02 + 0x0006:word16] == 0x0000 l0800_0842
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0842:
	branch Mem33[ds:0x04AA:word16] != 0x0000 l0800_0881
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0849:
	branch wArg02 != 0x0342 l0800_0881
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0881:
	branch (Mem44[ds:wArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_088B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0888:
	fn0800_075B(ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_088B:
	branch __read(ds, (int16) Mem67[ds:wArg02 + 0x0004:byte], fp - 0x0003, 0x0001) == 0x0001 l0800_08C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08C9:
	branch bLoc03 != 0x0D l0800_08D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08CF:
	branch (Mem73[ds:wArg02 + 0x0002:word16] & 0x0040) == 0x0000 l0800_0881
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08D6:
	Mem91[ds:wArg02 + 0x0002:word16] = Mem73[ds:wArg02 + 0x0002:word16] & 0xFFDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08A3:
	branch _eof(ds, (int16) Mem73[ds:wArg02 + 0x0004:byte]) == 0x0001 l0800_08B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08B8:
	Mem119[ds:wArg02 + 0x0002:word16] = Mem101[ds:wArg02 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08B1:
	Mem121[ds:wArg02 + 0x0002:word16] = Mem101[ds:wArg02 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08C4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0850:
	branch _isatty((int16) Mem33[ds:wArg02 + 0x0004:byte]) != 0x0000 l0800_0862
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_085D:
	Mem145[ds:wArg02 + 0x0002:word16] = Mem130[ds:wArg02 + 0x0002:word16] & 0xFDFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0862:
	word16 ax_158
	branch (Mem152[ds:wArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_0872
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0872:
	ax_158 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_086D:
	ax_158 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0874:
	_setvbuf(ds, wArg02, 0x0000, ax_158, 0x0200)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_082F:
	branch fn0800_0782(ds, wArg02) == 0x0000 l0800_083D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_083D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0837:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0819:
	Mem208[ds:wArg02 + 0x0002:word16] = Mem23[ds:wArg02 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0800:
	Mem213[ds:wArg02 + 0x000A:word16] = Mem19[ds:wArg02 + 0x000A:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08E2:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_07F2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 _isatty(word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx dx Top
// Preserved: bp sp
fn0800_08F2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08F2:
	word16 dx_10
	msdos_ioctl_get_device_info(wArg02, out dx_10)
	return dx_10 & 0x0080
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_08F2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _setvbuf(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp di si sp
fn0800_0904_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0904:
	branch Mem14[ds:wArg02 + 0x000E:word16] != wArg02 l0800_0922
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0916:
	branch wArg06 > 0x0002 l0800_0922
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_091C:
	branch wArg08 <=u 0x7FFF l0800_0928
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0928:
	branch Mem14[ds:0x04AC:word16] != 0x0000 l0800_093E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_092F:
	branch wArg02 != 0x0352 l0800_093E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_093E:
	branch Mem14[ds:0x04AA:word16] != 0x0000 l0800_0952
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0945:
	branch wArg02 != 0x0342 l0800_0952
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_094C:
	Mem38[ds:0x04AA:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0936:
	Mem39[ds:0x04AC:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0952:
	branch Mem42[ds:wArg02:word16] == 0x0000 l0800_0966
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0957:
	_fseek(ds, wArg02, 0x00000000, 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0966:
	branch (Mem73[ds:wArg02 + 0x0002:word16] & 0x0004) == 0x0000 l0800_0974
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_096D:
	_free(ds, Mem73[ds:wArg02 + 0x0008:word16])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0974:
	Mem96[ds:wArg02 + 0x0002:word16] = Mem94[ds:wArg02 + 0x0002:word16] & 0xFFF3
	Mem98[ds:wArg02 + 0x0006:word16] = 0x0000
	Mem101[ds:wArg02 + 0x0008:word16] = wArg02 + 0x0005
	Mem102[ds:wArg02 + 0x000A:word16] = wArg02 + 0x0005
	branch wArg06 == 0x0002 l0800_09CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_098F:
	branch wArg08 <=u 0x0000 l0800_09CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0993:
	Mem119[ds:0x0234:word16] = 0x09D6
	branch wArg04 != 0x0000 l0800_09B7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_099F:
	word16 ax_125 = _malloc(ds, wArg08)
	wArg04 = ax_125
	branch ax_125 == 0x0000 l0800_09B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_09B2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_09AB:
	Mem142[ds:wArg02 + 0x0002:word16] = Mem135[ds:wArg02 + 0x0002:word16] | 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_09B7:
	Mem151[ds:wArg02 + 0x000A:word16] = wArg04
	Mem152[ds:wArg02 + 0x0008:word16] = wArg04
	Mem154[ds:wArg02 + 0x0006:word16] = wArg08
	branch wArg06 != 0x0001 l0800_09CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_09C9:
	Mem158[ds:wArg02 + 0x0002:word16] = Mem154[ds:wArg02 + 0x0002:word16] | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_09CE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0922:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_09D2:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0904_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 _read(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_09F7_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_09F7:
	word16 ax_153
	branch wArg06 <u 0x0001 l0800_0A15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A08:
	branch (Mem15[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0x0200) == 0x0000 l0800_0A1A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A1A:
	word16 ax_40 = __read(ds, wArg02, wArg04, wArg06)
	branch ax_40 <u 0x0001 l0800_0A42
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A35:
	branch (Mem46[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0x8000) == 0x0000 l0800_0A48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A48:
	word16 cx_112 = ax_40
	word16 si_57 = wArg04
	word16 di_140 = wArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A55:
	byte al_68 = Mem67[ds:si_57:byte]
	si_57 = si_57 + 0x0001
	branch al_68 == 0x1A l0800_0A87
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A87:
	word16 cx_81 = -cx_112
	word16 dx_96
	_lseek(ds, wArg02, SEQ(0x0000 - (cx_81 == 0x0000), cx_81), 0x02, out dx_96)
	Mem105[ds:(wArg02 << 0x0001) + 0x0482:word16] = Mem92[ds:(wArg02 << 0x0001) + 0x0482:word16] | 0x0200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A5A:
	branch al_68 == 0x0D l0800_0A63
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A63:
	cx_112 = cx_112 - 0x0001
	branch cx_112 != 0x0000 l0800_0A55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A65:
	__read(ds, wArg02, fp - 0x0003, 0x0001)
	Mem141[ds:di_140:byte] = bLoc03
	di_140 = di_140 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A5E:
	Mem143[ds:di_140:byte] = al_68
	di_140 = di_140 + 0x0001
	cx_112 = cx_112 - 0x0001
	branch cx_112 != 0x0000 l0800_0A55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A61:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A7F:
	branch di_140 != wArg04 l0800_0A85
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A85:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0AA7:
	ax_153 = di_140 - wArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A83:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A42:
	ax_153 = ax_40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A15:
	ax_153 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0AAD:
	return ax_153
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_09F7_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 __read(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax
// Trashed: C ax bx cx dx Top
// Preserved: SZO bp sp
fn0800_0AB3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0AB3:
	word16 ax_15
	branch msdos_read_file(wArg02, wArg06, SEQ(ds, wArg04), out ax_15) l0800_0AC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0AC7:
	ax_15 = __IOERROR(ds, ax_15)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0AC5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0ACD:
	return ax_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0AB3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 _write(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp di si sp
fn0800_0ACF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0ACF:
	word16 ax_141
	branch wArg06 >=u 0x0001 l0800_0AE6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0AE6:
	branch (Mem15[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0x8000) == 0x0000 l0800_0B05
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B05:
	Mem29[ds:(wArg02 << 0x0001) + 0x0482:word16] = Mem15[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0xFDFF
	word16 wLoc86_191 = wArg04
	word16 wLoc8A_192 = wArg06
	word16 si_102 = fp - 0x0084
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B91:
	branch wLoc8A_192 == 0x0000 l0800_0B9B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B9B:
	word16 di_45 = si_102 - (fp - 0x0084)
	branch di_45 <=u 0x0000 l0800_0BD7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BA9:
	word16 ax_62 = __write(ds, wArg02, fp - 0x0084, di_45)
	branch ax_62 == di_45 l0800_0BD7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BD7:
	ax_141 = wArg06
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BC0:
	branch ax_62 >=u 0x0000 l0800_0BCC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BCC:
	ax_141 = wArg06 + ax_62 - di_45
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BC7:
	ax_141 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BD5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B98:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B24:
	word16 v20_85 = wLoc8A_192 - 0x0001
	wLoc8A_192 = v20_85
	wLoc86_191 = wLoc86_191 + 0x0001
	byte al_90 = Mem89[ds:wLoc86_191:byte]
	branch al_90 != 0x0A l0800_0B3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B3A:
	Mem94[ds:si_102:byte] = 0x0D
	si_102 = si_102 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B3E:
	Mem103[ds:si_102:byte] = al_90
	si_102 = si_102 + 0x0001
	branch si_102 - (fp - 0x0084) < 0x0080 l0800_0B91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B53:
	word16 di_112 = si_102 - (fp - 0x0084)
	word16 ax_123 = __write(ds, wArg02, fp - 0x0084, di_112)
	branch ax_123 == di_112 l0800_0B8D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B8D:
	si_102 = fp - 0x0084
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B72:
	branch ax_123 >=u 0x0000 l0800_0B7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B7E:
	ax_141 = wArg06 - v20_85 + ax_123 - di_112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B79:
	ax_141 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B8B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0AF3:
	ax_141 = __write(ds, wArg02, wArg04, wArg06)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0AE1:
	ax_141 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BDC:
	return ax_141
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0ACF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 __write(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_0BE2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BE2:
	branch (Mem7[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0x0800) == 0x0000 l0800_0C02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BF2:
	word16 dx_103
	_lseek(ds, wArg02, 0x00000000, 0x02, out dx_103)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C02:
	word16 ax_51
	word16 ax_46
	branch msdos_write_file(wArg02, wArg06, SEQ(ds, wArg04), out ax_46) l0800_0C20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C20:
	ax_51 = __IOERROR(ds, ax_46)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C11:
	Mem62[ds:(wArg02 << 0x0001) + 0x0482:word16] = Mem58[ds:(wArg02 << 0x0001) + 0x0482:word16] | 0x1000
	ax_51 = ax_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C26:
	return ax_51
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0BE2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 _lseek(selector ds, word16 wArg02, word32 dwArg04, byte bArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..7]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_0C28_entry:
	word16 wArg04 = SLICE(dwArg04, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C28:
	Mem13[ds:(wArg02 << 0x0001) + 0x0482:word16] = Mem7[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0xFDFF
	word16 ax_21 = SEQ(0x42, bArg08)
	word16 dx_19 = wArg04
	branch msdos_set_file_position(wArg02, dwArg04, bArg08, SEQ(wArg04, ax_21)) l0800_0C4A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C4A:
	word32 dx_ax_32 = (word32) __IOERROR(ds, ax_21)
	ax_21 = SLICE(dx_ax_32, word16, 0) (alias)
	dx_19 = SLICE(dx_ax_32, word16, 16) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C48:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C51:
	dxOut = dx_19
	return ax_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0C28_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __LONGTOA(selector ds, byte bArg02, byte bArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..7] Stack +0004:[0..7] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15]
// LiveOut:
// Trashed: SCZO ax bx Top
// Preserved: D bp cx di ds dx es si sp ss
fn0800_0C53_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C53:
	word16 di_127 = wArg08
	byte bl_28 = SLICE(wArg06, byte, 0)
	branch wArg06 >u 0x0024 l0800_0CC1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C69:
	branch bl_28 <u 0x02 l0800_0CC1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C6E:
	word16 ax_31 = wArg0A
	word16 cx_33 = wArg0C
	branch wArg0C >= 0x0000 l0800_0C89
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C78:
	branch bArg04 == 0x00 l0800_0C89
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C7E:
	Mem39[ds:wArg08:byte] = 0x2D
	ax_31 = -wArg0A
	di_127 = wArg08 + 0x0001
	cx_33 = -wArg0C - (ax_31 == 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C89:
	word16 si_109 = fp - 0x0024
	branch cx_33 == 0x0000 l0800_0C9D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C8E:
	word32 dx_ax_55 = (uint32) (uint16) cx_33
	word32 dx_ax_63 = SEQ((uint16) (dx_ax_55 % wArg06), ax_31)
	Mem71[ds:si_109:byte] = SLICE((uint16) (dx_ax_63 % wArg06), byte, 0)
	word16 ax_59 = (uint16) (dx_ax_55 /u wArg06)
	cx_33 = ax_59
	ax_31 = (uint16) (dx_ax_63 /u wArg06)
	si_109 = si_109 + 0x0001
	branch ax_59 == 0x0000 l0800_0CA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CA4:
	branch ax_31 != 0x0000 l0800_0C9D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C9D:
	word32 dx_ax_82 = (uint32) (uint16) ax_31
	Mem98[ds:si_109:byte] = SLICE((uint16) (dx_ax_82 % wArg06), byte, 0)
	ax_31 = (uint16) (dx_ax_82 /u wArg06)
	si_109 = si_109 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CA8:
	word16 cx_106 = 0x0024 - fp + si_109
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CB0:
	byte al_119
	si_109 = si_109 - 0x0001
	byte al_113 = Mem112[ds:si_109:byte]
	branch al_113 >=u 0x0A l0800_0CBB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CBB:
	al_119 = al_113 - 0x0A + bArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CB7:
	al_119 = al_113 + 0x30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CBE:
	Mem128[ds:di_127:byte] = al_119
	di_127 = di_127 + 0x0001
	cx_106 = cx_106 - 0x0001
	branch cx_106 != 0x0000 l0800_0CB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CC1:
	Mem136[ds:di_127:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CCA:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0C53_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C9B:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 _eof(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_0D5F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D5F:
	word16 ax_101
	branch (Mem7[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0x0200) == 0x0000 l0800_0D78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D78:
	word16 ax_16 = 0x4400
	byte dl_20 = SLICE(dx_18, byte, 0)
	word16 dx_18
	branch msdos_ioctl_get_device_info(wArg02, out dx_18) l0800_0DC3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D82:
	branch (dl_20 & 0x80) != 0x00 l0800_0DBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D87:
	ax_16 = 0x4201
	branch msdos_set_file_position(wArg02, 0x00000000, 0x01, 0x00004201) l0800_0DC3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D92:
	ax_16 = 0x4202
	branch msdos_set_file_position(wArg02, 0x00000000, 0x02, 0x00004202) l0800_0DC3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DA7:
	ax_16 = 0x4200
	branch msdos_set_file_position(wArg02, 0x00004201, 0x00, 0x42014200) l0800_0DC3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DC3:
	ax_101 = __IOERROR(ds, ax_16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DAE:
	branch false l0800_0DBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DB3:
	branch false l0800_0DBA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DB5:
	branch false l0800_0DBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DBF:
	ax_101 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DBA:
	ax_101 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D72:
	ax_101 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DC9:
	return ax_101
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0D5F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 _fflush(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp di si sp
fn0800_0DCD_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DCD:
	word16 ax_118
	branch Mem14[ds:wArg02 + 0x000E:word16] == wArg02 l0800_0DE1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DE1:
	branch Mem14[ds:wArg02:word16] < 0x0000 l0800_0E13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E13:
	word16 di_23 = Mem14[ds:wArg02 + 0x0006:word16] + Mem14[ds:wArg02:word16]
	Mem26[ds:wArg02:word16] = Mem14[ds:wArg02:word16] - (di_23 + 0x0001)
	word16 ax_30 = Mem29[ds:wArg02 + 0x0008:word16]
	Mem31[ds:wArg02 + 0x000A:word16] = ax_30
	branch _write(ds, (int16) Mem33[ds:wArg02 + 0x0004:byte], ax_30, di_23 + 0x0001) == di_23 + 0x0001 l0800_0E43
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E32:
	branch (Mem37[ds:wArg02 + 0x0002:word16] & 0x0200) != 0x0000 l0800_0E43
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E43:
	ax_118 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E39:
	Mem56[ds:wArg02 + 0x0002:word16] = Mem37[ds:wArg02 + 0x0002:word16] | 0x0010
	ax_118 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DE6:
	branch (Mem14[ds:wArg02 + 0x0002:word16] & 0x0008) != 0x0000 l0800_0DF9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DED:
	branch Mem14[ds:wArg02 + 0x000A:word16] != wArg02 + 0x0005 l0800_0E0F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DF9:
	Mem70[ds:wArg02:word16] = 0x0000
	branch Mem70[ds:wArg02 + 0x000A:word16] != wArg02 + 0x0005 l0800_0E0F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E09:
	Mem77[ds:wArg02 + 0x000A:word16] = Mem70[ds:wArg02 + 0x0008:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E0F:
	ax_118 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DDC:
	ax_118 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E47:
	return ax_118
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0DCD_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 _printf(word16 cx, word16 dx, word16 bx, selector es, selector ds, word16 wArg02, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] es:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: di si
// Trashed: SCZDO ax di si Top
// Preserved: bp sp
_printf_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E4B:
	word16 di_27
	word16 si_28 = __VPRINTER(cx, dx, bx, es, ds, fp + 0x0004, wArg02, out di_27)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E62:
	diOut = di_27
	return si_28
// DataOut:
// DataOut (flags):
// SymbolicIn:

_printf_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __fputc(selector ds, byte bArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..7] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_0E64_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E64:
	Mem12[ds:wArg04:word16] = Mem7[ds:wArg04:word16] - 0x0001
	_fputc(ds, SLICE((int16) bArg02, byte, 0), wArg04)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E7B:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0E64_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _fputc(selector ds, byte bArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..7] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp si sp
fn0800_0E7D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E7D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E8D:
	word16 v9_20 = Mem19[ds:wArg04:word16] + 0x0001
	Mem21[ds:wArg04:word16] = v9_20
	branch v9_20 >= 0x0000 l0800_0EC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EC7:
	Mem25[ds:wArg04:word16] = Mem21[ds:wArg04:word16] - 0x0001
	branch (Mem25[ds:wArg04 + 0x0002:word16] & 0x0090) != 0x0000 l0800_0ED7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0ED0:
	branch (Mem25[ds:wArg04 + 0x0002:word16] & 0x0002) != 0x0000 l0800_0EE2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EE2:
	Mem33[ds:wArg04 + 0x0002:word16] = Mem25[ds:wArg04 + 0x0002:word16] | 0x0100
	branch Mem33[ds:wArg04 + 0x0006:word16] == 0x0000 l0800_0F11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F11:
	branch bArg02 != 0x0A l0800_0F36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F17:
	branch (Mem33[ds:wArg04 + 0x0002:word16] & 0x0040) != 0x0000 l0800_0F36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F1E:
	branch __write(ds, (int16) Mem50[ds:wArg04 + 0x0004:byte], 0x04E0, 0x0001) != 0x0001 l0800_0F4E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F36:
	branch __write(ds, (int16) Mem74[ds:wArg04 + 0x0004:byte], fp + 0x0002, 0x0001) == 0x0001 l0800_0F5F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F4E:
	branch (Mem94[ds:wArg04 + 0x0002:word16] & 0x0200) != 0x0000 l0800_0F5F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F5F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F55:
	Mem106[ds:wArg04 + 0x0002:word16] = Mem94[ds:wArg04 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EED:
	branch Mem33[ds:wArg04:word16] == 0x0000 l0800_0F02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F02:
	Mem116[ds:wArg04:word16] = 0xFFFF - Mem33[ds:wArg04 + 0x0006:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EF2:
	branch _fflush(ds, wArg04) == 0x0000 l0800_0F00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F00:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F0C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EFB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0ED7:
	Mem138[ds:wArg04 + 0x0002:word16] = Mem25[ds:wArg04 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E91:
	Mem144[ds:wArg04 + 0x000A:word16] = Mem21[ds:wArg04 + 0x000A:word16] + 0x0001
	Mem146[ds:Mem144[ds:wArg04 + 0x000A:word16] - 0x0001:byte] = bArg02
	branch (Mem146[ds:wArg04 + 0x0002:word16] & 0x0008) == 0x0000 l0800_0EBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EA4:
	branch bArg02 == 0x0A l0800_0EB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EAA:
	branch bArg02 != 0x0D l0800_0EBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EB0:
	branch _fflush(ds, wArg04) == 0x0000 l0800_0EBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EBF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EB9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F66:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0E7D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __REALCVT(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: Top
// Preserved: sp
fn0800_1044_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1044:
	call Mem0[ds:0x05E0:word16] (retsize: 2;)
		uses: sp:fp,Top:0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1044_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1048(word32 es_di, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Sequence es:di:[0..31] Stack +0002:[0..15]
// LiveOut: di
// Trashed: SCZDO al bx cx di dx Top
// Preserved: bp sp
fn0800_1048_entry:
	word16 di = SLICE(es_di, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1048:
	byte dh_13 = SLICE(wArg02, byte, 8)
	Mem21[es_di:byte] = Mem7[ds:(uint16) (dh_13 >>u 0x04) + 0x04E9:byte]
	Mem27[es_di + 0x0001:byte] = Mem21[ds:(uint16) (dh_13 & 0x0F) + 0x04E9:byte]
	byte dl_29 = SLICE(wArg02, byte, 0)
	Mem33[es_di + 0x0002:byte] = Mem27[ds:(uint16) (dl_29 >>u 0x04) + 0x04E9:byte]
	Mem40[es_di + 0x0003:byte] = Mem33[ds:(uint16) (dl_29 & 0x0F) + 0x04E9:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_106F:
	return di + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1048_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 __VPRINTER(word16 cx, word16 dx, word16 bx, selector es, selector ds, word16 wArg02, word16 wArg04, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] es:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: di si
// Trashed: SCZDO ax di si Top
// Preserved: bp bx cx dx es sp
fn0800_1073_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1073:
	byte bLoc57_1263 = 0x50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10CD:
	word16 sp_1030 = fp - 0x00A0
	word16 wLoc98_1266 = fp - 0x0056
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10D6:
	word16 di_1012 = wLoc98_1266
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10DA:
	word16 si_1001 = wArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10DD:
	byte al_37 = Mem36[ds:si_1001:byte]
	si_1001 = si_1001 + 0x0001
	byte al_1000 = al_37
	branch al_37 == 0x00 l0800_10F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10F3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10E2:
	branch al_37 == 0x25 l0800_10F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10F6:
	al_1000 = Mem47[ds:si_1001:byte]
	si_1001 = si_1001 + 0x0001
	branch al_1000 == 0x25 l0800_10E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10FF:
	wLoc98_1266 = di_1012
	byte ch_1188 = 0x00
	word16 wLoc8E_1271 = 0x0000
	word16 wLoc9A_1272 = 0x0000
	byte bLoc8F_1273 = 0x00
	word16 wLoc94_1274 = 0xFFFF
	word16 wLoc92_1275 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1120:
	word16 ax_65 = (uint16) (uint8) al_1000
	byte bl_68 = SLICE(ax_65, byte, 0)
	byte bh_73 = SLICE(ax_65, byte, 8)
	byte dl_132 = SLICE(ax_65, byte, 0)
	bx = SEQ(bh_73, bl_68 - 0x20) (alias)
	cx = SEQ(ch_1188, 0x00) (alias)
	branch bl_68 >=u 0x80 l0800_1175
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_112E:
	bx = SEQ(bh_73, Mem75[ds:bx + 0x04F9:byte]) (alias)
	cx = SEQ(ch_1188, 0x00) (alias)
	dx = ax_65 (alias)
	branch bx <=u 0x0017 l0800_113C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_113C:
	word16 bx_1944
	ptr32 es_di_1940
	ptr32 es_di_1931
	word16 bx_1924
	ptr32 es_di_1927
	word16 bx_1934
	byte bLoc95_1317
	word16 dx_226
	word16 cx_173
	word16 di_486
	selector es_489
	word16 dx_356
	word16 ax_355
	bx = bx << 0x0001
	byte bl_451 = SLICE(bx << 0x0001, byte, 0)
	dx = ax_65 (alias)
	cx = SEQ(ch_1188, 0x00) (alias)
	switch (bx) { l0800_1190 l0800_1178 l0800_11D1 l0800_1184 l0800_11F6 l0800_1200 l0800_1242 l0800_124C l0800_125C l0800_11B7 l0800_1291 l0800_126C l0800_1270 l0800_1274 l0800_1316 l0800_13C8 l0800_1369 l0800_1389 l0800_1533 l0800_1560 l0800_1560 l0800_1560 l0800_11A3 l0800_11AD }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11AD:
	wLoc9A_1272 = wLoc9A_1272 | 0x0020
	ch_1188 = 0x05
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11A3:
	wLoc9A_1272 = wLoc9A_1272 & 0xFFDF
	ch_1188 = 0x05
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1533:
	ptr32 es_di_103
	wArg04 = si_1001
	branch (wLoc9A_1272 & 0x0020) != 0x0000 l0800_154B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_154B:
	es_di_103 = Mem98[ds:wArg02:segptr32]
	wArg02 = wArg02 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1541:
	word16 di_107 = Mem98[ds:wArg02:word16]
	word16 sp_112 = sp_1030 - 2
	Mem113[ss:sp_112:word16] = ds
	wArg02 = wArg02 + 0x0002
	es_di_103 = SEQ(Mem113[ss:sp_112:selector], di_107) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1551:
	Mem130[es_di_103:word16] = (uint16) (uint8) (0x50 - bLoc57_1263)
	es = SLICE(es_di_103, selector, 16) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1389:
	ptr32 es_di_138
	bool Z_157
	dx_226 = ax_65 (alias)
	branch (wLoc9A_1272 & 0x0020) != 0x0000 l0800_13A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13A7:
	es_di_138 = Mem133[ds:wArg02:segptr32]
	wArg02 = wArg02 + 0x0004
	Z_157 = SLICE(cond(SLICE(es_di_138, selector, 16) | SLICE(es_di_138, word16, 0)), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_139B:
	word16 di_147 = Mem133[ds:wArg02:word16]
	word16 sp_150 = sp_1030 - 2
	Mem151[ss:sp_150:word16] = ds
	wArg02 = wArg02 + 0x0002
	Z_157 = SLICE(cond(di_147), bool, 2) (alias)
	es_di_138 = SEQ(Mem151[ss:sp_150:selector], di_147) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13B1:
	ptr32 es_di_1937 = es_di_138
	branch Z_157 l0800_13B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13B3:
	word16 sp_161 = sp_1030 - 2
	Mem164[ss:sp_161:word16] = ds
	es_di_1937 = SEQ(Mem164[ss:sp_161:selector], 0x04E2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13B8:
	cx_173 = fn0800_108C(SLICE(es_di_1937, word16, 0), SLICE(es_di_1937, selector, 16))
	branch cx_173 <=u wLoc92_1275 l0800_13C5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13C1:
	cx_173 = wLoc92_1275
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13C5:
	es_di_1927 = es_di_1937 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1369:
	word16 sp_192 = sp_1030 - 2
	Mem193[ss:sp_192:word16] = ss
	wArg02 = wArg02 + 0x0002
	sp_1030 = sp_192 + 2
	cx_173 = 0x0001
	dx_226 = ax_65 (alias)
	es_di_1927 = SEQ(Mem193[ss:sp_192:selector], fp - 0x0089) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13C8:
	word16 cx_206 = wLoc92_1275
	dx_226 = ax_65 (alias)
	branch wLoc92_1275 >= 0x0000 l0800_13DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13DA:
	cx_206 = 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13DD:
	word16 wLoc06_1301
	word16 ax_240
	word16 sp_212 = sp_1030 - 2
	Mem215[ss:sp_212:word16] = wArg02
	Mem218[ss:sp_212 - 2:word16] = cx_206
	Mem222[ss:sp_212 - 4:word16] = fp - 0x0089
	Mem227[ss:sp_212 - 6:word16] = ax_65
	Mem231[ss:sp_212 - 8:word16] = wLoc9A_1272 & 0x0001
	branch (wLoc9A_1272 & 0x0080) == 0x0000 l0800_1400
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1400:
	branch (wLoc9A_1272 & 0x0100) == 0x0000 l0800_140F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_140F:
	wLoc06_1301 = 0x0008
	ax_240 = 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1405:
	ax_240 = 0x0008
	wLoc06_1301 = 0x000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13F6:
	ax_240 = 0x0002
	wLoc06_1301 = 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1417:
	Mem249[ss:sp_212 - 10:word16] = ax_240
	__REALCVT(ds)
	Mem259[ss:sp_212 - 12:word16] = ss
	wArg02 = wArg02 + wLoc06_1301
	sp_1030 = sp_212 - 10
	es_di_1940 = SEQ(Mem259[ss:sp_212 - 12:selector], fp - 0x0089) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1316:
	word16 sp_268 = sp_1030 - 2
	Mem269[ss:sp_268:word16] = Mem264[ds:wArg02:word16]
	word16 di_265 = fp - 0x008A
	wArg02 = wArg02 + 0x0002
	branch (wLoc9A_1272 & 0x0020) == 0x0000 l0800_1342
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1333:
	Mem278[ss:sp_268 - 2:word16] = Mem272[ds:wArg02 + 0x0002:word16]
	Mem284[ss:sp_268 - 4:word16] = ss
	selector es_285 = Mem284[ss:sp_268 - 4:selector]
	word16 di_291 = fn0800_1048(SEQ(es_285, fp - 0x008A), ds, Mem284[ss:sp_268 - 2:word16])
	Mem300[es_285:di_291:byte] = 0x3A
	wArg02 = wArg02 + 0x0004
	di_265 = di_291 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1342:
	Mem305[ss:sp_268 - 2:word16] = ss
	selector es_306 = Mem305[ss:sp_268 - 2:selector]
	word16 di_314 = fn0800_1048(SEQ(es_306, di_265), ds, Mem305[ss:sp_268:word16])
	Mem322[ds:di_314:byte] = 0x00
	sp_1030 = sp_268 + 0x0002
	wLoc9A_1272 = wLoc9A_1272 & 0xFFFB
	word16 di_329 = di_314 - (fp - 0x008A)
	dx_226 = wLoc92_1275
	branch wLoc92_1275 > di_329 l0800_1366
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1364:
	dx_226 = di_329
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1366:
	es_di_1940 = SEQ(es_306, fp - 0x008A) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1274:
	bx_1944 = SEQ(0x10, dl_132 + 0xE9) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1270:
	bx_1934 = SEQ(0x0A, bl_451) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_126C:
	bx_1944 = SEQ(0x08, bl_451) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_127A:
	bLoc8F_1273 = 0x00
	bx_1934 = bx_1944 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_127F:
	bLoc95_1317 = 0x00
	ax_355 = Mem351[ds:wArg02:word16]
	dx_356 = 0x0000
	bx_1924 = bx_1934 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1291:
	int32 dx_ax_364 = (int32) Mem361[ds:wArg02:word16]
	bLoc95_1317 = 0x01
	ax_355 = SLICE(dx_ax_364, word16, 0) (alias)
	dx_356 = SLICE(dx_ax_364, word16, 16) (alias)
	bx_1924 = SEQ(0x0A, bl_451) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12A2:
	word16 di_366 = wArg02 + 0x0001
	byte bh_431 = SLICE(bx_1924, byte, 8)
	word16 di_367 = di_366 + 0x0001
	wArg04 = si_1001
	branch (wLoc9A_1272 & 0x0010) == 0x0000 l0800_12B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12AF:
	dx_356 = Mem373[ds:di_366 + 0x0001:word16]
	di_367 = di_366 + 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12B3:
	wArg02 = di_367
	branch ax_355 != 0x0000 l0800_12F1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12BE:
	byte dh_1178 = SLICE(dx_356, byte, 8)
	branch dx_356 != 0x0000 l0800_12F1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12F1:
	wLoc9A_1272 = wLoc9A_1272 | 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12C2:
	bx = bx_1924 (alias)
	branch wLoc92_1275 != 0x0000 l0800_12F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12F6:
	word16 sp_416 = sp_1030 - 2
	Mem420[ss:sp_416:word16] = dx_356
	Mem424[ss:sp_416 - 2:word16] = ax_355
	Mem428[ss:sp_416 - 4:word16] = fp - 0x0089
	word16 ax_436 = (int16) bh_431
	Mem438[ss:sp_416 - 6:word16] = ax_436
	Mem444[ss:sp_416 - 8:word16] = SEQ(SLICE(ax_436, byte, 8), bLoc95_1317)
	Mem454[ss:sp_416 - 10:word16] = bx_1924
	__LONGTOA(ds, Mem454[ss:sp_416 - 10:byte], Mem454[ss:sp_416 - 8:byte], Mem454[ss:sp_416 - 6:word16], Mem454[ss:sp_416 - 4:word16], Mem454[ss:sp_416 - 2:word16], Mem454[ss:sp_416:word16])
	Mem466[ss:sp_416:word16] = ss
	selector es_467 = Mem466[ss:sp_416:selector]
	sp_1030 = sp_416 + 2
	dx_226 = wLoc92_1275
	branch wLoc92_1275 > 0x0000 l0800_1313
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1313:
	es_di_1931 = SEQ(es_467, fp - 0x0089) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1310:
	es_di_1940 = SEQ(es_467, fp - 0x0089) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1427:
	es_489 = SLICE(es_di_1940, selector, 16) (alias)
	di_486 = SLICE(es_di_1940, word16, 0) (alias)
	branch (wLoc9A_1272 & 0x0008) == 0x0000 l0800_1449
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_142F:
	dx_226 = wLoc94_1274
	es_di_1931 = es_di_1940 (alias)
	branch wLoc94_1274 <= 0x0000 l0800_1449
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1437:
	es_489 = SLICE(es_di_1931, selector, 16) (alias)
	di_486 = SLICE(es_di_1931, word16, 0) (alias)
	word16 cx_493 = fn0800_108C(di_486, es_489)
	branch Mem498[es_di_1931:byte] != 0x2D l0800_1441
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1440:
	cx_493 = cx_493 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1441:
	dx_226 = dx_226 - cx_493
	branch dx_226 <= 0x0000 l0800_1449
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1445:
	wLoc8E_1271 = dx_226
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1449:
	branch bLoc8F_1273 == 0x00 l0800_1465
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1451:
	branch Mem516[es_489:di_486:byte] == 0x2D l0800_1465
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1457:
	di_486 = di_486 - 0x0001
	Mem538[es_489:di_486:byte] = bLoc8F_1273
	word16 v40_529 = wLoc8E_1271 - 0x0001
	wLoc8E_1271 = v40_529 + (v40_529 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1465:
	cx_173 = fn0800_108C(di_486, es_489)
	es_di_1927 = SEQ(es_489, di_486) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1468:
	word16 di_547 = SLICE(es_di_1927, word16, 0)
	wArg04 = si_1001
	es = SLICE(es_di_1927, selector, 16) (alias)
	word16 si_1160 = di_547
	word16 bx_560 = wLoc94_1274
	branch (wLoc9A_1272 & 0x0005) != 0x0005 l0800_1494
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_147E:
	branch dl_132 != 0x6F l0800_1497
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1497:
	branch dl_132 == 0x78 l0800_14A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_149C:
	branch dl_132 != 0x58 l0800_14B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14A1:
	word16 v37_581 = wLoc8E_1271 - 0x0002
	wLoc9A_1272 = wLoc9A_1272 | 0x0040
	bx_560 = wLoc94_1274 - 0x0002
	wLoc8E_1271 = v37_581
	branch v37_581 >= 0x0000 l0800_14B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14AF:
	wLoc8E_1271 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1487:
	branch wLoc8E_1271 > 0x0000 l0800_1494
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_148E:
	wLoc8E_1271 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1494:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14B5:
	cx = cx_173 + wLoc8E_1271
	branch (wLoc9A_1272 & 0x0002) != 0x0000 l0800_14CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14C1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14C9:
	branch bx_560 > cx l0800_14C3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14C3:
	di_1012 = fn0800_1099(SEQ(ds, di_1012), SEQ(ss, fp - 2), 0x20, cx, dx_226, bx_560, es)
	sp_1030 = sp_1030 + 0xFFFE
	bx_560 = bx_560 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14CD:
	branch (wLoc9A_1272 & 0x0040) == 0x0000 l0800_14E1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14D5:
	di_1012 = fn0800_1099(SEQ(ds, fn0800_1099(SEQ(ds, di_1012), SEQ(ss, fp - 2), 0x30, cx, dx_226, bx_560, es)), SEQ(ss, fp - 2), dl_132, cx, dx_226, bx_560, es)
	sp_1030 = sp_1030 + 0xFFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14E1:
	dx = wLoc8E_1271
	branch wLoc8E_1271 <= 0x0000 l0800_1510
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14E9:
	word16 cx_714 = cx - wLoc8E_1271
	bx_560 = bx_560 - wLoc8E_1271
	byte al_724 = Mem598[es_di_1927:byte]
	branch al_724 == 0x2D l0800_14FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14F4:
	branch al_724 == 0x20 l0800_14FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14F8:
	branch al_724 != 0x2B l0800_1503
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14FC:
	si_1160 = di_547 + 0x0001
	di_1012 = fn0800_1099(SEQ(ds, di_1012), SEQ(ss, fp - 2), Mem598[ds:di_547:byte], cx_714, wLoc8E_1271, bx_560, es)
	sp_1030 = sp_1030 + 0xFFFE
	cx_714 = cx_714 - 0x0001
	bx_560 = bx_560 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1503:
	word16 cx_762 = wLoc8E_1271
	branch wLoc8E_1271 == 0x0000 l0800_150E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1507:
	di_1012 = fn0800_1099(SEQ(ds, di_1012), SEQ(ss, fp - 2), 0x30, cx_762, cx_714, bx_560, es)
	sp_1030 = sp_1030 + 0xFFFE
	cx_762 = cx_762 - 0x0001
	branch cx_762 != 0x0000 l0800_1507
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_150E:
	dx = cx_762
	cx = cx_714
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1510:
	branch cx == 0x0000 l0800_1523
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1512:
	bx_560 = bx_560 - cx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1514:
	Mem799[ds:di_1012:byte] = Mem795[ds:si_1160:byte]
	byte v42_803 = bLoc57_1263 - 0x01
	si_1160 = si_1160 + 0x0001
	di_1012 = di_1012 + 0x0001
	bLoc57_1263 = v42_803
	branch v42_803 > 0x00 l0800_1521
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_151E:
	di_1012 = fn0800_10A1(SEQ(ss, fp - 2), cx, dx, bx_560, di_1012, es)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1521:
	cx = cx - 0x0001
	branch cx != 0x0000 l0800_1514
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1523:
	bx = bx_560
	branch bx_560 <= 0x0000 l0800_1530
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1527:
	cx = bx_560
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1529:
	di_1012 = fn0800_1099(SEQ(ds, di_1012), SEQ(ss, fp - 2), 0x20, cx, dx, bx_560, es)
	sp_1030 = sp_1030 + 0xFFFE
	cx = cx - 0x0001
	branch cx != 0x0000 l0800_1529
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1530:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12C9:
	cx = wLoc94_1274
	dx = dx_356 (alias)
	branch wLoc94_1274 == 0x0000 l0800_12EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12D3:
	dx = dx_356 (alias)
	branch wLoc94_1274 == 0xFFFF l0800_12EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12D8:
	byte dl_853
	branch (wLoc9A_1272 & 0x0008) == 0x0000 l0800_12E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12E5:
	dl_853 = 0x20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12E1:
	dl_853 = 0x30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12E7:
	dx = SEQ(dh_1178, dl_853) (alias)
	di_1012 = fn0800_1099(SEQ(ds, di_1012), SEQ(ss, fp - 2), dl_853, cx, dx, bx_1924, es)
	sp_1030 = sp_1030 + 0xFFFE
	cx = cx - 0x0001
	branch cx != 0x0000 l0800_12E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12EE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11B7:
	branch ch_1188 >u 0x00 l0800_1200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11BC:
	branch (wLoc9A_1272 & 0x0002) != 0x0000 l0800_11E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11C4:
	wLoc9A_1272 = wLoc9A_1272 | 0x0008
	ch_1188 = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_125C:
	wLoc9A_1272 = wLoc9A_1272 & 0xFFEF | 0x0080
	ch_1188 = 0x05
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_124C:
	wLoc9A_1272 = (wLoc9A_1272 | 0x0100) & 0xFFEF
	ch_1188 = 0x05
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1242:
	wLoc9A_1272 = wLoc9A_1272 | 0x0010
	ch_1188 = 0x05
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1200:
	dx = bx
	word16 ax_916 = (int16) (SLICE(ax_65, byte, 0) - 0x30)
	branch ch_1188 >u 0x02 l0800_1224
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1224:
	cx = SEQ(ch_1188, 0x00) (alias)
	branch ch_1188 != 0x04 l0800_11CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1229:
	wLoc92_1275 = ax_916
	branch wLoc92_1275 < 0x0000 l0800_11E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1231:
	wLoc92_1275 = ax_916 + ((wLoc92_1275 << 0x0003) + (wLoc92_1275 << 0x0001))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1209:
	ch_1188 = 0x02
	wLoc94_1274 = ax_916
	branch wLoc94_1274 < 0x0000 l0800_11E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1213:
	wLoc94_1274 = ax_916 + ((wLoc94_1274 << 0x0003) + (wLoc94_1274 << 0x0001))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11F6:
	cx = SEQ(ch_1188, 0x00) (alias)
	branch ch_1188 >=u 0x04 l0800_11CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11FB:
	ch_1188 = 0x04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1184:
	cx = SEQ(ch_1188, 0x00) (alias)
	branch ch_1188 >u 0x00 l0800_1175
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1189:
	wLoc9A_1272 = wLoc9A_1272 | 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11D1:
	word16 ax_966 = Mem75[ds:wArg02:word16]
	wArg02 = wArg02 + 0x0002
	branch ch_1188 >=u 0x02 l0800_11E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11E8:
	cx = SEQ(ch_1188, 0x00) (alias)
	branch ch_1188 != 0x04 l0800_11CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11CE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11ED:
	wLoc92_1275 = ax_966
	ch_1188 = ch_1188 + 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11DF:
	wLoc94_1274 = ax_966
	ch_1188 = 0x03
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11E5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1178:
	cx = SEQ(ch_1188, 0x00) (alias)
	branch ch_1188 >u 0x00 l0800_1175
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_117D:
	wLoc9A_1272 = wLoc9A_1272 | 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1190:
	cx = SEQ(ch_1188, 0x00) (alias)
	branch ch_1188 >u 0x00 l0800_1175
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1175:
	dx = ax_65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1195:
	branch bLoc8F_1273 == 0x2B l0800_11A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_119C:
	bLoc8F_1273 = dl_132
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11A0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_111F:
	al_1000 = Mem997[ds:si_1001:byte]
	si_1001 = si_1001 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1139:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1560:
	word16 si_1011 = si_1001
	byte al_1013 = 0x25
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_156A:
	di_1012 = fn0800_1099(SEQ(ds, di_1012), SEQ(ss, fp - 2), al_1013, cx, dx, bx, es)
	byte al_1034 = Mem1008[ds:si_1011:byte]
	sp_1030 = sp_1030 + 0xFFFE
	si_1011 = si_1011 + 0x0001
	al_1013 = al_1034
	branch al_1034 != 0x00 l0800_156A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1572:
	branch bLoc57_1263 >= 0x50 l0800_157B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1578:
	fn0800_10A1(SEQ(ss, fp - 2), cx, dx, bx, di_1012, es)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_157B:
	word16 sp_1067 = sp_1030 + 2
	branch 0x0000 == 0x0000 l0800_1589
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1589:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1582:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_158E:
	word16 si_1078 = Mem1042[ss:sp_1067 + 2:word16]
	diOut = Mem1042[ss:sp_1067:word16]
	return si_1078
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1073_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10E6:
	Mem1086[ds:di_1012:byte] = al_1000
	byte v15_1090 = bLoc57_1263 - 0x01
	di_1012 = di_1012 + 0x0001
	bLoc57_1263 = v15_1090
	branch v15_1090 > 0x00 l0800_10DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10EE:
	di_1012 = fn0800_10A1(SEQ(ss, fp - 2), cx, dx, bx, di_1012, es)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_108C(word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] es:[0..15]
// LiveOut: cx
// Trashed: SCZO al cx Top
// Preserved: di sp
fn0800_108C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_108C:
	word16 cx_12 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1092:
	branch cx_12 == 0x0000 l0800_1094
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1092_1:
	di = di_45 + 0x0001
	cx_12 = cx_12 - 0x0001
	di_45 = di
	branch Mem7[es:di_45:byte] == 0x00 l0800_1092
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1094:
	return ~cx_12 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_108C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1099(word32 ds_di, word32 ss_bp, byte al, word16 cx, word16 dx, word16 bx, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] bx:[0..15] cx:[0..15] dx:[0..15] es:[0..15] Sequence ds:di:[0..31] Sequence ss:bp:[0..31]
// LiveOut: di
// Trashed: SZO di Top
// Preserved: C sp
fn0800_1099_entry:
	word16 di = SLICE(ds_di, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1099:
	Mem7[ds_di:byte] = al
	byte v9_11 = Mem7[ss_bp - 0x0055:byte] - 0x01
	Mem12[ss_bp - 0x0055:byte] = v9_11
	branch v9_11 <= 0x00 l0800_10CC_in_fn0800_1099
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10CC_in_fn0800_1099:
	return di + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_109F_thunk_fn0800_10A1:
	return fn0800_10A1(ss_bp, cx, dx, bx, di + 0x0001, es)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1099_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_10A1(word32 ss_bp, word16 cx, word16 dx, word16 bx, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] di:[0..15] dx:[0..15] es:[0..15] Sequence ss:bp:[0..31]
// LiveOut: di
// Trashed: SCZO di Top
// Preserved: bx cx dx es sp
fn0800_10A1_entry:
	word16 bp = SLICE(ss_bp, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10A1:
	word16 di_20 = di - (bp - 0x0054)
	word16 ax_34
	call SEQ(0x0800, Mem29[ss_bp + 0x000A:word16]) (retsize: 2;)
		uses: ax:bp - 0x0054,bx:bx,cx:cx,dx:dx,sp:fp - 14,Stack +0002:Mem26[ss_bp + 0x0008:word16],Stack +0004:di_20,Stack +0006:bp - 0x0054,Stack +0008:es,Stack +000A:dx,Stack +000C:cx,Stack +000E:bx,Top:0
		defs: ax:ax_34
	branch ax_34 != 0x0000 l0800_10BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10B9:
	Mem41[ss_bp - 0x0002:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10BE:
	Mem44[ss_bp - 0x0055:byte] = 0x50
	Mem47[ss_bp - 0x0058:word16] = Mem44[ss_bp - 0x0058:word16] + di_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10CC:
	return bp - 0x0054
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_10A1_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_1596(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx Top
// Preserved: bp di si sp
fn0800_1596_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1596:
	branch Mem14[ds:0x062A:word16] == 0x0000 l0800_15C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_15C1:
	Mem19[ds:0x062A:word16] = wArg02
	Mem20[ds:wArg02 + 0x0004:word16] = wArg02
	Mem21[ds:wArg02 + 0x0006:word16] = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_15A5:
	word16 di_23 = Mem14[ds:Mem14[ds:0x062A:word16] + 0x0006:word16]
	Mem25[ds:Mem14[ds:0x062A:word16] + 0x0006:word16] = wArg02
	Mem26[ds:di_23 + 0x0004:word16] = wArg02
	Mem27[ds:wArg02 + 0x0006:word16] = di_23
	Mem29[ds:wArg02 + 0x0004:word16] = Mem27[ds:0x062A:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_15CB:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1596_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_15CF(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx Top
// Preserved: bp di si sp
fn0800_15CF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_15CF:
	Mem21[ds:wArg02:word16] = Mem15[ds:wArg02:word16] + Mem15[ds:wArg04:word16]
	branch Mem21[ds:0x0628:word16] != wArg04 l0800_15EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_15EE:
	Mem30[ds:Mem21[ds:wArg04:word16] + wArg04 + 0x0002:word16] = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_15E8:
	Mem31[ds:0x0628:word16] = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_15FB:
	___pull_free_block(ds, wArg04)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_15CF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_1606(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: si sp
fn0800_1606_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1606:
	branch Mem7[ds:0x062C:word16] != Mem7[ds:0x0628:word16] l0800_1622
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1622:
	word16 si_13 = Mem7[ds:Mem7[ds:0x0628:word16] + 0x0002:word16]
	branch (Mem7[ds:si_13:word16] & 0x0001) != 0x0000 l0800_1651
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1651:
	_brk(ds, Mem7[ds:0x0628:word16])
	Mem29[ds:0x0628:word16] = si_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_162F:
	___pull_free_block(ds, si_13)
	branch si_13 != Mem31[ds:0x062C:word16] l0800_1644
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1644:
	Mem43[ds:0x0628:word16] = Mem31[ds:si_13 + 0x0002:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_163A:
	Mem47[ds:0x0628:word16] = 0x0000
	Mem48[ds:0x062C:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_164A:
	_brk(ds, si_13)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1610:
	_brk(ds, Mem7[ds:0x062C:word16])
	Mem79[ds:0x0628:word16] = 0x0000
	Mem80[ds:0x062C:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_165D:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1606_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_165F(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx Top
// Preserved: bp di si sp
fn0800_165F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_165F:
	Mem19[ds:wArg02:word16] = Mem15[ds:wArg02:word16] - 0x0001
	word16 si_16 = wArg02
	word16 ax_21 = Mem19[ds:wArg02:word16] + wArg02
	word16 di_23 = Mem22[ds:wArg02 + 0x0002:word16]
	branch (Mem22[ds:di_23:word16] & 0x0001) != 0x0000 l0800_1690
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_167C:
	branch wArg02 == Mem22[ds:0x062C:word16] l0800_1690
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1690:
	fn0800_1596(ds, wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1682:
	Mem45[ds:di_23:word16] = Mem22[ds:di_23:word16] + Mem22[ds:wArg02:word16]
	Mem48[ds:ax_21 + 0x0002:word16] = di_23
	si_16 = di_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1695:
	branch (Mem53[ds:ax_21:word16] & 0x0001) != 0x0000 l0800_16A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_169E:
	fn0800_15CF(ds, si_16, ax_21)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16A7:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_165F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _free(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp si sp
fn0800_16AD_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16AD:
	branch wArg02 != 0x0000 l0800_16BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16BA:
	branch wArg02 + 0xFFFC != Mem11[ds:0x0628:word16] l0800_16CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16CC:
	fn0800_165F(ds, wArg02 + 0xFFFC)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16C7:
	fn0800_1606(ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16B8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16D1:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_16AD_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 _scanf(word16 cx, word32 edx, word16 bx, word16 si, word16 di, selector es, selector ds, word16 wArg02, ptr16 & bxOut, ptr16 & bpOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] edx:[0..31] es:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: bp bx edx es sp
// Trashed: SCZDO ax bp bx cx di edx es si sp Top
// Preserved:
_scanf_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16D4:
	word16 bp_32
	selector es_35
	word16 bx_39
	word32 edx_38 = (uint32) (uint16) __scanner(cx, edx, bx, fp - 2, si, di, es, ds, 0x07F2, 0x1D65, 0x0342, wArg02, out bx_39, out bp_32, out es_35)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16F1:
	word16 bp_46 = Mem23[ss:bp_32:word16]
	bxOut = bx_39
	bpOut = bp_46
	esOut = es_35
	return (word16) edx_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

_scanf_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 __scanner(word16 cx, word32 edx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & bxOut, ptr16 & bpOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] edx:[0..31] es:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: bp bx edx es
// Trashed: SCZDO ax bp bx cx di edx es si Top
// Preserved: sp
fn0800_16F3_entry:
	int8 Top_1175 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16F3:
	word16 wLoc2A_1186 = 0x0000
	word16 wLoc28_1187 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1721:
	di_1065 = di
	es_1105 = es
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1723:
	selector es_1105
	word16 di_1065
	word16 si_26 = wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1726:
	byte al_30 = Mem29[ds:si_26:byte]
	word16 edx_16_16_851 = SLICE(edx, word16, 16)
	word16 dx_1099 = SLICE(edx, word16, 0)
	si_26 = si_26 + 0x0001
	byte al_32 = al_30
	branch al_30 == 0x00 l0800_1788
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1788:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1788_thunk_fn0800_1AEB:
	word16 bp_41
	selector es_44
	word16 cx_1883
	fn0800_1AEB(SEQ(ss, fp - 2), cx, out cx_1883, out bp_41, out es_44)
	bxOut = bx
	bpOut = bp_41
	esOut = es_44
	return (word16) edx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_172B:
	branch al_30 == 0x25 l0800_178B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_178B:
	wLoc24 = 0xFFFF
	bLoc2B = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1794:
	si_26 = si_26 + 0x0001
	word16 ax_60 = (int16) Mem57[ds:si_26:byte]
	byte dh_1087 = SLICE(dx_1099, byte, 8)
	wArg08 = si_26
	di_1065 = ax_60
	edx = SEQ(edx_16_16_851, dx_1099) (alias)
	branch ax_60 < 0x0000 l0800_17E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_179E:
	word16 bx_74 = (uint16) (uint8) Mem63[ds:ax_60 + 0x055A:byte]
	word16 ax_713 = bx_74
	al_32 = SLICE(bx_74, byte, 0) (alias)
	word32 edx_1660 = SEQ(edx_16_16_851, dx_1099)
	branch bx_74 <=u 0x0015 l0800_17AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17AE:
	word32 edx_1874
	word16 ax_117
	word16 si_116
	bx = bx_74 << 0x0001
	edx = SEQ(edx_16_16_851, dx_1099) (alias)
	switch (bx_74) { l0800_17E6 l0800_17E6 l0800_17E6 l0800_17E3 l0800_17E9 l0800_17EF l0800_19C8 l0800_1837 l0800_1837 l0800_1841 l0800_1908 l0800_1803 l0800_180F l0800_1809 l0800_1832 l0800_196C l0800_1A06 l0800_1824 l0800_183C l0800_1895 l0800_1816 l0800_181D }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_181D:
	bLoc2B = bLoc2B | 0x20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1816:
	bLoc2B = bLoc2B & 0xDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1895:
	word16 bp_92
	word16 bx_93
	word16 cx_94
	selector es_1880
	word16 ax_91 = fn0800_1898(SEQ(ss, fp - 2), bx_74, cx, bx_74 << 0x0001, ds, out cx_94, out bx_93, out bp_92, out es_1880)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1895_thunk_fn0800_1898:
	word16 bp_105
	word16 bx_106
	selector es_109
	word16 cx_1886
	fn0800_1898(SEQ(ss, bp_92), ax_91, cx_94, bx_93, ds, out cx_1886, out bx_106, out bp_105, out es_109)
	bxOut = bx_106
	bpOut = bp_105
	esOut = es_109
	return (word16) edx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_183C:
	si_116 = 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1824:
	ax_117 = wLoc28_1187
	dx_1099 = 0x0000
	edx_1874 = SEQ(edx_16_16_851, 0x0000) (alias)
	branch (bLoc2B & 0x01) == 0x00 l0800_187E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_182F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A06:
	selector es_128 = ss
	word16 di_130 = fp - 0x0022
	word16 cx_131 = 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A11:
	branch cx_131 == 0x0000 l0800_1A13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A13:
	byte v42_140 = bLoc2B & 0xEF
	byte al_1042 = Mem135[ds:si_26:byte]
	word16 si_1051 = si_26 + 0x0001
	bLoc2B = v42_140
	branch al_1042 != 0x5E l0800_1A21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A1C:
	bLoc2B = v42_140 | 0x10
	al_1042 = Mem146[ds:si_26 + 0x0001:byte]
	si_1051 = si_26 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A21:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A23:
	byte cl_161 = al_1042 & 0x07
	word16 ax_155 = (uint16) (uint8) al_1042
	byte ch_163 = 0x01 << cl_161
	Mem168[ss:fp - 0x0022 + (ax_155 >>u 0x03):byte] = Mem166[ss:fp - 0x0022 + (ax_155 >>u 0x03):byte] | ch_163
	byte dl_153 = al_1042
	di_1065 = ax_155 >>u 0x03
	cx = SEQ(ch_163, cl_161) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A35:
	byte cl_1074 = SLICE(cx, byte, 0)
	byte ch_1098 = SLICE(cx, byte, 8)
	al_1042 = Mem173[ds:si_1051:byte]
	si_1051 = si_1051 + 0x0001
	word32 edx_1663 = SEQ(edx_16_16_851, dh_1087, dl_153)
	branch al_1042 == 0x00 l0800_1A60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A60:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A60_thunk_fn0800_1AFF:
	word16 bp_182
	selector es_184
	fn0800_1AFF(SEQ(ss, fp - 2), out bp_182, out es_184)
	bxOut = bx_74 << 0x0001
	bpOut = bp_182
	esOut = es_184
	return (word16) edx_1663
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A3A:
	word16 ax_1066 = (uint16) (uint8) al_1042
	word16 dx_1089 = SEQ(dh_1087, dl_153)
	branch al_1042 == 0x5D l0800_1A63
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A63:
	word16 v61_190 = wLoc24_1895 & 0x7FFF
	wArg08 = si_1051
	wLoc24 = v61_190
	word16 si_193 = v61_190
	branch (bLoc2B & 0x01) != 0x00 l0800_1A77
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A74:
	di_1065 = fn0800_1708(SEQ(ss, fp - 2), ds, out es_128)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A77:
	word32 edx_1173
	word16 dx_231
	word16 si_205 = si_193 - 0x0001
	edx = SEQ(edx_16_16_851, dx_1089) (alias)
	branch si_205 < 0x0000 l0800_1ACA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A7A:
	word16 v66_211 = wLoc28_1187 + 0x0001
	word16 ax_224
	word16 bx_229
	word32 edx_1209
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_223,bx:bx_228,cx:cx_226,dx:dx_230,edx:SEQ(edx_16_16_851, dx_231),sp:fp - 4,Stack +0000:bp,Stack +0002:wArg06,Stack +0004:wArg02,Stack +0008:wArg06,Stack +000A:si_175,Stack +000C:wArg06,Stack +000E:si_175,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD6:di,Stack +FFFFFFD7:bLoc2B_1394,Stack +FFFFFFD8:wLoc2A_1547,Stack +FFFFFFDA:v66_211,Stack +FFFFFFDB:bLoc2B_1394,Stack +FFFFFFDC:wLoc2A_1547,Stack +FFFFFFDE:v61_190,Stack +FFFFFFE0:wLoc26,Stack +FFFFFFE2:v61_190,Top:Top_232
		defs: ax:ax_224,bx:bx_229,dx:dx_231,edx:edx_1209,Top:Top_233
	wLoc28_1187 = v66_211
	wLoc04 = wArg06
	es_128 = es_1105
	branch ax_224 < 0x0000 l0800_1AD9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD9:
	branch si_205 + 0x0001 >= v61_190 l0800_1ADD_thunk_fn0800_1AEB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1ADD_thunk_fn0800_1AEB:
	word16 bp_248
	selector es_251
	word16 cx_1892
	fn0800_1AEB(SEQ(ss, fp - 2), wArg06, out cx_1892, out bp_248, out es_251)
	bxOut = bx_229
	bpOut = bp_248
	esOut = es_251
	return (word16) edx_1209
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1ADF:
	branch (bLoc2B & 0x01) != 0x00 l0800_1AE3_thunk_fn0800_1AEB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AE3_thunk_fn0800_1AEB:
	word16 bp_263
	selector es_266
	word16 cx_1893
	fn0800_1AEB(SEQ(ss, fp - 2), wArg06, out cx_1893, out bp_263, out es_266)
	bxOut = bx_229
	bpOut = bp_263
	esOut = es_266
	return (word16) edx_1209
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AE5:
	Mem274[es_1105:di_1065:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AE8_thunk_fn0800_1AEB:
	word16 bp_281
	selector es_284
	word16 cx_1894
	fn0800_1AEB(SEQ(ss, fp - 2), wArg06, out cx_1894, out bp_281, out es_284)
	bxOut = bx_229
	bpOut = bp_281
	esOut = es_284
	return (word16) edx_1209
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A8A:
	byte bl_299 = SLICE(ax_224, byte, 0)
	byte ch_302 = 0x01 << (bl_299 & 0x07)
	si_193 = si_205
	byte al_325 = SLICE(ax_224, byte, 0)
	bx = ax_224 >>u 0x03
	cx = SEQ(ch_302, bl_299 & 0x07) (alias)
	branch (Mem220[ss:fp - 0x0022 + (ax_224 >>u 0x03):byte] & ch_302) == 0x00 l0800_1AA7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AA7:
	branch (bLoc2B & 0x10) == 0x00 l0800_1AB6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A9F:
	branch (bLoc2B & 0x10) == 0x00 l0800_1AAD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AAD:
	ax_1066 = ax_224 (alias)
	es_1105 = es_128
	dx_1089 = dx_231
	branch (bLoc2B & 0x01) != 0x00 l0800_1A77
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AB3:
	Mem328[es_1105:di_1065:byte] = al_325
	di_1065 = di_1065 + 0x0001
	ax_1066 = ax_224 (alias)
	dx_1089 = dx_231
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AA5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AB6:
	word16 sp_345
	word16 dx_356
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:ax_224,bx:ax_224 >>u 0x03,cx:cx_351,dx:dx_231,edx:edx_1173,sp:fp - 6,Stack +0000:bp,Stack +0002:ax_224,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:si_175,Stack +000C:wArg04,Stack +000E:wArg06,Stack +0010:si_175,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD6:es,Stack +FFFFFFD7:bLoc2B_1394,Stack +FFFFFFD8:wLoc2A_1547,Stack +FFFFFFDA:v66_211,Stack +FFFFFFDD:bLoc2B_1394,Stack +FFFFFFDE:v61_190,Stack +FFFFFFE0:v66_211 - 0x0001,Stack +FFFFFFE2:wLoc26,Stack +FFFFFFE4:v61_190,Top:Top_233
		defs: bx:bx_354,dx:dx_356,sp:sp_345,Top:Top_358
	wLoc04 = wArg06
	wLoc06 = ax_224
	cx = Mem344[ss:sp_345 + 2:word16]
	es_1105 = Mem344[ss:sp_345 + 4:selector]
	edx_1173 = SEQ(edx_16_16_851, dx_356) (alias)
	edx = edx_1173
	edx = edx_1173
	branch si_205 + 0x0001 >= v61_190 l0800_1AD3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1ACA:
	branch (bLoc2B & 0x01) != 0x00 l0800_1AD6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD0:
	wLoc2A_1186 = wLoc2A_1186 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD3:
	Mem385[es_1105:di_1065:byte] = 0x00
	di_1065 = di_1065 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A3E:
	branch al_1042 != 0x2D l0800_1A23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A42:
	branch dl_153 >u Mem173[ds:si_1051:byte] l0800_1A23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A46:
	branch Mem173[ds:si_1051:byte] == 0x5D l0800_1A23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A4B:
	si_1051 = si_1051 + 0x0001
	byte al_396 = Mem173[ds:si_1051:byte] - dl_153
	branch al_396 == 0x00 l0800_1A35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A50:
	dl_153 = dl_153 + al_396
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A52:
	ch_1098 = __rol(ch_1098, 0x01)
	di_1065 = di_1065 + ((ch_1098 & 0x80) != 0x00)
	Mem411[ss:fp - 0x0022 + di_1065:byte] = Mem409[ss:fp - 0x0022 + di_1065:byte] | ch_1098
	al_396 = al_396 - 0x01
	cx = SEQ(ch_1098, cl_1074) (alias)
	branch al_396 != 0x00 l0800_1A52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A5E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A11_1:
	Mem421[ss:di_130:word16] = 0x0000
	di_130 = di_130 + 0x0002
	cx_131 = cx_131 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_196C:
	word16 bp_426
	word16 bx_427
	word16 cx_428
	selector es_1879
	word16 ax_425 = fn0800_196F(SEQ(ss, fp - 2), bx_74, cx, bx_74 << 0x0001, ds, out cx_428, out bx_427, out bp_426, out es_1879)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_196C_thunk_fn0800_196F:
	word16 cx_1888
	word16 bp_439
	word16 bx_440
	selector es_443
	fn0800_196F(SEQ(ss, bp_426), ax_425, cx_428, bx_427, ds, out cx_1888, out bx_440, out bp_439, out es_443)
	bxOut = bx_440
	bpOut = bp_439
	esOut = es_443
	return (word16) edx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1832:
	si_116 = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1809:
	bLoc2B = bLoc2B | 0x04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_180F:
	bLoc2B = bLoc2B | 0x02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1803:
	bLoc2B = bLoc2B | 0x08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1908:
	__scantod(ds)
	wLoc04 = fp - 0x0028
	wLoc06 = wLoc24_1895 & 0x7FFF
	wLoc08 = wArg06
	wLoc0A = wArg04
	wLoc0C = wArg02
	branch wLoc26 <= 0x0000 l0800_1964
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1964:
	__scanpop(ds)
	branch wLoc26 < 0x0000 l0800_1905
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1905:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1905_thunk_fn0800_1AEB:
	word16 cx_1891
	word16 bp_492
	selector es_495
	fn0800_1AEB(SEQ(ss, fp - 2), cx, out cx_1891, out bp_492, out es_495)
	bxOut = bx_74 << 0x0001
	bpOut = bp_492
	esOut = es_495
	return (word16) edx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1969:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1969_thunk_fn0800_1AFF:
	word16 bp_504
	selector es_506
	fn0800_1AFF(SEQ(ss, fp - 2), out bp_504, out es_506)
	bxOut = bx_74 << 0x0001
	bpOut = bp_504
	esOut = es_506
	return (word16) edx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_192C:
	branch (bLoc2B & 0x01) == 0x00 l0800_1935
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1935:
	di_1065 = fn0800_1708(SEQ(ss, fp - 2), ds, out es_1105)
	wLoc2A_1186 = wLoc2A_1186 + 0x0001
	branch (bLoc2B & 0x04) == 0x00 l0800_1946
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1946:
	branch (bLoc2B & 0x08) == 0x00 l0800_1951
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1951:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_194C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1941:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1953:
	wLoc04 = di_1065
	Top_1175 = __scanrslt(ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1932:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_195E:
	Top_1175 = __scanpop(ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1841:
	si_116 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1837:
	si_116 = 0x000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1844:
	branch (ax_60 & 0x0020) != 0x0000 l0800_184E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_184A:
	bLoc2B = bLoc2B | 0x04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_184E:
	wLoc06 = wLoc24_1895 & 0x7FFF
	wLoc04 = fp - 0x0028
	wLoc08 = si_116
	wLoc0A = wArg06
	wLoc0C = wArg04
	wLoc0E = wArg02
	ax_117 = __scantol(si_116, cx, dx_1099, bx_74 << 0x0001, fp - 2, si_116, ax_60, es_1105, ds, wArg02, wArg04, wArg06, si_116, wLoc06, fp - 0x0028, fp - 0x0026, out cx, out edx_1874, out bx, out di_1065, out es_1105, out Top_1175)
	branch wLoc26 <= 0x0000 l0800_188D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_188D:
	branch wLoc26 < 0x0000 l0800_1892
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1892:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1892_thunk_fn0800_1AEB:
	word16 cx_1890
	word16 bp_630
	selector es_633
	fn0800_1AEB(SEQ(ss, fp - 2), cx, out cx_1890, out bp_630, out es_633)
	bxOut = bx
	bpOut = bp_630
	esOut = es_633
	return (word16) edx_1874
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_188F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_188F_thunk_fn0800_1AFF:
	word16 bp_642
	selector es_644
	fn0800_1AFF(SEQ(ss, fp - 2), out bp_642, out es_644)
	bxOut = bx
	bpOut = bp_642
	esOut = es_644
	return (word16) edx_1874
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1875:
	edx = edx_1874 (alias)
	branch (bLoc2B & 0x01) != 0x00 l0800_188A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_187B:
	wLoc2A_1186 = wLoc2A_1186 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_187E:
	selector es_1887
	fn0800_1708(SEQ(ss, fp - 2), ds, out es_1887)
	word32 es_di_1873 = <invalid>
	Mem664[es_di_1873:word16] = ax_117
	word16 di_657 = SLICE(es_di_1873, word16, 0)
	word16 edx_16_16_1154 = SLICE(edx_1874, word16, 16)
	word16 dx_670 = SLICE(edx_1874, word16, 0)
	es_1105 = SLICE(es_di_1873, selector, 16) (alias)
	di_1065 = di_657 + 0x0002
	edx = edx_1874 (alias)
	branch (bLoc2B & 0x04) == 0x00 l0800_188A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1888:
	Mem674[es_di_1873 + 0x0002:word16] = dx_670
	di_1065 = di_657 + 0x0004
	edx = SEQ(edx_16_16_1154, ax_117) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_188A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19C8:
	branch (bLoc2B & 0x01) != 0x00 l0800_19D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19CE:
	di_1065 = fn0800_1708(SEQ(ss, fp - 2), ds, out es_1105)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19D1:
	word16 si_1107 = wLoc24_1895
	branch wLoc24_1895 >= 0x0000 l0800_19DB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19D8:
	si_1107 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19DB:
	branch wLoc24_1895 == 0x0000 l0800_19F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19DD:
	word16 v49_700 = wLoc28_1187 + 0x0001
	word16 ax_714
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_713,bx:bx_718,cx:cx_716,edx:edx_720,sp:fp - 4,Stack +0000:bp,Stack +0002:wArg06,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:si_59,Stack +000C:wArg06,Stack +000E:si_59,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD6:di,Stack +FFFFFFD7:bLoc2B_1193,Stack +FFFFFFD8:wLoc2A_1547,Stack +FFFFFFDA:v49_700,Stack +FFFFFFDB:bLoc2B_1193,Stack +FFFFFFDC:wLoc26,Stack +FFFFFFDE:wLoc24_1243,Stack +FFFFFFE0:wLoc26,Stack +FFFFFFE2:wLoc24_1243,Stack +FFFFFFF8:wLoc0E_1836,Stack +FFFFFFFA:wLoc0C_1818,Stack +FFFFFFFC:wLoc0A_1800,Stack +FFFFFFFE:wLoc08_1782,Top:Top_722
		defs: ax:ax_714,bx:bx_719,edx:edx_721,Top:Top_723
	wLoc28_1187 = v49_700
	wLoc04 = wArg06
	byte al_732 = SLICE(ax_714, byte, 0)
	cx = wArg06
	branch (bLoc2B & 0x01) != 0x00 l0800_19F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19EF:
	Mem733[es_1105:di_1065:byte] = al_732
	di_1065 = di_1065 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19F0:
	ax_713 = ax_714
	branch ax_714 < 0x0000 l0800_1A03
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A03:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A03_thunk_fn0800_1AEB:
	word16 cx_1889
	word16 bp_747
	selector es_750
	fn0800_1AEB(SEQ(ss, fp - 2), wArg06, out cx_1889, out bp_747, out es_750)
	bxOut = bx
	bpOut = bp_747
	esOut = es_750
	return (word16) edx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19F4:
	si_1107 = si_1107 - 0x0001
	branch si_1107 > 0x0000 l0800_19DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19F7:
	branch (bLoc2B & 0x01) != 0x00 l0800_1A00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19FD:
	wLoc2A_1186 = wLoc2A_1186 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A00:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17EF:
	wLoc24 = ax_60 - 0x0030
	wLoc24_1895 = wLoc24
	branch wLoc24_1895 < 0x0000 l0800_1794
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17F9:
	dx_1099 = SLICE(wLoc24_1895 *u 0x000A, word16, 16) (alias)
	wLoc24 = ax_60 - 0x0030 + SLICE(wLoc24_1895 *u 0x000A, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17E9:
	bLoc2B = bLoc2B | 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17E3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17E6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17E6_thunk_fn0800_1AEB:
	word16 bp_796
	selector es_799
	word16 cx_1885
	fn0800_1AEB(SEQ(ss, fp - 2), cx, out cx_1885, out bp_796, out es_799)
	bxOut = bx
	bpOut = bp_796
	esOut = es_799
	return (word16) edx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17AB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17AB_thunk_fn0800_1AEB:
	word16 bp_808
	selector es_811
	word16 cx_1882
	fn0800_1AEB(SEQ(ss, fp - 2), cx, out cx_1882, out bp_808, out es_811)
	bxOut = bx_74
	bpOut = bp_808
	esOut = es_811
	return (word16) edx_1660
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_172F:
	word16 v17_829 = wLoc28_1187 + 0x0001
	word16 sp_837
	word16 ax_841
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:di_822,bx:bx_845,cx:cx_39,edx:edx_848,sp:fp - 2,Stack +0000:bp,Stack +0002:wArg06,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_1322,Stack +000C:wArg08_1322,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD6:si,Stack +FFFFFFD7:bLoc2B_1326,Stack +FFFFFFD8:wLoc2A_1547,Stack +FFFFFFD9:bLoc2B_1326,Stack +FFFFFFDA:v17_829,Stack +FFFFFFDC:wLoc26,Stack +FFFFFFDE:wLoc24_1324,Stack +FFFFFFE0:wLoc24_1324,Stack +FFFFFFF6:wLoc0E_1836,Stack +FFFFFFF8:wLoc0C_1818,Stack +FFFFFFFA:wLoc0A_1800,Stack +FFFFFFFC:wLoc08_1782,Stack +FFFFFFFE:wLoc06_1761,Top:Top_855
		defs: ax:ax_841,bx:bx_847,edx:edx_853,sp:sp_837,Top:Top_857
	word16 ax_820 = (int16) al_32
	wLoc28_1187 = v17_829
	cx = Mem836[ss:sp_837:word16]
	word16 sp_860 = sp_837 + 2
	word16 ax_861 = ax_841
	branch ax_841 < 0x0000 l0800_1764
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_173F:
	di_1065 = ax_820
	branch ax_820 < 0x0000 l0800_1775
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1743:
	branch Mem836[ds:ax_820 + 0x055A:byte] != 0x01 l0800_1775
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1775:
	branch ax_841 == ax_820 l0800_1726
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1779:
	Mem881[ss:sp_837:word16] = wArg06
	Mem883[ss:sp_837 - 2:word16] = ax_841
	word16 bx_892
	word32 edx_894
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:ax_841,bx:bx_847,cx:cx_859,edx:edx_853,sp:sp_837 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_1322,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD7:bLoc2B_1326,Stack +FFFFFFD8:wLoc2A_1547,Stack +FFFFFFDA:v17_829,Stack +FFFFFFDC:wLoc26,Stack +FFFFFFDE:wLoc24_1324,Stack +FFFFFFF4:wLoc0E_1836,Stack +FFFFFFF6:wLoc0C_1818,Stack +FFFFFFF8:wLoc0A_1800,Stack +FFFFFFFA:wLoc08_1782,Stack +FFFFFFFC:wLoc06_1761,Stack +FFFFFFFE:wLoc04_1854,Top:Top_857
		defs: bx:bx_892,edx:edx_894
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1785_thunk_fn0800_1AEB:
	word16 bp_907
	selector es_910
	word16 cx_1884
	fn0800_1AEB(SEQ(ss, fp - 2), bp, out cx_1884, out bp_907, out es_910)
	bxOut = bx_892
	bpOut = bp_907
	esOut = es_910
	return (word16) edx_894
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_174A:
	branch SLICE(ax_861, byte, 0) < 0x00 l0800_1767
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_174F:
	branch Mem930[ds:ax_861 + 0x055A:byte] != 0x01 l0800_1767
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1767:
	word16 sp_941 = sp_860 - 2
	Mem942[ss:sp_941:word16] = wArg06
	Mem945[ss:sp_941 - 2:word16] = ax_861
	word16 sp_946
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:bx_919,bx:ax_917,cx:cx_957,edx:edx_961,sp:sp_941 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_1322,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD7:bLoc2B_1326,Stack +FFFFFFD8:wLoc2A_1547,Stack +FFFFFFDA:wLoc28_1359,Stack +FFFFFFDC:wLoc26,Stack +FFFFFFDE:wLoc24_1324,Stack +FFFFFFF4:wLoc0E_1836,Stack +FFFFFFF6:wLoc0C_1818,Stack +FFFFFFF8:wLoc0A_1800,Stack +FFFFFFFA:wLoc08_1782,Stack +FFFFFFFC:wLoc06_1761,Stack +FFFFFFFE:wLoc04_1854,Top:Top_964
		defs: bx:bx_959,edx:edx_962,sp:sp_946,Top:Top_965
	cx = Mem945[ss:sp_946 + 2:word16]
	wLoc28_1187 = wLoc28_1187 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1756:
	word16 v25_974 = wLoc28_1187 + 0x0001
	word16 sp_978 = sp_860 - 2
	Mem979[ss:sp_978:word16] = wArg06
	word16 sp_980
	word16 ax_981
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:bx_919,bx:ax_917,cx:cx_957,edx:edx_961,sp:sp_978,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_1322,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD7:bLoc2B_1326,Stack +FFFFFFD8:wLoc2A_1547,Stack +FFFFFFDA:v25_974,Stack +FFFFFFDC:wLoc26,Stack +FFFFFFDE:wLoc24_1324,Stack +FFFFFFF4:wLoc0E_1836,Stack +FFFFFFF6:wLoc0C_1818,Stack +FFFFFFF8:wLoc0A_1800,Stack +FFFFFFFA:wLoc08_1782,Stack +FFFFFFFC:wLoc06_1761,Stack +FFFFFFFE:wLoc04_1854,Top:Top_964
		defs: ax:ax_981,bx:bx_983,edx:edx_984,sp:sp_980,Top:Top_985
	wLoc28_1187 = v25_974
	cx = Mem979[ss:sp_980:word16]
	sp_860 = sp_980 + 2
	ax_861 = ax_981
	branch ax_981 > 0x0000 l0800_174A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1764:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1764_thunk_fn0800_1AEB:
	word16 bp_997
	selector es_1000
	word16 cx_1881
	fn0800_1AEB(SEQ(ss, fp - 2), cx, out cx_1881, out bp_997, out es_1000)
	bxOut = bx
	bpOut = bp_997
	esOut = es_1000
	return (word16) edx
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_16F3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1708(word32 ss_bp, selector ds, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: di es
// Trashed: SCZO di es Top
// Preserved: sp
fn0800_1708_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1708:
	word16 di_7 = Mem0[ss_bp + 0x000C:word16]
	branch (Mem0[ss_bp - 0x0029:byte] & 0x20) == 0x00 l0800_1718
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1718:
	word16 di_12 = Mem0[ds:di_7:word16]
	Mem18[ss_bp + 0x000C:word16] = Mem14[ss_bp + 0x000C:word16] + 0x0002
	esOut = ds
	return di_12
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1711:
	ptr32 es_di_20 = Mem0[ds:di_7:segptr32]
	Mem22[ss_bp + 0x000C:word16] = Mem0[ss_bp + 0x000C:word16] + 0x0004
	esOut = SLICE(es_di_20, selector, 16)
	return SLICE(es_di_20, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1708_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1898(word32 ss_bp, word16 ax, word16 cx, word16 bx, selector ds, ptr16 & cxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: ax bp bx cx es
// Trashed: SCZO ax bp bx cx di es si Top
// Preserved: sp
fn0800_1898_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1898:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1898_thunk_fn0800_1B06:
	word16 bx_12
	word16 cx_13
	word16 bp_15
	selector es_17
	word16 ax_11 = fn0800_1B06(ss_bp, ax, cx, bx, ds, out cx_13, out bx_12, out bp_15, out es_17)
	cxOut = cx_13
	bxOut = bx_12
	bpOut = bp_15
	esOut = es_17
	return ax_11
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1898_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_18AF(word32 ss_bp, word16 ax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] Sequence ss:bp:[0..31]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si Top
// Preserved: sp
fn0800_18AF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_18AF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_18AF_thunk_fn0800_1B2C:
	fn0800_1B2C(ss_bp, ax)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_18AF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_18CF(word32 ss_bp, word16 ax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] Sequence ss:bp:[0..31]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si Top
// Preserved: sp
fn0800_18CF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_18CF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_18CF_thunk_fn0800_1B2C:
	fn0800_1B2C(ss_bp, ax)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_18CF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_196F(word32 ss_bp, word16 ax, word16 cx, word16 bx, selector ds, ptr16 & cxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: ax bp bx cx es
// Trashed: SCZO ax bp bx cx di es si Top
// Preserved: sp
fn0800_196F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_196F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_196F_thunk_fn0800_1B06:
	word16 bx_12
	word16 cx_13
	word16 bp_15
	selector es_17
	word16 ax_11 = fn0800_1B06(ss_bp, ax, cx, bx, ds, out cx_13, out bx_12, out bp_15, out es_17)
	cxOut = cx_13
	bxOut = bx_12
	bpOut = bp_15
	esOut = es_17
	return ax_11
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_196F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1AEB(word32 ss_bp, word16 cx, ptr16 & cxOut, ptr16 & bpOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] Sequence ss:bp:[0..31]
// LiveOut: ax bp cx es
// Trashed: SCZO ax bp cx di es si Top
// Preserved: sp
fn0800_1AEB_entry:
	selector ss = SLICE(ss_bp, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AEB:
	word16 sp_13
	call SEQ(0x0800, Mem12[ss_bp + 0x0006:word16]) (retsize: 2;)
		uses: ax:0xFFFF,cx:cx,sp:fp - 4,Stack +0002:0xFFFF,Stack +0004:Mem0[ss_bp + 0x0008:word16],Top:0
		defs: sp:sp_13
	word16 cx_24 = Mem12[ss:sp_13 + 2:word16]
	Mem29[ss_bp - 0x0028:word16] = Mem12[ss_bp - 0x0028:word16] - (Mem12[ss_bp - 0x0028:word16] <u 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AFB_thunk_fn0800_1AFF:
	word16 bp_33
	selector es_35
	word16 ax_32 = fn0800_1AFF(ss_bp, out bp_33, out es_35)
	cxOut = cx_24
	bpOut = bp_33
	esOut = es_35
	return ax_32
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1AEB_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1AFF(word32 ss_bp, ptr16 & bpOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Sequence ss:bp:[0..31]
// LiveOut: ax bp es
// Trashed: ax bp di es si sp Top
// Preserved:
fn0800_1AFF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AFF:
	word16 ax_9 = Mem0[ss_bp - 0x0028:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B8C:
	bpOut = Mem0[ss_bp:word16]
	esOut = psegArg00
	return ax_9
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1AFF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1B06(word32 ss_bp, word16 ax, word16 cx, word16 bx, selector ds, ptr16 & cxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: ax bp bx cx es
// Trashed: SCZO ax bp bx cx di es si Top
// Preserved: sp
fn0800_1B06_entry:
	selector ss = SLICE(ss_bp, selector, 16)
	word16 bp = SLICE(ss_bp, word16, 0)
	word16 sp_11 = fp
	int8 Top_15 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B06:
	Mem8[ss_bp - 0x0026:word16] = Mem6[ss_bp - 0x0026:word16] + 0x0001
	word16 sp_12 = sp_11 - 2
	Mem13[ss:sp_12:word16] = Mem8[ss_bp + 0x0008:word16]
	word16 ax_20
	word16 bx_22
	call SEQ(0x0800, Mem13[ss_bp + 0x0004:word16]) (retsize: 2;)
		uses: ax:ax_19,bx:bx_21,cx:cx_17,sp:sp_12,Top:Top_15
		defs: ax:ax_20,bx:bx_22,Top:Top_16
	cx = wLoc04
	sp_11 = fp - 2
	byte al_45 = SLICE(ax_20, byte, 0)
	branch ax_20 <= 0x0000 l0800_1B27
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B27:
	branch ax_20 == 0x0000 l0800_1B21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B29:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B2A_thunk_fn0800_1AEB:
	word16 bp_35
	word16 cx_36
	selector es_38
	word16 ax_34 = fn0800_1AEB(ss_bp, wLoc02, out cx_36, out bp_35, out es_38)
	cxOut = cx_36
	bxOut = bx_22
	bpOut = bp_35
	esOut = es_38
	return ax_34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B14:
	branch al_45 < 0x00 l0800_1B21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B18:
	ax = ax_20
	bx = bx_22
	branch Mem13[ds:ax_20 + 0x055A:byte] == 0x01 l0800_1B06
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B21:
	word16 cx_71
	word16 ax_73
	word16 bx_75
	call wLoc02 + 0x0003 (retsize: 2;)
		uses: ax:ax_20,bx:bx_22,cx:wLoc02 + 0x0003,sp:fp,Stack +0000:wLoc02,Stack +FFFFFFFE:wLoc04,Top:Top_16
		defs: ax:ax_73,bx:bx_75,cx:cx_71
	cxOut = cx_71
	bxOut = bx_75
	bpOut = bp
	esOut = es
	return ax_73
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1B06_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_1B2C(word32 ss_bp, word16 ax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] Sequence ss:bp:[0..31]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si Top
// Preserved: sp
fn0800_1B2C_entry:
	selector ss = SLICE(ss_bp, selector, 16)
	word16 sp_16 = fp
	int8 Top_102 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B2C:
	word16 dx_136 = 0x0000
	word16 cx_139 = 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B31:
	word16 v8_10 = Mem9[ss_bp - 0x0022:word16] - 0x0001
	Mem11[ss_bp - 0x0022:word16] = v8_10
	byte cl_46 = SLICE(cx_139, byte, 0)
	branch v8_10 < 0x0000 l0800_1B7B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B7B:
	ax = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B36:
	word16 sp_17 = sp_16 - 2
	Mem19[ss:sp_17:word16] = dx_136
	Mem22[ss:sp_17 - 2:word16] = cx_139
	Mem24[ss_bp - 0x0026:word16] = Mem22[ss_bp - 0x0026:word16] + 0x0001
	Mem28[ss:sp_17 - 4:word16] = Mem24[ss_bp + 0x0008:word16]
	word16 sp_29
	word16 ax_33
	call SEQ(0x0800, Mem28[ss_bp + 0x0004:word16]) (retsize: 2;)
		uses: ax:ax_32,cx:cx_21,dx:dx_18,sp:sp_17 - 4,Top:Top_34
		defs: ax:ax_33,sp:sp_29,Top:Top_35
	cl_46 = Mem28[ss:sp_29 + 0x0002:byte] (alias)
	dx_136 = Mem28[ss:sp_29 + 4:word16]
	sp_16 = sp_29 + 6
	ax = ax_33
	byte al_50 = SLICE(ax_33, byte, 0)
	branch ax_33 <= 0x0000 l0800_1B7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B48:
	cl_46 = cl_46 - 0x01
	ax = ax_33 (alias)
	branch cl_46 < 0x01 l0800_1B7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B4C:
	byte ch_112 = al_50 - 0x30
	ax = ax_33 (alias)
	branch al_50 <u 0x30 l0800_1B7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B53:
	branch al_50 <u 0x3A l0800_1B6F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B58:
	byte ch_111 = al_50 - 0x41
	branch al_50 <u 0x41 l0800_1B7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B5D:
	branch al_50 <u 0x47 l0800_1B6C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B62:
	ch_111 = al_50 - 0x61
	branch al_50 <u 0x61 l0800_1B7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B67:
	branch al_50 >=u 0x67 l0800_1B7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B7D:
	branch cl_46 == 0x04 l0800_1B88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B88:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B89_thunk_fn0800_1AEB:
	word16 bp_180
	word16 cx_179
	selector es_181
	fn0800_1AEB(ss_bp, wLoc02, out cx_179, out bp_180, out es_181)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B82:
	call wLoc02 + 0x0003 (retsize: 2;)
		uses: ax:ax_97,cx:wLoc02 + 0x0003,dx:dx_94,sp:fp,Stack +0000:wLoc02,Top:Top_102
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1B2C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B6C:
	ch_112 = ch_111 + 0x0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B6F:
	dx_136 = SEQ(SLICE(dx_136 << 0x0004, byte, 8), SLICE(dx_136 << 0x0004, byte, 0) + ch_112) (alias)
	cx_139 = SEQ(ch_112, cl_46 - 0x01) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __scantod(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: Top
// Preserved: sp
fn0800_1B92_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B92:
	call Mem0[ds:0x05E2:word16] (retsize: 2;)
		uses: sp:fp,Top:0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1B92_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



int8 __scanrslt(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: Top
// Trashed: Top
// Preserved: sp
fn0800_1B96_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B96:
	int8 Top_7
	call Mem0[ds:0x05E4:word16] (retsize: 2;)
		uses: sp:fp,Top:0
		defs: Top:Top_7
	return Top_7
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1B96_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



int8 __scanpop(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: Top
// Trashed: Top
// Preserved: sp
fn0800_1B9A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B9A:
	int8 Top_7
	call Mem0[ds:0x05E6:word16] (retsize: 2;)
		uses: sp:fp,Top:0
		defs: Top:Top_7
	return Top_7
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1B9A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



bool fn0800_1B9E(byte cl, byte bl)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..7] cl:[0..7]
// LiveOut: C
// Trashed: SCZO Top
// Preserved: bx sp
fn0800_1B9E_entry:
	byte bl_8 = SLICE(bx, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B9E:
	bool C_40
	byte bl_16 = bl_8 - 0x30
	branch bl_8 <u 0x30 l0800_1BC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BA4:
	branch bl_8 <=u 0x39 l0800_1BBB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BA9:
	branch bl_8 >u 0x5A l0800_1BB3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB3:
	bl_16 = bl_8 - 0x57
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BAE:
	bl_16 = bl_8 - 0x37
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB6:
	branch bl_16 <=u 0x09 l0800_1BC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BBB:
	branch bl_16 >=u cl l0800_1BC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BC7:
	C_40 = true
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BBF:
	C_40 = false
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BC5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BCB:
	return C_40
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1B9E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 __scantol(word16 ax, word16 cx, word16 dx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, word16 wArg0E, ptr16 & cxOut, ptr16 & edxOut, ptr16 & bxOut, ptr16 & diOut, ptr16 & esOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] dx:[0..15] es:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15] Stack +000E:[0..15]
// LiveOut: ax bx cx di edx es Top
// Trashed: SCZO ax bx cx di dx edx es si Top
// Preserved: bp ds sp ss
fn0800_1BCC_entry:
	int8 Top_127 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BCC:
	byte bLoc07_586 = 0x00
	word16 wLoc06_587 = 0x0000
	word16 sp_130 = fp - 0x000E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BE6:
	word16 wLoc04_629
	word16 ax_530
	word16 v9_27 = wLoc06_587 + 0x0001
	word16 sp_32 = sp_130 - 2
	Mem33[ss:sp_32:word16] = wArg06
	word16 sp_34
	word16 ax_41
	word16 bx_119
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_40,bx:bx_42,cx:cx_38,dx:dx_45,sp:sp_32,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFF4:es,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFB:0x00,Stack +FFFFFFFC:v9_27,Stack +FFFFFFFE:0x0001,Top:Top_47
		defs: ax:ax_41,bx:bx_43,dx:dx_46,sp:sp_34,Top:Top_48
	wLoc06_587 = v9_27
	cx = Mem33[ss:sp_34:word16]
	sp_130 = sp_34 + 2
	word16 ax_113 = ax_41
	byte al_56 = SLICE(ax_41, byte, 0)
	branch ax_41 < 0x0000 l0800_1C5A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BF4:
	word16 ax_117 = (int16) al_56
	ax = bx_119
	bx = ax_117
	branch (SLICE(ax_117, byte, 0) & 0x80) != 0x00 l0800_1C00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BFB:
	branch (Mem33[ds:ax_117 + 0x0241:byte] & 0x01) != 0x00 l0800_1BE6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C00:
	ax_113 = ax_117
	byte al_80 = SLICE(ax_117, byte, 0)
	wArg0A = wArg0A - 0x0001
	branch wArg0A < 0x0001 l0800_1C61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C06:
	branch al_80 == 0x2B l0800_1C11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C0A:
	branch al_80 != 0x2D l0800_1C24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C0E:
	bLoc07_586 = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C11:
	ax_113 = ax_117
	wArg0A = wArg0A - 0x0002
	branch wArg0A < 0x0002 l0800_1C61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C16:
	Mem102[ss:sp_34:word16] = wArg06
	word16 sp_103
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_57,bx:bx_43,cx:cx_50,dx:dx_46,sp:sp_34,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A - 0x0002,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFF4:es,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFB:bLoc07_624,Stack +FFFFFFFC:v9_27 + 0x0001,Stack +FFFFFFFE:0x0001,Top:Top_48
		defs: ax:ax_117,bx:bx_119,dx:dx_124,sp:sp_103,Top:Top_127
	wLoc06_587 = v9_27 + 0x0001
	cx = Mem102[ss:sp_103:word16]
	sp_130 = sp_103 + 2
	ax_113 = ax_117
	branch ax_117 < 0x0000 l0800_1C5A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C5A:
	wLoc04_629 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C24:
	ui32 di_ax_862
	word16 ax_199
	byte al_145 = SLICE(ax_117, byte, 0)
	word16 si_138 = 0x0000
	word16 di_140 = 0x0000
	cx = wArg08
	byte cl_189 = SLICE(wArg08, byte, 0)
	branch wArg08 == 0x0000 l0800_1C7B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C7B:
	wArg08 = 0x000A
	branch al_145 != 0x30 l0800_1CA7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C84:
	word16 v62_150 = wArg0A - 0x0001
	wArg0A = v62_150
	branch v62_150 < 0x0000 l0800_1C78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C89:
	word16 v63_154 = wLoc06_587 + 0x0001
	word16 sp_159 = sp_130 - 2
	Mem160[ss:sp_159:word16] = wArg06
	word16 sp_161
	word16 ax_167
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_861,bx:bx_168,cx:wArg08,dx:dx_171,sp:sp_159,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:0x000A,Stack +000C:v62_150,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFF4:es,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFB:bLoc07_646,Stack +FFFFFFFC:v63_154,Stack +FFFFFFFE:0x0001,Top:Top_173
		defs: ax:ax_167,bx:bx_169,dx:dx_172,sp:sp_161,Top:Top_174
	wLoc06_587 = v63_154
	byte al_179 = SLICE(ax_167, byte, 0)
	cx = Mem160[ss:sp_161:word16]
	sp_130 = sp_161 + 2
	wArg08 = 0x0008
	branch al_179 == 0x78 l0800_1CA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C9C:
	di_ax_862 = (uint32) (uint16) ax_167 (alias)
	branch al_179 != 0x58 l0800_1CCD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CA0:
	ax_199 = ax_167
	wArg08 = 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C2D:
	ax_113 = ax_117 (alias)
	branch wArg08 >u 0x0024 l0800_1C61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C32:
	ax_113 = ax_117 (alias)
	cx = wArg08 (alias)
	branch cl_189 <u 0x02 l0800_1C61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C37:
	ax_199 = ax_117 (alias)
	branch al_145 != 0x30 l0800_1CA7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CA7:
	cx = wArg08
	ax_113 = ax_117
	branch fn0800_1B9E(SLICE(wArg08, byte, 0), ax_117) l0800_1C61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C61:
	wLoc04_629 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C66:
	word16 sp_223 = sp_130 - 2
	Mem224[ss:sp_223:word16] = wArg06
	Mem231[ss:sp_223 - 2:word16] = ax_113
	word16 sp_232
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:ax_226,bx:bx_252,cx:cx_245,dx:dx_260,sp:sp_223 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_703,Stack +000C:wArg0A_699,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFF4:es,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFB:bLoc07_682,Stack +FFFFFFFC:wLoc06_686,Stack +FFFFFFFE:wLoc04_690,Top:Top_265
		defs: sp:sp_232,Top:Top_269
	cx = Mem231[ss:sp_232 + 2:word16]
	sp_130 = sp_232 + 4
	wLoc06_587 = wLoc06_587 - 0x0001
	ax_530 = 0x0000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CB1:
	ax_199 = 0x0000
	si_138 = ax_117
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C3B:
	cx = wArg08 (alias)
	branch cl_189 != 0x10 l0800_1CA5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C40:
	word16 v30_285 = wArg0A - 0x0001
	wArg0A = v30_285
	branch v30_285 < 0x0000 l0800_1C78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C78:
	cx = wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C45:
	word16 v31_289 = wLoc06_587 + 0x0001
	word16 sp_293 = sp_130 - 2
	Mem294[ss:sp_293:word16] = wArg06
	word16 sp_295
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_861,bx:bx_168,cx:wArg08,dx:dx_171,sp:sp_293,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:v30_285,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFF4:es,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFB:bLoc07_646,Stack +FFFFFFFC:v31_289,Stack +FFFFFFFE:0x0001,Top:Top_173
		defs: ax:ax_298,bx:bx_299,dx:dx_300,sp:sp_295,Top:Top_301
	wLoc06_587 = v31_289
	byte al_305 = SLICE(ax_199, byte, 0)
	cx = Mem294[ss:sp_295:word16]
	sp_130 = sp_295 + 2
	branch al_305 == 0x78 l0800_1CA5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C53:
	branch al_305 == 0x58 l0800_1CA5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CA5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C57:
	di_ax_862 = (uint32) (uint16) ax_199 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CCD:
	word16 ax_314 = SLICE(di_ax_862, word16, 0)
	cx = wArg08
	word16 ax_325 = ax_314
	branch fn0800_1B9E(SLICE(wArg08, byte, 0), ax_314) l0800_1CB4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CB4:
	int32 dx_ax_331 = wArg08 *u si_138
	ui32 di_si_579 = di_ax_862 + dx_ax_331
	ax_199 = SLICE(dx_ax_331, word16, 0) (alias)
	dx = SLICE(dx_ax_331, word16, 16) (alias)
	si_138 = SLICE(di_si_579, word16, 0) (alias)
	di_140 = SLICE(di_si_579, word16, 16) (alias)
	branch di_140 != 0x0000 l0800_1CEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CEA:
	word16 v47_344 = wArg0A - 0x0001
	wArg0A = v47_344
	branch v47_344 < 0x0000 l0800_1D0F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CEF:
	word16 sp_353 = sp_130 - 2
	Mem354[ss:sp_353:word16] = wArg06
	word16 v48_348 = wLoc06_587 + 0x0001
	word16 sp_355
	word16 ax_362
	word16 bx_364
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_361,bx:bx_363,cx:cx_359,dx:dx_366,sp:sp_353,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_709,Stack +000C:v47_344,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFF4:es,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFB:bLoc07_646,Stack +FFFFFFFC:v48_348,Stack +FFFFFFFE:0x0001,Top:Top_368
		defs: ax:ax_362,bx:bx_364,dx:dx_367,sp:sp_355,Top:Top_369
	wLoc06_587 = v48_348
	sp_130 = sp_355 + 2
	ax_325 = ax_362
	bx_119 = bx_364
	branch fn0800_1B9E(SLICE(wArg08, byte, 0), ax_362) l0800_1CD9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CD9:
	int32 dx_ax_388 = wArg08 *u si_138
	int32 dx_ax_397 = wArg08 *u di_140
	ui32 ax_si_582 = SEQ(SLICE(dx_ax_397, word16, 0), ax_362) + dx_ax_388
	word16 ax_402 = SLICE(ax_si_582, word16, 16)
	byte dl_410 = SLICE(dx_ax_397, byte, 16) + SLICE(dx_ax_397, byte, 24) + (ax_402 <u 0x0000)
	cx = SLICE(dx_ax_388, word16, 16)
	si_138 = SLICE(ax_si_582, word16, 0) (alias)
	ax_199 = SLICE(dx_ax_388, word16, 0)
	di_140 = ax_402
	dx = SEQ(SLICE(dx_ax_397, byte, 24), dl_410) (alias)
	branch dl_410 != 0x00 l0800_1D32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D32:
	byte al_416 = bLoc07_586 + 0xFF
	wLoc04_629 = 0x0002
	ax_530 = SEQ(SLICE(cond(al_416), bool, 1) + 0xFF, al_416) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CBE:
	word16 v39_432 = wArg0A - 0x0001
	wArg0A = v39_432
	branch v39_432 < 0x0000 l0800_1D0F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CC3:
	word16 v40_436 = wLoc06_587 + 0x0001
	word16 sp_444 = sp_130 - 2
	Mem445[ss:sp_444:word16] = wArg06
	word16 sp_446
	word16 ax_468
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_461,bx:bx_469,cx:cx_457,dx:dx_477,sp:sp_444,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_773,Stack +000C:v39_432,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFF4:es,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFB:bLoc07_646,Stack +FFFFFFFC:v40_436,Stack +FFFFFFFE:0x0001,Top:Top_481
		defs: ax:ax_468,bx:bx_472,dx:dx_480,sp:sp_446,Top:Top_485
	wLoc06_587 = v40_436
	sp_130 = sp_446 + 2
	di_ax_862 = SEQ(di_140, ax_468) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CD7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D03:
	word16 sp_494 = sp_130 - 2
	Mem495[ss:sp_494:word16] = wArg06
	Mem498[ss:sp_494 - 2:word16] = ax_325
	word16 sp_499
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:ax_497,bx:bx_506,cx:wArg08_709,dx:dx_509,sp:sp_494 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_709,Stack +000C:wArg0A_790,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFF4:es,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFB:bLoc07_646,Stack +FFFFFFFC:wLoc06_786,Stack +FFFFFFFE:0x0001,Top:Top_512
		defs: sp:sp_499,Top:Top_513
	cx = Mem498[ss:sp_499 + 2:word16]
	sp_130 = sp_499 + 4
	wLoc06_587 = wLoc06_587 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D0F:
	wLoc04_629 = 0x0001
	ax_530 = si_138
	branch bLoc07_586 == 0x00 l0800_1D1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D18:
	ax_530 = -si_138
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D1F:
	Mem554[ds:wArg0C:word16] = Mem547[ds:wArg0C:word16] + wLoc06_587
	Mem558[ds:wArg0E:word16] = wLoc04_629
	selector es_562 = Mem558[ss:sp_130:selector]
	word16 sp_563 = sp_130 + 2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D48:
	word16 di_564 = Mem558[ss:sp_563:word16]
	cxOut = cx
	edxOut = <invalid>
	bxOut = wLoc04_629
	diOut = di_564
	esOut = es_562
	TopOut = Top_127
	return ax_530
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1BCC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _tell(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_1D4E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D4E:
	word16 dx_42
	_lseek(ds, wArg02, 0x00000000, 0x01, out dx_42)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D63:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1D4E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



