void fn0800_01FA()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: bp sp
fn0800_01FA_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_01FA:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_01FA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp -2(fp):bp



void fn0800_01FF()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: bp sp
fn0800_01FF_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_01FF:
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_01FF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp -2(fp):bp



void fn0800_0222()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: bp sp
fn0800_0222_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0222:
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0222_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp -2(fp):bp



void fn0800_0245()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: bp sp
fn0800_0245_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0245:
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0245_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp -2(fp):bp



void main(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
main_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -000E(16) Local -0010(16)

l0800_0265:
	word16 di_12
	word16 bx_13 = fn0800_0E4B(ds, 0x0194, out di_12)
	fn0800_16D4(bx_13, di_12, ds, 0x01B0)
	word16 di_35
	fn0800_0E4B(ds, 0x01B4, out di_35)
	word16 wLoc08_39 = 0x0000
	word16 wLoc0A_40 = 0x0001
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(8) Local -000E(16)

l0800_02A7:
	branch wLoc08_39 < wLoc04 l0800_029C
// DataOut: ax ds ss
// DataOut (flags): SZO
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> cx:<invalid> dx:<invalid> al:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(8) Local -000E(16)

l0800_02B2:
	branch wLoc08_39 > wLoc04 l0800_02B9
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> cx:<invalid> dx:<invalid> al:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(8) Local -000E(16)

l0800_02B4:
	branch wLoc0A_40 <=u wLoc06 l0800_029C
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> cx:<invalid> dx:<invalid> al:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(8) Local -000E(16)

l0800_029C:
	fn0800_0245()
	wLoc0A_40 = wLoc0A_40 + 0x0001
	wLoc08_39 = v14
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> cx:<invalid> dx:<invalid> al:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(8) Local -000E(16)

l0800_02B9:
	word16 di_68
	fn0800_0E4B(ds, 0x01CE, out di_68)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> cx:<invalid> dx:<invalid> al:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> cx:0x01CE dx:<invalid> di:<invalid> si:<invalid> al:<invalid> es:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):0x01CE -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp



word16 fn0800_0E4B(selector ds, word16 wArg02, ptr16 diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bx di
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_0E4B_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_0E4B:
	word16 di_19
	word16 bx_20 = fn0800_1073(ds, wArg02, out di_19)
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_0E62:
	return bx_20
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> di:<invalid> si:<invalid> al:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -10(fp):fp + 0x0004 -8(fp):<invalid> -6(fp):0x0352 -4(fp):0x0F81 -2(fp):bp

fn0800_0E4B_exit:
// DataOut: bx di
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:<invalid> si:<invalid> al:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -10(fp):fp + 0x0004 -8(fp):<invalid> -6(fp):0x0352 -4(fp):0x0F81 -2(fp):bp



word16 fn0800_1073(selector ds, word16 wArg04, ptr16 diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bx di
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0004(16)
fn0800_1073_entry:
// DataOut: bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16)

l0800_1073:
	byte bLoc57_109 = 0x50
// DataOut: bp bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0057(8) Stack +0004(16)

l0800_10CD:
	word16 sp_161 = fp - 0x00A0
	word16 di_107 = fp - 0x0056
	word16 si_105 = wArg04
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x009E bp:fp - 0x0002 -158(fp):di -156(fp):si -90(fp):0x0000 -87(fp):0x50 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(8)

l0800_10DD:
	byte al_40 = Mem0[ds:si_105:byte]
	si_105 = si_105 + 0x0001
	byte al_101 = al_40
	ax = DPB(ax, al_40, 0) (alias)
	branch al_40 == 0x00 l0800_10F3
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -160(fp):es -158(fp):di -156(fp):si -152(fp):fp - 0x0056 -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(8)

l0800_10F3:
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -160(fp):es -158(fp):di -156(fp):si -152(fp):fp - 0x0056 -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0)

l0800_10E2:
	branch al_40 == 0x25 l0800_10F6
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -160(fp):es -158(fp):di -156(fp):si -152(fp):fp - 0x0056 -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(8)

l0800_10F6:
	al_101 = Mem0[ds:si_105:byte]
	ax = DPB(ax, al_101, 0) (alias)
	si_105 = si_105 + 0x0001
	branch al_101 == 0x25 l0800_10E6
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -160(fp):es -158(fp):di -156(fp):si -152(fp):fp - 0x0056 -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(8) Local -008C(16)

l0800_10FF:
	byte bLoc8F_128 = 0x00
// DataOut: al bp ch ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -160(fp):es -158(fp):di -156(fp):si -152(fp):fp - 0x0056 -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16)

l0800_1120:
	word16 ax_139 = DPB(ax, 0x00, 8)
	byte bl_143 = (byte) ax_139
	byte dl_141 = (byte) ax_139
	word16 bx_145 = DPB(ax_139, bl_143 - 0x20, 0)
	branch bl_143 >=u 0x80 l0800_1175
// DataOut: bp bx ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ax:<invalid> es:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16)

l0800_112E:
	word16 bx_182 = DPB(ax_139, Mem0[ds:bx_145 + 0x04F9:byte], 0)
	branch bx_182 <=u 0x0017 l0800_113C
// DataOut: ax bp ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16)

l0800_113C:
	switch (bx_182 << 0x0001) { l0800_1190 }
// DataOut: bp ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16)

l0800_1190:
	branch true l0800_1175
// DataOut: bp ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16)

l0800_1175:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -0098(16)

l0800_1195:
	branch bLoc8F_128 == 0x2B l0800_11A0
// DataOut: bp ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16)

l0800_119C:
	bLoc8F_128 = dl_141
// DataOut: bp ch ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16)

l0800_11A0:
// DataOut: bp ch ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16)

l0800_111F:
	ax = DPB(ax_139, Mem0[ds:si_105:byte], 0) (alias)
	si_105 = si_105 + 0x0001
// DataOut: al bp ch ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16)

l0800_1139:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -0098(16)

l0800_1560:
	word16 si_154 = si_105
	byte al_156 = 0x25
// DataOut: al bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0)

l0800_156A:
	bx = fn0800_1099(al_156, fp - 0x0002, di_107, ds, out di_107)
	byte al_167 = Mem0[ds:si_154:byte]
	sp_161 = sp_161 + 0xFFFE
	si_154 = si_154 + 0x0001
	al_156 = al_167
	branch al_167 != 0x00 l0800_156A
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0)

l0800_1572:
	branch bLoc57_109 >= 0x50 l0800_157B
	branch bLoc57_109 >= 0x50 l0800_157B
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_1578:
	word16 di_93
	fn0800_10A1(fp - 0x0002, di_107, out di_93)
	word16 di_95
	bx = fn0800_10A1(fp - 0x0002, di_93, out di_95)
// DataOut: bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_157B:
	word16 sp_80 = sp_161 + 0x0002
	branch 0x0000 == 0x0000 l0800_1589
// DataOut: bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_1589:
// DataOut: bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_1582:
// DataOut: bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_158E:
	word16 di_84
	*diOut = Mem0[ss:sp_80:word16]
	return bx
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp

fn0800_1073_exit:
// DataOut: bx di
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp

l0800_10E6:
	Mem106[ds:di_107:byte] = al_101
	byte v15_108 = bLoc57_109 - 0x01
	di_107 = di_107 + 0x0001
	bLoc57_109 = v15_108
	branch v15_108 > 0x00 l0800_10DD
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -160(fp):es -158(fp):di -156(fp):si -152(fp):fp - 0x0056 -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(8)

l0800_10EE:
	bx = fn0800_10A1(fp - 0x0002, di_107, out di_107)
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -160(fp):es -158(fp):di -156(fp):si -152(fp):fp - 0x0056 -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(8)



word16 fn0800_1099(byte al, word16 bp, word16 di, selector ds, ptr16 diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bp di ds ss
// LiveOut: bx di
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esp rax rbx rcx rdi rdx rsp sp spl
// Preserved: sp
fn0800_1099_entry:
// DataOut: al bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_1099:
	Mem3[ds:di:byte] = al
	byte v9_9 = Mem3[ss:bp - 0x0055:byte] - 0x01
	Mem10[ss:bp - 0x0055:byte] = v9_9
	word16 di_6
	*diOut = di + 0x0001
	branch v9_9 <= 0x00 l0800_10CC_in_fn0800_1099
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_10CC_in_fn0800_1099:
	return bx
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di + 0x0001

l0800_109F_thunk_fn0800_10A1:
	word16 di_15
	return fn0800_10A1(bp, di + 0x0001, out di_15)
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di + 0x0001

fn0800_1099_exit:
// DataOut: bx di
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid>



word16 fn0800_10A1(word16 bp, word16 di, ptr16 diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ss
// LiveOut: bx di sp
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esp rax rbx rcx rdi rdx rsp sp spl
// Preserved:
fn0800_10A1_entry:
// DataOut: bp di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_10A1:
	word16 sp_29
	word16 bx_30
	selector ss_31
	word16 cx_32
	word16 dx_33
	selector es_34
	word16 bp_35
	word16 ax_36
	word16 di_37
	byte SCZO_38
	selector cs_39
	byte SZO_40
	byte C_41
	byte Z_42
	call SEQ(cs, Mem0[ss:bp + 0x000A:word16]) (retsize: 2; depth: 16)
		uses: ax_19,bp,bx,cs,cx,di_17,dx,es,SCZO_18,sp_24,ss,wLoc02_4,wLoc04_7,wLoc06_10,wLoc08_13,wLoc0A_21,wLoc0C_23,wLoc0E_27
		defs: ax_36,bp_35,bx_30,C_41,cs_39,cx_32,di_37,dx_33,es_34,SCZO_38,sp_29,ss_31,SZO_40,Z_42
	branch ax_36 != 0x0000 l0800_10BE
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16)

l0800_10B9:
	Mem61[ss_31:bp_35 - 0x0002:word16] = 0x0001
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E ax:bp - 0x0054 | bp - 0x0054 di:di - (bp - 0x0054) -14(fp):<invalid> -12(fp):di - (bp - 0x0054) -10(fp):bp - 0x0054 -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx
// LocalsOut: fp(16) Local -0008(16)

l0800_10BE:
	Mem47[ss_31:bp_35 - 0x0055:byte] = 0x50
	Mem49[ss_31:bp_35 - 0x0058:word16] = Mem47[ss_31:bp_35 - 0x0058:word16] + di_37
	word16 di_51
	*diOut = bp_35 - 0x0054
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E ax:bp - 0x0054 | bp - 0x0054 di:di - (bp - 0x0054) -14(fp):<invalid> -12(fp):di - (bp - 0x0054) -10(fp):bp - 0x0054 -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

l0800_10CC:
	return es
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 ax:bp - 0x0054 | bp - 0x0054 di:bp - 0x0054 es:<invalid> dx:di - (bp - 0x0054) cx:bp - 0x0054 bx:es -14(fp):<invalid> -12(fp):di - (bp - 0x0054) -10(fp):bp - 0x0054 -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

fn0800_10A1_exit:
// DataOut: bx di sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 ax:bp - 0x0054 | bp - 0x0054 di:bp - 0x0054 es:<invalid> dx:di - (bp - 0x0054) cx:bp - 0x0054 bx:es -14(fp):<invalid> -12(fp):di - (bp - 0x0054) -10(fp):bp - 0x0054 -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx



void fn0800_16D4(word16 bx, word16 di, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx di ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx eax ebx ecx rax rbx rcx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_16D4_entry:
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_16D4:
	fn0800_16F3(bx, di, ds, 0x0342, wArg02)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_16F1:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> al:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> -12(fp):0x07F2 -10(fp):0x1D65 -8(fp):0x0342 -6(fp):<invalid> -4(fp):fp + 0x0004 -2(fp):bp

fn0800_16D4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> al:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> -12(fp):0x07F2 -10(fp):0x1D65 -8(fp):0x0342 -6(fp):<invalid> -4(fp):fp + 0x0004 -2(fp):bp



void fn0800_16F3(word16 bx, word16 di, selector ds, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx di ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx eax ebx ecx rax rbx rcx
// Preserved: bp di es si sp
// Stack args: Stack +0008(16)
fn0800_16F3_entry:
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0008(16)

l0800_16F3:
	word16 bp_154 = fp - 0x0002
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0028(8) Stack +0008(16)

l0800_1721:
	word16 si_157 = wArg08
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0030 bp:fp - 0x0002 -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_1726:
	byte al_57 = Mem0[ds:si_157:byte]
	word16 si_58 = si_157 + 0x0001
	branch al_57 == 0x00 l0800_1788
// DataOut: al bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_1788:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_172B:
	branch al_57 == 0x25 l0800_178B
// DataOut: al bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_178B:
	word16 ax_348 = (int16) Mem0[ds:si_58:byte]
	branch ax_348 < 0x0000 l0800_17E6
// DataOut: di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_179E:
	branch DPB(bx, 0x00, 8) <=u 0x0015 l0800_17AE
// DataOut: ax di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):0x0000 -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_17AE:
	switch (ax_348) { l0800_17E6 }
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:0x00 cx:<invalid> bx:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):0x0000 -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_17E6:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):0x0000 -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_17AB:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:0x00 cx:<invalid> bx:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):0x0000 -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_172F:
	word16 sp_153
	byte SCZO_156
	word16 di_158
	selector es_159
	byte D_160
	byte al_161
	byte SZO_163
	byte C_164
	byte Z_165
	word16 ax_166
	word16 cx_168
	byte SO_169
	byte S_170
	byte bl_172
	byte bh_173
	byte CZ_174
	call SEQ(cs, Mem0[ss:bp_154 + 0x0004:word16]) (retsize: 2; depth: 54)
		uses: al_59,ax_144,bh_39,bl_40,bLoc2B,bp_54,bx_41,C_63,cs_44,cx_48,CZ_38,D_46,di_145,ds_45,es_50,S_42,SCZO_99,si_58,SO_43,sp_149,ss_47,SZO_148,wLoc02_4,wLoc24,wLoc28_147,wLoc2A_14,wLoc2E_10,wLoc30_13,wLoc32_18,wLoc34_150,wLoc36_37,Z_100
		defs: al_161,ax_166,bh_173,bl_172,bp_154,bx_171,C_164,cs_167,cx_168,CZ_174,D_160,di_158,ds_162,es_159,S_170,SCZO_156,si_157,SO_169,sp_153,ss_155,SZO_163,Z_165
	word16 ax_177 = ax_166
	branch ax_166 < 0x0000 l0800_1764
// DataOut: al ax bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_173F:
	branch di_158 < 0x0000 l0800_1775
// DataOut: al ax bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_1743:
	branch Mem0[ds:di_158 + 0x055A:byte] != 0x01 l0800_1775
// DataOut: al ax bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_1775:
	branch ax_166 == di_158 l0800_1726
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_1779:
	word16 sp_216
	word16 bp_217
	selector ss_218
	byte SCZO_219
	word16 si_220
	word16 di_221
	selector es_222
	byte D_223
	byte al_224
	selector ds_225
	byte SZO_226
	byte C_227
	byte Z_228
	word16 ax_229
	selector cs_230
	word16 cx_231
	byte SO_232
	byte S_233
	word16 bx_234
	byte bl_235
	byte bh_236
	byte CZ_237
	call SEQ(cs, Mem0[ss:bp_154 + 0x0006:word16]) (retsize: 2; depth: 56)
		uses: al_178,ax_177,bh_173,bl_172,bLoc2B,bp_154,bx_171,C_209,cs_167,cx_175,CZ_174,D_160,di_206,ds_162,es_159,S_208,SCZO_210,si_157,SO_180,sp_214,ss_155,SZO_207,wLoc02_4,wLoc24,wLoc28_147,wLoc2A_14,wLoc2E_10,wLoc30_13,wLoc32_18,wLoc34_213,wLoc36_215,Z_211
		defs: al_224,ax_229,bh_236,bl_235,bp_217,bx_234,C_227,cs_230,cx_231,CZ_237,D_223,di_221,ds_225,es_222,S_233,SCZO_219,si_220,SO_232,sp_216,ss_218,SZO_226,Z_228
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_174A:
	byte bl_269 = (byte) ax_177
	word16 bx_272 = DPB(ax_177, bl_269, 0)
	branch bl_269 < 0x00 l0800_1767
// DataOut: ax bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_174F:
	branch Mem0[ds:bx_272 + 0x055A:byte] != 0x01 l0800_1767
// DataOut: ax bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_1767:
	word16 sp_280
	byte SCZO_283
	word16 di_285
	selector es_286
	byte D_287
	byte al_288
	byte SZO_290
	byte C_291
	byte Z_292
	word16 ax_293
	word16 cx_295
	byte SO_296
	byte S_297
	byte bl_299
	byte bh_300
	byte CZ_301
	call SEQ(cs, Mem0[ss:bp_154 + 0x0006:word16]) (retsize: 2; depth: 56)
		uses: al_267,ax_266,bh_270,bl_271,bLoc2B,bp_263,bx_272,C_275,cs_252,cx_257,CZ_249,D_255,di_261,ds_254,es_259,S_274,SCZO_258,si_262,SO_251,sp_278,ss_256,SZO_273,wLoc02_4,wLoc24,wLoc28_247,wLoc2A_14,wLoc2E_10,wLoc30_13,wLoc32_18,wLoc34_277,wLoc36_279,Z_253
		defs: al_288,ax_293,bh_300,bl_299,bp_281,bx_298,C_291,cs_294,cx_295,CZ_301,D_287,di_285,ds_289,es_286,S_297,SCZO_283,si_284,SO_296,sp_280,ss_282,SZO_290,Z_292
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_1756:
	word16 sp_316
	byte SCZO_319
	word16 si_320
	word16 di_321
	selector es_322
	byte D_323
	byte al_324
	byte SZO_326
	byte C_327
	byte Z_328
	word16 ax_329
	word16 cx_331
	byte SO_332
	byte S_333
	word16 bx_334
	byte bl_335
	byte bh_336
	byte CZ_337
	call SEQ(cs, Mem0[ss:bp_154 + 0x0004:word16]) (retsize: 2; depth: 54)
		uses: al_267,ax_266,bh_270,bl_271,bLoc2B,bp_263,bx_272,C_275,cs_252,cx_257,CZ_249,D_255,di_261,ds_254,es_259,S_274,SCZO_309,si_262,SO_251,sp_314,ss_256,SZO_313,wLoc02_4,wLoc24,wLoc28_312,wLoc2A_14,wLoc2E_10,wLoc30_13,wLoc32_18,wLoc34_315,wLoc36_37,Z_310
		defs: al_324,ax_329,bh_336,bl_335,bp_317,bx_334,C_327,cs_330,cx_331,CZ_337,D_323,di_321,ds_325,es_322,S_333,SCZO_319,si_320,SO_332,sp_316,ss_318,SZO_326,Z_328
	ax_177 = ax_329
	branch ax_329 > 0x0000 l0800_174A
// DataOut: al bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_1764:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_1AEB:
	word16 sp_111
	word16 bp_112
	selector ss_113
	byte SCZO_114
	word16 si_115
	word16 di_116
	selector es_117
	byte D_118
	byte al_119
	selector ds_120
	byte SZO_121
	byte C_122
	byte Z_123
	word16 ax_124
	selector cs_125
	word16 cx_126
	byte SO_127
	byte S_128
	word16 bx_129
	byte bl_130
	byte bh_131
	byte CZ_132
	call SEQ(cs, Mem0[ss:bp_154 + 0x0006:word16]) (retsize: 2; depth: 56)
		uses: al_59,ax_108,bh_39,bl_40,bLoc2B_102,bp_54,bx_41,C_63,cs_44,cx_48,CZ_38,D_46,di_52,ds_45,es_50,S_42,SCZO_99,si_58,SO_43,sp_109,ss_47,SZO_61,wLoc02_4,wLoc24_101,wLoc28_104,wLoc2A_14,wLoc2E_10,wLoc30_13,wLoc32_18,wLoc34_107,wLoc36_110,Z_100
		defs: al_119,ax_124,bh_131,bl_130,bp_112,bx_129,C_122,cs_125,cx_126,CZ_132,D_118,di_116,ds_120,es_117,S_128,SCZO_114,si_115,SO_127,sp_111,ss_113,SZO_121,Z_123
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:0x00 bx:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):0x0000 -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_1AFF:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):<invalid> -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_1B8C:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0030 bp:fp - 0x0002 si:<invalid> al:<invalid> es:es ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):<invalid> -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>

fn0800_16F3_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si al:<invalid> es:es ax:<invalid> di:di cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):<invalid> -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>



