void __exit(word16 cx, word16 bx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ss:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_0121_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0121_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0121:
	selector ds_5 = Mem0[0x0800:0x01F8:selector]
	word16 dx_7
	word16 sp_9
	call SEQ(0x0800, Mem0[ds_5:0x05DC:word16]) (retsize: 2;)
		uses: ax:__restorezero(ds_5, out dx_7),bx:bx,cx:cx,dx:dx_7,sp:fp - 2,Top:0
		defs: sp:sp_9
	byte al_25 = 0x00
	byte ah_31 = 0x00
	word16 si_22 = 0x0000
	word16 cx_23 = 0x002F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0137:
	al_25 = al_25 + Mem0[ds_5:si_22:byte]
	ah_31 = ah_31 + (al_25 <u 0x00)
	word16 ax_41 = DPB((word16) al_25, ah_31, 8)
	si_22 = si_22 + 0x0001
	cx_23 = cx_23 - 0x0001
	branch cx_23 != 0x0000 l0800_0137
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_013F:
	branch ax_41 == 0x0D37 l0800_014F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0145:
	fn0800_01DA(SEQ(ds_5, 0x002F), 0x0019)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_014F:
	msdos_terminate(Mem0[ss:sp_9 + 0x0002:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_0162(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15]
// LiveOut:
// Trashed: ax bx dx es Top
// Preserved: ds sp
fn0800_0162_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0162:
	word32 es_bx_10 = msdos_get_interrupt_vector(0x00)
	Mem12[ds:0x0074:word16] = (word16) es_bx_10
	Mem14[ds:0x0076:word16] = SLICE(es_bx_10, selector, 16)
	word32 es_bx_17 = msdos_get_interrupt_vector(0x04)
	Mem19[ds:0x0078:word16] = (word16) es_bx_17
	Mem21[ds:0x007A:word16] = SLICE(es_bx_17, selector, 16)
	word32 es_bx_24 = msdos_get_interrupt_vector(0x05)
	Mem26[ds:0x007C:word16] = (word16) es_bx_24
	Mem28[ds:0x007E:word16] = SLICE(es_bx_24, selector, 16)
	word32 es_bx_31 = msdos_get_interrupt_vector(0x06)
	Mem33[ds:0x0080:word16] = (word16) es_bx_31
	Mem35[ds:0x0082:word16] = SLICE(es_bx_31, selector, 16)
	msdos_set_interrupt_vector(0x00, SEQ(cs, 0x0158))
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0162_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 __restorezero(selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: ax dx
// Trashed: ax dx Top
// Preserved: ds sp
fn0800_01A5_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01A5:
	msdos_set_interrupt_vector(0x00, Mem7[ds:0x0074:segptr32])
	msdos_set_interrupt_vector(0x04, Mem16[ds:0x0078:segptr32])
	msdos_set_interrupt_vector(0x05, Mem25[ds:0x007C:segptr32])
	ptr32 ds_dx_36 = Mem34[ds:0x0080:segptr32]
	msdos_set_interrupt_vector(0x06, ds_dx_36)
	dxOut = (word16) ds_dx_36
	return 0x2506
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_01A5_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_01DA(char * ds_dx, word16 cx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] Sequence ds:dx:[0..31]
// LiveOut: bx
// Trashed: C ax bx Top
// Preserved: sp
fn0800_01DA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01DA:
	word16 ax_10
	msdos_write_file(0x0002, cx, ds_dx, out ax_10)
	return 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_01DA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _abort()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15]
// LiveOut:
// Trashed:
// Preserved:
l0800_01F8_thunk__f3:
	_f3()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_01E2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_01E2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01E2:
	__exit(0x001E, fn0800_01DA(SEQ(Mem0[0x0800:0x01F8:selector], 0x0056), 0x001E))
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_01E9(word16 cx, word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] dx:[0..15] ss:[0..15]
// LiveOut:
// Trashed:
// Preserved:
l0800_01F8_thunk__f3:
	_f3()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_01E9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_01E9_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01E9:
	__exit(cx, fn0800_01DA(SEQ(Mem0[0x0800:0x01F8:selector], dx), cx))
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _f3()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: bp sp
_f3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01FA:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_f3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _f2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: bp sp
_f2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01FF:
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_f2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_0222()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: bp sp
fn0800_0222_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0222:
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0222_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _f0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: bp sp
_f0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0245:
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_f0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _main(word16 cx, word16 dx, word16 bx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] es:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZDO ax bp bx cx di dx es si sp Top
// Preserved:
_main_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0265:
	word16 di_20
	word16 bp_36
	word16 bx_37
	selector es_41
	word16 dx_40 = _scanf(0x0194, dx, bx, _printf(cx, dx, bx, es, ds, 0x0194, out di_20), di_20, es, ds, 0x01B0, out bx_37, out bp_36, out es_41)
	word16 sp_43 = <invalid>
	word16 cx_52 = Mem34[ss:sp_43 + 2:word16]
	Mem56[ss:sp_43 + 2:word16] = Mem34[ss:bp_36 - 0x0002:word16]
	Mem59[ss:sp_43:word16] = Mem56[ss:bp_36 - 0x0004:word16]
	Mem62[ss:sp_43 - 2:word16] = 0x01B4
	_printf(cx_52, dx_40, bx_37, es_41, ds, Mem62[ss:sp_43 - 2:word16], out di_135)
	Mem73[ss:bp_36 - 0x0006:word16] = 0x0000
	Mem74[ss:bp_36 - 0x0008:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02A7:
	word16 dx_78 = Mem77[ss:bp_36 - 0x0006:word16]
	word16 ax_79 = Mem77[ss:bp_36 - 0x0008:word16]
	branch dx_78 < Mem77[ss:bp_36 - 0x0002:word16] l0800_029C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02B2:
	branch dx_78 > Mem77[ss:bp_36 - 0x0002:word16] l0800_02B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02B4:
	branch ax_79 <=u Mem77[ss:bp_36 - 0x0004:word16] l0800_029C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_029C:
	_f0()
	word16 v14_88 = Mem77[ss:bp_36 - 0x0008:word16] + 0x0001
	Mem89[ss:bp_36 - 0x0008:word16] = v14_88
	Mem93[ss:bp_36 - 0x0006:word16] = Mem89[ss:bp_36 - 0x0006:word16] + (v14_88 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02B9:
	Mem101[ss:sp_43 + 0x0002:word16] = 0x01CE
	_printf(cx_52, dx_78, bx_37, es_41, ds, Mem101[ss:sp_43 + 0x0002:word16], out di_136)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_main_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 __IOERROR(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax Top
// Preserved: bp si sp
fn0800_02C5_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02C5:
	word16 si_17
	word16 si_13 = wArg02
	branch wArg02 < 0x0000 l0800_02E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02E4:
	si_17 = -wArg02
	branch si_17 >u 0x0023 l0800_02D5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02EB:
	Mem21[ds:0x01D8:word16] = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02D0:
	branch wArg02 <=u 0x0058 l0800_02D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02D5:
	si_13 = 0x0057
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02D8:
	Mem28[ds:0x01D8:word16] = si_13
	si_17 = (int16) Mem28[ds:si_13 + 0x01DA:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02F1:
	Mem37[ds:0x0094:word16] = si_17
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_02FB:
	return 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_02C5_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _exit(word16 cx, word16 bx, word16 bp, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] bx:[0..15] cx:[0..15] ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_0301_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0301_entry:
	int8 Top_29 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0301:
	word16 sp_21 = fp - 2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0310:
	word16 ax_11 = Mem10[ds:0x023E:word16]
	Mem13[ds:0x023E:word16] = Mem10[ds:0x023E:word16] - 0x0001
	branch ax_11 != 0x0000 l0800_0306
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0306:
	word16 bx_18 = Mem13[ds:0x023E:word16]
	call SEQ(0x0800, Mem13[ds:(bx_18 << 0x0001) + 0x05E8:word16]) (retsize: 2;)
		uses: ax:ax_11,bx:bx_18 << 0x0001,cx:cx_26,sp:sp_21,Stack +0000:bp,Stack +0004:wArg02,Top:Top_29
		defs: bx:bx_28,cx:cx_27,sp:sp_22,Top:Top_30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_031B:
	word16 sp_32
	word16 ax_33
	word16 cx_34
	word16 bx_37
	int8 Top_38
	call SEQ(0x0800, Mem13[ds:0x0234:word16]) (retsize: 2;)
		uses: ax:ax_11,bx:bx_35,cx:cx_26,sp:sp_21,Stack +0000:bp,Stack +0004:wArg02,Top:Top_29
		defs: ax:ax_33,bx:bx_37,cx:cx_34,sp:sp_32,Top:Top_38
	word16 sp_40
	word16 ax_41
	word16 cx_42
	word16 bx_43
	int8 Top_44
	call SEQ(0x0800, Mem13[ds:0x0236:word16]) (retsize: 2;)
		uses: ax:ax_33,bx:bx_37,cx:cx_34,sp:sp_32,Stack +0000:bp,Stack +0004:wArg02,Top:Top_38
		defs: ax:ax_41,bx:bx_43,cx:cx_42,sp:sp_40,Top:Top_44
	word16 sp_46
	word16 cx_48
	word16 bx_49
	call SEQ(0x0800, Mem13[ds:0x0238:word16]) (retsize: 2;)
		uses: ax:ax_41,bx:bx_43,cx:cx_42,sp:sp_40,Stack +0000:bp,Stack +0004:wArg02,Top:Top_44
		defs: bx:bx_49,cx:cx_48,sp:sp_46
	Mem54[ss:sp_46 - 2:word16] = wArg02
	__exit(cx_48, bx_49)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __setargv(selector ds, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0000:[0..15]
// LiveOut:
// Trashed: SCZDO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_0336_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0336:
	selector es_32
	Mem6[0x0800:0x0330:word16] = wArg00
	Mem9[0x0800:0x0332:word16] = ds
	word16 si_27 = Mem9[ds:0x008A:word16]
	selector es_11 = Mem9[ds:0x0090:selector]
	word16 ax_18 = DPB(DPB(ax, 0x00, 8), Mem9[ds:0x0080:byte], 0)
	word16 si_225 = si_27 + 0x0002
	word16 cx_29 = 0x0001
	es_32 = es_11
	branch Mem9[ds:0x0092:byte] <u 0x03 l0800_0374
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0363:
	es_32 = Mem9[ds:0x008C:selector]
	word16 di_33 = si_27 + 0x0002
	word16 cx_232 = 0x007F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_036D:
	branch cx_232 == 0x0000 l0800_036F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_036D_1:
	di_33 = di_368 + 0x0001
	cx_232 = cx_232 - 0x0001
	di_368 = di_33
	branch Mem9[es_32:di_368:byte] == 0x00 l0800_036D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_036F:
	byte cl_48 = (byte) cx_232
	branch cx_232 == 0x0000 l0800_03E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0371:
	cx_29 = DPB(cx_232, cl_48 ^ 0x7F, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0374:
	word16 di_66 = fp - ((ax_18 + 0x0002) + cx_29 & 0xFFFE)
	branch di_66 <u 0x0000 l0800_03E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0387:
	Mem80[ss:di_66 - 2:word16] = cx_29
	word16 cx_231 = cx_29 - 0x0001
	di_230 = di_66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0393:
	word16 di_230
	branch cx_231 == 0x0000 l0800_0395
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0395:
	Mem88[ss:di_230:byte] = 0x00
	word16 di_89 = di_230 + 0x0001
	word16 si_104 = 0x0081
	word16 cx_110 = ax_18 + 0x0001
	word16 ax_109 = cx_231
	word16 bx_101 = cx_231 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03A3:
	word16 ax_111
	fn0800_03BF(SEQ(es_11, si_104), SEQ(ss, di_89), ax_109, cx_110, out ax_111, out cx_110, out si_104)
	bool Z_116 = <invalid>
	bool C_115 = <invalid>
	byte al_212 = (byte) ax_111
	branch Z_116 | C_115 l0800_03AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03A8:
	branch C_115 l0800_03EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03EA:
	word16 cx_126 = Mem88[ss:di_66 - 2:word16] + cx_231
	selector ds_127 = Mem88[0x0800:0x0332:selector]
	Mem129[ds_127:0x0084:word16] = bx_101
	word16 bx_131 = (bx_101 + 0x0001) * 0x0002
	word16 si_132 = di_66
	word16 bp_134 = di_66 - bx_131
	branch bp_134 <u 0x0000 l0800_03E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03E7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03E7_thunk__abort:
	_abort()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0401:
	Mem139[ds_127:0x0086:word16] = bp_134
	bp_143 = bp_134
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0407:
	word16 bp_143
	branch cx_126 == 0x0000 l0800_0417
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0409:
	Mem144[ss:bp_143:word16] = si_132
	bp_143 = bp_143 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_040F:
	byte al_150 = Mem144[ds_127:si_132:byte]
	si_132 = si_132 + 0x0001
	cx_126 = cx_126 - 0x0001
	branch al_150 != 0x00 && cx_126 != 0x0000 l0800_040F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0415:
	branch al_150 == 0x00 l0800_0407
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0417:
	Mem165[ss:bp_143:word16] = 0x0000
	call Mem165[0x0800:0x0330:word16] (retsize: 2;)
		uses: ax:0x0000,bx:bx_131,cx:cx_186,dx:cx_83,sp:bp_134,Stack +0002:wArg00,Top:0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0336_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03AA:
	fn0800_03BF(SEQ(es_11, si_104), SEQ(ss, di_89), ax_111, cx_110, out ax_111, out cx_110, out si_104)
	bool Z_209 = <invalid>
	C_115 = <invalid>
	al_212 = (byte) ax_111 (alias)
	branch Z_209 | C_115 l0800_03A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03AF:
	ax_109 = DPB(ax_111, al_212, 0) (alias)
	branch al_212 == 0x20 l0800_03BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03B3:
	branch al_212 == 0x0D l0800_03BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03B7:
	branch al_212 != 0x09 l0800_03A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03BB:
	ax_109 = DPB(ax_111, 0x00, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0393_1:
	Mem228[ss:di_230:byte] = Mem226[es_32:si_225:byte]
	si_225 = si_225 + 0x0001
	di_230 = di_230 + 0x0001
	cx_231 = cx_231 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_03BF(word32 ds_si, word32 es_di, word16 ax, word16 cx, ptr16 & axOut, ptr16 & cxOut, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] cx:[0..15] Sequence ds:si:[0..31] Sequence es:di:[0..31]
// LiveOut: CZ ax cx si
// Trashed: SCZO ax cx si Top
// Preserved: bx di dx sp
fn0800_03BF_entry:
	word16 si = SLICE(ds_si, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03BF:
	word16 ax_65
	word16 ax_63
	byte ah_26 = SLICE(ax, byte, 8)
	word16 ax_5 = ax
	byte al_11 = (byte) ax
	ax_5 = DPB(ax, ah_26, 8) (alias)
	ax_5 = DPB(ax_63, ah_26, 8) (alias)
	word16 ax_66 = DPB(ax_65, ah_26, 8)
	branch ax == 0x0000 l0800_03CA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03C3:
	Mem14[es_di:byte] = al_11
	ax_63 = DPB(ax_5, al_11, 0) (alias)
	branch al_11 != 0x00 l0800_03CA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03C9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03CA:
	word16 ax_68 = DPB(DPB(ax_66, ah_26, 0), al_11, 8)
	ax_65 = DPB(ax_5, al_11, 0) (alias)
	word16 ax_59 = DPB(ax_68, 0x00, 0)
	branch cx == 0x0000 l0800_03E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03D1:
	byte al_40 = Mem38[ds_si:byte]
	si = si + 0x0001
	cx = cx - 0x0001
	ax_59 = DPB(ax_68, al_40 - 0x22, 0) (alias)
	branch al_40 == 0x22 l0800_03E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03D7:
	ax_59 = DPB(ax_68, al_40, 0) (alias)
	branch al_40 != 0x5C l0800_03E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03DD:
	branch Mem38[ds_si + 0x0001:byte] != 0x22 l0800_03E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03E2:
	ax_59 = DPB(ax_68, Mem38[ds_si + 0x0001:byte], 0) (alias)
	si = si + 0x0002
	cx = cx - 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03E4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_03E6:
	axOut = ax_59
	cxOut = cx
	siOut = si
	return <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_03BF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __setenvp(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO bx di dx Top
// Preserved: D ds es si sp
fn0800_0421_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0421:
	word16 cx_6 = Mem0[ds:0x008A:word16]
	word16 ax_10 = _malloc(ds, cx_6)
	word16 cx_111 = cx_6
	word16 di_107 = ax_10
	branch ax_10 == 0x0000 l0800_0454
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0430:
	selector ds_31 = Mem28[ds:0x008C:selector]
	word16 si_105 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_043A:
	branch cx_111 == 0x0000 l0800_043C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_043C:
	word16 ax_50 = _malloc(ds, Mem46[ds:0x008E:word16])
	Mem62[ds:0x0088:word16] = ax_50
	word16 di_179 = ax_10
	word16 bx_59 = ax_50
	branch ax_50 != 0x0000 l0800_0457
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0457:
	word16 ax_67 = 0x0000
	word16 cx_112 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_045C:
	Mem74[ds:bx_59:word16] = di_179
	byte al_114 = (byte) ax_67
	bx_59 = bx_59 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0461:
	ax_67 = DPB(ax_67, al_114, 0) (alias)
	ax_67 = DPB(ax_67, al_114, 0) (alias)
	word16 ax_97 = DPB(ax_67, al_114, 0)
	branch cx_112 == 0x0000 l0800_0463
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0461_1:
	di_179 = di_179 + 0x0001
	cx_112 = cx_112 - 0x0001
	branch al_114 == Mem74[ds:di_179:byte] l0800_0461
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0463:
	branch Mem74[ds:di_179:byte] != al_114 l0800_045C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0468:
	Mem102[ds:bx_59:word16] = ax_97
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0454:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0454_thunk__abort:
	_abort()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0421_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_043A_1:
	Mem108[ds:di_107:byte] = Mem39[ds_31:si_105:byte]
	si_105 = si_105 + 0x0001
	di_107 = di_107 + 0x0001
	cx_111 = cx_111 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void ___pull_free_block(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx Top
// Preserved: bp di si sp
fn0800_0491_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0491:
	word16 ax_17 = Mem14[ds:wArg02 + 0x0006:word16]
	Mem18[ds:0x062A:word16] = ax_17
	branch ax_17 != wArg02 l0800_04AB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04AB:
	word16 si_21 = Mem18[ds:wArg02 + 0x0004:word16]
	Mem23[ds:Mem18[ds:0x062A:word16] + 0x0004:word16] = si_21
	Mem25[ds:si_21 + 0x0006:word16] = Mem23[ds:0x062A:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04A3:
	Mem26[ds:0x062A:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04BB:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0491_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_04BF(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax
// Trashed: SCZO ax Top
// Preserved: bp di si sp
fn0800_04BF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04BF:
	Mem19[ds:wArg02:word16] = Mem14[ds:wArg02:word16] - wArg04
	word16 si_21 = Mem19[ds:wArg02:word16] + wArg02
	Mem24[ds:si_21:word16] = wArg04 + 0x0001
	Mem25[ds:si_21 + 0x0002:word16] = wArg02
	branch Mem25[ds:0x0628:word16] != wArg02 l0800_04E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04E6:
	Mem32[ds:si_21 + wArg04 + 0x0002:word16] = si_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04E0:
	Mem33[ds:0x0628:word16] = si_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04EE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04F5:
	return si_21 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_04BF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_04F9(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax cx dx Top
// Preserved: bp si sp
fn0800_04F9_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04F9:
	word16 ax_43
	word16 ax_23 = ___sbrk(ds, wArg02 & 0xFFFF, 0x0000)
	branch ax_23 != 0xFFFF l0800_051B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_051B:
	Mem37[ds:ax_23 + 0x0002:word16] = Mem21[ds:0x0628:word16]
	Mem40[ds:ax_23:word16] = wArg02 + 0x0001
	Mem41[ds:0x0628:word16] = ax_23
	ax_43 = Mem41[ds:0x0628:word16] + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0517:
	ax_43 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0533:
	return ax_43
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_04F9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0536(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax cx dx Top
// Preserved: bp si sp
fn0800_0536_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0536:
	word16 ax_42
	word16 ax_23 = ___sbrk(ds, wArg02 & 0xFFFF, 0x0000)
	branch ax_23 != 0xFFFF l0800_0558
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0558:
	Mem36[ds:0x062C:word16] = ax_23
	Mem37[ds:0x0628:word16] = ax_23
	Mem40[ds:ax_23:word16] = wArg02 + 0x0001
	ax_42 = ax_23 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0554:
	ax_42 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_056D:
	return ax_42
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0536_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 _malloc(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp di si sp
fn0800_0570_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0570:
	word16 ax_106
	branch wArg02 == 0x0000 l0800_0581
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_057C:
	branch wArg02 <=u 0xFFF4 l0800_0585
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0585:
	word16 ax_24 = wArg02 + 0x000B & 0xFFF8
	branch Mem14[ds:0x062C:word16] != 0x0000 l0800_059D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_059D:
	word16 si_29 = Mem14[ds:0x062A:word16]
	branch si_29 == 0x0000 l0800_05D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05A7:
	branch Mem14[ds:si_29:word16] <u ax_24 + 0x0028 l0800_05BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05BB:
	branch Mem14[ds:si_29:word16] <u ax_24 l0800_05CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05CF:
	si_29 = Mem14[ds:si_29 + 0x0006:word16]
	branch si_29 != Mem14[ds:0x062A:word16] l0800_05A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05D8:
	ax_106 = fn0800_04F9(ds, ax_24)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05C1:
	___pull_free_block(ds, si_29)
	Mem78[ds:si_29:word16] = Mem68[ds:si_29:word16] + 0x0001
	ax_106 = si_29 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05B2:
	ax_106 = fn0800_04BF(ds, si_29, ax_24)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0596:
	ax_106 = fn0800_0536(ds, ax_24)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0581:
	ax_106 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05DF:
	return ax_106
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0570_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void ___brk(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax dx Top
// Preserved: bp sp
fn0800_05E3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05E3:
	branch wArg02 >=u fp - 0x0102 l0800_05FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05FA:
	Mem15[ds:0x0094:word16] = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05F3:
	Mem17[ds:0x009E:word16] = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0605:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_05E3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 ___sbrk(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax
// Trashed: SCZO ax cx Top
// Preserved: bp sp
fn0800_0607_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0607:
	word16 ax_29
	word16 ax_12 = wArg02 + Mem7[ds:0x009E:word16]
	branch wArg04 + (ax_12 <u 0x0000) + (ax_12 <u 0x0100) != 0x0000 l0800_062E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0624:
	branch ax_12 + 0x0100 >=u fp - 2 l0800_062E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_062E:
	Mem28[ds:0x0094:word16] = 0x0008
	ax_29 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0628:
	word16 v13_30 = Mem7[ds:0x009E:word16]
	Mem31[ds:0x009E:word16] = ax_12
	ax_29 = v13_30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0639:
	return ax_29
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0607_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _brk(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax cx dx Top
// Preserved: bp sp
fn0800_063B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_063B:
	___brk(ds, wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0647:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_063B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_065B(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx Top
// Preserved: bp di si sp
fn0800_065B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_065B:
	word16 ax_46
	word16 si_18 = Mem15[ds:wArg02:word16]
	word16 wLoc04_63 = si_18
	branch (Mem20[ds:wArg02 + 0x0002:word16] & 0x0040) == 0x0000 l0800_067B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_067B:
	word16 di_26 = Mem20[ds:wArg02 + 0x000A:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_068E:
	si_18 = si_18 - 0x0001
	branch si_18 != 0x0000 l0800_0683
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0683:
	di_26 = di_85 + 0x0001
	di_85 = di_26
	branch Mem38[ds:di_85:byte] != 0x0A l0800_068E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_068B:
	wLoc04_63 = wLoc04_63 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0695:
	ax_46 = wLoc04_63
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0677:
	ax_46 = si_18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_069A:
	return ax_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_065B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _fseek(selector ds, word16 wArg02, ui32 dwArg04, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp si sp
fn0800_06A2_entry:
	word16 wArg06 = SLICE(dwArg04, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06A2:
	branch _fflush(ds, wArg02) == 0x0000 l0800_06B7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06B7:
	ui32 dwArg04_182 = dwArg04
	branch wArg08 != 0x0001 l0800_06CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06BD:
	dwArg04_182 = dwArg04 (alias)
	branch Mem14[ds:wArg02:word16] <= 0x0000 l0800_06CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06C2:
	ui32 dwArg04_120 = SEQ(wArg06, v14_45)
	ui32 v16_v14_111 = dwArg04_120 - (int32) fn0800_065B(ds, wArg02)
	word16 v14_45 = (word16) v16_v14_111
	dwArg04_182 = SEQ(SLICE(v16_v14_111, word16, 16), SLICE(dwArg04_120, word16, 0)) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06CD:
	Mem57[ds:wArg02 + 0x0002:word16] = Mem55[ds:wArg02 + 0x0002:word16] & 0xFE5F
	Mem60[ds:wArg02:word16] = 0x0000
	Mem62[ds:wArg02 + 0x000A:word16] = Mem60[ds:wArg02 + 0x0008:word16]
	word16 dx_82
	word16 ax_79 = _lseek(ds, (int16) Mem74[ds:wArg02 + 0x0004:byte], dwArg04_182, SLICE(wArg08, byte, 0), out dx_82)
	branch dx_82 != 0xFFFF l0800_06FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06F5:
	branch ax_79 != 0xFFFF l0800_06FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06FF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06FA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0701:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06B2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0703:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_06A2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_075B(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: di si sp
fn0800_075B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_075B:
	word16 di_11 = 0x0014
	word16 si_12 = 0x0342
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0778:
	di_11 = di_11 - 0x0001
	branch di_11 != 0x0000 l0800_0765
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0765:
	branch (Mem22[ds:si_12 + 0x0002:word16] & 0x0300) != 0x0300 l0800_0775
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0770:
	_fflush(ds, si_12)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0775:
	si_12 = si_12 + 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_077F:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_075B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0782(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp si sp
fn0800_0782_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0782:
	branch (Mem11[ds:wArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_0793
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0790:
	fn0800_075B(ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0793:
	word16 ax_69
	word16 v10_28 = Mem11[ds:wArg02 + 0x0006:word16]
	word16 ax_33 = Mem32[ds:wArg02 + 0x0008:word16]
	Mem34[ds:wArg02 + 0x000A:word16] = ax_33
	word16 ax_41 = _read(ds, (int16) Mem36[ds:wArg02 + 0x0004:byte], ax_33, v10_28)
	Mem52[ds:wArg02:word16] = ax_41
	branch ax_41 <= 0x0000 l0800_07B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07B9:
	branch Mem52[ds:wArg02:word16] != 0x0000 l0800_07CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07CC:
	Mem58[ds:wArg02:word16] = 0x0000
	Mem60[ds:wArg02 + 0x0002:word16] = Mem58[ds:wArg02 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07BE:
	Mem68[ds:wArg02 + 0x0002:word16] = Mem52[ds:wArg02 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07D5:
	ax_69 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07AE:
	Mem71[ds:wArg02 + 0x0002:word16] = Mem52[ds:wArg02 + 0x0002:word16] & 0xFFDF
	ax_69 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07DA:
	return ax_69
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0782_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _fgetc(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx es Top
// Preserved: D bp si sp
fn0800_07F2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07F2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07FC:
	word16 v8_18 = Mem17[ds:wArg02:word16] - 0x0001
	Mem19[ds:wArg02:word16] = v8_18
	branch v8_18 < 0x0000 l0800_080E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_080E:
	word16 v15_22 = Mem19[ds:wArg02:word16] + 0x0001
	Mem23[ds:wArg02:word16] = v15_22
	branch v15_22 < 0x0000 l0800_0819
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0812:
	branch (Mem23[ds:wArg02 + 0x0002:word16] & 0x0110) == 0x0000 l0800_0824
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0824:
	Mem33[ds:wArg02 + 0x0002:word16] = Mem31[ds:wArg02 + 0x0002:word16] | 0x0080
	branch Mem33[ds:wArg02 + 0x0006:word16] == 0x0000 l0800_0842
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0842:
	branch Mem33[ds:0x04AA:word16] != 0x0000 l0800_0881
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0849:
	branch wArg02 != 0x0342 l0800_0881
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0881:
	branch (Mem44[ds:wArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_088B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0888:
	fn0800_075B(ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_088B:
	branch __read(ds, (int16) Mem67[ds:wArg02 + 0x0004:byte], fp - 0x0003, 0x0001) == 0x0001 l0800_08C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08C9:
	branch bLoc03 != 0x0D l0800_08D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08CF:
	branch (Mem73[ds:wArg02 + 0x0002:word16] & 0x0040) == 0x0000 l0800_0881
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08D6:
	Mem91[ds:wArg02 + 0x0002:word16] = Mem73[ds:wArg02 + 0x0002:word16] & 0xFFDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08A3:
	branch _eof(ds, (int16) Mem73[ds:wArg02 + 0x0004:byte]) == 0x0001 l0800_08B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08B8:
	Mem119[ds:wArg02 + 0x0002:word16] = Mem101[ds:wArg02 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08B1:
	Mem121[ds:wArg02 + 0x0002:word16] = Mem101[ds:wArg02 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08C4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0850:
	branch _isatty((int16) Mem33[ds:wArg02 + 0x0004:byte]) != 0x0000 l0800_0862
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_085D:
	Mem145[ds:wArg02 + 0x0002:word16] = Mem130[ds:wArg02 + 0x0002:word16] & 0xFDFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0862:
	word16 ax_158
	branch (Mem152[ds:wArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_0872
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0872:
	ax_158 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_086D:
	ax_158 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0874:
	_setvbuf(ds, wArg02, 0x0000, ax_158, 0x0200)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_082F:
	branch fn0800_0782(ds, wArg02) == 0x0000 l0800_083D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_083D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0837:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0819:
	Mem208[ds:wArg02 + 0x0002:word16] = Mem23[ds:wArg02 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0800:
	Mem213[ds:wArg02 + 0x000A:word16] = Mem19[ds:wArg02 + 0x000A:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08E2:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_07F2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 _isatty(word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx dx Top
// Preserved: bp sp
fn0800_08F2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08F2:
	word16 dx_10
	msdos_ioctl_get_device_info(wArg02, out dx_10)
	return dx_10 & 0x0080
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_08F2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _setvbuf(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp di si sp
fn0800_0904_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0904:
	branch Mem14[ds:wArg02 + 0x000E:word16] != wArg02 l0800_0922
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0916:
	branch wArg06 > 0x0002 l0800_0922
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_091C:
	branch wArg08 <=u 0x7FFF l0800_0928
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0928:
	branch Mem14[ds:0x04AC:word16] != 0x0000 l0800_093E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_092F:
	branch wArg02 != 0x0352 l0800_093E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_093E:
	branch Mem14[ds:0x04AA:word16] != 0x0000 l0800_0952
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0945:
	branch wArg02 != 0x0342 l0800_0952
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_094C:
	Mem38[ds:0x04AA:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0936:
	Mem39[ds:0x04AC:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0952:
	branch Mem42[ds:wArg02:word16] == 0x0000 l0800_0966
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0957:
	_fseek(ds, wArg02, 0x00000000, 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0966:
	branch (Mem73[ds:wArg02 + 0x0002:word16] & 0x0004) == 0x0000 l0800_0974
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_096D:
	_free(ds, Mem73[ds:wArg02 + 0x0008:word16])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0974:
	Mem96[ds:wArg02 + 0x0002:word16] = Mem94[ds:wArg02 + 0x0002:word16] & 0xFFF3
	Mem98[ds:wArg02 + 0x0006:word16] = 0x0000
	Mem101[ds:wArg02 + 0x0008:word16] = wArg02 + 0x0005
	Mem102[ds:wArg02 + 0x000A:word16] = wArg02 + 0x0005
	branch wArg06 == 0x0002 l0800_09CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_098F:
	branch wArg08 <=u 0x0000 l0800_09CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0993:
	Mem119[ds:0x0234:word16] = 0x09D6
	branch wArg04 != 0x0000 l0800_09B7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_099F:
	word16 ax_125 = _malloc(ds, wArg08)
	wArg04 = ax_125
	branch ax_125 == 0x0000 l0800_09B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_09B2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_09AB:
	Mem142[ds:wArg02 + 0x0002:word16] = Mem135[ds:wArg02 + 0x0002:word16] | 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_09B7:
	Mem151[ds:wArg02 + 0x000A:word16] = wArg04
	Mem152[ds:wArg02 + 0x0008:word16] = wArg04
	Mem154[ds:wArg02 + 0x0006:word16] = wArg08
	branch wArg06 != 0x0001 l0800_09CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_09C9:
	Mem158[ds:wArg02 + 0x0002:word16] = Mem154[ds:wArg02 + 0x0002:word16] | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_09CE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0922:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_09D2:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0904_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 _read(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_09F7_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_09F7:
	word16 ax_153
	branch wArg06 <u 0x0001 l0800_0A15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A08:
	branch (Mem15[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0x0200) == 0x0000 l0800_0A1A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A1A:
	word16 ax_40 = __read(ds, wArg02, wArg04, wArg06)
	branch ax_40 <u 0x0001 l0800_0A42
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A35:
	branch (Mem46[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0x8000) == 0x0000 l0800_0A48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A48:
	word16 cx_112 = ax_40
	word16 si_57 = wArg04
	word16 di_140 = wArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A55:
	byte al_68 = Mem67[ds:si_57:byte]
	si_57 = si_57 + 0x0001
	branch al_68 == 0x1A l0800_0A87
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A87:
	word16 cx_81 = -cx_112
	_lseek(ds, wArg02, SEQ(0x0000 - (cx_81 == 0x0000), cx_81), 0x02, out dx_96)
	Mem105[ds:(wArg02 << 0x0001) + 0x0482:word16] = Mem92[ds:(wArg02 << 0x0001) + 0x0482:word16] | 0x0200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A5A:
	branch al_68 == 0x0D l0800_0A63
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A63:
	cx_112 = cx_112 - 0x0001
	branch cx_112 != 0x0000 l0800_0A55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A65:
	__read(ds, wArg02, fp - 0x0003, 0x0001)
	Mem141[ds:di_140:byte] = bLoc03
	di_140 = di_140 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A5E:
	Mem143[ds:di_140:byte] = al_68
	di_140 = di_140 + 0x0001
	cx_112 = cx_112 - 0x0001
	branch cx_112 != 0x0000 l0800_0A55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A61:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A7F:
	branch di_140 != wArg04 l0800_0A85
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A85:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0AA7:
	ax_153 = di_140 - wArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A83:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A42:
	ax_153 = ax_40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A15:
	ax_153 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0AAD:
	return ax_153
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_09F7_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 __read(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax
// Trashed: C ax bx cx dx Top
// Preserved: SZO bp sp
fn0800_0AB3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0AB3:
	word16 ax_15
	branch msdos_read_file(wArg02, wArg06, SEQ(ds, wArg04), out ax_15) l0800_0AC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0AC7:
	ax_15 = __IOERROR(ds, ax_15)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0AC5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0ACD:
	return ax_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0AB3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 _write(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp di si sp
fn0800_0ACF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0ACF:
	word16 ax_141
	branch wArg06 >=u 0x0001 l0800_0AE6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0AE6:
	branch (Mem15[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0x8000) == 0x0000 l0800_0B05
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B05:
	Mem29[ds:(wArg02 << 0x0001) + 0x0482:word16] = Mem15[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0xFDFF
	word16 wLoc86_191 = wArg04
	word16 wLoc8A_192 = wArg06
	word16 si_102 = fp - 0x0084
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B91:
	branch wLoc8A_192 == 0x0000 l0800_0B9B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B9B:
	word16 di_45 = si_102 - (fp - 0x0084)
	branch di_45 <=u 0x0000 l0800_0BD7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BA9:
	word16 ax_62 = __write(ds, wArg02, fp - 0x0084, di_45)
	branch ax_62 == di_45 l0800_0BD7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BD7:
	ax_141 = wArg06
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BC0:
	branch ax_62 >=u 0x0000 l0800_0BCC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BCC:
	ax_141 = wArg06 + ax_62 - di_45
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BC7:
	ax_141 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BD5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B98:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B24:
	word16 v20_85 = wLoc8A_192 - 0x0001
	wLoc8A_192 = v20_85
	wLoc86_191 = wLoc86_191 + 0x0001
	byte al_90 = Mem89[ds:wLoc86_191:byte]
	branch al_90 != 0x0A l0800_0B3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B3A:
	Mem94[ds:si_102:byte] = 0x0D
	si_102 = si_102 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B3E:
	Mem103[ds:si_102:byte] = al_90
	si_102 = si_102 + 0x0001
	branch si_102 - (fp - 0x0084) < 0x0080 l0800_0B91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B53:
	word16 di_112 = si_102 - (fp - 0x0084)
	word16 ax_123 = __write(ds, wArg02, fp - 0x0084, di_112)
	branch ax_123 == di_112 l0800_0B8D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B8D:
	si_102 = fp - 0x0084
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B72:
	branch ax_123 >=u 0x0000 l0800_0B7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B7E:
	ax_141 = wArg06 - v20_85 + ax_123 - di_112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B79:
	ax_141 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B8B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0AF3:
	ax_141 = __write(ds, wArg02, wArg04, wArg06)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0AE1:
	ax_141 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BDC:
	return ax_141
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0ACF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 __write(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_0BE2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BE2:
	branch (Mem7[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0x0800) == 0x0000 l0800_0C02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BF2:
	_lseek(ds, wArg02, 0x00000000, 0x02, out dx_103)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C02:
	word16 ax_51
	word16 ax_46
	branch msdos_write_file(wArg02, wArg06, SEQ(ds, wArg04), out ax_46) l0800_0C20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C20:
	ax_51 = __IOERROR(ds, ax_46)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C11:
	Mem62[ds:(wArg02 << 0x0001) + 0x0482:word16] = Mem58[ds:(wArg02 << 0x0001) + 0x0482:word16] | 0x1000
	ax_51 = ax_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C26:
	return ax_51
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0BE2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 _lseek(selector ds, word16 wArg02, word32 dwArg04, word16 wArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_0C28_entry:
	word16 wArg04 = SLICE(dwArg04, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C28:
	Mem13[ds:(wArg02 << 0x0001) + 0x0482:word16] = Mem7[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0xFDFF
	word16 ax_23 = DPB(DPB(ax, 0x42, 8), bArg08, 0)
	word16 dx_19 = wArg04
	branch msdos_set_file_position(wArg02, dwArg04, bArg08, SEQ(wArg04, ax_23)) l0800_0C4A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C4A:
	word32 dx_ax_34 = (word32) __IOERROR(ds, ax_23)
	ax_23 = (word16) dx_ax_34 (alias)
	dx_19 = SLICE(dx_ax_34, word16, 16) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C48:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C51:
	dxOut = dx_19
	return ax_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0C28_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __LONGTOA(selector ds, byte bArg02, byte bArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..7] Stack +0004:[0..7] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15]
// LiveOut:
// Trashed: SCZO ax bx Top
// Preserved: D bp cx di ds dx es si sp ss
fn0800_0C53_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C53:
	word16 di_126 = wArg08
	byte bl_28 = (byte) wArg06
	branch wArg06 >u 0x0024 l0800_0CC1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C69:
	branch bl_28 <u 0x02 l0800_0CC1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C6E:
	word16 ax_31 = wArg0A
	word16 cx_33 = wArg0C
	branch wArg0C >= 0x0000 l0800_0C89
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C78:
	branch bArg04 == 0x00 l0800_0C89
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C7E:
	Mem39[ds:wArg08:byte] = 0x2D
	ax_31 = -wArg0A
	di_126 = wArg08 + 0x0001
	cx_33 = -wArg0C - (ax_31 == 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C89:
	word16 si_108 = fp - 0x0024
	branch cx_33 == 0x0000 l0800_0C9D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C8E:
	word32 dx_ax_55 = (uint32) (uint16) cx_33
	word32 dx_ax_63 = SEQ((uint16) (dx_ax_55 % wArg06), ax_31)
	Mem71[ds:si_108:byte] = (byte) (uint16) (dx_ax_63 % wArg06)
	word16 ax_59 = (uint16) (dx_ax_55 /u wArg06)
	cx_33 = ax_59
	ax_31 = (uint16) (dx_ax_63 /u wArg06)
	si_108 = si_108 + 0x0001
	branch ax_59 == 0x0000 l0800_0CA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CA4:
	branch ax_31 != 0x0000 l0800_0C9D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C9D:
	word32 dx_ax_82 = (uint32) (uint16) ax_31
	Mem97[ds:si_108:byte] = (byte) (uint16) (dx_ax_82 % wArg06)
	ax_31 = (uint16) (dx_ax_82 /u wArg06)
	si_108 = si_108 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CA8:
	word16 cx_105 = 0x0024 - fp + si_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CB0:
	byte al_118
	si_108 = si_108 - 0x0001
	byte al_112 = Mem111[ds:si_108:byte]
	branch al_112 >=u 0x0A l0800_0CBB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CBB:
	al_118 = al_112 - 0x0A + bArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CB7:
	al_118 = al_112 + 0x30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CBE:
	Mem127[ds:di_126:byte] = al_118
	di_126 = di_126 + 0x0001
	cx_105 = cx_105 - 0x0001
	branch cx_105 != 0x0000 l0800_0CB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CC1:
	Mem135[ds:di_126:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CCA:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0C53_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C9B:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 _eof(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_0D5F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D5F:
	word16 ax_101
	branch (Mem7[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0x0200) == 0x0000 l0800_0D78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D78:
	word16 ax_16 = 0x4400
	byte dl_20 = (byte) dx_18
	word16 dx_18
	branch msdos_ioctl_get_device_info(wArg02, out dx_18) l0800_0DC3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D82:
	branch (dl_20 & 0x80) != 0x00 l0800_0DBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D87:
	ax_16 = 0x4201
	branch msdos_set_file_position(wArg02, 0x00000000, 0x01, 0x00004201) l0800_0DC3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D92:
	ax_16 = 0x4202
	branch msdos_set_file_position(wArg02, 0x00000000, 0x02, 0x00004202) l0800_0DC3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DA7:
	ax_16 = 0x4200
	branch msdos_set_file_position(wArg02, 0x00004201, 0x00, 0x42014200) l0800_0DC3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DC3:
	ax_101 = __IOERROR(ds, ax_16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DAE:
	branch false l0800_0DBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DB3:
	branch false l0800_0DBA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DB5:
	branch false l0800_0DBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DBF:
	ax_101 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DBA:
	ax_101 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D72:
	ax_101 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DC9:
	return ax_101
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0D5F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 _fflush(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp di si sp
fn0800_0DCD_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DCD:
	word16 ax_118
	branch Mem14[ds:wArg02 + 0x000E:word16] == wArg02 l0800_0DE1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DE1:
	branch Mem14[ds:wArg02:word16] < 0x0000 l0800_0E13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E13:
	word16 di_23 = Mem14[ds:wArg02 + 0x0006:word16] + Mem14[ds:wArg02:word16]
	Mem26[ds:wArg02:word16] = Mem14[ds:wArg02:word16] - (di_23 + 0x0001)
	word16 ax_30 = Mem29[ds:wArg02 + 0x0008:word16]
	Mem31[ds:wArg02 + 0x000A:word16] = ax_30
	branch _write(ds, (int16) Mem33[ds:wArg02 + 0x0004:byte], ax_30, di_23 + 0x0001) == di_23 + 0x0001 l0800_0E43
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E32:
	branch (Mem37[ds:wArg02 + 0x0002:word16] & 0x0200) != 0x0000 l0800_0E43
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E43:
	ax_118 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E39:
	Mem56[ds:wArg02 + 0x0002:word16] = Mem37[ds:wArg02 + 0x0002:word16] | 0x0010
	ax_118 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DE6:
	branch (Mem14[ds:wArg02 + 0x0002:word16] & 0x0008) != 0x0000 l0800_0DF9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DED:
	branch Mem14[ds:wArg02 + 0x000A:word16] != wArg02 + 0x0005 l0800_0E0F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DF9:
	Mem70[ds:wArg02:word16] = 0x0000
	branch Mem70[ds:wArg02 + 0x000A:word16] != wArg02 + 0x0005 l0800_0E0F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E09:
	Mem77[ds:wArg02 + 0x000A:word16] = Mem70[ds:wArg02 + 0x0008:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E0F:
	ax_118 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DDC:
	ax_118 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E47:
	return ax_118
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0DCD_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 _printf(word16 cx, word16 dx, word16 bx, selector es, selector ds, word16 wArg02, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] es:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: di si
// Trashed: SCZDO ax di si Top
// Preserved: bp sp
_printf_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E4B:
	word16 di_27
	word16 si_28 = __VPRINTER(cx, dx, bx, es, ds, fp + 0x0004, wArg02, out di_27)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E62:
	diOut = di_27
	return si_28
// DataOut:
// DataOut (flags):
// SymbolicIn:

_printf_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __fputc(selector ds, byte bArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..7] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_0E64_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E64:
	Mem12[ds:wArg04:word16] = Mem7[ds:wArg04:word16] - 0x0001
	_fputc(ds, SLICE((int16) bArg02, byte, 0), wArg04)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E7B:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0E64_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _fputc(selector ds, byte bArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..7] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp si sp
fn0800_0E7D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E7D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E8D:
	word16 v9_20 = Mem19[ds:wArg04:word16] + 0x0001
	Mem21[ds:wArg04:word16] = v9_20
	branch v9_20 >= 0x0000 l0800_0EC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EC7:
	Mem25[ds:wArg04:word16] = Mem21[ds:wArg04:word16] - 0x0001
	branch (Mem25[ds:wArg04 + 0x0002:word16] & 0x0090) != 0x0000 l0800_0ED7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0ED0:
	branch (Mem25[ds:wArg04 + 0x0002:word16] & 0x0002) != 0x0000 l0800_0EE2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EE2:
	Mem33[ds:wArg04 + 0x0002:word16] = Mem25[ds:wArg04 + 0x0002:word16] | 0x0100
	branch Mem33[ds:wArg04 + 0x0006:word16] == 0x0000 l0800_0F11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F11:
	branch bArg02 != 0x0A l0800_0F36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F17:
	branch (Mem33[ds:wArg04 + 0x0002:word16] & 0x0040) != 0x0000 l0800_0F36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F1E:
	branch __write(ds, (int16) Mem50[ds:wArg04 + 0x0004:byte], 0x04E0, 0x0001) != 0x0001 l0800_0F4E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F36:
	branch __write(ds, (int16) Mem74[ds:wArg04 + 0x0004:byte], fp + 0x0002, 0x0001) == 0x0001 l0800_0F5F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F4E:
	branch (Mem94[ds:wArg04 + 0x0002:word16] & 0x0200) != 0x0000 l0800_0F5F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F5F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F55:
	Mem106[ds:wArg04 + 0x0002:word16] = Mem94[ds:wArg04 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EED:
	branch Mem33[ds:wArg04:word16] == 0x0000 l0800_0F02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F02:
	Mem116[ds:wArg04:word16] = 0xFFFF - Mem33[ds:wArg04 + 0x0006:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EF2:
	branch _fflush(ds, wArg04) == 0x0000 l0800_0F00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F00:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F0C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EFB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0ED7:
	Mem138[ds:wArg04 + 0x0002:word16] = Mem25[ds:wArg04 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E91:
	Mem144[ds:wArg04 + 0x000A:word16] = Mem21[ds:wArg04 + 0x000A:word16] + 0x0001
	Mem146[ds:Mem144[ds:wArg04 + 0x000A:word16] - 0x0001:byte] = bArg02
	branch (Mem146[ds:wArg04 + 0x0002:word16] & 0x0008) == 0x0000 l0800_0EBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EA4:
	branch bArg02 == 0x0A l0800_0EB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EAA:
	branch bArg02 != 0x0D l0800_0EBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EB0:
	branch _fflush(ds, wArg04) == 0x0000 l0800_0EBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EBF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EB9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F66:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0E7D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __REALCVT(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: sp
// Trashed: sp Top
// Preserved:
fn0800_1044_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1044:
	call Mem0[ds:0x05E0:word16] (retsize: 2;)
		uses: sp:fp,Top:0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1044_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1048(word32 es_di, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Sequence es:di:[0..31] Stack +0002:[0..15]
// LiveOut: di
// Trashed: SCZDO al bx cx di dx Top
// Preserved: bp sp
fn0800_1048_entry:
	word16 di = SLICE(es_di, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1048:
	byte dh_13 = SLICE(wArg02, byte, 8)
	Mem21[es_di:byte] = Mem7[ds:(uint16) (dh_13 >>u 0x04) + 0x04E9:byte]
	Mem27[es_di + 0x0001:byte] = Mem21[ds:(uint16) (dh_13 & 0x0F) + 0x04E9:byte]
	byte dl_29 = (byte) wArg02
	Mem33[es_di + 0x0002:byte] = Mem27[ds:(uint16) (dl_29 >>u 0x04) + 0x04E9:byte]
	Mem40[es_di + 0x0003:byte] = Mem33[ds:(uint16) (dl_29 & 0x0F) + 0x04E9:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_106F:
	return di + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1048_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 __VPRINTER(word16 cx, word16 dx, word16 bx, selector es, selector ds, word16 wArg02, word16 wArg04, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] es:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: di si
// Trashed: SCZDO ax di si Top
// Preserved: bp bx cx dx es sp
fn0800_1073_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1073:
	byte bLoc57_1340 = 0x50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10CD:
	word16 sp_1040 = fp - 0x00A0
	word16 wLoc98_1343 = fp - 0x0056
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10D6:
	word16 di_1022 = wLoc98_1343
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10DA:
	word16 si_1011 = wArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10DD:
	byte al_37 = Mem36[ds:si_1011:byte]
	si_1011 = si_1011 + 0x0001
	byte al_1093 = al_37
	branch al_37 == 0x00 l0800_10F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10F3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10E2:
	branch al_37 == 0x25 l0800_10F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10F6:
	al_1093 = Mem47[ds:si_1011:byte]
	word16 ax_1199 = DPB(ax, al_1093, 0)
	si_1011 = si_1011 + 0x0001
	branch al_1093 == 0x25 l0800_10E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10FF:
	wLoc98_1343 = di_1022
	word16 cx_1256 = 0x0000
	byte ch_1244 = 0x00
	word16 wLoc8E_1348 = 0x0000
	word16 wLoc9A_1349 = 0x0000
	byte bLoc8F_1350 = 0x00
	word16 wLoc94_1351 = 0xFFFF
	word16 wLoc92_1352 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1120:
	word16 ax_65 = DPB(ax_1199, 0x00, 8)
	byte bl_68 = (byte) ax_65
	cx = DPB(cx_1256, ch_1244, 8) (alias)
	cx = DPB(cx_1256, ch_1244, 8) (alias)
	cx = DPB(cx_1256, ch_1244, 8) (alias)
	cx = DPB(cx_1256, ch_1244, 8) (alias)
	cx = DPB(cx_1256, ch_1244, 8) (alias)
	cx = DPB(cx_1256, ch_1244, 8) (alias)
	cx = DPB(cx_1256, ch_1244, 8) (alias)
	cx = DPB(cx_1256, ch_1244, 8) (alias)
	cx = DPB(cx_1256, ch_1244, 8) (alias)
	byte dl_129 = (byte) ax_65
	dx = ax_65 (alias)
	dx = ax_65 (alias)
	dx_225 = ax_65 (alias)
	word16 dx_225 = ax_65
	dx_225 = ax_65 (alias)
	bx = DPB(ax_65, bl_68 - 0x20, 0) (alias)
	branch bl_68 >=u 0x80 l0800_1175
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_112E:
	bx = DPB(ax_65, Mem74[ds:bx + 0x04F9:byte], 0) (alias)
	word16 ax_1200 = bx
	branch bx <=u 0x0017 l0800_113C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_113C:
	ptr32 es_di_2001
	ptr32 es_di_2005
	ptr32 es_di_2011
	byte bLoc95_1394
	word16 cx_170
	word16 di_497
	selector es_500
	word16 bx_449
	word16 bx_448
	word16 bx_447
	byte bh_337
	word16 dx_356
	word16 ax_355
	bx = bx << 0x0001
	switch (bx) { l0800_1190 l0800_1178 l0800_11D1 l0800_1184 l0800_11F6 l0800_1200 l0800_1242 l0800_124C l0800_125C l0800_11B7 l0800_1291 l0800_126C l0800_1270 l0800_1274 l0800_1316 l0800_13C8 l0800_1369 l0800_1389 l0800_1533 l0800_1560 l0800_1560 l0800_1560 l0800_11A3 l0800_11AD }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11AD:
	wLoc9A_1349 = wLoc9A_1349 | 0x0020
	ch_1244 = 0x05
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11A3:
	wLoc9A_1349 = wLoc9A_1349 & 0xFFDF
	ch_1244 = 0x05
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1533:
	ptr32 es_di_101
	wArg04 = si_1011
	branch (wLoc9A_1349 & 0x0020) != 0x0000 l0800_154B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_154B:
	es_di_101 = Mem96[ds:wArg02:segptr32]
	wArg02 = wArg02 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1541:
	word16 di_105 = Mem96[ds:wArg02:word16]
	word16 sp_110 = sp_1040 - 2
	Mem111[ss:sp_110:word16] = ds
	wArg02 = wArg02 + 0x0002
	es_di_101 = SEQ(Mem111[ss:sp_110:selector], di_105) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1551:
	word16 ax_120 = DPB(0x0050, 0x50 - bLoc57_1340, 0)
	Mem127[es_di_101:word16] = ax_120
	es = SLICE(es_di_101, selector, 16) (alias)
	ax = ax_120
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1389:
	ptr32 es_di_135
	bool Z_154
	branch (wLoc9A_1349 & 0x0020) != 0x0000 l0800_13A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13A7:
	es_di_135 = Mem130[ds:wArg02:segptr32]
	wArg02 = wArg02 + 0x0004
	Z_154 = SLICE(cond(SLICE(es_di_135, selector, 16) | (word16) es_di_135), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_139B:
	word16 di_144 = Mem130[ds:wArg02:word16]
	word16 sp_147 = sp_1040 - 2
	Mem148[ss:sp_147:word16] = ds
	wArg02 = wArg02 + 0x0002
	Z_154 = SLICE(cond(di_144), bool, 2) (alias)
	es_di_135 = SEQ(Mem148[ss:sp_147:selector], di_144) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13B1:
	ptr32 es_di_2008 = es_di_135
	branch Z_154 l0800_13B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13B3:
	word16 sp_158 = sp_1040 - 2
	Mem161[ss:sp_158:word16] = ds
	es_di_2008 = SEQ(Mem161[ss:sp_158:selector], 0x04E2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13B8:
	cx_170 = fn0800_108C(SLICE(es_di_2008, word16, 0), SLICE(es_di_2008, selector, 16))
	branch cx_170 <=u wLoc92_1352 l0800_13C5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13C1:
	cx_170 = wLoc92_1352
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13C5:
	es_di_2001 = es_di_2008 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1369:
	word16 sp_189 = sp_1040 - 2
	Mem190[ss:sp_189:word16] = ss
	wArg02 = wArg02 + 0x0002
	sp_1040 = sp_189 + 2
	cx_170 = 0x0001
	es_di_2001 = SEQ(Mem190[ss:sp_189:selector], fp - 0x0089) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13C8:
	word16 cx_204 = wLoc92_1352
	branch wLoc92_1352 >= 0x0000 l0800_13DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13DA:
	cx_204 = 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13DD:
	word16 wLoc06_1378
	word16 ax_239
	word16 sp_210 = sp_1040 - 2
	Mem213[ss:sp_210:word16] = wArg02
	Mem216[ss:sp_210 - 2:word16] = cx_204
	Mem220[ss:sp_210 - 4:word16] = fp - 0x0089
	Mem226[ss:sp_210 - 6:word16] = ax_65
	Mem230[ss:sp_210 - 8:word16] = wLoc9A_1349 & 0x0001
	branch (wLoc9A_1349 & 0x0080) == 0x0000 l0800_1400
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1400:
	branch (wLoc9A_1349 & 0x0100) == 0x0000 l0800_140F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_140F:
	wLoc06_1378 = 0x0008
	ax_239 = 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1405:
	ax_239 = 0x0008
	wLoc06_1378 = 0x000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13F6:
	ax_239 = 0x0002
	wLoc06_1378 = 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1417:
	Mem248[ss:sp_210 - 10:word16] = ax_239
	__REALCVT(ds)
	word16 sp_251 = <invalid>
	Mem259[ss:sp_251 - 2:word16] = ss
	wArg02 = wArg02 + wLoc06_1378
	sp_1040 = sp_251
	es_di_2011 = SEQ(Mem259[ss:sp_251 - 2:selector], fp - 0x0089) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1316:
	word16 sp_268 = sp_1040 - 2
	Mem269[ss:sp_268:word16] = Mem264[ds:wArg02:word16]
	word16 di_265 = fp - 0x008A
	wArg02 = wArg02 + 0x0002
	branch (wLoc9A_1349 & 0x0020) == 0x0000 l0800_1342
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1333:
	Mem278[ss:sp_268 - 2:word16] = Mem272[ds:wArg02 + 0x0002:word16]
	Mem284[ss:sp_268 - 4:word16] = ss
	selector es_285 = Mem284[ss:sp_268 - 4:selector]
	word16 di_291 = fn0800_1048(SEQ(es_285, fp - 0x008A), ds, Mem284[ss:sp_268 - 2:word16])
	Mem300[es_285:di_291:byte] = 0x3A
	wArg02 = wArg02 + 0x0004
	di_265 = di_291 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1342:
	Mem305[ss:sp_268 - 2:word16] = ss
	selector es_306 = Mem305[ss:sp_268 - 2:selector]
	word16 di_314 = fn0800_1048(SEQ(es_306, di_265), ds, Mem305[ss:sp_268:word16])
	Mem322[ds:di_314:byte] = 0x00
	sp_1040 = sp_268 + 0x0002
	wLoc9A_1349 = wLoc9A_1349 & 0xFFFB
	word16 di_329 = di_314 - (fp - 0x008A)
	dx_225 = wLoc92_1352
	branch wLoc92_1352 > di_329 l0800_1366
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1364:
	dx_225 = di_329
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1366:
	es_di_2011 = SEQ(es_306, fp - 0x008A) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1274:
	bh_337 = 0x10
	bx_449 = DPB(DPB(bx << 0x0001, 0x10, 8), dl_129 + 0xE9, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1270:
	bh_337 = 0x0A
	bx_448 = DPB(bx << 0x0001, 0x0A, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_126C:
	bh_337 = 0x08
	bx_449 = DPB(bx << 0x0001, 0x08, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_127A:
	bx_448 = DPB(bx_449, bh_337, 8) (alias)
	bLoc8F_1350 = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_127F:
	bx_447 = DPB(bx_448, bh_337, 8) (alias)
	bLoc95_1394 = 0x00
	ax_355 = Mem351[ds:wArg02:word16]
	dx_356 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1291:
	int32 dx_ax_364 = (int32) Mem361[ds:wArg02:word16]
	bh_337 = 0x0A
	bx_447 = DPB(bx << 0x0001, 0x0A, 8) (alias)
	bLoc95_1394 = 0x01
	ax_355 = (word16) dx_ax_364 (alias)
	dx_356 = SLICE(dx_ax_364, word16, 16) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12A2:
	word16 di_366 = wArg02 + 0x0001
	bx = DPB(bx_447, bh_337, 8) (alias)
	word16 bx_464 = DPB(bx_447, bh_337, 8)
	word16 di_367 = di_366 + 0x0001
	wArg04 = si_1011
	branch (wLoc9A_1349 & 0x0010) == 0x0000 l0800_12B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12AF:
	dx_356 = Mem373[ds:di_366 + 0x0001:word16]
	di_367 = di_366 + 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12B3:
	wArg02 = di_367
	ax = ax_355
	branch ax_355 != 0x0000 l0800_12F1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12BE:
	dx = dx_356
	branch dx_356 != 0x0000 l0800_12F1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12F1:
	wLoc9A_1349 = wLoc9A_1349 | 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12C2:
	branch wLoc92_1352 != 0x0000 l0800_12F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12F6:
	word16 sp_416 = sp_1040 - 2
	Mem420[ss:sp_416:word16] = dx_356
	Mem424[ss:sp_416 - 2:word16] = ax_355
	Mem428[ss:sp_416 - 4:word16] = fp - 0x0089
	word16 ax_436 = (int16) bh_337
	Mem438[ss:sp_416 - 6:word16] = ax_436
	Mem443[ss:sp_416 - 8:word16] = DPB(ax_436, bLoc95_1394, 0)
	Mem465[ss:sp_416 - 10:word16] = bx_464
	__LONGTOA(ds, Mem465[ss:sp_416 - 10:byte], Mem465[ss:sp_416 - 8:byte], Mem465[ss:sp_416 - 6:word16], Mem465[ss:sp_416 - 4:word16], Mem465[ss:sp_416 - 2:word16], Mem465[ss:sp_416:word16])
	Mem477[ss:sp_416:word16] = ss
	selector es_478 = Mem477[ss:sp_416:selector]
	sp_1040 = sp_416 + 2
	dx_225 = wLoc92_1352
	branch wLoc92_1352 > 0x0000 l0800_1313
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1313:
	es_di_2005 = SEQ(es_478, fp - 0x0089) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1310:
	es_di_2011 = SEQ(es_478, fp - 0x0089) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1427:
	es_500 = SLICE(es_di_2011, selector, 16) (alias)
	di_497 = SLICE(es_di_2011, word16, 0) (alias)
	branch (wLoc9A_1349 & 0x0008) == 0x0000 l0800_1449
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_142F:
	dx_225 = wLoc94_1351
	es_di_2005 = es_di_2011 (alias)
	branch wLoc94_1351 <= 0x0000 l0800_1449
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1437:
	es_500 = SLICE(es_di_2005, selector, 16) (alias)
	di_497 = SLICE(es_di_2005, word16, 0) (alias)
	word16 cx_504 = fn0800_108C(di_497, es_500)
	branch Mem509[es_di_2005:byte] != 0x2D l0800_1441
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1440:
	cx_504 = cx_504 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1441:
	dx_225 = dx_225 - cx_504
	branch dx_225 <= 0x0000 l0800_1449
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1445:
	wLoc8E_1348 = dx_225
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1449:
	branch bLoc8F_1350 == 0x00 l0800_1465
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1451:
	branch Mem527[es_500:di_497:byte] == 0x2D l0800_1465
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1457:
	di_497 = di_497 - 0x0001
	Mem549[es_500:di_497:byte] = bLoc8F_1350
	word16 v40_540 = wLoc8E_1348 - 0x0001
	wLoc8E_1348 = v40_540 + (v40_540 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1465:
	cx_170 = fn0800_108C(di_497, es_500)
	es_di_2001 = SEQ(es_500, di_497) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1468:
	word16 di_558 = SLICE(es_di_2001, word16, 0)
	wArg04 = si_1011
	es = SLICE(es_di_2001, selector, 16) (alias)
	word16 si_1216 = di_558
	word16 bx_571 = wLoc94_1351
	ax = wLoc9A_1349 & 0x0005
	branch ax != 0x0005 l0800_1494
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_147E:
	ax = DPB(ax, dl_129, 8) (alias)
	ax = DPB(ax, dl_129, 8) (alias)
	ax = DPB(ax, dl_129, 8) (alias)
	branch dl_129 != 0x6F l0800_1497
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1497:
	branch dl_129 == 0x78 l0800_14A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_149C:
	branch dl_129 != 0x58 l0800_14B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14A1:
	word16 v37_592 = wLoc8E_1348 - 0x0002
	wLoc9A_1349 = wLoc9A_1349 | 0x0040
	bx_571 = wLoc94_1351 - 0x0002
	wLoc8E_1348 = v37_592
	branch v37_592 >= 0x0000 l0800_14B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14AF:
	wLoc8E_1348 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1487:
	branch wLoc8E_1348 > 0x0000 l0800_1494
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_148E:
	wLoc8E_1348 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1494:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14B5:
	cx = cx_170 + wLoc8E_1348
	branch (wLoc9A_1349 & 0x0002) != 0x0000 l0800_14CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14C1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14C9:
	branch bx_571 > cx l0800_14C3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14C3:
	ax = DPB(ax, 0x20, 0) (alias)
	di_1022 = fn0800_1099(SEQ(ds, di_1022), SEQ(ss, fp - 2), 0x20, cx, dx_225, bx_571, es)
	sp_1040 = sp_1040 + 0xFFFE
	bx_571 = bx_571 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14CD:
	branch (wLoc9A_1349 & 0x0040) == 0x0000 l0800_14E1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14D5:
	ax = DPB(ax, dl_129, 0) (alias)
	di_1022 = fn0800_1099(SEQ(ds, fn0800_1099(SEQ(ds, di_1022), SEQ(ss, fp - 2), 0x30, cx, dx_225, bx_571, es)), SEQ(ss, fp - 2), dl_129, cx, dx_225, bx_571, es)
	sp_1040 = sp_1040 + 0xFFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14E1:
	dx = wLoc8E_1348
	branch wLoc8E_1348 <= 0x0000 l0800_1510
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14E9:
	byte al_735 = Mem609[es_di_2001:byte]
	word16 cx_725 = cx - wLoc8E_1348
	bx_571 = bx_571 - wLoc8E_1348
	ax = DPB(ax, al_735, 0) (alias)
	branch al_735 == 0x2D l0800_14FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14F4:
	branch al_735 == 0x20 l0800_14FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14F8:
	branch al_735 != 0x2B l0800_1503
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14FC:
	byte al_746 = Mem609[ds:di_558:byte]
	ax = DPB(ax, al_746, 0) (alias)
	si_1216 = di_558 + 0x0001
	di_1022 = fn0800_1099(SEQ(ds, di_1022), SEQ(ss, fp - 2), al_746, cx_725, wLoc8E_1348, bx_571, es)
	sp_1040 = sp_1040 + 0xFFFE
	cx_725 = cx_725 - 0x0001
	bx_571 = bx_571 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1503:
	word16 cx_773 = wLoc8E_1348
	branch wLoc8E_1348 == 0x0000 l0800_150E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1507:
	ax = DPB(ax, 0x30, 0) (alias)
	di_1022 = fn0800_1099(SEQ(ds, di_1022), SEQ(ss, fp - 2), 0x30, cx_773, cx_725, bx_571, es)
	sp_1040 = sp_1040 + 0xFFFE
	cx_773 = cx_773 - 0x0001
	branch cx_773 != 0x0000 l0800_1507
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_150E:
	dx = cx_773
	cx = cx_725
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1510:
	branch cx == 0x0000 l0800_1523
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1512:
	bx_571 = bx_571 - cx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1514:
	byte al_807 = Mem806[ds:si_1216:byte]
	Mem810[ds:di_1022:byte] = al_807
	byte v42_814 = bLoc57_1340 - 0x01
	ax = DPB(ax, al_807, 0) (alias)
	si_1216 = si_1216 + 0x0001
	di_1022 = di_1022 + 0x0001
	bLoc57_1340 = v42_814
	branch v42_814 > 0x00 l0800_1521
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_151E:
	di_1022 = fn0800_10A1(SEQ(ss, fp - 2), cx, dx, bx_571, di_1022, es)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1521:
	cx = cx - 0x0001
	branch cx != 0x0000 l0800_1514
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1523:
	bx = bx_571
	branch bx_571 <= 0x0000 l0800_1530
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1527:
	cx = bx_571
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1529:
	ax = DPB(ax, 0x20, 0) (alias)
	di_1022 = fn0800_1099(SEQ(ds, di_1022), SEQ(ss, fp - 2), 0x20, cx, dx, bx_571, es)
	sp_1040 = sp_1040 + 0xFFFE
	cx = cx - 0x0001
	branch cx != 0x0000 l0800_1529
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1530:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12C9:
	cx = wLoc94_1351
	branch wLoc94_1351 == 0x0000 l0800_12EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12D3:
	branch wLoc94_1351 == 0xFFFF l0800_12EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12D8:
	byte dl_864
	branch (wLoc9A_1349 & 0x0008) == 0x0000 l0800_12E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12E5:
	dl_864 = 0x20
	dx = DPB(dx_356, 0x20, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12E1:
	dl_864 = 0x30
	dx = DPB(dx_356, 0x30, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12E7:
	dx = DPB(dx, dl_864, 0) (alias)
	ax = DPB(wLoc9A_1349 & 0x0008, dl_864, 0) (alias)
	di_1022 = fn0800_1099(SEQ(ds, di_1022), SEQ(ss, fp - 2), dl_864, cx, dx, bx, es)
	sp_1040 = sp_1040 + 0xFFFE
	cx = cx - 0x0001
	branch cx != 0x0000 l0800_12E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12EE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11B7:
	branch ch_1244 >u 0x00 l0800_1200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11BC:
	branch (wLoc9A_1349 & 0x0002) != 0x0000 l0800_11E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11C4:
	wLoc9A_1349 = wLoc9A_1349 | 0x0008
	ch_1244 = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_125C:
	wLoc9A_1349 = wLoc9A_1349 & 0xFFEF | 0x0080
	ch_1244 = 0x05
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_124C:
	wLoc9A_1349 = (wLoc9A_1349 | 0x0100) & 0xFFEF
	ch_1244 = 0x05
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1242:
	wLoc9A_1349 = wLoc9A_1349 | 0x0010
	ch_1244 = 0x05
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1200:
	dx = bx
	word16 ax_926 = (int16) ((byte) ax_65 - 0x30)
	branch ch_1244 >u 0x02 l0800_1224
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1224:
	branch ch_1244 != 0x04 l0800_11CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1229:
	wLoc92_1352 = ax_926
	ax_1200 = wLoc92_1352
	branch wLoc92_1352 < 0x0000 l0800_11E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1231:
	ax_1200 = (wLoc92_1352 << 0x0003) + (wLoc92_1352 << 0x0001)
	wLoc92_1352 = ax_926 + ax_1200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1209:
	ch_1244 = 0x02
	wLoc94_1351 = ax_926
	ax_1200 = wLoc94_1351
	branch wLoc94_1351 < 0x0000 l0800_11E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1213:
	ax_1200 = (wLoc94_1351 << 0x0003) + (wLoc94_1351 << 0x0001)
	wLoc94_1351 = ax_926 + ax_1200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11F6:
	branch ch_1244 >=u 0x04 l0800_11CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11FB:
	ch_1244 = 0x04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1184:
	branch ch_1244 >u 0x00 l0800_1175
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1189:
	wLoc9A_1349 = wLoc9A_1349 | 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11D1:
	ax_1200 = Mem74[ds:wArg02:word16]
	wArg02 = wArg02 + 0x0002
	branch ch_1244 >=u 0x02 l0800_11E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11E8:
	branch ch_1244 != 0x04 l0800_11CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11CE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11ED:
	wLoc92_1352 = ax_1200
	ch_1244 = ch_1244 + 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11DF:
	wLoc94_1351 = ax_1200
	ch_1244 = 0x03
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11E5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1178:
	branch ch_1244 >u 0x00 l0800_1175
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_117D:
	wLoc9A_1349 = wLoc9A_1349 | 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1190:
	branch ch_1244 >u 0x00 l0800_1175
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1175:
	dx = ax_65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1195:
	branch bLoc8F_1350 == 0x2B l0800_11A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_119C:
	bLoc8F_1350 = dl_129
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11A0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_111F:
	cx_1256 = DPB(cx_1256, ch_1244, 8) (alias)
	ax_1199 = DPB(ax_1200, Mem1007[ds:si_1011:byte], 0) (alias)
	si_1011 = si_1011 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1139:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1560:
	word16 si_1021 = si_1011
	byte al_1023 = 0x25
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_156A:
	di_1022 = fn0800_1099(SEQ(ds, di_1022), SEQ(ss, fp - 2), al_1023, cx, dx, bx, es)
	byte al_1044 = Mem1018[ds:si_1021:byte]
	sp_1040 = sp_1040 + 0xFFFE
	si_1021 = si_1021 + 0x0001
	al_1023 = al_1044
	branch al_1044 != 0x00 l0800_156A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1572:
	branch bLoc57_1340 >= 0x50 l0800_157B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1578:
	fn0800_10A1(SEQ(ss, fp - 2), cx, dx, bx, di_1022, es)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_157B:
	word16 sp_1077 = sp_1040 + 2
	branch 0x0000 == 0x0000 l0800_1589
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1589:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1582:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_158E:
	word16 si_1088 = Mem1052[ss:sp_1077 + 2:word16]
	diOut = Mem1052[ss:sp_1077:word16]
	return si_1088
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1073_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10E6:
	Mem1096[ds:di_1022:byte] = al_1093
	byte v15_1100 = bLoc57_1340 - 0x01
	ax = DPB(ax, al_1093, 0) (alias)
	di_1022 = di_1022 + 0x0001
	bLoc57_1340 = v15_1100
	branch v15_1100 > 0x00 l0800_10DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10EE:
	di_1022 = fn0800_10A1(SEQ(ss, fp - 2), cx, dx, bx, di_1022, es)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_108C(word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] es:[0..15]
// LiveOut: cx
// Trashed: SCZO al cx Top
// Preserved: di sp
fn0800_108C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_108C:
	word16 cx_12 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1092:
	branch cx_12 == 0x0000 l0800_1094
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1092_1:
	di = di_45 + 0x0001
	cx_12 = cx_12 - 0x0001
	di_45 = di
	branch Mem7[es:di_45:byte] == 0x00 l0800_1092
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1094:
	return ~cx_12 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_108C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1099(word32 ds_di, word32 ss_bp, byte al, word16 cx, word16 dx, word16 bx, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] bx:[0..15] cx:[0..15] dx:[0..15] es:[0..15] Sequence ds:di:[0..31] Sequence ss:bp:[0..31]
// LiveOut: di
// Trashed: SZO di Top
// Preserved: C sp
fn0800_1099_entry:
	word16 di = SLICE(ds_di, word16, 0)
	selector ss = SLICE(ss_bp, selector, 16)
	word16 bp = SLICE(ss_bp, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1099:
	Mem7[ds_di:byte] = al
	byte v9_11 = Mem7[ss:bp - 0x0055:byte] - 0x01
	Mem12[ss:bp - 0x0055:byte] = v9_11
	branch v9_11 <= 0x00 l0800_10CC_in_fn0800_1099
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10CC_in_fn0800_1099:
	return di + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_109F_thunk_fn0800_10A1:
	return fn0800_10A1(ss_bp, cx, dx, bx, di + 0x0001, es)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1099_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_10A1(word32 ss_bp, word16 cx, word16 dx, word16 bx, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] di:[0..15] dx:[0..15] es:[0..15] Sequence ss:bp:[0..31]
// LiveOut: di
// Trashed: SCZO di Top
// Preserved: bx cx dx es sp
fn0800_10A1_entry:
	selector ss = SLICE(ss_bp, selector, 16)
	word16 bp = SLICE(ss_bp, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10A1:
	word16 di_20 = di - (bp - 0x0054)
	word16 ax_34
	call SEQ(0x0800, Mem29[ss:bp + 0x000A:word16]) (retsize: 2;)
		uses: ax:bp - 0x0054,bx:bx,cx:cx,dx:dx,sp:fp - 14,Stack +0002:Mem26[ss_bp + 0x0008:word16],Stack +0004:di_20,Stack +0006:bp - 0x0054,Stack +0008:es,Stack +000A:dx,Stack +000C:cx,Stack +000E:bx,Top:0
		defs: ax:ax_34
	branch ax_34 != 0x0000 l0800_10BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10B9:
	Mem41[ss_bp - 0x0002:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10BE:
	Mem44[ss_bp - 0x0055:byte] = 0x50
	Mem47[ss_bp - 0x0058:word16] = Mem44[ss_bp - 0x0058:word16] + di_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10CC:
	return bp - 0x0054
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_10A1_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_1596(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx Top
// Preserved: bp di si sp
fn0800_1596_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1596:
	branch Mem14[ds:0x062A:word16] == 0x0000 l0800_15C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_15C1:
	Mem19[ds:0x062A:word16] = wArg02
	Mem20[ds:wArg02 + 0x0004:word16] = wArg02
	Mem21[ds:wArg02 + 0x0006:word16] = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_15A5:
	word16 di_23 = Mem14[ds:Mem14[ds:0x062A:word16] + 0x0006:word16]
	Mem25[ds:Mem14[ds:0x062A:word16] + 0x0006:word16] = wArg02
	Mem26[ds:di_23 + 0x0004:word16] = wArg02
	Mem27[ds:wArg02 + 0x0006:word16] = di_23
	Mem29[ds:wArg02 + 0x0004:word16] = Mem27[ds:0x062A:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_15CB:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1596_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_15CF(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx Top
// Preserved: bp di si sp
fn0800_15CF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_15CF:
	Mem21[ds:wArg02:word16] = Mem15[ds:wArg02:word16] + Mem15[ds:wArg04:word16]
	branch Mem21[ds:0x0628:word16] != wArg04 l0800_15EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_15EE:
	Mem30[ds:Mem21[ds:wArg04:word16] + wArg04 + 0x0002:word16] = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_15E8:
	Mem31[ds:0x0628:word16] = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_15FB:
	___pull_free_block(ds, wArg04)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_15CF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_1606(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: si sp
fn0800_1606_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1606:
	branch Mem7[ds:0x062C:word16] != Mem7[ds:0x0628:word16] l0800_1622
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1622:
	word16 si_13 = Mem7[ds:Mem7[ds:0x0628:word16] + 0x0002:word16]
	branch (Mem7[ds:si_13:word16] & 0x0001) != 0x0000 l0800_1651
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1651:
	_brk(ds, Mem7[ds:0x0628:word16])
	Mem29[ds:0x0628:word16] = si_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_162F:
	___pull_free_block(ds, si_13)
	branch si_13 != Mem31[ds:0x062C:word16] l0800_1644
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1644:
	Mem43[ds:0x0628:word16] = Mem31[ds:si_13 + 0x0002:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_163A:
	Mem47[ds:0x0628:word16] = 0x0000
	Mem48[ds:0x062C:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_164A:
	_brk(ds, si_13)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1610:
	_brk(ds, Mem7[ds:0x062C:word16])
	Mem79[ds:0x0628:word16] = 0x0000
	Mem80[ds:0x062C:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_165D:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1606_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_165F(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx Top
// Preserved: bp di si sp
fn0800_165F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_165F:
	Mem19[ds:wArg02:word16] = Mem15[ds:wArg02:word16] - 0x0001
	word16 si_16 = wArg02
	word16 ax_21 = Mem19[ds:wArg02:word16] + wArg02
	word16 di_23 = Mem22[ds:wArg02 + 0x0002:word16]
	branch (Mem22[ds:di_23:word16] & 0x0001) != 0x0000 l0800_1690
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_167C:
	branch wArg02 == Mem22[ds:0x062C:word16] l0800_1690
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1690:
	fn0800_1596(ds, wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1682:
	Mem45[ds:di_23:word16] = Mem22[ds:di_23:word16] + Mem22[ds:wArg02:word16]
	Mem48[ds:ax_21 + 0x0002:word16] = di_23
	si_16 = di_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1695:
	branch (Mem53[ds:ax_21:word16] & 0x0001) != 0x0000 l0800_16A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_169E:
	fn0800_15CF(ds, si_16, ax_21)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16A7:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_165F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _free(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp si sp
fn0800_16AD_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16AD:
	branch wArg02 != 0x0000 l0800_16BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16BA:
	branch wArg02 + 0xFFFC != Mem11[ds:0x0628:word16] l0800_16CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16CC:
	fn0800_165F(ds, wArg02 + 0xFFFC)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16C7:
	fn0800_1606(ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16B8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16D1:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_16AD_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 _scanf(word16 cx, word16 dx, word16 bx, word16 si, word16 di, selector es, selector ds, word16 wArg02, ptr16 & bxOut, ptr16 & bpOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] dx:[0..15] es:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: bp bx dx es sp
// Trashed: SCZDO ax bp bx cx di dx es si sp Top
// Preserved:
_scanf_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16D4:
	word16 bp_32
	selector es_35
	word16 bx_39
	word16 dx_40 = __scanner(cx, dx, bx, fp - 2, si, di, es, ds, 0x07F2, 0x1D65, 0x0342, wArg02, out bx_39, out bp_32, out es_35)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16F1:
	word16 bp_47 = Mem23[ss:bp_32:word16]
	bxOut = bx_39
	bpOut = bp_47
	esOut = es_35
	return dx_40
// DataOut:
// DataOut (flags):
// SymbolicIn:

_scanf_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 __scanner(word16 cx, word16 dx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & bxOut, ptr16 & bpOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] dx:[0..15] es:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: bp bx dx es
// Trashed: SCZDO ax bp bx cx di dx es si sp Top
// Preserved:
fn0800_16F3_entry:
	int8 Top_1192 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16F3:
	word16 wLoc2A_1203 = 0x0000
	word16 wLoc28_1204 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1721:
	word16 sp_1000 = fp - 0x0032
	di_1093 = di
	es_1137 = es
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1723:
	selector es_1137
	word16 di_1093
	word16 si_26 = wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1726:
	byte al_30 = Mem29[ds:si_26:byte]
	si_26 = si_26 + 0x0001
	byte al_32 = al_30
	branch al_30 == 0x00 l0800_1788
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1788:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1788_thunk_fn0800_1AEB:
	word16 bp_41
	selector es_44
	fn0800_1AEB(SEQ(ss, fp - 2), cx, out cx_1698, out bp_41, out es_44)
	bxOut = bx
	bpOut = bp_41
	esOut = es_44
	return dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_172B:
	branch al_30 == 0x25 l0800_178B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_178B:
	wLoc24 = 0xFFFF
	bLoc2B = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1794:
	si_26 = si_26 + 0x0001
	word16 ax_61 = (int16) Mem58[ds:si_26:byte]
	wArg08 = si_26
	di_1093 = ax_61
	branch ax_61 < 0x0000 l0800_17E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_179E:
	word16 bx_77 = DPB(DPB(bx, Mem64[ds:ax_61 + 0x055A:byte], 0), 0x00, 8)
	word16 ax_726 = bx_77
	al_32 = (byte) bx_77 (alias)
	branch bx_77 <=u 0x0015 l0800_17AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17AE:
	word16 ax_122
	word16 si_121
	bx = bx_77 << 0x0001
	switch (bx_77) { l0800_17E6 l0800_17E6 l0800_17E6 l0800_17E3 l0800_17E9 l0800_17EF l0800_19C8 l0800_1837 l0800_1837 l0800_1841 l0800_1908 l0800_1803 l0800_180F l0800_1809 l0800_1832 l0800_196C l0800_1A06 l0800_1824 l0800_183C l0800_1895 l0800_1816 l0800_181D }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_181D:
	bLoc2B = bLoc2B | 0x20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1816:
	bLoc2B = bLoc2B & 0xDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1895:
	word16 bp_95
	word16 bx_96
	word16 cx_97
	word16 ax_94 = fn0800_1898(SEQ(ss, fp - 2), bx_77, cx, bx_77 << 0x0001, ds, out cx_97, out bx_96, out bp_95, out es_1695)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1895_thunk_fn0800_1898:
	word16 bp_109
	word16 bx_110
	selector es_113
	fn0800_1898(SEQ(ss, bp_95), ax_94, cx_97, bx_96, ds, out cx_1701, out bx_110, out bp_109, out es_113)
	bxOut = bx_110
	bpOut = bp_109
	esOut = es_113
	return dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_183C:
	si_121 = 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1824:
	ax_122 = wLoc28_1204
	dx = 0x0000
	branch (bLoc2B & 0x01) == 0x00 l0800_187E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_182F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A06:
	word16 sp_131 = sp_1000 - 2
	Mem132[ss:sp_131:word16] = ss
	es_1137 = Mem132[ss:sp_131:selector]
	sp_1000 = sp_131 + 2
	word16 di_135 = fp - 0x0022
	word16 cx_136 = 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A11:
	branch cx_136 == 0x0000 l0800_1A13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A13:
	byte al_1055 = Mem140[ds:si_26:byte]
	byte v42_145 = bLoc2B & 0xEF
	word16 ax_1056 = (word16) al_1055
	word16 si_1079 = si_26 + 0x0001
	bLoc2B = v42_145
	branch al_1055 != 0x5E l0800_1A21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A1C:
	al_1055 = Mem151[ds:si_26 + 0x0001:byte]
	bLoc2B = v42_145 | 0x10
	ax_1056 = DPB(ax_1056, al_1055, 0) (alias)
	si_1079 = si_26 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A21:
	word16 ax_1060 = DPB(DPB(ax_1056, 0x00, 8), al_1055, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A23:
	word16 ax_1061 = DPB(ax_1060, al_1055, 0)
	Mem173[ss:fp - 0x0022 + (ax_1061 >>u 0x03):byte] = Mem171[ss:fp - 0x0022 + (ax_1061 >>u 0x03):byte] | 0x80
	byte dl_1130 = al_1055
	word16 dx_1109 = DPB(dx, al_1055, 0)
	di_1093 = ax_1061 >>u 0x03
	cx = 0x8007 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A35:
	al_1055 = Mem178[ds:si_1079:byte]
	byte ch_1131 = SLICE(cx, byte, 8)
	dx = DPB(dx_1711, dl_1130, 0) (alias)
	dx = DPB(dx_1711, dl_1130, 0) (alias)
	dx = DPB(dx_1711, dl_1130, 0) (alias)
	dx_1109 = DPB(dx_1711, dl_1130, 0) (alias)
	word16 dx_1121 = DPB(dx_1711, dl_1130, 0)
	dx = DPB(dx_1711, dl_1130, 0) (alias)
	ax_1060 = DPB(ax_1710, al_1055, 0) (alias)
	ax_1060 = DPB(ax_1710, al_1055, 0) (alias)
	word16 ax_1071 = DPB(ax_1710, al_1055, 0)
	ax_1060 = DPB(ax_1710, al_1055, 0) (alias)
	si_1079 = si_1079 + 0x0001
	branch al_1055 == 0x00 l0800_1A60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A60:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A60_thunk_fn0800_1AFF:
	word16 bp_187
	selector es_189
	fn0800_1AFF(SEQ(ss, fp - 2), out bp_187, out es_189)
	bxOut = bx_77 << 0x0001
	bpOut = bp_187
	esOut = es_189
	return dx_1121
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A3A:
	branch al_1055 == 0x5D l0800_1A63
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A63:
	word16 v61_195 = wLoc24_1712 & 0x7FFF
	wArg08 = si_1079
	wLoc24 = v61_195
	word16 si_198 = v61_195
	branch (bLoc2B & 0x01) != 0x00 l0800_1A77
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A74:
	di_1093 = fn0800_1708(SEQ(ss, fp - 2), ds, out es_1137)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A77:
	word16 si_210 = si_198 - 0x0001
	branch si_210 < 0x0000 l0800_1ACA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A7A:
	word16 v66_216 = wLoc28_1204 + 0x0001
	word16 sp_220 = sp_1000 - 2
	Mem222[ss:sp_220:word16] = es_1137
	Mem225[ss:sp_220 - 2:word16] = wArg06
	word16 sp_226
	word16 ax_229
	word16 bx_234
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_228,bx:bx_233,cx:cx_231,dx:dx_235,sp:sp_220 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:si_180,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD7:bLoc2B_1408,Stack +FFFFFFD8:wLoc2A_1561,Stack +FFFFFFDA:v66_216,Stack +FFFFFFDC:wLoc26,Stack +FFFFFFDE:v61_195,Top:Top_237
		defs: ax:ax_229,bx:bx_234,dx:dx_236,sp:sp_226,Top:Top_238
	wLoc28_1204 = v66_216
	word16 cx_240 = Mem225[ss:sp_226:word16]
	es_1137 = Mem225[ss:sp_226 + 2:selector]
	sp_1000 = sp_226 + 4
	branch ax_229 < 0x0000 l0800_1AD9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD9:
	branch si_210 + 0x0001 >= v61_195 l0800_1ADD_thunk_fn0800_1AEB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1ADD_thunk_fn0800_1AEB:
	word16 bp_253
	selector es_256
	fn0800_1AEB(SEQ(ss, fp - 2), cx_240, out cx_1707, out bp_253, out es_256)
	bxOut = bx_234
	bpOut = bp_253
	esOut = es_256
	return dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1ADF:
	branch (bLoc2B & 0x01) != 0x00 l0800_1AE3_thunk_fn0800_1AEB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AE3_thunk_fn0800_1AEB:
	word16 bp_269
	selector es_272
	fn0800_1AEB(SEQ(ss, fp - 2), cx_240, out cx_1708, out bp_269, out es_272)
	bxOut = bx_234
	bpOut = bp_269
	esOut = es_272
	return dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AE5:
	Mem281[es_1137:di_1093:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AE8_thunk_fn0800_1AEB:
	word16 bp_288
	selector es_291
	fn0800_1AEB(SEQ(ss, fp - 2), cx_240, out cx_1709, out bp_288, out es_291)
	bxOut = bx_234
	bpOut = bp_288
	esOut = es_291
	return dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A8A:
	cx = 0x8007 (alias)
	si_198 = si_210
	byte al_333 = (byte) ax_229
	ax_1071 = ax_229 (alias)
	ax_1071 = ax_229 (alias)
	bx = ax_229 >>u 0x03
	branch (Mem225[ss:fp - 0x0022 + (ax_229 >>u 0x03):byte] & 0x80) == 0x00 l0800_1AA7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AA7:
	branch (bLoc2B & 0x10) == 0x00 l0800_1AB6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A9F:
	branch (bLoc2B & 0x10) == 0x00 l0800_1AAD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AAD:
	branch (bLoc2B & 0x01) != 0x00 l0800_1A77
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AB3:
	Mem336[es_1137:di_1093:byte] = al_333
	di_1093 = di_1093 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AA5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AB6:
	Mem342[ss:sp_226 + 2:word16] = es_1137
	Mem346[ss:sp_226:word16] = wArg06
	Mem351[ss:sp_226 - 2:word16] = ax_229
	word16 sp_352
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:ax_229,bx:ax_229 >>u 0x03,cx:0x8007,dx:dx_236,sp:sp_226 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:si_180,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD7:bLoc2B_1408,Stack +FFFFFFD8:wLoc2A_1561,Stack +FFFFFFDA:v66_216,Stack +FFFFFFDC:wLoc26,Stack +FFFFFFDE:v61_195,Top:Top_238
		defs: bx:bx_361,dx:dx_363,sp:sp_352,Top:Top_365
	cx = Mem351[ss:sp_352 + 2:word16]
	es_1137 = Mem351[ss:sp_352 + 4:selector]
	sp_1000 = sp_352 + 6
	branch si_210 + 0x0001 >= v61_195 l0800_1AD3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1ACA:
	branch (bLoc2B & 0x01) != 0x00 l0800_1AD6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD0:
	wLoc2A_1203 = wLoc2A_1203 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD3:
	Mem392[es_1137:di_1093:byte] = 0x00
	di_1093 = di_1093 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A3E:
	branch al_1055 != 0x2D l0800_1A23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A42:
	branch dl_1130 >u Mem178[ds:si_1079:byte] l0800_1A23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A46:
	branch Mem178[ds:si_1079:byte] == 0x5D l0800_1A23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A4B:
	byte al_403 = Mem178[ds:si_1079:byte] - dl_1130
	si_1079 = si_1079 + 0x0001
	ax_1061 = DPB(ax_1710, al_403, 0) (alias)
	ax_1710 = ax_1061
	dx_1711 = dx_1109
	branch al_403 == 0x00 l0800_1A35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A50:
	byte dl_406 = dl_1130 + al_403
	dx_1109 = DPB(dx_1711, dl_406, 0) (alias)
	dl_1130 = dl_406 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A52:
	ch_1131 = __rol(ch_1131, 0x01)
	di_1093 = di_1093 + ((ch_1131 & 0x80) != 0x00)
	Mem418[ss:fp - 0x0022 + di_1093:byte] = Mem416[ss:fp - 0x0022 + di_1093:byte] | ch_1131
	al_403 = al_403 - 0x01
	cx = DPB(cx, ch_1131, 8) (alias)
	ax_1061 = DPB(ax_1710, al_403, 0) (alias)
	branch al_403 != 0x00 l0800_1A52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A5E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A11_1:
	Mem428[es_1137:di_135:word16] = 0x0000
	di_135 = di_135 + 0x0002
	cx_136 = cx_136 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_196C:
	word16 bp_433
	word16 bx_434
	word16 cx_435
	word16 ax_432 = fn0800_196F(SEQ(ss, fp - 2), bx_77, cx, bx_77 << 0x0001, ds, out cx_435, out bx_434, out bp_433, out es_1694)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_196C_thunk_fn0800_196F:
	word16 bp_447
	word16 bx_448
	selector es_451
	fn0800_196F(SEQ(ss, bp_433), ax_432, cx_435, bx_434, ds, out cx_1703, out bx_448, out bp_447, out es_451)
	bxOut = bx_448
	bpOut = bp_447
	esOut = es_451
	return dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1832:
	si_121 = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1809:
	bLoc2B = bLoc2B | 0x04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_180F:
	bLoc2B = bLoc2B | 0x02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1803:
	bLoc2B = bLoc2B | 0x08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1908:
	word16 sp_473 = sp_1000 - 2
	Mem474[ss:sp_473:word16] = fp - 0x0026
	Mem477[ss:sp_473 - 2:word16] = fp - 0x0028
	Mem483[ss:sp_473 - 4:word16] = wLoc24_1712 & 0x7FFF
	Mem486[ss:sp_473 - 6:word16] = wArg06
	Mem489[ss:sp_473 - 8:word16] = wArg04
	Mem492[ss:sp_473 - 10:word16] = wArg02
	__scantod(ds)
	word16 sp_493 = <invalid>
	branch wLoc26 <= 0x0000 l0800_1964
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1964:
	__scanpop(ds)
	branch wLoc26 < 0x0000 l0800_1905
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1905:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1905_thunk_fn0800_1AEB:
	word16 bp_503
	selector es_506
	fn0800_1AEB(SEQ(ss, fp - 2), cx, out cx_1706, out bp_503, out es_506)
	bxOut = bx_77 << 0x0001
	bpOut = bp_503
	esOut = es_506
	return dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1969:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1969_thunk_fn0800_1AFF:
	word16 bp_516
	selector es_518
	fn0800_1AFF(SEQ(ss, fp - 2), out bp_516, out es_518)
	bxOut = bx_77 << 0x0001
	bpOut = bp_516
	esOut = es_518
	return dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_192C:
	branch (bLoc2B & 0x01) == 0x00 l0800_1935
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1935:
	word16 ax_539
	di_1093 = fn0800_1708(SEQ(ss, fp - 2), ds, out es_1137)
	wLoc2A_1203 = wLoc2A_1203 + 0x0001
	branch (bLoc2B & 0x04) == 0x00 l0800_1946
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1946:
	branch (bLoc2B & 0x08) == 0x00 l0800_1951
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1951:
	ax_539 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_194C:
	ax_539 = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1941:
	ax_539 = 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1953:
	Mem548[ss:sp_493 + 0x000A:word16] = ax_539
	Mem551[ss:sp_493 + 0x0008:word16] = di_1093
	word16 sp_553 = <invalid>
	Top_1192 = __scanrslt(ds)
	sp_1000 = sp_553 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1932:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_195E:
	Top_1192 = __scanpop(ds)
	sp_1000 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1841:
	si_121 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1837:
	si_121 = 0x000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1844:
	branch (ax_61 & 0x0020) != 0x0000 l0800_184E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_184A:
	bLoc2B = bLoc2B | 0x04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_184E:
	word16 sp_581 = sp_1000 - 2
	Mem583[ss:sp_581:word16] = fp - 0x0026
	Mem586[ss:sp_581 - 2:word16] = fp - 0x0028
	Mem592[ss:sp_581 - 4:word16] = wLoc24_1712 & 0x7FFF
	Mem597[ss:sp_581 - 6:word16] = si_121
	Mem600[ss:sp_581 - 8:word16] = wArg06
	Mem603[ss:sp_581 - 10:word16] = wArg04
	Mem606[ss:sp_581 - 12:word16] = wArg02
	ax_122 = __scantol(si_121, cx, dx, bx_77 << 0x0001, fp - 2, si_121, ax_61, es_1137, ds, Mem606[ss:sp_581 - 12:word16], Mem606[ss:sp_581 - 10:word16], Mem606[ss:sp_581 - 8:word16], Mem606[ss:sp_581 - 6:word16], Mem606[ss:sp_581 - 4:word16], Mem606[ss:sp_581 - 2:word16], Mem606[ss:sp_581:word16], out cx, out dx, out bx, out di_1093, out es_1137, out Top_1192)
	branch wLoc26 <= 0x0000 l0800_188D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_188D:
	branch wLoc26 < 0x0000 l0800_1892
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1892:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1892_thunk_fn0800_1AEB:
	word16 bp_643
	selector es_646
	fn0800_1AEB(SEQ(ss, fp - 2), cx, out cx_1705, out bp_643, out es_646)
	bxOut = bx
	bpOut = bp_643
	esOut = es_646
	return dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_188F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_188F_thunk_fn0800_1AFF:
	word16 bp_656
	selector es_658
	fn0800_1AFF(SEQ(ss, fp - 2), out bp_656, out es_658)
	bxOut = bx
	bpOut = bp_656
	esOut = es_658
	return dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1875:
	branch (bLoc2B & 0x01) != 0x00 l0800_188A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_187B:
	wLoc2A_1203 = wLoc2A_1203 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_187E:
	fn0800_1708(SEQ(ss, fp - 2), ds, out es_1702)
	word32 es_di_1690 = <invalid>
	Mem678[es_di_1690:word16] = ax_122
	word16 di_671 = SLICE(es_di_1690, word16, 0)
	es_1137 = SLICE(es_di_1690, selector, 16) (alias)
	di_1093 = di_671 + 0x0002
	branch (bLoc2B & 0x04) == 0x00 l0800_188A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1888:
	Mem687[es_di_1690 + 0x0002:word16] = dx
	dx = ax_122
	di_1093 = di_671 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_188A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19C8:
	branch (bLoc2B & 0x01) != 0x00 l0800_19D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19CE:
	di_1093 = fn0800_1708(SEQ(ss, fp - 2), ds, out es_1137)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19D1:
	word16 si_1139 = wLoc24_1712
	branch wLoc24_1712 >= 0x0000 l0800_19DB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19D8:
	si_1139 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19DB:
	branch wLoc24_1712 == 0x0000 l0800_19F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19DD:
	word16 v49_713 = wLoc28_1204 + 0x0001
	word16 sp_717 = sp_1000 - 2
	Mem719[ss:sp_717:word16] = es_1137
	Mem722[ss:sp_717 - 2:word16] = wArg06
	word16 sp_723
	word16 ax_727
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_726,bx:bx_731,cx:cx_729,dx:dx_733,sp:sp_717 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:si_60,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD7:bLoc2B_1210,Stack +FFFFFFD8:wLoc2A_1561,Stack +FFFFFFDA:v49_713,Stack +FFFFFFDC:wLoc26,Stack +FFFFFFDE:wLoc24_1257,Top:Top_735
		defs: ax:ax_727,bx:bx_732,dx:dx_734,sp:sp_723,Top:Top_736
	wLoc28_1204 = v49_713
	byte al_745 = (byte) ax_727
	cx = Mem722[ss:sp_723:word16]
	es_1137 = Mem722[ss:sp_723 + 2:selector]
	sp_1000 = sp_723 + 4
	branch (bLoc2B & 0x01) != 0x00 l0800_19F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19EF:
	Mem746[es_1137:di_1093:byte] = al_745
	di_1093 = di_1093 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19F0:
	ax_726 = ax_727
	branch ax_727 < 0x0000 l0800_1A03
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A03:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A03_thunk_fn0800_1AEB:
	word16 bp_759
	selector es_762
	fn0800_1AEB(SEQ(ss, fp - 2), cx, out cx_1704, out bp_759, out es_762)
	bxOut = bx
	bpOut = bp_759
	esOut = es_762
	return dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19F4:
	si_1139 = si_1139 - 0x0001
	branch si_1139 > 0x0000 l0800_19DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19F7:
	branch (bLoc2B & 0x01) != 0x00 l0800_1A00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19FD:
	wLoc2A_1203 = wLoc2A_1203 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A00:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17EF:
	wLoc24 = ax_61 - 0x0030
	wLoc24_1712 = wLoc24
	branch wLoc24_1712 < 0x0000 l0800_1794
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17F9:
	dx = SLICE(wLoc24_1712 *u 0x000A, word16, 16) (alias)
	wLoc24 = ax_61 - 0x0030 + (word16) (wLoc24_1712 *u 0x000A)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17E9:
	bLoc2B = bLoc2B | 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17E3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17E6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17E6_thunk_fn0800_1AEB:
	word16 bp_809
	selector es_812
	fn0800_1AEB(SEQ(ss, fp - 2), cx, out cx_1700, out bp_809, out es_812)
	bxOut = bx
	bpOut = bp_809
	esOut = es_812
	return dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17AB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17AB_thunk_fn0800_1AEB:
	word16 bp_822
	selector es_825
	fn0800_1AEB(SEQ(ss, fp - 2), cx, out cx_1697, out bp_822, out es_825)
	bxOut = bx_77
	bpOut = bp_822
	esOut = es_825
	return dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_172F:
	word16 v17_844 = wLoc28_1204 + 0x0001
	word16 sp_850 = sp_1000 - 2
	Mem851[ss:sp_850:word16] = wArg06
	word16 sp_852
	word16 ax_856
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:di_837,bx:bx_860,cx:cx_39,dx:dx_863,sp:sp_850,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_1336,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD7:bLoc2B_1340,Stack +FFFFFFD8:wLoc2A_1561,Stack +FFFFFFDA:v17_844,Stack +FFFFFFDC:wLoc26,Stack +FFFFFFDE:wLoc24_1338,Top:Top_867
		defs: ax:ax_856,bx:bx_862,dx:dx_865,sp:sp_852,Top:Top_869
	word16 ax_835 = (int16) al_32
	wLoc28_1204 = v17_844
	cx = Mem851[ss:sp_852:word16]
	sp_1000 = sp_852 + 2
	word16 ax_1001 = ax_856
	branch ax_856 < 0x0000 l0800_1764
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_173F:
	di_1093 = ax_835
	branch ax_835 < 0x0000 l0800_1775
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1743:
	branch Mem851[ds:ax_835 + 0x055A:byte] != 0x01 l0800_1775
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1775:
	branch ax_856 == ax_835 l0800_1726
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1779:
	Mem893[ss:sp_852:word16] = wArg06
	Mem895[ss:sp_852 - 2:word16] = ax_856
	word16 sp_896
	word16 bx_904
	word16 dx_906
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:ax_856,bx:bx_862,cx:cx_871,dx:dx_865,sp:sp_852 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_1336,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD7:bLoc2B_1340,Stack +FFFFFFD8:wLoc2A_1561,Stack +FFFFFFDA:v17_844,Stack +FFFFFFDC:wLoc26,Stack +FFFFFFDE:wLoc24_1338,Top:Top_869
		defs: bx:bx_904,dx:dx_906,sp:sp_896
	word16 cx_912 = Mem895[ss:sp_896 + 2:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1785_thunk_fn0800_1AEB:
	word16 bp_919
	selector es_922
	fn0800_1AEB(SEQ(ss, fp - 2), cx_912, out cx_1699, out bp_919, out es_922)
	bxOut = bx_904
	bpOut = bp_919
	esOut = es_922
	return dx_906
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_174A:
	branch (byte) ax_1001 < 0x00 l0800_1767
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_174F:
	branch Mem942[ds:ax_1001 + 0x055A:byte] != 0x01 l0800_1767
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1767:
	word16 sp_953 = sp_1000 - 2
	Mem954[ss:sp_953:word16] = wArg06
	Mem957[ss:sp_953 - 2:word16] = ax_1001
	word16 sp_958
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:bx_932,bx:ax_930,cx:cx_969,dx:dx_973,sp:sp_953 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_1336,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD7:bLoc2B_1340,Stack +FFFFFFD8:wLoc2A_1561,Stack +FFFFFFDA:wLoc28_1373,Stack +FFFFFFDC:wLoc26,Stack +FFFFFFDE:wLoc24_1338,Top:Top_976
		defs: bx:bx_971,dx:dx_974,sp:sp_958,Top:Top_977
	cx = Mem957[ss:sp_958 + 2:word16]
	sp_1000 = sp_958 + 4
	wLoc28_1204 = wLoc28_1204 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1756:
	word16 v25_986 = wLoc28_1204 + 0x0001
	word16 sp_990 = sp_1000 - 2
	Mem991[ss:sp_990:word16] = wArg06
	word16 sp_992
	word16 ax_993
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:bx_932,bx:ax_930,cx:cx_969,dx:dx_973,sp:sp_990,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_1336,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD7:bLoc2B_1340,Stack +FFFFFFD8:wLoc2A_1561,Stack +FFFFFFDA:v25_986,Stack +FFFFFFDC:wLoc26,Stack +FFFFFFDE:wLoc24_1338,Top:Top_976
		defs: ax:ax_993,bx:bx_995,dx:dx_996,sp:sp_992,Top:Top_997
	wLoc28_1204 = v25_986
	cx = Mem991[ss:sp_992:word16]
	sp_1000 = sp_992 + 2
	ax_1001 = ax_993
	branch ax_993 > 0x0000 l0800_174A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1764:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1764_thunk_fn0800_1AEB:
	word16 bp_1009
	selector es_1012
	fn0800_1AEB(SEQ(ss, fp - 2), cx, out cx_1696, out bp_1009, out es_1012)
	bxOut = bx
	bpOut = bp_1009
	esOut = es_1012
	return dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_16F3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1708(word32 ss_bp, selector ds, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: di es
// Trashed: SCZO di es Top
// Preserved: sp
fn0800_1708_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1708:
	word16 di_7 = Mem0[ss_bp + 0x000C:word16]
	branch (Mem0[ss_bp - 0x0029:byte] & 0x20) == 0x00 l0800_1718
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1718:
	word16 di_12 = Mem0[ds:di_7:word16]
	Mem18[ss_bp + 0x000C:word16] = Mem14[ss_bp + 0x000C:word16] + 0x0002
	esOut = ds
	return di_12
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1711:
	ptr32 es_di_20 = Mem0[ds:di_7:segptr32]
	Mem22[ss_bp + 0x000C:word16] = Mem0[ss_bp + 0x000C:word16] + 0x0004
	esOut = SLICE(es_di_20, selector, 16)
	return (word16) es_di_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1708_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1898(word32 ss_bp, word16 ax, word16 cx, word16 bx, selector ds, ptr16 & cxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: ax bp bx cx es
// Trashed: SCZO ax bp bx cx di es si sp Top
// Preserved:
fn0800_1898_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1898:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1898_thunk_fn0800_1B06:
	word16 bx_12
	word16 cx_13
	word16 bp_16
	selector es_18
	word16 ax_11 = fn0800_1B06(ss_bp, ax, cx, bx, ds, out cx_13, out bx_12, out bp_16, out es_18)
	cxOut = cx_13
	bxOut = bx_12
	bpOut = bp_16
	esOut = es_18
	return ax_11
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1898_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_18AF(word32 ss_bp, word16 ax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] Sequence ss:bp:[0..31]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si sp Top
// Preserved:
fn0800_18AF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_18AF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_18AF_thunk_fn0800_1B2C:
	fn0800_1B2C(ss_bp, ax)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_18AF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_18CF(word32 ss_bp, word16 ax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] Sequence ss:bp:[0..31]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si sp Top
// Preserved:
fn0800_18CF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_18CF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_18CF_thunk_fn0800_1B2C:
	fn0800_1B2C(ss_bp, ax)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_18CF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_196F(word32 ss_bp, word16 ax, word16 cx, word16 bx, selector ds, ptr16 & cxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: ax bp bx cx es
// Trashed: SCZO ax bp bx cx di es si sp Top
// Preserved:
fn0800_196F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_196F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_196F_thunk_fn0800_1B06:
	word16 bx_12
	word16 cx_13
	word16 bp_16
	selector es_18
	word16 ax_11 = fn0800_1B06(ss_bp, ax, cx, bx, ds, out cx_13, out bx_12, out bp_16, out es_18)
	cxOut = cx_13
	bxOut = bx_12
	bpOut = bp_16
	esOut = es_18
	return ax_11
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_196F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1AEB(word32 ss_bp, word16 cx, ptr16 & cxOut, ptr16 & bpOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] Sequence ss:bp:[0..31]
// LiveOut: ax bp cx es
// Trashed: SCZO ax bp cx di es si sp Top
// Preserved:
fn0800_1AEB_entry:
	selector ss = SLICE(ss_bp, selector, 16)
	word16 bp = SLICE(ss_bp, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AEB:
	word16 sp_13
	call SEQ(0x0800, Mem12[ss:bp + 0x0006:word16]) (retsize: 2;)
		uses: ax:0xFFFF,cx:cx,sp:fp - 4,Stack +0002:0xFFFF,Stack +0004:Mem0[ss:bp + 0x0008:word16],Top:0
		defs: sp:sp_13
	word16 cx_24 = Mem12[ss:sp_13 + 2:word16]
	Mem29[ss:bp - 0x0028:word16] = Mem12[ss:bp - 0x0028:word16] - (Mem12[ss:bp - 0x0028:word16] <u 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AFB_thunk_fn0800_1AFF:
	word16 bp_33
	selector es_35
	word16 ax_32 = fn0800_1AFF(ss_bp, out bp_33, out es_35)
	cxOut = cx_24
	bpOut = bp_33
	esOut = es_35
	return ax_32
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1AEB_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1AFF(word32 ss_bp, ptr16 & bpOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Sequence ss:bp:[0..31]
// LiveOut: ax bp es
// Trashed: ax bp di es si sp Top
// Preserved:
fn0800_1AFF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AFF:
	word16 ax_9 = Mem0[ss_bp - 0x0028:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B8C:
	bpOut = Mem0[ss_bp:word16]
	esOut = psegArg00
	return ax_9
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1AFF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1B06(word32 ss_bp, word16 ax, word16 cx, word16 bx, selector ds, ptr16 & cxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: ax bp bx cx es
// Trashed: SCZO ax bp bx cx di es si sp Top
// Preserved:
fn0800_1B06_entry:
	selector ss = SLICE(ss_bp, selector, 16)
	word16 bp = SLICE(ss_bp, word16, 0)
	word16 sp_11 = fp
	int8 Top_15 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B06:
	Mem8[ss:bp - 0x0026:word16] = Mem6[ss:bp - 0x0026:word16] + 0x0001
	word16 sp_12 = sp_11 - 2
	Mem13[ss:sp_12:word16] = Mem8[ss:bp + 0x0008:word16]
	word16 sp_14
	word16 ax_20
	word16 bx_22
	call SEQ(0x0800, Mem13[ss:bp + 0x0004:word16]) (retsize: 2;)
		uses: ax:ax_19,bx:bx_21,cx:cx_17,sp:sp_12,Top:Top_15
		defs: ax:ax_20,bx:bx_22,sp:sp_14,Top:Top_16
	cx = Mem13[ss:sp_14:word16]
	sp_11 = sp_14 + 2
	byte al_46 = (byte) ax_20
	branch ax_20 <= 0x0000 l0800_1B27
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B27:
	branch ax_20 == 0x0000 l0800_1B21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B29:
	word16 cx_31 = Mem13[ss:sp_14 + 2:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B2A_thunk_fn0800_1AEB:
	word16 bp_35
	word16 cx_36
	selector es_38
	word16 ax_34 = fn0800_1AEB(ss_bp, cx_31, out cx_36, out bp_35, out es_38)
	cxOut = cx_36
	bxOut = bx_22
	bpOut = bp_35
	esOut = es_38
	return ax_34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B14:
	branch al_46 < 0x00 l0800_1B21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B18:
	ax = ax_20
	bx = bx_22
	branch Mem13[ds:ax_20 + 0x055A:byte] == 0x01 l0800_1B06
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B21:
	word16 cx_63 = Mem13[ss:sp_14 + 2:word16]
	word16 cx_71
	word16 ax_73
	word16 bx_75
	call cx_63 + 0x0003 (retsize: 2;)
		uses: ax:ax_20,bx:bx_22,cx:cx_63 + 0x0003,sp:sp_14 + 4,Top:Top_16
		defs: ax:ax_73,bx:bx_75,cx:cx_71
	cxOut = cx_71
	bxOut = bx_75
	bpOut = bp
	esOut = es
	return ax_73
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1B06_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_1B2C(word32 ss_bp, word16 ax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] Sequence ss:bp:[0..31]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si sp Top
// Preserved:
fn0800_1B2C_entry:
	selector ss = SLICE(ss_bp, selector, 16)
	word16 bp = SLICE(ss_bp, word16, 0)
	word16 sp_16 = fp
	int8 Top_102 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B2C:
	word16 dx_135 = 0x0000
	word16 cx_152 = 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B31:
	word16 v8_10 = Mem9[ss:bp - 0x0022:word16] - 0x0001
	Mem11[ss:bp - 0x0022:word16] = v8_10
	byte cl_46 = (byte) cx_152
	branch v8_10 < 0x0000 l0800_1B7B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B7B:
	ax = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B36:
	word16 sp_17 = sp_16 - 2
	Mem19[ss:sp_17:word16] = dx_135
	Mem22[ss:sp_17 - 2:word16] = cx_152
	Mem24[ss:bp - 0x0026:word16] = Mem22[ss:bp - 0x0026:word16] + 0x0001
	Mem28[ss:sp_17 - 4:word16] = Mem24[ss:bp + 0x0008:word16]
	word16 sp_29
	word16 ax_33
	call SEQ(0x0800, Mem28[ss:bp + 0x0004:word16]) (retsize: 2;)
		uses: ax:ax_32,cx:cx_21,dx:dx_18,sp:sp_17 - 4,Top:Top_34
		defs: ax:ax_33,sp:sp_29,Top:Top_35
	word16 cx_39 = Mem28[ss:sp_29 + 2:word16]
	cl_46 = (byte) cx_39 (alias)
	dx_135 = Mem28[ss:sp_29 + 4:word16]
	sp_16 = sp_29 + 6
	ax = ax_33
	byte al_50 = (byte) ax_33
	ax = ax_33 (alias)
	ax = ax_33 (alias)
	branch ax_33 <= 0x0000 l0800_1B7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B48:
	word16 cx_149
	word16 cx_147
	word16 cx_145
	word16 cx_143
	word16 cx_140
	word16 cx_138
	cl_46 = cl_46 - 0x01
	word16 cx_137 = DPB(cx_39, cl_46 - 0x01, 0)
	word16 cx_139 = DPB(cx_138, cl_46 - 0x01, 0)
	word16 cx_136 = DPB(cx_140, cl_46 - 0x01, 0)
	word16 cx_144 = DPB(cx_143, cl_46 - 0x01, 0)
	word16 cx_142 = DPB(cx_145, cl_46 - 0x01, 0)
	word16 cx_148 = DPB(cx_147, cl_46 - 0x01, 0)
	cx_142 = DPB(cx_149, cl_46 - 0x01, 0) (alias)
	branch cl_46 < 0x01 l0800_1B7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B4C:
	byte ch_112 = al_50 - 0x30
	cx_138 = DPB(cx_137, al_50 - 0x30, 8) (alias)
	cx_140 = DPB(cx_139, al_50 - 0x30, 8) (alias)
	branch al_50 <u 0x30 l0800_1B7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B53:
	branch al_50 <u 0x3A l0800_1B6F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B58:
	byte ch_111 = al_50 - 0x41
	cx_143 = DPB(cx_136, al_50 - 0x41, 8) (alias)
	cx_145 = DPB(cx_144, al_50 - 0x41, 8) (alias)
	branch al_50 <u 0x41 l0800_1B7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B5D:
	branch al_50 <u 0x47 l0800_1B6C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B62:
	ch_111 = al_50 - 0x61
	cx_147 = DPB(cx_142, al_50 - 0x61, 8) (alias)
	cx_149 = DPB(cx_148, al_50 - 0x61, 8) (alias)
	branch al_50 <u 0x61 l0800_1B7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B67:
	branch al_50 >=u 0x67 l0800_1B7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B7D:
	branch cl_46 == 0x04 l0800_1B88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B88:
	word16 cx_74 = Mem73[ss:sp_16:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B89_thunk_fn0800_1AEB:
	fn0800_1AEB(ss_bp, cx_74, out cx_186, out bp_187, out es_188)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B82:
	word16 cx_90 = Mem73[ss:sp_16:word16]
	call cx_90 + 0x0003 (retsize: 2;)
		uses: ax:ax_98,cx:cx_90 + 0x0003,dx:dx_95,sp:sp_72 + 2,Top:Top_102
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1B2C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B6C:
	ch_112 = ch_111 + 0x0A
	cx_136 = DPB(cx_142, ch_112, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B6F:
	cx_152 = DPB(cx_136, ch_112, 8) (alias)
	dx_135 = DPB(dx_135 << 0x0004, (byte) (dx_135 << 0x0004) + ch_112, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __scantod(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: sp
// Trashed: sp Top
// Preserved:
fn0800_1B92_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B92:
	call Mem0[ds:0x05E2:word16] (retsize: 2;)
		uses: sp:fp,Top:0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1B92_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



int8 __scanrslt(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: sp Top
// Trashed: sp Top
// Preserved:
fn0800_1B96_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B96:
	int8 Top_7
	call Mem0[ds:0x05E4:word16] (retsize: 2;)
		uses: sp:fp,Top:0
		defs: Top:Top_7
	return Top_7
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1B96_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



int8 __scanpop(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: sp Top
// Trashed: sp Top
// Preserved:
fn0800_1B9A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B9A:
	int8 Top_7
	call Mem0[ds:0x05E6:word16] (retsize: 2;)
		uses: sp:fp,Top:0
		defs: Top:Top_7
	return Top_7
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1B9A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



bool fn0800_1B9E(byte cl, byte bl)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..7] cl:[0..7]
// LiveOut: C
// Trashed: SCZO Top
// Preserved: bx sp
fn0800_1B9E_entry:
	byte bl_8 = (byte) bx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B9E:
	bool C_40
	byte bl_16 = bl_8 - 0x30
	branch bl_8 <u 0x30 l0800_1BC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BA4:
	branch bl_8 <=u 0x39 l0800_1BBB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BA9:
	branch bl_8 >u 0x5A l0800_1BB3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB3:
	bl_16 = bl_8 - 0x57
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BAE:
	bl_16 = bl_8 - 0x37
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB6:
	branch bl_16 <=u 0x09 l0800_1BC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BBB:
	branch bl_16 >=u cl l0800_1BC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BC7:
	C_40 = true
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BBF:
	C_40 = false
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BC5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BCB:
	return C_40
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1B9E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 __scantol(word16 ax, word16 cx, word16 dx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, word16 wArg0E, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & diOut, ptr16 & esOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] dx:[0..15] es:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15] Stack +000E:[0..15]
// LiveOut: ax bx cx di dx es Top
// Trashed: SCZO ax bx cx di dx es si Top
// Preserved: bp ds sp ss
fn0800_1BCC_entry:
	int8 Top_126 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BCC:
	byte bLoc07_583 = 0x00
	word16 wLoc06_584 = 0x0000
	word16 sp_129 = fp - 0x000E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BE6:
	word16 wLoc04_623
	word16 dx_422
	word16 ax_527
	word16 v9_27 = wLoc06_584 + 0x0001
	word16 sp_32 = sp_129 - 2
	Mem33[ss:sp_32:word16] = wArg06
	word16 sp_34
	word16 ax_41
	word16 bx_118
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_40,bx:bx_42,cx:cx_38,dx:dx_45,sp:sp_32,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFF4:es,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFB:0x00,Stack +FFFFFFFC:v9_27,Stack +FFFFFFFE:0x0001,Top:Top_47
		defs: ax:ax_41,bx:bx_43,dx:dx_46,sp:sp_34,Top:Top_48
	wLoc06_584 = v9_27
	cx = Mem33[ss:sp_34:word16]
	sp_129 = sp_34 + 2
	word16 ax_113 = ax_41
	byte al_56 = (byte) ax_41
	branch ax_41 < 0x0000 l0800_1C5A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BF4:
	word16 ax_57 = (int16) al_56
	ax = bx_118
	bx = ax_57
	branch ((byte) ax_57 & 0x80) != 0x00 l0800_1C00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BFB:
	branch (Mem33[ds:ax_57 + 0x0241:byte] & 0x01) != 0x00 l0800_1BE6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C00:
	ax_113 = ax_57
	byte al_144 = (byte) ax_57
	ax_113 = ax_57 (alias)
	wArg0A = wArg0A - 0x0001
	branch wArg0A < 0x0001 l0800_1C61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C06:
	branch al_144 == 0x2B l0800_1C11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C0A:
	branch al_144 != 0x2D l0800_1C24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C0E:
	bLoc07_583 = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C11:
	ax_113 = ax_57
	wArg0A = wArg0A - 0x0002
	branch wArg0A < 0x0002 l0800_1C61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C16:
	Mem102[ss:sp_34:word16] = wArg06
	word16 sp_103
	word16 ax_116
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_57,bx:bx_43,cx:cx_50,dx:dx_46,sp:sp_34,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A - 0x0002,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFF4:es,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFB:bLoc07_618,Stack +FFFFFFFC:v9_27 + 0x0001,Stack +FFFFFFFE:0x0001,Top:Top_48
		defs: ax:ax_116,bx:bx_118,dx:dx_123,sp:sp_103,Top:Top_126
	wLoc06_584 = v9_27 + 0x0001
	cx = Mem102[ss:sp_103:word16]
	sp_129 = sp_103 + 2
	ax_113 = ax_116
	al_144 = (byte) ax_116 (alias)
	branch ax_116 < 0x0000 l0800_1C5A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C5A:
	wLoc04_623 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C24:
	ui32 di_ax_840
	ax_165 = DPB(ax_113, al_144, 0) (alias)
	ax_113 = DPB(ax_113, al_144, 0) (alias)
	ax_113 = DPB(ax_113, al_144, 0) (alias)
	word16 ax_165 = DPB(ax_113, al_144, 0)
	word16 si_137 = 0x0000
	word16 di_139 = 0x0000
	cx = wArg08
	byte cl_188 = (byte) wArg08
	cx = wArg08 (alias)
	cx = wArg08 (alias)
	branch wArg08 == 0x0000 l0800_1C7B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C7B:
	wArg08 = 0x000A
	branch al_144 != 0x30 l0800_1CA7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C84:
	word16 v62_149 = wArg0A - 0x0001
	wArg0A = v62_149
	branch v62_149 < 0x0000 l0800_1C78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C89:
	word16 v63_153 = wLoc06_584 + 0x0001
	word16 sp_158 = sp_129 - 2
	Mem159[ss:sp_158:word16] = wArg06
	word16 sp_160
	word16 ax_166
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_165,bx:bx_167,cx:wArg08,dx:dx_170,sp:sp_158,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:0x000A,Stack +000C:v62_149,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFF4:es,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFB:bLoc07_639,Stack +FFFFFFFC:v63_153,Stack +FFFFFFFE:0x0001,Top:Top_172
		defs: ax:ax_166,bx:bx_168,dx:dx_171,sp:sp_160,Top:Top_173
	wLoc06_584 = v63_153
	byte al_178 = (byte) ax_166
	cx = Mem159[ss:sp_160:word16]
	sp_129 = sp_160 + 2
	wArg08 = 0x0008
	branch al_178 == 0x78 l0800_1CA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C9C:
	di_ax_840 = (uint32) (uint16) ax_166 (alias)
	branch al_178 != 0x58 l0800_1CCD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CA0:
	ax_165 = ax_166
	wArg08 = 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C2D:
	branch wArg08 >u 0x0024 l0800_1C61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C32:
	branch cl_188 <u 0x02 l0800_1C61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C37:
	branch al_144 != 0x30 l0800_1CA7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CA7:
	cx = wArg08
	ax_113 = ax_165
	branch fn0800_1B9E((byte) wArg08, ax_165) l0800_1C61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C61:
	wLoc04_623 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C66:
	word16 sp_224 = sp_129 - 2
	Mem225[ss:sp_224:word16] = wArg06
	Mem230[ss:sp_224 - 2:word16] = ax_113
	word16 sp_231
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:ax_227,bx:bx_250,cx:cx_244,dx:dx_258,sp:sp_224 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_692,Stack +000C:wArg0A_688,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFF4:es,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFB:bLoc07_671,Stack +FFFFFFFC:wLoc06_675,Stack +FFFFFFFE:wLoc04_679,Top:Top_263
		defs: sp:sp_231,Top:Top_267
	cx = Mem230[ss:sp_231 + 2:word16]
	sp_129 = sp_231 + 4
	wLoc06_584 = wLoc06_584 - 0x0001
	ax_527 = 0x0000 (alias)
	dx_422 = 0x0000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CB1:
	ax_165 = 0x0000
	si_137 = ax_165
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C3B:
	branch cl_188 != 0x10 l0800_1CA5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C40:
	word16 v30_283 = wArg0A - 0x0001
	wArg0A = v30_283
	branch v30_283 < 0x0000 l0800_1C78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C78:
	cx = wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C45:
	word16 v31_287 = wLoc06_584 + 0x0001
	word16 sp_291 = sp_129 - 2
	Mem292[ss:sp_291:word16] = wArg06
	word16 sp_293
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_200,bx:bx_167,cx:wArg08,dx:dx_170,sp:sp_291,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:v30_283,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFF4:es,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFB:bLoc07_639,Stack +FFFFFFFC:v31_287,Stack +FFFFFFFE:0x0001,Top:Top_172
		defs: ax:ax_297,bx:bx_298,dx:dx_299,sp:sp_293,Top:Top_300
	wLoc06_584 = v31_287
	byte al_304 = (byte) ax_165
	cx = Mem292[ss:sp_293:word16]
	sp_129 = sp_293 + 2
	branch al_304 == 0x78 l0800_1CA5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C53:
	branch al_304 == 0x58 l0800_1CA5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CA5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C57:
	di_ax_840 = (uint32) (uint16) ax_165 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CCD:
	word16 ax_313 = SLICE(di_ax_840, word16, 0)
	di_139 = SLICE(di_ax_840, word16, 16) (alias)
	cx = wArg08
	word16 ax_324 = ax_313
	branch fn0800_1B9E((byte) wArg08, ax_313) l0800_1CB4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CB4:
	int32 dx_ax_330 = wArg08 *u si_137
	ui32 di_si_576 = di_ax_840 + dx_ax_330
	ax_165 = (word16) dx_ax_330 (alias)
	dx = SLICE(dx_ax_330, word16, 16) (alias)
	si_137 = (word16) di_si_576
	di_139 = SLICE(di_si_576, word16, 16)
	branch di_139 != 0x0000 l0800_1CEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CEA:
	word16 v47_343 = wArg0A - 0x0001
	wArg0A = v47_343
	branch v47_343 < 0x0000 l0800_1D0F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CEF:
	word16 sp_352 = sp_129 - 2
	Mem353[ss:sp_352:word16] = wArg06
	word16 v48_347 = wLoc06_584 + 0x0001
	word16 sp_354
	word16 ax_361
	word16 bx_363
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_360,bx:bx_362,cx:cx_358,dx:dx_365,sp:sp_352,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_698,Stack +000C:v47_343,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFF4:es,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFB:bLoc07_639,Stack +FFFFFFFC:v48_347,Stack +FFFFFFFE:0x0001,Top:Top_367
		defs: ax:ax_361,bx:bx_363,dx:dx_366,sp:sp_354,Top:Top_368
	wLoc06_584 = v48_347
	sp_129 = sp_354 + 2
	ax_324 = ax_361
	bx_118 = bx_363
	branch fn0800_1B9E((byte) wArg08, ax_361) l0800_1CD9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CD9:
	int32 dx_ax_387 = wArg08 *u si_137
	int32 dx_ax_396 = wArg08 *u di_139
	ui32 ax_si_579 = SEQ((word16) dx_ax_396, ax_361) + dx_ax_387
	word16 ax_401 = SLICE(ax_si_579, word16, 16)
	byte dl_409 = SLICE(dx_ax_396, byte, 16) + SLICE(dx_ax_396, byte, 24) + (ax_401 <u 0x0000)
	cx = SLICE(dx_ax_387, word16, 16)
	si_137 = (word16) ax_si_579
	ax_165 = (word16) dx_ax_387
	di_139 = ax_401
	dx = DPB(SLICE(dx_ax_396, word16, 16), dl_409, 0) (alias)
	branch dl_409 != 0x00 l0800_1D32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D32:
	bool C_418 = SLICE(cond(bLoc07_583 + 0xFF), bool, 1)
	ax_527 = DPB(0xFFFF, C_418 + 0xFF, 8) (alias)
	dx_422 = SLICE(cond(C_418 + 0xFF), bool, 1) + 0x7FFF
	wLoc04_623 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CBE:
	word16 v39_431 = wArg0A - 0x0001
	wArg0A = v39_431
	branch v39_431 < 0x0000 l0800_1D0F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CC3:
	word16 v40_435 = wLoc06_584 + 0x0001
	word16 sp_443 = sp_129 - 2
	Mem444[ss:sp_443:word16] = wArg06
	word16 sp_445
	word16 ax_465
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_460,bx:bx_466,cx:cx_456,dx:dx_474,sp:sp_443,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_757,Stack +000C:v39_431,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFF4:es,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFB:bLoc07_639,Stack +FFFFFFFC:v40_435,Stack +FFFFFFFE:0x0001,Top:Top_478
		defs: ax:ax_465,bx:bx_469,dx:dx_477,sp:sp_445,Top:Top_482
	wLoc06_584 = v40_435
	sp_129 = sp_445 + 2
	di_ax_840 = SEQ(di_139, ax_465) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CD7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D03:
	word16 sp_491 = sp_129 - 2
	Mem492[ss:sp_491:word16] = wArg06
	Mem495[ss:sp_491 - 2:word16] = ax_324
	word16 sp_496
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:ax_494,bx:bx_503,cx:wArg08_698,dx:dx_506,sp:sp_491 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_698,Stack +000C:wArg0A_773,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFF4:es,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFB:bLoc07_639,Stack +FFFFFFFC:wLoc06_769,Stack +FFFFFFFE:0x0001,Top:Top_509
		defs: sp:sp_496,Top:Top_510
	cx = Mem495[ss:sp_496 + 2:word16]
	sp_129 = sp_496 + 4
	wLoc06_584 = wLoc06_584 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D0F:
	wLoc04_623 = 0x0001
	dx_422 = di_139
	ax_527 = si_137
	branch bLoc07_583 == 0x00 l0800_1D1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D18:
	ax_527 = -si_137
	dx_422 = -di_139 - (ax_527 == 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D1F:
	Mem551[ds:wArg0C:word16] = Mem544[ds:wArg0C:word16] + wLoc06_584
	Mem555[ds:wArg0E:word16] = wLoc04_623
	selector es_559 = Mem555[ss:sp_129:selector]
	word16 sp_560 = sp_129 + 2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D48:
	word16 di_561 = Mem555[ss:sp_560:word16]
	cxOut = cx
	dxOut = dx_422
	bxOut = wLoc04_623
	diOut = di_561
	esOut = es_559
	TopOut = Top_126
	return ax_527
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1BCC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _tell(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_1D4E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D4E:
	_lseek(ds, wArg02, 0x00000000, 0x01, out dx_42)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D63:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1D4E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



