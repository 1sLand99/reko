void fn00001000(word32 d0, word32 a0)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] d0:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5
// Preserved: a7 d7
fn00001000_entry:
l00001000:
l0000100A:
	a6_9 = Mem0[0x00000004<p32>:word32]
	d2_108 = d0
	a2_305 = a0
	branch Mem0[a6_9 + 20<i32>:word16] >=u 0x24<16> l00001036
l00001020:
	a0_13 = 0x00003E20<p32>
	d0_16 = 0xC<32>
l00001030:
	Mem19[a0_13:word32] = 0<32>
	a0_13 = a0_13 + 4<i32>
	d0_16 = d0_16 - 1<32>
	branch d0_16 != 0<32> l00001030
l00001036:
	Mem29[0x00003E20<p32>:word32] = fp
	Mem32[0x00003E24<p32>:word32] = a6_9
	d0_34 = FindTask(0<32>)
	d0_38 = OpenLibrary(0x000012BC<p32>, 0<32>)
	branch d0_38 == 0<32> l00001226
l00001226:
	Alert(0x38007<32>)
l00001056:
	Mem67[0x00003E28<p32>:word32] = d0_38
	branch Mem67[d0_34 + 172<i32>:word32] != 0<32> l00001066
l00001066:
	a0_75 = a0
	d4_103 = 3<32>
l0000106A:
	branch Mem67[a0_723:byte] != 0x20<8> l00001072
l00001070:
	d4_103 = SEQ(SLICE(d4_103, word16, 16), SLICE(d4_103, word16, 0) + 1<16>)
l00001072:
	a0_75 = a0_723 + 1<i32>
	a0_723 = a0_75
	branch Mem67[a0_723:byte] != 0<8> l0000106A
l00001060:
	d4_103 = 2<32>
	d2_108 = 8<32>
l00001076:
	d0_106 = d4_103 << 2<32>
	d0_113 = d0_106 + d2_108
	d1_117 = 0x10001<32>
	d0_118 = AllocMem(d0_113 + 0x11<32>, 0x10001<32>)
	branch d0_118 == 0<32> l0000123E
l0000123E:
	CloseLibrary(Mem67[0x00003E28<p32>:word32])
	Alert(0x10000<32>)
l0000125C:
	branch Mem163[d0_34 + 172<i32>:word32] != 0<32> l00001268
l00001262:
	fn0000126C(fn00001214(d0_34))
l00001268:
	return
l00001096:
	Mem180[d0_118:word32] = d0_113 + 0x11<32>
	Mem183[d0_118 + 12<i32>:word32] = d4_103 - 1<32>
	Mem186[d0_118 + 8<i32>:word32] = d0_118 + 16<i32> + d0_106
	Mem188[0<32>:word32] = 0<32>
	d0_189 = Mem188[d0_34 + 172<i32>:word32]
	branch d0_189 == 0<32> l00001190
l00001190:
	d0_195 = fn00001214(d0_34)
	Mem197[0x00003E2C<p32>:word32] = d0_195
	Mem198[0x00003E30<p32>:word32] = d0_195
	Mem202[0<32>:word32] = 0<32>
	dwLoc0C_582 = d0_195
	branch Mem202[d0_195 + 36<i32>:word32] == 0<32> l000011B6
l000011AE:
	Enable()
l000011B6:
	d0_220 = Supervisor(d0_118)
	Mem221[d0_118 + 4<i32>:word32] = d0_220
	branch d0_220 != 0<32> l000011D2
l000011D2:
	Mem227[0x00003E34<p32>:word32] = d0_220
	Mem228[0x00003E38<p32>:word32] = d0_220
	Mem229[0x00003E3C<p32>:word32] = d0_220
	Mem231[d0_34 + 156<i32>:word32] = d0_220
	Mem232[d0_34 + 160<i32>:word32] = d0_220
	d0_236 = Mem232[(d0_220 << 2<32>) + 8<i32>:word32]
	branch d0_236 == 0<32> l000011F4
l000011F0:
	Mem241[d0_34 + 164<i32>:word32] = d0_236
l000011F4:
l000011CC:
l000011CE_thunk_fn0000127C:
	fn0000127C()
	return
l000010B6:
	d0_266 = Mem188[(d0_189 << 2<32>) + 16<i32>:word32]
	a1_269 = Mem188[d0_118 + 8<i32>:word32]
	a0_274 = (d0_266 << 2<32>) + 1<i32>
	Mem277[a0_274 + CONVERT(Mem188[d0_266 << 2<32>:byte], uint8, uint32):byte] = 0<8>
	Mem278[d0_118 + 16<i32>:word32] = a0_274
	a6_279 = d0_118 + 20<i32>
	d3_280 = 1<32>
	a0_287 = a0 + d2_108
l000010DA:
	a0_287 = a0_287 - 1<i32>
	branch Mem278[a0_287:byte] >u 0x20<8> l000010E2
l000010DE_1:
	v30_295 = SLICE(d2_108, word16, 0)
	d2_108 = SEQ(SLICE(d2_108, word16, 16), v30_295 - 1<i16>)
	branch v30_295 != 0<16> l000010DA
l000010E2:
	Mem300[a0_287 + 1<i32>:byte] = 0<8>
l000010E6:
	v32_307 = Mem306[a2_305:byte]
	a2_305 = a2_305 + 1<i32>
	d1_117 = SEQ(SLICE(d1_117, word24, 8), v32_307)
	branch v32_307 == 0<8> l00001148
l000010EA:
	branch v32_307 == 0x20<8> l000010E6
l000010F0:
	branch v32_307 == 9<8> l000010E6
l000010F6:
	branch d3_280 == Mem306[d0_118 + 12<i32>:word32] l00001148
l000010FC:
	Mem329[a6_279:word32] = a1_269
	a6_279 = a6_279 + 4<i32>
	d3_280 = SEQ(SLICE(d3_280, word16, 16), SLICE(d3_280, word16, 0) + 1<16>)
	branch v32_307 == 0x22<8> l0000111A
l0000111A:
	v51_340 = Mem339[a2_305:byte]
	v52_343 = SLICE(d1_117, word24, 8)
	a2_305 = a2_305 + 1<i32>
	d1_117 = SEQ(v52_343, v51_340)
	branch v51_340 == 0<8> l00001148
l0000111E:
	branch v51_340 == 0x22<8> l00001116
l00001124:
	branch v51_340 != 0x2A<8> l00001144
l0000112A:
	v55_355 = Mem339[a2_305:byte]
	a2_305 = a2_305 + 1<i32>
	d1_117 = SEQ(v52_343, v55_355)
	branch (v55_355 & 0xDF<8>) != 0x4E<8> l0000113C
l0000113C:
	branch (v55_355 & 0xDF<8>) != 0x45<8> l00001144
l00001142:
	d1_117 = 0x1B<32>
l00001138:
	d1_117 = 0xA<32>
l00001144:
	Mem384[a1_269:byte] = SLICE(d1_117, byte, 0)
	a1_269 = a1_269 + 1<i32>
l00001106:
	Mem390[a1_269:byte] = v32_307
	a1_269 = a1_269 + 1<i32>
l00001108:
	v41_397 = Mem396[a2_305:byte]
	a2_305 = a2_305 + 1<i32>
	d1_117 = SEQ(SLICE(d1_117, word24, 8), v41_397)
	branch v41_397 == 0<8> l00001148
l00001148:
	Mem408[a1_269:byte] = 0<8>
	Mem413[a6_279:word32] = 0<32>
	Mem438[0x00003E34<p32>:word32] = execPrivate4()
	d0_439 = execPrivate5()
	Mem440[0x00003E38<p32>:word32] = d0_439
	dwLoc0C_582 = d0_118 + 16<i32>
	dwLoc10 = d3_280
	branch Mem440[Mem440[0x00003E24<p32>:word32] + 20<i32>:word16] <u 0x24<16> l0000117A
l00001172:
	v65_450 = Mem440[d0_34 + 224<i32>:word32]
	Mem451[0x00003E3C<p32>:word32] = v65_450
	branch v65_450 != 0<32> l0000117E
l0000117A:
	Mem458[0x00003E3C<p32>:word32] = d0_439
l0000117E:
	branch Mem464[d0_34 + 8<i32>:byte] != 0xD<8> l000011F8
l000011F8:
	a0_472 = Mem470[d0_34 + 58<i32>:word32]
l00001186:
	a0_475 = Mem464[d0_34 + 176<i32>:word32]
	a0_472 = a0_475 + 4<i32> - Mem464[a0_475:word32]
l00001202:
	Mem487[0x00003E48<p32>:word32] = a0_472
	Mem494[0x00003E4C<p32>:word32] = fp - 16<i32>
	fn00001354(dwLoc10, dwLoc0C_582)
l00001212_thunk_fn0000127C:
	fn0000127C()
	return
fn00001000_exit:
l0000110C:
	branch v41_397 == 0x20<8> l00001116
l00001116:
	Mem530[a1_269:byte] = 0<8>
	a1_269 = a1_269 + 1<i32>
l00001112:
	Mem537[a1_269:byte] = v41_397
	a1_269 = a1_269 + 1<i32>


word32 fn00001214(word32 a3)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  a3:[0..31]
// LiveOut: d0:[0..31]-fn00001000
// Trashed: a0 d0
// Preserved: a7
fn00001214_entry:
l00001214:
	WaitPort(a3 + 92<i32>)
	return GetMsg(a3 + 92<i32>)
fn00001214_exit:


void fn0000126C(word32 a2)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  a2:[0..31]
// LiveOut:
// Trashed: a1 d0
// Preserved: a7
fn0000126C_entry:
l0000126C:
	Forbid()
	ReplyMsg(a2)
	return
fn0000126C_exit:


word32 fn00001278(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000012D0
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5:[0..31]-fn000012D0
// Trashed: CVZN a1 a2 a4 a5 a6 d0 d1 d2
// Preserved: a7
fn00001278_entry:
l00001278:
l00001278_thunk_fn0000127C:
	return fn0000127C()
fn00001278_exit:


word32 fn0000127C()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
//      fn00001278
// MayUse: 
// LiveOut: a5:[0..31]-fn00001278
// Trashed: CVZN a1 a2 a4 a5 a6 a7 d0 d1
// Preserved:
fn0000127C_entry:
l0000127C:
	a7_6 = Mem0[0x00003E20<p32>:word32]
	v8_11 = Mem0[a7_6 - 4<32>:word32]
	v6_8 = Mem0[a7_6 - 8<32>:word32]
	branch Mem0[v8_11 + 4<i32>:word32] == 0<32> l0000129E
l00001296:
	execPrivate1()
l0000129E:
	CloseLibrary(Mem0[0x00003E28<p32>:word32])
	branch v6_8 == 0<32> l000012B0
l000012AE:
	fn0000126C(v6_8)
l000012B0:
	FreeMem(v8_11, Mem0[v8_11:word32])
	return v8_11
fn0000127C_exit:


word32 fn000012D0(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000131C
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5:[0..31]-fn0000131C
// Trashed: CVZNX a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7 d2
fn000012D0_entry:
l000012D0:
	branch false l00001308
l000012E2:
	d2_18 = 1<32>
	branch Mem11[0x00003F6C<p32>:word32] == 0<32> l000012F6
l000012EA:
	d2_18 = d2_18 + 1<32>
	branch Mem11[0x00003F68<p32> + (d2_18 << 2<32>):word32] != 0<32> l000012EA
l000012F6:
	d2_35 = d2_18 - 1<32>
	branch d2_35 == 0<32> l00001308
l000012FA:
	call Mem11[0x00003F68<p32> + (d2_35 << 2<32>):word32] (retsize: 4;)
		uses: d0:d2_38 << 2<32>,Mem:Mem11,Stack +0014:dwArg04
	d2_35 = d2_35 - 1<32>
	branch d2_35 != 0<32> l000012FA
l00001308:
	return fn00001278(dwArg04)
fn000012D0_exit:


word32 fn0000131C(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001354
//      fn00002530
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5:[0..31]-fn00002530
// Trashed: CVZN a1 a4 a5 a6 d0 d1
// Preserved: X a2 a3 a7
fn0000131C_entry:
l0000131C:
	branch Mem8[0x00003E50<p32>:word32] != 0<32> l0000134E
l00001328:
	a3_13 = Mem8[0x00003F78<p32>:word32]
	Mem15[0x00003E50<p32>:word32] = 1<32>
	branch a3_13 == 0<32> l00001346
l0000133A:
	call Mem15[a3_13 + 4<i32>:word32] (retsize: 4;)
		uses: d0:a3_27,Mem:Mem15,Stack +0010:dwArg04
	a3_13 = Mem15[a3_13:word32]
	branch a3_13 != 0<32> l0000133A
l00001346:
	a5 = fn000012D0(dwArg04)
l0000134E:
	return a5
fn0000131C_exit:


void fn00001354(word32 dwArg04, word32 dwArg08)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7
fn00001354_entry:
l00001354:
	a3_19 = 0x00003F60<p32>
	d0_10 = 0x3F5C<32>
	branch false l00001372
l00001366:
	branch Mem8[0x00003F60<p32>:word32] == 0<32> l00001372
l0000136A:
	call Mem8[a3_19:word32] (retsize: 4;)
		uses: Mem:Mem8,Stack +0010:dwArg04,Stack +0014:dwArg08
		defs: d0:d0_25
	a3_19 = a3_19 + 4<i32>
	branch Mem8[a3_19:word32] != 0<32> l0000136A
l00001372:
	fn0000131C(fn00001390(d0_10))
	return
fn00001354_exit:


word32 fn00001390(word32 d0)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001354
// MayUse:  d0:[0..31]
// LiveOut: d0:[0..31]-fn00001354
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3
fn00001390_entry:
l00001390:
	d0_187 = fn00002BF0(fn00002BF0(fn000015A4(fn00002BF0(d0, 0x0000147C<p32>), 0x00001480<p32>), 0x0000149C<p32>), 0x000014A0<p32>)
	d3_177 = 1<32>
l0000145A:
	branch d3_177 <= dwLoc04 l000013DE
l000013DE:
	d2_171 = 1<32>
l00001452:
	d0_187 = 0x28<32>
	branch d2_171 <= 0x28<32> l000013E2
l000013E2:
	d1_95 = dwLoc14 + dwLoc10 + d2_171
	fn000014AC(d2_171, d1_95 >> 1<32>, 0x0000000A<p32>)
	branch d2_171 == d1_95 >> 1<32> l0000141A
l0000141A:
	d0_121 = 1<32>
l00001416:
	d0_121 = 0<32>
l0000141C:
	branch (d0_121 | d2_171) != 0<32> l00001430
l00001430:
	d0_140 = 0<32>
l0000142C:
	d0_140 = 1<32>
l00001432:
	d0_153 = d0_140 + d2_171
	dwLoc10 = d0_153
	branch d2_171 < d0_153 l0000144A
l0000144A:
	d0_159 = 1<32>
l00001446:
	d0_159 = 0<32>
l0000144C:
	dwLoc14 = d0_159
	d2_171 = d2_171 + 1<32>
l00001458:
	d3_177 = d3_177 + 1<32>
l00001462:
	return fn000015A4(d0_187, 0x000014A4<p32>)
fn00001390_exit:


void fn000014AC(word32 d2, word32 dwArg04, word32 dwArg08)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  d2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: CVZNX d0 d1
// Preserved: a7
fn000014AC_entry:
l000014AC:
	branch dwArg08 < 0<32> l000014C0
l000014C0:
	d1_13 = -dwArg08
	branch dwArg04 < 0<32> l000014D6
l000014D6:
	fn0000151E(-dwArg04, d1_13, d2, out d1_98)
	return
l000014C6:
	fn0000151E(dwArg04, d1_13, d2, out d1_99)
	return
l000014B6:
	branch dwArg04 < 0<32> l000014CC
l000014CC:
	fn0000151E(-dwArg04, dwArg08, d2, out d1_96)
	return
l000014BA:
	fn0000151E(dwArg04, dwArg08, d2, out d1_97)
	return
fn000014AC_exit:


word32 fn000014EC(word32 d2, word32 dwArg04, word32 dwArg08)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002C3C
// MayUse:  d2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: d0:[0..31]-fn00002C3C
// Trashed: CVZNX d0 d1
// Preserved: a7
fn000014EC_entry:
l000014EC:
	branch dwArg04 > 0<32> l0000150C
l0000150C:
	branch dwArg08 > 0<32> l0000150E_thunk_fn0000151E
l0000150E_thunk_fn0000151E:
	return fn0000151E(dwArg04, dwArg08, d2, out d1_90)
l00001510:
	return -fn0000151E(dwArg04, -dwArg08, d2, out d1_91)
l000014F6:
	d0_36 = -dwArg04
	branch dwArg08 > 0<32> l00001504
l00001504:
	return -fn0000151E(d0_36, dwArg08, d2, out d1_88)
l000014FC:
	return fn0000151E(d0_36, -dwArg08, d2, out d1_89)
fn000014EC_exit:


word32 fn0000151E(word32 d0, word32 d1, word32 d2, word32 & d1Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000014AC
//      fn000014EC
//      fn00002664
// MayUse:  d0:[0..31] d1:[0..31] d2:[0..31]
// LiveOut: d0:[0..31]-fn000014EC d1:[0..31]-fn00002664
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3
fn0000151E_entry:
l0000151E:
	d1_22 = __swap(d1)
	v9_8 = SLICE(d1_22, word16, 0)
	v10_9 = SLICE(d2, word16, 16)
	d2_10 = SEQ(v10_9, v9_8)
	branch v9_8 != 0<16> l00001544
l00001544:
	d3_18 = 0x10<32>
	branch SLICE(d1_22, word16, 0) >=u 0x80<16> l00001552
l0000154E:
	d1_22 = __rol<word32,word32>(d1_22, 8<32>)
	d3_18 = 8<32>
l00001552:
	branch SLICE(d1_22, word16, 0) >=u 0x800<16> l0000155C
l00001558:
	d1_22 = __rol<word32,word32>(d1_22, 4<32>)
	d3_18 = SEQ(SLICE(d3_18, word16, 16), SLICE(d3_18, word16, 0) - 4<16>)
l0000155C:
	branch SLICE(d1_22, word16, 0) >=u 0x2000<16> l00001566
l00001562:
	d1_22 = __rol<word32,word32>(d1_22, 2<32>)
	d3_18 = SEQ(SLICE(d3_18, word16, 16), SLICE(d3_18, word16, 0) - 2<16>)
l00001566:
	branch SLICE(d1_22, word16, 0) < 0<16> l0000156E
l0000156A:
	d1_22 = __rol<word32,word32>(d1_22, 1<32>)
	d3_18 = SEQ(SLICE(d3_18, word16, 16), SLICE(d3_18, word16, 0) - 1<16>)
l0000156E:
	d0_71 = d0 >>u d3_18
	d2_75 = SEQ(SLICE(__swap(SEQ(v10_9, SLICE(d0, word16, 0))), word16, 16), 0<16>) >>u d3_18
	v52_82 = SLICE(__swap(d3_18), word16, 16)
	v50_79 = d0_71 /u SLICE(d1_22, uint16, 0)
	d1_90 = __swap(d1_22)
	d3_102 = SEQ(v52_82, v50_79)
	d0_108 = SEQ(d0_71 %u SLICE(d1_22, uint16, 0), SLICE(d2_75, word16, 0)) - SEQ(SLICE(d2_75, word16, 16), v50_79) *u32 SLICE(d1_90, word16, 0)
	branch d0_108 >=u 0<32> l00001590
l0000158A:
	d3_102 = SEQ(v52_82, v50_79 - 1<16>)
	d0_108 = d0_108 + d1_90
l0000158E:
	branch d0_108 >=u 0<32> l0000158E
l00001590:
	d1Out = __swap(__rol<word32,word32>(d0_108, __swap(d3_102)))
	return CONVERT(SLICE(d3_102, word16, 0), uint16, uint32)
l00001526:
	d0_136 = __swap(d0)
	d1_137 = __swap(d1_22)
	v13_139 = SLICE(d0_136, word16, 0)
	d2_141 = SEQ(SLICE(__swap(d2_10), word16, 16), v13_139)
	branch v13_139 == 0<16> l00001534
l00001530:
	v16_147 = d2_141 /u SLICE(d1_137, uint16, 0)
	d2_141 = SEQ(d2_141 %u SLICE(d1_137, uint16, 0), v16_147)
	d0_136 = SEQ(SLICE(d0_136, word16, 16), v16_147)
l00001534:
	d0_156 = __swap(d0_136)
	d2_160 = SEQ(SLICE(d2_141, word16, 16), SLICE(d0_156, word16, 0))
	v33_163 = d2_160 /u SLICE(d1_137, uint16, 0)
	d1Out = SEQ(SLICE(d1_137, word16, 16), SLICE(__swap(SEQ(d2_160 %u SLICE(d1_137, uint16, 0), v33_163)), word16, 0))
	return SEQ(SLICE(d0_156, word16, 16), v33_163)
fn0000151E_exit:


word32 fn000015A4(word32 d0, word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  d0:[0..31] Stack +0004:[0..31]
// LiveOut: d0:[0..31]-fn00001390
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn000015A4_entry:
l000015A4:
	return fn000015C0(d0, Mem8[0x00003F80<p32>:word32], dwArg04, fp + 8<i32>)
fn000015A4_exit:


word32 fn000015C0(word32 d0, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000015A4
// MayUse:  d0:[8..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: d0:[0..31]-fn000015A4
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4 d5 d6 d7
fn000015C0_entry:
l000015C0:
	d3_1518 = dwArg0C
	a5_1617 = dwArg04
	a4_1970 = dwArg08
	d6_1648 = 0<32>
	branch Mem36[dwArg08:byte] == 0<8> l00001F06
l000015DC:
	branch Mem46[a4_1970:byte] != 0x25<8> l00001EE0
l00001EE0:
	a4_1970 = a4_1970 + 1<i32>
	d0 = fn00001F40(CONVERT(Mem53[a4_1970:byte], int8, int32), a5_1617, out a0_3413, out a5_1617)
	branch d0 != 0xFFFFFFFF<32> l00001EFE
l00001EFE:
	d6_1648 = d6_1648 + 1<32>
l00001EFA:
	d0_1997 = d6_1648
l000015E4:
	dwLoc30_2207 = 0<32>
	d5_269 = 0xFFFFFFFF<32>
	d4_396 = 0x69<32>
	a3_1308 = fp + -36<i32>
	d7_1016 = 0<32>
	dwLoc0A_2209 = 0<32>
	a2_140 = a4_1970 + 1<i32>
	d2_135 = 0<32>
l00001602:
	d1_100 = 0<32>
l00001604:
	branch Mem108[0x00001F18<p32> + d1_100:byte] != Mem108[a2_140:byte] l00001628
l00001628:
	d1_100 = d1_100 + 1<32>
	branch d1_100 <u 5<32> l00001604
l00001616:
	d1_128 = 1<32> << d1_100
	d0 = d1_128
	d2_135 = d2_135 | d1_128
	a2_140 = a2_140 + 1<32>
l00001632:
	branch d1_100 <u 5<32> l00001602
l0000163A:
	dwLoc28_2212 = d2_135
	branch Mem147[a2_140:byte] != 0x2A<8> l00001678
l00001678:
	a0_1484 = 0x000028C5<p32> + (SEQ(SLICE(d0, word24, 8), Mem147[a2_140:byte]) & 0xFF<32>)
	d0_162 = CONVERT(Mem147[a0_1484:byte], uint8, uint32)
	d0_163 = d0_162 & 4<32>
	branch (d0_162 & 4<32>) == 0<32> l000016E4
l00001694:
	d2_168 = 0<32>
l00001698:
	d1_182 = __swap(0xA<32>) *u32 SLICE(d2_168, word16, 0)
	d0_191 = SLICE(d2_168, word16, 0) *u32 0xA<32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_182, word16, 16), SLICE(d1_182, word16, 0) + SLICE(__swap(d2_168), word16, 0) *u 0xA<16>)), word16, 16), 0<16>)
	a2_140 = a2_140 + 1<i32>
	a0_1484 = 0x000028C5<p32> + (SEQ(SLICE(d0_191, word24, 8), Mem176[a2_140:byte]) & 0xFF<32>)
	d1_202 = CONVERT(Mem176[a2_140:byte], int8, int32)
	d0_216 = CONVERT(Mem176[a0_1484:byte], uint8, uint32)
	d1_100 = d1_202 - 0x30<32>
	d2_168 = d1_202 - 0x30<32> + d0_191
	d0_163 = d0_216 & 4<32>
	branch (d0_216 & 4<32>) != 0<32> l00001698
l000016E0:
	dwLoc30_2207 = d2_168
l00001644:
	d0_163 = __align(d3_1518 + 3<32>, 4<i32>)
	a2_140 = a2_140 + 1<32>
	d3_1518 = d0_163 + 4<32>
	a0_1484 = d0_163 + 4<32>
	v32_239 = Mem147[d0_163:word32]
	branch v32_239 >= 0<32> l00001670
l00001670:
	dwLoc30_2207 = v32_239
l0000165C:
	d0_163 = -v32_239
	dwLoc28_2212 = d2_135 | 4<32>
	dwLoc30_2207 = d0_163
l000016E4:
	branch Mem261[a2_140:byte] != 0x2E<8> l00001778
l000016EC:
	a2_140 = a2_140 + 1<32>
	branch Mem261[a2_140:byte] != 0x2A<8> l00001712
l00001712:
	a0_1484 = 0x000028C5<p32> + (SEQ(SLICE(d0_163, word24, 8), Mem261[a2_140:byte]) & 0xFF<32>)
	d5_269 = 0<32>
	branch (CONVERT(Mem261[a0_1484:byte], uint8, uint32) & 4<32>) == 0<32> l00001778
l00001730:
	d1_296 = __swap(0xA<32>) *u32 SLICE(d5_269, word16, 0)
	d0_305 = SLICE(d5_269, word16, 0) *u32 0xA<32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_296, word16, 16), SLICE(d1_296, word16, 0) + SLICE(__swap(d5_269), word16, 0) *u 0xA<16>)), word16, 16), 0<16>)
	a2_140 = a2_140 + 1<i32>
	d1_316 = CONVERT(Mem290[a2_140:byte], int8, int32)
	a0_1484 = 0x000028C5<p32> + (SEQ(SLICE(d0_305, word24, 8), Mem290[a2_140:byte]) & 0xFF<32>)
	d1_100 = d1_316 - 0x30<32>
	d5_269 = d1_316 - 0x30<32> + d0_305
	branch (CONVERT(Mem290[a0_1484:byte], uint8, uint32) & 4<32>) != 0<32> l00001730
l000016F4:
	d0_341 = __align(d3_1518 + 3<32>, 4<i32>)
	a2_140 = a2_140 + 1<32>
	d3_1518 = d0_341 + 4<32>
	a0_1484 = d0_341 + 4<32>
	v39_346 = Mem261[d0_341:word32]
	branch v39_346 < 0<32> l00001778
l0000170C:
	d5_269 = v39_346
l00001778:
	branch Mem359[a2_140:byte] == 0x68<8> l0000179C
l0000177E:
	branch Mem359[a2_140:byte] == 0x6C<8> l0000179C
l00001784:
	branch Mem359[a2_140:byte] == 0x4C<8> l0000179C
l0000178A:
	branch Mem359[a2_140:byte] == 0x6A<8> l0000179C
l00001790:
	branch Mem359[a2_140:byte] == 0x7A<8> l0000179C
l00001796:
	branch Mem359[a2_140:byte] != 0x74<8> l000017A2
l0000179C:
	a2_140 = a2_140 + 1<i32>
	d4_396 = CONVERT(Mem359[a2_140:byte], int8, int32)
l000017A2:
	branch d4_396 != 0x68<32> l000017B4
l000017AA:
	branch Mem359[a2_140:byte] != 0x68<8> l000017B4
l000017B0:
	d4_396 = 2<32>
	a2_140 = a2_140 + 1<32>
l000017B4:
	branch d4_396 != 0x6C<32> l000017C6
l000017BC:
	branch Mem359[a2_140:byte] != 0x6C<8> l000017C6
l000017C2:
	d4_396 = 1<32>
	a2_140 = a2_140 + 1<32>
l000017C6:
	branch d4_396 != 0x6A<32> l000017D0
l000017CE:
	d4_396 = 1<32>
l000017D0:
	branch d4_396 != 0x7A<32> l000017DA
l000017D8:
	d4_396 = 0x6C<32>
l000017DA:
	branch d4_396 != 0x74<32> l000017E4
l000017E2:
	d4_396 = 0x69<32>
l000017E4:
	v93_458 = Mem359[a2_140:byte]
	a2_1937 = a2_140 + 1<i32>
	d1_1108 = SEQ(SLICE(d1_100, word24, 8), v93_458)
	branch v93_458 == 0x25<8> l00001C6C
l00001C6C:
	a3_1308 = 0x00001F14<p32>
	dwLoc0A_2209 = 1<32>
	d5_1517 = 0<32>
l000017F0:
	branch v93_458 == 0x58<8> l0000183E
l000017F6:
	branch v93_458 == 0x63<8> l00001BEC
l00001BEC:
	branch d4_396 != 0x6C<32> l00001C08
l00001C08:
	d0_521 = __align(d3_1518 + 3<32>, 4<i32>)
	d3_1518 = d0_521 + 4<32>
	a0_1484 = d0_521 + 4<32>
l00001BF4:
	d0_548 = __align(d3_1518 + 3<32>, 4<i32>)
	d3_1518 = d0_548 + 4<32>
	a0_1484 = d0_548 + 4<32>
l00001C1A:
	dwLoc0A_2209 = 1<32>
	d5_1517 = 0<32>
l000017FE:
	branch v93_458 == 0x64<8> l0000183E
l00001804:
	branch v93_458 == 0x69<8> l0000183E
l0000180A:
	branch v93_458 == 0x6E<8> l00001C7E
l00001C7E:
	branch d4_396 != 1<32> l00001CA0
l00001CA0:
	branch d4_396 != 0x6C<32> l00001CBE
l00001CBE:
	branch d4_396 != 0x68<32> l00001CDC
l00001CDC:
	branch d4_396 != 2<32> l00001CFA
l00001CFA:
	d0_590 = __align(d3_1518 + 3<32>, 4<i32>)
	a0_1484 = Mem571[d0_590:word32]
	Mem610[a0_1484:word32] = d6_1648
	d3_1518 = d0_590 + 4<32>
l00001CE4:
	d0_617 = __align(d3_1518 + 3<32>, 4<i32>)
	a0_1484 = Mem571[d0_617:word32]
	Mem624[a0_1484:byte] = SLICE(d6_1648, byte, 0)
	d3_1518 = d0_617 + 4<32>
l00001CC6:
	d0_631 = __align(d3_1518 + 3<32>, 4<i32>)
	a0_1484 = Mem571[d0_631:word32]
	Mem638[a0_1484:word16] = SLICE(d6_1648, word16, 0)
	d3_1518 = d0_631 + 4<32>
l00001CA8:
	d0_645 = __align(d3_1518 + 3<32>, 4<i32>)
	a0_1484 = Mem571[d0_645:word32]
	Mem651[a0_1484:word32] = d6_1648
	d3_1518 = d0_645 + 4<32>
l00001C86:
	d0_658 = __align(d3_1518 + 3<32>, 4<i32>)
	a0_1484 = Mem571[d0_658:word32]
	Mem664[a0_1484 + 4<i32>:word32] = d6_1648
	Mem665[a0_1484:word32] = 0<32>
	d3_1518 = d0_658 + 4<32>
l00001D0E:
	d5_1517 = 0<32>
	dwLoc30_2207 = 0<32>
l00001816:
	branch v93_458 <=u 0x70<8> l0000183E
l00001824:
	branch v93_458 == 0x73<8> l00001C28
l00001C28:
	d0_696 = __align(d3_1518 + 3<32>, 4<i32>)
	a3_1308 = Mem571[d0_696:word32]
	d3_1518 = d0_696 + 4<32>
	a0_1484 = d0_696 + 4<32>
	a1_702 = a3_1308
	dwLoc0A_2209 = 0<32>
	branch d5_269 == 0<32> l00001C4A
l00001C44:
	branch d5_269 <=u 0<32> l00001C66
l00001C4A:
	branch Mem703[a3_1308:byte] == 0<8> l00001C66
l00001C4E:
	d0_731 = 0<32>
l00001C52:
	d0_731 = d0_731 + 1<32>
	a1_702 = a1_702 + 1<32>
	branch d5_269 <=u 0<32> l00001C5E
l00001C5A:
	branch d5_269 <=u d0_731 l00001C62
l00001C5E:
	branch Mem703[a1_702:byte] != 0<8> l00001C52
l00001C62:
	dwLoc0A_2209 = d0_731
l00001C66:
	d5_1517 = 0<32>
l00001830:
	branch v93_458 == 0x75<8> l0000183E
l00001836:
	branch v93_458 != 0x78<8> l00001D16
l00001D16:
	branch v93_458 != 0<8> l00001D1C
l00001D1A:
	a2_1937 = a2_1937 - 1<32>
l00001D1C:
	a3_1308 = a4_1970
	dwLoc0A_2209 = a2_1937 - a4_1970
	d5_1517 = 0<32>
	dwLoc30_2207 = 0<32>
l0000183E:
	branch v93_458 != 0x70<8> l00001850
l00001844:
	d4_396 = 0x6C<32>
	d1_1108 = 0x78<32>
	dwLoc28_2212 = dwLoc28_2212 | 1<32>
l00001850:
	branch SLICE(d1_1108, byte, 0) == 0x64<8> l0000185E
l00001856:
	branch SLICE(d1_1108, byte, 0) != 0x69<8> l000019A8
l000019A8:
	branch d4_396 != 1<32> l000019CC
l000019CC:
	branch d4_396 != 0x6C<32> l000019EE
l000019EE:
	d0_841 = __align(d3_1518 + 3<32>, 4<i32>)
	v217_847 = Mem846[d0_841:word32]
	d3_1093 = d0_841 + 4<32>
	wLoc32_2254 = SLICE(v217_847, word16, 0) (alias)
	wLoc34_2276 = SLICE(v217_847, word16, 16) (alias)
	dwLoc38_2249 = 0<32>
l000019D4:
	d0_858 = __align(d3_1518 + 3<32>, 4<i32>)
	v206_863 = Mem846[d0_858:word32]
	d3_1093 = d0_858 + 4<32>
	wLoc32_2254 = SLICE(v206_863, word16, 0) (alias)
	wLoc34_2276 = SLICE(v206_863, word16, 16) (alias)
	dwLoc38_2249 = 0<32>
l000019B0:
	d0_873 = __align(d3_1518 + 3<32>, 4<i32>)
	v197_878 = Mem846[d0_873 + 4<32>:word32]
	d3_1093 = d0_873 + 8<32>
	wLoc32_2254 = SLICE(v197_878, word16, 0) (alias)
	wLoc34_2276 = SLICE(v197_878, word16, 16) (alias)
	dwLoc38_2249 = Mem879[d0_873:word32]
l00001A06:
	dwLoc34_3407 = SEQ(wLoc34_2276, wLoc32_2254) (alias)
	branch d4_396 != 0x68<32> l00001A22
l00001A0E:
	dwLoc38_2249 = 0<32>
	dwLoc34_3407 = SEQ(SLICE(CONVERT(wLoc32_2254, uint16, uint32), word24, 8), SLICE(wLoc32_2254, byte, 0)) (alias)
l00001A22:
	bLoc31_2261 = SLICE(dwLoc34_3407, byte, 24) (alias)
	qwLoc38_3410 = SEQ(dwLoc38_2249, dwLoc34_3407) (alias)
	branch d4_396 != 2<32> l00001A3E
l00001A2A:
	qwLoc38_3410 = CONVERT(bLoc31_2261, uint8, uint64) (alias)
l00001A3E:
	dwLoc38 = SLICE(qwLoc38_3410, word32, 0) (alias)
	dwLoc34 = SLICE(qwLoc38_3410, word32, 32) (alias)
	bLoc44_2271 = SLICE(d1_1108, byte, 0)
	branch (dwLoc28_2212 & 1<32>) == 0<32> l00001ADC
l00001A4E:
	branch SLICE(d1_1108, byte, 0) != 0x6F<8> l00001A8A
l00001A54:
	branch d5_269 != 0<32> l00001A7E
l00001A58:
	branch dwLoc38 == 0<32> l00001A8A
l00001A7E:
	d7_1016 = 1<32>
l00001A8A:
	branch SLICE(d1_1108, byte, 0) == 0x78<8> l00001A9A
l00001A90:
	bLoc44_2271 = SLICE(d1_1108, byte, 0)
	branch SLICE(d1_1108, byte, 0) != 0x58<8> l00001ADC
l00001A9A:
	bLoc44_2271 = SLICE(d1_1108, byte, 0)
	branch dwLoc38 == 0<32> l00001ADC
l00001AC4:
	Mem1069[fp + -6<i32> + d7_1016:byte] = 0x30<8>
	d7_1068 = d7_1016 + 1<32>
	Mem1074[fp + -6<i32> + d7_1068:byte] = SLICE(d1_1108, byte, 0)
	d7_1016 = d7_1068 + 1<32>
	bLoc44_2271 = SLICE(d1_1108, byte, 0)
l0000185E:
	branch d4_396 != 1<32> l00001884
l00001884:
	branch d4_396 != 0x6C<32> l000018B0
l000018B0:
	d0_1091 = __align(d3_1518 + 3<32>, 4<i32>)
	d0_1096 = Mem846[d0_1091:word32]
	d3_1093 = d0_1091 + 4<32>
	wLoc3A_2304 = SLICE(d0_1096, word16, 0) (alias)
	d0_1103 = d0_1096 >> 0x1F<32>
	dwLoc40_2303 = d0_1096 >> 0x1F<32>
	branch d4_396 != 0x68<32> l000018F6
l000018DA:
	d1_1120 = CONVERT(wLoc3A_2304, int16, int32)
	dwLoc40_2303 = d1_1120 >> 0x1F<32>
	d1_1108 = SEQ(SLICE(d0_1096 >> 0x1F<32>, word16, 16), wLoc3A_2304)
	d0_1103 = d1_1108
	d0_1096 = SEQ(SLICE(d1_1120, word24, 8), SLICE(wLoc3A_2304, byte, 0)) (alias)
l000018F6:
	bLoc39_2309 = SLICE(d0_1096, byte, 24) (alias)
	qwLoc40_3396 = SEQ(dwLoc40_2303, d0_1096) (alias)
	branch d4_396 != 2<32> l0000191C
l000018FE:
	d1_1155 = CONVERT(bLoc39_2309, int8, int32)
	d1_1108 = SEQ(SLICE(d0_1103, word24, 8), bLoc39_2309)
	qwLoc40_3396 = SEQ(d1_1155 >> 0x1F<32>, d1_1155) (alias)
l0000188C:
	d0_1175 = __align(d3_1518 + 3<32>, 4<i32>)
	d0_1179 = Mem846[d0_1175:word32]
	d3_1093 = d0_1175 + 4<32>
	qwLoc40_3396 = SEQ(d0_1179 >> 0x1F<32>, d0_1179) (alias)
l00001866:
	d0_1196 = __align(d3_1518 + 3<32>, 4<i32>)
	d3_1093 = d0_1196 + 8<32>
	qwLoc40_3396 = Mem1202[d0_1196:word64] (alias)
l0000191C:
	v127_1209 = SLICE(d1_1108, byte, 0)
	dwLoc40_2329 = SLICE(qwLoc40_3396, word32, 0) (alias)
	dwLoc3C_2324 = SLICE(qwLoc40_3396, word32, 32) (alias)
	bLoc44_2271 = v127_1209
	branch dwLoc40_2329 >= 0<32> l00001966
l00001966:
	branch (dwLoc28_2212 & 0x10<32>) == 0<32> l00001980
l00001980:
	branch (dwLoc28_2212 & 8<32>) == 0<32> l00001994
l00001988:
	d7_1016 = 1<32>
l00001972:
	d7_1016 = 1<32>
l00001994:
	dwLoc34 = dwLoc3C_2324
	dwLoc38 = dwLoc40_2329
	bLoc44_2271 = v127_1209
l00001946:
	d1_1292 = -dwLoc3C_2324
	Mem1298[dwLoc38:word32] = -dwLoc40_2329 - CONVERT(d1_1292 <u 0<32>, bool, word32)
	Mem1300[dwLoc38 + 4<i32>:word32] = d1_1292
	d7_1016 = 1<32>
l00001ADC:
	a3_1308 = fp + -14<i32>
	branch bLoc44_2271 == 0x78<8> l00001AF0
l00001AEA:
	branch bLoc44_2271 != 0x58<8> l00001AFA
l00001AFA:
	branch bLoc44_2271 != 0x6F<8> l00001B0A
l00001B0A:
	dwLoc40_2364 = 0xA<32>
l00001B00:
	dwLoc40_2364 = 8<32>
l00001B12:
	dwLoc44_2367 = dwLoc40_2364
l00001AF0:
	dwLoc44_2367 = 0x10<32>
l00001B18:
	branch bLoc44_2271 == 0x58<8> l00001B2A
l00001B2A:
	a6_1348 = 0x00001F30<p32>
l00001B24:
	a6_1348 = 0x00001F20<p32>
l00001B2E:
	d3_1411 = 0<32>
	d6_d7_3401 = SEQ(dwLoc38, dwLoc34) (alias)
l00001B50:
	a3_1308 = a3_1308 - 1<i32>
	Mem1466[a3_1308:byte] = Mem1442[a6_1348 + fn000027B0(d6_d7_3401, SEQ(dwLoc44_2367 >> 0x1F<32>, dwLoc44_2367)):byte]
	d0_d1_3404 = fn00002560(d6_d7_3401, SEQ(dwLoc44_2367 >> 0x1F<32>, dwLoc44_2367), out a0_1484)
	d3_1411 = d3_1411 + 1<32>
	d6_d7_3401 = d0_d1_3404 (alias)
	branch SLICE(d0_d1_3404, word32, 32) != 0<32> l00001B50
l00001BBE:
	dwLoc0A_2209 = d3_1411
	d5_1517 = d5_269
	d3_1518 = d3_1093
	branch d5_269 != 0xFFFFFFFF<32> l00001BE0
l00001BE0:
	dwLoc28_2212 = dwLoc28_2212 & 0xFFFFFFFD<32>
l00001BDA:
	d5_1517 = 0<32>
l00001D2C:
	branch d5_1517 >u dwLoc0A_2209 l00001D3A
l00001D3A:
	dwLoc44_2475 = d5_1517
l00001D32:
	dwLoc44_2475 = dwLoc0A_2209
l00001D3E:
	d0_1568 = dwLoc44_2475 + d7_1016
	branch d0_1568 <u dwLoc30_2207 l00001D62
l00001D62:
	dwLoc44_2518 = dwLoc30_2207 - d0_1568
l00001D5C:
	dwLoc44_2518 = 0<32>
l00001D72:
	branch (dwLoc28_2212 & 2<32>) == 0<32> l00001DB4
l00001D80:
	d2_1609 = 0<32>
	branch d7_1016 == 0<32> l00001DB4
l00001D86:
	branch fn00001F40(CONVERT(Mem1618[fp + -6<i32> + d2_1609:byte], int8, int32), a5_1617, out a0_1484, out a5_1617) != 0xFFFFFFFF<32> l00001DAC
l00001DAC:
	d2_1609 = d2_1609 + 1<32>
	d6_1648 = d6_1648 + 1<32>
	branch d7_1016 >u d2_1609 l00001D86
l00001DB4:
	branch (dwLoc28_2212 & 4<32>) != 0<32> l00001E06
l00001DBC:
	d2_1664 = 0<32>
	branch dwLoc44_2518 == 0<32> l00001E06
l00001DC4:
l00001DCC:
	branch (dwLoc28_2212 & 2<32>) == 0<32> l00001DDA
l00001DDA:
	a0_1687 = SEQ(SLICE(a0_1484, word16, 16), 0x20<16>)
l00001DD4:
	a0_1687 = SEQ(SLICE(a0_1484, word16, 16), 0x30<16>)
l00001DDE:
	branch fn00001F40(a0_1687, a5_1617, out a0_1484, out a5_1617) != 0xFFFFFFFF<32> l00001DF6
l00001DF6:
	d2_1664 = d2_1664 + 1<32>
	d6_1648 = d6_1648 + 1<32>
	branch dwLoc44_2518 >u d2_1664 l00001DCC
l00001DFE:
l00001E06:
	branch (dwLoc28_2212 & 2<32>) != 0<32> l00001E42
l00001E0E:
	d2_1737 = 0<32>
	branch d7_1016 == 0<32> l00001E42
l00001E14:
	branch fn00001F40(CONVERT(Mem1749[fp + -6<i32> + d2_1737:byte], int8, int32), a5_1617, out a0_3414, out a5_1617) != 0xFFFFFFFF<32> l00001E3A
l00001E3A:
	d2_1737 = d2_1737 + 1<32>
	d6_1648 = d6_1648 + 1<32>
	branch d7_1016 >u d2_1737 l00001E14
l00001E42:
	d2_1789 = dwLoc0A_2209
	branch d5_1517 <=u dwLoc0A_2209 l00001E70
l00001E4C:
	branch fn00001F40(0x00000030<p32>, a5_1617, out a0_3415, out a5_1617) != 0xFFFFFFFF<32> l00001E68
l00001E68:
	d2_1789 = d2_1789 + 1<32>
	d6_1648 = d6_1648 + 1<32>
	branch d5_1517 >u d2_1789 l00001E4C
l00001E70:
	d2_1834 = 0<32>
	branch dwLoc0A_2209 == 0<32> l00001EA6
l00001E78:
l00001E7C:
	branch fn00001F40(CONVERT(Mem1845[a3_1308 + d2_1834:byte], int8, int32), a5_1617, out a0_3416, out a5_1617) != 0xFFFFFFFF<32> l00001E9E
l00001E9E:
	d2_1834 = d2_1834 + 1<32>
	d6_1648 = d6_1648 + 1<32>
	branch dwLoc0A_2209 >u d2_1834 l00001E7C
l00001EA6:
	d0 = dwLoc28_2212 & 4<32>
	branch d0 == 0<32> l00001EDC
l00001EAE:
	d2_1891 = 0<32>
	branch dwLoc44_2518 == 0<32> l00001EDC
l00001EB6:
l00001EBA:
	d0 = fn00001F40(0x00000020<p32>, a5_1617, out a0_3417, out a5_1617)
	branch d0 != 0xFFFFFFFF<32> l00001ED4
l00001ED4:
	d2_1891 = d2_1891 + 1<32>
	d6_1648 = d6_1648 + 1<32>
	branch dwLoc44_2518 >u d2_1891 l00001EBA
l00001EDC:
	a4_1970 = a2_1937
l00001F00:
	branch Mem1972[a4_1970:byte] != 0<8> l000015DC
l00001F06:
	d0_1997 = d6_1648
l00001ED0:
	d0_1997 = d6_1648
l00001E9A:
	d0_1997 = d6_1648
l00001E62:
	d0_1997 = d6_1648
l00001E34:
	d0_1997 = d6_1648
l00001DF0:
	d0_1997 = d6_1648
l00001DA6:
	d0_1997 = d6_1648
l00001F08:
	return d0_1997
fn000015C0_exit:


word32 fn00001F40(word32 dwArg04, word32 dwArg08, word32 & a0Out, word32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000015C0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0:[16..31]-fn000015C0 a5:[0..31]-fn000015C0 d0:[0..31]-fn000015C0
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a7 d2
fn00001F40_entry:
l00001F40:
	Mem17[dwArg08 + 24<i32>:word32] = Mem11[dwArg08 + 24<i32>:word32] | 2<32>
	v13_19 = Mem17[dwArg08 + 20<i32>:word32] - 1<32>
	Mem20[dwArg08 + 20<i32>:word32] = v13_19
	branch v13_19 < 0<32> l00001F84
l00001F5C:
	branch dwArg04 != 0xA<32> l00001F6E
l00001F62:
	branch (Mem20[dwArg08 + 24<i32>:word32] & 0x80<32>) != 0<32> l00001F84
l00001F84:
	d1_53 = fn00001F9C(dwArg04, dwArg08, out a0_109, out a5)
l00001F6E:
	a0_109 = Mem20[dwArg08 + 4<i32>:word32]
	Mem64[dwArg08 + 4<i32>:word32] = a0_109 + 1<32>
	Mem67[a0_109:byte] = SLICE(dwArg04, byte, 0)
	d1_53 = CONVERT(Mem67[a0_109:byte], uint8, uint32)
l00001F92:
	a0Out = a0_109
	a5Out = a5
	return d1_53
fn00001F40_exit:


word32 fn00001F9C(word32 dwArg04, word32 dwArg08, word32 & a0Out, word32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001F40
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0:[16..31]-fn00001F40 a5:[0..31]-fn00001F40 d0:[0..31]-fn00001F40
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a4 a6 a7 d2 d3 d4 d5 d6
fn00001F9C_entry:
l00001F9C:
	a5_137 = fn00002530()
	branch dwArg08 != 0<32> l00001FB8
l00001FB8:
	branch (Mem29[dwArg08 + 24<i32>:word32] & 0x49<32>) == 0x40<32> l00001FCA
l00001FCA:
	branch Mem29[dwArg08 + 28<i32>:word32] != 0<32> l00001FE8
l00001FD0:
	branch (Mem29[dwArg08 + 24<i32>:word32] & 4<32>) == 0<32> l00001FE0
l00001FE0:
	Mem65[dwArg08 + 28<i32>:word32] = 0x400<32>
l00001FD8:
	Mem70[dwArg08 + 28<i32>:word32] = 1<32>
l00001FE8:
	branch Mem75[dwArg08 + 8<i32>:word32] != 0<32> l00002028
l00002028:
	branch Mem75[dwArg08:word32] == 0<32> l00002082
l00002082:
	d0_117 = 0<32>
l0000202C:
	branch (Mem75[dwArg08 + 24<i32>:word32] & 0x80<32>) == 0<32> l00002058
l00002038:
	branch dwArg04 != 0xA<32> l00002058
l00002058:
	branch Mem75[dwArg08 + 4<i32>:word32] - Mem75[dwArg08 + 8<i32>:word32] == execPrivate3() l00002086
l00002076:
	Mem116[dwArg08 + 24<i32>:word32] = Mem75[dwArg08 + 24<i32>:word32] | 0x10<32>
	a0 = dwArg08 + 24<i32>
	d0_117 = 0xFFFFFFFF<32>
l0000203E:
	a0_122 = Mem75[dwArg08 + 4<i32>:word32]
	Mem125[dwArg08 + 4<i32>:word32] = a0_122 + 1<32>
	Mem127[a0_122:byte] = SLICE(dwArg04, byte, 0)
	d0_117 = fn000020B0(dwArg08, out a0, out a5_137)
l00001FEE:
	branch (Mem75[dwArg08 + 24<i32>:word32] & 0x80<32>) == 0<32> l00002002
l00002002:
	d4_153 = 1<32>
l00001FFE:
	d4_153 = 2<32>
l00002004:
	d0_175 = fn0000215C(d4_153 + Mem75[dwArg08 + 28<i32>:word32], out a0)
	branch d0_175 != 0<32> l0000201E
l0000201E:
	Mem190[dwArg08 + 8<i32>:word32] = d0_175 + 1<i32>
l00002086:
	Mem199[dwArg08 + 24<i32>:word32] = Mem197[dwArg08 + 24<i32>:word32] | 2<32>
	a0 = Mem199[dwArg08 + 8<i32>:word32]
	Mem206[a0:byte] = SLICE(dwArg04, byte, 0)
	Mem209[dwArg08 + 4<i32>:word32] = Mem206[dwArg08 + 8<i32>:word32] + 1<32>
	Mem213[dwArg08 + 20<i32>:word32] = Mem209[dwArg08 + 28<i32>:word32] - 1<32>
	d0_117 = 0<32>
l00002018:
	d0_117 = 0xFFFFFFFF<32>
l00001FC4:
	d0_117 = 0xFFFFFFFF<32>
l00001FB2:
	d0_117 = 0xFFFFFFFF<32>
l000020AA:
	a0Out = a0
	a5Out = a5_137
	return d0_117
fn00001F9C_exit:


word32 fn000020B0(word32 dwArg04, word32 & a0Out, word32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001F9C
//      fn00002BAC
//      fn00003DDC
// MayUse:  Stack +0004:[0..31]
// LiveOut: a0:[16..31]-fn00001F9C a5:[0..31]-fn00003DDC d0:[0..31]-fn00001F9C
// Trashed: CVZNX a0 a1 a4 a5 d0 d1
// Preserved: a2 a6 a7 d2 d3 d4
fn000020B0_entry:
l000020B0:
	a5_23 = fn00002530()
	branch dwArg04 != 0<32> l000020C6
l000020C6:
	branch Mem17[dwArg04 + 28<i32>:word32] != 0<32> l000020E4
l000020CC:
	branch (Mem17[dwArg04 + 24<i32>:word32] & 4<32>) == 0<32> l000020DC
l000020DC:
	Mem43[dwArg04 + 28<i32>:word32] = 0x400<32>
l000020D4:
	Mem48[dwArg04 + 28<i32>:word32] = 1<32>
l000020E4:
	branch Mem53[dwArg04 + 8<i32>:word32] != 0<32> l000020EE
l000020EE:
	branch (Mem53[dwArg04 + 24<i32>:word32] & 2<32>) == 0<32> l00002134
l000020F6:
	branch Mem53[dwArg04:word32] == 0<32> l00002124
l00002124:
	d0_105 = 0<32>
l000020FA:
	branch Mem53[dwArg04 + 4<i32>:word32] - Mem53[dwArg04 + 8<i32>:word32] == execPrivate3() l00002128
l00002128:
	Mem85[dwArg04 + 4<i32>:word32] = Mem53[dwArg04 + 8<i32>:word32]
	Mem87[dwArg04 + 20<i32>:word32] = Mem85[dwArg04 + 28<i32>:word32]
l00002134:
	Mem96[dwArg04 + 24<i32>:word32] = Mem94[dwArg04 + 24<i32>:word32] & 0xFFFFFFFC<32>
	a0 = dwArg04 + 24<i32>
	d0_105 = 0<32>
l00002118:
	Mem104[dwArg04 + 24<i32>:word32] = Mem53[dwArg04 + 24<i32>:word32] | 0x10<32>
	a0 = dwArg04 + 24<i32>
	d0_105 = 0xFFFFFFFF<32>
l000020EA:
	d0_105 = 0<32>
l000020C2:
	d0_105 = 0xFFFFFFFF<32>
l0000213E:
	a0Out = a0
	a5Out = a5_23
	return d0_105
fn000020B0_exit:


word32 fn0000215C(word32 dwArg04, word32 & a0Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001F9C
//      fn00003CE0
// MayUse:  Stack +0004:[0..31]
// LiveOut: a0:[16..31]-fn00001F9C d0:[0..31]-fn00003CE0
// Trashed: CVZN a0 a1 d0 d1
// Preserved: X a7 d2
fn0000215C_entry:
l0000215C:
	branch dwArg04 != 0<32> l0000216A
l0000216A:
	branch Mem5[0x00003E58<p32>:word32] != 0<32> l0000218E
l00002172:
	a0_15 = Mem5[0x00003E54<p32>:word32]
	Mem21[0<32>:word32] = 0<32>
	Mem35[0x00003E58<p32>:word32] = fn00002450(dwLoc10, a0_15, a0_15, out a0)
l0000218E:
	branch Mem40[0x00003E58<p32>:word32] != 0<32> l0000219A
l0000219A:
	d0_59 = fn0000232C(Mem51[0x00003E58<p32>:word32], dwArg04 + 4<32>, out a0)
	branch d0_59 != 0<32> l000021B8
l000021B8:
	Mem74[d0_59:word32] = dwArg04
	a0 = d0_59 + 4<i32>
	d0_112 = d0_59 + 4<i32>
l000021B4:
	d0_112 = 0<32>
l00002196:
	d0_112 = 0<32>
l00002166:
	d0_112 = 0<32>
l000021C0:
	a0Out = a0
	return d0_112
fn0000215C_exit:


void fn000021C8(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn000021C8_entry:
l000021C8:
	branch dwArg04 == 0<32> l000021F2
l000021D2:
	branch Mem0[0x00003E58<p32>:word32] == 0<32> l000021F2
l000021DA:
	fn00002290(Mem21[0x00003E58<p32>:word32], dwArg04 - 4<i32>, Mem0[dwArg04 - 4<i32>:word32] + 4<32>)
l000021F2:
	return
fn000021C8_exit:


void fn00002290(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000021C8
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2
fn00002290_entry:
l00002290:
	branch Mem20[Mem20[0x00003E24<p32>:word32] + 20<i32>:word16] <u 0x27<16> l000022C0
l000022C0:
	branch dwArg04 == 0<32> l00002324
l000022C4:
	branch dwArg08 == 0<32> l00002324
l000022C8:
	a3_38 = dwArg08 + -12<i32>
	branch dwArg0C >=u Mem20[dwArg04 + 20<i32>:word32] l0000230A
l000022D4:
	a2_42 = dwArg04
l000022D6:
	a2_42 = Mem20[a2_42:word32]
	branch Mem20[a2_42:word32] == 0<32> l00002324
l000022DC:
	branch Mem20[a2_42 + 8<i32>:byte] == 0<8> l000022D6
l000022E2:
	branch dwArg08 <u Mem20[a2_42 + 20<i32>:word32] l000022D6
l000022E8:
	branch dwArg08 >=u Mem20[a2_42 + 24<i32>:word32] l000022D6
l000022EE:
	Deallocate(a2_42, dwArg08, dwArg0C)
	branch Mem20[a2_42 + 28<i32>:word32] != Mem20[dwArg04 + 16<i32>:word32] l00002324
l00002308:
	a3_38 = a2_42
l0000230A:
	Remove(a3_38)
	a3_78 = a3_38 - 4<i32>
	FreeMem(a3_78, Mem20[a3_78:word32])
l000022AE:
	FreePooled(dwArg08, dwArg04)
l00002324:
	return
fn00002290_exit:


word32 fn0000232C(word32 dwArg04, word32 dwArg08, word32 & a0Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000215C
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0:[16..31]-fn0000215C d0:[0..31]-fn0000215C
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4
fn0000232C_entry:
l0000232C:
	a0_117 = Mem26[0x00003E24<p32>:word32]
	branch Mem26[a0_117 + 20<i32>:word16] <u 0x27<16> l00002358
l00002358:
	a3_124 = 0<32>
	branch dwArg04 == 0<32> l00002448
l00002360:
	branch dwArg08 == 0<32> l00002448
l00002366:
	branch dwArg08 >=u Mem26[dwArg04 + 20<i32>:word32] l0000241A
l0000241A:
	d0_52 = AllocMem(dwArg08 + 0x10<32>, Mem26[dwArg04 + 12<i32>:word32])
	a3_124 = d0_52
	branch d0_52 == 0<32> l00002448
l00002434:
	Mem59[d0_52:word32] = dwArg08 + 0x10<32>
	AddTail(dwArg04, d0_52 + 4<i32>)
	Mem66[d0_52 + 0xC<32>:word32] = 0<32>
	a0_117 = dwArg04
	a3_124 = d0_52 + 0x10<32>
l0000236E:
	a5_170 = Mem26[dwArg04:word32]
l00002370:
	branch Mem26[a5_170:word32] == 0<32> l00002392
l00002392:
	d3_81 = Mem26[dwArg04 + 16<i32>:word32] + 0x28<32>
	d0_86 = AllocMem(d3_81, Mem26[dwArg04 + 12<i32>:word32])
	a3_124 = d0_86
	branch d0_86 == 0<32> l00002448
l000023B0:
	Mem93[d0_86:word32] = d3_81
	Mem95[d0_86 + 12<i32>:byte] = 0xA<8>
	Mem98[d0_86 + 20<i32>:word32] = d0_86 + 40<i32>
	Mem99[d0_86 + 24<i32>:word32] = d0_86 + 40<i32>
	Mem101[Mem99[d0_86 + 20<i32>:word32]:word32] = 0<32>
	a2_102 = Mem101[d0_86 + 20<i32>:word32]
	Mem105[a2_102 + 4<32>:word32] = Mem101[dwArg04 + 16<i32>:word32]
	Mem108[d0_86 + 32<i32>:word32] = Mem105[a2_102 + 4<32>:word32]
	Mem111[d0_86 + 28<i32>:word32] = Mem108[d0_86 + 32<i32>:word32] + Mem108[d0_86 + 20<i32>:word32]
	AddHead(dwArg04, d0_86 + 4<i32>)
	a0_117 = d0_86 + 4<i32>
	a3_124 = Allocate(d0_86 + 4<i32>, dwArg08)
l00002374:
	branch Mem26[a5_170 + 8<i32>:byte] == 0<8> l0000238E
l0000237A:
	d0_132 = Allocate(a5_170, dwArg08)
	a0_117 = a5_170
	a3_124 = d0_132
	branch d0_132 != 0<32> l000023FE
l000023FE:
	branch (Mem141[dwArg04 + 12<i32>:word32] & 0x10000<32>) == 0<32> l00002448
l0000240A:
	a2_148 = a3_124
	d2_151 = dwArg08 + 7<32> >>u 3<32>
l00002410:
	Mem154[a2_148:word32] = 0<32>
	a2_155 = a2_148 + 4<i32>
	Mem156[a2_155:word32] = 0<32>
	a2_148 = a2_155 + 4<i32>
	d2_151 = d2_151 - 1<32>
	branch d2_151 != 0<32> l00002410
l00002418:
l00002448:
	d0_164 = a3_124
l0000238E:
	a5_170 = Mem26[a5_170:word32]
l00002346:
	a0_117 = dwArg04
	d0_164 = AllocPooled(dwArg08, dwArg04)
l0000244A:
	a0Out = a0_117
	return d0_164
fn0000232C_exit:


word32 fn00002450(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 & a0Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000215C
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: a0:[16..31]-fn0000215C d0:[0..31]-fn0000215C
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a6 a7 d2 d3
fn00002450_entry:
l00002450:
	a0_17 = Mem14[0x00003E24<p32>:word32]
	branch Mem14[a0_17 + 20<i32>:word16] <u 0x27<16> l0000247E
l0000247E:
	a1_21 = 0<32>
	branch dwArg08 <u dwArg0C l000024B8
l00002484:
	d0_30 = AllocMem(0x18<32>, 0<32>)
	a1_21 = d0_30
	branch d0_30 == 0<32> l000024B8
l0000249A:
	Mem38[d0_30:word32] = d0_30 + 4<i32>
	Mem39[d0_30 + 4<i32>:word32] = 0<32>
	Mem40[d0_30 + 8<i32>:word32] = d0_30
	Mem42[d0_30 + 12<i32>:word32] = dwArg04
	Mem45[d0_30 + 16<i32>:word32] = dwArg08 + 7<32> & 0xFFFFFFF8<32>
	Mem46[d0_30 + 20<i32>:word32] = dwArg0C
	a0_17 = d0_30 + 4<i32>
l000024B8:
	d0_51 = a1_21
l0000246A:
	d0_51 = CreatePrivatePool(dwArg04, dwArg08, dwArg0C)
l000024BA:
	a0Out = a0_17
	return d0_51
fn00002450_exit:


void fn000024C0(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a6 a7 d2
fn000024C0_entry:
l000024C0:
	branch Mem11[Mem11[0x00003E24<p32>:word32] + 20<i32>:word16] <u 0x27<16> l000024E4
l000024E4:
	branch dwArg04 == 0<32> l00002528
l000024E8:
	d0_23 = RemHead(dwArg04)
	a2_24 = d0_23
	branch d0_23 == 0<32> l0000251A
l000024FA:
	a2_31 = a2_24 - 4<i32>
	FreeMem(a2_31, Mem11[a2_31:word32])
	d0_40 = RemHead(dwArg04)
	a2_24 = d0_40
	branch d0_40 != 0<32> l000024FA
l0000251A:
	FreeMem(dwArg04, 0x18<32>)
l000024D6:
	DeletePrivatePool(dwArg04)
l00002528:
	return
fn000024C0_exit:


word32 fn00002530()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001F9C
//      fn000020B0
//      fn00003CE0
// MayUse: 
// LiveOut: a5:[0..31]-fn00003CE0
// Trashed: CVZN a1 a4 a5 d0 d1
// Preserved: a6 a7
fn00002530_entry:
l00002530:
	branch (SetSignal(0<32>, 0x1000<32>) & 0x1000<32>) == 0<32> l0000255A
l0000254E:
	a5 = fn0000131C(0x00000014<p32>)
l0000255A:
	return a5
fn00002530_exit:


ui64 fn00002560(word64 qwArg04, word64 qwArg0C, word32 & a0Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000015C0
// MayUse:  Stack +0004:[0..63] Stack +000C:[0..63]
// LiveOut: a0:[16..31]-fn000015C0 Sequence d0:d1:[0..63]-fn000015C0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
fn00002560_entry:
	dwArg08 = SLICE(qwArg04, word32, 32)
	dwArg04 = SLICE(qwArg04, word32, 0)
	dwArg10 = SLICE(qwArg0C, word32, 32)
	dwArg0C = SLICE(qwArg0C, word32, 0)
l00002560:
	d1_100 = dwArg08
	a0_20 = dwArg08
	d3_174 = dwArg10
	branch dwArg0C != 0<32> l000025B6
l000025B6:
	branch dwArg04 >=u dwArg0C l000025C0
l000025C0:
	d4_31 = 0x18<32>
	d6_32 = __rol<word32,word32>(dwArg0C, 8<32>)
	branch SLICE(d6_32, byte, 0) != 0<8> l000025DE
l000025CA:
	d4_31 = 0x10<32>
	d6_32 = __rol<word32,word32>(d6_32, 8<32>)
	branch SLICE(d6_32, byte, 0) != 0<8> l000025DE
l000025D2:
	d4_31 = 8<32>
	d6_32 = __rol<word32,word32>(d6_32, 8<32>)
	branch SLICE(d6_32, byte, 0) != 0<8> l000025DE
l000025DA:
	d4_31 = 0<32>
	d6_32 = SEQ(SLICE(d6_32, word24, 8), SLICE(dwArg0C, byte, 0))
l000025DE:
	d4_65 = SEQ(SLICE(d4_31, word24, 8), SLICE(d4_31, byte, 0) + Mem17[0x00003E5C<p32> + CONVERT(SLICE(d6_32, word16, 0) & 0xFF<16>, int16, int32):byte])
	d5_67 = 0x20<32> - d4_65
	branch d5_67 != 0<32> l000025FE
l000025FE:
	d0_89 = fn00002664(dwArg04 >>u d4_65, SLICE(qwArg04 >>u d4_65, word32, 0), SLICE(qwArg0C >>u d4_65, word32, 0), out d1_90, out d2_379)
	d3_76 = dwArg10 << d5_67
	d5_105 = __swap(d0_89)
	d6_107 = __swap(d3_76)
	d2_111 = __swap(d0_89 *u32 SLICE(d3_76, word16, 0))
	d3_106 = d3_76 *u32 SLICE(d5_105, word16, 0)
	d5_109 = d5_105 *u32 SLICE(d6_107, word16, 0)
	v38_v35_257 = CONVERT(SLICE(d2_111, word16, 0), uint16, uint32) + SEQ(SLICE(d5_109, word16, 0), SLICE(d3_106, word16, 0))
	d4_108 = d0_89 *u32 SLICE(d6_107, word16, 0)
	v42_v40_258 = CONVERT(SLICE(v38_v35_257, word16, 0), uint16, uint32) + SEQ(SLICE(v38_v35_257, word16, 16), SLICE(d4_108, word16, 0))
	d6_86 = dwArg08 << d5_67
	d2_128 = __swap(SEQ(SLICE(d2_111, word16, 16), SLICE(v42_v40_258, word16, 0)))
	a0_20 = d6_86
	d1_100 = d0_89
	v49_138 = d1_90 - ((__swap(SEQ(SLICE(d3_106, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d4_108, word16, 16), 0<16>))) + SEQ(SLICE(d5_109, word16, 16), SLICE(v42_v40_258, word16, 16)))
	branch v49_138 <u 0<32> l0000265A
l00002654:
	branch v49_138 != 0<32> l0000265C
l00002656:
	branch d6_86 >=u d2_128 l0000265C
l0000265A:
	d1_100 = d0_89 - 1<32>
l000025F2:
	branch dwArg0C <u dwArg04 l000025FA
l000025F6:
	branch dwArg10 >u dwArg08 l000025BA
l000025FA:
l000025BA:
l00002578:
	branch dwArg04 >=u dwArg10 l0000258A
l0000258A:
	branch dwArg10 != 0<32> l00002596
l0000258E:
	d3_174 = CONVERT(1<32> /u SLICE(dwArg10, uint16, 0), int16, int32)
l00002596:
	d0_186 = fn00002664(0<32>, dwArg04, d3_174, out d1_187, out d2_188)
	d1_100 = fn00002664(d1_187, dwArg08, d2_188, out d1_377, out d2_378)
	d0_210 = d0_186
l0000257C:
	d1_100 = fn00002664(dwArg04, dwArg08, dwArg10, out d1_375, out d2_376)
l0000265C:
	d0_210 = 0<32>
l0000265E:
	a0Out = a0_20
	return SEQ(d0_210, d1_100)
fn00002560_exit:


word32 fn00002664(word32 d0, word32 d1, word32 d2, word32 & d1Out, word32 & d2Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002560
//      fn000027B0
// MayUse:  d0:[0..31] d1:[0..31] d2:[0..31]
// LiveOut: d0:[0..31]-fn000027B0 d1:[0..31]-fn000027B0 d2:[0..31]-fn000027B0
// Trashed: CVZNX d0 d1 d2
// Preserved: a0 a1 a7 d3 d4 d5 d6 d7
fn00002664_entry:
l00002664:
	d7_13 = d2
	branch d2 == 0<32> l0000267E
l0000266C:
	branch d0 != 0<32> l0000268C
l0000268C:
	d2_26 = __swap(d2)
	branch SLICE(d2_26, word16, 0) != 0<16> l000026B4
l000026B4:
	bLoc26_389 = 0<8>
	d0_48 = 0<32>
	d5_d6_372 = SEQ(d0, d1) (alias)
	d5_d6_372 = SEQ(d0, d1) (alias)
	branch d2 < 0<32> l000026D0
l000026C6:
	d5_d6_372 = d5_d6_372 * 2<64>
	d0_48 = SEQ(SLICE(d0_48, word16, 16), SLICE(d0_48, word16, 0) + 1<16>)
	d7_13 = d7_13 * 2<32>
	branch d7_13 > 0<32> l000026C6
l000026D0:
	v41_68 = SLICE(d0_48, word16, 0)
	d5_d6_576 = d5_d6_372 (alias)
l000026D2:
	d5_77 = SLICE(d5_d6_576, word32, 32) (alias)
	d2_79 = __swap(d5_77)
	d3_80 = __swap(d7_13)
	d6_102 = SLICE(d5_d6_576, word32, 0) (alias)
	branch SLICE(d2_79 - d3_80, word16, 0) != 0<16> l000026E4
l000026E4:
	d1_112 = __swap(SEQ(SLICE(__swap(SEQ(d5_77 %u SLICE(d3_80, uint16, 0), d5_77 /u SLICE(d3_80, uint16, 0))), word16, 16), 0<16>))
l000026DE:
	d1_112 = 0xFFFF<32>
l000026EE:
	d6_106 = __swap(SEQ(SLICE(d6_102, word16, 16), 0<16>))
l000026F4:
	d4_121 = __swap(d5_77 - __swap(d7_13) *u32 SLICE(d1_112, word16, 0))
	wLoc22_469 = SLICE(dwLoc24, word16, 0) (alias)
	d2_114 = d1_112 *u32 SLICE(d7_13, word16, 0)
	d4_129 = SEQ(SLICE(d4_121, word16, 16), SLICE(d6_106, word16, 0))
	branch SLICE(d4_121, word16, 0) != 0<16> l00002714
l0000270C:
	branch d2_114 <=u d4_129 l00002714
l00002714:
	d6_141 = __swap(d1_112)
	d3_148 = __swap(d6_141)
	d4_150 = __swap(d7_13)
	d6_154 = __swap(d6_141 *u32 SLICE(d7_13, word16, 0))
	d5_149 = d7_13 *u32 SLICE(d3_148, word16, 0)
	d3_152 = d3_148 *u32 SLICE(d4_150, word16, 0)
	v57_v55_373 = CONVERT(SLICE(d6_154, word16, 0), uint16, uint32) + SEQ(SLICE(d3_152, word16, 0), SLICE(d5_149, word16, 0))
	d2_151 = d6_141 *u32 SLICE(d4_150, word16, 0)
	v61_v59_374 = CONVERT(SLICE(v57_v55_373, word16, 0), uint16, uint32) + SEQ(SLICE(v57_v55_373, word16, 16), SLICE(d2_151, word16, 0))
	d5_d6_377 = d5_d6_576 - SEQ((__swap(SEQ(SLICE(d5_149, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d2_151, word16, 16), 0<16>))) + SEQ(SLICE(d3_152, word16, 16), SLICE(v61_v59_374, word16, 16)), __swap(SEQ(SLICE(d6_154, word16, 16), SLICE(v61_v59_374, word16, 0))))
	d6_186 = SLICE(d5_d6_377, word32, 0) (alias)
	d5_189 = SLICE(d5_d6_377, word32, 32) (alias)
	branch d5_189 >=u 0<32> l0000276C
l00002756:
	d5_d6_379 = CONVERT(d6_186, word32, uint64) + SEQ(d5_189, SLICE(__swap(d7_13), word16, 16), 0<16>)
	d1_112 = d1_112 - 1<32>
	d6_186 = SLICE(d5_d6_379, word32, 0) (alias)
	d5_189 = SLICE(d5_d6_379, word32, 32) + __swap(SEQ(SLICE(d7_13, word16, 16), 0<16>))
l0000276C:
	branch bLoc26_389 != 0<8> l00002788
l00002788:
	d6_228 = __swap(SEQ(SLICE(d6_186, word16, 16), SLICE(d5_189, word16, 0)))
	d0 = SEQ(SLICE(dwLoc24, word16, 16), SLICE(d1_112, word16, 0))
	d5_229 = __swap(d5_189)
	v81_232 = SLICE(d7_13, word16, 16)
	branch v41_68 == 0<16> l000027A2
l00002798:
	d7_240 = SEQ(v81_232, v41_68 - 1<16>)
	d5_d6_579 = SEQ(d5_229, d6_228) (alias)
l0000279A:
	d5_d6_579 = d5_d6_579 >>u 1<32>
	v85_251 = SLICE(d7_240, word16, 0)
	d6_228 = SLICE(d5_d6_579, word32, 0)
	d7_240 = SEQ(SLICE(d7_240, word16, 16), v85_251 - 1<i16>)
	branch v85_251 != 0<16> l0000279A
l000027A2:
	d1 = d6_228
	d2 = d2_26
l00002772:
	d5_278 = __swap(d5_189)
	d6_279 = __swap(d6_186)
	bLoc26_389 = true
	dwLoc24 = SEQ(SLICE(d1_112, word16, 0), wLoc22_469) (alias)
	d5_d6_576 = SEQ(SLICE(d5_278, word16, 16), SLICE(d6_279, word16, 0), SLICE(d6_279, word16, 16), 0<16>) (alias)
l00002710:
	d1_112 = d1_112 - 1<32>
l00002692:
	d0_293 = __swap(d0)
	d1_294 = __swap(d1)
	d0_297 = SEQ(SLICE(d0_293, word16, 16), SLICE(d1_294, word16, 0))
	d0_307 = SEQ(d0_297 %u SLICE(d2, uint16, 0), SLICE(__swap(d1_294), word16, 0))
	d2 = SEQ(SLICE(__swap(CONVERT(d0_297 /u SLICE(d2, uint16, 0), uint16, uint32)), word16, 16), d0_307 /u SLICE(d2, uint16, 0))
	d1 = __swap(SEQ(d0_307 %u SLICE(d2, uint16, 0), 0<16>))
	d0 = d2
l00002672:
	branch d1 == 0<32> l000027AA
l00002678:
	branch d2 >u d1 l000027AA
l0000267E:
	d0 = fn0000151E(d1, d2, d2, out d1)
l000027AA:
	d1Out = d1
	d2Out = d2
	return d0
fn00002664_exit:


word32 fn000027B0(word64 qwArg04, word64 qwArg0C)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000015C0
// MayUse:  Stack +0004:[0..63] Stack +000C:[0..63]
// LiveOut: d1:[0..31]-fn000015C0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6 d7
fn000027B0_entry:
	dwArg08 = SLICE(qwArg04, word32, 32)
	dwArg04 = SLICE(qwArg04, word32, 0)
	dwArg10 = SLICE(qwArg0C, word32, 32)
	dwArg0C = SLICE(qwArg0C, word32, 0)
l000027B0:
	d1_175 = dwArg08
	d3_206 = dwArg10
	branch dwArg0C != 0<32> l00002802
l00002802:
	branch dwArg04 <u dwArg0C l000028BC
l00002808:
	d4_34 = 0x18<32>
	d6_35 = __rol<word32,word32>(dwArg0C, 8<32>)
	branch SLICE(d6_35, byte, 0) != 0<8> l00002826
l00002812:
	d4_34 = 0x10<32>
	d6_35 = __rol<word32,word32>(d6_35, 8<32>)
	branch SLICE(d6_35, byte, 0) != 0<8> l00002826
l0000281A:
	d4_34 = 8<32>
	d6_35 = __rol<word32,word32>(d6_35, 8<32>)
	branch SLICE(d6_35, byte, 0) != 0<8> l00002826
l00002822:
	d4_34 = 0<32>
	d6_35 = SEQ(SLICE(d6_35, word24, 8), SLICE(dwArg0C, byte, 0))
l00002826:
	d4_68 = SEQ(SLICE(d4_34, word24, 8), SLICE(d4_34, byte, 0) + Mem20[0x00003E5C<p32> + CONVERT(SLICE(d6_35, word16, 0) & 0xFF<16>, int16, int32):byte])
	d5_70 = 0x20<32> - d4_68
	branch d5_70 != 0<32> l00002848
l00002848:
	d0_92 = fn00002664(dwArg04 >>u d4_68, SLICE(qwArg04 >>u d4_68, word32, 0), SLICE(qwArg0C >>u d4_68, word32, 0), out d1_93, out d2_94)
	d3_79 = dwArg10 << d5_70
	d7_108 = __swap(d0_92)
	d6_110 = __swap(d3_79)
	d2_114 = __swap(d0_92 *u32 SLICE(d3_79, word16, 0))
	d3_109 = d3_79 *u32 SLICE(d7_108, word16, 0)
	d7_112 = d7_108 *u32 SLICE(d6_110, word16, 0)
	v39_v37_283 = CONVERT(SLICE(d2_114, word16, 0), uint16, uint32) + SEQ(SLICE(d7_112, word16, 0), SLICE(d3_109, word16, 0))
	d4_111 = d0_92 *u32 SLICE(d6_110, word16, 0)
	v43_v41_284 = CONVERT(SLICE(v39_v37_283, word16, 0), uint16, uint32) + SEQ(SLICE(v39_v37_283, word16, 16), SLICE(d4_111, word16, 0))
	d2_131 = __swap(SEQ(SLICE(d2_114, word16, 16), SLICE(v43_v41_284, word16, 0)))
	d6_89 = dwArg08 << d5_70
	d3_139 = __swap(SEQ(SLICE(d3_109, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d4_111, word16, 16), 0<16>)) + SEQ(SLICE(d7_112, word16, 16), SLICE(v43_v41_284, word16, 16))
	v50_141 = d1_93 - d2_131
	branch v50_141 <u 0<32> l000028A4
l0000289E:
	d2_d3_290 = SEQ(d2_131, d3_139) (alias)
	branch v50_141 != 0<32> l000028A8
l000028A0:
	d2_d3_290 = SEQ(d2_131, d3_139) (alias)
	branch d6_89 >=u d3_139 l000028A8
l000028A4:
	d2_d3_290 = SEQ(d2_131, d3_139) - SEQ(d2_94, d3_79)
l000028A8:
	d1_175 = SLICE(SEQ(d1_93, d6_89) - d2_d3_290 >>u d4_68, word32, 0) (alias)
l0000283A:
	branch dwArg0C <u dwArg04 l00002842
l0000283E:
	branch dwArg10 >u dwArg08 l000028BC
l00002842:
	d1_175 = dwArg08 - dwArg10 (alias)
l000027C8:
	branch dwArg04 >=u dwArg10 l000027DA
l000027DA:
	branch dwArg10 != 0<32> l000027E6
l000027DE:
	d3_206 = CONVERT(1<32> /u SLICE(dwArg10, uint16, 0), int16, int32)
l000027E6:
	fn00002664(0<32>, dwArg04, d3_206, out d1_219, out d2_220)
	fn00002664(d1_219, dwArg08, d2_220, out d1_175, out d2_417)
l000027CC:
	fn00002664(dwArg04, dwArg08, dwArg10, out d1_175, out d2_416)
l000028BC:
	return d1_175
fn000027B0_exit:


void fn00002BAC(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 a4 a5 d0 d1
// Preserved: X a2 a7
fn00002BAC_entry:
l00002BAC:
	branch dwArg04 == 0<32> l00002BC4
l00002BC4:
	a2_12 = Mem5[0x00003F88<p32>:word32]
	branch a2_12 == 0<32> l00002BEA
l00002BCE:
	branch (Mem20[a2_12 + 24<i32>:word32] & 2<32>) == 0<32> l00002BE0
l00002BD6:
	fn000020B0(a2_12, out a0_113, out a5_114)
l00002BE0:
	a2_12 = Mem46[a2_12 + 12<i32>:word32]
	branch a2_12 != 0<32> l00002BCE
l00002BB8:
	fn000020B0(dwArg04, out a0_111, out a5_112)
l00002BEA:
	return
fn00002BAC_exit:


word32 fn00002BF0(word32 d0, word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  d0:[0..31] Stack +0004:[0..31]
// LiveOut: d0:[0..31]-fn00001390
// Trashed: CVZN a0 d0
// Preserved: a7
fn00002BF0_entry:
l00002BF0:
	return fn00002C3C(d0, Mem8[0x00003F7C<p32>:word32], dwArg04, fp + 8<i32>)
fn00002BF0_exit:


word32 fn00002C0C(byte bArg07, word32 dwArg08)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002C3C
// MayUse:  Stack +0007:[0..7] Stack +0008:[0..31]
// LiveOut: d0:[8..31]-fn00002C3C
// Trashed: CVZNX a0 d0
// Preserved: a2 a7
fn00002C0C_entry:
l00002C0C:
	d0_12 = dwArg08
	branch dwArg08 == 0<32> l00002C36
l00002C18:
	d0_12 = Mem5[dwArg08 + 4<i32>:word32]
	branch d0_12 >=u Mem5[dwArg08 + 8<i32>:word32] l00002C2A
l00002C22:
	Mem18[Mem5[dwArg08 + 4<i32>:word32]:byte] = bArg07
l00002C2A:
	Mem26[dwArg08 + 20<i32>:word32] = Mem24[dwArg08 + 20<i32>:word32] + 1<32>
	Mem29[dwArg08 + 4<i32>:word32] = Mem26[dwArg08 + 4<i32>:word32] - 1<32>
l00002C36:
	return d0_12
fn00002C0C_exit:


word32 fn00002C3C(word32 d0, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002BF0
// MayUse:  d0:[8..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: d0:[0..31]-fn00002BF0
// Trashed: CVZN d0
// Preserved: X a0 a1 a2 a3 a4 a5 a6 a7 d1 d2 d3 d4 d5 d6 d7
fn00002C3C_entry:
l00002C3C:
	d2_1002 = dwArg0C
	a4_280 = dwArg08
	dwLoc3C_4060 = 0<32>
	d4_132 = 0<32>
	d5_1086 = 0<32>
	branch Mem40[dwArg08:byte] == 0<8> l00003C3E
l00002C5E:
	d3_1918 = 0<32>
	branch Mem49[a4_280:byte] != 0x25<8> l00003B3C
l00003B3C:
	d0_63 = CONVERT(Mem49[0x000028C5<p32> + (SEQ(SLICE(d0, word24, 8), Mem49[a4_280:byte]) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_63 & 8<32>
	branch (d0_63 & 8<32>) == 0<32> l00003BC8
l00003BC8:
	Mem72[dwArg04 + 24<i32>:word32] = Mem49[dwArg04 + 24<i32>:word32] | 1<32>
	v113_74 = Mem72[dwArg04 + 20<i32>:word32] - 1<32>
	Mem75[dwArg04 + 20<i32>:word32] = v113_74
	branch v113_74 < 0<32> l00003BFA
l00003BFA:
	dwLoc4C_4062 = fn00003CE0(dwArg04, out a5_6009)
	d1 = d1_88
l00003BDA:
	a0_100 = Mem75[dwArg04 + 4<i32>:word32]
	Mem105[dwArg04 + 4<i32>:word32] = a0_100 + 1<32>
	dwLoc4C_4062 = CONVERT(Mem105[a0_100:byte], uint8, uint32)
l00003C08:
	d0 = CONVERT(Mem127[a4_280:byte], int8, int32)
	d5_1086 = dwLoc4C_4062
	d3_130 = 1<32>
	d4_132 = d4_132 + 1<32>
	branch d0 == dwLoc4C_4062 l00003C32
l00003C1C:
	branch dwLoc4C_4062 == 0xFFFFFFFF<32> l00003C2E
l00003C24:
	d0 = fn00002C0C(SLICE(dwLoc4C_4062, byte, 0), dwArg04)
l00003C2E:
	d3_130 = 0<32>
	d4_132 = d4_132 - 1<32>
l00003B58:
	Mem174[dwArg04 + 24<i32>:word32] = Mem172[dwArg04 + 24<i32>:word32] | 1<32>
	v97_176 = Mem174[dwArg04 + 20<i32>:word32] - 1<32>
	Mem177[dwArg04 + 20<i32>:word32] = v97_176
	branch v97_176 < 0<32> l00003B82
l00003B82:
	d0_189 = fn00003CE0(dwArg04, out a5_6008)
	d1 = d0_189
l00003B6A:
	a0_202 = Mem177[dwArg04 + 4<i32>:word32]
	Mem207[dwArg04 + 4<i32>:word32] = a0_202 + 1<32>
	v99_211 = Mem207[a0_202:byte]
	d0_189 = SEQ(SLICE(d0, word24, 8), v99_211)
	d1 = CONVERT(v99_211, uint8, uint32)
l00003B8E:
	d0_242 = CONVERT(Mem239[0x000028C5<p32> + (SEQ(SLICE(d0_189, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d5_1086 = d1
	d4_132 = d4_132 + 1<32>
	d0 = d0_242 & 8<32>
	branch (d0_242 & 8<32>) != 0<32> l00003B58
l00003BB0:
	branch d1 == 0xFFFFFFFF<32> l00003BC2
l00003BB8:
	d0 = fn00002C0C(SLICE(d1, byte, 0), dwArg04)
l00003BC2:
	d4_132 = d4_132 - 1<32>
	d3_130 = 1<32>
l00003C32:
	a4_280 = a4_280 + 1<32>
l00002C68:
	a3_284 = a4_280 + 1<i32>
	d0_294 = CONVERT(Mem283[0x000028C5<p32> + CONVERT(Mem283[a3_284:byte], uint8, uint32):byte], uint8, uint32)
	d6_1174 = 0xFFFFFFFF<32>
	bLoc30_4075 = 0x69<8>
	bLoc2F_4076 = 0<8>
	d0 = d0_294 & 4<32>
	branch (d0_294 & 4<32>) == 0<32> l00002CEC
l00002C90:
	d0_310 = CONVERT(Mem283[0x000028C5<p32> + CONVERT(Mem283[a3_284:byte], uint8, uint32):byte], uint8, uint32)
	d6_1174 = 0<32>
	d0 = d0_310 & 4<32>
	branch (d0_310 & 4<32>) == 0<32> l00002CEC
l00002CAA:
	d1_326 = __swap(0xA<32>) *u32 SLICE(d6_1174, word16, 0)
	d0_335 = SLICE(d6_1174, word16, 0) *u32 0xA<32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_326, word16, 16), SLICE(d1_326, word16, 0) + SLICE(__swap(d6_1174), word16, 0) *u 0xA<16>)), word16, 16), 0<16>)
	a3_284 = a3_284 + 1<i32>
	d1_344 = CONVERT(Mem320[a3_284:byte], uint8, uint32)
	d0_358 = CONVERT(Mem320[0x000028C5<p32> + CONVERT(Mem320[a3_284:byte], uint8, uint32):byte], uint8, uint32)
	d1 = d1_344 - 0x30<32>
	d6_1174 = d1_344 - 0x30<32> + d0_335
	d0 = d0_358 & 4<32>
	branch (d0_358 & 4<32>) != 0<32> l00002CAA
l00002CEC:
	branch Mem365[a3_284:byte] == 0x68<8> l00002D16
l00002CF2:
	branch Mem365[a3_284:byte] == 0x6C<8> l00002D16
l00002CF8:
	branch Mem365[a3_284:byte] == 0x4C<8> l00002D16
l00002CFE:
	branch Mem365[a3_284:byte] == 0x7A<8> l00002D16
l00002D04:
	branch Mem365[a3_284:byte] == 0x6A<8> l00002D16
l00002D0A:
	branch Mem365[a3_284:byte] == 0x74<8> l00002D16
l00002D10:
	branch Mem365[a3_284:byte] != 0x2A<8> l00002D7E
l00002D16:
	d7 = SEQ(SLICE(d7, word24, 8), 0<8>)
	d1 = SEQ(SLICE(d1, word24, 8), 0x69<8>)
l00002D1E:
	branch Mem365[a3_284:byte] != 0x2A<8> l00002D28
l00002D28:
	branch SLICE(d1, byte, 0) != 0x68<8> l00002D38
l00002D2E:
	branch Mem365[a3_284:byte] != 0x68<8> l00002D38
l00002D38:
	branch SLICE(d1, byte, 0) != 0x6C<8> l00002D48
l00002D3E:
	branch Mem365[a3_284:byte] != 0x6C<8> l00002D48
l00002D48:
	d1 = SEQ(SLICE(d1, word24, 8), Mem365[a3_284:byte])
l00002D44:
	d1 = 1<32>
l00002D34:
	d1 = 2<32>
l00002D24:
	d7 = 1<32>
l00002D4A:
	a3_284 = a3_284 + 1<32>
	branch Mem365[a3_284:byte] == 0x68<8> l00002D1E
l00002D52:
	branch Mem365[a3_284:byte] == 0x6C<8> l00002D1E
l00002D58:
	branch Mem365[a3_284:byte] == 0x4C<8> l00002D1E
l00002D5E:
	branch Mem365[a3_284:byte] == 0x7A<8> l00002D1E
l00002D64:
	branch Mem365[a3_284:byte] == 0x6A<8> l00002D1E
l00002D6A:
	branch Mem365[a3_284:byte] == 0x74<8> l00002D1E
l00002D70:
	branch Mem365[a3_284:byte] == 0x2A<8> l00002D1E
l00002D76:
	bLoc30_4075 = SLICE(d1, byte, 0)
	bLoc2F_4076 = SLICE(d7, byte, 0)
l00002D7E:
	branch bLoc30_4075 != 0x6A<8> l00002D8C
l00002D86:
	bLoc30_4075 = 1<8>
l00002D8C:
	branch bLoc30_4075 != 0x74<8> l00002D9A
l00002D94:
	bLoc30_4075 = 0x69<8>
l00002D9A:
	branch bLoc30_4075 != 0x7A<8> l00002DA8
l00002DA2:
	bLoc30_4075 = 0x6C<8>
l00002DA8:
	v77_519 = Mem518[a3_284:byte]
	v78_525 = SLICE(d7, word24, 8)
	a3_2025 = a3_284 + 1<i32>
	d7 = SEQ(v78_525, v77_519)
	branch v77_519 == 0<8> l00002E1E
l00002DAC:
	branch v77_519 == 0x25<8> l00002E1E
l00002DB2:
	branch v77_519 == 0x63<8> l00002E1E
l00002DB8:
	branch v77_519 == 0x6E<8> l00002E1E
l00002DBE:
	branch v77_519 == 0x5B<8> l00002E1E
l00002DC4:
	Mem547[dwArg04 + 24<i32>:word32] = Mem545[dwArg04 + 24<i32>:word32] | 1<32>
	v84_549 = Mem547[dwArg04 + 20<i32>:word32] - 1<32>
	Mem550[dwArg04 + 20<i32>:word32] = v84_549
	branch v84_549 < 0<32> l00002DEE
l00002DEE:
	d0_562 = fn00003CE0(dwArg04, out a5_6007)
	d1 = d0_562
l00002DD6:
	a0_575 = Mem550[dwArg04 + 4<i32>:word32]
	Mem580[dwArg04 + 4<i32>:word32] = a0_575 + 1<32>
	v88_584 = Mem580[a0_575:byte]
	d0_562 = SEQ(SLICE(d0, word24, 8), v88_584)
	d1 = CONVERT(v88_584, uint8, uint32)
l00002DFA:
	d0_615 = CONVERT(Mem612[0x000028C5<p32> + (SEQ(SLICE(d0_562, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d5_1086 = d1
	d4_132 = d4_132 + 1<32>
	d0 = d0_615 & 8<32>
	branch (d0_615 & 8<32>) != 0<32> l00002DC4
l00002E1C:
	d3_1918 = 1<32>
l00002E1E:
	v126_634 = SLICE(d1, word24, 8)
	d1_638 = SEQ(v126_634, v77_519 - 0x25<8>)
	branch v77_519 == 0x25<8> l0000326A
l0000326A:
	Mem657[dwArg04 + 24<i32>:word32] = Mem655[dwArg04 + 24<i32>:word32] | 1<32>
	v138_659 = Mem657[dwArg04 + 20<i32>:word32] - 1<32>
	Mem660[dwArg04 + 20<i32>:word32] = v138_659
	branch v138_659 < 0<32> l0000329C
l0000329C:
	d0 = fn00003CE0(dwArg04, out a5_6010)
	dwLoc4C_4095 = d0
	d1 = d1_675
l0000327C:
	a0_687 = Mem660[dwArg04 + 4<i32>:word32]
	Mem692[dwArg04 + 4<i32>:word32] = a0_687 + 1<32>
	v140_696 = Mem692[a0_687:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v140_696)
	dwLoc4C_4095 = CONVERT(v140_696, uint8, uint32)
	d1 = d1_638
l000032AA:
	d5_1086 = dwLoc4C_4095
	d3_130 = d3_1918 + 1<32>
	d4_132 = d4_132 + 1<32>
	branch dwLoc4C_4095 == 0x25<32> l00003B36
l000032BE:
	branch dwLoc4C_4095 == 0xFFFFFFFF<32> l000032D0
l000032C6:
	d0 = fn00002C0C(SLICE(dwLoc4C_4095, byte, 0), dwArg04)
l000032D0:
	d3_130 = d3_130 - 1<32>
	d4_132 = d4_132 - 1<32>
l00002E28:
	branch v77_519 == 0x5B<8> l00002F66
l00002F66:
	bLoc4C_4103 = 0<8>
	branch Mem787[a3_2025:byte] != 0x5E<8> l00002F78
l00002F70:
	bLoc4C_4103 = 1<8>
	a3_2025 = a3_2025 + 1<32>
l00002F78:
	d7 = SEQ(v78_525, bLoc4C_4103)
	d1_1069 = 0<32>
l00002F84:
	branch bLoc4C_4103 == 0<8> l00002F90
l00002F90:
	d5_814 = 0<32>
l00002F88:
	d5_814 = 0xFF<32>
l00002F92:
	Mem829[fp + -42<i32> + d1_1069:byte] = SLICE(d5_814, byte, 0)
	d1_1069 = d1_1069 + 1<32>
	branch d1_1069 <u 0x20<32> l00002F84
l00002FA4:
l00002FB0:
	branch Mem863[a3_2025:byte] == 0<8> l00003026
l00002FB4:
	v409_868 = Mem863[a3_2025:byte]
	a3_2025 = a3_2025 + 1<i32>
	d1_1069 = SEQ(SLICE(d1_1069, word24, 8), v409_868)
	branch Mem863[a3_2025:byte] != 0x2D<8> l00002FC8
l00002FBC:
	branch v409_868 >=u Mem863[a3_2025 + 1<i32>:byte] l00002FC8
l00002FC8:
	d7 = SEQ(SLICE(d7, word24, 8), v409_868)
l00002FC2:
	a3_2025 = a3_2025 + 2<32>
	d7 = SEQ(SLICE(d7, word24, 8), Mem863[a3_2025 + 1<32>:byte])
l00002FCA:
	d5_900 = CONVERT(v409_868, uint8, uint32)
	d0 = CONVERT(SLICE(d7, byte, 0), uint8, uint32)
	branch d0 <u d5_900 l00003020
l00002FD6:
	branch bLoc4C_4103 == 0<8> l00002FFA
l00002FFA:
	a0_919 = fp + -42<i32> + (d5_900 >>u 3<32>)
	d1_1069 = CONVERT(Mem927[a0_919:byte], uint8, uint32)
	Mem933[a0_919:byte] = 1<8> << (SLICE(d5_900, byte, 0) & 7<8>) | SLICE(d1_1069, byte, 0)
l00002FDA:
	a0_940 = fp + -42<i32> + (d5_900 >>u 3<32>)
	d1_1069 = CONVERT(Mem927[a0_940:byte], uint8, uint32)
	Mem954[a0_940:byte] = SLICE(~(1<32> << (d5_900 & 7<32>)) & d1_1069, byte, 0)
l00003016:
	d5_900 = d5_900 + 1<32>
	d0 = CONVERT(SLICE(d7, byte, 0), uint8, uint32)
	branch d0 >=u d5_900 l00002FD6
l00003020:
	branch Mem975[a3_2025:byte] != 0x5D<8> l00002FB0
l00003026:
	a3_2025 = a3_2025 + 1<32>
	branch bLoc2F_4076 != 0<8> l00003046
l00003046:
	a6_1005 = 0<32>
l00003032:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	d2_1002 = d0 + 4<32>
	a6_1005 = Mem988[d0:word32]
l00003048:
	Mem1020[dwArg04 + 24<i32>:word32] = Mem988[dwArg04 + 24<i32>:word32] | 1<32>
	v433_1022 = Mem1020[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1023[dwArg04 + 20<i32>:word32] = v433_1022
	branch v433_1022 < 0<32> l0000307A
l0000307A:
	d0 = fn00003CE0(dwArg04, out a5_6019)
	dwLoc4C_4134 = d0
l0000305A:
	a0_1048 = Mem1023[dwArg04 + 4<i32>:word32]
	Mem1053[dwArg04 + 4<i32>:word32] = a0_1048 + 1<32>
	v435_1057 = Mem1053[a0_1048:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v435_1057)
	dwLoc4C_4134 = CONVERT(v435_1057, uint8, uint32)
	d1 = d1_1069
l00003088:
	d5_1086 = dwLoc4C_4134
	d3_1099 = d3_1918 + 1<32>
	d4_1112 = d4_132 + 1<32>
	branch dwLoc4C_4134 == 0xFFFFFFFF<32> l00003156
l0000309C:
	d1 = CONVERT(Mem1126[fp + -42<i32> + fn000014EC(d2_1002, dwLoc4C_4134, 0x00000008<p32>):byte], uint8, uint32)
	d0 = 1<32> << (dwLoc4C_4134 & 7<32>) & d1
	branch d0 == 0<32> l00003156
l000030CC:
	branch d6_1174 <u d3_1099 l00003156
l000030D2:
	d7 = SEQ(SLICE(d7, word24, 8), bLoc2F_4076)
l000030D6:
	branch bLoc2F_4076 != 0<8> l000030DC
l000030DA:
	Mem1208[a6_1005:byte] = SLICE(d5_1086, byte, 0)
	a6_1005 = a6_1005 + 1<i32>
l000030DC:
	Mem1219[dwArg04 + 24<i32>:word32] = Mem1216[dwArg04 + 24<i32>:word32] | 1<32>
	v450_1221 = Mem1219[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1222[dwArg04 + 20<i32>:word32] = v450_1221
	branch v450_1221 < 0<32> l00003106
l00003106:
	d0 = fn00003CE0(dwArg04, out a5_6020)
	d1 = d0
l000030EE:
	a0_1248 = Mem1222[dwArg04 + 4<i32>:word32]
	Mem1253[dwArg04 + 4<i32>:word32] = a0_1248 + 1<32>
	v452_1257 = Mem1253[a0_1248:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v452_1257)
	d1 = CONVERT(v452_1257, uint8, uint32)
l00003112:
	d5_1086 = d1
	d3_1099 = d3_1099 + 1<32>
	d4_1112 = d4_1112 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l00003152
l00003120:
	d1 = CONVERT(Mem1293[fp + -42<i32> + fn000014EC(d2_1002, d1, 0x00000008<p32>):byte], uint8, uint32)
	d0 = 1<32> << (d1 & 7<32>) & d1
	branch d0 == 0<32> l00003152
l0000314E:
	branch d6_1174 >=u d3_1099 l000030D6
l00003152:
l00003156:
	branch d5_1086 == 0xFFFFFFFF<32> l00003168
l0000315E:
	d0 = fn00002C0C(SLICE(d5_1086, byte, 0), dwArg04)
l00003168:
	d3_130 = d3_1099 - 1<32>
	d4_132 = d4_1112 - 1<32>
	branch bLoc2F_4076 != 0<8> l00003B36
l00003174:
	branch d3_130 == 0<32> l00003B36
l0000317A:
	Mem1397[a6_1005:byte] = 0<8>
	dwLoc3C_4060 = dwLoc3C_4060 + 1<32>
l00002E30:
	d1_1404 = SEQ(v126_634, v77_519 - 0x63<8>)
	branch v77_519 == 0x63<8> l00002E46
l00002E46:
	branch d6_1174 != 0xFFFFFFFF<32> l00002E50
l00002E4E:
	d6_1174 = 1<32>
l00002E50:
	branch bLoc2F_4076 != 0<8> l00002E6A
l00002E6A:
	a1_1420 = 0<32>
l00002E56:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	d2_1002 = d0 + 4<32>
	a1_1420 = Mem655[d0:word32]
l00002E6C:
	Mem1436[dwArg04 + 24<i32>:word32] = Mem655[dwArg04 + 24<i32>:word32] | 1<32>
	Mem1439[dwArg04 + 20<i32>:word32] = Mem1436[dwArg04 + 20<i32>:word32] - 1<32>
	branch Mem1443[dwArg04 + 20<i32>:word32] < 0<32> l00002EA4
l00002EA4:
	d0 = fn00003CE0(dwArg04, out a5_6014)
	dwLoc44_4195 = d0
	d1 = d1_1460
l00002E84:
	a0_1474 = Mem1443[dwArg04 + 4<i32>:word32]
	Mem1479[dwArg04 + 4<i32>:word32] = a0_1474 + 1<32>
	v222_1483 = Mem1479[a0_1474:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v222_1483)
	dwLoc44_4195 = CONVERT(v222_1483, uint8, uint32)
	d1 = d1_1404
l00002EC2:
	d5_1086 = dwLoc44_4195
	d3_1510 = d3_1918 + 1<32>
	d4_1514 = d4_132 + 1<32>
	branch dwLoc44_4195 == 0xFFFFFFFF<32> l00002F3A
l00002ED8:
	branch d6_1174 <u d3_1510 l00002F3A
l00002EE0:
	d7 = SEQ(v78_525, bLoc2F_4076)
	a4_1535 = a1_1420
l00002EE8:
	branch bLoc2F_4076 != 0<8> l00002EEE
l00002EEC:
	Mem1544[a4_1535:byte] = SLICE(d5_1086, byte, 0)
	a4_1535 = a4_1535 + 1<i32>
l00002EEE:
	Mem1555[dwArg04 + 24<i32>:word32] = Mem1552[dwArg04 + 24<i32>:word32] | 1<32>
	v241_1557 = Mem1555[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1558[dwArg04 + 20<i32>:word32] = v241_1557
	branch v241_1557 < 0<32> l00002F18
l00002F18:
	d0 = fn00003CE0(dwArg04, out a5_6015)
	d1 = d0
l00002F00:
	a0_1584 = Mem1558[dwArg04 + 4<i32>:word32]
	Mem1589[dwArg04 + 4<i32>:word32] = a0_1584 + 1<32>
	v243_1593 = Mem1589[a0_1584:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v243_1593)
	d1 = CONVERT(v243_1593, uint8, uint32)
l00002F24:
	d5_1086 = d1
	d3_1510 = d3_1510 + 1<32>
	d4_1514 = d4_1514 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l00002F36
l00002F32:
	branch d6_1174 >=u d3_1510 l00002EE8
l00002F36:
l00002F3A:
	branch d5_1086 == 0xFFFFFFFF<32> l00002F4C
l00002F42:
	d0 = fn00002C0C(SLICE(d5_1086, byte, 0), dwArg04)
l00002F4C:
	d3_130 = d3_1510 - 1<32>
	d4_132 = d4_1514 - 1<32>
	branch bLoc2F_4076 != 0<8> l00003B36
l00002F58:
	branch d3_130 == 0<32> l00003B36
l00002F5E:
	dwLoc3C_4060 = dwLoc3C_4060 + 1<32>
l00002E34:
	d1 = SEQ(v126_634, v77_519 - 0x6E<8>)
	branch v77_519 == 0x6E<8> l000032D8
l000032D8:
	branch bLoc2F_4076 != 0<8> l00003370
l000032E0:
	branch bLoc30_4075 != 1<8> l00003302
l00003302:
	branch bLoc30_4075 != 0x6C<8> l00003320
l00003320:
	branch bLoc30_4075 != 0x68<8> l0000333E
l0000333E:
	branch bLoc30_4075 != 2<8> l0000335C
l0000335C:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem1713[Mem655[d0:word32]:word32] = d4_132
	d2_1002 = d0 + 4<32>
l00003346:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem1727[Mem655[d0:word32]:byte] = SLICE(d4_132, byte, 0)
	d2_1002 = d0 + 4<32>
l00003328:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem1741[Mem655[d0:word32]:word16] = SLICE(d4_132, word16, 0)
	d2_1002 = d0 + 4<32>
l0000330A:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem1754[Mem655[d0:word32]:word32] = d4_132
	d2_1002 = d0 + 4<32>
l000032E8:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	a0_1766 = Mem655[d0:word32]
	Mem1767[a0_1766 + 4<i32>:word32] = d4_132
	Mem1768[a0_1766:word32] = 0<32>
	d2_1002 = d0 + 4<32>
l00003370:
	d3_130 = 1<32>
	dwLoc3C_4060 = dwLoc3C_4060 + 1<32>
l00002E3C:
	d1 = SEQ(v126_634, v77_519 - 0x73<8>)
	branch v77_519 == 0x73<8> l00003184
l00003184:
	branch bLoc2F_4076 != 0<8> l0000319E
l0000319E:
	a5_1788 = 0<32>
l0000318A:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	d2_1002 = d0 + 4<32>
	a5_1788 = Mem655[d0:word32]
l000031A0:
	branch d5_1086 == 0xFFFFFFFF<32> l0000323C
l000031AA:
	d0_1826 = CONVERT(Mem655[0x000028C5<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_1826 & 8<32>
	branch (d0_1826 & 8<32>) != 0<32> l0000323C
l000031C6:
	branch d6_1174 <u d3_1918 l0000323C
l000031CA:
	d7 = SEQ(v78_525, bLoc2F_4076)
l000031CE:
	branch bLoc2F_4076 != 0<8> l000031D4
l000031D2:
	Mem1853[a5_1788:byte] = SLICE(d5_1086, byte, 0)
	a5_1788 = a5_1788 + 1<i32>
l000031D4:
	Mem1864[dwArg04 + 24<i32>:word32] = Mem1861[dwArg04 + 24<i32>:word32] | 1<32>
	v161_1866 = Mem1864[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1867[dwArg04 + 20<i32>:word32] = v161_1866
	branch v161_1866 < 0<32> l000031FE
l000031FE:
	d0 = fn00003CE0(dwArg04, out a5_1788)
	d1 = d0
l000031E6:
	a0_1893 = Mem1867[dwArg04 + 4<i32>:word32]
	Mem1898[dwArg04 + 4<i32>:word32] = a0_1893 + 1<32>
	v163_1902 = Mem1898[a0_1893:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v163_1902)
	d1 = CONVERT(v163_1902, uint8, uint32)
l0000320A:
	d5_1086 = d1
	d3_1918 = d3_1918 + 1<32>
	d4_132 = d4_132 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l00003238
l00003218:
	d0_1939 = CONVERT(Mem1936[0x000028C5<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_1939 & 8<32>
	branch (d0_1939 & 8<32>) != 0<32> l00003238
l00003234:
	branch d6_1174 >=u d3_1918 l000031CE
l00003238:
l0000323C:
	branch d5_1086 == 0xFFFFFFFF<32> l0000324E
l00003244:
	d0 = fn00002C0C(SLICE(d5_1086, byte, 0), dwArg04)
l0000324E:
	d3_130 = d3_1918 - 1<32>
	d4_132 = d4_132 - 1<32>
	branch bLoc2F_4076 != 0<8> l00003B36
l0000325A:
	branch d3_130 == 0<32> l00003B36
l00003260:
	Mem2013[a5_1788:byte] = 0<8>
	dwLoc3C_4060 = dwLoc3C_4060 + 1<32>
l00002E42:
l0000337A:
	dwLoc48_4246 = 0<32>
	dwLoc4C_4247 = 0<32>
	dwLoc0A_4248 = 0<32>
	branch v77_519 != 0<8> l0000338C
l0000338A:
	a3_2025 = a3_2025 - 1<32>
l0000338C:
	branch v77_519 != 0x70<8> l0000339A
l00003392:
	bLoc30_4075 = 0x6C<8>
	d7 = 0x78<32>
l0000339A:
	branch d5_1086 != 0x2D<32> l000033A8
l000033A2:
	branch SLICE(d7, byte, 0) != 0x75<8> l000033B0
l000033A8:
	branch d5_1086 != 0x2B<32> l00003400
l000033B0:
	branch d6_1174 <u d3_1918 l00003400
l000033B4:
	Mem2071[dwArg04 + 24<i32>:word32] = Mem2064[dwArg04 + 24<i32>:word32] | 1<32>
	v184_2073 = Mem2071[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2074[dwArg04 + 20<i32>:word32] = v184_2073
	dwLoc0A_4248 = d5_1086
	branch v184_2073 < 0<32> l000033EA
l000033EA:
	d0 = fn00003CE0(dwArg04, out a5_6011)
	dwLoc44_4252 = d0
l000033CA:
	a0_2098 = Mem2074[dwArg04 + 4<i32>:word32]
	Mem2103[dwArg04 + 4<i32>:word32] = a0_2098 + 1<32>
	v186_2107 = Mem2103[a0_2098:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v186_2107)
	dwLoc44_4252 = CONVERT(v186_2107, uint8, uint32)
l000033F8:
	d5_1086 = dwLoc44_4252
	d3_1918 = d3_1918 + 1<32>
	d4_132 = d4_132 + 1<32>
l00003400:
	branch SLICE(d7, byte, 0) != 0x69<8> l00003572
l00003408:
	branch d5_1086 != 0x30<32> l00003534
l00003412:
	branch d6_1174 <u d3_1918 l00003534
l00003534:
	d0_2179 = CONVERT(Mem2172[0x000028C5<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_2179 & 4<32>
	branch (d0_2179 & 4<32>) != 0<32> l00003572
l00003550:
	d0_2194 = CONVERT(Mem2172[0x000028C5<p32> + (CONVERT(SLICE(d5_1086, byte, 0), uint8, uint32) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_2194 & 0x44<32>
	branch (d0_2194 & 0x44<32>) == 0<32> l00003572
l0000356C:
	branch d6_1174 <u d3_1918 l00003572
l00003570:
	d7 = 0x78<32>
l00003418:
	Mem2213[dwArg04 + 24<i32>:word32] = Mem2172[dwArg04 + 24<i32>:word32] | 1<32>
	v196_2215 = Mem2213[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2216[dwArg04 + 20<i32>:word32] = v196_2215
	branch v196_2215 < 0<32> l0000344A
l0000344A:
	d0_2228 = fn00003CE0(dwArg04, out a5_6012)
	dwLoc44_4258 = d0_2228
l0000342A:
	a0_2241 = Mem2216[dwArg04 + 4<i32>:word32]
	Mem2246[dwArg04 + 4<i32>:word32] = a0_2241 + 1<32>
	v198_2250 = Mem2246[a0_2241:byte]
	d0_2228 = SEQ(SLICE(d0, word24, 8), v198_2250)
	dwLoc44_4258 = CONVERT(v198_2250, uint8, uint32)
l00003458:
	bLoc41_4264 = SLICE(dwLoc44_4258, byte, 0) (alias)
	d0_2281 = SEQ(SLICE(d0_2228, word24, 8), bLoc41_4264)
	d3_2273 = d3_1918 + 1<32>
	d0 = d0_2281 & 0xFF<32>
	branch __btst<byte>(Mem2271[0x000028C5<p32> + CONVERT(SLICE(d0_2281, int16, 0) & 255<i16>, int16, int32):byte], 0<16>) l0000347E
l0000347A:
	d0 = CONVERT(bLoc41_4264 | 0x20<8>, uint8, uint32)
l0000347E:
	branch d0 != 0x78<32> l00003516
l00003488:
	branch d6_1174 <u d3_2273 l00003516
l00003516:
	d7 = 0x6F<32>
l0000348E:
	Mem2313[dwArg04 + 24<i32>:word32] = Mem2271[dwArg04 + 24<i32>:word32] | 1<32>
	v212_2315 = Mem2313[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2316[dwArg04 + 20<i32>:word32] = v212_2315
	branch v212_2315 < 0<32> l000034C0
l000034C0:
	d0_2328 = fn00003CE0(dwArg04, out a5_6013)
	dwLoc44_4266 = d0_2328
l000034A0:
	a0_2341 = Mem2316[dwArg04 + 4<i32>:word32]
	Mem2346[dwArg04 + 4<i32>:word32] = a0_2341 + 1<32>
	v214_2350 = Mem2346[a0_2341:byte]
	d0_2328 = SEQ(SLICE(d0, word24, 8), v214_2350)
	dwLoc44_4266 = CONVERT(v214_2350, uint8, uint32)
l000034CE:
	d0_2391 = CONVERT(Mem2371[0x000028C5<p32> + (SEQ(SLICE(d0_2328, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_2391 & 0x44<32>
	branch (d0_2391 & 0x44<32>) == 0<32> l000034FA
l000034F4:
	branch d6_1174 <u d3_2273 + 1<32> l000034FA
l000034F8:
	d7 = 0x78<32>
l000034FA:
	branch dwLoc44_4266 == 0xFFFFFFFF<32> l00003510
l00003504:
	d0 = fn00002C0C(SLICE(dwLoc44_4266, byte, 0), dwArg04)
l00003510:
l00003518:
	branch dwLoc44_4258 == 0xFFFFFFFF<32> l0000352E
l00003522:
	d0 = fn00002C0C(SLICE(dwLoc44_4258, byte, 0), dwArg04)
l0000352E:
l00003572:
	d4_2586 = d4_132
	d3_2499 = d3_1918
	branch SLICE(d7, byte, 0) != 0x78<8> l000036A6
l0000357A:
	branch d5_1086 != 0x30<32> l000036A6
l00003584:
	branch d6_1174 <u d3_1918 l000036A6
l0000358A:
	Mem2510[dwArg04 + 24<i32>:word32] = Mem2507[dwArg04 + 24<i32>:word32] | 1<32>
	v267_2512 = Mem2510[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2513[dwArg04 + 20<i32>:word32] = v267_2512
	branch v267_2512 < 0<32> l000035BC
l000035BC:
	d0_2527 = fn00003CE0(dwArg04, out a5_6016)
	dwLoc44_4286 = d0_2527
l0000359C:
	a0_2540 = Mem2513[dwArg04 + 4<i32>:word32]
	Mem2545[dwArg04 + 4<i32>:word32] = a0_2540 + 1<32>
	v269_2549 = Mem2545[a0_2540:byte]
	d0_2527 = SEQ(SLICE(d0, word24, 8), v269_2549)
	dwLoc44_4286 = CONVERT(v269_2549, uint8, uint32)
l000035CA:
	bLoc41_4292 = SLICE(dwLoc44_4286, byte, 0) (alias)
	d0_2593 = SEQ(SLICE(d0_2527, word24, 8), bLoc41_4292)
	d3_2584 = d3_1918 + 1<32>
	d4_2588 = d4_132 + 1<32>
	d0 = d0_2593 & 0xFF<32>
	branch __btst<byte>(Mem2582[0x000028C5<p32> + CONVERT(SLICE(d0_2593, int16, 0) & 255<i16>, int16, int32):byte], 0<16>) l000035F0
l000035EC:
	d0 = CONVERT(bLoc41_4292 | 0x20<8>, uint8, uint32)
l000035F0:
	branch d0 != 0x78<32> l0000368C
l000035FA:
	branch d6_1174 <u d3_2584 l0000368C
l00003600:
	Mem2621[dwArg04 + 24<i32>:word32] = Mem2582[dwArg04 + 24<i32>:word32] | 1<32>
	v282_2623 = Mem2621[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2624[dwArg04 + 20<i32>:word32] = v282_2623
	branch v282_2623 < 0<32> l00003632
l00003632:
	d0_2636 = fn00003CE0(dwArg04, out a5_6017)
	dwLoc44_4294 = d0_2636
l00003612:
	a0_2649 = Mem2624[dwArg04 + 4<i32>:word32]
	Mem2654[dwArg04 + 4<i32>:word32] = a0_2649 + 1<32>
	v284_2658 = Mem2654[a0_2649:byte]
	d0_2636 = SEQ(SLICE(d0, word24, 8), v284_2658)
	dwLoc44_4294 = CONVERT(v284_2658, uint8, uint32)
l00003640:
	d0_2696 = CONVERT(Mem2679[0x000028C5<p32> + (SEQ(SLICE(d0_2636, word24, 8), SLICE(dwLoc44_4294, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d3_2499 = d3_2584 + 1<32>
	d4_2586 = d4_2588 + 1<32>
	d0 = d0_2696 & 0x44<32>
	branch (d0_2696 & 0x44<32>) == 0<32> l00003672
l00003668:
	branch d6_1174 <u d3_2584 + 1<32> l00003672
l00003672:
	branch dwLoc44_4294 == 0xFFFFFFFF<32> l00003688
l0000367C:
	d0 = fn00002C0C(SLICE(dwLoc44_4294, byte, 0), dwArg04)
l00003688:
l0000368C:
	branch dwLoc44_4286 == 0xFFFFFFFF<32> l000036A2
l00003696:
	d0 = fn00002C0C(SLICE(dwLoc44_4286, byte, 0), dwArg04)
l000036A2:
	d3_2499 = d3_2584 - 1<32>
	d4_2586 = d4_2588 - 1<32>
l0000366C:
	d5_1086 = dwLoc44_4294
l000036A6:
	branch SLICE(d7, byte, 0) == 0x78<8> l000036B2
l000036AC:
	branch SLICE(d7, byte, 0) != 0x58<8> l000036BC
l000036BC:
	branch SLICE(d7, byte, 0) != 0x6F<8> l000036CC
l000036CC:
	dwLoc44_4313 = 0xA<32>
l000036C2:
	dwLoc44_4313 = 8<32>
l000036D4:
	dwLoc38_4316 = dwLoc44_4313
l000036B2:
	dwLoc38_4316 = 0x10<32>
l000036DA:
	d0_2843 = CONVERT(Mem2814[0x000028C5<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_2843 & 0x44<32>
	dwLoc44_4321 = d4_2586
	bLoc2E_4322 = SLICE(d7, byte, 0)
	branch (d0_2843 & 0x44<32>) == 0<32> l00003942
l0000370C:
	branch dwLoc38_4316 != 0xA<32> l00003742
l00003716:
	d0_2899 = CONVERT(Mem2882[0x000028C5<p32> + (CONVERT(SLICE(d5_1086, byte, 0), uint8, uint32) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_2899 & 4<32>
	dwLoc44_4321 = d4_2586
	bLoc2E_4322 = SLICE(d7, byte, 0)
	branch (d0_2899 & 4<32>) == 0<32> l00003942
l00003742:
	branch dwLoc38_4316 != 8<32> l00003762
l0000374C:
	dwLoc44_4321 = d4_2586
	bLoc2E_4322 = SLICE(d7, byte, 0)
	branch d5_1086 > 0x37<32> l00003942
l00003762:
	dwLoc44_4321 = d4_2586
	bLoc2E_4322 = SLICE(d7, byte, 0)
	branch d6_1174 <u d3_2499 l00003942
l00003778:
	d7 = dwLoc38_4316
l00003780:
	d0_2992 = fn00003C60(d4_2586, dwLoc38_4316 >> 0x1F<32>, dwLoc38_4316, dwLoc4C_4247, dwLoc48_4246, out d1_2993)
	branch (CONVERT(Mem3004[0x000028C5<p32> + (SEQ(SLICE(dwLoc38_4316 >> 0x1F<32>, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32) & 4<32>) == 0<32> l000037E0
l000037E0:
	d4_2586 = 0<32>
l000037D6:
	d4_2586 = d5_1086 - 0x30<32>
l000037E2:
	d0_3040 = d4_2586 >> 0x1F<32>
	d2_d2_4041 = SEQ(d0_2992, d4_2586) + SEQ(d0_3040, d1_2993)
	d2_3047 = SLICE(d2_d2_4041, word32, 0) (alias)
	d2_3057 = SLICE(d2_d2_4041, word32, 32) (alias)
	branch (CONVERT(Mem3059[0x000028C5<p32> + (SEQ(SLICE(d0_3040, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32) & 1<32>) == 0<32> l00003832
l00003832:
	d6_3082 = 0<32>
l00003828:
	d6_3082 = d5_1086 - 0x37<32>
l00003834:
	d0_3097 = d6_3082 >> 0x1F<32>
	d2_d2_4043 = SEQ(d2_3057, d6_3082) + SEQ(d0_3097, d2_3047)
	d2_3104 = SLICE(d2_d2_4043, word32, 0) (alias)
	d2_3113 = SLICE(d2_d2_4043, word32, 32) (alias)
	branch (CONVERT(Mem3115[0x000028C5<p32> + (SEQ(SLICE(d0_3097, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32) & 2<32>) == 0<32> l00003884
l00003884:
	d2_3138 = 0<32>
l0000387A:
	d2_3138 = d5_1086 - 0x57<32>
l00003886:
	Mem3183[dwArg04 + 24<i32>:word32] = Mem3169[dwArg04 + 24<i32>:word32] | 1<32>
	v343_3185 = Mem3183[dwArg04 + 20<i32>:word32] - 1<32>
	Mem3186[dwArg04 + 20<i32>:word32] = v343_3185
	d2_d2_4045 = SEQ(d2_3113, d2_3138) + SEQ(d2_3138 >> 0x1F<32>, d2_3104)
	dwLoc48_4246 = SLICE(d2_d2_4045, word32, 0)
	dwLoc4C_4247 = SLICE(d2_d2_4045, word32, 32)
	branch v343_3185 < 0<32> l000038D8
l000038D8:
	d0_3197 = fn00003CE0(dwArg04, out a5_6018)
	d1 = d0_3197
l000038C0:
	a0_3210 = Mem3186[dwArg04 + 4<i32>:word32]
	Mem3215[dwArg04 + 4<i32>:word32] = a0_3210 + 1<32>
	v345_3219 = Mem3215[a0_3210:byte]
	d0_3197 = CONVERT(v345_3219, uint8, uint32)
	d1 = CONVERT(v345_3219, uint8, uint32)
l000038E4:
	d0_3248 = CONVERT(Mem3236[0x000028C5<p32> + (SEQ(SLICE(d0_3197, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d5_1086 = d1
	d3_2499 = d3_6021 + 1<32>
	dwLoc44_4321 = dwLoc44_4321 + 1<32>
	d0 = d0_3248 & 0x44<32>
	branch (d0_3248 & 0x44<32>) == 0<32> l00003942
l00003908:
	branch dwLoc38_4316 != 0xA<32> l0000392C
l00003910:
	d0_3270 = CONVERT(Mem3236[0x000028C5<p32> + (CONVERT(SLICE(d1, byte, 0), uint8, uint32) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_3270 & 4<32>
	branch (d0_3270 & 4<32>) == 0<32> l00003942
l0000392C:
	branch dwLoc38_4316 != 8<32> l0000393C
l00003934:
	branch d1 > 0x37<32> l00003942
l0000393C:
	d3_6021 = d3_2499
	branch d6_1174 >=u d3_6021 + 1<32> l00003780
l00003942:
	d7 = SEQ(SLICE(d7, word24, 8), bLoc2E_4322)
	d4_3307 = dwLoc44_4321
	branch dwLoc0A_4248 == 0<32> l00003976
l00003954:
	branch d3_2499 != 2<32> l00003976
l0000395C:
	branch d5_1086 == 0xFFFFFFFF<32> l0000396E
l00003964:
	d0 = fn00002C0C(SLICE(d5_1086, byte, 0), dwArg04)
l0000396E:
	d3_2499 = d3_2499 - 1<32>
	d4_3307 = dwLoc44_4321 - 1<32>
	d5_1086 = dwLoc0A_4248
l00003976:
	branch d5_1086 == 0xFFFFFFFF<32> l00003988
l0000397E:
	d0 = fn00002C0C(SLICE(d5_1086, byte, 0), dwArg04)
l00003988:
	d3_130 = d3_2499 - 1<32>
	d4_132 = d4_3307 - 1<32>
	branch bLoc2F_4076 != 0<8> l00003B36
l00003994:
	branch d3_130 == 0<32> l00003B36
l0000399A:
	branch bLoc2E_4322 != 0x75<8> l00003A5C
l00003A5C:
	branch dwLoc0A_4248 != 0x2D<32> l00003A78
l00003A78:
	dwLoc40 = dwLoc48_4246
	dwLoc44_4321 = dwLoc4C_4247
l00003A66:
	d1 = -dwLoc48_4246
	Mem3427[dwLoc44_4321:word32] = -dwLoc4C_4247 - CONVERT(d1 <u 0<32>, bool, word32)
	Mem3429[dwLoc44_4321 + 4<i32>:word32] = d1
l00003A84:
	bLoc4C_4600 = bLoc30_4075 - 1<8>
	branch bLoc4C_4600 == 0<8> l00003AAE
l00003AAE:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	a0_3471 = Mem3451[d0:word32]
	Mem3473[a0_3471 + 4<i32>:word32] = dwLoc40
	Mem3475[a0_3471:word32] = dwLoc44_4321
	d2_1002 = d0 + 4<32>
l00003A98:
	branch bLoc4C_4600 == 1<8> l00003B00
l00003B00:
	d0_3486 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3494[Mem3480[d0_3486:word32]:byte] = SLICE(dwLoc40, byte, 0)
	d2_1002 = d0_3486 + 4<32>
	d0 = dwLoc40
l00003A9E:
	branch bLoc4C_4600 == 0x67<8> l00003AE6
l00003AE6:
	d0_3505 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3513[Mem3499[d0_3505:word32]:word16] = SLICE(dwLoc40, word16, 0)
	d2_1002 = d0_3505 + 4<32>
	d0 = dwLoc40
l00003AA6:
	branch bLoc4C_4600 == 0x6B<8> l00003ACC
l00003ACC:
	d0_3524 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3531[Mem3518[d0_3524:word32]:word32] = dwLoc40
	d2_1002 = d0_3524 + 4<32>
	d0 = dwLoc40
l00003AAC:
l00003B1A:
	d0_3538 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3545[Mem3518[d0_3538:word32]:word32] = dwLoc40
	d2_1002 = d0_3538 + 4<32>
	d0 = dwLoc40
l000039A2:
	bLoc44_4662 = bLoc30_4075 - 1<8>
	branch bLoc44_4662 == 0<8> l000039CC
l000039CC:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	a0_3575 = Mem3559[d0:word32]
	Mem3577[a0_3575 + 4<i32>:word32] = dwLoc48_4246
	Mem3579[a0_3575:word32] = dwLoc4C_4247
	d2_1002 = d0 + 4<32>
l000039B6:
	branch bLoc44_4662 == 1<8> l00003A24
l00003A24:
	d0_3590 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3598[Mem3584[d0_3590:word32]:byte] = SLICE(dwLoc48_4246, byte, 0)
	d2_1002 = d0_3590 + 4<32>
	d0 = dwLoc48_4246
l000039BC:
	branch bLoc44_4662 == 0x67<8> l00003A08
l00003A08:
	d0_3609 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3617[Mem3603[d0_3609:word32]:word16] = SLICE(dwLoc48_4246, word16, 0)
	d2_1002 = d0_3609 + 4<32>
	d0 = dwLoc48_4246
l000039C4:
	branch bLoc44_4662 == 0x6B<8> l000039EC
l000039EC:
	d0_3628 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3635[Mem3622[d0_3628:word32]:word32] = dwLoc48_4246
	d2_1002 = d0_3628 + 4<32>
	d0 = dwLoc48_4246
l000039CA:
l00003A40:
	d0_3642 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3649[Mem3622[d0_3642:word32]:word32] = dwLoc48_4246
	d2_1002 = d0_3642 + 4<32>
	d0 = dwLoc48_4246
l00003B32:
	dwLoc3C_4060 = dwLoc3C_4060 + 1<32>
l00003B36:
	a4_280 = a3_2025
l00003C34:
	branch d3_130 == 0<32> l00003C3E
l00003C38:
	branch Mem3739[a4_280:byte] != 0<8> l00002C5E
l00003C3E:
	branch d5_1086 != 0xFFFFFFFF<32> l00003C50
l00003C46:
	branch dwLoc3C_4060 != 0<32> l00003C50
l00003C50:
	d0_3780 = dwLoc3C_4060
l00003C4C:
	d0_3780 = d5_1086
l00003C54:
	return d0_3780
fn00002C3C_exit:


word32 fn00003C60(word32 d4, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 & d1Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002C3C
// MayUse:  d4:[16..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: d0:[0..31]-fn00002C3C d1:[0..31]-fn00002C3C
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
fn00003C60_entry:
l00003C60:
	d0_23 = __swap(dwArg08)
	d1_25 = __swap(dwArg10)
	d4_29 = SEQ(SLICE(d4, word16, 16), SLICE(dwArg08, word16, 0)) *u32 SLICE(dwArg10, word16, 0)
	d1_32 = d1_25 *u32 SLICE(d0_23, word16, 0)
	d2_39 = dwArg08 *u32 SLICE(d1_25, word16, 0) + __swap(SEQ(SLICE(d4_29, word16, 16), SLICE(d4_29, word16, 0) ^ SLICE(d4_29, word16, 0))) + dwArg10 *u32 SLICE(d0_23, word16, 0)
	branch d2_39 >=u 0<32> l00003C94
l00003C8E:
	d1_32 = d1_32 + 0x10000<32>
l00003C94:
	d2_45 = __swap(d2_39)
	d3_65 = __swap(dwArg0C) *u32 SLICE(dwArg08, word16, 0)
	d3_71 = __swap(SEQ(SLICE(d3_65, word16, 16), SLICE(d3_65, word16, 0) + SLICE(__swap(dwArg08), word16, 0) *u SLICE(dwArg0C, word16, 0)))
	d3_83 = __swap(dwArg04) *u32 SLICE(dwArg10, word16, 0)
	d3_89 = __swap(SEQ(SLICE(d3_83, word16, 16), SLICE(d3_83, word16, 0) + SLICE(__swap(dwArg10), word16, 0) *u SLICE(dwArg04, word16, 0)))
	d1Out = SEQ(SLICE(d2_45, word16, 16), SLICE(d4_29, word16, 0))
	return CONVERT(SLICE(d2_45, word16, 0), uint16, uint32) + d1_32 + (dwArg0C *u32 SLICE(dwArg08, word16, 0) + SEQ(SLICE(d3_71, word16, 16), SLICE(d3_71, word16, 0) ^ SLICE(d3_71, word16, 0))) + (dwArg04 *u32 SLICE(dwArg10, word16, 0) + SEQ(SLICE(d3_89, word16, 16), SLICE(d3_89, word16, 0) ^ SLICE(d3_89, word16, 0)))
fn00003C60_exit:


word32 fn00003CE0(word32 dwArg04, word32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002C3C
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5:[0..31]-fn00002C3C d0:[0..31]-fn00002C3C
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a4 a6 a7 d2 d3 d4 d5
fn00003CE0_entry:
l00003CE0:
	a5_295 = fn00002530()
	branch dwArg04 != 0<32> l00003CF8
l00003CF8:
	branch (Mem26[dwArg04 + 24<i32>:word32] & 0x2A<32>) == 0x20<32> l00003D0A
l00003D0A:
	Mem51[dwArg04 + 24<i32>:word32] = Mem26[dwArg04 + 24<i32>:word32] | 1<32>
	branch (Mem51[dwArg04 + 24<i32>:word32] & 0x200<32>) == 0<32> l00003D22
l00003D1C:
	a5_295 = fn00003DDC()
l00003D22:
	branch Mem51[dwArg04 + 28<i32>:word32] != 0<32> l00003D40
l00003D28:
	branch (Mem51[dwArg04 + 24<i32>:word32] & 4<32>) == 0<32> l00003D38
l00003D38:
	Mem80[dwArg04 + 28<i32>:word32] = 0x400<32>
l00003D30:
	Mem85[dwArg04 + 28<i32>:word32] = 1<32>
l00003D40:
	branch Mem90[dwArg04 + 8<i32>:word32] != 0<32> l00003D7C
l00003D46:
	branch (Mem90[dwArg04 + 24<i32>:word32] & 0x80<32>) == 0<32> l00003D5A
l00003D5A:
	d4_102 = 1<32>
l00003D56:
	d4_102 = 2<32>
l00003D5C:
	d0_126 = fn0000215C(d4_102 + Mem90[dwArg04 + 28<i32>:word32], out a0_324)
	branch d0_126 != 0<32> l00003D74
l00003D74:
	Mem141[dwArg04 + 8<i32>:word32] = d0_126 + 1<i32>
l00003D7C:
	Mem149[dwArg04 + 4<i32>:word32] = Mem147[dwArg04 + 8<i32>:word32]
	d0_154 = execPrivate2()
	Mem156[dwArg04 + 20<i32>:word32] = d0_154
	v24_157 = Mem156[dwArg04 + 20<i32>:word32] - 1<32>
	Mem158[dwArg04 + 20<i32>:word32] = v24_157
	branch v24_157 >= 0<32> l00003DC2
l00003DC2:
	a0_162 = Mem158[dwArg04 + 4<i32>:word32]
	Mem165[dwArg04 + 4<i32>:word32] = a0_162 + 1<32>
	d0_169 = SEQ(SLICE(d0_154, word24, 8), Mem165[a0_162:byte]) & 0xFF<32>
l00003DA0:
	branch Mem158[dwArg04 + 20<i32>:word32] != 0xFFFFFFFF<32> l00003DB2
l00003DB2:
	Mem180[dwArg04 + 24<i32>:word32] = Mem158[dwArg04 + 24<i32>:word32] | 0x10<32>
l00003DA8:
	Mem187[dwArg04 + 24<i32>:word32] = Mem158[dwArg04 + 24<i32>:word32] | 8<32>
l00003DBA:
	Mem192[dwArg04 + 20<i32>:word32] = 0<32>
	d0_169 = 0xFFFFFFFF<32>
l00003D70:
	d0_169 = 0xFFFFFFFF<32>
l00003D04:
	d0_169 = 0xFFFFFFFF<32>
l00003CF2:
	d0_169 = 0xFFFFFFFF<32>
l00003DD6:
	a5Out = a5_295
	return d0_169
fn00003CE0_exit:


word32 fn00003DDC()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003CE0
// MayUse: 
// LiveOut: a5:[0..31]-fn00003CE0
// Trashed: CVZN a0 a1 a4 a5 d0 d1
// Preserved: X a2 a7
fn00003DDC_entry:
l00003DDC:
	a2_13 = Mem5[0x00003F88<p32>:word32]
	branch a2_13 == 0<32> l00003E14
l00003DEA:
	branch (Mem14[a2_13 + 24<i32>:word32] & 0x202<32>) != 0x202<32> l00003E0A
l00003DFC:
	branch Mem14[a2_13:word32] == 0<32> l00003E0A
l00003E00:
	fn000020B0(a2_13, out a0_90, out a5)
l00003E0A:
	a2_13 = Mem43[a2_13 + 12<i32>:word32]
	branch a2_13 != 0<32> l00003DEA
l00003E14:
	return a5
fn00003DDC_exit:


