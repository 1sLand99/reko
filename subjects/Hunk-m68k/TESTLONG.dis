void fn00001000(word32 d0, word32 d7, word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0 d7 a0 a5
// LiveOut:
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: d7 a5 a7
fn00001000_entry:
// DataOut: d0 d7 a0 a5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00001000:
	word32 a7_1 = fp
// DataOut: d0 d7 a0 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l0000100A:
	word32 a6_171 = Mem0[0x00000004:word32]
	word32 d2_3 = d0
	word32 a2_5 = a0
	word32 a4_6 = 0x0000BD66
	word16 v10_9 = Mem0[a6_171 + 20:word16] - 0x0024
	branch v10_9 >=u 0x0000 l00001036
// DataOut: d0 d2 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00001020:
	word32 a0_629 = 0x00003D70
	word32 d0_632 = 0x0000000C
// DataOut: d0 d2 d7 a0 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d0 a2:a0 a4:0000BD66 a6:<invalid>
// LocalsOut: fp(32)

l00001030:
	Mem636[a0_629:word32] = 0x00000000
	a0_629 = a0_629 + 0x00000004
	d0_632 = d0_632 - 0x00000001
	branch d0_632 != 0x00000000 l00001030
// DataOut: d0 d2 d7 a0 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d0 a2:a0 a4:0000BD66 a6:<invalid> a0:<invalid> d0:<invalid>
// LocalsOut: fp(32)

l00001036:
	Mem13[a4_6 + -32758:word32] = fp
	Mem15[a4_6 + -32754:word32] = a6_171
	call a6_171 + -294 (retsize: 4; depth: 4)
	word32 a3_143 = d0
	word32 a1_96 = 0x000012BC
	call a6_171 + -552 (retsize: 4; depth: 4)
	branch 0 == 0 l00001226
// DataOut: d2 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d0 a2:a0 a4:0000BD66 a6:<invalid> a0:<invalid> d0:<invalid>
// LocalsOut: fp(32)

l00001056:
	word32 d4_194
	word32 d2_195
	Mem190[a4_6 + -32750:word32] = 0
	d2_195 = d2_3
	branch Mem190[d0 + 172:word32] != 0x00000000 l00001066
// DataOut: d2 d7 a1 a2 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d0 a2:a0 a4:0000BD66 a6:<invalid> a1:000012BC a3:<invalid> d0:0 a0:<invalid>
// LocalsOut: fp(32)

l00001060:
	d4_194 = 2
	d2_195 = 8
// DataOut: d2 d4 d7 a1 a2 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d0 a2:a0 a4:0000BD66 a6:<invalid> a1:000012BC a3:<invalid> d0:<invalid> a0:<invalid>
// LocalsOut: fp(32)

l00001066:
	word32 a0_603 = a0
	d4_194 = 3
// DataOut: d2 d4 d7 a0 a1 a2 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid> a2:a0 a4:0000BD66 a6:<invalid> a1:000012BC a3:<invalid> d0:<invalid> d4:2 a0:<invalid>
// LocalsOut: fp(32)

l0000106A:
	branch Mem190[a0_641:byte] - 0x20 != 0x00 l00001072
// DataOut: d2 d4 d7 a0 a1 a2 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid> a2:a0 a4:0000BD66 a6:<invalid> a1:000012BC a3:<invalid> d0:<invalid> d4:<invalid> a0:<invalid>
// LocalsOut: fp(32)

l00001070:
	d4_194 = DPB(0x00000003, (word16) d4_194 + 0x0001, 0, 16)
// DataOut: d2 d4 d7 a0 a1 a2 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid> a2:a0 a4:0000BD66 a6:<invalid> a1:000012BC a3:<invalid> d0:<invalid> d4:<invalid> a0:<invalid>
// LocalsOut: fp(32)

l00001072:
	a0_603 = a0_641 + 0x00000001
	word32 a0_641 = a0_603
	branch Mem190[a0_641:byte] != 0x00 l0000106A
// DataOut: d2 d4 d7 a0 a1 a2 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid> a2:a0 a4:0000BD66 a6:<invalid> a1:000012BC a3:<invalid> d0:<invalid> d4:<invalid> a0:<invalid>
// LocalsOut: fp(32)

l00001076:
	call a6_171 + -198 (retsize: 4; depth: 4)
	branch (d4_194 << 0x00000002) + d2_195 == 0x00000011 l0000123E
	call a6_171 + -198 (retsize: 4; depth: 4)
	word32 d0_208 = d4_194 << 0x00000002
	word32 d0_210 = d0_208 + d2_195
	branch d0_210 == 0x00000011 l0000123E
// DataOut: d0 d2 d3 d4 d5 d7 a1 a2 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid> a2:a0 a4:0000BD66 a6:<invalid> a1:000012BC a3:<invalid> d0:<invalid> d4:<invalid> a0:<invalid>
// LocalsOut: fp(32)

l0000123E:
	call a6_171 + -414 (retsize: 4; depth: 4)
	word32 a6_595 = Mem190[0x00000004:word32]
	call a6_595 + -108 (retsize: 4; depth: 16)
// DataOut: a3
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid> a2:a0 a4:0000BD66 a6:<invalid> a1:000012BC a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:0x00010001 a0:<invalid>

l00001096:
	word32 a1_265
	word32 a6_272
	word32 a4_268
	word32 a3_264
	word32 d1_260
	word32 a0_269
	Mem225[d0_210 + 0x00000011:word32] = d0_210 + 0x00000011
	word32 d4_226 = d4_194 - 0x00000001
	Mem228[d0_210 + 29:word32] = d4_226
	Mem232[d0_210 + 25:word32] = d0_210 + 33 + d0_208
	Mem234[0x00000000:word32] = 0x00000000
	word32 d0_235 = Mem234[d0 + 172:word32]
	branch d0_235 == 0x00000000 l00001190
	Mem243[d0_235:word32] = d0_210 + 0x00000011
	Mem247[d0_235 + 12:word32] = d4_226 - 0x00000001
	Mem251[d0_235 + 8:word32] = d0_235 + 16 + d0_208
	Mem253[0x00000000:word32] = 0x00000000
	word32 a5_241 = d0_235
	a7_1 = fp - 0x00000010
	word32 d0_254 = Mem253[d0 + 172:word32]
	a3_264 = a3_143
	a1_265 = a1_96
	a4_268 = a4_6
	branch d0_254 == 0x00000000 l00001190
// DataOut: d0 d2 d7 a1 a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid> a2:a0 a4:0000BD66 a6:<invalid> a1:000012BC a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:0x00010001 a0:<invalid>
// LocalsOut: fp(32) Local -0004(32)

l000010B6:
	word32 d0_400 = Mem253[(d0_254 << 0x00000002) + 16:word32]
	byte v32_406 = Mem253[d0_400 << 0x00000002:byte]
	word32 a0_407 = (d0_400 << 0x00000002) + 0x00000001
	word32 d0_408 = (word32) v32_406
	Mem409[a0_407 + d0_408:byte] = 0x00
	Mem411[d0_235 + 16:word32] = a0_407
	word32 d0_415 = Mem411[(d0_408 << 0x00000002) + 16:word32]
	byte v60_422 = Mem411[d0_415 << 0x00000002:byte]
	a1_265 = Mem411[d0_235 + 8:word32]
	word32 a0_423 = (d0_415 << 0x00000002) + 0x00000001
	word32 d0_424 = (word32) v60_422
	Mem425[a0_423 + d0_424:byte] = 0x00
	Mem427[d0_235 + 16:word32] = a0_423
	word32 a6_428 = d0_235 + 20
	word32 d3_429 = 1
	word32 a0_431 = a0 + d2_195
// DataOut: d0 d2 d3 d7 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:a0 a4:0000BD66 a6:<invalid> a1:000012BC a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:0x00010001 a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l000010DA:
	a0_431 = a0_431 - 0x00000001
	branch d2_195 != 0xFFFFFFFF l000010DA
// DataOut: d0 d2 d3 d7 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:a0 a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:1 d1:0x00010001 a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l000010E2:
	Mem437[a0_431 + 1:byte] = 0x00
	a2_450 = a2_5
// DataOut: d0 d3 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:a0 a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:1 d1:0x00010001 a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l000010E6:
	word32 a2_450
	byte v37_451 = Mem437[a2_450:byte]
	a2_450 = a2_450 + 0x00000001
	d1_260 = DPB(0x00010001, v37_451, 0, 8)
	branch v37_451 == 0x00 l00001148
// DataOut: d0 d1 d3 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l000010EA:
	branch (byte) d1_260 - 0x20 == 0x00 l000010E6
// DataOut: d0 d1 d3 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l000010F0:
	branch (byte) d1_260 - 0x09 == 0x00 l000010E6
// DataOut: d0 d1 d3 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l000010F6:
	branch d3_429 - Mem437[d0_235 + 12:word32] == 0x00000000 l00001148
// DataOut: d0 d1 d3 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l000010FC:
	word32 d1_512
	Mem504[a6_428:word32] = a1_265
	a6_428 = a6_428 + 0x00000004
	d3_429 = DPB(0x00000001, (word16) d3_429 + 0x0001, 0, 16)
	d1_512 = d1_260
	branch (byte) d1_260 - 0x22 == 0x00 l0000111A
// DataOut: d0 d1 d3 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l00001106:
	Mem568[a1_265:byte] = (byte) d1_260
	a1_265 = a1_265 + 0x00000001
	d1_512 = d1_260
// DataOut: d0 d1 d3 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l00001108:
	byte v45_574 = Mem568[a2_450:byte]
	a2_450 = a2_450 + 0x00000001
	d1_512 = DPB(d1_512, v45_574, 0, 8)
	branch v45_574 == 0x00 l00001148
// DataOut: d0 d1 d3 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l0000110C:
	branch (byte) d1_512 - 0x20 == 0x00 l00001116
// DataOut: d0 d1 d3 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l00001112:
	Mem583[a1_265:byte] = (byte) d1_512
	a1_265 = a1_265 + 0x00000001
// DataOut: d0 d1 d3 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l00001116:
	Mem561[a1_265:byte] = 0x00
	a1_265 = a1_265 + 0x00000001
// DataOut: d0 d1 d3 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l0000111A:
	byte v70_519 = Mem504[a2_450:byte]
	a2_450 = a2_450 + 0x00000001
	d1_512 = DPB(d1_512, v70_519, 0, 8)
	branch v70_519 == 0x00 l00001148
// DataOut: d0 d1 d3 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l0000111E:
	branch (byte) d1_512 - 0x22 == 0x00 l00001116
// DataOut: d0 d1 d3 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l00001124:
	branch (byte) d1_512 - 0x2A != 0x00 l00001144
// DataOut: d0 d1 d3 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l0000112A:
	d1_512 = DPB(d1_512, Mem504[a2_450:byte], 0, 8)
	word32 d2_542 = DPB(0x00000007, (byte) d1_512, 0, 8)
	word32 d2_544 = DPB(d2_542, (byte) d2_542 & 0xDF, 0, 8)
	a2_450 = a2_450 + 0x00000001
	branch (byte) d2_544 - 0x4E != 0x00 l0000113C
// DataOut: d0 d1 d2 d3 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l00001138:
	d1_512 = 10
// DataOut: d0 d1 d2 d3 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l0000113C:
	branch (byte) d2_544 - 0x45 != 0x00 l00001144
// DataOut: d0 d1 d3 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l00001142:
	d1_512 = 27
// DataOut: d0 d1 d3 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l00001144:
	Mem535[a1_265:byte] = (byte) d1_512
	a1_265 = a1_265 + 0x00000001
// DataOut: d0 d1 d3 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l00001148:
	Mem459[a1_265:byte] = 0x00
	Mem460[a6_428:word32] = 0x00000000
	a7_1 = fp - 0x00000018
	word32 a6_467 = Mem460[a4_6 + -32750:word32]
	call a6_467 + -54 (retsize: 4; depth: 28)
	Mem469[a4_6 + -32738:word32] = d0_424
	call a6_467 + -60 (retsize: 4; depth: 28)
	Mem472[a4_6 + -32734:word32] = d0_424
	a6_272 = Mem472[a4_6 + -32754:word32]
	branch Mem472[a6_272 + 20:word16] - 0x0024 <u 0x0000 l0000117A
// DataOut: d0 d1 d7 a1 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l00001172:
	word32 v87_490 = Mem472[d0 + 224:word32]
	Mem491[a4_6 + -32730:word32] = v87_490
	branch v87_490 != 0x00000000 l0000117E
// DataOut: d0 d1 d7 a1 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l0000117A:
	Mem488[a4_6 + -32730:word32] = d0_424
// DataOut: d1 d7 a1 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l0000117E:
	a3_264 = a3_143
	a4_268 = a4_6
	branch Mem472[d0 + 8:byte] - 0x0D != 0x00 l000011F8
// DataOut: d1 d7 a1 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l00001186:
	word32 a0_480 = Mem472[d0 + 176:word32]
	word32 v90_481 = Mem472[a0_480:word32]
	d0_254 = v90_481
	a0_269 = a0_480 + 0x00000004 - v90_481
	a3_264 = a3_143
	a4_268 = a4_6
	a3_264 = a3_143
	a4_268 = a4_6
// DataOut: d0 d1 d7 a0 a1 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l00001190:
	fn00001214(a3_264)
	Mem344[a7_1:word32] = d0_254
	Mem346[a4_268 + -32746:word32] = d0_254
	Mem348[a4_268 + -32742:word32] = d0_254
	word32 a7_349 = a7_1 - 0x00000004
	Mem351[a7_349:word32] = d0_254
	Mem353[0x00000000:word32] = 0x00000000
	a7_1 = a7_349 - 0x00000004
	word32 a6_354 = Mem353[a4_268 + -32750:word32]
	word32 d0_356 = Mem353[d0_254 + 36:word32]
	branch d0_356 == 0x00000000 l000011B6
// DataOut: d0 d7 a1 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000011AE:
	call a6_354 + -126 (retsize: 4; depth: 4)
// DataOut: d0 d7 a1 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000011B6:
	word32 a0_359 = 0x000012C8
	d1_260 = a0_359
	call a6_354 + -30 (retsize: 4; depth: 4)
	Mem364[a5_241 + 4:word32] = d0_356
	branch d0_356 != 0x00000000 l000011D2
// DataOut: d0 d1 d7 a1 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000011CC:
// DataOut: d0 d1 d2 d7 a1 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:0x000003ED a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:000012C8 a5:<invalid> a0:000012C8 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000011CC_thunk_fn0000127C:
	word32 a1_391
	word32 a5_392
	word32 a6_393
	fn0000127C(20, out a1_391, out a5_392, out a6_393)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:20 a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:000012C8 a5:<invalid> a0:000012C8 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>

l000011D2:
	Mem369[a4_268 + -32738:word32] = d0_356
	Mem371[a4_268 + -32734:word32] = d0_356
	Mem373[a4_268 + -32730:word32] = d0_356
	Mem375[a3_264 + 156:word32] = d0_356
	Mem377[a3_264 + 160:word32] = d0_356
	word32 d0_381 = Mem377[(d0_356 << 0x00000002) + 8:word32]
	branch d0_381 == 0x00000000 l000011F4
// DataOut: d0 d1 d7 a1 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:000012C8 a5:<invalid> a0:000012C8 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000011F0:
	Mem387[a3_264 + 164:word32] = d0_381
// DataOut: d1 d7 a1 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:000012C8 a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000011F4:
	a6_272 = Mem377[a4_268 + -32754:word32]
// DataOut: d1 d7 a1 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:000012C8 a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000011F8:
	a0_269 = Mem253[a3_264 + 58:word32]
// DataOut: d1 d7 a0 a1 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l00001202:
	Mem281[a4_268 + -32718:word32] = a0_269
	Mem283[a4_268 + -32714:word32] = a7_1
	d7 = fn00001354(d1_260, d7, a1_265, a3_264, a5_241, a6_272, dwArg00, dwArg04, out a5, out a6_171)
// DataOut: d2 d7 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:0000BD66 a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>

l00001212_thunk_fn0000127C:
	word32 a1_292
	word32 a5_293
	word32 a6_294
	fn0000127C(0, out a1_292, out a5_293, out a6_294)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:0 a2:<invalid> a4:<invalid> a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> d6:<invalid> d7:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>

l00001226:
	word32 a7_173 = a7_1 - 0x00000004
	Mem174[a7_173:word32] = a6_171
	Mem176[a7_173 - 0x00000004:word32] = a5
	Mem178[a7_173 - 0x00000008:word32] = d7
	word32 a6_181 = Mem178[0x00000004:word32]
	call a6_181 + -108 (retsize: 4; depth: 4)
// DataOut: a3
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:<invalid> a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> d6:<invalid> d7:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>

l0000125C:
	branch Mem15[a3_143 + 172:word32] != 0x00000000 l00001268
// DataOut: a3
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:<invalid> a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d7:<invalid> a5:<invalid> a0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> d6:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):a5 -4(fp):<invalid>

l00001262:
	fn00001214(a3_143)
	fn0000126C()
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:<invalid> a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d7:<invalid> a5:<invalid> a0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> d6:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):a5 -4(fp):<invalid>

l00001268:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:<invalid> a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d7:<invalid> a5:<invalid> a0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> d6:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):a5 -4(fp):<invalid>

fn00001000_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:<invalid> a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d7:<invalid> a5:<invalid> a0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> d6:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):a5 -4(fp):<invalid>



void fn00001214(word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3
// LiveOut:
// Trashed: a0
// Preserved: a7
fn00001214_entry:
// DataOut: d0 d7 a1 a3 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001214:
	call a6 + -384 (retsize: 4; depth: 4)
	call a6 + -372 (retsize: 4; depth: 4)
	return
// DataOut: d0 d7 a1 a3 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp

fn00001214_exit:
// DataOut: d0 d7 a1 a3 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp a0:a3 + 92



void fn0000126C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a1
// Preserved: a7
fn0000126C_entry:
// DataOut: d1 d2 d5 d6 d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp

l0000126C:
	call a6 + -132 (retsize: 4; depth: 4)
	call a6 + -378 (retsize: 4; depth: 4)
	return
// DataOut: d1 d2 d5 d6 d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp

fn0000126C_exit:
// DataOut: d1 d2 d5 d6 d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp a1:a2



word32 fn00001278(word32 dwArg04, ptr32 a1Out, ptr32 a5Out, ptr32 a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d1 a1 a5 a6
// Trashed: CVZN d0 d1 d2 a1 a2 a4 a5 a6 a7
// Preserved: a7
// Stack args: Stack +0004(32)
fn00001278_entry:
// DataOut: d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Stack +0004(32)

l00001278:
// DataOut: d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001278_thunk_fn0000127C:
	word32 a1_5
	word32 a5_6
	word32 a6_7
	return fn0000127C(dwArg04, out a1_5, out a5_6, out a6_7)
// DataOut: d1 d5 d6 d7 a1 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid>

fn00001278_exit:
// DataOut: d1 d5 d6 d7 a1 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> a6:<invalid>



word32 fn0000127C(word32 d2, ptr32 a1Out, ptr32 a5Out, ptr32 a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d2
// LiveOut: d1 a1 a5 a6
// Trashed: CVZN d0 d1 a1 a2 a4 a5 a6 a7
// Preserved:
fn0000127C_entry:
// DataOut: d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l0000127C:
	word32 a4_0 = 0x0000BD66
	word32 a7_3 = Mem0[a4_0 + -32758:word32]
	word32 v7_8 = Mem0[a7_3 - 0x00000004:word32]
	word32 v5_5 = Mem0[a7_3 - 0x00000008:word32]
	word32 a5_10 = v7_8
	*a5Out = a5_10
	word32 d1_11 = Mem0[v7_8 + 4:word32]
	branch d1_11 == 0x00000000 l0000129E
// DataOut: d1 d2 d5 d6 d7 a2 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001296:
	word32 a6_32 = Mem0[a4_0 + -32750:word32]
	call a6_32 + -36 (retsize: 4; depth: 4)
// DataOut: d1 d2 d5 d6 d7 a2 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a4:0000BD66 a6:<invalid> a2:<invalid> a5:<invalid> d1:<invalid>

l0000129E:
	word32 a6_15 = Mem0[a4_0 + -32754:word32]
	*a6Out = a6_15
	call a6_15 + -414 (retsize: 4; depth: 4)
	branch v5_5 == 0x00000000 l000012B0
// DataOut: d1 d2 d5 d6 d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a4:0000BD66 a6:<invalid> a2:<invalid> a5:<invalid> d1:<invalid>

l000012AE:
	fn0000126C()
// DataOut: d1 d2 d5 d6 d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a4:0000BD66 a6:<invalid> a2:<invalid> a5:<invalid> d1:<invalid> a1:<invalid> d0:<invalid>

l000012B0:
	word32 a1_23 = v7_8
	*a1Out = a1_23
	call a6_15 + -210 (retsize: 4; depth: 4)
	return d1_11
// DataOut: d1 d5 d6 d7 a1 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a4:0000BD66 a6:<invalid> a2:<invalid> a5:<invalid> d1:<invalid> a1:<invalid> d0:<invalid>

fn0000127C_exit:
// DataOut: d1 d5 d6 d7 a1 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a4:0000BD66 a6:<invalid> a2:<invalid> a5:<invalid> d1:<invalid> a1:<invalid> d0:d2



word32 fn000012D0(word32 dwArg04, ptr32 a1Out, ptr32 a5Out, ptr32 a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d1 a1 a5 a6
// Trashed: CVZNX d0 d1 d2 a1 a2 a3 a4 a5 a6 a7
// Preserved: d2 a2 a3 a7
// Stack args: Stack +0004(32)
fn000012D0_entry:
// DataOut: d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l000012D0:
	word32 a3_11 = 0x00003EB8
	branch 0x00003EB8 == 0x00000000 l00001308
// DataOut: d5 d6 d7 a3
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l000012E2:
	word32 d2_46 = 1
	branch Mem0[a3_11 + 4:word32] == 0x00000000 l000012F6
// DataOut: d2 d5 d6 d7 a3
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:00003EB8 d0:0x00003EB8 -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Stack +0004(32)

l000012EA:
	d2_46 = d2_46 + 0x00000001
	branch Mem0[a3_11 + (d2_46 << 0x00000002):word32] != 0x00000000 l000012EA
// DataOut: d2 d5 d6 d7 a3
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:00003EB8 d0:<invalid> d2:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Stack +0004(32)

l000012F6:
	word32 d2_56 = d2_46 - 0x00000001
	branch d2_56 == 0x00000000 l00001308
// DataOut: d2 d5 d6 d7 a3
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:00003EB8 d0:<invalid> d2:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Stack +0004(32)

l000012FA:
	word32 d0_62 = d2_56 << 0x00000002
	word32 a2_64 = Mem0[a3_11 + d0_62:word32]
	call a2_64 (retsize: 4; depth: 16)
	d2_56 = d2_56 - 0x00000001
	branch d2_56 != 0x00000000 l000012FA
// DataOut: d2 d5 d6 d7 a3
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:00003EB8 d0:<invalid> d2:<invalid> a2:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Stack +0004(32)

l00001308:
	word32 a1_31
	word32 a5_32
	word32 a6_33
	return fn00001278(dwArg04, out a1_31, out a5_32, out a6_33)
// DataOut: d1 d5 d6 d7 a1 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:00003EB8 d0:<invalid> d2:<invalid> a2:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3

fn000012D0_exit:
// DataOut: d1 d5 d6 d7 a1 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d0:<invalid> d2:<invalid> a2:<invalid> d1:<invalid> a1:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -16(fp):<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3



word32 fn0000131C(word32 dwArg04, ptr32 a1Out, ptr32 a5Out, ptr32 a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d1 a1 a5 a6
// Trashed: CVZNX d0 d1 d2 a1 a2 a3 a4 a5 a6 a7
// Preserved: a2 a3 a7
// Stack args: Stack +0004(32)
fn0000131C_entry:
	*a1Out = a1
	*a5Out = a5
	*a6Out = a6
// DataOut: d1 d5 d6 d7 a1 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l0000131C:
	branch Mem0[0x00003DA0:word32] != 0x00000000 l0000134E
// DataOut: d1 d5 d6 d7 a1 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00001328:
	word32 a3_39 = Mem0[0x00003EC8:word32]
	Mem42[0x00003DA0:word32] = 1
	branch a3_39 == 0x00000000 l00001346
// DataOut: d5 d6 d7 a3
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Stack +0004(32)

l0000133A:
	word32 a2_65 = Mem42[a3_39 + 4:word32]
	call a2_65 (retsize: 4; depth: 12)
	a3_39 = Mem42[a3_39:word32]
	branch a3_39 != 0x00000000 l0000133A
// DataOut: d5 d6 d7 a3
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a3:<invalid> d0:<invalid> a2:<invalid> -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Stack +0004(32)

l00001346:
	word32 a1_59
	word32 a5_60
	word32 a6_61
	d1 = fn000012D0(dwArg04, out a1_59, out a5_60, out a6_61)
// DataOut: d1 d5 d6 d7 a1 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a3:<invalid> d0:<invalid> a2:<invalid> -8(fp):a2 -4(fp):a3

l0000134E:
	return d1
// DataOut: d1 d5 d6 d7 a1 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d0:<invalid> a2:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -12(fp):<invalid> -8(fp):a2 -4(fp):a3

fn0000131C_exit:
// DataOut: d1 d5 d6 d7 a1 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> a3:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -12(fp):<invalid> -8(fp):a2 -4(fp):a3



word32 fn00001354(word32 d1, word32 d7, word32 a1, word32 a3, word32 a5, word32 a6, word32 dwArg04, word32 dwArg08, ptr32 a5Out, ptr32 a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d1 d7 a1 a3 a5 a6
// LiveOut: d7 a5 a6
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: a2 a3 a7
// Stack args: Stack +0004(8)
fn00001354_entry:
// DataOut: d1 d7 a1 a3 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(8)

l00001354:
	word32 a3_63 = 0x00003EB0
	branch 0x00003EAC == 0x00000000 l00001372
// DataOut: d1 d7 a1 a3 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(8)

l00001366:
	branch Mem0[a3_63:word32] == 0x00000000 l00001372
// DataOut: d1 d7 a1 a3 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a3:00003EB0 d0:0x00003EAC -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Local -0004(32) Stack +0004(8)

l0000136A:
	word32 v11_64 = Mem0[a3_63:word32]
	a3_63 = a3_63 + 0x00000004
	call v11_64 (retsize: 4; depth: 12)
	branch Mem0[a3_63:word32] != 0x00000000 l0000136A
// DataOut: d1 d7 a1 a3 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a3:<invalid> d0:0x00003EAC a2:<invalid> -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Local -0004(32) Stack +0004(8)

l00001372:
	word32 d7_40
	Mem44[fp - 0x00000014:word32] = fn00001390(d1, d7, a1, a5, a6, out d7_40)
	word32 a1_47
	word32 a5_48
	word32 a6_49
	fn0000131C(dwArg00, out a1_47, out a5_48, out a6_49)
	return d7_40
// DataOut: d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a3:<invalid> d0:0x00003EAC a2:<invalid> -8(fp):a2 -4(fp):a3

fn00001354_exit:
// DataOut: d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> d3:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):a2 -4(fp):a3



word32 fn00001390(word32 d1, word32 d7, word32 a1, word32 a5, word32 a6, ptr32 d7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d1 d7 a1 a5 a6
// LiveOut: d0 d7
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: a7
fn00001390_entry:
// DataOut: d1 d7 a1 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00001390:
	word32 d1_15
	word32 d7_16
	word32 a1_17
	word32 a5_18
	word32 a6_19
	fn00002B40(d1, d7, a1, a5, a6, 0x000013E4, out d1_15, out d7_16, out a1_17, out a5_18, out a6_19)
	Mem24[fp - 0x00000014:word32] = fp - 8
	Mem27[fp - 0x00000018:word32] = 0x000013E8
	word32 d1_29
	word32 d7_30
	word32 a1_31
	word32 a5_32
	word32 a6_33
	fn00002B40(d1_15, d7_16, a1_17, a5_18, a6_19, dwArg00, out d1_29, out d7_30, out a1_31, out a5_32, out a6_33)
	Mem38[fp - 0x0000001C:word32] = fp - 4
	Mem42[fp - 0x00000020:word32] = fp - 8
	Mem45[fp - 0x00000024:word32] = 0x000013EC
	word32 d1_46
	word32 d7_47
	word32 a1_48
	word32 a5_49
	word32 a6_50
	word32 d0_51 = fn00002B40(d1_29, d7_30, a1_31, a5_32, a6_33, dwArg00, out d1_46, out d7_47, out a1_48, out a5_49, out a6_50)
	Mem55[fp - 0x00000028:word32] = Mem45[fp - 4:word32]
	Mem59[fp - 0x0000002C:word32] = Mem55[fp - 8:word32]
	Mem62[fp - 0x00000030:word32] = 0x000013F4
	word32 d7_63
	return fn000013FC(d0_51, a6_50, dwArg00, out d7_63)
// DataOut: d0 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

fn00001390_exit:
// DataOut: d0 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a0:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -48(fp):000013F4 -44(fp):<invalid> -40(fp):<invalid> -36(fp):000013EC -32(fp):fp - 8 -28(fp):fp - 4 -24(fp):000013E8 -20(fp):fp - 8 -16(fp):000013E4 -12(fp):fp - 4



word32 fn000013FC(word32 d0, word32 a6, word32 dwArg04, ptr32 d7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0 a6
// LiveOut: d0 d7
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: a7
// Stack args: Stack +0004(32)
fn000013FC_entry:
	*d7Out = d7
// DataOut: d0 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l000013FC:
	return fn00001418(d0, a6, Mem0[0x00003ED0:word32], dwArg04, fp + 8)
// DataOut: d0 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

fn000013FC_exit:
// DataOut: d0 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a0:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):fp + 8



word32 fn00001418(word32 d0, word32 a6, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0 a6
// LiveOut: d0
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn00001418_entry:
// DataOut: d0 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00001418:
	word32 a7_1006 = fp + -112
	word32 d3_1001 = dwArg0C
	word32 a5_147 = dwArg04
	word32 a4_146 = dwArg08
	word32 d6_1003 = 0
	branch Mem0[dwArg08:byte] == 0x00 l00001D5E
// DataOut: d0 d3 d6 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001434:
	branch Mem0[a4_146:byte] - 0x25 != 0x00 l00001D38
// DataOut: d0 d3 d6 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> d7:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000143C:
	Mem231[a7_1006 + 64:word32] = 0x00000000
	Mem233[a7_1006 + 72:word32] = 0x00000000
	Mem237[a7_1006 + 102:word32] = 0x00000000
	word32 d5_1010 = -1
	word32 d4_1002 = 105
	word32 a3_1007 = a7_1006 + 76
	word32 d7_1004 = 0
	word32 a2_1854 = a4_146 + 1
	word32 d2_1344 = Mem237[a7_1006 + 72:word32]
// DataOut: d0 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> d7:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000145A:
	word32 d1_1936 = 0
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000145C:
	word32 a7_263 = a7_1006 - 0x00000004
	Mem265[a7_263:word32] = d0
	d0 = Mem265[a7_263:word32]
	a7_1006 = a7_263 + 0x00000004
	branch (byte) DPB(0x00003EAC, Mem265[0x00001D70 + d1_1936:byte], 0, 8) - Mem265[a2_1854:byte] != 0x00 l00001480
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000146E:
	Mem2095[a7_263:word32] = d1_1936
	word32 d1_2097 = 1 << d1_1936
	d0 = d1_2097
	a7_1006 = a7_263 + 0x00000004
	d1_1936 = Mem2095[a7_263:word32]
	d2_1344 = d2_1344 | d1_2097
	a2_1854 = a2_1854 + 0x00000001
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:00001D70 d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001480:
	d1_1936 = d1_1936 + 0x00000001
	branch d1_1936 <u 0x00000005 l0000145C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:00001D70 d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000148A:
	branch d1_1936 - 0x00000005 <u 0x00000000 l0000145A
	branch d1_1936 - 0x00000005 <u 0x00000000 l0000145A
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:00001D70 d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001492:
	word32 d0_1890
	Mem288[a7_1006 + 72:word32] = d2_1344
	branch Mem288[a2_1854:byte] - 0x2A != 0x00 l000014D0
	Mem293[a7_1006 + 72:word32] = d2_1344
	branch Mem293[a2_1854:byte] - 0x2A != 0x00 l000014D0
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:00001D70 d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000149C:
	word32 d0_2040 = d3_1001 + 0x00000003 >>u 0x00000002 << 0x00000002
	word32 v36_2044 = Mem293[d0_2040:word32]
	Mem2045[a7_1006 + 44:word32] = v36_2044
	word32 a2_2036 = a2_1854 + 0x00000001
	branch v36_2044 >= 0x00000000 l000014C8
	word32 d0_2051 = d0_2040 + 0x00000007 >>u 0x00000002
	d3_1001 = (d0_2051 << 0x00000002) + 0x00000004
	word32 v44_2057 = Mem2045[d3_1001 + -4:word32]
	Mem2058[a7_1006 + 44:word32] = v44_2057
	a2_1854 = a2_2036 + 0x00000001
	d0_1890 = d0_2051 << 0x00000002
	branch v44_2057 >= 0x00000000 l000014C8
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:00001D70 d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000014B4:
	Mem2067[a7_1006 + 72:word32] = Mem2058[a7_1006 + 72:word32] | 0x00000004
	Mem2071[a7_1006 + 64:word32] = -Mem2067[a7_1006 + 44:word32]
	Mem2073[a7_1006 + 72:word32] = Mem2071[a7_1006 + 72:word32] | 0x00000004
	d0_1890 = -Mem2073[a7_1006 + 44:word32]
	Mem2078[a7_1006 + 64:word32] = d0_1890
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000014C8:
	Mem2064[a7_1006 + 64:word32] = Mem2058[a7_1006 + 44:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000014D0:
	word32 d0_1980 = (word32) Mem293[0x00002815 + (DPB(0x00000001, Mem293[a2_1854:byte], 0, 8) & 0x000000FF):byte]
	d0_1890 = d0_1980 & 0x00000004
	branch (d0_1980 & 0x00000004) == 0x00000000 l0000153C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000014EC:
	d2_1344 = Mem293[a7_1006 + 64:word32]
// DataOut: d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000014F0:
	word32 a7_1993 = a7_1006 - 0x00000004
	Mem1995[a7_1993:word32] = d3_1001
	word32 d1_2000 = __swap(10) *u (word16) d2_1344
	word32 d1_2006 = DPB(__swap(DPB(d1_2000, (word16) d1_2000 + (word16) (__swap(d2_1344) *u 0x000A), 0, 16)), 0x0000, 0, 16)
	word32 d0_2007 = (word16) d2_1344 *u 10 + d1_2006
	a2_1854 = a2_1854 + 0x00000001
	word32 d1_2015 = (int32) (int16) (int16) (int8) DPB(d1_2006, Mem1995[a2_1854:byte], 0, 8)
	word32 d0_2027 = (word32) Mem1995[0x00002815 + (DPB(d0_2007, Mem1995[a2_1854:byte], 0, 8) & 0x000000FF):byte]
	a7_1006 = a7_1993 + 0x00000004
	d3_1001 = Mem1995[a7_1993:word32]
	d1_1936 = d1_2015 - 0x00000030
	d2_1344 = d1_2015 - 0x00000030 + d0_2007
	d0_1890 = d0_2027 & 0x00000004
	branch (d0_2027 & 0x00000004) != 0x00000000 l000014F0
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001538:
	Mem2034[a7_1993 + 68:word32] = d2_1344
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000153C:
	branch Mem293[a2_1854:byte] - 0x2E != 0x00 l000015D0
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001544:
	a2_1854 = a2_1854 + 0x00000001
	branch Mem293[a2_1854:byte] - 0x2A != 0x00 l0000156A
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000154C:
	d0_1890 = d3_1001 + 0x00000003 >>u 0x00000002 << 0x00000002
	word32 v50_1962 = Mem293[d0_1890:word32]
	Mem1963[a7_1006 + 44:word32] = v50_1962
	a2_1854 = a2_1854 + 0x00000001
	d3_1001 = d0_1890 + 0x00000004
	branch v50_1962 < 0x00000000 l000015D0
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001564:
	d5_1010 = Mem1963[a7_1006 + 44:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000156A:
	word32 d0_1902 = (word32) Mem293[0x00002815 + (DPB(d0_1890, Mem293[a2_1854:byte], 0, 8) & 0x000000FF):byte]
	d5_1010 = 0
	d0_1890 = d0_1902 & 0x00000004
	branch (d0_1902 & 0x00000004) == 0x00000000 l000015D0
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001588:
	word32 a7_1913 = a7_1006 - 0x00000004
	Mem1915[a7_1913:word32] = d2_1344
	word32 d1_1920 = __swap(10) *u (word16) d5_1010
	word32 d1_1926 = DPB(__swap(DPB(d1_1920, (word16) d1_1920 + (word16) (__swap(d5_1010) *u 0x000A), 0, 16)), 0x0000, 0, 16)
	word32 d0_1927 = (word16) d5_1010 *u 10 + d1_1926
	a2_1854 = a2_1854 + 0x00000001
	word32 d1_1935 = (int32) (int16) (int16) (int8) DPB(d1_1926, Mem1915[a2_1854:byte], 0, 8)
	word32 d0_1947 = (word32) Mem1915[0x00002815 + (DPB(d0_1927, Mem1915[a2_1854:byte], 0, 8) & 0x000000FF):byte]
	a7_1006 = a7_1913 + 0x00000004
	d2_1344 = Mem1915[a7_1913:word32]
	d1_1936 = d1_1935 - 0x00000030
	d5_1010 = d1_1935 - 0x00000030 + d0_1927
	d0_1890 = d0_1947 & 0x00000004
	branch (d0_1947 & 0x00000004) != 0x00000000 l00001588
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000015D0:
	branch Mem293[a2_1854:byte] - 0x68 == 0x00 l000015F4
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000015D6:
	branch Mem293[a2_1854:byte] - 0x6C == 0x00 l000015F4
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000015DC:
	branch Mem293[a2_1854:byte] - 0x4C == 0x00 l000015F4
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000015E2:
	branch Mem293[a2_1854:byte] - 0x6A == 0x00 l000015F4
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000015E8:
	branch Mem293[a2_1854:byte] - 0x7A == 0x00 l000015F4
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000015EE:
	branch Mem293[a2_1854:byte] - 0x74 != 0x00 l000015FA
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000015F4:
	a2_1854 = a2_1854 + 0x00000001
	d4_1002 = (int32) (int16) (int16) (int8) DPB(0x00000069, Mem293[a2_1854:byte], 0, 8)
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000015FA:
	branch d4_1002 - 0x00000068 != 0x00000000 l0000160C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001602:
	branch Mem293[a2_1854:byte] - 0x68 != 0x00 l0000160C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001608:
	d4_1002 = 2
	a2_1854 = a2_1854 + 0x00000001
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000160C:
	branch d4_1002 - 0x0000006C != 0x00000000 l0000161E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001614:
	branch Mem293[a2_1854:byte] - 0x6C != 0x00 l0000161E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000161A:
	d4_1002 = 1
	a2_1854 = a2_1854 + 0x00000001
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000161E:
	branch d4_1002 - 0x0000006A != 0x00000000 l00001628
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001626:
	d4_1002 = 1
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001628:
	branch d4_1002 - 0x0000007A != 0x00000000 l00001632
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001630:
	d4_1002 = 108
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001632:
	branch d4_1002 - 0x00000074 != 0x00000000 l0000163C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000163A:
	d4_1002 = 105
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000163C:
	word32 d1_1017 = DPB(d1_1936 - 0x00000030, Mem293[a2_1854:byte], 0, 8)
	word32 a2_354 = a2_1854 + 0x00000001
	word32 d0_1032 = DPB(d0_1890, (byte) d1_1017, 0, 8)
	branch (byte) d1_1017 - 0x25 == 0x00 l00001AC4
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001648:
	branch (byte) d0_1032 - 0x58 == 0x00 l00001696
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000164E:
	branch (byte) d0_1032 - 0x63 == 0x00 l00001A44
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001656:
	branch (byte) d0_1032 - 0x64 == 0x00 l00001696
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000165C:
	branch (byte) d0_1032 - 0x69 == 0x00 l00001696
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001662:
	Mem1820[a7_1006 + 44:byte] = (byte) d0_1032
	branch (byte) d0_1032 - 0x6E == 0x00 l00001AD6
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000166E:
	branch (byte) DPB(d0_1890, (byte) DPB(d0_1890, Mem1820[a7_1006 + 44:byte], 0, 8) - 0x6F, 0, 8) - 0x01 <=u 0x00 l00001696
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000167C:
	word32 d0_1833 = DPB(d0_1890, Mem1820[a7_1006 + 44:byte], 0, 8)
	branch (byte) d0_1833 - 0x73 == 0x00 l00001A80
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001688:
	branch (byte) d0_1833 - 0x75 == 0x00 l00001696
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000168E:
	branch (byte) d0_1833 - 0x78 != 0x00 l00001B6E
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001696:
	branch (byte) d1_1017 - 0x70 != 0x00 l000016A8
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000169C:
	Mem1806[a7_1006 + 72:word32] = Mem293[a7_1006 + 72:word32] | 0x00000001
	d4_1002 = 108
	d1_1017 = 120
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000016A8:
	branch (byte) d1_1017 - 0x64 == 0x00 l000016B6
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000016AE:
	branch (byte) d1_1017 - 0x69 != 0x00 l00001800
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000016B6:
	word32 d0_1569
	branch d4_1002 - 0x00000001 != 0x00000000 l000016DC
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000016BE:
	d0_1569 = d3_1001 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1796[a7_1006 + 52:word32] = Mem293[d0_1569 + 4:word32]
	Mem1798[a7_1006 + 48:word32] = Mem1796[d0_1569:word32]
	d3_1001 = d0_1569 + 0x00000008
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000016DC:
	branch d4_1002 - 0x0000006C != 0x00000000 l00001708
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000016E4:
	word32 d0_1768 = d3_1001 + 0x00000003 >>u 0x00000002 << 0x00000002
	word32 d0_1772 = Mem293[d0_1768:word32]
	Mem1774[a7_1006 + 52:word32] = d0_1772
	word32 a7_1775 = a7_1006 - 0x00000004
	Mem1777[a7_1775:word32] = d1_1017
	Mem1782[a7_1775 + 52:word32] = d0_1772 >> 31
	d3_1001 = d0_1768 + 0x00000004
	d0_1569 = d0_1772 >> 31
	a7_1006 = a7_1775 + 0x00000004
	d1_1017 = Mem1782[a7_1775:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001708:
	word32 d0_1686 = d3_1001 + 0x00000003 >>u 0x00000002 << 0x00000002
	word32 d0_1690 = Mem293[d0_1686:word32]
	Mem1692[a7_1006 + 52:word32] = d0_1690
	word32 a7_1693 = a7_1006 - 0x00000004
	Mem1695[a7_1693:word32] = d1_1017
	Mem1700[a7_1693 + 52:word32] = d0_1690 >> 31
	word32 v213_1701 = Mem1700[a7_1693:word32]
	d3_1001 = d0_1686 + 0x00000004
	d0_1569 = d0_1690 >> 31
	a7_1006 = a7_1693 + 0x00000004
	d1_1017 = v213_1701
	branch d4_1002 - 0x00000068 != 0x00000000 l0000174E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001732:
	word32 d0_1741 = DPB(d0_1690 >> 31, Mem1700[a7_1693 + 58:word16], 0, 16)
	Mem1744[a7_1693:word32] = v213_1701
	word32 d1_1747 = (int32) (int16) DPB(v213_1701, (word16) d0_1741, 0, 16)
	Mem1749[a7_1693 + 56:word32] = d1_1747
	Mem1752[a7_1693 - 0x00000004:word32] = d0_1741
	Mem1757[a7_1693 + 52:word32] = d1_1747 >> 31
	d1_1017 = Mem1757[a7_1693 - 0x00000004:word32]
	a7_1006 = a7_1693 + 0x00000004
	d0_1569 = Mem1757[a7_1693:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000174E:
	branch d4_1002 - 0x00000002 != 0x00000000 l00001774
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001756:
	word32 d0_1715 = DPB(d0_1569, Mem1700[a7_1006 + 55:byte], 0, 8)
	word32 a7_1716 = a7_1006 - 0x00000004
	Mem1718[a7_1716:word32] = d1_1017
	word32 d1_1722 = (int32) (int16) (int16) (int8) DPB(d1_1017, (byte) d0_1715, 0, 8)
	Mem1724[a7_1716 + 56:word32] = d1_1722
	Mem1727[a7_1716 - 0x00000004:word32] = d0_1715
	Mem1732[a7_1716 + 52:word32] = d1_1722 >> 31
	d1_1017 = Mem1732[a7_1716 - 0x00000004:word32]
	a7_1006 = a7_1716 + 0x00000004
	d0_1569 = Mem1732[a7_1716:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001774:
	Mem1574[a7_1006 + 44:byte] = (byte) d1_1017
	word32 a7_1575 = a7_1006 - 0x00000004
	Mem1577[a7_1575:word32] = d0_1569
	Mem1580[a7_1575 - 0x00000004:word32] = d1_1017
	word32 d0_1581 = Mem1580[a7_1575 + 56:word32]
	word32 d1_1582 = Mem1580[a7_1575 + 52:word32]
	Mem1585[a7_1575 - 0x00000008:word32] = d2_1344
	d2_1344 = Mem1585[a7_1575 - 0x00000008:word32]
	d1_1017 = Mem1585[a7_1575 - 0x00000004:word32]
	a7_1006 = a7_1575 + 0x00000004
	branch d1_1582 - (d0_1581 <u 0x00000000) >= 0x00000000 l000017BE
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000179E:
	Mem1657[a7_1575 + 110:byte] = 0x2D
	d7_1004 = 0x00000001
	d1_1017 = -Mem1657[a7_1575 + 56:word32]
	a7_1006 = Mem1657[a7_1575 + 64:word32]
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000017BE:
	d1_1017 = DPB(d1_1017, Mem1585[a7_1006 + 44:byte], 0, 8)
	branch (Mem1585[a7_1006 + 72:word32] & 16) == 0x00000000 l000017D8
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000017CA:
	Mem1651[a7_1006 + 106 + d7_1004:byte] = 0x2B
	d7_1004 = d7_1004 + 0x00000001
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000017D8:
	branch (Mem1585[a7_1006 + 72:word32] & 8) == 0x00000000 l000017EC
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000017E0:
	Mem1644[a7_1006 + 106 + d7_1004:byte] = 0x20
	d7_1004 = d7_1004 + 0x00000001
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000017EC:
	Mem1623[a7_1006 + 60:word32] = Mem1585[a7_1006 + 52:word32]
	Mem1625[a7_1006 + 56:word32] = Mem1623[a7_1006 + 48:word32]
	Mem1627[a7_1006 + 44:byte] = (byte) d1_1017
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001800:
	word32 d0_1357
	branch d4_1002 - 0x00000001 != 0x00000000 l00001824
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001808:
	d0_1357 = d3_1001 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1559[a7_1006 + 60:word32] = Mem293[d0_1357 + 4:word32]
	Mem1561[a7_1006 + 56:word32] = Mem1559[d0_1357:word32]
	d3_1001 = d0_1357 + 0x00000008
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001824:
	branch d4_1002 - 0x0000006C != 0x00000000 l00001846
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000182C:
	d0_1357 = d3_1001 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1544[a7_1006 + 60:word32] = Mem293[d0_1357:word32]
	Mem1545[a7_1006 + 56:word32] = 0x00000000
	d3_1001 = d0_1357 + 0x00000004
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001846:
	d0_1357 = d3_1001 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1529[a7_1006 + 60:word32] = Mem293[d0_1357:word32]
	Mem1530[a7_1006 + 56:word32] = 0x00000000
	d3_1001 = d0_1357 + 0x00000004
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000185E:
	branch d4_1002 - 0x00000068 != 0x00000000 l0000187A
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001866:
	d0_1357 = DPB(d0_1357, Mem293[a7_1006 + 62:word16], 0, 16)
	word32 a7_1499 = a7_1006 - 0x00000004
	Mem1501[a7_1499:word32] = d1_1017
	Mem1506[a7_1499 + 64:word32] = (word32) (word16) d0_1357
	Mem1507[a7_1499 + 60:word32] = 0x00000000
	a7_1006 = a7_1499 + 0x00000004
	d1_1017 = Mem1507[a7_1499:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000187A:
	branch d4_1002 - 0x00000002 != 0x00000000 l00001896
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001882:
	word32 d0_1483 = DPB(d0_1357, Mem293[a7_1006 + 63:byte], 0, 8)
	word32 a7_1484 = a7_1006 - 0x00000004
	Mem1486[a7_1484:word32] = d1_1017
	Mem1491[a7_1484 + 64:word32] = (word32) (byte) d0_1483
	Mem1492[a7_1484 + 60:word32] = 0x00000000
	a7_1006 = a7_1484 + 0x00000004
	d1_1017 = Mem1492[a7_1484:word32]
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001896:
	word32 d0_1372 = Mem293[a7_1006 + 72:word32] & 1
	Mem1374[a7_1006 + 44:byte] = (byte) d1_1017
	branch d0_1372 == 0x00000000 l00001934
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000018A6:
	branch (byte) d1_1017 - 0x6F != 0x00 l000018E2
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000018AC:
	branch d5_1010 != 0x00000000 l000018D6
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000018B0:
	word32 a7_1458 = a7_1006 - 0x00000004
	Mem1460[a7_1458:word32] = d0_1372
	Mem1463[a7_1458 - 0x00000004:word32] = d1_1017
	word32 d0_1464 = Mem1463[a7_1458 + 64:word32]
	word32 d1_1465 = Mem1463[a7_1458 + 60:word32]
	Mem1468[a7_1458 - 0x00000008:word32] = d2_1344
	d2_1344 = Mem1468[a7_1458 - 0x00000008:word32]
	d1_1017 = Mem1468[a7_1458 - 0x00000004:word32]
	d0_1372 = Mem1468[a7_1458:word32]
	a7_1006 = a7_1458 + 0x00000004
	branch d1_1465 - (d0_1464 <u 0x00000000) == 0x00000000 l000018E2
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000018D6:
	Mem1456[a7_1006 + 106 + d7_1004:byte] = 0x30
	d7_1004 = d7_1004 + 0x00000001
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000018E2:
	branch (byte) d1_1017 - 0x78 == 0x00 l000018F2
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000018E8:
	Mem1437[a7_1006 + 44:byte] = (byte) d1_1017
	branch (byte) d1_1017 - 0x58 != 0x00 l00001934
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000018F2:
	Mem1398[a7_1006 + 44:byte] = (byte) d1_1017
	word32 a7_1399 = a7_1006 - 0x00000004
	Mem1401[a7_1399:word32] = d0_1372
	Mem1404[a7_1399 - 0x00000004:word32] = d1_1017
	word32 d0_1405 = Mem1404[a7_1399 + 64:word32]
	word32 d1_1406 = Mem1404[a7_1399 + 60:word32]
	Mem1409[a7_1399 - 0x00000008:word32] = d2_1344
	d1_1017 = Mem1409[a7_1399 - 0x00000004:word32]
	a7_1006 = a7_1399 + 0x00000004
	branch d1_1406 - (d0_1405 <u 0x00000000) == 0x00000000 l00001934
// DataOut: d1 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000191C:
	Mem1427[a7_1399 + 110 + d7_1004:byte] = 0x30
	word32 d7_1425 = d7_1004 + 0x00000001
	Mem1432[a7_1399 + 110 + d7_1425:byte] = (byte) d1_1017
	Mem1434[a7_1399 + 48:byte] = (byte) d1_1017
	d7_1004 = d7_1425 + 0x00000001
// DataOut: d1 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001934:
	word32 d1_1179 = DPB(d1_1017, Mem293[a7_1006 + 44:byte], 0, 8)
	a3_1007 = a7_1006 + 98
	branch (byte) d1_1179 - 0x78 == 0x00 l00001948
// DataOut: d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001942:
	branch (byte) d1_1179 - 0x58 != 0x00 l00001952
// DataOut: d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001948:
	Mem1330[a7_1006 + 44:word32] = 0x00000010
// DataOut: d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001952:
	branch (byte) d1_1179 - 0x6F != 0x00 l00001962
// DataOut: d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001958:
	Mem1326[a7_1006 + 48:word32] = 0x00000008
// DataOut: d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001962:
	Mem1323[a7_1006 + 48:word32] = 0x0000000A
// DataOut: d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000196A:
	Mem1320[a7_1006 + 44:word32] = Mem293[a7_1006 + 48:word32]
// DataOut: d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001970:
	Mem1185[a7_1006 + 108:word32] = Mem293[a7_1006 + 44:word32]
	branch (byte) d1_1179 - 0x58 == 0x00 l00001982
// DataOut: d3 d4 d5 d6 d7 a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000197C:
	a6 = 0x00001D78
// DataOut: d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001982:
	a6 = 0x00001D88
// DataOut: d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001986:
	Mem1191[a7_1006 + 44:word32] = a6
	Mem1193[a7_1006 + 124:word32] = d3_1001
	Mem1195[a7_1006 + 68:word32] = d5_1010
	Mem1197[a7_1006 + 48:word32] = d6_1003
	Mem1199[a7_1006 + 98:word32] = d7_1004
	word32 v169_1200 = a7_1006 + 56
	word32 d6_1201 = Mem1199[v169_1200:word32]
	word32 d7_1203 = Mem1199[v169_1200 + 0x00000004:word32]
	word32 d3_1205 = Mem1199[a7_1006 + 102:word32]
	word32 a1_1207 = Mem1199[a7_1006 + 44:word32]
// DataOut: d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000019A8:
	word32 d1_1216 = Mem1199[a7_1006 + 108:word32]
	word32 a7_1221 = a7_1006 - 0x00000004
	Mem1223[a7_1221:word32] = d1_1216 >> 31
	Mem1226[a7_1221 - 0x00000004:word32] = d1_1216
	Mem1229[a7_1221 - 0x00000008:word32] = a1_1207
	Mem1232[a7_1221 - 0x0000000C:word32] = d1_1216
	Mem1234[a7_1221 - 0x00000010:word32] = d1_1216 >> 31
	Mem1236[a7_1221 - 0x00000014:word32] = d7_1203
	Mem1238[a7_1221 - 0x00000018:word32] = d6_1201
	word32 d1_1239
	word32 d0_1240 = fn00002700(d4_1002, d5_1010, d6_1201, a1_1207, dwArg00, dwArg04, dwArg08, dwArg0C, out d1_1239)
	word32 v173_1242 = Mem1238[a7_1221 - 8:word32]
	word32 d1_1247 = Mem1238[a7_1221 - 4:word32]
	word32 d0_1249 = Mem1238[a7_1221:word32]
	a3_1007 = a3_1007 - 0x00000001
	Mem1255[a3_1007:byte] = Mem1238[v173_1242 + d1_1239:byte]
	Mem1258[a7_1221:word32] = d0_1249
	Mem1261[a7_1221 - 0x00000004:word32] = d1_1247
	Mem1264[a7_1221 - 0x00000008:word32] = v173_1242
	Mem1267[a7_1221 - 0x0000000C:word32] = d1_1247
	Mem1269[a7_1221 - 0x00000010:word32] = d0_1249
	Mem1271[a7_1221 - 0x00000014:word32] = d7_1203
	Mem1273[a7_1221 - 0x00000018:word32] = d6_1201
	word32 d1_1274
	word32 d0_1275 = fn000023B8(d0_1240, d1_1239, d6_1201, v173_1242, dwArg00, dwArg04, dwArg08, dwArg0C, out d1_1274)
	d4_1002 = d0_1240
	d5_1010 = d1_1239
	a1_1207 = Mem1273[a7_1221 - 8:word32]
	d6_1201 = d0_1275
	d7_1203 = d1_1274
	a7_1006 = a7_1221 + 0x00000004
	d3_1205 = d3_1205 + 0x00000001
	d0_1032 = d1_1274
	d1_1017 = d0_1275 - (d1_1274 <u 0x00000000)
	branch d1_1017 != 0x00000000 l000019A8
// DataOut: d0 d1 d3 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001A16:
	Mem1297[a7_1221 + 106:word32] = d3_1205
	d7_1004 = Mem1297[a7_1221 + 102:word32]
	d6_1003 = Mem1297[a7_1221 + 52:word32]
	d5_1010 = Mem1297[a7_1221 + 72:word32]
	d3_1001 = Mem1297[a7_1221 + 128:word32]
	branch d5_1010 != 0xFFFFFFFF l00001A38
// DataOut: d0 d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:0 d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001A32:
	d5_1010 = 0
// DataOut: d0 d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:0 d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001A38:
	Mem1308[a7_1221 + 76:word32] = Mem1297[a7_1221 + 76:word32] & 0xFFFFFFFD
// DataOut: d0 d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:0 d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001A44:
	branch d4_1002 - 0x0000006C != 0x00000000 l00001A60
// DataOut: d1 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001A4C:
	d0_1032 = d3_1001 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1146[a3_1007:byte] = Mem293[d0_1032 + 3:byte]
	d3_1001 = d0_1032 + 0x00000004
// DataOut: d0 d1 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001A60:
	d0_1032 = d3_1001 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1135[a3_1007:byte] = Mem293[d0_1032 + 3:byte]
	d3_1001 = d0_1032 + 0x00000004
// DataOut: d0 d1 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001A72:
	Mem1122[a7_1006 + 102:word32] = 0x00000001
	d5_1010 = 0
// DataOut: d0 d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001A80:
	d0_1032 = d3_1001 + 0x00000003 >>u 0x00000002 << 0x00000002
	a3_1007 = Mem293[d0_1032:word32]
	Mem1039[a7_1006 + 102:word32] = 0x00000000
	d3_1001 = d0_1032 + 0x00000004
	word32 a1_1038 = a3_1007
	branch d5_1010 == 0x00000000 l00001AA2
// DataOut: d0 d1 d3 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001A9C:
	branch d5_1010 - Mem1039[a7_1006 + 102:word32] <=u 0x00000000 l00001ABE
// DataOut: d0 d1 d3 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001AA2:
	branch Mem1039[a3_1007:byte] == 0x00 l00001ABE
// DataOut: d0 d1 d3 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001AA6:
	d0_1032 = Mem1039[a7_1006 + 102:word32]
// DataOut: d0 d1 d3 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001AAA:
	d0_1032 = d0_1032 + 0x00000001
	a1_1038 = a1_1038 + 0x00000001
	branch false l00001AB6
// DataOut: d0 d1 d3 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001AB2:
	branch d5_1010 - d0_1032 <=u 0x00000000 l00001ABA
// DataOut: d0 d1 d3 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001AB6:
	branch Mem1039[a1_1038:byte] != 0x00 l00001AAA
// DataOut: d0 d1 d3 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001ABA:
	Mem1079[a7_1006 + 102:word32] = d0_1032
// DataOut: d0 d1 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001ABE:
	d5_1010 = 0
// DataOut: d0 d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001AC4:
	Mem1009[a7_1006 + 102:word32] = 0x00000001
	a3_1007 = 0x00001D6C
	d5_1010 = 0
// DataOut: d0 d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001AD6:
	branch d4_1002 - 0x00000001 != 0x00000000 l00001AF8
// DataOut: d1 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001ADE:
	d0_1032 = d3_1001 + 0x00000003 >>u 0x00000002 << 0x00000002
	word32 a0_979 = Mem293[d0_1032:word32]
	Mem981[a0_979 + 4:word32] = d6_1003
	Mem982[a0_979:word32] = 0x00000000
	d3_1001 = d0_1032 + 0x00000004
// DataOut: d0 d1 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001AF8:
	branch d4_1002 - 0x0000006C != 0x00000000 l00001B16
// DataOut: d1 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B00:
	d0_1032 = d3_1001 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem969[Mem293[d0_1032:word32]:word32] = d6_1003
	d3_1001 = d0_1032 + 0x00000004
// DataOut: d0 d1 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B16:
	branch d4_1002 - 0x00000068 != 0x00000000 l00001B34
// DataOut: d1 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B1E:
	d0_1032 = d3_1001 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem957[Mem293[d0_1032:word32]:word16] = (word16) d6_1003
	d3_1001 = d0_1032 + 0x00000004
// DataOut: d0 d1 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B34:
	branch d4_1002 - 0x00000002 != 0x00000000 l00001B52
// DataOut: d1 d3 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B3C:
	d0_1032 = d3_1001 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem945[Mem293[d0_1032:word32]:byte] = (byte) d6_1003
	d3_1001 = d0_1032 + 0x00000004
// DataOut: d0 d1 d3 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B52:
	d0_1032 = d3_1001 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem933[Mem293[d0_1032:word32]:word32] = d6_1003
	d3_1001 = d0_1032 + 0x00000004
// DataOut: d0 d1 d3 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B66:
	Mem893[a7_1006 + 64:word32] = 0x00000000
	d5_1010 = 0
// DataOut: d0 d1 d3 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B6E:
	branch (byte) d1_1017 != 0x00 l00001B74
// DataOut: d3 d6 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B72:
	a2_354 = a2_354 - 0x00000001
// DataOut: d3 d6 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B74:
	d0_1032 = a2_354 - a4_146
	Mem855[a7_1006 + 102:word32] = d0_1032
	Mem857[a7_1006 + 64:word32] = 0x00000000
	a3_1007 = a4_146
	d5_1010 = 0
// DataOut: d0 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B84:
	branch d5_1010 - Mem293[a7_1006 + 102:word32] >u 0x00000000 l00001B92
// DataOut: d0 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B8A:
	Mem824[a7_1006 + 44:word32] = Mem293[a7_1006 + 102:word32]
// DataOut: d0 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B92:
	Mem821[a7_1006 + 44:word32] = d5_1010
// DataOut: d0 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B96:
	word32 a7_387 = a7_1006 - 0x00000004
	Mem389[a7_387:word32] = d0_1032
	Mem394[a7_387 + 52:word32] = Mem389[a7_387 + 48:word32] + d7_1004
	Mem400[a7_387:word32] = Mem394[a7_387:word32]
	word32 d0_405 = Mem400[a7_387:word32]
	a7_1006 = a7_387 + 0x00000004
	branch Mem400[a7_387 + 52:word32] - Mem400[a7_387 + 68:word32] <u 0x00000000 l00001BBA
// DataOut: d0 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001BB4:
	Mem815[a7_387 + 48:word32] = 0x00000000
// DataOut: d0 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001BBA:
	Mem805[a7_387:word32] = d0_405
	Mem810[a7_387 + 48:word32] = Mem805[a7_387 + 68:word32] - Mem805[a7_387 + 52:word32]
	a7_1006 = a7_387 + 0x00000004
// DataOut: d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001BCA:
	Mem412[a7_1006 + 48:word32] = Mem400[a7_1006 + 44:word32]
	d0 = Mem412[a7_1006 + 72:word32] & 2
	branch d0 == 0x00000000 l00001C0C
// DataOut: d0 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001BD8:
	word32 d2_753 = 0
	branch d7_1004 == 0x00000000 l00001C0C
// DataOut: d0 d2 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001BDE:
	word32 a7_765 = a7_1006 - 0x00000004
	Mem767[a7_765:word32] = a5_147
	Mem776[a7_765 - 0x00000004:word32] = (int32) (int16) (int16) (int8) DPB(d0, Mem767[a7_765 + 110 + d2_753:byte], 0, 8)
	word32 d4_779
	word32 d6_781
	word32 a4_782
	d0 = fn00001D98(a6, dwArg00, dwArg04, out d3_1001, out d4_779, out d5_1010, out d6_781, out a4_782, out a5_147, out a6)
	a7_1006 = a7_765 + 0x00000004
	branch d0 != 0xFFFFFFFF l00001C04
// DataOut: d0 d2 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001BFE:
	d0 = d6_781
// DataOut: d0 d2 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C04:
	d2_753 = d2_753 + 0x00000001
	d6_1003 = d6_781 + 0x00000001
	branch d7_1004 - d2_753 >u 0x00000000 l00001BDE
// DataOut: d0 d2 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C0C:
	branch (Mem412[a7_1006 + 72:word32] & 4) != 0x00000000 l00001C5E
// DataOut: d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C14:
	word32 d2_690 = 0
	branch Mem412[a7_1006 + 48:word32] == 0x00000000 l00001C5E
// DataOut: d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C1C:
	word32 d4_695 = Mem412[a7_1006 + 72:word32]
// DataOut: d4 d7 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:0 d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C24:
	word32 a0_720
	word32 a7_711 = a7_1006 - 0x00000004
	Mem713[a7_711:word32] = a5_147
	branch (d4_695 & 2) == 0x00000000 l00001C32
// DataOut: d7 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C2C:
	a0_720 = DPB(a7_711 + -6, 0x0030, 0, 16)
// DataOut: d7 a0 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C32:
	a0_720 = DPB(a7_711 + -6, 0x0020, 0, 16)
// DataOut: d7 a0 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C36:
	Mem723[a7_711 - 0x00000004:word32] = a0_720
	a7_1006 = a7_711 + 0x00000004
	word32 d6_728
	word32 a4_729
	branch fn00001D98(a6, dwArg00, dwArg04, out d3_1001, out d4_695, out d5_1010, out d6_728, out a4_729, out a5_147, out a6) != 0xFFFFFFFF l00001C4E
// DataOut: d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C48:
	d0 = d6_728
// DataOut: d0 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C4E:
	d2_690 = d2_690 + 0x00000001
	d6_1003 = d6_728 + 0x00000001
	branch a4_729 - d2_690 >u 0x00000000 l00001C24
// DataOut: d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C56:
	Mem745[a7_711 + 52:word32] = a4_729
	Mem747[a7_711 + 76:word32] = d4_695
// DataOut: d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C5E:
	d0 = Mem412[a7_1006 + 72:word32] & 2
	branch d0 != 0x00000000 l00001C9A
// DataOut: d0 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C66:
	word32 d2_644 = 0
	branch d7_1004 == 0x00000000 l00001C9A
// DataOut: d0 d2 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C6C:
	word32 a7_656 = a7_1006 - 0x00000004
	Mem658[a7_656:word32] = a5_147
	Mem667[a7_656 - 0x00000004:word32] = (int32) (int16) (int16) (int8) DPB(d0, Mem658[a7_656 + 110 + d2_644:byte], 0, 8)
	word32 d4_670
	word32 d6_672
	word32 a4_673
	d0 = fn00001D98(a6, dwArg00, dwArg04, out d3_1001, out d4_670, out d5_1010, out d6_672, out a4_673, out a5_147, out a6)
	a7_1006 = a7_656 + 0x00000004
	branch d0 != 0xFFFFFFFF l00001C92
// DataOut: d0 d2 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C8C:
	d0 = d6_672
// DataOut: d0 d2 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C92:
	d2_644 = d2_644 + 0x00000001
	d6_1003 = d6_672 + 0x00000001
	branch d7_1004 - d2_644 >u 0x00000000 l00001C6C
// DataOut: d0 d2 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C9A:
	word32 d2_473 = Mem412[a7_1006 + 102:word32]
	branch d5_1010 - Mem412[a7_1006 + 102:word32] <=u 0x00000000 l00001CC8
// DataOut: d0 d3 d6 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001CA4:
	word32 a7_617 = a7_1006 - 0x00000004
	Mem619[a7_617:word32] = a5_147
	Mem622[a7_617 - 0x00000004:word32] = 0x00000030
	word32 d4_624
	word32 d5_625
	word32 d6_626
	word32 a4_627
	d0 = fn00001D98(a6, dwArg00, dwArg04, out d3_1001, out d4_624, out d5_625, out d6_626, out a4_627, out a5_147, out a6)
	a7_1006 = a7_617 + 0x00000004
	branch d0 != 0xFFFFFFFF l00001CC0
// DataOut: d0 d2 d3 d5 d6 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001CBA:
	d0 = d6_626
// DataOut: d0 d2 d3 d5 d6 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001CC0:
	d2_473 = d2_473 + 0x00000001
	d6_1003 = d6_626 + 0x00000001
	branch d5_625 - d2_473 >u 0x00000000 l00001CA4
// DataOut: d0 d3 d6 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001CC8:
	word32 d2_489 = 0
	branch Mem412[a7_1006 + 102:word32] == 0x00000000 l00001CFE
// DataOut: d0 d2 d3 d6 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001CD0:
// DataOut: d0 d2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:0 d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001CD4:
	word32 a7_578 = a7_1006 - 0x00000004
	Mem580[a7_578:word32] = a5_147
	Mem588[a7_578 - 0x00000004:word32] = (int32) (int16) (int16) (int8) DPB(d0, Mem580[a3_1007 + d2_489:byte], 0, 8)
	word32 d4_591
	word32 d5_592
	word32 d6_593
	word32 a4_594
	d0 = fn00001D98(a6, dwArg00, dwArg04, out d3_1001, out d4_591, out d5_592, out d6_593, out a4_594, out a5_147, out a6)
	a7_1006 = a7_578 + 0x00000004
	branch d0 != 0xFFFFFFFF l00001CF6
// DataOut: d0 d2 d3 d6 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001CF2:
	d0 = d6_593
// DataOut: d0 d2 d3 d6 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001CF6:
	d2_489 = d2_489 + 0x00000001
	d6_1003 = d6_593 + 0x00000001
	branch a4_594 - d2_489 >u 0x00000000 l00001CD4
// DataOut: d0 d2 d3 d6 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001CFE:
	d0 = Mem412[a7_1006 + 72:word32] & 4
	branch d0 == 0x00000000 l00001D34
// DataOut: d0 d3 d6 a2 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D06:
	word32 d2_531 = 0
	branch Mem412[a7_1006 + 48:word32] == 0x00000000 l00001D34
// DataOut: d0 d3 d6 a2 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D0E:
	word32 a3_536 = Mem412[a7_1006 + 48:word32]
// DataOut: a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:0 d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D12:
	word32 a7_543 = a7_1006 - 0x00000004
	Mem545[a7_543:word32] = a5_147
	Mem548[a7_543 - 0x00000004:word32] = 0x00000020
	word32 d4_550
	word32 d5_551
	word32 d6_552
	word32 a4_553
	d0 = fn00001D98(a6, dwArg00, dwArg04, out d3_1001, out d4_550, out d5_551, out d6_552, out a4_553, out a5_147, out a6)
	a7_1006 = a7_543 + 0x00000004
	branch d0 != 0xFFFFFFFF l00001D2C
// DataOut: d0 d2 d3 d6 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D28:
	d0 = d6_552
// DataOut: d0 d2 d3 d6 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D2C:
	d2_531 = d2_531 + 0x00000001
	d6_1003 = d6_552 + 0x00000001
	branch a3_536 - d2_531 >u 0x00000000 l00001D12
// DataOut: d0 d3 d6 a2 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D34:
	a4_146 = a2_354
// DataOut: d0 d3 d6 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D38:
	word32 a7_200 = a7_1006 - 0x00000004
	Mem202[a7_200:word32] = a5_147
	Mem210[a7_200 - 0x00000004:word32] = (int32) (int16) (int16) (int8) DPB(0x00003EAC, Mem202[a4_146:byte], 0, 8)
	word32 d4_214
	word32 d5_215
	word32 d6_216
	d0 = fn00001D98(a6, dwArg00, dwArg04, out d3_1001, out d4_214, out d5_215, out d6_216, out a4_146, out a5_147, out a6)
	a7_1006 = a7_200 + 0x00000004
	branch d0 != 0xFFFFFFFF l00001D56
// DataOut: d0 d3 d6 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> d7:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D52:
	d0 = d6_216
// DataOut: d0 d3 d6 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> d7:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D56:
	d6_1003 = d6_216 + 0x00000001
// DataOut: d0 d3 d6 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> d7:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D58:
	branch Mem0[a4_146:byte] != 0x00 l00001434
// DataOut: d0 d3 d6 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> d7:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D5E:
	d0 = d6_1003
// DataOut: d0 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> d7:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D60:
	return d0
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> d7:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

fn00001418_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> d7:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>



word32 fn00001D98(word32 a6, word32 dwArg04, word32 dwArg08, ptr32 d3Out, ptr32 d4Out, ptr32 d5Out, ptr32 d6Out, ptr32 a4Out, ptr32 a5Out, ptr32 a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a6
// LiveOut: d0 d3 d4 d5 d6 a4 a5 a6
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: d2 a2 a3 a7
// Stack args: Stack +0004(32) Stack +0008(32)
fn00001D98_entry:
	*d3Out = d3
	*d4Out = d4
	*d5Out = d5
	*d6Out = d6
	*a4Out = a4
	*a6Out = a6
	*a5Out = a5
// DataOut: d3 d4 d5 d6 d7 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00001D98:
	word32 d1_102
	Mem19[dwArg08 + 24:word32] = Mem0[dwArg08 + 24:word32] | 2
	word32 v13_21 = Mem19[dwArg08 + 20:word32] - 0x00000001
	Mem22[dwArg08 + 20:word32] = v13_21
	branch v13_21 < 0x00000000 l00001DDC
// DataOut: d2 d3 d4 d5 d6 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00001DB4:
	word32 d0_108 = 10
	branch 10 - dwArg04 != 0x00000000 l00001DC6
// DataOut: d0 d2 d3 d4 d5 d6 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d2:<invalid> a2:<invalid> a0:<invalid> d0:2 -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00001DBA:
	d0_108 = Mem22[dwArg08 + 24:word32] & 0x00000080
	branch d0_108 != 0x00000000 l00001DDC
// DataOut: d0 d2 d3 d4 d5 d6 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d2:<invalid> a2:<invalid> a0:<invalid> d0:10 -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00001DC6:
	word32 a0_91 = Mem22[dwArg08 + 4:word32]
	Mem95[dwArg08 + 4:word32] = a0_91 + 0x00000001
	Mem97[a0_91:byte] = (byte) dwArg04
	d1_102 = (word32) (byte) DPB(d0_108, Mem97[a0_91:byte], 0, 8)
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d2:<invalid> a2:<invalid> a0:<invalid> d0:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00001DDC:
	word32 a5_76
	d1_102 = fn00001DF4(a6, dwArg04, dwArg08, out a5_76)
// DataOut: d1 d3 d4 d5 d6 d7 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d2:<invalid> a2:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a3:<invalid> d1:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3

l00001DEA:
	return d1_102
// DataOut: d0 d3 d4 d5 d6 d7 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a0:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> a3:<invalid> d3:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3

fn00001D98_exit:
// DataOut: d0 d3 d4 d5 d6 d7 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a0:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> a3:<invalid> d3:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3



word32 fn00001DF4(word32 a6, word32 dwArg04, word32 dwArg08, ptr32 a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a6
// LiveOut: d0 a5
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: d2 d3 d4 d5 d6 a2 a3 a4 a6 a7
// Stack args: Stack +0004(32)
fn00001DF4_entry:
// DataOut: d7 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00001DF4:
	word32 d0_125
	word32 a1_34
	word32 a5_36
	word32 a2_103
	fn00002388(out a1_34, out a2_103, out a5_36)
	word32 a7_134 = fp - 0x00000024
	word32 d5_101 = dwArg04
	branch a2_103 != 0x00000000 l00001E10
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Local -0004(32)

l00001E0A:
	d0_125 = -1
// DataOut: d0 d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E10:
	word32 v18_76 = 64 - (Mem0[a2_103 + 24:word32] & 73)
	branch v18_76 == 0x00000000 l00001E22
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E1C:
	d0_125 = -1
// DataOut: d0 d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E22:
	branch Mem0[a2_103 + 28:word32] != 0x00000000 l00001E40
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E28:
	branch (Mem0[a2_103 + 24:word32] & 4) == 0x00000000 l00001E38
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E30:
	Mem266[a2_103 + 28:word32] = 1
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E38:
	Mem262[a2_103 + 28:word32] = 0x00000400
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E40:
	branch Mem0[a2_103 + 8:word32] != 0x00000000 l00001E80
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E46:
	word32 d4_227
	branch (Mem0[a2_103 + 24:word32] & 0x00000080) == 0x00000000 l00001E5A
// DataOut: d5 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E56:
	d4_227 = 2
// DataOut: d4 d5 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a1:<invalid> d1:<invalid> d2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E5A:
	d4_227 = 1
// DataOut: d4 d5 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a1:<invalid> d4:2 d1:<invalid> d2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E5C:
	Mem233[fp - 0x00000028:word32] = d4_227 + Mem0[a2_103 + 28:word32]
	word32 d1_235
	word32 a1_236
	word32 d0_237 = fn00001FB4(dwArg00, out d1_235, out a1_236)
	a7_134 = fp - 0x00000024
	branch d0_237 != 0x00000000 l00001E76
// DataOut: d5 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a1:<invalid> d4:<invalid> d1:<invalid> d2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E70:
	d0_125 = -1
// DataOut: d0 d5 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a1:<invalid> d4:<invalid> a0:<invalid> a3:<invalid> d1:<invalid> d2:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E76:
	Mem246[a2_103 + 8:word32] = d0_237 + 1
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a1:<invalid> d4:<invalid> a0:<invalid> a3:<invalid> d1:<invalid> d2:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E80:
	branch Mem0[a2_103:word32] == 0x00000000 l00001EDA
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> a3:<invalid> d2:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E84:
	word32 d0_162 = Mem0[a2_103 + 24:word32] & 0x00000080
	branch d0_162 == 0x00000000 l00001EB0
// DataOut: d0 d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> a3:<invalid> d2:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E90:
	branch 10 - dwArg04 != 0x00000000 l00001EB0
// DataOut: d0 d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> a3:<invalid> d2:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E96:
	word32 a0_204 = Mem0[a2_103 + 4:word32]
	Mem208[a2_103 + 4:word32] = a0_204 + 0x00000001
	Mem210[a0_204:byte] = (byte) dwArg04
	Mem213[a7_134 - 0x00000004:word32] = a2_103
	word32 a1_216
	word32 a5_217
	d0_125 = fn00001F08(dwArg00, out a1_216, out a5_217)
// DataOut: d0 d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:10 d6:64 d1:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> a3:<invalid> d2:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

l00001EB0:
	word32 d4_169 = Mem0[a2_103 + 4:word32] - Mem0[a2_103 + 8:word32]
	word32 a6_173 = Mem0[0x00003D78:word32]
	call a6_173 + -48 (retsize: 4; depth: 4)
	branch d4_169 - d0_162 == 0x00000000 l00001EDE
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a1:<invalid> a0:<invalid> a4:<invalid> d1:<invalid> d4:<invalid> a3:<invalid> d2:<invalid> d3:<invalid> a5:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

l00001ECE:
	Mem196[a2_103 + 24:word32] = Mem0[a2_103 + 24:word32] | 16
	d0_125 = -1
// DataOut: d0 d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a0:<invalid> d4:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> d3:<invalid> a1:<invalid> a4:<invalid> a3:<invalid> a5:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

l00001EDA:
	d0_125 = 0
// DataOut: d0 d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a0:<invalid> d4:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> d3:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

l00001EDE:
	word32 a0_108 = a2_103 + 24
	Mem111[a0_108:word32] = Mem0[a0_108:word32] | 2
	word32 a1_112 = a2_103 + 8
	Mem115[Mem111[a1_112:word32]:byte] = (byte) d5_101
	Mem119[a2_103 + 4:word32] = Mem115[a1_112:word32] + 0x00000001
	Mem124[a2_103 + 20:word32] = Mem119[a2_103 + 28:word32] - 0x00000001
	d0_125 = 0
// DataOut: d0 d7 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a0:<invalid> d4:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> d3:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

l00001F02:
	return d0_125
// DataOut: d0 d7 a5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> a0:<invalid> d4:<invalid> d2:<invalid> a6:<invalid> d3:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

fn00001DF4_exit:
// DataOut: d0 d7 a5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> d6:<invalid> a3:<invalid> a4:<invalid> a6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> a5:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6



word32 fn00001F08(word32 dwArg04, ptr32 a1Out, ptr32 a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0 a1 a5
// Trashed: CVZNX d0 d1 d2 d3 d4 a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: d2 d3 d4 a2 a6 a7
fn00001F08_entry:
// DataOut: d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00001F08:
	word32 d0_132
	word32 a1_19
	word32 a5_21
	word32 a2_109
	fn00002388(out a1_19, out a2_109, out a5_21)
	branch a2_109 != 0x00000000 l00001F1E
// DataOut: d5 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001F1A:
	d0_132 = -1
// DataOut: d0 d5 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F1E:
	branch Mem0[a2_109 + 28:word32] != 0x00000000 l00001F3C
// DataOut: d5 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F24:
	branch (Mem0[a2_109 + 24:word32] & 4) == 0x00000000 l00001F34
// DataOut: d5 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F2C:
	Mem173[a2_109 + 28:word32] = 1
// DataOut: d5 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F34:
	Mem169[a2_109 + 28:word32] = 0x00000400
// DataOut: d5 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F3C:
	branch Mem0[a2_109 + 8:word32] != 0x00000000 l00001F46
// DataOut: d5 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F42:
	d0_132 = 0
// DataOut: d0 d5 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F46:
	word32 d0_65 = Mem0[a2_109 + 24:word32] & 2
	branch d0_65 == 0x00000000 l00001F8C
// DataOut: d0 d5 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F4E:
	branch Mem0[a2_109:word32] == 0x00000000 l00001F7C
// DataOut: d0 d5 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F52:
	word32 d4_136 = Mem0[a2_109 + 4:word32] - Mem0[a2_109 + 8:word32]
	word32 a6_140 = Mem0[0x00003D78:word32]
	call a6_140 + -48 (retsize: 4; depth: 4)
	branch d4_136 - d0_65 == 0x00000000 l00001F80
// DataOut: d5 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F70:
	Mem156[a2_109 + 24:word32] = Mem0[a2_109 + 24:word32] | 16
	d0_132 = -1
// DataOut: d0 d5 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> d4:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> d3:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F7C:
	d0_132 = 0
// DataOut: d0 d5 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> d4:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> d3:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F80:
	Mem113[a2_109 + 4:word32] = Mem0[a2_109 + 8:word32]
	Mem115[a2_109 + 20:word32] = Mem113[a2_109 + 28:word32]
// DataOut: d5 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> d4:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> d3:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F8C:
	word32 a0_85 = a2_109 + 24
	Mem88[a0_85:word32] = Mem0[a0_85:word32] & -4
	d0_132 = 0
// DataOut: d0 d5 d6 d7 a1 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> d4:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> d3:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F96:
	return d0_132
// DataOut: d0 d5 d6 d7 a1 a5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d4:<invalid> d2:<invalid> a6:<invalid> d3:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

fn00001F08_exit:
// DataOut: d0 d5 d6 d7 a1 a5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a6:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6



word32 fn00001FB4(word32 dwArg04, ptr32 d1Out, ptr32 a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0 d1 a1
// Trashed: CVZNX d0 d1 a0 a1
// Preserved: d2 a7
// Stack args: Stack +0004(32)
fn00001FB4_entry:
	*d1Out = d1
	*a1Out = a1
// DataOut: d1 d5 d6 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00001FB4:
	word32 d0_102
	branch dwArg04 != 0x00000000 l00001FC2
// DataOut: d1 d2 d5 d6 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00001FBE:
	d0_102 = 0
// DataOut: d0 d1 d2 d5 d6 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d2:<invalid> -4(fp):d2
// LocalsOut: fp(32)

l00001FC2:
	branch Mem0[0x00003DA8:word32] != 0x00000000 l00001FE6
// DataOut: d1 d2 d5 d6 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d2:<invalid> d0:0 -4(fp):d2
// LocalsOut: fp(32)

l00001FCA:
	word32 a0_81 = Mem0[0x00003DA4:word32]
	Mem89[0x00000000:word32] = 0x00000000
	word32 d1_95
	word32 a1_96
	Mem99[0x00003DA8:word32] = fn000022A8(dwLoc10, a0_81, a0_81, out d1_95, out a1_96)
// DataOut: d1 d2 d5 d6 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d2:<invalid> d0:0 -4(fp):d2
// LocalsOut: fp(32)

l00001FE6:
	branch Mem0[0x00003DA8:word32] != 0x00000000 l00001FF2
// DataOut: d1 d2 d5 d6 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):d2
// LocalsOut: fp(32)

l00001FEE:
	d0_102 = 0
// DataOut: d0 d1 d2 d5 d6 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):d2
// LocalsOut: fp(32)

l00001FF2:
	word32 d1_64
	word32 d0_65 = fn00002184(Mem0[0x00003DA8:word32], dwArg04 + 4, out d1_64)
	word32 a1_66
	*a1Out = d0_65
	branch d0_65 != 0x00000000 l00002010
// DataOut: d1 d2 d5 d6 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):d2

l0000200C:
	d0_102 = 0
// DataOut: d0 d1 d2 d5 d6 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d2:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):d2

l00002010:
	Mem72[d0_65:word32] = dwArg04
	d0_102 = d0_65 + 4
// DataOut: d0 d1 d5 d6 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d2:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):d2

l00002018:
	return d0_102
// DataOut: d0 d1 d5 d6 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d2:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):d2

fn00001FB4_exit:
// DataOut: d0 d1 d5 d6 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d2 d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):d2



word32 fn00002184(word32 dwArg04, word32 dwArg08, ptr32 d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1 a0 a1
// Preserved: d2 d3 d4 a2 a3 a4 a5 a6 a7
// Stack args: Stack +0004(32) Stack +0008(32)
fn00002184_entry:
	*d1Out = d1
// DataOut: d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00002184:
	word32 d0_107
	word32 d2_116 = dwArg08
	word32 a4_117 = dwArg04
	word16 v13_32 = Mem0[Mem0[0x00003D74:word32] + 20:word16] - 0x0027
	branch v13_32 <u 0x0000 l000021B0
// DataOut: d1 d2 d5 d6 d7 a4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l0000219E:
	word32 a6_285 = Mem0[0x00003D74:word32]
	d0_107 = dwArg08
	call a6_285 + -708 (retsize: 4; depth: 36)
// DataOut: d0 d1 d2 d5 d6 d7 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000021B0:
	word32 a3_102 = 0x00000000
	branch a4_117 == 0x00000000 l000022A0
// DataOut: d1 d2 d5 d6 d7 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000021B8:
	branch d2_116 == 0x00000000 l000022A0
// DataOut: d1 d2 d5 d6 d7 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:0x00000000 d4:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000021BE:
	word32 v20_113 = d2_116 - Mem0[a4_117 + 20:word32]
	branch v20_113 >=u 0x00000000 l00002272
// DataOut: d1 d2 d5 d6 d7 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:0x00000000 d4:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000021C6:
	word32 a5_152 = Mem0[a4_117:word32]
// DataOut: d1 d2 d5 d6 d7 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:0x00000000 d4:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000021C8:
	branch Mem0[a5_273:word32] == 0x00000000 l000021EA
// DataOut: d1 d2 d5 d6 d7 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000021CC:
	branch Mem0[a5_273 + 8:byte] == 0x00 l000021E6
// DataOut: d1 d2 d5 d6 d7 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000021D2:
	word32 a6_277 = Mem0[0x00003D74:word32]
	call a6_277 + -186 (retsize: 4; depth: 36)
	a3_102 = d2_116
	branch d2_116 != 0x00000000 l00002256
// DataOut: d1 d2 d5 d6 d7 a3 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000021E6:
	word32 a5_273
	a5_152 = Mem0[a5_273:word32]
	a5_273 = a5_152
// DataOut: d1 d2 d5 d6 d7 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000021EA:
	word32 d3_209 = Mem0[a4_117 + 16:word32] + 40
	word32 d1_211 = Mem0[a4_117 + 12:word32]
	*d1Out = d1_211
	word32 a6_212 = Mem0[0x00003D74:word32]
	call a6_212 + -198 (retsize: 4; depth: 36)
	a3_102 = d3_209
	branch d3_209 == 0x00000000 l000022A0
// DataOut: d1 d2 d3 d5 d6 d7 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002208:
	Mem220[d3_209:word32] = d3_209
	Mem223[d3_209 + 12:byte] = 0x0A
	Mem227[d3_209 + 20:word32] = d3_209 + 40
	Mem229[d3_209 + 24:word32] = d3_209 + 40
	Mem231[Mem229[d3_209 + 20:word32]:word32] = 0x00000000
	word32 a2_232 = Mem231[d3_209 + 20:word32]
	word32 v29_234 = Mem231[a4_117 + 16:word32]
	Mem235[a2_232 + 0x00000004:word32] = v29_234
	word32 v30_237 = Mem235[a2_232 + 0x00000004:word32]
	Mem238[d3_209 + 32:word32] = v30_237
	Mem242[d3_209 + 28:word32] = Mem238[d3_209 + 32:word32] + Mem238[d3_209 + 20:word32]
	word32 a6_244 = Mem242[0x00003D74:word32]
	call a6_244 + -240 (retsize: 4; depth: 36)
	word32 a6_247 = Mem242[0x00003D74:word32]
	call a6_247 + -186 (retsize: 4; depth: 36)
	a3_102 = d2_116
// DataOut: d1 d2 d5 d6 d7 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> d3:<invalid> d1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002256:
	branch (Mem0[a4_117 + 12:word32] & 0x00010000) == 0x00000000 l000022A0
// DataOut: d1 d2 d5 d6 d7 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> d3:<invalid> d1:<invalid> a2:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002262:
	word32 a2_194 = a3_102
	d2_116 = d2_116 + 0x00000007 >>u 0x00000003
// DataOut: d1 d2 d5 d6 d7 a2 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> d3:<invalid> d1:<invalid> a2:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002268:
	Mem200[a2_194:word32] = 0x00000000
	word32 a2_201 = a2_194 + 0x00000004
	Mem202[a2_201:word32] = 0x00000000
	a2_194 = a2_201 + 0x00000004
	d2_116 = d2_116 - 0x00000001
	branch d2_116 != 0x00000000 l00002268
// DataOut: d1 d2 d5 d6 d7 a2 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> d3:<invalid> d1:<invalid> a2:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002270:
// DataOut: d1 d2 d5 d6 d7 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> d3:<invalid> d1:<invalid> a2:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002272:
	word32 d3_119 = d2_116 + 16
	word32 d1_121 = Mem0[a4_117 + 12:word32]
	*d1Out = d1_121
	word32 a6_122 = Mem0[0x00003D74:word32]
	call a6_122 + -198 (retsize: 4; depth: 36)
	a3_102 = d3_119
	branch d3_119 == 0x00000000 l000022A0
// DataOut: d1 d3 d5 d6 d7 a3
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> d3:<invalid> d1:<invalid> a2:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l0000228C:
	Mem139[d3_119:word32] = d3_119
	word32 a6_142 = Mem139[0x00003D74:word32]
	call a6_142 + -246 (retsize: 4; depth: 36)
	Mem146[d3_119 + 0x0000000C:word32] = 0x00000000
	a3_102 = d3_119 + 0x00000010
// DataOut: d1 d5 d6 d7 a3
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a2:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000022A0:
	d0_107 = a3_102
// DataOut: d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d3:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a2:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000022A2:
	return d0_107
// DataOut: d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d3:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a2:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6

fn00002184_exit:
// DataOut: d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d2 a4:a4 a0:<invalid> a6:a6 d0:<invalid> d3:d3 d4:d4 a2:a2 a3:a3 a5:a5 d1:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6



word32 fn000022A8(word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 d1Out, ptr32 a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0 d1 a1
// Trashed: CVZNX d0 d1 a0 a1
// Preserved: d2 d3 a2 a6 a7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn000022A8_entry:
	*d1Out = d1
	*a1Out = a1
// DataOut: d1 d5 d6 d7 a1 a5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l000022A8:
	word32 d0_116
	word32 a0_19 = Mem0[0x00003D74:word32]
	word32 d3_15 = dwArg08
	word32 a2_17 = dwArg0C
	word16 v9_20 = Mem0[a0_19 + 20:word16] - 0x0027
	branch v9_20 <u 0x0000 l000022D6
// DataOut: d1 d3 d5 d6 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l000022C2:
	word32 a6_115 = Mem0[0x00003D74:word32]
	d0_116 = dwArg04
	word32 d1_117 = dwArg08
	*d1Out = d1_117
	call a6_115 + -696 (retsize: 4; depth: 20)
// DataOut: d0 d1 d3 d5 d6 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d3:<invalid> a2:<invalid> a0:<invalid> -16(fp):d2 -12(fp):d3 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32) Stack +0004(32)

l000022D6:
	word32 a1_62 = 0x00000000
	*a1Out = a1_62
	word32 v15_64 = d3_15 - a2_17
	branch v15_64 <u 0x00000000 l00002310
// DataOut: d1 d3 d5 d6 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d3:<invalid> a2:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> -16(fp):d2 -12(fp):d3 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32) Stack +0004(32)

l000022DC:
	word32 d3_83 = d3_15 + 0x00000007
	word32 a6_85 = Mem0[0x00003D74:word32]
	word32 d1_87 = 0
	*d1Out = d1_87
	call a6_85 + -198 (retsize: 4; depth: 20)
	*a1Out = 24
	branch 24 == 0 l00002310
// DataOut: d1 d3 d5 d6 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d3:<invalid> a2:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:0x00000000 -16(fp):d2 -12(fp):d3 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32) Stack +0004(32)

l000022F2:
	Mem101[24:word32] = 28
	Mem102[28:word32] = 0x00000000
	Mem104[32:word32] = 24
	Mem107[36:word32] = dwArg04
	Mem111[40:word32] = d3_83 & -8
	Mem113[44:word32] = a2_17
// DataOut: d1 d5 d6 d7 a1 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d3:<invalid> a2:<invalid> a0:<invalid> a6:<invalid> d0:24 d1:0 d2:<invalid> a1:24 -16(fp):d2 -12(fp):d3 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002310:
	d0_116 = a1_62
// DataOut: d0 d1 d5 d6 d7 a1 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d3:<invalid> a2:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> -16(fp):d2 -12(fp):d3 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002312:
	return d0_116
// DataOut: d0 d1 d5 d6 d7 a1 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d3:<invalid> a2:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> -16(fp):d2 -12(fp):d3 -8(fp):a2 -4(fp):a6

fn000022A8_exit:
// DataOut: d0 d1 d5 d6 d7 a1 a5
// DataOut (flags): 
// SymbolicIn: a7:fp d3:d3 a2:a2 a0:<invalid> a6:a6 d0:<invalid> d1:<invalid> d2:d2 a1:<invalid> -16(fp):d2 -12(fp):d3 -8(fp):a2 -4(fp):a6



word32 fn00002388(ptr32 a1Out, ptr32 a2Out, ptr32 a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d1 a1 a2 a5
// Trashed: CVZNX d0 d1 d2 a1 a2 a3 a4 a5 a6 a7
// Preserved: a6 a7
fn00002388_entry:
	*a1Out = a1
	*a2Out = a2
	*a5Out = a5
// DataOut: d5 d6 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00002388:
	word32 a6_6 = Mem0[0x00003D74:word32]
	word32 d1_27 = 0x00001000
	call a6_6 + -306 (retsize: 4; depth: 8)
	branch 0 == 0 l000023B2
// DataOut: d1 d5 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l000023A6:
	word32 a1_37
	word32 a5_38
	word32 a6_39
	d1_27 = fn0000131C(0x00000014, out a1_37, out a5_38, out a6_39)
// DataOut: d1 d5 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a6:<invalid> d0:0 d1:0x00001000 -4(fp):a6

l000023B2:
	return d1_27
// DataOut: d1 d5 d6 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a6:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -8(fp):00000014 -4(fp):a6

fn00002388_exit:
// DataOut: d1 d5 d6 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a6:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -8(fp):00000014 -4(fp):a6



word32 fn000023B8(word32 d4, word32 d5, word32 d6, word32 a1, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d4 d5 d6 a1
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a7
// Preserved: d2 d3 d4 d5 d6 a7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)
fn000023B8_entry:
// DataOut: d4 d5 d6 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l000023B8:
	word32 d1_18
	*d1Out = dwArg08
	word32 d0_120 = dwArg04
	word32 d3_23 = dwArg10
	word32 d2_25 = dwArg0C
	branch dwArg0C != 0x00000000 l0000240E
// DataOut: d0 d1 d2 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp

l000023D0:
	branch dwArg04 - dwArg10 >=u 0x00000000 l000023E2
// DataOut: d0 d1 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l000023D4:
	word32 d1_278
	word32 d2_279
	d0_120 = fn000024BC(dwArg04, dwArg08, dwArg10, dwArg10, d4, d5, d6, dwArg08, a1, out d1_278, out d2_279, out d3_23)
	word32 d1_282
	*d1Out = d0_120
// DataOut: d0 d1 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l000023E2:
	branch d3_23 != 0x00000000 l000023EE
// DataOut: d0 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> d4:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l000023E6:
	d4 = (int32) (int16) DPB(DPB(0x00000001, (uint16) (1 % (uint16) d3_23), 16, 16), (uint16) (1 /u (uint16) d3_23), 0, 16)
	d3_23 = d4
// DataOut: d0 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> d4:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l000023EE:
	word32 d1_253
	word32 d2_254
	word32 d3_255
	word32 d0_256 = fn000024BC(0, d0_120, d3_23, d3_23, d4, d5, d6, dwArg08, a1, out d1_253, out d2_254, out d3_255)
	word32 d1_261
	fn000024BC(d1_253, dwArg08, d2_254, d3_255, d4, d5, d6, dwArg08, d0_256, out d1_261, out d2_25, out d3_23)
	*d1Out = d1_265
	d0_120 = d0_256
// DataOut: d0 d1 d2 d3 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l0000240E:
	branch d0_120 - d2_25 >=u 0x00000000 l00002418
// DataOut: d0 d1 d2 d3 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> a1:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l00002412:
	d0_120 = 0
// DataOut: d0 d1 d2 d3 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l00002418:
	word32 d4_109 = 24
	word32 d6_100 = __rol(d2_25, 0x00000008)
	branch (byte) d6_100 != 0x00 l00002436
// DataOut: d0 d1 d2 d3 d4 d6 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l00002422:
	d4_109 = 16
	d6_100 = __rol(d6_100, 0x00000008)
	branch (byte) d6_100 != 0x00 l00002436
// DataOut: d0 d1 d2 d3 d4 d6 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:24 a1:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l0000242A:
	d4_109 = 8
	d6_100 = __rol(d6_100, 0x00000008)
	branch (byte) d6_100 != 0x00 l00002436
// DataOut: d0 d1 d2 d3 d4 d6 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:16 a1:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l00002432:
	d4_109 = 0
	d6_100 = DPB(d6_100, (byte) d2_25, 0, 8)
// DataOut: d0 d1 d2 d3 d4 d6 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:8 a1:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l00002436:
	word32 a1_111 = 0x00003DAC
	word32 d4_115 = DPB(0x00000018, (byte) d4_109 + Mem0[a1_111 + DPB(d6_100, (word16) d6_100 & 0x00FF, 0, 16):byte], 0, 8)
	word32 d5_117 = 32 - d4_115
	branch d5_117 != 0x00000000 l00002456
// DataOut: d0 d1 d2 d3 d4 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l0000244A:
	branch d2_25 - d0_120 <u 0x00000000 l00002452
// DataOut: d1 d2 d3 d4 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00003DAC d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l0000244E:
	branch d3_23 - dwArg08 >u 0x00000000 l00002412
// DataOut: d1 d2 d3 d4 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00003DAC d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l00002452:
	d0_120 = 1
// DataOut: d0 d1 d2 d3 d4 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00003DAC d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l00002456:
	word32 d6_133 = dwArg08 << d5_117
	word32 d1_136
	word32 d2_137
	word32 d3_138
	word32 d0_139 = fn000024BC(d0_120 >>u d4_115, d0_120 << d5_117 | dwArg08 >>u d4_115, d2_25 << d5_117 | d3_23 >>u d4_115, d3_23 << d5_117, d4_115, d5_117, d6_133, d6_133, a1_111, out d1_136, out d2_137, out d3_138)
	word32 d5_148 = __swap(d0_139)
	word32 d6_150 = __swap(d3_138)
	word32 d3_149 = d3_138 *u (word16) d5_148
	word32 d2_154 = __swap(d0_139 *u (word16) d3_138)
	word16 v31_155 = (word16) d2_154 + (word16) d3_149
	word32 d4_151 = d0_139 *u (word16) d6_150
	word16 v34_161 = (word16) DPB(d2_154, v31_155, 0, 16) + (word16) d4_151
	word32 d2_167 = __swap(DPB(d2_154, v34_161, 0, 16))
	word32 d5_152 = d5_148 *u (word16) d6_150
	word32 d1_143
	*d1Out = d0_139
	word32 v39_176 = d1_136 - ((__swap(DPB(d3_149, 0x0000, 0, 16)) + __swap(DPB(d4_151, 0x0000, 0, 16))) + DPB(d5_152, (word16) DPB(d5_152, (word16) d5_152 + (v31_155 <u 0x0000), 0, 16) + (v34_161 <u 0x0000), 0, 16))
	branch v39_176 <u 0x00000000 l000024B2
// DataOut: d1 d2 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): Z
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00003DAC d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l000024AC:
	branch v39_176 != 0x00000000 l000024B4
// DataOut: d1 d2 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:0 d4:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l000024AE:
	branch d6_133 - d2_167 >=u 0x00000000 l000024B4
// DataOut: d1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:0 d4:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l000024B2:
	word32 d1_189
	*d1Out = d0_139 - 0x00000001
// DataOut: d1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:0 d4:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l000024B4:
	d0_120 = 0
// DataOut: d0 d1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l000024B6:
	return d0_120
// DataOut: d0 d1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

fn000023B8_exit:
// DataOut: d0 d1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> a1:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6



word32 fn000024BC(word32 d0, word32 d1, word32 d2, word32 d3, word32 d4, word32 d5, word32 d6, word32 a0, word32 a1, ptr32 d1Out, ptr32 d2Out, ptr32 d3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0 d1 d2 d3 d4 d5 d6 a0 a1
// LiveOut: d0 d1 d2 d3
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a7
// Preserved: d4 d5 d6 d7 a0 a1 a7
fn000024BC_entry:
	*d2Out = d2
	*d3Out = d3
	*d1Out = d1
// DataOut: d0 d1 d2 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l000024BC:
	word32 d7_12 = d2
	branch d2 == 0x00000000 l000024D6
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp

l000024C4:
	d6 = d1
	d5 = d0
	branch d0 != 0x00000000 l000024E4
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d7:d2 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000024CA:
	branch d1 == 0x00000000 l00002602
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d7:d2 d6:d1 d5:d0 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000024D0:
	branch d2 - d1 >u 0x00000000 l00002602
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d7:d2 d6:d1 d5:d0 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000024D6:
	d0 = fn0000267A(d1, d2, d2, d3, out d1)
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d7:d2 d6:d1 d5:d0 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000024E4:
	word32 d2_334 = __swap(d2)
	branch (word16) d2_334 != 0x0000 l0000250C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:d2 d6:d1 d5:d0 d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> -12(fp):d5 -8(fp):d6 -4(fp):d7

l000024EA:
	word32 d0_315 = __swap(d0)
	word32 d1_316 = __swap(d1)
	word32 d0_318 = DPB(d0_315, (word16) d1_316, 0, 16)
	word32 d0_321 = DPB(d0_318, (uint16) (d0_318 % (uint16) d2), 16, 16)
	word32 d0_327 = DPB(d0_321, (word16) __swap(d1_316), 0, 16)
	word32 d0_330 = DPB(d0_327, (uint16) (d0_327 % (uint16) d2), 16, 16)
	d2_334 = DPB(__swap((word32) (word16) DPB(d0_321, (uint16) (d0_318 /u (uint16) d2), 0, 16)), (word16) DPB(d0_330, (uint16) (d0_327 /u (uint16) d2), 0, 16), 0, 16)
	*d2Out = d2_334
	word32 d1_337
	*d1Out = __swap(DPB(d0_330, 0x0000, 0, 16))
	d0 = d2_334
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:d2 d6:d1 d5:d0 d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000250C:
	Mem63[fp - 0x00000010:word32] = a1
	Mem66[fp - 0x00000014:word32] = a0
	Mem69[fp - 0x00000018:word32] = d4
	Mem72[fp - 0x0000001C:word32] = d3
	Mem74[fp - 0x00000020:word32] = d2_334
	Mem76[fp - 38:byte] = 0x00
	word32 d0_100 = 0
	branch d2 < 0x00000000 l00002528
// DataOut: d0 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:d2 d6:d1 d5:d0 d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000251E:
	d6 = d6 * 0x00000002
	d0_100 = (word32) ((word16) d0_100 + 0x0001)
	d5 = d5 * 0x00000002 + (d6 <u 0x00000000)
	d7_12 = d7_12 * 0x00000002
	branch d7_12 > 0x00000000 l0000251E
// DataOut: d0 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:0 d2:<invalid> d3:<invalid> -38(fp):0x00 -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002528:
	Mem93[fp - 0x00000028:word16] = (word16) d0_100
// DataOut: d0 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:0 d2:<invalid> d3:<invalid> -38(fp):0x00 -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000252A:
	word32 d1_117
	word32 d2_112 = __swap(d5)
	word32 d3_113 = __swap(d7_12)
	branch (word16) d2_112 - (word16) d3_113 != 0x0000 l0000253C
// DataOut: d0 d3 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:0 d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002536:
	d1_117 = 0x0000FFFF
// DataOut: d0 d1 d3 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:0 d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000253C:
	d1_117 = __swap(DPB(__swap(DPB(DPB(d5, (uint16) (d5 % (uint16) d3_113), 16, 16), (uint16) (d5 /u (uint16) d3_113), 0, 16)), 0x0000, 0, 16))
// DataOut: d0 d1 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002546:
	word32 d6_121 = __swap(DPB(d6, 0x0000, 0, 16))
// DataOut: d0 d1 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000254C:
	word32 d4_137 = __swap(d5 - __swap(d7_12) *u (word16) d1_117)
	word32 d2_131 = d1_117 *u (word16) d7_12
	d0_100 = DPB(d0_100, (word16) d4_137, 0, 16)
	word32 d4_141 = DPB(d4_137, (word16) d6_121, 0, 16)
	branch (word16) d0_100 != 0x0000 l0000256C
// DataOut: d0 d1 d2 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002564:
	branch d2_131 - d4_141 <=u 0x00000000 l0000256C
// DataOut: d0 d1 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002568:
	d1_117 = d1_117 - 0x00000001
// DataOut: d0 d1 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000256C:
	word32 d6_151 = __swap(d1_117)
	word32 d3_157 = __swap(d6_151)
	word32 d4_159 = __swap(d7_12)
	word32 d5_158 = d7_12 *u (word16) d3_157
	word32 d6_163 = __swap(d6_151 *u (word16) d7_12)
	word16 v45_164 = (word16) d6_163 + (word16) d5_158
	word32 d2_160 = d6_151 *u (word16) d4_159
	word16 v47_170 = (word16) DPB(d6_163, v45_164, 0, 16) + (word16) d2_160
	word32 d3_161 = d3_157 *u (word16) d4_159
	d6 = d6 - __swap(DPB(d6_163, v47_170, 0, 16))
	d5 = d5 - ((__swap(DPB(d5_158, 0x0000, 0, 16)) + __swap(DPB(d2_160, 0x0000, 0, 16))) + DPB(d3_161, (word16) DPB(d3_161, (word16) d3_161 + (v45_164 <u 0x0000), 0, 16) + (v47_170 <u 0x0000), 0, 16)) - (d6 <u 0x00000000)
	branch d5 >=u 0x00000000 l000025C4
// DataOut: d0 d1 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000025AE:
	d6 = d6 + DPB(__swap(d7_12), 0x0000, 0, 16)
	d1_117 = d1_117 - 0x00000001
	d5 = d5 + (d6 <u 0x00000000) + __swap(DPB(d7_12, 0x0000, 0, 16))
// DataOut: d0 d1 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000025C4:
	branch Mem93[fp - 38:byte] != 0x00 l000025E0
// DataOut: d0 d1 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000025CA:
	Mem256[fp - 36:word16] = (word16) d1_117
	word32 d5_258 = __swap(d5)
	word32 d6_259 = __swap(d6)
	Mem267[fp - 38:bool] = true
	d1_117 = 0
	d5 = DPB(d5_258, (word16) d6_259, 0, 16)
	d6 = DPB(d6_259, 0x0000, 0, 16)
// DataOut: d0 d1 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000025E0:
	d0 = DPB(Mem93[fp - 36:word32], (word16) d1_117, 0, 16)
	word32 d6_215 = __swap(DPB(d6, (word16) d5, 0, 16))
	word32 d5_216 = __swap(d5)
	word16 v59_217 = Mem93[fp - 0x00000028:word16]
	word32 d7_218 = DPB(d7_12, v59_217, 0, 16)
	branch v59_217 == 0x0000 l000025FA
// DataOut: d0 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000025F0:
	word32 d7_243 = DPB(d7_12, (word16) d7_218 - 0x0001, 0, 16)
// DataOut: d0 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000025F2:
	d5_216 = d5_216 >>u 0x00000001
	d6_215 = __rcr(d6_215, 0x00000001, cond(d5_216))
	d7_243 = d7_243 - 0x00000001
	branch d7_243 != 0xFFFFFFFF l000025F2
// DataOut: d0 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000025FA:
	word32 d1_229
	*d1Out = d6_215
	word32 d2_232
	*d2Out = Mem93[fp - 0x00000020:word32]
	word32 d3_234
	*d3Out = Mem93[fp - 0x0000001C:word32]
// DataOut: d0 d1 d2 d3 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002602:
	return d0
// DataOut: d0 d1 d2 d3 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

fn000024BC_exit:
// DataOut: d0 d1 d2 d3 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7



word32 fn00002648(word32 d2, word32 d3, word32 dwArg04, word32 dwArg08, ptr32 d2Out, ptr32 d3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d2 d3
// LiveOut: d0 d2 d3
// Trashed: CVZNX d0 d1 d2 d3 a7
// Preserved: a7
// Stack args: Stack +0004(32) Stack +0008(32)
fn00002648_entry:
	*d2Out = d2
	*d3Out = d3
// DataOut: d2 d3 d4 d5 d6 d7 a2 a3 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00002648:
	word32 d0_26 = dwArg04
	word32 d1_25 = dwArg08
	branch dwArg04 > 0x00000000 l00002668
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp

l00002652:
	word32 d0_40 = -dwArg04
	branch dwArg08 > 0x00000000 l00002660
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> d1:<invalid>

l00002658:
	word32 d1_55
	d0_40 = fn0000267A(d0_40, -dwArg08, d2, d3, out d1_55)
	d1_25 = -d1_55
	return d0_40
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> d1:<invalid>

l00002660:
	word32 d1_48
	d0_26 = -fn0000267A(d0_40, d1_25, d2, d3, out d1_48)
	d1_25 = -d1_48
	return d0_26
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid>

l00002668:
	branch d1_25 > 0x00000000 l0000266A_thunk_fn0000267A
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid>

l0000266A_thunk_fn0000267A:
	word32 d1_38
	return fn0000267A(d0_26, d1_25, d2, d3, out d1_38)
// DataOut: d0 d2 d3 d4 d5 d6 d7 a2 a3 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid>

l0000266C:
	word32 d1_34
	return -fn0000267A(d0_26, -d1_25, d2, d3, out d1_34)
// DataOut: d0 d2 d3 d4 d5 d6 d7 a2 a3 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid>

fn00002648_exit:
// DataOut: d0 d2 d3 d4 d5 d6 d7 a2 a3 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid>



word32 fn0000267A(word32 d0, word32 d1, word32 d2, word32 d3, ptr32 d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0 d1 d2 d3
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1 d2 d3 a7
// Preserved: d2 d3 a7
fn0000267A_entry:
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l0000267A:
	word32 d1_126 = __swap(d1)
	word16 v10_8 = (word16) d1_126
	word32 a7_164 = fp - 0x00000004
	word32 d2_10 = DPB(d2 + 0x00000004, v10_8, 0, 16)
	branch v10_8 != 0x0000 l000026A0
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32)

l00002682:
	word32 d0_142 = __swap(d0)
	word32 d1_143 = __swap(d1_126)
	word16 v13_145 = (word16) d0_142
	word32 d2_146 = DPB(__swap(d2_10), v13_145, 0, 16)
	branch v13_145 == 0x0000 l00002690
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d1:<invalid> d2:<invalid> -4(fp):d2
// LocalsOut: fp(32) Local -0004(32)

l0000268C:
	d2_146 = DPB(DPB(d2_146, (uint16) (d2_146 % (uint16) d1_143), 16, 16), (uint16) (d2_146 /u (uint16) d1_143), 0, 16)
	d0_142 = DPB(d0_142, (word16) d2_146, 0, 16)
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d1:<invalid> d2:<invalid> d0:<invalid> -4(fp):d2
// LocalsOut: fp(32) Local -0004(32)

l00002690:
	word32 d0_151 = __swap(d0_142)
	word32 d2_153 = DPB(d2_146, (word16) d0_151, 0, 16)
	word32 d2_157 = DPB(DPB(d2_153, (uint16) (d2_153 % (uint16) d1_143), 16, 16), (uint16) (d2_153 /u (uint16) d1_143), 0, 16)
	d0 = DPB(d0_151, (word16) d2_157, 0, 16)
	d1_126 = DPB(d1_143, (word16) __swap(d2_157), 0, 16)
	*d1Out = d1_126
	a7_164 = fp
	d2_10 = d2
	return d0
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d1:<invalid> d2:<invalid> d0:<invalid> -4(fp):d2

l000026A0:
	Mem37[a7_164 - 0x00000004:word32] = d3
	word32 d3_128 = 16
	branch (word16) d1_126 - 0x0080 >=u 0x0000 l000026AE
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d0:<invalid> -4(fp):d2

l000026AA:
	d1_126 = __rol(d1_126, 0x00000008)
	d3_128 = 0x00000008
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:16 d0:<invalid> -8(fp):d3 -4(fp):d2

l000026AE:
	branch (word16) d1_126 - 0x0800 >=u 0x0000 l000026B8
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

l000026B4:
	d1_126 = __rol(d1_126, 0x00000004)
	d3_128 = DPB(0x00000010, (word16) d3_128 - 0x0004, 0, 16)
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

l000026B8:
	branch (word16) d1_126 - 0x2000 >=u 0x0000 l000026C2
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

l000026BE:
	d1_126 = __rol(d1_126, 0x00000002)
	d3_128 = DPB(0x00000010, (word16) d3_128 - 0x0002, 0, 16)
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

l000026C2:
	branch (word16) d1_126 < 0x0000 l000026CA
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

l000026C6:
	d1_126 = __rol(d1_126, 0x00000001)
	d3_128 = DPB(0x00000010, (word16) d3_128 - 0x0001, 0, 16)
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

l000026CA:
	word32 d0_66 = d0 >>u d3_128
	word32 d2_69 = DPB(__swap(DPB(d2_10, (word16) d0, 0, 16)), 0x0000, 0, 16) >>u d3_128
	word32 d0_73 = DPB(d0_66, (uint16) (d0_66 % (uint16) d1_126), 16, 16)
	word32 d3_70 = __swap(d3_128)
	word32 d3_115 = DPB(d3_70, (word16) DPB(d0_73, (uint16) (d0_66 /u (uint16) d1_126), 0, 16), 0, 16)
	word32 d1_81 = __swap(d1_126)
	word32 d0_116 = DPB(d0_73, (word16) d2_69, 0, 16) - DPB(d2_69, (word16) d3_115, 0, 16) *u (word16) d1_81
	branch d0_116 >=u 0x00000000 l000026EC
// DataOut: d0 d1 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

l000026E6:
	d3_115 = DPB(d3_70, (word16) d3_115 - 0x0001, 0, 16)
	d0_116 = d0_116 + d1_81
// DataOut: d0 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): C
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

l000026EA:
	branch d0_116 >=u 0x00000000 l000026EA
// DataOut: d0 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): C
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

l000026EC:
	word32 d1_106
	*d1Out = __swap(__rol(d0_116, __swap(d3_115)))
	return (word32) (word16) d3_115
// DataOut: d0 d1 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

fn0000267A_exit:
// DataOut: d0 d1 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d0:<invalid> d3:<invalid> -8(fp):d3 -4(fp):d2



word32 fn00002700(word32 d4, word32 d5, word32 d6, word32 a1, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d4 d5 d6 a1
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a7
// Preserved: d2 d3 d4 d5 d6 d7 a7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)
fn00002700_entry:
// DataOut: d4 d5 d6 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l00002700:
	word32 d1_21
	*d1Out = dwArg08
	word32 d0_102 = dwArg04
	word32 d3_232 = dwArg10
	word32 d2_251 = dwArg0C
	branch dwArg0C != 0x00000000 l00002752
// DataOut: d0 d1 d2 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00002718:
	branch dwArg04 - dwArg10 >=u 0x00000000 l0000272A
// DataOut: d0 d1 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000271C:
	word32 d1_266
	word32 d2_267
	fn000024BC(dwArg04, dwArg08, dwArg10, dwArg10, d4, d5, d6, dwArg08, a1, out d1_266, out d2_267, out d3_232)
	d0_102 = 0
// DataOut: d0 d1 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000272A:
	branch d3_232 != 0x00000000 l00002736
// DataOut: d0 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> d4:<invalid> a1:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000272E:
	d4 = (int32) (int16) DPB(DPB(0x00000001, (uint16) (1 % (uint16) d3_232), 16, 16), (uint16) (1 /u (uint16) d3_232), 0, 16)
	d3_232 = d4
// DataOut: d0 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> d4:<invalid> a1:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002736:
	word32 d1_243
	word32 d2_244
	word32 d3_245
	fn000024BC(0, d0_102, d3_232, d3_232, d4, d5, d6, dwArg08, a1, out d1_243, out d2_244, out d3_245)
	fn000024BC(d1_243, dwArg08, d2_244, d3_245, d4, d5, d6, dwArg08, a1, out d1_21, out d2_251, out d3_232)
	d0_102 = 0
// DataOut: d0 d1 d2 d3 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> a1:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002752:
	branch d0_102 - d2_251 <u 0x00000000 l0000280C
// DataOut: d0 d1 d2 d3 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> a1:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002758:
	word32 d4_209 = 24
	word32 d6_210 = __rol(d2_251, 0x00000008)
	branch (byte) d6_210 != 0x00 l00002776
// DataOut: d0 d1 d2 d3 d4 d6 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> a1:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002762:
	d4_209 = 16
	d6_210 = __rol(d6_210, 0x00000008)
	branch (byte) d6_210 != 0x00 l00002776
// DataOut: d0 d1 d2 d3 d4 d6 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:24 d5:<invalid> d7:<invalid> a1:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000276A:
	d4_209 = 8
	d6_210 = __rol(d6_210, 0x00000008)
	branch (byte) d6_210 != 0x00 l00002776
// DataOut: d0 d1 d2 d3 d4 d6 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:16 d5:<invalid> d7:<invalid> a1:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002772:
	d4_209 = 0
	d6_210 = DPB(d6_210, (byte) d2_251, 0, 8)
// DataOut: d0 d1 d2 d3 d4 d6 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:8 d5:<invalid> d7:<invalid> a1:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002776:
	word32 a1_93 = 0x00003DAC
	word32 d4_97 = DPB(0x00000018, (byte) d4_209 + Mem0[a1_93 + DPB(d6_210, (word16) d6_210 & 0x00FF, 0, 16):byte], 0, 8)
	word32 d5_99 = 32 - d4_97
	branch d5_99 != 0x00000000 l00002798
// DataOut: d0 d1 d2 d3 d4 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> d5:<invalid> d7:<invalid> a1:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000278A:
	branch d2_251 - d0_102 <u 0x00000000 l00002792
// DataOut: d0 d1 d2 d3 d4 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00003DAC d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000278E:
	branch d3_232 - d1_21 >u 0x00000000 l0000280C
// DataOut: d0 d1 d2 d3 d4 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00003DAC d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002792:
	word32 d1_201 = d1_21 - d3_232
	*d1Out = d1_201
	d0_102 = d0_102 - d2_251 - (d1_201 <u 0x00000000)
// DataOut: d0 d1 d2 d3 d4 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00003DAC d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002798:
	word32 d6_115 = dwArg08 << d5_99
	word32 d1_118
	word32 d2_119
	word32 d3_120
	word32 d0_121 = fn000024BC(d0_102 >>u d4_97, d0_102 << d5_99 | dwArg08 >>u d4_97, d2_251 << d5_99 | d3_232 >>u d4_97, d3_232 << d5_99, d4_97, d5_99, d6_115, d6_115, a1_93, out d1_118, out d2_119, out d3_120)
	word32 d7_130 = __swap(d0_121)
	word32 d6_132 = __swap(d3_120)
	word32 d3_131 = d3_120 *u (word16) d7_130
	word32 d2_136 = __swap(d0_121 *u (word16) d3_120)
	word16 v33_137 = (word16) d2_136 + (word16) d3_131
	word32 d4_133 = d0_121 *u (word16) d6_132
	word16 v35_143 = (word16) DPB(d2_136, v33_137, 0, 16) + (word16) d4_133
	word32 d2_149 = __swap(DPB(d2_136, v35_143, 0, 16))
	word32 d7_134 = d7_130 *u (word16) d6_132
	word32 d3_155 = __swap(DPB(d3_131, 0x0000, 0, 16)) + __swap(DPB(d4_133, 0x0000, 0, 16)) + DPB(d7_134, (word16) DPB(d7_134, (word16) d7_134 + (v33_137 <u 0x0000), 0, 16) + (v35_143 <u 0x0000), 0, 16)
	word32 v40_158 = d1_118 - d2_149
	branch v40_158 <u 0x00000000 l000027F4
// DataOut: d0 d1 d2 d3 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): Z
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00003DAC d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000027EE:
	branch v40_158 != 0x00000000 l000027F8
// DataOut: d0 d1 d2 d3 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:0 d4:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000027F0:
	branch d6_115 - d3_155 >=u 0x00000000 l000027F8
// DataOut: d0 d1 d2 d3 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:0 d4:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000027F4:
	d3_155 = d3_155 - d3_120
	d2_149 = d2_149 - d2_119 - (d3_155 <u 0x00000000)
// DataOut: d1 d2 d3 d5 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:0 d4:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000027F8:
	word32 d6_174 = d6_115 - d3_155
	word32 d1_177 = d1_118 - d2_149 - (d6_174 <u 0x00000000)
	word32 d1_183
	*d1Out = d1_177 << 32 - d5_99 | d6_174 >>u d5_99
	d0_102 = d1_177 >>u d5_99
// DataOut: d0 d1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:0 d4:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000280C:
	return d0_102
// DataOut: d0 d1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> d6:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

fn00002700_exit:
// DataOut: d0 d1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> a1:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7



word32 fn00002B40(word32 d1, word32 d7, word32 a1, word32 a5, word32 a6, word32 dwArg04, ptr32 d1Out, ptr32 d7Out, ptr32 a1Out, ptr32 a5Out, ptr32 a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d1 d7 a1 a5 a6
// LiveOut: d0 d1 d7 a1 a5 a6
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: a7
// Stack args: Stack +0004(32)
fn00002B40_entry:
	*d1Out = d1
	*d7Out = d7
	*a5Out = a5
	*a6Out = a6
// DataOut: d1 d7 a1 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00002B40:
	word32 a1_22
	return fn00002B8C(d1, d7, a1, a5, a6, Mem0[0x00003ECC:word32], dwArg04, fp + 8, out a1_22)
// DataOut: d0 d1 d7 a1 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp

fn00002B40_exit:
// DataOut: d0 d1 d7 a1 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):fp + 8



word32 fn00002B5C(byte bArg07, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0
// Trashed: CVZNX d0 a0
// Preserved: a2 a7
// Stack args: Stack +0007(8) Stack +0008(32)
fn00002B5C_entry:
// DataOut: d1 d2 d3 d4 d5 d6 d7 a1 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0007(8) Stack +0008(32)

l00002B5C:
	word32 d0_13 = dwArg08
	branch dwArg08 == 0x00000000 l00002B86
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Stack +0007(8)

l00002B68:
	d0_13 = Mem0[dwArg08 + 4:word32]
	branch d0_13 - Mem0[dwArg08 + 8:word32] >=u 0x00000000 l00002B7A
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a2:<invalid> d0:<invalid> -4(fp):a2
// LocalsOut: Stack +0007(8)

l00002B72:
	Mem37[Mem0[dwArg08 + 4:word32]:byte] = bArg07
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a2:<invalid> d0:<invalid> -4(fp):a2

l00002B7A:
	Mem29[dwArg08 + 20:word32] = Mem0[dwArg08 + 20:word32] + 0x00000001
	Mem32[dwArg08 + 4:word32] = Mem29[dwArg08 + 4:word32] - 0x00000001
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a2:<invalid> d0:<invalid> a0:<invalid> -4(fp):a2

l00002B86:
	return d0_13
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a2:<invalid> d0:<invalid> a0:<invalid> -4(fp):a2

fn00002B5C_exit:
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp a2:a2 d0:<invalid> a0:<invalid> -4(fp):a2



word32 fn00002B8C(word32 d1, word32 d7, word32 a1, word32 a5, word32 a6, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d1 d7 a1 a5 a6
// LiveOut: d0 a1
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn00002B8C_entry:
	*a1Out = a1
// DataOut: d1 d7 a1 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00002B8C:
	word32 a7_1012 = fp + -120
	word32 d2_1043 = dwArg0C
	word32 a4_153 = dwArg08
	word32 a2_1048 = dwArg04
	word32 d4_1469 = 0
	word32 d5_1046 = 0
	branch Mem0[dwArg08:byte] == 0x00 l00003B8E
// DataOut: d1 d2 d4 d5 d7 a1 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00002BAE:
	word32 d3_1044 = 0
	branch Mem0[a4_153:byte] - 0x25 != 0x00 l00003A8C
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> d6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002BB8:
	Mem441[a7_1012 + 72:byte] = 0x69
	Mem442[a7_1012 + 73:byte] = 0x00
	word32 a3_3307 = a4_153 + 1
	word32 d0_451 = (word32) Mem442[0x00002815 + (word32) Mem442[a3_3307:byte]:byte]
	word32 d6_2003 = -1
	word32 d0_1434 = d0_451 & 0x00000004
	branch (d0_451 & 0x00000004) == 0x00000000 l00002C3C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> d6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002BE0:
	word32 d0_3391 = (word32) Mem442[0x00002815 + (word32) Mem442[a3_3307:byte]:byte]
	d6_2003 = 0
	d0_1434 = d0_3391 & 0x00000004
	branch (d0_3391 & 0x00000004) == 0x00000000 l00002C3C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:-1 a3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002BFA:
	word32 a7_3402 = a7_1012 - 0x00000004
	Mem3404[a7_3402:word32] = d2_1043
	word32 d1_3409 = __swap(10) *u (word16) d6_2003
	word32 d0_3416 = (word16) d6_2003 *u 10 + DPB(__swap(DPB(d1_3409, (word16) d1_3409 + (word16) (__swap(d6_2003) *u 0x000A), 0, 16)), 0x0000, 0, 16)
	a3_3307 = a3_3307 + 0x00000001
	word32 d1_3423 = (word32) Mem3404[a3_3307:byte]
	word32 d0_3435 = (word32) Mem3404[0x00002815 + (word32) Mem3404[a3_3307:byte]:byte]
	a7_1012 = a7_3402 + 0x00000004
	d2_1043 = Mem3404[a7_3402:word32]
	d1 = d1_3423 - 0x00000030
	d6_2003 = d1_3423 - 0x00000030 + d0_3416
	d0_1434 = d0_3435 & 0x00000004
	branch (d0_3435 & 0x00000004) != 0x00000000 l00002BFA
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002C3C:
	branch Mem442[a3_3307:byte] - 0x68 == 0x00 l00002C66
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002C42:
	branch Mem442[a3_3307:byte] - 0x6C == 0x00 l00002C66
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002C48:
	branch Mem442[a3_3307:byte] - 0x4C == 0x00 l00002C66
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002C4E:
	branch Mem442[a3_3307:byte] - 0x7A == 0x00 l00002C66
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002C54:
	branch Mem442[a3_3307:byte] - 0x6A == 0x00 l00002C66
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002C5A:
	branch Mem442[a3_3307:byte] - 0x74 == 0x00 l00002C66
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002C60:
	branch Mem442[a3_3307:byte] - 0x2A != 0x00 l00002CCE
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002C66:
	d7 = DPB(d7, Mem442[a7_1012 + 73:byte], 0, 8)
	d1 = DPB(d1 - 0x00000030, Mem442[a7_1012 + 72:byte], 0, 8)
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002C6E:
	branch Mem442[a3_3307:byte] - 0x2A != 0x00 l00002C78
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002C74:
	d7 = 1
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002C78:
	branch (byte) d1 - 0x68 != 0x00 l00002C88
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002C7E:
	branch Mem442[a3_3307:byte] - 0x68 != 0x00 l00002C88
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002C84:
	d1 = 2
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002C88:
	branch (byte) d1 - 0x6C != 0x00 l00002C98
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002C8E:
	branch Mem442[a3_3307:byte] - 0x6C != 0x00 l00002C98
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002C94:
	d1 = 1
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002C98:
	d1 = DPB(d1, Mem442[a3_3307:byte], 0, 8)
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002C9A:
	a3_3307 = a3_3307 + 0x00000001
	branch Mem442[a3_3307:byte] - 0x68 == 0x00 l00002C6E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002CA2:
	branch Mem442[a3_3307:byte] - 0x6C == 0x00 l00002C6E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002CA8:
	branch Mem442[a3_3307:byte] - 0x4C == 0x00 l00002C6E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002CAE:
	branch Mem442[a3_3307:byte] - 0x7A == 0x00 l00002C6E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002CB4:
	branch Mem442[a3_3307:byte] - 0x6A == 0x00 l00002C6E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002CBA:
	branch Mem442[a3_3307:byte] - 0x74 == 0x00 l00002C6E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002CC0:
	branch Mem442[a3_3307:byte] - 0x2A == 0x00 l00002C6E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002CC6:
	Mem3336[a7_1012 + 72:byte] = (byte) d1
	Mem3338[a7_1012 + 73:byte] = (byte) d7
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002CCE:
	branch Mem442[a7_1012 + 72:byte] - 0x6A != 0x00 l00002CDC
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d7:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002CD6:
	Mem3297[a7_1012 + 72:byte] = 0x01
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d7:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002CDC:
	branch Mem442[a7_1012 + 72:byte] - 0x74 != 0x00 l00002CEA
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d7:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002CE4:
	Mem3294[a7_1012 + 72:byte] = 0x69
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d7:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002CEA:
	branch Mem442[a7_1012 + 72:byte] - 0x7A != 0x00 l00002CF8
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d7:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002CF2:
	Mem3291[a7_1012 + 72:byte] = 0x6C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d7:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002CF8:
	byte v71_483 = Mem442[a3_3307:byte]
	word32 a3_1991 = a3_3307 + 0x00000001
	d7 = DPB(d7, v71_483, 0, 8)
	branch v71_483 == 0x00 l00002D6E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d7:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002CFC:
	branch (byte) d7 - 0x25 == 0x00 l00002D6E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002D02:
	branch (byte) d7 - 0x63 == 0x00 l00002D6E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002D08:
	branch (byte) d7 - 0x6E == 0x00 l00002D6E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002D0E:
	branch (byte) d7 - 0x5B == 0x00 l00002D6E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002D14:
	word32 d0_3234
	word32 a0_3224 = a2_1048 + 24
	Mem3226[a0_3224:word32] = Mem442[a0_3224:word32] | 0x00000001
	word32 a0_3227 = a2_1048 + 20
	word32 v77_3228 = Mem3226[a0_3227:word32] - 0x00000001
	Mem3229[a0_3227:word32] = v77_3228
	branch v77_3228 < 0x00000000 l00002D3E
// DataOut: d0 d2 d3 d4 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002D26:
	a1 = a2_1048 + 4
	*a1Out = a1
	word32 a0_3273 = Mem3229[a1:word32]
	word32 a7_3274 = a7_1012 - 0x00000004
	Mem3276[a7_3274:word32] = a2_1048
	Mem3280[a1:word32] = a0_3273 + 0x00000001
	d0_3234 = DPB(d0_1434, Mem3280[a0_3273:byte], 0, 8)
	a7_1012 = a7_3274 + 0x00000004
	a2_1048 = Mem3280[a7_3274:word32]
	d1 = (word32) (byte) d0_3234
// DataOut: d0 d1 d2 d3 d4 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002D3E:
	word32 a7_3261 = a7_1012 - 0x00000004
	Mem3263[a7_3261:word32] = a2_1048
	word32 d1_3265
	d0_3234 = fn00003C30(a6, dwArg00, out d1_3265, out a1, out a5)
	d1 = d0_3234
	a7_1012 = a7_3261 + 0x0004
// DataOut: d0 d1 d2 d3 d4 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> a1:<invalid> d1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002D4A:
	word32 d0_3250 = (word32) Mem3229[0x00002815 + (DPB(d0_3234, (byte) d1, 0, 8) & 0x000000FF):byte]
	d5_1046 = d1
	d4_1469 = d4_1469 + 0x00000001
	d0_1434 = d0_3250 & 0x00000008
	branch (d0_3250 & 0x00000008) != 0x00000000 l00002D14
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> a1:<invalid> d1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002D6C:
	d3_1044 = 1
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> a1:<invalid> d1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002D6E:
	word32 d1_504 = DPB(d1 - 0x00000030, (byte) d7, 0, 8)
	byte v122_505 = (byte) d1_504 - 0x25
	d1 = DPB(d1_504, v122_505, 0, 8)
	branch v122_505 == 0x00 l000031BA
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002D78:
	byte v123_2220 = (byte) d1 - 0x36
	word32 d1_2221 = DPB(d1_504, v123_2220, 0, 8)
	branch v123_2220 == 0x00 l00002EB6
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002D80:
	byte v124_2942 = (byte) d1_2221 - 0x08
	d1 = DPB(d1_504, v124_2942, 0, 8)
	branch v124_2942 == 0x00 l00002D96
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002D84:
	byte v125_3190 = (byte) d1 - 0x0B
	d1 = DPB(d1_504, v125_3190, 0, 8)
	branch v125_3190 == 0x00 l00003228
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002D8C:
	byte v126_3194 = (byte) d1 - 0x05
	d1 = DPB(d1_504, v126_3194, 0, 8)
	branch v126_3194 == 0x00 l000030D4
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002D92:
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002D96:
	branch d6_2003 - 0xFFFFFFFF != 0x00000000 l00002DA0
// DataOut: d0 d1 d2 d3 d4 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002D9E:
	d6_2003 = 1
// DataOut: d0 d1 d2 d3 d4 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002DA0:
	word32 a1_2957
	branch Mem442[a7_1012 + 73:byte] != 0x00 l00002DBA
// DataOut: d0 d1 d2 d3 d4 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002DA6:
	d0_1434 = d2_1043 + 0x00000003 >>u 0x00000002 << 0x00000002
	d2_1043 = d0_1434 + 0x00000004
	a1_2957 = Mem442[d0_1434:word32]
// DataOut: d0 d1 d2 d3 d4 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002DBA:
	a1_2957 = 0x00000000
// DataOut: d0 d1 d2 d3 d4 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002DBC:
	word32 a0_2960 = a2_1048 + 24
	Mem2962[a0_2960:word32] = Mem442[a0_2960:word32] | 0x00000001
	word32 a0_2963 = a2_1048 + 20
	Mem2965[a0_2963:word32] = Mem2962[a0_2963:word32] - 0x00000001
	Mem2968[a7_1012 + 44:word32] = a1_2957
	branch false l00002DF4
// DataOut: d0 d1 d2 d3 d4 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002DD4:
	word32 a1_3148 = a2_1048 + 4
	word32 a0_3149 = Mem2968[a1_3148:word32]
	word32 a7_3150 = a7_1012 - 0x00000004
	Mem3152[a7_3150:word32] = a2_1048
	Mem3156[a1_3148:word32] = a0_3149 + 0x00000001
	a2_1048 = Mem3156[a7_3150:word32]
	d0_1434 = DPB(d0_1434, Mem3156[a0_3149:byte], 0, 8)
	Mem3164[a7_3150:word32] = d1
	Mem3169[a7_3150 + 56:word32] = (word32) (byte) d0_1434
	a7_1012 = a7_3150 + 0x00000004
	d1 = Mem3169[a7_3150:word32]
// DataOut: d0 d1 d2 d3 d4 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002DF4:
	word32 a1_3130 = Mem2968[a7_1012 + 44:word32]
	word32 a7_3131 = a7_1012 - 0x00000004
	Mem3133[a7_3131:word32] = a2_1048
	Mem3135[a7_3131 + 48:word32] = a1_3130
	word32 a1_3138
	d0_1434 = fn00003C30(a6, dwArg00, out d1, out a1_3138, out a5)
	Mem3142[a7_3131 + 56:word32] = d0_1434
	Mem3145[a7_3131 + 48:word32] = Mem3142[a7_3131 + 48:word32]
	a7_1012 = a7_3131 + 0x0004
// DataOut: d0 d1 d2 d3 d4 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002E12:
	a1 = Mem2968[a7_1012 + 44:word32]
	*a1Out = a1
	d5_1046 = Mem2968[a7_1012 + 52:word32]
	word32 d3_2981 = d3_1044 + 0x00000001
	word32 d4_2982 = d4_1469 + 0x00000001
	branch Mem2968[a7_1012 + 52:word32] - 0xFFFFFFFF == 0x00000000 l00002E8A
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002E28:
	Mem3034[a7_1012 + 44:word32] = a1
	branch d6_2003 - d3_2981 <u 0x00000000 l00002E8A
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002E30:
	d7 = DPB(d7, Mem3034[a7_1012 + 73:byte], 0, 8)
	word32 a4_3041 = Mem3034[a7_1012 + 44:word32]
// DataOut: d0 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002E38:
	branch (byte) d7 != 0x00 l00002E3E
// DataOut: d0 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002E3C:
	Mem3124[a4_3041:byte] = (byte) d5_1046
	a4_3041 = a4_3041 + 0x00000001
// DataOut: d0 d2 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002E3E:
	word32 a0_3062 = a2_1048 + 24
	Mem3064[a0_3062:word32] = Mem3034[a0_3062:word32] | 0x00000001
	word32 a0_3065 = a2_1048 + 20
	word32 v257_3066 = Mem3064[a0_3065:word32] - 0x00000001
	Mem3067[a0_3065:word32] = v257_3066
	branch v257_3066 < 0x00000000 l00002E68
// DataOut: d0 d2 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002E50:
	a1 = a2_1048 + 4
	*a1Out = a1
	word32 a0_3106 = Mem3067[a1:word32]
	word32 a7_3107 = a7_1012 - 0x00000004
	Mem3109[a7_3107:word32] = a2_1048
	Mem3113[a1:word32] = a0_3106 + 0x00000001
	d0_1434 = DPB(d0_1434, Mem3113[a0_3106:byte], 0, 8)
	a7_1012 = a7_3107 + 0x00000004
	a2_1048 = Mem3113[a7_3107:word32]
	d1 = (word32) (byte) d0_1434
// DataOut: d0 d1 d2 d3 d4 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002E68:
	word32 a7_3094 = a7_1012 - 0x00000004
	Mem3096[a7_3094:word32] = a2_1048
	word32 d1_3098
	d0_1434 = fn00003C30(a6, dwArg00, out d1_3098, out a1, out a5)
	d1 = d0_1434
	a7_1012 = a7_3094 + 0x0004
// DataOut: d0 d1 d2 d3 d4 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002E74:
	d5_1046 = d1
	d3_2981 = d3_2981 + 0x00000001
	d4_2982 = d4_2982 + 0x00000001
	branch d1 - 0xFFFFFFFF == 0x00000000 l00002E86
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002E82:
	branch d6_2003 - d3_2981 >=u 0x00000000 l00002E38
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002E86:
	Mem3086[a7_1012 + 73:byte] = (byte) d7
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002E8A:
	branch d5_1046 - 0xFFFFFFFF == 0x00000000 l00002E9C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002E92:
	word32 a7_3024 = a7_1012 - 0x00000004
	Mem3026[a7_3024:word32] = a2_1048
	Mem3029[a7_3024 - 0x00000004:word32] = d5_1046
	d0_1434 = fn00002B5C(bArg03, dwArg04)
	a7_1012 = a7_3024 + 0x00000004
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002E9C:
	d3_1044 = d3_2981 - 0x00000001
	d4_1469 = d4_2982 - 0x00000001
	branch Mem2968[a7_1012 + 73:byte] != 0x00 l00003A86
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002EA8:
	branch d3_1044 == 0x00000000 l00003A86
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002EAE:
	Mem3022[a7_1012 + 60:word32] = Mem2968[a7_1012 + 60:word32] + 0x00000001
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002EB6:
	Mem2456[a7_1012 + 44:byte] = 0x00
	branch Mem2456[a3_1991:byte] - 0x5E != 0x00 l00002EC8
// DataOut: d0 d2 d3 d4 d6 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002EC0:
	Mem2939[a7_1012 + 44:byte] = 0x01
	a3_1991 = a3_1991 + 0x00000001
// DataOut: d0 d2 d3 d4 d6 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002EC8:
	Mem2461[a7_1012 + 52:word32] = 0x00000000
	d7 = DPB(d7, Mem2461[a7_1012 + 44:byte], 0, 8)
	word32 d1_2464 = Mem2461[a7_1012 + 52:word32]
// DataOut: d0 d1 d2 d3 d4 d6 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002ED4:
	word32 d5_2475
	branch (byte) d7 == 0x00 l00002EE0
// DataOut: d0 d1 d2 d3 d4 d6 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002ED8:
	d5_2475 = 0x000000FF
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002EE0:
	d5_2475 = 0
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002EE2:
	Mem2478[a5 + d1_2464:byte] = (byte) d5_2475
	d1_2464 = d1_2464 + 0x00000001
	branch d1_2464 <u 0x00000020 l00002ED4
// DataOut: d0 d1 d2 d3 d4 d6 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002EF4:
	Mem2485[a7_1012 + 132:word32] = d2_1043
	Mem2487[a7_1012 + 44:byte] = (byte) d7
	word32 d2_2489 = DPB(d2_1043, Mem2487[a7_1012 + 44:byte], 0, 8)
// DataOut: d0 d1 d2 d3 d4 d6 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002F00:
	branch Mem2487[a3_1991:byte] == 0x00 l00002F76
// DataOut: d0 d1 d2 d3 d4 d6 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002F04:
	a3_1991 = a3_1991 + 0x00000001
	d1_2464 = DPB(0x00000001, Mem2487[a3_1991:byte], 0, 8)
	branch Mem2487[a3_1991:byte] - 0x2D != 0x00 l00002F18
// DataOut: d1 d2 d3 d4 d6 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002F0C:
	branch (byte) d1_2464 - Mem2487[a3_1991 + 1:byte] >=u 0x00 l00002F18
// DataOut: d1 d2 d3 d4 d6 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002F12:
	a3_1991 = a3_1991 + 0x00000002
	d7 = DPB(d7, Mem2487[a3_1991 + 0x00000001:byte], 0, 8)
// DataOut: d1 d2 d3 d4 d6 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002F18:
	d7 = DPB(d7, (byte) d1_2464, 0, 8)
// DataOut: d1 d2 d3 d4 d6 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002F1A:
	word32 d5_2847 = (word32) (byte) d1_2464
	d0_1434 = (word32) (byte) d7
	branch d0_1434 - d5_2847 <u 0x00000000 l00002F70
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002F26:
	branch (byte) d2_2489 == 0x00 l00002F4A
// DataOut: d2 d3 d4 d5 d6 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002F2A:
	word32 a0_2905 = a7_1012 + 78 + (d5_2847 >>u 0x00000003)
	d1_2464 = (word32) Mem2487[a0_2905:byte]
	Mem2918[a0_2905:byte] = (byte) (~(1 << (d5_2847 & 7)) & d1_2464)
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002F4A:
	word32 a0_2888 = a7_1012 + 78 + (d5_2847 >>u 0x00000003)
	d1_2464 = (word32) Mem2487[a0_2888:byte]
	Mem2900[a0_2888:byte] = (byte) (1 << (d5_2847 & 7) | d1_2464)
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002F66:
	d5_2847 = d5_2847 + 0x00000001
	d0_1434 = (word32) (byte) d7
	branch d0_1434 - d5_2847 >=u 0x00000000 l00002F26
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002F70:
	branch Mem2487[a3_1991:byte] - 0x5D != 0x00 l00002F00
// DataOut: d0 d1 d2 d3 d4 d6 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002F76:
	word32 a3_2512 = a3_1991 + 0x00000001
	branch Mem2487[a7_1012 + 73:byte] != 0x00 l00002F96
	d2_1043 = Mem2487[a7_1012 + 132:word32]
	a3_1991 = a3_2512 + 0x00000001
	branch Mem2487[a7_1012 + 73:byte] != 0x00 l00002F96
// DataOut: d0 d1 d2 d3 d4 d6 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002F82:
	word32 d0_2830 = (d2_1043 + 0x00000003 >>u 0x00000002 << 0x00000002) + 0x00000004 + 0x00000003 >>u 0x00000002
	d2_1043 = (d0_2830 << 0x00000002) + 0x00000004
	d0_1434 = d0_2830 << 0x00000002
	a6 = Mem2487[d2_1043 + -4:word32]
// DataOut: d0 d1 d2 d3 d4 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002F96:
	a6 = 0x00000000
// DataOut: d0 d1 d2 d3 d4 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002F98:
	word32 a0_2524 = a2_1048 + 24
	Mem2526[a0_2524:word32] = Mem2487[a0_2524:word32] | 0x00000001
	word32 a0_2527 = a2_1048 + 20
	word32 v488_2528 = Mem2526[a0_2527:word32] - 0x00000001
	Mem2529[a0_2527:word32] = v488_2528
	branch v488_2528 < 0x00000000 l00002FCA
// DataOut: d0 d1 d2 d3 d4 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002FAA:
	a1 = a2_1048 + 4
	*a1Out = a1
	word32 a0_2790 = Mem2529[a1:word32]
	word32 a7_2791 = a7_1012 - 0x00000004
	Mem2793[a7_2791:word32] = a2_1048
	Mem2797[a1:word32] = a0_2790 + 0x00000001
	a2_1048 = Mem2797[a7_2791:word32]
	d0_1434 = DPB(d0_1434, Mem2797[a0_2790:byte], 0, 8)
	Mem2805[a7_2791:word32] = d1_2464
	Mem2810[a7_2791 + 48:word32] = (word32) (byte) d0_1434
	a7_1012 = a7_2791 + 0x00000004
	d1 = Mem2810[a7_2791:word32]
// DataOut: d0 d1 d2 d3 d4 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002FCA:
	word32 a7_2777 = a7_1012 - 0x00000004
	Mem2779[a7_2777:word32] = a2_1048
	d0_1434 = fn00003C30(a6, dwArg00, out d1, out a1, out a5)
	Mem2786[a7_2777 + 48:word32] = d0_1434
	a7_1012 = a7_2777 + 0x0004
// DataOut: d0 d1 d2 d3 d4 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002FD8:
	d5_1046 = Mem2529[a7_1012 + 44:word32]
	word32 d3_2540 = d3_1044 + 0x00000001
	word32 d4_2541 = d4_1469 + 0x00000001
	branch Mem2529[a7_1012 + 44:word32] - 0xFFFFFFFF == 0x00000000 l000030A6
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00002FEC:
	word32 a7_2596 = a7_1012 - 0x00000004
	Mem2598[a7_2596:word32] = a7_1012 + 78
	Mem2601[a7_2596 - 0x00000004:word32] = a1
	Mem2603[a7_2596 - 0x00000008:word32] = 0x00000008
	Mem2606[a7_2596 - 0x0000000C:word32] = d5_1046
	d1 = (word32) Mem2606[Mem2606[a7_2596:word32] + fn00002648(d2_1043, d3_2540, dwArg00, dwArg04, out d2_1043, out d3_2540):byte]
	*a1Out = Mem2606[a7_2596 - 0x00000004:word32]
	a7_1012 = a7_2596 + 0x00000004
	d0_1434 = 1 << (d5_1046 & 7) & d1
	branch d0_1434 == 0x00000000 l000030A6
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000301C:
	branch d6_2003 - d3_2540 <u 0x00000000 l000030A6
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003022:
	d7 = DPB(d7, Mem2606[a7_2596 + 77:byte], 0, 8)
// DataOut: d0 d2 d3 d4 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003026:
	branch (byte) d7 != 0x00 l0000302C
// DataOut: d0 d2 d3 d4 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000302A:
	Mem2771[a6:byte] = (byte) d5_1046
	a6 = a6 + 0x00000001
// DataOut: d0 d2 d3 d4 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000302C:
	word32 a0_2660 = a2_1048 + 24
	Mem2662[a0_2660:word32] = Mem2606[a0_2660:word32] | 0x00000001
	word32 a0_2663 = a2_1048 + 20
	word32 v510_2664 = Mem2662[a0_2663:word32] - 0x00000001
	Mem2665[a0_2663:word32] = v510_2664
	branch v510_2664 < 0x00000000 l00003056
// DataOut: d0 d2 d3 d4 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000303E:
	a1 = a2_1048 + 4
	*a1Out = a1
	word32 a0_2753 = Mem2665[a1:word32]
	word32 a7_2754 = a7_1012 - 0x00000004
	Mem2756[a7_2754:word32] = a2_1048
	Mem2760[a1:word32] = a0_2753 + 0x00000001
	d0_1434 = DPB(d0_1434, Mem2760[a0_2753:byte], 0, 8)
	a7_1012 = a7_2754 + 0x00000004
	a2_1048 = Mem2760[a7_2754:word32]
	d1 = (word32) (byte) d0_1434
// DataOut: d0 d1 d2 d3 d4 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003056:
	word32 a7_2741 = a7_1012 - 0x00000004
	Mem2743[a7_2741:word32] = a2_1048
	word32 d1_2745
	d0_1434 = fn00003C30(a6, dwArg00, out d1_2745, out a1, out a5)
	d1 = d0_1434
	a7_1012 = a7_2741 + 0x0004
// DataOut: d0 d1 d2 d3 d4 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003062:
	d5_1046 = d1
	d3_2540 = d3_2540 + 0x00000001
	d4_2541 = d4_2541 + 0x00000001
	branch d1 - 0xFFFFFFFF == 0x00000000 l000030A2
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003070:
	word32 a7_2698 = a7_1012 - 0x00000004
	Mem2700[a7_2698:word32] = a7_1012 + 78
	Mem2703[a7_2698 - 0x00000004:word32] = a1
	Mem2705[a7_2698 - 0x00000008:word32] = 0x00000008
	Mem2708[a7_2698 - 0x0000000C:word32] = d1
	d1 = (word32) Mem2708[Mem2708[a7_2698:word32] + fn00002648(d2_1043, d3_2540, dwArg00, dwArg04, out d2_1043, out d3_2540):byte]
	*a1Out = Mem2708[a7_2698 - 0x00000004:word32]
	a7_1012 = a7_2698 + 0x00000004
	d0_1434 = 1 << (d1 & 7) & d1
	branch d0_1434 == 0x00000000 l000030A2
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000309E:
	branch d6_2003 - d3_2540 >=u 0x00000000 l00003026
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000030A2:
	Mem2695[a7_1012 + 73:byte] = (byte) d7
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000030A6:
	branch d5_1046 - 0xFFFFFFFF == 0x00000000 l000030B8
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000030AE:
	word32 a7_2586 = a7_1012 - 0x00000004
	Mem2588[a7_2586:word32] = a2_1048
	Mem2591[a7_2586 - 0x00000004:word32] = d5_1046
	d0_1434 = fn00002B5C(bArg03, dwArg04)
	a7_1012 = a7_2586 + 0x00000004
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000030B8:
	d3_1044 = d3_2540 - 0x00000001
	d4_1469 = d4_2541 - 0x00000001
	branch Mem2529[a7_1012 + 73:byte] != 0x00 l00003A86
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000030C4:
	branch d3_1044 == 0x00000000 l00003A86
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000030CA:
	Mem2581[a6:byte] = 0x00
	Mem2584[a7_1012 + 60:word32] = Mem2581[a7_1012 + 60:word32] + 0x00000001
	a6 = a6 + 0x00000001
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000030D4:
	branch Mem442[a7_1012 + 73:byte] != 0x00 l000030EE
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000030DA:
	d0_1434 = d2_1043 + 0x00000003 >>u 0x00000002 << 0x00000002
	d2_1043 = d0_1434 + 0x00000004
	a5 = Mem442[d0_1434:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000030EE:
	a5 = 0x00000000
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000030F0:
	branch d5_1046 - 0xFFFFFFFF == 0x00000000 l0000318C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000030FA:
	word32 d0_2309 = (word32) Mem442[0x00002815 + (DPB(d0_1434, (byte) d5_1046, 0, 8) & 0x000000FF):byte]
	d0_1434 = d0_2309 & 0x00000008
	branch (d0_2309 & 0x00000008) != 0x00000000 l0000318C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003116:
	branch d6_2003 - d3_1044 <u 0x00000000 l0000318C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000311A:
	d7 = DPB(d7, Mem442[a7_1012 + 73:byte], 0, 8)
// DataOut: d0 d2 d3 d4 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000311E:
	branch (byte) d7 != 0x00 l00003124
// DataOut: d0 d2 d3 d4 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003122:
	Mem2420[a5:byte] = (byte) d5_1046
	a5 = a5 + 0x00000001
// DataOut: d0 d2 d3 d4 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003124:
	word32 a0_2340 = a2_1048 + 24
	Mem2342[a0_2340:word32] = Mem442[a0_2340:word32] | 0x00000001
	word32 a0_2343 = a2_1048 + 20
	word32 v161_2344 = Mem2342[a0_2343:word32] - 0x00000001
	Mem2345[a0_2343:word32] = v161_2344
	branch v161_2344 < 0x00000000 l0000314E
// DataOut: d0 d2 d3 d4 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003136:
	a1 = a2_1048 + 4
	*a1Out = a1
	word32 a0_2402 = Mem2345[a1:word32]
	word32 a7_2403 = a7_1012 - 0x00000004
	Mem2405[a7_2403:word32] = a2_1048
	Mem2409[a1:word32] = a0_2402 + 0x00000001
	d0_1434 = DPB(d0_1434, Mem2409[a0_2402:byte], 0, 8)
	a7_1012 = a7_2403 + 0x00000004
	a2_1048 = Mem2409[a7_2403:word32]
	d1 = (word32) (byte) d0_1434
// DataOut: d0 d1 d2 d3 d4 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000314E:
	word32 a7_2390 = a7_1012 - 0x00000004
	Mem2392[a7_2390:word32] = a2_1048
	word32 d1_2394
	d0_1434 = fn00003C30(a6, dwArg00, out d1_2394, out a1, out a5)
	d1 = d0_1434
	a7_1012 = a7_2390 + 0x0004
// DataOut: d0 d1 d2 d3 d4 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000315A:
	d5_1046 = d1
	d3_1044 = d3_1044 + 0x00000001
	d4_1469 = d4_1469 + 0x00000001
	branch d1 - 0xFFFFFFFF == 0x00000000 l00003188
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003168:
	word32 d0_2378 = (word32) Mem2345[0x00002815 + (DPB(d0_1434, (byte) d1, 0, 8) & 0x000000FF):byte]
	d0_1434 = d0_2378 & 0x00000008
	branch (d0_2378 & 0x00000008) != 0x00000000 l00003188
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003184:
	branch d6_2003 - d3_1044 >=u 0x00000000 l0000311E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003188:
	Mem2369[a7_1012 + 73:byte] = (byte) d7
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000318C:
	branch d5_1046 - 0xFFFFFFFF == 0x00000000 l0000319E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003194:
	word32 a7_2293 = a7_1012 - 0x00000004
	Mem2295[a7_2293:word32] = a2_1048
	Mem2298[a7_2293 - 0x00000004:word32] = d5_1046
	d0_1434 = fn00002B5C(bArg03, dwArg04)
	a7_1012 = a7_2293 + 0x00000004
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000319E:
	d3_1044 = d3_1044 - 0x00000001
	d4_1469 = d4_1469 - 0x00000001
	branch Mem442[a7_1012 + 73:byte] != 0x00 l00003A86
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000031AA:
	branch d3_1044 == 0x00000000 l00003A86
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000031B0:
	Mem2288[a5:byte] = 0x00
	Mem2291[a7_1012 + 60:word32] = Mem2288[a7_1012 + 60:word32] + 0x00000001
	a5 = a5 + 0x00000001
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000031BA:
	word32 a0_2139 = a2_1048 + 24
	Mem2141[a0_2139:word32] = Mem442[a0_2139:word32] | 0x00000001
	word32 a0_2142 = a2_1048 + 20
	word32 v128_2143 = Mem2141[a0_2142:word32] - 0x00000001
	Mem2144[a0_2142:word32] = v128_2143
	branch v128_2143 < 0x00000000 l000031EC
// DataOut: d0 d1 d2 d3 d4 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000031CC:
	a1 = a2_1048 + 4
	*a1Out = a1
	word32 a0_2195 = Mem2144[a1:word32]
	word32 a7_2196 = a7_1012 - 0x00000004
	Mem2198[a7_2196:word32] = a2_1048
	Mem2202[a1:word32] = a0_2195 + 0x00000001
	a2_1048 = Mem2202[a7_2196:word32]
	d0_1434 = DPB(d0_1434, Mem2202[a0_2195:byte], 0, 8)
	Mem2210[a7_2196:word32] = d1
	Mem2215[a7_2196 + 48:word32] = (word32) (byte) d0_1434
	a7_1012 = a7_2196 + 0x00000004
	d1 = Mem2215[a7_2196:word32]
// DataOut: d0 d1 d2 d3 d4 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000031EC:
	word32 a7_2182 = a7_1012 - 0x00000004
	Mem2184[a7_2182:word32] = a2_1048
	d0_1434 = fn00003C30(a6, dwArg00, out d1, out a1, out a5)
	Mem2191[a7_2182 + 48:word32] = d0_1434
	a7_1012 = a7_2182 + 0x0004
// DataOut: d0 d1 d2 d3 d4 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000031FA:
	d5_1046 = Mem2144[a7_1012 + 44:word32]
	d3_1044 = d3_1044 + 0x00000001
	d4_1469 = d4_1469 + 0x00000001
	branch Mem2144[a7_1012 + 44:word32] - 0x00000025 == 0x00000000 l00003A86
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000320E:
	branch d5_1046 == 0xFFFFFFFF l00003220
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003216:
	word32 a7_2170 = a7_1012 - 0x00000004
	Mem2172[a7_2170:word32] = a2_1048
	Mem2175[a7_2170 - 0x00000004:word32] = d5_1046
	d0_1434 = fn00002B5C(bArg03, dwArg04)
	a7_1012 = a7_2170 + 0x00000004
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003220:
	d3_1044 = d3_1044 - 0x00000001
	d4_1469 = d4_1469 - 0x00000001
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003228:
	branch Mem442[a7_1012 + 73:byte] != 0x00 l000032C0
// DataOut: d0 d1 d2 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003230:
	branch Mem442[a7_1012 + 72:byte] - 0x01 != 0x00 l00003252
// DataOut: d1 d2 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003238:
	d0_1434 = d2_1043 + 0x00000003 >>u 0x00000002 << 0x00000002
	word32 a0_2111 = Mem442[d0_1434:word32]
	Mem2113[a0_2111 + 4:word32] = d4_1469
	Mem2114[a0_2111:word32] = 0x00000000
	d2_1043 = d0_1434 + 0x00000004
// DataOut: d0 d1 d2 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003252:
	branch Mem442[a7_1012 + 72:byte] - 0x6C != 0x00 l00003270
// DataOut: d1 d2 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000325A:
	d0_1434 = d2_1043 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem2101[Mem442[d0_1434:word32]:word32] = d4_1469
	d2_1043 = d0_1434 + 0x00000004
// DataOut: d0 d1 d2 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003270:
	branch Mem442[a7_1012 + 72:byte] - 0x68 != 0x00 l0000328E
// DataOut: d1 d2 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003278:
	d0_1434 = d2_1043 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem2089[Mem442[d0_1434:word32]:word16] = (word16) d4_1469
	d2_1043 = d0_1434 + 0x00000004
// DataOut: d0 d1 d2 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000328E:
	branch Mem442[a7_1012 + 72:byte] - 0x02 != 0x00 l000032AC
// DataOut: d1 d2 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003296:
	d0_1434 = d2_1043 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem2077[Mem442[d0_1434:word32]:byte] = (byte) d4_1469
	d2_1043 = d0_1434 + 0x00000004
// DataOut: d0 d1 d2 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000032AC:
	d0_1434 = d2_1043 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem2065[Mem442[d0_1434:word32]:word32] = d4_1469
	d2_1043 = d0_1434 + 0x00000004
// DataOut: d0 d1 d2 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000032C0:
	Mem2025[a7_1012 + 60:word32] = Mem442[a7_1012 + 60:word32] + 0x00000001
	d3_1044 = 1
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000032CA:
	Mem555[a7_1012 + 48:word32] = 0x00000000
	Mem556[a7_1012 + 44:word32] = 0x00000000
	Mem557[a7_1012 + 110:word32] = 0x00000000
	branch (byte) d7 != 0x00 l000032DC
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000032DA:
	a3_1991 = a3_1991 - 0x00000001
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000032DC:
	branch (byte) d7 - 0x70 != 0x00 l000032EA
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000032E2:
	Mem1988[a7_1012 + 72:byte] = 0x6C
	d7 = 120
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000032EA:
	branch d5_1046 - 0x0000002D != 0x00000000 l000032F8
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000032F2:
	branch (byte) d7 - 0x75 != 0x00 l00003300
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000032F8:
	branch d5_1046 - 0x0000002B != 0x00000000 l00003350
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003300:
	branch d6_2003 - d3_1044 <u 0x00000000 l00003350
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003304:
	Mem1919[a7_1012 + 110:word32] = d5_1046
	word32 a0_1920 = a2_1048 + 24
	Mem1922[a0_1920:word32] = Mem1919[a0_1920:word32] | 0x00000001
	word32 a0_1923 = a2_1048 + 20
	word32 v187_1924 = Mem1922[a0_1923:word32] - 0x00000001
	Mem1925[a0_1923:word32] = v187_1924
	branch v187_1924 < 0x00000000 l0000333A
// DataOut: d0 d1 d2 d3 d4 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000331A:
	a1 = a2_1048 + 4
	*a1Out = a1
	word32 a0_1956 = Mem1925[a1:word32]
	word32 a7_1957 = a7_1012 - 0x00000004
	Mem1959[a7_1957:word32] = a2_1048
	Mem1963[a1:word32] = a0_1956 + 0x00000001
	a2_1048 = Mem1963[a7_1957:word32]
	d0_1434 = DPB(d0_1434, Mem1963[a0_1956:byte], 0, 8)
	Mem1971[a7_1957:word32] = d1
	Mem1976[a7_1957 + 56:word32] = (word32) (byte) d0_1434
	a7_1012 = a7_1957 + 0x00000004
	d1 = Mem1976[a7_1957:word32]
// DataOut: d0 d1 d2 d3 d4 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0 -6(fp):0x00000010 12(fp):<invalid>

l0000333A:
	word32 a7_1943 = a7_1012 - 0x00000004
	Mem1945[a7_1943:word32] = a2_1048
	d0_1434 = fn00003C30(a6, dwArg00, out d1, out a1, out a5)
	Mem1952[a7_1943 + 56:word32] = d0_1434
	a7_1012 = a7_1943 + 0x0004
// DataOut: d0 d1 d2 d3 d4 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0 -6(fp):0x00000010 12(fp):<invalid>

l00003348:
	d5_1046 = Mem1925[a7_1012 + 52:word32]
	d3_1044 = d3_1044 + 0x00000001
	d4_1469 = d4_1469 + 0x00000001
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0 -6(fp):0x00000010 12(fp):<invalid>

l00003350:
	branch (byte) d7 - 0x69 != 0x00 l000034C2
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003358:
	branch d5_1046 - 0x00000030 != 0x00000000 l00003484
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003362:
	branch d6_2003 - d3_1044 <u 0x00000000 l00003484
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003368:
	word32 d0_1689
	word32 a0_1679 = a2_1048 + 24
	Mem1681[a0_1679:word32] = Mem557[a0_1679:word32] | 0x00000001
	word32 a0_1682 = a2_1048 + 20
	word32 v203_1683 = Mem1681[a0_1682:word32] - 0x00000001
	Mem1684[a0_1682:word32] = v203_1683
	branch v203_1683 < 0x00000000 l0000339A
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000337A:
	a1 = a2_1048 + 4
	*a1Out = a1
	word32 a0_1889 = Mem1684[a1:word32]
	word32 a7_1890 = a7_1012 - 0x00000004
	Mem1892[a7_1890:word32] = a2_1048
	Mem1896[a1:word32] = a0_1889 + 0x00000001
	a2_1048 = Mem1896[a7_1890:word32]
	d0_1689 = DPB(d0_1434, Mem1896[a0_1889:byte], 0, 8)
	Mem1904[a7_1890:word32] = d1
	Mem1909[a7_1890 + 56:word32] = (word32) (byte) d0_1689
	a7_1012 = a7_1890 + 0x00000004
	d1 = Mem1909[a7_1890:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000339A:
	word32 a7_1876 = a7_1012 - 0x00000004
	Mem1878[a7_1876:word32] = a2_1048
	d0_1689 = fn00003C30(a6, dwArg00, out d1, out a1, out a5)
	Mem1885[a7_1876 + 56:word32] = d0_1689
	a7_1012 = a7_1876 + 0x0004
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000033A8:
	Mem1695[a7_1012 + 64:word32] = Mem1684[a7_1012 + 52:word32]
	word32 d0_1700 = DPB(d0_1689, Mem1695[a7_1012 + 55:byte], 0, 8)
	word32 d3_1696 = d3_1044 + 0x00000001
	word32 d4_1697 = d4_1469 + 0x00000001
	d0_1434 = d0_1700 & 0x000000FF
	branch __btst(Mem1695[0x00002814 + 1 + (d0_1700 & 0x000000FF):byte], 0x0000) l000033CE
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000033CA:
	d0_1434 = DPB(d0_1700 & 0x000000FF, (byte) (d0_1700 & 0x000000FF) | 0x20, 0, 8)
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:00002814 d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000033CE:
	branch d0_1434 - 0x00000078 != 0x00000000 l00003466
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:00002814 d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000033D8:
	branch d6_2003 - d3_1696 <u 0x00000000 l00003466
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:00002814 d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000033DE:
	word32 d0_1778
	word32 a0_1768 = a2_1048 + 24
	Mem1770[a0_1768:word32] = Mem1695[a0_1768:word32] | 0x00000001
	word32 a0_1771 = a2_1048 + 20
	word32 v221_1772 = Mem1770[a0_1771:word32] - 0x00000001
	Mem1773[a0_1771:word32] = v221_1772
	branch v221_1772 < 0x00000000 l00003410
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:00002814 d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000033F0:
	a1 = a2_1048 + 4
	*a1Out = a1
	word32 a0_1843 = Mem1773[a1:word32]
	word32 a7_1844 = a7_1012 - 0x00000004
	Mem1846[a7_1844:word32] = a2_1048
	Mem1850[a1:word32] = a0_1843 + 0x00000001
	a2_1048 = Mem1850[a7_1844:word32]
	d0_1778 = DPB(d0_1434, Mem1850[a0_1843:byte], 0, 8)
	Mem1858[a7_1844:word32] = d1
	Mem1863[a7_1844 + 56:word32] = (word32) (byte) d0_1778
	a7_1012 = a7_1844 + 0x00000004
	d1 = Mem1863[a7_1844:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003410:
	word32 a7_1830 = a7_1012 - 0x00000004
	Mem1832[a7_1830:word32] = a2_1048
	d0_1778 = fn00003C30(a6, dwArg00, out d1, out a1, out a5)
	Mem1839[a7_1830 + 56:word32] = d0_1778
	a7_1012 = a7_1830 + 0x0004
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000341E:
	Mem1784[a7_1012 + 74:word32] = Mem1773[a7_1012 + 52:word32]
	word32 d0_1795 = (word32) Mem1784[0x00002815 + (DPB(d0_1778, (byte) d5_1046, 0, 8) & 0x000000FF):byte]
	d0_1434 = d0_1795 & 0x00000044
	branch (d0_1795 & 0x00000044) == 0x00000000 l0000344A
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003444:
	branch d6_2003 - (d3_1696 + 0x00000001) <u 0x00000000 l0000344A
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003448:
	d7 = 120
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000344A:
	branch Mem1784[a7_1012 + 74:word32] - 0xFFFFFFFF == 0x00000000 l00003460
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003454:
	word32 a7_1812 = a7_1012 - 0x00000004
	Mem1814[a7_1812:word32] = a2_1048
	Mem1818[a7_1812 - 0x00000004:word32] = Mem1814[a7_1812 + 78:word32]
	d0_1434 = fn00002B5C(bArg03, dwArg04)
	a7_1012 = a7_1812 + 0x00000004
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003460:
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003466:
	d7 = 111
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003468:
	branch Mem1695[a7_1012 + 64:word32] - 0xFFFFFFFF == 0x00000000 l0000347E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003472:
	word32 a7_1738 = a7_1012 - 0x00000004
	Mem1740[a7_1738:word32] = a2_1048
	Mem1744[a7_1738 - 0x00000004:word32] = Mem1740[a7_1738 + 68:word32]
	d0_1434 = fn00002B5C(bArg03, dwArg04)
	a7_1012 = a7_1738 + 0x00000004
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000347E:
	d3_1044 = d3_1696 - 0x00000001
	d4_1469 = d4_1697 - 0x00000001
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003484:
	word32 d0_1652 = (word32) Mem557[0x00002815 + (DPB(d0_1434, (byte) d5_1046, 0, 8) & 0x000000FF):byte]
	d0_1434 = d0_1652 & 0x00000004
	branch (d0_1652 & 0x00000004) != 0x00000000 l000034C2
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000034A0:
	word32 d0_1665 = (word32) Mem557[0x00002815 + (DPB(d0_1652 & 0x00000004, (byte) d5_1046, 0, 8) & 0x000000FF):byte]
	d0_1434 = d0_1665 & 0x00000044
	branch (d0_1665 & 0x00000044) == 0x00000000 l000034C2
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000034BC:
	branch d6_2003 - d3_1044 <u 0x00000000 l000034C2
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000034C0:
	d7 = 120
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000034C2:
	branch (byte) d7 - 0x78 != 0x00 l000035F6
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000034CA:
	branch d5_1046 - 0x00000030 != 0x00000000 l000035F6
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000034D4:
	branch d6_2003 - d3_1044 <u 0x00000000 l000035F6
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000034DA:
	word32 d0_1422
	word32 a0_1412 = a2_1048 + 24
	Mem1414[a0_1412:word32] = Mem557[a0_1412:word32] | 0x00000001
	word32 a0_1415 = a2_1048 + 20
	word32 v288_1416 = Mem1414[a0_1415:word32] - 0x00000001
	Mem1417[a0_1415:word32] = v288_1416
	branch v288_1416 < 0x00000000 l0000350C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000034EC:
	a1 = a2_1048 + 4
	*a1Out = a1
	word32 a0_1605 = Mem1417[a1:word32]
	word32 a7_1606 = a7_1012 - 0x00000004
	Mem1608[a7_1606:word32] = a2_1048
	Mem1612[a1:word32] = a0_1605 + 0x00000001
	a2_1048 = Mem1612[a7_1606:word32]
	d0_1422 = DPB(d0_1434, Mem1612[a0_1605:byte], 0, 8)
	Mem1620[a7_1606:word32] = d1
	Mem1625[a7_1606 + 56:word32] = (word32) (byte) d0_1422
	a7_1012 = a7_1606 + 0x00000004
	d1 = Mem1625[a7_1606:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000350C:
	word32 a7_1592 = a7_1012 - 0x00000004
	Mem1594[a7_1592:word32] = a2_1048
	d0_1422 = fn00003C30(a6, dwArg00, out d1, out a1, out a5)
	Mem1601[a7_1592 + 56:word32] = d0_1422
	a7_1012 = a7_1592 + 0x0004
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000351A:
	Mem1428[a7_1012 + 64:word32] = Mem1417[a7_1012 + 52:word32]
	word32 d0_1433 = DPB(d0_1422, Mem1428[a7_1012 + 55:byte], 0, 8)
	word32 d3_1429 = d3_1044 + 0x00000001
	word32 d4_1430 = d4_1469 + 0x00000001
	d0_1434 = d0_1433 & 0x000000FF
	branch __btst(Mem1428[0x00002814 + 1 + (d0_1433 & 0x000000FF):byte], 0x0000) l00003540
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000353C:
	d0_1434 = DPB(d0_1433 & 0x000000FF, (byte) (d0_1433 & 0x000000FF) | 0x20, 0, 8)
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:00002814 d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003540:
	branch d0_1434 - 0x00000078 != 0x00000000 l000035DC
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:00002814 d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000354A:
	branch d6_2003 - d3_1429 <u 0x00000000 l000035DC
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:00002814 d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003550:
	word32 d0_1494
	word32 a0_1484 = a2_1048 + 24
	Mem1486[a0_1484:word32] = Mem1428[a0_1484:word32] | 0x00000001
	word32 a0_1487 = a2_1048 + 20
	word32 v305_1488 = Mem1486[a0_1487:word32] - 0x00000001
	Mem1489[a0_1487:word32] = v305_1488
	branch v305_1488 < 0x00000000 l00003582
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:00002814 d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003562:
	a1 = a2_1048 + 4
	*a1Out = a1
	word32 a0_1559 = Mem1489[a1:word32]
	word32 a7_1560 = a7_1012 - 0x00000004
	Mem1562[a7_1560:word32] = a2_1048
	Mem1566[a1:word32] = a0_1559 + 0x00000001
	a2_1048 = Mem1566[a7_1560:word32]
	d0_1494 = DPB(d0_1434, Mem1566[a0_1559:byte], 0, 8)
	Mem1574[a7_1560:word32] = d1
	Mem1579[a7_1560 + 56:word32] = (word32) (byte) d0_1494
	a7_1012 = a7_1560 + 0x00000004
	d1 = Mem1579[a7_1560:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003582:
	word32 a7_1546 = a7_1012 - 0x00000004
	Mem1548[a7_1546:word32] = a2_1048
	d0_1494 = fn00003C30(a6, dwArg00, out d1, out a1, out a5)
	Mem1555[a7_1546 + 56:word32] = d0_1494
	a7_1012 = a7_1546 + 0x0004
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003590:
	Mem1500[a7_1012 + 74:word32] = Mem1489[a7_1012 + 52:word32]
	word32 d0_1511 = (word32) Mem1500[0x00002815 + (DPB(d0_1494, Mem1500[a7_1012 + 55:byte], 0, 8) & 0x000000FF):byte]
	d3_1044 = d3_1429 + 0x00000001
	d4_1469 = d4_1430 + 0x00000001
	d0_1434 = d0_1511 & 0x00000044
	branch (d0_1511 & 0x00000044) == 0x00000000 l000035C2
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000035B8:
	branch d6_2003 - (d3_1429 + 0x00000001) <u 0x00000000 l000035C2
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000035BC:
	d5_1046 = Mem1500[a7_1012 + 74:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000035C2:
	branch Mem1500[a7_1012 + 74:word32] - 0xFFFFFFFF == 0x00000000 l000035D8
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000035CC:
	word32 a7_1528 = a7_1012 - 0x00000004
	Mem1530[a7_1528:word32] = a2_1048
	Mem1534[a7_1528 - 0x00000004:word32] = Mem1530[a7_1528 + 78:word32]
	d0_1434 = fn00002B5C(bArg03, dwArg04)
	a7_1012 = a7_1528 + 0x00000004
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000035D8:
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000035DC:
	branch Mem1428[a7_1012 + 64:word32] - 0xFFFFFFFF == 0x00000000 l000035F2
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000035E6:
	word32 a7_1471 = a7_1012 - 0x00000004
	Mem1473[a7_1471:word32] = a2_1048
	Mem1477[a7_1471 - 0x00000004:word32] = Mem1473[a7_1471 + 68:word32]
	d0_1434 = fn00002B5C(bArg03, dwArg04)
	a7_1012 = a7_1471 + 0x00000004
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000035F2:
	d3_1044 = d3_1429 - 0x00000001
	d4_1469 = d4_1430 - 0x00000001
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000035F6:
	branch (byte) d7 - 0x78 == 0x00 l00003602
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000035FC:
	branch (byte) d7 - 0x58 != 0x00 l0000360C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003602:
	Mem1401[a7_1012 + 64:word32] = 0x00000010
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000360C:
	branch (byte) d7 - 0x6F != 0x00 l0000361C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003612:
	Mem1397[a7_1012 + 52:word32] = 0x00000008
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000361C:
	Mem1394[a7_1012 + 52:word32] = 0x0000000A
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003624:
	Mem1391[a7_1012 + 64:word32] = Mem557[a7_1012 + 52:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000362A:
	Mem624[a7_1012 + 114:word32] = Mem557[a7_1012 + 64:word32]
	word32 d0_632 = (word32) Mem624[0x00002815 + (DPB(d0_1434, (byte) d5_1046, 0, 8) & 0x000000FF):byte]
	Mem635[a7_1012 + 132:word32] = d2_1043
	Mem637[a7_1012 + 52:word32] = d4_1469
	Mem639[a7_1012 + 74:byte] = (byte) d7
	word32 d0_1011 = d0_632 & 0x00000044
	branch (d0_632 & 0x00000044) == 0x00000000 l00003892
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000365C:
	branch Mem639[a7_1012 + 114:word32] - 0x0000000A != 0x00000000 l00003692
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003666:
	word32 d0_1375 = (word32) Mem639[0x00002815 + (DPB(d0_632 & 0x00000044, (byte) d5_1046, 0, 8) & 0x000000FF):byte]
	Mem1378[a7_1012 + 132:word32] = d2_1043
	Mem1380[a7_1012 + 52:word32] = d4_1469
	Mem1382[a7_1012 + 74:byte] = (byte) d7
	d0_1011 = d0_1375 & 0x00000004
	branch (d0_1375 & 0x00000004) == 0x00000000 l00003892
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003692:
	branch Mem639[a7_1012 + 114:word32] - 0x00000008 != 0x00000000 l000036B2
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000369C:
	Mem1360[a7_1012 + 132:word32] = d2_1043
	Mem1362[a7_1012 + 52:word32] = d4_1469
	Mem1364[a7_1012 + 74:byte] = (byte) d7
	branch d5_1046 - 0x00000037 > 0x00000000 l00003892
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000036B2:
	Mem1026[a7_1012 + 132:word32] = d2_1043
	Mem1028[a7_1012 + 52:word32] = d4_1469
	Mem1030[a7_1012 + 64:word32] = d6_2003
	Mem1032[a7_1012 + 74:byte] = (byte) d7
	branch d6_2003 - d3_1044 <u 0x00000000 l00003892
// DataOut: d0 d1 d2 d3 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000036C8:
	d7 = Mem1032[a7_1012 + 114:word32]
	word32 a4_1038 = Mem1032[a7_1012 + 64:word32]
// DataOut: d2 d3 d5 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000036D0:
	word32 d4_1112
	word32 a7_1053 = a7_1012 - 0x00000004
	Mem1055[a7_1053:word32] = d2_1043
	word32 v348_1059 = Mem1055[a7_1053:word32]
	Mem1064[a7_1053:word32] = d7 >> 31
	Mem1067[a7_1053 - 0x00000004:word32] = d7
	Mem1070[a7_1053 - 0x00000008:word32] = a1
	Mem1074[a7_1053 - 0x0000000C:word32] = Mem1070[a7_1053 + 52:word32]
	Mem1078[a7_1053 - 0x00000010:word32] = Mem1074[a7_1053 + 48:word32]
	Mem1081[a7_1053 - 0x00000014:word32] = d7
	Mem1083[a7_1053 - 0x00000018:word32] = d7 >> 31
	word32 d1_1084
	Mem1091[a7_1053 + 68:word32] = fn00003BB0(dwArg00, dwArg04, dwArg08, dwArg0C, out d1_1084)
	Mem1093[a7_1053 + 72:word32] = d1_1084
	branch ((word32) Mem1093[0x00002815 + (DPB(Mem1093[a7_1053:word32], (byte) d5_1046, 0, 8) & 0x000000FF):byte] & 0x00000004) == 0x00000000 l00003730
// DataOut: d2 d3 d5 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003726:
	d4_1112 = d5_1046 - 0x00000030
// DataOut: d2 d3 d4 d5 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003730:
	d4_1112 = 0
// DataOut: d2 d3 d4 d5 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003732:
	word32 d6_1161
	Mem1117[a7_1053:word32] = v348_1059
	Mem1125[a7_1053:word32] = Mem1117[a7_1053:word32]
	word32 d2_1127 = d4_1112 + Mem1125[a7_1053 + 72:word32]
	Mem1131[a7_1053 + 52:word32] = d2_1127
	Mem1135[a7_1053 - 0x00000004:word32] = d3_1044
	Mem1140[a7_1053 + 48:word32] = Mem1135[a7_1053 + 68:word32] + (d4_1112 >> 31) + (d2_1127 <u 0x00000000)
	word32 v368_1141 = Mem1140[a7_1053 - 0x00000004:word32]
	word32 v369_1144 = Mem1140[a7_1053:word32]
	branch ((word32) Mem1140[0x00002815 + (DPB(0xFFFFFFFF, (byte) d5_1046, 0, 8) & 0x000000FF):byte] & 0x00000001) == 0x00000000 l00003782
// DataOut: d2 d3 d5 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003778:
	d6_1161 = d5_1046 - 0x00000037
// DataOut: d2 d3 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003782:
	d6_1161 = 0
// DataOut: d2 d3 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003784:
	word32 d2_1210
	Mem1166[a7_1053:word32] = v369_1144
	Mem1174[a7_1053:word32] = Mem1166[a7_1053:word32]
	word32 d2_1176 = d6_1161 + Mem1174[a7_1053 + 52:word32]
	Mem1180[a7_1053 + 72:word32] = d2_1176
	Mem1184[a7_1053 - 0x00000004:word32] = v368_1141
	Mem1189[a7_1053 + 68:word32] = Mem1184[a7_1053 + 48:word32] + (d6_1161 >> 31) + (d2_1176 <u 0x00000000)
	word32 v378_1190 = Mem1189[a7_1053 - 0x00000004:word32]
	branch ((word32) Mem1189[0x00002815 + (DPB(0xFFFFFFFF, (byte) d5_1046, 0, 8) & 0x000000FF):byte] & 0x00000002) == 0x00000000 l000037D4
// DataOut: d3 d5 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000037CA:
	d2_1210 = d5_1046 - 0x00000057
// DataOut: d2 d3 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000037D4:
	d2_1210 = 0
// DataOut: d2 d3 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000037D6:
	word32 d0_1255
	Mem1215[a7_1053:word32] = d2_1210
	Mem1223[a7_1053:word32] = Mem1215[a7_1053:word32]
	word32 d2_1225 = d2_1210 + Mem1223[a7_1053 + 72:word32]
	Mem1229[a7_1053 + 52:word32] = d2_1225
	Mem1233[a7_1053 - 0x00000004:word32] = v378_1190
	Mem1237[a7_1053 + 48:word32] = Mem1233[a7_1053 + 68:word32] + (d2_1210 >> 31) + (d2_1225 <u 0x00000000)
	word32 a0_1244 = a2_1048 + 24
	word32 v388_1238 = Mem1237[a7_1053 - 0x00000004:word32]
	d2_1043 = Mem1237[a7_1053:word32]
	Mem1247[a0_1244:word32] = Mem1237[a0_1244:word32] | 1
	word32 a0_1248 = a2_1048 + 20
	word32 v391_1249 = Mem1247[a0_1248:word32] - 0x00000001
	Mem1250[a0_1248:word32] = v391_1249
	a7_1012 = a7_1053 + 0x00000004
	branch v391_1249 < 0x00000000 l00003828
// DataOut: d2 d3 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003810:
	a1 = a2_1048 + 4
	*a1Out = a1
	word32 a0_1324 = Mem1250[a1:word32]
	Mem1327[a7_1053:word32] = a2_1048
	Mem1331[a1:word32] = a0_1324 + 0x00000001
	d0_1255 = DPB(0x00000001, Mem1331[a0_1324:byte], 0, 8)
	a7_1012 = a7_1053 + 0x00000004
	a2_1048 = Mem1331[a7_1053:word32]
	d1 = (word32) (byte) d0_1255
// DataOut: d0 d1 d2 d3 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:1 a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003828:
	word32 a7_1312 = a7_1012 - 0x00000004
	Mem1314[a7_1312:word32] = a2_1048
	word32 d1_1316
	d0_1255 = fn00003C30(a6, dwArg00, out d1_1316, out a1, out a5)
	d1 = d0_1255
	a7_1012 = a7_1312 + 0x0004
// DataOut: d0 d1 d2 d3 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003834:
	Mem1263[a7_1012 + 52:word32] = Mem1250[a7_1012 + 52:word32] + 0x00000001
	word32 d0_1272 = (word32) Mem1263[0x00002815 + (DPB(d0_1255, (byte) d1, 0, 8) & 0x000000FF):byte]
	d5_1046 = d1
	d3_1044 = v388_1238 + 0x00000001
	d0_1011 = d0_1272 & 0x00000044
	branch (d0_1272 & 0x00000044) == 0x00000000 l00003892
// DataOut: d0 d1 d2 d3 d5 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003858:
	branch d7 != 0x0000000A l0000387C
// DataOut: d0 d1 d2 d3 d5 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003860:
	word32 d0_1303 = (word32) Mem1263[0x00002815 + (DPB(d0_1272 & 0x00000044, (byte) d1, 0, 8) & 0x000000FF):byte]
	d0_1011 = d0_1303 & 0x00000004
	branch (d0_1303 & 0x00000004) == 0x00000000 l00003892
// DataOut: d0 d1 d2 d3 d5 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000387C:
	branch d7 != 0x00000008 l0000388C
// DataOut: d0 d1 d2 d3 d5 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003884:
	branch d1 - 0x00000037 > 0x00000000 l00003892
// DataOut: d0 d1 d2 d3 d5 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000388C:
	branch a4_1038 - (v388_1238 + 0x00000001) >=u 0x00000000 l000036D0
// DataOut: d0 d1 d2 d3 d5 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003892:
	branch Mem639[a7_1012 + 110:word32] == 0x00000000 l000038C6
	d7 = DPB(d7, Mem639[a7_1012 + 74:byte], 0, 8)
	word32 d4_669 = Mem639[a7_1012 + 52:word32]
	d2_1043 = Mem639[a7_1012 + 132:word32]
	branch Mem639[a7_1012 + 110:word32] == 0x00000000 l000038C6
// DataOut: d0 d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000038A4:
	branch d3_1044 - 0x00000002 != 0x00000000 l000038C6
	branch d3_1044 - 0x00000002 != 0x00000000 l000038C6
// DataOut: d0 d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000038AC:
	branch d5_1046 - 0xFFFFFFFF == 0x00000000 l000038BE
	branch d5_1046 - 0xFFFFFFFF == 0x00000000 l000038BE
// DataOut: d0 d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000038B4:
	word32 a7_995 = a7_1012 - 0x00000004
	Mem997[a7_995:word32] = a2_1048
	Mem1000[a7_995 - 0x00000004:word32] = d5_1046
	fn00002B5C(bArg03, dwArg04)
	Mem1006[a7_995:word32] = a2_1048
	Mem1009[a7_995 - 0x00000004:word32] = d5_1046
	d0_1011 = fn00002B5C(bArg03, dwArg04)
	a7_1012 = a7_995 + 0x00000004
// DataOut: d0 d1 d2 d3 d4 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000038BE:
	d3_1044 = d3_1044 - 0x00000001
	d4_669 = d4_669 - 0x00000001
	d5_1046 = Mem639[a7_1012 + 110:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000038C6:
	branch d5_1046 - 0xFFFFFFFF == 0x00000000 l000038D8
// DataOut: d0 d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000038CE:
	word32 a7_967 = a7_1012 - 0x00000004
	Mem969[a7_967:word32] = a2_1048
	Mem972[a7_967 - 0x00000004:word32] = d5_1046
	d0_1011 = fn00002B5C(bArg03, dwArg04)
	a7_1012 = a7_967 + 0x00000004
// DataOut: d0 d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000038D8:
	d3_1044 = d3_1044 - 0x00000001
	d4_1469 = d4_669 - 0x00000001
	branch Mem639[a7_1012 + 73:byte] != 0x00 l00003A86
// DataOut: d0 d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000038E4:
	branch d3_1044 == 0x00000000 l00003A86
// DataOut: d0 d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000038EA:
	branch (byte) d7 - 0x75 != 0x00 l000039AC
// DataOut: d0 d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000038F2:
	word32 a7_863 = a7_1012 - 0x00000004
	Mem865[a7_863:word32] = d0_1011
	Mem872[a7_863 + 56:byte] = (byte) DPB(d0_1011, (byte) DPB(d0_1011, Mem865[a7_863 + 76:byte], 0, 8) - 0x01, 0, 8)
	a7_1012 = a7_863 + 0x00000004
	branch Mem872[a7_863 + 56:byte] == 0x00 l0000391C
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003906:
	byte v436_955 = Mem872[a7_863 + 56:byte] - 0x01
	Mem956[a7_863 + 56:byte] = v436_955
	branch v436_955 == 0x00 l00003974
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000390C:
	byte v437_959 = Mem956[a7_863 + 56:byte] - 0x66
	Mem960[a7_863 + 56:byte] = v437_959
	branch v437_959 == 0x00 l00003958
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003914:
	byte v438_963 = Mem960[a7_863 + 56:byte] - 0x04
	Mem964[a7_863 + 56:byte] = v438_963
	branch v438_963 == 0x00 l0000393C
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000391A:
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000391C:
	d2_1043 = (d2_1043 + 0x00000003 >>u 0x00000002 << 0x00000002) + 0x00000004
	word32 a0_949 = Mem872[d2_1043 + -4:word32]
	Mem951[a0_949 + 4:word32] = Mem872[a7_863 + 52:word32]
	Mem953[a0_949:word32] = Mem951[a7_863 + 48:word32]
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l0000393C:
	word32 d0_930 = d2_1043 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem938[Mem872[d0_930:word32]:word32] = Mem872[a7_863 + 52:word32]
	d2_1043 = d0_930 + 0x00000004
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003958:
	word32 d0_915 = d2_1043 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem923[Mem872[d0_915:word32]:word16] = (word16) Mem872[a7_863 + 52:word32]
	d2_1043 = d0_915 + 0x00000004
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003974:
	word32 d0_900 = d2_1043 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem908[Mem872[d0_900:word32]:byte] = (byte) Mem872[a7_863 + 52:word32]
	d2_1043 = d0_900 + 0x00000004
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003990:
	word32 d0_885 = d2_1043 + 0x00000003 >>u 0x00000002 << 0x00000002
	d0_1011 = Mem872[a7_863 + 52:word32]
	Mem893[Mem872[d0_885:word32]:word32] = d0_1011
	d2_1043 = d0_885 + 0x00000004
// DataOut: d0 d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000039AC:
	branch Mem639[a7_1012 + 110:word32] - 0x0000002D != 0x00000000 l000039C8
// DataOut: d0 d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000039B6:
	word32 v447_848 = a7_1012 + 44
	d1 = -Mem639[v447_848 + 0x00000004:word32]
	word32 v448_858 = a7_1012 + 52
	d0_1011 = -Mem639[v447_848:word32] - (d1 <u 0x00000000)
	a6 = Mem639[v448_858:word32]
	a7_1012 = Mem639[v448_858 + 0x00000004:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000039C8:
	Mem844[a7_1012 + 56:word32] = Mem639[a7_1012 + 48:word32]
	Mem846[a7_1012 + 52:word32] = Mem844[a7_1012 + 44:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000039D4:
	word32 a7_733 = a7_1012 - 0x00000004
	Mem735[a7_733:word32] = d0_1011
	Mem742[a7_733 + 48:byte] = (byte) DPB(d0_1011, (byte) DPB(d0_1011, Mem735[a7_733 + 76:byte], 0, 8) - 0x01, 0, 8)
	a7_1012 = a7_733 + 0x00000004
	branch Mem742[a7_733 + 48:byte] == 0x00 l000039FE
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000039E8:
	byte v457_825 = Mem742[a7_733 + 48:byte] - 0x01
	Mem826[a7_733 + 48:byte] = v457_825
	branch v457_825 == 0x00 l00003A50
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000039EE:
	byte v458_829 = Mem826[a7_733 + 48:byte] - 0x66
	Mem830[a7_733 + 48:byte] = v458_829
	branch v458_829 == 0x00 l00003A36
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000039F6:
	byte v459_833 = Mem830[a7_733 + 48:byte] - 0x04
	Mem834[a7_733 + 48:byte] = v459_833
	branch v459_833 == 0x00 l00003A1C
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000039FC:
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l000039FE:
	word32 d0_814 = d2_1043 + 0x00000003 >>u 0x00000002 << 0x00000002
	word32 a0_819 = Mem742[d0_814:word32]
	Mem821[a0_819 + 4:word32] = Mem742[a7_733 + 60:word32]
	Mem823[a0_819:word32] = Mem821[a7_733 + 56:word32]
	d2_1043 = d0_814 + 0x00000004
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003A1C:
	word32 d0_800 = d2_1043 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem808[Mem742[d0_800:word32]:word32] = Mem742[a7_733 + 60:word32]
	d2_1043 = d0_800 + 0x00000004
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003A36:
	word32 d0_785 = d2_1043 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem793[Mem742[d0_785:word32]:word16] = (word16) Mem742[a7_733 + 60:word32]
	d2_1043 = d0_785 + 0x00000004
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003A50:
	word32 d0_770 = d2_1043 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem778[Mem742[d0_770:word32]:byte] = (byte) Mem742[a7_733 + 60:word32]
	d2_1043 = d0_770 + 0x00000004
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003A6A:
	word32 d0_755 = d2_1043 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem763[Mem742[d0_755:word32]:word32] = Mem742[a7_733 + 60:word32]
	d2_1043 = d0_755 + 0x00000004
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003A82:
	Mem714[a7_1012 + 60:word32] = Mem639[a7_1012 + 60:word32] + 0x00000001
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003A86:
	a4_153 = a3_1991
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003A8C:
	word32 d0_218 = (word32) Mem0[0x00002815 + (DPB(0x00003EAC, Mem0[a4_153:byte], 0, 8) & 0x000000FF):byte]
	word32 d0_219 = d0_218 & 0x00000008
	branch (d0_218 & 0x00000008) == 0x00000000 l00003B18
// DataOut: d0 d1 d2 d3 d4 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> d6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003AA8:
	word32 d0_367
	word32 a0_357 = a2_1048 + 24
	Mem359[a0_357:word32] = Mem0[a0_357:word32] | 0x00000001
	word32 a0_360 = a2_1048 + 20
	word32 v88_361 = Mem359[a0_360:word32] - 0x00000001
	Mem362[a0_360:word32] = v88_361
	branch v88_361 < 0x00000000 l00003AD2
// DataOut: d0 d2 d3 d4 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> a5:<invalid> d6:<invalid> d7:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003ABA:
	a1 = a2_1048 + 4
	*a1Out = a1
	word32 a0_422 = Mem362[a1:word32]
	word32 a7_423 = a7_1012 - 0x00000004
	Mem425[a7_423:word32] = a2_1048
	Mem429[a1:word32] = a0_422 + 0x00000001
	d0_367 = DPB(d0_219, Mem429[a0_422:byte], 0, 8)
	a7_1012 = a7_423 + 0x00000004
	a2_1048 = Mem429[a7_423:word32]
	d1 = (word32) (byte) d0_367
// DataOut: d0 d1 d2 d3 d4 d7 a1 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> a5:<invalid> d6:<invalid> d7:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003AD2:
	word32 a7_410 = a7_1012 - 0x00000004
	Mem412[a7_410:word32] = a2_1048
	word32 d1_414
	d0_367 = fn00003C30(a6, dwArg00, out d1_414, out a1, out a5)
	d1 = d0_367
	a7_1012 = a7_410 + 0x0004
// DataOut: d0 d1 d2 d3 d4 d7 a1 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> a5:<invalid> d6:<invalid> d7:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003ADE:
	word32 d0_383 = (word32) Mem362[0x00002815 + (DPB(d0_367, (byte) d1, 0, 8) & 0x000000FF):byte]
	d5_1046 = d1
	d4_1469 = d4_1469 + 0x00000001
	d0_219 = d0_383 & 0x00000008
	branch (d0_383 & 0x00000008) != 0x00000000 l00003AA8
// DataOut: d0 d1 d2 d3 d4 d5 d7 a1 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> a5:<invalid> d6:<invalid> d7:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003B00:
	branch d1 - 0xFFFFFFFF == 0x00000000 l00003B12
// DataOut: d0 d1 d2 d4 d5 d7 a1 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> a5:<invalid> d6:<invalid> d7:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003B08:
	word32 a7_398 = a7_1012 - 0x00000004
	Mem400[a7_398:word32] = a2_1048
	Mem403[a7_398 - 0x00000004:word32] = d1
	d0_219 = fn00002B5C(bArg03, dwArg04)
	a7_1012 = a7_398 + 0x00000004
// DataOut: d0 d1 d2 d4 d5 d7 a1 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> a5:<invalid> d6:<invalid> d7:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003B12:
	d4_1469 = d4_1469 - 0x00000001
	d3_1044 = 1
// DataOut: d0 d1 d2 d3 d4 d5 d7 a1 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> a5:<invalid> d6:<invalid> d7:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003B18:
	word32 d0_267
	word32 a0_256 = a2_1048 + 24
	Mem258[a0_256:word32] = Mem0[a0_256:word32] | 0x00000001
	word32 a0_259 = a2_1048 + 20
	word32 v103_260 = Mem258[a0_259:word32] - 0x00000001
	Mem261[a0_259:word32] = v103_260
	branch v103_260 < 0x00000000 l00003B4A
// DataOut: d0 d1 d2 d3 d4 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> d6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003B2A:
	a1 = a2_1048 + 4
	*a1Out = a1
	word32 a0_318 = Mem261[a1:word32]
	word32 a7_319 = a7_1012 - 0x00000004
	Mem321[a7_319:word32] = a2_1048
	Mem325[a1:word32] = a0_318 + 0x00000001
	a2_1048 = Mem325[a7_319:word32]
	d0_267 = DPB(d0_219, Mem325[a0_318:byte], 0, 8)
	Mem333[a7_319:word32] = d1
	Mem338[a7_319 + 48:word32] = (word32) (byte) d0_267
	a7_1012 = a7_319 + 0x00000004
	d1 = Mem338[a7_319:word32]
// DataOut: d0 d1 d2 d3 d4 d7 a1 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> d6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003B4A:
	word32 a7_304 = a7_1012 - 0x00000004
	Mem306[a7_304:word32] = a2_1048
	d0_267 = fn00003C30(a6, dwArg00, out d1, out a1, out a5)
	Mem314[a7_304 + 48:word32] = d0_267
	a7_1012 = a7_304 + 0x0004
// DataOut: d0 d1 d2 d3 d4 d7 a1 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> d6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003B58:
	d5_1046 = Mem261[a7_1012 + 44:word32]
	d3_1044 = d3_1044 + 0x00000001
	d4_1469 = d4_1469 + 0x00000001
	branch (int32) (int16) (int16) (int8) DPB(d0_267, Mem261[a4_153:byte], 0, 8) - Mem261[a7_1012 + 44:word32] == 0x00000000 l00003B82
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> a5:<invalid> d6:<invalid> d7:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003B6C:
	branch d5_1046 == 0xFFFFFFFF l00003B7E
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> a5:<invalid> d6:<invalid> d7:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003B74:
	word32 a7_291 = a7_1012 - 0x00000004
	Mem293[a7_291:word32] = a2_1048
	Mem296[a7_291 - 0x00000004:word32] = d5_1046
	fn00002B5C(bArg03, dwArg04)
	a7_1012 = a7_291 + 0x00000004
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> a5:<invalid> d6:<invalid> d7:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003B7E:
	d3_1044 = d3_1044 - 0x00000001
	d4_1469 = d4_1469 - 0x00000001
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> a5:<invalid> d6:<invalid> d7:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003B82:
	a4_153 = a4_153 + 0x00000001
// DataOut: d1 d2 d3 d4 d5 d7 a1 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> a5:<invalid> d6:<invalid> d7:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003B84:
	branch d3_1044 == 0x00000000 l00003B8E
// DataOut: d1 d2 d4 d5 d7 a1 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> d6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003B88:
	branch Mem0[a4_153:byte] != 0x00 l00002BAE
// DataOut: d1 d2 d4 d5 d7 a1 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> d6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003B8E:
	word32 d0_123
	branch d5_1046 - 0xFFFFFFFF != 0x00000000 l00003BA0
	branch d5_1046 - 0xFFFFFFFF != 0x00000000 l00003BA0
// DataOut: d5 a1 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> d6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003B96:
	branch Mem0[a7_1012 + 60:word32] != 0x00000000 l00003BA0
	branch Mem0[a7_1012 + 60:word32] != 0x00000000 l00003BA0
// DataOut: d5 a1 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> d6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003B9C:
	d0_123 = d5_1046
// DataOut: d0 a1 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> d6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003BA0:
	d0_123 = Mem0[a7_1012 + 60:word32]
// DataOut: d0 a1 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d0:<invalid> d3:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> d6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

l00003BA4:
	return d0_123
// DataOut: d0 a1
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d0:<invalid> d3:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a3:<invalid> a6:<invalid> d6:<invalid> d7:<invalid> a5:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>

fn00002B8C_exit:
// DataOut: d0 a1
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d0:<invalid> d3:<invalid> d6:<invalid> d7:<invalid> a3:<invalid> a5:<invalid> a6:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> -148(fp):0 -144(fp):0x00000010 -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):a1 -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):0x00000000 -6(fp):0x00000010 12(fp):<invalid>



word32 fn00003BB0(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1
// Preserved: d2 d3 d4 d5 d6 a7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)
fn00003BB0_entry:
// DataOut: d7 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l00003BB0:
	word32 d0_24 = __swap(dwArg08)
	word32 d1_26 = __swap(dwArg10)
	word32 d4_29 = (word32) (word16) dwArg08 *u (word16) dwArg10
	word32 d1_32 = d1_26 *u (word16) d0_24
	word32 d2_38 = dwArg08 *u (word16) d1_26 + __swap(DPB(d4_29, (word16) d4_29 ^ (word16) d4_29, 0, 16)) + dwArg10 *u (word16) d0_24
	branch d2_38 >=u 0x00000000 l00003BE4
// DataOut: d1 d2 d4 d5 d6 d7 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +000C(32)

l00003BDE:
	d1_32 = d1_32 + 0x00010000
// DataOut: d1 d2 d4 d5 d6 d7 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 d5:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32) Stack +0004(32) Stack +000C(32)

l00003BE4:
	word32 d2_42 = __swap(d2_38)
	word32 d3_56 = __swap(dwArg0C) *u (word16) dwArg08
	word32 d3_61 = __swap(DPB(d3_56, (word16) d3_56 + (word16) (__swap(dwArg08) *u (word16) dwArg0C), 0, 16))
	word32 d3_72 = __swap(dwArg04) *u (word16) dwArg10
	word32 d3_77 = __swap(DPB(d3_72, (word16) d3_72 + (word16) (__swap(dwArg10) *u (word16) dwArg04), 0, 16))
	word32 d1_49
	*d1Out = DPB(d2_42, (word16) d4_29, 0, 16)
	return (word32) (word16) d2_42 + d1_32 + (dwArg0C *u (word16) dwArg08 + DPB(d3_61, (word16) d3_61 ^ (word16) d3_61, 0, 16)) + (dwArg04 *u (word16) dwArg10 + DPB(d3_77, (word16) d3_77 ^ (word16) d3_77, 0, 16))
// DataOut: d0 d1 d7 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 d5:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

fn00003BB0_exit:
// DataOut: d0 d1 d7 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp d5:d5 d6:d6 d0:<invalid> d1:<invalid> d2:d2 d3:d3 d4:d4 -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6



word32 fn00003C30(word32 a6, word32 dwArg04, ptr32 d1Out, ptr32 a1Out, ptr32 a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a6
// LiveOut: d0 d1 a1 a5
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: d2 d3 d4 d5 a2 a3 a4 a6 a7
fn00003C30_entry:
// DataOut: d6 d7 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00003C30:
	word32 d0_132
	word32 a1_28
	word32 a5_30
	word32 d1_31
	word32 a2_220
	*d1Out = fn00002388(out a1_28, out a2_220, out a5_30)
	branch a2_220 != 0x00000000 l00003C48
// DataOut: d1 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Local -0004(32)

l00003C42:
	d0_132 = -1
// DataOut: d0 d1 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00003C48:
	word32 v17_72 = 32 - (Mem0[a2_220 + 24:word32] & 42)
	branch v17_72 == 0x00000000 l00003C5A
// DataOut: d1 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00003C54:
	d0_132 = -1
// DataOut: d0 d1 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d5:32 d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00003C5A:
	word32 v19_78 = Mem0[a2_220 + 24:word32] | 1
	Mem79[a2_220 + 24:word32] = v19_78
	d0_132 = Mem79[a2_220 + 24:word32] & 0x00000200
	branch d0_132 == 0x00000000 l00003C72
// DataOut: d0 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d5:32 d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00003C6C:
	word32 a1_219
	word32 a5_221
	d0_132 = fn00003D2C(a2_220, out a1_219, out a2_220, out a5_221)
// DataOut: d0 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00003C72:
	branch Mem79[a2_220 + 28:word32] != 0x00000000 l00003C90
// DataOut: d0 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> d3:<invalid> d4:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00003C78:
	d0_132 = Mem79[a2_220 + 24:word32] & 4
	branch d0_132 == 0x00000000 l00003C88
// DataOut: d0 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> d3:<invalid> d4:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00003C80:
	Mem217[a2_220 + 28:word32] = 1
	d0_132 = 1
// DataOut: d0 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> d3:<invalid> d4:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00003C88:
	Mem213[a2_220 + 28:word32] = 0x00000400
// DataOut: d0 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> d3:<invalid> d4:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00003C90:
	branch Mem79[a2_220 + 8:word32] != 0x00000000 l00003CCC
// DataOut: d0 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> d3:<invalid> d4:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00003C96:
	word32 d4_177
	word32 a1_170 = a2_220 + 28
	branch (Mem79[a2_220 + 24:word32] & 0x00000080) == 0x00000000 l00003CAA
// DataOut: d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> d3:<invalid> d4:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00003CA6:
	d4_177 = 2
// DataOut: d4 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d5:32 a0:<invalid> a1:<invalid> d1:<invalid> d2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> d3:<invalid> d4:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00003CAA:
	d4_177 = 1
// DataOut: d4 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d5:32 a0:<invalid> a1:<invalid> d4:<invalid> d1:<invalid> d2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> d3:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00003CAC:
	Mem183[fp - 0x00000024:word32] = d4_177 + Mem79[a1_170:word32]
	word32 d1_186
	word32 a1_187
	word32 d0_188 = fn00001FB4(dwArg00, out d1_186, out a1_187)
	branch d0_188 != 0x00000000 l00003CC4
// DataOut: d0 d1 d6 d7 a1 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d5:32 a0:<invalid> a1:<invalid> d4:<invalid> d1:<invalid> d2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> d3:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

l00003CC0:
	d0_132 = -1
// DataOut: d0 d1 d6 d7 a1 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d5:32 a0:<invalid> a1:<invalid> d4:<invalid> a3:<invalid> d1:<invalid> d2:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> d3:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

l00003CC4:
	Mem197[a2_220 + 8:word32] = d0_188 + 1
// DataOut: d0 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d5:32 a0:<invalid> a1:<invalid> d4:<invalid> a3:<invalid> d1:<invalid> d2:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> d3:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

l00003CCC:
	word32 a0_100 = a2_220 + 4
	word32 v23_101 = Mem79[a2_220 + 8:word32]
	Mem102[a0_100:word32] = v23_101
	word32 d1_105 = Mem102[a2_220:word32]
	*d1Out = d1_105
	word32 a6_107 = Mem102[0x00003D78:word32]
	call a6_107 + -42 (retsize: 4; depth: 4)
	word32 a0_123 = a2_220 + 20
	Mem125[a0_123:word32] = d0_132
	word32 v26_126 = Mem125[a0_123:word32] - 0x00000001
	Mem127[a0_123:word32] = v26_126
	branch v26_126 >= 0x00000000 l00003D12
// DataOut: d0 d1 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d1:<invalid> a1:<invalid> d4:<invalid> a3:<invalid> d2:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> d3:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

l00003CF0:
	branch -1 - Mem127[a2_220 + 20:word32] != 0x00000000 l00003D02
// DataOut: d1 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d3:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

l00003CF8:
	word32 a0_163 = a2_220 + 24
	Mem166[a0_163:word32] = Mem127[a0_163:word32] | 8
// DataOut: d1 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:-1 d5:32 a0:<invalid> d3:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

l00003D02:
	word32 a0_156 = a2_220 + 24
	Mem159[a0_156:word32] = Mem127[a0_156:word32] | 16
// DataOut: d1 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d3:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

l00003D0A:
	Mem153[a2_220 + 20:word32] = 0x00000000
	d0_132 = -1
// DataOut: d0 d1 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d3:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

l00003D12:
	word32 a1_133 = a2_220 + 4
	*a1Out = a1_133
	word32 a0_134 = Mem127[a1_133:word32]
	Mem138[a1_133:word32] = a0_134 + 0x00000001
	d0_132 = DPB(d0_132, Mem138[a0_134:byte], 0, 8) & 0x000000FF
// DataOut: d0 d1 d6 d7 a1 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d3:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

l00003D26:
	return d0_132
// DataOut: d0 d1 d6 d7 a1 a5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d5:32 d1:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> a6:<invalid> a1:<invalid> a4:<invalid> d4:<invalid> a3:<invalid> a5:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

fn00003C30_exit:
// DataOut: d0 d1 d6 d7 a1 a5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> d5:<invalid> a3:<invalid> a4:<invalid> a6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> a5:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6



word32 fn00003D2C(word32 a2, ptr32 a1Out, ptr32 a2Out, ptr32 a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2
// LiveOut: d0 a1 a2 a5 a7
// Trashed: CVZNX d0 d1 d2 d3 d4 a0 a1 a2 a3 a4 a5 a6 a7
// Preserved:
fn00003D2C_entry:
	*a1Out = a1
	*a5Out = a5
// DataOut: d6 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00003D2C:
	word32 a2_41 = Mem0[0x00003ED8:word32]
	word32 a7_2 = fp - 0x00000004
	word32 d0_22 = a2_41
	branch a2_41 == 0x00000000 l00003D64
// DataOut: d0 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Local -0004(32)

l00003D3A:
	branch (Mem0[a2_41 + 24:word32] & 0x00000202) != 0x00000202 l00003D5A
// DataOut: d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -8(fp):<invalid> -4(fp):a2
// LocalsOut: Local -0004(32)

l00003D4C:
	branch Mem0[a2_41:word32] == 0x00000000 l00003D5A
// DataOut: d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -8(fp):<invalid> -4(fp):a2
// LocalsOut: Local -0004(32)

l00003D50:
	word32 a7_62 = a7_2 - 0x00000004
	Mem64[a7_62:word32] = a2_41
	word32 a1_67
	word32 a5_68
	fn00001F08(dwArg00, out a1_67, out a5_68)
	a7_2 = a7_62 + 0x0004
// DataOut: d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -8(fp):<invalid> -4(fp):a2
// LocalsOut: Local -0004(32)

l00003D5A:
	a2_41 = Mem0[a2_41 + 12:word32]
	d0_22 = a2_41
	branch a2_41 != 0x00000000 l00003D3A
// DataOut: d0 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -8(fp):<invalid> -4(fp):a2
// LocalsOut: Local -0004(32)

l00003D64:
	word32 a7_27 = a7_2 + 0x00000004
	return d0_22
	word32 a2_30
	*a2Out = Mem0[a7_27:word32]
	return d0_22
// DataOut: d0 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -8(fp):<invalid> -4(fp):a2

fn00003D2C_exit:
// DataOut: d0 d6 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -8(fp):<invalid> -4(fp):a2



