void fn00001000(word32 d0, word32 a0)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] d0:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5
// Preserved: a7 d7
fn00001000_entry:
l00001000:
l0000100A:
	a6_9 = Mem0[0x00000004<p32>:word32]
	d2_108 = d0
	a2_305 = a0
	branch Mem0[a6_9 + 20<i32>:word16] >=u 0x24<16> l00001036
l00001020:
	a0_13 = 0x00003E94<p32>
	d0_16 = 0xC<32>
l00001030:
	Mem19[a0_13:word32] = 0<32>
	a0_13 = a0_13 + 4<i32>
	d0_16 = d0_16 - 1<32>
	branch d0_16 != 0<32> l00001030
l00001036:
	Mem29[0x00003E94<p32>:word32] = fp
	Mem32[0x00003E98<p32>:word32] = a6_9
	d0_34 = FindTask(0<32>)
	d0_38 = OpenLibrary(0x000012BC<p32>, 0<32>)
	branch d0_38 == 0<32> l00001226
l00001226:
	Alert(0x38007<32>)
l00001056:
	Mem67[0x00003E9C<p32>:word32] = d0_38
	branch Mem67[d0_34 + 172<i32>:word32] != 0<32> l00001066
l00001066:
	a0_75 = a0
	d4_103 = 3<32>
l0000106A:
	branch Mem67[a0_725:byte] != 0x20<8> l00001072
l00001070:
	d4_103 = SEQ(SLICE(d4_103, word16, 16), SLICE(d4_103, word16, 0) + 1<16>)
l00001072:
	a0_75 = a0_725 + 1<i32>
	a0_725 = a0_75
	branch Mem67[a0_725:byte] != 0<8> l0000106A
l00001060:
	d4_103 = 2<32>
	d2_108 = 8<32>
l00001076:
	d0_106 = d4_103 << 2<32>
	d0_113 = d0_106 + d2_108
	d1_117 = 0x10001<32>
	d0_118 = AllocMem(d0_113 + 0x11<32>, 0x10001<32>)
	branch d0_118 == 0<32> l0000123E
l0000123E:
	CloseLibrary(Mem67[0x00003E9C<p32>:word32])
	Alert(0x10000<32>)
l0000125C:
	branch Mem163[d0_34 + 172<i32>:word32] != 0<32> l00001268
l00001262:
	fn0000126C(fn00001214(d0_34))
l00001268:
	return
l00001096:
	Mem180[d0_118:word32] = d0_113 + 0x11<32>
	Mem183[d0_118 + 12<i32>:word32] = d4_103 - 1<32>
	Mem186[d0_118 + 8<i32>:word32] = d0_118 + 16<i32> + d0_106
	Mem188[0<32>:word32] = 0<32>
	d0_189 = Mem188[d0_34 + 172<i32>:word32]
	branch d0_189 == 0<32> l00001190
l00001190:
	d0_195 = fn00001214(d0_34)
	Mem197[0x00003EA0<p32>:word32] = d0_195
	Mem198[0x00003EA4<p32>:word32] = d0_195
	Mem202[0<32>:word32] = 0<32>
	dwLoc0C_582 = d0_195
	branch Mem202[d0_195 + 36<i32>:word32] == 0<32> l000011B6
l000011AE:
	Enable()
l000011B6:
	d0_220 = Supervisor(d0_118)
	Mem221[d0_118 + 4<i32>:word32] = d0_220
	branch d0_220 != 0<32> l000011D2
l000011D2:
	Mem227[0x00003EA8<p32>:word32] = d0_220
	Mem228[0x00003EAC<p32>:word32] = d0_220
	Mem229[0x00003EB0<p32>:word32] = d0_220
	Mem231[d0_34 + 156<i32>:word32] = d0_220
	Mem232[d0_34 + 160<i32>:word32] = d0_220
	d0_236 = Mem232[(d0_220 << 2<32>) + 8<i32>:word32]
	branch d0_236 == 0<32> l000011F4
l000011F0:
	Mem241[d0_34 + 164<i32>:word32] = d0_236
l000011F4:
l000011CC:
l000011CE_thunk_fn0000127C:
	fn0000127C(0x14<32>, out a5_723)
	return
l000010B6:
	d0_266 = Mem188[(d0_189 << 2<32>) + 16<i32>:word32]
	a1_269 = Mem188[d0_118 + 8<i32>:word32]
	a0_274 = (d0_266 << 2<32>) + 1<i32>
	Mem277[a0_274 + CONVERT(Mem188[d0_266 << 2<32>:byte], uint8, uint32):byte] = 0<8>
	Mem278[d0_118 + 16<i32>:word32] = a0_274
	a6_279 = d0_118 + 20<i32>
	d3_280 = 1<32>
	a0_287 = a0 + d2_108
l000010DA:
	a0_287 = a0_287 - 1<i32>
	branch Mem278[a0_287:byte] >u 0x20<8> l000010E2
l000010DE_1:
	v30_295 = SLICE(d2_108, word16, 0)
	d2_108 = SEQ(SLICE(d2_108, word16, 16), v30_295 - 1<i16>)
	branch v30_295 != 0<16> l000010DA
l000010E2:
	Mem300[a0_287 + 1<i32>:byte] = 0<8>
l000010E6:
	v32_307 = Mem306[a2_305:byte]
	a2_305 = a2_305 + 1<i32>
	d1_117 = SEQ(SLICE(d1_117, word24, 8), v32_307)
	branch v32_307 == 0<8> l00001148
l000010EA:
	branch v32_307 == 0x20<8> l000010E6
l000010F0:
	branch v32_307 == 9<8> l000010E6
l000010F6:
	branch d3_280 == Mem306[d0_118 + 12<i32>:word32] l00001148
l000010FC:
	Mem329[a6_279:word32] = a1_269
	a6_279 = a6_279 + 4<i32>
	d3_280 = SEQ(SLICE(d3_280, word16, 16), SLICE(d3_280, word16, 0) + 1<16>)
	branch v32_307 == 0x22<8> l0000111A
l0000111A:
	v51_340 = Mem339[a2_305:byte]
	v52_343 = SLICE(d1_117, word24, 8)
	a2_305 = a2_305 + 1<i32>
	d1_117 = SEQ(v52_343, v51_340)
	branch v51_340 == 0<8> l00001148
l0000111E:
	branch v51_340 == 0x22<8> l00001116
l00001124:
	branch v51_340 != 0x2A<8> l00001144
l0000112A:
	v55_355 = Mem339[a2_305:byte]
	a2_305 = a2_305 + 1<i32>
	d1_117 = SEQ(v52_343, v55_355)
	branch (v55_355 & 0xDF<8>) != 0x4E<8> l0000113C
l0000113C:
	branch (v55_355 & 0xDF<8>) != 0x45<8> l00001144
l00001142:
	d1_117 = 0x1B<32>
l00001138:
	d1_117 = 0xA<32>
l00001144:
	Mem384[a1_269:byte] = SLICE(d1_117, byte, 0)
	a1_269 = a1_269 + 1<i32>
l00001106:
	Mem390[a1_269:byte] = v32_307
	a1_269 = a1_269 + 1<i32>
l00001108:
	v41_397 = Mem396[a2_305:byte]
	a2_305 = a2_305 + 1<i32>
	d1_117 = SEQ(SLICE(d1_117, word24, 8), v41_397)
	branch v41_397 == 0<8> l00001148
l00001148:
	Mem408[a1_269:byte] = 0<8>
	Mem413[a6_279:word32] = 0<32>
	Mem438[0x00003EA8<p32>:word32] = execPrivate4()
	d0_439 = execPrivate5()
	Mem440[0x00003EAC<p32>:word32] = d0_439
	dwLoc0C_582 = d0_118 + 16<i32>
	dwLoc10 = d3_280
	branch Mem440[Mem440[0x00003E98<p32>:word32] + 20<i32>:word16] <u 0x24<16> l0000117A
l00001172:
	v65_450 = Mem440[d0_34 + 224<i32>:word32]
	Mem451[0x00003EB0<p32>:word32] = v65_450
	branch v65_450 != 0<32> l0000117E
l0000117A:
	Mem458[0x00003EB0<p32>:word32] = d0_439
l0000117E:
	branch Mem464[d0_34 + 8<i32>:byte] != 0xD<8> l000011F8
l000011F8:
	a0_472 = Mem470[d0_34 + 58<i32>:word32]
l00001186:
	a0_475 = Mem464[d0_34 + 176<i32>:word32]
	a0_472 = a0_475 + 4<i32> - Mem464[a0_475:word32]
l00001202:
	Mem487[0x00003EBC<p32>:word32] = a0_472
	Mem494[0x00003EC0<p32>:word32] = fp - 16<i32>
	fn00001354(dwLoc10, dwLoc0C_582)
l00001212_thunk_fn0000127C:
	fn0000127C(0<32>, out a5_724)
	return
fn00001000_exit:
l0000110C:
	branch v41_397 == 0x20<8> l00001116
l00001116:
	Mem530[a1_269:byte] = 0<8>
	a1_269 = a1_269 + 1<i32>
l00001112:
	Mem537[a1_269:byte] = v41_397
	a1_269 = a1_269 + 1<i32>


word32 fn00001214(word32 a3)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  a3:[0..31]
// LiveOut: d0:[0..31]-fn00001000
// Trashed: a0 d0
// Preserved: a7
fn00001214_entry:
l00001214:
	WaitPort(a3 + 92<i32>)
	return GetMsg(a3 + 92<i32>)
fn00001214_exit:


void fn0000126C(word32 a2)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  a2:[0..31]
// LiveOut:
// Trashed: a1 d0
// Preserved: a7
fn0000126C_entry:
l0000126C:
	Forbid()
	ReplyMsg(a2)
	return
fn0000126C_exit:


word32 fn00001278(word32 dwArg04, word32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000012D0
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5:[0..31]-fn000012D0 d0:[0..31]-fn000012D0
// Trashed: CVZN a1 a2 a4 a5 a6 d0 d1 d2
// Preserved: a7
fn00001278_entry:
l00001278:
l00001278_thunk_fn0000127C:
	d0_14 = fn0000127C(dwArg04, out a5_11)
	a5Out = a5_11
	return d0_14
fn00001278_exit:


word32 fn0000127C(word32 d2, word32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
//      fn00001278
// MayUse:  d2:[0..31]
// LiveOut: a5:[0..31]-fn00001278 d0:[0..31]-fn00001278
// Trashed: CVZN a1 a2 a4 a5 a6 a7 d0 d1
// Preserved:
fn0000127C_entry:
l0000127C:
	a7_6 = Mem0[0x00003E94<p32>:word32]
	v8_11 = Mem0[a7_6 - 4<32>:word32]
	v6_8 = Mem0[a7_6 - 8<32>:word32]
	branch Mem0[v8_11 + 4<i32>:word32] == 0<32> l0000129E
l00001296:
	execPrivate1()
l0000129E:
	CloseLibrary(Mem0[0x00003E9C<p32>:word32])
	branch v6_8 == 0<32> l000012B0
l000012AE:
	fn0000126C(v6_8)
l000012B0:
	FreeMem(v8_11, Mem0[v8_11:word32])
	a5Out = v8_11
	return d2
fn0000127C_exit:


word32 fn000012D0(word32 dwArg04, word32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000131C
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5:[0..31]-fn0000131C d0:[0..31]-fn0000131C
// Trashed: CVZNX a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7 d2
fn000012D0_entry:
l000012D0:
	branch false l00001308
l000012E2:
	d2_18 = 1<32>
	branch Mem11[0x00003FE0<p32>:word32] == 0<32> l000012F6
l000012EA:
	d2_18 = d2_18 + 1<32>
	branch Mem11[0x00003FDC<p32> + (d2_18 << 2<32>):word32] != 0<32> l000012EA
l000012F6:
	d2_35 = d2_18 - 1<32>
	branch d2_35 == 0<32> l00001308
l000012FA:
	call Mem11[0x00003FDC<p32> + (d2_35 << 2<32>):word32] (retsize: 4;)
		uses: d0:d2_38 << 2<32>,Mem:Mem11,Stack +0014:dwArg04
	d2_35 = d2_35 - 1<32>
	branch d2_35 != 0<32> l000012FA
l00001308:
	d0_67 = fn00001278(dwArg04, out a5_65)
	a5Out = a5_65
	return d0_67
fn000012D0_exit:


word32 fn0000131C(word32 dwArg04, word32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001354
//      fn00001390
//      fn00002424
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5:[0..31]-fn00002424 d0:[0..31]-fn00001390
// Trashed: CVZN a1 a4 a5 a6 d0 d1
// Preserved: X a2 a3 a7
fn0000131C_entry:
l0000131C:
	branch Mem8[0x00003EC4<p32>:word32] != 0<32> l0000134E
l00001328:
	a3_13 = Mem8[0x00003FEC<p32>:word32]
	Mem15[0x00003EC4<p32>:word32] = 1<32>
	branch a3_13 == 0<32> l00001346
l0000133A:
	call Mem15[a3_13 + 4<i32>:word32] (retsize: 4;)
		uses: d0:a3_27,Mem:Mem15,Stack +0010:dwArg04
	a3_13 = Mem15[a3_13:word32]
	branch a3_13 != 0<32> l0000133A
l00001346:
	d0 = fn000012D0(dwArg04, out a5)
l0000134E:
	a5Out = a5
	return d0
fn0000131C_exit:


void fn00001354(word32 dwArg04, word32 dwArg08)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7
fn00001354_entry:
l00001354:
	a3_19 = 0x00003FD4<p32>
	branch false l00001372
l00001366:
	branch Mem8[0x00003FD4<p32>:word32] == 0<32> l00001372
l0000136A:
	call Mem8[a3_19:word32] (retsize: 4;)
		uses: Mem:Mem8,Stack +0010:dwArg04,Stack +0014:dwArg08
	a3_19 = a3_19 + 4<i32>
	branch Mem8[a3_19:word32] != 0<32> l0000136A
l00001372:
	fn0000131C(fn00001390(), out a5_91)
	return
fn00001354_exit:


word32 fn00001390()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001354
// MayUse: 
// LiveOut: d0:[0..31]-fn00001354
// Trashed: CVZNX a0 a1 a4 a5 a6 d0 d1
// Preserved: a7 d2 d3
fn00001390_entry:
l00001390:
	fn00002BDC(fn00003E04(0x00001438<p32>), 0x00001458<p32>)
	dwLoc1C_133 = 0x00001438<p32>
	d2_107 = 1<32>
l000013F4:
	branch d2_107 <= dwLoc0C l000013BA
l000013BA:
	fn00002BDC(fn00003E04(0x00001410<p32>), 0x00001420<p32>)
	fn00001498(fn0000145C(dwLoc08), 0x00001424<p32>)
	dwLoc1C_133 = 0x00001410<p32>
	d2_107 = d2_107 + 1<32>
l000013FA:
	Mem110[0<32>:word32] = 0<32>
	return fn0000131C(dwLoc1C_133, out a5_153)
fn00001390_exit:


word32 fn0000145C(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
//      fn0000145C
// MayUse:  Stack +0004:[0..31]
// LiveOut: d0:[0..31]-fn0000145C
// Trashed: CVZNX d0 d1
// Preserved: a7 d2
fn0000145C_entry:
l0000145C:
	branch dwArg04 <= 2<32> l0000148C
l0000148C:
	d0_12 = 1<32>
l0000146C:
	d0_12 = fn0000145C(dwArg04 - 1<32>) + fn0000145C(dwArg04 - 2<32>)
l0000148E:
	return d0_12
fn0000145C_exit:


void fn00001498(word32 d0, word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  d0:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn00001498_entry:
l00001498:
	fn000014B4(d0, Mem8[0x00003FF4<p32>:word32], dwArg04, fp + 8<i32>)
	return
fn00001498_exit:


void fn000014B4(word32 d0, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001498
// MayUse:  d0:[8..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4 d5 d6 d7
fn000014B4_entry:
l000014B4:
	d3_1499 = dwArg0C
	a5_1598 = dwArg04
	a4_1951 = dwArg08
	d6_1629 = 0<32>
	branch Mem36[dwArg08:byte] == 0<8> l00001DFA
l000014D0:
	branch Mem46[a4_1951:byte] != 0x25<8> l00001DD4
l00001DD4:
	a4_1951 = a4_1951 + 1<i32>
	d0 = fn00001E34(CONVERT(Mem53[a4_1951:byte], int8, int32), a5_1598, out a0_3314, out a5_1598)
	branch d0 != 0xFFFFFFFF<32> l00001DF2
l00001DF2:
	d6_1629 = d6_1629 + 1<32>
l00001DEE:
l000014D8:
	dwLoc30_2202 = 0<32>
	d5_269 = 0xFFFFFFFF<32>
	d4_396 = 0x69<32>
	a3_1289 = fp + -36<i32>
	d7_1016 = 0<32>
	dwLoc0A_2204 = 0<32>
	a2_140 = a4_1951 + 1<i32>
	d2_135 = 0<32>
l000014F6:
	d1_100 = 0<32>
l000014F8:
	branch Mem108[0x00001E0C<p32> + d1_100:byte] != Mem108[a2_140:byte] l0000151C
l0000151C:
	d1_100 = d1_100 + 1<32>
	branch d1_100 <u 5<32> l000014F8
l0000150A:
	d1_128 = 1<32> << d1_100
	d0 = d1_128
	d2_135 = d2_135 | d1_128
	a2_140 = a2_140 + 1<32>
l00001526:
	branch d1_100 <u 5<32> l000014F6
l0000152E:
	dwLoc28_2207 = d2_135
	branch Mem147[a2_140:byte] != 0x2A<8> l0000156C
l0000156C:
	a0_1465 = 0x000028B1<p32> + (SEQ(SLICE(d0, word24, 8), Mem147[a2_140:byte]) & 0xFF<32>)
	d0_162 = CONVERT(Mem147[a0_1465:byte], uint8, uint32)
	d0_163 = d0_162 & 4<32>
	branch (d0_162 & 4<32>) == 0<32> l000015D8
l00001588:
	d2_168 = 0<32>
l0000158C:
	d1_182 = __swap(0xA<32>) *u32 SLICE(d2_168, word16, 0)
	d0_191 = SLICE(d2_168, word16, 0) *u32 0xA<32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_182, word16, 16), SLICE(d1_182, word16, 0) + SLICE(__swap(d2_168), word16, 0) *u 0xA<16>)), word16, 16), 0<16>)
	a2_140 = a2_140 + 1<i32>
	a0_1465 = 0x000028B1<p32> + (SEQ(SLICE(d0_191, word24, 8), Mem176[a2_140:byte]) & 0xFF<32>)
	d1_202 = CONVERT(Mem176[a2_140:byte], int8, int32)
	d0_216 = CONVERT(Mem176[a0_1465:byte], uint8, uint32)
	d1_100 = d1_202 - 0x30<32>
	d2_168 = d1_202 - 0x30<32> + d0_191
	d0_163 = d0_216 & 4<32>
	branch (d0_216 & 4<32>) != 0<32> l0000158C
l000015D4:
	dwLoc30_2202 = d2_168
l00001538:
	d0_163 = __align(d3_1499 + 3<32>, 4<i32>)
	a2_140 = a2_140 + 1<32>
	d3_1499 = d0_163 + 4<32>
	a0_1465 = d0_163 + 4<32>
	v32_239 = Mem147[d0_163:word32]
	branch v32_239 >= 0<32> l00001564
l00001564:
	dwLoc30_2202 = v32_239
l00001550:
	d0_163 = -v32_239
	dwLoc28_2207 = d2_135 | 4<32>
	dwLoc30_2202 = d0_163
l000015D8:
	branch Mem261[a2_140:byte] != 0x2E<8> l0000166C
l000015E0:
	a2_140 = a2_140 + 1<32>
	branch Mem261[a2_140:byte] != 0x2A<8> l00001606
l00001606:
	a0_1465 = 0x000028B1<p32> + (SEQ(SLICE(d0_163, word24, 8), Mem261[a2_140:byte]) & 0xFF<32>)
	d5_269 = 0<32>
	branch (CONVERT(Mem261[a0_1465:byte], uint8, uint32) & 4<32>) == 0<32> l0000166C
l00001624:
	d1_296 = __swap(0xA<32>) *u32 SLICE(d5_269, word16, 0)
	d0_305 = SLICE(d5_269, word16, 0) *u32 0xA<32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_296, word16, 16), SLICE(d1_296, word16, 0) + SLICE(__swap(d5_269), word16, 0) *u 0xA<16>)), word16, 16), 0<16>)
	a2_140 = a2_140 + 1<i32>
	d1_316 = CONVERT(Mem290[a2_140:byte], int8, int32)
	a0_1465 = 0x000028B1<p32> + (SEQ(SLICE(d0_305, word24, 8), Mem290[a2_140:byte]) & 0xFF<32>)
	d1_100 = d1_316 - 0x30<32>
	d5_269 = d1_316 - 0x30<32> + d0_305
	branch (CONVERT(Mem290[a0_1465:byte], uint8, uint32) & 4<32>) != 0<32> l00001624
l000015E8:
	d0_341 = __align(d3_1499 + 3<32>, 4<i32>)
	a2_140 = a2_140 + 1<32>
	d3_1499 = d0_341 + 4<32>
	a0_1465 = d0_341 + 4<32>
	v39_346 = Mem261[d0_341:word32]
	branch v39_346 < 0<32> l0000166C
l00001600:
	d5_269 = v39_346
l0000166C:
	branch Mem359[a2_140:byte] == 0x68<8> l00001690
l00001672:
	branch Mem359[a2_140:byte] == 0x6C<8> l00001690
l00001678:
	branch Mem359[a2_140:byte] == 0x4C<8> l00001690
l0000167E:
	branch Mem359[a2_140:byte] == 0x6A<8> l00001690
l00001684:
	branch Mem359[a2_140:byte] == 0x7A<8> l00001690
l0000168A:
	branch Mem359[a2_140:byte] != 0x74<8> l00001696
l00001690:
	a2_140 = a2_140 + 1<i32>
	d4_396 = CONVERT(Mem359[a2_140:byte], int8, int32)
l00001696:
	branch d4_396 != 0x68<32> l000016A8
l0000169E:
	branch Mem359[a2_140:byte] != 0x68<8> l000016A8
l000016A4:
	d4_396 = 2<32>
	a2_140 = a2_140 + 1<32>
l000016A8:
	branch d4_396 != 0x6C<32> l000016BA
l000016B0:
	branch Mem359[a2_140:byte] != 0x6C<8> l000016BA
l000016B6:
	d4_396 = 1<32>
	a2_140 = a2_140 + 1<32>
l000016BA:
	branch d4_396 != 0x6A<32> l000016C4
l000016C2:
	d4_396 = 1<32>
l000016C4:
	branch d4_396 != 0x7A<32> l000016CE
l000016CC:
	d4_396 = 0x6C<32>
l000016CE:
	branch d4_396 != 0x74<32> l000016D8
l000016D6:
	d4_396 = 0x69<32>
l000016D8:
	v93_458 = Mem359[a2_140:byte]
	a2_1918 = a2_140 + 1<i32>
	d1_1108 = SEQ(SLICE(d1_100, word24, 8), v93_458)
	branch v93_458 == 0x25<8> l00001B60
l00001B60:
	a3_1289 = 0x00001E08<p32>
	dwLoc0A_2204 = 1<32>
	d5_1498 = 0<32>
l000016E4:
	branch v93_458 == 0x58<8> l00001732
l000016EA:
	branch v93_458 == 0x63<8> l00001AE0
l00001AE0:
	branch d4_396 != 0x6C<32> l00001AFC
l00001AFC:
	d0_521 = __align(d3_1499 + 3<32>, 4<i32>)
	d3_1499 = d0_521 + 4<32>
	a0_1465 = d0_521 + 4<32>
l00001AE8:
	d0_548 = __align(d3_1499 + 3<32>, 4<i32>)
	d3_1499 = d0_548 + 4<32>
	a0_1465 = d0_548 + 4<32>
l00001B0E:
	dwLoc0A_2204 = 1<32>
	d5_1498 = 0<32>
l000016F2:
	branch v93_458 == 0x64<8> l00001732
l000016F8:
	branch v93_458 == 0x69<8> l00001732
l000016FE:
	branch v93_458 == 0x6E<8> l00001B72
l00001B72:
	branch d4_396 != 1<32> l00001B94
l00001B94:
	branch d4_396 != 0x6C<32> l00001BB2
l00001BB2:
	branch d4_396 != 0x68<32> l00001BD0
l00001BD0:
	branch d4_396 != 2<32> l00001BEE
l00001BEE:
	d0_590 = __align(d3_1499 + 3<32>, 4<i32>)
	a0_1465 = Mem571[d0_590:word32]
	Mem610[a0_1465:word32] = d6_1629
	d3_1499 = d0_590 + 4<32>
l00001BD8:
	d0_617 = __align(d3_1499 + 3<32>, 4<i32>)
	a0_1465 = Mem571[d0_617:word32]
	Mem624[a0_1465:byte] = SLICE(d6_1629, byte, 0)
	d3_1499 = d0_617 + 4<32>
l00001BBA:
	d0_631 = __align(d3_1499 + 3<32>, 4<i32>)
	a0_1465 = Mem571[d0_631:word32]
	Mem638[a0_1465:word16] = SLICE(d6_1629, word16, 0)
	d3_1499 = d0_631 + 4<32>
l00001B9C:
	d0_645 = __align(d3_1499 + 3<32>, 4<i32>)
	a0_1465 = Mem571[d0_645:word32]
	Mem651[a0_1465:word32] = d6_1629
	d3_1499 = d0_645 + 4<32>
l00001B7A:
	d0_658 = __align(d3_1499 + 3<32>, 4<i32>)
	a0_1465 = Mem571[d0_658:word32]
	Mem664[a0_1465 + 4<i32>:word32] = d6_1629
	Mem665[a0_1465:word32] = 0<32>
	d3_1499 = d0_658 + 4<32>
l00001C02:
	d5_1498 = 0<32>
	dwLoc30_2202 = 0<32>
l0000170A:
	branch v93_458 <=u 0x70<8> l00001732
l00001718:
	branch v93_458 == 0x73<8> l00001B1C
l00001B1C:
	d0_696 = __align(d3_1499 + 3<32>, 4<i32>)
	a3_1289 = Mem571[d0_696:word32]
	d3_1499 = d0_696 + 4<32>
	a0_1465 = d0_696 + 4<32>
	a1_702 = a3_1289
	dwLoc0A_2204 = 0<32>
	branch d5_269 == 0<32> l00001B3E
l00001B38:
	branch d5_269 <=u 0<32> l00001B5A
l00001B3E:
	branch Mem703[a3_1289:byte] == 0<8> l00001B5A
l00001B42:
	d0_731 = 0<32>
l00001B46:
	d0_731 = d0_731 + 1<32>
	a1_702 = a1_702 + 1<32>
	branch d5_269 <=u 0<32> l00001B52
l00001B4E:
	branch d5_269 <=u d0_731 l00001B56
l00001B52:
	branch Mem703[a1_702:byte] != 0<8> l00001B46
l00001B56:
	dwLoc0A_2204 = d0_731
l00001B5A:
	d5_1498 = 0<32>
l00001724:
	branch v93_458 == 0x75<8> l00001732
l0000172A:
	branch v93_458 != 0x78<8> l00001C0A
l00001C0A:
	branch v93_458 != 0<8> l00001C10
l00001C0E:
	a2_1918 = a2_1918 - 1<32>
l00001C10:
	a3_1289 = a4_1951
	dwLoc0A_2204 = a2_1918 - a4_1951
	d5_1498 = 0<32>
	dwLoc30_2202 = 0<32>
l00001732:
	branch v93_458 != 0x70<8> l00001744
l00001738:
	d4_396 = 0x6C<32>
	d1_1108 = 0x78<32>
	dwLoc28_2207 = dwLoc28_2207 | 1<32>
l00001744:
	branch SLICE(d1_1108, byte, 0) == 0x64<8> l00001752
l0000174A:
	branch SLICE(d1_1108, byte, 0) != 0x69<8> l0000189C
l0000189C:
	branch d4_396 != 1<32> l000018C0
l000018C0:
	branch d4_396 != 0x6C<32> l000018E2
l000018E2:
	d0_841 = __align(d3_1499 + 3<32>, 4<i32>)
	v213_847 = Mem846[d0_841:word32]
	d3_1093 = d0_841 + 4<32>
	wLoc32_2249 = SLICE(v213_847, word16, 0) (alias)
	wLoc34_2271 = SLICE(v213_847, word16, 16) (alias)
	dwLoc38_2244 = 0<32>
l000018C8:
	d0_858 = __align(d3_1499 + 3<32>, 4<i32>)
	v205_863 = Mem846[d0_858:word32]
	d3_1093 = d0_858 + 4<32>
	wLoc32_2249 = SLICE(v205_863, word16, 0) (alias)
	wLoc34_2271 = SLICE(v205_863, word16, 16) (alias)
	dwLoc38_2244 = 0<32>
l000018A4:
	d0_873 = __align(d3_1499 + 3<32>, 4<i32>)
	v196_878 = Mem846[d0_873 + 4<32>:word32]
	d3_1093 = d0_873 + 8<32>
	wLoc32_2249 = SLICE(v196_878, word16, 0) (alias)
	wLoc34_2271 = SLICE(v196_878, word16, 16) (alias)
	dwLoc38_2244 = Mem879[d0_873:word32]
l000018FA:
	dwLoc34_3308 = SEQ(wLoc34_2271, wLoc32_2249) (alias)
	branch d4_396 != 0x68<32> l00001916
l00001902:
	dwLoc38_2244 = 0<32>
	dwLoc34_3308 = SEQ(SLICE(CONVERT(wLoc32_2249, uint16, uint32), word24, 8), SLICE(wLoc32_2249, byte, 0)) (alias)
l00001916:
	bLoc31_2256 = SLICE(dwLoc34_3308, byte, 24) (alias)
	qwLoc38_3311 = SEQ(dwLoc38_2244, dwLoc34_3308) (alias)
	branch d4_396 != 2<32> l00001932
l0000191E:
	qwLoc38_3311 = CONVERT(bLoc31_2256, uint8, uint64) (alias)
l00001932:
	dwLoc38_2279 = SLICE(qwLoc38_3311, word32, 0) (alias)
	dwLoc34_2269 = SLICE(qwLoc38_3311, word32, 32) (alias)
	bLoc44_2266 = SLICE(d1_1108, byte, 0)
	branch (dwLoc28_2207 & 1<32>) == 0<32> l000019D0
l00001942:
	branch SLICE(d1_1108, byte, 0) != 0x6F<8> l0000197E
l00001948:
	branch d5_269 != 0<32> l00001972
l0000194C:
	branch dwLoc38_2279 == 0<32> l0000197E
l00001972:
	d7_1016 = 1<32>
l0000197E:
	branch SLICE(d1_1108, byte, 0) == 0x78<8> l0000198E
l00001984:
	bLoc44_2266 = SLICE(d1_1108, byte, 0)
	branch SLICE(d1_1108, byte, 0) != 0x58<8> l000019D0
l0000198E:
	bLoc44_2266 = SLICE(d1_1108, byte, 0)
	branch dwLoc38_2279 == 0<32> l000019D0
l000019B8:
	Mem1069[fp + -6<i32> + d7_1016:byte] = 0x30<8>
	d7_1068 = d7_1016 + 1<32>
	Mem1074[fp + -6<i32> + d7_1068:byte] = SLICE(d1_1108, byte, 0)
	d7_1016 = d7_1068 + 1<32>
	bLoc44_2266 = SLICE(d1_1108, byte, 0)
l00001752:
	branch d4_396 != 1<32> l00001778
l00001778:
	branch d4_396 != 0x6C<32> l000017A4
l000017A4:
	d0_1091 = __align(d3_1499 + 3<32>, 4<i32>)
	d0_1096 = Mem846[d0_1091:word32]
	d3_1093 = d0_1091 + 4<32>
	wLoc3A_2299 = SLICE(d0_1096, word16, 0) (alias)
	d0_1103 = d0_1096 >> 0x1F<32>
	dwLoc40_2298 = d0_1096 >> 0x1F<32>
	branch d4_396 != 0x68<32> l000017EA
l000017CE:
	d1_1120 = CONVERT(wLoc3A_2299, int16, int32)
	dwLoc40_2298 = d1_1120 >> 0x1F<32>
	d1_1108 = SEQ(SLICE(d0_1096 >> 0x1F<32>, word16, 16), wLoc3A_2299)
	d0_1103 = d1_1108
	d0_1096 = SEQ(SLICE(d1_1120, word24, 8), SLICE(wLoc3A_2299, byte, 0)) (alias)
l000017EA:
	bLoc39_2304 = SLICE(d0_1096, byte, 24) (alias)
	qwLoc40_3297 = SEQ(dwLoc40_2298, d0_1096) (alias)
	branch d4_396 != 2<32> l00001810
l000017F2:
	d1_1155 = CONVERT(bLoc39_2304, int8, int32)
	d1_1108 = SEQ(SLICE(d0_1103, word24, 8), bLoc39_2304)
	qwLoc40_3297 = SEQ(d1_1155 >> 0x1F<32>, d1_1155) (alias)
l00001780:
	d0_1175 = __align(d3_1499 + 3<32>, 4<i32>)
	d0_1179 = Mem846[d0_1175:word32]
	d3_1093 = d0_1175 + 4<32>
	qwLoc40_3297 = SEQ(d0_1179 >> 0x1F<32>, d0_1179) (alias)
l0000175A:
	d0_1196 = __align(d3_1499 + 3<32>, 4<i32>)
	d3_1093 = d0_1196 + 8<32>
	qwLoc40_3297 = Mem1202[d0_1196:word64] (alias)
l00001810:
	dwLoc40_2324 = SLICE(qwLoc40_3297, word32, 0) (alias)
	dwLoc3C_2319 = SLICE(qwLoc40_3297, word32, 32) (alias)
	v127_1209 = SLICE(d1_1108, byte, 0)
	branch dwLoc40_2324 >= 0<32> l0000185A
l0000185A:
	branch (dwLoc28_2207 & 0x10<32>) == 0<32> l00001874
l00001874:
	branch (dwLoc28_2207 & 8<32>) == 0<32> l00001888
l0000187C:
	d7_1016 = 1<32>
l00001866:
	d7_1016 = 1<32>
l00001888:
	dwLoc34_2269 = dwLoc3C_2319
	dwLoc38_2279 = dwLoc40_2324
	bLoc44_2266 = v127_1209
l000019D0:
	a3_1289 = fp + -14<i32>
	branch bLoc44_2266 == 0x78<8> l000019E4
l000019DE:
	branch bLoc44_2266 != 0x58<8> l000019EE
l000019EE:
	branch bLoc44_2266 != 0x6F<8> l000019FE
l000019FE:
	dwLoc40_2338 = 0xA<32>
l000019F4:
	dwLoc40_2338 = 8<32>
l00001A06:
	dwLoc44_2341 = dwLoc40_2338
l000019E4:
	dwLoc44_2341 = 0x10<32>
l00001A0C:
	branch bLoc44_2266 == 0x58<8> l00001A1E
l00001A1E:
	a6_1329 = 0x00001E24<p32>
l00001A18:
	a6_1329 = 0x00001E14<p32>
l00001A22:
	d3_1392 = 0<32>
	d6_d7_3304 = SEQ(dwLoc38_2279, dwLoc34_2269) (alias)
l00001A44:
	a3_1289 = a3_1289 - 1<i32>
	Mem1447[a3_1289:byte] = Mem1423[a6_1329 + fn0000279C(d6_d7_3304, SEQ(dwLoc44_2341 >> 0x1F<32>, dwLoc44_2341)):byte]
	d0_d1_3307 = fn00002454(d6_d7_3304, SEQ(dwLoc44_2341 >> 0x1F<32>, dwLoc44_2341), out a0_1465)
	d3_1392 = d3_1392 + 1<32>
	d6_d7_3304 = d0_d1_3307 (alias)
	branch SLICE(d0_d1_3307, word32, 32) != 0<32> l00001A44
l00001AB2:
	dwLoc0A_2204 = d3_1392
	d5_1498 = d5_269
	d3_1499 = d3_1093
	branch d5_269 != 0xFFFFFFFF<32> l00001AD4
l00001AD4:
	dwLoc28_2207 = dwLoc28_2207 & 0xFFFFFFFD<32>
l00001ACE:
	d5_1498 = 0<32>
l00001C20:
	branch d5_1498 >u dwLoc0A_2204 l00001C2E
l00001C2E:
	dwLoc44_2429 = d5_1498
l00001C26:
	dwLoc44_2429 = dwLoc0A_2204
l00001C32:
	d0_1549 = dwLoc44_2429 + d7_1016
	branch d0_1549 <u dwLoc30_2202 l00001C56
l00001C56:
	dwLoc44_2472 = dwLoc30_2202 - d0_1549
l00001C50:
	dwLoc44_2472 = 0<32>
l00001C66:
	branch (dwLoc28_2207 & 2<32>) == 0<32> l00001CA8
l00001C74:
	d2_1590 = 0<32>
	branch d7_1016 == 0<32> l00001CA8
l00001C7A:
	branch fn00001E34(CONVERT(Mem1599[fp + -6<i32> + d2_1590:byte], int8, int32), a5_1598, out a0_1465, out a5_1598) != 0xFFFFFFFF<32> l00001CA0
l00001CA0:
	d2_1590 = d2_1590 + 1<32>
	d6_1629 = d6_1629 + 1<32>
	branch d7_1016 >u d2_1590 l00001C7A
l00001CA8:
	branch (dwLoc28_2207 & 4<32>) != 0<32> l00001CFA
l00001CB0:
	d2_1645 = 0<32>
	branch dwLoc44_2472 == 0<32> l00001CFA
l00001CB8:
l00001CC0:
	branch (dwLoc28_2207 & 2<32>) == 0<32> l00001CCE
l00001CCE:
	a0_1668 = SEQ(SLICE(a0_1465, word16, 16), 0x20<16>)
l00001CC8:
	a0_1668 = SEQ(SLICE(a0_1465, word16, 16), 0x30<16>)
l00001CD2:
	branch fn00001E34(a0_1668, a5_1598, out a0_1465, out a5_1598) != 0xFFFFFFFF<32> l00001CEA
l00001CEA:
	d2_1645 = d2_1645 + 1<32>
	d6_1629 = d6_1629 + 1<32>
	branch dwLoc44_2472 >u d2_1645 l00001CC0
l00001CF2:
l00001CFA:
	branch (dwLoc28_2207 & 2<32>) != 0<32> l00001D36
l00001D02:
	d2_1718 = 0<32>
	branch d7_1016 == 0<32> l00001D36
l00001D08:
	branch fn00001E34(CONVERT(Mem1730[fp + -6<i32> + d2_1718:byte], int8, int32), a5_1598, out a0_3315, out a5_1598) != 0xFFFFFFFF<32> l00001D2E
l00001D2E:
	d2_1718 = d2_1718 + 1<32>
	d6_1629 = d6_1629 + 1<32>
	branch d7_1016 >u d2_1718 l00001D08
l00001D36:
	d2_1770 = dwLoc0A_2204
	branch d5_1498 <=u dwLoc0A_2204 l00001D64
l00001D40:
	branch fn00001E34(0x00000030<p32>, a5_1598, out a0_3316, out a5_1598) != 0xFFFFFFFF<32> l00001D5C
l00001D5C:
	d2_1770 = d2_1770 + 1<32>
	d6_1629 = d6_1629 + 1<32>
	branch d5_1498 >u d2_1770 l00001D40
l00001D64:
	d2_1815 = 0<32>
	branch dwLoc0A_2204 == 0<32> l00001D9A
l00001D6C:
l00001D70:
	branch fn00001E34(CONVERT(Mem1826[a3_1289 + d2_1815:byte], int8, int32), a5_1598, out a0_3317, out a5_1598) != 0xFFFFFFFF<32> l00001D92
l00001D92:
	d2_1815 = d2_1815 + 1<32>
	d6_1629 = d6_1629 + 1<32>
	branch dwLoc0A_2204 >u d2_1815 l00001D70
l00001D9A:
	d0 = dwLoc28_2207 & 4<32>
	branch d0 == 0<32> l00001DD0
l00001DA2:
	d2_1872 = 0<32>
	branch dwLoc44_2472 == 0<32> l00001DD0
l00001DAA:
l00001DAE:
	d0 = fn00001E34(0x00000020<p32>, a5_1598, out a0_3318, out a5_1598)
	branch d0 != 0xFFFFFFFF<32> l00001DC8
l00001DC8:
	d2_1872 = d2_1872 + 1<32>
	d6_1629 = d6_1629 + 1<32>
	branch dwLoc44_2472 >u d2_1872 l00001DAE
l00001DD0:
	a4_1951 = a2_1918
l00001DF4:
	branch Mem1953[a4_1951:byte] != 0<8> l000014D0
l00001DFA:
l00001DC4:
l00001D8E:
l00001D56:
l00001D28:
l00001CE4:
l00001C9A:
l00001DFC:
	return
fn000014B4_exit:
l0000183A:


word32 fn00001E34(word32 dwArg04, word32 dwArg08, word32 & a0Out, word32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000014B4
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0:[16..31]-fn000014B4 a5:[0..31]-fn000014B4 d0:[0..31]-fn000014B4
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a7 d2
fn00001E34_entry:
l00001E34:
	Mem17[dwArg08 + 24<i32>:word32] = Mem11[dwArg08 + 24<i32>:word32] | 2<32>
	v13_19 = Mem17[dwArg08 + 20<i32>:word32] - 1<32>
	Mem20[dwArg08 + 20<i32>:word32] = v13_19
	branch v13_19 < 0<32> l00001E78
l00001E50:
	branch dwArg04 != 0xA<32> l00001E62
l00001E56:
	branch (Mem20[dwArg08 + 24<i32>:word32] & 0x80<32>) != 0<32> l00001E78
l00001E78:
	d1_53 = fn00001E90(dwArg04, dwArg08, out a0_109, out a5)
l00001E62:
	a0_109 = Mem20[dwArg08 + 4<i32>:word32]
	Mem64[dwArg08 + 4<i32>:word32] = a0_109 + 1<32>
	Mem67[a0_109:byte] = SLICE(dwArg04, byte, 0)
	d1_53 = CONVERT(Mem67[a0_109:byte], uint8, uint32)
l00001E86:
	a0Out = a0_109
	a5Out = a5
	return d1_53
fn00001E34_exit:


word32 fn00001E90(word32 dwArg04, word32 dwArg08, word32 & a0Out, word32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001E34
//      fn00003E04
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0:[16..31]-fn00001E34 a5:[0..31]-fn00001E34 d0:[0..31]-fn00003E04
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a4 a6 a7 d2 d3 d4 d5 d6
fn00001E90_entry:
l00001E90:
	a5_137 = fn00002424()
	branch dwArg08 != 0<32> l00001EAC
l00001EAC:
	branch (Mem29[dwArg08 + 24<i32>:word32] & 0x49<32>) == 0x40<32> l00001EBE
l00001EBE:
	branch Mem29[dwArg08 + 28<i32>:word32] != 0<32> l00001EDC
l00001EC4:
	branch (Mem29[dwArg08 + 24<i32>:word32] & 4<32>) == 0<32> l00001ED4
l00001ED4:
	Mem65[dwArg08 + 28<i32>:word32] = 0x400<32>
l00001ECC:
	Mem70[dwArg08 + 28<i32>:word32] = 1<32>
l00001EDC:
	branch Mem75[dwArg08 + 8<i32>:word32] != 0<32> l00001F1C
l00001F1C:
	branch Mem75[dwArg08:word32] == 0<32> l00001F76
l00001F76:
	d0_117 = 0<32>
l00001F20:
	branch (Mem75[dwArg08 + 24<i32>:word32] & 0x80<32>) == 0<32> l00001F4C
l00001F2C:
	branch dwArg04 != 0xA<32> l00001F4C
l00001F4C:
	branch Mem75[dwArg08 + 4<i32>:word32] - Mem75[dwArg08 + 8<i32>:word32] == execPrivate3() l00001F7A
l00001F6A:
	Mem116[dwArg08 + 24<i32>:word32] = Mem75[dwArg08 + 24<i32>:word32] | 0x10<32>
	a0 = dwArg08 + 24<i32>
	d0_117 = 0xFFFFFFFF<32>
l00001F32:
	a0_122 = Mem75[dwArg08 + 4<i32>:word32]
	Mem125[dwArg08 + 4<i32>:word32] = a0_122 + 1<32>
	Mem127[a0_122:byte] = SLICE(dwArg04, byte, 0)
	d0_117 = fn00001FA4(dwArg08, out a0, out a5_137)
l00001EE2:
	branch (Mem75[dwArg08 + 24<i32>:word32] & 0x80<32>) == 0<32> l00001EF6
l00001EF6:
	d4_153 = 1<32>
l00001EF2:
	d4_153 = 2<32>
l00001EF8:
	d0_175 = fn00002050(d4_153 + Mem75[dwArg08 + 28<i32>:word32], out a0)
	branch d0_175 != 0<32> l00001F12
l00001F12:
	Mem190[dwArg08 + 8<i32>:word32] = d0_175 + 1<i32>
l00001F7A:
	Mem199[dwArg08 + 24<i32>:word32] = Mem197[dwArg08 + 24<i32>:word32] | 2<32>
	a0 = Mem199[dwArg08 + 8<i32>:word32]
	Mem206[a0:byte] = SLICE(dwArg04, byte, 0)
	Mem209[dwArg08 + 4<i32>:word32] = Mem206[dwArg08 + 8<i32>:word32] + 1<32>
	Mem213[dwArg08 + 20<i32>:word32] = Mem209[dwArg08 + 28<i32>:word32] - 1<32>
	d0_117 = 0<32>
l00001F0C:
	d0_117 = 0xFFFFFFFF<32>
l00001EB8:
	d0_117 = 0xFFFFFFFF<32>
l00001EA6:
	d0_117 = 0xFFFFFFFF<32>
l00001F9E:
	a0Out = a0
	a5Out = a5_137
	return d0_117
fn00001E90_exit:


word32 fn00001FA4(word32 dwArg04, word32 & a0Out, word32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001E90
//      fn00002B98
//      fn00003DC8
// MayUse:  Stack +0004:[0..31]
// LiveOut: a0:[16..31]-fn00001E90 a5:[0..31]-fn00001E90 d0:[0..31]-fn00001E90
// Trashed: CVZNX a0 a1 a4 a5 d0 d1
// Preserved: a2 a6 a7 d2 d3 d4
fn00001FA4_entry:
l00001FA4:
	a5_23 = fn00002424()
	branch dwArg04 != 0<32> l00001FBA
l00001FBA:
	branch Mem17[dwArg04 + 28<i32>:word32] != 0<32> l00001FD8
l00001FC0:
	branch (Mem17[dwArg04 + 24<i32>:word32] & 4<32>) == 0<32> l00001FD0
l00001FD0:
	Mem43[dwArg04 + 28<i32>:word32] = 0x400<32>
l00001FC8:
	Mem48[dwArg04 + 28<i32>:word32] = 1<32>
l00001FD8:
	branch Mem53[dwArg04 + 8<i32>:word32] != 0<32> l00001FE2
l00001FE2:
	branch (Mem53[dwArg04 + 24<i32>:word32] & 2<32>) == 0<32> l00002028
l00001FEA:
	branch Mem53[dwArg04:word32] == 0<32> l00002018
l00002018:
	d0_105 = 0<32>
l00001FEE:
	branch Mem53[dwArg04 + 4<i32>:word32] - Mem53[dwArg04 + 8<i32>:word32] == execPrivate3() l0000201C
l0000201C:
	Mem85[dwArg04 + 4<i32>:word32] = Mem53[dwArg04 + 8<i32>:word32]
	Mem87[dwArg04 + 20<i32>:word32] = Mem85[dwArg04 + 28<i32>:word32]
l00002028:
	Mem96[dwArg04 + 24<i32>:word32] = Mem94[dwArg04 + 24<i32>:word32] & 0xFFFFFFFC<32>
	a0 = dwArg04 + 24<i32>
	d0_105 = 0<32>
l0000200C:
	Mem104[dwArg04 + 24<i32>:word32] = Mem53[dwArg04 + 24<i32>:word32] | 0x10<32>
	a0 = dwArg04 + 24<i32>
	d0_105 = 0xFFFFFFFF<32>
l00001FDE:
	d0_105 = 0<32>
l00001FB6:
	d0_105 = 0xFFFFFFFF<32>
l00002032:
	a0Out = a0
	a5Out = a5_23
	return d0_105
fn00001FA4_exit:


word32 fn00002050(word32 dwArg04, word32 & a0Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001E90
//      fn00003CCC
// MayUse:  Stack +0004:[0..31]
// LiveOut: a0:[16..31]-fn00001E90 d0:[0..31]-fn00001E90
// Trashed: CVZN a0 a1 d0 d1
// Preserved: X a7 d2
fn00002050_entry:
l00002050:
	branch dwArg04 != 0<32> l0000205E
l0000205E:
	branch Mem5[0x00003ECC<p32>:word32] != 0<32> l00002082
l00002066:
	a0_15 = Mem5[0x00003EC8<p32>:word32]
	Mem21[0<32>:word32] = 0<32>
	Mem35[0x00003ECC<p32>:word32] = fn00002344(dwLoc10, a0_15, a0_15, out a0)
l00002082:
	branch Mem40[0x00003ECC<p32>:word32] != 0<32> l0000208E
l0000208E:
	d0_59 = fn00002220(Mem51[0x00003ECC<p32>:word32], dwArg04 + 4<32>, out a0)
	branch d0_59 != 0<32> l000020AC
l000020AC:
	Mem74[d0_59:word32] = dwArg04
	a0 = d0_59 + 4<i32>
	d0_112 = d0_59 + 4<i32>
l000020A8:
	d0_112 = 0<32>
l0000208A:
	d0_112 = 0<32>
l0000205A:
	d0_112 = 0<32>
l000020B4:
	a0Out = a0
	return d0_112
fn00002050_exit:


void fn000020BC(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn000020BC_entry:
l000020BC:
	branch dwArg04 == 0<32> l000020E6
l000020C6:
	branch Mem0[0x00003ECC<p32>:word32] == 0<32> l000020E6
l000020CE:
	fn00002184(Mem21[0x00003ECC<p32>:word32], dwArg04 - 4<i32>, Mem0[dwArg04 - 4<i32>:word32] + 4<32>)
l000020E6:
	return
fn000020BC_exit:


void fn00002184(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000020BC
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2
fn00002184_entry:
l00002184:
	branch Mem20[Mem20[0x00003E98<p32>:word32] + 20<i32>:word16] <u 0x27<16> l000021B4
l000021B4:
	branch dwArg04 == 0<32> l00002218
l000021B8:
	branch dwArg08 == 0<32> l00002218
l000021BC:
	a3_38 = dwArg08 + -12<i32>
	branch dwArg0C >=u Mem20[dwArg04 + 20<i32>:word32] l000021FE
l000021C8:
	a2_42 = dwArg04
l000021CA:
	a2_42 = Mem20[a2_42:word32]
	branch Mem20[a2_42:word32] == 0<32> l00002218
l000021D0:
	branch Mem20[a2_42 + 8<i32>:byte] == 0<8> l000021CA
l000021D6:
	branch dwArg08 <u Mem20[a2_42 + 20<i32>:word32] l000021CA
l000021DC:
	branch dwArg08 >=u Mem20[a2_42 + 24<i32>:word32] l000021CA
l000021E2:
	Deallocate(a2_42, dwArg08, dwArg0C)
	branch Mem20[a2_42 + 28<i32>:word32] != Mem20[dwArg04 + 16<i32>:word32] l00002218
l000021FC:
	a3_38 = a2_42
l000021FE:
	Remove(a3_38)
	a3_78 = a3_38 - 4<i32>
	FreeMem(a3_78, Mem20[a3_78:word32])
l000021A2:
	FreePooled(dwArg08, dwArg04)
l00002218:
	return
fn00002184_exit:


word32 fn00002220(word32 dwArg04, word32 dwArg08, word32 & a0Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002050
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0:[16..31]-fn00002050 d0:[0..31]-fn00002050
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4
fn00002220_entry:
l00002220:
	a0_117 = Mem26[0x00003E98<p32>:word32]
	branch Mem26[a0_117 + 20<i32>:word16] <u 0x27<16> l0000224C
l0000224C:
	a3_124 = 0<32>
	branch dwArg04 == 0<32> l0000233C
l00002254:
	branch dwArg08 == 0<32> l0000233C
l0000225A:
	branch dwArg08 >=u Mem26[dwArg04 + 20<i32>:word32] l0000230E
l0000230E:
	d0_52 = AllocMem(dwArg08 + 0x10<32>, Mem26[dwArg04 + 12<i32>:word32])
	a3_124 = d0_52
	branch d0_52 == 0<32> l0000233C
l00002328:
	Mem59[d0_52:word32] = dwArg08 + 0x10<32>
	AddTail(dwArg04, d0_52 + 4<i32>)
	Mem66[d0_52 + 0xC<32>:word32] = 0<32>
	a0_117 = dwArg04
	a3_124 = d0_52 + 0x10<32>
l00002262:
	a5_170 = Mem26[dwArg04:word32]
l00002264:
	branch Mem26[a5_170:word32] == 0<32> l00002286
l00002286:
	d3_81 = Mem26[dwArg04 + 16<i32>:word32] + 0x28<32>
	d0_86 = AllocMem(d3_81, Mem26[dwArg04 + 12<i32>:word32])
	a3_124 = d0_86
	branch d0_86 == 0<32> l0000233C
l000022A4:
	Mem93[d0_86:word32] = d3_81
	Mem95[d0_86 + 12<i32>:byte] = 0xA<8>
	Mem98[d0_86 + 20<i32>:word32] = d0_86 + 40<i32>
	Mem99[d0_86 + 24<i32>:word32] = d0_86 + 40<i32>
	Mem101[Mem99[d0_86 + 20<i32>:word32]:word32] = 0<32>
	a2_102 = Mem101[d0_86 + 20<i32>:word32]
	Mem105[a2_102 + 4<32>:word32] = Mem101[dwArg04 + 16<i32>:word32]
	Mem108[d0_86 + 32<i32>:word32] = Mem105[a2_102 + 4<32>:word32]
	Mem111[d0_86 + 28<i32>:word32] = Mem108[d0_86 + 32<i32>:word32] + Mem108[d0_86 + 20<i32>:word32]
	AddHead(dwArg04, d0_86 + 4<i32>)
	a0_117 = d0_86 + 4<i32>
	a3_124 = Allocate(d0_86 + 4<i32>, dwArg08)
l00002268:
	branch Mem26[a5_170 + 8<i32>:byte] == 0<8> l00002282
l0000226E:
	d0_132 = Allocate(a5_170, dwArg08)
	a0_117 = a5_170
	a3_124 = d0_132
	branch d0_132 != 0<32> l000022F2
l000022F2:
	branch (Mem141[dwArg04 + 12<i32>:word32] & 0x10000<32>) == 0<32> l0000233C
l000022FE:
	a2_148 = a3_124
	d2_151 = dwArg08 + 7<32> >>u 3<32>
l00002304:
	Mem154[a2_148:word32] = 0<32>
	a2_155 = a2_148 + 4<i32>
	Mem156[a2_155:word32] = 0<32>
	a2_148 = a2_155 + 4<i32>
	d2_151 = d2_151 - 1<32>
	branch d2_151 != 0<32> l00002304
l0000230C:
l0000233C:
	d0_164 = a3_124
l00002282:
	a5_170 = Mem26[a5_170:word32]
l0000223A:
	a0_117 = dwArg04
	d0_164 = AllocPooled(dwArg08, dwArg04)
l0000233E:
	a0Out = a0_117
	return d0_164
fn00002220_exit:


word32 fn00002344(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 & a0Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002050
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: a0:[16..31]-fn00002050 d0:[0..31]-fn00002050
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a6 a7 d2 d3
fn00002344_entry:
l00002344:
	a0_17 = Mem14[0x00003E98<p32>:word32]
	branch Mem14[a0_17 + 20<i32>:word16] <u 0x27<16> l00002372
l00002372:
	a1_21 = 0<32>
	branch dwArg08 <u dwArg0C l000023AC
l00002378:
	d0_30 = AllocMem(0x18<32>, 0<32>)
	a1_21 = d0_30
	branch d0_30 == 0<32> l000023AC
l0000238E:
	Mem38[d0_30:word32] = d0_30 + 4<i32>
	Mem39[d0_30 + 4<i32>:word32] = 0<32>
	Mem40[d0_30 + 8<i32>:word32] = d0_30
	Mem42[d0_30 + 12<i32>:word32] = dwArg04
	Mem45[d0_30 + 16<i32>:word32] = dwArg08 + 7<32> & 0xFFFFFFF8<32>
	Mem46[d0_30 + 20<i32>:word32] = dwArg0C
	a0_17 = d0_30 + 4<i32>
l000023AC:
	d0_51 = a1_21
l0000235E:
	d0_51 = CreatePrivatePool(dwArg04, dwArg08, dwArg0C)
l000023AE:
	a0Out = a0_17
	return d0_51
fn00002344_exit:


void fn000023B4(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a6 a7 d2
fn000023B4_entry:
l000023B4:
	branch Mem11[Mem11[0x00003E98<p32>:word32] + 20<i32>:word16] <u 0x27<16> l000023D8
l000023D8:
	branch dwArg04 == 0<32> l0000241C
l000023DC:
	d0_23 = RemHead(dwArg04)
	a2_24 = d0_23
	branch d0_23 == 0<32> l0000240E
l000023EE:
	a2_31 = a2_24 - 4<i32>
	FreeMem(a2_31, Mem11[a2_31:word32])
	d0_40 = RemHead(dwArg04)
	a2_24 = d0_40
	branch d0_40 != 0<32> l000023EE
l0000240E:
	FreeMem(dwArg04, 0x18<32>)
l000023CA:
	DeletePrivatePool(dwArg04)
l0000241C:
	return
fn000023B4_exit:


word32 fn00002424()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001E90
//      fn00001FA4
//      fn00003CCC
// MayUse: 
// LiveOut: a5:[0..31]-fn00001E90
// Trashed: CVZN a1 a4 a5 d0 d1
// Preserved: a6 a7
fn00002424_entry:
l00002424:
	branch (SetSignal(0<32>, 0x1000<32>) & 0x1000<32>) == 0<32> l0000244E
l00002442:
	fn0000131C(0x00000014<p32>, out a5)
l0000244E:
	return a5
fn00002424_exit:


ui64 fn00002454(word64 qwArg04, word64 qwArg0C, word32 & a0Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000014B4
// MayUse:  Stack +0004:[0..63] Stack +000C:[0..63]
// LiveOut: a0:[16..31]-fn000014B4 Sequence d0:d1:[0..63]-fn000014B4
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
fn00002454_entry:
	dwArg08 = SLICE(qwArg04, word32, 32)
	dwArg04 = SLICE(qwArg04, word32, 0)
	dwArg10 = SLICE(qwArg0C, word32, 32)
	dwArg0C = SLICE(qwArg0C, word32, 0)
l00002454:
	d1_100 = dwArg08
	a0_20 = dwArg08
	d3_174 = dwArg10
	branch dwArg0C != 0<32> l000024AA
l000024AA:
	branch dwArg04 >=u dwArg0C l000024B4
l000024B4:
	d4_31 = 0x18<32>
	d6_32 = __rol<word32,word32>(dwArg0C, 8<32>)
	branch SLICE(d6_32, byte, 0) != 0<8> l000024D2
l000024BE:
	d4_31 = 0x10<32>
	d6_32 = __rol<word32,word32>(d6_32, 8<32>)
	branch SLICE(d6_32, byte, 0) != 0<8> l000024D2
l000024C6:
	d4_31 = 8<32>
	d6_32 = __rol<word32,word32>(d6_32, 8<32>)
	branch SLICE(d6_32, byte, 0) != 0<8> l000024D2
l000024CE:
	d4_31 = 0<32>
	d6_32 = SEQ(SLICE(d6_32, word24, 8), SLICE(dwArg0C, byte, 0))
l000024D2:
	d4_65 = SEQ(SLICE(d4_31, word24, 8), SLICE(d4_31, byte, 0) + Mem17[0x00003ED0<p32> + CONVERT(SLICE(d6_32, word16, 0) & 0xFF<16>, int16, int32):byte])
	d5_67 = 0x20<32> - d4_65
	branch d5_67 != 0<32> l000024F2
l000024F2:
	d0_89 = fn00002558(dwArg04 >>u d4_65, SLICE(qwArg04 >>u d4_65, word32, 0), SLICE(qwArg0C >>u d4_65, word32, 0), out d1_90, out d2_379)
	d3_76 = dwArg10 << d5_67
	d5_105 = __swap(d0_89)
	d6_107 = __swap(d3_76)
	d2_111 = __swap(d0_89 *u32 SLICE(d3_76, word16, 0))
	d3_106 = d3_76 *u32 SLICE(d5_105, word16, 0)
	d5_109 = d5_105 *u32 SLICE(d6_107, word16, 0)
	v38_v35_257 = CONVERT(SLICE(d2_111, word16, 0), uint16, uint32) + SEQ(SLICE(d5_109, word16, 0), SLICE(d3_106, word16, 0))
	d4_108 = d0_89 *u32 SLICE(d6_107, word16, 0)
	v42_v40_258 = CONVERT(SLICE(v38_v35_257, word16, 0), uint16, uint32) + SEQ(SLICE(v38_v35_257, word16, 16), SLICE(d4_108, word16, 0))
	d6_86 = dwArg08 << d5_67
	d2_128 = __swap(SEQ(SLICE(d2_111, word16, 16), SLICE(v42_v40_258, word16, 0)))
	a0_20 = d6_86
	d1_100 = d0_89
	v49_138 = d1_90 - ((__swap(SEQ(SLICE(d3_106, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d4_108, word16, 16), 0<16>))) + SEQ(SLICE(d5_109, word16, 16), SLICE(v42_v40_258, word16, 16)))
	branch v49_138 <u 0<32> l0000254E
l00002548:
	branch v49_138 != 0<32> l00002550
l0000254A:
	branch d6_86 >=u d2_128 l00002550
l0000254E:
	d1_100 = d0_89 - 1<32>
l000024E6:
	branch dwArg0C <u dwArg04 l000024EE
l000024EA:
	branch dwArg10 >u dwArg08 l000024AE
l000024EE:
l000024AE:
l0000246C:
	branch dwArg04 >=u dwArg10 l0000247E
l0000247E:
	branch dwArg10 != 0<32> l0000248A
l00002482:
	d3_174 = CONVERT(1<32> /u SLICE(dwArg10, uint16, 0), int16, int32)
l0000248A:
	d0_186 = fn00002558(0<32>, dwArg04, d3_174, out d1_187, out d2_188)
	d1_100 = fn00002558(d1_187, dwArg08, d2_188, out d1_377, out d2_378)
	d0_210 = d0_186
l00002470:
	d1_100 = fn00002558(dwArg04, dwArg08, dwArg10, out d1_375, out d2_376)
l00002550:
	d0_210 = 0<32>
l00002552:
	a0Out = a0_20
	return SEQ(d0_210, d1_100)
fn00002454_exit:


word32 fn00002558(word32 d0, word32 d1, word32 d2, word32 & d1Out, word32 & d2Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002454
//      fn0000279C
// MayUse:  d0:[0..31] d1:[0..31] d2:[0..31]
// LiveOut: d0:[0..31]-fn0000279C d1:[0..31]-fn0000279C d2:[0..31]-fn0000279C
// Trashed: CVZNX d0 d1 d2
// Preserved: a0 a1 a7 d3 d4 d5 d6 d7
fn00002558_entry:
l00002558:
	d7_13 = d2
	branch d2 == 0<32> l00002572
l00002560:
	branch d0 != 0<32> l00002580
l00002580:
	d2_26 = __swap(d2)
	branch SLICE(d2_26, word16, 0) != 0<16> l000025A8
l000025A8:
	bLoc26_389 = 0<8>
	d0_48 = 0<32>
	d5_d6_372 = SEQ(d0, d1) (alias)
	d5_d6_372 = SEQ(d0, d1) (alias)
	branch d2 < 0<32> l000025C4
l000025BA:
	d5_d6_372 = d5_d6_372 * 2<64>
	d0_48 = SEQ(SLICE(d0_48, word16, 16), SLICE(d0_48, word16, 0) + 1<16>)
	d7_13 = d7_13 * 2<32>
	branch d7_13 > 0<32> l000025BA
l000025C4:
	v41_68 = SLICE(d0_48, word16, 0)
	d5_d6_576 = d5_d6_372 (alias)
l000025C6:
	d5_77 = SLICE(d5_d6_576, word32, 32) (alias)
	d2_79 = __swap(d5_77)
	d3_80 = __swap(d7_13)
	d6_102 = SLICE(d5_d6_576, word32, 0) (alias)
	branch SLICE(d2_79 - d3_80, word16, 0) != 0<16> l000025D8
l000025D8:
	d1_112 = __swap(SEQ(SLICE(__swap(SEQ(d5_77 %u SLICE(d3_80, uint16, 0), d5_77 /u SLICE(d3_80, uint16, 0))), word16, 16), 0<16>))
l000025D2:
	d1_112 = 0xFFFF<32>
l000025E2:
	d6_106 = __swap(SEQ(SLICE(d6_102, word16, 16), 0<16>))
l000025E8:
	d4_121 = __swap(d5_77 - __swap(d7_13) *u32 SLICE(d1_112, word16, 0))
	wLoc22_469 = SLICE(dwLoc24, word16, 0) (alias)
	d2_114 = d1_112 *u32 SLICE(d7_13, word16, 0)
	d4_129 = SEQ(SLICE(d4_121, word16, 16), SLICE(d6_106, word16, 0))
	branch SLICE(d4_121, word16, 0) != 0<16> l00002608
l00002600:
	branch d2_114 <=u d4_129 l00002608
l00002608:
	d6_141 = __swap(d1_112)
	d3_148 = __swap(d6_141)
	d4_150 = __swap(d7_13)
	d6_154 = __swap(d6_141 *u32 SLICE(d7_13, word16, 0))
	d5_149 = d7_13 *u32 SLICE(d3_148, word16, 0)
	d3_152 = d3_148 *u32 SLICE(d4_150, word16, 0)
	v57_v55_373 = CONVERT(SLICE(d6_154, word16, 0), uint16, uint32) + SEQ(SLICE(d3_152, word16, 0), SLICE(d5_149, word16, 0))
	d2_151 = d6_141 *u32 SLICE(d4_150, word16, 0)
	v61_v59_374 = CONVERT(SLICE(v57_v55_373, word16, 0), uint16, uint32) + SEQ(SLICE(v57_v55_373, word16, 16), SLICE(d2_151, word16, 0))
	d5_d6_377 = d5_d6_576 - SEQ((__swap(SEQ(SLICE(d5_149, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d2_151, word16, 16), 0<16>))) + SEQ(SLICE(d3_152, word16, 16), SLICE(v61_v59_374, word16, 16)), __swap(SEQ(SLICE(d6_154, word16, 16), SLICE(v61_v59_374, word16, 0))))
	d6_186 = SLICE(d5_d6_377, word32, 0) (alias)
	d5_189 = SLICE(d5_d6_377, word32, 32) (alias)
	branch d5_189 >=u 0<32> l00002660
l0000264A:
	d5_d6_379 = CONVERT(d6_186, word32, uint64) + SEQ(d5_189, SLICE(__swap(d7_13), word16, 16), 0<16>)
	d1_112 = d1_112 - 1<32>
	d6_186 = SLICE(d5_d6_379, word32, 0) (alias)
	d5_189 = SLICE(d5_d6_379, word32, 32) + __swap(SEQ(SLICE(d7_13, word16, 16), 0<16>))
l00002660:
	branch bLoc26_389 != 0<8> l0000267C
l0000267C:
	d6_228 = __swap(SEQ(SLICE(d6_186, word16, 16), SLICE(d5_189, word16, 0)))
	d0 = SEQ(SLICE(dwLoc24, word16, 16), SLICE(d1_112, word16, 0))
	d5_229 = __swap(d5_189)
	v81_232 = SLICE(d7_13, word16, 16)
	branch v41_68 == 0<16> l00002696
l0000268C:
	d7_240 = SEQ(v81_232, v41_68 - 1<16>)
	d5_d6_579 = SEQ(d5_229, d6_228) (alias)
l0000268E:
	d5_d6_579 = d5_d6_579 >>u 1<32>
	v85_251 = SLICE(d7_240, word16, 0)
	d6_228 = SLICE(d5_d6_579, word32, 0)
	d7_240 = SEQ(SLICE(d7_240, word16, 16), v85_251 - 1<i16>)
	branch v85_251 != 0<16> l0000268E
l00002696:
	d1 = d6_228
	d2 = d2_26
l00002666:
	d5_278 = __swap(d5_189)
	d6_279 = __swap(d6_186)
	bLoc26_389 = true
	dwLoc24 = SEQ(SLICE(d1_112, word16, 0), wLoc22_469) (alias)
	d5_d6_576 = SEQ(SLICE(d5_278, word16, 16), SLICE(d6_279, word16, 0), SLICE(d6_279, word16, 16), 0<16>) (alias)
l00002604:
	d1_112 = d1_112 - 1<32>
l00002586:
	d0_293 = __swap(d0)
	d1_294 = __swap(d1)
	d0_297 = SEQ(SLICE(d0_293, word16, 16), SLICE(d1_294, word16, 0))
	d0_307 = SEQ(d0_297 %u SLICE(d2, uint16, 0), SLICE(__swap(d1_294), word16, 0))
	d2 = SEQ(SLICE(__swap(CONVERT(d0_297 /u SLICE(d2, uint16, 0), uint16, uint32)), word16, 16), d0_307 /u SLICE(d2, uint16, 0))
	d1 = __swap(SEQ(d0_307 %u SLICE(d2, uint16, 0), 0<16>))
	d0 = d2
l00002566:
	branch d1 == 0<32> l0000269E
l0000256C:
	branch d2 >u d1 l0000269E
l00002572:
	d0 = fn00002716(d1, d2, d2, out d1)
l0000269E:
	d1Out = d1
	d2Out = d2
	return d0
fn00002558_exit:


word32 fn000026E4(word32 d2, word32 dwArg04, word32 dwArg08)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002C28
// MayUse:  d2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: d0:[0..31]-fn00002C28
// Trashed: CVZNX d0 d1
// Preserved: a7
fn000026E4_entry:
l000026E4:
	branch dwArg04 > 0<32> l00002704
l00002704:
	branch dwArg08 > 0<32> l00002706_thunk_fn00002716
l00002706_thunk_fn00002716:
	return fn00002716(dwArg04, dwArg08, d2, out d1_90)
l00002708:
	return -fn00002716(dwArg04, -dwArg08, d2, out d1_91)
l000026EE:
	d0_36 = -dwArg04
	branch dwArg08 > 0<32> l000026FC
l000026FC:
	return -fn00002716(d0_36, dwArg08, d2, out d1_88)
l000026F4:
	return fn00002716(d0_36, -dwArg08, d2, out d1_89)
fn000026E4_exit:


word32 fn00002716(word32 d0, word32 d1, word32 d2, word32 & d1Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002558
//      fn000026E4
// MayUse:  d0:[0..31] d1:[0..31] d2:[0..31]
// LiveOut: d0:[0..31]-fn000026E4 d1:[0..31]-fn00002558
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3
fn00002716_entry:
l00002716:
	d1_22 = __swap(d1)
	v9_8 = SLICE(d1_22, word16, 0)
	v10_9 = SLICE(d2, word16, 16)
	d2_10 = SEQ(v10_9, v9_8)
	branch v9_8 != 0<16> l0000273C
l0000273C:
	d3_18 = 0x10<32>
	branch SLICE(d1_22, word16, 0) >=u 0x80<16> l0000274A
l00002746:
	d1_22 = __rol<word32,word32>(d1_22, 8<32>)
	d3_18 = 8<32>
l0000274A:
	branch SLICE(d1_22, word16, 0) >=u 0x800<16> l00002754
l00002750:
	d1_22 = __rol<word32,word32>(d1_22, 4<32>)
	d3_18 = SEQ(SLICE(d3_18, word16, 16), SLICE(d3_18, word16, 0) - 4<16>)
l00002754:
	branch SLICE(d1_22, word16, 0) >=u 0x2000<16> l0000275E
l0000275A:
	d1_22 = __rol<word32,word32>(d1_22, 2<32>)
	d3_18 = SEQ(SLICE(d3_18, word16, 16), SLICE(d3_18, word16, 0) - 2<16>)
l0000275E:
	branch SLICE(d1_22, word16, 0) < 0<16> l00002766
l00002762:
	d1_22 = __rol<word32,word32>(d1_22, 1<32>)
	d3_18 = SEQ(SLICE(d3_18, word16, 16), SLICE(d3_18, word16, 0) - 1<16>)
l00002766:
	d0_71 = d0 >>u d3_18
	d2_75 = SEQ(SLICE(__swap(SEQ(v10_9, SLICE(d0, word16, 0))), word16, 16), 0<16>) >>u d3_18
	v52_82 = SLICE(__swap(d3_18), word16, 16)
	v50_79 = d0_71 /u SLICE(d1_22, uint16, 0)
	d1_90 = __swap(d1_22)
	d3_102 = SEQ(v52_82, v50_79)
	d0_108 = SEQ(d0_71 %u SLICE(d1_22, uint16, 0), SLICE(d2_75, word16, 0)) - SEQ(SLICE(d2_75, word16, 16), v50_79) *u32 SLICE(d1_90, word16, 0)
	branch d0_108 >=u 0<32> l00002788
l00002782:
	d3_102 = SEQ(v52_82, v50_79 - 1<16>)
	d0_108 = d0_108 + d1_90
l00002786:
	branch d0_108 >=u 0<32> l00002786
l00002788:
	d1Out = __swap(__rol<word32,word32>(d0_108, __swap(d3_102)))
	return CONVERT(SLICE(d3_102, word16, 0), uint16, uint32)
l0000271E:
	d0_136 = __swap(d0)
	d1_137 = __swap(d1_22)
	v13_139 = SLICE(d0_136, word16, 0)
	d2_141 = SEQ(SLICE(__swap(d2_10), word16, 16), v13_139)
	branch v13_139 == 0<16> l0000272C
l00002728:
	v16_147 = d2_141 /u SLICE(d1_137, uint16, 0)
	d2_141 = SEQ(d2_141 %u SLICE(d1_137, uint16, 0), v16_147)
	d0_136 = SEQ(SLICE(d0_136, word16, 16), v16_147)
l0000272C:
	d0_156 = __swap(d0_136)
	d2_160 = SEQ(SLICE(d2_141, word16, 16), SLICE(d0_156, word16, 0))
	v33_163 = d2_160 /u SLICE(d1_137, uint16, 0)
	d1Out = SEQ(SLICE(d1_137, word16, 16), SLICE(__swap(SEQ(d2_160 %u SLICE(d1_137, uint16, 0), v33_163)), word16, 0))
	return SEQ(SLICE(d0_156, word16, 16), v33_163)
fn00002716_exit:


word32 fn0000279C(word64 qwArg04, word64 qwArg0C)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000014B4
// MayUse:  Stack +0004:[0..63] Stack +000C:[0..63]
// LiveOut: d1:[0..31]-fn000014B4
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6 d7
fn0000279C_entry:
	dwArg08 = SLICE(qwArg04, word32, 32)
	dwArg04 = SLICE(qwArg04, word32, 0)
	dwArg10 = SLICE(qwArg0C, word32, 32)
	dwArg0C = SLICE(qwArg0C, word32, 0)
l0000279C:
	d1_175 = dwArg08
	d3_206 = dwArg10
	branch dwArg0C != 0<32> l000027EE
l000027EE:
	branch dwArg04 <u dwArg0C l000028A8
l000027F4:
	d4_34 = 0x18<32>
	d6_35 = __rol<word32,word32>(dwArg0C, 8<32>)
	branch SLICE(d6_35, byte, 0) != 0<8> l00002812
l000027FE:
	d4_34 = 0x10<32>
	d6_35 = __rol<word32,word32>(d6_35, 8<32>)
	branch SLICE(d6_35, byte, 0) != 0<8> l00002812
l00002806:
	d4_34 = 8<32>
	d6_35 = __rol<word32,word32>(d6_35, 8<32>)
	branch SLICE(d6_35, byte, 0) != 0<8> l00002812
l0000280E:
	d4_34 = 0<32>
	d6_35 = SEQ(SLICE(d6_35, word24, 8), SLICE(dwArg0C, byte, 0))
l00002812:
	d4_68 = SEQ(SLICE(d4_34, word24, 8), SLICE(d4_34, byte, 0) + Mem20[0x00003ED0<p32> + CONVERT(SLICE(d6_35, word16, 0) & 0xFF<16>, int16, int32):byte])
	d5_70 = 0x20<32> - d4_68
	branch d5_70 != 0<32> l00002834
l00002834:
	d0_92 = fn00002558(dwArg04 >>u d4_68, SLICE(qwArg04 >>u d4_68, word32, 0), SLICE(qwArg0C >>u d4_68, word32, 0), out d1_93, out d2_94)
	d3_79 = dwArg10 << d5_70
	d7_108 = __swap(d0_92)
	d6_110 = __swap(d3_79)
	d2_114 = __swap(d0_92 *u32 SLICE(d3_79, word16, 0))
	d3_109 = d3_79 *u32 SLICE(d7_108, word16, 0)
	d7_112 = d7_108 *u32 SLICE(d6_110, word16, 0)
	v39_v37_283 = CONVERT(SLICE(d2_114, word16, 0), uint16, uint32) + SEQ(SLICE(d7_112, word16, 0), SLICE(d3_109, word16, 0))
	d4_111 = d0_92 *u32 SLICE(d6_110, word16, 0)
	v43_v41_284 = CONVERT(SLICE(v39_v37_283, word16, 0), uint16, uint32) + SEQ(SLICE(v39_v37_283, word16, 16), SLICE(d4_111, word16, 0))
	d2_131 = __swap(SEQ(SLICE(d2_114, word16, 16), SLICE(v43_v41_284, word16, 0)))
	d6_89 = dwArg08 << d5_70
	d3_139 = __swap(SEQ(SLICE(d3_109, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d4_111, word16, 16), 0<16>)) + SEQ(SLICE(d7_112, word16, 16), SLICE(v43_v41_284, word16, 16))
	v50_141 = d1_93 - d2_131
	branch v50_141 <u 0<32> l00002890
l0000288A:
	d2_d3_290 = SEQ(d2_131, d3_139) (alias)
	branch v50_141 != 0<32> l00002894
l0000288C:
	d2_d3_290 = SEQ(d2_131, d3_139) (alias)
	branch d6_89 >=u d3_139 l00002894
l00002890:
	d2_d3_290 = SEQ(d2_131, d3_139) - SEQ(d2_94, d3_79)
l00002894:
	d1_175 = SLICE(SEQ(d1_93, d6_89) - d2_d3_290 >>u d4_68, word32, 0) (alias)
l00002826:
	branch dwArg0C <u dwArg04 l0000282E
l0000282A:
	branch dwArg10 >u dwArg08 l000028A8
l0000282E:
	d1_175 = dwArg08 - dwArg10 (alias)
l000027B4:
	branch dwArg04 >=u dwArg10 l000027C6
l000027C6:
	branch dwArg10 != 0<32> l000027D2
l000027CA:
	d3_206 = CONVERT(1<32> /u SLICE(dwArg10, uint16, 0), int16, int32)
l000027D2:
	fn00002558(0<32>, dwArg04, d3_206, out d1_219, out d2_220)
	fn00002558(d1_219, dwArg08, d2_220, out d1_175, out d2_417)
l000027B8:
	fn00002558(dwArg04, dwArg08, dwArg10, out d1_175, out d2_416)
l000028A8:
	return d1_175
fn0000279C_exit:


void fn00002B98(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 a4 a5 d0 d1
// Preserved: X a2 a7
fn00002B98_entry:
l00002B98:
	branch dwArg04 == 0<32> l00002BB0
l00002BB0:
	a2_12 = Mem5[0x00003FFC<p32>:word32]
	branch a2_12 == 0<32> l00002BD6
l00002BBA:
	branch (Mem20[a2_12 + 24<i32>:word32] & 2<32>) == 0<32> l00002BCC
l00002BC2:
	fn00001FA4(a2_12, out a0_113, out a5_114)
l00002BCC:
	a2_12 = Mem46[a2_12 + 12<i32>:word32]
	branch a2_12 != 0<32> l00002BBA
l00002BA4:
	fn00001FA4(dwArg04, out a0_111, out a5_112)
l00002BD6:
	return
fn00002B98_exit:


void fn00002BDC(word32 d0, word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  d0:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 d0
// Preserved: a7
fn00002BDC_entry:
l00002BDC:
	fn00002C28(d0, Mem8[0x00003FF0<p32>:word32], dwArg04, fp + 8<i32>)
	return
fn00002BDC_exit:


word32 fn00002BF8(byte bArg07, word32 dwArg08)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002C28
// MayUse:  Stack +0007:[0..7] Stack +0008:[0..31]
// LiveOut: d0:[8..31]-fn00002C28
// Trashed: CVZNX a0 d0
// Preserved: a2 a7
fn00002BF8_entry:
l00002BF8:
	d0_12 = dwArg08
	branch dwArg08 == 0<32> l00002C22
l00002C04:
	d0_12 = Mem5[dwArg08 + 4<i32>:word32]
	branch d0_12 >=u Mem5[dwArg08 + 8<i32>:word32] l00002C16
l00002C0E:
	Mem18[Mem5[dwArg08 + 4<i32>:word32]:byte] = bArg07
l00002C16:
	Mem26[dwArg08 + 20<i32>:word32] = Mem24[dwArg08 + 20<i32>:word32] + 1<32>
	Mem29[dwArg08 + 4<i32>:word32] = Mem26[dwArg08 + 4<i32>:word32] - 1<32>
l00002C22:
	return d0_12
fn00002BF8_exit:


void fn00002C28(word32 d0, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002BDC
// MayUse:  d0:[8..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: CVZN d0
// Preserved: X a0 a1 a2 a3 a4 a5 a6 a7 d1 d2 d3 d4 d5 d6 d7
fn00002C28_entry:
l00002C28:
	d2_1002 = dwArg0C
	a4_280 = dwArg08
	dwLoc3C_4041 = 0<32>
	d4_132 = 0<32>
	d5_1086 = 0<32>
	branch Mem40[dwArg08:byte] == 0<8> l00003C2A
l00002C4A:
	d3_1918 = 0<32>
	branch Mem49[a4_280:byte] != 0x25<8> l00003B28
l00003B28:
	d0_63 = CONVERT(Mem49[0x000028B1<p32> + (SEQ(SLICE(d0, word24, 8), Mem49[a4_280:byte]) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_63 & 8<32>
	branch (d0_63 & 8<32>) == 0<32> l00003BB4
l00003BB4:
	Mem72[dwArg04 + 24<i32>:word32] = Mem49[dwArg04 + 24<i32>:word32] | 1<32>
	v113_74 = Mem72[dwArg04 + 20<i32>:word32] - 1<32>
	Mem75[dwArg04 + 20<i32>:word32] = v113_74
	branch v113_74 < 0<32> l00003BE6
l00003BE6:
	dwLoc4C_4043 = fn00003CCC(dwArg04, out a5_5870)
	d1 = d1_88
l00003BC6:
	a0_100 = Mem75[dwArg04 + 4<i32>:word32]
	Mem105[dwArg04 + 4<i32>:word32] = a0_100 + 1<32>
	dwLoc4C_4043 = CONVERT(Mem105[a0_100:byte], uint8, uint32)
l00003BF4:
	d0 = CONVERT(Mem127[a4_280:byte], int8, int32)
	d5_1086 = dwLoc4C_4043
	d3_130 = 1<32>
	d4_132 = d4_132 + 1<32>
	branch d0 == dwLoc4C_4043 l00003C1E
l00003C08:
	branch dwLoc4C_4043 == 0xFFFFFFFF<32> l00003C1A
l00003C10:
	d0 = fn00002BF8(SLICE(dwLoc4C_4043, byte, 0), dwArg04)
l00003C1A:
	d3_130 = 0<32>
	d4_132 = d4_132 - 1<32>
l00003B44:
	Mem174[dwArg04 + 24<i32>:word32] = Mem172[dwArg04 + 24<i32>:word32] | 1<32>
	v97_176 = Mem174[dwArg04 + 20<i32>:word32] - 1<32>
	Mem177[dwArg04 + 20<i32>:word32] = v97_176
	branch v97_176 < 0<32> l00003B6E
l00003B6E:
	d0_189 = fn00003CCC(dwArg04, out a5_5869)
	d1 = d0_189
l00003B56:
	a0_202 = Mem177[dwArg04 + 4<i32>:word32]
	Mem207[dwArg04 + 4<i32>:word32] = a0_202 + 1<32>
	v99_211 = Mem207[a0_202:byte]
	d0_189 = SEQ(SLICE(d0, word24, 8), v99_211)
	d1 = CONVERT(v99_211, uint8, uint32)
l00003B7A:
	d0_242 = CONVERT(Mem239[0x000028B1<p32> + (SEQ(SLICE(d0_189, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d5_1086 = d1
	d4_132 = d4_132 + 1<32>
	d0 = d0_242 & 8<32>
	branch (d0_242 & 8<32>) != 0<32> l00003B44
l00003B9C:
	branch d1 == 0xFFFFFFFF<32> l00003BAE
l00003BA4:
	d0 = fn00002BF8(SLICE(d1, byte, 0), dwArg04)
l00003BAE:
	d4_132 = d4_132 - 1<32>
	d3_130 = 1<32>
l00003C1E:
	a4_280 = a4_280 + 1<32>
l00002C54:
	a3_284 = a4_280 + 1<i32>
	d0_294 = CONVERT(Mem283[0x000028B1<p32> + CONVERT(Mem283[a3_284:byte], uint8, uint32):byte], uint8, uint32)
	d6_1174 = 0xFFFFFFFF<32>
	bLoc30_4056 = 0x69<8>
	bLoc2F_4057 = 0<8>
	d0 = d0_294 & 4<32>
	branch (d0_294 & 4<32>) == 0<32> l00002CD8
l00002C7C:
	d0_310 = CONVERT(Mem283[0x000028B1<p32> + CONVERT(Mem283[a3_284:byte], uint8, uint32):byte], uint8, uint32)
	d6_1174 = 0<32>
	d0 = d0_310 & 4<32>
	branch (d0_310 & 4<32>) == 0<32> l00002CD8
l00002C96:
	d1_326 = __swap(0xA<32>) *u32 SLICE(d6_1174, word16, 0)
	d0_335 = SLICE(d6_1174, word16, 0) *u32 0xA<32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_326, word16, 16), SLICE(d1_326, word16, 0) + SLICE(__swap(d6_1174), word16, 0) *u 0xA<16>)), word16, 16), 0<16>)
	a3_284 = a3_284 + 1<i32>
	d1_344 = CONVERT(Mem320[a3_284:byte], uint8, uint32)
	d0_358 = CONVERT(Mem320[0x000028B1<p32> + CONVERT(Mem320[a3_284:byte], uint8, uint32):byte], uint8, uint32)
	d1 = d1_344 - 0x30<32>
	d6_1174 = d1_344 - 0x30<32> + d0_335
	d0 = d0_358 & 4<32>
	branch (d0_358 & 4<32>) != 0<32> l00002C96
l00002CD8:
	branch Mem365[a3_284:byte] == 0x68<8> l00002D02
l00002CDE:
	branch Mem365[a3_284:byte] == 0x6C<8> l00002D02
l00002CE4:
	branch Mem365[a3_284:byte] == 0x4C<8> l00002D02
l00002CEA:
	branch Mem365[a3_284:byte] == 0x7A<8> l00002D02
l00002CF0:
	branch Mem365[a3_284:byte] == 0x6A<8> l00002D02
l00002CF6:
	branch Mem365[a3_284:byte] == 0x74<8> l00002D02
l00002CFC:
	branch Mem365[a3_284:byte] != 0x2A<8> l00002D6A
l00002D02:
	d7 = SEQ(SLICE(d7, word24, 8), 0<8>)
	d1 = SEQ(SLICE(d1, word24, 8), 0x69<8>)
l00002D0A:
	branch Mem365[a3_284:byte] != 0x2A<8> l00002D14
l00002D14:
	branch SLICE(d1, byte, 0) != 0x68<8> l00002D24
l00002D1A:
	branch Mem365[a3_284:byte] != 0x68<8> l00002D24
l00002D24:
	branch SLICE(d1, byte, 0) != 0x6C<8> l00002D34
l00002D2A:
	branch Mem365[a3_284:byte] != 0x6C<8> l00002D34
l00002D34:
	d1 = SEQ(SLICE(d1, word24, 8), Mem365[a3_284:byte])
l00002D30:
	d1 = 1<32>
l00002D20:
	d1 = 2<32>
l00002D10:
	d7 = 1<32>
l00002D36:
	a3_284 = a3_284 + 1<32>
	branch Mem365[a3_284:byte] == 0x68<8> l00002D0A
l00002D3E:
	branch Mem365[a3_284:byte] == 0x6C<8> l00002D0A
l00002D44:
	branch Mem365[a3_284:byte] == 0x4C<8> l00002D0A
l00002D4A:
	branch Mem365[a3_284:byte] == 0x7A<8> l00002D0A
l00002D50:
	branch Mem365[a3_284:byte] == 0x6A<8> l00002D0A
l00002D56:
	branch Mem365[a3_284:byte] == 0x74<8> l00002D0A
l00002D5C:
	branch Mem365[a3_284:byte] == 0x2A<8> l00002D0A
l00002D62:
	bLoc30_4056 = SLICE(d1, byte, 0)
	bLoc2F_4057 = SLICE(d7, byte, 0)
l00002D6A:
	branch bLoc30_4056 != 0x6A<8> l00002D78
l00002D72:
	bLoc30_4056 = 1<8>
l00002D78:
	branch bLoc30_4056 != 0x74<8> l00002D86
l00002D80:
	bLoc30_4056 = 0x69<8>
l00002D86:
	branch bLoc30_4056 != 0x7A<8> l00002D94
l00002D8E:
	bLoc30_4056 = 0x6C<8>
l00002D94:
	v77_519 = Mem518[a3_284:byte]
	v78_525 = SLICE(d7, word24, 8)
	a3_2025 = a3_284 + 1<i32>
	d7 = SEQ(v78_525, v77_519)
	branch v77_519 == 0<8> l00002E0A
l00002D98:
	branch v77_519 == 0x25<8> l00002E0A
l00002D9E:
	branch v77_519 == 0x63<8> l00002E0A
l00002DA4:
	branch v77_519 == 0x6E<8> l00002E0A
l00002DAA:
	branch v77_519 == 0x5B<8> l00002E0A
l00002DB0:
	Mem547[dwArg04 + 24<i32>:word32] = Mem545[dwArg04 + 24<i32>:word32] | 1<32>
	v84_549 = Mem547[dwArg04 + 20<i32>:word32] - 1<32>
	Mem550[dwArg04 + 20<i32>:word32] = v84_549
	branch v84_549 < 0<32> l00002DDA
l00002DDA:
	d0_562 = fn00003CCC(dwArg04, out a5_5868)
	d1 = d0_562
l00002DC2:
	a0_575 = Mem550[dwArg04 + 4<i32>:word32]
	Mem580[dwArg04 + 4<i32>:word32] = a0_575 + 1<32>
	v88_584 = Mem580[a0_575:byte]
	d0_562 = SEQ(SLICE(d0, word24, 8), v88_584)
	d1 = CONVERT(v88_584, uint8, uint32)
l00002DE6:
	d0_615 = CONVERT(Mem612[0x000028B1<p32> + (SEQ(SLICE(d0_562, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d5_1086 = d1
	d4_132 = d4_132 + 1<32>
	d0 = d0_615 & 8<32>
	branch (d0_615 & 8<32>) != 0<32> l00002DB0
l00002E08:
	d3_1918 = 1<32>
l00002E0A:
	v126_634 = SLICE(d1, word24, 8)
	d1_638 = SEQ(v126_634, v77_519 - 0x25<8>)
	branch v77_519 == 0x25<8> l00003256
l00003256:
	Mem657[dwArg04 + 24<i32>:word32] = Mem655[dwArg04 + 24<i32>:word32] | 1<32>
	v138_659 = Mem657[dwArg04 + 20<i32>:word32] - 1<32>
	Mem660[dwArg04 + 20<i32>:word32] = v138_659
	branch v138_659 < 0<32> l00003288
l00003288:
	d0 = fn00003CCC(dwArg04, out a5_5871)
	dwLoc4C_4076 = d0
	d1 = d1_675
l00003268:
	a0_687 = Mem660[dwArg04 + 4<i32>:word32]
	Mem692[dwArg04 + 4<i32>:word32] = a0_687 + 1<32>
	v140_696 = Mem692[a0_687:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v140_696)
	dwLoc4C_4076 = CONVERT(v140_696, uint8, uint32)
	d1 = d1_638
l00003296:
	d5_1086 = dwLoc4C_4076
	d3_130 = d3_1918 + 1<32>
	d4_132 = d4_132 + 1<32>
	branch dwLoc4C_4076 == 0x25<32> l00003B22
l000032AA:
	branch dwLoc4C_4076 == 0xFFFFFFFF<32> l000032BC
l000032B2:
	d0 = fn00002BF8(SLICE(dwLoc4C_4076, byte, 0), dwArg04)
l000032BC:
	d3_130 = d3_130 - 1<32>
	d4_132 = d4_132 - 1<32>
l00002E14:
	branch v77_519 == 0x5B<8> l00002F52
l00002F52:
	bLoc4C_4084 = 0<8>
	branch Mem787[a3_2025:byte] != 0x5E<8> l00002F64
l00002F5C:
	bLoc4C_4084 = 1<8>
	a3_2025 = a3_2025 + 1<32>
l00002F64:
	d7 = SEQ(v78_525, bLoc4C_4084)
	d1_1069 = 0<32>
l00002F70:
	branch bLoc4C_4084 == 0<8> l00002F7C
l00002F7C:
	d5_814 = 0<32>
l00002F74:
	d5_814 = 0xFF<32>
l00002F7E:
	Mem829[fp + -42<i32> + d1_1069:byte] = SLICE(d5_814, byte, 0)
	d1_1069 = d1_1069 + 1<32>
	branch d1_1069 <u 0x20<32> l00002F70
l00002F90:
l00002F9C:
	branch Mem863[a3_2025:byte] == 0<8> l00003012
l00002FA0:
	v407_868 = Mem863[a3_2025:byte]
	a3_2025 = a3_2025 + 1<i32>
	d1_1069 = SEQ(SLICE(d1_1069, word24, 8), v407_868)
	branch Mem863[a3_2025:byte] != 0x2D<8> l00002FB4
l00002FA8:
	branch v407_868 >=u Mem863[a3_2025 + 1<i32>:byte] l00002FB4
l00002FB4:
	d7 = SEQ(SLICE(d7, word24, 8), v407_868)
l00002FAE:
	a3_2025 = a3_2025 + 2<32>
	d7 = SEQ(SLICE(d7, word24, 8), Mem863[a3_2025 + 1<32>:byte])
l00002FB6:
	d5_900 = CONVERT(v407_868, uint8, uint32)
	d0 = CONVERT(SLICE(d7, byte, 0), uint8, uint32)
	branch d0 <u d5_900 l0000300C
l00002FC2:
	branch bLoc4C_4084 == 0<8> l00002FE6
l00002FE6:
	a0_919 = fp + -42<i32> + (d5_900 >>u 3<32>)
	d1_1069 = CONVERT(Mem927[a0_919:byte], uint8, uint32)
	Mem933[a0_919:byte] = 1<8> << (SLICE(d5_900, byte, 0) & 7<8>) | SLICE(d1_1069, byte, 0)
l00002FC6:
	a0_940 = fp + -42<i32> + (d5_900 >>u 3<32>)
	d1_1069 = CONVERT(Mem927[a0_940:byte], uint8, uint32)
	Mem954[a0_940:byte] = SLICE(~(1<32> << (d5_900 & 7<32>)) & d1_1069, byte, 0)
l00003002:
	d5_900 = d5_900 + 1<32>
	d0 = CONVERT(SLICE(d7, byte, 0), uint8, uint32)
	branch d0 >=u d5_900 l00002FC2
l0000300C:
	branch Mem975[a3_2025:byte] != 0x5D<8> l00002F9C
l00003012:
	a3_2025 = a3_2025 + 1<32>
	branch bLoc2F_4057 != 0<8> l00003032
l00003032:
	a6_1005 = 0<32>
l0000301E:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	d2_1002 = d0 + 4<32>
	a6_1005 = Mem988[d0:word32]
l00003034:
	Mem1020[dwArg04 + 24<i32>:word32] = Mem988[dwArg04 + 24<i32>:word32] | 1<32>
	v431_1022 = Mem1020[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1023[dwArg04 + 20<i32>:word32] = v431_1022
	branch v431_1022 < 0<32> l00003066
l00003066:
	d0 = fn00003CCC(dwArg04, out a5_5880)
	dwLoc4C_4115 = d0
l00003046:
	a0_1048 = Mem1023[dwArg04 + 4<i32>:word32]
	Mem1053[dwArg04 + 4<i32>:word32] = a0_1048 + 1<32>
	v433_1057 = Mem1053[a0_1048:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v433_1057)
	dwLoc4C_4115 = CONVERT(v433_1057, uint8, uint32)
	d1 = d1_1069
l00003074:
	d5_1086 = dwLoc4C_4115
	d3_1099 = d3_1918 + 1<32>
	d4_1112 = d4_132 + 1<32>
	branch dwLoc4C_4115 == 0xFFFFFFFF<32> l00003142
l00003088:
	d1 = CONVERT(Mem1126[fp + -42<i32> + fn000026E4(d2_1002, dwLoc4C_4115, 0x00000008<p32>):byte], uint8, uint32)
	d0 = 1<32> << (dwLoc4C_4115 & 7<32>) & d1
	branch d0 == 0<32> l00003142
l000030B8:
	branch d6_1174 <u d3_1099 l00003142
l000030BE:
	d7 = SEQ(SLICE(d7, word24, 8), bLoc2F_4057)
l000030C2:
	branch bLoc2F_4057 != 0<8> l000030C8
l000030C6:
	Mem1208[a6_1005:byte] = SLICE(d5_1086, byte, 0)
	a6_1005 = a6_1005 + 1<i32>
l000030C8:
	Mem1219[dwArg04 + 24<i32>:word32] = Mem1216[dwArg04 + 24<i32>:word32] | 1<32>
	v449_1221 = Mem1219[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1222[dwArg04 + 20<i32>:word32] = v449_1221
	branch v449_1221 < 0<32> l000030F2
l000030F2:
	d0 = fn00003CCC(dwArg04, out a5_5881)
	d1 = d0
l000030DA:
	a0_1248 = Mem1222[dwArg04 + 4<i32>:word32]
	Mem1253[dwArg04 + 4<i32>:word32] = a0_1248 + 1<32>
	v451_1257 = Mem1253[a0_1248:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v451_1257)
	d1 = CONVERT(v451_1257, uint8, uint32)
l000030FE:
	d5_1086 = d1
	d3_1099 = d3_1099 + 1<32>
	d4_1112 = d4_1112 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l0000313E
l0000310C:
	d1 = CONVERT(Mem1293[fp + -42<i32> + fn000026E4(d2_1002, d1, 0x00000008<p32>):byte], uint8, uint32)
	d0 = 1<32> << (d1 & 7<32>) & d1
	branch d0 == 0<32> l0000313E
l0000313A:
	branch d6_1174 >=u d3_1099 l000030C2
l0000313E:
l00003142:
	branch d5_1086 == 0xFFFFFFFF<32> l00003154
l0000314A:
	d0 = fn00002BF8(SLICE(d5_1086, byte, 0), dwArg04)
l00003154:
	d3_130 = d3_1099 - 1<32>
	d4_132 = d4_1112 - 1<32>
	branch bLoc2F_4057 != 0<8> l00003B22
l00003160:
	branch d3_130 == 0<32> l00003B22
l00003166:
	Mem1397[a6_1005:byte] = 0<8>
	dwLoc3C_4041 = dwLoc3C_4041 + 1<32>
l00002E1C:
	d1_1404 = SEQ(v126_634, v77_519 - 0x63<8>)
	branch v77_519 == 0x63<8> l00002E32
l00002E32:
	branch d6_1174 != 0xFFFFFFFF<32> l00002E3C
l00002E3A:
	d6_1174 = 1<32>
l00002E3C:
	branch bLoc2F_4057 != 0<8> l00002E56
l00002E56:
	a1_1420 = 0<32>
l00002E42:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	d2_1002 = d0 + 4<32>
	a1_1420 = Mem655[d0:word32]
l00002E58:
	Mem1436[dwArg04 + 24<i32>:word32] = Mem655[dwArg04 + 24<i32>:word32] | 1<32>
	Mem1439[dwArg04 + 20<i32>:word32] = Mem1436[dwArg04 + 20<i32>:word32] - 1<32>
	branch Mem1443[dwArg04 + 20<i32>:word32] < 0<32> l00002E90
l00002E90:
	d0 = fn00003CCC(dwArg04, out a5_5875)
	dwLoc44_4176 = d0
	d1 = d1_1460
l00002E70:
	a0_1474 = Mem1443[dwArg04 + 4<i32>:word32]
	Mem1479[dwArg04 + 4<i32>:word32] = a0_1474 + 1<32>
	v222_1483 = Mem1479[a0_1474:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v222_1483)
	dwLoc44_4176 = CONVERT(v222_1483, uint8, uint32)
	d1 = d1_1404
l00002EAE:
	d5_1086 = dwLoc44_4176
	d3_1510 = d3_1918 + 1<32>
	d4_1514 = d4_132 + 1<32>
	branch dwLoc44_4176 == 0xFFFFFFFF<32> l00002F26
l00002EC4:
	branch d6_1174 <u d3_1510 l00002F26
l00002ECC:
	d7 = SEQ(v78_525, bLoc2F_4057)
	a4_1535 = a1_1420
l00002ED4:
	branch bLoc2F_4057 != 0<8> l00002EDA
l00002ED8:
	Mem1544[a4_1535:byte] = SLICE(d5_1086, byte, 0)
	a4_1535 = a4_1535 + 1<i32>
l00002EDA:
	Mem1555[dwArg04 + 24<i32>:word32] = Mem1552[dwArg04 + 24<i32>:word32] | 1<32>
	v241_1557 = Mem1555[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1558[dwArg04 + 20<i32>:word32] = v241_1557
	branch v241_1557 < 0<32> l00002F04
l00002F04:
	d0 = fn00003CCC(dwArg04, out a5_5876)
	d1 = d0
l00002EEC:
	a0_1584 = Mem1558[dwArg04 + 4<i32>:word32]
	Mem1589[dwArg04 + 4<i32>:word32] = a0_1584 + 1<32>
	v243_1593 = Mem1589[a0_1584:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v243_1593)
	d1 = CONVERT(v243_1593, uint8, uint32)
l00002F10:
	d5_1086 = d1
	d3_1510 = d3_1510 + 1<32>
	d4_1514 = d4_1514 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l00002F22
l00002F1E:
	branch d6_1174 >=u d3_1510 l00002ED4
l00002F22:
l00002F26:
	branch d5_1086 == 0xFFFFFFFF<32> l00002F38
l00002F2E:
	d0 = fn00002BF8(SLICE(d5_1086, byte, 0), dwArg04)
l00002F38:
	d3_130 = d3_1510 - 1<32>
	d4_132 = d4_1514 - 1<32>
	branch bLoc2F_4057 != 0<8> l00003B22
l00002F44:
	branch d3_130 == 0<32> l00003B22
l00002F4A:
	dwLoc3C_4041 = dwLoc3C_4041 + 1<32>
l00002E20:
	d1 = SEQ(v126_634, v77_519 - 0x6E<8>)
	branch v77_519 == 0x6E<8> l000032C4
l000032C4:
	branch bLoc2F_4057 != 0<8> l0000335C
l000032CC:
	branch bLoc30_4056 != 1<8> l000032EE
l000032EE:
	branch bLoc30_4056 != 0x6C<8> l0000330C
l0000330C:
	branch bLoc30_4056 != 0x68<8> l0000332A
l0000332A:
	branch bLoc30_4056 != 2<8> l00003348
l00003348:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem1713[Mem655[d0:word32]:word32] = d4_132
	d2_1002 = d0 + 4<32>
l00003332:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem1727[Mem655[d0:word32]:byte] = SLICE(d4_132, byte, 0)
	d2_1002 = d0 + 4<32>
l00003314:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem1741[Mem655[d0:word32]:word16] = SLICE(d4_132, word16, 0)
	d2_1002 = d0 + 4<32>
l000032F6:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem1754[Mem655[d0:word32]:word32] = d4_132
	d2_1002 = d0 + 4<32>
l000032D4:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	a0_1766 = Mem655[d0:word32]
	Mem1767[a0_1766 + 4<i32>:word32] = d4_132
	Mem1768[a0_1766:word32] = 0<32>
	d2_1002 = d0 + 4<32>
l0000335C:
	d3_130 = 1<32>
	dwLoc3C_4041 = dwLoc3C_4041 + 1<32>
l00002E28:
	d1 = SEQ(v126_634, v77_519 - 0x73<8>)
	branch v77_519 == 0x73<8> l00003170
l00003170:
	branch bLoc2F_4057 != 0<8> l0000318A
l0000318A:
	a5_1788 = 0<32>
l00003176:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	d2_1002 = d0 + 4<32>
	a5_1788 = Mem655[d0:word32]
l0000318C:
	branch d5_1086 == 0xFFFFFFFF<32> l00003228
l00003196:
	d0_1826 = CONVERT(Mem655[0x000028B1<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_1826 & 8<32>
	branch (d0_1826 & 8<32>) != 0<32> l00003228
l000031B2:
	branch d6_1174 <u d3_1918 l00003228
l000031B6:
	d7 = SEQ(v78_525, bLoc2F_4057)
l000031BA:
	branch bLoc2F_4057 != 0<8> l000031C0
l000031BE:
	Mem1853[a5_1788:byte] = SLICE(d5_1086, byte, 0)
	a5_1788 = a5_1788 + 1<i32>
l000031C0:
	Mem1864[dwArg04 + 24<i32>:word32] = Mem1861[dwArg04 + 24<i32>:word32] | 1<32>
	v161_1866 = Mem1864[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1867[dwArg04 + 20<i32>:word32] = v161_1866
	branch v161_1866 < 0<32> l000031EA
l000031EA:
	d0 = fn00003CCC(dwArg04, out a5_1788)
	d1 = d0
l000031D2:
	a0_1893 = Mem1867[dwArg04 + 4<i32>:word32]
	Mem1898[dwArg04 + 4<i32>:word32] = a0_1893 + 1<32>
	v163_1902 = Mem1898[a0_1893:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v163_1902)
	d1 = CONVERT(v163_1902, uint8, uint32)
l000031F6:
	d5_1086 = d1
	d3_1918 = d3_1918 + 1<32>
	d4_132 = d4_132 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l00003224
l00003204:
	d0_1939 = CONVERT(Mem1936[0x000028B1<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_1939 & 8<32>
	branch (d0_1939 & 8<32>) != 0<32> l00003224
l00003220:
	branch d6_1174 >=u d3_1918 l000031BA
l00003224:
l00003228:
	branch d5_1086 == 0xFFFFFFFF<32> l0000323A
l00003230:
	d0 = fn00002BF8(SLICE(d5_1086, byte, 0), dwArg04)
l0000323A:
	d3_130 = d3_1918 - 1<32>
	d4_132 = d4_132 - 1<32>
	branch bLoc2F_4057 != 0<8> l00003B22
l00003246:
	branch d3_130 == 0<32> l00003B22
l0000324C:
	Mem2013[a5_1788:byte] = 0<8>
	dwLoc3C_4041 = dwLoc3C_4041 + 1<32>
l00002E2E:
l00003366:
	dwLoc48_4227 = 0<32>
	dwLoc4C_4228 = 0<32>
	dwLoc0A_4229 = 0<32>
	branch v77_519 != 0<8> l00003378
l00003376:
	a3_2025 = a3_2025 - 1<32>
l00003378:
	branch v77_519 != 0x70<8> l00003386
l0000337E:
	bLoc30_4056 = 0x6C<8>
	d7 = 0x78<32>
l00003386:
	branch d5_1086 != 0x2D<32> l00003394
l0000338E:
	branch SLICE(d7, byte, 0) != 0x75<8> l0000339C
l00003394:
	branch d5_1086 != 0x2B<32> l000033EC
l0000339C:
	branch d6_1174 <u d3_1918 l000033EC
l000033A0:
	Mem2071[dwArg04 + 24<i32>:word32] = Mem2064[dwArg04 + 24<i32>:word32] | 1<32>
	v184_2073 = Mem2071[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2074[dwArg04 + 20<i32>:word32] = v184_2073
	dwLoc0A_4229 = d5_1086
	branch v184_2073 < 0<32> l000033D6
l000033D6:
	d0 = fn00003CCC(dwArg04, out a5_5872)
	dwLoc44_4233 = d0
l000033B6:
	a0_2098 = Mem2074[dwArg04 + 4<i32>:word32]
	Mem2103[dwArg04 + 4<i32>:word32] = a0_2098 + 1<32>
	v186_2107 = Mem2103[a0_2098:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v186_2107)
	dwLoc44_4233 = CONVERT(v186_2107, uint8, uint32)
l000033E4:
	d5_1086 = dwLoc44_4233
	d3_1918 = d3_1918 + 1<32>
	d4_132 = d4_132 + 1<32>
l000033EC:
	branch SLICE(d7, byte, 0) != 0x69<8> l0000355E
l000033F4:
	branch d5_1086 != 0x30<32> l00003520
l000033FE:
	branch d6_1174 <u d3_1918 l00003520
l00003520:
	d0_2179 = CONVERT(Mem2172[0x000028B1<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_2179 & 4<32>
	branch (d0_2179 & 4<32>) != 0<32> l0000355E
l0000353C:
	d0_2194 = CONVERT(Mem2172[0x000028B1<p32> + (CONVERT(SLICE(d5_1086, byte, 0), uint8, uint32) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_2194 & 0x44<32>
	branch (d0_2194 & 0x44<32>) == 0<32> l0000355E
l00003558:
	branch d6_1174 <u d3_1918 l0000355E
l0000355C:
	d7 = 0x78<32>
l00003404:
	Mem2213[dwArg04 + 24<i32>:word32] = Mem2172[dwArg04 + 24<i32>:word32] | 1<32>
	v196_2215 = Mem2213[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2216[dwArg04 + 20<i32>:word32] = v196_2215
	branch v196_2215 < 0<32> l00003436
l00003436:
	d0_2228 = fn00003CCC(dwArg04, out a5_5873)
	dwLoc44_4239 = d0_2228
l00003416:
	a0_2241 = Mem2216[dwArg04 + 4<i32>:word32]
	Mem2246[dwArg04 + 4<i32>:word32] = a0_2241 + 1<32>
	v198_2250 = Mem2246[a0_2241:byte]
	d0_2228 = SEQ(SLICE(d0, word24, 8), v198_2250)
	dwLoc44_4239 = CONVERT(v198_2250, uint8, uint32)
l00003444:
	bLoc41_4245 = SLICE(dwLoc44_4239, byte, 0) (alias)
	d0_2281 = SEQ(SLICE(d0_2228, word24, 8), bLoc41_4245)
	d3_2273 = d3_1918 + 1<32>
	d0 = d0_2281 & 0xFF<32>
	branch __btst<byte>(Mem2271[0x000028B1<p32> + CONVERT(SLICE(d0_2281, int16, 0) & 255<i16>, int16, int32):byte], 0<16>) l0000346A
l00003466:
	d0 = CONVERT(bLoc41_4245 | 0x20<8>, uint8, uint32)
l0000346A:
	branch d0 != 0x78<32> l00003502
l00003474:
	branch d6_1174 <u d3_2273 l00003502
l00003502:
	d7 = 0x6F<32>
l0000347A:
	Mem2313[dwArg04 + 24<i32>:word32] = Mem2271[dwArg04 + 24<i32>:word32] | 1<32>
	v212_2315 = Mem2313[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2316[dwArg04 + 20<i32>:word32] = v212_2315
	branch v212_2315 < 0<32> l000034AC
l000034AC:
	d0_2328 = fn00003CCC(dwArg04, out a5_5874)
	dwLoc44_4247 = d0_2328
l0000348C:
	a0_2341 = Mem2316[dwArg04 + 4<i32>:word32]
	Mem2346[dwArg04 + 4<i32>:word32] = a0_2341 + 1<32>
	v214_2350 = Mem2346[a0_2341:byte]
	d0_2328 = SEQ(SLICE(d0, word24, 8), v214_2350)
	dwLoc44_4247 = CONVERT(v214_2350, uint8, uint32)
l000034BA:
	d0_2391 = CONVERT(Mem2371[0x000028B1<p32> + (SEQ(SLICE(d0_2328, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_2391 & 0x44<32>
	branch (d0_2391 & 0x44<32>) == 0<32> l000034E6
l000034E0:
	branch d6_1174 <u d3_2273 + 1<32> l000034E6
l000034E4:
	d7 = 0x78<32>
l000034E6:
	branch dwLoc44_4247 == 0xFFFFFFFF<32> l000034FC
l000034F0:
	d0 = fn00002BF8(SLICE(dwLoc44_4247, byte, 0), dwArg04)
l000034FC:
l00003504:
	branch dwLoc44_4239 == 0xFFFFFFFF<32> l0000351A
l0000350E:
	d0 = fn00002BF8(SLICE(dwLoc44_4239, byte, 0), dwArg04)
l0000351A:
l0000355E:
	d4_2586 = d4_132
	d3_2499 = d3_1918
	branch SLICE(d7, byte, 0) != 0x78<8> l00003692
l00003566:
	branch d5_1086 != 0x30<32> l00003692
l00003570:
	branch d6_1174 <u d3_1918 l00003692
l00003576:
	Mem2510[dwArg04 + 24<i32>:word32] = Mem2507[dwArg04 + 24<i32>:word32] | 1<32>
	v267_2512 = Mem2510[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2513[dwArg04 + 20<i32>:word32] = v267_2512
	branch v267_2512 < 0<32> l000035A8
l000035A8:
	d0_2527 = fn00003CCC(dwArg04, out a5_5877)
	dwLoc44_4267 = d0_2527
l00003588:
	a0_2540 = Mem2513[dwArg04 + 4<i32>:word32]
	Mem2545[dwArg04 + 4<i32>:word32] = a0_2540 + 1<32>
	v269_2549 = Mem2545[a0_2540:byte]
	d0_2527 = SEQ(SLICE(d0, word24, 8), v269_2549)
	dwLoc44_4267 = CONVERT(v269_2549, uint8, uint32)
l000035B6:
	bLoc41_4273 = SLICE(dwLoc44_4267, byte, 0) (alias)
	d0_2593 = SEQ(SLICE(d0_2527, word24, 8), bLoc41_4273)
	d3_2584 = d3_1918 + 1<32>
	d4_2588 = d4_132 + 1<32>
	d0 = d0_2593 & 0xFF<32>
	branch __btst<byte>(Mem2582[0x000028B1<p32> + CONVERT(SLICE(d0_2593, int16, 0) & 255<i16>, int16, int32):byte], 0<16>) l000035DC
l000035D8:
	d0 = CONVERT(bLoc41_4273 | 0x20<8>, uint8, uint32)
l000035DC:
	branch d0 != 0x78<32> l00003678
l000035E6:
	branch d6_1174 <u d3_2584 l00003678
l000035EC:
	Mem2621[dwArg04 + 24<i32>:word32] = Mem2582[dwArg04 + 24<i32>:word32] | 1<32>
	v282_2623 = Mem2621[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2624[dwArg04 + 20<i32>:word32] = v282_2623
	branch v282_2623 < 0<32> l0000361E
l0000361E:
	d0_2636 = fn00003CCC(dwArg04, out a5_5878)
	dwLoc44_4275 = d0_2636
l000035FE:
	a0_2649 = Mem2624[dwArg04 + 4<i32>:word32]
	Mem2654[dwArg04 + 4<i32>:word32] = a0_2649 + 1<32>
	v284_2658 = Mem2654[a0_2649:byte]
	d0_2636 = SEQ(SLICE(d0, word24, 8), v284_2658)
	dwLoc44_4275 = CONVERT(v284_2658, uint8, uint32)
l0000362C:
	d0_2696 = CONVERT(Mem2679[0x000028B1<p32> + (SEQ(SLICE(d0_2636, word24, 8), SLICE(dwLoc44_4275, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d3_2499 = d3_2584 + 1<32>
	d4_2586 = d4_2588 + 1<32>
	d0 = d0_2696 & 0x44<32>
	branch (d0_2696 & 0x44<32>) == 0<32> l0000365E
l00003654:
	branch d6_1174 <u d3_2584 + 1<32> l0000365E
l0000365E:
	branch dwLoc44_4275 == 0xFFFFFFFF<32> l00003674
l00003668:
	d0 = fn00002BF8(SLICE(dwLoc44_4275, byte, 0), dwArg04)
l00003674:
l00003678:
	branch dwLoc44_4267 == 0xFFFFFFFF<32> l0000368E
l00003682:
	d0 = fn00002BF8(SLICE(dwLoc44_4267, byte, 0), dwArg04)
l0000368E:
	d3_2499 = d3_2584 - 1<32>
	d4_2586 = d4_2588 - 1<32>
l00003658:
	d5_1086 = dwLoc44_4275
l00003692:
	branch SLICE(d7, byte, 0) == 0x78<8> l0000369E
l00003698:
	branch SLICE(d7, byte, 0) != 0x58<8> l000036A8
l000036A8:
	branch SLICE(d7, byte, 0) != 0x6F<8> l000036B8
l000036B8:
	dwLoc44_4294 = 0xA<32>
l000036AE:
	dwLoc44_4294 = 8<32>
l000036C0:
	dwLoc38_4297 = dwLoc44_4294
l0000369E:
	dwLoc38_4297 = 0x10<32>
l000036C6:
	d0_2843 = CONVERT(Mem2814[0x000028B1<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_2843 & 0x44<32>
	dwLoc44_4302 = d4_2586
	bLoc2E_4303 = SLICE(d7, byte, 0)
	branch (d0_2843 & 0x44<32>) == 0<32> l0000392E
l000036F8:
	branch dwLoc38_4297 != 0xA<32> l0000372E
l00003702:
	d0_2899 = CONVERT(Mem2882[0x000028B1<p32> + (CONVERT(SLICE(d5_1086, byte, 0), uint8, uint32) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_2899 & 4<32>
	dwLoc44_4302 = d4_2586
	bLoc2E_4303 = SLICE(d7, byte, 0)
	branch (d0_2899 & 4<32>) == 0<32> l0000392E
l0000372E:
	branch dwLoc38_4297 != 8<32> l0000374E
l00003738:
	dwLoc44_4302 = d4_2586
	bLoc2E_4303 = SLICE(d7, byte, 0)
	branch d5_1086 > 0x37<32> l0000392E
l0000374E:
	dwLoc44_4302 = d4_2586
	bLoc2E_4303 = SLICE(d7, byte, 0)
	branch d6_1174 <u d3_2499 l0000392E
l00003764:
	d7 = dwLoc38_4297
l0000376C:
	d0_2992 = fn00003C4C(d4_2586, dwLoc38_4297 >> 0x1F<32>, dwLoc38_4297, dwLoc4C_4228, dwLoc48_4227, out d1_2993)
	branch (CONVERT(Mem3004[0x000028B1<p32> + (SEQ(SLICE(dwLoc38_4297 >> 0x1F<32>, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32) & 4<32>) == 0<32> l000037CC
l000037CC:
	d4_2586 = 0<32>
l000037C2:
	d4_2586 = d5_1086 - 0x30<32>
l000037CE:
	d0_3040 = d4_2586 >> 0x1F<32>
	d2_d2_4022 = SEQ(d0_2992, d4_2586) + SEQ(d0_3040, d1_2993)
	d2_3047 = SLICE(d2_d2_4022, word32, 0) (alias)
	d2_3057 = SLICE(d2_d2_4022, word32, 32) (alias)
	branch (CONVERT(Mem3059[0x000028B1<p32> + (SEQ(SLICE(d0_3040, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32) & 1<32>) == 0<32> l0000381E
l0000381E:
	d6_3082 = 0<32>
l00003814:
	d6_3082 = d5_1086 - 0x37<32>
l00003820:
	d0_3097 = d6_3082 >> 0x1F<32>
	d2_d2_4024 = SEQ(d2_3057, d6_3082) + SEQ(d0_3097, d2_3047)
	d2_3104 = SLICE(d2_d2_4024, word32, 0) (alias)
	d2_3113 = SLICE(d2_d2_4024, word32, 32) (alias)
	branch (CONVERT(Mem3115[0x000028B1<p32> + (SEQ(SLICE(d0_3097, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32) & 2<32>) == 0<32> l00003870
l00003870:
	d2_3138 = 0<32>
l00003866:
	d2_3138 = d5_1086 - 0x57<32>
l00003872:
	Mem3183[dwArg04 + 24<i32>:word32] = Mem3169[dwArg04 + 24<i32>:word32] | 1<32>
	v343_3185 = Mem3183[dwArg04 + 20<i32>:word32] - 1<32>
	Mem3186[dwArg04 + 20<i32>:word32] = v343_3185
	d2_d2_4026 = SEQ(d2_3113, d2_3138) + SEQ(d2_3138 >> 0x1F<32>, d2_3104)
	dwLoc48_4227 = SLICE(d2_d2_4026, word32, 0)
	dwLoc4C_4228 = SLICE(d2_d2_4026, word32, 32)
	branch v343_3185 < 0<32> l000038C4
l000038C4:
	d0_3197 = fn00003CCC(dwArg04, out a5_5879)
	d1 = d0_3197
l000038AC:
	a0_3210 = Mem3186[dwArg04 + 4<i32>:word32]
	Mem3215[dwArg04 + 4<i32>:word32] = a0_3210 + 1<32>
	v345_3219 = Mem3215[a0_3210:byte]
	d0_3197 = CONVERT(v345_3219, uint8, uint32)
	d1 = CONVERT(v345_3219, uint8, uint32)
l000038D0:
	d0_3248 = CONVERT(Mem3236[0x000028B1<p32> + (SEQ(SLICE(d0_3197, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d5_1086 = d1
	d3_2499 = d3_5882 + 1<32>
	dwLoc44_4302 = dwLoc44_4302 + 1<32>
	d0 = d0_3248 & 0x44<32>
	branch (d0_3248 & 0x44<32>) == 0<32> l0000392E
l000038F4:
	branch dwLoc38_4297 != 0xA<32> l00003918
l000038FC:
	d0_3270 = CONVERT(Mem3236[0x000028B1<p32> + (CONVERT(SLICE(d1, byte, 0), uint8, uint32) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_3270 & 4<32>
	branch (d0_3270 & 4<32>) == 0<32> l0000392E
l00003918:
	branch dwLoc38_4297 != 8<32> l00003928
l00003920:
	branch d1 > 0x37<32> l0000392E
l00003928:
	d3_5882 = d3_2499
	branch d6_1174 >=u d3_5882 + 1<32> l0000376C
l0000392E:
	d7 = SEQ(SLICE(d7, word24, 8), bLoc2E_4303)
	d4_3307 = dwLoc44_4302
	branch dwLoc0A_4229 == 0<32> l00003962
l00003940:
	branch d3_2499 != 2<32> l00003962
l00003948:
	branch d5_1086 == 0xFFFFFFFF<32> l0000395A
l00003950:
	d0 = fn00002BF8(SLICE(d5_1086, byte, 0), dwArg04)
l0000395A:
	d3_2499 = d3_2499 - 1<32>
	d4_3307 = dwLoc44_4302 - 1<32>
	d5_1086 = dwLoc0A_4229
l00003962:
	branch d5_1086 == 0xFFFFFFFF<32> l00003974
l0000396A:
	d0 = fn00002BF8(SLICE(d5_1086, byte, 0), dwArg04)
l00003974:
	d3_130 = d3_2499 - 1<32>
	d4_132 = d4_3307 - 1<32>
	branch bLoc2F_4057 != 0<8> l00003B22
l00003980:
	branch d3_130 == 0<32> l00003B22
l00003986:
	branch bLoc2E_4303 != 0x75<8> l00003A48
l00003A48:
	branch dwLoc0A_4229 != 0x2D<32> l00003A64
l00003A64:
	bLoc4C_4577 = bLoc30_4056 - 1<8>
	branch bLoc4C_4577 == 0<8> l00003A9A
l00003A9A:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	a0_3450 = Mem3431[d0:word32]
	Mem3452[a0_3450 + 4<i32>:word32] = dwLoc48_4227
	Mem3454[a0_3450:word32] = dwLoc4C_4228
	d2_1002 = d0 + 4<32>
l00003A84:
	branch bLoc4C_4577 == 1<8> l00003AEC
l00003AEC:
	d0_3465 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3473[Mem3459[d0_3465:word32]:byte] = SLICE(dwLoc48_4227, byte, 0)
	d2_1002 = d0_3465 + 4<32>
	d0 = dwLoc48_4227
l00003A8A:
	branch bLoc4C_4577 == 0x67<8> l00003AD2
l00003AD2:
	d0_3484 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3492[Mem3478[d0_3484:word32]:word16] = SLICE(dwLoc48_4227, word16, 0)
	d2_1002 = d0_3484 + 4<32>
	d0 = dwLoc48_4227
l00003A92:
	branch bLoc4C_4577 == 0x6B<8> l00003AB8
l00003AB8:
	d0_3503 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3510[Mem3497[d0_3503:word32]:word32] = dwLoc48_4227
	d2_1002 = d0_3503 + 4<32>
	d0 = dwLoc48_4227
l00003A98:
l00003B06:
	d0_3517 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3524[Mem3497[d0_3517:word32]:word32] = dwLoc48_4227
	d2_1002 = d0_3517 + 4<32>
	d0 = dwLoc48_4227
l00003A52:
l0000398E:
	bLoc44_4582 = bLoc30_4056 - 1<8>
	branch bLoc44_4582 == 0<8> l000039B8
l000039B8:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	a0_3564 = Mem3548[d0:word32]
	Mem3566[a0_3564 + 4<i32>:word32] = dwLoc48_4227
	Mem3568[a0_3564:word32] = dwLoc4C_4228
	d2_1002 = d0 + 4<32>
l000039A2:
	branch bLoc44_4582 == 1<8> l00003A10
l00003A10:
	d0_3579 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3587[Mem3573[d0_3579:word32]:byte] = SLICE(dwLoc48_4227, byte, 0)
	d2_1002 = d0_3579 + 4<32>
	d0 = dwLoc48_4227
l000039A8:
	branch bLoc44_4582 == 0x67<8> l000039F4
l000039F4:
	d0_3598 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3606[Mem3592[d0_3598:word32]:word16] = SLICE(dwLoc48_4227, word16, 0)
	d2_1002 = d0_3598 + 4<32>
	d0 = dwLoc48_4227
l000039B0:
	branch bLoc44_4582 == 0x6B<8> l000039D8
l000039D8:
	d0_3617 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3624[Mem3611[d0_3617:word32]:word32] = dwLoc48_4227
	d2_1002 = d0_3617 + 4<32>
	d0 = dwLoc48_4227
l000039B6:
l00003A2C:
	d0_3631 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3638[Mem3611[d0_3631:word32]:word32] = dwLoc48_4227
	d2_1002 = d0_3631 + 4<32>
	d0 = dwLoc48_4227
l00003B1E:
	dwLoc3C_4041 = dwLoc3C_4041 + 1<32>
l00003B22:
	a4_280 = a3_2025
l00003C20:
	branch d3_130 == 0<32> l00003C2A
l00003C24:
	branch Mem3726[a4_280:byte] != 0<8> l00002C4A
l00003C2A:
	branch d5_1086 != 0xFFFFFFFF<32> l00003C3C
l00003C32:
	branch dwLoc3C_4041 != 0<32> l00003C3C
l00003C3C:
l00003C38:
l00003C40:
	return
fn00002C28_exit:


word32 fn00003C4C(word32 d4, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 & d1Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002C28
// MayUse:  d4:[16..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: d0:[0..31]-fn00002C28 d1:[0..31]-fn00002C28
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
fn00003C4C_entry:
l00003C4C:
	d0_23 = __swap(dwArg08)
	d1_25 = __swap(dwArg10)
	d4_29 = SEQ(SLICE(d4, word16, 16), SLICE(dwArg08, word16, 0)) *u32 SLICE(dwArg10, word16, 0)
	d1_32 = d1_25 *u32 SLICE(d0_23, word16, 0)
	d2_39 = dwArg08 *u32 SLICE(d1_25, word16, 0) + __swap(SEQ(SLICE(d4_29, word16, 16), SLICE(d4_29, word16, 0) ^ SLICE(d4_29, word16, 0))) + dwArg10 *u32 SLICE(d0_23, word16, 0)
	branch d2_39 >=u 0<32> l00003C80
l00003C7A:
	d1_32 = d1_32 + 0x10000<32>
l00003C80:
	d2_45 = __swap(d2_39)
	d3_65 = __swap(dwArg0C) *u32 SLICE(dwArg08, word16, 0)
	d3_71 = __swap(SEQ(SLICE(d3_65, word16, 16), SLICE(d3_65, word16, 0) + SLICE(__swap(dwArg08), word16, 0) *u SLICE(dwArg0C, word16, 0)))
	d3_83 = __swap(dwArg04) *u32 SLICE(dwArg10, word16, 0)
	d3_89 = __swap(SEQ(SLICE(d3_83, word16, 16), SLICE(d3_83, word16, 0) + SLICE(__swap(dwArg10), word16, 0) *u SLICE(dwArg04, word16, 0)))
	d1Out = SEQ(SLICE(d2_45, word16, 16), SLICE(d4_29, word16, 0))
	return CONVERT(SLICE(d2_45, word16, 0), uint16, uint32) + d1_32 + (dwArg0C *u32 SLICE(dwArg08, word16, 0) + SEQ(SLICE(d3_71, word16, 16), SLICE(d3_71, word16, 0) ^ SLICE(d3_71, word16, 0))) + (dwArg04 *u32 SLICE(dwArg10, word16, 0) + SEQ(SLICE(d3_89, word16, 16), SLICE(d3_89, word16, 0) ^ SLICE(d3_89, word16, 0)))
fn00003C4C_exit:


word32 fn00003CCC(word32 dwArg04, word32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002C28
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5:[0..31]-fn00002C28 d0:[0..31]-fn00002C28
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a4 a6 a7 d2 d3 d4 d5
fn00003CCC_entry:
l00003CCC:
	a5_295 = fn00002424()
	branch dwArg04 != 0<32> l00003CE4
l00003CE4:
	branch (Mem26[dwArg04 + 24<i32>:word32] & 0x2A<32>) == 0x20<32> l00003CF6
l00003CF6:
	Mem51[dwArg04 + 24<i32>:word32] = Mem26[dwArg04 + 24<i32>:word32] | 1<32>
	branch (Mem51[dwArg04 + 24<i32>:word32] & 0x200<32>) == 0<32> l00003D0E
l00003D08:
	a5_295 = fn00003DC8()
l00003D0E:
	branch Mem51[dwArg04 + 28<i32>:word32] != 0<32> l00003D2C
l00003D14:
	branch (Mem51[dwArg04 + 24<i32>:word32] & 4<32>) == 0<32> l00003D24
l00003D24:
	Mem80[dwArg04 + 28<i32>:word32] = 0x400<32>
l00003D1C:
	Mem85[dwArg04 + 28<i32>:word32] = 1<32>
l00003D2C:
	branch Mem90[dwArg04 + 8<i32>:word32] != 0<32> l00003D68
l00003D32:
	branch (Mem90[dwArg04 + 24<i32>:word32] & 0x80<32>) == 0<32> l00003D46
l00003D46:
	d4_102 = 1<32>
l00003D42:
	d4_102 = 2<32>
l00003D48:
	d0_126 = fn00002050(d4_102 + Mem90[dwArg04 + 28<i32>:word32], out a0_324)
	branch d0_126 != 0<32> l00003D60
l00003D60:
	Mem141[dwArg04 + 8<i32>:word32] = d0_126 + 1<i32>
l00003D68:
	Mem149[dwArg04 + 4<i32>:word32] = Mem147[dwArg04 + 8<i32>:word32]
	d0_154 = execPrivate2()
	Mem156[dwArg04 + 20<i32>:word32] = d0_154
	v24_157 = Mem156[dwArg04 + 20<i32>:word32] - 1<32>
	Mem158[dwArg04 + 20<i32>:word32] = v24_157
	branch v24_157 >= 0<32> l00003DAE
l00003DAE:
	a0_162 = Mem158[dwArg04 + 4<i32>:word32]
	Mem165[dwArg04 + 4<i32>:word32] = a0_162 + 1<32>
	d0_169 = SEQ(SLICE(d0_154, word24, 8), Mem165[a0_162:byte]) & 0xFF<32>
l00003D8C:
	branch Mem158[dwArg04 + 20<i32>:word32] != 0xFFFFFFFF<32> l00003D9E
l00003D9E:
	Mem180[dwArg04 + 24<i32>:word32] = Mem158[dwArg04 + 24<i32>:word32] | 0x10<32>
l00003D94:
	Mem187[dwArg04 + 24<i32>:word32] = Mem158[dwArg04 + 24<i32>:word32] | 8<32>
l00003DA6:
	Mem192[dwArg04 + 20<i32>:word32] = 0<32>
	d0_169 = 0xFFFFFFFF<32>
l00003D5C:
	d0_169 = 0xFFFFFFFF<32>
l00003CF0:
	d0_169 = 0xFFFFFFFF<32>
l00003CDE:
	d0_169 = 0xFFFFFFFF<32>
l00003DC2:
	a5Out = a5_295
	return d0_169
fn00003CCC_exit:


word32 fn00003DC8()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003CCC
// MayUse: 
// LiveOut: a5:[0..31]-fn00003CCC
// Trashed: CVZN a0 a1 a4 a5 d0 d1
// Preserved: X a2 a7
fn00003DC8_entry:
l00003DC8:
	a2_13 = Mem5[0x00003FFC<p32>:word32]
	branch a2_13 == 0<32> l00003E00
l00003DD6:
	branch (Mem14[a2_13 + 24<i32>:word32] & 0x202<32>) != 0x202<32> l00003DF6
l00003DE8:
	branch Mem14[a2_13:word32] == 0<32> l00003DF6
l00003DEC:
	fn00001FA4(a2_13, out a0_90, out a5)
l00003DF6:
	a2_13 = Mem43[a2_13 + 12<i32>:word32]
	branch a2_13 != 0<32> l00003DD6
l00003E00:
	return a5
fn00003DC8_exit:


word32 fn00003E04(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  Stack +0004:[0..31]
// LiveOut: d0:[0..31]-fn00001390
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a7 d2
fn00003E04_entry:
l00003E04:
	a2_101 = dwArg04
	d2_104 = 0<32>
	branch Mem11[dwArg04:byte] == 0<8> l00003E84
l00003E12:
	a0_19 = Mem18[0x00003FF4<p32>:word32]
	Mem23[a0_19 + 24<i32>:word32] = Mem18[a0_19 + 24<i32>:word32] | 2<32>
	v15_25 = Mem23[a0_19 + 20<i32>:word32] - 1<32>
	Mem26[a0_19 + 20<i32>:word32] = v15_25
	branch v15_25 < 0<32> l00003E5A
l00003E28:
	branch Mem26[a2_101:byte] != 0xA<8> l00003E40
l00003E2E:
	branch (Mem26[Mem26[0x00003FF4<p32>:word32] + 24<i32>:word32] & 0x80<32>) != 0<32> l00003E5A
l00003E5A:
	d1_69 = fn00001E90(CONVERT(Mem45[a2_101:byte], int8, int32), Mem26[0x00003FF4<p32>:word32], out a0_191, out a5_192)
l00003E40:
	a1_75 = Mem26[0x00003FF4<p32>:word32]
	a0_77 = Mem26[a1_75 + 4<32>:word32]
	Mem80[a1_75 + 4<32>:word32] = a0_77 + 1<32>
	Mem83[a0_77:byte] = Mem80[a2_101:byte]
	d1_69 = CONVERT(Mem83[a0_77:byte], uint8, uint32)
l00003E72:
	branch d1_69 != 0xFFFFFFFF<32> l00003E7C
l00003E7C:
	a2_101 = a2_101 + 1<32>
	d2_104 = d2_104 + 1<32>
	branch Mem108[a2_101:byte] != 0<8> l00003E12
l00003E84:
	d0_114 = d2_104
l00003E78:
	d0_114 = 0xFFFFFFFF<32>
l00003E86:
	return d0_114
fn00003E04_exit:


