void fn00001000(word32 d0, word32 a0)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] d0:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5
// Preserved: a7 d7
fn00001000_entry:
l00001000:
l0000100A:
	a6_9 = Mem0[0x00000004<p32>:word32]
	d2_108 = d0
	a2_305 = a0
	branch Mem0[a6_9 + 20<i32>:word16] >=u 0x24<16> l00001036
l00001020:
	a0_13 = 0x00003D90<p32>
	d0_16 = 0xC<32>
l00001030:
	Mem19[a0_13:word32] = 0<32>
	a0_13 = a0_13 + 4<i32>
	d0_16 = d0_16 - 1<32>
	branch d0_16 != 0<32> l00001030
l00001036:
	Mem29[0x00003D90<p32>:word32] = fp
	Mem32[0x00003D94<p32>:word32] = a6_9
	d0_34 = FindTask(0<32>)
	d0_38 = OpenLibrary(0x000012BC<p32>, 0<32>)
	branch d0_38 == 0<32> l00001226
l00001226:
	Alert(0x38007<32>)
l00001056:
	Mem67[0x00003D98<p32>:word32] = d0_38
	branch Mem67[d0_34 + 172<i32>:word32] != 0<32> l00001066
l00001066:
	a0_75 = a0
	d4_103 = 3<32>
l0000106A:
	branch Mem67[a0_723:byte] != 0x20<8> l00001072
l00001070:
	d4_103 = SEQ(SLICE(d4_103, word16, 16), SLICE(d4_103, word16, 0) + 1<16>)
l00001072:
	a0_75 = a0_723 + 1<i32>
	a0_723 = a0_75
	branch Mem67[a0_723:byte] != 0<8> l0000106A
l00001060:
	d4_103 = 2<32>
	d2_108 = 8<32>
l00001076:
	d0_106 = d4_103 << 2<32>
	d0_113 = d0_106 + d2_108
	d1_117 = 0x10001<32>
	d0_118 = AllocMem(d0_113 + 0x11<32>, 0x10001<32>)
	branch d0_118 == 0<32> l0000123E
l0000123E:
	CloseLibrary(Mem67[0x00003D98<p32>:word32])
	Alert(0x10000<32>)
l0000125C:
	branch Mem163[d0_34 + 172<i32>:word32] != 0<32> l00001268
l00001262:
	fn0000126C(fn00001214(d0_34))
l00001268:
	return
l00001096:
	Mem180[d0_118:word32] = d0_113 + 0x11<32>
	Mem183[d0_118 + 12<i32>:word32] = d4_103 - 1<32>
	Mem186[d0_118 + 8<i32>:word32] = d0_118 + 16<i32> + d0_106
	Mem188[0<32>:word32] = 0<32>
	d0_189 = Mem188[d0_34 + 172<i32>:word32]
	branch d0_189 == 0<32> l00001190
l00001190:
	d0_195 = fn00001214(d0_34)
	Mem197[0x00003D9C<p32>:word32] = d0_195
	Mem198[0x00003DA0<p32>:word32] = d0_195
	Mem202[0<32>:word32] = 0<32>
	dwLoc0C_582 = d0_195
	branch Mem202[d0_195 + 36<i32>:word32] == 0<32> l000011B6
l000011AE:
	Enable()
l000011B6:
	d0_220 = Supervisor(d0_118)
	Mem221[d0_118 + 4<i32>:word32] = d0_220
	branch d0_220 != 0<32> l000011D2
l000011D2:
	Mem227[0x00003DA4<p32>:word32] = d0_220
	Mem228[0x00003DA8<p32>:word32] = d0_220
	Mem229[0x00003DAC<p32>:word32] = d0_220
	Mem231[d0_34 + 156<i32>:word32] = d0_220
	Mem232[d0_34 + 160<i32>:word32] = d0_220
	d0_236 = Mem232[(d0_220 << 2<32>) + 8<i32>:word32]
	branch d0_236 == 0<32> l000011F4
l000011F0:
	Mem241[d0_34 + 164<i32>:word32] = d0_236
l000011F4:
l000011CC:
l000011CE_thunk_fn0000127C:
	fn0000127C()
	return
l000010B6:
	d0_266 = Mem188[(d0_189 << 2<32>) + 16<i32>:word32]
	a1_269 = Mem188[d0_118 + 8<i32>:word32]
	a0_274 = (d0_266 << 2<32>) + 1<i32>
	Mem277[a0_274 + CONVERT(Mem188[d0_266 << 2<32>:byte], uint8, uint32):byte] = 0<8>
	Mem278[d0_118 + 16<i32>:word32] = a0_274
	a6_279 = d0_118 + 20<i32>
	d3_280 = 1<32>
	a0_287 = a0 + d2_108
l000010DA:
	a0_287 = a0_287 - 1<i32>
	branch Mem278[a0_287:byte] >u 0x20<8> l000010E2
l000010DE_1:
	v30_295 = SLICE(d2_108, word16, 0)
	d2_108 = SEQ(SLICE(d2_108, word16, 16), v30_295 - 1<i16>)
	branch v30_295 != 0<16> l000010DA
l000010E2:
	Mem300[a0_287 + 1<i32>:byte] = 0<8>
l000010E6:
	v32_307 = Mem306[a2_305:byte]
	a2_305 = a2_305 + 1<i32>
	d1_117 = SEQ(SLICE(d1_117, word24, 8), v32_307)
	branch v32_307 == 0<8> l00001148
l000010EA:
	branch v32_307 == 0x20<8> l000010E6
l000010F0:
	branch v32_307 == 9<8> l000010E6
l000010F6:
	branch d3_280 == Mem306[d0_118 + 12<i32>:word32] l00001148
l000010FC:
	Mem329[a6_279:word32] = a1_269
	a6_279 = a6_279 + 4<i32>
	d3_280 = SEQ(SLICE(d3_280, word16, 16), SLICE(d3_280, word16, 0) + 1<16>)
	branch v32_307 == 0x22<8> l0000111A
l0000111A:
	v51_340 = Mem339[a2_305:byte]
	v52_343 = SLICE(d1_117, word24, 8)
	a2_305 = a2_305 + 1<i32>
	d1_117 = SEQ(v52_343, v51_340)
	branch v51_340 == 0<8> l00001148
l0000111E:
	branch v51_340 == 0x22<8> l00001116
l00001124:
	branch v51_340 != 0x2A<8> l00001144
l0000112A:
	v55_355 = Mem339[a2_305:byte]
	a2_305 = a2_305 + 1<i32>
	d1_117 = SEQ(v52_343, v55_355)
	branch (v55_355 & 0xDF<8>) != 0x4E<8> l0000113C
l0000113C:
	branch (v55_355 & 0xDF<8>) != 0x45<8> l00001144
l00001142:
	d1_117 = 0x1B<32>
l00001138:
	d1_117 = 0xA<32>
l00001144:
	Mem384[a1_269:byte] = SLICE(d1_117, byte, 0)
	a1_269 = a1_269 + 1<i32>
l00001106:
	Mem390[a1_269:byte] = v32_307
	a1_269 = a1_269 + 1<i32>
l00001108:
	v41_397 = Mem396[a2_305:byte]
	a2_305 = a2_305 + 1<i32>
	d1_117 = SEQ(SLICE(d1_117, word24, 8), v41_397)
	branch v41_397 == 0<8> l00001148
l00001148:
	Mem408[a1_269:byte] = 0<8>
	Mem413[a6_279:word32] = 0<32>
	Mem438[0x00003DA4<p32>:word32] = execPrivate4()
	d0_439 = execPrivate5()
	Mem440[0x00003DA8<p32>:word32] = d0_439
	dwLoc0C_582 = d0_118 + 16<i32>
	dwLoc10 = d3_280
	branch Mem440[Mem440[0x00003D94<p32>:word32] + 20<i32>:word16] <u 0x24<16> l0000117A
l00001172:
	v65_450 = Mem440[d0_34 + 224<i32>:word32]
	Mem451[0x00003DAC<p32>:word32] = v65_450
	branch v65_450 != 0<32> l0000117E
l0000117A:
	Mem458[0x00003DAC<p32>:word32] = d0_439
l0000117E:
	branch Mem464[d0_34 + 8<i32>:byte] != 0xD<8> l000011F8
l000011F8:
	a0_472 = Mem470[d0_34 + 58<i32>:word32]
l00001186:
	a0_475 = Mem464[d0_34 + 176<i32>:word32]
	a0_472 = a0_475 + 4<i32> - Mem464[a0_475:word32]
l00001202:
	Mem487[0x00003DB8<p32>:word32] = a0_472
	Mem494[0x00003DBC<p32>:word32] = fp - 16<i32>
	fn00001354(dwLoc10, dwLoc0C_582)
l00001212_thunk_fn0000127C:
	fn0000127C()
	return
fn00001000_exit:
l0000110C:
	branch v41_397 == 0x20<8> l00001116
l00001116:
	Mem530[a1_269:byte] = 0<8>
	a1_269 = a1_269 + 1<i32>
l00001112:
	Mem537[a1_269:byte] = v41_397
	a1_269 = a1_269 + 1<i32>


word32 fn00001214(word32 a3)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  a3:[0..31]
// LiveOut: d0:[0..31]-fn00001000
// Trashed: a0 d0
// Preserved: a7
fn00001214_entry:
l00001214:
	WaitPort(a3 + 92<i32>)
	return GetMsg(a3 + 92<i32>)
fn00001214_exit:


void fn0000126C(word32 a2)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  a2:[0..31]
// LiveOut:
// Trashed: a1 d0
// Preserved: a7
fn0000126C_entry:
l0000126C:
	Forbid()
	ReplyMsg(a2)
	return
fn0000126C_exit:


word32 fn00001278(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000012D0
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5:[0..31]-fn000012D0
// Trashed: CVZN a1 a2 a4 a5 a6 d0 d1 d2
// Preserved: a7
fn00001278_entry:
l00001278:
l00001278_thunk_fn0000127C:
	return fn0000127C()
fn00001278_exit:


word32 fn0000127C()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
//      fn00001278
// MayUse: 
// LiveOut: a5:[0..31]-fn00001278
// Trashed: CVZN a1 a2 a4 a5 a6 a7 d0 d1
// Preserved:
fn0000127C_entry:
l0000127C:
	a7_6 = Mem0[0x00003D90<p32>:word32]
	v8_11 = Mem0[a7_6 - 4<32>:word32]
	v6_8 = Mem0[a7_6 - 8<32>:word32]
	branch Mem0[v8_11 + 4<i32>:word32] == 0<32> l0000129E
l00001296:
	execPrivate1()
l0000129E:
	CloseLibrary(Mem0[0x00003D98<p32>:word32])
	branch v6_8 == 0<32> l000012B0
l000012AE:
	fn0000126C(v6_8)
l000012B0:
	FreeMem(v8_11, Mem0[v8_11:word32])
	return v8_11
fn0000127C_exit:


word32 fn000012D0(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000131C
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5:[0..31]-fn0000131C
// Trashed: CVZNX a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7 d2
fn000012D0_entry:
l000012D0:
	branch false l00001308
l000012E2:
	d2_18 = 1<32>
	branch Mem11[0x00003EDC<p32>:word32] == 0<32> l000012F6
l000012EA:
	d2_18 = d2_18 + 1<32>
	branch Mem11[0x00003ED8<p32> + (d2_18 << 2<32>):word32] != 0<32> l000012EA
l000012F6:
	d2_35 = d2_18 - 1<32>
	branch d2_35 == 0<32> l00001308
l000012FA:
	call Mem11[0x00003ED8<p32> + (d2_35 << 2<32>):word32] (retsize: 4;)
		uses: d0:d2_38 << 2<32>,Mem:Mem11,Stack +0014:dwArg04
	d2_35 = d2_35 - 1<32>
	branch d2_35 != 0<32> l000012FA
l00001308:
	return fn00001278(dwArg04)
fn000012D0_exit:


word32 fn0000131C(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001354
//      fn00002BBC
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5:[0..31]-fn00002BBC
// Trashed: CVZN a1 a4 a5 a6 d0 d1
// Preserved: X a2 a3 a7
fn0000131C_entry:
l0000131C:
	branch Mem8[0x00003DC0<p32>:word32] != 0<32> l0000134E
l00001328:
	a3_13 = Mem8[0x00003EE8<p32>:word32]
	Mem15[0x00003DC0<p32>:word32] = 1<32>
	branch a3_13 == 0<32> l00001346
l0000133A:
	call Mem15[a3_13 + 4<i32>:word32] (retsize: 4;)
		uses: d0:a3_27,Mem:Mem15,Stack +0010:dwArg04
	a3_13 = Mem15[a3_13:word32]
	branch a3_13 != 0<32> l0000133A
l00001346:
	a5 = fn000012D0(dwArg04)
l0000134E:
	return a5
fn0000131C_exit:


void fn00001354(word32 dwArg04, word32 dwArg08)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7
fn00001354_entry:
l00001354:
	a3_19 = 0x00003ED0<p32>
	d0_10 = 0x3ECC<32>
	branch false l00001372
l00001366:
	branch Mem8[0x00003ED0<p32>:word32] == 0<32> l00001372
l0000136A:
	call Mem8[a3_19:word32] (retsize: 4;)
		uses: Mem:Mem8,Stack +0010:dwArg04,Stack +0014:dwArg08
		defs: d0:d0_25
	a3_19 = a3_19 + 4<i32>
	branch Mem8[a3_19:word32] != 0<32> l0000136A
l00001372:
	fn0000131C(fn00001390(d0_10))
	return
fn00001354_exit:


word32 fn00001390(word32 d0)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001354
// MayUse:  d0:[0..31]
// LiveOut: d0:[0..31]-fn00001354
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn00001390_entry:
l00001390:
	fn0000141C(fn00002F18(d0, 0x000013DC<p32>), 0x000013F0<p32>)
	d0_34 = dwLoc08
	branch dwLoc08 == dwLoc04 l000013D8
l000013BE:
	d0_34 = fn00002F18(fn00001408(dwLoc08, dwLoc04), 0x000013F8<p32>)
l000013D8:
	return d0_34
fn00001390_exit:


word32 fn00001408(word32 dwArg04, word32 dwArg08)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: d0:[0..31]-fn00001390
// Trashed: CVZN d0 d1
// Preserved: a7
fn00001408_entry:
l00001408:
	d0_18 = dwArg04
	branch dwArg08 >= dwArg04 l00001416
l00001416:
	d0_18 = dwArg08
l00001414:
l00001418:
	return d0_18
fn00001408_exit:


void fn0000141C(word32 d0, word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  d0:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 d0
// Preserved: a7
fn0000141C_entry:
l0000141C:
	fn00001468(d0, Mem8[0x00003EF4<p32>:word32], dwArg04, fp + 8<i32>)
	return
fn0000141C_exit:


word32 fn00001438(byte bArg07, word32 dwArg08)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001468
// MayUse:  Stack +0007:[0..7] Stack +0008:[0..31]
// LiveOut: d0:[8..31]-fn00001468
// Trashed: CVZNX a0 d0
// Preserved: a2 a7
fn00001438_entry:
l00001438:
	d0_12 = dwArg08
	branch dwArg08 == 0<32> l00001462
l00001444:
	d0_12 = Mem5[dwArg08 + 4<i32>:word32]
	branch d0_12 >=u Mem5[dwArg08 + 8<i32>:word32] l00001456
l0000144E:
	Mem18[Mem5[dwArg08 + 4<i32>:word32]:byte] = bArg07
l00001456:
	Mem26[dwArg08 + 20<i32>:word32] = Mem24[dwArg08 + 20<i32>:word32] + 1<32>
	Mem29[dwArg08 + 4<i32>:word32] = Mem26[dwArg08 + 4<i32>:word32] - 1<32>
l00001462:
	return d0_12
fn00001438_exit:


void fn00001468(word32 d0, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000141C
// MayUse:  d0:[8..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: CVZN d0
// Preserved: X a0 a1 a2 a3 a4 a5 a6 a7 d1 d2 d3 d4 d5 d6 d7
fn00001468_entry:
l00001468:
	d2_1002 = dwArg0C
	a4_280 = dwArg08
	dwLoc3C_4041 = 0<32>
	d4_132 = 0<32>
	d5_1086 = 0<32>
	branch Mem40[dwArg08:byte] == 0<8> l0000246A
l0000148A:
	d3_1918 = 0<32>
	branch Mem49[a4_280:byte] != 0x25<8> l00002368
l00002368:
	d0_63 = CONVERT(Mem49[0x00002BED<p32> + (SEQ(SLICE(d0, word24, 8), Mem49[a4_280:byte]) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_63 & 8<32>
	branch (d0_63 & 8<32>) == 0<32> l000023F4
l000023F4:
	Mem72[dwArg04 + 24<i32>:word32] = Mem49[dwArg04 + 24<i32>:word32] | 1<32>
	v113_74 = Mem72[dwArg04 + 20<i32>:word32] - 1<32>
	Mem75[dwArg04 + 20<i32>:word32] = v113_74
	branch v113_74 < 0<32> l00002426
l00002426:
	dwLoc4C_4043 = fn00002604(dwArg04, out a5_5870)
	d1 = d1_88
l00002406:
	a0_100 = Mem75[dwArg04 + 4<i32>:word32]
	Mem105[dwArg04 + 4<i32>:word32] = a0_100 + 1<32>
	dwLoc4C_4043 = CONVERT(Mem105[a0_100:byte], uint8, uint32)
l00002434:
	d0 = CONVERT(Mem127[a4_280:byte], int8, int32)
	d5_1086 = dwLoc4C_4043
	d3_130 = 1<32>
	d4_132 = d4_132 + 1<32>
	branch d0 == dwLoc4C_4043 l0000245E
l00002448:
	branch dwLoc4C_4043 == 0xFFFFFFFF<32> l0000245A
l00002450:
	d0 = fn00001438(SLICE(dwLoc4C_4043, byte, 0), dwArg04)
l0000245A:
	d3_130 = 0<32>
	d4_132 = d4_132 - 1<32>
l00002384:
	Mem174[dwArg04 + 24<i32>:word32] = Mem172[dwArg04 + 24<i32>:word32] | 1<32>
	v97_176 = Mem174[dwArg04 + 20<i32>:word32] - 1<32>
	Mem177[dwArg04 + 20<i32>:word32] = v97_176
	branch v97_176 < 0<32> l000023AE
l000023AE:
	d0_189 = fn00002604(dwArg04, out a5_5869)
	d1 = d0_189
l00002396:
	a0_202 = Mem177[dwArg04 + 4<i32>:word32]
	Mem207[dwArg04 + 4<i32>:word32] = a0_202 + 1<32>
	v99_211 = Mem207[a0_202:byte]
	d0_189 = SEQ(SLICE(d0, word24, 8), v99_211)
	d1 = CONVERT(v99_211, uint8, uint32)
l000023BA:
	d0_242 = CONVERT(Mem239[0x00002BED<p32> + (SEQ(SLICE(d0_189, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d5_1086 = d1
	d4_132 = d4_132 + 1<32>
	d0 = d0_242 & 8<32>
	branch (d0_242 & 8<32>) != 0<32> l00002384
l000023DC:
	branch d1 == 0xFFFFFFFF<32> l000023EE
l000023E4:
	d0 = fn00001438(SLICE(d1, byte, 0), dwArg04)
l000023EE:
	d4_132 = d4_132 - 1<32>
	d3_130 = 1<32>
l0000245E:
	a4_280 = a4_280 + 1<32>
l00001494:
	a3_284 = a4_280 + 1<i32>
	d0_294 = CONVERT(Mem283[0x00002BED<p32> + CONVERT(Mem283[a3_284:byte], uint8, uint32):byte], uint8, uint32)
	d6_1174 = 0xFFFFFFFF<32>
	bLoc30_4056 = 0x69<8>
	bLoc2F_4057 = 0<8>
	d0 = d0_294 & 4<32>
	branch (d0_294 & 4<32>) == 0<32> l00001518
l000014BC:
	d0_310 = CONVERT(Mem283[0x00002BED<p32> + CONVERT(Mem283[a3_284:byte], uint8, uint32):byte], uint8, uint32)
	d6_1174 = 0<32>
	d0 = d0_310 & 4<32>
	branch (d0_310 & 4<32>) == 0<32> l00001518
l000014D6:
	d1_326 = __swap(0xA<32>) *u32 SLICE(d6_1174, word16, 0)
	d0_335 = SLICE(d6_1174, word16, 0) *u32 0xA<32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_326, word16, 16), SLICE(d1_326, word16, 0) + SLICE(__swap(d6_1174), word16, 0) *u 0xA<16>)), word16, 16), 0<16>)
	a3_284 = a3_284 + 1<i32>
	d1_344 = CONVERT(Mem320[a3_284:byte], uint8, uint32)
	d0_358 = CONVERT(Mem320[0x00002BED<p32> + CONVERT(Mem320[a3_284:byte], uint8, uint32):byte], uint8, uint32)
	d1 = d1_344 - 0x30<32>
	d6_1174 = d1_344 - 0x30<32> + d0_335
	d0 = d0_358 & 4<32>
	branch (d0_358 & 4<32>) != 0<32> l000014D6
l00001518:
	branch Mem365[a3_284:byte] == 0x68<8> l00001542
l0000151E:
	branch Mem365[a3_284:byte] == 0x6C<8> l00001542
l00001524:
	branch Mem365[a3_284:byte] == 0x4C<8> l00001542
l0000152A:
	branch Mem365[a3_284:byte] == 0x7A<8> l00001542
l00001530:
	branch Mem365[a3_284:byte] == 0x6A<8> l00001542
l00001536:
	branch Mem365[a3_284:byte] == 0x74<8> l00001542
l0000153C:
	branch Mem365[a3_284:byte] != 0x2A<8> l000015AA
l00001542:
	d7 = SEQ(SLICE(d7, word24, 8), 0<8>)
	d1 = SEQ(SLICE(d1, word24, 8), 0x69<8>)
l0000154A:
	branch Mem365[a3_284:byte] != 0x2A<8> l00001554
l00001554:
	branch SLICE(d1, byte, 0) != 0x68<8> l00001564
l0000155A:
	branch Mem365[a3_284:byte] != 0x68<8> l00001564
l00001564:
	branch SLICE(d1, byte, 0) != 0x6C<8> l00001574
l0000156A:
	branch Mem365[a3_284:byte] != 0x6C<8> l00001574
l00001574:
	d1 = SEQ(SLICE(d1, word24, 8), Mem365[a3_284:byte])
l00001570:
	d1 = 1<32>
l00001560:
	d1 = 2<32>
l00001550:
	d7 = 1<32>
l00001576:
	a3_284 = a3_284 + 1<32>
	branch Mem365[a3_284:byte] == 0x68<8> l0000154A
l0000157E:
	branch Mem365[a3_284:byte] == 0x6C<8> l0000154A
l00001584:
	branch Mem365[a3_284:byte] == 0x4C<8> l0000154A
l0000158A:
	branch Mem365[a3_284:byte] == 0x7A<8> l0000154A
l00001590:
	branch Mem365[a3_284:byte] == 0x6A<8> l0000154A
l00001596:
	branch Mem365[a3_284:byte] == 0x74<8> l0000154A
l0000159C:
	branch Mem365[a3_284:byte] == 0x2A<8> l0000154A
l000015A2:
	bLoc30_4056 = SLICE(d1, byte, 0)
	bLoc2F_4057 = SLICE(d7, byte, 0)
l000015AA:
	branch bLoc30_4056 != 0x6A<8> l000015B8
l000015B2:
	bLoc30_4056 = 1<8>
l000015B8:
	branch bLoc30_4056 != 0x74<8> l000015C6
l000015C0:
	bLoc30_4056 = 0x69<8>
l000015C6:
	branch bLoc30_4056 != 0x7A<8> l000015D4
l000015CE:
	bLoc30_4056 = 0x6C<8>
l000015D4:
	v77_519 = Mem518[a3_284:byte]
	v78_525 = SLICE(d7, word24, 8)
	a3_2025 = a3_284 + 1<i32>
	d7 = SEQ(v78_525, v77_519)
	branch v77_519 == 0<8> l0000164A
l000015D8:
	branch v77_519 == 0x25<8> l0000164A
l000015DE:
	branch v77_519 == 0x63<8> l0000164A
l000015E4:
	branch v77_519 == 0x6E<8> l0000164A
l000015EA:
	branch v77_519 == 0x5B<8> l0000164A
l000015F0:
	Mem547[dwArg04 + 24<i32>:word32] = Mem545[dwArg04 + 24<i32>:word32] | 1<32>
	v84_549 = Mem547[dwArg04 + 20<i32>:word32] - 1<32>
	Mem550[dwArg04 + 20<i32>:word32] = v84_549
	branch v84_549 < 0<32> l0000161A
l0000161A:
	d0_562 = fn00002604(dwArg04, out a5_5868)
	d1 = d0_562
l00001602:
	a0_575 = Mem550[dwArg04 + 4<i32>:word32]
	Mem580[dwArg04 + 4<i32>:word32] = a0_575 + 1<32>
	v88_584 = Mem580[a0_575:byte]
	d0_562 = SEQ(SLICE(d0, word24, 8), v88_584)
	d1 = CONVERT(v88_584, uint8, uint32)
l00001626:
	d0_615 = CONVERT(Mem612[0x00002BED<p32> + (SEQ(SLICE(d0_562, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d5_1086 = d1
	d4_132 = d4_132 + 1<32>
	d0 = d0_615 & 8<32>
	branch (d0_615 & 8<32>) != 0<32> l000015F0
l00001648:
	d3_1918 = 1<32>
l0000164A:
	v126_634 = SLICE(d1, word24, 8)
	d1_638 = SEQ(v126_634, v77_519 - 0x25<8>)
	branch v77_519 == 0x25<8> l00001A96
l00001A96:
	Mem657[dwArg04 + 24<i32>:word32] = Mem655[dwArg04 + 24<i32>:word32] | 1<32>
	v138_659 = Mem657[dwArg04 + 20<i32>:word32] - 1<32>
	Mem660[dwArg04 + 20<i32>:word32] = v138_659
	branch v138_659 < 0<32> l00001AC8
l00001AC8:
	d0 = fn00002604(dwArg04, out a5_5871)
	dwLoc4C_4076 = d0
	d1 = d1_675
l00001AA8:
	a0_687 = Mem660[dwArg04 + 4<i32>:word32]
	Mem692[dwArg04 + 4<i32>:word32] = a0_687 + 1<32>
	v140_696 = Mem692[a0_687:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v140_696)
	dwLoc4C_4076 = CONVERT(v140_696, uint8, uint32)
	d1 = d1_638
l00001AD6:
	d5_1086 = dwLoc4C_4076
	d3_130 = d3_1918 + 1<32>
	d4_132 = d4_132 + 1<32>
	branch dwLoc4C_4076 == 0x25<32> l00002362
l00001AEA:
	branch dwLoc4C_4076 == 0xFFFFFFFF<32> l00001AFC
l00001AF2:
	d0 = fn00001438(SLICE(dwLoc4C_4076, byte, 0), dwArg04)
l00001AFC:
	d3_130 = d3_130 - 1<32>
	d4_132 = d4_132 - 1<32>
l00001654:
	branch v77_519 == 0x5B<8> l00001792
l00001792:
	bLoc4C_4084 = 0<8>
	branch Mem787[a3_2025:byte] != 0x5E<8> l000017A4
l0000179C:
	bLoc4C_4084 = 1<8>
	a3_2025 = a3_2025 + 1<32>
l000017A4:
	d7 = SEQ(v78_525, bLoc4C_4084)
	d1_1069 = 0<32>
l000017B0:
	branch bLoc4C_4084 == 0<8> l000017BC
l000017BC:
	d5_814 = 0<32>
l000017B4:
	d5_814 = 0xFF<32>
l000017BE:
	Mem829[fp + -42<i32> + d1_1069:byte] = SLICE(d5_814, byte, 0)
	d1_1069 = d1_1069 + 1<32>
	branch d1_1069 <u 0x20<32> l000017B0
l000017D0:
l000017DC:
	branch Mem863[a3_2025:byte] == 0<8> l00001852
l000017E0:
	v407_868 = Mem863[a3_2025:byte]
	a3_2025 = a3_2025 + 1<i32>
	d1_1069 = SEQ(SLICE(d1_1069, word24, 8), v407_868)
	branch Mem863[a3_2025:byte] != 0x2D<8> l000017F4
l000017E8:
	branch v407_868 >=u Mem863[a3_2025 + 1<i32>:byte] l000017F4
l000017F4:
	d7 = SEQ(SLICE(d7, word24, 8), v407_868)
l000017EE:
	a3_2025 = a3_2025 + 2<32>
	d7 = SEQ(SLICE(d7, word24, 8), Mem863[a3_2025 + 1<32>:byte])
l000017F6:
	d5_900 = CONVERT(v407_868, uint8, uint32)
	d0 = CONVERT(SLICE(d7, byte, 0), uint8, uint32)
	branch d0 <u d5_900 l0000184C
l00001802:
	branch bLoc4C_4084 == 0<8> l00001826
l00001826:
	a0_919 = fp + -42<i32> + (d5_900 >>u 3<32>)
	d1_1069 = CONVERT(Mem927[a0_919:byte], uint8, uint32)
	Mem933[a0_919:byte] = 1<8> << (SLICE(d5_900, byte, 0) & 7<8>) | SLICE(d1_1069, byte, 0)
l00001806:
	a0_940 = fp + -42<i32> + (d5_900 >>u 3<32>)
	d1_1069 = CONVERT(Mem927[a0_940:byte], uint8, uint32)
	Mem954[a0_940:byte] = SLICE(~(1<32> << (d5_900 & 7<32>)) & d1_1069, byte, 0)
l00001842:
	d5_900 = d5_900 + 1<32>
	d0 = CONVERT(SLICE(d7, byte, 0), uint8, uint32)
	branch d0 >=u d5_900 l00001802
l0000184C:
	branch Mem975[a3_2025:byte] != 0x5D<8> l000017DC
l00001852:
	a3_2025 = a3_2025 + 1<32>
	branch bLoc2F_4057 != 0<8> l00001872
l00001872:
	a6_1005 = 0<32>
l0000185E:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	d2_1002 = d0 + 4<32>
	a6_1005 = Mem988[d0:word32]
l00001874:
	Mem1020[dwArg04 + 24<i32>:word32] = Mem988[dwArg04 + 24<i32>:word32] | 1<32>
	v431_1022 = Mem1020[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1023[dwArg04 + 20<i32>:word32] = v431_1022
	branch v431_1022 < 0<32> l000018A6
l000018A6:
	d0 = fn00002604(dwArg04, out a5_5880)
	dwLoc4C_4115 = d0
l00001886:
	a0_1048 = Mem1023[dwArg04 + 4<i32>:word32]
	Mem1053[dwArg04 + 4<i32>:word32] = a0_1048 + 1<32>
	v433_1057 = Mem1053[a0_1048:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v433_1057)
	dwLoc4C_4115 = CONVERT(v433_1057, uint8, uint32)
	d1 = d1_1069
l000018B4:
	d5_1086 = dwLoc4C_4115
	d3_1099 = d3_1918 + 1<32>
	d4_1112 = d4_132 + 1<32>
	branch dwLoc4C_4115 == 0xFFFFFFFF<32> l00001982
l000018C8:
	d1 = CONVERT(Mem1126[fp + -42<i32> + fn0000254C(d2_1002, dwLoc4C_4115, 0x00000008<p32>):byte], uint8, uint32)
	d0 = 1<32> << (dwLoc4C_4115 & 7<32>) & d1
	branch d0 == 0<32> l00001982
l000018F8:
	branch d6_1174 <u d3_1099 l00001982
l000018FE:
	d7 = SEQ(SLICE(d7, word24, 8), bLoc2F_4057)
l00001902:
	branch bLoc2F_4057 != 0<8> l00001908
l00001906:
	Mem1208[a6_1005:byte] = SLICE(d5_1086, byte, 0)
	a6_1005 = a6_1005 + 1<i32>
l00001908:
	Mem1219[dwArg04 + 24<i32>:word32] = Mem1216[dwArg04 + 24<i32>:word32] | 1<32>
	v449_1221 = Mem1219[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1222[dwArg04 + 20<i32>:word32] = v449_1221
	branch v449_1221 < 0<32> l00001932
l00001932:
	d0 = fn00002604(dwArg04, out a5_5881)
	d1 = d0
l0000191A:
	a0_1248 = Mem1222[dwArg04 + 4<i32>:word32]
	Mem1253[dwArg04 + 4<i32>:word32] = a0_1248 + 1<32>
	v451_1257 = Mem1253[a0_1248:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v451_1257)
	d1 = CONVERT(v451_1257, uint8, uint32)
l0000193E:
	d5_1086 = d1
	d3_1099 = d3_1099 + 1<32>
	d4_1112 = d4_1112 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l0000197E
l0000194C:
	d1 = CONVERT(Mem1293[fp + -42<i32> + fn0000254C(d2_1002, d1, 0x00000008<p32>):byte], uint8, uint32)
	d0 = 1<32> << (d1 & 7<32>) & d1
	branch d0 == 0<32> l0000197E
l0000197A:
	branch d6_1174 >=u d3_1099 l00001902
l0000197E:
l00001982:
	branch d5_1086 == 0xFFFFFFFF<32> l00001994
l0000198A:
	d0 = fn00001438(SLICE(d5_1086, byte, 0), dwArg04)
l00001994:
	d3_130 = d3_1099 - 1<32>
	d4_132 = d4_1112 - 1<32>
	branch bLoc2F_4057 != 0<8> l00002362
l000019A0:
	branch d3_130 == 0<32> l00002362
l000019A6:
	Mem1397[a6_1005:byte] = 0<8>
	dwLoc3C_4041 = dwLoc3C_4041 + 1<32>
l0000165C:
	d1_1404 = SEQ(v126_634, v77_519 - 0x63<8>)
	branch v77_519 == 0x63<8> l00001672
l00001672:
	branch d6_1174 != 0xFFFFFFFF<32> l0000167C
l0000167A:
	d6_1174 = 1<32>
l0000167C:
	branch bLoc2F_4057 != 0<8> l00001696
l00001696:
	a1_1420 = 0<32>
l00001682:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	d2_1002 = d0 + 4<32>
	a1_1420 = Mem655[d0:word32]
l00001698:
	Mem1436[dwArg04 + 24<i32>:word32] = Mem655[dwArg04 + 24<i32>:word32] | 1<32>
	Mem1439[dwArg04 + 20<i32>:word32] = Mem1436[dwArg04 + 20<i32>:word32] - 1<32>
	branch Mem1443[dwArg04 + 20<i32>:word32] < 0<32> l000016D0
l000016D0:
	d0 = fn00002604(dwArg04, out a5_5875)
	dwLoc44_4176 = d0
	d1 = d1_1460
l000016B0:
	a0_1474 = Mem1443[dwArg04 + 4<i32>:word32]
	Mem1479[dwArg04 + 4<i32>:word32] = a0_1474 + 1<32>
	v222_1483 = Mem1479[a0_1474:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v222_1483)
	dwLoc44_4176 = CONVERT(v222_1483, uint8, uint32)
	d1 = d1_1404
l000016EE:
	d5_1086 = dwLoc44_4176
	d3_1510 = d3_1918 + 1<32>
	d4_1514 = d4_132 + 1<32>
	branch dwLoc44_4176 == 0xFFFFFFFF<32> l00001766
l00001704:
	branch d6_1174 <u d3_1510 l00001766
l0000170C:
	d7 = SEQ(v78_525, bLoc2F_4057)
	a4_1535 = a1_1420
l00001714:
	branch bLoc2F_4057 != 0<8> l0000171A
l00001718:
	Mem1544[a4_1535:byte] = SLICE(d5_1086, byte, 0)
	a4_1535 = a4_1535 + 1<i32>
l0000171A:
	Mem1555[dwArg04 + 24<i32>:word32] = Mem1552[dwArg04 + 24<i32>:word32] | 1<32>
	v241_1557 = Mem1555[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1558[dwArg04 + 20<i32>:word32] = v241_1557
	branch v241_1557 < 0<32> l00001744
l00001744:
	d0 = fn00002604(dwArg04, out a5_5876)
	d1 = d0
l0000172C:
	a0_1584 = Mem1558[dwArg04 + 4<i32>:word32]
	Mem1589[dwArg04 + 4<i32>:word32] = a0_1584 + 1<32>
	v243_1593 = Mem1589[a0_1584:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v243_1593)
	d1 = CONVERT(v243_1593, uint8, uint32)
l00001750:
	d5_1086 = d1
	d3_1510 = d3_1510 + 1<32>
	d4_1514 = d4_1514 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l00001762
l0000175E:
	branch d6_1174 >=u d3_1510 l00001714
l00001762:
l00001766:
	branch d5_1086 == 0xFFFFFFFF<32> l00001778
l0000176E:
	d0 = fn00001438(SLICE(d5_1086, byte, 0), dwArg04)
l00001778:
	d3_130 = d3_1510 - 1<32>
	d4_132 = d4_1514 - 1<32>
	branch bLoc2F_4057 != 0<8> l00002362
l00001784:
	branch d3_130 == 0<32> l00002362
l0000178A:
	dwLoc3C_4041 = dwLoc3C_4041 + 1<32>
l00001660:
	d1 = SEQ(v126_634, v77_519 - 0x6E<8>)
	branch v77_519 == 0x6E<8> l00001B04
l00001B04:
	branch bLoc2F_4057 != 0<8> l00001B9C
l00001B0C:
	branch bLoc30_4056 != 1<8> l00001B2E
l00001B2E:
	branch bLoc30_4056 != 0x6C<8> l00001B4C
l00001B4C:
	branch bLoc30_4056 != 0x68<8> l00001B6A
l00001B6A:
	branch bLoc30_4056 != 2<8> l00001B88
l00001B88:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem1713[Mem655[d0:word32]:word32] = d4_132
	d2_1002 = d0 + 4<32>
l00001B72:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem1727[Mem655[d0:word32]:byte] = SLICE(d4_132, byte, 0)
	d2_1002 = d0 + 4<32>
l00001B54:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem1741[Mem655[d0:word32]:word16] = SLICE(d4_132, word16, 0)
	d2_1002 = d0 + 4<32>
l00001B36:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem1754[Mem655[d0:word32]:word32] = d4_132
	d2_1002 = d0 + 4<32>
l00001B14:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	a0_1766 = Mem655[d0:word32]
	Mem1767[a0_1766 + 4<i32>:word32] = d4_132
	Mem1768[a0_1766:word32] = 0<32>
	d2_1002 = d0 + 4<32>
l00001B9C:
	d3_130 = 1<32>
	dwLoc3C_4041 = dwLoc3C_4041 + 1<32>
l00001668:
	d1 = SEQ(v126_634, v77_519 - 0x73<8>)
	branch v77_519 == 0x73<8> l000019B0
l000019B0:
	branch bLoc2F_4057 != 0<8> l000019CA
l000019CA:
	a5_1788 = 0<32>
l000019B6:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	d2_1002 = d0 + 4<32>
	a5_1788 = Mem655[d0:word32]
l000019CC:
	branch d5_1086 == 0xFFFFFFFF<32> l00001A68
l000019D6:
	d0_1826 = CONVERT(Mem655[0x00002BED<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_1826 & 8<32>
	branch (d0_1826 & 8<32>) != 0<32> l00001A68
l000019F2:
	branch d6_1174 <u d3_1918 l00001A68
l000019F6:
	d7 = SEQ(v78_525, bLoc2F_4057)
l000019FA:
	branch bLoc2F_4057 != 0<8> l00001A00
l000019FE:
	Mem1853[a5_1788:byte] = SLICE(d5_1086, byte, 0)
	a5_1788 = a5_1788 + 1<i32>
l00001A00:
	Mem1864[dwArg04 + 24<i32>:word32] = Mem1861[dwArg04 + 24<i32>:word32] | 1<32>
	v161_1866 = Mem1864[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1867[dwArg04 + 20<i32>:word32] = v161_1866
	branch v161_1866 < 0<32> l00001A2A
l00001A2A:
	d0 = fn00002604(dwArg04, out a5_1788)
	d1 = d0
l00001A12:
	a0_1893 = Mem1867[dwArg04 + 4<i32>:word32]
	Mem1898[dwArg04 + 4<i32>:word32] = a0_1893 + 1<32>
	v163_1902 = Mem1898[a0_1893:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v163_1902)
	d1 = CONVERT(v163_1902, uint8, uint32)
l00001A36:
	d5_1086 = d1
	d3_1918 = d3_1918 + 1<32>
	d4_132 = d4_132 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l00001A64
l00001A44:
	d0_1939 = CONVERT(Mem1936[0x00002BED<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_1939 & 8<32>
	branch (d0_1939 & 8<32>) != 0<32> l00001A64
l00001A60:
	branch d6_1174 >=u d3_1918 l000019FA
l00001A64:
l00001A68:
	branch d5_1086 == 0xFFFFFFFF<32> l00001A7A
l00001A70:
	d0 = fn00001438(SLICE(d5_1086, byte, 0), dwArg04)
l00001A7A:
	d3_130 = d3_1918 - 1<32>
	d4_132 = d4_132 - 1<32>
	branch bLoc2F_4057 != 0<8> l00002362
l00001A86:
	branch d3_130 == 0<32> l00002362
l00001A8C:
	Mem2013[a5_1788:byte] = 0<8>
	dwLoc3C_4041 = dwLoc3C_4041 + 1<32>
l0000166E:
l00001BA6:
	dwLoc48_4227 = 0<32>
	dwLoc4C_4228 = 0<32>
	dwLoc0A_4229 = 0<32>
	branch v77_519 != 0<8> l00001BB8
l00001BB6:
	a3_2025 = a3_2025 - 1<32>
l00001BB8:
	branch v77_519 != 0x70<8> l00001BC6
l00001BBE:
	bLoc30_4056 = 0x6C<8>
	d7 = 0x78<32>
l00001BC6:
	branch d5_1086 != 0x2D<32> l00001BD4
l00001BCE:
	branch SLICE(d7, byte, 0) != 0x75<8> l00001BDC
l00001BD4:
	branch d5_1086 != 0x2B<32> l00001C2C
l00001BDC:
	branch d6_1174 <u d3_1918 l00001C2C
l00001BE0:
	Mem2071[dwArg04 + 24<i32>:word32] = Mem2064[dwArg04 + 24<i32>:word32] | 1<32>
	v184_2073 = Mem2071[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2074[dwArg04 + 20<i32>:word32] = v184_2073
	dwLoc0A_4229 = d5_1086
	branch v184_2073 < 0<32> l00001C16
l00001C16:
	d0 = fn00002604(dwArg04, out a5_5872)
	dwLoc44_4233 = d0
l00001BF6:
	a0_2098 = Mem2074[dwArg04 + 4<i32>:word32]
	Mem2103[dwArg04 + 4<i32>:word32] = a0_2098 + 1<32>
	v186_2107 = Mem2103[a0_2098:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v186_2107)
	dwLoc44_4233 = CONVERT(v186_2107, uint8, uint32)
l00001C24:
	d5_1086 = dwLoc44_4233
	d3_1918 = d3_1918 + 1<32>
	d4_132 = d4_132 + 1<32>
l00001C2C:
	branch SLICE(d7, byte, 0) != 0x69<8> l00001D9E
l00001C34:
	branch d5_1086 != 0x30<32> l00001D60
l00001C3E:
	branch d6_1174 <u d3_1918 l00001D60
l00001D60:
	d0_2179 = CONVERT(Mem2172[0x00002BED<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_2179 & 4<32>
	branch (d0_2179 & 4<32>) != 0<32> l00001D9E
l00001D7C:
	d0_2194 = CONVERT(Mem2172[0x00002BED<p32> + (CONVERT(SLICE(d5_1086, byte, 0), uint8, uint32) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_2194 & 0x44<32>
	branch (d0_2194 & 0x44<32>) == 0<32> l00001D9E
l00001D98:
	branch d6_1174 <u d3_1918 l00001D9E
l00001D9C:
	d7 = 0x78<32>
l00001C44:
	Mem2213[dwArg04 + 24<i32>:word32] = Mem2172[dwArg04 + 24<i32>:word32] | 1<32>
	v196_2215 = Mem2213[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2216[dwArg04 + 20<i32>:word32] = v196_2215
	branch v196_2215 < 0<32> l00001C76
l00001C76:
	d0_2228 = fn00002604(dwArg04, out a5_5873)
	dwLoc44_4239 = d0_2228
l00001C56:
	a0_2241 = Mem2216[dwArg04 + 4<i32>:word32]
	Mem2246[dwArg04 + 4<i32>:word32] = a0_2241 + 1<32>
	v198_2250 = Mem2246[a0_2241:byte]
	d0_2228 = SEQ(SLICE(d0, word24, 8), v198_2250)
	dwLoc44_4239 = CONVERT(v198_2250, uint8, uint32)
l00001C84:
	bLoc41_4245 = SLICE(dwLoc44_4239, byte, 0) (alias)
	d0_2281 = SEQ(SLICE(d0_2228, word24, 8), bLoc41_4245)
	d3_2273 = d3_1918 + 1<32>
	d0 = d0_2281 & 0xFF<32>
	branch __btst<byte>(Mem2271[0x00002BED<p32> + CONVERT(SLICE(d0_2281, int16, 0) & 255<i16>, int16, int32):byte], 0<16>) l00001CAA
l00001CA6:
	d0 = CONVERT(bLoc41_4245 | 0x20<8>, uint8, uint32)
l00001CAA:
	branch d0 != 0x78<32> l00001D42
l00001CB4:
	branch d6_1174 <u d3_2273 l00001D42
l00001D42:
	d7 = 0x6F<32>
l00001CBA:
	Mem2313[dwArg04 + 24<i32>:word32] = Mem2271[dwArg04 + 24<i32>:word32] | 1<32>
	v212_2315 = Mem2313[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2316[dwArg04 + 20<i32>:word32] = v212_2315
	branch v212_2315 < 0<32> l00001CEC
l00001CEC:
	d0_2328 = fn00002604(dwArg04, out a5_5874)
	dwLoc44_4247 = d0_2328
l00001CCC:
	a0_2341 = Mem2316[dwArg04 + 4<i32>:word32]
	Mem2346[dwArg04 + 4<i32>:word32] = a0_2341 + 1<32>
	v214_2350 = Mem2346[a0_2341:byte]
	d0_2328 = SEQ(SLICE(d0, word24, 8), v214_2350)
	dwLoc44_4247 = CONVERT(v214_2350, uint8, uint32)
l00001CFA:
	d0_2391 = CONVERT(Mem2371[0x00002BED<p32> + (SEQ(SLICE(d0_2328, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_2391 & 0x44<32>
	branch (d0_2391 & 0x44<32>) == 0<32> l00001D26
l00001D20:
	branch d6_1174 <u d3_2273 + 1<32> l00001D26
l00001D24:
	d7 = 0x78<32>
l00001D26:
	branch dwLoc44_4247 == 0xFFFFFFFF<32> l00001D3C
l00001D30:
	d0 = fn00001438(SLICE(dwLoc44_4247, byte, 0), dwArg04)
l00001D3C:
l00001D44:
	branch dwLoc44_4239 == 0xFFFFFFFF<32> l00001D5A
l00001D4E:
	d0 = fn00001438(SLICE(dwLoc44_4239, byte, 0), dwArg04)
l00001D5A:
l00001D9E:
	d4_2586 = d4_132
	d3_2499 = d3_1918
	branch SLICE(d7, byte, 0) != 0x78<8> l00001ED2
l00001DA6:
	branch d5_1086 != 0x30<32> l00001ED2
l00001DB0:
	branch d6_1174 <u d3_1918 l00001ED2
l00001DB6:
	Mem2510[dwArg04 + 24<i32>:word32] = Mem2507[dwArg04 + 24<i32>:word32] | 1<32>
	v267_2512 = Mem2510[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2513[dwArg04 + 20<i32>:word32] = v267_2512
	branch v267_2512 < 0<32> l00001DE8
l00001DE8:
	d0_2527 = fn00002604(dwArg04, out a5_5877)
	dwLoc44_4267 = d0_2527
l00001DC8:
	a0_2540 = Mem2513[dwArg04 + 4<i32>:word32]
	Mem2545[dwArg04 + 4<i32>:word32] = a0_2540 + 1<32>
	v269_2549 = Mem2545[a0_2540:byte]
	d0_2527 = SEQ(SLICE(d0, word24, 8), v269_2549)
	dwLoc44_4267 = CONVERT(v269_2549, uint8, uint32)
l00001DF6:
	bLoc41_4273 = SLICE(dwLoc44_4267, byte, 0) (alias)
	d0_2593 = SEQ(SLICE(d0_2527, word24, 8), bLoc41_4273)
	d3_2584 = d3_1918 + 1<32>
	d4_2588 = d4_132 + 1<32>
	d0 = d0_2593 & 0xFF<32>
	branch __btst<byte>(Mem2582[0x00002BED<p32> + CONVERT(SLICE(d0_2593, int16, 0) & 255<i16>, int16, int32):byte], 0<16>) l00001E1C
l00001E18:
	d0 = CONVERT(bLoc41_4273 | 0x20<8>, uint8, uint32)
l00001E1C:
	branch d0 != 0x78<32> l00001EB8
l00001E26:
	branch d6_1174 <u d3_2584 l00001EB8
l00001E2C:
	Mem2621[dwArg04 + 24<i32>:word32] = Mem2582[dwArg04 + 24<i32>:word32] | 1<32>
	v282_2623 = Mem2621[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2624[dwArg04 + 20<i32>:word32] = v282_2623
	branch v282_2623 < 0<32> l00001E5E
l00001E5E:
	d0_2636 = fn00002604(dwArg04, out a5_5878)
	dwLoc44_4275 = d0_2636
l00001E3E:
	a0_2649 = Mem2624[dwArg04 + 4<i32>:word32]
	Mem2654[dwArg04 + 4<i32>:word32] = a0_2649 + 1<32>
	v284_2658 = Mem2654[a0_2649:byte]
	d0_2636 = SEQ(SLICE(d0, word24, 8), v284_2658)
	dwLoc44_4275 = CONVERT(v284_2658, uint8, uint32)
l00001E6C:
	d0_2696 = CONVERT(Mem2679[0x00002BED<p32> + (SEQ(SLICE(d0_2636, word24, 8), SLICE(dwLoc44_4275, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d3_2499 = d3_2584 + 1<32>
	d4_2586 = d4_2588 + 1<32>
	d0 = d0_2696 & 0x44<32>
	branch (d0_2696 & 0x44<32>) == 0<32> l00001E9E
l00001E94:
	branch d6_1174 <u d3_2584 + 1<32> l00001E9E
l00001E9E:
	branch dwLoc44_4275 == 0xFFFFFFFF<32> l00001EB4
l00001EA8:
	d0 = fn00001438(SLICE(dwLoc44_4275, byte, 0), dwArg04)
l00001EB4:
l00001EB8:
	branch dwLoc44_4267 == 0xFFFFFFFF<32> l00001ECE
l00001EC2:
	d0 = fn00001438(SLICE(dwLoc44_4267, byte, 0), dwArg04)
l00001ECE:
	d3_2499 = d3_2584 - 1<32>
	d4_2586 = d4_2588 - 1<32>
l00001E98:
	d5_1086 = dwLoc44_4275
l00001ED2:
	branch SLICE(d7, byte, 0) == 0x78<8> l00001EDE
l00001ED8:
	branch SLICE(d7, byte, 0) != 0x58<8> l00001EE8
l00001EE8:
	branch SLICE(d7, byte, 0) != 0x6F<8> l00001EF8
l00001EF8:
	dwLoc44_4294 = 0xA<32>
l00001EEE:
	dwLoc44_4294 = 8<32>
l00001F00:
	dwLoc38_4297 = dwLoc44_4294
l00001EDE:
	dwLoc38_4297 = 0x10<32>
l00001F06:
	d0_2843 = CONVERT(Mem2814[0x00002BED<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_2843 & 0x44<32>
	dwLoc44_4302 = d4_2586
	bLoc2E_4303 = SLICE(d7, byte, 0)
	branch (d0_2843 & 0x44<32>) == 0<32> l0000216E
l00001F38:
	branch dwLoc38_4297 != 0xA<32> l00001F6E
l00001F42:
	d0_2899 = CONVERT(Mem2882[0x00002BED<p32> + (CONVERT(SLICE(d5_1086, byte, 0), uint8, uint32) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_2899 & 4<32>
	dwLoc44_4302 = d4_2586
	bLoc2E_4303 = SLICE(d7, byte, 0)
	branch (d0_2899 & 4<32>) == 0<32> l0000216E
l00001F6E:
	branch dwLoc38_4297 != 8<32> l00001F8E
l00001F78:
	dwLoc44_4302 = d4_2586
	bLoc2E_4303 = SLICE(d7, byte, 0)
	branch d5_1086 > 0x37<32> l0000216E
l00001F8E:
	dwLoc44_4302 = d4_2586
	bLoc2E_4303 = SLICE(d7, byte, 0)
	branch d6_1174 <u d3_2499 l0000216E
l00001FA4:
	d7 = dwLoc38_4297
l00001FAC:
	d0_2992 = fn0000248C(d4_2586, dwLoc38_4297 >> 0x1F<32>, dwLoc38_4297, dwLoc4C_4228, dwLoc48_4227, out d1_2993)
	branch (CONVERT(Mem3004[0x00002BED<p32> + (SEQ(SLICE(dwLoc38_4297 >> 0x1F<32>, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32) & 4<32>) == 0<32> l0000200C
l0000200C:
	d4_2586 = 0<32>
l00002002:
	d4_2586 = d5_1086 - 0x30<32>
l0000200E:
	d0_3040 = d4_2586 >> 0x1F<32>
	d2_d2_4022 = SEQ(d0_2992, d4_2586) + SEQ(d0_3040, d1_2993)
	d2_3047 = SLICE(d2_d2_4022, word32, 0) (alias)
	d2_3057 = SLICE(d2_d2_4022, word32, 32) (alias)
	branch (CONVERT(Mem3059[0x00002BED<p32> + (SEQ(SLICE(d0_3040, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32) & 1<32>) == 0<32> l0000205E
l0000205E:
	d6_3082 = 0<32>
l00002054:
	d6_3082 = d5_1086 - 0x37<32>
l00002060:
	d0_3097 = d6_3082 >> 0x1F<32>
	d2_d2_4024 = SEQ(d2_3057, d6_3082) + SEQ(d0_3097, d2_3047)
	d2_3104 = SLICE(d2_d2_4024, word32, 0) (alias)
	d2_3113 = SLICE(d2_d2_4024, word32, 32) (alias)
	branch (CONVERT(Mem3115[0x00002BED<p32> + (SEQ(SLICE(d0_3097, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32) & 2<32>) == 0<32> l000020B0
l000020B0:
	d2_3138 = 0<32>
l000020A6:
	d2_3138 = d5_1086 - 0x57<32>
l000020B2:
	Mem3183[dwArg04 + 24<i32>:word32] = Mem3169[dwArg04 + 24<i32>:word32] | 1<32>
	v343_3185 = Mem3183[dwArg04 + 20<i32>:word32] - 1<32>
	Mem3186[dwArg04 + 20<i32>:word32] = v343_3185
	d2_d2_4026 = SEQ(d2_3113, d2_3138) + SEQ(d2_3138 >> 0x1F<32>, d2_3104)
	dwLoc48_4227 = SLICE(d2_d2_4026, word32, 0)
	dwLoc4C_4228 = SLICE(d2_d2_4026, word32, 32)
	branch v343_3185 < 0<32> l00002104
l00002104:
	d0_3197 = fn00002604(dwArg04, out a5_5879)
	d1 = d0_3197
l000020EC:
	a0_3210 = Mem3186[dwArg04 + 4<i32>:word32]
	Mem3215[dwArg04 + 4<i32>:word32] = a0_3210 + 1<32>
	v345_3219 = Mem3215[a0_3210:byte]
	d0_3197 = CONVERT(v345_3219, uint8, uint32)
	d1 = CONVERT(v345_3219, uint8, uint32)
l00002110:
	d0_3248 = CONVERT(Mem3236[0x00002BED<p32> + (SEQ(SLICE(d0_3197, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d5_1086 = d1
	d3_2499 = d3_5882 + 1<32>
	dwLoc44_4302 = dwLoc44_4302 + 1<32>
	d0 = d0_3248 & 0x44<32>
	branch (d0_3248 & 0x44<32>) == 0<32> l0000216E
l00002134:
	branch dwLoc38_4297 != 0xA<32> l00002158
l0000213C:
	d0_3270 = CONVERT(Mem3236[0x00002BED<p32> + (CONVERT(SLICE(d1, byte, 0), uint8, uint32) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_3270 & 4<32>
	branch (d0_3270 & 4<32>) == 0<32> l0000216E
l00002158:
	branch dwLoc38_4297 != 8<32> l00002168
l00002160:
	branch d1 > 0x37<32> l0000216E
l00002168:
	d3_5882 = d3_2499
	branch d6_1174 >=u d3_5882 + 1<32> l00001FAC
l0000216E:
	d7 = SEQ(SLICE(d7, word24, 8), bLoc2E_4303)
	d4_3307 = dwLoc44_4302
	branch dwLoc0A_4229 == 0<32> l000021A2
l00002180:
	branch d3_2499 != 2<32> l000021A2
l00002188:
	branch d5_1086 == 0xFFFFFFFF<32> l0000219A
l00002190:
	d0 = fn00001438(SLICE(d5_1086, byte, 0), dwArg04)
l0000219A:
	d3_2499 = d3_2499 - 1<32>
	d4_3307 = dwLoc44_4302 - 1<32>
	d5_1086 = dwLoc0A_4229
l000021A2:
	branch d5_1086 == 0xFFFFFFFF<32> l000021B4
l000021AA:
	d0 = fn00001438(SLICE(d5_1086, byte, 0), dwArg04)
l000021B4:
	d3_130 = d3_2499 - 1<32>
	d4_132 = d4_3307 - 1<32>
	branch bLoc2F_4057 != 0<8> l00002362
l000021C0:
	branch d3_130 == 0<32> l00002362
l000021C6:
	branch bLoc2E_4303 != 0x75<8> l00002288
l00002288:
	branch dwLoc0A_4229 != 0x2D<32> l000022A4
l000022A4:
	bLoc4C_4577 = bLoc30_4056 - 1<8>
	branch bLoc4C_4577 == 0<8> l000022DA
l000022DA:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	a0_3450 = Mem3431[d0:word32]
	Mem3452[a0_3450 + 4<i32>:word32] = dwLoc48_4227
	Mem3454[a0_3450:word32] = dwLoc4C_4228
	d2_1002 = d0 + 4<32>
l000022C4:
	branch bLoc4C_4577 == 1<8> l0000232C
l0000232C:
	d0_3465 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3473[Mem3459[d0_3465:word32]:byte] = SLICE(dwLoc48_4227, byte, 0)
	d2_1002 = d0_3465 + 4<32>
	d0 = dwLoc48_4227
l000022CA:
	branch bLoc4C_4577 == 0x67<8> l00002312
l00002312:
	d0_3484 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3492[Mem3478[d0_3484:word32]:word16] = SLICE(dwLoc48_4227, word16, 0)
	d2_1002 = d0_3484 + 4<32>
	d0 = dwLoc48_4227
l000022D2:
	branch bLoc4C_4577 == 0x6B<8> l000022F8
l000022F8:
	d0_3503 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3510[Mem3497[d0_3503:word32]:word32] = dwLoc48_4227
	d2_1002 = d0_3503 + 4<32>
	d0 = dwLoc48_4227
l000022D8:
l00002346:
	d0_3517 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3524[Mem3497[d0_3517:word32]:word32] = dwLoc48_4227
	d2_1002 = d0_3517 + 4<32>
	d0 = dwLoc48_4227
l00002292:
l000021CE:
	bLoc44_4582 = bLoc30_4056 - 1<8>
	branch bLoc44_4582 == 0<8> l000021F8
l000021F8:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	a0_3564 = Mem3548[d0:word32]
	Mem3566[a0_3564 + 4<i32>:word32] = dwLoc48_4227
	Mem3568[a0_3564:word32] = dwLoc4C_4228
	d2_1002 = d0 + 4<32>
l000021E2:
	branch bLoc44_4582 == 1<8> l00002250
l00002250:
	d0_3579 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3587[Mem3573[d0_3579:word32]:byte] = SLICE(dwLoc48_4227, byte, 0)
	d2_1002 = d0_3579 + 4<32>
	d0 = dwLoc48_4227
l000021E8:
	branch bLoc44_4582 == 0x67<8> l00002234
l00002234:
	d0_3598 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3606[Mem3592[d0_3598:word32]:word16] = SLICE(dwLoc48_4227, word16, 0)
	d2_1002 = d0_3598 + 4<32>
	d0 = dwLoc48_4227
l000021F0:
	branch bLoc44_4582 == 0x6B<8> l00002218
l00002218:
	d0_3617 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3624[Mem3611[d0_3617:word32]:word32] = dwLoc48_4227
	d2_1002 = d0_3617 + 4<32>
	d0 = dwLoc48_4227
l000021F6:
l0000226C:
	d0_3631 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3638[Mem3611[d0_3631:word32]:word32] = dwLoc48_4227
	d2_1002 = d0_3631 + 4<32>
	d0 = dwLoc48_4227
l0000235E:
	dwLoc3C_4041 = dwLoc3C_4041 + 1<32>
l00002362:
	a4_280 = a3_2025
l00002460:
	branch d3_130 == 0<32> l0000246A
l00002464:
	branch Mem3726[a4_280:byte] != 0<8> l0000148A
l0000246A:
	branch d5_1086 != 0xFFFFFFFF<32> l0000247C
l00002472:
	branch dwLoc3C_4041 != 0<32> l0000247C
l0000247C:
l00002478:
l00002480:
	return
fn00001468_exit:


word32 fn0000248C(word32 d4, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & d1Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001468
// MayUse:  d4:[16..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: d0:[0..31]-fn00001468 d1:[0..31]-fn00001468
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
fn0000248C_entry:
l0000248C:
	d0_23 = __swap(dwArg08)
	d1_25 = __swap(dwArg10)
	d4_29 = SEQ(SLICE(d4, word16, 16), SLICE(dwArg08, word16, 0)) *u32 SLICE(dwArg10, word16, 0)
	d1_32 = d1_25 *u32 SLICE(d0_23, word16, 0)
	d2_39 = dwArg08 *u32 SLICE(d1_25, word16, 0) + __swap(SEQ(SLICE(d4_29, word16, 16), SLICE(d4_29, word16, 0) ^ SLICE(d4_29, word16, 0))) + dwArg10 *u32 SLICE(d0_23, word16, 0)
	branch d2_39 >=u 0<32> l000024C0
l000024BA:
	d1_32 = d1_32 + 0x10000<32>
l000024C0:
	d2_45 = __swap(d2_39)
	d3_65 = __swap(dwArg0C) *u32 SLICE(dwArg08, word16, 0)
	d3_71 = __swap(SEQ(SLICE(d3_65, word16, 16), SLICE(d3_65, word16, 0) + SLICE(__swap(dwArg08), word16, 0) *u SLICE(dwArg0C, word16, 0)))
	d3_83 = __swap(dwArg04) *u32 SLICE(dwArg10, word16, 0)
	d3_89 = __swap(SEQ(SLICE(d3_83, word16, 16), SLICE(d3_83, word16, 0) + SLICE(__swap(dwArg10), word16, 0) *u SLICE(dwArg04, word16, 0)))
	d1Out = SEQ(SLICE(d2_45, word16, 16), SLICE(d4_29, word16, 0))
	return CONVERT(SLICE(d2_45, word16, 0), uint16, uint32) + d1_32 + (dwArg0C *u32 SLICE(dwArg08, word16, 0) + SEQ(SLICE(d3_71, word16, 16), SLICE(d3_71, word16, 0) ^ SLICE(d3_71, word16, 0))) + (dwArg04 *u32 SLICE(dwArg10, word16, 0) + SEQ(SLICE(d3_89, word16, 16), SLICE(d3_89, word16, 0) ^ SLICE(d3_89, word16, 0)))
fn0000248C_exit:


word32 fn0000254C(word32 d2, word32 dwArg04, word32 dwArg08)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001468
// MayUse:  d2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: d0:[0..31]-fn00001468
// Trashed: CVZNX d0 d1
// Preserved: a7
fn0000254C_entry:
l0000254C:
	branch dwArg04 > 0<32> l0000256C
l0000256C:
	branch dwArg08 > 0<32> l0000256E_thunk_fn0000257E
l0000256E_thunk_fn0000257E:
	return fn0000257E(dwArg04, dwArg08, d2, out d1_90)
l00002570:
	return -fn0000257E(dwArg04, -dwArg08, d2, out d1_91)
l00002556:
	d0_36 = -dwArg04
	branch dwArg08 > 0<32> l00002564
l00002564:
	return -fn0000257E(d0_36, dwArg08, d2, out d1_88)
l0000255C:
	return fn0000257E(d0_36, -dwArg08, d2, out d1_89)
fn0000254C_exit:


word32 fn0000257E(word32 d0, word32 d1, word32 d2, ptr32 & d1Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000254C
//      fn00003B28
// MayUse:  d0:[0..31] d1:[0..31] d2:[0..31]
// LiveOut: d0:[0..31]-fn00003B28 d1:[0..31]-fn00003B28
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3
fn0000257E_entry:
l0000257E:
	d1_22 = __swap(d1)
	v9_8 = SLICE(d1_22, word16, 0)
	v10_9 = SLICE(d2, word16, 16)
	d2_10 = SEQ(v10_9, v9_8)
	branch v9_8 != 0<16> l000025A4
l000025A4:
	d3_18 = 0x10<32>
	branch SLICE(d1_22, word16, 0) >=u 0x80<16> l000025B2
l000025AE:
	d1_22 = __rol<word32,word32>(d1_22, 8<32>)
	d3_18 = 8<32>
l000025B2:
	branch SLICE(d1_22, word16, 0) >=u 0x800<16> l000025BC
l000025B8:
	d1_22 = __rol<word32,word32>(d1_22, 4<32>)
	d3_18 = SEQ(SLICE(d3_18, word16, 16), SLICE(d3_18, word16, 0) - 4<16>)
l000025BC:
	branch SLICE(d1_22, word16, 0) >=u 0x2000<16> l000025C6
l000025C2:
	d1_22 = __rol<word32,word32>(d1_22, 2<32>)
	d3_18 = SEQ(SLICE(d3_18, word16, 16), SLICE(d3_18, word16, 0) - 2<16>)
l000025C6:
	branch SLICE(d1_22, word16, 0) < 0<16> l000025CE
l000025CA:
	d1_22 = __rol<word32,word32>(d1_22, 1<32>)
	d3_18 = SEQ(SLICE(d3_18, word16, 16), SLICE(d3_18, word16, 0) - 1<16>)
l000025CE:
	d0_71 = d0 >>u d3_18
	d2_75 = SEQ(SLICE(__swap(SEQ(v10_9, SLICE(d0, word16, 0))), word16, 16), 0<16>) >>u d3_18
	v52_82 = SLICE(__swap(d3_18), word16, 16)
	v50_79 = d0_71 /u SLICE(d1_22, uint16, 0)
	d1_90 = __swap(d1_22)
	d3_102 = SEQ(v52_82, v50_79)
	d0_108 = SEQ(d0_71 %u SLICE(d1_22, uint16, 0), SLICE(d2_75, word16, 0)) - SEQ(SLICE(d2_75, word16, 16), v50_79) *u32 SLICE(d1_90, word16, 0)
	branch d0_108 >=u 0<32> l000025F0
l000025EA:
	d3_102 = SEQ(v52_82, v50_79 - 1<16>)
	d0_108 = d0_108 + d1_90
l000025EE:
	branch d0_108 >=u 0<32> l000025EE
l000025F0:
	d1Out = __swap(__rol<word32,word32>(d0_108, __swap(d3_102)))
	return CONVERT(SLICE(d3_102, word16, 0), uint16, uint32)
l00002586:
	d0_136 = __swap(d0)
	d1_137 = __swap(d1_22)
	v13_139 = SLICE(d0_136, word16, 0)
	d2_141 = SEQ(SLICE(__swap(d2_10), word16, 16), v13_139)
	branch v13_139 == 0<16> l00002594
l00002590:
	v16_147 = d2_141 /u SLICE(d1_137, uint16, 0)
	d2_141 = SEQ(d2_141 %u SLICE(d1_137, uint16, 0), v16_147)
	d0_136 = SEQ(SLICE(d0_136, word16, 16), v16_147)
l00002594:
	d0_156 = __swap(d0_136)
	d2_160 = SEQ(SLICE(d2_141, word16, 16), SLICE(d0_156, word16, 0))
	v33_163 = d2_160 /u SLICE(d1_137, uint16, 0)
	d1Out = SEQ(SLICE(d1_137, word16, 16), SLICE(__swap(SEQ(d2_160 %u SLICE(d1_137, uint16, 0), v33_163)), word16, 0))
	return SEQ(SLICE(d0_156, word16, 16), v33_163)
fn0000257E_exit:


word32 fn00002604(word32 dwArg04, ptr32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001468
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5:[0..31]-fn00001468 d0:[0..31]-fn00001468
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a4 a6 a7 d2 d3 d4 d5
fn00002604_entry:
l00002604:
	a5_295 = fn00002BBC()
	branch dwArg04 != 0<32> l0000261C
l0000261C:
	branch (Mem26[dwArg04 + 24<i32>:word32] & 0x2A<32>) == 0x20<32> l0000262E
l0000262E:
	Mem51[dwArg04 + 24<i32>:word32] = Mem26[dwArg04 + 24<i32>:word32] | 1<32>
	branch (Mem51[dwArg04 + 24<i32>:word32] & 0x200<32>) == 0<32> l00002646
l00002640:
	a5_295 = fn00002AEC()
l00002646:
	branch Mem51[dwArg04 + 28<i32>:word32] != 0<32> l00002664
l0000264C:
	branch (Mem51[dwArg04 + 24<i32>:word32] & 4<32>) == 0<32> l0000265C
l0000265C:
	Mem80[dwArg04 + 28<i32>:word32] = 0x400<32>
l00002654:
	Mem85[dwArg04 + 28<i32>:word32] = 1<32>
l00002664:
	branch Mem90[dwArg04 + 8<i32>:word32] != 0<32> l000026A0
l0000266A:
	branch (Mem90[dwArg04 + 24<i32>:word32] & 0x80<32>) == 0<32> l0000267E
l0000267E:
	d4_102 = 1<32>
l0000267A:
	d4_102 = 2<32>
l00002680:
	d0_126 = fn00002718(d4_102 + Mem90[dwArg04 + 28<i32>:word32], out a0_324)
	branch d0_126 != 0<32> l00002698
l00002698:
	Mem141[dwArg04 + 8<i32>:word32] = d0_126 + 1<i32>
l000026A0:
	Mem149[dwArg04 + 4<i32>:word32] = Mem147[dwArg04 + 8<i32>:word32]
	d0_154 = execPrivate2()
	Mem156[dwArg04 + 20<i32>:word32] = d0_154
	v24_157 = Mem156[dwArg04 + 20<i32>:word32] - 1<32>
	Mem158[dwArg04 + 20<i32>:word32] = v24_157
	branch v24_157 >= 0<32> l000026E6
l000026E6:
	a0_162 = Mem158[dwArg04 + 4<i32>:word32]
	Mem165[dwArg04 + 4<i32>:word32] = a0_162 + 1<32>
	d0_169 = SEQ(SLICE(d0_154, word24, 8), Mem165[a0_162:byte]) & 0xFF<32>
l000026C4:
	branch Mem158[dwArg04 + 20<i32>:word32] != 0xFFFFFFFF<32> l000026D6
l000026D6:
	Mem180[dwArg04 + 24<i32>:word32] = Mem158[dwArg04 + 24<i32>:word32] | 0x10<32>
l000026CC:
	Mem187[dwArg04 + 24<i32>:word32] = Mem158[dwArg04 + 24<i32>:word32] | 8<32>
l000026DE:
	Mem192[dwArg04 + 20<i32>:word32] = 0<32>
	d0_169 = 0xFFFFFFFF<32>
l00002694:
	d0_169 = 0xFFFFFFFF<32>
l00002628:
	d0_169 = 0xFFFFFFFF<32>
l00002616:
	d0_169 = 0xFFFFFFFF<32>
l000026FA:
	a5Out = a5_295
	return d0_169
fn00002604_exit:


word32 fn00002718(word32 dwArg04, ptr32 & a0Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002604
//      fn00003910
// MayUse:  Stack +0004:[0..31]
// LiveOut: a0:[16..31]-fn00003910 d0:[0..31]-fn00003910
// Trashed: CVZN a0 a1 d0 d1
// Preserved: X a7 d2
fn00002718_entry:
l00002718:
	branch dwArg04 != 0<32> l00002726
l00002726:
	branch Mem5[0x00003DC8<p32>:word32] != 0<32> l0000274A
l0000272E:
	a0_15 = Mem5[0x00003DC4<p32>:word32]
	Mem21[0<32>:word32] = 0<32>
	Mem35[0x00003DC8<p32>:word32] = fn00002A0C(dwLoc10, a0_15, a0_15, out a0)
l0000274A:
	branch Mem40[0x00003DC8<p32>:word32] != 0<32> l00002756
l00002756:
	d0_59 = fn000028E8(Mem51[0x00003DC8<p32>:word32], dwArg04 + 4<32>, out a0)
	branch d0_59 != 0<32> l00002774
l00002774:
	Mem74[d0_59:word32] = dwArg04
	a0 = d0_59 + 4<i32>
	d0_112 = d0_59 + 4<i32>
l00002770:
	d0_112 = 0<32>
l00002752:
	d0_112 = 0<32>
l00002722:
	d0_112 = 0<32>
l0000277C:
	a0Out = a0
	return d0_112
fn00002718_exit:


void fn00002784(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn00002784_entry:
l00002784:
	branch dwArg04 == 0<32> l000027AE
l0000278E:
	branch Mem0[0x00003DC8<p32>:word32] == 0<32> l000027AE
l00002796:
	fn0000284C(Mem21[0x00003DC8<p32>:word32], dwArg04 - 4<i32>, Mem0[dwArg04 - 4<i32>:word32] + 4<32>)
l000027AE:
	return
fn00002784_exit:


void fn0000284C(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002784
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2
fn0000284C_entry:
l0000284C:
	branch Mem20[Mem20[0x00003D94<p32>:word32] + 20<i32>:word16] <u 0x27<16> l0000287C
l0000287C:
	branch dwArg04 == 0<32> l000028E0
l00002880:
	branch dwArg08 == 0<32> l000028E0
l00002884:
	a3_38 = dwArg08 + -12<i32>
	branch dwArg0C >=u Mem20[dwArg04 + 20<i32>:word32] l000028C6
l00002890:
	a2_42 = dwArg04
l00002892:
	a2_42 = Mem20[a2_42:word32]
	branch Mem20[a2_42:word32] == 0<32> l000028E0
l00002898:
	branch Mem20[a2_42 + 8<i32>:byte] == 0<8> l00002892
l0000289E:
	branch dwArg08 <u Mem20[a2_42 + 20<i32>:word32] l00002892
l000028A4:
	branch dwArg08 >=u Mem20[a2_42 + 24<i32>:word32] l00002892
l000028AA:
	Deallocate(a2_42, dwArg08, dwArg0C)
	branch Mem20[a2_42 + 28<i32>:word32] != Mem20[dwArg04 + 16<i32>:word32] l000028E0
l000028C4:
	a3_38 = a2_42
l000028C6:
	Remove(a3_38)
	a3_78 = a3_38 - 4<i32>
	FreeMem(a3_78, Mem20[a3_78:word32])
l0000286A:
	FreePooled(dwArg08, dwArg04)
l000028E0:
	return
fn0000284C_exit:


word32 fn000028E8(word32 dwArg04, word32 dwArg08, ptr32 & a0Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002718
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0:[16..31]-fn00002718 d0:[0..31]-fn00002718
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4
fn000028E8_entry:
l000028E8:
	a0_117 = Mem26[0x00003D94<p32>:word32]
	branch Mem26[a0_117 + 20<i32>:word16] <u 0x27<16> l00002914
l00002914:
	a3_124 = 0<32>
	branch dwArg04 == 0<32> l00002A04
l0000291C:
	branch dwArg08 == 0<32> l00002A04
l00002922:
	branch dwArg08 >=u Mem26[dwArg04 + 20<i32>:word32] l000029D6
l000029D6:
	d0_52 = AllocMem(dwArg08 + 0x10<32>, Mem26[dwArg04 + 12<i32>:word32])
	a3_124 = d0_52
	branch d0_52 == 0<32> l00002A04
l000029F0:
	Mem59[d0_52:word32] = dwArg08 + 0x10<32>
	AddTail(dwArg04, d0_52 + 4<i32>)
	Mem66[d0_52 + 0xC<32>:word32] = 0<32>
	a0_117 = dwArg04
	a3_124 = d0_52 + 0x10<32>
l0000292A:
	a5_170 = Mem26[dwArg04:word32]
l0000292C:
	branch Mem26[a5_170:word32] == 0<32> l0000294E
l0000294E:
	d3_81 = Mem26[dwArg04 + 16<i32>:word32] + 0x28<32>
	d0_86 = AllocMem(d3_81, Mem26[dwArg04 + 12<i32>:word32])
	a3_124 = d0_86
	branch d0_86 == 0<32> l00002A04
l0000296C:
	Mem93[d0_86:word32] = d3_81
	Mem95[d0_86 + 12<i32>:byte] = 0xA<8>
	Mem98[d0_86 + 20<i32>:word32] = d0_86 + 40<i32>
	Mem99[d0_86 + 24<i32>:word32] = d0_86 + 40<i32>
	Mem101[Mem99[d0_86 + 20<i32>:word32]:word32] = 0<32>
	a2_102 = Mem101[d0_86 + 20<i32>:word32]
	Mem105[a2_102 + 4<32>:word32] = Mem101[dwArg04 + 16<i32>:word32]
	Mem108[d0_86 + 32<i32>:word32] = Mem105[a2_102 + 4<32>:word32]
	Mem111[d0_86 + 28<i32>:word32] = Mem108[d0_86 + 32<i32>:word32] + Mem108[d0_86 + 20<i32>:word32]
	AddHead(dwArg04, d0_86 + 4<i32>)
	a0_117 = d0_86 + 4<i32>
	a3_124 = Allocate(d0_86 + 4<i32>, dwArg08)
l00002930:
	branch Mem26[a5_170 + 8<i32>:byte] == 0<8> l0000294A
l00002936:
	d0_132 = Allocate(a5_170, dwArg08)
	a0_117 = a5_170
	a3_124 = d0_132
	branch d0_132 != 0<32> l000029BA
l000029BA:
	branch (Mem141[dwArg04 + 12<i32>:word32] & 0x10000<32>) == 0<32> l00002A04
l000029C6:
	a2_148 = a3_124
	d2_151 = dwArg08 + 7<32> >>u 3<32>
l000029CC:
	Mem154[a2_148:word32] = 0<32>
	a2_155 = a2_148 + 4<i32>
	Mem156[a2_155:word32] = 0<32>
	a2_148 = a2_155 + 4<i32>
	d2_151 = d2_151 - 1<32>
	branch d2_151 != 0<32> l000029CC
l000029D4:
l00002A04:
	d0_164 = a3_124
l0000294A:
	a5_170 = Mem26[a5_170:word32]
l00002902:
	a0_117 = dwArg04
	d0_164 = AllocPooled(dwArg08, dwArg04)
l00002A06:
	a0Out = a0_117
	return d0_164
fn000028E8_exit:


word32 fn00002A0C(word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & a0Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002718
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: a0:[16..31]-fn00002718 d0:[0..31]-fn00002718
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a6 a7 d2 d3
fn00002A0C_entry:
l00002A0C:
	a0_17 = Mem14[0x00003D94<p32>:word32]
	branch Mem14[a0_17 + 20<i32>:word16] <u 0x27<16> l00002A3A
l00002A3A:
	a1_21 = 0<32>
	branch dwArg08 <u dwArg0C l00002A74
l00002A40:
	d0_30 = AllocMem(0x18<32>, 0<32>)
	a1_21 = d0_30
	branch d0_30 == 0<32> l00002A74
l00002A56:
	Mem38[d0_30:word32] = d0_30 + 4<i32>
	Mem39[d0_30 + 4<i32>:word32] = 0<32>
	Mem40[d0_30 + 8<i32>:word32] = d0_30
	Mem42[d0_30 + 12<i32>:word32] = dwArg04
	Mem45[d0_30 + 16<i32>:word32] = dwArg08 + 7<32> & 0xFFFFFFF8<32>
	Mem46[d0_30 + 20<i32>:word32] = dwArg0C
	a0_17 = d0_30 + 4<i32>
l00002A74:
	d0_51 = a1_21
l00002A26:
	d0_51 = CreatePrivatePool(dwArg04, dwArg08, dwArg0C)
l00002A76:
	a0Out = a0_17
	return d0_51
fn00002A0C_exit:


void fn00002A7C(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a6 a7 d2
fn00002A7C_entry:
l00002A7C:
	branch Mem11[Mem11[0x00003D94<p32>:word32] + 20<i32>:word16] <u 0x27<16> l00002AA0
l00002AA0:
	branch dwArg04 == 0<32> l00002AE4
l00002AA4:
	d0_23 = RemHead(dwArg04)
	a2_24 = d0_23
	branch d0_23 == 0<32> l00002AD6
l00002AB6:
	a2_31 = a2_24 - 4<i32>
	FreeMem(a2_31, Mem11[a2_31:word32])
	d0_40 = RemHead(dwArg04)
	a2_24 = d0_40
	branch d0_40 != 0<32> l00002AB6
l00002AD6:
	FreeMem(dwArg04, 0x18<32>)
l00002A92:
	DeletePrivatePool(dwArg04)
l00002AE4:
	return
fn00002A7C_exit:


word32 fn00002AEC()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002604
// MayUse: 
// LiveOut: a5:[0..31]-fn00002604
// Trashed: CVZN a0 a1 a4 a5 d0 d1
// Preserved: X a2 a7
fn00002AEC_entry:
l00002AEC:
	a2_13 = Mem5[0x00003EEC<p32>:word32]
	branch a2_13 == 0<32> l00002B24
l00002AFA:
	branch (Mem14[a2_13 + 24<i32>:word32] & 0x202<32>) != 0x202<32> l00002B1A
l00002B0C:
	branch Mem14[a2_13:word32] == 0<32> l00002B1A
l00002B10:
	fn00002B28(a2_13, out a0_90, out a5)
l00002B1A:
	a2_13 = Mem43[a2_13 + 12<i32>:word32]
	branch a2_13 != 0<32> l00002AFA
l00002B24:
	return a5
fn00002AEC_exit:


word32 fn00002B28(word32 dwArg04, ptr32 & a0Out, ptr32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002AEC
//      fn00002ED4
//      fn00003910
// MayUse:  Stack +0004:[0..31]
// LiveOut: a0:[16..31]-fn00003910 a5:[0..31]-fn00003910 d0:[0..31]-fn00003910
// Trashed: CVZNX a0 a1 a4 a5 d0 d1
// Preserved: a2 a6 a7 d2 d3 d4
fn00002B28_entry:
l00002B28:
	a5_23 = fn00002BBC()
	branch dwArg04 != 0<32> l00002B3E
l00002B3E:
	branch Mem17[dwArg04 + 28<i32>:word32] != 0<32> l00002B5C
l00002B44:
	branch (Mem17[dwArg04 + 24<i32>:word32] & 4<32>) == 0<32> l00002B54
l00002B54:
	Mem43[dwArg04 + 28<i32>:word32] = 0x400<32>
l00002B4C:
	Mem48[dwArg04 + 28<i32>:word32] = 1<32>
l00002B5C:
	branch Mem53[dwArg04 + 8<i32>:word32] != 0<32> l00002B66
l00002B66:
	branch (Mem53[dwArg04 + 24<i32>:word32] & 2<32>) == 0<32> l00002BAC
l00002B6E:
	branch Mem53[dwArg04:word32] == 0<32> l00002B9C
l00002B9C:
	d0_105 = 0<32>
l00002B72:
	branch Mem53[dwArg04 + 4<i32>:word32] - Mem53[dwArg04 + 8<i32>:word32] == execPrivate3() l00002BA0
l00002BA0:
	Mem85[dwArg04 + 4<i32>:word32] = Mem53[dwArg04 + 8<i32>:word32]
	Mem87[dwArg04 + 20<i32>:word32] = Mem85[dwArg04 + 28<i32>:word32]
l00002BAC:
	Mem96[dwArg04 + 24<i32>:word32] = Mem94[dwArg04 + 24<i32>:word32] & 0xFFFFFFFC<32>
	a0 = dwArg04 + 24<i32>
	d0_105 = 0<32>
l00002B90:
	Mem104[dwArg04 + 24<i32>:word32] = Mem53[dwArg04 + 24<i32>:word32] | 0x10<32>
	a0 = dwArg04 + 24<i32>
	d0_105 = 0xFFFFFFFF<32>
l00002B62:
	d0_105 = 0<32>
l00002B3A:
	d0_105 = 0xFFFFFFFF<32>
l00002BB6:
	a0Out = a0
	a5Out = a5_23
	return d0_105
fn00002B28_exit:


word32 fn00002BBC()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002604
//      fn00002B28
//      fn00003910
// MayUse: 
// LiveOut: a5:[0..31]-fn00003910
// Trashed: CVZN a1 a4 a5 d0 d1
// Preserved: a6 a7
fn00002BBC_entry:
l00002BBC:
	branch (SetSignal(0<32>, 0x1000<32>) & 0x1000<32>) == 0<32> l00002BE6
l00002BDA:
	a5 = fn0000131C(0x00000014<p32>)
l00002BE6:
	return a5
fn00002BBC_exit:


void fn00002ED4(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 a4 a5 d0 d1
// Preserved: X a2 a7
fn00002ED4_entry:
l00002ED4:
	branch dwArg04 == 0<32> l00002EEC
l00002EEC:
	a2_12 = Mem5[0x00003EEC<p32>:word32]
	branch a2_12 == 0<32> l00002F12
l00002EF6:
	branch (Mem20[a2_12 + 24<i32>:word32] & 2<32>) == 0<32> l00002F08
l00002EFE:
	fn00002B28(a2_12, out a0_113, out a5_114)
l00002F08:
	a2_12 = Mem46[a2_12 + 12<i32>:word32]
	branch a2_12 != 0<32> l00002EF6
l00002EE0:
	fn00002B28(dwArg04, out a0_111, out a5_112)
l00002F12:
	return
fn00002ED4_exit:


word32 fn00002F18(word32 d0, word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  d0:[0..31] Stack +0004:[0..31]
// LiveOut: d0:[0..31]-fn00001390
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn00002F18_entry:
l00002F18:
	return fn00002F34(d0, Mem8[0x00003EF8<p32>:word32], dwArg04, fp + 8<i32>)
fn00002F18_exit:


word32 fn00002F34(word32 d0, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002F18
// MayUse:  d0:[8..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: d0:[0..31]-fn00002F18
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4 d5 d6 d7
fn00002F34_entry:
l00002F34:
	d3_1499 = dwArg0C
	a5_1598 = dwArg04
	a4_1951 = dwArg08
	d6_1629 = 0<32>
	branch Mem36[dwArg08:byte] == 0<8> l0000387A
l00002F50:
	branch Mem46[a4_1951:byte] != 0x25<8> l00003854
l00003854:
	a4_1951 = a4_1951 + 1<i32>
	d0 = fn000038B4(CONVERT(Mem53[a4_1951:byte], int8, int32), a5_1598, out a0_3312, out a5_1598)
	branch d0 != 0xFFFFFFFF<32> l00003872
l00003872:
	d6_1629 = d6_1629 + 1<32>
l0000386E:
	d0_1978 = d6_1629
l00002F58:
	dwLoc30_2202 = 0<32>
	d5_269 = 0xFFFFFFFF<32>
	d4_396 = 0x69<32>
	a3_1289 = fp + -36<i32>
	d7_1016 = 0<32>
	dwLoc0A_2204 = 0<32>
	a2_140 = a4_1951 + 1<i32>
	d2_135 = 0<32>
l00002F76:
	d1_100 = 0<32>
l00002F78:
	branch Mem108[0x0000388C<p32> + d1_100:byte] != Mem108[a2_140:byte] l00002F9C
l00002F9C:
	d1_100 = d1_100 + 1<32>
	branch d1_100 <u 5<32> l00002F78
l00002F8A:
	d1_128 = 1<32> << d1_100
	d0 = d1_128
	d2_135 = d2_135 | d1_128
	a2_140 = a2_140 + 1<32>
l00002FA6:
	branch d1_100 <u 5<32> l00002F76
l00002FAE:
	dwLoc28_2207 = d2_135
	branch Mem147[a2_140:byte] != 0x2A<8> l00002FEC
l00002FEC:
	a0_1465 = 0x00002BED<p32> + (SEQ(SLICE(d0, word24, 8), Mem147[a2_140:byte]) & 0xFF<32>)
	d0_162 = CONVERT(Mem147[a0_1465:byte], uint8, uint32)
	d0_163 = d0_162 & 4<32>
	branch (d0_162 & 4<32>) == 0<32> l00003058
l00003008:
	d2_168 = 0<32>
l0000300C:
	d1_182 = __swap(0xA<32>) *u32 SLICE(d2_168, word16, 0)
	d0_191 = SLICE(d2_168, word16, 0) *u32 0xA<32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_182, word16, 16), SLICE(d1_182, word16, 0) + SLICE(__swap(d2_168), word16, 0) *u 0xA<16>)), word16, 16), 0<16>)
	a2_140 = a2_140 + 1<i32>
	a0_1465 = 0x00002BED<p32> + (SEQ(SLICE(d0_191, word24, 8), Mem176[a2_140:byte]) & 0xFF<32>)
	d1_202 = CONVERT(Mem176[a2_140:byte], int8, int32)
	d0_216 = CONVERT(Mem176[a0_1465:byte], uint8, uint32)
	d1_100 = d1_202 - 0x30<32>
	d2_168 = d1_202 - 0x30<32> + d0_191
	d0_163 = d0_216 & 4<32>
	branch (d0_216 & 4<32>) != 0<32> l0000300C
l00003054:
	dwLoc30_2202 = d2_168
l00002FB8:
	d0_163 = __align(d3_1499 + 3<32>, 4<i32>)
	a2_140 = a2_140 + 1<32>
	d3_1499 = d0_163 + 4<32>
	a0_1465 = d0_163 + 4<32>
	v32_239 = Mem147[d0_163:word32]
	branch v32_239 >= 0<32> l00002FE4
l00002FE4:
	dwLoc30_2202 = v32_239
l00002FD0:
	d0_163 = -v32_239
	dwLoc28_2207 = d2_135 | 4<32>
	dwLoc30_2202 = d0_163
l00003058:
	branch Mem261[a2_140:byte] != 0x2E<8> l000030EC
l00003060:
	a2_140 = a2_140 + 1<32>
	branch Mem261[a2_140:byte] != 0x2A<8> l00003086
l00003086:
	a0_1465 = 0x00002BED<p32> + (SEQ(SLICE(d0_163, word24, 8), Mem261[a2_140:byte]) & 0xFF<32>)
	d5_269 = 0<32>
	branch (CONVERT(Mem261[a0_1465:byte], uint8, uint32) & 4<32>) == 0<32> l000030EC
l000030A4:
	d1_296 = __swap(0xA<32>) *u32 SLICE(d5_269, word16, 0)
	d0_305 = SLICE(d5_269, word16, 0) *u32 0xA<32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_296, word16, 16), SLICE(d1_296, word16, 0) + SLICE(__swap(d5_269), word16, 0) *u 0xA<16>)), word16, 16), 0<16>)
	a2_140 = a2_140 + 1<i32>
	d1_316 = CONVERT(Mem290[a2_140:byte], int8, int32)
	a0_1465 = 0x00002BED<p32> + (SEQ(SLICE(d0_305, word24, 8), Mem290[a2_140:byte]) & 0xFF<32>)
	d1_100 = d1_316 - 0x30<32>
	d5_269 = d1_316 - 0x30<32> + d0_305
	branch (CONVERT(Mem290[a0_1465:byte], uint8, uint32) & 4<32>) != 0<32> l000030A4
l00003068:
	d0_341 = __align(d3_1499 + 3<32>, 4<i32>)
	a2_140 = a2_140 + 1<32>
	d3_1499 = d0_341 + 4<32>
	a0_1465 = d0_341 + 4<32>
	v39_346 = Mem261[d0_341:word32]
	branch v39_346 < 0<32> l000030EC
l00003080:
	d5_269 = v39_346
l000030EC:
	branch Mem359[a2_140:byte] == 0x68<8> l00003110
l000030F2:
	branch Mem359[a2_140:byte] == 0x6C<8> l00003110
l000030F8:
	branch Mem359[a2_140:byte] == 0x4C<8> l00003110
l000030FE:
	branch Mem359[a2_140:byte] == 0x6A<8> l00003110
l00003104:
	branch Mem359[a2_140:byte] == 0x7A<8> l00003110
l0000310A:
	branch Mem359[a2_140:byte] != 0x74<8> l00003116
l00003110:
	a2_140 = a2_140 + 1<i32>
	d4_396 = CONVERT(Mem359[a2_140:byte], int8, int32)
l00003116:
	branch d4_396 != 0x68<32> l00003128
l0000311E:
	branch Mem359[a2_140:byte] != 0x68<8> l00003128
l00003124:
	d4_396 = 2<32>
	a2_140 = a2_140 + 1<32>
l00003128:
	branch d4_396 != 0x6C<32> l0000313A
l00003130:
	branch Mem359[a2_140:byte] != 0x6C<8> l0000313A
l00003136:
	d4_396 = 1<32>
	a2_140 = a2_140 + 1<32>
l0000313A:
	branch d4_396 != 0x6A<32> l00003144
l00003142:
	d4_396 = 1<32>
l00003144:
	branch d4_396 != 0x7A<32> l0000314E
l0000314C:
	d4_396 = 0x6C<32>
l0000314E:
	branch d4_396 != 0x74<32> l00003158
l00003156:
	d4_396 = 0x69<32>
l00003158:
	v93_458 = Mem359[a2_140:byte]
	a2_1918 = a2_140 + 1<i32>
	d1_1108 = SEQ(SLICE(d1_100, word24, 8), v93_458)
	branch v93_458 == 0x25<8> l000035E0
l000035E0:
	a3_1289 = 0x00003888<p32>
	dwLoc0A_2204 = 1<32>
	d5_1498 = 0<32>
l00003164:
	branch v93_458 == 0x58<8> l000031B2
l0000316A:
	branch v93_458 == 0x63<8> l00003560
l00003560:
	branch d4_396 != 0x6C<32> l0000357C
l0000357C:
	d0_521 = __align(d3_1499 + 3<32>, 4<i32>)
	d3_1499 = d0_521 + 4<32>
	a0_1465 = d0_521 + 4<32>
l00003568:
	d0_548 = __align(d3_1499 + 3<32>, 4<i32>)
	d3_1499 = d0_548 + 4<32>
	a0_1465 = d0_548 + 4<32>
l0000358E:
	dwLoc0A_2204 = 1<32>
	d5_1498 = 0<32>
l00003172:
	branch v93_458 == 0x64<8> l000031B2
l00003178:
	branch v93_458 == 0x69<8> l000031B2
l0000317E:
	branch v93_458 == 0x6E<8> l000035F2
l000035F2:
	branch d4_396 != 1<32> l00003614
l00003614:
	branch d4_396 != 0x6C<32> l00003632
l00003632:
	branch d4_396 != 0x68<32> l00003650
l00003650:
	branch d4_396 != 2<32> l0000366E
l0000366E:
	d0_590 = __align(d3_1499 + 3<32>, 4<i32>)
	a0_1465 = Mem571[d0_590:word32]
	Mem610[a0_1465:word32] = d6_1629
	d3_1499 = d0_590 + 4<32>
l00003658:
	d0_617 = __align(d3_1499 + 3<32>, 4<i32>)
	a0_1465 = Mem571[d0_617:word32]
	Mem624[a0_1465:byte] = SLICE(d6_1629, byte, 0)
	d3_1499 = d0_617 + 4<32>
l0000363A:
	d0_631 = __align(d3_1499 + 3<32>, 4<i32>)
	a0_1465 = Mem571[d0_631:word32]
	Mem638[a0_1465:word16] = SLICE(d6_1629, word16, 0)
	d3_1499 = d0_631 + 4<32>
l0000361C:
	d0_645 = __align(d3_1499 + 3<32>, 4<i32>)
	a0_1465 = Mem571[d0_645:word32]
	Mem651[a0_1465:word32] = d6_1629
	d3_1499 = d0_645 + 4<32>
l000035FA:
	d0_658 = __align(d3_1499 + 3<32>, 4<i32>)
	a0_1465 = Mem571[d0_658:word32]
	Mem664[a0_1465 + 4<i32>:word32] = d6_1629
	Mem665[a0_1465:word32] = 0<32>
	d3_1499 = d0_658 + 4<32>
l00003682:
	d5_1498 = 0<32>
	dwLoc30_2202 = 0<32>
l0000318A:
	branch v93_458 <=u 0x70<8> l000031B2
l00003198:
	branch v93_458 == 0x73<8> l0000359C
l0000359C:
	d0_696 = __align(d3_1499 + 3<32>, 4<i32>)
	a3_1289 = Mem571[d0_696:word32]
	d3_1499 = d0_696 + 4<32>
	a0_1465 = d0_696 + 4<32>
	a1_702 = a3_1289
	dwLoc0A_2204 = 0<32>
	branch d5_269 == 0<32> l000035BE
l000035B8:
	branch d5_269 <=u 0<32> l000035DA
l000035BE:
	branch Mem703[a3_1289:byte] == 0<8> l000035DA
l000035C2:
	d0_731 = 0<32>
l000035C6:
	d0_731 = d0_731 + 1<32>
	a1_702 = a1_702 + 1<32>
	branch d5_269 <=u 0<32> l000035D2
l000035CE:
	branch d5_269 <=u d0_731 l000035D6
l000035D2:
	branch Mem703[a1_702:byte] != 0<8> l000035C6
l000035D6:
	dwLoc0A_2204 = d0_731
l000035DA:
	d5_1498 = 0<32>
l000031A4:
	branch v93_458 == 0x75<8> l000031B2
l000031AA:
	branch v93_458 != 0x78<8> l0000368A
l0000368A:
	branch v93_458 != 0<8> l00003690
l0000368E:
	a2_1918 = a2_1918 - 1<32>
l00003690:
	a3_1289 = a4_1951
	dwLoc0A_2204 = a2_1918 - a4_1951
	d5_1498 = 0<32>
	dwLoc30_2202 = 0<32>
l000031B2:
	branch v93_458 != 0x70<8> l000031C4
l000031B8:
	d4_396 = 0x6C<32>
	d1_1108 = 0x78<32>
	dwLoc28_2207 = dwLoc28_2207 | 1<32>
l000031C4:
	branch SLICE(d1_1108, byte, 0) == 0x64<8> l000031D2
l000031CA:
	branch SLICE(d1_1108, byte, 0) != 0x69<8> l0000331C
l0000331C:
	branch d4_396 != 1<32> l00003340
l00003340:
	branch d4_396 != 0x6C<32> l00003362
l00003362:
	d0_841 = __align(d3_1499 + 3<32>, 4<i32>)
	v213_847 = Mem846[d0_841:word32]
	d3_1093 = d0_841 + 4<32>
	wLoc32_2249 = SLICE(v213_847, word16, 0) (alias)
	wLoc34_2271 = SLICE(v213_847, word16, 16) (alias)
	dwLoc38_2244 = 0<32>
l00003348:
	d0_858 = __align(d3_1499 + 3<32>, 4<i32>)
	v205_863 = Mem846[d0_858:word32]
	d3_1093 = d0_858 + 4<32>
	wLoc32_2249 = SLICE(v205_863, word16, 0) (alias)
	wLoc34_2271 = SLICE(v205_863, word16, 16) (alias)
	dwLoc38_2244 = 0<32>
l00003324:
	d0_873 = __align(d3_1499 + 3<32>, 4<i32>)
	v196_878 = Mem846[d0_873 + 4<32>:word32]
	d3_1093 = d0_873 + 8<32>
	wLoc32_2249 = SLICE(v196_878, word16, 0) (alias)
	wLoc34_2271 = SLICE(v196_878, word16, 16) (alias)
	dwLoc38_2244 = Mem879[d0_873:word32]
l0000337A:
	dwLoc34_3306 = SEQ(wLoc34_2271, wLoc32_2249) (alias)
	branch d4_396 != 0x68<32> l00003396
l00003382:
	dwLoc38_2244 = 0<32>
	dwLoc34_3306 = SEQ(SLICE(CONVERT(wLoc32_2249, uint16, uint32), word24, 8), SLICE(wLoc32_2249, byte, 0)) (alias)
l00003396:
	bLoc31_2256 = SLICE(dwLoc34_3306, byte, 24) (alias)
	qwLoc38_3309 = SEQ(dwLoc38_2244, dwLoc34_3306) (alias)
	branch d4_396 != 2<32> l000033B2
l0000339E:
	qwLoc38_3309 = CONVERT(bLoc31_2256, uint8, uint64) (alias)
l000033B2:
	dwLoc38_2279 = SLICE(qwLoc38_3309, word32, 0) (alias)
	dwLoc34_2269 = SLICE(qwLoc38_3309, word32, 32) (alias)
	bLoc44_2266 = SLICE(d1_1108, byte, 0)
	branch (dwLoc28_2207 & 1<32>) == 0<32> l00003450
l000033C2:
	branch SLICE(d1_1108, byte, 0) != 0x6F<8> l000033FE
l000033C8:
	branch d5_269 != 0<32> l000033F2
l000033CC:
	branch dwLoc38_2279 == 0<32> l000033FE
l000033F2:
	d7_1016 = 1<32>
l000033FE:
	branch SLICE(d1_1108, byte, 0) == 0x78<8> l0000340E
l00003404:
	bLoc44_2266 = SLICE(d1_1108, byte, 0)
	branch SLICE(d1_1108, byte, 0) != 0x58<8> l00003450
l0000340E:
	bLoc44_2266 = SLICE(d1_1108, byte, 0)
	branch dwLoc38_2279 == 0<32> l00003450
l00003438:
	Mem1069[fp + -6<i32> + d7_1016:byte] = 0x30<8>
	d7_1068 = d7_1016 + 1<32>
	Mem1074[fp + -6<i32> + d7_1068:byte] = SLICE(d1_1108, byte, 0)
	d7_1016 = d7_1068 + 1<32>
	bLoc44_2266 = SLICE(d1_1108, byte, 0)
l000031D2:
	branch d4_396 != 1<32> l000031F8
l000031F8:
	branch d4_396 != 0x6C<32> l00003224
l00003224:
	d0_1091 = __align(d3_1499 + 3<32>, 4<i32>)
	d0_1096 = Mem846[d0_1091:word32]
	d3_1093 = d0_1091 + 4<32>
	wLoc3A_2299 = SLICE(d0_1096, word16, 0) (alias)
	d0_1103 = d0_1096 >> 0x1F<32>
	dwLoc40_2298 = d0_1096 >> 0x1F<32>
	branch d4_396 != 0x68<32> l0000326A
l0000324E:
	d1_1120 = CONVERT(wLoc3A_2299, int16, int32)
	dwLoc40_2298 = d1_1120 >> 0x1F<32>
	d1_1108 = SEQ(SLICE(d0_1096 >> 0x1F<32>, word16, 16), wLoc3A_2299)
	d0_1103 = d1_1108
	d0_1096 = SEQ(SLICE(d1_1120, word24, 8), SLICE(wLoc3A_2299, byte, 0)) (alias)
l0000326A:
	bLoc39_2304 = SLICE(d0_1096, byte, 24) (alias)
	qwLoc40_3295 = SEQ(dwLoc40_2298, d0_1096) (alias)
	branch d4_396 != 2<32> l00003290
l00003272:
	d1_1155 = CONVERT(bLoc39_2304, int8, int32)
	d1_1108 = SEQ(SLICE(d0_1103, word24, 8), bLoc39_2304)
	qwLoc40_3295 = SEQ(d1_1155 >> 0x1F<32>, d1_1155) (alias)
l00003200:
	d0_1175 = __align(d3_1499 + 3<32>, 4<i32>)
	d0_1179 = Mem846[d0_1175:word32]
	d3_1093 = d0_1175 + 4<32>
	qwLoc40_3295 = SEQ(d0_1179 >> 0x1F<32>, d0_1179) (alias)
l000031DA:
	d0_1196 = __align(d3_1499 + 3<32>, 4<i32>)
	d3_1093 = d0_1196 + 8<32>
	qwLoc40_3295 = Mem1202[d0_1196:word64] (alias)
l00003290:
	dwLoc40_2324 = SLICE(qwLoc40_3295, word32, 0) (alias)
	dwLoc3C_2319 = SLICE(qwLoc40_3295, word32, 32) (alias)
	v127_1209 = SLICE(d1_1108, byte, 0)
	branch dwLoc40_2324 >= 0<32> l000032DA
l000032DA:
	branch (dwLoc28_2207 & 0x10<32>) == 0<32> l000032F4
l000032F4:
	branch (dwLoc28_2207 & 8<32>) == 0<32> l00003308
l000032FC:
	d7_1016 = 1<32>
l000032E6:
	d7_1016 = 1<32>
l00003308:
	dwLoc34_2269 = dwLoc3C_2319
	dwLoc38_2279 = dwLoc40_2324
	bLoc44_2266 = v127_1209
l00003450:
	a3_1289 = fp + -14<i32>
	branch bLoc44_2266 == 0x78<8> l00003464
l0000345E:
	branch bLoc44_2266 != 0x58<8> l0000346E
l0000346E:
	branch bLoc44_2266 != 0x6F<8> l0000347E
l0000347E:
	dwLoc40_2338 = 0xA<32>
l00003474:
	dwLoc40_2338 = 8<32>
l00003486:
	dwLoc44_2341 = dwLoc40_2338
l00003464:
	dwLoc44_2341 = 0x10<32>
l0000348C:
	branch bLoc44_2266 == 0x58<8> l0000349E
l0000349E:
	a6_1329 = 0x000038A4<p32>
l00003498:
	a6_1329 = 0x00003894<p32>
l000034A2:
	d3_1392 = 0<32>
	d6_d7_3302 = SEQ(dwLoc38_2279, dwLoc34_2269) (alias)
l000034C4:
	a3_1289 = a3_1289 - 1<i32>
	Mem1447[a3_1289:byte] = Mem1423[a6_1329 + fn00003C74(d6_d7_3302, SEQ(dwLoc44_2341 >> 0x1F<32>, dwLoc44_2341)):byte]
	d0_d1_3305 = fn00003A24(SLICE(d6_d7_3302, word32, 32), SLICE(d6_d7_3302, word32, 0), dwLoc44_2341 >> 0x1F<32>, dwLoc44_2341, out a0_1465)
	d3_1392 = d3_1392 + 1<32>
	d6_d7_3302 = d0_d1_3305 (alias)
	branch SLICE(d0_d1_3305, word32, 32) != 0<32> l000034C4
l00003532:
	dwLoc0A_2204 = d3_1392
	d5_1498 = d5_269
	d3_1499 = d3_1093
	branch d5_269 != 0xFFFFFFFF<32> l00003554
l00003554:
	dwLoc28_2207 = dwLoc28_2207 & 0xFFFFFFFD<32>
l0000354E:
	d5_1498 = 0<32>
l000036A0:
	branch d5_1498 >u dwLoc0A_2204 l000036AE
l000036AE:
	dwLoc44_2427 = d5_1498
l000036A6:
	dwLoc44_2427 = dwLoc0A_2204
l000036B2:
	d0_1549 = dwLoc44_2427 + d7_1016
	branch d0_1549 <u dwLoc30_2202 l000036D6
l000036D6:
	dwLoc44_2470 = dwLoc30_2202 - d0_1549
l000036D0:
	dwLoc44_2470 = 0<32>
l000036E6:
	branch (dwLoc28_2207 & 2<32>) == 0<32> l00003728
l000036F4:
	d2_1590 = 0<32>
	branch d7_1016 == 0<32> l00003728
l000036FA:
	branch fn000038B4(CONVERT(Mem1599[fp + -6<i32> + d2_1590:byte], int8, int32), a5_1598, out a0_1465, out a5_1598) != 0xFFFFFFFF<32> l00003720
l00003720:
	d2_1590 = d2_1590 + 1<32>
	d6_1629 = d6_1629 + 1<32>
	branch d7_1016 >u d2_1590 l000036FA
l00003728:
	branch (dwLoc28_2207 & 4<32>) != 0<32> l0000377A
l00003730:
	d2_1645 = 0<32>
	branch dwLoc44_2470 == 0<32> l0000377A
l00003738:
l00003740:
	branch (dwLoc28_2207 & 2<32>) == 0<32> l0000374E
l0000374E:
	a0_1668 = SEQ(SLICE(a0_1465, word16, 16), 0x20<16>)
l00003748:
	a0_1668 = SEQ(SLICE(a0_1465, word16, 16), 0x30<16>)
l00003752:
	branch fn000038B4(a0_1668, a5_1598, out a0_1465, out a5_1598) != 0xFFFFFFFF<32> l0000376A
l0000376A:
	d2_1645 = d2_1645 + 1<32>
	d6_1629 = d6_1629 + 1<32>
	branch dwLoc44_2470 >u d2_1645 l00003740
l00003772:
l0000377A:
	branch (dwLoc28_2207 & 2<32>) != 0<32> l000037B6
l00003782:
	d2_1718 = 0<32>
	branch d7_1016 == 0<32> l000037B6
l00003788:
	branch fn000038B4(CONVERT(Mem1730[fp + -6<i32> + d2_1718:byte], int8, int32), a5_1598, out a0_3313, out a5_1598) != 0xFFFFFFFF<32> l000037AE
l000037AE:
	d2_1718 = d2_1718 + 1<32>
	d6_1629 = d6_1629 + 1<32>
	branch d7_1016 >u d2_1718 l00003788
l000037B6:
	d2_1770 = dwLoc0A_2204
	branch d5_1498 <=u dwLoc0A_2204 l000037E4
l000037C0:
	branch fn000038B4(0x00000030<p32>, a5_1598, out a0_3314, out a5_1598) != 0xFFFFFFFF<32> l000037DC
l000037DC:
	d2_1770 = d2_1770 + 1<32>
	d6_1629 = d6_1629 + 1<32>
	branch d5_1498 >u d2_1770 l000037C0
l000037E4:
	d2_1815 = 0<32>
	branch dwLoc0A_2204 == 0<32> l0000381A
l000037EC:
l000037F0:
	branch fn000038B4(CONVERT(Mem1826[a3_1289 + d2_1815:byte], int8, int32), a5_1598, out a0_3315, out a5_1598) != 0xFFFFFFFF<32> l00003812
l00003812:
	d2_1815 = d2_1815 + 1<32>
	d6_1629 = d6_1629 + 1<32>
	branch dwLoc0A_2204 >u d2_1815 l000037F0
l0000381A:
	d0 = dwLoc28_2207 & 4<32>
	branch d0 == 0<32> l00003850
l00003822:
	d2_1872 = 0<32>
	branch dwLoc44_2470 == 0<32> l00003850
l0000382A:
l0000382E:
	d0 = fn000038B4(0x00000020<p32>, a5_1598, out a0_3316, out a5_1598)
	branch d0 != 0xFFFFFFFF<32> l00003848
l00003848:
	d2_1872 = d2_1872 + 1<32>
	d6_1629 = d6_1629 + 1<32>
	branch dwLoc44_2470 >u d2_1872 l0000382E
l00003850:
	a4_1951 = a2_1918
l00003874:
	branch Mem1953[a4_1951:byte] != 0<8> l00002F50
l0000387A:
	d0_1978 = d6_1629
l00003844:
	d0_1978 = d6_1629
l0000380E:
	d0_1978 = d6_1629
l000037D6:
	d0_1978 = d6_1629
l000037A8:
	d0_1978 = d6_1629
l00003764:
	d0_1978 = d6_1629
l0000371A:
	d0_1978 = d6_1629
l0000387C:
	return d0_1978
fn00002F34_exit:
l000032BA:


word32 fn000038B4(word32 dwArg04, word32 dwArg08, ptr32 & a0Out, ptr32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002F34
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0:[16..31]-fn00002F34 a5:[0..31]-fn00002F34 d0:[0..31]-fn00002F34
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a7 d2
fn000038B4_entry:
l000038B4:
	Mem17[dwArg08 + 24<i32>:word32] = Mem11[dwArg08 + 24<i32>:word32] | 2<32>
	v13_19 = Mem17[dwArg08 + 20<i32>:word32] - 1<32>
	Mem20[dwArg08 + 20<i32>:word32] = v13_19
	branch v13_19 < 0<32> l000038F8
l000038D0:
	branch dwArg04 != 0xA<32> l000038E2
l000038D6:
	branch (Mem20[dwArg08 + 24<i32>:word32] & 0x80<32>) != 0<32> l000038F8
l000038F8:
	d1_53 = fn00003910(dwArg04, dwArg08, out a0_109, out a5)
l000038E2:
	a0_109 = Mem20[dwArg08 + 4<i32>:word32]
	Mem64[dwArg08 + 4<i32>:word32] = a0_109 + 1<32>
	Mem67[a0_109:byte] = SLICE(dwArg04, byte, 0)
	d1_53 = CONVERT(Mem67[a0_109:byte], uint8, uint32)
l00003906:
	a0Out = a0_109
	a5Out = a5
	return d1_53
fn000038B4_exit:


word32 fn00003910(word32 dwArg04, word32 dwArg08, ptr32 & a0Out, ptr32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000038B4
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0:[16..31]-fn000038B4 a5:[0..31]-fn000038B4 d0:[0..31]-fn000038B4
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a4 a6 a7 d2 d3 d4 d5 d6
fn00003910_entry:
l00003910:
	a5_137 = fn00002BBC()
	branch dwArg08 != 0<32> l0000392C
l0000392C:
	branch (Mem29[dwArg08 + 24<i32>:word32] & 0x49<32>) == 0x40<32> l0000393E
l0000393E:
	branch Mem29[dwArg08 + 28<i32>:word32] != 0<32> l0000395C
l00003944:
	branch (Mem29[dwArg08 + 24<i32>:word32] & 4<32>) == 0<32> l00003954
l00003954:
	Mem65[dwArg08 + 28<i32>:word32] = 0x400<32>
l0000394C:
	Mem70[dwArg08 + 28<i32>:word32] = 1<32>
l0000395C:
	branch Mem75[dwArg08 + 8<i32>:word32] != 0<32> l0000399C
l0000399C:
	branch Mem75[dwArg08:word32] == 0<32> l000039F6
l000039F6:
	d0_117 = 0<32>
l000039A0:
	branch (Mem75[dwArg08 + 24<i32>:word32] & 0x80<32>) == 0<32> l000039CC
l000039AC:
	branch dwArg04 != 0xA<32> l000039CC
l000039CC:
	branch Mem75[dwArg08 + 4<i32>:word32] - Mem75[dwArg08 + 8<i32>:word32] == execPrivate3() l000039FA
l000039EA:
	Mem116[dwArg08 + 24<i32>:word32] = Mem75[dwArg08 + 24<i32>:word32] | 0x10<32>
	a0 = dwArg08 + 24<i32>
	d0_117 = 0xFFFFFFFF<32>
l000039B2:
	a0_122 = Mem75[dwArg08 + 4<i32>:word32]
	Mem125[dwArg08 + 4<i32>:word32] = a0_122 + 1<32>
	Mem127[a0_122:byte] = SLICE(dwArg04, byte, 0)
	d0_117 = fn00002B28(dwArg08, out a0, out a5_137)
l00003962:
	branch (Mem75[dwArg08 + 24<i32>:word32] & 0x80<32>) == 0<32> l00003976
l00003976:
	d4_153 = 1<32>
l00003972:
	d4_153 = 2<32>
l00003978:
	d0_175 = fn00002718(d4_153 + Mem75[dwArg08 + 28<i32>:word32], out a0)
	branch d0_175 != 0<32> l00003992
l00003992:
	Mem190[dwArg08 + 8<i32>:word32] = d0_175 + 1<i32>
l000039FA:
	Mem199[dwArg08 + 24<i32>:word32] = Mem197[dwArg08 + 24<i32>:word32] | 2<32>
	a0 = Mem199[dwArg08 + 8<i32>:word32]
	Mem206[a0:byte] = SLICE(dwArg04, byte, 0)
	Mem209[dwArg08 + 4<i32>:word32] = Mem206[dwArg08 + 8<i32>:word32] + 1<32>
	Mem213[dwArg08 + 20<i32>:word32] = Mem209[dwArg08 + 28<i32>:word32] - 1<32>
	d0_117 = 0<32>
l0000398C:
	d0_117 = 0xFFFFFFFF<32>
l00003938:
	d0_117 = 0xFFFFFFFF<32>
l00003926:
	d0_117 = 0xFFFFFFFF<32>
l00003A1E:
	a0Out = a0
	a5Out = a5_137
	return d0_117
fn00003910_exit:


word64 fn00003A24(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & a0Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002F34
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: a0:[16..31]-fn00002F34 Sequence d0:d1:[0..63]-fn00002F34
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
fn00003A24_entry:
l00003A24:
	d1_100 = dwArg08
	a0_20 = dwArg08
	d3_174 = dwArg10
	branch dwArg0C != 0<32> l00003A7A
l00003A7A:
	branch dwArg04 >=u dwArg0C l00003A84
l00003A84:
	d4_31 = 0x18<32>
	d6_32 = __rol<word32,word32>(dwArg0C, 8<32>)
	branch SLICE(d6_32, byte, 0) != 0<8> l00003AA2
l00003A8E:
	d4_31 = 0x10<32>
	d6_32 = __rol<word32,word32>(d6_32, 8<32>)
	branch SLICE(d6_32, byte, 0) != 0<8> l00003AA2
l00003A96:
	d4_31 = 8<32>
	d6_32 = __rol<word32,word32>(d6_32, 8<32>)
	branch SLICE(d6_32, byte, 0) != 0<8> l00003AA2
l00003A9E:
	d4_31 = 0<32>
	d6_32 = SEQ(SLICE(d6_32, word24, 8), SLICE(dwArg0C, byte, 0))
l00003AA2:
	d4_65 = SEQ(SLICE(d4_31, word24, 8), SLICE(d4_31, byte, 0) + Mem17[0x00003DCC<p32> + CONVERT(SLICE(d6_32, word16, 0) & 0xFF<16>, int16, int32):byte])
	d5_67 = 0x20<32> - d4_65
	branch d5_67 != 0<32> l00003AC2
l00003AC2:
	d0_89 = fn00003B28(dwArg04 >>u d4_65, dwArg04 << d5_67 | dwArg08 >>u d4_65, dwArg0C << d5_67 | dwArg10 >>u d4_65, out d1_90, out d2_373)
	d3_76 = dwArg10 << d5_67
	d5_105 = __swap(d0_89)
	d6_107 = __swap(d3_76)
	d2_111 = __swap(d0_89 *u32 SLICE(d3_76, word16, 0))
	d3_106 = d3_76 *u32 SLICE(d5_105, word16, 0)
	d5_109 = d5_105 *u32 SLICE(d6_107, word16, 0)
	v38_v35_257 = CONVERT(SLICE(d2_111, word16, 0), uint16, uint32) + SEQ(SLICE(d5_109, word16, 0), SLICE(d3_106, word16, 0))
	d4_108 = d0_89 *u32 SLICE(d6_107, word16, 0)
	v42_v40_258 = CONVERT(SLICE(v38_v35_257, word16, 0), uint16, uint32) + SEQ(SLICE(v38_v35_257, word16, 16), SLICE(d4_108, word16, 0))
	d6_86 = dwArg08 << d5_67
	d2_128 = __swap(SEQ(SLICE(d2_111, word16, 16), SLICE(v42_v40_258, word16, 0)))
	a0_20 = d6_86
	d1_100 = d0_89
	v49_138 = d1_90 - ((__swap(SEQ(SLICE(d3_106, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d4_108, word16, 16), 0<16>))) + SEQ(SLICE(d5_109, word16, 16), SLICE(v42_v40_258, word16, 16)))
	branch v49_138 <u 0<32> l00003B1E
l00003B18:
	branch v49_138 != 0<32> l00003B20
l00003B1A:
	branch d6_86 >=u d2_128 l00003B20
l00003B1E:
	d1_100 = d0_89 - 1<32>
l00003AB6:
	branch dwArg0C <u dwArg04 l00003ABE
l00003ABA:
	branch dwArg10 >u dwArg08 l00003A7E
l00003ABE:
l00003A7E:
l00003A3C:
	branch dwArg04 >=u dwArg10 l00003A4E
l00003A4E:
	branch dwArg10 != 0<32> l00003A5A
l00003A52:
	d3_174 = CONVERT(1<32> /u SLICE(dwArg10, uint16, 0), int16, int32)
l00003A5A:
	d0_186 = fn00003B28(0<32>, dwArg04, d3_174, out d1_187, out d2_188)
	d1_100 = fn00003B28(d1_187, dwArg08, d2_188, out d1_371, out d2_372)
	d0_210 = d0_186
l00003A40:
	d1_100 = fn00003B28(dwArg04, dwArg08, dwArg10, out d1_369, out d2_370)
l00003B20:
	d0_210 = 0<32>
l00003B22:
	a0Out = a0_20
	return SEQ(d0_210, d1_100)
fn00003A24_exit:


word32 fn00003B28(word32 d0, word32 d1, word32 d2, ptr32 & d1Out, ptr32 & d2Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003A24
//      fn00003C74
// MayUse:  d0:[0..31] d1:[0..31] d2:[0..31]
// LiveOut: d0:[0..31]-fn00003C74 d1:[0..31]-fn00003C74 d2:[0..31]-fn00003C74
// Trashed: CVZNX d0 d1 d2
// Preserved: a0 a1 a7 d3 d4 d5 d6 d7
fn00003B28_entry:
l00003B28:
	d7_13 = d2
	branch d2 == 0<32> l00003B42
l00003B30:
	branch d0 != 0<32> l00003B50
l00003B50:
	d2_26 = __swap(d2)
	branch SLICE(d2_26, word16, 0) != 0<16> l00003B78
l00003B78:
	bLoc26_389 = 0<8>
	d0_48 = 0<32>
	d5_d6_372 = SEQ(d0, d1) (alias)
	d5_d6_372 = SEQ(d0, d1) (alias)
	branch d2 < 0<32> l00003B94
l00003B8A:
	d5_d6_372 = d5_d6_372 * 2<64>
	d0_48 = SEQ(SLICE(d0_48, word16, 16), SLICE(d0_48, word16, 0) + 1<16>)
	d7_13 = d7_13 * 2<32>
	branch d7_13 > 0<32> l00003B8A
l00003B94:
	v41_68 = SLICE(d0_48, word16, 0)
	d5_d6_576 = d5_d6_372 (alias)
l00003B96:
	d5_77 = SLICE(d5_d6_576, word32, 32) (alias)
	d2_79 = __swap(d5_77)
	d3_80 = __swap(d7_13)
	d6_102 = SLICE(d5_d6_576, word32, 0) (alias)
	branch SLICE(d2_79 - d3_80, word16, 0) != 0<16> l00003BA8
l00003BA8:
	d1_112 = __swap(SEQ(SLICE(__swap(SEQ(d5_77 %u SLICE(d3_80, uint16, 0), d5_77 /u SLICE(d3_80, uint16, 0))), word16, 16), 0<16>))
l00003BA2:
	d1_112 = 0xFFFF<32>
l00003BB2:
	d6_106 = __swap(SEQ(SLICE(d6_102, word16, 16), 0<16>))
l00003BB8:
	d4_121 = __swap(d5_77 - __swap(d7_13) *u32 SLICE(d1_112, word16, 0))
	wLoc22_469 = SLICE(dwLoc24, word16, 0) (alias)
	d2_114 = d1_112 *u32 SLICE(d7_13, word16, 0)
	d4_129 = SEQ(SLICE(d4_121, word16, 16), SLICE(d6_106, word16, 0))
	branch SLICE(d4_121, word16, 0) != 0<16> l00003BD8
l00003BD0:
	branch d2_114 <=u d4_129 l00003BD8
l00003BD8:
	d6_141 = __swap(d1_112)
	d3_148 = __swap(d6_141)
	d4_150 = __swap(d7_13)
	d6_154 = __swap(d6_141 *u32 SLICE(d7_13, word16, 0))
	d5_149 = d7_13 *u32 SLICE(d3_148, word16, 0)
	d3_152 = d3_148 *u32 SLICE(d4_150, word16, 0)
	v57_v55_373 = CONVERT(SLICE(d6_154, word16, 0), uint16, uint32) + SEQ(SLICE(d3_152, word16, 0), SLICE(d5_149, word16, 0))
	d2_151 = d6_141 *u32 SLICE(d4_150, word16, 0)
	v61_v59_374 = CONVERT(SLICE(v57_v55_373, word16, 0), uint16, uint32) + SEQ(SLICE(v57_v55_373, word16, 16), SLICE(d2_151, word16, 0))
	d5_d6_377 = d5_d6_576 - SEQ((__swap(SEQ(SLICE(d5_149, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d2_151, word16, 16), 0<16>))) + SEQ(SLICE(d3_152, word16, 16), SLICE(v61_v59_374, word16, 16)), __swap(SEQ(SLICE(d6_154, word16, 16), SLICE(v61_v59_374, word16, 0))))
	d6_186 = SLICE(d5_d6_377, word32, 0) (alias)
	d5_189 = SLICE(d5_d6_377, word32, 32) (alias)
	branch d5_189 >=u 0<32> l00003C30
l00003C1A:
	d5_d6_379 = CONVERT(d6_186, word32, uint64) + SEQ(d5_189, SLICE(__swap(d7_13), word16, 16), 0<16>)
	d1_112 = d1_112 - 1<32>
	d6_186 = SLICE(d5_d6_379, word32, 0) (alias)
	d5_189 = SLICE(d5_d6_379, word32, 32) + __swap(SEQ(SLICE(d7_13, word16, 16), 0<16>))
l00003C30:
	branch bLoc26_389 != 0<8> l00003C4C
l00003C4C:
	d6_228 = __swap(SEQ(SLICE(d6_186, word16, 16), SLICE(d5_189, word16, 0)))
	d0 = SEQ(SLICE(dwLoc24, word16, 16), SLICE(d1_112, word16, 0))
	d5_229 = __swap(d5_189)
	v81_232 = SLICE(d7_13, word16, 16)
	branch v41_68 == 0<16> l00003C66
l00003C5C:
	d7_240 = SEQ(v81_232, v41_68 - 1<16>)
	d5_d6_579 = SEQ(d5_229, d6_228) (alias)
l00003C5E:
	d5_d6_579 = d5_d6_579 >>u 1<32>
	v85_251 = SLICE(d7_240, word16, 0)
	d6_228 = SLICE(d5_d6_579, word32, 0)
	d7_240 = SEQ(SLICE(d7_240, word16, 16), v85_251 - 1<i16>)
	branch v85_251 != 0<16> l00003C5E
l00003C66:
	d1 = d6_228
	d2 = d2_26
l00003C36:
	d5_278 = __swap(d5_189)
	d6_279 = __swap(d6_186)
	bLoc26_389 = true
	dwLoc24 = SEQ(SLICE(d1_112, word16, 0), wLoc22_469) (alias)
	d5_d6_576 = SEQ(SLICE(d5_278, word16, 16), SLICE(d6_279, word16, 0), SLICE(d6_279, word16, 16), 0<16>) (alias)
l00003BD4:
	d1_112 = d1_112 - 1<32>
l00003B56:
	d0_293 = __swap(d0)
	d1_294 = __swap(d1)
	d0_297 = SEQ(SLICE(d0_293, word16, 16), SLICE(d1_294, word16, 0))
	d0_307 = SEQ(d0_297 %u SLICE(d2, uint16, 0), SLICE(__swap(d1_294), word16, 0))
	d2 = SEQ(SLICE(__swap(CONVERT(d0_297 /u SLICE(d2, uint16, 0), uint16, uint32)), word16, 16), d0_307 /u SLICE(d2, uint16, 0))
	d1 = __swap(SEQ(d0_307 %u SLICE(d2, uint16, 0), 0<16>))
	d0 = d2
l00003B36:
	branch d1 == 0<32> l00003C6E
l00003B3C:
	branch d2 >u d1 l00003C6E
l00003B42:
	d0 = fn0000257E(d1, d2, d2, out d1)
l00003C6E:
	d1Out = d1
	d2Out = d2
	return d0
fn00003B28_exit:


word32 fn00003C74(word64 qwArg04, word64 qwArg0C)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002F34
// MayUse:  Stack +0004:[0..63] Stack +000C:[0..63]
// LiveOut: d1:[0..31]-fn00002F34
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6 d7
fn00003C74_entry:
	dwArg08 = SLICE(qwArg04, word32, 32)
	dwArg04 = SLICE(qwArg04, word32, 0)
	dwArg10 = SLICE(qwArg0C, word32, 32)
	dwArg0C = SLICE(qwArg0C, word32, 0)
l00003C74:
	d1_175 = dwArg08
	d3_206 = dwArg10
	branch dwArg0C != 0<32> l00003CC6
l00003CC6:
	branch dwArg04 <u dwArg0C l00003D80
l00003CCC:
	d4_34 = 0x18<32>
	d6_35 = __rol<word32,word32>(dwArg0C, 8<32>)
	branch SLICE(d6_35, byte, 0) != 0<8> l00003CEA
l00003CD6:
	d4_34 = 0x10<32>
	d6_35 = __rol<word32,word32>(d6_35, 8<32>)
	branch SLICE(d6_35, byte, 0) != 0<8> l00003CEA
l00003CDE:
	d4_34 = 8<32>
	d6_35 = __rol<word32,word32>(d6_35, 8<32>)
	branch SLICE(d6_35, byte, 0) != 0<8> l00003CEA
l00003CE6:
	d4_34 = 0<32>
	d6_35 = SEQ(SLICE(d6_35, word24, 8), SLICE(dwArg0C, byte, 0))
l00003CEA:
	d4_68 = SEQ(SLICE(d4_34, word24, 8), SLICE(d4_34, byte, 0) + Mem20[0x00003DCC<p32> + CONVERT(SLICE(d6_35, word16, 0) & 0xFF<16>, int16, int32):byte])
	d5_70 = 0x20<32> - d4_68
	branch d5_70 != 0<32> l00003D0C
l00003D0C:
	d0_92 = fn00003B28(dwArg04 >>u d4_68, dwArg04 << d5_70 | dwArg08 >>u d4_68, dwArg0C << d5_70 | dwArg10 >>u d4_68, out d1_93, out d2_94)
	d3_79 = dwArg10 << d5_70
	d7_108 = __swap(d0_92)
	d6_110 = __swap(d3_79)
	d2_114 = __swap(d0_92 *u32 SLICE(d3_79, word16, 0))
	d3_109 = d3_79 *u32 SLICE(d7_108, word16, 0)
	d7_112 = d7_108 *u32 SLICE(d6_110, word16, 0)
	v39_v37_283 = CONVERT(SLICE(d2_114, word16, 0), uint16, uint32) + SEQ(SLICE(d7_112, word16, 0), SLICE(d3_109, word16, 0))
	d4_111 = d0_92 *u32 SLICE(d6_110, word16, 0)
	v43_v41_284 = CONVERT(SLICE(v39_v37_283, word16, 0), uint16, uint32) + SEQ(SLICE(v39_v37_283, word16, 16), SLICE(d4_111, word16, 0))
	d2_131 = __swap(SEQ(SLICE(d2_114, word16, 16), SLICE(v43_v41_284, word16, 0)))
	d6_89 = dwArg08 << d5_70
	d3_139 = __swap(SEQ(SLICE(d3_109, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d4_111, word16, 16), 0<16>)) + SEQ(SLICE(d7_112, word16, 16), SLICE(v43_v41_284, word16, 16))
	v50_141 = d1_93 - d2_131
	branch v50_141 <u 0<32> l00003D68
l00003D62:
	d2_d3_290 = SEQ(d2_131, d3_139) (alias)
	branch v50_141 != 0<32> l00003D6C
l00003D64:
	d2_d3_290 = SEQ(d2_131, d3_139) (alias)
	branch d6_89 >=u d3_139 l00003D6C
l00003D68:
	d2_d3_290 = SEQ(d2_131, d3_139) - SEQ(d2_94, d3_79)
l00003D6C:
	d1_d6_293 = SEQ(d1_93, d6_89) - d2_d3_290
	d1_175 = SLICE(d1_d6_293, word32, 32) << 0x20<32> - d5_70 | SLICE(d1_d6_293, word32, 0) >>u d5_70
l00003CFE:
	branch dwArg0C <u dwArg04 l00003D06
l00003D02:
	branch dwArg10 >u dwArg08 l00003D80
l00003D06:
	d1_175 = SLICE(qwArg04 - qwArg0C, word32, 0) (alias)
l00003C8C:
	branch dwArg04 >=u dwArg10 l00003C9E
l00003C9E:
	branch dwArg10 != 0<32> l00003CAA
l00003CA2:
	d3_206 = CONVERT(1<32> /u SLICE(dwArg10, uint16, 0), int16, int32)
l00003CAA:
	fn00003B28(0<32>, dwArg04, d3_206, out d1_219, out d2_220)
	fn00003B28(d1_219, dwArg08, d2_220, out d1_175, out d2_411)
l00003C90:
	fn00003B28(dwArg04, dwArg08, dwArg10, out d1_175, out d2_410)
l00003D80:
	return d1_175
fn00003C74_exit:


