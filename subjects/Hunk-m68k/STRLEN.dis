void fn00001000(word32 d0, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] d0:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5
// Preserved: d7
fn00001000_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001000:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000100A:
	word32 a6_9 = Mem0[0x00000004:word32]
	word32 d2_102 = d0
	word32 a2_196 = a0
	branch Mem0[a6_9 + 20:word16] >=u 0x0024 l00001036
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001020:
	word32 a0_13 = 0x000013C8
	word32 d0_16 = 0x000093EE >>u 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001030:
	Mem19[a0_13:word32] = 0x00000000
	a0_13 = a0_13 + 4
	d0_16 = d0_16 - 0x00000001
	branch d0_16 != 0x00000000 l00001030
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001036:
	Mem30[0x000013C8:word32] = fp
	Mem34[0x000013CC:word32] = a6_9
	word32 d0_37 = FindTask(0x00000000)
	word32 a1_255 = 0x000012BC
	word32 d0_112 = OpenLibrary(0x000012BC, 0)
	branch d0_112 == 0x00000000 l00001226
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001226:
	Alert(0x00038007)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001056:
	word32 d4_75
	Mem68[0x000013D0:word32] = d0_112
	branch Mem68[d0_37 + 172:word32] != 0x00000000 l00001066
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001066:
	word32 a0_74 = a0
	d4_75 = 3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000106A:
	branch Mem68[a0_721:byte] != 0x20 l00001072
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001070:
	d4_75 = DPB(d4_75, (word16) d4_75 + 0x0001, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001072:
	a0_74 = a0_721 + 1
	a0_721 = a0_74
	branch Mem68[a0_721:byte] != 0x00 l0000106A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001060:
	d4_75 = 2
	d2_102 = 8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001076:
	word32 d0_100 = d4_75 << 0x00000002
	word32 d0_107 = d0_100 + d2_102
	word32 d1_111 = 0x00010001
	d0_112 = AllocMem(d0_107 + 0x00000011, 0x00010001)
	branch d0_112 == 0x00000000 l0000123E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000123E:
	CloseLibrary(Mem68[0x000013D0:word32])
	Alert(0x00010000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000125C:
	branch Mem153[d0_37 + 172:word32] != 0x00000000 l00001268
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001262:
	fn00001214(d0_37)
	fn0000126C(d0_112)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001268:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001096:
	word32 a6_235
	word32 a0_436
	word32 dwLoc0C_581
	Mem169[d0_112:word32] = d0_107 + 0x00000011
	Mem173[d0_112 + 12:word32] = d4_75 - 0x00000001
	Mem177[d0_112 + 8:word32] = d0_112 + 16 + d0_100
	Mem179[0x00000000:word32] = 0x00000000
	word32 d0_180 = Mem179[d0_37 + 172:word32]
	branch d0_180 == 0x00000000 l00001190
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001190:
	fn00001214(d0_37)
	Mem187[0x000013D4:word32] = d0_180
	Mem189[0x000013D8:word32] = d0_180
	Mem194[0x00000000:word32] = 0x00000000
	dwLoc0C_581 = d0_180
	a2_196 = d0_180
	word32 d0_197 = Mem194[d0_180 + 36:word32]
	branch d0_197 == 0x00000000 l000011B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000011AE:
	Enable()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000011B6:
	Supervisor(d0_112)
	Mem209[d0_112 + 4:word32] = d0_197
	d1_111 = 0x000012C8
	d2_102 = 0x000003ED
	branch d0_197 != 0x00000000 l000011D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000011D2:
	Mem214[0x000013DC:word32] = d0_197
	Mem216[0x000013E0:word32] = d0_197
	Mem218[0x000013E4:word32] = d0_197
	Mem221[d0_37 + 156:word32] = d0_197
	Mem223[d0_37 + 160:word32] = d0_197
	word32 d0_227 = Mem223[(d0_197 << 0x00000002) + 8:word32]
	branch d0_227 == 0x00000000 l000011F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000011F0:
	Mem231[d0_37 + 164:word32] = d0_227
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000011F4:
	a6_235 = Mem234[0x000013CC:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000011CC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000011CE_thunk_fn0000127C:
	fn0000127C(20)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000010B6:
	word32 d0_252 = Mem179[(d0_180 << 0x00000002) + 16:word32]
	a1_255 = Mem179[d0_112 + 8:word32]
	word32 a0_260 = (d0_252 << 0x00000002) + 1
	word32 d0_261 = (int32) Mem179[d0_252 << 0x00000002:byte]
	Mem262[a0_260 + d0_261:byte] = 0x00
	Mem264[d0_112 + 16:word32] = a0_260
	word32 a6_265 = d0_112 + 20
	word32 d3_266 = 1
	word32 a0_271 = a0 + d2_102
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000010DA:
	a0_271 = a0_271 - 1
	branch Mem264[a0_271:byte] >u 0x20 l000010E2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000010DE_1:
	d2_102 = d2_102 - 0x00000001
	branch d2_102 != 0xFFFFFFFF l000010DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000010E2:
	Mem281[a0_271 + 1:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000010E6:
	byte v37_288 = Mem287[a2_196:byte]
	a2_196 = a2_196 + 1
	d1_111 = DPB(d1_111, v37_288, 0)
	branch v37_288 == 0x00 l00001148
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000010EA:
	branch v37_288 == 0x20 l000010E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000010F0:
	branch v37_288 == 0x09 l000010E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000010F6:
	branch d3_266 - Mem287[d0_112 + 12:word32] == 0x00000000 l00001148
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000010FC:
	Mem308[a6_265:word32] = a1_255
	a6_265 = a6_265 + 4
	d3_266 = DPB(d3_266, (word16) d3_266 + 0x0001, 0)
	branch v37_288 == 0x22 l0000111A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000111A:
	byte v64_318 = Mem317[a2_196:byte]
	a2_196 = a2_196 + 1
	d1_111 = DPB(d1_111, v64_318, 0)
	branch v64_318 == 0x00 l00001148
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000111E:
	branch v64_318 == 0x22 l00001116
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001124:
	branch v64_318 != 0x2A l00001144
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000112A:
	byte v67_330 = Mem317[a2_196:byte]
	a2_196 = a2_196 + 1
	d1_111 = DPB(d1_111, v67_330, 0)
	d2_102 = DPB(d2_102, v67_330 & 0xDF, 0)
	branch (v67_330 & 0xDF) != 0x4E l0000113C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000113C:
	branch (v67_330 & 0xDF) != 0x45 l00001144
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001142:
	d1_111 = 27
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001138:
	d1_111 = 10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001144:
	Mem352[a1_255:byte] = (byte) d1_111
	a1_255 = a1_255 + 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001106:
	Mem356[a1_255:byte] = v37_288
	a1_255 = a1_255 + 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001108:
	byte v45_361 = Mem360[a2_196:byte]
	a2_196 = a2_196 + 1
	d1_111 = DPB(d1_111, v45_361, 0)
	branch v45_361 == 0x00 l00001148
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001148:
	Mem369[a1_255:byte] = 0x00
	Mem374[a6_265:word32] = 0x00000000
	execPrivate4()
	Mem405[0x000013DC:word32] = d0_261
	execPrivate5()
	Mem407[0x000013E0:word32] = d0_261
	a6_235 = Mem407[0x000013CC:word32]
	dwLoc0C_581 = d0_112 + 16
	dwLoc10 = d3_266
	branch Mem407[a6_235 + 20:word16] <u 0x0024 l0000117A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001172:
	word32 v81_417 = Mem407[d0_37 + 224:word32]
	Mem418[0x000013E4:word32] = v81_417
	branch v81_417 != 0x00000000 l0000117E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000117A:
	Mem424[0x000013E4:word32] = d0_261
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000117E:
	branch Mem428[d0_37 + 8:byte] != 0x0D l000011F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000011F8:
	a0_436 = Mem434[d0_37 + 58:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001186:
	word32 a0_439 = Mem428[d0_37 + 176:word32]
	a0_436 = a0_439 + 4 - Mem428[a0_439:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001202:
	Mem450[0x000013F0:word32] = a0_436
	Mem458[0x000013F4:word32] = fp - 16
	fn00001354(d1_111, d2_102, a0_436, a1_255, a2_196, d0_37, 0x000093BE, d0_112, a6_235, dwLoc10, dwLoc0C_581)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001212_thunk_fn0000127C:
	fn0000127C(0)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00001000_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000110C:
	branch v45_361 == 0x20 l00001116
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001116:
	Mem530[a1_255:byte] = 0x00
	a1_255 = a1_255 + 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001112:
	Mem537[a1_255:byte] = v45_361
	a1_255 = a1_255 + 1
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00001214(word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: a7
fn00001214_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001214:
	WaitPort(a3 + 92)
	GetMsg(a3 + 92)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00001214_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000126C(word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31]
// LiveOut:
// Trashed: a1
// Preserved: a7
fn0000126C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000126C:
	Forbid()
	ReplyMsg(a2)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000126C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00001278(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a1 a2 a4 a5 a6 a7 d0 d1 d2
// Preserved:
fn00001278_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001278:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001278_thunk_fn0000127C:
	fn0000127C(dwArg04)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00001278_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000127C(word32 d2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d2:[0..31]
// LiveOut:
// Trashed: CVZN a1 a2 a4 a5 a6 a7 d0 d1
// Preserved:
fn0000127C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000127C:
	word32 a7_4 = Mem0[0x000013C8:word32]
	word32 v8_9 = Mem0[a7_4 - 4:word32]
	word32 v6_6 = Mem0[a7_4 - 8:word32]
	branch Mem0[v8_9 + 4:word32] == 0x00000000 l0000129E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001296:
	execPrivate1()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000129E:
	CloseLibrary(Mem0[0x000013D0:word32])
	branch v6_6 == 0x00000000 l000012B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000012AE:
	fn0000126C(v6_6)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000012B0:
	FreeMem(v8_9, Mem0[v8_9:word32])
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000127C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000012D0(word32 d1, word32 d2, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] d1:[0..31] d2:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7 d2
fn000012D0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000012D0:
	branch 0x00001404 == 0x00000000 l00001308
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000012E2:
	word32 d2_16 = 1
	branch Mem11[0x00001408:word32] == 0x00000000 l000012F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000012EA:
	d2_16 = d2_16 + 0x00000001
	branch Mem11[0x00001404 + (d2_16 << 0x00000002):word32] != 0x00000000 l000012EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000012F6:
	word32 d2_33 = d2_16 - 0x00000001
	branch d2_33 == 0x00000000 l00001308
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000012FA:
	word32 d0_38 = d2_33 << 0x00000002
	word32 a2_42 = Mem11[0x00001404 + d0_38:word32]
	call a2_42 (retsize: 4;)
		uses: a1:a1,a2:a2_42,a3:0x00001404,a4:a4,a5:a5,a6:a6,a7:fp - 12,d0:d0_38,d1:d1,d2:d2_36,Stack +0000:dwLoc10,Stack +0004:d2,Stack +0008:a2,Stack +000C:a3,Stack +0014:dwArg04
	d2_33 = d2_33 - 0x00000001
	branch d2_33 != 0x00000000 l000012FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001308:
	fn00001278(dwArg04)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000012D0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000131C(word32 d1, word32 d2, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] d1:[0..31] d2:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a1 a4 a5 a6 d0 d1
// Preserved: X a2 a3 a7
fn0000131C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000131C:
	branch Mem8[0x000013F8:word32] != 0x00000000 l0000134E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001328:
	word32 a3_13 = Mem8[0x0000140C:word32]
	Mem16[0x000013F8:word32] = 1
	word32 d0_17 = a3_13
	branch a3_13 == 0x00000000 l00001346
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000133A:
	a2 = Mem16[a3_13 + 4:word32]
	call a2 (retsize: 4;)
		uses: a1:a1,a2:a2_22,a3:a3_20,a4:a4,a5:a5,a6:a6,a7:fp - 8,d0:d0_24,d1:d1,d2:d2,Stack +0000:dwLoc0C,Stack +0004:a2,Stack +0008:a3,Stack +0010:dwArg04
	a3_13 = Mem16[a3_13:word32]
	d0_17 = a3_13
	branch a3_13 != 0x00000000 l0000133A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001346:
	fn000012D0(d1, d2, a1, a2, a3_13, a4, a5, a6, dwArg04)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000134E:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000131C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00001354(word32 d1, word32 d2, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] d1:[0..31] d2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7
fn00001354_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001354:
	word32 a3_17 = 0x00001400
	word32 d0_10 = 0x000013FC
	branch 0x000013FC == 0x00000000 l00001372
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001366:
	branch Mem8[0x00001400:word32] == 0x00000000 l00001372
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000136A:
	word32 v11_19 = Mem8[a3_17:word32]
	a3_17 = a3_17 + 4
	call v11_19 (retsize: 4;)
		uses: a0:a0_87,a1:a1,a2:v11_19,a3:a3_20,a4:a4,a5:a5,a6:a6,a7:fp - 8,d0:d0_23,d1:d1,d2:d2,Stack +0000:dwLoc0C,Stack +0004:a2,Stack +0008:a3,Stack +0010:dwArg04,Stack +0014:dwArg08,Stack +FFFFFFF8:dwLoc14,Stack +FFFFFFFC:dwLoc10
		defs: a0:a0_88,d0:d0_24
	a2 = v11_19
	branch Mem8[a3_17:word32] != 0x00000000 l0000136A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001372:
	word32 a1_42
	fn0000131C(d1, d2, a1_42, a2, a3_17, a4, a5, a6, fn00001390(out a1_42))
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00001354_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00001390(ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a1 d0
// Trashed: CVZNX a0 a1 d0
// Preserved: a2 a7
fn00001390_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001390:
	word32 a1_12
	word32 d0_13 = fn000013AC(0x000013A4, out a1_12)
	a1Out = a1_12
	return d0_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00001390_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn000013AC(word32 dwArg04, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut: a1 d0
// Trashed: CVZNX a0 a1 d0
// Preserved: a7
fn000013AC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000013AC:
	word32 a1_4 = dwArg04
	word32 d0_15 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000013B6:
	a1_4 = a1_4 + 1
	branch Mem0[a1_4:byte] != 0x00 l000013B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000013B4:
	d0_15 = d0_15 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000013BE:
	a1Out = a1_4
	return d0_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000013AC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



