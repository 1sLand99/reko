void fn00001000(word32 d0, word32 a0)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] d0:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5
// Preserved: a7 d7
fn00001000_entry:
l00001000:
l0000100A:
	a6_9 = Mem0[0x00000004<p32>:word32]
	d2_108 = d0
	a2_305 = a0
	branch Mem0[a6_9 + 20<i32>:word16] >=u 0x24<16> l00001036
l00001020:
	a0_13 = 0x00002B88<p32>
	d0_16 = 0xC<32>
l00001030:
	Mem19[a0_13:word32] = 0<32>
	a0_13 = a0_13 + 4<i32>
	d0_16 = d0_16 - 1<32>
	branch d0_16 != 0<32> l00001030
l00001036:
	Mem29[0x00002B88<p32>:word32] = fp
	Mem32[0x00002B8C<p32>:word32] = a6_9
	d0_34 = FindTask(0<32>)
	d0_38 = OpenLibrary(0x000012BC<p32>, 0<i32>)
	branch d0_38 == 0<32> l00001226
l00001226:
	Alert(0x38007<32>)
l00001056:
	Mem67[0x00002B90<p32>:word32] = d0_38
	branch Mem67[d0_34 + 172<i32>:word32] != 0<32> l00001066
l00001066:
	a0_75 = a0
	d4_103 = 3<i32>
l0000106A:
	branch Mem67[a0_729:byte] != 0x20<8> l00001072
l00001070:
	d4_103 = SEQ(SLICE(d4_103, word16, 16), SLICE(d4_103, word16, 0) + 1<16>)
l00001072:
	a0_75 = a0_729 + 1<i32>
	a0_729 = a0_75
	branch Mem67[a0_729:byte] != 0<8> l0000106A
l00001060:
	d4_103 = 2<i32>
	d2_108 = 8<i32>
l00001076:
	d0_106 = d4_103 << 2<32>
	d0_113 = d0_106 + d2_108
	d1_117 = 0x10001<32>
	d0_118 = AllocMem(d0_113 + 0x11<32>, 0x10001<32>)
	branch d0_118 == 0<32> l0000123E
l0000123E:
	CloseLibrary(Mem67[0x00002B90<p32>:word32])
	Alert(0x10000<32>)
l0000125C:
	branch Mem163[d0_34 + 172<i32>:word32] != 0<32> l00001268
l00001262:
	fn0000126C(fn00001214(d0_34))
l00001268:
	return
l00001096:
	Mem180[d0_118:word32] = d0_113 + 0x11<32>
	Mem183[d0_118 + 12<i32>:word32] = d4_103 - 1<32>
	Mem186[d0_118 + 8<i32>:word32] = d0_118 + 16<i32> + d0_106
	Mem188[0<32>:word32] = 0<32>
	d0_189 = Mem188[d0_34 + 172<i32>:word32]
	branch d0_189 == 0<32> l00001190
l00001190:
	d0_195 = fn00001214(d0_34)
	Mem197[0x00002B94<p32>:word32] = d0_195
	Mem198[0x00002B98<p32>:word32] = d0_195
	Mem202[0<32>:word32] = 0<32>
	dwLoc0C_588 = d0_195
	branch Mem202[d0_195 + 36<i32>:word32] == 0<32> l000011B6
l000011AE:
	Enable()
l000011B6:
	d0_220 = Supervisor(d0_118)
	Mem221[d0_118 + 4<i32>:word32] = d0_220
	d2_108 = 0x3ED<32>
	branch d0_220 != 0<32> l000011D2
l000011D2:
	Mem227[0x00002B9C<p32>:word32] = d0_220
	Mem228[0x00002BA0<p32>:word32] = d0_220
	Mem229[0x00002BA4<p32>:word32] = d0_220
	Mem231[d0_34 + 156<i32>:word32] = d0_220
	Mem232[d0_34 + 160<i32>:word32] = d0_220
	d0_236 = Mem232[(d0_220 << 2<32>) + 8<i32>:word32]
	branch d0_236 == 0<32> l000011F4
l000011F0:
	Mem241[d0_34 + 164<i32>:word32] = d0_236
l000011F4:
l000011CC:
l000011CE_thunk_fn0000127C:
	fn0000127C()
	return
l000010B6:
	d0_266 = Mem188[(d0_189 << 2<32>) + 16<i32>:word32]
	a1_269 = Mem188[d0_118 + 8<i32>:word32]
	a0_274 = (d0_266 << 2<32>) + 1<i32>
	Mem277[a0_274 + CONVERT(Mem188[d0_266 << 2<32>:byte], byte, uint32):byte] = 0<8>
	Mem278[d0_118 + 16<i32>:word32] = a0_274
	a6_279 = d0_118 + 20<i32>
	d3_280 = 1<i32>
	a0_287 = a0 + d2_108
l000010DA:
	a0_287 = a0_287 - 1<i32>
	branch Mem278[a0_287:byte] >u 0x20<8> l000010E2
l000010DE_1:
	v30_295 = SLICE(d2_108, word16, 0)
	d2_108 = SEQ(SLICE(d2_108, word16, 16), v30_295 - 1<i16>)
	branch v30_295 != 0<16> l000010DA
l000010E2:
	Mem300[a0_287 + 1<i32>:byte] = 0<8>
l000010E6:
	v32_307 = Mem306[a2_305:byte]
	a2_305 = a2_305 + 1<i32>
	d1_117 = SEQ(SLICE(d1_117, word24, 8), v32_307)
	branch v32_307 == 0<8> l00001148
l000010EA:
	branch v32_307 == 0x20<8> l000010E6
l000010F0:
	branch v32_307 == 9<8> l000010E6
l000010F6:
	branch d3_280 == Mem306[d0_118 + 12<i32>:word32] l00001148
l000010FC:
	Mem329[a6_279:word32] = a1_269
	a6_279 = a6_279 + 4<i32>
	d3_280 = SEQ(SLICE(d3_280, word16, 16), SLICE(d3_280, word16, 0) + 1<16>)
	branch v32_307 == 0x22<8> l0000111A
l0000111A:
	v51_340 = Mem339[a2_305:byte]
	v52_343 = SLICE(d1_117, word24, 8)
	a2_305 = a2_305 + 1<i32>
	d1_117 = SEQ(v52_343, v51_340)
	branch v51_340 == 0<8> l00001148
l0000111E:
	branch v51_340 == 0x22<8> l00001116
l00001124:
	branch v51_340 != 0x2A<8> l00001144
l0000112A:
	v55_355 = Mem339[a2_305:byte]
	a2_305 = a2_305 + 1<i32>
	d1_117 = SEQ(v52_343, v55_355)
	d2_108 = SEQ(SLICE(d2_108, word24, 8), v55_355 & 0xDF<8>)
	branch (v55_355 & 0xDF<8>) != 0x4E<8> l0000113C
l0000113C:
	branch (v55_355 & 0xDF<8>) != 0x45<8> l00001144
l00001142:
	d1_117 = 27<i32>
l00001138:
	d1_117 = 10<i32>
l00001144:
	Mem384[a1_269:byte] = SLICE(d1_117, byte, 0)
	a1_269 = a1_269 + 1<i32>
l00001106:
	Mem390[a1_269:byte] = v32_307
	a1_269 = a1_269 + 1<i32>
l00001108:
	v41_397 = Mem396[a2_305:byte]
	a2_305 = a2_305 + 1<i32>
	d1_117 = SEQ(SLICE(d1_117, word24, 8), v41_397)
	branch v41_397 == 0<8> l00001148
l00001148:
	Mem408[a1_269:byte] = 0<8>
	Mem413[a6_279:word32] = 0<32>
	Mem438[0x00002B9C<p32>:word32] = execPrivate4()
	d0_439 = execPrivate5()
	Mem440[0x00002BA0<p32>:word32] = d0_439
	dwLoc0C_588 = d0_118 + 16<i32>
	dwLoc10 = d3_280
	branch Mem440[Mem440[0x00002B8C<p32>:word32] + 20<i32>:word16] <u 0x24<16> l0000117A
l00001172:
	v65_450 = Mem440[d0_34 + 224<i32>:word32]
	Mem451[0x00002BA4<p32>:word32] = v65_450
	branch v65_450 != 0<32> l0000117E
l0000117A:
	Mem458[0x00002BA4<p32>:word32] = d0_439
l0000117E:
	branch Mem464[d0_34 + 8<i32>:byte] != 0xD<8> l000011F8
l000011F8:
	a0_472 = Mem470[d0_34 + 58<i32>:word32]
l00001186:
	a0_475 = Mem464[d0_34 + 176<i32>:word32]
	a0_472 = a0_475 + 4<i32> - Mem464[a0_475:word32]
l00001202:
	Mem487[0x00002BB0<p32>:word32] = a0_472
	Mem494[0x00002BB4<p32>:word32] = fp - 16<i32>
	fn00001354(d2_108, dwLoc10, dwLoc0C_588)
l00001212_thunk_fn0000127C:
	fn0000127C()
	return
fn00001000_exit:
l0000110C:
	branch v41_397 == 0x20<8> l00001116
l00001116:
	Mem538[a1_269:byte] = 0<8>
	a1_269 = a1_269 + 1<i32>
l00001112:
	Mem545[a1_269:byte] = v41_397
	a1_269 = a1_269 + 1<i32>


word32 fn00001214(word32 a3)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  a3:[0..31]
// LiveOut: d0
// Trashed: a0 d0
// Preserved: a7
fn00001214_entry:
l00001214:
	WaitPort(a3 + 92<i32>)
	return GetMsg(a3 + 92<i32>)
fn00001214_exit:


void fn0000126C(word32 a2)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  a2:[0..31]
// LiveOut:
// Trashed: a1 d0
// Preserved: a7
fn0000126C_entry:
l0000126C:
	Forbid()
	ReplyMsg(a2)
	return
fn0000126C_exit:


word32 fn00001278(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000012D0
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5
// Trashed: CVZN a1 a2 a4 a5 a6 d0 d1 d2
// Preserved: a7
fn00001278_entry:
l00001278:
l00001278_thunk_fn0000127C:
	return fn0000127C()
fn00001278_exit:


word32 fn0000127C()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
//      fn00001278
// MayUse: 
// LiveOut: a5
// Trashed: CVZN a1 a2 a4 a5 a6 a7 d0 d1
// Preserved:
fn0000127C_entry:
l0000127C:
	a7_6 = Mem0[0x00002B88<p32>:word32]
	v8_11 = Mem0[a7_6 - 4<i32>:word32]
	v6_8 = Mem0[a7_6 - 8<i32>:word32]
	branch Mem0[v8_11 + 4<i32>:word32] == 0<32> l0000129E
l00001296:
	execPrivate1()
l0000129E:
	CloseLibrary(Mem0[0x00002B90<p32>:word32])
	branch v6_8 == 0<32> l000012B0
l000012AE:
	fn0000126C(v6_8)
l000012B0:
	FreeMem(v8_11, Mem0[v8_11:word32])
	return v8_11
fn0000127C_exit:


word32 fn000012D0(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000131C
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5
// Trashed: CVZNX a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7 d2
fn000012D0_entry:
l000012D0:
	branch false l00001308
l000012E2:
	d2_18 = 1<i32>
	branch Mem11[0x00002CD4<p32>:word32] == 0<32> l000012F6
l000012EA:
	d2_18 = d2_18 + 1<32>
	branch Mem11[0x00002CD0<p32> + (d2_18 << 2<32>):word32] != 0<32> l000012EA
l000012F6:
	d2_35 = d2_18 - 1<32>
	branch d2_35 == 0<32> l00001308
l000012FA:
	call Mem11[0x00002CD0<p32> + (d2_35 << 2<32>):word32] (retsize: 4;)
		uses: d0:d2_38 << 2<32>,Mem:Mem11,Stack +0014:dwArg04
	d2_35 = d2_35 - 1<32>
	branch d2_35 != 0<32> l000012FA
l00001308:
	return fn00001278(dwArg04)
fn000012D0_exit:


word32 fn0000131C(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001354
//      fn000023C8
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5
// Trashed: CVZN a1 a4 a5 a6 d0 d1
// Preserved: X a2 a3 a7
fn0000131C_entry:
l0000131C:
	branch Mem8[0x00002BB8<p32>:word32] != 0<32> l0000134E
l00001328:
	a3_13 = Mem8[0x00002CE0<p32>:word32]
	Mem15[0x00002BB8<p32>:word32] = 1<i32>
	branch a3_13 == 0<32> l00001346
l0000133A:
	call Mem15[a3_13 + 4<i32>:word32] (retsize: 4;)
		uses: d0:a3_27,Mem:Mem15,Stack +0010:dwArg04
	a3_13 = Mem15[a3_13:word32]
	branch a3_13 != 0<32> l0000133A
l00001346:
	a5 = fn000012D0(dwArg04)
l0000134E:
	return a5
fn0000131C_exit:


void fn00001354(word32 d2, word32 dwArg04, word32 dwArg08)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  d2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7
fn00001354_entry:
l00001354:
	a3_19 = 0x00002CC8<p32>
	branch false l00001372
l00001366:
	branch Mem8[0x00002CC8<p32>:word32] == 0<32> l00001372
l0000136A:
	call Mem8[a3_19:word32] (retsize: 4;)
		uses: Mem:Mem8,Stack +0010:dwArg04,Stack +0014:dwArg08
	a3_19 = a3_19 + 4<i32>
	branch Mem8[a3_19:word32] != 0<32> l0000136A
l00001372:
	fn0000131C(fn00001390(d2))
	return
fn00001354_exit:


word32 fn00001390(word32 d2)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001354
// MayUse:  d2:[1..31]
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5
fn00001390_entry:
l00001390:
	v9_15 = SLICE(d2, word31, 1)
	d2_16 = SEQ(v9_15, true)
	v14_19 = SLICE(d2_16, byte, 0) + 0x8F<8>
	d0_28 = CONVERT(SLICE(d2_16, byte, 0) - v14_19, byte, uint32)
	d1_32 = CONVERT(v14_19, byte, uint32)
	d4_37 = __swap(d0_28) *u32 SLICE(d1_32, word16, 0)
	v32_48 = SLICE(d0_28, byte, 0) *u SLICE(d1_32, byte, 0)
	d2_50 = SEQ(SLICE(v9_15, word24, 7), v32_48)
	fn00002A88(d2_50, CONVERT(SLICE(fn00002AC8(d2_50, CONVERT(v14_19, byte, uint32), CONVERT(v32_48, byte, uint32)), byte, 0), byte, uint32), CONVERT(v32_48, byte, uint32))
	return fn0000143C(CONVERT(v32_48 << 5<8>, byte, uint32), 0x0000142C<p32>)
fn00001390_exit:


word32 fn0000143C(word32 d0, word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  d0:[0..31] Stack +0004:[0..31]
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn0000143C_entry:
l0000143C:
	return fn00001458(d0, Mem8[0x00002CE8<p32>:word32], dwArg04, fp + 8<i32>)
fn0000143C_exit:


word32 fn00001458(word32 d0, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000143C
// MayUse:  d0:[8..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4 d5 d6 d7
fn00001458_entry:
l00001458:
	d3_1494 = dwArg0C
	a5_1593 = dwArg04
	a4_1943 = dwArg08
	d6_1623 = 0<i32>
	branch Mem36[dwArg08:byte] == 0<8> l00001D9E
l00001474:
	branch Mem46[a4_1943:byte] != 0x25<8> l00001D78
l00001D78:
	a4_1943 = a4_1943 + 1<i32>
	d0 = fn00001DD8(CONVERT(CONVERT(Mem53[a4_1943:byte], byte, int16), int16, int32), a5_1593, out a0_3302, out a5_1593)
	branch d0 != 0xFFFFFFFF<32> l00001D96
l00001D96:
	d6_1623 = d6_1623 + 1<32>
l00001D92:
	d0_1970 = d6_1623
l0000147C:
	dwLoc30_2194 = 0<32>
	d5_267 = -1<i32>
	d4_392 = 105<i32>
	a3_1284 = fp + -36<i32>
	d7_1012 = 0<i32>
	dwLoc0A_2196 = 0<32>
	a2_139 = a4_1943 + 1<i32>
	d2_134 = 0<32>
l0000149A:
	d1_108 = 0<i32>
l0000149C:
	branch Mem107[0x00001DB0<p32> + d1_108:byte] != Mem107[a2_139:byte] l000014C0
l000014C0:
	d1_108 = d1_108 + 1<32>
	branch d1_108 <u 5<32> l0000149C
l000014AE:
	d1_127 = 1<i32> << d1_108
	d0 = d1_127
	d2_134 = d2_134 | d1_127
	a2_139 = a2_139 + 1<i32>
l000014CA:
	branch d1_108 <u 5<32> l0000149A
l000014D2:
	dwLoc28_2199 = d2_134
	branch Mem146[a2_139:byte] != 0x2A<8> l00001510
l00001510:
	a0_1460 = 0x0000275D<p32> + (SEQ(SLICE(d0, word24, 8), Mem146[a2_139:byte]) & 0xFF<32>)
	d0_161 = CONVERT(Mem146[a0_1460:byte], byte, uint32)
	d0_162 = d0_161 & 4<32>
	branch (d0_161 & 4<32>) == 0<32> l0000157C
l0000152C:
	d2_167 = 0<32>
l00001530:
	d1_181 = __swap(10<i32>) *u32 SLICE(d2_167, word16, 0)
	d0_190 = SLICE(d2_167, word16, 0) *u32 10<i32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_181, word16, 16), SLICE(d1_181, word16, 0) + SLICE(__swap(d2_167), word16, 0) *u 0xA<16>)), word16, 16), 0<16>)
	a2_139 = a2_139 + 1<i32>
	a0_1460 = 0x0000275D<p32> + (SEQ(SLICE(d0_190, word24, 8), Mem175[a2_139:byte]) & 0xFF<32>)
	d1_200 = CONVERT(CONVERT(Mem175[a2_139:byte], byte, int16), int16, int32)
	d0_214 = CONVERT(Mem175[a0_1460:byte], byte, uint32)
	d1_108 = d1_200 - 0x30<32>
	d2_167 = d1_200 - 0x30<32> + d0_190
	d0_162 = d0_214 & 4<32>
	branch (d0_214 & 4<32>) != 0<32> l00001530
l00001578:
	dwLoc30_2194 = d2_167
l000014DC:
	d0_162 = __align(d3_1494 + 3<32>, 4<i32>)
	a2_139 = a2_139 + 1<i32>
	d3_1494 = d0_162 + 4<32>
	a0_1460 = d0_162 + 4<32>
	v32_237 = Mem146[d0_162:word32]
	branch v32_237 >= 0<32> l00001508
l00001508:
	dwLoc30_2194 = v32_237
l000014F4:
	d0_162 = -v32_237
	dwLoc28_2199 = d2_134 | 4<32>
	dwLoc30_2194 = d0_162
l0000157C:
	branch Mem259[a2_139:byte] != 0x2E<8> l00001610
l00001584:
	a2_139 = a2_139 + 1<i32>
	branch Mem259[a2_139:byte] != 0x2A<8> l000015AA
l000015AA:
	a0_1460 = 0x0000275D<p32> + (SEQ(SLICE(d0_162, word24, 8), Mem259[a2_139:byte]) & 0xFF<32>)
	d5_267 = 0<i32>
	branch (CONVERT(Mem259[a0_1460:byte], byte, uint32) & 4<32>) == 0<32> l00001610
l000015C8:
	d1_294 = __swap(10<i32>) *u32 SLICE(d5_267, word16, 0)
	d0_303 = SLICE(d5_267, word16, 0) *u32 10<i32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_294, word16, 16), SLICE(d1_294, word16, 0) + SLICE(__swap(d5_267), word16, 0) *u 0xA<16>)), word16, 16), 0<16>)
	a2_139 = a2_139 + 1<i32>
	d1_313 = CONVERT(CONVERT(Mem288[a2_139:byte], byte, int16), int16, int32)
	a0_1460 = 0x0000275D<p32> + (SEQ(SLICE(d0_303, word24, 8), Mem288[a2_139:byte]) & 0xFF<32>)
	d1_108 = d1_313 - 0x30<32>
	d5_267 = d1_313 - 0x30<32> + d0_303
	branch (CONVERT(Mem288[a0_1460:byte], byte, uint32) & 4<32>) != 0<32> l000015C8
l0000158C:
	d0_338 = __align(d3_1494 + 3<32>, 4<i32>)
	a2_139 = a2_139 + 1<i32>
	d3_1494 = d0_338 + 4<32>
	a0_1460 = d0_338 + 4<32>
	v39_343 = Mem259[d0_338:word32]
	branch v39_343 < 0<32> l00001610
l000015A4:
	d5_267 = v39_343
l00001610:
	branch Mem356[a2_139:byte] == 0x68<8> l00001634
l00001616:
	branch Mem356[a2_139:byte] == 0x6C<8> l00001634
l0000161C:
	branch Mem356[a2_139:byte] == 0x4C<8> l00001634
l00001622:
	branch Mem356[a2_139:byte] == 0x6A<8> l00001634
l00001628:
	branch Mem356[a2_139:byte] == 0x7A<8> l00001634
l0000162E:
	branch Mem356[a2_139:byte] != 0x74<8> l0000163A
l00001634:
	a2_139 = a2_139 + 1<i32>
	d4_392 = CONVERT(CONVERT(Mem356[a2_139:byte], byte, int16), int16, int32)
l0000163A:
	branch d4_392 != 0x68<32> l0000164C
l00001642:
	branch Mem356[a2_139:byte] != 0x68<8> l0000164C
l00001648:
	d4_392 = 2<i32>
	a2_139 = a2_139 + 1<i32>
l0000164C:
	branch d4_392 != 0x6C<32> l0000165E
l00001654:
	branch Mem356[a2_139:byte] != 0x6C<8> l0000165E
l0000165A:
	d4_392 = 1<i32>
	a2_139 = a2_139 + 1<i32>
l0000165E:
	branch d4_392 != 0x6A<32> l00001668
l00001666:
	d4_392 = 1<i32>
l00001668:
	branch d4_392 != 0x7A<32> l00001672
l00001670:
	d4_392 = 108<i32>
l00001672:
	branch d4_392 != 0x74<32> l0000167C
l0000167A:
	d4_392 = 105<i32>
l0000167C:
	v89_454 = Mem356[a2_139:byte]
	a2_1910 = a2_139 + 1<i32>
	d1_1104 = SEQ(SLICE(d1_108, word24, 8), v89_454)
	branch v89_454 == 0x25<8> l00001B04
l00001B04:
	a3_1284 = 0x00001DAC<p32>
	dwLoc0A_2196 = 1<32>
	d5_1493 = 0<i32>
l00001688:
	branch v89_454 == 0x58<8> l000016D6
l0000168E:
	branch v89_454 == 0x63<8> l00001A84
l00001A84:
	branch d4_392 != 0x6C<32> l00001AA0
l00001AA0:
	d0_517 = __align(d3_1494 + 3<32>, 4<i32>)
	d3_1494 = d0_517 + 4<32>
	a0_1460 = d0_517 + 4<32>
l00001A8C:
	d0_544 = __align(d3_1494 + 3<32>, 4<i32>)
	d3_1494 = d0_544 + 4<32>
	a0_1460 = d0_544 + 4<32>
l00001AB2:
	dwLoc0A_2196 = 1<32>
	d5_1493 = 0<i32>
l00001696:
	branch v89_454 == 0x64<8> l000016D6
l0000169C:
	branch v89_454 == 0x69<8> l000016D6
l000016A2:
	branch v89_454 == 0x6E<8> l00001B16
l00001B16:
	branch d4_392 != 1<32> l00001B38
l00001B38:
	branch d4_392 != 0x6C<32> l00001B56
l00001B56:
	branch d4_392 != 0x68<32> l00001B74
l00001B74:
	branch d4_392 != 2<32> l00001B92
l00001B92:
	d0_586 = __align(d3_1494 + 3<32>, 4<i32>)
	a0_1460 = Mem567[d0_586:word32]
	Mem606[a0_1460:word32] = d6_1623
	d3_1494 = d0_586 + 4<32>
l00001B7C:
	d0_613 = __align(d3_1494 + 3<32>, 4<i32>)
	a0_1460 = Mem567[d0_613:word32]
	Mem620[a0_1460:byte] = SLICE(d6_1623, byte, 0)
	d3_1494 = d0_613 + 4<32>
l00001B5E:
	d0_627 = __align(d3_1494 + 3<32>, 4<i32>)
	a0_1460 = Mem567[d0_627:word32]
	Mem634[a0_1460:word16] = SLICE(d6_1623, word16, 0)
	d3_1494 = d0_627 + 4<32>
l00001B40:
	d0_641 = __align(d3_1494 + 3<32>, 4<i32>)
	a0_1460 = Mem567[d0_641:word32]
	Mem647[a0_1460:word32] = d6_1623
	d3_1494 = d0_641 + 4<32>
l00001B1E:
	d0_654 = __align(d3_1494 + 3<32>, 4<i32>)
	a0_1460 = Mem567[d0_654:word32]
	Mem660[a0_1460 + 4<i32>:word32] = d6_1623
	Mem661[a0_1460:word32] = 0<32>
	d3_1494 = d0_654 + 4<32>
l00001BA6:
	d5_1493 = 0<i32>
	dwLoc30_2194 = 0<32>
l000016AE:
	branch v89_454 <=u 0x70<8> l000016D6
l000016BC:
	branch v89_454 == 0x73<8> l00001AC0
l00001AC0:
	d0_692 = __align(d3_1494 + 3<32>, 4<i32>)
	a3_1284 = Mem567[d0_692:word32]
	d3_1494 = d0_692 + 4<32>
	a0_1460 = d0_692 + 4<32>
	a1_698 = a3_1284
	dwLoc0A_2196 = 0<32>
	branch d5_267 == 0<32> l00001AE2
l00001ADC:
	branch d5_267 <=u 0<32> l00001AFE
l00001AE2:
	branch Mem699[a3_1284:byte] == 0<8> l00001AFE
l00001AE6:
	d0_727 = 0<32>
l00001AEA:
	d0_727 = d0_727 + 1<32>
	a1_698 = a1_698 + 1<i32>
	branch d5_267 <=u 0<32> l00001AF6
l00001AF2:
	branch d5_267 <=u d0_727 l00001AFA
l00001AF6:
	branch Mem699[a1_698:byte] != 0<8> l00001AEA
l00001AFA:
	dwLoc0A_2196 = d0_727
l00001AFE:
	d5_1493 = 0<i32>
l000016C8:
	branch v89_454 == 0x75<8> l000016D6
l000016CE:
	branch v89_454 != 0x78<8> l00001BAE
l00001BAE:
	branch v89_454 != 0<8> l00001BB4
l00001BB2:
	a2_1910 = a2_1910 - 1<i32>
l00001BB4:
	a3_1284 = a4_1943
	dwLoc0A_2196 = a2_1910 - a4_1943
	d5_1493 = 0<i32>
	dwLoc30_2194 = 0<32>
l000016D6:
	branch v89_454 != 0x70<8> l000016E8
l000016DC:
	d4_392 = 108<i32>
	d1_1104 = 120<i32>
	dwLoc28_2199 = dwLoc28_2199 | 1<32>
l000016E8:
	branch SLICE(d1_1104, byte, 0) == 0x64<8> l000016F6
l000016EE:
	branch SLICE(d1_1104, byte, 0) != 0x69<8> l00001840
l00001840:
	branch d4_392 != 1<32> l00001864
l00001864:
	branch d4_392 != 0x6C<32> l00001886
l00001886:
	d0_837 = __align(d3_1494 + 3<32>, 4<i32>)
	v205_843 = Mem842[d0_837:word32]
	d3_1089 = d0_837 + 4<32>
	wLoc32_2241 = SLICE(v205_843, word16, 0) (alias)
	wLoc34_2263 = SLICE(v205_843, word16, 16) (alias)
	dwLoc38_2236 = 0<32>
l0000186C:
	d0_854 = __align(d3_1494 + 3<32>, 4<i32>)
	v197_859 = Mem842[d0_854:word32]
	d3_1089 = d0_854 + 4<32>
	wLoc32_2241 = SLICE(v197_859, word16, 0) (alias)
	wLoc34_2263 = SLICE(v197_859, word16, 16) (alias)
	dwLoc38_2236 = 0<32>
l00001848:
	d0_869 = __align(d3_1494 + 3<32>, 4<i32>)
	v188_874 = Mem842[d0_869 + 4<32>:word32]
	d3_1089 = d0_869 + 8<32>
	wLoc32_2241 = SLICE(v188_874, word16, 0) (alias)
	wLoc34_2263 = SLICE(v188_874, word16, 16) (alias)
	dwLoc38_2236 = Mem875[d0_869:word32]
l0000189E:
	d1_897 = SEQ(wLoc34_2263, wLoc32_2241) (alias)
	branch d4_392 != 0x68<32> l000018BA
l000018A6:
	d1_897 = CONVERT(wLoc32_2241, word16, uint32)
	dwLoc38_2236 = 0<32>
l000018BA:
	bLoc31_2248 = SLICE(d1_897, byte, 24) (alias)
	qwLoc38_3299 = SEQ(dwLoc38_2236, d1_897) (alias)
	branch d4_392 != 2<32> l000018D6
l000018C2:
	qwLoc38_3299 = CONVERT(CONVERT(bLoc31_2248, byte, uint32), uint32, uint64) (alias)
l000018D6:
	dwLoc38_2271 = SLICE(qwLoc38_3299, word32, 0) (alias)
	dwLoc34_2261 = SLICE(qwLoc38_3299, word32, 32) (alias)
	bLoc44_2258 = SLICE(d1_1104, byte, 0)
	branch (dwLoc28_2199 & 1<i32>) == 0<32> l00001974
l000018E6:
	branch SLICE(d1_1104, byte, 0) != 0x6F<8> l00001922
l000018EC:
	branch d5_267 != 0<32> l00001916
l000018F0:
	branch dwLoc38_2271 == 0<32> l00001922
l00001916:
	d7_1012 = 1<32>
l00001922:
	branch SLICE(d1_1104, byte, 0) == 0x78<8> l00001932
l00001928:
	bLoc44_2258 = SLICE(d1_1104, byte, 0)
	branch SLICE(d1_1104, byte, 0) != 0x58<8> l00001974
l00001932:
	bLoc44_2258 = SLICE(d1_1104, byte, 0)
	branch dwLoc38_2271 == 0<32> l00001974
l0000195C:
	Mem1065[fp + -6<i32> + d7_1012:byte] = 0x30<8>
	d7_1064 = d7_1012 + 1<32>
	Mem1070[fp + -6<i32> + d7_1064:byte] = SLICE(d1_1104, byte, 0)
	d7_1012 = d7_1064 + 1<32>
	bLoc44_2258 = SLICE(d1_1104, byte, 0)
l000016F6:
	branch d4_392 != 1<32> l0000171C
l0000171C:
	branch d4_392 != 0x6C<32> l00001748
l00001748:
	d0_1087 = __align(d3_1494 + 3<32>, 4<i32>)
	d0_1092 = Mem842[d0_1087:word32]
	d3_1089 = d0_1087 + 4<32>
	wLoc3A_2291 = SLICE(d0_1092, word16, 0) (alias)
	d0_1099 = d0_1092 >> 31<i32>
	dwLoc40_2290 = d0_1092 >> 31<i32>
	branch d4_392 != 0x68<32> l0000178E
l00001772:
	d0_1092 = CONVERT(wLoc3A_2291, word16, int32)
	dwLoc40_2290 = d0_1092 >> 31<i32>
	d1_1104 = SEQ(SLICE(d0_1092 >> 31<i32>, word16, 16), wLoc3A_2291)
	d0_1099 = d1_1104
l0000178E:
	bLoc39_2296 = SLICE(d0_1092, byte, 24) (alias)
	qwLoc40_3287 = SEQ(dwLoc40_2290, d0_1092) (alias)
	branch d4_392 != 2<32> l000017B4
l00001796:
	d1_1150 = CONVERT(CONVERT(bLoc39_2296, byte, int16), int16, int32)
	d1_1104 = SEQ(SLICE(d0_1099, word24, 8), bLoc39_2296)
	qwLoc40_3287 = SEQ(d1_1150 >> 31<i32>, d1_1150) (alias)
l00001724:
	d0_1170 = __align(d3_1494 + 3<32>, 4<i32>)
	d0_1174 = Mem842[d0_1170:word32]
	d3_1089 = d0_1170 + 4<32>
	qwLoc40_3287 = SEQ(d0_1174 >> 31<i32>, d0_1174) (alias)
l000016FE:
	d0_1191 = __align(d3_1494 + 3<32>, 4<i32>)
	d3_1089 = d0_1191 + 8<32>
	qwLoc40_3287 = Mem1197[d0_1191:word64] (alias)
l000017B4:
	dwLoc40_2316 = SLICE(qwLoc40_3287, word32, 0) (alias)
	dwLoc3C_2311 = SLICE(qwLoc40_3287, word32, 32) (alias)
	v123_1204 = SLICE(d1_1104, byte, 0)
	branch dwLoc40_2316 >= 0<32> l000017FE
l000017FE:
	branch (dwLoc28_2199 & 16<i32>) == 0<32> l00001818
l00001818:
	branch (dwLoc28_2199 & 8<i32>) == 0<32> l0000182C
l00001820:
	d7_1012 = 1<32>
l0000180A:
	d7_1012 = 1<32>
l0000182C:
	dwLoc34_2261 = dwLoc3C_2311
	dwLoc38_2271 = dwLoc40_2316
	bLoc44_2258 = v123_1204
l00001974:
	a3_1284 = fp + -14<i32>
	branch bLoc44_2258 == 0x78<8> l00001988
l00001982:
	branch bLoc44_2258 != 0x58<8> l00001992
l00001992:
	branch bLoc44_2258 != 0x6F<8> l000019A2
l000019A2:
	dwLoc40_2330 = 0xA<32>
l00001998:
	dwLoc40_2330 = 8<32>
l000019AA:
	dwLoc44_2333 = dwLoc40_2330
l00001988:
	dwLoc44_2333 = 0x10<32>
l000019B0:
	branch bLoc44_2258 == 0x58<8> l000019C2
l000019C2:
	a6_1324 = 0x00001DC8<p32>
l000019BC:
	a6_1324 = 0x00001DB8<p32>
l000019C6:
	d3_1387 = 0<32>
	d6_d7_3293 = SEQ(dwLoc38_2271, dwLoc34_2261) (alias)
l000019E8:
	a3_1284 = a3_1284 - 1<i32>
	Mem1442[a3_1284:byte] = Mem1418[a6_1324 + fn00002648(d6_d7_3293, SEQ(dwLoc44_2333 >> 31<i32>, dwLoc44_2333)):byte]
	d0_d1_3296 = fn000023F8(SLICE(d6_d7_3293, word32, 32), SLICE(d6_d7_3293, word32, 0), dwLoc44_2333 >> 31<i32>, dwLoc44_2333, out a0_1460)
	d3_1387 = d3_1387 + 1<32>
	d6_d7_3293 = d0_d1_3296 (alias)
	branch SLICE(d0_d1_3296, word32, 32) != 0<32> l000019E8
l00001A56:
	dwLoc0A_2196 = d3_1387
	d5_1493 = d5_267
	d3_1494 = d3_1089
	branch d5_267 != 0xFFFFFFFF<32> l00001A78
l00001A78:
	dwLoc28_2199 = dwLoc28_2199 & 0xFFFFFFFD<32>
l00001A72:
	d5_1493 = 0<i32>
l00001BC4:
	branch d5_1493 >u dwLoc0A_2196 l00001BD2
l00001BD2:
	dwLoc44_2419 = d5_1493
l00001BCA:
	dwLoc44_2419 = dwLoc0A_2196
l00001BD6:
	d0_1544 = dwLoc44_2419 + d7_1012
	branch d0_1544 <u dwLoc30_2194 l00001BFA
l00001BFA:
	dwLoc44_2462 = dwLoc30_2194 - d0_1544
l00001BF4:
	dwLoc44_2462 = 0<32>
l00001C0A:
	branch (dwLoc28_2199 & 2<i32>) == 0<32> l00001C4C
l00001C18:
	d2_1585 = 0<i32>
	branch d7_1012 == 0<32> l00001C4C
l00001C1E:
	branch fn00001DD8(CONVERT(CONVERT(Mem1594[fp + -6<i32> + d2_1585:byte], byte, int16), int16, int32), a5_1593, out a0_1460, out a5_1593) != 0xFFFFFFFF<32> l00001C44
l00001C44:
	d2_1585 = d2_1585 + 1<32>
	d6_1623 = d6_1623 + 1<32>
	branch d7_1012 >u d2_1585 l00001C1E
l00001C4C:
	branch (dwLoc28_2199 & 4<i32>) != 0<32> l00001C9E
l00001C54:
	d2_1639 = 0<i32>
	branch dwLoc44_2462 == 0<32> l00001C9E
l00001C5C:
l00001C64:
	branch (dwLoc28_2199 & 2<i32>) == 0<32> l00001C72
l00001C72:
	a0_1662 = SEQ(SLICE(a0_1460, word16, 16), 0x20<16>)
l00001C6C:
	a0_1662 = SEQ(SLICE(a0_1460, word16, 16), 0x30<16>)
l00001C76:
	branch fn00001DD8(a0_1662, a5_1593, out a0_1460, out a5_1593) != 0xFFFFFFFF<32> l00001C8E
l00001C8E:
	d2_1639 = d2_1639 + 1<32>
	d6_1623 = d6_1623 + 1<32>
	branch dwLoc44_2462 >u d2_1639 l00001C64
l00001C96:
l00001C9E:
	branch (dwLoc28_2199 & 2<i32>) != 0<32> l00001CDA
l00001CA6:
	d2_1712 = 0<i32>
	branch d7_1012 == 0<32> l00001CDA
l00001CAC:
	branch fn00001DD8(CONVERT(CONVERT(Mem1724[fp + -6<i32> + d2_1712:byte], byte, int16), int16, int32), a5_1593, out a0_3303, out a5_1593) != 0xFFFFFFFF<32> l00001CD2
l00001CD2:
	d2_1712 = d2_1712 + 1<32>
	d6_1623 = d6_1623 + 1<32>
	branch d7_1012 >u d2_1712 l00001CAC
l00001CDA:
	d2_1763 = dwLoc0A_2196
	branch d5_1493 <=u dwLoc0A_2196 l00001D08
l00001CE4:
	branch fn00001DD8(0x00000030<p32>, a5_1593, out a0_3304, out a5_1593) != 0xFFFFFFFF<32> l00001D00
l00001D00:
	d2_1763 = d2_1763 + 1<32>
	d6_1623 = d6_1623 + 1<32>
	branch d5_1493 >u d2_1763 l00001CE4
l00001D08:
	d2_1808 = 0<i32>
	branch dwLoc0A_2196 == 0<32> l00001D3E
l00001D10:
l00001D14:
	branch fn00001DD8(CONVERT(CONVERT(Mem1819[a3_1284 + d2_1808:byte], byte, int16), int16, int32), a5_1593, out a0_3305, out a5_1593) != 0xFFFFFFFF<32> l00001D36
l00001D36:
	d2_1808 = d2_1808 + 1<32>
	d6_1623 = d6_1623 + 1<32>
	branch dwLoc0A_2196 >u d2_1808 l00001D14
l00001D3E:
	d0 = dwLoc28_2199 & 4<i32>
	branch d0 == 0<32> l00001D74
l00001D46:
	d2_1864 = 0<i32>
	branch dwLoc44_2462 == 0<32> l00001D74
l00001D4E:
l00001D52:
	d0 = fn00001DD8(0x00000020<p32>, a5_1593, out a0_3306, out a5_1593)
	branch d0 != 0xFFFFFFFF<32> l00001D6C
l00001D6C:
	d2_1864 = d2_1864 + 1<32>
	d6_1623 = d6_1623 + 1<32>
	branch dwLoc44_2462 >u d2_1864 l00001D52
l00001D74:
	a4_1943 = a2_1910
l00001D98:
	branch Mem1945[a4_1943:byte] != 0<8> l00001474
l00001D9E:
	d0_1970 = d6_1623
l00001D68:
	d0_1970 = d6_1623
l00001D32:
	d0_1970 = d6_1623
l00001CFA:
	d0_1970 = d6_1623
l00001CCC:
	d0_1970 = d6_1623
l00001C88:
	d0_1970 = d6_1623
l00001C3E:
	d0_1970 = d6_1623
l00001DA0:
	return d0_1970
fn00001458_exit:
l000017DE:


word32 fn00001DD8(word32 dwArg04, word32 dwArg08, ptr32 & a0Out, ptr32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001458
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0 a5 d0
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a7 d2
fn00001DD8_entry:
l00001DD8:
	Mem17[dwArg08 + 24<i32>:word32] = Mem11[dwArg08 + 24<i32>:word32] | 2<i32>
	v13_19 = Mem17[dwArg08 + 20<i32>:word32] - 1<32>
	Mem20[dwArg08 + 20<i32>:word32] = v13_19
	branch v13_19 < 0<32> l00001E1C
l00001DF4:
	branch dwArg04 != 10<i32> l00001E06
l00001DFA:
	branch (Mem20[dwArg08 + 24<i32>:word32] & 0x80<32>) != 0<32> l00001E1C
l00001E1C:
	d1_53 = fn00001E34(dwArg04, dwArg08, out a0_109, out a5)
l00001E06:
	a0_109 = Mem20[dwArg08 + 4<i32>:word32]
	Mem64[dwArg08 + 4<i32>:word32] = a0_109 + 1<i32>
	Mem67[a0_109:byte] = SLICE(dwArg04, byte, 0)
	d1_53 = CONVERT(Mem67[a0_109:byte], byte, uint32)
l00001E2A:
	a0Out = a0_109
	a5Out = a5
	return d1_53
fn00001DD8_exit:


word32 fn00001E34(word32 dwArg04, word32 dwArg08, ptr32 & a0Out, ptr32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001DD8
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0 a5 d0
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a4 a6 a7 d2 d3 d4 d5 d6
fn00001E34_entry:
l00001E34:
	a5_137 = fn000023C8()
	branch dwArg08 != 0<32> l00001E50
l00001E50:
	branch (Mem29[dwArg08 + 24<i32>:word32] & 73<i32>) == 64<i32> l00001E62
l00001E62:
	branch Mem29[dwArg08 + 28<i32>:word32] != 0<32> l00001E80
l00001E68:
	branch (Mem29[dwArg08 + 24<i32>:word32] & 4<i32>) == 0<32> l00001E78
l00001E78:
	Mem65[dwArg08 + 28<i32>:word32] = 0x400<32>
l00001E70:
	Mem70[dwArg08 + 28<i32>:word32] = 1<i32>
l00001E80:
	branch Mem75[dwArg08 + 8<i32>:word32] != 0<32> l00001EC0
l00001EC0:
	branch Mem75[dwArg08:word32] == 0<32> l00001F1A
l00001F1A:
	d0_117 = 0<i32>
l00001EC4:
	branch (Mem75[dwArg08 + 24<i32>:word32] & 0x80<32>) == 0<32> l00001EF0
l00001ED0:
	branch dwArg04 != 10<i32> l00001EF0
l00001EF0:
	branch Mem75[dwArg08 + 4<i32>:word32] - Mem75[dwArg08 + 8<i32>:word32] == execPrivate3() l00001F1E
l00001F0E:
	Mem116[dwArg08 + 24<i32>:word32] = Mem75[dwArg08 + 24<i32>:word32] | 16<i32>
	a0 = dwArg08 + 24<i32>
	d0_117 = -1<i32>
l00001ED6:
	a0_122 = Mem75[dwArg08 + 4<i32>:word32]
	Mem125[dwArg08 + 4<i32>:word32] = a0_122 + 1<i32>
	Mem127[a0_122:byte] = SLICE(dwArg04, byte, 0)
	d0_117 = fn00001F48(dwArg08, out a0, out a5_137)
l00001E86:
	branch (Mem75[dwArg08 + 24<i32>:word32] & 0x80<32>) == 0<32> l00001E9A
l00001E9A:
	d4_153 = 1<i32>
l00001E96:
	d4_153 = 2<i32>
l00001E9C:
	d0_175 = fn00001FF4(d4_153 + Mem75[dwArg08 + 28<i32>:word32], out a0)
	branch d0_175 != 0<32> l00001EB6
l00001EB6:
	Mem190[dwArg08 + 8<i32>:word32] = d0_175 + 1<i32>
l00001F1E:
	Mem199[dwArg08 + 24<i32>:word32] = Mem197[dwArg08 + 24<i32>:word32] | 2<i32>
	a0 = Mem199[dwArg08 + 8<i32>:word32]
	Mem206[a0:byte] = SLICE(dwArg04, byte, 0)
	Mem209[dwArg08 + 4<i32>:word32] = Mem206[dwArg08 + 8<i32>:word32] + 1<i32>
	Mem213[dwArg08 + 20<i32>:word32] = Mem209[dwArg08 + 28<i32>:word32] - 1<32>
	d0_117 = 0<i32>
l00001EB0:
	d0_117 = -1<i32>
l00001E5C:
	d0_117 = -1<i32>
l00001E4A:
	d0_117 = -1<i32>
l00001F42:
	a0Out = a0
	a5Out = a5_137
	return d0_117
fn00001E34_exit:


word32 fn00001F48(word32 dwArg04, ptr32 & a0Out, ptr32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001E34
//      fn00002A44
// MayUse:  Stack +0004:[0..31]
// LiveOut: a0 a5 d0
// Trashed: CVZNX a0 a1 a4 a5 d0 d1
// Preserved: a2 a6 a7 d2 d3 d4
fn00001F48_entry:
l00001F48:
	a5_23 = fn000023C8()
	branch dwArg04 != 0<32> l00001F5E
l00001F5E:
	branch Mem17[dwArg04 + 28<i32>:word32] != 0<32> l00001F7C
l00001F64:
	branch (Mem17[dwArg04 + 24<i32>:word32] & 4<i32>) == 0<32> l00001F74
l00001F74:
	Mem43[dwArg04 + 28<i32>:word32] = 0x400<32>
l00001F6C:
	Mem48[dwArg04 + 28<i32>:word32] = 1<i32>
l00001F7C:
	branch Mem53[dwArg04 + 8<i32>:word32] != 0<32> l00001F86
l00001F86:
	branch (Mem53[dwArg04 + 24<i32>:word32] & 2<i32>) == 0<32> l00001FCC
l00001F8E:
	branch Mem53[dwArg04:word32] == 0<32> l00001FBC
l00001FBC:
	d0_105 = 0<i32>
l00001F92:
	branch Mem53[dwArg04 + 4<i32>:word32] - Mem53[dwArg04 + 8<i32>:word32] == execPrivate3() l00001FC0
l00001FC0:
	Mem85[dwArg04 + 4<i32>:word32] = Mem53[dwArg04 + 8<i32>:word32]
	Mem87[dwArg04 + 20<i32>:word32] = Mem85[dwArg04 + 28<i32>:word32]
l00001FCC:
	Mem96[dwArg04 + 24<i32>:word32] = Mem94[dwArg04 + 24<i32>:word32] & -4<i32>
	a0 = dwArg04 + 24<i32>
	d0_105 = 0<i32>
l00001FB0:
	Mem104[dwArg04 + 24<i32>:word32] = Mem53[dwArg04 + 24<i32>:word32] | 16<i32>
	a0 = dwArg04 + 24<i32>
	d0_105 = -1<i32>
l00001F82:
	d0_105 = 0<i32>
l00001F5A:
	d0_105 = -1<i32>
l00001FD6:
	a0Out = a0
	a5Out = a5_23
	return d0_105
fn00001F48_exit:


word32 fn00001FF4(word32 dwArg04, ptr32 & a0Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001E34
// MayUse:  Stack +0004:[0..31]
// LiveOut: a0 d0
// Trashed: CVZN a0 a1 d0 d1
// Preserved: X a7 d2
fn00001FF4_entry:
l00001FF4:
	branch dwArg04 != 0<32> l00002002
l00002002:
	branch Mem5[0x00002BC0<p32>:word32] != 0<32> l00002026
l0000200A:
	a0_15 = Mem5[0x00002BBC<p32>:word32]
	Mem21[0<32>:word32] = 0<32>
	Mem35[0x00002BC0<p32>:word32] = fn000022E8(dwLoc10, a0_15, a0_15, out a0)
l00002026:
	branch Mem40[0x00002BC0<p32>:word32] != 0<32> l00002032
l00002032:
	d0_59 = fn000021C4(Mem51[0x00002BC0<p32>:word32], dwArg04 + 4<i32>, out a0)
	branch d0_59 != 0<32> l00002050
l00002050:
	Mem74[d0_59:word32] = dwArg04
	a0 = d0_59 + 4<i32>
	d0_112 = d0_59 + 4<i32>
l0000204C:
	d0_112 = 0<i32>
l0000202E:
	d0_112 = 0<i32>
l00001FFE:
	d0_112 = 0<i32>
l00002058:
	a0Out = a0
	return d0_112
fn00001FF4_exit:


void fn00002060(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn00002060_entry:
l00002060:
	branch dwArg04 == 0<32> l0000208A
l0000206A:
	branch Mem0[0x00002BC0<p32>:word32] == 0<32> l0000208A
l00002072:
	fn00002128(Mem21[0x00002BC0<p32>:word32], dwArg04 - 4<i32>, Mem0[dwArg04 - 4<i32>:word32] + 4<i32>)
l0000208A:
	return
fn00002060_exit:


void fn00002128(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002060
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2
fn00002128_entry:
l00002128:
	branch Mem20[Mem20[0x00002B8C<p32>:word32] + 20<i32>:word16] <u 0x27<16> l00002158
l00002158:
	branch dwArg04 == 0<32> l000021BC
l0000215C:
	branch dwArg08 == 0<32> l000021BC
l00002160:
	a3_38 = dwArg08 + -12<i32>
	branch dwArg0C >=u Mem20[dwArg04 + 20<i32>:word32] l000021A2
l0000216C:
	a2_42 = dwArg04
l0000216E:
	a2_42 = Mem20[a2_42:word32]
	branch Mem20[a2_42:word32] == 0<32> l000021BC
l00002174:
	branch Mem20[a2_42 + 8<i32>:byte] == 0<8> l0000216E
l0000217A:
	branch dwArg08 <u Mem20[a2_42 + 20<i32>:word32] l0000216E
l00002180:
	branch dwArg08 >=u Mem20[a2_42 + 24<i32>:word32] l0000216E
l00002186:
	Deallocate(a2_42, dwArg08, dwArg0C)
	branch Mem20[a2_42 + 28<i32>:word32] != Mem20[dwArg04 + 16<i32>:word32] l000021BC
l000021A0:
	a3_38 = a2_42
l000021A2:
	Remove(a3_38)
	a3_78 = a3_38 - 4<i32>
	FreeMem(a3_78, Mem20[a3_78:word32])
l00002146:
	FreePooled(dwArg08, dwArg04)
l000021BC:
	return
fn00002128_exit:


word32 fn000021C4(word32 dwArg04, word32 dwArg08, ptr32 & a0Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001FF4
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0 d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4
fn000021C4_entry:
l000021C4:
	a0_117 = Mem26[0x00002B8C<p32>:word32]
	branch Mem26[a0_117 + 20<i32>:word16] <u 0x27<16> l000021F0
l000021F0:
	a3_124 = 0<32>
	branch dwArg04 == 0<32> l000022E0
l000021F8:
	branch dwArg08 == 0<32> l000022E0
l000021FE:
	branch dwArg08 >=u Mem26[dwArg04 + 20<i32>:word32] l000022B2
l000022B2:
	d0_52 = AllocMem(dwArg08 + 16<i32>, Mem26[dwArg04 + 12<i32>:word32])
	a3_124 = d0_52
	branch d0_52 == 0<32> l000022E0
l000022CC:
	Mem59[d0_52:word32] = dwArg08 + 16<i32>
	AddTail(dwArg04, d0_52 + 4<i32>)
	Mem66[d0_52 + 12<i32>:word32] = 0<32>
	a0_117 = dwArg04
	a3_124 = d0_52 + 16<i32>
l00002206:
	a5_170 = Mem26[dwArg04:word32]
l00002208:
	branch Mem26[a5_170:word32] == 0<32> l0000222A
l0000222A:
	d3_81 = Mem26[dwArg04 + 16<i32>:word32] + 40<i32>
	d0_86 = AllocMem(d3_81, Mem26[dwArg04 + 12<i32>:word32])
	a3_124 = d0_86
	branch d0_86 == 0<32> l000022E0
l00002248:
	Mem93[d0_86:word32] = d3_81
	Mem95[d0_86 + 12<i32>:byte] = 0xA<8>
	Mem98[d0_86 + 20<i32>:word32] = d0_86 + 40<i32>
	Mem99[d0_86 + 24<i32>:word32] = d0_86 + 40<i32>
	Mem101[Mem99[d0_86 + 20<i32>:word32]:word32] = 0<32>
	a2_102 = Mem101[d0_86 + 20<i32>:word32]
	Mem105[a2_102 + 4<i32>:word32] = Mem101[dwArg04 + 16<i32>:word32]
	Mem108[d0_86 + 32<i32>:word32] = Mem105[a2_102 + 4<i32>:word32]
	Mem111[d0_86 + 28<i32>:word32] = Mem108[d0_86 + 32<i32>:word32] + Mem108[d0_86 + 20<i32>:word32]
	AddHead(dwArg04, d0_86 + 4<i32>)
	a0_117 = d0_86 + 4<i32>
	a3_124 = Allocate(d0_86 + 4<i32>, dwArg08)
l0000220C:
	branch Mem26[a5_170 + 8<i32>:byte] == 0<8> l00002226
l00002212:
	d0_132 = Allocate(a5_170, dwArg08)
	a0_117 = a5_170
	a3_124 = d0_132
	branch d0_132 != 0<32> l00002296
l00002296:
	branch (Mem141[dwArg04 + 12<i32>:word32] & 0x10000<32>) == 0<32> l000022E0
l000022A2:
	a2_148 = a3_124
	d2_151 = dwArg08 + 7<32> >>u 3<32>
l000022A8:
	Mem154[a2_148:word32] = 0<32>
	a2_155 = a2_148 + 4<i32>
	Mem156[a2_155:word32] = 0<32>
	a2_148 = a2_155 + 4<i32>
	d2_151 = d2_151 - 1<32>
	branch d2_151 != 0<32> l000022A8
l000022B0:
l000022E0:
	d0_164 = a3_124
l00002226:
	a5_170 = Mem26[a5_170:word32]
l000021DE:
	a0_117 = dwArg04
	d0_164 = AllocPooled(dwArg08, dwArg04)
l000022E2:
	a0Out = a0_117
	return d0_164
fn000021C4_exit:


word32 fn000022E8(word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & a0Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001FF4
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: a0 d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a6 a7 d2 d3
fn000022E8_entry:
l000022E8:
	a0_17 = Mem14[0x00002B8C<p32>:word32]
	branch Mem14[a0_17 + 20<i32>:word16] <u 0x27<16> l00002316
l00002316:
	a1_21 = 0<32>
	branch dwArg08 <u dwArg0C l00002350
l0000231C:
	d0_30 = AllocMem(24<i32>, 0<i32>)
	a1_21 = d0_30
	branch d0_30 == 0<32> l00002350
l00002332:
	Mem38[d0_30:word32] = d0_30 + 4<i32>
	Mem39[d0_30 + 4<i32>:word32] = 0<32>
	Mem40[d0_30 + 8<i32>:word32] = d0_30
	Mem42[d0_30 + 12<i32>:word32] = dwArg04
	Mem45[d0_30 + 16<i32>:word32] = dwArg08 + 7<32> & -8<i32>
	Mem46[d0_30 + 20<i32>:word32] = dwArg0C
	a0_17 = d0_30 + 4<i32>
l00002350:
	d0_51 = a1_21
l00002302:
	d0_51 = CreatePrivatePool(dwArg04, dwArg08, dwArg0C)
l00002352:
	a0Out = a0_17
	return d0_51
fn000022E8_exit:


void fn00002358(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a6 a7 d2
fn00002358_entry:
l00002358:
	branch Mem11[Mem11[0x00002B8C<p32>:word32] + 20<i32>:word16] <u 0x27<16> l0000237C
l0000237C:
	branch dwArg04 == 0<32> l000023C0
l00002380:
	d0_23 = RemHead(dwArg04)
	a2_24 = d0_23
	branch d0_23 == 0<32> l000023B2
l00002392:
	a2_31 = a2_24 - 4<i32>
	FreeMem(a2_31, Mem11[a2_31:word32])
	d0_40 = RemHead(dwArg04)
	a2_24 = d0_40
	branch d0_40 != 0<32> l00002392
l000023B2:
	FreeMem(dwArg04, 24<i32>)
l0000236E:
	DeletePrivatePool(dwArg04)
l000023C0:
	return
fn00002358_exit:


word32 fn000023C8()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001E34
//      fn00001F48
// MayUse: 
// LiveOut: a5
// Trashed: CVZN a1 a4 a5 d0 d1
// Preserved: a6 a7
fn000023C8_entry:
l000023C8:
	branch (SetSignal(0<i32>, 0x1000<32>) & 0x1000<32>) == 0<32> l000023F2
l000023E6:
	a5 = fn0000131C(0x00000014<p32>)
l000023F2:
	return a5
fn000023C8_exit:


word64 fn000023F8(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & a0Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001458
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: a0 d0:d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
fn000023F8_entry:
l000023F8:
	d1_100 = dwArg08
	a0_20 = dwArg08
	d3_174 = dwArg10
	branch dwArg0C != 0<32> l0000244E
l0000244E:
	branch dwArg04 >=u dwArg0C l00002458
l00002458:
	d4_31 = 24<i32>
	d6_32 = __rol<word32,word32>(dwArg0C, 8<32>)
	branch SLICE(d6_32, byte, 0) != 0<8> l00002476
l00002462:
	d4_31 = 16<i32>
	d6_32 = __rol<word32,word32>(d6_32, 8<32>)
	branch SLICE(d6_32, byte, 0) != 0<8> l00002476
l0000246A:
	d4_31 = 8<i32>
	d6_32 = __rol<word32,word32>(d6_32, 8<32>)
	branch SLICE(d6_32, byte, 0) != 0<8> l00002476
l00002472:
	d4_31 = 0<i32>
	d6_32 = SEQ(SLICE(d6_32, word24, 8), SLICE(dwArg0C, byte, 0))
l00002476:
	d4_65 = SEQ(SLICE(d4_31, word24, 8), SLICE(d4_31, byte, 0) + Mem17[0x00002BC4<p32> + CONVERT(SLICE(d6_32, word16, 0) & 0xFF<16>, word16, int32):byte])
	d5_67 = 32<i32> - d4_65
	branch d5_67 != 0<32> l00002496
l00002496:
	d0_89 = fn000024FC(dwArg04 >>u d4_65, dwArg04 << d5_67 | dwArg08 >>u d4_65, dwArg0C << d5_67 | dwArg10 >>u d4_65, out d1_90, out d2_373)
	d3_76 = dwArg10 << d5_67
	d5_105 = __swap(d0_89)
	d6_107 = __swap(d3_76)
	d2_111 = __swap(d0_89 *u32 SLICE(d3_76, word16, 0))
	d3_106 = d3_76 *u32 SLICE(d5_105, word16, 0)
	d5_109 = d5_105 *u32 SLICE(d6_107, word16, 0)
	v38_v35_257 = CONVERT(SLICE(d2_111, word16, 0), word16, uint32) + SEQ(SLICE(d5_109, word16, 0), SLICE(d3_106, word16, 0))
	d4_108 = d0_89 *u32 SLICE(d6_107, word16, 0)
	v42_v40_258 = CONVERT(SLICE(v38_v35_257, word16, 0), word16, uint32) + SEQ(SLICE(v38_v35_257, word16, 16), SLICE(d4_108, word16, 0))
	d6_86 = dwArg08 << d5_67
	d2_128 = __swap(SEQ(SLICE(d2_111, word16, 16), SLICE(v42_v40_258, word16, 0)))
	a0_20 = d6_86
	d1_100 = d0_89
	v49_138 = d1_90 - ((__swap(SEQ(SLICE(d3_106, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d4_108, word16, 16), 0<16>))) + SEQ(SLICE(d5_109, word16, 16), SLICE(v42_v40_258, word16, 16)))
	branch v49_138 <u 0<32> l000024F2
l000024EC:
	branch v49_138 != 0<32> l000024F4
l000024EE:
	branch d6_86 >=u d2_128 l000024F4
l000024F2:
	d1_100 = d0_89 - 1<32>
l0000248A:
	branch dwArg0C <u dwArg04 l00002492
l0000248E:
	branch dwArg10 >u dwArg08 l00002452
l00002492:
l00002452:
l00002410:
	branch dwArg04 >=u dwArg10 l00002422
l00002422:
	branch dwArg10 != 0<32> l0000242E
l00002426:
	d3_174 = CONVERT(1<i32> /u SLICE(dwArg10, uint16, 0), uint16, int32)
l0000242E:
	d0_186 = fn000024FC(0<i32>, dwArg04, d3_174, out d1_187, out d2_188)
	d1_100 = fn000024FC(d1_187, dwArg08, d2_188, out d1_371, out d2_372)
	d0_210 = d0_186
l00002414:
	d1_100 = fn000024FC(dwArg04, dwArg08, dwArg10, out d1_369, out d2_370)
l000024F4:
	d0_210 = 0<i32>
l000024F6:
	a0Out = a0_20
	return SEQ(d0_210, d1_100)
fn000023F8_exit:


word32 fn000024FC(word32 d0, word32 d1, word32 d2, ptr32 & d1Out, ptr32 & d2Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000023F8
//      fn00002648
// MayUse:  d0:[0..31] d1:[0..31] d2:[0..31]
// LiveOut: d0 d1 d2
// Trashed: CVZNX d0 d1 d2
// Preserved: a0 a1 a7 d3 d4 d5 d6 d7
fn000024FC_entry:
l000024FC:
	d7_13 = d2
	branch d2 == 0<32> l00002516
l00002504:
	branch d0 != 0<32> l00002524
l00002524:
	d2_26 = __swap(d2)
	branch SLICE(d2_26, word16, 0) != 0<16> l0000254C
l0000254C:
	bLoc26_389 = 0<8>
	d0_48 = 0<i32>
	d5_d6_372 = SEQ(d0, d1) (alias)
	d5_d6_372 = SEQ(d0, d1) (alias)
	branch d2 < 0<32> l00002568
l0000255E:
	d5_d6_372 = d5_d6_372 * 2<64>
	d0_48 = SEQ(SLICE(d0_48, word16, 16), SLICE(d0_48, word16, 0) + 1<16>)
	d7_13 = d7_13 * 2<32>
	branch d7_13 > 0<32> l0000255E
l00002568:
	v41_68 = SLICE(d0_48, word16, 0)
	d5_d6_576 = d5_d6_372 (alias)
l0000256A:
	d5_77 = SLICE(d5_d6_576, word32, 32) (alias)
	d2_79 = __swap(d5_77)
	d3_80 = __swap(d7_13)
	d6_102 = SLICE(d5_d6_576, word32, 0) (alias)
	branch SLICE(d2_79 - d3_80, word16, 0) != 0<16> l0000257C
l0000257C:
	d1_112 = __swap(SEQ(SLICE(__swap(SEQ(d5_77 %u SLICE(d3_80, uint16, 0), d5_77 /u SLICE(d3_80, uint16, 0))), word16, 16), 0<16>))
l00002576:
	d1_112 = 0xFFFF<32>
l00002586:
	d6_106 = __swap(SEQ(SLICE(d6_102, word16, 16), 0<16>))
l0000258C:
	d4_121 = __swap(d5_77 - __swap(d7_13) *u32 SLICE(d1_112, word16, 0))
	wLoc22_469 = SLICE(dwLoc24, word16, 0) (alias)
	d2_114 = d1_112 *u32 SLICE(d7_13, word16, 0)
	d4_129 = SEQ(SLICE(d4_121, word16, 16), SLICE(d6_106, word16, 0))
	branch SLICE(d4_121, word16, 0) != 0<16> l000025AC
l000025A4:
	branch d2_114 <=u d4_129 l000025AC
l000025AC:
	d6_141 = __swap(d1_112)
	d3_148 = __swap(d6_141)
	d4_150 = __swap(d7_13)
	d6_154 = __swap(d6_141 *u32 SLICE(d7_13, word16, 0))
	d5_149 = d7_13 *u32 SLICE(d3_148, word16, 0)
	d3_152 = d3_148 *u32 SLICE(d4_150, word16, 0)
	v57_v55_373 = CONVERT(SLICE(d6_154, word16, 0), word16, uint32) + SEQ(SLICE(d3_152, word16, 0), SLICE(d5_149, word16, 0))
	d2_151 = d6_141 *u32 SLICE(d4_150, word16, 0)
	v61_v59_374 = CONVERT(SLICE(v57_v55_373, word16, 0), word16, uint32) + SEQ(SLICE(v57_v55_373, word16, 16), SLICE(d2_151, word16, 0))
	d5_d6_377 = d5_d6_576 - SEQ((__swap(SEQ(SLICE(d5_149, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d2_151, word16, 16), 0<16>))) + SEQ(SLICE(d3_152, word16, 16), SLICE(v61_v59_374, word16, 16)), __swap(SEQ(SLICE(d6_154, word16, 16), SLICE(v61_v59_374, word16, 0))))
	d6_186 = SLICE(d5_d6_377, word32, 0) (alias)
	d5_189 = SLICE(d5_d6_377, word32, 32) (alias)
	branch d5_189 >=u 0<32> l00002604
l000025EE:
	d5_d6_379 = CONVERT(d6_186, word32, uint64) + SEQ(d5_189, SLICE(__swap(d7_13), word16, 16), 0<16>)
	d1_112 = d1_112 - 1<32>
	d6_186 = SLICE(d5_d6_379, word32, 0) (alias)
	d5_189 = SLICE(d5_d6_379, word32, 32) + __swap(SEQ(SLICE(d7_13, word16, 16), 0<16>))
l00002604:
	branch bLoc26_389 != 0<8> l00002620
l00002620:
	d6_228 = __swap(SEQ(SLICE(d6_186, word16, 16), SLICE(d5_189, word16, 0)))
	d0 = SEQ(SLICE(dwLoc24, word16, 16), SLICE(d1_112, word16, 0))
	d5_229 = __swap(d5_189)
	v81_232 = SLICE(d7_13, word16, 16)
	branch v41_68 == 0<16> l0000263A
l00002630:
	d7_240 = SEQ(v81_232, v41_68 - 1<16>)
	d5_d6_579 = SEQ(d5_229, d6_228) (alias)
l00002632:
	d5_d6_579 = d5_d6_579 >>u 1<32>
	v85_251 = SLICE(d7_240, word16, 0)
	d6_228 = SLICE(d5_d6_579, word32, 0)
	d7_240 = SEQ(SLICE(d7_240, word16, 16), v85_251 - 1<i16>)
	branch v85_251 != 0<16> l00002632
l0000263A:
	d1 = d6_228
	d2 = d2_26
l0000260A:
	d5_278 = __swap(d5_189)
	d6_279 = __swap(d6_186)
	bLoc26_389 = true
	dwLoc24 = SEQ(SLICE(d1_112, word16, 0), wLoc22_469) (alias)
	d5_d6_576 = SEQ(SLICE(d5_278, word16, 16), SLICE(d6_279, word16, 0), SLICE(d6_279, word16, 16), 0<16>) (alias)
l000025A8:
	d1_112 = d1_112 - 1<32>
l0000252A:
	d0_293 = __swap(d0)
	d1_294 = __swap(d1)
	d0_297 = SEQ(SLICE(d0_293, word16, 16), SLICE(d1_294, word16, 0))
	d0_307 = SEQ(d0_297 %u SLICE(d2, uint16, 0), SLICE(__swap(d1_294), word16, 0))
	d2 = SEQ(SLICE(__swap(CONVERT(d0_297 /u SLICE(d2, uint16, 0), uint16, uint32)), word16, 16), d0_307 /u SLICE(d2, uint16, 0))
	d1 = __swap(SEQ(d0_307 %u SLICE(d2, uint16, 0), 0<16>))
	d0 = d2
l0000250A:
	branch d1 == 0<32> l00002642
l00002510:
	branch d2 >u d1 l00002642
l00002516:
	d0 = fn00002AFA(d1, d2, d2, out d1)
l00002642:
	d1Out = d1
	d2Out = d2
	return d0
fn000024FC_exit:


word32 fn00002648(word64 qwArg04, word64 qwArg0C)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001458
// MayUse:  Stack +0004:[0..63] Stack +000C:[0..63]
// LiveOut: d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6 d7
fn00002648_entry:
	dwArg08 = SLICE(qwArg04, word32, 32)
	dwArg04 = SLICE(qwArg04, word32, 0)
	dwArg10 = SLICE(qwArg0C, word32, 32)
	dwArg0C = SLICE(qwArg0C, word32, 0)
l00002648:
	d1_175 = dwArg08
	d3_206 = dwArg10
	branch dwArg0C != 0<32> l0000269A
l0000269A:
	branch dwArg04 <u dwArg0C l00002754
l000026A0:
	d4_34 = 24<i32>
	d6_35 = __rol<word32,word32>(dwArg0C, 8<32>)
	branch SLICE(d6_35, byte, 0) != 0<8> l000026BE
l000026AA:
	d4_34 = 16<i32>
	d6_35 = __rol<word32,word32>(d6_35, 8<32>)
	branch SLICE(d6_35, byte, 0) != 0<8> l000026BE
l000026B2:
	d4_34 = 8<i32>
	d6_35 = __rol<word32,word32>(d6_35, 8<32>)
	branch SLICE(d6_35, byte, 0) != 0<8> l000026BE
l000026BA:
	d4_34 = 0<i32>
	d6_35 = SEQ(SLICE(d6_35, word24, 8), SLICE(dwArg0C, byte, 0))
l000026BE:
	d4_68 = SEQ(SLICE(d4_34, word24, 8), SLICE(d4_34, byte, 0) + Mem20[0x00002BC4<p32> + CONVERT(SLICE(d6_35, word16, 0) & 0xFF<16>, word16, int32):byte])
	d5_70 = 32<i32> - d4_68
	branch d5_70 != 0<32> l000026E0
l000026E0:
	d0_92 = fn000024FC(dwArg04 >>u d4_68, dwArg04 << d5_70 | dwArg08 >>u d4_68, dwArg0C << d5_70 | dwArg10 >>u d4_68, out d1_93, out d2_94)
	d3_79 = dwArg10 << d5_70
	d7_108 = __swap(d0_92)
	d6_110 = __swap(d3_79)
	d2_114 = __swap(d0_92 *u32 SLICE(d3_79, word16, 0))
	d3_109 = d3_79 *u32 SLICE(d7_108, word16, 0)
	d7_112 = d7_108 *u32 SLICE(d6_110, word16, 0)
	v39_v37_283 = CONVERT(SLICE(d2_114, word16, 0), word16, uint32) + SEQ(SLICE(d7_112, word16, 0), SLICE(d3_109, word16, 0))
	d4_111 = d0_92 *u32 SLICE(d6_110, word16, 0)
	v43_v41_284 = CONVERT(SLICE(v39_v37_283, word16, 0), word16, uint32) + SEQ(SLICE(v39_v37_283, word16, 16), SLICE(d4_111, word16, 0))
	d2_131 = __swap(SEQ(SLICE(d2_114, word16, 16), SLICE(v43_v41_284, word16, 0)))
	d6_89 = dwArg08 << d5_70
	d3_139 = __swap(SEQ(SLICE(d3_109, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d4_111, word16, 16), 0<16>)) + SEQ(SLICE(d7_112, word16, 16), SLICE(v43_v41_284, word16, 16))
	v50_141 = d1_93 - d2_131
	branch v50_141 <u 0<32> l0000273C
l00002736:
	d2_d3_290 = SEQ(d2_131, d3_139) (alias)
	branch v50_141 != 0<32> l00002740
l00002738:
	d2_d3_290 = SEQ(d2_131, d3_139) (alias)
	branch d6_89 >=u d3_139 l00002740
l0000273C:
	d2_d3_290 = SEQ(d2_131, d3_139) - SEQ(d2_94, d3_79)
l00002740:
	d1_d6_293 = SEQ(d1_93, d6_89) - d2_d3_290
	d1_175 = SLICE(d1_d6_293, word32, 32) << 32<i32> - d5_70 | SLICE(d1_d6_293, word32, 0) >>u d5_70
l000026D2:
	branch dwArg0C <u dwArg04 l000026DA
l000026D6:
	branch dwArg10 >u dwArg08 l00002754
l000026DA:
	d1_175 = SLICE(qwArg04 - qwArg0C, word32, 0) (alias)
l00002660:
	branch dwArg04 >=u dwArg10 l00002672
l00002672:
	branch dwArg10 != 0<32> l0000267E
l00002676:
	d3_206 = CONVERT(1<i32> /u SLICE(dwArg10, uint16, 0), uint16, int32)
l0000267E:
	fn000024FC(0<i32>, dwArg04, d3_206, out d1_219, out d2_220)
	fn000024FC(d1_219, dwArg08, d2_220, out d1_175, out d2_411)
l00002664:
	fn000024FC(dwArg04, dwArg08, dwArg10, out d1_175, out d2_410)
l00002754:
	return d1_175
fn00002648_exit:


void fn00002A44(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 a4 a5 d0 d1
// Preserved: X a2 a7
fn00002A44_entry:
l00002A44:
	branch dwArg04 == 0<32> l00002A5C
l00002A5C:
	a2_12 = Mem5[0x00002CF0<p32>:word32]
	branch a2_12 == 0<32> l00002A82
l00002A66:
	branch (Mem20[a2_12 + 24<i32>:word32] & 2<i32>) == 0<32> l00002A78
l00002A6E:
	fn00001F48(a2_12, out a0_113, out a5_114)
l00002A78:
	a2_12 = Mem46[a2_12 + 12<i32>:word32]
	branch a2_12 != 0<32> l00002A66
l00002A50:
	fn00001F48(dwArg04, out a0_111, out a5_112)
l00002A82:
	return
fn00002A44_exit:


void fn00002A88(word32 d2, word32 dwArg04, word32 dwArg08)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  d2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: CVZNX d0 d1
// Preserved: a7
fn00002A88_entry:
l00002A88:
	branch dwArg08 < 0<32> l00002A9C
l00002A9C:
	d1_13 = -dwArg08
	branch dwArg04 < 0<32> l00002AB2
l00002AB2:
	fn00002AFA(-dwArg04, d1_13, d2, out d1_98)
	return
l00002AA2:
	fn00002AFA(dwArg04, d1_13, d2, out d1_99)
	return
l00002A92:
	branch dwArg04 < 0<32> l00002AA8
l00002AA8:
	fn00002AFA(-dwArg04, dwArg08, d2, out d1_96)
	return
l00002A96:
	fn00002AFA(dwArg04, dwArg08, d2, out d1_97)
	return
fn00002A88_exit:


word32 fn00002AC8(word32 d2, word32 dwArg04, word32 dwArg08)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  d2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: d0
// Trashed: CVZNX d0 d1
// Preserved: a7
fn00002AC8_entry:
l00002AC8:
	branch dwArg04 > 0<32> l00002AE8
l00002AE8:
	branch dwArg08 > 0<32> l00002AEA_thunk_fn00002AFA
l00002AEA_thunk_fn00002AFA:
	return fn00002AFA(dwArg04, dwArg08, d2, out d1_90)
l00002AEC:
	return -fn00002AFA(dwArg04, -dwArg08, d2, out d1_91)
l00002AD2:
	d0_36 = -dwArg04
	branch dwArg08 > 0<32> l00002AE0
l00002AE0:
	return -fn00002AFA(d0_36, dwArg08, d2, out d1_88)
l00002AD8:
	return fn00002AFA(d0_36, -dwArg08, d2, out d1_89)
fn00002AC8_exit:


word32 fn00002AFA(word32 d0, word32 d1, word32 d2, ptr32 & d1Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000024FC
//      fn00002A88
//      fn00002AC8
// MayUse:  d0:[0..31] d1:[0..31] d2:[0..31]
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3
fn00002AFA_entry:
l00002AFA:
	d1_22 = __swap(d1)
	v9_8 = SLICE(d1_22, word16, 0)
	v10_9 = SLICE(d2, word16, 16)
	d2_10 = SEQ(v10_9, v9_8)
	branch v9_8 != 0<16> l00002B20
l00002B20:
	d3_18 = 16<i32>
	branch SLICE(d1_22, word16, 0) >=u 0x80<16> l00002B2E
l00002B2A:
	d1_22 = __rol<word32,word32>(d1_22, 8<32>)
	d3_18 = 8<32>
l00002B2E:
	branch SLICE(d1_22, word16, 0) >=u 0x800<16> l00002B38
l00002B34:
	d1_22 = __rol<word32,word32>(d1_22, 4<32>)
	d3_18 = SEQ(SLICE(d3_18, word16, 16), SLICE(d3_18, word16, 0) - 4<16>)
l00002B38:
	branch SLICE(d1_22, word16, 0) >=u 0x2000<16> l00002B42
l00002B3E:
	d1_22 = __rol<word32,word32>(d1_22, 2<32>)
	d3_18 = SEQ(SLICE(d3_18, word16, 16), SLICE(d3_18, word16, 0) - 2<16>)
l00002B42:
	branch SLICE(d1_22, word16, 0) < 0<16> l00002B4A
l00002B46:
	d1_22 = __rol<word32,word32>(d1_22, 1<32>)
	d3_18 = SEQ(SLICE(d3_18, word16, 16), SLICE(d3_18, word16, 0) - 1<16>)
l00002B4A:
	d0_71 = d0 >>u d3_18
	d2_75 = SEQ(SLICE(__swap(SEQ(v10_9, SLICE(d0, word16, 0))), word16, 16), 0<16>) >>u d3_18
	v52_82 = SLICE(__swap(d3_18), word16, 16)
	v50_79 = d0_71 /u SLICE(d1_22, uint16, 0)
	d1_90 = __swap(d1_22)
	d3_102 = SEQ(v52_82, v50_79)
	d0_108 = SEQ(d0_71 %u SLICE(d1_22, uint16, 0), SLICE(d2_75, word16, 0)) - SEQ(SLICE(d2_75, word16, 16), v50_79) *u32 SLICE(d1_90, word16, 0)
	branch d0_108 >=u 0<32> l00002B6C
l00002B66:
	d3_102 = SEQ(v52_82, v50_79 - 1<16>)
	d0_108 = d0_108 + d1_90
l00002B6A:
	branch d0_108 >=u 0<32> l00002B6A
l00002B6C:
	d1Out = __swap(__rol<word32,word32>(d0_108, __swap(d3_102)))
	return CONVERT(SLICE(d3_102, word16, 0), word16, uint32)
l00002B02:
	d0_136 = __swap(d0)
	d1_137 = __swap(d1_22)
	v13_139 = SLICE(d0_136, word16, 0)
	d2_141 = SEQ(SLICE(__swap(d2_10), word16, 16), v13_139)
	branch v13_139 == 0<16> l00002B10
l00002B0C:
	v16_147 = d2_141 /u SLICE(d1_137, uint16, 0)
	d2_141 = SEQ(d2_141 %u SLICE(d1_137, uint16, 0), v16_147)
	d0_136 = SEQ(SLICE(d0_136, word16, 16), v16_147)
l00002B10:
	d0_156 = __swap(d0_136)
	d2_160 = SEQ(SLICE(d2_141, word16, 16), SLICE(d0_156, word16, 0))
	v33_163 = d2_160 /u SLICE(d1_137, uint16, 0)
	d1Out = SEQ(SLICE(d1_137, word16, 16), SLICE(__swap(SEQ(d2_160 %u SLICE(d1_137, uint16, 0), v33_163)), word16, 0))
	return SEQ(SLICE(d0_156, word16, 16), v33_163)
fn00002AFA_exit:


