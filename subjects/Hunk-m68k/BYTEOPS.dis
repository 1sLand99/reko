void fn00001000(word32 d0, word32 d7, word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0 d7 a0 a5
// LiveOut:
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: d7 a5 a7
fn00001000_entry:
// DataOut: d0 d7 a0 a5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00001000:
	word32 a7_1 = fp
// DataOut: d0 d7 a0 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l0000100A:
	word32 a6_171 = Mem0[0x00000004:word32]
	word32 d2_3 = d0
	word32 a2_5 = a0
	word32 a4_6 = 0x0000AB7E
	word16 v10_9 = Mem0[a6_171 + 20:word16] - 0x0024
	branch v10_9 >=u 0x0000 l00001036
// DataOut: d0 d2 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00001020:
	word32 a0_623 = 0x00002B88
	word32 d0_626 = 0x0000000C
// DataOut: d0 d2 d7 a0 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d0 a2:a0 a4:0000AB7E a6:<invalid>
// LocalsOut: fp(32)

l00001030:
	Mem630[a0_623:word32] = 0x00000000
	a0_623 = a0_623 + 0x00000004
	d0_626 = d0_626 - 0x00000001
	branch d0_626 != 0x00000000 l00001030
// DataOut: d0 d2 d7 a0 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d0 a2:a0 a4:0000AB7E a6:<invalid> a0:<invalid> d0:<invalid>
// LocalsOut: fp(32)

l00001036:
	Mem13[a4_6 + -32758:word32] = fp
	Mem15[a4_6 + -32754:word32] = a6_171
	call a6_171 + -294 (retsize: 4; depth: 4)
	word32 a3_143 = d0
	call a6_171 + -552 (retsize: 4; depth: 4)
	branch 0 == 0 l00001226
// DataOut: d2 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d0 a2:a0 a4:0000AB7E a6:<invalid> a0:<invalid> d0:<invalid>
// LocalsOut: fp(32)

l00001056:
	word32 d4_194
	word32 d2_195
	Mem190[a4_6 + -32750:word32] = 0
	d2_195 = d2_3
	branch Mem190[d0 + 172:word32] != 0x00000000 l00001066
// DataOut: d2 a2 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d0 a2:a0 a4:0000AB7E a6:<invalid> a1:000012BC a3:<invalid> d0:0 a0:<invalid>
// LocalsOut: fp(32)

l00001060:
	d4_194 = 2
	d2_195 = 8
// DataOut: d2 d4 a2 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d0 a2:a0 a4:0000AB7E a6:<invalid> a1:000012BC a3:<invalid> d0:<invalid> a0:<invalid>
// LocalsOut: fp(32)

l00001066:
	word32 a0_597 = a0
	d4_194 = 3
// DataOut: d2 d4 a0 a2 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid> a2:a0 a4:0000AB7E a6:<invalid> a1:000012BC a3:<invalid> d0:<invalid> d4:2 a0:<invalid>
// LocalsOut: fp(32)

l0000106A:
	branch Mem190[a0_635:byte] - 0x20 != 0x00 l00001072
// DataOut: d2 d4 a0 a2 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid> a2:a0 a4:0000AB7E a6:<invalid> a1:000012BC a3:<invalid> d0:<invalid> d4:<invalid> a0:<invalid>
// LocalsOut: fp(32)

l00001070:
	d4_194 = DPB(0x00000003, (word16) d4_194 + 0x0001, 0, 16)
// DataOut: d2 d4 a0 a2 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid> a2:a0 a4:0000AB7E a6:<invalid> a1:000012BC a3:<invalid> d0:<invalid> d4:<invalid> a0:<invalid>
// LocalsOut: fp(32)

l00001072:
	a0_597 = a0_635 + 0x00000001
	word32 a0_635 = a0_597
	branch Mem190[a0_635:byte] != 0x00 l0000106A
// DataOut: d2 d4 a0 a2 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid> a2:a0 a4:0000AB7E a6:<invalid> a1:000012BC a3:<invalid> d0:<invalid> d4:<invalid> a0:<invalid>
// LocalsOut: fp(32)

l00001076:
	call a6_171 + -198 (retsize: 4; depth: 4)
	branch (d4_194 << 0x00000002) + d2_195 == 0x00000011 l0000123E
	word32 d0_208 = d4_194 << 0x00000002
	word32 d5_209 = d0_208
	call a6_171 + -198 (retsize: 4; depth: 4)
	word32 d0_210 = d0_208 + d2_195
	branch d0_210 == 0x00000011 l0000123E
// DataOut: d0 d2 d3 d4 d5 a2 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid> a2:a0 a4:0000AB7E a6:<invalid> a1:000012BC a3:<invalid> d0:<invalid> d4:<invalid> a0:<invalid>
// LocalsOut: fp(32)

l0000123E:
	call a6_171 + -414 (retsize: 4; depth: 4)
	word32 a6_589 = Mem190[0x00000004:word32]
	call a6_589 + -108 (retsize: 4; depth: 16)
// DataOut: a3
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid> a2:a0 a4:0000AB7E a6:<invalid> a1:000012BC a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:0x00010001 a0:<invalid>

l00001096:
	word32 a6_270
	word32 a4_268
	word32 a3_264
	word32 a0_269
	Mem225[d0_210 + 0x00000011:word32] = d0_210 + 0x00000011
	word32 d4_226 = d4_194 - 0x00000001
	Mem228[d0_210 + 29:word32] = d4_226
	Mem232[d0_210 + 25:word32] = d0_210 + 33 + d0_208
	Mem234[0x00000000:word32] = 0x00000000
	word32 d0_235 = Mem234[d0 + 172:word32]
	branch d0_235 == 0x00000000 l00001190
	Mem243[d0_235:word32] = d0_210 + 0x00000011
	Mem247[d0_235 + 12:word32] = d4_226 - 0x00000001
	Mem251[d0_235 + 8:word32] = d0_235 + 16 + d0_208
	Mem253[0x00000000:word32] = 0x00000000
	word32 a5_241 = d0_235
	a7_1 = fp - 0x00000010
	word32 d0_254 = Mem253[d0 + 172:word32]
	a3_264 = a3_143
	a4_268 = a4_6
	branch d0_254 == 0x00000000 l00001190
// DataOut: d0 d2 d5 a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid> a2:a0 a4:0000AB7E a6:<invalid> a1:000012BC a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:0x00010001 a0:<invalid>
// LocalsOut: fp(32) Local -0004(32)

l000010B6:
	word32 d0_394 = Mem253[(d0_254 << 0x00000002) + 16:word32]
	byte v32_400 = Mem253[d0_394 << 0x00000002:byte]
	word32 a0_401 = (d0_394 << 0x00000002) + 0x00000001
	word32 d0_402 = (word32) v32_400
	Mem403[a0_401 + d0_402:byte] = 0x00
	Mem405[d0_235 + 16:word32] = a0_401
	word32 d0_409 = Mem405[(d0_402 << 0x00000002) + 16:word32]
	byte v60_416 = Mem405[d0_409 << 0x00000002:byte]
	word32 a1_412 = Mem405[d0_235 + 8:word32]
	word32 a0_417 = (d0_409 << 0x00000002) + 0x00000001
	word32 d0_418 = (word32) v60_416
	Mem419[a0_417 + d0_418:byte] = 0x00
	Mem421[d0_235 + 16:word32] = a0_417
	word32 a6_422 = d0_235 + 20
	word32 d3_423 = 1
	word32 a0_425 = a0 + d2_195
// DataOut: d0 d2 d3 d5 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:a0 a4:0000AB7E a6:<invalid> a1:000012BC a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:0x00010001 a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l000010DA:
	a0_425 = a0_425 - 0x00000001
	branch d2_195 != 0xFFFFFFFF l000010DA
// DataOut: d0 d2 d3 d5 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:a0 a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:1 d1:0x00010001 a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l000010E2:
	Mem431[a0_425 + 1:byte] = 0x00
	a2_444 = a2_5
// DataOut: d0 d3 d5 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:a0 a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:1 d1:0x00010001 a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l000010E6:
	word32 a2_444
	byte v37_445 = Mem431[a2_444:byte]
	a2_444 = a2_444 + 0x00000001
	word32 d1_447 = DPB(0x00010001, v37_445, 0, 8)
	branch v37_445 == 0x00 l00001148
// DataOut: d0 d1 d3 d5 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l000010EA:
	branch (byte) d1_447 - 0x20 == 0x00 l000010E6
// DataOut: d0 d1 d3 d5 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l000010F0:
	branch (byte) d1_447 - 0x09 == 0x00 l000010E6
// DataOut: d0 d1 d3 d5 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l000010F6:
	branch d3_423 - Mem431[d0_235 + 12:word32] == 0x00000000 l00001148
// DataOut: d0 d1 d3 d5 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l000010FC:
	word32 d1_506
	Mem498[a6_422:word32] = a1_412
	a6_422 = a6_422 + 0x00000004
	d3_423 = DPB(0x00000001, (word16) d3_423 + 0x0001, 0, 16)
	d1_506 = d1_447
	branch (byte) d1_447 - 0x22 == 0x00 l0000111A
// DataOut: d0 d1 d3 d5 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l00001106:
	Mem562[a1_412:byte] = (byte) d1_447
	a1_412 = a1_412 + 0x00000001
	d1_506 = d1_447
// DataOut: d0 d1 d3 d5 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l00001108:
	byte v45_568 = Mem562[a2_444:byte]
	a2_444 = a2_444 + 0x00000001
	d1_506 = DPB(d1_506, v45_568, 0, 8)
	branch v45_568 == 0x00 l00001148
// DataOut: d0 d1 d3 d5 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l0000110C:
	branch (byte) d1_506 - 0x20 == 0x00 l00001116
// DataOut: d0 d1 d3 d5 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l00001112:
	Mem577[a1_412:byte] = (byte) d1_506
	a1_412 = a1_412 + 0x00000001
// DataOut: d0 d1 d3 d5 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l00001116:
	Mem555[a1_412:byte] = 0x00
	a1_412 = a1_412 + 0x00000001
// DataOut: d0 d1 d3 d5 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l0000111A:
	byte v70_513 = Mem498[a2_444:byte]
	a2_444 = a2_444 + 0x00000001
	d1_506 = DPB(d1_506, v70_513, 0, 8)
	branch v70_513 == 0x00 l00001148
// DataOut: d0 d1 d3 d5 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l0000111E:
	branch (byte) d1_506 - 0x22 == 0x00 l00001116
// DataOut: d0 d1 d3 d5 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l00001124:
	branch (byte) d1_506 - 0x2A != 0x00 l00001144
// DataOut: d0 d1 d3 d5 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l0000112A:
	d1_506 = DPB(d1_506, Mem498[a2_444:byte], 0, 8)
	word32 d2_536 = DPB(0x00000007, (byte) d1_506, 0, 8)
	word32 d2_538 = DPB(d2_536, (byte) d2_536 & 0xDF, 0, 8)
	a2_444 = a2_444 + 0x00000001
	branch (byte) d2_538 - 0x4E != 0x00 l0000113C
// DataOut: d0 d1 d2 d3 d5 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l00001138:
	d1_506 = 10
// DataOut: d0 d1 d2 d3 d5 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l0000113C:
	branch (byte) d2_538 - 0x45 != 0x00 l00001144
// DataOut: d0 d1 d3 d5 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l00001142:
	d1_506 = 27
// DataOut: d0 d1 d3 d5 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l00001144:
	Mem529[a1_412:byte] = (byte) d1_506
	a1_412 = a1_412 + 0x00000001
// DataOut: d0 d1 d3 d5 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -0004(32)

l00001148:
	Mem453[a1_412:byte] = 0x00
	Mem454[a6_422:word32] = 0x00000000
	a7_1 = fp - 0x00000018
	word32 a6_461 = Mem454[a4_6 + -32750:word32]
	call a6_461 + -54 (retsize: 4; depth: 28)
	Mem463[a4_6 + -32738:word32] = d0_418
	call a6_461 + -60 (retsize: 4; depth: 28)
	Mem466[a4_6 + -32734:word32] = d0_418
	a6_270 = Mem466[a4_6 + -32754:word32]
	branch Mem466[a6_270 + 20:word16] - 0x0024 <u 0x0000 l0000117A
// DataOut: d0 d5 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l00001172:
	word32 v87_484 = Mem466[d0 + 224:word32]
	Mem485[a4_6 + -32730:word32] = v87_484
	branch v87_484 != 0x00000000 l0000117E
// DataOut: d0 d5 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l0000117A:
	Mem482[a4_6 + -32730:word32] = d0_418
// DataOut: d5 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l0000117E:
	a3_264 = a3_143
	a4_268 = a4_6
	branch Mem466[d0 + 8:byte] - 0x0D != 0x00 l000011F8
// DataOut: d5 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l00001186:
	word32 a0_474 = Mem466[d0 + 176:word32]
	word32 v90_475 = Mem466[a0_474:word32]
	d0_254 = v90_475
	a0_269 = a0_474 + 0x00000004 - v90_475
	a3_264 = a3_143
	a4_268 = a4_6
	a3_264 = a3_143
	a4_268 = a4_6
// DataOut: d0 d5 a0 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l00001190:
	fn00001214(a3_264)
	Mem340[a7_1:word32] = d0_254
	Mem342[a4_268 + -32746:word32] = d0_254
	Mem344[a4_268 + -32742:word32] = d0_254
	word32 a7_345 = a7_1 - 0x00000004
	Mem347[a7_345:word32] = d0_254
	Mem349[0x00000000:word32] = 0x00000000
	a7_1 = a7_345 - 0x00000004
	word32 a6_350 = Mem349[a4_268 + -32750:word32]
	word32 d0_352 = Mem349[d0_254 + 36:word32]
	branch d0_352 == 0x00000000 l000011B6
// DataOut: d0 d5 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000011AE:
	call a6_350 + -126 (retsize: 4; depth: 4)
// DataOut: d0 d5 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000011B6:
	call a6_350 + -30 (retsize: 4; depth: 4)
	Mem360[a5_241 + 4:word32] = d0_352
	branch d0_352 != 0x00000000 l000011D2
// DataOut: d0 d5 a3 a4 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000011CC:
// DataOut: d0 d2 d5 a3 a4 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:0x000003ED a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:000012C8 a5:<invalid> a0:000012C8 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000011CC_thunk_fn0000127C:
	word32 a6_387
	fn0000127C(20, out a6_387)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:20 a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:000012C8 a5:<invalid> a0:000012C8 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>

l000011D2:
	Mem365[a4_268 + -32738:word32] = d0_352
	Mem367[a4_268 + -32734:word32] = d0_352
	Mem369[a4_268 + -32730:word32] = d0_352
	Mem371[a3_264 + 156:word32] = d0_352
	Mem373[a3_264 + 160:word32] = d0_352
	word32 d0_377 = Mem373[(d0_352 << 0x00000002) + 8:word32]
	branch d0_377 == 0x00000000 l000011F4
// DataOut: d0 d5 a3 a4 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:000012C8 a5:<invalid> a0:000012C8 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000011F0:
	Mem383[a3_264 + 164:word32] = d0_377
// DataOut: d5 a3 a4 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:000012C8 a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000011F4:
	a6_270 = Mem373[a4_268 + -32754:word32]
// DataOut: d5 a3 a4 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:000012C8 a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000011F8:
	a0_269 = Mem253[a3_264 + 58:word32]
// DataOut: d5 a0 a3 a4 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l00001202:
	Mem279[a4_268 + -32718:word32] = a0_269
	Mem281[a4_268 + -32714:word32] = a7_1
	d7 = fn00001354(d5_209, a3_264, a6_270, dwArg00, dwArg04, out a5, out a6_171)
// DataOut: d2 d7 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:0000AB7E a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>

l00001212_thunk_fn0000127C:
	word32 a6_290
	fn0000127C(0, out a6_290)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:0 a2:<invalid> a4:<invalid> a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> d6:<invalid> d7:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>

l00001226:
	word32 a7_173 = a7_1 - 0x00000004
	Mem174[a7_173:word32] = a6_171
	Mem176[a7_173 - 0x00000004:word32] = a5
	Mem178[a7_173 - 0x00000008:word32] = d7
	word32 a6_181 = Mem178[0x00000004:word32]
	call a6_181 + -108 (retsize: 4; depth: 4)
// DataOut: a3
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:<invalid> a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> d6:<invalid> d7:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>

l0000125C:
	branch Mem15[a3_143 + 172:word32] != 0x00000000 l00001268
// DataOut: a3
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:<invalid> a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d7:<invalid> a5:<invalid> a0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> d6:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):a5 -4(fp):<invalid>

l00001262:
	fn00001214(a3_143)
	fn0000126C()
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:<invalid> a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d7:<invalid> a5:<invalid> a0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> d6:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):a5 -4(fp):<invalid>

l00001268:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:<invalid> a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d7:<invalid> a5:<invalid> a0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> d6:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):a5 -4(fp):<invalid>

fn00001000_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:<invalid> a6:<invalid> a1:<invalid> a3:<invalid> d0:<invalid> d7:<invalid> a5:<invalid> a0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> d6:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):a5 -4(fp):<invalid>



void fn00001214(word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3
// LiveOut:
// Trashed: a0
// Preserved: a7
fn00001214_entry:
// DataOut: d0 d5 a3 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001214:
	call a6 + -384 (retsize: 4; depth: 4)
	call a6 + -372 (retsize: 4; depth: 4)
	return
// DataOut: d0 d5 a3 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp

fn00001214_exit:
// DataOut: d0 d5 a3 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp a0:a3 + 92



void fn0000126C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a1
// Preserved: a7
fn0000126C_entry:
// DataOut: d2 d5 d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp

l0000126C:
	call a6 + -132 (retsize: 4; depth: 4)
	call a6 + -378 (retsize: 4; depth: 4)
	return
// DataOut: d2 d5 d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp

fn0000126C_exit:
// DataOut: d2 d5 d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp a1:a2



word32 fn00001278(word32 dwArg04, ptr32 a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a5 a6
// Trashed: CVZN d0 d1 d2 a1 a2 a4 a5 a6 a7
// Preserved: a7
// Stack args: Stack +0004(32)
fn00001278_entry:
// DataOut: d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Stack +0004(32)

l00001278:
// DataOut: d2 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001278_thunk_fn0000127C:
	word32 a6_5
	return fn0000127C(dwArg04, out a6_5)
// DataOut: d5 d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid>

fn00001278_exit:
// DataOut: d5 d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> a6:<invalid>



word32 fn0000127C(word32 d2, ptr32 a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d2
// LiveOut: a5 a6
// Trashed: CVZN d0 d1 a1 a2 a4 a5 a6 a7
// Preserved:
fn0000127C_entry:
// DataOut: d2 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l0000127C:
	word32 a4_0 = 0x0000AB7E
	word32 a7_3 = Mem0[a4_0 + -32758:word32]
	word32 v7_8 = Mem0[a7_3 - 0x00000004:word32]
	word32 v5_5 = Mem0[a7_3 - 0x00000008:word32]
	word32 d1_11 = Mem0[v7_8 + 4:word32]
	branch d1_11 == 0x00000000 l0000129E
// DataOut: d2 d5 d7 a2 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001296:
	word32 a6_30 = Mem0[a4_0 + -32750:word32]
	call a6_30 + -36 (retsize: 4; depth: 4)
// DataOut: d2 d5 d7 a2 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a4:0000AB7E a6:<invalid> a2:<invalid> a5:<invalid> d1:<invalid>

l0000129E:
	word32 a6_15 = Mem0[a4_0 + -32754:word32]
	*a6Out = a6_15
	call a6_15 + -414 (retsize: 4; depth: 4)
	branch v5_5 == 0x00000000 l000012B0
// DataOut: d2 d5 d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a4:0000AB7E a6:<invalid> a2:<invalid> a5:<invalid> d1:<invalid>

l000012AE:
	fn0000126C()
// DataOut: d2 d5 d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a4:0000AB7E a6:<invalid> a2:<invalid> a5:<invalid> d1:<invalid> a1:<invalid> d0:<invalid>

l000012B0:
	call a6_15 + -210 (retsize: 4; depth: 4)
	return v7_8
// DataOut: d5 d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a4:0000AB7E a6:<invalid> a2:<invalid> a5:<invalid> d1:<invalid> a1:<invalid> d0:<invalid>

fn0000127C_exit:
// DataOut: d5 d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a4:0000AB7E a6:<invalid> a2:<invalid> a5:<invalid> d1:<invalid> a1:<invalid> d0:d2



word32 fn000012D0(word32 dwArg04, ptr32 a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a5 a6
// Trashed: CVZNX d0 d1 d2 a1 a2 a3 a4 a5 a6 a7
// Preserved: d2 a2 a3 a7
// Stack args: Stack +0004(32)
fn000012D0_entry:
// DataOut: d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l000012D0:
	word32 a3_11 = 0x00002CD0
	branch 0x00002CD0 == 0x00000000 l00001308
// DataOut: d5 d7 a3
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l000012E2:
	word32 d2_42 = 1
	branch Mem0[a3_11 + 4:word32] == 0x00000000 l000012F6
// DataOut: d2 d5 d7 a3
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:00002CD0 d0:0x00002CD0 -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Stack +0004(32)

l000012EA:
	d2_42 = d2_42 + 0x00000001
	branch Mem0[a3_11 + (d2_42 << 0x00000002):word32] != 0x00000000 l000012EA
// DataOut: d2 d5 d7 a3
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:00002CD0 d0:<invalid> d2:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Stack +0004(32)

l000012F6:
	word32 d2_52 = d2_42 - 0x00000001
	branch d2_52 == 0x00000000 l00001308
// DataOut: d2 d5 d7 a3
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:00002CD0 d0:<invalid> d2:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Stack +0004(32)

l000012FA:
	word32 d0_58 = d2_52 << 0x00000002
	word32 a2_60 = Mem0[a3_11 + d0_58:word32]
	call a2_60 (retsize: 4; depth: 16)
	d2_52 = d2_52 - 0x00000001
	branch d2_52 != 0x00000000 l000012FA
// DataOut: d2 d5 d7 a3
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:00002CD0 d0:<invalid> d2:<invalid> a2:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Stack +0004(32)

l00001308:
	word32 a6_31
	return fn00001278(dwArg04, out a6_31)
// DataOut: d5 d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:00002CD0 d0:<invalid> d2:<invalid> a2:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3

fn000012D0_exit:
// DataOut: d5 d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d0:<invalid> d2:<invalid> a2:<invalid> d1:<invalid> a1:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -16(fp):<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3



word32 fn0000131C(word32 dwArg04, ptr32 a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a5 a6
// Trashed: CVZNX d0 d1 d2 a1 a2 a3 a4 a5 a6 a7
// Preserved: a2 a3 a7
// Stack args: Stack +0004(32)
fn0000131C_entry:
	*a6Out = a6
// DataOut: d5 d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l0000131C:
	branch Mem0[0x00002BB8:word32] != 0x00000000 l0000134E
// DataOut: d5 d7 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00001328:
	word32 a3_33 = Mem0[0x00002CE0:word32]
	Mem36[0x00002BB8:word32] = 1
	branch a3_33 == 0x00000000 l00001346
// DataOut: d5 d7 a3
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Stack +0004(32)

l0000133A:
	word32 a2_57 = Mem36[a3_33 + 4:word32]
	call a2_57 (retsize: 4; depth: 12)
	a3_33 = Mem36[a3_33:word32]
	branch a3_33 != 0x00000000 l0000133A
// DataOut: d5 d7 a3
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a3:<invalid> d0:<invalid> a2:<invalid> -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Stack +0004(32)

l00001346:
	word32 a6_53
	a5 = fn000012D0(dwArg04, out a6_53)
// DataOut: d5 d7 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a3:<invalid> d0:<invalid> a2:<invalid> -8(fp):a2 -4(fp):a3

l0000134E:
	return a5
// DataOut: d5 d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d0:<invalid> a2:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -12(fp):<invalid> -8(fp):a2 -4(fp):a3

fn0000131C_exit:
// DataOut: d5 d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> a3:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -12(fp):<invalid> -8(fp):a2 -4(fp):a3



word32 fn00001354(word32 d5, word32 a3, word32 a6, word32 dwArg04, word32 dwArg08, ptr32 a5Out, ptr32 a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d5 a3 a6
// LiveOut: d7 a5 a6
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: a2 a3 a7
// Stack args: Stack +0004(8)
fn00001354_entry:
// DataOut: d5 a3 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(8)

l00001354:
	word32 a3_55 = 0x00002CC8
	branch 0x00002CC4 == 0x00000000 l00001372
// DataOut: d5 a3 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(8)

l00001366:
	branch Mem0[a3_55:word32] == 0x00000000 l00001372
// DataOut: d5 a3 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a3:00002CC8 d0:0x00002CC4 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Local -0004(32) Stack +0004(8)

l0000136A:
	word32 v11_56 = Mem0[a3_55:word32]
	a3_55 = a3_55 + 0x00000004
	call v11_56 (retsize: 4; depth: 12)
	branch Mem0[a3_55:word32] != 0x00000000 l0000136A
// DataOut: d5 a3 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a3:<invalid> d0:0x00002CC4 a2:<invalid> -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Local -0004(32) Stack +0004(8)

l00001372:
	word32 d7_34
	Mem38[fp - 0x00000014:word32] = fn00001390(d5, a6, out d7_34)
	word32 a6_41
	word32 a5_42
	*a5Out = fn0000131C(dwArg00, out a6_41)
	return d7_34
// DataOut: d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a3:<invalid> d0:0x00002CC4 a2:<invalid> -8(fp):a2 -4(fp):a3

fn00001354_exit:
// DataOut: d7 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d0:<invalid> a2:<invalid> d1:<invalid> a0:<invalid> d2:<invalid> a1:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> d3:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):a2 -4(fp):a3



word32 fn00001390(word32 d5, word32 a6, ptr32 d7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d5 a6
// LiveOut: d0 d7
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: d2 d3 d4 d5 a7
fn00001390_entry:
// DataOut: d5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00001390:
	word32 d4_28 = __swap(0x00000071)
	word32 d2_40 = DPB(0x00000371, (byte) (DPB(__swap(DPB(d4_28 *u 0x0090 *u 0x0090, (word16) (d4_28 *u 0x0090) + (word16) (__swap(0x00000090) *u 0x0071), 0, 16)), 0x0000, 0, 16) + 0x00003F90), 0, 8)
	word32 d2_57
	word32 d3_58
	byte v30_64 = (byte) fn00002AC8(d2_40, 0x00000090, 0x00000090, (word32) (byte) d2_40, out d2_57, out d3_58)
	word32 d1_71 = (word32) (byte) d2_57
	Mem74[fp - 0x00000014:word32] = d1_71
	Mem77[fp - 0x00000018:word32] = d1_71
	word32 d3_65 = DPB(d3_58, v30_64, 0, 8)
	Mem80[fp - 0x0000001C:word32] = (word32) (byte) d3_65
	word32 d2_84
	word32 d3_85
	byte v36_90 = (byte) fn00002A88(d2_57, d3_65, dwArg00, dwArg04, out d2_84, out d3_85)
	word32 d2_97 = DPB(d2_84, (byte) ((word32) (byte) d2_84 << 0x00000005), 0, 8)
	Mem113[fp - 0x00000014:word32] = (word32) (byte) DPB(d3_85, (byte) ((word32) (byte) DPB(d3_85, v36_90, 0, 8) >> (word32) ((byte) d2_97)), 0, 8)
	word32 d0_116 = (word32) (byte) d2_97
	Mem119[fp - 0x00000018:word32] = d0_116
	Mem122[fp - 0x0000001C:word32] = 0x0000142C
	word32 d7_124
	return fn0000143C(d0_116, a6, dwArg00, out d7_124)
// DataOut: d0 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

fn00001390_exit:
// DataOut: d0 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> d1:<invalid> d4:<invalid> d5:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d7:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):d2 -12(fp):d3 -8(fp):d4 -4(fp):d5



word32 fn0000143C(word32 d0, word32 a6, word32 dwArg04, ptr32 d7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0 a6
// LiveOut: d0 d7
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: a7
// Stack args: Stack +0004(32)
fn0000143C_entry:
	*d7Out = d7
// DataOut: d0 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l0000143C:
	return fn00001458(d0, a6, Mem0[0x00002CE8:word32], dwArg04, fp + 8)
// DataOut: d0 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

fn0000143C_exit:
// DataOut: d0 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a0:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):fp + 8



word32 fn00001458(word32 d0, word32 a6, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0 a6
// LiveOut: d0
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn00001458_entry:
// DataOut: d0 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00001458:
	word32 a7_1007 = fp + -112
	word32 d3_1002 = dwArg0C
	word32 a5_147 = dwArg04
	word32 a4_146 = dwArg08
	word32 d6_1004 = 0
	branch Mem0[dwArg08:byte] == 0x00 l00001D9E
// DataOut: d0 d3 d6 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001474:
	branch Mem0[a4_146:byte] - 0x25 != 0x00 l00001D78
// DataOut: d0 d3 d6 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> d7:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000147C:
	Mem232[a7_1007 + 64:word32] = 0x00000000
	Mem234[a7_1007 + 72:word32] = 0x00000000
	Mem238[a7_1007 + 102:word32] = 0x00000000
	word32 d5_1011 = -1
	word32 d4_1003 = 105
	word32 a3_1008 = a7_1007 + 76
	word32 d7_1005 = 0
	word32 a2_1855 = a4_146 + 1
	word32 d2_1345 = Mem238[a7_1007 + 72:word32]
// DataOut: d0 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> d7:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000149A:
	word32 d1_1937 = 0
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000149C:
	word32 a7_264 = a7_1007 - 0x00000004
	Mem266[a7_264:word32] = d0
	d0 = Mem266[a7_264:word32]
	a7_1007 = a7_264 + 0x00000004
	branch (byte) DPB(d0, Mem266[0x00001DB0 + d1_1937:byte], 0, 8) - Mem266[a2_1855:byte] != 0x00 l000014C0
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000014AE:
	Mem2096[a7_264:word32] = d1_1937
	word32 d1_2098 = 1 << d1_1937
	d0 = d1_2098
	a7_1007 = a7_264 + 0x00000004
	d1_1937 = Mem2096[a7_264:word32]
	d2_1345 = d2_1345 | d1_2098
	a2_1855 = a2_1855 + 0x00000001
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:00001DB0 d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000014C0:
	d1_1937 = d1_1937 + 0x00000001
	branch d1_1937 <u 0x00000005 l0000149C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:00001DB0 d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000014CA:
	branch d1_1937 - 0x00000005 <u 0x00000000 l0000149A
	branch d1_1937 - 0x00000005 <u 0x00000000 l0000149A
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:00001DB0 d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000014D2:
	word32 d0_1891
	Mem289[a7_1007 + 72:word32] = d2_1345
	branch Mem289[a2_1855:byte] - 0x2A != 0x00 l00001510
	Mem294[a7_1007 + 72:word32] = d2_1345
	branch Mem294[a2_1855:byte] - 0x2A != 0x00 l00001510
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:00001DB0 d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000014DC:
	word32 d0_2041 = d3_1002 + 0x00000003 >>u 0x00000002 << 0x00000002
	word32 v36_2045 = Mem294[d0_2041:word32]
	Mem2046[a7_1007 + 44:word32] = v36_2045
	word32 a2_2037 = a2_1855 + 0x00000001
	branch v36_2045 >= 0x00000000 l00001508
	word32 d0_2052 = d0_2041 + 0x00000007 >>u 0x00000002
	d3_1002 = (d0_2052 << 0x00000002) + 0x00000004
	word32 v44_2058 = Mem2046[d3_1002 + -4:word32]
	Mem2059[a7_1007 + 44:word32] = v44_2058
	a2_1855 = a2_2037 + 0x00000001
	d0_1891 = d0_2052 << 0x00000002
	branch v44_2058 >= 0x00000000 l00001508
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:00001DB0 d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000014F4:
	Mem2068[a7_1007 + 72:word32] = Mem2059[a7_1007 + 72:word32] | 0x00000004
	Mem2072[a7_1007 + 64:word32] = -Mem2068[a7_1007 + 44:word32]
	Mem2074[a7_1007 + 72:word32] = Mem2072[a7_1007 + 72:word32] | 0x00000004
	d0_1891 = -Mem2074[a7_1007 + 44:word32]
	Mem2079[a7_1007 + 64:word32] = d0_1891
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001508:
	Mem2065[a7_1007 + 64:word32] = Mem2059[a7_1007 + 44:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001510:
	word32 d0_1981 = (word32) Mem294[0x0000275D + (DPB(0x00000001, Mem294[a2_1855:byte], 0, 8) & 0x000000FF):byte]
	d0_1891 = d0_1981 & 0x00000004
	branch (d0_1981 & 0x00000004) == 0x00000000 l0000157C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000152C:
	d2_1345 = Mem294[a7_1007 + 64:word32]
// DataOut: d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001530:
	word32 a7_1994 = a7_1007 - 0x00000004
	Mem1996[a7_1994:word32] = d3_1002
	word32 d1_2001 = __swap(10) *u (word16) d2_1345
	word32 d1_2007 = DPB(__swap(DPB(d1_2001, (word16) d1_2001 + (word16) (__swap(d2_1345) *u 0x000A), 0, 16)), 0x0000, 0, 16)
	word32 d0_2008 = (word16) d2_1345 *u 10 + d1_2007
	a2_1855 = a2_1855 + 0x00000001
	word32 d1_2016 = (int32) (int16) (int16) (int8) DPB(d1_2007, Mem1996[a2_1855:byte], 0, 8)
	word32 d0_2028 = (word32) Mem1996[0x0000275D + (DPB(d0_2008, Mem1996[a2_1855:byte], 0, 8) & 0x000000FF):byte]
	a7_1007 = a7_1994 + 0x00000004
	d3_1002 = Mem1996[a7_1994:word32]
	d1_1937 = d1_2016 - 0x00000030
	d2_1345 = d1_2016 - 0x00000030 + d0_2008
	d0_1891 = d0_2028 & 0x00000004
	branch (d0_2028 & 0x00000004) != 0x00000000 l00001530
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001578:
	Mem2035[a7_1994 + 68:word32] = d2_1345
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000157C:
	branch Mem294[a2_1855:byte] - 0x2E != 0x00 l00001610
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001584:
	a2_1855 = a2_1855 + 0x00000001
	branch Mem294[a2_1855:byte] - 0x2A != 0x00 l000015AA
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000158C:
	d0_1891 = d3_1002 + 0x00000003 >>u 0x00000002 << 0x00000002
	word32 v50_1963 = Mem294[d0_1891:word32]
	Mem1964[a7_1007 + 44:word32] = v50_1963
	a2_1855 = a2_1855 + 0x00000001
	d3_1002 = d0_1891 + 0x00000004
	branch v50_1963 < 0x00000000 l00001610
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000015A4:
	d5_1011 = Mem1964[a7_1007 + 44:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000015AA:
	word32 d0_1903 = (word32) Mem294[0x0000275D + (DPB(d0_1891, Mem294[a2_1855:byte], 0, 8) & 0x000000FF):byte]
	d5_1011 = 0
	d0_1891 = d0_1903 & 0x00000004
	branch (d0_1903 & 0x00000004) == 0x00000000 l00001610
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000015C8:
	word32 a7_1914 = a7_1007 - 0x00000004
	Mem1916[a7_1914:word32] = d2_1345
	word32 d1_1921 = __swap(10) *u (word16) d5_1011
	word32 d1_1927 = DPB(__swap(DPB(d1_1921, (word16) d1_1921 + (word16) (__swap(d5_1011) *u 0x000A), 0, 16)), 0x0000, 0, 16)
	word32 d0_1928 = (word16) d5_1011 *u 10 + d1_1927
	a2_1855 = a2_1855 + 0x00000001
	word32 d1_1936 = (int32) (int16) (int16) (int8) DPB(d1_1927, Mem1916[a2_1855:byte], 0, 8)
	word32 d0_1948 = (word32) Mem1916[0x0000275D + (DPB(d0_1928, Mem1916[a2_1855:byte], 0, 8) & 0x000000FF):byte]
	a7_1007 = a7_1914 + 0x00000004
	d2_1345 = Mem1916[a7_1914:word32]
	d1_1937 = d1_1936 - 0x00000030
	d5_1011 = d1_1936 - 0x00000030 + d0_1928
	d0_1891 = d0_1948 & 0x00000004
	branch (d0_1948 & 0x00000004) != 0x00000000 l000015C8
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001610:
	branch Mem294[a2_1855:byte] - 0x68 == 0x00 l00001634
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001616:
	branch Mem294[a2_1855:byte] - 0x6C == 0x00 l00001634
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000161C:
	branch Mem294[a2_1855:byte] - 0x4C == 0x00 l00001634
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001622:
	branch Mem294[a2_1855:byte] - 0x6A == 0x00 l00001634
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001628:
	branch Mem294[a2_1855:byte] - 0x7A == 0x00 l00001634
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000162E:
	branch Mem294[a2_1855:byte] - 0x74 != 0x00 l0000163A
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001634:
	a2_1855 = a2_1855 + 0x00000001
	d4_1003 = (int32) (int16) (int16) (int8) DPB(0x00000069, Mem294[a2_1855:byte], 0, 8)
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000163A:
	branch d4_1003 - 0x00000068 != 0x00000000 l0000164C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001642:
	branch Mem294[a2_1855:byte] - 0x68 != 0x00 l0000164C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001648:
	d4_1003 = 2
	a2_1855 = a2_1855 + 0x00000001
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000164C:
	branch d4_1003 - 0x0000006C != 0x00000000 l0000165E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001654:
	branch Mem294[a2_1855:byte] - 0x6C != 0x00 l0000165E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000165A:
	d4_1003 = 1
	a2_1855 = a2_1855 + 0x00000001
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000165E:
	branch d4_1003 - 0x0000006A != 0x00000000 l00001668
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001666:
	d4_1003 = 1
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001668:
	branch d4_1003 - 0x0000007A != 0x00000000 l00001672
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001670:
	d4_1003 = 108
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001672:
	branch d4_1003 - 0x00000074 != 0x00000000 l0000167C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000167A:
	d4_1003 = 105
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000167C:
	word32 d1_1018 = DPB(d1_1937 - 0x00000030, Mem294[a2_1855:byte], 0, 8)
	word32 a2_355 = a2_1855 + 0x00000001
	word32 d0_1000 = DPB(d0_1891, (byte) d1_1018, 0, 8)
	branch (byte) d1_1018 - 0x25 == 0x00 l00001B04
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001688:
	branch (byte) d0_1000 - 0x58 == 0x00 l000016D6
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000168E:
	branch (byte) d0_1000 - 0x63 == 0x00 l00001A84
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001696:
	branch (byte) d0_1000 - 0x64 == 0x00 l000016D6
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000169C:
	branch (byte) d0_1000 - 0x69 == 0x00 l000016D6
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000016A2:
	Mem1821[a7_1007 + 44:byte] = (byte) d0_1000
	branch (byte) d0_1000 - 0x6E == 0x00 l00001B16
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000016AE:
	branch (byte) DPB(d0_1891, (byte) DPB(d0_1891, Mem1821[a7_1007 + 44:byte], 0, 8) - 0x6F, 0, 8) - 0x01 <=u 0x00 l000016D6
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000016BC:
	word32 d0_1834 = DPB(d0_1891, Mem1821[a7_1007 + 44:byte], 0, 8)
	branch (byte) d0_1834 - 0x73 == 0x00 l00001AC0
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000016C8:
	branch (byte) d0_1834 - 0x75 == 0x00 l000016D6
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000016CE:
	branch (byte) d0_1834 - 0x78 != 0x00 l00001BAE
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000016D6:
	branch (byte) d1_1018 - 0x70 != 0x00 l000016E8
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000016DC:
	Mem1807[a7_1007 + 72:word32] = Mem294[a7_1007 + 72:word32] | 0x00000001
	d4_1003 = 108
	d1_1018 = 120
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000016E8:
	branch (byte) d1_1018 - 0x64 == 0x00 l000016F6
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000016EE:
	branch (byte) d1_1018 - 0x69 != 0x00 l00001840
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000016F6:
	word32 d0_1570
	branch d4_1003 - 0x00000001 != 0x00000000 l0000171C
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000016FE:
	d0_1570 = d3_1002 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1797[a7_1007 + 52:word32] = Mem294[d0_1570 + 4:word32]
	Mem1799[a7_1007 + 48:word32] = Mem1797[d0_1570:word32]
	d3_1002 = d0_1570 + 0x00000008
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000171C:
	branch d4_1003 - 0x0000006C != 0x00000000 l00001748
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001724:
	word32 d0_1769 = d3_1002 + 0x00000003 >>u 0x00000002 << 0x00000002
	word32 d0_1773 = Mem294[d0_1769:word32]
	Mem1775[a7_1007 + 52:word32] = d0_1773
	word32 a7_1776 = a7_1007 - 0x00000004
	Mem1778[a7_1776:word32] = d1_1018
	Mem1783[a7_1776 + 52:word32] = d0_1773 >> 31
	d3_1002 = d0_1769 + 0x00000004
	d0_1570 = d0_1773 >> 31
	a7_1007 = a7_1776 + 0x00000004
	d1_1018 = Mem1783[a7_1776:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001748:
	word32 d0_1687 = d3_1002 + 0x00000003 >>u 0x00000002 << 0x00000002
	word32 d0_1691 = Mem294[d0_1687:word32]
	Mem1693[a7_1007 + 52:word32] = d0_1691
	word32 a7_1694 = a7_1007 - 0x00000004
	Mem1696[a7_1694:word32] = d1_1018
	Mem1701[a7_1694 + 52:word32] = d0_1691 >> 31
	word32 v213_1702 = Mem1701[a7_1694:word32]
	d3_1002 = d0_1687 + 0x00000004
	d0_1570 = d0_1691 >> 31
	a7_1007 = a7_1694 + 0x00000004
	d1_1018 = v213_1702
	branch d4_1003 - 0x00000068 != 0x00000000 l0000178E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001772:
	word32 d0_1742 = DPB(d0_1691 >> 31, Mem1701[a7_1694 + 58:word16], 0, 16)
	Mem1745[a7_1694:word32] = v213_1702
	word32 d1_1748 = (int32) (int16) DPB(v213_1702, (word16) d0_1742, 0, 16)
	Mem1750[a7_1694 + 56:word32] = d1_1748
	Mem1753[a7_1694 - 0x00000004:word32] = d0_1742
	Mem1758[a7_1694 + 52:word32] = d1_1748 >> 31
	d1_1018 = Mem1758[a7_1694 - 0x00000004:word32]
	a7_1007 = a7_1694 + 0x00000004
	d0_1570 = Mem1758[a7_1694:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000178E:
	branch d4_1003 - 0x00000002 != 0x00000000 l000017B4
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001796:
	word32 d0_1716 = DPB(d0_1570, Mem1701[a7_1007 + 55:byte], 0, 8)
	word32 a7_1717 = a7_1007 - 0x00000004
	Mem1719[a7_1717:word32] = d1_1018
	word32 d1_1723 = (int32) (int16) (int16) (int8) DPB(d1_1018, (byte) d0_1716, 0, 8)
	Mem1725[a7_1717 + 56:word32] = d1_1723
	Mem1728[a7_1717 - 0x00000004:word32] = d0_1716
	Mem1733[a7_1717 + 52:word32] = d1_1723 >> 31
	d1_1018 = Mem1733[a7_1717 - 0x00000004:word32]
	a7_1007 = a7_1717 + 0x00000004
	d0_1570 = Mem1733[a7_1717:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000017B4:
	Mem1575[a7_1007 + 44:byte] = (byte) d1_1018
	word32 a7_1576 = a7_1007 - 0x00000004
	Mem1578[a7_1576:word32] = d0_1570
	Mem1581[a7_1576 - 0x00000004:word32] = d1_1018
	word32 d0_1582 = Mem1581[a7_1576 + 56:word32]
	word32 d1_1583 = Mem1581[a7_1576 + 52:word32]
	Mem1586[a7_1576 - 0x00000008:word32] = d2_1345
	d2_1345 = Mem1586[a7_1576 - 0x00000008:word32]
	d1_1018 = Mem1586[a7_1576 - 0x00000004:word32]
	a7_1007 = a7_1576 + 0x00000004
	branch d1_1583 - (d0_1582 <u 0x00000000) >= 0x00000000 l000017FE
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000017DE:
	Mem1658[a7_1576 + 110:byte] = 0x2D
	d7_1005 = 0x00000001
	d1_1018 = -Mem1658[a7_1576 + 56:word32]
	a7_1007 = Mem1658[a7_1576 + 64:word32]
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000017FE:
	d1_1018 = DPB(d1_1018, Mem1586[a7_1007 + 44:byte], 0, 8)
	branch (Mem1586[a7_1007 + 72:word32] & 16) == 0x00000000 l00001818
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000180A:
	Mem1652[a7_1007 + 106 + d7_1005:byte] = 0x2B
	d7_1005 = d7_1005 + 0x00000001
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001818:
	branch (Mem1586[a7_1007 + 72:word32] & 8) == 0x00000000 l0000182C
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001820:
	Mem1645[a7_1007 + 106 + d7_1005:byte] = 0x20
	d7_1005 = d7_1005 + 0x00000001
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000182C:
	Mem1624[a7_1007 + 60:word32] = Mem1586[a7_1007 + 52:word32]
	Mem1626[a7_1007 + 56:word32] = Mem1624[a7_1007 + 48:word32]
	Mem1628[a7_1007 + 44:byte] = (byte) d1_1018
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001840:
	word32 d0_1358
	branch d4_1003 - 0x00000001 != 0x00000000 l00001864
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001848:
	d0_1358 = d3_1002 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1560[a7_1007 + 60:word32] = Mem294[d0_1358 + 4:word32]
	Mem1562[a7_1007 + 56:word32] = Mem1560[d0_1358:word32]
	d3_1002 = d0_1358 + 0x00000008
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001864:
	branch d4_1003 - 0x0000006C != 0x00000000 l00001886
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000186C:
	d0_1358 = d3_1002 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1545[a7_1007 + 60:word32] = Mem294[d0_1358:word32]
	Mem1546[a7_1007 + 56:word32] = 0x00000000
	d3_1002 = d0_1358 + 0x00000004
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001886:
	d0_1358 = d3_1002 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1530[a7_1007 + 60:word32] = Mem294[d0_1358:word32]
	Mem1531[a7_1007 + 56:word32] = 0x00000000
	d3_1002 = d0_1358 + 0x00000004
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000189E:
	branch d4_1003 - 0x00000068 != 0x00000000 l000018BA
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000018A6:
	d0_1358 = DPB(d0_1358, Mem294[a7_1007 + 62:word16], 0, 16)
	word32 a7_1500 = a7_1007 - 0x00000004
	Mem1502[a7_1500:word32] = d1_1018
	Mem1507[a7_1500 + 64:word32] = (word32) (word16) d0_1358
	Mem1508[a7_1500 + 60:word32] = 0x00000000
	a7_1007 = a7_1500 + 0x00000004
	d1_1018 = Mem1508[a7_1500:word32]
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000018BA:
	branch d4_1003 - 0x00000002 != 0x00000000 l000018D6
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000018C2:
	word32 d0_1484 = DPB(d0_1358, Mem294[a7_1007 + 63:byte], 0, 8)
	word32 a7_1485 = a7_1007 - 0x00000004
	Mem1487[a7_1485:word32] = d1_1018
	Mem1492[a7_1485 + 64:word32] = (word32) (byte) d0_1484
	Mem1493[a7_1485 + 60:word32] = 0x00000000
	a7_1007 = a7_1485 + 0x00000004
	d1_1018 = Mem1493[a7_1485:word32]
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000018D6:
	word32 d0_1373 = Mem294[a7_1007 + 72:word32] & 1
	Mem1375[a7_1007 + 44:byte] = (byte) d1_1018
	branch d0_1373 == 0x00000000 l00001974
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000018E6:
	branch (byte) d1_1018 - 0x6F != 0x00 l00001922
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000018EC:
	branch d5_1011 != 0x00000000 l00001916
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000018F0:
	word32 a7_1459 = a7_1007 - 0x00000004
	Mem1461[a7_1459:word32] = d0_1373
	Mem1464[a7_1459 - 0x00000004:word32] = d1_1018
	word32 d0_1465 = Mem1464[a7_1459 + 64:word32]
	word32 d1_1466 = Mem1464[a7_1459 + 60:word32]
	Mem1469[a7_1459 - 0x00000008:word32] = d2_1345
	d2_1345 = Mem1469[a7_1459 - 0x00000008:word32]
	d1_1018 = Mem1469[a7_1459 - 0x00000004:word32]
	d0_1373 = Mem1469[a7_1459:word32]
	a7_1007 = a7_1459 + 0x00000004
	branch d1_1466 - (d0_1465 <u 0x00000000) == 0x00000000 l00001922
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001916:
	Mem1457[a7_1007 + 106 + d7_1005:byte] = 0x30
	d7_1005 = d7_1005 + 0x00000001
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001922:
	branch (byte) d1_1018 - 0x78 == 0x00 l00001932
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001928:
	Mem1438[a7_1007 + 44:byte] = (byte) d1_1018
	branch (byte) d1_1018 - 0x58 != 0x00 l00001974
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001932:
	Mem1399[a7_1007 + 44:byte] = (byte) d1_1018
	word32 a7_1400 = a7_1007 - 0x00000004
	Mem1402[a7_1400:word32] = d0_1373
	Mem1405[a7_1400 - 0x00000004:word32] = d1_1018
	word32 d0_1406 = Mem1405[a7_1400 + 64:word32]
	word32 d1_1407 = Mem1405[a7_1400 + 60:word32]
	Mem1410[a7_1400 - 0x00000008:word32] = d2_1345
	d1_1018 = Mem1410[a7_1400 - 0x00000004:word32]
	a7_1007 = a7_1400 + 0x00000004
	branch d1_1407 - (d0_1406 <u 0x00000000) == 0x00000000 l00001974
// DataOut: d1 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000195C:
	Mem1428[a7_1400 + 110 + d7_1005:byte] = 0x30
	word32 d7_1426 = d7_1005 + 0x00000001
	Mem1433[a7_1400 + 110 + d7_1426:byte] = (byte) d1_1018
	Mem1435[a7_1400 + 48:byte] = (byte) d1_1018
	d7_1005 = d7_1426 + 0x00000001
// DataOut: d1 d3 d4 d5 d6 d7 a2 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001974:
	word32 d1_1180 = DPB(d1_1018, Mem294[a7_1007 + 44:byte], 0, 8)
	a3_1008 = a7_1007 + 98
	branch (byte) d1_1180 - 0x78 == 0x00 l00001988
// DataOut: d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001982:
	branch (byte) d1_1180 - 0x58 != 0x00 l00001992
// DataOut: d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001988:
	Mem1331[a7_1007 + 44:word32] = 0x00000010
// DataOut: d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001992:
	branch (byte) d1_1180 - 0x6F != 0x00 l000019A2
// DataOut: d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001998:
	Mem1327[a7_1007 + 48:word32] = 0x00000008
// DataOut: d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000019A2:
	Mem1324[a7_1007 + 48:word32] = 0x0000000A
// DataOut: d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000019AA:
	Mem1321[a7_1007 + 44:word32] = Mem294[a7_1007 + 48:word32]
// DataOut: d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000019B0:
	Mem1186[a7_1007 + 108:word32] = Mem294[a7_1007 + 44:word32]
	branch (byte) d1_1180 - 0x58 == 0x00 l000019C2
// DataOut: d3 d4 d5 d6 d7 a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000019BC:
	a6 = 0x00001DB8
// DataOut: d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000019C2:
	a6 = 0x00001DC8
// DataOut: d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000019C6:
	Mem1192[a7_1007 + 44:word32] = a6
	Mem1194[a7_1007 + 124:word32] = d3_1002
	Mem1196[a7_1007 + 68:word32] = d5_1011
	Mem1198[a7_1007 + 48:word32] = d6_1004
	Mem1200[a7_1007 + 98:word32] = d7_1005
	word32 v169_1201 = a7_1007 + 56
	word32 d6_1202 = Mem1200[v169_1201:word32]
	word32 d7_1204 = Mem1200[v169_1201 + 0x00000004:word32]
	word32 d3_1206 = Mem1200[a7_1007 + 102:word32]
	word32 a1_1208 = Mem1200[a7_1007 + 44:word32]
// DataOut: d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000019E8:
	word32 d1_1217 = Mem1200[a7_1007 + 108:word32]
	word32 a7_1222 = a7_1007 - 0x00000004
	Mem1224[a7_1222:word32] = d1_1217 >> 31
	Mem1227[a7_1222 - 0x00000004:word32] = d1_1217
	Mem1230[a7_1222 - 0x00000008:word32] = a1_1208
	Mem1233[a7_1222 - 0x0000000C:word32] = d1_1217
	Mem1235[a7_1222 - 0x00000010:word32] = d1_1217 >> 31
	Mem1237[a7_1222 - 0x00000014:word32] = d7_1204
	Mem1239[a7_1222 - 0x00000018:word32] = d6_1202
	word32 d1_1240
	word32 d0_1241 = fn00002648(d4_1003, d5_1011, d6_1202, a1_1208, dwArg00, dwArg04, dwArg08, dwArg0C, out d1_1240)
	word32 v173_1243 = Mem1239[a7_1222 - 8:word32]
	word32 d1_1248 = Mem1239[a7_1222 - 4:word32]
	word32 d0_1250 = Mem1239[a7_1222:word32]
	a3_1008 = a3_1008 - 0x00000001
	Mem1256[a3_1008:byte] = Mem1239[v173_1243 + d1_1240:byte]
	Mem1259[a7_1222:word32] = d0_1250
	Mem1262[a7_1222 - 0x00000004:word32] = d1_1248
	Mem1265[a7_1222 - 0x00000008:word32] = v173_1243
	Mem1268[a7_1222 - 0x0000000C:word32] = d1_1248
	Mem1270[a7_1222 - 0x00000010:word32] = d0_1250
	Mem1272[a7_1222 - 0x00000014:word32] = d7_1204
	Mem1274[a7_1222 - 0x00000018:word32] = d6_1202
	word32 d1_1275
	word32 d0_1276 = fn000023F8(d0_1241, d1_1240, d6_1202, v173_1243, dwArg00, dwArg04, dwArg08, dwArg0C, out d1_1275)
	d4_1003 = d0_1241
	d5_1011 = d1_1240
	a1_1208 = Mem1274[a7_1222 - 8:word32]
	d6_1202 = d0_1276
	d7_1204 = d1_1275
	a7_1007 = a7_1222 + 0x00000004
	d3_1206 = d3_1206 + 0x00000001
	d0_1000 = d1_1275
	d1_1018 = d0_1276 - (d1_1275 <u 0x00000000)
	branch d1_1018 != 0x00000000 l000019E8
// DataOut: d0 d1 d3 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001A56:
	Mem1298[a7_1222 + 106:word32] = d3_1206
	d7_1005 = Mem1298[a7_1222 + 102:word32]
	d6_1004 = Mem1298[a7_1222 + 52:word32]
	d5_1011 = Mem1298[a7_1222 + 72:word32]
	d3_1002 = Mem1298[a7_1222 + 128:word32]
	branch d5_1011 != 0xFFFFFFFF l00001A78
// DataOut: d0 d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:0 d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001A72:
	d5_1011 = 0
// DataOut: d0 d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:0 d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001A78:
	Mem1309[a7_1222 + 76:word32] = Mem1298[a7_1222 + 76:word32] & 0xFFFFFFFD
// DataOut: d0 d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:0 d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001A84:
	branch d4_1003 - 0x0000006C != 0x00000000 l00001AA0
// DataOut: d1 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001A8C:
	d0_1000 = d3_1002 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1147[a3_1008:byte] = Mem294[d0_1000 + 3:byte]
	d3_1002 = d0_1000 + 0x00000004
// DataOut: d0 d1 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001AA0:
	d0_1000 = d3_1002 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1136[a3_1008:byte] = Mem294[d0_1000 + 3:byte]
	d3_1002 = d0_1000 + 0x00000004
// DataOut: d0 d1 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001AB2:
	Mem1123[a7_1007 + 102:word32] = 0x00000001
	d5_1011 = 0
// DataOut: d0 d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001AC0:
	d0_1000 = d3_1002 + 0x00000003 >>u 0x00000002 << 0x00000002
	a3_1008 = Mem294[d0_1000:word32]
	Mem1040[a7_1007 + 102:word32] = 0x00000000
	d3_1002 = d0_1000 + 0x00000004
	word32 a1_1039 = a3_1008
	branch d5_1011 == 0x00000000 l00001AE2
// DataOut: d0 d1 d3 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001ADC:
	branch d5_1011 - Mem1040[a7_1007 + 102:word32] <=u 0x00000000 l00001AFE
// DataOut: d0 d1 d3 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001AE2:
	branch Mem1040[a3_1008:byte] == 0x00 l00001AFE
// DataOut: d0 d1 d3 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001AE6:
	d0_1000 = Mem1040[a7_1007 + 102:word32]
// DataOut: d0 d1 d3 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001AEA:
	d0_1000 = d0_1000 + 0x00000001
	a1_1039 = a1_1039 + 0x00000001
	branch false l00001AF6
// DataOut: d0 d1 d3 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001AF2:
	branch d5_1011 - d0_1000 <=u 0x00000000 l00001AFA
// DataOut: d0 d1 d3 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001AF6:
	branch Mem1040[a1_1039:byte] != 0x00 l00001AEA
// DataOut: d0 d1 d3 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001AFA:
	Mem1080[a7_1007 + 102:word32] = d0_1000
// DataOut: d0 d1 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001AFE:
	d5_1011 = 0
// DataOut: d0 d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B04:
	Mem1010[a7_1007 + 102:word32] = 0x00000001
	a3_1008 = 0x00001DAC
	d5_1011 = 0
// DataOut: d0 d1 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B16:
	branch d4_1003 - 0x00000001 != 0x00000000 l00001B38
// DataOut: d1 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B1E:
	d0_1000 = d3_1002 + 0x00000003 >>u 0x00000002 << 0x00000002
	word32 a0_980 = Mem294[d0_1000:word32]
	Mem982[a0_980 + 4:word32] = d6_1004
	Mem983[a0_980:word32] = 0x00000000
	d3_1002 = d0_1000 + 0x00000004
// DataOut: d0 d1 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B38:
	branch d4_1003 - 0x0000006C != 0x00000000 l00001B56
// DataOut: d1 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B40:
	d0_1000 = d3_1002 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem970[Mem294[d0_1000:word32]:word32] = d6_1004
	d3_1002 = d0_1000 + 0x00000004
// DataOut: d0 d1 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B56:
	branch d4_1003 - 0x00000068 != 0x00000000 l00001B74
// DataOut: d1 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B5E:
	d0_1000 = d3_1002 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem958[Mem294[d0_1000:word32]:word16] = (word16) d6_1004
	d3_1002 = d0_1000 + 0x00000004
// DataOut: d0 d1 d3 d4 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B74:
	branch d4_1003 - 0x00000002 != 0x00000000 l00001B92
// DataOut: d1 d3 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B7C:
	d0_1000 = d3_1002 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem946[Mem294[d0_1000:word32]:byte] = (byte) d6_1004
	d3_1002 = d0_1000 + 0x00000004
// DataOut: d0 d1 d3 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001B92:
	d0_1000 = d3_1002 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem934[Mem294[d0_1000:word32]:word32] = d6_1004
	d3_1002 = d0_1000 + 0x00000004
// DataOut: d0 d1 d3 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001BA6:
	Mem894[a7_1007 + 64:word32] = 0x00000000
	d5_1011 = 0
// DataOut: d0 d1 d3 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001BAE:
	branch (byte) d1_1018 != 0x00 l00001BB4
// DataOut: d3 d6 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001BB2:
	a2_355 = a2_355 - 0x00000001
// DataOut: d3 d6 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001BB4:
	d0_1000 = a2_355 - a4_146
	Mem856[a7_1007 + 102:word32] = d0_1000
	Mem858[a7_1007 + 64:word32] = 0x00000000
	a3_1008 = a4_146
	d5_1011 = 0
// DataOut: d0 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001BC4:
	branch d5_1011 - Mem294[a7_1007 + 102:word32] >u 0x00000000 l00001BD2
// DataOut: d0 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001BCA:
	Mem825[a7_1007 + 44:word32] = Mem294[a7_1007 + 102:word32]
// DataOut: d0 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001BD2:
	Mem822[a7_1007 + 44:word32] = d5_1011
// DataOut: d0 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001BD6:
	word32 a7_388 = a7_1007 - 0x00000004
	Mem390[a7_388:word32] = d0_1000
	Mem395[a7_388 + 52:word32] = Mem390[a7_388 + 48:word32] + d7_1005
	Mem401[a7_388:word32] = Mem395[a7_388:word32]
	word32 d0_406 = Mem401[a7_388:word32]
	a7_1007 = a7_388 + 0x00000004
	branch Mem401[a7_388 + 52:word32] - Mem401[a7_388 + 68:word32] <u 0x00000000 l00001BFA
// DataOut: d0 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001BF4:
	Mem816[a7_388 + 48:word32] = 0x00000000
// DataOut: d0 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001BFA:
	Mem806[a7_388:word32] = d0_406
	Mem811[a7_388 + 48:word32] = Mem806[a7_388 + 68:word32] - Mem806[a7_388 + 52:word32]
	a7_1007 = a7_388 + 0x00000004
// DataOut: d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C0A:
	Mem413[a7_1007 + 48:word32] = Mem401[a7_1007 + 44:word32]
	d0 = Mem413[a7_1007 + 72:word32] & 2
	branch d0 == 0x00000000 l00001C4C
// DataOut: d0 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C18:
	word32 d2_754 = 0
	branch d7_1005 == 0x00000000 l00001C4C
// DataOut: d0 d2 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C1E:
	word32 a7_766 = a7_1007 - 0x00000004
	Mem768[a7_766:word32] = a5_147
	Mem777[a7_766 - 0x00000004:word32] = (int32) (int16) (int16) (int8) DPB(d0, Mem768[a7_766 + 110 + d2_754:byte], 0, 8)
	word32 d4_780
	word32 d6_782
	word32 a4_783
	d0 = fn00001DD8(a6, dwArg00, dwArg04, out d3_1002, out d4_780, out d5_1011, out d6_782, out a4_783, out a5_147, out a6)
	a7_1007 = a7_766 + 0x00000004
	branch d0 != 0xFFFFFFFF l00001C44
// DataOut: d0 d2 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C3E:
	d0 = d6_782
// DataOut: d0 d2 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C44:
	d2_754 = d2_754 + 0x00000001
	d6_1004 = d6_782 + 0x00000001
	branch d7_1005 - d2_754 >u 0x00000000 l00001C1E
// DataOut: d0 d2 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C4C:
	branch (Mem413[a7_1007 + 72:word32] & 4) != 0x00000000 l00001C9E
// DataOut: d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C54:
	word32 d2_691 = 0
	branch Mem413[a7_1007 + 48:word32] == 0x00000000 l00001C9E
// DataOut: d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C5C:
	word32 d4_696 = Mem413[a7_1007 + 72:word32]
// DataOut: d4 d7 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:0 d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C64:
	word32 a0_721
	word32 a7_712 = a7_1007 - 0x00000004
	Mem714[a7_712:word32] = a5_147
	branch (d4_696 & 2) == 0x00000000 l00001C72
// DataOut: d7 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C6C:
	a0_721 = DPB(a7_712 + -6, 0x0030, 0, 16)
// DataOut: d7 a0 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C72:
	a0_721 = DPB(a7_712 + -6, 0x0020, 0, 16)
// DataOut: d7 a0 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C76:
	Mem724[a7_712 - 0x00000004:word32] = a0_721
	a7_1007 = a7_712 + 0x00000004
	word32 d6_729
	word32 a4_730
	branch fn00001DD8(a6, dwArg00, dwArg04, out d3_1002, out d4_696, out d5_1011, out d6_729, out a4_730, out a5_147, out a6) != 0xFFFFFFFF l00001C8E
// DataOut: d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C88:
	d0 = d6_729
// DataOut: d0 d2 d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C8E:
	d2_691 = d2_691 + 0x00000001
	d6_1004 = d6_729 + 0x00000001
	branch a4_730 - d2_691 >u 0x00000000 l00001C64
// DataOut: d3 d4 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C96:
	Mem746[a7_712 + 52:word32] = a4_730
	Mem748[a7_712 + 76:word32] = d4_696
// DataOut: d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001C9E:
	d0 = Mem413[a7_1007 + 72:word32] & 2
	branch d0 != 0x00000000 l00001CDA
// DataOut: d0 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001CA6:
	word32 d2_645 = 0
	branch d7_1005 == 0x00000000 l00001CDA
// DataOut: d0 d2 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001CAC:
	word32 a7_657 = a7_1007 - 0x00000004
	Mem659[a7_657:word32] = a5_147
	Mem668[a7_657 - 0x00000004:word32] = (int32) (int16) (int16) (int8) DPB(d0, Mem659[a7_657 + 110 + d2_645:byte], 0, 8)
	word32 d4_671
	word32 d6_673
	word32 a4_674
	d0 = fn00001DD8(a6, dwArg00, dwArg04, out d3_1002, out d4_671, out d5_1011, out d6_673, out a4_674, out a5_147, out a6)
	a7_1007 = a7_657 + 0x00000004
	branch d0 != 0xFFFFFFFF l00001CD2
// DataOut: d0 d2 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001CCC:
	d0 = d6_673
// DataOut: d0 d2 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001CD2:
	d2_645 = d2_645 + 0x00000001
	d6_1004 = d6_673 + 0x00000001
	branch d7_1005 - d2_645 >u 0x00000000 l00001CAC
// DataOut: d0 d2 d3 d5 d6 d7 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001CDA:
	word32 d2_474 = Mem413[a7_1007 + 102:word32]
	branch d5_1011 - Mem413[a7_1007 + 102:word32] <=u 0x00000000 l00001D08
// DataOut: d0 d3 d6 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001CE4:
	word32 a7_618 = a7_1007 - 0x00000004
	Mem620[a7_618:word32] = a5_147
	Mem623[a7_618 - 0x00000004:word32] = 0x00000030
	word32 d4_625
	word32 d5_626
	word32 d6_627
	word32 a4_628
	d0 = fn00001DD8(a6, dwArg00, dwArg04, out d3_1002, out d4_625, out d5_626, out d6_627, out a4_628, out a5_147, out a6)
	a7_1007 = a7_618 + 0x00000004
	branch d0 != 0xFFFFFFFF l00001D00
// DataOut: d0 d2 d3 d5 d6 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001CFA:
	d0 = d6_627
// DataOut: d0 d2 d3 d5 d6 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D00:
	d2_474 = d2_474 + 0x00000001
	d6_1004 = d6_627 + 0x00000001
	branch d5_626 - d2_474 >u 0x00000000 l00001CE4
// DataOut: d0 d3 d6 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D08:
	word32 d2_490 = 0
	branch Mem413[a7_1007 + 102:word32] == 0x00000000 l00001D3E
// DataOut: d0 d2 d3 d6 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D10:
// DataOut: d0 d2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:0 d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D14:
	word32 a7_579 = a7_1007 - 0x00000004
	Mem581[a7_579:word32] = a5_147
	Mem589[a7_579 - 0x00000004:word32] = (int32) (int16) (int16) (int8) DPB(d0, Mem581[a3_1008 + d2_490:byte], 0, 8)
	word32 d4_592
	word32 d5_593
	word32 d6_594
	word32 a4_595
	d0 = fn00001DD8(a6, dwArg00, dwArg04, out d3_1002, out d4_592, out d5_593, out d6_594, out a4_595, out a5_147, out a6)
	a7_1007 = a7_579 + 0x00000004
	branch d0 != 0xFFFFFFFF l00001D36
// DataOut: d0 d2 d3 d6 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D32:
	d0 = d6_594
// DataOut: d0 d2 d3 d6 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D36:
	d2_490 = d2_490 + 0x00000001
	d6_1004 = d6_594 + 0x00000001
	branch a4_595 - d2_490 >u 0x00000000 l00001D14
// DataOut: d0 d2 d3 d6 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D3E:
	d0 = Mem413[a7_1007 + 72:word32] & 4
	branch d0 == 0x00000000 l00001D74
// DataOut: d0 d3 d6 a2 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D46:
	word32 d2_532 = 0
	branch Mem413[a7_1007 + 48:word32] == 0x00000000 l00001D74
// DataOut: d0 d3 d6 a2 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D4E:
	word32 a3_537 = Mem413[a7_1007 + 48:word32]
// DataOut: a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:0 d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D52:
	word32 a7_544 = a7_1007 - 0x00000004
	Mem546[a7_544:word32] = a5_147
	Mem549[a7_544 - 0x00000004:word32] = 0x00000020
	word32 d4_551
	word32 d5_552
	word32 d6_553
	word32 a4_554
	d0 = fn00001DD8(a6, dwArg00, dwArg04, out d3_1002, out d4_551, out d5_552, out d6_553, out a4_554, out a5_147, out a6)
	a7_1007 = a7_544 + 0x00000004
	branch d0 != 0xFFFFFFFF l00001D6C
// DataOut: d0 d2 d3 d6 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D68:
	d0 = d6_553
// DataOut: d0 d2 d3 d6 a2 a3 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D6C:
	d2_532 = d2_532 + 0x00000001
	d6_1004 = d6_553 + 0x00000001
	branch a3_537 - d2_532 >u 0x00000000 l00001D52
// DataOut: d0 d3 d6 a2 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D74:
	a4_146 = a2_355
// DataOut: d0 d3 d6 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D78:
	word32 a7_201 = a7_1007 - 0x00000004
	Mem203[a7_201:word32] = a5_147
	Mem211[a7_201 - 0x00000004:word32] = (int32) (int16) (int16) (int8) DPB(d0, Mem203[a4_146:byte], 0, 8)
	word32 d4_215
	word32 d5_216
	word32 d6_217
	d0 = fn00001DD8(a6, dwArg00, dwArg04, out d3_1002, out d4_215, out d5_216, out d6_217, out a4_146, out a5_147, out a6)
	a7_1007 = a7_201 + 0x00000004
	branch d0 != 0xFFFFFFFF l00001D96
// DataOut: d0 d3 d6 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> d7:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D92:
	d0 = d6_217
// DataOut: d0 d3 d6 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> d7:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D96:
	d6_1004 = d6_217 + 0x00000001
// DataOut: d0 d3 d6 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> d7:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D98:
	branch Mem0[a4_146:byte] != 0x00 l00001474
// DataOut: d0 d3 d6 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> d7:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001D9E:
	d0 = d6_1004
// DataOut: d0 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> d7:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00001DA0:
	return d0
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> d7:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

fn00001458_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> d7:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>



word32 fn00001DD8(word32 a6, word32 dwArg04, word32 dwArg08, ptr32 d3Out, ptr32 d4Out, ptr32 d5Out, ptr32 d6Out, ptr32 a4Out, ptr32 a5Out, ptr32 a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a6
// LiveOut: d0 d3 d4 d5 d6 a4 a5 a6
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: d2 a2 a3 a7
// Stack args: Stack +0004(32) Stack +0008(32)
fn00001DD8_entry:
	*d3Out = d3
	*d4Out = d4
	*d5Out = d5
	*d6Out = d6
	*a4Out = a4
	*a6Out = a6
	*a5Out = a5
// DataOut: d3 d4 d5 d6 d7 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00001DD8:
	word32 d1_102
	Mem19[dwArg08 + 24:word32] = Mem0[dwArg08 + 24:word32] | 2
	word32 v13_21 = Mem19[dwArg08 + 20:word32] - 0x00000001
	Mem22[dwArg08 + 20:word32] = v13_21
	branch v13_21 < 0x00000000 l00001E1C
// DataOut: d2 d3 d4 d5 d6 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00001DF4:
	word32 d0_108 = 10
	branch 10 - dwArg04 != 0x00000000 l00001E06
// DataOut: d0 d2 d3 d4 d5 d6 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d2:<invalid> a2:<invalid> a0:<invalid> d0:2 -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00001DFA:
	d0_108 = Mem22[dwArg08 + 24:word32] & 0x00000080
	branch d0_108 != 0x00000000 l00001E1C
// DataOut: d0 d2 d3 d4 d5 d6 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d2:<invalid> a2:<invalid> a0:<invalid> d0:10 -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00001E06:
	word32 a0_91 = Mem22[dwArg08 + 4:word32]
	Mem95[dwArg08 + 4:word32] = a0_91 + 0x00000001
	Mem97[a0_91:byte] = (byte) dwArg04
	d1_102 = (word32) (byte) DPB(d0_108, Mem97[a0_91:byte], 0, 8)
// DataOut: d1 d2 d3 d4 d5 d6 d7 a2 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d2:<invalid> a2:<invalid> a0:<invalid> d0:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00001E1C:
	word32 a5_76
	d1_102 = fn00001E34(a6, dwArg04, dwArg08, out a5_76)
// DataOut: d1 d3 d4 d5 d6 d7 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d2:<invalid> a2:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a3:<invalid> d1:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3

l00001E2A:
	return d1_102
// DataOut: d0 d3 d4 d5 d6 d7 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a0:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> a3:<invalid> d3:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3

fn00001DD8_exit:
// DataOut: d0 d3 d4 d5 d6 d7 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a0:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> a3:<invalid> d3:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3



word32 fn00001E34(word32 a6, word32 dwArg04, word32 dwArg08, ptr32 a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a6
// LiveOut: d0 a5
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: d2 d3 d4 d5 d6 a2 a3 a4 a6 a7
// Stack args: Stack +0004(32)
fn00001E34_entry:
// DataOut: d7 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00001E34:
	word32 d0_124
	word32 a7_132 = fp - 0x00000024
	word32 d5_100 = dwArg04
	word32 a5_34
	word32 a2_102 = fn000023C8(out a5_34)
	branch a2_102 != 0x00000000 l00001E50
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Local -0004(32)

l00001E4A:
	d0_124 = -1
// DataOut: d0 d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E50:
	word32 v18_74 = 64 - (Mem0[a2_102 + 24:word32] & 73)
	branch v18_74 == 0x00000000 l00001E62
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E5C:
	d0_124 = -1
// DataOut: d0 d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E62:
	branch Mem0[a2_102 + 28:word32] != 0x00000000 l00001E80
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E68:
	branch (Mem0[a2_102 + 24:word32] & 4) == 0x00000000 l00001E78
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E70:
	Mem262[a2_102 + 28:word32] = 1
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E78:
	Mem258[a2_102 + 28:word32] = 0x00000400
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E80:
	branch Mem0[a2_102 + 8:word32] != 0x00000000 l00001EC0
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E86:
	word32 d4_225
	branch (Mem0[a2_102 + 24:word32] & 0x00000080) == 0x00000000 l00001E9A
// DataOut: d5 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E96:
	d4_225 = 2
// DataOut: d4 d5 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a1:<invalid> d1:<invalid> d2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E9A:
	d4_225 = 1
// DataOut: d4 d5 d7 a1 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a1:<invalid> d4:2 d1:<invalid> d2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001E9C:
	Mem231[fp - 0x00000028:word32] = d4_225 + Mem0[a2_102 + 28:word32]
	word32 d0_233 = fn00001FF4(dwArg00)
	a7_132 = fp - 0x00000024
	branch d0_233 != 0x00000000 l00001EB6
// DataOut: d5 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a1:<invalid> d4:<invalid> d1:<invalid> d2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001EB0:
	d0_124 = -1
// DataOut: d0 d5 d7 a2 a3 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a1:<invalid> d4:<invalid> a0:<invalid> a3:<invalid> d1:<invalid> d2:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001EB6:
	Mem242[a2_102 + 8:word32] = d0_233 + 1
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a1:<invalid> d4:<invalid> a0:<invalid> a3:<invalid> d1:<invalid> d2:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001EC0:
	branch Mem0[a2_102:word32] == 0x00000000 l00001F1A
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> a3:<invalid> d2:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001EC4:
	word32 d0_161 = Mem0[a2_102 + 24:word32] & 0x00000080
	branch d0_161 == 0x00000000 l00001EF0
// DataOut: d0 d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> a3:<invalid> d2:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001ED0:
	branch 10 - dwArg04 != 0x00000000 l00001EF0
// DataOut: d0 d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> a3:<invalid> d2:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001ED6:
	word32 a0_203 = Mem0[a2_102 + 4:word32]
	Mem207[a2_102 + 4:word32] = a0_203 + 0x00000001
	Mem209[a0_203:byte] = (byte) dwArg04
	Mem212[a7_132 - 0x00000004:word32] = a2_102
	word32 a5_215
	d0_124 = fn00001F48(dwArg00, out a5_215)
// DataOut: d0 d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:10 d6:64 d1:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> a3:<invalid> d2:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

l00001EF0:
	word32 d4_168 = Mem0[a2_102 + 4:word32] - Mem0[a2_102 + 8:word32]
	word32 a6_172 = Mem0[0x00002B90:word32]
	call a6_172 + -48 (retsize: 4; depth: 4)
	branch d4_168 - d0_161 == 0x00000000 l00001F1E
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a1:<invalid> a0:<invalid> a4:<invalid> d1:<invalid> d4:<invalid> a3:<invalid> d2:<invalid> d3:<invalid> a5:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

l00001F0E:
	Mem195[a2_102 + 24:word32] = Mem0[a2_102 + 24:word32] | 16
	d0_124 = -1
// DataOut: d0 d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a0:<invalid> d4:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> d3:<invalid> a1:<invalid> a4:<invalid> a3:<invalid> a5:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

l00001F1A:
	d0_124 = 0
// DataOut: d0 d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a0:<invalid> d4:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> d3:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

l00001F1E:
	word32 a0_107 = a2_102 + 24
	Mem110[a0_107:word32] = Mem0[a0_107:word32] | 2
	word32 a1_111 = a2_102 + 8
	Mem114[Mem110[a1_111:word32]:byte] = (byte) d5_100
	Mem118[a2_102 + 4:word32] = Mem114[a1_111:word32] + 0x00000001
	Mem123[a2_102 + 20:word32] = Mem118[a2_102 + 28:word32] - 0x00000001
	d0_124 = 0
// DataOut: d0 d7 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a0:<invalid> d4:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> d3:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

l00001F42:
	return d0_124
// DataOut: d0 d7 a5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> a0:<invalid> d4:<invalid> d2:<invalid> a6:<invalid> d3:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

fn00001E34_exit:
// DataOut: d0 d7 a5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d5:<invalid> a2:<invalid> d0:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> d6:<invalid> a3:<invalid> a4:<invalid> a6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> a5:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6



word32 fn00001F48(word32 dwArg04, ptr32 a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0 a5
// Trashed: CVZNX d0 d1 d2 d3 d4 a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: d2 d3 d4 a2 a6 a7
fn00001F48_entry:
// DataOut: d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00001F48:
	word32 d0_126
	word32 a5_19
	word32 a2_104 = fn000023C8(out a5_19)
	branch a2_104 != 0x00000000 l00001F5E
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001F5A:
	d0_126 = -1
// DataOut: d0 d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F5E:
	branch Mem0[a2_104 + 28:word32] != 0x00000000 l00001F7C
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F64:
	branch (Mem0[a2_104 + 24:word32] & 4) == 0x00000000 l00001F74
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F6C:
	Mem167[a2_104 + 28:word32] = 1
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F74:
	Mem163[a2_104 + 28:word32] = 0x00000400
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F7C:
	branch Mem0[a2_104 + 8:word32] != 0x00000000 l00001F86
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F82:
	d0_126 = 0
// DataOut: d0 d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F86:
	word32 d0_61 = Mem0[a2_104 + 24:word32] & 2
	branch d0_61 == 0x00000000 l00001FCC
// DataOut: d0 d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F8E:
	branch Mem0[a2_104:word32] == 0x00000000 l00001FBC
// DataOut: d0 d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001F92:
	word32 d4_130 = Mem0[a2_104 + 4:word32] - Mem0[a2_104 + 8:word32]
	word32 a6_134 = Mem0[0x00002B90:word32]
	call a6_134 + -48 (retsize: 4; depth: 4)
	branch d4_130 - d0_61 == 0x00000000 l00001FC0
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001FB0:
	Mem150[a2_104 + 24:word32] = Mem0[a2_104 + 24:word32] | 16
	d0_126 = -1
// DataOut: d0 d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> d4:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> d3:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001FBC:
	d0_126 = 0
// DataOut: d0 d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> d4:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> d3:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001FC0:
	Mem108[a2_104 + 4:word32] = Mem0[a2_104 + 8:word32]
	Mem110[a2_104 + 20:word32] = Mem108[a2_104 + 28:word32]
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> d4:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> d3:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001FCC:
	word32 a0_81 = a2_104 + 24
	Mem84[a0_81:word32] = Mem0[a0_81:word32] & -4
	d0_126 = 0
// DataOut: d0 d5 d7 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> d4:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> d3:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

l00001FD6:
	return d0_126
// DataOut: d0 d5 d7 a5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d4:<invalid> d2:<invalid> a6:<invalid> d3:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

fn00001F48_exit:
// DataOut: d0 d5 d7 a5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d0:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a6:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6



word32 fn00001FF4(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0
// Trashed: CVZNX d0 d1 a0 a1
// Preserved: d2 a7
// Stack args: Stack +0004(32)
fn00001FF4_entry:
// DataOut: d5 d7 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00001FF4:
	word32 d0_20
	branch dwArg04 != 0x00000000 l00002002
// DataOut: d2 d5 d7 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00001FFE:
	d0_20 = 0
// DataOut: d0 d2 d5 d7 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d2:<invalid> -4(fp):d2
// LocalsOut: fp(32)

l00002002:
	branch Mem0[0x00002BC0:word32] != 0x00000000 l00002026
// DataOut: d2 d5 d7 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d2:<invalid> d0:0 -4(fp):d2
// LocalsOut: fp(32)

l0000200A:
	word32 a0_74 = Mem0[0x00002BBC:word32]
	Mem82[0x00000000:word32] = 0x00000000
	Mem90[0x00002BC0:word32] = fn000022E8(dwLoc10, a0_74, a0_74)
// DataOut: d2 d5 d7 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d2:<invalid> d0:0 -4(fp):d2
// LocalsOut: fp(32)

l00002026:
	branch Mem0[0x00002BC0:word32] != 0x00000000 l00002032
// DataOut: d2 d5 d7 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):d2
// LocalsOut: fp(32)

l0000202E:
	d0_20 = 0
// DataOut: d0 d2 d5 d7 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):d2
// LocalsOut: fp(32)

l00002032:
	word32 d0_57 = fn000021C4(Mem0[0x00002BC0:word32], dwArg04 + 4)
	branch d0_57 != 0x00000000 l00002050
// DataOut: d2 d5 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):d2

l0000204C:
	d0_20 = 0
// DataOut: d0 d2 d5 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d2:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):d2

l00002050:
	Mem64[d0_57:word32] = dwArg04
	d0_20 = d0_57 + 4
// DataOut: d0 d5 d7 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d2:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):d2

l00002058:
	return d0_20
// DataOut: d0 d5 d7 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d2:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):d2

fn00001FF4_exit:
// DataOut: d0 d5 d7 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d2 d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):d2



word32 fn000021C4(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0
// Trashed: CVZNX d0 d1 a0 a1
// Preserved: d2 d3 d4 a2 a3 a4 a5 a6 a7
// Stack args: Stack +0004(32) Stack +0008(32)
fn000021C4_entry:
// DataOut: d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l000021C4:
	word32 d0_106
	word32 d2_115 = dwArg08
	word32 a4_164 = dwArg04
	word16 v13_32 = Mem0[Mem0[0x00002B8C:word32] + 20:word16] - 0x0027
	branch v13_32 <u 0x0000 l000021F0
// DataOut: d2 d5 d7 a4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l000021DE:
	word32 a6_284 = Mem0[0x00002B8C:word32]
	d0_106 = dwArg08
	call a6_284 + -708 (retsize: 4; depth: 36)
// DataOut: d0 d2 d5 d7 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000021F0:
	word32 a3_101 = 0x00000000
	branch a4_164 == 0x00000000 l000022E0
// DataOut: d2 d5 d7 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000021F8:
	branch d2_115 == 0x00000000 l000022E0
// DataOut: d2 d5 d7 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:0x00000000 d4:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000021FE:
	word32 v20_112 = d2_115 - Mem0[a4_164 + 20:word32]
	branch v20_112 >=u 0x00000000 l000022B2
// DataOut: d2 d5 d7 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:0x00000000 d4:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002206:
	word32 a5_151 = Mem0[a4_164:word32]
// DataOut: d2 d5 d7 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:0x00000000 d4:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002208:
	branch Mem0[a5_272:word32] == 0x00000000 l0000222A
// DataOut: d2 d5 d7 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l0000220C:
	branch Mem0[a5_272 + 8:byte] == 0x00 l00002226
// DataOut: d2 d5 d7 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002212:
	word32 a6_276 = Mem0[0x00002B8C:word32]
	call a6_276 + -186 (retsize: 4; depth: 36)
	a3_101 = d2_115
	branch d2_115 != 0x00000000 l00002296
// DataOut: d2 d5 d7 a3 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002226:
	word32 a5_272
	a5_151 = Mem0[a5_272:word32]
	a5_272 = a5_151
// DataOut: d2 d5 d7 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l0000222A:
	word32 d3_208 = Mem0[a4_164 + 16:word32] + 40
	word32 a6_211 = Mem0[0x00002B8C:word32]
	call a6_211 + -198 (retsize: 4; depth: 36)
	a3_101 = d3_208
	branch d3_208 == 0x00000000 l000022E0
// DataOut: d2 d3 d5 d7 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002248:
	Mem219[d3_208:word32] = d3_208
	Mem222[d3_208 + 12:byte] = 0x0A
	Mem226[d3_208 + 20:word32] = d3_208 + 40
	Mem228[d3_208 + 24:word32] = d3_208 + 40
	Mem230[Mem228[d3_208 + 20:word32]:word32] = 0x00000000
	word32 a2_231 = Mem230[d3_208 + 20:word32]
	word32 v29_233 = Mem230[a4_164 + 16:word32]
	Mem234[a2_231 + 0x00000004:word32] = v29_233
	word32 v30_236 = Mem234[a2_231 + 0x00000004:word32]
	Mem237[d3_208 + 32:word32] = v30_236
	Mem241[d3_208 + 28:word32] = Mem237[d3_208 + 32:word32] + Mem237[d3_208 + 20:word32]
	word32 a6_243 = Mem241[0x00002B8C:word32]
	call a6_243 + -240 (retsize: 4; depth: 36)
	word32 a6_246 = Mem241[0x00002B8C:word32]
	call a6_246 + -186 (retsize: 4; depth: 36)
	a3_101 = d2_115
// DataOut: d2 d5 d7 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> d3:<invalid> d1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002296:
	branch (Mem0[a4_164 + 12:word32] & 0x00010000) == 0x00000000 l000022E0
// DataOut: d2 d5 d7 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> d3:<invalid> d1:<invalid> a2:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000022A2:
	word32 a2_193 = a3_101
	d2_115 = d2_115 + 0x00000007 >>u 0x00000003
// DataOut: d2 d5 d7 a2 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> d3:<invalid> d1:<invalid> a2:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000022A8:
	Mem199[a2_193:word32] = 0x00000000
	word32 a2_200 = a2_193 + 0x00000004
	Mem201[a2_200:word32] = 0x00000000
	a2_193 = a2_200 + 0x00000004
	d2_115 = d2_115 - 0x00000001
	branch d2_115 != 0x00000000 l000022A8
// DataOut: d2 d5 d7 a2 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> d3:<invalid> d1:<invalid> a2:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000022B0:
// DataOut: d2 d5 d7 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> d3:<invalid> d1:<invalid> a2:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000022B2:
	word32 d3_118 = d2_115 + 16
	word32 a6_121 = Mem0[0x00002B8C:word32]
	call a6_121 + -198 (retsize: 4; depth: 36)
	a3_101 = d3_118
	branch d3_118 == 0x00000000 l000022E0
// DataOut: d3 d5 d7 a3
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> d3:<invalid> d1:<invalid> a2:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000022CC:
	Mem138[d3_118:word32] = d3_118
	word32 a6_141 = Mem138[0x00002B8C:word32]
	call a6_141 + -246 (retsize: 4; depth: 36)
	Mem145[d3_118 + 0x0000000C:word32] = 0x00000000
	a3_101 = d3_118 + 0x00000010
// DataOut: d5 d7 a3
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a2:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000022E0:
	d0_106 = a3_101
// DataOut: d0 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d3:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a2:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000022E2:
	return d0_106
// DataOut: d0 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000020 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d3:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a2:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6

fn000021C4_exit:
// DataOut: d0 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d2 a4:a4 a0:<invalid> a6:a6 d0:<invalid> d3:d3 d4:d4 a2:a2 a3:a3 a5:a5 d1:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6



word32 fn000022E8(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0
// Trashed: CVZNX d0 d1 a0 a1
// Preserved: d2 d3 a2 a6 a7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn000022E8_entry:
// DataOut: d5 d7 a5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l000022E8:
	word32 d0_114
	word32 a0_19 = Mem0[0x00002B8C:word32]
	word32 d3_15 = dwArg08
	word32 a2_17 = dwArg0C
	word16 v9_20 = Mem0[a0_19 + 20:word16] - 0x0027
	branch v9_20 <u 0x0000 l00002316
// DataOut: d3 d5 d7 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00002302:
	word32 a6_113 = Mem0[0x00002B8C:word32]
	d0_114 = dwArg04
	call a6_113 + -696 (retsize: 4; depth: 20)
// DataOut: d0 d3 d5 d7 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d3:<invalid> a2:<invalid> a0:<invalid> -16(fp):d2 -12(fp):d3 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32) Stack +0004(32)

l00002316:
	word32 a1_60 = 0x00000000
	word32 v15_62 = d3_15 - a2_17
	branch v15_62 <u 0x00000000 l00002350
// DataOut: d3 d5 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d3:<invalid> a2:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> -16(fp):d2 -12(fp):d3 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32) Stack +0004(32)

l0000231C:
	word32 d3_81 = d3_15 + 0x00000007
	word32 a6_83 = Mem0[0x00002B8C:word32]
	call a6_83 + -198 (retsize: 4; depth: 20)
	a1_60 = 24
	branch 24 == 0 l00002350
// DataOut: d3 d5 d7 a1 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d3:<invalid> a2:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:0x00000000 -16(fp):d2 -12(fp):d3 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32) Stack +0004(32)

l00002332:
	Mem99[24:word32] = 28
	Mem100[28:word32] = 0x00000000
	Mem102[32:word32] = 24
	Mem105[36:word32] = dwArg04
	Mem109[40:word32] = d3_81 & -8
	Mem111[44:word32] = a2_17
// DataOut: d5 d7 a1 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d3:<invalid> a2:<invalid> a0:<invalid> a6:<invalid> d0:24 d1:0 d2:<invalid> a1:24 -16(fp):d2 -12(fp):d3 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002350:
	d0_114 = a1_60
// DataOut: d0 d5 d7 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d3:<invalid> a2:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> -16(fp):d2 -12(fp):d3 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002352:
	return d0_114
// DataOut: d0 d5 d7 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d3:<invalid> a2:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> -16(fp):d2 -12(fp):d3 -8(fp):a2 -4(fp):a6

fn000022E8_exit:
// DataOut: d0 d5 d7 a5
// DataOut (flags): 
// SymbolicIn: a7:fp d3:d3 a2:a2 a0:<invalid> a6:a6 d0:<invalid> d1:<invalid> d2:d2 a1:<invalid> -16(fp):d2 -12(fp):d3 -8(fp):a2 -4(fp):a6



word32 fn000023C8(ptr32 a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a2 a5
// Trashed: CVZNX d0 d1 d2 a1 a2 a3 a4 a5 a6 a7
// Preserved: a6 a7
fn000023C8_entry:
	*a5Out = a5
// DataOut: d5 d7 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l000023C8:
	word32 a6_6 = Mem0[0x00002B8C:word32]
	call a6_6 + -306 (retsize: 4; depth: 8)
	branch 0 == 0 l000023F2
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l000023E6:
	word32 a6_32
	word32 a5_33
	*a5Out = fn0000131C(0x00000014, out a6_32)
// DataOut: d5 d7 a2 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a6:<invalid> d0:0 d1:0x00001000 -4(fp):a6

l000023F2:
	return a2
// DataOut: d5 d7 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a6:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -8(fp):00000014 -4(fp):a6

fn000023C8_exit:
// DataOut: d5 d7 a2 a5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a6:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -8(fp):00000014 -4(fp):a6



word32 fn000023F8(word32 d4, word32 d5, word32 d6, word32 a1, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d4 d5 d6 a1
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a7
// Preserved: d2 d3 d4 d5 d6 a7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)
fn000023F8_entry:
// DataOut: d4 d5 d6 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l000023F8:
	word32 d1_18
	*d1Out = dwArg08
	word32 d0_120 = dwArg04
	word32 d3_23 = dwArg10
	word32 d2_25 = dwArg0C
	branch dwArg0C != 0x00000000 l0000244E
// DataOut: d0 d1 d2 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00002410:
	branch dwArg04 - dwArg10 >=u 0x00000000 l00002422
// DataOut: d0 d1 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l00002414:
	word32 d1_278
	word32 d2_279
	d0_120 = fn000024FC(dwArg04, dwArg08, dwArg10, dwArg10, d4, d5, d6, dwArg08, a1, out d1_278, out d2_279, out d3_23)
	word32 d1_282
	*d1Out = d0_120
// DataOut: d0 d1 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l00002422:
	branch d3_23 != 0x00000000 l0000242E
// DataOut: d0 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> d4:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l00002426:
	d4 = (int32) (int16) DPB(DPB(0x00000001, (uint16) (1 % (uint16) d3_23), 16, 16), (uint16) (1 /u (uint16) d3_23), 0, 16)
	d3_23 = d4
// DataOut: d0 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> d4:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l0000242E:
	word32 d1_253
	word32 d2_254
	word32 d3_255
	word32 d0_256 = fn000024FC(0, d0_120, d3_23, d3_23, d4, d5, d6, dwArg08, a1, out d1_253, out d2_254, out d3_255)
	word32 d1_261
	fn000024FC(d1_253, dwArg08, d2_254, d3_255, d4, d5, d6, dwArg08, d0_256, out d1_261, out d2_25, out d3_23)
	*d1Out = d1_265
	d0_120 = d0_256
// DataOut: d0 d1 d2 d3 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l0000244E:
	branch d0_120 - d2_25 >=u 0x00000000 l00002458
// DataOut: d0 d1 d2 d3 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> a1:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l00002452:
	d0_120 = 0
// DataOut: d0 d1 d2 d3 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l00002458:
	word32 d4_109 = 24
	word32 d6_100 = __rol(d2_25, 0x00000008)
	branch (byte) d6_100 != 0x00 l00002476
// DataOut: d0 d1 d2 d3 d4 d6 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l00002462:
	d4_109 = 16
	d6_100 = __rol(d6_100, 0x00000008)
	branch (byte) d6_100 != 0x00 l00002476
// DataOut: d0 d1 d2 d3 d4 d6 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:24 a1:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l0000246A:
	d4_109 = 8
	d6_100 = __rol(d6_100, 0x00000008)
	branch (byte) d6_100 != 0x00 l00002476
// DataOut: d0 d1 d2 d3 d4 d6 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:16 a1:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l00002472:
	d4_109 = 0
	d6_100 = DPB(d6_100, (byte) d2_25, 0, 8)
// DataOut: d0 d1 d2 d3 d4 d6 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:8 a1:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l00002476:
	word32 a1_111 = 0x00002BC4
	word32 d4_115 = DPB(0x00000018, (byte) d4_109 + Mem0[a1_111 + DPB(d6_100, (word16) d6_100 & 0x00FF, 0, 16):byte], 0, 8)
	word32 d5_117 = 32 - d4_115
	branch d5_117 != 0x00000000 l00002496
// DataOut: d0 d1 d2 d3 d4 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l0000248A:
	branch d2_25 - d0_120 <u 0x00000000 l00002492
// DataOut: d1 d2 d3 d4 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00002BC4 d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l0000248E:
	branch d3_23 - dwArg08 >u 0x00000000 l00002452
// DataOut: d1 d2 d3 d4 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00002BC4 d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l00002492:
	d0_120 = 1
// DataOut: d0 d1 d2 d3 d4 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00002BC4 d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l00002496:
	word32 d6_133 = dwArg08 << d5_117
	word32 d1_136
	word32 d2_137
	word32 d3_138
	word32 d0_139 = fn000024FC(d0_120 >>u d4_115, d0_120 << d5_117 | dwArg08 >>u d4_115, d2_25 << d5_117 | d3_23 >>u d4_115, d3_23 << d5_117, d4_115, d5_117, d6_133, d6_133, a1_111, out d1_136, out d2_137, out d3_138)
	word32 d5_148 = __swap(d0_139)
	word32 d6_150 = __swap(d3_138)
	word32 d3_149 = d3_138 *u (word16) d5_148
	word32 d2_154 = __swap(d0_139 *u (word16) d3_138)
	word16 v31_155 = (word16) d2_154 + (word16) d3_149
	word32 d4_151 = d0_139 *u (word16) d6_150
	word16 v34_161 = (word16) DPB(d2_154, v31_155, 0, 16) + (word16) d4_151
	word32 d2_167 = __swap(DPB(d2_154, v34_161, 0, 16))
	word32 d5_152 = d5_148 *u (word16) d6_150
	word32 d1_143
	*d1Out = d0_139
	word32 v39_176 = d1_136 - ((__swap(DPB(d3_149, 0x0000, 0, 16)) + __swap(DPB(d4_151, 0x0000, 0, 16))) + DPB(d5_152, (word16) DPB(d5_152, (word16) d5_152 + (v31_155 <u 0x0000), 0, 16) + (v34_161 <u 0x0000), 0, 16))
	branch v39_176 <u 0x00000000 l000024F2
// DataOut: d1 d2 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): Z
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00002BC4 d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l000024EC:
	branch v39_176 != 0x00000000 l000024F4
// DataOut: d1 d2 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:0 d4:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l000024EE:
	branch d6_133 - d2_167 >=u 0x00000000 l000024F4
// DataOut: d1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:0 d4:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l000024F2:
	word32 d1_189
	*d1Out = d0_139 - 0x00000001
// DataOut: d1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:0 d4:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l000024F4:
	d0_120 = 0
// DataOut: d0 d1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

l000024F6:
	return d0_120
// DataOut: d0 d1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

fn000023F8_exit:
// DataOut: d0 d1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> a1:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6



word32 fn000024FC(word32 d0, word32 d1, word32 d2, word32 d3, word32 d4, word32 d5, word32 d6, word32 a0, word32 a1, ptr32 d1Out, ptr32 d2Out, ptr32 d3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0 d1 d2 d3 d4 d5 d6 a0 a1
// LiveOut: d0 d1 d2 d3
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a7
// Preserved: d4 d5 d6 d7 a0 a1 a7
fn000024FC_entry:
	*d2Out = d2
	*d3Out = d3
	*d1Out = d1
// DataOut: d0 d1 d2 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l000024FC:
	word32 d7_12 = d2
	branch d2 == 0x00000000 l00002516
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00002504:
	d6 = d1
	d5 = d0
	branch d0 != 0x00000000 l00002524
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d7:d2 -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000250A:
	branch d1 == 0x00000000 l00002642
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d7:d2 d6:d1 d5:d0 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002510:
	branch d2 - d1 >u 0x00000000 l00002642
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d7:d2 d6:d1 d5:d0 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002516:
	d0 = fn00002AFA(d1, d2, d2, d3, out d1)
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d7:d2 d6:d1 d5:d0 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002524:
	word32 d2_334 = __swap(d2)
	branch (word16) d2_334 != 0x0000 l0000254C
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:d2 d6:d1 d5:d0 d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000252A:
	word32 d0_315 = __swap(d0)
	word32 d1_316 = __swap(d1)
	word32 d0_318 = DPB(d0_315, (word16) d1_316, 0, 16)
	word32 d0_321 = DPB(d0_318, (uint16) (d0_318 % (uint16) d2), 16, 16)
	word32 d0_327 = DPB(d0_321, (word16) __swap(d1_316), 0, 16)
	word32 d0_330 = DPB(d0_327, (uint16) (d0_327 % (uint16) d2), 16, 16)
	d2_334 = DPB(__swap((word32) (word16) DPB(d0_321, (uint16) (d0_318 /u (uint16) d2), 0, 16)), (word16) DPB(d0_330, (uint16) (d0_327 /u (uint16) d2), 0, 16), 0, 16)
	*d2Out = d2_334
	word32 d1_337
	*d1Out = __swap(DPB(d0_330, 0x0000, 0, 16))
	d0 = d2_334
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:d2 d6:d1 d5:d0 d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000254C:
	Mem63[fp - 0x00000010:word32] = a1
	Mem66[fp - 0x00000014:word32] = a0
	Mem69[fp - 0x00000018:word32] = d4
	Mem72[fp - 0x0000001C:word32] = d3
	Mem74[fp - 0x00000020:word32] = d2_334
	Mem76[fp - 38:byte] = 0x00
	word32 d0_100 = 0
	branch d2 < 0x00000000 l00002568
// DataOut: d0 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:d2 d6:d1 d5:d0 d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000255E:
	d6 = d6 * 0x00000002
	d0_100 = (word32) ((word16) d0_100 + 0x0001)
	d5 = d5 * 0x00000002 + (d6 <u 0x00000000)
	d7_12 = d7_12 * 0x00000002
	branch d7_12 > 0x00000000 l0000255E
// DataOut: d0 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:0 d2:<invalid> d3:<invalid> -38(fp):0x00 -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002568:
	Mem93[fp - 0x00000028:word16] = (word16) d0_100
// DataOut: d0 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:0 d2:<invalid> d3:<invalid> -38(fp):0x00 -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000256A:
	word32 d1_117
	word32 d2_112 = __swap(d5)
	word32 d3_113 = __swap(d7_12)
	branch (word16) d2_112 - (word16) d3_113 != 0x0000 l0000257C
// DataOut: d0 d3 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:0 d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002576:
	d1_117 = 0x0000FFFF
// DataOut: d0 d1 d3 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:0 d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000257C:
	d1_117 = __swap(DPB(__swap(DPB(DPB(d5, (uint16) (d5 % (uint16) d3_113), 16, 16), (uint16) (d5 /u (uint16) d3_113), 0, 16)), 0x0000, 0, 16))
// DataOut: d0 d1 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002586:
	word32 d6_121 = __swap(DPB(d6, 0x0000, 0, 16))
// DataOut: d0 d1 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000258C:
	word32 d4_137 = __swap(d5 - __swap(d7_12) *u (word16) d1_117)
	word32 d2_131 = d1_117 *u (word16) d7_12
	d0_100 = DPB(d0_100, (word16) d4_137, 0, 16)
	word32 d4_141 = DPB(d4_137, (word16) d6_121, 0, 16)
	branch (word16) d0_100 != 0x0000 l000025AC
// DataOut: d0 d1 d2 d4 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000025A4:
	branch d2_131 - d4_141 <=u 0x00000000 l000025AC
// DataOut: d0 d1 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000025A8:
	d1_117 = d1_117 - 0x00000001
// DataOut: d0 d1 d5 d6 d7 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000025AC:
	word32 d6_151 = __swap(d1_117)
	word32 d3_157 = __swap(d6_151)
	word32 d4_159 = __swap(d7_12)
	word32 d5_158 = d7_12 *u (word16) d3_157
	word32 d6_163 = __swap(d6_151 *u (word16) d7_12)
	word16 v45_164 = (word16) d6_163 + (word16) d5_158
	word32 d2_160 = d6_151 *u (word16) d4_159
	word16 v47_170 = (word16) DPB(d6_163, v45_164, 0, 16) + (word16) d2_160
	word32 d3_161 = d3_157 *u (word16) d4_159
	d6 = d6 - __swap(DPB(d6_163, v47_170, 0, 16))
	d5 = d5 - ((__swap(DPB(d5_158, 0x0000, 0, 16)) + __swap(DPB(d2_160, 0x0000, 0, 16))) + DPB(d3_161, (word16) DPB(d3_161, (word16) d3_161 + (v45_164 <u 0x0000), 0, 16) + (v47_170 <u 0x0000), 0, 16)) - (d6 <u 0x00000000)
	branch d5 >=u 0x00000000 l00002604
// DataOut: d0 d1 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000025EE:
	d6 = d6 + DPB(__swap(d7_12), 0x0000, 0, 16)
	d1_117 = d1_117 - 0x00000001
	d5 = d5 + (d6 <u 0x00000000) + __swap(DPB(d7_12, 0x0000, 0, 16))
// DataOut: d0 d1 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002604:
	branch Mem93[fp - 38:byte] != 0x00 l00002620
// DataOut: d0 d1 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000260A:
	Mem256[fp - 36:word16] = (word16) d1_117
	word32 d5_258 = __swap(d5)
	word32 d6_259 = __swap(d6)
	Mem267[fp - 38:bool] = true
	d1_117 = 0
	d5 = DPB(d5_258, (word16) d6_259, 0, 16)
	d6 = DPB(d6_259, 0x0000, 0, 16)
// DataOut: d0 d1 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002620:
	d0 = DPB(Mem93[fp - 36:word32], (word16) d1_117, 0, 16)
	word32 d6_215 = __swap(DPB(d6, (word16) d5, 0, 16))
	word32 d5_216 = __swap(d5)
	word16 v59_217 = Mem93[fp - 0x00000028:word16]
	word32 d7_218 = DPB(d7_12, v59_217, 0, 16)
	branch v59_217 == 0x0000 l0000263A
// DataOut: d0 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002630:
	word32 d7_243 = DPB(d7_12, (word16) d7_218 - 0x0001, 0, 16)
// DataOut: d0 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002632:
	d5_216 = d5_216 >>u 0x00000001
	d6_215 = __rcr(d6_215, 0x00000001, cond(d5_216))
	d7_243 = d7_243 - 0x00000001
	branch d7_243 != 0xFFFFFFFF l00002632
// DataOut: d0 d5 d6 d7 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000263A:
	word32 d1_229
	*d1Out = d6_215
	word32 d2_232
	*d2Out = Mem93[fp - 0x00000020:word32]
	word32 d3_234
	*d3Out = Mem93[fp - 0x0000001C:word32]
// DataOut: d0 d1 d2 d3 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002642:
	return d0
// DataOut: d0 d1 d2 d3 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

fn000024FC_exit:
// DataOut: d0 d1 d2 d3 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7



word32 fn00002648(word32 d4, word32 d5, word32 d6, word32 a1, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d4 d5 d6 a1
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a7
// Preserved: d2 d3 d4 d5 d6 d7 a7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)
fn00002648_entry:
// DataOut: d4 d5 d6 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l00002648:
	word32 d1_21
	*d1Out = dwArg08
	word32 d0_102 = dwArg04
	word32 d3_232 = dwArg10
	word32 d2_251 = dwArg0C
	branch dwArg0C != 0x00000000 l0000269A
// DataOut: d0 d1 d2 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00002660:
	branch dwArg04 - dwArg10 >=u 0x00000000 l00002672
// DataOut: d0 d1 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002664:
	word32 d1_266
	word32 d2_267
	fn000024FC(dwArg04, dwArg08, dwArg10, dwArg10, d4, d5, d6, dwArg08, a1, out d1_266, out d2_267, out d3_232)
	d0_102 = 0
// DataOut: d0 d1 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002672:
	branch d3_232 != 0x00000000 l0000267E
// DataOut: d0 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> d4:<invalid> a1:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002676:
	d4 = (int32) (int16) DPB(DPB(0x00000001, (uint16) (1 % (uint16) d3_232), 16, 16), (uint16) (1 /u (uint16) d3_232), 0, 16)
	d3_232 = d4
// DataOut: d0 d3 d4 d5 d6 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> d4:<invalid> a1:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000267E:
	word32 d1_243
	word32 d2_244
	word32 d3_245
	fn000024FC(0, d0_102, d3_232, d3_232, d4, d5, d6, dwArg08, a1, out d1_243, out d2_244, out d3_245)
	fn000024FC(d1_243, dwArg08, d2_244, d3_245, d4, d5, d6, dwArg08, a1, out d1_21, out d2_251, out d3_232)
	d0_102 = 0
// DataOut: d0 d1 d2 d3 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> a1:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000269A:
	branch d0_102 - d2_251 <u 0x00000000 l00002754
// DataOut: d0 d1 d2 d3 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> a1:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000026A0:
	word32 d4_209 = 24
	word32 d6_210 = __rol(d2_251, 0x00000008)
	branch (byte) d6_210 != 0x00 l000026BE
// DataOut: d0 d1 d2 d3 d4 d6 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> a1:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000026AA:
	d4_209 = 16
	d6_210 = __rol(d6_210, 0x00000008)
	branch (byte) d6_210 != 0x00 l000026BE
// DataOut: d0 d1 d2 d3 d4 d6 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:24 d5:<invalid> d7:<invalid> a1:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000026B2:
	d4_209 = 8
	d6_210 = __rol(d6_210, 0x00000008)
	branch (byte) d6_210 != 0x00 l000026BE
// DataOut: d0 d1 d2 d3 d4 d6 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:16 d5:<invalid> d7:<invalid> a1:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000026BA:
	d4_209 = 0
	d6_210 = DPB(d6_210, (byte) d2_251, 0, 8)
// DataOut: d0 d1 d2 d3 d4 d6 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:8 d5:<invalid> d7:<invalid> a1:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000026BE:
	word32 a1_93 = 0x00002BC4
	word32 d4_97 = DPB(0x00000018, (byte) d4_209 + Mem0[a1_93 + DPB(d6_210, (word16) d6_210 & 0x00FF, 0, 16):byte], 0, 8)
	word32 d5_99 = 32 - d4_97
	branch d5_99 != 0x00000000 l000026E0
// DataOut: d0 d1 d2 d3 d4 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> d5:<invalid> d7:<invalid> a1:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000026D2:
	branch d2_251 - d0_102 <u 0x00000000 l000026DA
// DataOut: d0 d1 d2 d3 d4 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00002BC4 d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000026D6:
	branch d3_232 - d1_21 >u 0x00000000 l00002754
// DataOut: d0 d1 d2 d3 d4 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00002BC4 d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000026DA:
	word32 d1_201 = d1_21 - d3_232
	*d1Out = d1_201
	d0_102 = d0_102 - d2_251 - (d1_201 <u 0x00000000)
// DataOut: d0 d1 d2 d3 d4 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00002BC4 d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l000026E0:
	word32 d6_115 = dwArg08 << d5_99
	word32 d1_118
	word32 d2_119
	word32 d3_120
	word32 d0_121 = fn000024FC(d0_102 >>u d4_97, d0_102 << d5_99 | dwArg08 >>u d4_97, d2_251 << d5_99 | d3_232 >>u d4_97, d3_232 << d5_99, d4_97, d5_99, d6_115, d6_115, a1_93, out d1_118, out d2_119, out d3_120)
	word32 d7_130 = __swap(d0_121)
	word32 d6_132 = __swap(d3_120)
	word32 d3_131 = d3_120 *u (word16) d7_130
	word32 d2_136 = __swap(d0_121 *u (word16) d3_120)
	word16 v33_137 = (word16) d2_136 + (word16) d3_131
	word32 d4_133 = d0_121 *u (word16) d6_132
	word16 v35_143 = (word16) DPB(d2_136, v33_137, 0, 16) + (word16) d4_133
	word32 d2_149 = __swap(DPB(d2_136, v35_143, 0, 16))
	word32 d7_134 = d7_130 *u (word16) d6_132
	word32 d3_155 = __swap(DPB(d3_131, 0x0000, 0, 16)) + __swap(DPB(d4_133, 0x0000, 0, 16)) + DPB(d7_134, (word16) DPB(d7_134, (word16) d7_134 + (v33_137 <u 0x0000), 0, 16) + (v35_143 <u 0x0000), 0, 16)
	word32 v40_158 = d1_118 - d2_149
	branch v40_158 <u 0x00000000 l0000273C
// DataOut: d0 d1 d2 d3 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): Z
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00002BC4 d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002736:
	branch v40_158 != 0x00000000 l00002740
// DataOut: d0 d1 d2 d3 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:0 d4:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002738:
	branch d6_115 - d3_155 >=u 0x00000000 l00002740
// DataOut: d0 d1 d2 d3 d5 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:0 d4:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l0000273C:
	d3_155 = d3_155 - d3_120
	d2_149 = d2_149 - d2_119 - (d3_155 <u 0x00000000)
// DataOut: d1 d2 d3 d5 a0 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:0 d4:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002740:
	word32 d6_174 = d6_115 - d3_155
	word32 d1_177 = d1_118 - d2_149 - (d6_174 <u 0x00000000)
	word32 d1_183
	*d1Out = d1_177 << 32 - d5_99 | d6_174 >>u d5_99
	d0_102 = d1_177 >>u d5_99
// DataOut: d0 d1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:0 d4:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

l00002754:
	return d0_102
// DataOut: d0 d1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> d6:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

fn00002648_exit:
// DataOut: d0 d1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> d7:<invalid> a1:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7



word32 fn00002A88(word32 d2, word32 d3, word32 dwArg04, word32 dwArg08, ptr32 d2Out, ptr32 d3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d2 d3
// LiveOut: d0 d2 d3
// Trashed: CVZNX d0 d1 d2 d3 a7
// Preserved: a7
// Stack args: Stack +0004(32) Stack +0008(32)
fn00002A88_entry:
	*d2Out = d2
	*d3Out = d3
// DataOut: d2 d3 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00002A88:
	word32 d1_30
	word32 d0_31 = dwArg04
	word32 d1_44 = dwArg08
	branch dwArg08 < 0x00000000 l00002A9C
// DataOut: d0 d1 d2 d3 a6
// DataOut (flags): 
// SymbolicIn: a7:fp

l00002A92:
	branch dwArg04 < 0x00000000 l00002AA8
// DataOut: d0 d1 d2 d3 a6
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> d1:<invalid>

l00002A96:
	fn00002AFA(dwArg04, dwArg08, d2, d3, out d1_44)
	d0_31 = d1_44
	return d1_44
// DataOut: d0 d1 d2 d3 a6
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> d1:<invalid>

l00002A9C:
	d1_30 = -d1_44
	branch d0_31 < 0x00000000 l00002AB2
// DataOut: d0 d1 d2 d3 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid>

l00002AA2:
	fn00002AFA(d0_31, d1_30, d2, d3, out d1_44)
	d0_31 = d1_44
	return d1_44
// DataOut: d0 d1 d2 d3 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid>

l00002AA8:
	word32 d1_48
	fn00002AFA(-d0_31, d1_44, d2, d3, out d1_48)
	d1_30 = -d1_48
	d0_31 = d1_30
	return d1_30
// DataOut: d0 d1 d2 d3 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid>

l00002AB2:
	word32 d1_34
	fn00002AFA(-d0_31, d1_30, d2, d3, out d1_34)
	return -d1_34
// DataOut: d0 d2 d3 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid>

fn00002A88_exit:
// DataOut: d0 d2 d3 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid>



word32 fn00002AC8(word32 d2, word32 d3, word32 dwArg04, word32 dwArg08, ptr32 d2Out, ptr32 d3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d2 d3
// LiveOut: d0 d2 d3
// Trashed: CVZNX d0 d1 d2 d3 a7
// Preserved: a7
// Stack args: Stack +0004(32) Stack +0008(32)
fn00002AC8_entry:
	*d2Out = d2
	*d3Out = d3
// DataOut: d2 d3 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00002AC8:
	word32 d0_26 = dwArg04
	word32 d1_25 = dwArg08
	branch dwArg04 > 0x00000000 l00002AE8
// DataOut: d0 d1 d2 d3 a6
// DataOut (flags): 
// SymbolicIn: a7:fp

l00002AD2:
	word32 d0_40 = -dwArg04
	branch dwArg08 > 0x00000000 l00002AE0
// DataOut: d0 d1 d2 d3 a6
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> d1:<invalid>

l00002AD8:
	word32 d1_55
	d0_40 = fn00002AFA(d0_40, -dwArg08, d2, d3, out d1_55)
	d1_25 = -d1_55
	return d0_40
// DataOut: d0 d1 d2 d3 a6
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> d1:<invalid>

l00002AE0:
	word32 d1_48
	d0_26 = -fn00002AFA(d0_40, d1_25, d2, d3, out d1_48)
	d1_25 = -d1_48
	return d0_26
// DataOut: d0 d1 d2 d3 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid>

l00002AE8:
	branch d1_25 > 0x00000000 l00002AEA_thunk_fn00002AFA
// DataOut: d0 d1 d2 d3 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid>

l00002AEA_thunk_fn00002AFA:
	word32 d1_38
	return fn00002AFA(d0_26, d1_25, d2, d3, out d1_38)
// DataOut: d0 d2 d3 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid>

l00002AEC:
	word32 d1_34
	return -fn00002AFA(d0_26, -d1_25, d2, d3, out d1_34)
// DataOut: d0 d2 d3 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid>

fn00002AC8_exit:
// DataOut: d0 d2 d3 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid>



word32 fn00002AFA(word32 d0, word32 d1, word32 d2, word32 d3, ptr32 d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0 d1 d2 d3
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1 d2 d3 a7
// Preserved: d2 d3 a7
fn00002AFA_entry:
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00002AFA:
	word32 d1_125 = __swap(d1)
	word16 v10_8 = (word16) d1_125
	word32 a7_163 = fp - 0x00000004
	word32 d2_164 = DPB(d2, v10_8, 0, 16)
	branch v10_8 != 0x0000 l00002B20
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32)

l00002B02:
	word32 d0_141 = __swap(d0)
	word32 d1_142 = __swap(d1_125)
	word16 v13_144 = (word16) d0_141
	word32 d2_145 = DPB(__swap(d2_164), v13_144, 0, 16)
	branch v13_144 == 0x0000 l00002B10
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d1:<invalid> d2:<invalid> -4(fp):d2
// LocalsOut: fp(32) Local -0004(32)

l00002B0C:
	d2_145 = DPB(DPB(d2_145, (uint16) (d2_145 % (uint16) d1_142), 16, 16), (uint16) (d2_145 /u (uint16) d1_142), 0, 16)
	d0_141 = DPB(d0_141, (word16) d2_145, 0, 16)
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d1:<invalid> d2:<invalid> d0:<invalid> -4(fp):d2
// LocalsOut: fp(32) Local -0004(32)

l00002B10:
	word32 d0_150 = __swap(d0_141)
	word32 d2_152 = DPB(d2_145, (word16) d0_150, 0, 16)
	word32 d2_156 = DPB(DPB(d2_152, (uint16) (d2_152 % (uint16) d1_142), 16, 16), (uint16) (d2_152 /u (uint16) d1_142), 0, 16)
	d0 = DPB(d0_150, (word16) d2_156, 0, 16)
	d1_125 = DPB(d1_142, (word16) __swap(d2_156), 0, 16)
	*d1Out = d1_125
	a7_163 = fp
	d2_164 = d2
	return d0
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d1:<invalid> d2:<invalid> d0:<invalid> -4(fp):d2

l00002B20:
	Mem36[a7_163 - 0x00000004:word32] = d3
	word32 d3_127 = 16
	branch (word16) d1_125 - 0x0080 >=u 0x0000 l00002B2E
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d0:<invalid> -4(fp):d2

l00002B2A:
	d1_125 = __rol(d1_125, 0x00000008)
	d3_127 = 0x00000008
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:16 d0:<invalid> -8(fp):d3 -4(fp):d2

l00002B2E:
	branch (word16) d1_125 - 0x0800 >=u 0x0000 l00002B38
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

l00002B34:
	d1_125 = __rol(d1_125, 0x00000004)
	d3_127 = DPB(0x00000010, (word16) d3_127 - 0x0004, 0, 16)
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

l00002B38:
	branch (word16) d1_125 - 0x2000 >=u 0x0000 l00002B42
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

l00002B3E:
	d1_125 = __rol(d1_125, 0x00000002)
	d3_127 = DPB(0x00000010, (word16) d3_127 - 0x0002, 0, 16)
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

l00002B42:
	branch (word16) d1_125 < 0x0000 l00002B4A
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

l00002B46:
	d1_125 = __rol(d1_125, 0x00000001)
	d3_127 = DPB(0x00000010, (word16) d3_127 - 0x0001, 0, 16)
// DataOut: d0 d1 d2 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

l00002B4A:
	word32 d0_65 = d0 >>u d3_127
	word32 d2_68 = DPB(__swap(DPB(d2_164, (word16) d0, 0, 16)), 0x0000, 0, 16) >>u d3_127
	word32 d0_72 = DPB(d0_65, (uint16) (d0_65 % (uint16) d1_125), 16, 16)
	word32 d3_69 = __swap(d3_127)
	word32 d3_114 = DPB(d3_69, (word16) DPB(d0_72, (uint16) (d0_65 /u (uint16) d1_125), 0, 16), 0, 16)
	word32 d1_80 = __swap(d1_125)
	word32 d0_115 = DPB(d0_72, (word16) d2_68, 0, 16) - DPB(d2_68, (word16) d3_114, 0, 16) *u (word16) d1_80
	branch d0_115 >=u 0x00000000 l00002B6C
// DataOut: d0 d1 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

l00002B66:
	d3_114 = DPB(d3_69, (word16) d3_114 - 0x0001, 0, 16)
	d0_115 = d0_115 + d1_80
// DataOut: d0 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): C
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

l00002B6A:
	branch d0_115 >=u 0x00000000 l00002B6A
// DataOut: d0 d3 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6 a7
// DataOut (flags): C
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

l00002B6C:
	word32 d1_105
	*d1Out = __swap(__rol(d0_115, __swap(d3_114)))
	return (word32) (word16) d3_114
// DataOut: d0 d1 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

fn00002AFA_exit:
// DataOut: d0 d1 d4 d5 d6 d7 a0 a1 a2 a3 a4 a5 a6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d2:<invalid> d0:<invalid> d3:<invalid> -8(fp):d3 -4(fp):d2



